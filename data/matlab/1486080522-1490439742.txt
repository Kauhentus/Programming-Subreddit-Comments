Thank you for responding! Yes, I've looked at this page for at least an hour. I might be missing something. Whenever I try to use fimplicit, it says: &gt;Undefined function 'fimplicit' for input arguments of type 'function_handle' It does this even when I use the specific example from that page.
I need to do something with a function handle. I'm trying: h = @(x,y) (x - 3).^2 + (y - 2).^2 - 9^2 fimplicit(h) However, I'm still getting the same error.
idk what to tell you man I just tried it on my machine and it worked perfectly. Make sure you don't have another function or variable on your folder path / workspace called fimplicit. That could be what is causing the error.
Thanks for testing it out for me! Did it plot the circle or do something else when it worked?
Thanks for the advice! I will take a look at the videos you recommend.
When I read the error, I understood that fimplicit requires a function handle as an input and that I had not defined the function I was trying to use as input. I went to the function handle documentation and tried to learn how to properly define a function. I'm still getting the same error, so I suppose that means my function handle still isn't defined correctly? I must have missed something when I was reading the documentation. I really appreciate that you're taking the time to teach me rather than just giving me the answer.
Looks like I have version 2016a, so it seems like that's the problem. Thank you so much!
Read the documentation regarding indexing. 
It would help if you posted your code here or gave a link to the pastepin so we could see what you have and point you in the right direction
If you just need to draw it and not do any simulation then basically what you want is a load of spheres located in a plane. Take a look at the basic graphing functions such as surf, mesh, plot3 (for 3D) and patch. You will need to generate the coordinates for the planets in order to plot them. If you are going for a simple representation of the planets then you should check out the 'sphere' function. I hope this helps. 
 step1 = ones(1,n) for i = 2:2:n step1(i) = i end
I see, the way you framed you question made me think that you know how to program OO but don't know how to do it in Matlab and hence my answer. So, depending on your learning preferences, take u\onegazillion advice or look for something like [this](https://www.codecademy.com/courses/intro-to-object-oriented-programming/0/1) on Google
well, y(-5)=-5 * exp (-L*-5) y(-3)= ... and so on till 10 ?? In this case the loop generate p=a , p=a+h ecc till p=b ... but still i dont get why it's needed ahaha except the fact that otherwise wouldn't work 
Yes, thank you! That should be enough to get me started. Thanks for your help!
+
I always have trouble with textscan as well. The fast way would be to use the Import Data button on the home tab panel. As long as your data format stays the same you can use that to generate a function that will always import this data the way you want.
show us exactly what "going to pot to "looks like. Give us a print out of the error message you're seeing. Also, my guess would be the recorder object is not connecting to the right system audio device try audiodevinfo to see if Matlab is even able to see your audio drivers. you'll want the input driver of course. 
i wouldn't bother with `textscan ` for this problem. just use `readtable ` and import the data as a `table` data type. `my data = readtable('filename', 'delimiter', ';')` since this is a homework question I'll leave it as an exercise to figure out how to access the elements of the table. `&gt;&gt; doc table`
Why? Just write a function this one sits inside that looks over all the files in a folder and imports what you need. 
The computer does what you tell it to do. If you say that X = Y, thats true in that instance. If you change one of them the next line, it's not true anymore. X = 2; Y = X; X = 1; disp(Y); this is gonna show you that Y == 1
`readable ` reads in the entire file and then **all** the tables elements are available by indexing. what i've suggested is the convenience of `readtable` vs. the performance of `textscan`
The thing you are asking is very basic. But that's OK, everyone is new sometimes. Still, I think you need to learn some basic programming. Maybe checkout r/programming and see if they have a beginners guide? Programs do things in order. They start at the top and go down. Your VSML isn't dependent on the radius. As soon as you left the "vL=4/3pi(rL(2)3 -rL(1)3);" line, the connection between vL and rL was lost. The computer doesn't remember that they had a relationship. If you change one later, it wont affect the other. 
[removed]
[removed]
Not what you asked, but when you do your conversions, you're overcomplicating things. Try "rS=rMfeet/3.28;" That will do the exact same thing. When dividing an array by a scalar, MATLAB divides each element of the array by the scalar.
A floating point number is stored in scientific notation, with base 2. That is, 1.x * 2^y , where x is the mantissa, and y is the exponent. Since the mantissa is stored in base 2 (i.e. only 0 and 1s), we know that the number before the decimal place has to be a 1 for any nonzero number. So the leading 1 is implied. You need to decide what values of x and y will result in the smallest possible number in this context. Edit: it may also be useful to skim the wiki article on single precision floating point format. I'll let you increase your google foo by not supplying the link.
Oh ok. I should be able to get to the answer in that case. Thank you for the help. 
Thanks, Yes it is for robot. I found that the problem is the distance.
[removed]
Code: N = 20; conn = [[1:N-1;2:N] [N+1:2*N-2;N+2:2*N-1] [1:N-1;N+1:2*N-1] [N+1:2*N-1;2:N]]; conn = [conn (2*N-1)+[[1:N-1;2:N] [N+1:2*N-2;N+2:2*N-1] [1:N-1;N+1:2*N-1] [N+1:2*N-1;2:N]]]; conn = [conn [[1:N N+1:2*N-1];(2*N-1)+[1:N N+1:2*N-1]]]; conn = [conn [1:N-1;3*N-1+(1:N-1)] [2:N;2*N:3*N-2]]; %[2*N:3*N-2;N+1:2*N-1] x = [0:N-1 (0:N-2)+0.5; 0*(0:N-1) 1+(0:N-2)*0]; %meters x = [[x;x(1,:)*0] [x;x(1,:)*0+2]]; x = [x(1,:);x(3,:);-x(2,:)]; %swith y and z dir subplot(2,1,1) for c = conn xe = x(:,c); plot3(xe(1,:),xe(2,:),xe(3,:),'k-') hold on end W = zeros(1,length(x)); L = W*0; %Lateral Weights (For Wind) for i = 1:length(x) W(i) = 0; L(i) = 0; [~,n] =find(conn==i); for c = conn(:,n) xe = x(:,c); W(i) = W(i) + 0.5*norm(xe(:,2) - xe(:,1)); L(i) = L(i) + 0.5*norm(cross((xe(:,2) - xe(:,1)),[0 1 0])); end end axis equal E = 5.7*10^9; %5.7GPa Youngs Modulus carbon fiber dia = 0.2;%mm == 10mm radius A = pi*(dia/2)^2; %cross section area ro = 1.6e3; %kg/m^3 K = zeros(length(x)*3); %stiffness Matrix f = zeros(length(x)*3,1); %forces Ke2 = E * A * [1, -1; -1, 1]; for c = conn xe = x(:,c); dx = xe(:,2) - xe(:,1); Re = [dx', 0, 0, 0; 0, 0, 0, dx'] / norm(dx); sctr(1:3:6) = 3*c-2; sctr(2:3:6) = 3*c-1; sctr(3:3:6) = 3*c; K(sctr,sctr) = K(sctr,sctr) + Re' * Ke2 / norm(dx) * Re; end all_nodes = 1:length(x); vs = 6; %m/s crosswindspeed Force = -400*9.8*exp(-100*(x(1,all_nodes)-N/2).^2); %source function force f(3*all_nodes) = Force-W(all_nodes)*ro*A; f(3*all_nodes-1) = 0.5*1.225*vs^2*dia*L(all_nodes); %fixing Degrees of freedom fixed = [find(x(1,:)==0) find(x(1,:)==0.5) find(x(1,:)==N-1.5) find(x(1,:)==(N-1))]; fixed_dof = [3*fixed-2 3*fixed-1 3*fixed]; K(fixed_dof,:) = 0; K(fixed_dof,fixed_dof) = eye(length(fixed_dof)); f(fixed_dof) = 0; plot3(x(1,fixed),x(2,fixed),x(3,fixed),'ko')%indicate fixed Locations quiver3(x(1,all_nodes),x(2,all_nodes),x(3,all_nodes)... ,f(3*all_nodes-2)',0*f(3*all_nodes-1)',f(3*all_nodes)',0.5,'color','red') quiver3(x(1,all_nodes),x(2,all_nodes),x(3,all_nodes)... ,0*f(3*all_nodes-2)',f(3*all_nodes-1)',0*f(3*all_nodes)',0.5,'color','blue') [X,Y] = meshgrid(-1:1:N,-1:1:3); Z = -sign(X)+sign(X-N+1); Z(Z==-1)=0; surf(X,Y,Z,abs(gradient(Z))); alpha 0.5; camproj('perspective'); view([0 20]) title('Truss Structure and Force Visualization - Red = Gravity &amp; Blue = Wind'); hold off % d = K\f; %solve xn = x + [d(1:3:end), d(2:3:end), d(3:3:end)]'; strain = conn(1,:)*0; %axial strain matrix for i = 1:length(conn) c = conn(:,i); xe = x(:,c); le = norm(xe(:,2) - xe(:,1)); %initial element length xe = xn(:,c); ln = norm(xe(:,2) - xe(:,1)); %length new strain(i) = (ln-le)/le; % Stress mpa = change in length/orig length * young's mod/1e6 if strain(i) &lt; -pi^2*E*pi/4*(dia/2)^4/le^2/A/E fprintf('Connection %i-%i will Buckle\n',c); elseif strain(i) &gt; 500e6/E fprintf('Connection %i-%i will Fail\n',c); end; end ma = max(strain); mi = min(strain); cmap = colormap(parula(1024)); xx = linspace(0,1,1024); subplot(2,1,2); AF = .025/ma; % Deformation amplication Factor xn = x + AF*[d(1:3:end), d(2:3:end), d(3:3:end)]'; for i = 1:length(conn) c = conn(:,i); xe = xn(:,c); se = (strain(i)-mi)/(ma-mi); % fraction of colored value where 0 is min and 1 is max plot3(xe(1,:),xe(2,:),xe(3,:),'.-','markersize',15,'MarkerEdgeColor','black',... 'linewidth',2,'Color', interp1(xx, cmap, se)); hold on end hold off caxis([mi ma]); h = colorbar; ylabel(h, 'Axial Strain') grid minor surface(X,Y,Z); alpha 0.5; camproj('perspective'); view([-13 11]) axis([0 N-1 -.1 2.1 -2.1 .1]); title('Deformation (Exaggerated)'); axis equal %U/ansariddle
But where do i click? 
Thanks for your advise, im not sure how to do that though, sorry. I will try explain it a little better as i've just read through it again and it was a little confusing. Basically i have a 3 x 33 (rows to columns) matrix that is defined as A. A = [A11 A12 A16; A12 A22 A26; A16 A26 A66] each one of the A values in the matrix is an array of 11 values. I need to split this matrix, i have managed to do this through the lengthy process of defining seperate matrix's. A0 = [A11(1,1) A12(1,1) A16(1,1); A12(1,1) A22(1,1) A26(1,1); A16(1,1) A26(1,1) A66(1,1)] A1 = [A11(1,2) A12(1,2) A16(1,2); A12(1,2) A22(1,2) A26(1,2); A16(1,2) A26(1,2) A66(1,2)] A2 = [A11(1,3) A12(1,3) A16(1,3); A12(1,3) A22(1,3) A26(1,3); A16(1,3) A26(1,3) A66(1,3)] A3 = [A11(1,4) A12(1,4) A16(1,4); A12(1,4) A22(1,4) A26(1,4); A16(1,4) A26(1,4) A66(1,4)] A4 = [A11(1,5) A12(1,5) A16(1,5); A12(1,5) A22(1,5) A26(1,5); A16(1,5) A26(1,5) A66(1,5)] A5 = [A11(1,6) A12(1,6) A16(1,6); A12(1,6) A22(1,6) A26(1,6); A16(1,6) A26(1,6) A66(1,6)] A6 = [A11(1,7) A12(1,7) A16(1,7); A12(1,7) A22(1,7) A26(1,7); A16(1,7) A26(1,7) A66(1,7)] A7 = [A11(1,8) A12(1,8) A16(1,8); A12(1,8) A22(1,8) A26(1,8); A16(1,8) A26(1,8) A66(1,8)] A8 = [A11(1,9) A12(1,9) A16(1,9); A12(1,9) A22(1,9) A26(1,9); A16(1,9) A26(1,9) A66(1,9)] A9 = [A11(1,10) A12(1,10) A16(1,2); A12(1,10) A22(1,10) A26(1,10); A16(1,10) A26(1,10) A66(1,10)] A10 = [A11(1,11) A12(1,11) A16(1,2); A12(1,11) A22(1,11) A26(1,11); A16(1,11) A26(1,11) A66(1,11)] However this is long winded and can be condensed as such A0 = A(:,[1 12 23]) A1 = A(:,[2 13 24]) A2 = A(:,[3 14 25]) A3 = A(:,[4 15 26]) A4 = A(:,[5 16 27]) A5 = A(:,[6 17 28]) A6 = A(:,[7 18 29]) A7 = A(:,[8 19 30]) A8 = A(:,[9 20 31]) A9 = A(:,[10 21 32]) A10 = A(:,[11 22 33]) This is still too long i think and there must be an easier way to represent this. I had the idea of creating something along the lines of this Ad = A(:,[a b c]) and then having an if or a while statement go through the iterations whilst saving the matrix's but i cant implement this idea. some of these attempts are still in the pastebin that i posted. I hope this clears things up and lets you get a better understanding of what im trying to do here. I hope this formats correct never tried to post code before :/ Yeah can't get this to format into code, tried putting 4 spaces before the line of text but it doesn't change anything. 
Thank you so much for your help :) its working perfectly now thanks to you
For a start you don't need the for loop. Also don't use i to index, that's reserved for imaginary numbers. You can just use the logical a = r &gt; 0.1; r = r .* a; Now your velocity data and quiver ignores r and theta; why.?
The problem is that there are many ways to do this. Do you make one "place" from 0m to 100m, or from 50m to 150m? Is there a way in which one of these is "better" than the other? Are the points more dense around "places"?
unfortunately i have to use that for loop for my assignment. if i replace x and y with xp=r*sin(theta) and yp=r*cos(theta) in my quiver function, i get http://imgur.com/a/CTRoH
It's really simple. It just means that you pass an array of some values to the function and get the output for these samples. For example you have an input array: x = [0, 1/2 * pi, pi, 3 / 2 * pi, 2 * pi]; You can pass this array to a function: y = cos(x); The output vector is what you have described as "the output of the function is an array of samples". Allmost every function and operation in Matlab supports array input so you don't have to care about implementation. Just don't mix up the elementwise operators (.* and ./) with the normal operators (* and /). In your homework the input samples are spaced by 0.01. You can get this input array as follows: number_of_samples = (upperbound - lowerbound) / 0.01 + 1; x = linspace(lowerbound, upperbound, number_of_samples); and then feed the input x to your function firstDeriv() to get the ouput.
thanks, i understand ur reasoning. i tried playing around with the radius and step size but it didn't really change the main shape of the plot. i just need to find a way to exclude the points outside the circle
The word array means essentially the same thing in C and Matlab. Samples are probably something you talked about in class - values taken by a continuous function at discrete points in time. 
Thank you! This is exactly what I was looking for. Also, is the "linspace" different from just doing something like "x=lower:number_of_samples:upper"?
Logical indexing may also help: vector_cut=vector(vector &gt;= 2.5 &amp; vector &lt;= 4.5) [Logical Indexing](https://de.mathworks.com/help/matlab/math/matrix-indexing.html?refresh=true#bq7egb6-1)
Fuck you 
Read the sticky, try again following the guidelines, and you'll actually get help. 
As you already discovered, it's possible to test both conditions in the same expression (it would be weird otherwise, wouldn't it?). Your new attempt looks better. The first matrix is a 4x2 matrix. The first condition checks (2&lt;4)=&gt;TRUE. The second checks 4&lt;3=&gt;FALSE. TRUE &amp;&amp; FALSE =&gt; FALSE. Do you see the problem?
Yeah I get it I think, I want it to give TRUE in the case where it doesn't do what I want in order for the loop to restart, right? I tried with and() rather than &amp;&amp;, but it seems like it acts the same. I suppose I want to make it so that if only one of the arguments give FALSE it still repeats the loop, that's why I originally made it with two separate loops, or am I banboozling myself?
You are exactly right! '&amp;&amp;' and 'and()' is the same thing. They return TRUE if **both** inputs are TRUE ("if X is true **and** Y is true). You want to return TRUE if **either** input are true (if X is true **or** Y is true). So you need to use 'or()' (or '||').
* click on point * right click * Export Data to Workspace... * name it something * your_line = name.Target (with a bunch of properties) * your_line_XData = name.Target.XData * your_line_YData = name.Target.YData 
https://fr.mathworks.com/help/matlab/ref/datacursormode.html 2nd Exemple shows how to do it =) 
Thank you so much! Is there anything like on /r/excel with "Solution Verified' for this subreddit? If not, consider this reply as a token of my appreciation! :D
That depends on the kind of work. I'm a very good modeling and sim person, and I'm very good at writing efficient matlab code, and I'm available for easy consulting/freelance and I'm cheap too. However, I won't help you with your homework.
$350/hour plus benefits and 5 weeks paid leave each year. 
From what I see, the problem is that the variable 'a' is not declared. On line 7, you ask Matlab to add 1 to a variable that doesn't exist yet. You should declare that variable before the for loops by giving it some value. For example you could give it the value 0 : a = 0; 
Can you edit your post to include your code? No one can help you if they can't see what you are trying to do.
Well read the error, what does that tell you? "Index exceeds matrix dimensions" well, if you break it down, you get that your index, which is the location of the matrix you are trying to access, is greater than the dimensions of the matrix. So if I had a 3x3 matrix, and I asked matlab for matrix(4,4) that index is outside of the bounds and will give you that error. See if you can troubleshoot your code now. A big part of learning to program is troubleshooting and debugging your code. It can be helpful to use the break points (click the dashed line next to the number of a line of code to set a break point, it will pop up as a red circle) especially when working through loops so you can see how your variables are changing with each iteration, and you can see exactly when the code breaks. 
I have posted the code
If that's all you're after look into patch()
I don't think that answers my question. What I'm looking to do is display the colour that the matrix represents. If the matrix is [1 0 0] I want to see a figure containing a big red square, if the matrix is [0.5 0 0.5], I want to see a purple square.
The easiest method would be to open a figure and set the background (as described in the link).
Looking back at your code, I realize my answer was dumb. 'a' shouldn't have to be declared. Bit tired here... Glad it helped though. The problem I see is that you treat 'PavlovianData' as a 3D array on line 10, when it shouldn't. I'm not sure of what you try to acheive with your code, but I think the function 'find' might be of help; you should look it up. 
Patch is perfect, thanks. Got it working now!
So the other commenter talked about it. In MATLAB if you want to do elementwise operations you have to use the ".*" Or "./" Operators. So the dot is not attached to the t variable, rather it is part of the * or / does that make sense? I would recommend that you go to the mathworks website and read the documentation page about matrices in MATLAB and the operations that you can do on them.
what is the the answer it returns and what are you expecting it to be? more information please. hopefully you already looked at the documentation for `vpasolve` good quote from docs, &gt; vpasolve returns all solutions only for polynomial equations. For nonpolynomial equations, there is no general method of finding all solutions. &gt; i'm rusty in first year math, but that `exponential` and `cos` look very non polynomial to me. 
this might be incorrect depending on what op's looking for. that answer would give op a discontinuous set, and it sounded like he wanted continuous one. 
Yes indeed, if values inside the subset surpass the boundary values they are cut out aswell. But as you said, it depends on the problem and what op's looking for
Why are you using symbolic math when numerical calculations would be just fine? 
We had a professor named K. Kinney who was notorious for throwing a K coefficient on any formula that wasn't producing the correct magnitude but all other characteristics were correct. We called it a "Kinney factor." As for your problem, it looks like you need a Kinney factor of 10.
If you want a (way) better looking, (way) more powerful equivalent to gscatter and plotmatrix, you should try the [gramm](https://github.com/piermorel/gramm) toolbox... It was designed to work similarly to ggplot2 in R.
So I have 20 columns of data I'm trying to get it to go through. IT goes through the first one fine, but then gives me that "index exceeds matrix dimensions" error on the second column. The if statement seems to work fine the first go around.
\u\FrickinLazerBeams I think we'll be fighting this battle til the day we die. [fzero](https://www.mathworks.com/help/matlab/ref/fzero.html) will work perfectly for this, probably considerably faster as well. 
I haven't controlled a relay directly, but I have had success controlling a pololu maestro board in matlab and it was very straight forward. Used it to control a micro hydrauljc pump and servos for micro hydraulic valves. I would look at pololu if I was you, cheep boards that can be connected together and interface with matlab easily. 
Check if NI has plugins for Matlab or instructions. 
Instead of pointing out every flaw here, I should just advise you to read your own code, line by line, and consider what exactly each line is going to do and whether it makes sense. 
Well, I found out in my case the force layout is used. A concern of mine is whether the axes values hold any meaning and can therefore can be labeled, or it is better to omit axes and their values.
*patient is just the list of all subjects in the data - all the variables are the same length, so I could have used a different one. I just needed an index of the total number of rows, so that the whole thing repeats this number of times. *lc is the name of the variable "Z" that I want to return each time I loop, so every time the length between row X and row X+1 is less than 100, the X+1th value from variable lc is returned. To put it another way: I want to have a list of the values of lc for each time there is less than 100 between every pair of rows in the dataset. *Only one value is displayed, non-repeating, and it's the value of lc(3) or lc(4). Does this help? Thank you I really appreciate it.
Amazon.ca! A fellow Canadian then? And that will work. It will take any microcontroller read, which means a pololu can control it as well, or an Arduino, etc. That should do the trick just fine. There is lots of info online on how to control a serial feed to a comm port using matlab, which can then control your relay controller. It is very simple at the base level. I had a code written while working on my project that was ~15 lines long that could take joystick input, convert to serial, send to my microcontroller, and move my servo. If you have any other questions let me know! 
There is a shitload of Matlab resources online for free and I bet many of them covers the same stuff as the paid courses. Even the Matlab textbooks cost a fraction compared to those courses. And from my experience, Matlab is not that great for data analytics/visualisation. Pandas/SciPy or R are much more suitable for the task as well as more popular in the industry. Just my opinion though.
I don't think there is any reason you should have to make it symbolic at all. Just let `C` be the parameter which is allowed to change, and make your cost function be the determinant of the matrix. Something like: First, make a function which returns the determinant with 'c' going somewhere: function det_val = det_with_c(c) A = [1, 2; c, 4]; det_val = det(A); Then, use fzero and that function: c = fzero(@(c) det_with_c(c), c0); where `c0` is your initial guess for c. 
It just spreads the work out on multiple std::threads provided there is sufficient work to do. For anything smaller than ~4million elements to interpolate I found that single threaded performed better than parallel. I thought this was kind of surprising that the overhead was that high.. maybe there is some additional constraint? Edit: upon checking on a different machine (MacBook), I found that multithreading makes a positive impact at a much more reasonable 256^2 elements. Maybe something funny is going on with the flavor of Ubuntu on my workstation
How does this compare with griddedInterpolant in terms of speed?
It could work if the distances are constant. But a fire far away might have the same maximum pixel value as a person close. If you want to get fancy, computer vision is an interesting field right now, and you could probably get good results with some machine-learning magic (provided that you have the time and the training data).
Hello, I am one of the authors of [SPLINTER](https://github.com/bgrimstad/splinter), which is also a library for multivariate interpolation. We think it is detrimental to the end user experience that there are more than one library with the same name, especially when those libraries do the same thing. It makes searching for errors or examples harder than it should be, for example. Maybe you could consider changing the name of your library?
Agreed. I have amended the name to [splinterp](https://github.com/apryor6/splinterp). Extra letters + the capitalization difference is hopefully clear enough
Thank you. I suppose that should be enough :-)
Correct. As long as your data is sampled with uniform spacing you can interpolate any point in between. You'll just need to convert your query points into a coordinate system where each data element is located at an integer index. For example if your samples are 0.2 units apart and start at x=0 then to interpolate the point at x=0.3 it should correspond to x=2.5 with the MEX codes or x=1.5 if you call it from C++
Ok thanks, first testing looks good. Im running splinterp3 with a 33x33x33 query size so I'm seeing "just" threefold improvement but still very nice. However for my main goal I would need a 4D Interpolation. I have poked around in the source code a bit and conceptually it should be similar to the jump from 2D to 3D just with an additional interpolation in the time direction but I don't really feel comfortable enough with c++ to change anything so I'll just do the 3D to 4D step in matlab. Its hard for me to tell how much effort it would take, but would you consider adding a 4D Interpolation to splinterp? 
Can't wait to test this out, thanks for the contribution!
I also observe around a 3-4x difference for 3D to 3D interpolation with array sizes of 33x33x33. The performance difference between splinterp and interp is complex as there are a number of effects going on. The speedup becomes more significant as the array size of the input data gets larger and as the ratio between the size of the input data and size of the points to interpolate gets larger. In the limit where there is enough data so that the overhead cost doesn't matter and it's just a battle between splinterp and MATLAB's griddedInterpolant I still observe splinterp to be faster in serial, and from there the benefit of multithreading kicks in to still provide a nice boost. So, unfortunately for you it appears you are operating in the saddest part of the performance curve. But, as you pointed out, 3x is still 3x. As for the 4-D part, you're right it's just another trivial extension. There is probably a way to frame it so that the process can be applied to arbitrarily high dimensions rather then hand-writing the 4d, 5d, etc cases. I'll think on it.
Thanks! It looks like this is a perfectly good way to do this. I also found the alternative solution: syms C M = [1 2; C 4]; S = det(M); handleS = matlabFunction(S); root = fzero(handleS,0); I'm not sure if there's a difference between the two approaches. 
also try penny or load handel; player = audioplayer(y, Fs); play(player) 
I know handel, I use it to notify me when my scripts finish running :)
Cool, I'll probably give this a try later on today, however my interpolation isn't very data-heavy. Out of curiosity, what do you use your interpolation suite for? Also, you wouldn't happen to have a SLERP function, would you?
I also had this.. And solution was something stupid.. Now I do not remember.. post code..
I don't remember off hand what the best way to do most of this but if you have the license, &gt;&gt;cftool is super helpful. I've used generated code to give me an idea of what's going on and provide surface fits in the event that you want to run a model-based approach without having equations in Simulink. See the following: https://www.mathworks.com/help/curvefit/curvefitting-app.html You can use the toolbox GUI or play with it through &gt;&gt;cftool options to meet your needs. This toolbox has saved my ace for extending to 4D-6D applications as it simplifies analytics. Consider the following: (X-coordinate, y-coordinate, z-value, reactor-degradation/time/some other parameter). Mapping out the above system might seem easy when considering a simplified system but if you don't have time for all the nonsense of coupled systems driving an academic study and want to get statistically accurate answers ASAP, figure out how to model the fits rather than doing a thesis for non-critical responses. While my co-workers have s*** on me for using it, I've found its the most helpful thing to have. When you need to evaluate an interpolated value in an x-y pair that you don't have data for for a statistically good fit (r^2 and reasonably low RMSE for the range you're looking at ) I've found they typically can rage on about being "physics" based but at the end of the day the results produced are EXTREMELY tied to the systems based reality. TL;DR: 1) Use &gt;&gt;cftool with the next best fit after cubic interpolation (I think it's plate something or the other ) 2) save the fit to your workspace and generate a script (for 3+). Run fitname(x,y) to evaluate a z- value for missing points...if needed. 3) after generating the script and removing outliers, save the script to your primary path for future use. This will expedite the process for similar activities. 4). Modify the script to save fits to a directory for project use. Maybe you don't need this but in my job I constantly have to run analytics against previous "maps" to determine degradation or variations. Redoing fits is a pain in the ace so save them whenever possible. Good luck. Hit me up if you need help....I might not answer...5 beers in.
p=[3 4 5 6] 3:-1:0 .* p = [9 8 5 0] Oh shit it's finding the coefficients of the derivative. Mathhhhhhhhh
9.9999999999 times /10 you are you are going to want to take the positive root, so using sqrt() will work just fine. if you are really concerned, you can always make 2 different z grids where z1() = +root and z2() = -root
http://www.mathworks.com/help/matlab/ref/surface.html
So you've already been able to solve for Q and R using the given equations correct? If that's the case you can use the inverse function written A = B\x (notice it's a backslash rather than a forward slash). Replace the A,B, and x with the Q,R, and A in your equation. 
looking good! If you post your code in a pastebin we can have a fiddle around with it. Off the top of my head, keypressfcn will only work if the object it is calling back to is active. Will have a look at my past guis and see what I've done but I recall it being a kink that I just had to work around in MatLab. edit: What probably is the case... When I have keypress functions for callbacks that need to work the way you are after, make sure they're in the figure itself example from one of my GUIs: app.figMain = figure(); app.figMain.Name = 'Pure Tone Audiometry'; app.figMain.Units = 'normalized'; app.figMain.Position = [.1 .15 .8 .7]; app.figMain.MenuBar = 'none'; app.figMain.WindowKeyPressFcn = @app.windowKeyPress; app.figMain.KeyReleaseFcn = @app.windowKeyRelease; Now, all the other objects within the GUI will be the children of that parent object so the button press should be independent of what is selected (as long as that figure is active). BUT! What will be an issue is if you have Space or Enter selected as your cue keys, MatLab I think is hardcoded to use those to just "activate the selected object" For example, make a random button. Click it once and if you press enter or space again it will keep activating it even in the absence of any keypressfcn. That should be it from guess work! Hope it helps.
Your notation is extremely confusing. You're talking about functions Q and R. Are these provided by the assignment? Or does the professor just require that you use some functions to generate matrices? magic() is generally used as an *example* of a function that returns a matrix. If you just want an "empty" matrix that you'll fill in, you'd typically use zeros(). If you want a function that generates a matrix from some inputs, just write that function. Edit: looks like the definition of the functions is given in your assessment. You just need to create code that uses those definitions. They're pretty simple so you don't actually need to write a whole function if you don't want to. They can each be done as a single line of code. 
&gt; stressed the importance of our code having GUIs. Really? I find this a bit disheartening for a (presumably based on the GUI and the fact that you're using Matlab) technical field. There is a time and a place for a GUI. I am not saying *this* code needed one, but to make the assertion that all (or even most) need one will often make your codes hard to expand and collaborate. Not to mention what you said too: &gt; it took at least 5x the time to make the GUI as it did to do the actual problem I guess the thing you have to ask is if that time was worth it in a real setting. And, is the GUI going to even help the job get done? I know in my work, Matlab (which is being replaced by Python at an astonishing pace) is hardly the last step. It is one step along the process. But I guess to each his/her own. I would just caution you from walking away from this class thinking this is the way to do productive work. 
Here is what I've done, that probably doesn't make sense but it shows what I'm trying to get (all variables are accounted for above this in the code): for i = 1:4 theta = [157.5*d2r;135.0*d2r;112.5*d2r;90.0*d2r]; T = theta(i); y = -b/2*cos(T); nu = 2.0*y/b; C = Cr*(1+cos(T)*(1-y)); mu = pi*C./(2*b); Twdist = (nu*TR*Taoa + (1-nu)*Raoa)/(1 + nu*(TR-1)); Q = mu*(Twdist-ZLaoa)*sin(T); end for i = 1:4 theta = [157.5*d2r;135.0*d2r;112.5*d2r;90.0*d2r]; T = theta(i); y = -b/2*cos(T); nu = 2.0*y/b; C = Cr*(1+cos(T)*(1-y)); mu = pi*C./(2*b); for j = 1:4 R = sin((2*j-1)*T)*((2*j-1)*mu+sin(T)); end end A = Q\R; I want it to display 4 values for A, and although I don't get any error messages for this code, it only gives me one (wrong) value for A. Here is the part that is causing the problem, I think: for i = 1:4 theta = [157.5*d2r;135.0*d2r;112.5*d2r;90.0*d2r]; T = theta(i); However, is that the right function for A at the end? I'm trying to find the values in the vector A, where Q = R*A.
The problem was that I only set the keypressfcn for the main figure when I needed to add it to the individual textboxes. Also is there a reason you use dot syntax rather than just: app.figMain = figure('name','Pure Tone Audiometry','units','normalized',...,'menubar','none') which seems cleaner and easier to type? 
This will always result in t=0
Okay, and...? 
I find it much easier to copy and paste through dot notation. I also write a lot of stuff for other people and its way easier to explain to people who aren't super MATLAB literate what is happening and where in this format because it's much easier on the eyes. (It also looks less complicated, despite being the same) But also, when I need to change a property later in the script, say a button press making a new GUI window appear, I just have app.fig.Visible = 'on' in the function. This keeps the coding style consistent. As long as it's consistent though, not sure there is really a benefit to either. I just like how this looks. I'll try to remember to DM you a script I wrote for a larger GUI so you can see what I mean when it's en masse.
I think you are looking for the isosurface command. It draws a surface in a 3D field at a specified value
check :D [ezplot](https://nl.mathworks.com/help/matlab/ref/ezplot.html) this will be your man :). Ow, apperantly ezplot is not recommended anymore, check [fplot](https://nl.mathworks.com/help/matlab/ref/fplot.html). On a related note, you DO want to plot gridded surface (albeit implicitly when using fplot), you just do not know it yet :P. here is an example to plot your function as a gridded surface using surf. stepsize = 0.05; lmx = [0 10] ; lmy = [0 10] ; %here you create your grid [X,Y] = meshgrid(lmx(1):stepsize:lmx(2),lmy(1):stepsize:lmy(2)) ; %note .^ and not ^, also imag to take the imaginary part. Z = imag(sqrt(4*(1-X.^2-Y.^2)) ); surf(X,Y,Z) ;
If you have 3d matrix of values, and it's rather slow. I doubt this is what he needs.
learn about floating point precision errors. The differnces are so small that neither is "more correct", they are the same, up to the precision you can expect from calculating stuff with a computer.
What does a for loop do? Think about what you've written and what it does. 
Yikes. This doesn't look like an ellipsoid. http://imgur.com/a/nTvSH
No, it does not. This does though: [theta,phi] = ndgrid(linspace(0,pi),linspace(0,2*pi)); x = sin(theta).*cos(phi); y = sin(theta).*sin(phi); z = cos(theta); surf(x,y,z) Note that the elipsoid is parametrised differently here. The point with surf is that it creates a 3d surface object out of 3, 2d matrices of the same size(x y and z), where each point defining the surface has one value from x, y and z, and the neighbourness (e.g. x(i,j) is next to x(i+1,j) is used to define the edges and patches of the surface. You have to think on how to define the whole surface when using surf, but you know math right?
Okay I think I understand what you are trying to say. But (sadly) then, this isn't my goal of plotting surfaces given by equations in a textbook :p
If you have MATLAB compiler, this is doable. You can build your MATLAB code into a .NET library that you can include in your VB.NET project pretty easily. You would need to have the MCR installed on the target computer, though. But that's available as a free download from Mathworks.
i see, have you tried the free online [wolfram alpha](https://www.wolframalpha.com/input/?i=4x%5E2+%2B+4y%5E2+%2B+z%5E2+%3D+4)? It's absolutely great, you'll love it.
Your post has been removed. Please [read our rules for submitting homework](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and then feel free to re-submit. 
What would the next line of your table look like? https://www.mathworks.com/help/matlab/ref/fprintf.html Check the first example, "Print Literal Text and Array Values"
Run a for loop and create a variable that gets the name of the variable incrementally. And then use the eval function to run the plot command In the future though - If they are all of identical length T, then put them all in a matrix of size 36xT and then plot the transpose of this matrix. If they are all unequal lengths, then put each in a cell of a cell array of size 1x36. Then plot the contents of each cell in a for loop with hold on.
Speaking of dimensions, I found small but measurable gains when arranging my data in columns and iterating over (:,a), even though matlab encourages looping over (a,:) by casting command line arguments like 0:10 as a row vector. I believe it is because matlab is a column major language.
The reason I ask is because I remember stumbling upon an explanation about the difference between square matrices and rectangular matrices. Square matrices were calculated by brute force, while rectangular was I think calculated by Cholesky decomposition. 
I'm having trouble following a(:,:,i) this just means all rows nad columns for i=1:length(alpha)? I want them to be constants for each theta/alpha but over a period that allows me to plot a graph for each of the 360 values. Does using this for loop just mean that I iterate each alpha but only record the last set of x values?
That's perfect, thank you so much for all your help, you just saved me an immense amount of time and helped me understand a number of things in greater detail. Hopefully your friday / saturday fun is just getting started!
Yes. Check out datastore if you want to deal with all of the CSV files as though they were one file. Otherwise, look at some of the data analysis webinars on the mathworks website, they show how you can load files and do some different types of calculations on the data.
the title checks out
Please be a little more specific. There are many ways to accomplish this depending on how you want to use the data. If you can run the calculation on one file at a time, you can use files=dir('*.csv') to find all files, then loop through the files(i) one at a time. 
can you please give an example of the coupled equations you're trying to solve? 
So if you have variables {X1, X2, X3, ... XN}, each equation only spans three variables, right? In other words, each equation must contain exactly three consecutive different variables e.g X1,X2, X3 or X23,X24,X25. If this is true, yes, you can represent the system as tridiagonal.
 fid = fopen('somefile.txt', 'w'); fprintf (fid, '%s', evalc('disp (table(somevar))')); You might also be able to access the disp method of the table class directly, but evalc and disp might be easier. 
That is true. I copied this over from a similar problem and after changing it didn't see that its irrelevant in this situation. Thank you. EDIT: I have changed the code and now it does 3 iterations but for some reason my "ea" variable never changes. Would you happen to know why?
The main problem here is that your eyes are closed. There are numerous errors and warnings that the editor window is certainly displaying to you. Why are you ignoring them? When you run a function, it's nearly impossible that "nothing happens". At least, there will be an error message. These are written in English, in red text. Why are you ignoring it? This is all a lot easier if you look at what's in front of you. 
This question is very unclear, but if you want to do linear interpolation, search the documentation for the various functions which do interpolation. 
This is first a math question and then a matlab question. You have to know the math behind it before the matlab.
Is this actually an old "timeseries" datatype? I don't think anyone uses those anymore but I could be mistaken. Just convert it to double. I'm sure the documentation explains how. 
xlswrite
Okay, good to know. Out of curiosity, would 'csvwrite' be any faster?
I'm not sure if it still calls the excel application for that one.
As others have said, xlswrite sounds like a winner, but I've never used it. Does it have to be an xls file? You could write it to a regular old ascii in csv format. Excel will open that. (csv means comma separated variable. Just use fprintf to write to a file with the numbers separated by commas and Excel can handle it). 
Sure sounds like it. Probably wants `double(timeSeriesVariable.Data)`
You could always use Octave. There's a book series called UseR! that's good and you can get many for free if you're at an academic institution. Also a ton of online resources. There are thousands of packages each of which does it's own special thing. You will need to find the ones you need. The most critical package is ggplot2. It is used for making lots of graphics. I make most of my figures in R. R has a steeper learning curve than Matlab so be prepared for that.
I started with R before picking up MATLAB. You'll want to get [R Studio](https://www.rstudio.com/). It will give you an IDE similar to MATLAB. Alternatively check Octave (/r/octave). It's basically open source MATLAB. 
Hey there, thanks for providing runnable code. &gt; I am currently trying to create on for the 2-D visualisation of the helical motion in the z-x plane. The code I have submitted is the helical motion, however as you can see the spiral motion begins to accelerate with time . I feel it has something to the v = v+ acc... part. Yes, it's quite clear that the "acceleration" is due to this line... v = v + accb*dt; ...as you are increasing the magnitude of *v* (velocity) each iteration through the loop. &gt; If anybody could help me get it to look like an oscillating waveform? You haven't provided enough details for me to glean the type oscillation you're trying to tease out of the code. I've given a few lectures on wave physics in MATLAB; you may find those lecture notes helpful: * [waveOscillationPhysics_Pt1.m](https://gist.github.com/subroutines/1367652c67942f6238c3f46aea10d5b2) * [waveOscillationPhysics_Pt2.m](https://gist.github.com/subroutines/419c7f4669ef9df6d34dc48e3b53392f) * [a few updates to your code](https://gist.github.com/subroutines/14769164bf8222dce6141f2784d97217) Updates to your code [include 3D visualization](https://gfycat.com/ifr/BruisedShorttermHorsefly).
Your data is four-dimensional, each "point" comes with four numbers. That is inherently hard to plot in two dimensions. You will have to make a compromise since it is impossible to plot all the data. You could maybe make two plots side by side, plotting the first two columns on the first and the last two columns on the second, but I don't think that will be especially easy to read. Another easy way to do it is to do a PCA first and plot the first two coordinates ("principal components") of that. That is a straightforward "lossless" data transformation that's relatively simple in matlab.
I was in the same position, not too long ago. Ultimately, I chose to move to python+numpy/scipy. The biggest hurdle I faced was python's insistence on strong data types. The only reason I can see using R is if everyone around you is also using R. then translating their examples and code into another language just isn't worth it. Personally, I found R's syntax infuriating. if '.' is an operator to access an objects member function, it should not be allowed to be used in a variable name. this.syntax.is.so.wrong.it.hurts()
Scilab is free
I found myself frustrated when I learned R. It was just similar enough to MATLAB to cause me headaches, plus it lacked the flexibility of MATLAB. It's the best choice if you're dealing with huge data sets though. As others have mentioned, Python is the more natural transition if you're writing programs rather than running analysis of large data sets.
I managed to convert it.Thanks!
yeahhh... print and matlab figures... tried it once, then decided to use [export_fig](https://nl.mathworks.com/matlabcentral/fileexchange/23629-export-fig) and never looked back.
Python is powerful, the documentation is great and you don't have to search forever to find how to do it in R. There are a ton of great resources for learning Python(codeacademy etc) and once you have a grip on the basic syntax, it is pretty easy to pick up on scipy/numpy libraries. 
You have to remember the vector nature of velocity. It looks like you are ignoring the direction of the acceleration, so velocity is only changing in one direction.
R is specifically good at statistical analysis of large data sets. I think in your case it might be the best choice. Python offers more flexibility as a language, in my experience anyway. I will say that most R plots I've made are ugly as sin. I prefer to export the results to another program when I'm making presentations for external consumption.
Is there an easy way of making it so the deflection creates a constant waveform with a constant amplitude? I understand what you are saying, I just have no clue how to fix it.
The problem isn't so much a MATLAB problem, it's that moving charges through magnetic fields requires a certain level of finesse. Let's look through what happens in your very first update. You have a particle which is traveling in the positive x direction and negative z direction, with a magnetic field in the z direction. As you'd expect, the acceleration is entirely in the y-direction. This is good. However, the problem is, the acceleration is only the the y-direction (in real life) for the very first infinitesimal. After that, the particle has bent just a bit, and thus the acceleration now should have very slight x and z components (making their magnitudes a little smaller). However, in your simulation, the same acceleration is applied over the entire time step, thus at the end, you have the same x and z components, and a small y component. This means that after your next update, the speed is just a little bit bigger that it was, making the magnitude of acceleration just a little bit bigger than it was. This then compounds the problem even more. Your first instinct might be to make your step size smaller- but this will only delay the problem. Really, you need to re-do the simulation, but in spherical coordinates. It won't be easy, but it's the only way to stop the run-away velocity. Now, for a MATLAB tip- your plotting code is making your script run much slower than necessary. First, take the title, xlabel and ylabel out of the loop- you only need to declare those once. Just doing that will help a lot. If you want it to behave even better- store all your positions in an array, and then plot them all at once instead of at every update. This way, you only have to call `plot` a single time. 
 +OP I will check out PCA method but I might be able to plot it in 3d plot? its would be a 90 in x axis for each subject 4 in y axis for each condition, and z ranging 0-1 for the value of the point. but I'm not sure how I can i can plot the clusters on this.
Let's go back to the data again. Each row describes one "point" (measurement, person, car, ...), each column is one attribute (height, weight or similar), correct? Is the data continuous or does it only take certain values? Edit: do you know how to plot it "ignoring" the 3rd and 4th column, sich that each data point is a dot, x value equal to the value in the first column and y value equal to the 2nd column?
yup, I have done the scatter plot. I even made a plotmatrix which basically shows all the different combination. 
ahhh i just did the plotmatrix with the kmean centroids and it works as well. how do i plot them on top of each other.
Sweet. Now there's `gplotmatrix`, which works almost like `plotmatrix`, except it also takes a vector denoting what "group" each element belongs to. Kmeans should give you a 90x1 vector with values ranging from 1-k, telling you which element belongs to which cluster. Just pass that vector to `gplotmatrix` as the third parameter and your plots should get some color. I think you'll have to drop the idea of plotting all 4 dimensions at once. We can do 3 tops and even that is not necessarily more illustrative than the plotmatrix, and anything that's not a scatterplot is also probably worse. I see where you're going with your "x from 1 to 90, y from 1-4, z from 0-1" now but I highly doubt it will look nice, mainly because similar data points will not be close together. You can try matrixplotting the data after PCA, if you want. If the data is "good" for PCA, the dots should be more spread along the former dimensions and less spread along the latter dimensions, so the scatterplot using the first two dimensions should show some nice distinct and differently-colored clusters.
perfect! Thank you
Since you are importing a dataset... &gt; Data = csvread('MeanDataSetFULL.csv',1,1); ...would this code produce a matrix with the same general shape of your imported data: Data = [gallery('uniformdata',[10 4],12);... gallery('uniformdata',[10 4],13)+1.2;... gallery('uniformdata',[10 4],14)+2.5;... gallery('uniformdata',[10 4],15)+4.0]; If so, this feels unnatural to me. You won't be able to visualize 4-D data in a single figure. If there were 3 columns you could [create a plot like this](https://www.mathworks.com/help/examples/stats/CreateHierarchicalClusterTreeFromSampleDataExample_01.png) where the 3 columns could represent x,y,z coordinate triplets. What do each of your 4 columns represent? One option would be to create 3 separate plots showing the clustering over the 4 combinations. [I've demo'd this for you here \(just copy this code into MATLAB and run\)](https://gist.github.com/subroutines/a0841b97116f2f2311e2b8a0f3e8e289). The output will [look like this](https://gfycat.com/YellowishGrotesqueBorer).
+ Hi, I have the same problem. I have pretty much the same code as above but haven't figured out the solution. Any help is greatly appreciated. Thanks
I had been a huge Matlab fanboy until I learned Python and I would not ever want to go back. The scientific libraries are just more powerful than anything Matlab can offer and the community support is much better as well. OP, if you want to give Python a try, check out the modules below. The transition from Python to Matlab is really easy as the Python syntax is very similar. NumPy - general scientific computing library, including multi-dimensional arrays with Matlab-like features (logical indexing etc.) Matplotlib - plotting and visualization Pandas - data processing/analytics Scikit - machine learning Jupyter - interactive Python console (if you gonna miss Matlab IDE) SymPy - symbolic math
One of the ways to go around is to change the datatype of your variables to float but in that case you will always get floating point numbers and not fractions. Other way is as you mentioned to use format. Try using format long instead of longeng. Hope that helps! 
yes, although the colors are kinda odd. I showed it today to my PI and he said just do 2 dimensions and compare it with hierarchical, so that's the next step.
wow, thats amazing. The main problem while trying to plot my graph in 3d is because my matrix is not square dimensions are not consistent. But I just found out I'm making everything too complicated, and my PI told me to just start with 2 columns and he want me to compare the kmean with hierarchical clustering. So i have to start from scratch, but im just learning matlab and Ill defensively be using these graphing tools. 
How does it lack the flexibility of MATLAB? I use both, and I find it to be the other way around.
My main complaint when I started using R was that I couldn't do certain things dynamically. With MATLAB I could prompt the use for input and use that to size arrays, etc. where with R I had too hard code it. That said, I wouldn't consider myself anything more than a novice R user.
Step one is probably open the documentation and search for "ode" or maybe "ode solver". Unless you are supposed to implement the algorithm yourself, in which case you should check your textbook or lecture notes to find a description of the method you intend to use. 
If you want numerical answers, you probably don't want symbolic variables. 
[Euler Method without using ODE solvers such as ode45](https://www.mathworks.com/matlabcentral/answers/115341-euler-method-without-using-ode-solvers-such-as-ode45?requestedDomain=www.mathworks.com) Edit: [How does one test a numerical ODE solver implementation?](http://scicomp.stackexchange.com/questions/7088/how-does-one-test-a-numerical-ode-solver-implementation)
[removed]
You're trying to connect outputs to outputs
Just find the unit vector: r_hat = v2 - v1; r_hat = r_hat/norm(r_hat); Then determine your length `d` and add it on: v3 = v1 + d*r_hat; Then plot between `v1` and `v3`
You'll have to play with the axes properties : https://www.mathworks.com/help/matlab/ref/axes-properties.html set(gca,'name',value) Using the name/value pairs. Look into playing with xtick and xticklabel (if my memory serves me correctly). Put the set() call right after the last thing you plot, as gca is "get current axes" as in "get the handle of the last axes plotted and do the name/value thing to it"
Interesting, I have a similar experience, in that I can write multiple things in one command in R, whereas in matlab, I have to pass the result to another object before I can move on. e.g., if I run a command like ones(5,5), I can't do soemthing like this ones(5,5)(1,1), whereas, in R, you can. My example is stupid, but when you're thinking faster than you can tell the computer to do it, it's annoying. Also, I dislike that functions have to go in their own separate file. It completely disrupts my way of thinking. It's fine for organizing code, but for prototyping I find it slows things down for me.
I'm pretty sure it says more than just "error in formatting. I'm pretty sure it tells you exactly what the error in formatting was. 
[removed]
.
Have you been taught how integers are encoded in binary? 
No but your questions are leading me down the right path I think. Let me work on it tomorrow and get back to you. 
Did you use meshgrid and surf? See the example on [this](https://nl.mathworks.com/help/matlab/ref/meshgrid.html) page called:"Plot Surface: Create a 2-D grid with uniformily spaced x-coordinates and y-coordinates in the interval [-2,2]."
&gt;get a nice 3d plot. is a bit of an unclear statement in this context. your data will be 4D (X,Y,Z and f), so how are you going to plot this? either different 3d surfaces for certain fixed f (see [meshgrid](https://nl.mathworks.com/help/matlab/ref/meshgrid.html) and the examples on that page), or with colors (which is cool to give you an indication, but rather useless otherwise) using [scatter3](https://nl.mathworks.com/help/matlab/ref/scatter3.html)
In addition to what /u/EatMyPossum said, another way of representing 4D data in a 3D plot is to show a level surface of the function. This is the 3D equivalent of a contour plot. It is the surface composed of points where f(x, y, z) = k for some chosen fixed value of k. Edit: Since this is a work task not homework I can be a little more helpful: It's important, when encountering questions like this during the processing and presenting of data, to step back from the mathematical complexity and consider "what is my actual goal in doing this?" obviously 4D data cannot be presented in a single plot. But since that's always impossible, it's unlikely you need a 4D chart in the first place. Nobody is expecting that, and it wouldn't be much use if you could produce it, given our 3D eyes. So what is the actual point of the analysis you're doing? Is it meant to drive some decisions at work? What decisions? How does this data relate to the choices you might make? What actual characteristic of the information you have are relevant? Once you are thinking about those things, it should be easier to go back to your data and select a way of presenting it that's meaningful for your particular application. Maybe you only care about the behavior relative to x? Or maybe you can average across the y axis? Maybe what you really want is just the (x, y, z) position that maximizes or minimizes f(x, y, z)? Etc. There are unlimited possibilities, and you'll chase your tail forever if you don't keep your focus on the real goal. 
EatMyPossum: &gt;either different 3d surfaces for certain fixed f FrickinLazerBeams: &gt;In addition to what /u/EatMyPossum said, another way Thanks for the addition :D XD :P
As /u/Halsey117 said, it's easy to get a Matlab instance without figures. However, I'm not sure it's possible to have Matlab without figures *and still be able to create figure windows for saving as images*. Certainly, you'll be able to create image files (.png, .jpg, etc.) but if you have code that generates them from on screen figures, I'm not sure that's possible. 
Oh, I read quickly and thought you suggested plotting f as a function of two variables with the third fixed. A cross section rather than a level surface. My mistake. 
Make sure you're not typing "e^((x^2)-(y^2))". Instead try using "exp((x^2)-(y^2))" I couldn't get that through my head when I first started to use Matlab. *Edit: Sorry I'm not sure how to format all of the parentheses in reddit but just imagine that nothing was a superscript.
I'de not try to construct an image (matrix object), but rather use matlabs different buildins to construct your clock. Personally, i'de go with [text](https://nl.mathworks.com/help/matlab/ref/text.html) to plot the labes of your clock, and use [hp = plot](https://nl.mathworks.com/help/matlab/ref/plot.html)([-1 0 1],[-1 0 .5]) to draw a line with the two hands. then, use set(hp,'XData',...) and set YData, to update the hands in the loop. edit: to get you up to speed, i made you this: dummyTrackXB = sin(0:0.1:1); dummyTrackYB = cos(0:0.1:1) ; dummyTrackXs = cos(0:0.1:1)*.5 ; dummyTrackYs = sin(0:0.1:1)*.5 ; figure(1); clf; axis([-1 1 -1 1]); hold on ; text(0,1,'12') hp = plot([-1 0 0.5],[-1 0 0.5]) ; for i = 1 : numel(dummyTrackXB) set(hp,'XData',[dummyTrackXB(i),0,dummyTrackXs(i)]) set(hp,'YData',[dummyTrackYB(i),0,dummyTrackYs(i)]) drawnow ; pause(0.9) end
So YCbCr values range mostly from 0-255, which requires 8 columns of binary to represent the values. When asked to eliminate 1/4 of the bits, I should eliminate 2 of the least significant bits, i.e. the bits furthest to the right. Correct? Just talking through the result of doing this...I would then end up with 6 columns of binary digits which would correlate to values 0-63. I would then just contrast stretch this image back to 0-255?
The easy thing to tell you is to just turn on `hold on` and that will fix your problem, and it will (`hold on` tells MATLAB to plot new data with the old data, instead of replacing it). But really, there's a better way to do this. First, you are re-defining your axis, labels and titles every time you go through the loop. This will make your code much slower than it should be. There's no reason to not do that outside of your loop. That is, before your loop put: figure axis(...) xlabel(...) .... (of course, replace `...` with your necessary stuff). Next, you don't have to plot this one point at a time. If you save off your `count` and your `error` in a vector, you can call it all in one `plot` (or in your case, one `semilogy`) call. This way, you can manipulate your whole plotted data at once. 
Try placing the h=figure statement before the for loop.
Doesn't seem to exist for me, unless I'm missing something - [here's](http://i.imgur.com/saE0Y4t.png) a screenshot of my 'preferences' window
it was originally made to open excel/txt files with perimeters of mass, pos, velocity, etc in the following format Four Star Ballet 10000 % gravitational constant 0.001 % calculation step size 100 % update display every n calculations 1 % mass scale factor 1 % position scale factor 1 % velocity scale factor 400 % max position for display name color radius mass x y z vx vy vz Star1 r 10 120 -100 100 0 -50 -50 0 Star2 b 10 120 100 100 0 -50 50 0 Star3 g 10 120 100 -100 0 50 50 0 Star4 y 10 120 -100 -100 0 50 -50 0
any specific way i can upload to make it easier for you? 
This. Also, if you are wanting to reset the plot each time, use clf in the for loop instead of h = figure, which will open a new figure each time. Also, this is out of curiosity but why are you trying to save 500 images? If you are trying to make a gif or movie, matlab has those capabilities built in.
Uh, ALSA stands for "Advanced **Linux** Sound Architecture" (as also suggested by file name "pa_linux_alsa.c". Are you sure you selected the right sound API in the compile options? I think Macs use CoreAudio, but I don't have a Mac.
Which piece of code do you think isn't accomplishing what you're going for? What do `primes(1000)` and `primes(2000)` mean? How do they relate to the number of primes between 1000 and 2000? Your `fprintf` statement is unusual. It seems like you think you need a formatting operator for each of the 10 values you're looping over, but it doesn't work that way. Each loop produces `np` with length 1, so `fprintf` puts that in at the first operator. There's no next value to put in at `%2d` (`np` is only ever 1 value, right?), so the `fprintf` statement just stops there. `fprintf('%d, ',np);` would produce the same output. The numbers preceding `d` don't usually mean "first, second, third ... value" for `fprintf`, they are used for specifying formatting. For now, you probably shouldn't worry about them. Details in `doc fprintf`.
Basically, my aim is to get the code to "print" the number of prime numbers in each interval of 1000 (so between 0 and 1000, 1000 and 2000 and so on until the interval 9000 and 10,000). The code does this, but it also adds up the number of prime numbers to the next answer. So for example, the first output number I get is 168, which is the correct number of prime numbers between 0 and 1000. But for the next output I get 303, which is 135 (the actual number of prime numbers between 1000 and 2000) + the previous value (168). What I want it to do is to not add the previous results to the new one, I'm just not sure how. Am I making sense? Edit: the output is gives is 168, 303, 430, 550, 669, 783, 900, 1007, 1117, 1229 it should be 168, 135, 127, 120, 119, 114, 117, 107, 110, 112
Just so you know, `square` is a matlab function in some toolboxes which creates square waves. 
Per /u/Weed_I_Whirler's comment, I think you might as well stick to what you were doing. It looks like the only issue, perhaps, was that you specified *d* as a number between 0 and 1, instead of an integer between 0 and 100. If you change *d* to 25, I think you should be good.
Thanks for the help so far! Still haven't figured out the problem, so it would be great if you could have a look. As pointed out by someone else, I'm using Ubuntu. 
Oooh right, can't believe that didn't click! Thanks that makes a lot more sense now. Some sort of code that would exclude the previous sets of 1000 so it's only counting over the interval I want. For a non looped option I could just put n=1000:2000 for example, I'm not sure how I'd implement it into the actual loop though. 
I'm not sure of the specifics of your problem, but it sounds like you're quite capable - if you're after something different, I'd look into fft based approaches for convolution, which can be more efficient than direct convolution when the matrices are large enough. If I understand your problem correctly, this would then involve something like tiling the subsequences of your large matrix (eg. n x m where n=length(b)-length(a), m = length(a) or something), doing a 1d fft on a and the tiled matrix, and then an expanded elementwise multiplication (eg. bsxfun) 
[removed]
So reading this: do you have any specific MATLAB questions? Because I'm pretty good with MATLAB, but I don't know anything about uterus signals. I ask, because if you can frame your question in a "how do I get MATLAB to do this?" I would gladly help, but I don't know if crest and PAPR represent intensity for your situation. 
 N = length(x)+length(y)-1; xpad = [x zeros(1,12-length(x))]; ypad = [y zeros(1,12-length(y))]; ccirc = ifft(fft(xpad).*fft(ypad)); ccirc = ccirc(1:N); from: https://au.mathworks.com/help/signal/ug/linear-and-circular-convolution.html?requestedDomain=www.mathworks.com 
you're really close! in order to get the indexing right in this case, you need to use brackets: Ma=G([1,3:4],[1:2,6:7]); you also need to be careful with using more than two colons in a range statement. I'm not sure what will happen (if anything) if you use more than two
For matlab you have to index it like this: Ma(1,1) = G(1,1); This will make the first component of Ma to the first of G Ma(:,1) = G(:,1) will make the first column of Ma equal to the first column of G. Ma(1,:) = G(1,:) will do the same with rows.
Thank you very very much! I fidgeted around with many things however I am not quite used to brackets and parentheses as this is only my second assignment in Matlab. Regarding the multiple colons, it gave me a weird answer. I believe it gave me a 2x2 matrix, I knew that was wrong. Thanks again, I really appreciate your help :)
Thank you for your help! I was able to complete it succesfully :)
Depends on whether or not it is free for students at your college. If it's free, professors will have you use. The best way to tell is to find the course syllabuses on the department website and see if they require matlab. Asking the department head is also an option. 
There are actually a LOT of ways to approach this. % Count the primes in two sets, find the difference p_big = primes(5000); p_small = primes(5000 - 1000); l_big = length(p_big); l_small = length(p_small); Another way is to store values into an array so that you can work on all the values as a group later. for idx=1:10 x = rand(100,1); randomMean(idx) = mean(x); end Another way is "logical indexing" -- `p = primes(2000); p(p&lt;1000)=[];` first makes a list of all primes below 2000 and then says "in the array `p`, find values `p&lt;1000` and set them equal to nothing `[]`: remove them from the list.
You can use vectors to call certain rows and columns of matrices. XZ = G([1,3,4],[1:2,end-1:end]) So here, I'm calling all components in rows 1, 3, and 4, and all components in columns 1 through 2, and the second-to-last column to the last column. EDIT: I think one of your classmates is also stuck on the same problem (see [here](https://redd.it/5ujkmr)). See if you guys can work together. EDIT 2: [Some documentation to help you out with creating submatrices :)](https://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html)
A fellow UB classmate who went to reddit for help. Smart ;)
Well can you give me a small push too? with 5a?? 
So far I have F = [zeros(3,6)] and I dont know what to add and where... 
Oh that's easy you do [zeros(2,6);linspace0,0,2 8:-2:2]
I was reading through piazza and Bozo(Banas) said that we cant use a semi-colon. A semi colon means its another command, No?
All I got from this question is that I am shocked and ethics board allowed you to put pregnant women into arrays. That can't be comfortable for them. 
&gt;&gt; F = [zeros(2,6); 0 0 8:-2:2] F = 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 6 4 2 This is more than one command right?
No it just means another line. There is no way you can not use s semi colon
Uggghh. That really sucks. I was just sitting in greiner struggling when I knew how to do it already.
Undergrad degree in BME/ChemE, grad student in ChemE/bio engineering. It may depend somewhat on your focus within BME. My program was BME as double-major only paired with a more traditional engineering department and there was significant variation between the various tracks within the program. BME's a really broad field. There's biological work at the cellular/tissue/organ scales. Mechanical devices (crutches, prosthetics). Hardware design and development (imaging systems, robotic/remote surgery). Start mixing it all together (deep-brain electrical stimulation implant for Parkinson's) and it's highly multi-disciplinary. All that to say... various approaches to the field may or may not find MATLAB as useful. I can't recall any coursework with MATLAB before sophomore year. Some departments were using Maple. My department put a fair bit of emphasis on Mathcad. I see other systems (Solidworks for the MechE side, COMSOL for a variety of BME applications, and plenty more) quite a bit as well. MATLAB is really accessible with amazing documentation. It's a great system to start playing with on your own and you could likely find uses for it even if courses don't explicitly teach around it.
So you haven't even tried to read the documentation, have you. 
Sorry. I didn't read anything because I was frustrated
Chances are very highly you'll use it after you get the basics out of the way. As a second semester junior we to finally have been cut lose knowing enough MATLAB to solve dynamic systems and analyze signals. Fun stuff!
It's the key if you know all the commands and how to use them. I don't have much experience with MatLab
Well saying something is one thing. Doing it is another. Doing it in another language is a whole different story.
Oh I'll try the link again. All it is, is 10 generated 1s and 0s to simulate the toss. My professor wants us to plot the likelihood for a coin to be heads after observing two heads prior, using matlab. Probability of heads is 50% but given that HH came up, the likelihood is 0.25, because the probability of HH is 0.25. The plot looks like a log plot, but not sure.
&gt;but I can't seem to find where I went wrong I counted ~~4 to 6~~ 5 to 7 errors in your code. Since this is a homework question I encourage you to check your code again. (Hint: A good place to start would be line 3)
mcc -e really did work. I usually used it but this time I tried mcc -ev, because I used it sometimes when I had errors in the executables, and that messed it up. But setting visible to off doesn't work... Thanks a lot anyways :)
Pretend that you flip a fair coin a million times and get Heads every time. Super lucky! The probability that the next flip is Heads is still 50 %. 
I changed some things but it only gives me back one prime factor and repeats over and over the same number: n = input('Enter a positive, whole number n: '); divisor = 2; while n &gt; 0 if mod(divisor,n) == 0 fprintf('%d ',n) else n = n/divisor; divisor = divisor+1; fprintf('Prime factors: %d\n',n) end end fprintf(' ')
Use MATLAB to plot the likelihood function for estimating the probability of a coin landing heads-up without prior knowledge after observing HH (i.e., head and head). Also plot the likelihood function after observing HHT. This is the problem. The example plot looks like a log function for HH and like a bell curve for HHT. I totally get what you guys are saying but thats not what he is looking for. sorry if I'm seeming dumb. I'm over here pulling hair out..lol
i think the key words would be 'without prior knowledge' meaning it could be an unfair coin.
This is already a little bit better. For your question: Check what your code does if it detects a prime number and what it should do.
well if n=12 i'm supposed to get back 2 2 3 but i only get back repeated 2's. I'm supposed to test all integers from 2-n until I get back a number that when divided by n does not give me a remainder
I tried the example and implementing it in my code, it fails it both cases. I am using matlab 2016a.
 What I was trying to say with the last question: Your code doesn't do anything besides displaying a number if the remainder is zero
You should read through this document as a start. http://www.seas.upenn.edu/~sys502/extra_materials/MAXIMUM_LIKELIHOOD_ESTIMATION_2.pdf I'll rephrase your problem. &gt; Given an unfair coin with unknown probability of heads `p`, what is the best estimate for `p` given that the previous two flips were HH? How likely are other values for `p`? You're hitting some pushback in other comments because the assumption that the coin may not be fair is *really really important* here and it's not clear if you're thinking about this the right way. You're not trying to simulate a bunch of tosses of a fair coin and see what that distribution looks like. You want to use math to understand how likely you are to see these particular outcomes for various probabilities `p`. So with `p=0.1`, what are the odds of getting HHT? What about `p=0.2`? Which `p` value is most likely to give this outcome?
Arrange these in your code: fprintf('Prime factors: ') fprintf('%d ',divisor) fprintf('\n') 
The issue here is a misunderstanding of the problem. The question isn't about independence of flips with a fair coin. It's assuming `p` is unknown and asking for the distribution of likelihood for each possible `p` value. That's related to "What are the odds the next flip will be heads?" (integrate over the LE distribution) but not as trivial as saying 50% for a fair coin. Agreed, the post is still a big step away from a Matlab issue. The math needs to be understood before it can be implemented.
THANK YOU SO MUCH. You basically just said exactly what my prof said to me. I just had trouble comprehending it, when he told me. I'll read through that and update you on progress. The one thing I didn't quite get was what he meant by, 'with p=0.1 what are the odds'. Idk maybe i should of posted this in ELI5 lol..would p be assumed at 0.5? 
Thank you so much for all your help!!!!
P(H)=p, P(T)=1-p. Those are always true statements. So what are the odds of rolling the sequence HT? `P(H)*P(T) = p*(1-p)`. What are the odds of getting one head and one tails across two throws? We have to look at all the possible combinations: HH, TT, TH, HT. Two out of four satisfy that. Your coin flips are still *independent* even though the coin is biased so the math has to account for that. The order in which you get the coin flip results doesn't really matter here. HHT, HTH, and THH will all have the same likelihood estimate result for `p`. So if p=0.1, what are the odds of getting one heads and one tails? `(0.1*0.9)*2=18%`.
https://www.mathworks.com/pricing-licensing.html?prodcode=ML&amp;intendeduse=student Its $50 for students. 
Get octave free open source built to be like matlab: https://www.gnu.org/software/octave/
My GF is having to learn python she's a CS major, I'm guessing I'll pick it up along the way. Any tips on how to learn that?? 
Huh, is it pretty much the same? If yes, then he'll yeah 
Sorry, that 50 smackeroos is going to future rent 
Yes it is built to be the same
I don't understand what your trying to do from your description. 
It is missing lot of matlab functionality and the speed. Most scripts will run just fine but some addons don't work as well. I used it during my studies and most of the time it was fine. If you need a version of simulink scilab is the way to go. 
`false = good;` Oh really? :) That'll cause issues. Fixing that will get you much closer and running some test cases at that point should let you figure out the small mistake in your algorithm.
Or since 9/10=.9 you don't want to floor that but round up. I'm still unsure what your trying to achieve. 
It's an add on for matlab that is helpful for control systems. Since you are ee scilab might be better then octave as it deals more with signal processing. 
oh yea...my professor was going over it and said 9/10=.9 and you end up getting a remainder of 9. So how can I program it to say that? Now i am even more confused
Also -- if you haven't already, restart Matlab or run `false = 0;` in the console. That tidbit with `false = good` would have set `false = true` globally and that'll screw everything up.
You're doing something really bizarre with that function handle, I'm surprised it's not throwing an error there. You define a function, then you define a second function which calls the first without passing in the argument. Why? And do you have the variable x defined already? You must, or that second anonymous function would cause errors. 
I don't really understand function handles. I thought I did by looking at example code from my professor but I guess I don't. My thought process was that F1 is being defined as a function with x as the independent variable. In the line with the quad function i thought F1 was being called and @(x) was defining the independent variable.
I'm not sure exactly where the slowdown is in your code, try using `tic toc`to figure that out. I've never tried to plot symbolic variables, wasn't actually aware you can. What I'm saying is whatever you're calculating (it's not totally clear to me), try to converting your values to an array of doubles before plotting. Can you post or link your code? 
I used help in matlab and found that when I used the same expression except with decimal points after x: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; F1 = @ (x) 2*x.^(5)-3*x.^(2)- 5; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; I = quad (F1,1,10); &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; fprintf('%.3f',I) I got the desired results. I understand function handles and anonymous functions better now. Now my question is why doesn't this work when I enter the expression as 2*x^(5)-3*x^(2)- 5(without the decimal points) Additionally if I were to integrate x and I tried entering the expression &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x. it wouldnt work, but if i entered the expression &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x the result would come out perfectly.
The operator .* is different than * The latter is a matrix operation. If you read the documentation for quad, you should see that the input function must take and return vectors. You should experiment with providing vector input to both versions of your function and see how they differ. 
Are you using a potato, toaster, or ez bake oven class computer? 
&gt; any projects/assignments that would simulate what I would see in a job that requires use of MATLAB This will vary quite a bit depending on what kind of job you're talking about. &gt; currently trying to learn MATLAB If you are just starting out, you probably are better served with simpler assignments. Trying something too complex could be overwhelming. I'd suggest building simple games (tic tac toe, for instance) or checking out something like Project Euler (link in sidebar). If you really feel that you're more advanced than that, more information about your skill level and how you see yourself applying Matlab may help us point you in a better direction.
A few ideas... but mostly I would recommend trying something where the source material interests you. It will make the project much more fun, and I find that when I'm enjoying a project digging into it comes much more easily. Also, once you've got the code working: try finding more efficient ways of writing it, get feedback from other people. Lastly learning to write good code is an advantage- too many matlab only coders have pretty bad habits from a programming point of view. &amp;nbsp; Some project ideas: &amp;nbsp; 1) Solve systems of ODE's and simulate the solutions for different parameter families. An N-Body simulation is a fairly common fun project if you want something physical. &amp;nbsp; 2) Want some discrete math? Implement a hashing algorithm (MD5 is fairly easy) or do an encryption-decryption scheme (RSA is a good place to start). &amp;nbsp; 3) Play around with optimization problems. Try getting a brachistochrone curve through optimization, compare your results to the analytical solution. &amp;nbsp; 4) Machine learning is a pretty hot (hottest?) topic these days. You can do some pretty quick introductory stuff easily with matlab. Try implementing a predictor for the [Titanic dataset](https://www.kaggle.com/c/titanic). &amp;nbsp; 5) Signal processing. Try analyzing the LIGO gravitational wave signal (data and Python implementation [here](https://losc.ligo.org/tutorials/)). &amp;nbsp; 6) General programming. Some matlab coders I've run into aren't very skilled with interfacing with the rest of the world: learn how to read in a text file and efficiently use regular expressions to parse the data, learn to download stuff off of the internet, parse a directory tree, automatically publish the run results to a PDF at the end of the calculation. Send yourself emails through matlab. Learn to use the debugger efficiently to inspect your code. &amp;nbsp; 7) Some more advanced programming skills. Once you've implemented a project you're happy with and you want to build some "standout" skills: build a UI for it, optimize for loops with parallelized sections of code, learn to do object-oriented programming in matlab, compile it to native code using the MCR. Learn to use the built in object inspector (call it with - inspect(obj)) to understand objects "under the hood".
I did, everything is scaled at 150%, however matlab interface isn't.
Try right click on matlab.exe &gt; compatibility &gt; use DPI scaling
All of the things you tried should work. Here's an example: function a() b() end function b() X = 'Test Message'; disp(X); end Above is a function 'a' that calls a subfunction 'b' with a value 'X' that we want to display. Calling 'a()' should print 'Test Message'. Another thing you could try is to put a breakpoint in the subfunction, run the program and look at X when the program stops. 
Are you sure you're editing the right file? Use `which` to check. 
Yeah I definitely would choose integral but quad is a requirement for the assignment. 
Ohh, I'm using windows 7.. that explains it..
Thanks, I will look into the difference b/w scripts and functions later tonight. 
You could use [assignin](https://www.mathworks.com/help/matlab/ref/assignin.html) to save to workspace inside the function and then disp after the function Edit: fixed link
I second the ODE's and optimization, especially if you plan on working in engineering in the future. Another good thing to do would be to write functions for possible future projects, like making functions for iterative methods.
Oh then I definitely wrote my function in a script. My function is called mynormalfun and it is saved in a script called mynormalfun.m
How much energy is there from 0-100ms? 50-150ms? 100-200ms? Note how the first two windows (time ranges) overlap from 50-100ms, and this overlap of 50ms is 50% of the 100ms windows 
What function do I use to depict this?
I didn't ask you to write the answer for me though ... I am new to matlab so I don't know the functions. All I asked is where I should look in order to get going. Sorry if it came out that way ...
Hahaha, but seriously, on my laptop, a solving a simple matrix equation symbolically takes a bit of time, but on my MUCH better built desktop, its pretty quick. Could just be what you're using.
Are you evaluating points and then plotting (as opposed to ezplot-ing) and if so, are you evaluating a lot of points? You might look into *matlabfunction* (I think that's it; on mobile -- will circle back) as it converts a symbolic equation (which can be an N-D array of symbolic functions) into a Matlab *function*, complete with vectorization. My advice, use *subs* while tinkering, *matlabfunction* for converting your tinkering into production/performance code.
Why would storing 6 booleans be inefficient? What would you imagine to be a more efficient solution?
I had to do this years ago, and I'm having trouble remembering exactly what function I ended up using (mesh maybe? Heat?) but I do remember your heatmap vector needs to be a 2D array of size 259x259 (in your case). Google should have answers.
Oldvalue and newvalue, that's what I was looking for, thank you. I remembered using them a while ago but couldn't recall the syntax. Getting those values saves me from storing the value and updating it manually each time the buttons are clicked, which is what I was describing in the OP. Thanks again 
ODE's are what we are actually working on in my Mathematical Modeling class and they seem like a great subject to study. As for as working in engineering, do I need a degree as an engineer? Or is my math degree along with MATLAB experience going to be fine?
Something like this? Array1 = [4 2 1 3]; Array2 = [1.1 2.2 3.3 4.4]; X = Array1(1); % Pick first element of Array1 ('4') Y = Array2(X); % Pick X:ed element of Array2 (As X == 4, Y becomes '4.4') Z = DoStuff(Y); % Call the function 'DoStuff()' on Y and save results in Z 
 sum(y.*x); % multiplies each element in y by x and sums the results
[removed]
[removed]
Apologies, I have no idea how to use pastebin or format this correctly
Have you used a for loop yet? Have you looked at your algorithm and considered how it would work with a vector as input? 
Read the documentation on the subject of indexing. 
Sounds like this is scattered data? Not sampled on a uniform grid? Check the documentation on the various functions related to scattered data. You can plot your data as-is using a triangulated surface with trimesh(), or interpolate it to a Cartesian grid with scatteredInterpolant(). 
Windowing isn't a term that's specific to Matlab. Windowing is a common term used in signal processing. You should check the textbook for your class. 
This sub is here to help, not provide outright solutions for you. It's easier to start if you can write out the steps you would take to accomplish the goal by hand, and then convert each step into a line of code that accomplishes each mini goal. 
Thank you a lot for your help! As you can find in my answer to EatMyPossum I have actually made a mistake and as you said: what I actually want is (x,y,z) -&gt; f(x,y) = z And I actually got it running with just googling stuff and trying out (I have no experience in Matlab, only help is programming C) You can see the code for the 3d plot in my other comment. But could you help or give me a tip how to get a point "cloud". I have a big amount of points which I have to add in the same Plot. I did it with: "hold on plot3(1,1000,200,'marker','.') hold off" But I can't do all points in manual. Is there a possible solution with copying all the points I need? Thank you for your help
Read the documentation for plot3
If `rotFuncHnd` is a function handle that produces the desired rotation on a single coordinate, with the first argument being the rotation angle and the second argument being the starting coordinate then the following will produce a nx3 matrix `pos3D_rotated` of rotated coordinates: pos3D_rotated = bsxfun(@rotFuncHnd, theta, pos3D) See the [bsxfun documentation](http://www.mathworks.com/help/matlab/ref/bsxfun.html#inputarg_fun) for more information. Note that this is generally faster than a loop but not always (see [this stackoverflow thread](http://stackoverflow.com/questions/12951453/in-matlab-when-is-it-optimal-to-use-bsxfun#12955706)).
Thanks! I've already been using a function handle for the rotations inside my loop so I may try this out. I thought that bsxfun() was being deprecated though. Is it good practice to use that?
I haven't heard anywhere that it was being depreciated but it's certainly possible. Now that I'm looking into it though it looks like as of 2016b you don't actually need bsxfun anymore, at least with some standard operators. [see this blog post](https://blogs.mathworks.com/loren/2016/10/24/matlab-arithmetic-expands-in-r2016b/)
A 'Dimensions must agree' error usually means that the function is expecting for the arguments to be the same size. Do you know the size of A and B when you terminate ginput with return? As a separate issue, it's generally considered poor style to have while loops of the form while 1 ... end. Though your program will work with this, there's probably a high chance that you will lose points on your assignment if the course is focused on MATLAB or coding.
Thanks I forgot that i had to use the for loop outside of the function file.
Do you know how to use the debugger in Matlab? This would be a good opportunity to learn to use it, or at least do some basic debugging by printing some lines to the console. I'll give you an additional hint -- do you know what the size of p and q are in the cases where: 1. the user clicks on a point 2. the user instead hits return
So there are a couple ways to clean this up. 1. Use abs function to replace the +/- conditions. e.g. find( abs(thermo1-thermo2)&lt;4 &amp; abs(thermo3 - thermo2) &lt; 4) ) 2. Split the conditions over multiple lines and then combine. e.g. dex1 = find(abs(thermo1 - thermo2)&lt;4); dex2 = find(abs(thermo3 - thermo2)&lt;4); index = intersect(dex1,dex2); 
MATLAB sure does make the girls moist
I am very new to matlab. Any guidance on how to set up the code to solve for the Nonlinear Elastic Response of the SDOF system would be greatly appreciated. 
There's a probably a way better way to do this, but what about: matrix = ones(50,50)*2 - diag(ones(1,50)); 
I reread your question and you seem to want both diagonals set to 1. You can use eye(N) To get the identity matrix. Then you can flip the matrix with flip(M) So for your NxN matrix just do N = 50 2 + zeros(N,N) - eye(N) - flip(eye(N)) And you should have your target. Note that this works for N=50 but not for all N. *edited with EatMyPossum's suggestion and to include the other diagonal
How about the other diagonal?
Thanks! I didn't realise that.
I reread your sollution and noticed that you said it only really works for for some N. A bad sollution (bc 3 lines) is if mod(N,2)==1 matrix(ceil(N/2),ceil(N/2)) = 1 end A better solution is adding just matrix(ceil(N/2),ceil(N/2)) = 1 Because its cheap and non-breaking in the other case
Thanks for the help, I never even considered manipulating the ones or zeros i was trying to do it using the repmat function. 
I did say it does not work for all N :)
*edited :P
Is it really that big of a difference?
You can try using Octave instead, it's a free version that uses matlab's language. It's not as robust, but in my experience it's been more than enough for my needs
I'de have to test. depends on the matlab version too. run this and tell me: nReps = 100 ; N = 10000 ; tic for i = 1 : nReps a = zeros(N) +2 ; end tZeros = toc tic for i = 1 : nReps a = ones(N)*2 ; end tOnes= toc 
I've decided to just calculate the inverse matrix and use that to come up with the projection points so I don't have to use linsolve. I'm swamped with other course work and the upcoming career fair. Once things settle down, I'll probably look into this a bit more. Thank you for your time.
Here is an excerpt of my codes from an old assignment that might help you, this made a 2D heat map for pressure on a cylinder: f1 = figure('Name','Doom P','NumberTitle','off'); hold on; grid on; axis equal; axis([-2 2 -2 2]); set(gca,'XTickLabel',[]);set(gca,'YTickLabel',[]) set(f1,'position',scrsz/2.5); movegui(f1,'southeast'); th = linspace(0,360,length(Pave)-1); data(:,1) = cosd(th); data(:,2) = sind(th); data(:,3) = Pave(2:end); x=linspace(min(data(:,1)),max(data(:,1)),150); y=linspace(min(data(:,2)),max(data(:,2)),150); [X,Y]=meshgrid(x,y); F=TriScatteredInterp(data(:,1),data(:,2),data(:,3)-1); contourf(X,Y,F(X,Y),100,'LineColor','none'); colorbar colormap jet title('Cylinder P'); hold off Edit: I no spells good
This is a hard problem, and stock solvers aren't appropriate to solve it. Use existing code like this: https://uk.mathworks.com/matlabcentral/fileexchange/16204-toolbox-sparse-optmization/content/toolbox_optim/tests/html/test_tv_lagrangian.html
In matlab, this can be done with persistent variables. Here's the matlab documentation: https://www.mathworks.com/help/matlab/ref/persistent.html And an answer from the matlab forums with a different example: https://www.mathworks.com/matlabcentral/answers/101556-is-it-possible-to-define-a-variable-as-static-within-a-matlab-matlab-file
Yeah, you're opening a can of worms here. Weighted TV is a fairly easy modification and there is code out there somewhere for that, or you could modify an existing package easily. If your likelihood function is quadratic then yes, it's equivalent if you reweight the data term to match the curvature of the quadratic. If it's not directly quadratic then you'd have to solve them jointly. If the likelihood is convex then you can again find code for solving this exactly. Otherwise, you will have to find an approximate solution with an algorithm like alpha expansion.
What do you mean you're not allowed to pass in `i`? That's the correct way to do this. /u/phsics is correct that persistent variables (called static variables in many other languages) will solve your use case, but this is terrible programming practice and will not scale. I've seen plenty of examples where some engineering or linear algebra course tries to teach coding in matlab without any pretense of teaching basic computer science or software engineering concepts, but are they actively trying to sabotage you? Please tell me there's more to this than it sounds.
So the task is to write a robot path planner. The professor provided a testing script that calls our planner in the mentioned for loop, and he preferred it if I didn't make any changes. I'm saving the robot's state and only want to initialize the state at the first function call, hence this issue. Persistent did do the job though! 
If you have the image processing toolbox there is an example using the coins image on the mathworks website.
How do I ensure I select only the appropriate half of the matrix?
I never get the point of these imgur spam links. Is there a link I'm supposed to click to get to said website? Everything is just a nude girl with a tacky click here photoshop banner. What's the point? 
Did you read the documentation for linspace? 
Couple of things: 1. `linspace(a,b)`, by default, divides the interval [a,b] inclusive into a vector of 100 equally spaced points. You can change how many elements there are through `linspace(a,b,n)`. Type `help linspace` into the command window for more help. 2. Useful tip: adding `keyboard` to a line in your code will pause the code at that line and give you access to variables defined within the function, which you can play around with in the command window. Type `dbquit` to end the program, or type `return` to continue running the program. Very useful for debugging purposes. 3. Be careful...`sum` is a defined command in MATLAB. You can use it to sum together all the elements in a vector (*cough cough*). 4. Pay very close attention to the language of the question....divide the interval [a,b] into *n* **subintervals**, not *n* **elements**. 5. If all else fails, do the problem by hand first. It will help determine if your issue is in the code or the method.
I think in a pure vectorized form you can do it one output dimension at.
I modeled one approach to the problem like this, but i wasn't able to get clean boundaries of my image like this. I am going to try it again with a new image with very clean background, no flash, etc.
Thanks, this worked! Would the persistent variable be saved after main.m executes? Like if I called main.m twice in a row, they would be using a shared persistent variable, correct? 
Use [double](https://www.mathworks.com/help/symbolic/double.html) Edit: You can ask whatever, just as long as it's matlab, not about pirating, not asking us to do your homework for you, and tagged properly.
Thanks for the response! I've been trying double for a while and I keep getting an error saying: Error using symengine DOUBLE cannot convert the input expression into a double array. Error in sym/double (line 616) Xstr = mupadmex('symobj::double', S.s, 0); Error in HW4_2 (line 17) x0 = double(x0) Any idea why thats happening?
This maybe naive question but have you ensured that you regions are closed? Another workaround is to use "bwlabel" it returns number of objects but I am not sure whether or not it returns properties like centroids and areas. 
Thank you! I'll try it out soon!
Ah you're trying to sub a numerical in. I though you were trying to evaluate a number that was given symbolically as is the case a lot with solve(). [subs](https://www.mathworks.com/help/symbolic/subs.html) is the way to go as /u/robo-terp suggested.
You're welcome.
depending on the difficulty of generating the figure (amount of data, etc), you could just save a script to re-create the figure from scratch every time, instead of re-using a .fig
+I ran the exact same code as you in R2015a and it worked without an error. However, I get the same error as you if I run tab([2 3]) = deal([]) Anyway, this works just fine too: tab([2 3]) = [] Except it is slower than doing tab([2 3]) = [[]] in R2015a at least.
Yeah efficiency is good definitely don't want to suggest otherwise. :) But I let it slide pretty frequently, frankly, **depending on context**. You can write some hella efficient code that is unreadable. There's contests for this sort of thing. :)
This should be fine. What happens when you try to do this? Do you get an error message? https://www.mathworks.com/matlabcentral/answers/47137-can-files-saved-using-64bit-matlab-version-be-read-into-a-32bit-matlab-version
Oh that's not too difficult to calculate, especially in the 4-connected case. And I bet you can get gradients for it based on image gradients. 
I would suggest creating a function handle using "f = matlabFunction(J,'vars',{x,y,z})". It removes anything symbolic and gives you a function you can call with "f(1,2,3)"
The gradients of TV are the sign of the difference between neighbouring values so they're all +/-1. Computing it is fast, it's just converging to the global minima (given the gradients) is tricky.
Thats matlab for you :). I think what is happening here is matlabs delayed execution stuff. Not every line is executed the same, it depends on the demand. I think zeros leaves the data uninitialised until you use it, than it's initialised to 0, and you'll never know. Ones does initialize imidiatly, therefore the data is written twice. The same thing happends when you pass data to functions. The data only gets copied if it's modified within the function. This can give counterintuitive profiling results if you don't know this. 
[removed]
You can use a switch block that selects 0 at the beginning. There is a clock block that gives you the simulation time that you can use. Alternatively, an enabled subsytem where the enabled signal is 0 for the beginning can work if you compare the clock input to 12 seconds, and place the pulse block inside. 
This code works fine for me using a MATLAB sound default file. If this code doesn't work for you, something unusual is happening. load handel.mat filename = 'handel.wav'; audiowrite(filename,y,Fs); [voice,Fs] = audioread(filename); t = linspace(0,length(voice)/Fs,length(voice)); plot(t,voice) winLen = 800; winOverlap = 400; winHamm = hamming(winLen); sigFramed = buffer( voice, winLen, winOverlap, 'nodelay'); sigWindowed = diag(sparse(winHamm)) * sigFramed; Much more likely is that `voice` isn't actually a vector. What does `size(voice)` return after loading your file? An audio file with multiple channels would return a matrix from `audioread` and `buffer` is the first place you'd run into a problem.
In which directory do I have to put "beta.wav" (which is the voice file I want matlab to read)?
When I use your code it says error "Cannot create file handel.wav. Permission Denied." Any ideas?
That's somewhat unusual -- it likely means you don't have write permissions in the folder you're in. Are you on a Linux or Mac version maybe? You could try the command `cd ~` first if that's the case. Ultimately, though, it's not really a problem you need to fix. What did `size(voice)` return when you tried running your code and got to the error?
Thank you, very helpful
What part of the document for xcorr is giving you trouble? 
What are the sizes of t and y? I bet you're plotting more than one vector in your first plot command. So the first two plotted are both ro. 
when you have a 1xN vector (x), and another 1xN vector that is a time shifted version of the first (y) , you would expect xcorr(x,y) to produce a 1xN vector as well, correct?? Instead, I am getting a 1x(2n-1) vector when I execute xcorr(x,y), and all of the values are NaN. I noticed that the first value for my sequence y is NaN and the rest are real numbers. Maybe that's screwing it up?
Ok, I understood how to bypass the NaN problem, according to this http://stackoverflow.com/questions/7036628/xcorr-for-autocorrelation-with-nan-values However why is xcorr giving me a 1x1999 vector instead of a 1x1000 vector? I am sorry if this seems trivial to you but for some reason I am feeling challenged by it. I appreciate you commenting on my post.
That's exactly what was happening. So when I made it just a circle, it made the first set blue, then the second red. When I set it to 'ro', it made both sets red circles. In both cases, it never actually got to what I thought was the second plot. Thank you.
Let's try breaking this down (winging it, so maybe someone else can validate): A fixed point q in the body frame is measured as p = R*q + o in the world frame, where R is a rotation matrix, and o is the body frame's position. To find world velocity, take the time derivative of p, leading to pdot = Rdot*q + odot (no qdot, since the point is fixed to the body). Rdot can be decomposed into Rdot = dR/dtheta_x * thetadot_x + dR/dtheta_y * thetadot_y + dR/dtheta_z * thetadot_z Assuming the rotation matrix R = R_x(theta_x) * R_y(theta_y) * R_z(theta_z), which corresponds to ZYX euler angles, then dR/dtheta_x = dR_x/dtheta_x * R_y * R_z dR/dtheta_y = R_x * dR_y/dtheta_y * R_z dR/dtheta_z = R_x * R_y * dR_z/dtheta_z with R_x = [ 1, 0, 0 0, cos(theta_x), -sin(theta_x) 0, sin(theta_x), cos(theta_x) ]; R_y = [ cos(theta_y), 0, sin(theta_y) 0, 1, 0 -sin(theta_y), 0, cos(theta_y) ]; R_z = [ cos(theta_z), -sin(theta_z), 0 sin(theta_z), cos(theta_z), 0 0, 0, 1 ]; dR_x/dtheta_x = [ 0, 0, 0 0, -sin(theta_x), -cos(theta_x) 0, cos(theta_x), -sin(theta_x) ]; dR_y/dtheta_y = [ -sin(theta_y), 0, cos(theta_y) 0, 0, 0 -cos(theta_y), 0, -sin(theta_y) ]; dR_z/dtheta_z = [ -sin(theta_z), -cos(theta_z), 0 cos(theta_z), -sin(theta_z), 0 0, 0, 0 ]; In the end, you will need: * XYZ angles * XYZ angular velocities * Location of point q in the body frame * Linear velocity of the body frame Which will give you the world velocity of point q on the moving body. Whew! I'm sure there are some simplifications that could be made. Edits for formatting.
Thank you! How do I find the XYZ angles needed for matrices though? Do I need to use an Euler solver? From my other comment: &gt;They aren't constant velocities, I have an excel file with the angular velocities in rpm for every second from 0 to 160 seconds. I know I have to convert this data to rad/s and then interpolate it. &gt;Basically I need to plot the angular velocity over time for a certain point on the body. And then also the angular acceleration over time. 
That sounds trickier, and could possibly depend on on how the angular velocities were measured (not totally sure). Ideally, you could integrate each velocity to get the corresponding angle, but there very well could be a noncommutativity that ruins that.
So interpolating the excel data would give me the thetadots needed for Rdot, right? And Rdot would be the angular velocity of the body? 
you could do a nested for loop, like: for i=1:nParticles for j=i+1:nParticles if (distance_ij &lt; 2*r) [vi vj] = stod(si,sj,vi,vj); end end end edit: I hate formatting comments on mobile...
I'm the wrong person to ask about tv(), but I suspect you have the right idea. I've also had great results from quadratic programming. I haven't used quadprog() specifically, but I've used the sqp options in fminunc to great effect. I should learn more about slack variables. 
So now I have tried this: n_particles=8; for ii = 1:n_particles s1 = s(:,ii); v1 = v(ii,:); for jj = 1:n_particles if ii == jj continue else s2 = s(:,jj); v2 = v(jj,:); if sqrt((s2(1)-s1(1))^2+(s2(2)-s1(2))^2)&lt;2*r [v(ii,:) v(jj,:)]=stod(s1,s2,v1,v2); end end end end Where I have my coordinates and velocity vectors in matrices: s=[s1 s2 s3 s4 s5 s6 s7 s8]; v=[v1;v2;v3;v4;v5;v6;v7;v8]; With this loop, I guess the different positions in the v-matrix should be replaced if they colide right? The way I then update my figure in my animation is with for each: c1 = [c1(1,:)+v(1,1); c1(2,:)+v(1,2)]; set(c1_figur,'XData',c1(1,:),'YData',c1(2,:)); (It should be mentioned that the c1 is actually coordinates of a circle that is being 'filled', but it shouldn't matter). For some reason the particles doesn't colide, even though they do when only using two particles the manuel way. Can you see why it doesn't work? I don't get any error.
I would probably reuse this code: https://uk.mathworks.com/matlabcentral/fileexchange/16204-toolbox-sparse-optmization/content/toolbox_optim/tests/html/test_tv_lagrangian.html with a different G and proximal operator for G. Otherwise you can replace TV with a smooth approximation like Huber, calculate the gradients analytically, and run fminc on it.
see the doc on [addpath](https://nl.mathworks.com/help/matlab/ref/addpath.html) to learn how to "set the path" (also [genpath](https://nl.mathworks.com/help/matlab/ref/genpath.html) might help.). The problem is something else though. YOu're runing the cifiopen function, but you forgot to pass it some parameters. My guess is it says funciton [...somethinghere] = ciftiopen(filename) ; at the top of the ciftiopen funciton ( run "edit ciftiopen" to check). To fix this error, pass an argument to ciftiopen when you call the function. So in stead of ciftiopen do ciftiopen('filename') (where you replace filename with the name of the file you have to open)
Why not write a subclass explicitly? What problem does this solve. 
I'm pretty sure he wrote a forward mode source transformation AD tool, using matlab's symbolic toolbox to produce the derivative code. The fact that he didn't include that as a tag, and the bizarre "self writing class" interface leads me to believe that he's unfamiliar with other work in this area. I haven't downloaded any files though, so that's very superficial speculation on my part.
For dynamic systems, jacobians and equations of motion are generally non-trivial to solve by hand. Subclassing from one of these generates them automatically from forward kinematics, kinetic, and potential energy, which are far easier to write by hand.
When you convert a string from a cell into a character using `char`, the result is a vector of characters with a length equal to the number of characters in your original string. For example, if the original string from the cell is `'word'`, then `char('word')` will produce a 1x4 vector `V = word`. In other words, `V(1) = w`, `V(2) = o`, etc. Naturally, this will cause a dimension mismatch if you want just a single column vector.
[removed]
Since you are using MATLAB 2012, this is prior to adding the ability of dot assignment to graphics objects. So anywhere you see something like ph2.MarkerEdgeColor = [0 0 0]; ph2.LineWidth = 4; hax1.View = [nn 30]; you will need to do... set(ph2,'MarkerEdgeColor',[0 0 0]) set(ph2,'LineWidth',4) set(hax1,'View',[nn 30]) This may not be all the places I used dot assignment, but should give you an idea of what I'm talking about.
Arrays. 
[removed]
Use csvwrite() instead. Excel can also open these files. 
3D or any N &gt; 2 arrays are a different type of data structure (ND array) than the usual vectors and matrices and even if you take a 2D slice, it will not support the transpose operation. That's the reason behind the "Transpose on ND array is not defined." error. I came up with the following vectorization. For i = 16, it's 3x faster than your version, for i = 1000, it's 30x faster. initialVector = zeros(2, 2, 16); initialVector(1, :, 1) = Centroid(1, :); initialVector(1, :, 2 : 16) = diff(Centroid(1, :)); vec = zeros(2, 2, 16); vec(1, 1, :) = cos(R); vec(1, 2, :) = -sin(R); vec(2, 1, :) = sin(R); vec(2, 2, :) = cos(R); initialVector(2, 1, :) = vec(1, 1, :) .* initialVector(1, 1, :) + ... vec(1, 2, :) .* initialVector(1, 2, :); initialVector(2, 2, :) = vec(2, 1, :) .* initialVector(1, 1, :) + ... vec(2, 2, :) .* initialVector(1, 2, :); EDIT: fixed index
Fourrier transform :D.
Your solution worked perfectly Do you know how I can make my "quivers" not overlap? There are two in the same file I tried to do clear all and close all but that didn't seem to work, I'm getting the error Error using quiver (line 44) DOUBLE cannot convert the input expression into a double array. Error in Matlab_project_214 (line 24) quiver(T, Y, 1./L, Q./L, 0.5);
Yeah, thats wrong. You're programming now man, if you "just do something cause it gave an error and this might work" you can usually expect another error. You have to understand how code works, what you want, and what you need to achieve it. Don't just "solve" errors by throwing the first guess against it and then being confused that it doesn't work. try adding t = 1 in stead of syms t. 
I figured it out! No worries
Good :)
Can we sidebar "If you aren't sure if you need to use syms, you don't"?
clear;clc;close all; dydt = @(t,y) sqrt(2*(t+cos(y))); % FUNCTION t(1) = 0; % TIME LOWER BOUND tend = 30; % TIME UPPER BOUND y_at_t1 = [pi/4 0]; % CONDITION y @ t(1) [t45, y45] = ode45(dydt,[t(1) tend],y_at_t1); plot(t45,y45) --------------------------- What is the entire homework problem? The placement of the [pi/4 0] in the ode45 function causes two separate functions to be plotted one with an initial condition of y = 0 at t = 0, and one of y = pi/4 at t = 0;
let M be a matrix with zeros M(M==0) = nan now M has no zeros anymore :O. 
+ Thank you, my code is beautiful now!
Alright so I need to plot a phase plane of a pendulum energy equation, but I need to plot d(theta)/dt agains theta. Where theta is the angle of the pendulum. 
Thank you very much. This is about twice as fast for my expanded 48x48. Edit: oh, right, it's not 3x as fast because it's only a fraction of my code! You don't have to clarify the : in cos(R)? Interesting. Edit 2: it highlights the 2's in the second initialVector statement of yours and says it terminate it with a semicolon. Just a bug? Edit 3: this goes away if I remove the stray parenthesis you've got.
See the documentation for csvwrite here: https://www.mathworks.com/help/matlab/ref/csvwrite.html Since both csvwrite and xlswrite use the same input format, you should be able to just change every instance of xlswrite to csvwrite with no issues.
Thank you so much! This is extremely helpful :) Really, much appreciated. 
I use a Garmin GPS watch with HR monitor. Once data is synced from the device, you can access it using the Garmin Connect site or their Training Center app. Exporting as a CSV is the easiest way to import it into MATLAB for analysis.
Parallel processing is only really worth it if you have thousands of long independent computations. If you're doing simple calculations, vectorizing your code would probably have better performance gains than using parfor or other parallel methods. If you're finding single threaded performance is running better than parfor, what you're doing isn't best suited for parfor/whatever to begin with. You can't magically divide a problem by 4, parallelize it and expect it to run one to four times faster than normal. I do image analysis on MB to GB size medical images, and running the same computations in parallel vs not is still barely noticeable. Apples and oranges, yes I know, point is not everything is worth making parallel. Creating the parallel pool sometimes takes longer than some calculations to finish. Without any other information, I'd say don't bother with it in the first place, and instead work on using in-built functions intelligently to save time wherever possible. Use the profiler to see what takes the longest, and see what can be done to bring that part down.
I've done as much as I think I can to speed up aspects of the code (vectorization, incorporating sparse matricies when possible, etc.). I'm still looking for other ways to improve efficiency, but this code is easily parallizable. I replied to someone else with a better description of the code, but here it is again: Its a gradient based inversion algorithm. To summarize: Define an initial model and a forward operator (to predict what data should look like given some model), calculate synthetic data using model and forward operator, compare to real data, calculate how to update the model to better match the data (uses finite differencing and line search methods), update the model, repeat. The above processes it repeated a certain number of times at a given location, and then it moves onto the next location. Each location is independent, so its easy to parallelize and run the inversion at different locations in parallel. I'm still running tests, but eventually this will be run on some 30,000 locations, so parallelizing it is definitely worth the effort. EDIT: ALSO, I've timed it both single threaded and parallelized. My best parallelization is currently about a factor of 3 faster than running it single threaded (MATLAB inherently parallelizes some functions, so its not a linear speedup when parallelizing, but its still definitely worthwhile).
Run the profiler, or post relevant parts of the code here. What part takes longest? What you're saying seems like a series of optimizations. Your forward operator and initial model at iteration 1 give x many locations, which give rise to probably a geometric or exponential progression of locations as each iteration finishes, correct? So monte carlo methods? I have no idea how it actually is in your code, but this doesn't seem like it can be made parallel easily, if it can at all. You calculations may be independent, and made parallel, but that is probably it. Your downstream calculations are dependent on the incoming model, which wouldn't be communicated in between parallel nodes. EDIT: If the code is running in seconds, why even bother making it parallel at all?
You have the (kind of) correct idea at a single location. I use a determanistic approach (gradient based descent), not stochastic, but it is fundamentally an optimization problem. I can finish 1 iteration at 1 location in a few seconds, and need 10-15 iterations, so a given location I can finish in under a minute. **BUT, I need to repeat this at ~30,000 locations**. And each location is entirely independent of the others (i.e., the results from a current iteration depend on the iterations that come before it, but do NOT depend on the results at other locations). I will be running multiple locations in parallel, I am NOT parallelizing within a given location. As such, my best parallelization (1.35 sec/iteration) produces results in a week. Not parallelizing (~4 sec/iteration) makes it take 3 weeks. Big difference.
Computation wise, this is longer by quite a while than anything I've done. What is the biggest time spender per iteration? Is there any way to bring the time per iteration down? Sometimes, coding the PDE's in c++/fortran then wrapping the code into MATLAB can get this part done considerably quicker. I'm assuming you've tried something like this: locations = []; parfor i=1:length(locations) % assumed to be 30,000 model.(['location 'num2str(i)]) = do_calculation(model, location(i)); end And you said this did not perform as well? This may be the fastest I can think of without trying to solve the iterations quicker. This means doing each location *and subsequent iterations per location* in parallel, not just the iterations themselves. 
You should look into whether you can push this to the GPU. If your operations at each location in your optimization are sufficiently simple, you could see a massive speed improvement. Try out `gpuArray` in conjunction with `arrayfun` for example. https://www.mathworks.com/help/distcomp/arrayfun.html and https://www.mathworks.com/help/distcomp/run-element-wise-matlab-code-on-a-gpu.html#bsnx7h8-1
This is a signal processing / analysis question, not a matlab question, but the answer you are looking for is discrete fourier transform. The matlab implementation of this is `fft`. This function will give you all the frequencies in the signal from ~nyquist limit for the signal to half the total sample time. The documentation is good, but only if you understand what a dft is and how it works first, so read up on that. Wikipedia actually does a decent job. 
This is a guess, but it might be running out of memory trying to store the hessian, which is a 65536 x 65536 array. I think these algorithms default to BFGS for approximating the hessian. You could try switching it to L-BFGS (if available), which should take less memory than BFGS, or even switch to steepest descent which wont even try to calculate (or store) the hessian.
I have unkowns in both d and F
I know the reply is delayed but I wanted to thank you for the honest reply. I ended up sorting out the issue by simply thinking about the problem. Sometimes you just need a small slap. 
I haven't looked into it in depth, but I believe MATLAB works via CUDA. On problems where I could make effective use of the GPU, it's been extremely effective -- a couple orders of magnitude of improvement.
I have spent a lot of time trying to parrellelize some code I have been working on for years. Multi CPU never got me anywhere, but I have had a lot of success using GPU. There is one catch, most GPUs have REALLY lousy double precision performance so you need to convert your data to single precision if possible. bsxfun can also be used as well as arrayfun
I'm pretty sure the last few version of Matlab have had no limit on the number of workers for one license. Use parpool to set up the pool first.
Ok, so I have spent some time screwing with this sort of issue. If parfor is being a problem, one possibility might be using spmd. For example, I sometimes prefer spmd to parfor when my code involves retrieving data from a database, because database connections must be opened inside a parallel code block, and I don't want a connection getting opened and closed for every loop iteration. Have you tried playing with the number of workers in the parallel pool, as well? I know that in some cases, you can actually lose efficiency if you go by logical core count (i.e. hyperthreaded "cores") rather than physical core count. What results do you get if you run your code using parfor with pool size = 4? I would also recommend running the code with task manager open to view CPU and memory utilization. Lastly, in an spmd block, you may be able to get some additional efficiencies by avoiding repeated calculations. If some data can be saved and reused, a worker in an spmd block can save and reuse that data. 
Its not a licensing issue, its that matlab it by default set to limit the number of workers to the number of computational cores (So on a 4C/8T CPU, the default limit is 4 workers). I looked into it more though and figured out how to bypass this. Initially i didnt think you could change this setting, but I now see you can. That said, I cant see how setting it above 8 workers would benefit me, but upping it to 8 workers helped a little...Using parfor with 8 workers resulted in ~2.05 sec / iteration. This seems to be consistent: in both use cases (using parfor and using multiple instances of matlab), changing from 4 to 8 workers speeds up execution time by ~20%. When using parfor it drops time from ~2.55 sec/iteration to ~2.05 sec/iteration (~19.6% reduction). When using multiple instances of matlab it drops it from ~1.6 sec/iteration to ~1.35 sec/iteration (~15.6% reduction). HOWEVER, in both cases the "multiple instances of matlab" type of parallelization is ~35% faster.
Cool! Nice job
if some variable (say *x*) is a fraction like that, use the *double* function to convert it to a floating point value. x=double(x); When doing work with functions using symbolic variables, I believe if you use *feval* it will output as floating points instead of large fractions. I think its also much faster. You can use *matlabFunction(F)* to convert some symbolic function *F* into a form that *feval* will accept. That said, unless you really need symbolic functions for some reason, I would avoid using them.
I applaud you for getting this far! I think you are just hitting the limits of ML compared to "real" languages. I mainly code in matlab as well so I 100% understand. But there is a reason commercial codes use python C++, F90 etc. 
Do you have access to a cluster version of ML?
This also works, and might be slightly faster: M(~M) = NaN;
I like this :), but i do think that it might be better to avoid using matlabs loose typing. i.e. here implicitly casting your M matrix to boolean and then negating. It's a lot of fun, but does not increase the readability of your code, and i don't think the speedup will be noticable.
I tried your code 4 times, and i got conflicting results so i made my own test: M=randi(5,2000)-1; %less zeroes, also more other values M0 = M ; %repetitions N = 100 ; t = zeros(N,2) ; for i = 1 : N tic M(M==0)=NaN; t(i,1) = toc ; M = M0 ; tic M(~M)=NaN; t(i,2) = toc ; M = M0 ; end mn = mean(t) sd = std(t) mn = 0.0444 0.0558 sd = 0.0006842 .0007671 This clearly shows that in fact my method is faster... even after changing the 5 on the first line to a 2 gave the same results. 
Aha right I see, I have time constant as reciprocal of T and block diagram reduces to my desired first order. Never before has so little said so much, thanks a lot!
So this in interesting. As you have it set up I get results similar to you that show that M(M==0) is faster. BUT, if I change the problem slightly, it changes to M(~M) being faster. Specifically: % repetitions N = 100 ; t = zeros(N,2) ; for i = 1 : N M=randi(5,2000)-1; %less zeroes, also more other values M2=M; tic M(M==0)=NaN; t(i,1) = toc ; tic M2(~M2)=NaN; t(i,2) = toc ; clear M M2 end mn = mean(t) sd = std(t) mn = 0.0400 0.0317 sd = 1.0e-03 * 0.8602 0.6362 For reference, when I ran your code I got: mn = 0.0405 0.0428 I also modified my code to use the "M0" like your code does, such that the main loop was: M=randi(5,2000)-1; %less zeroes, also more other values M0=M; tic M(M==0)=NaN; t(i,1) = toc ; M=M0; tic M(~M)=NaN; t(i,2) = toc ; and I got: mn = 0.0406 0.0430 SO, it seems to come down to how you get the M matrix. If you make a duplicate before you replace zero values, give 1 duplicate to each method, and then clear them before the next iteration (my code) then M(~M) is faster. If you make a "backup" of M and then restore M after replacing zeros with one method (your code), then M(M==0) is faster. Very strange. Ultimately I doubt it matters, since I cant really imagine a situation where this type of thing would end up costing all that much compute time. But I find it interesting how different methods that your think should be the same end up producing different results.
How does the "many instance" method handle loading data, and how will the final version load data? I don't know for sure how I would expect different methods of loading data to affect performance, but I do think that it'd be wise to compare like to like. So if, for example, you run your "multi-instance" analysis by separating your text data into *n* .mat files, I would try running a parfor loop in which you create a *n* x 1 array of strings containing the paths to the *n* divided data files, then, within the parfor loop, load the file and do exactly as you do with the multi-instance code. This basically functions more like an spmd block, so you could also try that. I actually think I see another issue that could explain your issues with parfor. I see that you're loading data within the parfor loop by logical indexing. I'm not certain, but from what I recall, I think that doing it that way makes the indexed variable a "broadcast variable," meaning that the entire array will be duplicated on all workers, which might be a substantial chunk of ram. If you pre-sort your data (e.g. into a cell array, where each cell contains the data for one location), only the data in a single cell will be loaded on each iteration. So.. I'd give that a shot, maybe. I am hoping that either loading data within the loop or divvying the data into cells for easier slicing will make parfor (or spmd) work effectively for you.
Took me a while, but i figured it out. What you see here is delayed execution. When you say M0=M; M is not copied immediately, but a variable M0 is made, with its data referenced to the same data as M. Only when you change M, matlab notices that M0 is not the same as M anymore, and starts to copy M for M0, and subsequently modifies M. This is what causes the strange results. So the time you measure is both the execution of the copying of the data, which appears in the code to be done earlier, but matlab optimises it to sometime later, and also nanstuff. PS: I love how simple questions on this reddit get out of hand when someone suggest an alternative 
I didn't know that existed 
Didn't you read the documentation? 
Yeah, but I call them on it anyway. I don't even know why. 
Well, I used to be like that, and I figured it out after enough browbeating. So I like to think there is hope. 
When you run into a problem where there's no good solution, it should be an indication to you that you have made a mistake in the basic architecture of your code. You should back up and solve the problem in another way. Ask yourself, why do you need to do this? What problem are you *actually* trying to solve? Is this a reasonable way? What might be a better way? 
You want [function handles](https://www.mathworks.com/help/matlab/matlab_prog/creating-a-function-handle.html), which you can call directly (without the `run()` command) in the loop. However, are you sure you want multiple functions? Should it really be one function, called with different input arguments? That is a much more typical use pattern.
Tough to look at the documentation of a function you don't know exists. Google would have led to the `interpX` functions pretty quickly, but that's an entirely different question.
I guess I would say that I would expect that fixing the indexing should improve computation time *by* reducing ram usage. &gt;EDIT: some quick googling seems to indicate that global /persistent variables and parallel pools dont play nice together. This is too bad (though not entirely unexpected). It also means that for the PARFOR (or similar) method to catch up to the "multiple instances" method would require closer to a 50% reduction in execution time.... I think this is where spmd comes in. What exactly is the purpose served by use of global variables? If it's sharing data between workers, there are plenty of ways to do that in spmd (though not parfor).
I'm more like a dog person
You code is both unreadable in the format you provided, and riddled with errors such as missing multiplication symbols. If you tab each line it will present in reddit code formatting 
&gt; What exactly is the purpose served by use of global variables? The way the code it set up there are 3 important sub functions that get called a lot: 1) a function for the finite difference gradient 2) a function for the error function value 3) a function for forward modeling In particular, when I make a call to the gradient function, it in turn calls the error value function (n times, where n = num_model_param), which in turn calls the forward modeling function. Sharing variables served 2 purposed: I am using global and persistent variables to pass data between these sub-functions and to prevent these sub-functions from recalculating any properties they can avoid. Even simple things like length(model) = num_model_param end up taking time when you compute them hundreds of thousands of times (each iteration at each location makes ~2000 calls to the error value and forward modeling functions). I can pass data between these functions using inputs and outputs (in fact I was doing thisup until yesterday), but using global and persistent variables speed up my code by ~20-25%. It dropped non-parallelized execution from ~4 seconds/iteration to ~3 seconds/iteration, and dropped parallelized execution (with 8 instances of matlab) from ~1.35 seconds/iteration to ~1.05 seconds/iteration. Its not a matter of *needing* to use them, just that it improves efficiency. I admit I havent worked with SPMD much in matlab. Could I set up a variable sharing system using SPMD similiar to what I am using now with global and persistent variables?
Huh, I guess it can. I never took the time to look at the documentation for "mean" lol. Good to know.
That's awesome. Keep thinking like that as you gain experience, and eventually it becomes second nature to structure your code effectively from the start. 
Sounds about right. Your two signals are centered at zero, so the positive component will cancel with the negative during each period. So you're only integrating over part of one period and grunt a small number. 
thanks... this worked
&gt; Are those values constant across all locations? If so, you could try simply writing them into the code as constants. Some (not all) are constant across all locations. I could do this with some of them (and before I implemented global variables I did this for a few of them). For many though it is not feasible since they are user defined parameters (such as a weighting variables) that will frequently change as I am testing the code, and it would be a pain in the ass to change them all everytime I wanted to modify their value. &gt; I'm also curious, what version of MatLab are you using? 2016a and 2016b (I use 2 different systems that I use). In 2015b (i think) they significantly improved the execution engine, but I havent seen much difference between 2016a and 2016b. Ultimately the code will be run on the 2016b system. &gt; The chief advantage of spmd is mostly for giving workers different tasks, as well as controlling how data is distributed. As I said im not too familiar with using SPMD, but it sounds like the extra control it gives could be useful. I will have to experiment with it some. &gt; Spmd is also helpful...if in your analysis each iteration at each location required some information from neighboring locations. So, I am assuming locations are completely independent of each other. To be specific, I have a 3D dataset that is roughly 200 x 200 x 600 x 40 (X x Y x Z x # data points per physical location). From this data I am trying to find a ~ 200 x 200 x 600 x 3 model to explain the data (using 3 model values at every physical location). I am defining a "location" by X and Y coordinate, meaning that the "data" at each location is ~600 x 40 and the model is ~600 x 3. The model at any given Z value will depend on the model at (some of) the other Z values at that location, but not on the model at other X or Y locations. The data is setup in such a way that the dependence on Z is much higher than on X or Y, so this is mostly valid. Ideally I might want to put some constraint on X and Y (e.g., the model is smoothly varying), though that would make the problem more complicated (and I believe much more expensive to solve). It would mean that I would have to run all locations together. I would need to find the gradient / search direction / stepsize for the entire model within a given iteration, since I couldnt update any locations without effecting all the other locations. It seems like the way you suggest ("have each worker handle a chunk of locations, then send data from locations that neighbor another worker's chunk to that worker.") would be a good way to go about it, but would still make it quite a bit slower to add this in. &gt; In spmd, I can have worker 1 load data and pass it along to each other worker ... Alternatively, I can have each worker open its own connection and work its way through a separate chunk of data So I have a question how best to use workers to connect to the data. Ideally I would like it do do something like this: 1) worker loads the data it needs for the current location (data probably saved on disk) 2) worker processes the current location until all iterations are finished 3) worker exports the results to part of a combined result variable/file (results probably saved on disk) and clears unnecessary data (i.e., stuff that only pertains to the location that was just completed). 4) worker automatically moves on the the next location in the que and repeats the above process If this possible to accomplish? If so how? and is there a better method you might reccomend? The size of the data associated with a particular location is pretty small (~600 x 40 array of data, ~600 x 3 array for the initial model). This amount of data should load almost instantly, and should keep a worker busy for a minute or two. Thanks for letting me pick your brain. I appreciate it.
Oh yeah, this would make a lot more sense if you watched the actual ending sequence first: https://www.youtube.com/watch?v=mGKjPD_BNAE
Try rseek.org - works very well for searching for R help.
It sounds like you got it figured out, but for future reference if you need to do something like this the "eval" function would probably work. I don't really recommend doing so unless you really have to...un general id say restructuring your code is a better option. But, "eval" should work in a situation like you posted. 
As an alternative to using fft, you could compute the autocorrelation. If the signal is periodic there should be evenly spaced spikes in the autocorrelation, where the spacing corresponds to the period (in number of samples). fft is probably better (and definitely easier / cheaper to compute), but thought I'd recommend an alternative approach. 
Not very elegant but you can send system commands with "[system](https://fr.mathworks.com/help/matlab/ref/system.html)". So you could have a conditional statement that checks for OS and gets the CPU usage. Another way is to use Java in Matlab.
Thanks you were right about that. Do you know if there's a way to provide the gradient, but not use the hessian? I'm fiddling about with the different options but I'm not too sure if that's possible or not.
Thank you
1. I use Matlab to make quick prototypes of functions I need and to test concepts. I would define almost all my work in Matlab as "programming" and almost zero of it as "scripting". 2. Matlab is designed to do matrix calculations, signal processing, simulation and stuff like that. It usually involves math. You can do other stuff but there are probably better tools for that. 3. Machine learning is fun but requires foundations. There are free courses from like MIT out there, so it's not impossible to learn. Matlab has some support for ML and is quite easy to work with. I've heard good things about ML in Python. 4. I use Matlab to write software that is very mathematical (like signal processing, control loops, stuff like that). 
Thanks! I've been playing around with those settings already and it seems to me like setting Hessupdate to steepdesc stops it from using the gradient at all, and any other setting will try to calculate the hessian and throw memory errors. I'm sure there's a perfect combinatino of settings here somewhere, though, at least I hope so!
Are you using the parallel computing toolbox? If so, just use something like parfeval to have it handle this load balancing for you. In terms of threading, outside of using the parallel computing toolbox, MATLAB only really benefits from multithreading for math operations. If you aren't using these, then maxnumcompthreads won't help you.
1. Most of the MATLAB I do is programming, not scripting. However, it's not usually something people use for developing generic software; it's for things like analysis, modeling, calculations, and controls. 2. You only need as much mathematics foundation as the math you're trying to do with it... this doesn't really have anything to do with MATLAB. If you are going to try and solve a complicated mathematical problem with C++ (or some other language) vs MATLAB you still need to understand the math regardless. 3. I'd suggest you just zip through one of the free machine learning courses (like the very famous [Stanford one on coursera](https://www.coursera.org/learn/machine-learning) or others) and see how you find it. A single online course is obviously not going to train you to adequately do something that people get entire graduate degrees in, but at least you can see if it's something you'd like to get some proper education on. 4. MATLAB has a [machine learning toolbox](https://www.mathworks.com/products/statistics.html) which lets you do basic machine learning without writing any code; if you want to do more complicated work you'll need to study machine learning either on your own now or within the context of a job that will pay you to spend time self-teaching. Can you still take a course or two on it or have you already graduated? 5. (not that you had a 5, but....) Rather than making too many judgements about hypothetical tools that you haven't tried, I strongly suggest you just start working through some MATLAB tutorials and work your way up to some basic ML projects. If you don't have access, you can use Octave which is free open-source MATLAB alternative which is nearly identical. (The coursera ML course I linked above uses Octave.) MATLAB's online documentation and examples are excellent so there's not really any reason not to just try it out.
&gt; Are you using the parallel computing toolbox? No. I have multiple different instances of Matlab open. I manually break up the data before hand and manually recombine it afterwords. It a pain in the ass but I will only have to do it once or twice. I found this to be more efficient than using a parfor loop by ~40%, though at some point (when I dont have a deadline coming up) I will experiment with using other parallel toolbox features (sdmp, parfeval, etc.) &gt; MATLAB only really benefits from multithreading for math operations Ive tested the code with different numbers of available threads and it benefits some from having multiple threads, which makes sense since there are quite a few math operations used in the code. Its certainly not a linear speedup (if it was there wouldnt be any point breaking up the code into multiple single-threaded chunks)...BUT it helps enough to possibly make a difference in case a couple of the instances of matlab finish way before the others (for whatever reason).
Seems like you are making a digital to analog converter. Make a truth table for all possible values. The columns will be the values of your B0-B3 vectors. Sorry I'm on mobile right now. Will comment again if no one else responds.
The binary representation of 15 is 2^0 + 2^1 + 2 ^2 + 2 ^3 = 15 so a vector representing that would be [1 1 1 1]. The four vectors you need to create- B0, B1, B2, B3 probably need to contain the binary representation of each number 0-15 with another zero at the end, so they will have 17 values each. B3 contains the bit for all of the cubed terms, B2 for the squared terms, and so on. So in my example above, the last 1 in the vector appears in the 16th spot in the B3 vector. Simarly, the last bit for 14 is in the 15th spot in the B3 vector, and so on. So, write out the binary representation of the numbers 1-15, then fill each vector with 1s and 0s accordingly.
Very interesting question. Following.
 I'm familiar with truth tables but only in terms of logic gates. Would it just be as /u/bread_taker suggested and be the columns of all numbers 1-15? Thanks for the reply btw, I didn't realize it was being represented in columns like that.
Since you're not really using Matlab native threading to do this, nobody can give you an answer. You've designed your own parallel processing infrastructure, so you'll have to answer your own questions about it. 
Thanks for your help.
Since it seems as if you're getting the output that you need, I will just add that I'm not a fan of the wording of this assignement. It always amazes me how bad some instructors are at this.
Yes, just like he suggested. It is very similar to what you did with logic gates. As if you were making a table of all the possible inputs 0-15, plus an extra row of zeros at the bottom of the table to represent the input returning to zero. 
Also for future reference, you can type "help xxxx" in the MATLAB command window to bring up useful information on a host of built-in functions, classes, ect. 
Im not really looking for a "this is the absolute best way to do this" answer, since (as you point out) the use case is rather unusual. BUT, ideas would still be nice. If nobody suggests something better I will probably try storing the info I need to determine if/where to add a thread in a file that all instances have access to. The code is designed to repeat the same task over and over again with different input data, and each time the task takes ~2 minutes to complete, so checking this file everytime i restart this task seems like it would work well and be easy enough to implement. I'll update the post when I find something that works (in case others want to use it). However, that doesnt mean that people cant share ideas about what *might* be a good way to do this, even if they never personally implemented something like this.
Oh, awesome. That's pretty neat. Thanks again for your help.
Yeah, it seemed like he could have definitely worded it better. Unfortunately, i've gotten kind of used to that lol.
1 + eps does not equal 0 and 400 + eps does not equal 0
But seriously, you need to read up on floating point numbers (as opposed to fixed point numbers) because that's applicable for numerical computing in any language. In short though, larger floating point numbers have a larger distance (eps) between them.
Looks like I do. I've never used it before though.
Can we sidebar "If you aren't sure if you need syms, you don't"?
You should recheck what `a` and `b` represent.
Aren't you able to get that from u/Rynyl's answer?
[removed]
If you only mean the labels, x-axis, y-axis and title, you can set it as blancspace. For the limit-labels you can probably change the ticklabels (see GET and SET function, see thread at http://se.mathworks.com/matlabcentral/newsreader/view_thread/124848)
You're right
[removed]
Your problem isn't really a MATLAB problem. --- I'm not sure how meaningful it is to interpolate for 0.1 second increments when your data were taken in 1 Hz. --- For rotation kinematics: theta := {roll, pitch, yaw} % inertial frame angles DCM_theta := R(theta) % direct cosine matrix \dot{DCM_theta} = dR(theta)/dtheta * \dot{theta} ... (1) However, you'll suffer from incredible drift if you numerically integrate with (1). The rest should follow pretty easily. 
i believe the reason your plot doesn't look as expected is because you're not using the correct x-axis values. create an interpolation time vector, assuming your data is at 1 Hz, or one sample per second, `t_interp = min(t):0.1:max(t)` then for each of your interpolation values, do `phi_interp = interp1(t, phi, t_interp)` then plot, using the interpolation time vector as xaxis points. `plot(t_interp, phi_interp, '.')` to compare to original data, `hold on; plot(t, phi, 'o')` 
Your method for including lateral constraint seems like it would be efficient. I knew I would have to switch to calculating the error at all locations for every iteration, but the way you describe sounds like a good way to go about parallelizing it. I have a more immediate deadline coming up that I need to have results generated on, but I think I will probably try adding in these constraints after it passes (I will still be working with this code/data). &gt; Have you had any luck either improving the performance of parfor or otherwise finding an efficient single-client solution? No, and at this point I think I am going to drop it for now. I still havent really explored using SPMD, and thats something I might do later (again after this deadline passes). For now though I'm been trying to further reduce the time per iteration. I've been trying to modify the stepsize code, as well as reduce any inefficient re-calculation of variables throughout the code. The new stepsize code I am using may produce slightly worse results, but is much faster (~0.5 sec per iteration total) and I'm still tweaking it to improve those results. Thanks again for the suggestions. I have found your comments to be very useful, and I'm sure I will refer to them when I give parallelizing another go at some point after my deadline is passed.
That sounds horrific. Why not just read the serial port with Matlab?
MathWorker here. The execution engine is implementated in C++, while only the matlab desktop is currently implemented in Java.
I see what you're saying. The model you have seems to be non linear with some amount of cross coupling. You could model it if you physically write out the equations and try drawing it on paper which is what I would do if it not a real time system. It would make more sense. Since I don't know what kind of system you're dealing with, I would suggest linearizing it with Taylor series expansions for state space. You would then end up with something like x dot=Ax +Bu+Bv y = Cx + Du+ Dv where the last components (Bv and Dv) will be some form of a disturbance owing to the non linearity. However, that would mean choosing precise linearization points. That is what I would do for a real time system. 
You have to do some algebra on the top row to get all the unknowns on the right side. Right now you have: u1=-1/20 k11 + u2 k12 + u3 k13 Note that k11/20 is a constant.... Hope this points you in the right direction! 
i think you should gather the unknowns to the right side. So you can turn it into a system such as f=k*v and solve for v,. V=k^(-1)f. Try to modify k,v and f (you can add rows and columns) without changing the system of equations.
 %make a plot ha = plot(rand(1,10)) for i = 1: 10 %change the Y data in a loop set(ha,'YData',rand(1,10)) drawnow ; %show the change pause(0.5) ; %pause a bit end 
You could draw a new graph each loop iteration. But the best thing to do is probably to save your data and plot it after the loop. It is good practice to separate the calculation of the data and the presentation of the data. Calculate first, present after.
As the others have said you want to rearange it into a form with all the unknowns on one side, with some basic linear algebra you can derive the following: inv(cat(2,[1;0;0], cat(2,-k(:,2),-k(:,3))))\*(-1/20)\*k(:,1) , which will give you a vector of the solutions for u 
 Cp = dh / dT So that means in the (T,h)-diagram, Cp is the slope right? [google](https://www.google.nl/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;ie=UTF-8#q=get+the+slope+from+a+dataset+matlab&amp;*) -&gt; [mathworks](https://nl.mathworks.com/matlabcentral/answers/109076-i-have-x-and-y-data-how-can-i-do-linear-fit-to-the-data-find-out-c-of-linear-fit-line-and-slope-wi)
hehehe i think i see whatssaap here, and your code seems to be correct. remember that: &gt;Cp is the slope right? It's a homework question soo, that's all i'm giving you. 
 %Calculate specific heat by using linear regression load SteamTable.mat n = length(Tvals); %n is the number of terms cp = (n*sum(Tvals.*hvals) - sum(Tvals)*sum(hvals)) / (n* sum(Tvals.^2) - (sum(Tvals))^2) This gives me a value of .5075, shouldn't the output be an array of numbers for each temperature given? 
Whats your level? This seems like a question you should know hte answer too. 
I'm in my fourth semester, but I am taking thermo for the first time this semester
In which case i'm not answering that question :P. Probably [wikipedia on linear regression](https://en.wikipedia.org/wiki/Simple_linear_regression) holds all the info you need to answer it yourself
Linear slope, constant slope, so cp will be the same throughout. I may need to take a nap.... 
Hahaha yeah, but deadlines XD. 
In MATLAB, to read binary, you use the function `fread`. The SRTM data is listed as 16-bit integers, so you read it like: altitude = fread(fid, '*int16');
It's already binary (unless it's zipped, according to where you downloaded it from). You might have to use `funzip` first. 
It was zipped when I downloaded it, but I unzipped it into my documents folder and it reads as a .hgt file. 
Then it is already a binary file. 
&gt; Long story short I can't understand how to see how many inliers I have before running "estimateGeometricTransform" (...) me neither. But you can use a [try, catch](https://nl.mathworks.com/help/matlab/ref/try.html) block to ignore the error and go on with the next iteration. 
+This is what I was looking for, thanks.
You know there will be `m*n` elements. So, you can create a vector, `v` which has that length. You can then loop through, like you are, and assign each element of `v` from your matrix `X`. Your index variable for `v` will be a function of both `i` and `j`. 
Updated post.
Ahh I see now. Thank you!
There are a couple of things you can do to help speed it up. No need to calculate `length(B)` every time- calculate it once and save it off. There is some minimal savings from creating an column index which simply gets incremented each time through the inner loop, instead of calculating the column index each time. The best savings I found was saving a variable, which I called `colA` inside the first loop, and adding that to each col of B. This had a speed up of about 1/3. I was able to re-write it using `bsxfun` and saw no speed-up. However, how many times are you calling this function? On my pretty standard laptop I was able to run this code 10,000 times in 3.5 seconds using your original code, and 2.1 seconds using my updated code. 
Completely right! 
&gt; it is possible to construct functions that makes any algorithm fail to find the global minimum Well sure, but thats always true for this type of problem. Additionally, these will always be a tradeoff between "failure rate" and "computational expense". That said, I'm hoping to get a cheap solution that works most of the time. Even though a perfect solution may not exist that doesnt mean I need to stop searching for a better solution. &gt; The best solution is probably to use the build-in Matlab function 'fminsearch'. Do you need to build your own algorithm? So I admit i havent tried using fminsearch for this particular task, but I would guess that it would be slow. Solvers that are designed to be robust (e.g., fminsearch and the other optimization toolbox functions) tend to fall into the "more likely to do good, but performs slowly" catagory. For this particular code I would rather have something that works very fast and fails 1% of the time rather than something that works very slow and fails 0.1% of the time. This particular section of code will be repeated A LOT in an upcoming project, so this part being efficient is important.
I might try it out, but unfortunately getting good bounds is hard. I dont have a real good way to automatically estimate them (the upper bound in particular), so to make sure the minimum is bounded I typically need to significantly over-estimate the bounds. Rerunning it a few times helps with this issue I guess, but it might still be an issue. idk. I'll try it.
Is the mechanism you're talking about to register any C++ method as a Matlab function the same interface that mex code uses? Or is this something you'd need access to the interpreter source code to employ? 
You definitely need access to the source code. I know some of them at least are registered at compile time. I'm not sure how exactly it works, I've mostly just used it, but maybe tomorrow I'll go take a look. 
Oh I see. When you talked about functions being "external to the interpreter" I assumed you meant that they were external to the binary, like mex or mcode toolkit functions. You mean external to the core of the source library, but from a user's perspective that's still "under the hood". 
This isn't a MATLAB question, per se, but a math one. MATLAB can help you do math, but unless you know what math you want to do, it can't do anything magically for you. Detecting and eliminating outliers is a whole field. We would really need more information to help you: what sort of function are you using to fit your data, for instance? The most basic way to eliminate outliers is to do your fit with all the data, then calculate the residuals to all the points. Then, if a point has a much larger residual than other points, you remove it, and re-run the regression. Also, there is nothing that forces you to minimize over the residual squared. If you minimize over the absolute value of the residual, or heck, even the square root, it makes outliers less important. 
You can trim the parameters of Matlabs build-in solvers to adjust the search time. If you want to be super-efficient, it might be worth looking into using a lower level language like c++ (either code your own algorithm or (preferably) find a free c++ solver). 
My bad. I just saw my post since I wrote it and it's so screwed up hahahaha. Thank you so much for your tips. How would I restrict the other 2 functions and would I just change the t into an x? Sorry if these questions are stupid, I'm real new to MATLAB.
&gt; I want all the lines to be black. for the plot functions, adding 'k' to the end will make it black. For the surf function, you need to use the "C" argument (look at the documentation for surf). C is comprised of RGB triplets, which would be [0 0 0] for black. Regarding the feather: I'm not sure the best way to draw one. But it you figure it out, check out the "rotate" and "rotate3d" commands to try and rotate the view of it.
When I do stuff the wrong way I explain it like this. If I don't learn the bad techniques, how will I recognise my mistakes?! (answer: Lol, like I have enough time at work to go through and make things proper... If it works it works dammit!!!)
I was going to recommend something like this too. I would definitely use the 1st method though. One note for OP: if the order in which you want to combine columns of A and b never changes, then be sure to calculate "a" and "b" outside the main loop and save these. Thisway you can re-use them, and the only command you will need for each time you want to make C is: C = A(:,a) + B(:,b);
Hey Zircon, I **think** i'm speaking for most people on this subreddit when I say that your question is both to broad, to vague and you have to little stuff made yet for us to help you with reasonable effort. I recommend you check out the [plot galery](https://nl.mathworks.com/products/matlab/plot-gallery.html), where you can see example plots and their corresponding code (!!). Once you have an idea what you want, and after you've given it a decent go and you have some code to show for, and it still does not work, you can come back with the code you have and a clearer question. some sources: [documentation of loglog](https://nl.mathworks.com/help/matlab/ref/loglog.html). Also, see the second option for loading in a for loop [on the mathworks](https://nl.mathworks.com/matlabcentral/answers/153174-plotting-multiple-plots-in-a-for-loop).
[removed]
Added a link
Ah, sorry, this is just part of the code, I forgot the constants were defined at the beginning.
See new one. Ignore Bullet Point 2.
It works. Bulletpoint 3 gives the expected answer.
you use * in stead of .* in the first few formulas for t
OLS regression with log(y) as predicted variable, extract predicted log values (yhat) and plot exp(yhat) maybe?
Not really a Matlab problem. You might try fitting a more representative model to your data. That lump is hardly what could be called an outlier, so the best way to fit your data is to find a better model that describes all the data. You could build the model as longTermTrend(t, parameters) + modelForTheBump(t, parameters). 
Yea, more of a stats problem. Sorry, it was kind of late, and I thought of posting it to a different subreddit but for some reason did not. True, the lump is hardly an outlier on that picture ive shown you. With data from the past, though, youd see that the tend continues even farther back. The main trend line seems to be a steady exponential growth pattern, with periods of large spikes that revert back to the main trend line. If we were to change the window and only look at data from before the large rise, so that the scale maxed out at 400 instead of 1200, youd see that the small bump before that large increase actually looks almost identical. My expectation is that, at some time in the future, the main exponential trend will continue and the large bubble that looks to be an outlier will end up looking more like the small bump before it compared to the rest of the graph. Basically, the small bump before the larger one *looked* equally as large at the time. As the chart grew though, it began to look more reasonably sized. And I assume the same will come to pass with this large bump in time. Really, I'm not sure if theres a way to do what I want to do, since the regression I imagine in my mind basically ignores the large bump under the assumption that the apparent size of the increase will seem smaller in the future as the data continues to follow the main exponential trend. 
Good thinking, thanks.
Using cell arrays may help. So there would be a single cell array keeping all variable arrays inside.
So for the X(t) equation could I change the t into an X. So the function could be like h(x) instead of x(t)?
It's generally bad coding practice to use `eval`, which treats strings as code... but `eval` can do this in a reasonably legible way. It can also be good to initialize variables to `NaN` instead of `0` -- it tries to more clearly makes a distinction between "number from my data" and "allocated memory that wasn't overwritten". dataLength = 500; varNames = {'names','of','your','variables'}; for idx=1:length(variables) eval([varNames{idx} '=nan(dataLength,1);']); % var1 = nan(dataLength,1); etc end
There are few decent examples in the FEX. This one uses structures for storing data points and references to functions. (note I have not tested this one personally). http://www.mathworks.com/matlabcentral/fileexchange/39021-basic-genetic-algorithm/content/GA_CPOH/ga.m You could create a class that would have properties and methods that would be similar to this implementation's structure fields and functions handles.
https://www.mathworks.com/help/matlab/matlab_prog/marking-up-matlab-comments-for-publishing.html
**Great question:** What you actually want is this: X(i,j) = x(i); Z(i,j) = z(j); Meshgrid doesn't give the same answer rather it gives the transpose of that. Here's how you fix it: [X Z] = meshgrid(x,z); X = X'; Z = Z';
Okay, I'm using sort because it's not spitting out errors that I don't understand. I wish I'd posted this with the actual code I'm using rather than a generic A and B, though that would be less useful if someone looks it up later and finds this post... Here we go: COJZ = rand(16,1); LOS = COJZ(16); V = linspace(0, 70, 10); Z = linspace(0, 45, 10); VRMat = repmat(-0.5*V,[16,10]); ZMat = sort(repmat(Z,[16,10]),2); COJZMat = repmat(COJZ,[1,100]); MR = -0.5*(VRMat*LOS-VRMat.*ZMat/2); M = (COJZMat &lt; ZMat).*(MR + VRMat.*COJZMat) + (COJZMat &gt;= ZMat).*(MR + VRMat.*COJZMat +VRMat.*(COJZMat-ZMat)/2); The goal here is to get M for every Z and V I need. So... Column 100 is Z = 45 and V = 70. Column 99 is Z = 45 and V = 62.2. Good. I just manually calculated V=70, Z=45, COJZ(16) and it's the same! Hooray! Now I need to extend this from two linspaces to eight. My computer can't do a 16x100,000,000 matrix which is 11.9 GB. I might have to do a for loop of ten 16x10,000,000 matrices. There's a computer in my lab with 24 GB of memory though, and there's no permanent user. Edit: oh, the 10 in 16x10 is arbitrary, I'll use 9. If it were a single matrix - I don't need double precision - it'd fit in my memory. Can I make it a single before declaring it so it doesn't end up being 11.9 GB temporarily and then get cast to half that? ...when testing the largest matrix you can make in MATLAB, remember to use a semi-colon on the end of the declaration.
Have a look at the documentation of zeros. You can pass it a string that defines the data type
Thanks a ton. That gets it down to 6 GB. I suppose that if I'm performing operations it'll use even more so maybe I need to cut it down to a single even on the 24 GB computer.
Or, think of an implementation in which you don't actually need the whole thing in memory at once.
1. Make sure that your image file is on the Matlab path, otherwise Matlab can't find it. The easiest way to do this is probably to copy it into your Matlab folder. 2. The image is treated as a matrix by Matlab and you can search through it as you would with an ordinary matrix. Example: I = input('Enter the name of the photo you would like to use: ','s'); myImage = imread(I); find(myImage==0); 3. Try 'help switch' for the hep text of the switch function. 
Sounds good, thank you so much for your help!
Oh hmmmm interesting. I guess I assumed that's what meshgrid did? Why is it different really? I've used it before plenty of times without issue. Why in this specific case is it giving me a constant in the X-Z plane for my equation? Thanks!
Have you looked at this page of the documentation? https://www.mathworks.com/help/matlab/large-files-and-big-data.html
If you had all the parameters of your bridge (truss dimensions, etc.) would you know how to calculate the weight from that? 
Oh yeah, typo on my end. Fixed now. But yeah if you follow a similar format you can do it for the quadratic and cubic case. If you need higher fidelity on your plots you can change the incremental values on your x from 0.01 to something even smaller. 
Okay so 0.1 is essentially a value that determines how many decimal points will be used. 
I actually misunderstood your question, you were asking something else. `X.*Z` is what you need.
Thanks for the info
Thank you for the responses guys, worked great. 
Well I'm guessing it's sum of ( length of the truss x density x area) for each truss, right? 
plot([-3,0,0,1,1,2,2,7], [0,0,1,1,1.5,1.5,0,0]);
You don't need two for loops to accomplish this, just one. Think about what your current two nested for-loops are doing: you are looping through the 't' variables 8 times (1:8). For each of these 8 loops, you are looping through the n variable an additional 7 times (2:8). Thus, you are creating your x(n) vector 7 times, overwriting the values for each loop of t. Your goal is to create a vector x that has 9 values (your original example has X going up to x9). Currently, you only initialize x to have 8 values. Initialize x with 9 zeros x=zeros(9,1); then set the first value of x to your initial value x(1) = 0; (although this is not necessary, it makes it clear what your initial value is. If you need to change it, it's very clear what's going on). Now that we have our first value, we need to loop to get the 2nd value of x, then the 3rd, 4th....up to the 9th. If you loop t between 1 and 8, then in each iteration of the loop you will calculate x(t+1). Also, y does not need to be a vector. You can make y a variable that changes value each loop. So, try this to get started: x=zeros(9,1); x(1) = 0; for t = 1:8 y = ... x(t+1) = ... end Let me know if you need some more help.
[This](https://drive.google.com/open?id=0B9043Lp9s0GSVHV4eXFkY1RxaUU) is the link to a set of files. This is the code with which I have been trying. clc clear close all files = dir('*dat'); for i = 1 : 10 fname = files(i+1).name; A{i} = dlmread(fname,'',1,1); A{i}(:,3) = 0; % set all z coordinates to absolute zero for consistency end x = A{1}(:,1); y = A{1}(:,2); n = 500; % number of grid points xx = linspace(min(x),max(x),n); yy = linspace(min(y),max(y),n); [xi,yi] = meshgrid(xx,yy); for i = 1:10 quantity = A{i}(:,5); zi = griddata(x,y,quantity,xi,yi); zi(zi == 0) = NaN; contourf(xi,yi,zi,50,'Linestyle','none') set(gcf,'units','normalized','outerposition',[0 0 1 1]); axis equal xlabel('X'); ylabel('Y'); colormap('jet'); colorbar pause(0.1); end
+ Thank you so much that worked a treat, i managed to figure it out :D http://pastebin.com/9qw7638y
No problem. As an additional tip, you don't need to calculate y during each loop. You can either initialize it before the loop and reference the index during each loop: y = 8:-1:1 for t = 1:8 x(t+1) = x(t) + d(y(t)) ... end or you could simply get rid of y completely: for t = 1:8 x(t+1) = x(t) + d( 9-t) .* cos(radangles( 9-t ) ) end
The reason you're having trouble following is that it makes no sense. :) I'm working with two variables and in an attempt to simplify for this post I confused them. NV ("number of variables") is 15 (or will be once I'm done testing) and should be the N in the post. NLin ("number of linspace steps") ranges between 3 and 10. Rewriting the title, &gt;... I have NV vectors of length NLin and need to generate a vector containing all combinations of these vectors, so A1(1)+A2(1)+...+ANV(1), A1(1)+A2(1)+...+ANV(2), all the way through A1(NLin)+A2(NLin)+...+ANV(NLin) ... With that in mind, size(A1) is NLin x 1. size(A1New) is either (NLin^(NV)) x 1 or (NLin^(NV-1)) x 1... The fact that I don't know explains an error I was having. I eventually constructed an Excel file to make the functions using repmat, sort, copy, paste and concat(). It's ugly.
Ok just getting started. So the values of x and y, are those the (x,y) coordinates of a given node? Hence there are 15k nodes or so? (I'm specifically looking at final_Coarse-10201.dat, not sure if the other datasets are different)
 a = [.5:0.25:17]; % Create a bypass ratio vector from .5 to 17 in increments of .25 S = f./((1 + a) * (F/Mdot)); % Calculate S plot(a,S); % plot the results You question is very basic. Try to find a beginners tutorial. 
Seems like a pretty straightforward thing, creating a function. But I'm not entirely sure what you mean with the vpa() stuff, could you provide the example?
Are you sure you even need symbolic variables? 
Try plotting it as a surf() or contour().
Yea, that's right.
And all data sets are arranged in the same exact manner. 
I believe the function [slice](https://www.mathworks.com/help/matlab/ref/slice.html) is what you're looking for.
This isn't what I am trying to do, I have three different matrix, [X,Y] there represent coordinates. and [Z] represent a parameter that is changes at each coordinate. I would like to have a contour representing this data in a 2d plane.
Nope, could you please look at your old code?
So here's a block from my code that does the plotting and formatting of the plot: figure(1) subplot(2,2,1) VThrust = [A 1-D Array]; [c,h] = contourf(Min,Alt/1000,MomThrust,VThrust); xlabel('Mach Number, -') ylabel('Altitude (x1000 ft)') title('Installed Thrust in lb_f') colorbar; if labels == 1; clabel(c,h,'color','white'); end grid on; **Min** is short for Mach Number Input (it's a user-selected range of Mach Numbers) **Alt** is Altitude in feet (hence it's cleaner in the plot as Alt/1000) **MomThrust** is the momentum thrust available at that Mach and Altitude. **VThrust** is a vector of where I wanted contour lines of constant thrust. You can see it above the contourf() function. [Here's what the plot looks like](http://imgur.com/PC7Hks4) Now, it's important that you check a few things. X, Y, and Z have to be vectors. They can't be 2D arrays. If you're using 3D CFD data, you might have some weird mix of location data and you're really dealing with a 3d-space of points at which point something like slice might work better for you to cut a plane into the 3d-space. If you've got a 2D plane of data (just X- and Y-locations) like it sounds, then you should be able to just plot it with contour(X,Y,Z). That assumes X, and Y are the vectors, and Z is a 2D array oriented to match X and Y. You might have the axes swapped. For reference, my coarse test data set used 141 Mach numbers and 17 altitudes. so Min is a 1x141 double, Alt is a 1x17 double, and MomThrust is a 17x141 double. and typing in contourf(Min,Alt,MomThrust) works for those arrays albeit without all the nice formatting (and a much coarser data set).
+good
You need to do some kind of triangulation before using contour. One method is the Delaunay triangulation. tri = delaunay(X, Y); Then you can use that triangulation with your Z data to plot a mesh or surf (trimesh, trisurf). There's no built in tricontour that I know of, but someone uploaded their own to the [MATLAB file exchange](https://www.mathworks.com/matlabcentral/fileexchange/38858-contour-plot-for-scattered-data/content/tricontour.m). The last argument is the number of contour lines you want. tricontour(tri, X, Y, Z, 10) And that should do it.
If you have the equation you could use that to generate two (or more but you'd only need two) distinct points and then just use the regular 3D plot function
Like, as a character he was brought in? Or he helped out with the production of the movie.
He helped out as a technical consultant for the film. He didn't cameo in the film as far as I know.
I'm assuming you have a vector of x points, a vector of y points, and an array of z points. In this case you need to run [X,Y]=meshgrid (x, y), then contourf(X,Y,Z), or some other 3d plotting function.
Yes, you're still trying to assign an array to a scalar. dmdt(1,14) is a still a single value (scalar). N is an array. You need to change how you index N, not dmdt, or index multiple values of dmdt. Either of these should stop the error, although it's not clear what output you want: dmdt(1,1) = N(1); dmdt(1:14,1) = N';
I think the easiest thing to do is a coordinate transformation of sorts on Y. Create your Y array using meshgrid as before, but set the limits to be -1 to 1. Then multiply each column of Y by the height from the centerline of your domain at each x point. This will spread out the Y points in the section with a larger height.
Beautiful. I'll read up on those functions, but that's a *lot* more elegant than what I have. Probably faster too. With NV=3 variables it works correctly, yielding a (3^(3))x3 matrix, as it should. With NV=9 variables, A is (3^(10))x3. I would expect it to be (3^(9))x9, 9 and 3^9 because there are 9 variables. Checking with NV=4, because it's a sane number, it's not working there, again yielding a 108x3 matrix... 4*3^(3) I guess. No idea how it got that. 1 is never matched to 10 and the first column of A goes from 1:6. I think I need to understand what's going on with reshape so I can troubleshoot this on my own. cat(NLin+1,A{:}) This is concatenate, but NLin is a scalar and A{} is a cell. What does this do? I'm not clear on the use of [] within reshape. What does that accomplish?
Thanks a lot. I can follow what you did for the final expansion. I replied to another comment because the first bit doesn't seem to work for N!=3.
Hello all, I am not sure where my text went so here it is : - I am working on a matlab homework assignment right now and I am having a lot of trouble with it. I'm not sure if I am using the equation correctly and I do not believe my contour plot looks correct. I only have about a months worth of experience with MatLab. Any help/input will be greatly appreciated! http://pastebin.com/Bq642b9P this is the code that I have come up with so far I am trying to attach an image so if it does not appear here is the homework in text: Plot contours of the above expression for b/D50 ratios of [0.1, 1.0, 10, 100] for radii up to 5.0 m using a function to perform all computations for this expression. I am aware that we have not formally done contours yet, but we have done surface plotting (in class one day; check your notes). Type help contour to see how the command works. I am testing your ability to learn and apply a new command here. Present your results using a 2x2 subplotted plotting window. Label your contours using the command ‘clabel’ (type ‘help clabel’ to learn the proper syntax). Be sure to give your plots proper titles and x,y labels. 
Well it wasn't a guess in the literal sense. Your initial question made me question my train of thought because we all obviously know mass is volume x density, so I thought maybe you're hinting at something more in depth. At any rate... Yes, weight is mass x g, mass is volume x density, volume is length x area, and the sky is blue. Is that better? 
And you can see the analytical and numerical means are ~ k*t from [this figure generated from the code above](http://i.imgur.com/wLPYOMG.png).
Sorry if I wasnt clear. The shape and scale parameter of the gamma function are already set. I have k=2 and t=x0 for some x0. this makes the gamma function I am interested in have the form: P(x,x0) = (x / x0) * exp(x / x0) Regarding adding the "notch": I have tried a number of ways to do this. One example (to add a notch at "a") would be: 1 - exp(pi * (x - a) * (x -a)) This is effectively the area above a normal curve, and has a probability of 0 at x=a. Multiplying this by the gamma function would create a new probability function that has a "notch" at x=a that I would use to choose the next point to add (ideally, using whatever value of x produced maximum probability in this new function). [This](https://imgur.com/a/ALqvX) is an example of what I mean. The new point is chosen based on the maximum probability point of the previous distribution. The chosen x values are approximately equally spaced and somewhat more clustered near x0, which is exactly what I am trying to achieve. Note that in this example I start with a gamma function, but in my actual use case the gamma function would already have some notches in it before I start this process. Unfortunately, Figuring out the maximum probability of the notched distribution doesnt seem possible to do analytically (I have effectively worked it out to the mode of a Gaussian mixture model, which doesnt seem to have analytic solution). I have tried to find another type of "notch" that will work in an analytic solution without success. The point of this code is to determine ideal sampling points for some other function (call it f(x)) that is expensive to evaluate. In particular I have determined (through some other method) that x0 is a local minimum of f(x), and I want to determine if it is a global minimum as well. I try and do this by sampling f(x) at number of x values near x=x0 and looking for a lower f(x). I know that the minimum is at x&gt;0, so sampling f(x) using a gamma function with maximum value at x0 seemed to make sense. However, In order to calculate x0 in the first place I had to sample f(x) at a number of places as well, and I want to avoid re-sampling f(x) at the same places again. I only plan on choosing ~10 values to re-sample f(x) at, so I want to make them count. EDIT: **So, to summarize:** I have points x = [x1, x2, x3, ... , xN]. I want to add a limited number of x to this set (~10 more points) in such a way that the density of points in x resembles a gamma function (with k=2 and t=x0) as closely as possible. How can I do this?
Okay, so given the bridge parameters, you know how to calculate the quantity that you want to minimize (weight) and the quantity you want to constrain (strain). So write functions to calculate each of these. If you look at the documentation for fmincon, you'll see that it explains what it expects from both the error function and the constraint function, so use that as a guide. 
very close, but yes! you need to change the denominator at the end to `Ks` instead of `Zs` (using your notation from the OP). also, I'd use `x = linspace(-R,R,npts);` instead of `x=-R:R;`, just because you may not want the points to go by whole units of distance, depending on the size of `R`.
Try playing around with "guide", you can do something with just a text box and a push button
Do you have to create a GUI? This looks basic enough to do in the MATLAB command line. 
Look at the [documentation for uitable properties](https://www.mathworks.com/help/matlab/ref/uitable-properties.html?), in particular the section on `DeleteFcn`. Notice the behavior when the function is defined as a string. I bet your workspace has a variable `Output` with the values you want after executing this. 
Do you understand why the `Output` variable appears where it does? Matlab [does "Not Reccomend"](https://www.mathworks.com/help/matlab/creating_guis/write-callbacks-using-the-programmatic-workflow.html#brqowqm) using a character string. I tend to agree with them, partly because this business about the workspace in which the string is evaluated is a bit confusing. I would suggest using a [nested function](https://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html) in order to create a variable that is in-scope both inside `TableFill` and whatever nested function you create. This way, an assignment inside the function will be reflected in the scope of `TableFill`. Then use that function (instead of your string) as the callback function. You'll need to adhere to the callback function interface (i.e. have the proper input arguments).
The input for randi needs to be a scalar (not a vector)
Generate a random number in from 1 to n where n is the size of the vector. Use it as index to obtain a random member of said vector ( another user has replied similar, I'm just expanding on what's happening in that answer).
But what if the vector I am using has random numbers in it already? Meaning I cannot use the size of the vector to pull a random number out of it.
Hmm. I don't understand the question. The contents of the vector don't matter for this. Did you mean you don't know the size of the vector? Can you post a pseudocode?
Randi 
You don't need the mesh grid for surf, just give it x and y ranges. 
You don't need an array. Three nested for loops for each die (i, j, k = 1:6) and an if statement that adds 1 to the counter when i+j+k == 10. You can also speed up the code by not bothering with the k loop if i+j is less than 4.
Would anyone be able to provide some details on how to implement this? Not op but the assignment seems kinda cool
Why are you using symbolic variables when you want a numeric answer?
I see. Thanks a lot! Unfortunately the homework requires me to use int as it is immediate and not an approximate. (Specified by the teacher). Thanks again for the explanation tho :)
While your homework might require you to use `int`, your teacher's explanation doesn't make any sense. The answer is only "exact" in the symbolic form, but you instantly make it not exact by using it in a `diff` function. Thus, it instantly because just like you used `integral`. It seems this is more a problem with an automatic grading software which is used, which can only work with symbolic variables. Which is absolutely awful for a MATLAB class, because MATLAB, quite frankly, handles symbolic variables very poorly. I understand there is nothing you can do about this, and it isn't your fault, but it is a great source of frustration when I see crap like this. 
Uh dif is my variable for difference not differentiate :p but we have done something similar so your frustrations are justified lol. And we indeed have automated grading which have caused many errors already
Ohh this makes alot more sense. Now I just feel dumb because it was actually kinda simple. Thank you for the help! 
Thanks a lot!
I don't understand what problem you're having. I tried your code and the ellipse seems to rotate around the curve. So what is it you need help with exactly?
Something like this? x = 2.06 % x-value A = [1 5 -3 4 -2]; % polynomial coefficients [a0 a1 a2 a3 a4] p = sum(A.*(x.^[0 1 2 3 4])); % use .^ to calculate polynomials If you want to do polynomials of variable lengths, you have to replace the exponent vector with [0:1:length(A)-1]
Are you allowed to use `polyfit` and `polyval`? They're in the basic package, and do exactly what you're looking for. 
What is objectives saved as? objectives.mat?
Thank you!!
Are you familiar with linear algebra and matrix multiplication? In standard linear algebra, if we want to multiply two vectors, or two matrices, or vector with a matrix, the inner dimensions of the vectors/matrices must match. Say we have two vectors a and b each with 1 row and 3 columns, if we try to multiply them with standard matrix/vector multiplication the operation fails: a=[1 2 3] b=[4 5 6] a*b % fail If we transpose b, to make it (3 rows, 1 column), then matrix multiplication works correctly: a*(b') % == 32 The answer is the linear algebra solution of vector/matrix multiplication (multiply each value them sum them all up). Now, the .* and ./ allow you to multiply each value of a individually by each value of b. This is NOT linear algebra matrix multiplication. This allows you to easily multiply several values a .* b % == [4 10 18], each value of a is multiplied by the corresponding value in b 
See here for more info: https://www.mathworks.com/help/matlab/ref/times.html
Use isequal(a,b) to get a logical vector of 0's (not equal) and 1's (equal). Then sum the logicals
+Thank you!
Are you familiar with Least Squares? It's the underlying calculation used in polyfit and will allow you to fit a polynomial to a set of data points. Look into the backslash operator.
Did some digging and found the trapz function. Would this work for me? If I were to use trapz(fp,tp), with fp/tp being my false/true positive rates would this work for me? I worked one out by hand and the values are the same, but generating these curves takes a decently long time so it would be nice to know if this is going to work. edit: Looks like this works as of 2 checks. Thanks to anyone who would have helped. I'll keep this up in case anyone ever has a similar question. 
The main issue I was having is that the way I am having the ellipse follow the line in my code does not work for a parabola. 
[You're a good person.](https://xkcd.com/979/)
That's exactly what I was suggesting! Glad it worked out.
thank you 
thank you
thank you 
 plot3(X,Y,Z) if you give matlab equal sized vectors for X, Y, and Z, it will by default plot the pair of points of X(n) Y(n) Z(n), and connect all of the points in the vector. So all you need to do is say X is all the elements in the first row, Y is all the elements in the 2nd row, and Z is all the elements in the 3rd row. 
Since, obviously, you've already checked the documentation for the plotting functions, it might be easier to help if you tell us what wasn't clear about the documentation. 
When you say "didn't work", what do you mean? Don't make us guess at what the problem might be. I assume there was an error message? 
What do you mean by "flush properly"? I added a check to make sure only one instance of Matlab is accessing the .h5 (read or write) at any given time, and I coded in a 0.1 second buffer between when one instance finished writing data and when another can start (this is the minimum wait, and it's rare that more than one instance tries to access the file at the same time so the wait is typically much more than.0.1s). Do I need to do something else or wait longer to ensure that the proper flushing is happening? Also, I am use the high level functions (h5read and h5write). I don't want to get involved with using the lower level functions unless I really need to... Also, is multiple readers ok? Or do I need to avoid that too? I set it up so only one instance can read data at a time, but didn't include the 0.1 second buffer. 
What about using a differentiable approximation to your TV term, and gradually improving its accuracy as the optimisation proceeds?
Sorry if I am not explaining it well. Rather than this: {case 1} user_input = inputdlg('change mass: '); if isempty (user_input) A.b = A.b; else A.b= str2num(user_input{1}); end; if isnan (A.b) A.b = 1; end {case 2} user_input = inputdlg('change speed: '); if isempty (user_input) A.c = A.c; else A.c= str2num(user_input{1}); end; if isnan (A.c) A.c = 3; end ...etc... I want to be able to write something like this: {case 1} function change_var (msg_x, var_x, def_val); var_x = A.b; def_val = 1; msg_x = 'change mass'; {case 2} function change_var (msg_x, var_x, def_val); var_x = A.c; def_val = 3; msg_x = 'change speed'; ...etc... where I define the function: function change_var (msg_x, var_x, def_val) user_input = inputdlg('msg_x'); if isempty (user_input) var_x = var_x; else var_x = str2num(user_input{1}); end; if isnan (var_x) var_x = def_val; end So that the specified values are substituted into the function. If I repeat this multiple times, it becomes more efficient, as I don't have to keep repeating inputdlg/isempty/isnan every time. Not sure if this is easy to implement or not, that is what I tried, it doesn't work but hopefully you can say what I am trying to achieve.
I don't know enough about multithreading matlab (parallel processing), but I know a bit about its conventional usage: having more than one core doesn't speed it up. So if you have fewer fast cores and set the "affinity" to one of the cores (rather than the default all of them) it will actually speed it up. Also if you're processing large amounts of data you'll want lots of ram (or get smart and process it in chunks). **TL;DR**: you want fewer stronger processors and lots of RAM.
Go for used. Depends on your local market but watch craigslist/gumtree or popular equivalent in your area for a week or two to see what you can afford. Go for something around 2-3 years old at that price. Get as much RAM as you can. If there is money left in the budget to upgrade to an SSD that makes a big difference too. 
So currently I have: tv_error = abs((x(i,j) - x(i,j+1)) + abs((x(i+1,j) - x(i,j)) Instead I'd replace that as tv_error = z, and use fmincon to solve it as a constrained problem with z&gt;=x1-x2 and z&gt;x2-x1? How do I handle returning the gradient for this? Thanks for the suggestion/help!
many thanks for the reply, will give this a bash when I get back in the flat 
Worked a treat, thanks very much :) 
Instead of looking at reading and writing a file, consider using tall arrays and datastores. datastores create a location that matlab knows where the data is, but it is not on memory. It can read existing excel, CSV files, and a bunch of other functionality that is in the documentation. tall arrays take that datastore, and only load a portion of it into the system memory. That tall array can then be manipulated just like any other array in matlab, but speed is significantly improved since the file isn't loaded entirely loaded onto the RAM all at once, but is sent in chunks. because of this, Tall arrays can also have an unlimited set of dimensions. [Tall array documentation](https://www.mathworks.com/help/matlab/import_export/tall-arrays.html) [Datastore](https://www.mathworks.com/help/matlab/ref/datastore.html) [more documentation](https://www.mathworks.com/help/matlab/large-files-and-big-data.html) [even more](https://www.mathworks.com/solutions/big-data-matlab.html)
The TV part of the objective is `sum(z)`, so the gradient wrt z is a bunch of ones. The constraints are linear inequalities and the matrix can be constructed pretty easily with `spdiags()`.
This is interesting. I will have to look into this some more.
I did not look closely at what you are doing, but if you want to store multiple matrices in one variable, a cell array comes to mind immediately. If all the matrices you're storing are the same size, a 4D array, as has already been mentioned, is also a good option.
Numcols = size(a,2)
Honestly I agree this isn't the most brilliant question out there and OP should invest in some Google skills but I don't understand why every question in this sub needs to be down voted. OP, fuck you for not being as good at MATLAB as everyone else I guess.
[rows, cols] = size(x) rows = size(x,1) cols = size(x,2) rows = length(x(:,1)) cols = length(x(1,:))
Just read the bits of the file that you need using fopen, fread, fseek, etc.
Under the hood, MATLAB uses HDF5, and it's pretty quick. They have a simple interface, `h5write`, etc, and the low-level one (don't screw with it if you don't have a lot of time, trust me). I've also made very good use of `memmapfile` in older versions of MATLAB, not sure if it's still around. Like u/MatlabGuy suggested of datastores, it allows a file to be treated as a variable, for quick access. 
&gt; if you're not doing anything fancy, you'll be hard pressed to beat hdf5, the standard for scientific applications. HDF5 was my initial thought, and in fact I used this to store my data initially. Unfortunately I was having problems with the .h5 files becoming corrupted. Its too bad, I want to like HDF5 so much but it seems that a decently large number of people have issues with file corruption, and in the case of HDF5 this means losing *all* data in the file... &gt; dont use text files like csv if you care about performance. I wasnt planning on it. &gt; you could always define your own indexing protocol and use fprintf I'm not sure how practical this would be for my situation. If anything I would probably like to store the data in binary (.bin) format, but I dont think there are good solutions for partial saving reading of binary files. If you fool around with lower level functions maybe, but I'd rather not do that.
I actually ended up (kind of) doing this for partial loading the data. I am using a higher level function, but it works through using fopen, fread and fseek. I feel like the partial saving of results is still an issue with this method though. I need something that can insert a part of the solution into a combined results file, and the order results are added will not always be sequential. Is there a good way to make that work with these commands?
ok from reading other replies i think your hdf5 is getting corrupted because you're trying to write to it in parallel. your hdf5 library needs to have parallel support, which as far as i know, is impossible using matlabs interface. i had this exact problem and i solved it by writing a python server that could receive multiple asynchronous requests and then serialize the write to hdf5. python has ~~better~~ more comprehensive hdf5 support than matlab. my multiple matlab instances acted like clients that would run and send their results to the python server over ZeroMQ. this involved using matlabs python interface. this also assumes that your application is compute bound as opposed to io bound. 
Ahh yes I tried that but its giving me NaN and Inf along the diagonals of M. I am guessing its because y' and y contain some zeros in the vector but is there no real solution to that?
Ok, new approach. Call the first non-zero value in y Y. Make M all zeroes except on the column corresponxing to Y. Make that column y'/Y.
Type 'help xlsread'. Also in matlab on the top toolbar, you can click 'Import data', open up your excel file, and import the data manually. There's a checkbox with "Generate Matlab Code" that will write the import function for you.
Press F1
I don't know of a way to directly map region boundaries on color images. I would just set a threshold for either specific values or a difference between adjacent values in the conversion to a binary image. The 'imbinarize' function appears to be able to use either of these methods to create a compatible binary image for boundary tracing. https://www.mathworks.com/help/images/boundary-tracing-in-images.html https://www.mathworks.com/help/images/ref/imbinarize.html
One of the best parts of MATLAB is that the documentation is absolutely top notch. You can search the documentation in the search bar in the upper right. For example, if you search for "square root" up there, you'll see it pull up several functions. One of them will be `sqrt` and if you click on it, it will bring you to a document which lays out everything you need to know about the function (likewise, searching for "modulus" will find you the `mod` function). If you can't find the function you're looking for there (say, you don't know the real name of what it is called) just do a google search for the function you're looking for, followed by "matlab" and you'll probably find it on the first page. A tip on MATLAB's built in functions: Most of MATLAB's functions can take in whole vectors. That is, `sqrt([1,4,9])` will return `[1,2,3]`, you don't have to put it in a loop to calculate multiple values 
After watching the video I still don't understand how to write a function for the equation given to calculate voltage gain since it tells me that v0/vin is voltage gain and then follows to tell me how to fully use the circuit to calculate it however what I don't get is how I need to put those things in order to make a working function 
Ok, so you need to ignore the middle part of your equation because it is not immediately relevant to the calculation of the Voltage gain when given R, L, C, and W. Follow the instructions in the video to create a function that accept R, L, C, and W as inputs and return Vg. Next, set Vg = the equation you gave in your description. Do this using matlab functions (i.e. abs for absolute value, sqrt for the square root, etc. if you don't know what to use google "MATLAB 'whatever operation you want'" for example: [MATLAB square root](https://www.google.com/search?q=matlab+square+root&amp;oq=matlab+square&amp;aqs=chrome.1.69i57j0l5.3153j0j7&amp;sourceid=chrome&amp;ie=UTF-8).
Thanks for the response. How would you do this with for loops though?
Yes. You can only solve for M at the values that are not zero for obvious reasons. You can't solve for a in 0=4a or 4=0a. Do the diagonal thing and throw out all the inf and Nan results 
&gt; combvec Doesn't this require the neuralnet toolbox? I remember having this problem when I needed something similar. I ended up having to write my own function for it since I couldn't find anything not linked to a toolbox.
Right, my point was you won't be able to use his method without the neural net toolbox, which you may or may not have. If you have it, then no problem, otherwise you will still need your own function.
The `find` command allows an optional flag input. The ones which are useful to you would be `first` and `last`
Please don't simply do homework questions for people. 
I was doing something like this any still having an issue. However, I was doing it with variables in a .mat file, and I think the issue was that there was a chance that 2 files could try and load the data at (almost) the same time and they would both think that the "blocking" flag said it was OK since neither had yet written the new blocking flag to disk. The chances of this happening were pretty small, but not zero and because I will be checking these flags many many times there was a good chance it would happen at least once and cause corruption. I just changed my code so that instead of loading these flags from a .mat file it instead reads them from a binary file using fread, which should be much faster to read/write and thus should limit the chances of this happening. I also implemented a secondary check - i set p the "blocking flag" so that 0 means "go ahead" and anything else means wait. I have each instance write a unique identifier number (from 1-8) to the flag to indicate that other shouldnt access it. I then wait a small amount of time (~0.2 seconds, includes some random variation) and check the flag to make sure the unique identifier number hasnt changed. I figure this should effectively eliminate the issue I was having (I hope so anyways...)
Shouldn't you remove this? 
 doc find
Still not got it working, lol, finding it difficult to implement in the code, think I might just do it another language then copy over the data.
Thanks man I appreciate it 
Run this code: x = [1,1,1,1,1,1,1,2,2,3,3,3,4,5,5,5]; a = diff(x); What do you get in a?
First of all, thanks for the help and sorry for the relative vagueness of the post, it was late and I had been trying to figure it out for quite some time. I calculated the variance simply using the Var function in Excel. I had read the info on that link, but I guess the problem here is that I didn't really understand it (I'm ME, first contact with noise). It says there that the input should be the height of the PSD. is that not the variance, in the case of white noise? On the "Algorithm" section, it's explained that the scaling is done "automatically" by the block, or did I misunderstand it? Once again thanks for taking the time to help me.
I recently ran into a similar issue. I considered doing what you are describing, but instead decided on using global and persistent variables. Global variables are for things that need to be passed between functions, and persistent variables for things that need to be repeatedly used within the same function but which never (or only infrequently) change. After declaring the variables as global/persistent, you can run a check to see if they have a value yet, and if not fill it in with some default value (to ensure everything keeps working). This is a good way to define things that never change in a function, since you only need to define it once. Example: persistent persistent_variable % "persistent variable" is now a persistent variable if isempty(persistent_variable) persistent_variable = default_value end You have to be careful about unintentionally modifying variables and you need to ensure they have the same name in every function (for global variables), but I found that this helped improve efficiency and keeps the workspace clearer. Doing this reduced my number of input variables from ~25 to 2 or 3. If you do this make sure to use the "clear global" command before you start to make sure you dont use an old version of the variable. Hope this helps. PS: regarding your original question - I imagine it depends on how much time is spent within a given function. If you are spending very little time on computations then the unpacking/repacking of the structure could add to the run time, but I imagine that if your function spends most of its time computing it wont be a noticable difference. You can always try unpacking the structure into variables a bunch of times and time it with "tic" and "toc" to see for yourself. (be sure to clear the unpacked variables every time, since this is the state that the function will be in when it unpacks the structure).
Thanks. This is a good solution; I'll try it this way. 
You need to declare 'P' as an Nx1 array (or 1xN, it does not really matter from what I see here). Where N is either 100 or 101... I don't know if you have to create 100 generations after the first one or 100 generations including the first one. In your code, 'P' is a scalar, or a 1x1 array if you prefer. So, when you enter the loop, i==2 and you ask Matlab to access the third element of 'P' (which does not exist). To declare 'P', you can use the functions 'zeros' or 'ones'. 
Agreed. But on the first line inside the *for* loop, OP is trying to access both the second ( P(i) ) and the third ( P(i+1) ) elements of the array. 
Whops. Also true.
The code you posted first was mostly correct. It does the work described in the problem you linked. The reason you had an error message was that you did not declare *P* correctly. It needs to be a 100x1 array. To do so you can use the function *zeros* : *P = zeros(100, 1)* will create a 100x1 array filled with zeros. Then you give the value 0.5 to the first element of this array. You will also have to correct the for loop : i should go from 1 to 99 and not from 2 to 100. Otherwise, you will be asking Matlab to access the 101^st element of the array *P* when i == 100 and that element does not exist. 
This is something I see a lot with beginners in matlab. You should forget that the symbolic math toolbox exists for at least a year. It's only useful when you know more about matlab. By then you'll understand that solve and ezplot are 100% useless and should not exist. dsolve is sometimes useful. This isn't true of just matlab actually. Computers aren't meant to solve equations analytically, it's fundamentally not how they work. So matlab and all other languages are meant to solve equations numerically. To solve the first equation numerically just separate y in the derivative by using a finite approximation. So this: Dy=-exp(y)/(t*exp(y)-sin(y)) becomes this: f = @(y,t) -exp(y)/(t*exp(y)-sin(y)) %The left hand side of eq as anon function ta = 0:h:tf %Whatever your timestep and final time is y = zeros(1,length(ta)) %preallocate y y(1) = y_initial %Set initial value of y for k = 2:length(y) %Already have your initial value so start at 2 y(k) = y(k-1)+h*f(y(k-1),t(k)) %Solve for next y end %Whatever output you desire. Main takeaways, matlab and all other computer languages are numerical by nature. Never use inline functions, never use solve, and especially never use ezplot. Always fprintf your output. And remember, people shit on matlab in the programming community and yeah it's slow, quasi-proprietary, non-general purpose, etc. But it has the best damn documentation. It's hard to overstate how much better matlab's documentation is than everything else. So use that resource. 
USEFUL TUTORIAL FOR TECHNICAL PROGRAMMING BASICS
The buzzword you are looking for is shortcircuiting, and as you suspected Matlab does do this [behavior](https://www.mathworks.com/help/matlab/ref/logicaloperatorsshortcircuit.html?s_tid=srchtitle). You could write a quick script to demonstrate this behavior as well. 
+ Thanks that was what I was looking for!
By "proper way" I believe you mean, "does Matlab have some baked in tools to help you with code tracing and error logging?" I am not aware of any but I would be happy to learn differently. You could roll your own pretty quickly. I would also recommend you log various inputs and outputs along the way as well, because sometimes your code not only fails but it gets into a quasi-error state as well. 
Sorry, I know you can do that. I wrote it wrong in the post. I meant when your data has three indices. Here's part of one of my codes: f2 = figure('Name','f2','NumberTitle','off'); set(f2,'position',scrsz/2.5); movegui(f2,'southeast'); title('Thrust');xlabel('Time [s]');ylabel('Thrust [lbs]') hold on; grid on; for ii = 1:fi plot(t,data(:,12,ii),'linewidth',2) end legend(leg,'location','best') hold off But I know that this wouldn't work: f2 = figure('Name','f2','NumberTitle','off'); set(f2,'position',scrsz/2.5); movegui(f2,'southeast'); title('Thrust');xlabel('Time [s]');ylabel('Thrust [lbs]') hold on; grid on; plot(t,data(:,12,:),'linewidth',2) legend(leg,'location','best') hold off Edit: Missed a word
Struggling with very basic aspects of Matlab, probably. How would I go about substituting the vector for A?
What I don't get is what is supposed to go into the % do stuff part. And I'm terrible at programming.
I think the point of the assignment is that you should figure it out. Think about it this way: You want to add all odd numbers from 1 to 'num'. If you had a 'sum' variable that starts at zero, and another variable that starts at '1' and grows to the next odd number each loop iteration, you could solve it with addition. You with me? 
Kind of, but I just don't know the syntax to get it to sum up and to get it to only sum up the odds.
Would it be this? When I do this it gives me the wrong value, so I think I messed up in setting the ii function ii = ii + 2 sum=ii+num
It calculates how the sum is evaluated. I'm trying to get it to sum up ii with the inputted value. EDIT: Where did I mess up my syntax for the sum line?
Take a pen and a paper and work through your loop for num = 5. Do it like this (replace the '...' with the true values): START ii = 1; ii&lt;=num = (1&lt;=5) = TRUE sum = ... ii = ... ii&lt;=num = ... sum = ... ii = ... ii&lt;=num = ... sum = ... ii = ... ii&lt;=num = ... sum = ... ii = ... ...
You could use try/catch to catch the error, write the error message to a file, then rethrow() the error. Then you'll be able to look at the file to see what went wrong. 
that the Data dimensions must agree.
Can this also be done by permuting B, and then using bsxfun (implicitly, assuming op's updated to 2016b)? E.g. C = A .* permute(B, [3 4 1 2]);
Yeah you'd for sure want to do that too.
Show me how you do it with loop, I'll show you how to do it without on. Basically, read about indexing, logical indexing, and [vectorization](https://www.mathworks.com/help/matlab/matlab_prog/vectorization.html).
||A||2 refers to 2-norm. Does that help?
In this case the eigenvalues of the matrix are 4 and 1 (trace is 5 and determinant is 4, so look for two numbers whose product is 4 and whose sum is 5) Since we want ||Ay|| = ||A||||y|| we are interested the eigenvalue 4 because 4 is also the determinant ||A||: this means that the eigenvector corresponding to 4 will be the vector where the desired equality will hold (since by definition an eigenvector v for 4 will be the vector where Av = 4v) So letting the vector be (x1, x2) and multiplying by A and setting the result to (4x1, 4x2), we see that x1 = x2 is the necessary criteria to be our eigenvector so we can take (1, 1) as our vector y.
1) Think about how you'd solve it by hand. 2) Write that in Matlab 2b) When you don't know how to tell Matlab how to do something, search for that thing in the documentation. 3) Done 
You're right, but I'd add that parentheses are good practice. 
I have a 271x141 matrix that defines some value, Z, (that is dependent on both temperature and pressure) at increments of 10 deg (141 increments) and 10 MPa (271 increments). Note that the values of Z are just a text file that has been externally calculated and are not defined as a function in Matlab. The lowest value of both temp and pressure is 100 deg/MPa. See the attached plot for a visualization. I want to use a specified value Z in a function that I am plotting in a loop where both temp and pressure vary. I'm having trouble specifying this value Z at a given temperature and pressure in each iteration of the loop. Should it be something like: Z_value = interp2 (Temp, Pressure, Z, temp_coordinate, pressure_coordinate)? If so, how should I best define the temp_coordinate and pressure_coordinate given that they both start at 100 deg/MPa and increase in increments of 10? Thanks for any help!
I meant that y is a 2 x 1 vector so you can multiply it by the 2 x 2 A and also get a 2 x 1 vector
I'm not getting them to equal. A = [-2 6; -3 7] y=[1; 1] norm(A*y) == (norm(A) * norm(y)) returns logical 0
Is the norm of A not its determinant? That was what I was assuming.
There are functions like `nwalign` in the Bioinformatics toolbox for DNA or amino acid sequence alignment. Depending on the specifics of your case, you might be able to shoehorn it into that set of code. I don't know offhand if there's a more general built-in algorithm. Ed.: It looks like you can use integers 1-24 (25 represents known gaps) so, if you've got fewer than 25 phonemes, you could use the bioinformatics routines right out of the box. Otherwise, you might be able to find an implementation of something like [Needleman-Wunsch](https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm) and extend it to accommodate your needs.
 q1 = Q(:,1:10)
This would be my recommendation, too.
Just have them all as slices of a 3D array and call q(:,:,x) 
I've seen some forum discussion that cell arrays are better for allocation and retrieval performance, but I think the difference would generally be negligible enough that you should choose your personal preference. Both would do the job. I personally find accessing fields, especially when that field is being chosen by some previous bit of code, an absolute pain so I'd prefer a cell array. 
So I just tried running your code, but it fails before you even get to `surf(X,Y,P)`. In your line where you calculate `p` you are attempting to do an element by element multiplication of three vectors, all of which are of different lengths (x is length 51, y 41 and z 31). This line fails. With this line failing it's hard for me to see what you intending it to look like, so I'm not sure how to tell you to go on. 
Are you trying to visualize room modes?
One other thing to note: if you combine all functions that you are using into a single .m file (with a main function and several subsequent nested functions), any variable that is defined in the main function will act as a (psuedo) global variable that is available to all the the nested functions (but not available to other scripts / functions in different .m files). If you want to share a variable but you create it in one of the nested functions (instead of the main function), defining the variable as emtpy (e.g., "var = [];") in the main function will still cause it to be shared. Personally, when I tried this it caused my code to run slower by a noticeable amount, but perhaps this is an anomaly (if anyone has an idea for why this is please share it). At any rate, its a potentially good way to mediate some of the downsides of using global variables, and it pretty easy to test (converting from using global variables to this can be done by removing the "global var1 var2 ... varN" part of the functions, nesting the functions, and making sure everything you want shared is defined in the main function).
I need a loop that'll run a price2ret (vector of prices --&gt; vector of returns) function from 1:3 | 4:5 | 6:end on the price vector. ret = zeros(length(table.Price) - size(unique(table.ID),1), 1); % give it a structure index = diff(table.ID); num = find(index == 1)'; % actual positions where switch occurs a = [0 num length(table.Price)]; % e.g. a = [0 3 5 7] b = [2 a(2:end)] % e.g. b = [2 3 5 7] for i = 1:size(num,2)+1 temp = price2ret(table.Price(a(i)+1:a(i+1))); c = size(temp,1); ret(I need to go from 1:2 on the first iteration, 3:3, then 4:4) = temp clear temp end I'm having trouble figuring out how to fill out the actual return vector :/ 
Are there an built in functions for automatically converting the fields of a structure to individual variables, or for converting a list of variable names into a structure (without having to manually define each variable)? When i tried doing this I "unpacked" and "repacked" the structure by getting a list of all variable names (e.g., use "fieldnames" to get names of structure fields), and then I looped over the names and used the "eval" command to automatically setup the variables. This works, but it seems like there should be a matlab function to do this (so that you dont have to manually setup every variable).
This is an aside and I can't help you, sorry, but I'm curious why you need to avoid writing 0s to the whole file to begin?
No, there isn't. Also avoid using eval, because it is difficult to debug and is slower to execute. Can you describe your problem? I feel like you shouldn't need to have 40 input variables that you work with at the same time.
Oh, right. I wrote it wrong. Whenever you see that error it means that you've used the wrong name for a variable. So it'll happen if something is supposed to be capitalized and you didn't capitalize it in that instance. In this case I've written it wrong because the variable isn't t it's ta. So that should be: y(k) = y(k-1)+h*f(y(k-1),ta(k)); Also your plot is backward it should be: plot(ta,y) Always give plot both the x and y variables and obviously here the x axis is ta and the y axis is y.
Im not OP, but I did have ~25 input variables. Its for a large problem, and these variables contained various information (user defined parameters, data generated by the code, etc.) that needed to be passed between subfunctions. I switched to using global and persistent variables though since it gave me a small performance boost (the fact that it reduced my inputs down to just a couple was just a nice bonus).
Edit: oops, minor correction thanks to /u/jkool702: double(x &gt;= 0) 
I don't know if this existed in 2014a, but try the argument 'HeavisideAtOrigin' as per the documentation. It should be user-configurable to your desired behavior.
Wouldn't :it be double(x &gt;= 0) since OP wants heaviside(0) = 1 (not heaviside(0) = 0)
Being that your code doesnt run its hard to tell what you are trying to do. That said, I think this is what you need to do. I dont know how you were generating x, y and z before, since what you posted doesnt work, but "ndgrid" seems like it should do what you need. clear clc %% Analytical solution of a room el=0.1; %element size length L=5; %length in meters x W=4; %Width in meteres y H=3; %height in meteres z Y=0:el:W ; X=0:el:L; Z=0:el:H; [x,y,z]=ndgrid(X,Y,Z); n_x=2; n_y=3; n_z=4; C=1; p=C*cos(n_x.*pi.*x/L).*cos(n_y.*pi.*y/W).*cos(n_z.*pi.*z/H); %% Plot slice at z = z_ind z_ind=1; % z index for slice surf(squeeze(x(:,:,z_ind)),squeeze(y(:,:,z_ind)),squeeze(p(:,:,z_ind))) xlabel('X') ylabel('Y') zlabel('Z') 
You can make gifs / animations using the imwrite() command. Unfortunately, you do need to use a loop. However, you can turn the visibility of your figure off and the gif will write significantly faster. You can also update your figure titles with each iteration of the loop. For example you could plot f(x,y,z) with title(['Time= ',num2str(t)]) .. that way you can see the time domain as your gif progresses.
You are not doing something wrong. Imagine two vector with very large z-values and small x- and y-values. The angle between these vectors is small, as both basically are pointing in the direction of the z-axis, but the angle between them in the XY plane can be large. 
My first reaction is to calculate connected black components and then take the 2 that are closest to the expected size. Depending on how much variation there is in your images, it looks like taking the 2nd and 3rd largest connected components might be good enough. If you really need the white boxes (if adding a constant width to the black ones isn't good enough), the black and white boxes should have very nearly the same centroid, so you should then be able to figure out which regions are the white ones that you care about.
I think you're on the right track. Regionprops is an extremely useful toolset to get out all sorts of properties about the segmented objects. First thing I would do is invert your binary image. Now you are looking for a square (or rectangle). You can then use regionprops to get information about the eccentricity of each object. This can then be used to determine a square-like or recatangle-like object.
+thx!
&gt; Just remember that the loop only runs on integer steps Actually, in Matlab, [for loop indices can be specified as arrays of values](https://www.mathworks.com/help/matlab/ref/for.html). If you only use the index in one array, you can get rid of it all together. I usually find I'm indexing into at least 2 arrays though, so in practice I hardly ever get to make good use of this.
Hey, so the first thing I can see straight away is you haven't defined the outputs of the function. So for the Fourier Sin Function, you have at the moment: function [ Bn ] = fouriersin(x, n) 2*int(sin(n*pi*x)*(x-x.^2),x,0,1); end whereas you need to write it as function [ Bn ] = fouriersin(x, n) Bn = 2*int(sin(n*pi*x)*(x-x.^2),x,0,1); end Similarly, for the other function, you need to define the output of 'u'. Try this and see how you get on :)
That is actually a great idea, I hadn't thought of that! For this specific assignment we weren't required to go that far, I just wanted to see if I could impress my teacher somehow. However, I will definitely keep your suggestion in mind as I may need it in the future. Thanks a lot! 
Use can take advantage of logical indexing. For example, to get a list of all values of vector x that are less than 10, you would do: x(x &lt; 10) "x &lt; 10" creates a list of 1's and 0's depending on whether or not it meets the condition of being under 10. You then feed that list back into x using "x(x &lt; 10)" and it will only output x values where the value of the list is 1 (i.e., it meets the condition), and will ignore everywhere the list has a 0 value. You can combine 2 conditions as well. Example: x((x &lt; 10) &amp; (x &gt; 5))
^ this is probably the fastest way to do it. also see 'discretize', will be a little easier. 
how does discretize work? I looked up the function but I couldn't make sense of the output.
No, but I will
Ah thank you so much 
glad to help
You have already obtained FS coefficients by using `fft` on a vector. You can go back by applying [this](https://www.mathworks.com/help/matlab/ref/ifft.html#bvizm5c-6) formula. Or you can let `ifft` do that for you.
Why is it important do it without using ifft? I mean, that's what it's for.
You can use the *eval* command. It would look something like this: array = zeros(num_points,num_variables); % pre-allocate array for nn=1:num_variables eval(['array(:,nn) = VarName',num2str(nn),';'] end To be honest using eval like this is frowned upon, but it will do what you are asking. However, a better method would be to put these vectors in a cell and access them from the cell. If at all possible you should try to adjust your code to not create dynamically named variables...
What /u/jkool702 suggested is the way to get yourself out of a bad situation (dynamic variable names) in the short term. The long term solution is to find the guy who stored your data in dynamic variables in the first place, and smack him with his keyboard. 
Well the thing is, the data is always being output as a vector from a separate program. How do I store the data not as dynamic variables and still have a rather easy possibilty to combine the vectors into a cell or an array?
Thank you very much! I will try this.
glad to help
Thanks! This is the acoustic pressure assuming insonification through the trachea with a planar pressure wave at 1Pa, delivered at 200Hz.
I'll give a better answer in a bit, but: &gt; What do you use it for? For now, just looking at how sound propagates in the lungs. For now I'm just running analytical and numerical simulations. Eventually, I would like this to be some sort of quasi-diagnostic aid but thats down the road. &gt; Is it purely all simulated? Yes, this is all analytical. The algorithm I use I wrote based on some old branching waveguide acoustic stuff. &gt; How did you get the lung shape data? CT, with an algorithm to go from the limit of CT resolution to the edge of the conducting airways, *I did not write the algorithm*, I adopted it from a collaborator. &gt; Wouldn't the simulation be completely different if you'd use a slightly different lung shape? ( That is something I want to look at, and yes it should (but not by much). Setting would help with re-coloring, I can do that for different frequencies worth of data. Now that I only have 10 different patches, it should be easier I think to just reset data.
Your question has been removed. Please read [our rules for asking homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/) and feel free to resubmit when you have made the necessary changes. 
What do you mean call the function? I've set the function equal to variable u. EDIT: I tried using u(x,t) as an output as well
Yes, but in the command window you just typed heateq(x,t,n). Try typing "[u] = heateq(x,t,n)". And you'll see u appearing in your command window as well. Good luck
Sorry, try and put 'u' outside the for loop. That should work :) 
Put a breakpoint at the very beginning of the function, use F5 to debug, and step through the function to see if that for loop is doing what you expect it to. 
Sorry - a couple questions: What's a breakpoint? What is debugging? (Definitely don't want to lose any work!) http://imgur.com/a/l4ymC This is the updated version. Any idea how I can fix what comes up in the command window?
 clc clear all %% Analyitical solution of a room el = 0.1; % Element size length L = 5; % Length in meters x W = 4; % Width in meters y H = 3; % Height in meters z X = 0:el:L; Y = 0:el:W; Z = 0:el:H; y(1,:,1) = Y; % y axis length x(:,1,1) = X; % x axis width z(1,1,:) = Z; % z axis height n_x = 2; n_y = 3; n_z = 4; C = 1; p = C*cos(n_x.*pi.*x/L).*cos(n_y.*pi.*y/W).*cos(n_z.*pi.*z/H); for i = 1:length(Z) surf(X,Y,p(:,:,i)') axis([min(x) max(x) min(y) max(y) -1 1]) drawnow pause(0.1) end ***www.youtube.com/users/GuitarTosh007***
Your `n` is a vector (I can see it in your workspace). You use `n` like it's a scalar in your code. Saying `for i = 1:n` doesn't make sense when `n` is a vector. 
You are missing an 'end' to the function. The one 'end' applies to the loop. You need one more. 
+ thank you
That is not required. If it's not set then the output should by default be assigned to ans. 
Also change all use of i in your for loop to n(i). 
And move u = heat below the for loop. 
There's a lot of answers here that might help, but will never teach you how to be better at this. Look at your code. Read each line. Think about what you think that line is doing. Test in the console to see if it is doing what you expect. Consider whether what it's doing and what you would like it to do are the same thing. 
Hm I'm getting the plot. Try to plot without specifying the style plot(thrustvalues, payloadvalues) Also, do you have any other figure window open in background? You can check that by running get(0, 'Children') Put this at the beginning of your code and try again clear all close all
Your code doesn't do what you think it does. Put a [breakpoint](https://se.mathworks.com/help/matlab/matlab_prog/set-breakpoints.html) at the beginning (by pressing the '-' next to the code row number) and step through it to see what it really does. Some hints: myNewMatrix = 3.*myMatrix; % This multiplies every element in 'myMatrix' by 3 and saves the resulting matrix in 'myNewMatrix' myNewMatrix(i,j) = 3.*myMatrix(i,j); % This multiplies the element at position (i,j) in 'myMatrix' with 3 and saves it at position (i,j) in 'myNewMatrix'
I see. Thanks. I had suspected it might be possible doing something like this, but that getting the parallel toolbox features (that dont require writing in low-level GPU code) to work isnt possible. Too bad, but maybe in a future update mathworks will include this support.
Ok I tried fixing a couple things, I did not really understand how to use the breakpoint function however. http://imgur.com/a/urN4w I am sorry if it seems like I am ignoring your advice but I am not very fluent in Matlab yet. Thanks a lot!
There used to be a program that allowed you to interface your matlab code with AMD gpus, but Mathworks bought the company and used the code to start their NVIDIA Cuda support. Now, without writing C code, there is no way.
Learn how to use breakpoints. It will help you a lot. 
I couldn't agree more with /u/Triumviratet's [reply](https://www.reddit.com/r/matlab/comments/5zeird/homework_help/dexksqd/). Also, start debugging using small size matrices as input, e.g. 2x2. [This video](https://www.youtube.com/watch?v=PdNY9n8lV1Y) might help you if you're not keen on reading [documentation](https://www.mathworks.com/help/matlab/debugging-code.html). Although, you should learn to read documentation. &gt; It will help you a lot.
I was given three functions (denoted by matrices a and b) with the respective variables [T(i-1), Ti, and T(i+1)] and was told to find the minimum value Ti by using a Gauss Seidel iteration algorithm. The input arguments are: hotrodGS(250,350,200,0.5,5,4,0.01). When I run the function, I receive a matrix of Tmin = [Inf Inf NaN]. When I use the same script outside of a function with no variable inputs in the matrices, my outputs are real numbers, and I cannot see what I have wrong. 
Maybe a recursive approach where you take in a vector and return two vectors based on your criterion. Then call the method again on the two new vectors until you get a singleton. At that point, record the depth of the recursion for that branch of the tree. Record the depths over the whole tree and over several runs to get an idea of the average depth
Did you try to ssh into the raspberry pi using this IP address using pi as username and raspberry as password?
SSH for starters. It's a remote access protocol.
Yes, and more importantly if you can connect via ssh. Btw I think you might have to activate ssh-access on Raspbian manually, it should be somewhere in the application-menu under configuration or similar. If you are not sure if the ip is correct and you and the raspberry is hooked up to the same network you can also try 'ping raspberrypi', this should return you the ip address. In any case you should make sure that the raspberry has a static ip or the router (if you have one) assign the same ip every time to the raspberry. If you are not sure about that you can also try to use directly the host name 'raspberrypi' instead of the ip - but this depends on your Matlab-Interface, as I said I never used it so it might expect an ip and not a hostname (although this would be unexpected). Also, if you want to use more than one raspberry pi in your network you might want to change the hostname of the raspberry in /etc/hostname to, for example, raspberrypi2 or similar. But this might be only relevant in the future and not now.
As I said, did you check if you actually activated ssh? http://www.instructables.com/id/Use-ssh-to-talk-with-your-Raspberry-Pi/
Glad to hear! Then have fun with your pies ;)
Bummer.. thanks for the heads up. &gt;The way to know your code works is not to simply make random changes, without understanding them, until you stop getting errors. The only way is to understand what your code is doing and make it do what it should be doing. Don't these two statements contradict each other? Understanding what matlab does was always for me trial and error ... and if too much trial and error was involved I scrap the code and restart all over again. But before we then go deeper into this code: HOW can I try to understand what my code is doing now, without fiddeling with it? What I've learned was, write a piece of code, press debug (in small enough steps, e.g. after every new function you added) and see where it fails. &gt;Why would it make sense to assign t_Laminat to z? I should know that. Seems there is more "troubleshooting" needed with this code than I initially thought. &gt;What should the value of z be? z ~~is~~ should be the z-value in a cartesian coordinate system to determine the position of each of the eight layers. t_Laminat ~~is~~ should be the total thickness of all eight layers, which is optimized so it changes from it's initial values t_init to the thickness needed to withstand the loadcases (line 21: Anz_Lastfaelle) Thanks for your reply though, I'll try to gather more information as soon as I'm back on my PC.
Try replacing line 104 with this: t_Laminat_temp=Zielfunktion(t); z = -t_Laminat_temp/2; The error seems to be with t_Laminat not yet being defined when you use it in the function (hense having a size of zero). This should manually define it using "Zielfunktion(t)" with the current model. Its less efficient, but it you just want it to run I think this should work (for this problem anyhow - I didnt look at the code closely enough to see if there were others). I also suspect you might need to change Line 105 from "for kk=1:k" to "for kk=1:numel(t_schicht)", but I'm not 100% sure on this point. &gt; And could someone please explain to me, how the plus thingy works in this sub? I'm not sure what you are referring to by the "plus thingy"? The thing next to some people's names? If so, I'm actually not sure what that represents / how you get one either. 
+ Very nice. Thanks. I have been looking for this.
And we really wanted you to find us ;) Thanks!
1) Start by getting the right syntax for importing a matrix close all; clear all; clc matrix = 'Please enter '; matrix_in = input(matrix) 2) Your intention is good, but as you loop over each element, also do have to *do the operation on each element*. Note that I create a new matrix called 'matrix_out', which *can* be pre-allocated (advised when working with huge dimensions). E.g. if matrix_in(Row, Col) &gt; 0 matrix_out(Row, Col) = 2*matrix_in(Row, Col); 3) Good luck! ***www.youtube.com/users/GuitarTosh007***
Do you care about actually choosing k random objects from an array of objects, or can we just simulate it by say choosing a random number k and everything below k is one group and everything above is another. They'll give you the same value for number of splits until you have a single object. 
Take this with bucket of salt. You're probably looking for Transfer function, you should do FFT of output and input and divide these. If you have points then you probably need to use DFT? Or you could make some curve from points.
Sooo I got to try out your suggestions and they worked. The script completes without an error. Thank you for that. However there are a) some structural quirks I have to work out, b) understand it a bit better and c) work on my off-script documentation.
I am aware of the xlswrite function. And I know how to use it. (xlswrite(fileName,A,sheet,range)) where A is the matrix of the data written into the excel sheet. The question is, how at the end of my loop can I store the data from that iteration to an array, and subsequently add the next iteration to that same array? 
This is a rough idea of what my code looks like: for inx=1:30 audioread(file1); f = linspace/////// G = fft; plot(f,G); 
So ideally before the loop restarts, I would like to take the data and store it in an Array, and eventually have 30 columns in the array for each file
I'd just save the data as a csv file (csvwrite). Excel will open it just as a normal Excel file, as long as you don't need multiple sheets
What's your problem? &gt; My problem is in taking that data, and formatting it in a way that I can then export it to excel. I would like to have 1 spreadsheet for all the files read in. Create a matrix of values where each row corresponds to a frequency, and each column corresponds to a file. Each cell therefore contains the content of a particular frequency within a file. Then save that matrix to a .csv file using csvwrite.
 a = rand&lt;0.75; 
Just to clear up some confusion: DFT refers to discrete Fourier transformations in general as opposed to ones operating on continuous functions. In most engineering applications you are dealing with sampled points so a DFT is the appropriate tool. An FFT just refers to a specific implementation of the concept of DFT. So the matlab fft command will implement a DFT using the FFT algorithm.
resample your data at regular intervals using some form of interpolation
&gt; for coursework. Won't get an opportunity with the equipment again. They asked us to use phones and this is what we are stuck with. Using a sample rate of 33Hz I got a working FFT (I I think parent was suggesting that you use MATLAB command interp1 or similar to resample the data, not collect the data again.
Lol... That's the solution. 
 close all; clear all; clc matrix = 'Please enter '; matrix_in = input(matrix) matrix_out = matrix_in; for i = 1:size(matrix_in,1) for j = 1:size(matrix_in,2) if matrix_in(i,j) &gt; 0 matrix_out(i,j) = 2*matrix_in(i,j); end if matrix_in(i,j) &lt; 0 matrix_out(i,j) = 3*matrix_in(i,j); end end end matrix_out
What have you tried so far?
Oh, wow, I didn't see that you were using globals. Definitely don't use globals. 
Yeah, that's where the learning process kicks in because I still haven't grasped the concept of global variables and why (not) not to use them. Friday is the due date, then I'll ask my professor for the solved script to see what I could've done better.
Trial and error in this way doesn't lead to understanding. You could bang on your keyboard until you get code that doesn't produce an error, but you'd have no clue what the code does or why there aren't any errors. Understanding comes from reading the code, understanding each small part of it, and maybe testing those understandings in the console or reading documentation and testing your understanding in the console. Using the debugger is fine as well, but if your only solution is to make changes that you can't explain, then you don't understand the problem. This is like saying "my car wouldn't start. I noticed there was a gauge on the dashboard with a needle pointing to 'empty', but I didn't know what that meant. Anyway I painted over the dashboard so the error is gone, but my car still doesn't run. Why?" My question is, why would you expect that to make the car run in the first place? And wouldn't it have made more sense to figure out what that gauge was telling you? Just making random changes won't be likely to help, and doesn't mean you understand the problem. 
I could give you some pseudo code, but that's actually not the hard part and I think learning to plan the basic structure of your code to be one of the most critical skills, so I think you should try to do it yourself. Start by thinking about how you would do this by hand. I assume you'd calculate some stuff, as you described; then you'd see if it met some conditions. Right? What would you calculate? What condition would you look for? What would you do next, and when would you stop? Once you stop, what info would you need I'm order to answer the question in the assessment? 
Globals are often appealing, especially to beginners when writing optimization based code. They are not **always** bad, but they can become a bad habit that ends up causing heinous problems if they are abused. It's a good idea to avoid using them if you don't really need to, and then be very careful with them when you must. Develop the habit now, and when you write more complex software you will save yourself from a lot of pain. Personally, my rules for globals are: 1. Don't use globals 2. If you think you absolutely must use a global, still don't use a global 3. If it's really the right time to use a global, you will know it certainly and unequivocally, as if the knowledge was divinely delivered into your mind 4. No lying to yourself about knowing you need a global. 
Here's a little example of how to do the thing most novices use globals to achieve in optimization code. I'm hoping the way in which it applies will be obvious once you see it. You should also read the documentation regarding anonymous functions. First, make a simple function: function c = exampleFunction(a, b) c = a + b; I think the behavior of this function is obvious enough. Now do this in the console: myAnon = @(x) exampleFunction(7, x) myAnon(3) See what's happening? 
Does this have to be fully automated? If not, you could have some seed voxels and use region growing. If so, I've had some success with MRI segmentation using k means clustering. Since you're using CT you can probably use a hard threshold to generate a bone free image fairly easily. In fact, you could set that mask to a specific value and explicitly tell your code that those guys are not to be part of the segmentation. Realistically, medical image segmentation is an ongoing research topic and it's unlikely you'll develop a 100% sensitive and specific algorithm for getting general lung volumes. 
Thanks for the help! Well... as soon as the next semester starts, I'll pick up a few books and the documentation and see what I can do. So far my programming experience is rather limited. A bit of Turbo pascal back in the early 2000s but other than that... at least I understood what matlab is good for, now I only need to understand it.
Check out the documentation for "logical indexing". 
There's a very common and widely known approximation for the Poisson distribution. The fact that you don't know it leads me to believe you're a student who (should have) recently learned it in class, so I'm hesitant to just tell you. I'd also suggest, if your assignment allows it, that you use the built-in functions to generate various distributions. They should be available if you have the statistics toolkit. 
Noted, edited. 
Gonna tack on some more support here. I finally started using them a few weeks ago and they've changed my life.
Maybe I'm misunderstanding your request, but would what you're looking for be an Isosurface then?
https://www.mathworks.com/help/pde/ug/solvepdeeig.html
You can just add the array of amplitudes as a new column in a matrix. Something like: for i=1:n data(:, i) = fftData; end Then you can have a separate vector for the frequencies if you want, or put it in the same matrix, and export it to an excel sheet.
[x y z]=cylinder(function)
Hello, thanks for your response. I want to use ultrasonic or laser sensor as my application, but I can't find them in the Simscape sensor library. Do you know where, or does simulink support such sensors?
Thanks, I've take a look for it, but can't find the sensor I need. What I want to use is laser sensor or ultrasonic sensor, or terrain sensor. Do you know if simulink support such sensors?
From my understanding of isosurface, the function makes a surface out of all the 3d points which have the same value for a variable. But in this case, I want a contour plot of all the values of the function, not just one value. If my understanding is at fault, could you please help me out as to how to go about using isosurface?
You might be able to find a math or science prof with an older version lying around on disc. The student version is only $50, but the toolboxes are $99 each and getting more and more necessary. 
I dont think there are generic sensor models lying around. You will have to make your own. Take the true states and the map as input. Calculate the sensor readings. Add noise.
https://thebay.tv/
cylinder function will be a pain to use since the radius of my geometry is not constant. It expands along a sine curve and then contracts again. 
MATLAB has [two ways to call functions](https://www.mathworks.com/help/matlab/ref/syntax.html): command syntax and function syntax. Your `copyfile` call is using command syntax, so all arguments are treated as character vectors. Use function syntax instead.
Check if your university provides software for free. Mine has an older version of matlab (2015a I think) to download for students.
You'd need to know something about the imaging system to estimate the PSF, or at least make some reasonable assumptions. You could try something more basic like a Weiner filter. 
In any image recognition or processing task, there's a four way trade off between the complexity of the algorithm, the amount of user involvement, the reliability of the algorithm, and the range of inputs that can be successfully handled. The complexity of the algorithm increases as you demand less user input, highly reliable results, and the ability to handle unexpected changes in your data; and it increases **VERY RAPIDLY**. What may be a relatively simple task when the user is allowed to give input and the form of the input is very restricted, can become a problem that gives rise to multiple PhD theses when required to work with complete autonomy. The point is, you really need to define your problem space before you start working on an image processing task. Is the event you're after restricted to a known region of the field of view? Is the text constant? Are background levels known and stable? Will this need to work on new data without the user being required to adjust thresholds or other parameters? Etc. What you've given us right now is a very general problem outline which, without some restrictions, would take a solid year of development to solve. 
Hey, thanks for taking the effort to code it yourself. But unfortunately it is not working for me. I think I am going to switch to tecplot just for this one problem. Again, thanks a ton!
The only major difference is the text, its otherwise completely static black screen. So i guess i could region of interest the photo (or crop). Unfortunately the images are very high speed (~300k fps) and thus very low resolution. The text is mostly useless until after i find the right frames as they just give imaging info (frame rate, timestamp, etc) and aren't actually part of the image but are added in when the camera saves the data. 
So the region of interest idea is most likely going to be the best case scenario. I do know the area of interest. The text is mostly constant but part of it is frame time stamp data which is going to change from frame to frame. Its preferred to have minimal user input (mostly run and watch it go). Luckily the text is out of the region of interest. Basically i want to be able to hit run and have it pop out "data available in frames x-y" kind of thing. Though if that can be visually represented thats fine as well for user analysis thats fine as well. Leaving a set level is probably alright, as this will ultimately be used primarily for this purpose (black background finding which frame has a flash in it) The comments I've gotten thus far have given me some ideas. The feedback is much appreciated. I'll try to update this when I get a more complete version done. 
First rough approach I'd take: - Crop out the text (assuming it's a small portion of the image) - Find the mean brightness of each image - Identify the ~.1% of brightest images (assuming you're not there already in finding your targets) - Scroll through that smaller set manually Brightness variance may be better, depending on exactly how your target images compare to the rest. If a generic classification like "1% of brightest images" gets you most of the way there, that can also be a good screening step before using a more detailed algorithm to narrow the results even further. Are they truly B&amp;W or grayscale?
Submit them to Amazon mechanical turk: https://www.mturk.com/mturk/welcome
You can use [dlmread](https://www.mathworks.com/help/matlab/import_export/import-numeric-data-from-a-text-file.html) to read the first column of the file. You can generate a string with the filename and the ID number using num2str. Combined, this would b something like num_vals= % number of values in the 1st colums num_files= % number of files % pre-allocate data array - "data" data=zeros(num_vals,num_files); for nn=1:num_files file_name=['base_file_name',num2str(nn)]; % read data from "file_name" using dlmread (I imagine other read functions could work too) data_temp=dlmread(file_name,'\t',[0 0 num_vals-1 0]); data(:,nn)=data_temp; end EDIT: alternately, you can generate a list of filenames using "dir" and extract the filename from that. files=dir('*.txt'); file_name=files(nn).name;
I recommend using `histogram` for these things, insteadof `bar`. I've never used bar for a histogram, so I don't know why you are getting the \*s but if you use histogram you won't
Yes, but remember you'll need to be a little careful with your upper bounds in the second and third call!
...and crickets. I guess the guy solved his homework problem.
Read the documentation for [sort](https://www.mathworks.com/help/matlab/ref/sort.html?requestedDomain=www.mathworks.com) and see how you can say which dimension you want to sort over. 
Thanks for the input. Today was the first lecture of the new semester. The professor said, that the documentation would be enough of a literature to cover us for this semester. Don't know what to think of this. I know that the matlab documentation is rather large and extensive though. We'll see.
The documentation is definitely enough. Also, you can get a lot of help here with a well posed question (as you saw in this thread). A good approach to "simpler" problems is, when you are stuck, work out a few iterations of your loop by hand. Just two or three. Note all the important values. THEN use the debugger to step through that code, checking it against the values you calculated by hand. Do they match? Do they make sense? This can help you both program better in the first place (doing array assignments by hand is kind of tedious and silly, but can help make it click), and figure out the errors you do make faster. Don't get me wrong - it's painful and terrible and I generally avoid it. It's good medicine though. 
Here's my first attempt and it seems to be working so far. If I input a value for a know alpha and beta (such as alpha and beta equal to 0) I get a value that matches what is listed in my data table. All other values are being interpolated and the results are making sense. I will now modify the code to account for control surface deflection (delta_h) and interpolate in three dimensions. Thoughts? aoa = 0; sideslip = 0; % Load Data Cx(:,:,1) = xlsread('Cx_neg25'); % Define alpha and beta ranges alpha = [-20:5:60 70 80 90]; beta = [-30:5:-10 -8:2:8 10:5:30]; % Create Grided Data [X,Y] = ndgrid(alpha,beta); F = griddedInterpolant(X, Y, Cx(:,:,1), 'spline'); % Insterpolate Cx_interp = F(aoa, sideslip) figure surf(X,Y,Cx) title('Gridded Data Set for Cx(alpha, beta, delta_h = -25 deg', 'fontweight','b');
Use the Sym input. Use cat and repmat to get the right sized input. Look at plot docs for options. gplotmatrix(x,y,group,clr,sym,siz) specifies the color, marker type, and size for each group. clr is a character array of colors recognized by the plot function. sym is a character array of symbols recognized by the plot command, with the default value '.'. siz is a vector of sizes, with the default value determined based on the number of observations. If you do not specify enough values for all groups, gplotmatrix cycles through the specified values as needed
The easiest way to do this is to use the function fsolve, but you need the optimization package to use fsolve. If you don't have the optimization package, any newton-style solver will do the trick. Also, using good starting values will speed up the code. For example, one can reasonably expect that changing theta_1 or theta_2 by a bit doesn't change theta_3 or theta_4 too much. Also, you have 72x72 iterations.
You can do it with the 'eval' function. Use 'strcat' and 'num2str' to create the variable names. **But dont do this.** It's horrible form in almost all situations. Use an array instead. E.g. x(i) = ...
What do you do if your variable is already an array and with each iteration of the loop the lengths are different? 
Use a cell array of arrays
Thanks!
Yeah I know how to do this. 
Please do not simply do homework for people. 
 % First example. I fail to see how this is clunky myMatrix(1,:,:) = [1 2; 3 4]; % Second example. Note the lack of clunkiness MyMatrix(1,:,:) = [1 1; 1 1]; MyMatrix(2,:,:) = [2 2; 2 2]; MyMatrix(3,:,:) = [3 3; 3 3]; Also, you could just use cell arrays as described.
Oh ok, sorry! Didn't think a one line of code would be an issue.
 myMatrix{1} = [1 2; 3 4]; Also obligatory: http://lmgtfy.com/?q=matlab+cell+array
+OP okay I almost got it, I but I'm getting an error of bad property value when using sym. Here is my code % Data = csvread('GFP_140-170.csv'); r1 = rand(46,4); %load data K = 5;% number of clusters [G,C,sumdist] = kmeans(r1, K, 'distance','sqeuclidean','Display','final','Replicates',100);%do clustering clr = lines(K);%create color matrix gmark=zeros(46,1);%numbering the groups in data gmark(1:12,1)=1; gmark(13:29,1)=2; gmark(30:46,1)=3; symK=3;% 3 types of sym sym = lines(symK);%create sym matrix grp =zeros(46,1); grp= (1:46);% just numbering the every row figure; ph6=gplotmatrix(r1,r1,grp,clr(G,:)); %I get an error using this % figure; % ph6=gplotmatrix(r1,r1,grp,clr(G,:),sym(gmark,:),36); 
Yeah I did, didn't find the Matlab explanation good nor concise.
Look up genvarnane 
**You don't**. Like another user said, you can use eval, but don't; you can make each x_n the nth field of a structure, but don't. Just create a (preferably column) vector whose nth element is the nth variable you meant to create. 
That wasn't intended to be the solution to the error, but rather a step that would help you find the error yourself. In the code you've posted the expression for gamma1 looks plain wrong.
That makes perfect sense! I don't know why I am not thinking clearly and making things so difficult for myself. Many thanks. 
uhhhh.... what do you have so far?
I can find the area under the curve, I cannot for the life of me figure out how to do the baseline subtraction part of it. Any help would be greatly appreciated! 
How did you do it? Could I have code?
 +as a student of ECE department i feel it is more helpfull to get expertise in matlab programming.A great thanks for this website
 help minus
I don't know of any clean way to do this in Matlab alone since you can't edit the p file. My quick and dirty way to do it would be to (on Linux or Mac), write a bash (command line) script that wrote each value to a file, then ran the matlab script and redirected that file to standard input. #!/bin/sh for i in {0..100}; do echo $i &gt; inputfile.in; grade=$(matlab -nosplash -nojvm -nodisplay -r "gradeScript; quit" &lt; inputfile.in); echo -e "$i\t$grade"; done
Closed thread boys. I figured it out.
&gt; advanced regions of scripting in Matlab To be brutally honest, this is some of the most fundamental concepts in coding, especially in Matlab. "iStart" represents an *index.* (as does iEnd) So when iStart = 1, Dist_miles(iStart) is just the first entry in the vector called Dist_miles. if iStart = 2, Dist_miles(iStart) is the second entry in the vector, and so on.
Can you not use a built-in ODE solver? The function ode45 will do exactly what you are trying to do.
I meant more that it was advanced as we have covered incredibly little so far and it was new to me. That said, thank you for explaining that to me! Makes sense now!! 
For one thing, your y values are going to be hideously janky; you're only plotting the sine of integer x values in radians. Just try plot(x,y) and see how bad that looks. For another thing, cumtrapz() "computes an approximation of the cumulative integral of Y via the trapezoidal method with unit spacing". Meaning your dx is always 1; try reading the help for cumtrapz to see how to calculate the integral for non-unit spacing. The definite integral of sine *is* -cosine plus a constant of integration; in this case, 1. As your sine wave varies from -1 to 1, your integral (-cosine) will vary from 0 to 2.
I mean, it's not like "Matlab" is one single type of operation. It's just executing the code you write. If you write code that heavily uses the type of operations that the cpu is good at, it will run efficiently. In general, modern cpus run a standardized instruction set anyway. 
I've read on r/buildapc that for rendering/compiling it can beat Intel due to the 8 strong cores and 16 threads, but if this person is also gonna game on that pc it would be best to use an Intel
 Mnew = M(mod(100*M(:,1),1)==0,:) The factor of one hundred will cause any "hundredth" decimals to be integers, which is what mod(x,1)==0 is testing for.
Matlab is built exactly to handle this simply as C = [A A].*B
Reminds me of the time of intel 386s with math coprocessor. Now those were the days.
No unfortunately not. Have to use runge kutta. 
Use the simulink support package for arduino and program it within simulink. It will then allow you to compile the controller and push it onto the arduino.
Make an x-vector. Choose the increase in x 'small enough'. Make Matlab calculate sin(x). Then make a sums vector that stores the sum of element 1 to element x. Don't forget to account for the dx you use. This should give you the -cos(x) with the correct offset. dx = 0.01; x = [0:dx:10]; y = sin(x); for i = 1:length(x) sums(i) = sum(y(1:i)); end subplot(2,1,1) plot(x,y); hold on; plot([x(1) x(end)],[0 0],'r--'); title('y = sin(x)') subplot(2,1,2) plot(x,sums*dx); hold on; plot([x(1) x(end)],[0 0],'r--'); title('sum') 
ode45 is an implementation of an adaptive 4th/5th order runge kutta method, to be clear
I browse and am decently active on /r/buildapc. This entirely depends on how much you will be doing tasks like rendering/compiling/video editing vs how much you will be gaming. Its true that for pure gaming the i7-7700k is still better. However, the difference between the i7 and Ryzen for gaming is pretty small for most games (especially at high resolutions), and the gap can be largely reduced by using high speed memory. Additionally, if you have other things running while you are gaming then Ryzen will likely catch up to or exceed the i7's performance in games. On the other hand, tasks like rendering/compiling/video editing are *massively* improved by getting a Ryzen rather than an i7. So, even if you are only doing that stuff a small percent of the time I think you could still justify going for Ryzen. But of course this is a decision people will have to make for themselves. That said, these types of workloads are not necessarily analogous to the types of workloads that Matlab will provide, so I'm not sure that info is useful in predicting Matlab performance with Ryzen (or, if it is, I dont know enough about how these computer processes work to make that analogy).
Perhaps [mvtrnd](https://www.mathworks.com/help/stats/mvtrnd.html#bt5b16n) will work?
The other responses hinted at this, but I wanted to mention it explicitly: The FFT is a "fast" DFT, but requires uniform sampling. This is why there were many questions about if the data was sampled at a uniform rate or not. You can code up a DFT that does not require uniform sampling (IIRC its not actually very hard), but it won't be particularly efficient. However, if it is something you are just doing once or twice for a relatively small problem then being inefficient shouldnt be an issue.
aand now everything makes sense. Thanks for explaning this whole thing for me
Glad to help. Based on your responses I suspected you might not be aware of this, and that it might help things make a whole lot more sense. 
Yep it all clicks now. I think I'm going to spend some more time with matlab over the next few months to get a grip of it
you could loop and do this, you could also look in to using `cellfun` to do it in one line. you also need to know how to access the elements of a cell array. 
provide a sample of the input data format. 
Go to the callback in the code named the same as the radio button. Insert script there. Or use the value field for the radio button to check if it is pressed or not inside the callback of another button. 
You should be able to pass the first matrix and get the second one out. It sorts by the first column by default. What error are you getting? 
So the problem is to take a matrix of what are essentially coefficients and run them through the same equation to get the new matrix? You can use element wise operators . * . /. ^ etc to do the calls on each column of the metrics. Ie mat(:, 1).*mat(:,2).^2. If you want to get fancy look at anonymous functions and Arrayfun. Hope this helps. 
well i used the mvnrnd function to create a gaussian vector for 500 (x,y) cases. I did this part and have plotted it. Then, I am suppose to do a non linear transformation of these numbers based on pair of equations in a 1x2 matrix x = [e1(x,y) ; e2(x,y)] . edit sorry i misread! but how do i define the multivariable functions? I think I need a loop to run certain parameters through until the 500 cases have been evaluated, but I'm confused on how to format it. 
 A = [2 3 1 5 4; 1 2 3 4 5] A = sortrows(A) That should solve it, still getting an error? Weird if so.
first, that's a terrible file format that will only lead to unnecessary work. you'll need to read each line and use your prior knowledge to parse. for example, using `fread` `fid = fopen('filename.txt');` `firstline = fread(fid, '%f %f %f');` do that three times, then consume the comment line and do a similar read for the square vertices. 
umm. before i comment on your algorithm, your matlab control structure syntax needs some help. also, matlab does not have an increment operator. 
That's really too much work, recent releases of Matlab have much expanded graphical functionalities and control, and when you save figures as a PDF they are high-resolution publishable quality. Or, save them an an .svg and get as much resolution as you want.
I want the columns to be sorted in ascending order, based on the values in the first row.
thats what I had already, but I keep getting an error that index exceed matrix dimensions edit: LOL i had to clear the workspace smh! 
Thanks all!
The problem is hard for me to visualize. Are the equations in x anonymous function references? If so look at passing them to Arrayfun. Otherwise I don't see why you couldn't get it working to start with a for loop and just explicitly calling each number. Unless you want to vectorize the solution and that is really your question. Give me a simple code snippet with what you are trying to do and I may be able to help more. Good luck.!
It's much easier than spending hours getting something you want to get formatted a particular way coded just so. Use matlab for math and prototyping but leave pretty to dedicated programs with an easy visual interface. 
I got it! didn't need array fun of anything tricky. no loop either lol i always make things harder than they have to be! You're first suggestion pretty much did it, I just had gotten confused on the formatting when writing the code. Thanks for the help!
Release notes for all the toolboxes are located here: https://www.mathworks.com/help/relnotes/ For me, the most surprising thing was the string arrays. No more clunky cell arrays! &gt; * string Arrays: Create string arrays using double quotes &gt; * * You can create strings using double quotes, just as you can create character vectors with single quotes. &gt; * * str = "Hello, World" creates a string. &gt; * * str = ["Good" "morning"] creates a 1-by-2 string array. &gt; * * For more information, see Characters and Strings.
Those string arrays look real nice, cell arrays can be the most annoying thing. Too bad my school gives us the software a year behind...
Hey don't even bother using it as they can;t get their documentation straight, try fullfile('dirpath', 'filename'). you get a fat "string not handled!) and this straight from the documentation! 
Looks to me as though it works properly, if you'd just searched for fullfile it works just fine. I think it's a bit ingenious to state MathWorks' online documentation as poor just because it couldn't find your function call with arbitrary inputs -- and *then further claiming you shouldn't use their software because of a single non-issue with their documentation*. By this logic, you shouldn't use Python either because searching: os.path.join('dirname','filename') [also results in no matches.](https://docs.python.org/3/search.html?q=os.path.join%28%27dirname%27%2C%27filename%27%29) Google is a search-engine company, leave complex searches to them and you're more likely to have success finding what you're looking for: [Matlab search results](http://lmgtfy.com/?q=fullfile(%27dirpath%27%2C+%27filename%27) [Python search results](http://lmgtfy.com/?q=os.path.join(%27dirname%27%2C%27filename%27) 
I see where you're coming from, but strongly disagree with your conclusion. MathWorks implemented an entirely new variable class and released it to the wild. There are thousands (guesstimate) of functions that Matlab will need to update to accept string arrays, I would expect most to be updated by 2017b. String arrays are a powerful construct which helps move Matlab closer to a general programming language; there will be bumps along the way, but that doesn't mean it's "crapware" -- pubescent maybe...
if
 if cond return end
This is one of the reasons at my job I pushed for everyone on MATLAB to have a maintenance agreement. I'm one of the only people on my program who uses a lot of the new features, but I was sick of my code not working on other people's machines. I understand that not everyone can have such a set-up. 
It was released in 2016b, I'm still on 2016a
&gt; I'm trying to minimize Y16 - &gt; How do I find out what V produces a minimized R? Are you trying to minimize Y16 or R?
I think I see what you're saying. I'll try that, thanks.
Excellent, I got it! Thanks!
I'm glad. `fminsearch` is really powerful, and quite generic and it can be used for so many things. It's my normal go to for anything like this. 
Since you obviously read the documentation for the ode solvers (like ode45) before asking this question, and then tried to use that information to solve your problem, how about you just save us some time and tell us what doesn't make sense about the documentation, and what happened when you tried to do this yourself? 
No problem :)
What are you mapping the colors to? In other words, will the color depend on the frequency of the word usage? Or will the color depend on something else? A colormap in Matlab is simply a vector of colors. The first color will get mapped to the lowest value, and the last color will be mapped to the highest value. The colors in between will accordingly be mapped to the values in between. The colormap you're looking for would be vector that starts at #00529C and linearly changes until the last element is #FDB930. The number of elements in the colormap will define the color resolution. So, a colormap with just two elements will map values to just the two colors. A colormap with 4 elements will map values to the two colors plus two intermediate values. A colormap of 100 elements would essentially be a smooth gradient of colors from the start color to the end color. See: https://www.mathworks.com/help/matlab/ref/colormap.html At the bottom is a "What is a colormap?" section that goes over some things that may be useful to you. Importantly, Matlab colormaps are a vector of RGB values, so you'll need to convert those hex color values to RGB values normalized between 0 and 1.
Happy to help :)
Is the solution not y=1/(1-x) https://www.wolframalpha.com/input/?i=y%27%3Dy%5E2,+y(0)%3D1
 n = 100; x2 = 0:1/(2*n):0.5; dx2 = x2(2) - x2(1); y2 = zeros(1,n+1); y2_check = 1./(1-x2); % y2_check(x2) = 1/(1-x), to check if both solutions match y2(1) = 1; for k = 1:n m = y2(k)^2; y2(k+1) = y2(k) + dx2*m; end clear m figure() plot(x2,y2); hold on; plot(x2,y2_check) and hooray, for [n=100](http://imgur.com/a/uY4vT), [n=1000](http://imgur.com/a/GjkKe), [n=10000](http://imgur.com/a/Kfc3O) we see the numerical scheme works and approaches the correct solution very closely. So you were just comparing it to a wrong solution :)
There is only one thing that doesn't make a lot of sense about the documentation, and it is that in code like this one &gt;ode113(@(t,y) proyecto_1(t,y,c1,g_prima),tspan,[y0; y_prima0]); The handle needs to be on the (t,y) thing and that when I put the handle directly on the name of the function without putting (t,y) it says that the expression is unbalanced. As for what happens when I try it, well first of all I don't know in what order to put the variables and the functions when setting up the function, example: &gt;dydt = [z-y(1); (g_prima*y(1)+(y(1)/(1+c1*y(1)2)))] &gt;[t,x,z,y] = ode113(@(t,y) proyecto_1(t,x,z,y,c1,g_prima),tspan,[y0; y_prima0]); I have tried with x t y and z in different positions but nothing works, I usually get the message that the expression is unbalanced, but I don't even know how to tell matlab that y depends on t and z on x. I would appreciate a lot any help in this, since I haven't found information in this subject. Thanks 
Apparently there are some big changes with Parallel Computing Toolbox. Anyone work with that yet?
 idx=1:50; output=input(idx~=5 &amp; idx~=15 &amp; idx~=30); 
Thank you.
I'm guessing the error you're getting has to do with columns in the table being the same size, or something. "poly" is just the coefficients of the function that fit the data. You need to use the coefficients to create a vector that corresponds to predicted values for deflection at each force.
Here's what I get when I plug in table(Force,SpringDeflection,poly) I had an error somewhere else, fixed it. ans = Force SpringDeflection poly ____________ ________________ __________________ [1x4 double] [1x4 double] 1.8 -1.0878e-14 
You may not have gotten an error but that table isn't what the question is asking for. The question says to create a table with force, deflection, and *predicted deflection*.
Yeah I think this is more straight forward
Well, f*ck. I didn't understand shit. Thanks anyway, I will search something else.
It looks like your data are all arrays of equal value. In that case, your for loop and if statement are unnecessary. Starting after "x=0;" try something like: Goldilocks_idx = (r &gt; 0.03644 &amp; r &lt; 0.22775 &amp; o &gt;= 91 &amp; o &lt;= 801 &amp; t &gt;= 187 &amp; t &lt;= 394 &amp; d &gt;= 0.35 &amp; d &lt;= 2.84); Golden_Planets = n(Goldilocks_idx); I would read up on some documentation on vectorization in matlab in [general](http://www.matlabtips.com/the-art-of-vectorizing-part-1/) and for [logical indexing](http://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/) in particular.
Hey I have another question if you don't mind. I'm now plotting different columns in different fields of this struct like this for i = [30,60,120,240,480] for j = [1,500,1000,2000,9000] figure() plot(annotatedEventData(j).rawData(:,i)) end end How would I go about getting it to save the plots to a folder everytime in some image format. Sorry for all the questions I'm just not very well versed in matlab.
Ya I checked that out, the problem I'm having is I want to save them all to the same folder and I don't see how to put the file path into that function rather than the file name.
Oh dope shit let's go
I did exactly this and it gave me the same answer as cumtrapz If I put in sin(x), I get back -cos(x)+1 where 1 is the constant of integration. If we consider a sum of frequencies - sum of A(i)sin(f(i)t+theta(i)) Then using cumtrapz, the constant of integration is the sum of A(i)/f(i)cos(theta(i)) This would be easy to account for with a Fourier transform which allowed me to know coefficents and phase. However with scientific data, this method does not work. 
Where do you go to school?
Try googling 2nd order ODEs with Ode45, take a stab at the ode function, and post here
In order to not have the input function freak out on me when I inputted a string or number, I reverted to the method I used. Those unfamiliar functions I used are simple class converters or Boolean functions, so it's not too far from the if else statements and class types you must be learning right now. I am interested in what solution the professor might have come up with to work around the stinginess of the input function. 
Thanks
One note: using the "print" function instead of "saveas" function gives you more flexibility about how to save your figure (including making figures higher resolution, making figures larger than your screen, etc.). Might be worth checking out if you want more customizability in figure saving. If you just want something simple though "saveas" works just fine. Also, you can define the folder and path you want to save in the filename. Example: filename=folder1/folder2/folder3/filename.fig (or some other extension) You can define the path starting from the current matlab folder or you can use the full file path (e.g.,starting from C drive - C/..../folder5/folder6/filename.fig)
&gt; https://www.mathworks.com/help/matlab/math/partial-differential-equations.html Yep, let us know if you need help with it or some clarification. I spent a few hours messing around with it a week ago; once you get the hang of it, pdepe is quite easy to use. 
Thank you, this helped me immensely. 
I can't recall if the output arguments is supposed to be case sensitive. But if it is, I'd like to point out that the U in the first line is upper case whole the other u in the function is lower case. 
Ah! I did not notice that Thanks
Thanks! Of course it was that simple. I tried to do it using a for loop with an if statement inside it but got stuck halfway and figured it would'nt work. Even if it would work it would be pretty inefficient. Also, I assume the 1 in v2 is a typo right? 
It's definitely a typo. Can I suggest that you don't have multiple columns for sample type? I would recommend one column with multiple values, like 1 for rock and 2 for soil. That way if you needed to add a type, it would be trivial, compared to your current scheme.
They are case-sensitive, that's the problem. I'm not sure if OP has tried to run this with just two outputs, but that should work as-is, so I think that this is the only issue. You just needed a [rubber duck](https://en.m.wikipedia.org/wiki/Rubber_duck_debugging).
Non-Mobile link: https://en.wikipedia.org/wiki/Rubber_duck_debugging *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^47396
I would use an intensity-based method of assessing image similarity, instead of the feature-based method you are currently using. It looks like you could use [corr2](https://www.mathworks.com/help/images/ref/corr2.html?requestedDomain=www.mathworks.com) to implement that, though you may need to scale one of the images first. Provided you only need rotational invariance at 90 degree intervals, I don't think this should be too arduous, though it almost certainly doesn't scale as well to a large number of candidate images.
I haven't done much with LQRs but you might check out Stengel's notes online which are from his book (well worth the money btw). He has a chapter dedicated to this topic. 
I'm actually doing this using the output of a Neural Network where the classification data was encoded as such, [1 0] for soil and [0 1] for rock. Thanks for the suggestion though! 
Makes sense, I'm guessing two binary classifiers running in parallel. If it's nothing you can control, then you're at the whim of the library's API 😀
It looks like this is is just a PID controller with only the 'I', and a gain selected using LQR. Have you tried doing just a standard PID controller on your helicopter plant to get a feel for the frequency-space response, and then augmenting that with the gains selected by LQR? Edit: Note that the standard LQR problem outputs a proportional gain. You will need to re-derive the optimal gain problems for integral and derivative feedback. You can do this by giving the system additional states to take care of the derivatives, sort of like writing a second-order ode as a coupled system of two first-order odes.
Glad it helped
The 'R' in LQR stands for regulator. These are actually formulated to track a zero reference and reject disturbances optimally. The LQR controller that you want is i assume to track some non constant reference, this is usually done (the way i was taught) by including the integral of the error as an extra state in your state space. This allows you to track a desired trajectory as if the integral of your error is zero you have perfectly tracked a signal for all previous time. Your integrator in the loop does this in a less rigorous way as it does not form part of your optimisation problem so the optimal gain is unknown.
1) get hours: [~, ~, ~, h] = datevec(myTimeValues, 'HH:MM'); 2) use logical indexing: isPM = h &gt;= 12; 
Matlab is extraordinarily user friendly. It's easier to use than anything that powerful has any right to be. 
I tried this and this is still what happens when I interrupt with ctrl-c Epoch no: 2 Training . . . Operation terminated by user during run_train (line 109) In stg3 (line 45) net = run_train( net ); Maybe if its run in a program in a script it doesnt catch the interrupt signal?
This is what I ended up using - it worked beautifully. Thank you!!! 
For a quick and dirty debug process, you could implement `keyboard` into the function once the `for` loop hits a certain point. For example: for i = 1:struct.size % do stuff if i == 1000 keyboard; end end This will pause the function at the `keyboard` line, but maintain the variables in the function workspace, allowing you to check variables, plot, run other scripts, etc. to see if everything is going correctly. Alternatively, you can type `dbstop if error`into the command window before running your script. If the function encounters an error, it'll automatically enter you into debug mode. [Some more info on `dbstop`](https://www.mathworks.com/help/matlab/ref/dbstop.html). It looks like you can do some other fun things with it, but I've never played around with them.
Before trying to write a function, play around in the command window. Make a "dummy" matrix to use as a test. `dummy = magic(4)` would work well in this case. Now consider the ways you can pull various groups of elements out of that matrix. If you wanted the first row and middle two columns, you could call `dummy(1,2:3)`. If you wanted all rows, but only the last column, you could use `dummy(:,end)`. Note that `end` can have mathematical operators applied to it when used in this context, so to get all rows and the second-to-last column, you could use `dummy(:,end-1)`. Using these techniques, determine how to break `dummy` into four quadrants. Now that you've done that with a `4 x 4`matrix, let's determine how to do it with an `n x n` matrix. Consider the `size` command; it returns the size of a data structure. So `size(dummy)` would return a vector `[4 4]`. That should help you get started.
 function [ out ] = mat_quad(mat) %UNTITLED Summary of this function goes here % Detailed explanation goes here [row col] = size(M); C = mat2cell(M, [row/2, row/2], [col/2, col/2]) that is what I got so far, I figured I would have to use the size function 
I wouldn't use `mat2cell` for this problem. You just need the matrix elements of each quadrant. Here, try starting with this: function[A,B,C,D] = mat_quad(M) [row,col] = size(M); A = M(1:row/2,1:col/2); B = ??? C = ??? D = ??? See if that helps.
Calling it as [A,B,C,D] = mat_quad(dummy) works though!
Absolutely! Glad to help.
Thank you for the reply! I'm sorry, but I don't quite understand what you mean, how do I do that? Sorry, I'm quite new to MATLAB 
Okay, awesome. I'll try that asap and update the results. I'm still kinda confused why it worked when I switched the order of the conditions though. Thanks! 
Try: find(ismember(array, match))
Usually it helps if you explain what is not working right now, does it give you an error? Is the output not what you expect? But I'll assume here that there are no errors and you just don't get the output you want. This is because your runge kutta scheme isn't implemented right. At the moment you are not doing any stepping, you are basically just collecting derivatives. I'll assume the graph for xx just looks like a decaying exp? Think about what time stepping means. It's not the only place that needs changing, but try to explain in you own words what the first part of xx(i) = xx(i) + ... actually does in your code