Thank you very much! 
Try the Andrew Ng [tutorial](https://www.coursera.org/learn/machine-learning) on machine learning maybe, it covers the basics of matlab, and it kinda covers what you need to know on cognitive science. You can do it for free, unless you want a certificate.
If you're at a university you likely have access to the self-paced courses on the Matlab website. Those were super helpful to me (albeit time consuming).
Here ya go : https://matlabacademy.mathworks.com/ that's the onramp for learning Matlab, by the makers of Matlab. Alsol this was pretty helpful : MATLAB textbook : https://drive.google.com/open?id=1Krl86TpXllSawZzheKRdH6xNd7v9kUKb
I understand! Thanks again; this is great. 
Thanks very much for the link! I did finally find my way to a couple answers thanks to the friendly folks here. I am very much obliged!
[MATLAB for Neuroscientists](https://www.amazon.co.uk/MATLAB-Neuroscientists-Introduction-Scientific-Computing/dp/0123745519) is an okay resource. As I recall, a few of the chapters revolve around analysing various electrophysiological data. 
Are we talking single unit ephys? EEG/ECoG? LFP? The techniques used are different.
You could call one of the "quiver" functions at every frame. Quiver won't plot arrows for a null/NaN value, so only set the force values for the oil drop location.
Can you plot it with 3 vectors going different directions though? I’ve only seen examples that look like air flow all going the same way
&gt;Can you plot it with 3 vectors going different direction It wouldn't be much use if you couldn't! With Quiver, call it like this quiver(xp,yp,xv,yv) where (xp,yp) are the (X,Y) coordinates of the points that define the start of each of the arrows , and (xv,yv) are the x and y components of the vectors that will be emanating from the points defined by (xp,yp). read more here: https://www.mathworks.com/help/matlab/ref/quiver.html 
Ah ok I get you, thanks 
You could also call it three times with a "hold on;", once each for the 3 directions.
Unfortunately I don't know the answer, but I do at least know what labview is. You can try to crosspost to /r/GradSchool or /r/labrats; I find that many biology academics don't use this particular subreddit!
I think the answer may depend on if this is run on the CPU or on a GPU.
You can turn memory usage information on in the profiler using the command "profile('memory','on')" and then profiling your function as normal, but from memory the results can be a little difficult to interpret so you'd need to do some googling around that Alternatively if you're on windows you can use the resource monitor to batch out a spreadsheet dump of system usage stats, so you could run your function a few times in MATLAB and get memory usage info from Windows. Info [here:](https://onlinehelp.tableau.com/current/server/en-us/perf_collect_perfmon.htm) Might be an idea to keep an eye on CPU usage as well as the other commenter said - memory might not be your most limiting factor.
What operating system are you using? MATLAB memory usage tools [only work on windows](https://www.mathworks.com/help/matlab/ref/memory.html#bt42p34-1).
&gt; What operating system are you using? The code will be run on both Linux and Windows &gt; MATLAB lets you measure memory but only work on windows. MATLAB lets you measure memory but only ~~work on windows.~~ makes it easy on windows. You *can* measure it on any OS (that runs MATLAB) using the `system` command. Ill add a function I wrote to do just that atr the end of this post. That said, calling a function to measure memory doesnt do me any good. I want to know what the peak memory is during a call to some function, not what the "idle" memory usage. Im trying to figure out how much extra memory (on top of what is required to store the raw data) a given function needs to actually run.
For the moment its on CPU. And, while I appreciate the suggestion, using `parfor` here is a really bad idea for 2 reasons: 1. `parfor` (and the entire MATLAB parallel pool parallelization system) is not very efficient. Making a vectorized call to a natively parallelized function like `fft` will (almost) always be faster than trying to explicitly parallelize it in MATLAB. 2. Im already memory bound, and really dont need the extra memory overhead that `parfor` brings.
Thanks for the suggestions....I can imagine making either of these work without too much effort. Ill try out the `profile` based one first probably, though in the past Ive found that evoking the profiler using the command line to be somewhat....buggy. Perhaps that is fixed though, or was a issue with my machine and not with MATLAB. I imagine you could get the system command to work on Linux too...just setup a bash script that continuously checks memory usage and records the highest observed value, and only stops after receiving some sort of signal from MATLAB (perhaps changing a bit from 0 to 1 in some pre-determined file). You could invoke it with `&amp;` at the end to make it run asynchronously, and then when it stops have it write the highest observed memory to some pre-determined file.
Hi, is solved a similar problem way: - deactivating swap fully system wide (more pain than help anyway) - implementing the vectorized instruction guarded by a try catch block like try out=vect-function(in) catch, out=[vec-function(in(1:end/2—1)) vec-function(in(end/2:end))]; end Recursive and divide and conquer, automatically maximizing block size
&gt; fft will (almost) always be faster than trying to explicitly parallelize it in MATLAB. I can suggest durectly using fftw , the matlab usage of it is bad. We achieved an 30 - 50x speedup that way with blocked 1d data in the amount of millions sets\gigabytes
Replace lines 3 and 4 with the following: xp = @(t,x)[x(2),x(1) + (0.2*x(1).^3] and then call the ode solver just like you did but without any quotes around xp. 
So, the first thing I'm thinking of implementing - and is probably something I really should have considered long before now - is to try and ensure that any processing/analysis/computational could in theory be run from one master script. Making the whole process in one script would be slightly impractical - it needs to be modular in case I change one step - but does anyone have experience of doing this? Or do you just remember the order of scripts to run and how it should be organised 'manually'?
representation of my brain just now: &gt;MILF.... Is that a toolbox? MatLab Integrateded Learning Functions? What could MI....oh.... oh oh oh oh
Late to the party, however...I'm a cognitive neuroscientist and I live inside matlab. The number one thing that helped me learn matlab - no expert, but also pretty damned handy with it by the standards of my field - have a project. I am a terrible textbook learner. Going through abstract exercises or trying to learn stuff by rote is totally impossible for me. Without a clear, actionable goal I struggle so hard to learn stuff. As soon as I had tasks that I had to/wanted to achieve it became easier because I no longer had to think about "trying to learn matlab" (which is hard and demotivating to me). Also, one thing that's great about having a project that contains multiple types of problems is that it will allow you to overcome a big problem that a lot of textbooks don't cover, which is how to think programmatically. There is a little bit of art to being able to dissect your idea and abstract what programmatic features will be needed. The order of operations to achieve the goal, how the logic would have to work. Particularly when you are using matlab for data manipulation, you should really aim to try and visualise each stage of the data 'journey' and how it changes. My recommendation if you're in cog-sci... Programme a cross-modal go-no-go task... Make an experiment where people have to respond to a blue flash or a high pitch sound, and not respond to any other colour or sound. Record the data, then analyse it from like 3 people. This will serve you great if you can get this even half working.
lol. good one! 
This sincerely seems like the "wrong" approach here. The memory usage shouldnt, but can, scale nonlinearly or nondeterministically. What you can do is double the size of the block you do until there is a failure then use half of the last successful size. Honestly if you need this much direct low level memory control on such a large dataset have you considered implementing this huge fft in C? Calling fftw directly could be much more efficient and will let you perform the transform in-place even. In your shoes I'd make a mex function or C program for a huge fft. mmap the input and the output files and call fftw on the mmaped pointers. Memory hierarchies are fantastically efficient and effective.
Thanks for the response mate! Yeap I agree that this is the best way to learn. I will work on previous analyses that I have done, but this time I will do them with MatLab. And sure I am planning to run some experiments for the purpose of improving my analysis
Not working with these files, I'm not entirely sure, but the first step would be to understand the structure of your input and output, then do the work to convert. I know it's not very helpful, but that's how I've done it with similar projects.
The input is structured such that the files being input start from 0000_0000, and climb up according to the images row/column. Another thing I forgot to mention is that there also needs to be a way to input the band numbers used (spectral data points). When I mention I’d like the output to be one of those 3, those are all just different ways of information storage for these file types. Band interleaved by pixel, band interleaved by line, and band sequential. Each has their benefits, so it’d be nice to be able to change. 
&gt; What you can do is double the size of the block you do until there is a failure then use half of the last successful size. The issue with this is ensuring that you get a failure that can be caught be a try/catch block and not a) a successful call that uses a bunch of swap space, or b) MATLAB being killed by the OS for going over the available memory+swap limit. Rather annoyingly, MATLAB only lets you limit the size of a single array. To my knowledge, there is no way to get it to limit the size of the total memory used by all variables (at least not from within MATLAB / in a way that a try/catch block could catch) &gt; Honestly if you need this much direct low level memory control on such a large dataset have you considered implementing this huge fft in C? Calling fftw directly could be much more efficient and will let you perform the transform in-place even. I mean I dont really need that much low level memory control, I just need to control how much data gets sent to the function at every iteration of the loop. I currently have things implemented where it looks at currently available and total memory, and chooses the block size so that each blocks takes up no more than x% of the available memory. I just want to be able to set the 'x' automatically rather than by trial and error. That said, I might implement the FFTW call via mex, since another commenter suggests that it is significantly more efficient. &gt; call fftw on the mmaped pointers. Memory hierarchies are fantastically efficient and effective. Ive been avoiding memory mapping since Ive always been of the impression that its mainly designed to allow for efficient random access of data on disk, but iof you need to systematically and sequentially loop through every value in a dataset you are better off manually reading.writing, so long as you have an efficient I/O function. Perhaps I am wrong in this thought, but thats always how Ive seen it. Theres also a few extra steps that would need to be implemented, since 1) each 1D data segment is separated by a 240 byte data header, and 2) the raw data tend to be stored as IBM floats, not IEEE floats.
I dont find this terribly surprising, but Id have guessed the difference is more like 5-10x, not 30-50x. Though I guess this shouldnt surprise me...I tried something like this with directly calling MKL to implement sparse BLAS operations and got anywhere from a 10-200x speedup (though had a few weird issues that I never fully figured out, though I suspect these are avx-512 related). I dont kow exactly how man 1D sets of data there are in my dataset, but some quick math suggests a few hundred billion, so I imagine thois might be worth implementing. &gt; maybe i will open source some code if intetested That would be awesome. I imagine I could probably figure it out, but Im still a relative beginner when dealing with MEX (and C coding in general), and already have too much to do, so Ill definitely take not needing to figure that out :)
&gt; What you can do is double the size of the block you do until there is a failure then use half of the last successful size. Or you, try the full size and half it until it works see my other coment (requires Swap disabled / or memory usage limited to the Physical RAM for matlab)
&gt; implementing the vectorized instruction guarded by a try catch block like have you actually tried this approach in MATLAB? I havent, but im fairly sure it wouldnt work because MATLAB (to my knowledge) only lets you set a limit ffor the size of a single variable, not the combined size of all variables. It seems like this would result in MATLAB requesting more memory than the system has in memory + swap, which would either cause the OS to kill off the matlab process or cause a BSOD (neither of which a try/catch block in MATLAB would catch, obviously)
&gt; have you actually tried this approach in MATLAB? yes I did, successfully. But it was not FFT and the memory was max somewhere else in the computation. Yes, as I wrote in the other comment, requirement is limiting the memory to the actual RAM only. (can be done with newer matlab, or just disable SWAP)
&gt; requirement is limiting the memory to the actual RAM only...can be done with newer matlab How? To my knowldge, MATLAB will let you set a limit for the size of a single array, but wont let you set a "total memory used" limit.As long as an individual array doesnt exceed the set limit, MATLAB ill happily keep using memory well past the available RAM (though, if the system swap is entirely disabled, maybe it would throw an error instead) At any rate my result likely wont always fit into memory, so I dont think this will work for me.
Variable (index) =value
I think I understand your question correctly. Where figure(1) is the original polygon, figure(2) % not figure 2 change this in your code% is the updated polygon after the coordinates within the polygon have been randomly perturbed. You are really close! you just have an indexing problem here if (xq(j) &lt; 1) &amp;&amp; (xq(j) &gt; -1) &amp;&amp; (yq(j) &lt; 1) &amp;&amp; (yq(j) &gt; -1) a much simpler condition to ask which is more flexible, because it is independent of your origin location is if in(j) You have done all the hard work.. Change this one line and your code does what I think you want it to do. Cheers
 out1 = function1(inputs) result = function2(out1) Or `function2(function1(inputs))`
Since I too like messing around with MATLAB, IO re-wrote your code to make it fully vectorized. Hopefully this gives you some ideas of where you could improve. clear all; clc; close all; xv = [-1,1,1,-1,-1]; % Polygon dimensions yv = [-1,-1,1,1,-1]; % Polygon dimensions %{ -------------------------- For Randomized Patterns -------------------------- %} N = 250; xq = randn(N,1); % Writing random numbers for x yq= randn(N,1); % Writing random numbers for y [in,on] = inpolygon(xq,yq,xv,yv); figure(1) plot(xv,yv) axis equal hold on plot(xq(in), yq(in), 'r+') plot(xq(on), yq(on), 'mo') plot(xq(~in), yq(~in), 'bo') hold off %{ -------------------------- For Randomized Patterns inside the polygon only -------------------------- %} % update bounded points xq(in) = 2*rand(nnz(in),1) - 1; yq(in) = 2*rand(nnz(in),1) - 1; figure(2) plot(xv,yv) axis equal hold on plot(xq(in),yq(in),'r+') plot(xq(~in),yq(~in),'bo') hold off 
It really depends on the application, but very quickly after people are taught basic coding I believe they need to be taught version control. When I first got into coding, I got into a bad habit of just duplicating scripts or functions that just needed a small tweak and then renaming them with some underscore tag (i.e., processing_script_new.m or mymethod_fixed.m). With Subversion or Git, it’s a lot easier to keep track of changes as projects bloom and evolve, which can be difficult especially when you’ve started from scratch. The hierarchical structure of the project also depends on what you’re doing. Normally I’d place all my functions in a folder/subfolder then only have a few major scripts/examples in the parent folder that use such functions. 
Use a Live Script: https://www.mathworks.com/help/matlab/matlab_prog/what-is-a-live-script-or-function.html;jsessionid=76f90f4c3c029fdb3d35eccf1b70
I've never seen that, I usually just look down bottom left and see if it says busy. It's possible to code in progress bars as well. Mouse turning into a wheel sounds like a Mac thing, or possibly something that was coded in. It's definitely not a default setting, I'll tell you that. Perhaps look in the preferences as well.
Usually the small "&gt;&gt;" in the command window disappears when code is running, and the busy notification appears as /u/SynbiosVyse mentioned. If your code is especially annoying to run, you could code verbose output to monitor script progress in the console (good coding practice btw) or even use a [graphical progress bar](https://www.mathworks.com/help/matlab/ref/waitbar.html). There are many options!!!
In terms of other things you can do, I'm team make it make noise. Normally beep, but if it's an especially stressful code I'll do Handel's Messiah.
Run and time your code or enter the commands tic toc at the top and bottom of sections or processes to get a sense of your performance 
Multi unit SNA - microneurography
Thank you! 
Perhaps instead of a script you could write a custom function? Provided enough additional information, I could write you something that should work for you fairly quickly (depending on the version of MATLAB you are running and how quickly you'd need it), but if you'd like to do it for yourself then writing your own custom function as a callback should work well. For example: your\_btn = uicontrol(arguments, ..., 'Callback', @yourfunction) Regardless, if you used GUIDE or wrote it from scratch, there may be a couple of ways to do this. Assuming you wrote it from scratch and it only provides a single function, this should be enough. Make a new function called "yourfunction.m". Such as: function yourfunction(argument) disp(argument) end You could choose to explicitly print, as my example, or you could silently pass through this function if you were doing object-oriented code. Just make sure you put a " &lt; handle" (without quotes) after your class definition if you want it to this feature. Inheriting from "handle" helps to ensure you're referring to and updating the same object. It's a bit more complicated than that, but additional info is available on Mathworks' website. If you want arguments to your function, you may need to try something like @(x, y) yourfunction(x, y) as your callback. More information on this should be available if you search for MATLAB anonymous functions. This, combined with inheritance from the handle class, is particularly useful if you have other GUI objects that should be updated if the user updates a field and you when don't want to explicitly state "obj = obj.doSomething". Inheriting from the handle class allows you to call a method, update the values stored in the class, and have it carry over without many complications. Assuming you worked with GUIDE, you should be able to: 1.) Launch GUIDE by typing "guide" (without quotes) into the Command Window. You can create a new UI or modify an existing one. 2.) Create a button by clicking the Push Button icon. 3.) Launch the Inspector tool by double clicking on your (new or old) button. 3.) Create a callback function by finding the Callback field in Inspector and clicking the pencil and paper icon. 4.) Navigate to the function that GUIDE created for you (should still work if it already existed). 5.) Write the MATLAB code that you want to execute on pressing the button. Please let me know if I need to provide additional information.
I see. So what are you working with? Raw continuous voltage signals, or waveforms, or..? I.e., are you trying to learn how to do the spike detection step, the spike sorting step, or some subsequent analysis? For reading on the basics of processing such data, check out the Scholarpedia article on spike sorting. Once I know more, I can probably help you out a bit. I've spent a lot of time doing this stuff in MatLab.
What version are you using?
2018a, sorry I should have included this originally! 
[squeeze(M)](https://uk.mathworks.com/help/matlab/ref/squeeze.html)
Take a look at the squeeze function. It removes singleton dimensions.
Thank you, looks like it dows what I need but why do these singleton dimensions appear for some cases, but not for others?
I don't remember when we found this but this should work: function ButtonPushed(app, event) webWindows = matlab.internal.webwindowmanager.instance.findAllWebwindows(); %#ok&lt;NASGU&gt; webWindows = matlab.internal.webwindowmanager.instance.windowList; for ii = 1:length(webWindows) webWindow = webWindows(ii); if strcmp( webWindow.Title, app.NameOfApp.Name ) break end end % ---- Your code goes here ---- [file, pathname] = uigetfile('*.csv','Select the CSV file to be used'); app.EditField.Value = fullfile(pathname,file); % ----------------------------- webWindow.setAlwaysOnTop(true); webWindow.setAlwaysOnTop(false); end Where `NameOfApp` is the name of the application window. 
Infinite trailing singleton dimensions are implied in MATLAB, i.e. a (3, 8) array is the same as a (3, 8, 1, 1, 1, 1) array. MATLAB automatically removes the trialing singleton dimensions from your sub-array.
I got it, this helped a lot. Thank you!
Thank you so much! I've been tearing my hair out over this for so long!
You'd need to read in each frame of the file, edit the pixel values appropriately as you desire, then resave each frame into a new video file. Editing the pixel values would be the difficult part. Depending on what you know about the data, the quiver arrows, and where things are changing, it should be "possible" but no doubt it would be a huge headache. It would be easier to recreate the moving from scratch and add the quiver to each frame as you generate them the first time.
Not sure about (1), but I think the solution to (2) might be a handy function called [ginput](https://www.mathworks.com/help/matlab/ref/ginput.html) You might also find a use for [findpeaks](https://www.mathworks.com/help/signal/ref/findpeaks.html)
Great, glad to help!
Yes only once if you have the compiler. I'm not sure if the python sdk is the compiler though.
What do you mean cluster the SOM data? Like show the outputs from the network? Or the distances? This may be a good starting point: https://www.mathworks.com/help/nnet/ug/cluster-with-self-organizing-map-neural-network.html
Aw, thanks for ginput. I think that will work. I actually wrote the original script with findpeaks, which did work well, but for complicated reasons it looks like I'll have to pick them by hand. 
* I’ve been using ``reshape`` for ages, and this is a life changing revelation * I am intrigued, excited and a little afraid of your username 
Happy to help! When we first started using the AppDesigner two years ago this one one of the first things we stumbled across. I was hoping that (by 2018a) having the box pop up on top of the app would be default behavior... Oh well! I don't think this is the exact page that describes what's going on in the code block above, but it's at least pretty close: https://undocumentedmatlab.com/blog/customizing-uifigures-part-1
 plot(array(1,:),array(2,:)), should do it if I'm understanding what you're saying. 
perfect
Can you use the zoom and data cursor pin the figure? There is a good peak detector on matweb file exchange called peakdet. 
Yeah, but the issue is that when I turn data cursor on, it won't let me also zoom for some reason.
Also, peakdet looks interesting. Do you know if it's any different in practice than findpeaks?
Xlsread() on windows will use a COM connection to Excel (if you have Excel installed) to read the data. On the Mac, it reads in 'basic' mode so it doesn't come through as nicely. Check the doc for xlsread's basic mode. I don't know that there's a workaround. (Note: I'm on mobile and am not currently looking at the doc. I could be wrong about some bits.) 
Xlsread() on windows will use a COM connection to Excel (if you have Excel installed) to read the data. On the Mac, it reads in 'basic' mode so it doesn't come through as nicely. Check the doc for xlsread's basic mode. I don't know that there's a workaround. (Note: I'm on mobile and am not currently looking at the doc. I could be wrong about some bits.) 
Thank you. I read something about adding 'basic' to the xlsread command, but I receive an error saying that there are too many arguments (i.e. basics is not allowed). 
Have you tried any other functions like csvread(), readtable(), or even maybe textscan()? Could have better luck with those but I'm not sure 
Did you figure it out? Unfortunately, I was away from my MATLAB instance, so I couldn't whip up an example. Let us know if you're still working on it.
All plugged in values should be on one graph.
where is the end at? not exactly sure if that matures though but I think there might be a more concise way to solve this I will try and help.
I’m not entirely sure what your code represents in terms of what you’ve told us, but from the looks of it. It seems that you make an array ‘e’ in which you assign every ‘e(i)’ value either one of those three values of 3,83 and so on. This seems inefficient because once the array is complete you’ll have an array ‘e’ that has 80 elements of just ONE of your numbers (sorry if I don’t make sense tell me if you need more clarification). 
yeah array of e values and an array of i values since the e s do not change for the iteration of each i value.
Yea I am confused on the order I should go about doing this. My function is time = (2\*length)\*the sqrt(permittivity)/speed of light. I want to plot plugging in 3,38,80 for permittivity on one graph. The end statement I have is after the equation. Not sure how to write it to make 80 elements of my 3 values. Thank you.
ah yes, my end statement is after my equation, not sure why it didn't paste. I have N-100 because before attempting this I plotted permittivity vs time once. Now I am just trying to plot with plugging in 3 values for permittivity unto one graph with a for loop. c=3e8; L=0.30; N=100; ep=linspace(2,100,N); t=2\*L\*sqrt(ep)/c; plot(ep,t)
So to be clear, you have one equation, you have three numbers you want to individually put into the equation to get three separate outputs right? So that means you’d only be plotting three points on your graph correct? 
yes
I don't think you need any loops for this. Just plot the right element and you're good to go. `c=3e8; %speed of light` `L=0.30; %probe length` `i = 1:80;` `t(i)=2*L*sqrt(i)/c;` `plot(i,t) % Plot the whole thing` `plot(i,t,'-o','MarkerIndices',[3 38 80]) % Just plot the indices needed` If you need to only have the 3 points, you can also do that with an array of the 3 points only. `c=3e8; %speed of light` `L=0.30; %probe length` `i = [3 38 80];` `t(1:3)=2*L*sqrt(i)/c;` `plot(i,t,'*')`
xlsread uses a ['basic' mode](https://www.mathworks.com/help/matlab/ref/xlsread.html#btg5vmt-1-basic) that has the following drawback : &gt;Imports all dates as Excel serial date numbers. Excel serial date numbers use a different reference date than MATLAB® date numbers. Fortunately, there's a [x2mdate](https://www.mathworks.com/help/finance/x2mdate.html) function which can convert it to the right format. Unfortunately, there's a 2nd restriction on the basic mode : &gt;Does not support an xlRange input when reading XLS files. In this case, use '' in place of xlRange. The older XLS file format doesn't support range names in basic mode. You either need to load the whole file and go from there or update the file type from the Excel side.
Not sure what you are wanting to do, but now you are making a graph every loop count, and updating t at the end? But still plotting t every step
Can't you just check the stability of each transfer function? 
Sorry before. There was a description in this post but they got deleted after I upload the pict. I'm trying to figured out how to do stability analysis (root locus) in this model (wood-berry distillation) but I don't know how. Can someone help me?
what is pole zero block?
All of this is linear except for the pink stuff. For the non-pink outputs, you can convert it all to a single equivalent transfer function, and run rlocus on that transfer function.
Hpnestly, if they can install a newer version, and they have free licences, then why not. AMD a few other options: C) Reach out to matlab help, and see what they suggest you do. D) Turning your code into a stand alone app that doesn't need matlab to run. Though this will require some time, to learn how App Designer works. Trust me, though, it's not that hard to do (and its sooo much better than Guide was)
In my codes that I share I now perform a check at the beginning to compare the user's Matlab version to the oldest version that I've verified my code runs properly on. If this check fails I print out an error statement with the minimum version number. This is a reasonable "backwards compatibility" IMHO. I think it's a reasonable expectation that your research collaborators, especially if they have access to current versions, to update to your version. Plus, for a research code, it can be an all-consuming burden to maintain various compatibilities with older versions.
I’m on mobile so forgive me for the formatting, but if I were doing this I’d do something like this... q = 3; z = 38; b = 80; c = speed of light L = length syms p time = (2*L) * sqrt(p) / c %Equation in which we will plug in three separate values Ans1 = double(subs(time,p,q)) %Plugging in 3 Ans2 = double(subs(time,p,z)) %Plugging in 38 Ans3 = double(subs(time,p,b)) %Plugging in 80 Hold On plot(Ans1) plot(Ans2) plot(Ans3) %In the end you will have three separate numbers that you’ve plotted I hope this helps 
Thanks, I never considered turning it into an app but that might be really good - especially as most biologists don't use MATLAB day to day. 
That sounds like a good solution, thanks.
I’m not sure either tbh, I am trying to just plot time vs permittivity(e) but showing 3 different outputs on one graph for e. Not sure how to go about it. 
There is a pole zero block to look at stability. Or root locus. Which ever you want. Just do what jcband said first. 
That pink stuff is the error criterion.. Is this the correct way to linearization the model? https://prnt.sc/kcg9sq
I don't understand your question. Your model is already linear. You just need to reduce it to one transfer function per output and use the rlocus function.
If you are still a student good luck getting prof to change his version. Put the work in. 
sorry for that. can u give me a tutorial on how to convert it all to a single transfer function?
&gt; The older XLS file format doesn't support range names in basic mode. OP isn't not doing this, only a sheet name is specified. The more likely culprit is the caveat to the second output in basic mode: &gt; For XLS files in basic import mode, the `txt` output contains empty character vectors, `''`, in place of leading columns of numeric data that precede text data in the spreadsheet. In all other cases, `txt` does not contain these additional columns. However, without knowing how the spreadsheet is formatted it's not really possible to actually explain what is happening.
You can probably explain it to yourself from the documentation for [`==`/`eq`](https://www.mathworks.com/help/matlab/ref/eq.html), [`double`](https://www.mathworks.com/help/matlab/ref/double.html), and [`mean`](https://www.mathworks.com/help/matlab/ref/mean.html). Though `double` really isn't necessary here.
http://www.msubbu.in/sp/ctrl/BD-Rules.htm
Another user posted two good ideas, here are some more: E) If you have access to the MATLAB compiler toolbox use it to create an executable that your colleagues can run. F) Hybrid of D and E, compile the app. (It may be a little slow on startup, that's normal.) Both of this options will require installation of the appropriate MATLAB runtime. If possible, I would have them upgrade, there have been a lot of great features added in the past two years that they're missing out on!
Break it down into pieces. Create an array x and array y then run x == y. Then think about how you obtain the mean of that result and ask yourself is that the percentage?.
`x==y` returns a 0 (false) at each index where x and y are equal; double re-casts that to 64-bit doubles (but still zeros and ones). Now you have an array of zeroes and ones; take the mean of that, and you have the sum of all of the elements - in this case only the ones increase it - divided by the number of elements. That is the percentage of places in the array at which x and y are equal.
ok, thanks for the feedback. I'll try to add the quiver ass I generate the frames. I will try a while loop within a while loop for that if it is possible
When I'm working with video formatting and converting I use ffmpeg. I would advise you to look into that instead. It can be called from matlab using the system command.
grayImage = rgb2gray(rgbImage); That doesn't work? https://www.mathworks.com/help/matlab/ref/rgb2gray.html
You'd have to load the video using VideoReader, pull out each frame using getframe, convert to greyscale using rgb2grey, then reconstruct the video using VideoWriter. There are easier ways to do that though. Pretty much any video editing software (iMovie, Final Cut, etc) will do that for you. 
Thanks for your reply, I've read up on the compiler toolbox and found this info: [https://uk.mathworks.com/products/compiler/supported/compiler\_support.html](https://uk.mathworks.com/products/compiler/supported/compiler_support.html) My program uses the Computer Vision Toolbox and has a GUIDE GUI (please forgive me!). Am I right in thinking that it won't compile? 
Do you have a specific question? This looks like some type of homework problem.
I would say to give the AppDesigner a shot over guide since you're using 2018a; however, things may not be looking good for compiling.
Okay, thanks.
That’s as specific as I can make it. It is not homework, I can show my papers if need be.
 for lmn = 1:numberofimages imagename = [num2str(lmn),'.jpg']; Sceneimage(:,:,:,lmn) = rgb2gray(imread(imagename)) end 
If you really struggle load all the data in windows, save to .mat, use that as your portable data source. 
thak you very much. on in further uses of my SceneImage do i need to use it as SceneImage(:,:,:,lmn)? or can i use it as SceneImage(lmn) ?
Depending on how you want to access / use them you may be able to use an [image Datastore](https://www.mathworks.com/help/matlab/ref/matlab.io.datastore.imagedatastore.html).
Just use as many : as you need, in my example its SceneImage(x,y,rgb,imagenumber) 
I would recommend using cells for multiple images. You can even store images with different dimensions using cells.
On Windows MATLAB can call the Excel COM API for Excel file read operations. I’m not familiar with .ODS files specifically, but if that is a format accessible though Excel, that might be why it is Windows only. I don’t know if a LINUX equivalent exists. 
Perhaps [this](https://www.mathworks.com/matlabcentral/fileexchange/39592-load-ods-import-numbers-from-open-document-spreadsheet)?
I saw there are a few packages but I was wondering why the functionality is not built-in, especially considering it is an open format.
Another option: If your files are named 0 padded (e.g., 09.jpg), here's a 2 digit loader: ''' numberofimages = 20; for idx = 1:numberofimages imagename = sprintf('%02d.jpg', idx); disp(['Loading ', num2str(imagename)]) sceneImage(:,:,lmn) = rgb2gray(imread(imagename)) end ''' And a 3 digit loader: ''' numberofimages = 120; for idx = 1:numberofimages imagename = sprintf('%03d.jpg', idx); disp(['Loading ', num2str(imagename)]) sceneImage(:,:,lmn) = rgb2gray(imread(imagename)) end '''
Who knows. Maybe MS facilitates some os functionality to prioritize their products, or they just assume the community will pick up the slack.
No reason to have an additional index for multiple channels because of \`\`\`rgb2gray\`\`\`, so \`\`\`SceneImage(x,y,imagenumber)\`\`\` would be fine.
`2^32 bytes is the total amount of addressable memory in 32-bit programs.` Do you mean 2\^32 bits? Also in MATLAB, isn't double the default format, which would be a 2\^64 bit variable?
I am interested in this binary format. Do you typically convert your csv data to binary if you will be processing it repeatedly? Or is binary the output from whatever program you are using?
This guy has good Kalman filter and Particle Filter videos: https://www.youtube.com/watch?v=FkCT_LV9Syk IIRC, he does code at the end.
[removed]
Just a quick heads up, since I literally stumbled over this yesterday: if the order of the images is of any importance, keep track on how you get a list of the images. If you get a list of files from something like dir(), chances are the order is messed up (1 10..19 20 21 3 4 5 etc). Before you go insane, there's [a tool for it](https://de.mathworks.com/matlabcentral/fileexchange/47434-natural-order-filename-sort)
You are correct.
Ok, i get what you are saying and i've done that. But when i go ahead to read the images with imshow I get this error: Cell contents reference from a non-cell array object. Any way around that?
If the whole purpose of `evaluate` is to update the values in the output struct, I'd say you may as well assign the values within that method instead of returning them to the caller. But if you _do_ want to return the values and you have 10+ to deal with, you could either try packaging them together as a struct within `evaluate` first, and then returning that struct. Or look at `varargout` - though that might not really clean up the code much.
Yeah, that was mostly the reason I made it that way now (assigning the values usually at the most bottom function call), but I wasn't sure if there was a more general answer for it. I will then leave it as it is for now I think! Having structures as an output would have been an option, but in practice I don't have one result structure but three, meaning I would always have three structures as an output and would have had to think about somehow merging them with the object field. I didn't even think about using varagout, but yeah, I doubt it would be much more fluent approach. Thanks!
You could use **csvwrite()** which will produce the request file type. However, it will flatten the 3d dimension turning a matrix that is [9x9x2] into a [9x18]. Depending on the size of these matrices you could consider writing them as a binary file with **fwrite()** to save space.
As @[fragmentOutOfOrder](https://www.reddit.com/user/fragmentOutOfOrder) said, the proper way is to use [cvswrite](http://www.mathworks.com/help/matlab/ref/csvwrite.html;jsessionid=0b8c189cf603c01c55f9e6b3e02c) . Note that since *cvswrite* doesn't accept cell arrays as input argument, you mention a 3D matrix, first you have to use [cell2mat](http://www.mathworks.com/help/matlab/ref/cell2mat.html) to convert your cell array into an ordinary matrix, as it is proposed in the *cvswrite* documentation.
&gt; as recommended by the warning in Matlab I'm assuming you're building this vector in a loop of some kind? How did you run the comparison to get the 20% slower value.
Continuing on what the others pointed before Assuming you want to save the data without the hassle of turning a 9x9x2 into a 9x18 matrix, you could always make a cycle and save each 9x9xi matrix in an individual CSV file. Or is it a requirement for you to have the entire matrix in one file?
Other comments are probably good for answering the CSV question, but I'd step back and ask why CSV? If you simply want to get a MATLAB 3D array into Python you don't need CSVs to do that. You can save the 3D array as a .mat file, which Python can read with scipy.io.loadmat. There's probably other countless binary io methods here with and without reshaping the data.
You can't really compare loading the data to running the script to determine if preallocation is speeding up your code. Try running your script with and without preallocation and compare those times to determine if preallocation is an improvement.
&gt;save each 9x9xi matrix in an individual CSV file. That would mean 5035 CSV files for me, as I am working with a large dataset
Same here, I am currently working with 2000 3d matrices of 80x80x6000. 
3D matrices aren't cell arrays
I agree with the previous comments that it is important to be sure your timings are doing a reasonable comparison. Preallocating "poorly" will often result in a performance loss. I would check out the following link to start. https://blogs.mathworks.com/loren/2012/11/29/understanding-array-preallocation/
IMHO, it's better to just use a regular format (e.g., with zero-padding or an index) generated with ```sprintf()``` and then loading that way rather than using dir (which is, as you mentioned, unpredictable).
Correct. I just used tic toc to get a read out. 
Thanks for the link! 
What's the problem with that?
Yes, you are absolutely right. My bad. I've edited my answer. Thanks.
What type of data is this? Sounds like a stacked tiff could be a better format. Csv only makes sense for 2d data.
I mean - did you run them together in one script? One after the next? MATLAB has some tricks built in to run things faster on subsequent iterations, so I need more details about how you actually ran this test before I can give you any useful information. It's possible that preallocation *is* faster, but you just ran your test unfairly.
Thanks.
In my work I use seismic data, and it is almost always in a format called SEG-Y. This format is standardized, where The first 3600 bytes of a file are a global header, and the rest of the data alternates between 240-byte local headers and segments of data in binary format. The data is never in csv format - the datasets are rather large (often several terabytes) so keeping it in csv would be highly inefficient. Binary data basically just stores the 1's and 0's that the raw data requires. So, as long as you know the structure of the data (i.e., where each data point needs to go in whatever code you want to use it for), and the data are all in a consistent format (say, ieee doubles), Then you would just read the whole data and it would get separated into 8 byte chunks. No worrying about commas separating values, no conversion from ascii to numbers, etc. Because the data is stored on disk in the same way it will be used by the system (i.e., it doesnt need to be converted), reading/writing it is much faster. Depending on your CPU and HDD, often you can get a few hundred MB/s on both read and write. The general code looks something like this fid = fopen(filename,'r+'); % open the file. the 'r+' flag allows reading and writing. note that the 'w' and 'w+' flags will delete the file on disk, if it exists. dataRead = fread(fid,[dataSize],[formatOnDisk,'=&gt;',formatInMatlab]); % read the data fseek(fid,0,'bof'); % move back to start of file fwrite(fid,dataToWrite,[formatInMatlab]); % overwrite the data with some new data fclose(fid); % close the file
&gt; Do you mean 2^32 bits? No (see below for why) &gt; Also in MATLAB, isn't double the default format, which would be a 2^64 bit variable? It doesnt quite work like that. doubles take 64 bits to store, but dont require a 64-bit OS. A `N-bit OS` can address up to 2^N different memory addresses, by using different combinations of 1's and 0's. For example, a 4-bit OS can address 16 different memory addresses, defined by the following combinations: 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 1 Each memory address corresponds to a byte (8 bits) of information, which is why you get 2^N bytes from an N-bit OS. There isnt (to my knowledge) a good way to access a single bit of a memory address directly - As i understand it, you basically read all 8 bits and then you can throw the ones you dont want away. This is also why MATLAB saves logicals (`true` and `false`) as effectively `uint8(0)` and `uint8(1)`. If you ever look at the memory taken up be an array of logicals you will see that each value gets 1 byte, not 1 bit.
If you have a distribution you can evaluate the points of interest with **pdf(gm,[x1 y1; x2 y2])**. This will give you the probability of your points. gm = gmdistribution([0.5 2];[1 0.5; 0.5 0.9]); scores = pdf(gm,[ 0.1 0.1; 1 1; 0.25 1.5; 0.5 2; 0.75 2.3; 2 2; 3 3]) For finding the percentile range you would need to convert these probabilities to z-scores. This allows you to flag points for being within a certain percentile of your distribution. ptile = zscore(scores) This threshold depends on the confidence you seek in your evaluation, but for a coarse assessment you could flag z-scores between -0.7 and 0.7 as being roughly inclusive of 25% to 75%. 
I do exactly this for training neural networks in python-- it's probably the best way.
&gt; Though double really isn't necessary here. Im not sure, but I think it might be required on some older versions of MATLAB &gt; There's also an obligatory caveat that x==y can lead to floating point errors. To add to this, if x and y are both floats you are usually better off doing abs(x-y) &lt; sqrt(eps(max(x,y))) UNLESS you specifically need a bit-for-bit identical comparison (which is what `x==y` gives)
Thank you for the help! I think this is essentially what I am looking for. I am still a little confused as to where these points of interest are coming from in this case. I assume this would be over a range of measured angles, however I need to have the percentiles of the peaks from the fit decide the range of turning angles. Would the points I evaluate just be the mean value for the peak?
Out of curiosity, why are you involving Matlab at all?
After a quick experiment, my `getframe` call is ~10x faster if the figure is visible. `drawnow` before `getframe` also speeds the whole process up slightly. &gt; I have a fair number of cores available, butthese both seem to be single threaded If you can't parallelize at the micro level, parallelize at the macro level (`parfor`). You'll have to save the data to disk and write the video in a second step. Probably still worth it with 12 workers.
Are you sure its getting the image that takes a lot of time? My guess would be that the image is drawn on getframe, and the time reported includes that. If you put `drawnow` in a the line above getframe, you can see if the drawing takes long. If that's so, you can probably stop your search for a faster way to get the image.
The points of interest would be your unknown or test case. The approach requires that some of your tests have known training cases to build a model for a right turn or a left turn. You sent 50 cows on a course to turn left only and built a model. Then sent 50 cows to turn right only and built a model. These two models can be put into one gmdistribution which will produce two evaluation scores, one for each model, from a set of 50 cows that were allowed to turn in the direction of their choosing. From your description it does sound like it should be the angles, but hopefully an abstraction helps makes it clear since I don't know your specific dataset.
&gt;scipy.io.loadmat Thank you for telling me about this. You just saved me a huge amount of time as earlier i concatenated all the columns into one in matlab by using array = array(:) but to read this array back into its original format in python would have had definitively taken more time
Good thought, though the time definitely seems to be spent on extracting the RGB values. Admittedly some of the time from creating the image was being hidden (and probably added to the `getframe` call) by the figure not being visible, but even with the figure visible and `drawnow` being called before `getframe`, `getframe` is taking up nearly half the execution time (which is a bit more reasonable than 75%, but still not great). [here](https://imgur.com/a/uSeBWOG) are profiler outputs from running both with the figure visible and hidden (both have the added `drawnow` call). There are also results with: * the video writing parts removed (but still extracting the image) * both the video writing and the image extraction parts removed
No prob! Also note that you can save mat files with Python to, in order to go back to Matlab (I'm sure googling will give you a similar result as loadmat, probably scipy.io.savemat or something). Also know that while Matlab stacks an array in column major order, Python/Numpy stacks it in row major order. So for the array x = [1 2; 3 4] in Matlab, x(:) is [1; 3; 2; 4], while x.reshape(-1) in Numpy should return [1, 2, 3, 4]. This can usually be handled with smart transposing if you're in 2 dimensions, or a more specific numpy unstacking function.
&gt; After a quick experiment, my `getframe` call is ~10x faster if the figure is visible. For me it is more like a factor of 2, but it still helps reduce the overall time by a bit. Still, even with this + `drawnow` added the `getframe` call is still the single most time consuming line. [here](https://imgur.com/a/uSeBWOG) are profiler outputs from running both with the figure visible and hidden (both have the added `drawnow` call). There are also results with: * the video writing parts removed (but still extracting the image) * both the video writing and the image extraction parts removed &gt; parfor Ive tried to avoid using `parfor`, in part because I tend to find it inefficient, in part because I'm usually already memory bound, but mainly (in this case) because there are some systems that I will be running this on that dont have `parfor` available. My system at home does, so I could check if the parallel computing toolbox is available (I actually already have a function that does this) and then branch the code to either use `for` or `parfor`, depending....but to be honest Id rather not lol.
&gt; when I do this [preallocate with zeros] my script is about 20 percent slower than just loading the data what exactly do you mean by "just loading the data". Seeing code how how exactly you load the data is sort of required to tell you why preallocation might not be useful here
&gt; I was wondering why the functionality is not built-in Realistically? Because calling someone elses working function is a hell of a lot easier than writing your own, and they figure there are more critical things that need to be implemented (say, making sparse operations multithreaded, to list one that I find particularly annoying) than writing a full-fledged data loading program for a fairly obscure format, especially when it is working for most people who need it (if it is a file type mainly used in excel then Id imagine most people who would be on windows and have excel installed). TMW just doesnt have nearly enough devs to dedicate time to rather obscure things like this. Its too bad, but its the way it is.
&gt; 2000 3d matrices of 80x80x6000 How have you lasted this long using CSV over binary with that much data? I wrote up a quick test...run it on your system and see how much slower CSV actually is for your computer. M=randn(80,80,6000,'single'); tic fid=fopen('test_CSV_BIN.bin','w'); fwrite(fid,M,'single'); fclose(fid); time_BIN=toc; M=randn(80,80,6000,'single'); tic csvwrite('test_CSV_BIN.csv',M); time_CSV=toc; files=dir('test_CSV_BIN*'); size_CSV=files(2).bytes; size_BIN=files(1).bytes; delete test_CSV_BIN.csv test_CSV_BIN.bin fprintf('\nTHE CSV file took %.3f seconds to create and is taking up %.2f MB',time_CSV,size_CSV/1e6) fprintf('\nThe BIN file took %.3f seconds to create and is taking up %.2f MB\n',time_BIN,size_BIN/1e6) fprintf('\nThe BIN file generated %.2fx faster and is taking up %.2fx less space versus the CSV file\n',time_CSV/time_BIN,size_CSV/size_BIN) On my system I get The CSV file took 22.258 seconds to create and is taking up 313.35 MB The BIN file took 0.102 seconds to create and is taking up 153.60 MB The BIN file generated 217.75x faster and is taking up 2.04x less space versus the CSV file
&gt; For me it is more like a factor of 2 Could have to do with the image size. I was just doing a quick test with the default figure, so overhead is probably a much bigger portion of the work in my test. &gt; profiler outputs It's a little odd to me that speeding up `getFrame` slows `writeVideo` down like that. I guess with the faster `getFrame` the previous write might not have finished yet when you get to the next iteration? If that's the case, your actual bottleneck is in `writeVideo`. I wonder what happens if you store all the frames and use the "1-by-F array of structures" option for the `writeVideo` argument (assuming you have plenty of memory to do so...). &gt; then branch the code to either use `for` or `parfor` I was under the impression that `parfor` defaulted to `for` when a parallel pool can't be opened. From the "Tips" section of the docs: &gt; * A parfor-loop runs on the existing parallel pool. If no pool exists, parfor starts a new parallel pool, unless the automatic starting of pools is disabled in your parallel preferences. If there is no parallel pool and parfor cannot start one, the loop runs serially in the client session. Maybe there's a difference between "no parallel toolbox" and "disabled in your parallel preferences" though. `parfor` is kind of shitty, but it's also easy and if you have enough independent iterations for it to matter I don't usually argue with the 10x speedup (your overhead may vary; over enough iterations I usually find it low). But if you'd just rather not you can always just wait longer.
There are dozens of ways that you could be doing this badly. Show us code instead of making us guess. 
&gt; I wonder what happens if you store all the frames and use the "1-by-F array of structures" option for the writeVideo argument I updated the imgur album with profiler results from this case. Basically, the video writing always takes ~21 seconds, and getting the frames takes ~23 Seconds if the figure is visible and ~50 seconds if not. The majority of the time (especially in the hidden case) seems to be coming from `getframe`. I guess when writing 1 frame at a time using `getframe` on a hidden image much generate and cache something that `writeVideo` can use, but that only stays cached for maybe a few frames and is gone by the time the loop ends. That would be my guess anyways. &gt; I was under the impression that 'parfor' defaulted to for when a parallel pool can't be opened. This could very well be. I havent used `parfor` in a while, and honestly dont remember if that was the case or not. I might try it out, though the videos im currently using this for are 1200 frames, not 100, so *that* might push my memory limits a bit (and id rather not save/load to/from disk if I can avoid it) 
Had code from someone else written in Matlab that vectored up all the data. I since have re written it into python. 
&gt; Im not sure, but I think it might be required on some older versions of MATLAB Works fine all the way back to R2010a.
You've defined this as a class, right? Possibly try taking advantage of operator overloading? You should be able to "add" or perform similar functions between two common classes, if implemented correctly, as easily as results = obj1 + obj2. Concatenation should be allowed as well, provided they share the same class definition. [https://www.mathworks.com/help/matlab/matlab\_oop/implementing-operators-for-your-class.html](https://www.mathworks.com/help/matlab/matlab_oop/implementing-operators-for-your-class.html) Please let me know if I can assist you with this any further and provide some example data to make it easier on my end.
Good to know. A lot of times when I do something like this i include the `double` call for backwards compatibility, but I never bothered to actually check if/what version it was necessary lol.
This is interesting.
In my case it was actually the reverse problem. I had multiple CSV files from simulations and I had to turn them into .mat files.
I wrote that blog article. Nice to see some people still getting something out of it.
What are you communicating with? My first instinct would be to see if the device is taking 1 second to respond to your request. When you tested with fprintf/fscanf, was the fprintf or the fscanf part long? You might want to try it in a serial console (outside of MATLAB) to see your device response time before looking into MATLAB's part in this.
How does one access said binary - let's say in matlab - after it is saved? 
 fid=fopen('test_CSV_BIN.bin','w'); data = fread(fid,[80,80,6000],'single=&gt;single'); fclose(fid); 
As it just happens, I recently made a sample video writing code. This shows one way to generate a video in matlab. % setup and open video object vidObj1 = VideoWriter(['sampleVidName.mp4'],'MPEG-4'); % Choose filename here vidObj1.Quality = 95; vidObj1.FrameRate = 30; open(vidObj1); % dummy data numFrames = 100; data = randn(200,200,numFrames); % open figure figure(1) for nn=1:numFrames % Generate plot of current data slice with imagesc imagesc(data(:,:,nn)) % update figure drawnow % get figure RBG data and write video frame imageTemp = getframe(gca); % write current frame writeVideo(vidObj1,imageTemp); end % close video close(vidObj1) % close figure close(figure(1)) 
much appreciated sir
I edited the post to include a data reading test too. On my system the difference isnt quite as big, but it still a factor of 60x faster to use binary instead of csv. You also dont lose data precision like you do with csv data.
note: the code I originally posted doesnt work, since apparently `fread` cant use more than 2 dimensions to define the size. Use what I have in the data read test in my edited original comment instead (this just reads the values all as a vector and then reshapes them afterwords)
Note that if you do it this way with imagesc, the color axis will jump around frame to frame. I usually save the colorbar from the first frame initially, then apply it after displaying each frame in the sequence.
thanks! I ended up doing this though :D `....` `figure;` `imshow(filename);` `line(newBoxPolygon{i}(:, 1), newBoxPolygon{i}(:, 2), 'Color', 'y');` `close all;` `frame =getframe(gcf);` `writeVideo(writerObj, frame);` `end` `close(writerObj);` `implay('myVideo.avi');` Only bad aspect of this is that it opens every frame in a figure, that's the reason I have a "close all" on line 4.
So if I get you correctly, you are more interested in results eps -&gt; 1e-4 than, e.g. 1e-4 -&gt; 2e-4? You could create two vectors with different spacing and just concatenate them. E.g. A=linspace(eps,1e-4,10000); B=linspace(2e-4,1,9999); C=[A B]; Sorry for poor formatting, on mobile...
Hi Dublin. If I use something like TeraTerm the response time is much faster. Usually the response string is very short, something like "POUT: 6 dBm". Using `fread(SerialObject, n)` (where `n` is the number of bits to read) I'm able to obtain the response in something like 0.03 seconds. https://it.mathworks.com/matlabcentral/answers/413043-how-to-speed-up-rs232-communications?s_tid=mlc_ans_email_view#comment_595510
I don't think you can. I use PCA outside the App, check if the transform is making sense, then I import the transformed data to the APP
This does improve what I am getting as it doesn't exclude the really small numbers but I would like to see the whole range with around the same accuracy if possible.
I am a fool I was using logspace incorrectly.
The \`[annotation](https://www.mathworks.com/help/matlab/ref/annotation.html)\` command might help. It places your selected text at the coordinates you specify. So to label all your points, you'll probably want to specify an offset, so the text doesn't overlap the point it's labelling. The inputs to the annotation command aren't described very well from the 'help annotation' built into matlab, so you'll probably need to reference the mathworks website: [https://www.mathworks.com/help/matlab/ref/annotation.html](https://www.mathworks.com/help/matlab/ref/annotation.html)
I like to use python when I can but haven't found a solution that makes nice robust 3D plots. matlplotlib's 3d plots aren't really functional and every implementation I've tried using things like vispy and VTK seem to be highly involved to get working. Maybe it's just a really steep learning curve, but when I need to plot a heatmap from a 3D triangular mesh, I doubt it could be easier than trisurf(Tri,X,Y,Z,C) to generate pretty and interactive 3D plots.
This is very true from my recollection, but I honestly can't recall the last time a 3D plot in the style of trisurf was the best choice for visualizing something. Often in my experience, if something is not clear with a contour plot, it will only be less clear with a 3D surface mesh. Of course, different people have different visualization needs, so my experience may not generalize. I'd really like to get VTK working and learn it, but it's not very straightforward! I've seen some phenomenal visualizations made with [Mayavi](https://docs.enthought.com/mayavi/mayavi/installation.html), but that requires VTK as well as Qt5. Paraview is another option, and I did get that up and running again recently, but it has been a while since I've used the Python interface. For very involved 3D plots, like from fluid dynamics simulations, I tend to use macros generated with software like Paraview, Tecplot, Fieldview, etc. for batch processing, and I hear Tecplot now has a Python interface as well.
From Matlab Answers: "2. Principal component analysis is a quantitatively rigorous method for achieving this simplification. The method generates a new set of variables, called principal components. Each principal component is a linear combination of the original variables. All the principal components are orthogonal to each other, so there is no redundant information. The principal components as a whole form an orthogonal basis for the space of the data. For example, in the cancer dataset, if you are using x predictors and then MATLAB PCA reduces this to y (&lt;=x). These are not the actual data (columns) which you are using, these are derived columns out of the predictors by MATLAB. If you want to see the data of these 7 components out of the trained classifier, then you can use the following command: &gt;&gt; trainedClassifier.PCACoefficients " https://www.mathworks.com/matlabcentral/answers/341211-questions-on-classification-learner-app
For the most part it ought to. If the function is crazy fast and you are calling it millions of times than the overhead of passing in and out of the mex might hurt you, but Otherwise it should do a lot for you. 
That's what I hoped to hear! Thank you!
I use MATLAB to design microwave optics so I need the ability to simulate and plot the field distributions from various angles so I can avoid/detect interference with support structures. Some of the optics I design have bumps/ripples on them which is something in which I do plot this as contour plots in addition to the full 3D layout with various cross sections. [example](https://i.imgur.com/lH0LOq7.png) 
Those are some pretty sweet plots! Oh yeah, Trcplot is hella expensive, which is the whole reason I don't use it anymore. Paraview is free, however, and might serve you well. I've not looked into VisPy, but thanks for mentioning it, I'm going to check it out myself!
I'm kinda new to matlab, so is it possible to just input the equation to find the value for n?
Yeah I thought of that but is it possible to input the whole equation as it is and get the value for n?
Yeah I thought of that but is it possible to input the whole equation as it is and get the value for n?
This should be pretty easy to do. First you define a function like this: function y = myfunction(n,parameters) y = LHS of your equation end Then you can set up an anonymous function like this, to pass to the solver, where you have already given values to parameters: f = @(n) myfunction(n,parameter_values); Set an initial guess and use fsolve: n_guess = 1; answer = fsolve(f,n_guess); 
So there are a few things that you could do. Personally I would graph it first and vary n (something like `n = -10:.001:10`) and then plot the function to get an idea where it hits 0. I would then encourage you to look into [`fzero`](https://www.mathworks.com/help/matlab/ref/fzero.html). If this is your first experience with MATLAB, I think this is a good opportunity to get acquainted with some of the more useful features for mathematical computing. The other suggestions in this thread are useful as well, however I plotting functions is typically useful when solving problems like this. 
Thanks! And yeah, check out VisPy. I've gotten side tracked as of late but it actually took no time at all to run their demos as I think the majority of the library is in python and can be installed via __pip install vispy__. They have some spiral galaxy demo that runs over GPU at like 120fps, I just have no idea yet how to use for myself...
Unless you are planning on using xls features like sheets, I would just export to csv, which is readable by excel. This can be done with labels using a table and writetable, or without labels useing csvwrite. I have a detailed (but old because it was one of my first videos) tutorial here: https://youtu.be/GQtYAT36CZ4
it seems that gammainc does not all input of type symbolic I tried it on MATLAB 2018a one other suggestion that is possible instead of going to the help forum I linked is that you could possibly implement the function based on how it as defined one please to look would be here [https://en.wikipedia.org/wiki/Incomplete\_gamma\_function](https://en.wikipedia.org/wiki/Incomplete_gamma_function) this will take some more work of course but should be not that difficult tho. :)
Do you have realistic values for the other terms? Trying this with values for water and air and my plot just looks like a square root.
&gt; That would be awesome. I imagine I could probably figure it out, but Im still a relative beginner when dealing with MEX (and C coding in general), and already have too much to do, so Ill definitely take not needing to figure that out :) Send you some private message
X = \-2.8892e+05 + 1.3837e+04i Solver stopped prematurely. fsolve stopped because it exceeded the function evaluation limit, options.MaxFunEvals = 100 (the default value). this is what i am getting
That code will give you a line following that y you wrote between -5 and 5. I am not quite following what you want to do?
I have to plot a graph of y= 20+ x for -5&lt;x&lt;5. I only know how to write the code if x is equal and less than 5 and equal and more than -5. I don't know how to write the code for -5&lt;x&lt;5.
gt(x,-5) and lt(x,5) are logical expressions you could use? Although, it seems the question is poorly worded, as you shouldn’t need to use logical expressions when plotting. 
The actual plots for -5&lt;x&lt;5 and -5&lt;=x&lt;=5 Are visually identical, because the former would only be missing an infinitesimal point. It's like worrying about how a single stone on top of Mt. Everest might affect how tall it looks from a distance. tl;dr, just plot -5&lt;=x&lt;=5, it's the same thing.
i was about to say the density thing
Oh, I get it now. Thank you so much!
thank you. This solved my problem :)
No problem glad it helped. I do this often might not be the best technical solutions but it works.
You add the marker after the plot command. plot(2,3,'o')
Why not beep?
Why not beep?
I did this a while back, spent way too much time making little melodies with windowed waveforms! 
What does it sound like?
Why not load despacito sound(y, fs)
It's a brief bit from [this](https://www.youtube.com/watch?v=C3TUWU_yg4s), appropriately named for its composer.
It's the most beautiful sound you ever heard. It's the sound of successful code.
thanks!, so there isn't something like MarkerIndices for fplot?
why not load despacito x = 1 while x == 1 sound(y,fs) pause(length(y)/fs) end 
Oh look, it's this post again.
You are just calculating the distance between each point? Matlab has built-in functions to do this. Check out pdist and dist. See this thread: https://www.mathworks.com/matlabcentral/answers/16848-how-to-find-distance-between-two-points
Use the Profiler. It will tell you how long everything takes, and sometimes make recommendations.
Can you tell us what version of MATLAB you are using? I tried this out and am having no problems: &gt;&gt; ['example' '.csv'] ans = 'example.csv'
can you please share you sample data ? btw you may try this convert your timestam data into number and plot it x=datenum(time{1}) plot(x,sensordata)
ok , let me check , give me a few minute. 
First time I'm seeing it ¯\\_(ツ)_/¯
 ` %% Create some data with standard deviations of 1, 2, 3, 4, and 5: data = randn( [ 5035, 5 ] ) * diag( 1:5 ) ; %% Verify the variances, which should roughly be the squares of 1:5 : var( data ) %% Perform PCA by getting the eigenvalues of the covariance matrix: [ eigenvectors , eigenvalues ] = eig( cov( data ) ) figure( 'Units' , 'Normalized' , 'Position' , [ 0.1 0.1 0.8 0.8 ] ) subplot( 121 ) imagesc( eigenvectors ), colorbar % visualize our very diagonal EV matrix axis equal tight title( 'Eigenvectors of Independent Columns' ) %% Okay, so, now we know that the fifth column has the highest variance, but % that's not terribly interesting. What we see is that the columns of our % matrix are nearly independent; that is, it does not vary in coordination % with the others. % % If we mix the columns together, we can see how they vary together: data2 = data * randn( 5 ) ; [ eigenvectors2 , eigenvalues2 ] = eig( cov( data2 ) ) subplot( 122 ) imagesc( eigenvectors2 ), colorbar axis equal tight title( 'Eigenvectors of Mixed Columns' ) % So now, what are the eigenvalues and eigenvectors telling you? I'm actually % asking you this question, it's not rhetorical. `
That doesnt tell me how to find the feature for maximum variance
so it can return a vector called 'explained' which tells you the percentage of variance explained by each feature
You can cut the inner loop easily — you’re just doing some simple operations over each element the vector **x** and **y**. Try something like this, maybe: for n=1:length(x) separation=(((x-x(n)).^2+(y-y(n))^2+(z-z(n))^2)).^0.5; end 
Sounds like you have a graph. Have you considered using a "graph" or "digraph" object? https://www.mathworks.com/help/matlab/ref/graph.html Once you have the graph object, you can plot it quite easily and even specify X and Y coordinate locations for each node. You can also color each node marker differently using the "highlight" function. https://www.mathworks.com/help/matlab/math/graph-plotting-and-customization.html 
I am not sure, I guess it depends on the type of data you have. If there is no way to automatically calculate connectivity from raw (x,y) data, then yes, you will have to specify connectivity when constructing the "graph" object. You can do it later too, using methods like "addedge", "rmedge" etc. "graph" objects are quite easy to modify once constructed. The examples on the "graph" reference page go over the various ways in which you can construct the "graph" object. 
Sweet, I'll check it out and work with it!
Datenum axes became tremendously easier in the 2017 releases. I’d recommend updating your version if old.
Eigenvectors!!
I would rather have both X axes at the bottom, but if I can't get that to work this will probably be a good enough solution. Thanks!
Yes, but not smotthly. You wouldn't be able to use it as a "marker" per se. You could find/create an RGBA image of said ball and after you plot your data, go back through and use imagesc to overlay your image at each point. I sincerely doubt this would be worth the trouble for you though.
awesome, thanks for the advice. I'll give this a try
I'd try using a combination of 'strcat' and 'sprintf' to dynamically generate different file names when calling 'save', e.g. for ii = 1:3 save(strcat('location',sprintf('%03d',ii),'.mat, 'variable1', 'variable2'); end (or something like that) will save variable1 and variable2 to a mat file on each iteration. If I wrote that code write, the mat files will be named location001.mat, location002.mat, and location003.mat Hope that helps! (if you don't feel like faffing about with sprintf, you could replace 'sprintf('%03d',ii)' with the much simpler 'num2str(ii)' However, then your file names won't have leading zeros, which will make them alphbetize incorrectly)
Okay, I'll look into to num2str! Thanks for the lead. Here is the relevant code: if 1==1; %save figures (disable if not desired figure(12); print([title,'_prof.eps'],'-depsc'); figure(11); print([title,'.eps'],'-depsc'); figure(11); print([title,'.png'],'-r300','-dpng'); figure(10); clf; pcolor(z); caxis([-1500 500]); print([title,'2.png'],'-r300','-dpng'); save([title,'.txt'],'temp','-ascii'); pcolor(profz); print([title,'profz.png'],'-r300','-dpng') pcolor(profz1); print([title,'profz1.png'],'-r300','-dpng') save([title,'profz1.txt'],'profz1','-ascii'); end; I had received the whole program from my professor so I don't follow everything, especially since this is the first coding project I have ever worked on in my life.
You can actually use precision specifiers with num2str! So you could do something like num2str(ii,'%03d') FWIW, I usually use [] instead of strcat for readability, but no clue about performance. So something closer to: for ii = 1:3 save(['location' num2str(ii,'%03d') '.mat'], 'variable1', 'variable2'); end This is just a style preference though.
Thanks so much! I'll try it and let you know if I have more questions.
Cool! I'll give that a try. Thanks!
So instead of save, you're using print, but otherwise you should be able to use num2str inside the [ ]s to add whatever kind of number you like there.
Following up on this, if your bounds are [-x1, x2] and your spacing is SPACING = 0.1, you could just do: x = x1:SPACING:x2; If the x’s are identical apart from sign, you could do: y = -x1:SPACING:x1; If you want to get rid of the first and last elements, you could do what’s suggested by u/DemoniWaari or: x = x(2:end-1); You should get the same result either way. Don’t know how performance will vary. Either way: y = x + 20; will give you y. You should also be able to do something like: x = x1:SEPARATION:x2; y = x + 20; plot(x_final(x&gt;-x&amp; x &lt;x), y(x&gt;-x1&amp; x&lt;x2));
You'd use **audiowrite()** to produce a sound file from an array/matrix of data. If you organize the output matrix into two columns you [should be able to produce](https://www.mathworks.com/matlabcentral/answers/327913-how-to-save-two-sin-waves-with-left-and-right-channels-in-a-stereo-wav-file) left and right channels in the recording.
Wait, explain what’s actually in the 10x10? That’s too small to be audio samples, right? Does it just represent some mixing component? Also if column 5 is dead center, wouldn’t you want 1 to be left and 9 to be right, for symmetry? Let’s say you had 1000 samples of stereo audio; that would usually be a 1000x2 matrix. If you have some other single-channel sound that you’re trying to pan, one way to think is: you’ll have a 1000x1, you need a 1000x2, to add to that original. So you could, say, start with the first column (left channel) gradually scaling to zero. `scale_left = linspace( 1, 0, 1000 )’` . Note that prime; linspace produces row vectors, so you need to transpose. Since you’ll want the same energy in your signal by the end most likely, you can just subtract the left from 1 to generate the right: `scale_right = 1-scale_left`. Then combine: `scaled = [ scale_left .* single_channel, scale_right .* single_channel ]`. 
Its a basic diagonal matrix 10x10 (consisting of 1s going diagonal and 0s) with 1 audio file divided into different frequencies over the matrix. 
Okay, so you have an n x 1 audio file? This sounds like an “x vs y problem;” are you just trying to step across ten discrete frequencies? What I’m really saying is: forget the process for a sec, tell me exactly what’s in your audio file (including mono or stereo), and exactly what you want your output to look (sound) like.
Here, since I don't think I'll be able to eloquently explain it, I included the code below if it provides any help: &lt;script src="r/https://pastebin.com/embed_js/bPQkbnYq"&gt;&lt;/script&gt; 
You've got a handful of problems there, starting with using \`linspace()\` with upper and lower limits. I don't have time to understand exactly what's going on, but here's a stepped sinusoid - one octave of a C scale - to get you started: `Fs = 44100; % Sampling rate` `Fs = Fs / 10 ; % for visual appeal` `T = 1/Fs; % Sampling period` `tone_play_time = 0.25; % How long each column plays` `play_samples = Fs / tone_play_time ;` `minFrequency = 261.63; % 262.63 hz is C4 or "middle C"` `maxFrequency = 523.25;` `%% We'll use equal temperament 12-tones to generate frequencies` `% All this is going to do is essentially multiply a vector of different` `% frequency scales, times minfrequency, times time, and you'll get 12` `% tones in three seconds (leaving out the fundamental here, for ease of` `% sizing and avoiding the zero index); I'm going to` `% just cheat and use the 12 tones, rather than calculating based on` `% maxFrequency:` `pitch_scales = 2 .^ ( ( 1:12 ) / 12 ) ;` `total_time = tone_play_time * numel( pitch_scales ) ;` `time_vector = 0 : T : total_time ;` `scale_indices = floor( time_vector / tone_play_time ) ;` `pitch_scales = 2 .^ ( scale_indices / 12 ) ;` `sine_steps = sin( 2*pi * time_vector * minFrequency .* pitch_scales ) ;` `figure` `subplot( 211 )` `plot( time_vector , sine_steps )` `axis tight, grid on` `subplot( 212 )` `% This will error without the signal processing toolbox` `spectrogram( sine_steps , hanning( 1024 ) , [] , [] , Fs , 'yaxis' )` 
I just took the fundamental frequency times the time, and stepped that with a scaling factor based on the western 12-tone system. Spectrogram checks out. If you want to do it without the impulses when the pitch changes, it's actually easiest to switch to complex sinusoids so you can match phase. Gotta get some sleep, let me know if you need something else.
Additional information... It appears to be that the term fitted to the greatest *relative* peak in the data is term 1. The actual amplitude doesn't seem to affect it, as long as it is the global maximum. But I can't be certain still... Unfortunately, my component of no interest will not always be in the first position... For many curves this actually explains away a general trend/drift, where a components peak may be some time after my peak of interest.
It's not completely clear to me, what you're asking... Do you want to know if, e.g., the left peak is described by a1,b1,c1 and the right peak by a2,b2,c2, or if it's the other way around? It would probably depend on the initial guesses you provide, however, you can always look at the b-values, which are the peak position on the x-axis.
Basically it is by what criteria does matlab say "This is term 1, and this is term 2" Visually inspecting this is simple and intuitive. But I need a programmatic way to pick only the term explaining the main component. The component of no interest may be before or after my component of interest. But I do know that the b-values have no baring on whether they are term 1 or 2. If that makes more sense?
well it depends on how you define "main". Is it the one with the highest amplitude? Then just choose the set of parameters with the largest a. Is it the one to the right? Then just choose the set of parameters with the largest b. Is it the one to the left? Then just choose the set of parameters with the lowest b. etc. ...
well, it's going to be the term that models the peak with the global maximum probably between 10 and 30 lol. Unfortunately, the term explaining that maximum may be left or right of the other one... and could have a higher or lower amplitude.
If you don't have a clear criterium for choosing the peak, then of course you can't have matlab find it for you. 
which is why I'm seeing if there are criteria behind how matlab defines which values get assigned to which terms. If you re-run infinite curve fits on some data, term 1 will always have the same values... But it's not apparent if it's decided by values a,b,c. It's not random, but it's also not apparent. 4/5 times it appears to be that amplitude dictates which is term 1, and which to be term 2... but that 1/5 times is a huge amount of error.
like I said, it depends on the data and on the starting guess. But I don't understand why this matters to you. If you don't have a defined criterium, then matlabs choice shouldn't matter. However, the [documentation](https://uk.mathworks.com/products/curvefitting/features.html#regression) says, that you can choose between Trust-Region or Levenberg-Marquardt algorithms.
because do I need to re-write script and re-analyse over 215million curves, or can I use pre-existing output based on the output data I already have :P It's a few day's difference in terms of work speed.
Essentially what this data is is activation in a single voxel of the brain, over time. Over this time period I'm interested in when it reaches the peak, the attack and decay of reaching the peak (ie c. the width of the gaussian) and the amplitude of that peak. Now, I can't just take raw values. These are values of activation compared to a baseline. Even more convoluted is that the hypothetical *null* activation of the baseline is not often present in this time sample. So part of my function is non-relevant activation, that will return to 0 at the end, however, my relevant activation will start during a period of activation already happening - as in the pic there. So we have component A - relevant. And component b - irrelevant. b can in theory, be anything. It could be an initial spike of activity, or a gradual, wide component. It's peak can theoretically be anywhere between -Inf and Inf. Likewise, it's amplidute can be 0 to Inf. Because A happens concurrently, when this component is added it will create a peak higher than the peak of b on it's own, *even if the amplitude is lower*. It would be borderline impossible to have A and b to have such small C values as such that they don't interact. And even if it does happen I just have to include any good fits to my model (they'll get drowned out anyway). So, imagine an irrelevant drift that has a mean of 20, width across all 40 of X, and amplitude 1. Now add a component of width 5, amplitude 0.5 and mean 19 (or 21). Visually, you'll see a clear peak at 19, and I can describe that peak for statistical comparison later. Now. If matlab always says "The highest amplitude term is term 1". Then I have a problem on how to figure out how to figure out if the peak of term one is the also the global peak. If matlab says "The earliest peak is term 1" then I can set a simple logic up to pick the relevant term for the *majority* of cases (ie. ignore all peaks outside of 10-30 as irrelevant. If both peaks inside, take X Y Z) If matlab says that the term that explains the most variance of the data is term 1. Then also, I can write a simple script around that. For most cases, I can easily say "the biggest amplitude peak/the one nearest 20". But even if this works 99.9% of the time, then it is broken for hundreds of thousands of cases. If that's a bit clearer?
The way matlab "decidedes" is that it looks at the data, and your initial guess. Then it tries to minimize the difference between the two by changing the a,b,c parameters. So if the starting parameters a1,b1,c1 are closer to the final values for peak1, then it's very likely that they will be used to describe peak1. If you don't provide an initial starting point yourself, it seems from [this documentation](https://uk.mathworks.com/help/curvefit/parametric-fitting.html#bs4yidr-1) that Matlab finds one heuristically for the 2 gaussian model. However, you are writing that the peak you want is where the y-value is the highest (even though the amplitude of that peak might be lower than the other). So you could just look at y(x=a1) and y(x=a2), and then choose the one that gives the highest y-value.
You could half-vectorise this method by grouping all vectors that have the same color, and looping over the groups, calling quiver once for each. Grouping can easily be done by taking the third output of histcounts. Note that you might want to turn of quivers automatic scaling of vectors. I've used this technique to make scatterplot with a rediculous amount of points in reasonable time, by replacing the scatterplot with 100 regular point plots.
Damn, thanks for the help man. I'll look through everything right now based on what you said- if anything else pops up Ill let you know. Cheers
Okay, so how would I get what I already have to create a set of files like you see in the code above, but without overwriting the previous files? What I have read on num2str (such as from the MATLAB help command) is still too above my head for me to understand as I have not done coding before. I assume a for-loop might work, but I can't figure out how to set something up like that.
Yeah, you have a unique number called massiveindex for each location, right? We've already given you examples for how to put a number into the filename. So why don't you try putting it together and report back with what you tried?
Ah, okay. Earlier, you offered this suggestion: for ii = 1:3 save(['location' num2str(ii,'%03d') '.mat'], 'variable1', 'variable2'); end So are you saying I add this to the same for-loop with the massiveindex? By "location," you mean the Mars location, right? not as an instruction to save to somewhere other than the local folder? Does "%03d" add three leading zeros?
No, you need to edit the save commands you *already* have in your script, using the example you've quoted.
Oh! I see. I think it worked! I added the num2str to the part where the files are saved: if 1==1; %save figures (disable if not desired figure(12); print([title, num2str(ii,'%03d') '_prof.eps'],'-depsc'); figure(11); print([title, num2str(ii,'%03d') '.eps'],'-depsc'); figure(11); print([title, num2str(ii,'%03d') '.png'],'-r300','-dpng'); figure(10); clf; pcolor(z); caxis([-1500 500]); print([title,'2.png'],'-r300','-dpng'); save([title,'.txt'],'temp','-ascii'); pcolor(profz); print([title, num2str(ii,'%03d') 'profz.png'],'-r300','-dpng') pcolor(profz1); print([title, num2str(ii,'%03d') 'profz1.png'],'-r300','-dpng') save([title,'profz1.txt'],'profz1','-ascii'); end; But, I think I need to change the "ii", right? Should it be my "massiveindex" index? The leading zeros thing may be a problem; this is how one of the files is titled now: temp001002003004005006007008009010011012013014015016017018019020021022023024025026027028029030031\_prof.eps
Do you haver an example input and output file you'd want? What is the error you are getting compared to what you think you are supposed to be getting with your textscan?
You should start with a single frame to debug before running the loop. Use breaks to run the code one line at a time. Figure out at what line the figure is drawn. The next line you can call *hold on* so that subsequent graphics will be drawn in the same figure. Then you can plot the text and it will appear in the frame. Then proceed to write your video. Don’t forget to call *hold off* before the end of the loop. 
+ Like this? If I go back and edit my posts with the plus sign, will it still work? I’m happy if it helps! Is it related to the karma points somehow?
Could you.. add the code?
There is a [working with arrays](https://www.mathworks.com/help/matlab/matrices-and-arrays.html) tutorial. You basically want to learn how to use indexes, create arrays, and add to (append) arrays.
Can you simply access the tall array in the same way you’d access an array which is small enough to be in memory? 
It's because Matlab has to communicate across all the workers for those operations. The m-lint editor should give you an orange warning tooltip about this case. More detail: you're asking the algorithm to access random parts of the matrix. In parallel, you're giving each worker a copy of the matrix and then asking them to synchronize with each other every time a worker makes a change. I'm not sure why you're doing this. It looks like a test case explicitly constructed to make parallel computation bad.
The output will be small, until the loop is complete. Each computation saved in memory is small enough to, but each of those computations over 10k iterations will not be
I guess it will be trial and error. You can try the [memory](https://stackoverflow.com/questions/7328044/matrix-size-limitation-in-matlab) function to see what’s available, but I guess that will change once you start loading tall arrays. Other than that, a few arrays of 10k points is doable. Sorry I can’t be much more specific. If it starts failing partway, maybe you can analyze in chunks and then concatenate after you’re done loading tall arrays.
Assuming you don’t mind a straight forward cipher, you should be able to do this by: word = ‘test’; offset = 3; % ‘a’ will become ‘d’ output = char(word + offset); If you want to exclude punctuation and/or white space, you’ll need some extra logic to handle those cases. word = ‘test’; offset = 3; % ‘a’ will become ‘d’ output = ‘’; for i = 1:length(word) % for example, modify as needed. if contains(‘ .,$;&amp;:@/“-‘, word(i)) output = [output, word(i)]; else output = [output, char(uint8(word(I)) + offset) end end You’ll need even more logic if you want characters or spaces to wrap around, i.e. ‘z’ == ‘c’. Modulus can be helpful here. Also, ‘a’:’z’ will generate an array of characters containing the lowercase alphabet. Same with uppercase numbers and symbols. Hope that helps! 
so it appears that matlab loads ~20% of the array at once in order to access the whole thing[ such as in gather(tall_table)]. that won't work for what I'm trying to do, as any of the rows may be outside of any one 20% block. does that make sense?
Would this work if I need the extra spaces for the script itself (not just how its displayed); i need to add the spaces in the matrix for a later function to operate properly 
If you are interested in getting performance increases you can maybe do something like this. You would then have to play around with how many jobs you would distribute the iterations over, 8 is maybe a reasonable number. tic n=5000; %iterations jobs=8; %split into 8 jobs m=n/jobs %iterations per worker sumJob=zeros(jobs,1); %preallocate sum per job parfor i=1:jobs for j=1:m r=9999*rand(1); sumJob(i)=sumJob(i)+(A(round(r)+1, round(r)+1)); end end sum=sum(sumJob); toc 
If your function takes that fprintf string as an input, it will work with the spacing. Just note that the values in these strings will no longer be integer/binary/float but char type (so you will have to convert then back into integer if you want to do any calculation/numerical interpretation).
I glanced at the code and I noticed you're using short-circuit logical operators. Careful because those are not traditional AND statements. Take a look at the WHILE loop in Line 28. The second condition will never be considered because you set the first variable to zero on every loop and evaluate with a short-circuit AND.
sorry i was out of my city, did you solve the problem ?
But you can access a single row, right? I thought the point of a tall array was that although you can’t load the entire dataset at once, you can access parts of it. Can you set A = T(3,:), where T is the tall vector, and A will be defined as the 3rd row in the dataset? Or are there too many columns to load a single row?
I've been playing with it.. I've been able to get accurate results using the "gather" function, e.g., gather(tall_table(1000:1100,:) to get the 1000-1100th row from the data store. However, it take a really long time (as it searches the entire DS every time you call that function), so I'm not sure how to help that, or if there is a more efficient way to do this.
Can you replace the “1000:1100” with the specific rows you are looking for, like “[1000 1002 1008 1090]”?
Yes, but even selecting 1 row takes a long time because it searches the entire DS in 20% blocks. Not ideal for iterating 25k times, which is why I posted to see if there was an obvious solution that I was missing. Besides loading a good (optimized) chunk of the data into memory at a time, computing on all of that, and then moving on.. 
I was thinking of something along the lines of: matrix = \[1 0 1; 1 1 0; 1 1 1\]; for i = 1:size(matrix,1) test{i}=sprintf(' %d ', matrix(i,:)); end matrix char(test) You can change the delimiter from white-space (' %d ') to tab delimited ('\t%d\t') to suit your needs. For evaluating these lines as numbers you can use `str2num()` to convert back.
The goal of tall arrays is to work on Datasets that are too large to fit in memory. One thing you have to be careful about is to limit the usage of 'gather' function as its computationally very expensive depending on your dataset. Try to minimize the usage of 'gather' or 'write' functions. A sample workflow is shown in this link [Deferred Evaluation of Tall Arrays](https://in.mathworks.com/help/matlab/import_export/deferred-evaluation-of-tall-arrays.html). I hope this helps.
I'm not sure what you're asking. The way a matrix is displayed in the console has nothing to do with the structure of the matrix itself. Matrices don't have a property called "spacing", in general, so I'm not sure what exactly you are looking for. All you've shown us is some matrices printed to the console. Also, linspace(1, 1, 10) doesn't make much sense. Have you read the documentation for linspace? There's no reason for the first two arguments to be identical. 
"Mostly Quoran Techno Engine"?
What's the problem - the dark line at the center of the ravine or the noticeable difference between colors outside of the ravine?
Ah, OK. I can't view it from the side because I can't run the code (I don't know what "func" and "invfunc" are) and I didn't scroll down far enough to notice the second image. The Zig-Zags are a realistic depiction of your function, no? What do you want it to look like?
I would use a Timer object and then use the CursorPosition property to obtain the pointer location.
Audacity as a utility separate from Matlab. 
Yep! Most of us came from Quora, or at least one point. We call it an engine because we're like a software engine taking in challenges and churning out software.
function CaesarCipher(name, space) alphabet = 'abcdefghijklmnopqrstuvwxyz'; ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'; for n = 1:length(name) %Loops through each letter of the name for a = 1:length(alphabet) %Loops through each letter of the alphabet if alphabet(a) == name(n) name(n) = alphabet(a + space); fprintf('%c %d\\n', name(n), n) n = n + 1; elseif ALPHABET(a) == name(n) name(n) = ALPHABET(a + space); fprintf('%c %d\\n', name(n), n) n = n + 1; end end %('%c %d', name(n), n) end 
Have you tried clipping your colormap? Or have you tried adding more points? Part of the reason it’s so dramatic is that it goes from like -1 sigma to -10 in the space of one grid point; higher sampling density will make this less noticeable. Also try `shading interp` and contrasting that against `shading flat`.
This could be any number of issues, complicated by the lack of details provided. If possible share your code and any errors/warnings Matlab produces. Matlab will check for a valid license file on startup, so if it is starting you license is good. Licenses for my University in the US flip in July, so you may be able to reach out to them. You can also check: C:\Program Files\MATLAB\R20XXx\licenses
Ok yeah I just saw the liscense on the splash screen and it runs super super simple code ok. I'll try to imgur what made it crash.
On mobile sorry. Give me a second 
got it
A few typos, but problem three complains about converting into a double array, which doesn't appear to be necessary until the final step. syms x r r1=4-3*cos(x); r2=3+2*sin(x); solve(r1==r2)) areaof1 = .5*int(((r1.^2)),[1.8778,-.7018])-(.5*int((r2.^2))) areaof2 = .5*int([(r2.^2)-(r1.^2)],[-.7018,1.8778]) lenof1=double(int(sqrt((r1.^2)+((diff(r1)).^2)),[0,2*pi])) lenof2=double(int(sqrt((r2.^2)+((diff(r2)).^2)),[0,2*pi])) No hiccups on my local machine running R017a. Perhaps it is related to a known [bug](https://www.mathworks.com/matlabcentral/answers/397242-matlab-unexplainable-crashes-and-ram-usage)?
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.mathworks.com/matlabcentral/answers/397242-matlab-unexplainable-crashes-and-ram-usage) - Previous text "bug" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
If you save it inline to a vector imaging, the aliasing from the display will be better. As for your particular case, could you bump up the values of nn and mm to smooth it out?
syms can cause problems in certain versions in Windows. There are updates for whichever version you might be running. https://www.mathworks.com/support/bugreports/1755918
2018a. Will look into it. Thank you!
`shading interp` does make the plot look a lot better but didn't help with the zig-zag at the bottom. In the end I just bumped up the number of points to reduce the effect.
Unfortunately vector images are rubbish for MATLAB figures as they depend on Painters. OpenGL is the best renderer for surfaces and if you then save it in a vector image it simply saves a bitmap in a vector file format. In the end I did bump up the resolution but due to it being 2D it takes fucking forever! 
You can rearrange the system of equations to arrive at Ax=b form
I know that but I was thinking of making an algo that could do that or maybe there is some other computational method or sth
[equationsToMatrix](https://www.mathworks.com/help/symbolic/equationstomatrix.html) is probably a good starting point
You can build strings by using **[ ]**. file_name = ['fileNum_' num2str(z) '.wav']; There are other ways, but I tend to use this method for building filenames.
Damn, how didn't I think of that, I feel dumb lol. Thanks so much
Please [indent your code](https://www.mathworks.com/help/matlab/matlab_prog/improve-code-readability.html) before asking folks to look over it. It's incredibly difficult to read if everything is all at the same indentation level. 
Not sure what you're doing here, but rename your iterator to something other than comp if you're going to use it for indexing. &gt; comp = zeros(1,nc); &gt; &gt; for comp = 1:nc Also: &gt; I believe the main reason the code may not be working is due to there not being an equal dimensions on both sides of the final equation. Correct. No clue the sizes of `P`, `v`, `bm`, etc., so best I can do is to suggest you check out: size(term1 + term2 + term3*term4*term5) and just resize `f` and `comp` to accommodate it. One or both of those two things should help you get going again. For reference: [size](https://www.mathworks.com/help/matlab/ref/size.html)
It doesn't just say an error, it also tells you which line the error is on. Which line is it?
Does not that reduce performance?
What kind of license are they giving you?
Yes I’ve done this before with a student license
Hi there, I have shown the line causing the error using bold text above. Thanks 
Thank you for taking the time to look through this, I will give both of these options a go and see how I get on. 
My student license works on 2 different computers. Have you tried just installing it on your personal pc? I’m pretty sure that you cannot run matlab off of a usb stick
I usually use sprintf. For example: Filename = sprintf(‘file%i.dat’ ,100) Will return file100.dat
Sprintf 
Assuming you have Windows pro at home you can use xfreerdp on Linux to rdp into your PC. Otherwise you can download VNC. 
I have had good experience with [TeamViewer](https://www.teamviewer.us). Free for personal use. You would need to check with administrators to make sure it is installable at school. 
No, the computing is done locally on whatever computer it's installed on. Really the best way to do this is installed on Linux with X forwarding.
&gt; it has linux on it I have windows on my laptop download and install `Ubuntu` from the windows store. it has a fully functioning ssh client. If you want to be able to use the matlab GUI, also download/install [VcXsrv](https://sourceforge.net/projects/vcxsrv/). Then use the `-Y` or `-X` flag with `ssh` (`-Y` works more reliably in my experience). As a bonus, [here](https://pastebin.com/mRUw5eCH) is a little bash script I wrote that will automate starting and stopping VcXsrv anytime a `ssh -Y` or `ssh -X` command is used, and gives aliases for manually starting / stopping VcXsrv in Windows directly from WSL. In case your not familiar with bash, basically just add the text to either `~/.bashfunctions` or `~/.bashaliases` or `~/.bashrc` and it will automatically get setup when you start WSL. I tend to connect to the server using `ssh -y` and then start matlab from the command line using `matlab -nosplash -nodesktop`. This starts matlab directly in the terminal, but still allows you to create GUI elements (e.g., figures) if needed. Using the full GUI over ssh/x11 tends to be rather slow and laggy...
Look up minimizers, or for an iterative one that's not too hard to implement, look at the Conjugate Gradient minimizer.
I have these four vectors 'T(i)' that are used with the command R(i) = radon(P, T(i)), for each run of a loop I want to plot R(i). T(i) is a vector. 
Ah, if you want to use a jagged array, in MATLAB they are called [cell arrays](https://www.mathworks.com/help/matlab/cell-arrays.html). You use the `{ }` operator to define and index cell arrays. 
Thankyou, I tried do exactly that but I get dimension mismatch error, can please have a look ? t1 = 0:1:179; t2 = 0:1:359; t3 = 0:1:90; t4 = 0:10:170; theta = {t1,t2,t3,t4} n = 4; P = phantom(256); %creates 256x256 phantom imshow(P, []); title('Phantom Image'); hold on; for i = 1:4 k(i) = radon(P, theta{i}); % imshow(k(i), []); title('Radon Transform'); end Subscripted assignment dimension mismatch. Error in try1 (line 18) k(i) = radon(P, theta{i});
`k(i)` indexes a single number. `radon(P,theta)` returns a vector. `k` also has to be a jagged array. 
&gt; k = cell(4,1) &gt; Thankyou so much this worked!
Look into incorporating try/catch statements. That will help your issues. It may not be the cleanest way, but it can, essentially, be used to test for specific errors when it performs operations in the try block, and if an error is made, it will go into the catch block. I would recommend creating an external function that performs the test, but that is more of a style. Good luck. 
Regarding the operation that you have in three places, I see two options: 1: Make a function 2: Before the if/else statement, create a flag variable with initial value FALSE. In the cases where you do the no-data operation, set the flag to TRUE. Then after the if/else, check if the variable is TRUE, and if it is, do the no-data operation. Note also that you can have an if statement with multiple conditions joined by the &amp;&amp; operator. E.g. you can have: if isfield(mystruct.field1, 'data1') &amp;&amp; \~isempty(mystruct.field1.data1) &amp;&amp; \~isnan(mystruct.field1.data1) 
I had thought about your first option, and figured that if I couldn't come up with something more elegant, that is likely the solution I would incorporate. Regarding your final note, I didn't think that this would work because the call `~isnan(mystruct.field1.data1)` throws an error if `mystruct.field1 = NaN`. I expected that it would throw that same error whether or not it was combined with `isfield`... but I never actually tried it. It turns out that I should have tried because it seems to work fine and solves the problem. Thanks!
When using if else statements, it is not required to include the else part of it. So, if nothing is being done in those else statements you can get rid of them, just keep the elseif. I would consider putting a for loop in there as well if you add more data structures
&gt; When using if else statements, it is not required to include the else part of it. The inclusion of an else condition which does nothing has been a style topic for almost as long as programming has existed. When I am working with a new programmer, I find it easier for them to include an else statement with a "do nothing" comment because they may need an explicit reminder. For safety critical applications following guidelines like MISRA-C, else conditions are strongly encouraged. If an else condition is not required, it should at least be documented by a comment. There are standards which say else conditions must exist for reliability. 
Perhaps casting a type (double?) before converting could help? If most of the data is *single* precision, it could be converting in an attempt to be [homogenous](https://www.mathworks.com/help/matlab/ref/table2array.html). &gt; If T contains variables with different data types that are compatible for horizontal concatenation, table2array creates a homogeneous array, A, of the dominant data type. For example, if T contains double and single numeric data, table2array(T) returns an array with data type single. 
try: display long
What makes you think it's losing precision? It's hard to help without knowing what you're actually seeing. 
Because when I display the array(the values that should be floating point values are lat and long) they now have been reduced to integer values. I.e 38.654 is now just 38
You mean in the console? That has absolutely nothing to do with the precision of the actual data. That's just a display for humans to look at. It would be an enormous pain in the ass if it was always showing all ~16 digits of precision. You can change that in the preferences if you want, or use fprintf to display it with as many digits as you like. 
Turns out it was just displaying them that way on the command line. When accessing them via their index the data was indeed intact 
It was just the way the command line was displaying the data. Turns out the data was fine all along 
So this means I can use simulink without the Matlab GUI?
You can create a simulink model using matlab (".m") code (without the Simulink GUI)
I am not sure you can do this in Simscape directly, but I am not familiar with the exact Simscape library that let's you implement PV panels/arrays. I assume that the Vmp and Pmp are parameters that you use to define the PV Simscape block you are using. If this is the case, I don't see anyway for you to perform this directly since Simscape parameters can not vary during the simulation. If Vmp and Pmp are inputs to the system (which would be strange), you might be able to drive those inputs using some of the Simulink toolboxes that have probability calculation included (like Robustness toolbox, Monte Carlo, etc). I think what might be easier to do would be to drive your Simscape model via MATLAB and change those parameters in your block programmatically. You could for example set your block Pmp, Vmp, and Imp to variables and then run a series of simulations where those values are all changed to represent the least and most possible values as quoted by the manufacturer. 
It auto kicks out the first variable set as an answer when you just call the function. So when you just call “KSP_prm(body)” it will kick out the first output which is R as ans. If you want it to kick out more just type “[R,T,whatever,else]=KSP_perm(body)”
This works a treat, thanks! I'm not the smartest cookie when it comes to the more meta MATLAB stuff...
If you dont want to use a `videoWriter` call, something like this might work. I havent run the code to test it, but it *should* (if it runs like I think) generate an empty figure with just the text, extracts the RGB values of the figure, figures out where they are all roughly 0 (indicating black text), generates a mask of 1's and 0's (with 0's everywhere there is text, and 1's everywhere else), then multiplies this mask to the RGB data from each frame so that everywhere there is text gets an RGB value of [0 0 0] and everywhere else the RGB values are unchanged. v = VideoReader('1.mp4'); vidWidth = v.Width; vidHeight = v.Height; mov = struct('cdata',zeros(vidHeight,vidWidth,3,'uint8'),'colormap',[]); figure('position',[150 150 vidWidth vidHeight]) text(posX,posY,'text'); textRGB = print(gcf,'-r0','-RBGImage'); textMask = uint8(~all(textRGB &lt; 10,3)); k = 1; while hasFrame(v) mov(k).cdata = bsxfun(@times,readFrame(v),textMask); k = k+1; end hf = figure; set(hf,'position',[150 150 vidWidth vidHeight]); movie(hf,mov,1,v.FrameRate);
IMO, if /u/74throwaway *actually* cares about execution speed (rather than just being curious) id avoid parfor all together whenever possible and try to use vectorized expressions instead (which are natively parallelized). Heres a time test for the loop method OP uses vs a vectorized version. On my system I get that the vectorized approach is ~35x faster. function [t0,t1] = timing_func_temp(N) A=randn(N,N); rng('default') t0 = timeit(@test0); rng('default') t1 = timeit(@test1); fprintf('\n\nVectorized method is %.2f%% faster \n',100*(t0/t1)) function [sum0] = test0 sum0=0; % dont overwrite builtin functions with variable names for i=1:5000 r1=(N-1)*rand(1); r2=(N-1)*rand(1); sum0=sum0+(A(round(r1)+1, round(r2)+1)); end end function [sum1] = test1 tic r=(N-1)*rand(2,5000).'; sum1=sum(A(sub2ind([size(A)],round(r(:,1))+1, round(r(:,2))+1))); toc end end
That's not meta at all. It's just basic behavior that you'd find in the documentation. 
This should fully vectorize it sqrt(bsxfun(@minus,x(:),x(:).').^2+bsxfun(@minus,y(:),y(:).').^2bsxfun(@minus,z(:),z(:).').^2)*ones(length(X),1)
This is actually really good. I've been looking for a solution for this for a while now and I'm going to give it a whirl. https://www.mathworks.com/matlabcentral/answers/378983-generate-simulink-model-from-script What are your limitations and troubles at this point? Are you limited to a certain release or higher?
What microprocessor did you use to get your quadrotor running? I've used an arduino nano to get 2 motors to balance on a single degree of freedom, but I could never get it to settle in the time needed for a full 6 DOF quad. Granted I wasn't using a kalman filter so that very well could have been the issue. I still want to return to designing my own flight controller eventually, but for now I've settled with using a naze 32.
Are the rows of **a** and **t** in order? As in, is the first logged value row 1 and the last logged value row n (for nx3 and nx1 matrices)? If so, get the last value from **a** with, say: `a_last = a(end,:);` The new variable **a\_last** is now set to the last row of **a**. You could do the same thing separately with **t**, or alternatively, something like this: `at_combined = [a, t];` `at_last = at_combined(end,:);` **at\_last** will be a 1x4 array corresponding to \[x, y, z, t\]. While I haven't worked with these functions in MATLAB before, I suspect you could call accellog whenever you want to update those matrices, then grab the latest by repeating the above steps.
Maybe relevant: [Matlab Robotics](https://github.com/AtsushiSakai/MATLABRobotics)
A perfect example of how smart a cookie I am not :)
Currently an STM32F767ZIT. If I'm not mistaken, this is the same processor family as what the Naze32 board uses. Yeah, the arduino IMO doesn't have enough processing power to properly handle a full quadrotor. If you do go back to designing your own flight controller, make sure you use a processor that has a physical FPU inside. That will dramatically speed up your calculations and is part of the reason why the nano isn't good in this application (no FPU). Also, you will want to make sure you use a *non-linear* version of the kalman filter, because the drone dynamics are non-linear. Something like the extended kalman filter (EKF) or unscented kalman filter (UKF) would be excellent. I am currently running the unscented one.
I would disagree with this. The 2018 version has a nice feature to auto arrange your blocks and wires making spaghetti diagrams easier to fix. What don't you like about the UI?
Maybe you can use remote control software like TeamViewer ? tv is free for personal use and only asks after a session if you liked it. Though it doesn't work with videos in the GUI of Matlab...
Hey, thanks for your reply. I have tried MATLAB mobile and looked at the "view figures" page you linked to. It works for simple figures (y = x), but I cannot get the GUI to show up on the iPad.
Looking [here](https://it.mathworks.com/matlabcentral/answers/181900-can-i-run-gui-by-matlab-mobile), it seems that MATLAB mobile cannot run GUI figures :( If you need users to interact with a GUI (clicking buttons etc), I don't think matlab mobile is the right tool. I believe your options are: * Use a sharing screen app (e.g. [Microsoft Remote Desktop](https://itunes.apple.com/us/app/microsoft-remote-desktop/id714464092?mt=8) or Teamviewer) * Write an app for the Ipad with the gui that sends data/commands to MATLAB
ahh ok...i'm using 2017a on a 2016 macbook and opening windows takes 5 seconds. i also use alot of sfunctions and if you have nested subsystems its painful to navigate. i also use a 2012 version with real time workshop for autocoding and it runs way faster. 
Hey, jti107, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Well, that's the nail in the coffin. Thanks for the links. Time to try some screen share software.
If you have a Mac, just use duet (like $10 on App Store, I think). It’s an app that lets you use an iPad as a second monitor, and use the touchscreen as input 
Hey! &gt;I assume that the Vmp and Pmp are parameters that you use to define the PV Simscape block you are using [They are completely internal to the block](https://imgur.com/a/a7rqNp4) &gt; I think what might be easier to do would be to drive your Simscape model via MATLAB and change those parameters in your block programmatically. You could for example set your block Pmp, Vmp, and Imp to variables and then run a series of simulations where those values are all changed to represent the least and most possible values as quoted by the manufacturer. This is a great idea! I'll look into how to do this and might ask a few follow up questions, thank you!
Looks Like it's exactly what I want, Thank you!
This looks like we are supposed to do your homework.. 
It's actually an extra assignment, I did it, took me time, found it fun and decided to share it...sorry if it bothered
So you want to modify the contents of a struct that happens to be a cell? I'm not sure if you want to return them to a new cell or store them back in the struct, but that part is straightforward. To perform operations on a cell you can use **cellfun()**. abba = cell(3,1); abba{1} = ones(30000,1); abba{2} = abba{1}*rand; abba{3} = abba{1}*17; included_rows = 2:3:31; ZZ = cellfun(@(X) X(included_rows),abba,'uniformoutput',false); 
https://imgur.com/a/InQy5gq 
First, I think it is bad practice to name your struct "struct" bc this will overwrite the struct keyword in the current session if you need to use it. To apply a function to each field of struct use structfun() (you may not need it for this). To apply a function to each cell in cell array, use cellfun(). No for loop should be needed. Now I have hard time understanding what you exactly want to do. Can you give an example with some random data (reduce the dimensions for demonstration), and give the expected output?
I totally understand. Arguably, getting your filter working well could be one of the most important parts of the control code, so it will be nice to have a known working solution before porting to another device.
This should produce a [1 x 151] vectpr containing te sums ones(1,numel(simres.c{1})) * cat(2,simres.c{:})
Thank you /u/jkool702 for your answer. Unfortunately your solution does not compute the right results for each cell for some reason and does not work as inteneded The code I attached in reply to /u/fragmentOutOfOrder works as I want. However I will take a look to MATLAB documentation to see why your solution is working as intended. Still thank you very much for the assistance! :)
My first guess at this is that what you are doing after saving the images is dragging them into a video program from Windows Explorer. I'm also guessing that the reason the video then jumps around is that the files will be sorted by the first character, then second character, so 10 will come before 2. If this is the case then what you need to do is to add zeros before the `int2str` command. In fact, instead of using `int2str`, I recommend: sprintf('%05d', i) which will add up to 5 leading zeros. If you have more frames than this then just keep adding zeros, e.g. `sprintf('%010d', i)`. The filenames will then be 00001 00002 00003 00004 00005 00006 00007 00008 00009 00010 etc.
Ok, but I'm getting an error after writing the first 2 frames: Index exceeds matrix dimensions
And everytime i run the program, an extra frame is added. I've ran it 5 times so now I have 7 frames written
Hello Seizzeq, just a heads up, "Everytime" should be written as two separate words: every time. While some compound words like everywhere, everyday, and everyone have become commonplace in the English language, everytime is not considered an acceptable compound word. To stop gram_ bot from commenting on your comments, please use the command: "yourUserName ?ami" 
Well you code is full of issues. First of all I would address the fact that you get the directory, then add files to it, and then expect to be able to get the filenames of something you added. Try this instead https://pastebin.com/6JaZqmbG
i would use the built-in fullfile function rather than brackets (which is strcat) for concatenating paths and filenames.
Thanks for the tip, thoughh (for this particular problem anyways) having a few rows and/or columns of all 0's doesnt screw things up (using the "deep copy" code). e.g., aa=randn(20)+randn(20)*1i; aa(:,10:15)=0; aa(:,1)=0; aa(5:8,:)=0; bb=convert_complexDouble_realDouble(aa) gives the expected result. Maybe it has to do with the fact the the MEX function never really sees the complex data? (since `mxGetComplexDoubles` just returns a pointer to the start of the data and tat pointer is typecast to non-complex doubles before any data is actually read). Who knows...
This is a bit of a dirty hack, but it just might work for you. figure surf(meshX, meshY, surfaceZ) hold on s2=zeros(size(meshX))+min(surfaceZ(:)); s2(2:2:end)=s2(2:2:end)+(max(surfaceZ(:))-min(surfaceZ(:)))/10; surf(meshX,meshY,s2); shading interp The coloring is based on the Z value, and since it seems like you arent using the stuff at the bottom for anything (I think...) and just want it to look nice....just plot over it with densely populated data.
!thanks It's a total hack but a genius hack nonetheless. I went with fauxGradient = repmat(linspace(-6, -8, nSteps), nSteps, 1); instead of your method just because I can understand the code better. [Looks fucking ace](https://imgur.com/a/MGsJnTw), thanks!
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/HY0KOuJ.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e48hie1) 
 You cannot make a shallow copy within a mex function - that is rule #1. You have to make a deep copy or you'll crash, as you have noticed.
&gt; But what if there is some unknown in matrix B and I have one less unknown in the X matrix? [I wrote up a short example of ow you can move a single unknown from B to X](https://i.imgur.com/cLvE6Xj.jpg). Te logic to code this up is fairly straightforward. Once you can move one unknown element, you can re-call tat function as many times as needed until all the unknowns are in B (or, for that matter, all in X). If X and B are matrices instead of vectors it is slightly more complicated, but still a relatively straightforward extension of the example linked above.
Thank you for making me feel like an idiot. 
Thank you for all of the useful comments. Allow me to clarify: (1) The struct which I will now refer to as “s” based on your advice is a 1 x 320 struct with 2 fields “a” and “b” (2) “a” is a field of 320 21 x 8 cells “b” is a field of 320 21 x 8 cells (3) inside each of these 21 x 8 cells, there is a 21 x 8 grid of doubles of all varying lengths (4) I also have a vector of numbers that are stored separately in included\_rows. My question is this: If the vector included\_rows from step (4) contains \[1:1:15\], for example, I would like to modify all the 21 x 8 cells from step (2) within the struct “s” to now become 15 x 8 cells within the fields “a” and "b."
You mentioned you already have a few reference points for thickness to color relationship. Are you able to create an equation based on interpolating the data? Is the relationship linear if you convert the color into a numeric code, ie. enumerate? To me, this all sounds like a lookup table - nearest match or interpolation solution. 
This is the right answer. Fit curve to data, use curve to convert from color to thickness. 
This is kind of in the opposite direction but you can call a Simulink model from a script by: % Calculate max time for Simulink Model % Put tmax in the "Stop time:" box % vector is a matrix of time and values tmax = max(vector(:,1)); % Open Simulink model of model\_name.slx open\_system('model\_name'); simulink\_out = sim(bdroot,'ReturnWorkspaceOutputs','on'); simulink\_out = simulink\_out.setUserData(struct('param1','value1','param2','value2','param3','value3')); bdclose all
figure for j = 1:10 subplot(10,1,j) hold on for i = 1:length(C1_Seg_Dom) b = bar(i,C1_Seg_Dom(i)); end end 
Worked perfectly THANK YOU!!!
If you only have RGB values, look into converting to HSL or HSV values then plot thickness against the 'H', Hue angle.
Lol, dont be too hard on yourself...I know far too well how easy it is to overlook a semi-straightforward solution entirely because you are focused on a completely different type of solution. I have also spent a rather large amount of time thinking about matrices, since using matrix operations tends to speed up the problems I work on by a couple orders of magnitude.
Lol, glad it worked for you
That is...unfortunate. What about for in place replacement...it is possible to avoid deep copying when the output is the same variable as the input? I tried using the 1st c code in the original post for this, but it still crashed matlab, but it seems like it might be possible (since the variable would only depend on the data it already was storing, not on another variable's data). I also had one almost completely unrelated question that related to memory in MEX - perhaps you might know. When a mex function returns a pointer to the start of the data, is it a 100% guarantee that as you sequentially read forward in memory from that point you will keep reading from the data, even for really large arrays? Would having (in win10) mandatory high-entropy ASLR with forced image relocation and forced memory allocation randomization potentially affect this (since ASLR it kind of designed to prevent large chunks of program memory from being in a sequential set of memory addresses...)
You can interpolate the values to the same timesteps and then average them.
Arrays, in my experience, are guaranteed to be contiguous (meaning, sequential and continuous). ASLR is tucked away, behind the memory allocation APIs, so I don't think it would have any impact.
Good to hear. I figured it *shhould* work like this. I mainly asked since a few months back I had a weird issue where te output of a MEX function would alternate (seemingly at random) between segments where te answer was correct and segments were the answer was nonsense. I never figured out why, but it just recently occurred to me tat if windows / ASLR moved some of the data and didnt tell Matlab / my MEX function about it, i could envision it producing the results I saw. Perhaps it is a bit of a stretch, but if not tat ten I literally ave no idea what was happening. Then again this is windows we are talking about, so what it *should* be doing and what it *actually* is doing could easily be 2 entirely different things (especially when you also add virtualization-based memory isolation and hypervisor protected code integrity (HVCI) into the mix, which I believe were also active at the time).
I would recommend putting your t vectors and x vectors into a cell array rather than naming them t_1 t_2 etc. That way you can have vectors of different length in an array that you can iterate through rather than using switch statements. You'll still have to put it into cells however.
Maybe something like this? clearvars t1 = [0 1 2 3 4 5]; x1 = [0 10 20 30 40 50]; t2 = [0.1 1.1 2.1 3.2 4.2 6]; x2 = [0 9 19 29 38 48]; ... t = 0:0.1:min([t1(end),t2(end)]); % define common time vector x11 = interp1(t1,x1,t); % resample data x21 = interp1(t2,x2,t); s = struct; s.time = t; % holds common time vector s.data = [x11;x21]; % holds all data
Well to start with I think you did a mistake when specifying the data vector t\_2 since it has one more element than it should (7 compared to 6) for the sake of the argument I deleted the second to last data element in x\_2 which is 40. if this is not what you want, the there should be something wrong in your data since you cannot have a time vector that has one element less than its' associated data vector (t\_2 has 6 x\_2 has 7). The second thing that you want to ask yourself is how do you want to average such data ? Using the forward method ? the backward method ? the mid point method ? etc etc I did a small code to help you get started but this should be quite general for whatever data set you will eventually use it for: `clc` `clear all` `%time vectors` `t_1=0:5;t_2=[0.1 1.1 2.1 3.2 4.2 5.4];t_3=[0 0.9 2 3.1 3.9 4.8];` `%data vectors` `x_1=0:10:50;x_2=[0 9 19 29 38 51];x_3=[0 11 21 31 39 48];` `%time cell array` `timeMatrix{1}= t_1;timeMatrix{2}= t_2;timeMatrix{3}= t_3;` `%data cell array` `dataMatrix{1}= x_1;dataMatrix{2}= x_2;dataMatrix{3}= x_3;` `nominator=0;` `Averages(length(timeMatrix))=0;` `%for loop for averages` `for i=1:length(timeMatrix)` `for j=1:length(dataMatrix{i})-1` `nominator= nominator + (timeMatrix{i}(j+1)-timeMatrix{i}(j))*...` `dataMatrix{i}(j);` `end` `denominator=timeMatrix{i}(end)-timeMatrix{i}(1);` `Averages(i)=nominator/denominator;` `nominator=0;` `end` `%getting the average` `average=mean(Averages);` At the end the average will be that value you want. You can play around with the method of averaging by changing what you will eventually put in the nominator variable, in this case for example the last element won't be included. if you put (j+1) instead of (j) in the dataMatrix{i}(j) then you will do the forward method and the first element will be neglected if you have more questions i'll be happy to answer :D
&gt;cast it to uint. imwrite does that by default but that results in loss of data. 
So... scale the data appropriately? 
If you have a lot of data, then I suggest putting your data into a [timetable object](https://www.mathworks.com/help/matlab/ref/timetable.html). Then, you can use the [synchronize](https://www.mathworks.com/help/matlab/ref/synchronize.html) function to get them to all have the same time vector!
You need to map your double values to the range [0, 1] Considering your values are *outside* of [0, 1] already, I'm concerned that something else is going on, however, because I'm not sure what the double values would be representing
This. Normalize your data
You can also do it on other object properties if you like. For figures, I prefer to use the `Name` property, so something like: `app_name = 'My Application';` `current_app = findall(0, 'Name', app_name); % where 'Name' can be any object property.` `app_not_open = isempty(current_app);` And then if `app_not_open` is true, you create the figure. If not, you can use `figure(current_app)` to bring it forward.
I'm not exactly sure what you're trying to do, but you can write symbols like this: `\alpha`
u/jkool702 Thank you! This worked very well and solved my issues
Would a sigmoid do it?
https://www.mathworks.com/help/matlab/ref/strsplit.html
https://www.mathworks.com/help/matlab/ref/hold.html
How is strsplit used when you have a 750x1 cell array of strings If variable (email\_strings) is a 750x1 cell array of strings how do I use strplit; I've tried a couple different variances but I get Error first input must be a string. Thanks for reply. 
Look into [regexp](https://www.mathworks.com/help/matlab/ref/regexp.html). Here's a regular expression that will match emails most of the time: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
If you need to go from 1xN to Nx1 you can transpose it by using “‘“, e.g. cell2mat([email_strings{:}])’
This website will explain regex code in a human readable way: https://regexr.com/3u3t5 I'm not sure exactly what your issue is, can you try to explain it more clearly?
Specifically, your function is dying on Line 6 when it attempts to find out the size of the D variable, but cannot due to the fact that you did not input the D as it was expecting ( ͡° ͜ʖ ͡°)
How would I go about solving this system of ODEs in matlab, with boundary conditions? Please help
You have a function that takes two input arguments. You called it with zero input arguments. Zero is less than two. 
Look up ode45 documentation, there should be examples just like this one. 
True, from what I remember from my applied math class, is that you should use a finite difference method or an euler method to solve bvp
To be clear, you tried to run the function by typing call_pw_main You're not providing any input arguments, which is why you're getting that error. You need to run the function with two input variables. So you need to type something like call_pw_main(x,y) In that second example, you're providing the function with two input variables (x and y). 
Hey, look at bvp4c for numerically solving ... Or you can use Dsolve to solve them symbolically
[BVP solver in matlab](http://au.mathworks.com/help/matlab/ref/bvp4c.html)
Wow that helps! 
.What makes you think I didn’t spend hours researching on the internet? There is no reason for your condescending attitude here. If you can’t help , move on. I’m glad most people here aren’t like you and that there are many good souls here to help people like me. Were you born knowing matlab? I don’t think so. I’m sure you are a miserable middle aged loser with no friends 
Well what are your eigenvectors and eigenvalues. What does the phase plane of this system look like? Still low hanging fruit here, OP.
Because I found the solution to your problem after 1 Google search 
*[citation needed]*
I agree with u/Zer0^n though a more genuine post (even if it's hw) would have an attempt or sth I found this solver but am noob in MATLAB how do I apply ... You know the correct description of the problem and if you click [here](http://lmgtfy.com/?q=Boundary+Value+problem+solver+MATLAB) I bet your answer is in the top 3.
Here's a one-liner... `IM=uint8(rescale(IM).*255);`
Just write the function numerically. It will be easier to debug and you'll be practicing more generally useful coding skills. And if you post any more code here either use formatting to make it look nice or provide a link to it on some code hosting site.
I've sometimes found with coupled equations that ode45 might be too stiff a solver. Try ode23.
Process your file differently and sidestep the problem. `strrep` the `newline` entries in your file with your delimiter, so all the entries are on one line, then `strsplit` on the delimiters. 
Here is example \*.txt file that I'm reading: String Name SchoolID Email Grade\_Level name1, name1 name1 119 name1@namemypc.biz,name1@name1mypc.biz 3 name2, name2 name2 119 name2@namemypc.biz,name2@namemypc.biz 5 name3, name3 name3 119 name3@namemypc.biz,name3@namemypc.biz 4 name4, name4 name4 119 name4@domain.domain.net 4 name5, name5 name5 119 name5@domain.edu,name5@domain.org 5 I need to write a new \*\_output.txt which pulls the emails puts in format below: String name1@namemypc.biz name1@name1mypc.biz name2@namemypc.biz name2@namemypc.biz name3@namemypc.biz name3@namemypc.biz name4@domain.domain.net name5@domain.edu name5@domain.org Not being experienced with matlab, I know there must be an easier way that I'm trying to tackle it. I'll be reading in multiple files with thousands of entries. Thanks
I think there might be an issue with how you are reading the text. If I enter the text as char (see below, which is one char array), regexp with 'split' seems to work and get all the 9 emails. Then you can get all the emails as below. str = ['Name SchoolID Email Grade_Level',... 'name1, name1 name1 119 [name1@namemypc.biz](mailto:name1@namemypc.biz),[name1@name1mypc.biz](mailto:name1@name1mypc.biz) 3',... 'name2, name2 name2 119 [name2@namemypc.biz](mailto:name2@namemypc.biz),[name2@namemypc.biz](mailto:name2@namemypc.biz) 5',... 'name3, name3 name3 119 [name3@namemypc.biz](mailto:name3@namemypc.biz),[name3@namemypc.biz](mailto:name3@namemypc.biz) 4',... 'name4, name4 name4 119 [name4@domain.domain.net](mailto:name4@domain.domain.net) 4',... 'name5, name5 name5 119 [name5@domain.edu](mailto:name5@domain.edu),[name5@domain.org](mailto:name5@domain.org) 5']; expression = '\,'; splitStr = regexp(str,expression,'split').'; pattern ='[a-zA-Z0-9-_.]+@[a-zA-Z0-9-_.]+'; emailStr=regexp(splitStr, pattern, 'match'); emailStr=emailStr(cellfun(@(x) ~isempty(x),emailStr)); emailStr{1} ans= 1x2 cell array {'name1@namemypc.biz'} {'name1@namemypc.biz'}
https://matlabacademy.mathworks.com But really the best way to learn is to work on your own projects, if you don't have any you could look up homework assignments from other Matlab courses. The documentation is very good and will help you learn as you go. Good luck!
Is there a recommended way to read in a .txt file? I'm using a for loop to read several \*.txt files: `files = fopen(emailfiles(i).name,'r');` `celldata = textscan(files,'%s%s%s%s','delimiter','\t');` Then I assign contents of celldata{3}{:} (all the email addresses) to another variable 'emails' to do the regexp split. Maybe textscan isn't the correct method. Thanks for the insight.
I assume want one of cell (in prev. ex. they were doubled). So think something like this should work emailStr=cellfun(@(x) x(1,1),emailStr,'un',0); %get one from each row emailChar=strjoin(horzcat(emailStr{:}),'\n') %% remove cell, u may want to change \n fid=fopen('fileToSave.txt','w','n','UTF-8'); fwrite(fid,emailChar,'char'); fclose(fid); 
Surfaces in Matlab require 2D arrays. For a surface of revolution aligned to the z axis, cylindrical coordinates are an easy way to define the problem. In that case, your two independent axes are z &amp; theta, and the dependent variable is the radius. % define grid in polar coordinates z = linspace(0, pi^2/4, 30); theta = linspace(0, 2*pi, 40); [zz,tt] = meshgrid(z,theta); % Surface of revolution rr = sin(2*sqrt(zz)); % convert back to Cartesian for surf() xx = rr.*cos(tt); yy = rr.*sin(tt); % plot surf(xx,yy,zz)
Thank you! I've been trying on Mathematica and Matlab for a while now. I forgot about using meshgrid. Is there a specific reason for picking 30 and 40 spaces between z and theta? 
Got it working YAY! Thanks for the help.
You'll need more information. The brake fluid pressure at the actual brake drives a piston. There's some additional mechanical leverage, then the pads. So given piston surface area you can convert pressure in bars to force in N. Multiply by coefficient of friction to get the frictional force (N). Now multiply by the mean path length position of the brake pad on the wheel to get torque in N*m. If this is anything other than a modeling exercise you'll see that there are a lot of assumptions and real world issues that get in your way. Finding a way to calibrate your data is going to be very important.
You have to write some additional code in order to be able to use ode45 with time varying inputs. Ode45 does not evaluate at specific timesteps, so it's not as simple as it should be. There's an article on stack overflow that tells you how to do it, I'll try to find it. When I did it a few weeks ago, I had to constantly interpolate my input so that ode45 can find it at whatever timestep it wants.
Use an interpolation function to evaluate w at arbitrary times
Thank you! After a while trying to figure out interp I implimented this into my function: Omega(1,1) = interp1(t3,w(:,1),t); Omega(2,1) = interp1(t3,w(:,2),t); Omega(3,1) = interp1(t3,w(:,3),t); where t3 is the time vector of 'w' (from the previous ode) and now it works!
Your headline and explanation is kind of confusing, although from what I gathered, you could try feval. 
This is a super vague question. When averaging a signal there are a lot of definitions, I don't think 'mean' quite describes what you want. For this sort of problem I would recommend a moving average filter, e.g. x = unfilteredSignal; nAvs = 50; a = 1; b = (1/nAvs)*ones(1,nAvs); meanSignal = filter(b, a, x); 
I think he's looking for that. It's not very difficult to implement as you did it and yours is perfectly fine, but just for information, there is a function [movmean](https://fr.mathworks.com/help/matlab/ref/movmean.html) that does that also.
Hey, just a formatting tip. The \` character lets you inline code into a normal paragraph, `like this`. If you're showing a block of code, indent everything by four spaces, like this: This is some plain code Four spaces makes it look nice No breaks between lines 
I know this, but i'm using the new reddit which I am starting to hate more and more Thanks anyways !
Cool, didn't know about that function! I wonder how different the results would be.
As most people are mentioning, the 'hold' command fixes this. But more specifically, each axis object has a property called `NextPlot`. When this property is set to `'replace'`, a new `plot()` command will remove what's on the axis and add the new plot. If the property is set to `add`, then new plots will add together. Try this to get a better sense of what's going on: figure; % in this example, the NextPlot property is set to 'add', so new plots don't remove old ones ax1 = subplot(2,1,1); ax1.NextPlot = 'add'; plot(ax1,1:10,1:10); plot(ax1,1:10,2:11); % in this example, the NextPlot propert is set to 'replace', so new plots overwrite old ones ax2 = subplot(2,1,2); ax2.NextPlot = 'replace'; % this is the default so this line isn't necessary plot(ax2,1:10,1:10); plot(ax2,1:10,2:11);
I would recommend using [export_fig](https://www.mathworks.com/matlabcentral/fileexchange/23629-export_fig) instead.
This is called a "modal" window. questdlg always makes a modal window. From the docs: " answer = questdlg(quest) creates a [modal](https://www.reddit.com/r/matlab/comments/98tjjn/prevent_dialog_box_from_locking_figures/uisave.html#mw_8db90767-060e-4b7a-8708-75748c985c6e) dialog box "
Getting y as a function of x is just a matter of finding the inverse of x as a function of y and plotting that help finverse should get you started 
`fplot’ isn’t so commonly used around these parts; post your existing code and I’ll show you how to do it with `plot()’, which is a lot more standard.
Id try disabling windows defender, or at the least add exceptions for both the install directory and the install process. It *might* help, as windows defender's scanning of every file (which is enabled by default) tends to slow down things like installing MATLAB due to how many individual files there are (my install has &gt;700k individual files)
A spline seems really bad for this. Do you not have a model of your batteries internal resistance? In any event, you'd take the fit object from the fitting code and use it in simulink. I don't know simulink very well myself but I assume there is some way to run Matlab code in a block? 
From the cftool you should be able to generate the code (check File generate code) that would let you do exactly which you did with interactive tool. The code will make it easier to save the output as 3d matrix and may be you want to save it to a file. In Simulink, you can write Matlab code to import the data. 
&gt; The code will make it easier to save the output as 3d matrix and may be you want to save it to a file. In Simulink, you can write Matlab code to import the data. The output saving part is where I'm having difficulties.I have generated the code which all it does (with my limited understanding) is plot the fit. However, I can't seem to find a way to generate that matrix out of it. It exports an 1x1 sfit object. I know I can write code in Simulink and am familiar with the basics of it, but just don't understand how I could implement this to fit my problem. Here's the generated code: %% Fit: 'untitled fit'. [xData, yData, zData] = prepareSurfaceData( SoC, Temperatur, Widerstand ); % Set up fittype and options. ft = fittype( 'lowess' ); excludedPoints = excludedata( xData, yData, 'Indices', [9 18 20 49 50 51 52 85 95 100 118 119 124 125 126 127 131] ); opts = fitoptions( 'Method', 'LowessFit' ); opts.Normalize = 'on'; opts.Robust = 'Bisquare'; opts.Span = 0.5; opts.Exclude = excludedPoints; % Fit model to data. [fitresult, gof] = fit( [xData, yData], zData, ft, opts ); % Plot fit with data. figure( 'Name', 'untitled fit' ); h = plot( fitresult, [xData, yData], zData, 'Exclude', excludedPoints ); legend( h, 'untitled fit', 'Widerstand vs. SoC, Temperatur', 'Excluded Widerstand vs. SoC, Temperatur', 'Location', 'NorthEast' ); % Label axes xlabel SoC ylabel Temperatur zlabel Widerstand grid on view( 184.8, 16.8 ); 
Agreed, I now use a linear interpolation of the points. Don't know exactly how to use that code in simulink (I've posted the generated code below)
Interpolation seems less than ideal too. I'm assuming the resistance will have some simple relationships to temperature and SoC, right? Something like R = A * t^B * SoC^C + D where t is temperature, SoC is state of charge, and A, B, C, and D are fit parameters. This would simplify things greatly anyway, since it's easy to code that model without having to store a fitted interpolation object. Using code in simulink isn't something I'm very familiar with, but I know there is a simulink block that will run Matlab code. What did you find when you looked at the documentation on this topic? 
Hey! The thing is, the output is a vertical line. Is there a way to do this as a function of x? Do I just take a very large slope? (Trying to plot stream lines + velocity potential lines so they are perpendicular to each other). Thanks! 
Is there a good rule of thumb to decide when to use function vs numbers to plot? For example, when do I use fsurf vs surf? 
meant to ask "how do I plot x = f(y) in fplot". sorry for not being clear, missed a word
Is there a good rule of thumb to decide when to use function vs numbers to plot? For example, when do I use fsurf vs surf? 
I did find a solution after all, thanks guys for your help! I was actually looking for a FOR loop to populate my matrix which was 49x51 after the cftool interpolation.
Not really a good rule of thumb that I know of. I usually just use numbers because Matlab seems to work easier with those. Simple functions that are built into Matlab might be okay. But you'll have to play around with it.
As an alternative to `filter` and `movmean`, I tend to use something like this for this type of thing. It uses `conv` to take a gaussian-weighted moving average of the signal. % build "true" signal and signal with random noise added x=cos(0:pi/100:10*pi); % noise free signal y=x+randn(size(x))+(2*rand(size(x))-1); % signal with white (gaussian) + linear noise % setup gaussian blurring kernal (blurKer) paramaters blur_N_std=3; blur_pts_per_std=10; % build and normalize blurKer blurKer=exp(-(linspace(-blur_N_std,blur_N_std,ceil(2*blur_N_std*blur_pts_per_std))).^2); blurKer=blurKer./sum(blurKer); % create anonymous func to apply filter smoothingFilter=@(ww)(conv(ww,blurKer,'same')); % apply filter to data with white+linear noise added z=smoothingFilter(y); % compare original signal, noisy signal and recovered signal figure; hold on; plot(y,'g','linewidth',1.5); plot(x,'r','linewidth',3);plot(z,'b','linewidth',3);plot(x,'r:','linewidth',3);
I think you could create a text box, and then get the function handle for the text-box object. Later, you can use ‘set’ to change the string displayed in your text box to one of the random questions. 
&gt; (Bonus if you know how to get MATLAB to write the figure to a specific Excel cell from the script) I dont know exactly how, but I know a path that should let you figure it out (though it might be more trouble than it is worth). A bit of googling shows some [ways to transfer data betweeen cmd/powershell and excel](https://serverfault.com/questions/62138/how-to-read-cell-data-in-excel-and-output-to-command-prompt) as well as [how to write data to a specific excel cell from cmd (including via the clipboard)](https://social.msdn.microsoft.com/forums/office/en-US/5d9dfab5-8c44-4255-93a7-cfcfd942bee8/redirect-output-from-a-command-to-a-cell-in-excel). If you can but together something that is callable from `cmd` that will write the clipboard contents to a specific cell ion an excel workbook, that can then be called from within MATLAB using the `system` command (or `! $cmdCommand`)
From the very top of the text post submission page: &gt; If you are asking a question, show us your work so far. Use pastebin.com to apply MATLAB markup, or try saturnapi.com to demo your code. What have you tried so far?
G = findgroups(M(:,1)); &amp;#x200B; Out = \[unique(M(:,1)) splitapply(@mean, M(:,2:end), G)\]
Glad it helped. Mean path length: I was trying to say for lack of a better word the "center of friction" where you can assume torque is applied. Brake pads are a weird shape, but I would assume it comes out to slightly past the center of the pad (rougher starting point I'd guess 75% of the wheel radius). You're getting pretty far outside of my knowledge though.
Okay. And? 
Why you don't directly write data to Excel sheet with Matlab function xlswrite(filename,A,sheet,xlRange)
You can create two GUIs. Main and Second. You can call Second with input arguments from Main. I forget which version exactly start supporting input arguments to the app, but certainly the most recent one does. 
How about: Output=nan(max(A:,1),numel(A(1,:)); for n=1:max(A(:,1)) Row=find(A(:,1)==n); Subset=A(Row,:); Output(n,1)=nanmean(Subset); end Output 
You need to rearrange it into one equation as you said. Once you have the one equation you can use an anonymous function, for example if you had values for alpha and beta dT = 7121.1 mu = 398601 S = 2.1768*10^4 c = 2.1537*10^4 funcToSolve = @(a) sqrt(a^3/mu)(alpha - beta - (sin(alpha) - sin(beta)) - dT; It's important to remember to subtract dT from both sides as for fsolve you must express it as a root, i.e. equal to zero.
Additionally, you may want to include the gradient (see [here](https://www.mathworks.com/help/optim/ug/nonlinear-equations-with-jacobian.html)) to solve this. One thing you need to look out for when solving this (seems to be a Lambert arc problem) is the ambiguity in the quadrant, so a good initial guess will be important. 
Yeah its a Lambert problem, ive tested code which works from a textbook and gets a result of a=11900 however that uses a general case solution code which is more rigorous while the equation I am using is simplified by assuming an elliptic arc trajectory. Basically though i cant seem to get it to converge to an answer and I believe its because of the alpha and betas when rearranged are alpha = sin\^-1(sqrt(s/2a))\*2 etc which results in very sensitive answers when changing a in the equation. The solution never seems to converge when run on matlab. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Hello, prosperosmile, &amp;#x200B; Thank you for your script. &amp;#x200B; The output is Assignment has more non-singleton rhs dimensions than non-singleton subscripts &amp;#x200B; &amp;#x200B; &amp;#x200B; Output = &amp;#x200B; NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN
Check my edit 2 note. Inside the for loop should be Output(n,:) not Output(n,1).
Alright, I've gotten the secondary "question" GUI up, and while I don't have it set to rename the buttons to the answers, it doesn't seem especially hard. Now I have a new problem: how do I nest a button-press callback within another callback? That is, pressing the "continue" button starts a for-loop that runs from 1 to 300. On each pass through the loop, I want the question code to run, then break using *uiwait* to get user input. The user will press one of the six buttons, their answer will be logged as correct or incorect in a new matrix, and the code will resume and iterate the next step of the for-loop, bringing in another question. Thanks for your help, by the by. I'm slowly but surely banging this thing into shape.
What do you mean "secondary" frequency regulator? Are you trying to do ripple control for DC systems? Noise abatement in AC systems? This is basically "hey I have a problem, can you help?" Well, maybe, but *what's the problem you're trying to solve?*
The problem is that your second nested while loop never executes if Port is not empty, because if it doesn't meet the isempty criteria, it just end that while loop
Yup
Here is what I ended up with that works: Port = input(promptPort); if isempty(Port) disp('Error: number of cells not entered.') Port = input(promptPort); else while Port &lt; 0 || Port &gt; 9 disp('Error: invalid number of cells.') Port = input(promptPort); if isempty(Port) disp('Error: number of cells not entered.') Port = input(promptPort); end end end Probably not the most efficient way of doing it, but it works! Thanks for the help. 
I think we're going to need a little more information. If you're assigning a variable to S when the function is called, of course it is going to save it. Please post code. Also, in case you're planning on presenting this it's singular VALUE decomposition.
Taking a step back, do you understand what a Singular Value Decomposition is mathematically? Because, if not, that's where you should begin.
SVD is one of those decompositions which takes a matrix and decomposes into 3 separate matrices such that blahblah = U*S*V' The scalar version would be 5 = 1*5*1 
A singular value is a generalization of an eigenvalue for non-square, non-symmetric, or negative semi-definite matrices. From the [documentation](https://www.mathworks.com/help/matlab/ref/svd.html): [U,S,V] = svd(A) returns `U,S,V` such that `A = U*S*V'`
There is a [function](https://www.mathworks.com/help/matlab/ref/xlsread.html) for reading from Microsoft Excel, **xlsread()**. [num,txt,raw] = xlsread('myExample.xlsx') Once you have the data, you would need to use other functions like **strsplit()** to process the data read from the file.
Thanks. Yes I have that so far. I'm having trouble using strsplit() and other functions. I'm getting errros saying "First input must be either a character vector or a string scalar." So now I have a 1800x1 cell array. I want to read each cell.
Oh sorry. If regexprep worked for you great. You could also likely use **cellfun**, but you'd need to deal with more cells then. split_values = cellfun(@(x) strplit(x,'-'), excel_values, 'uniformoutput', false);
There is a help page on [string operators](https://www.mathworks.com/help/matlab/characters-and-strings.html). The operators *isletter*, *isnumeric* and *strsplit* in particular.
When I took intro to Matlab we didn't cover anything remotely close to actual programming. We just used it to do matrix algebra. Chances are any help that you try to give her will only complicate things.
If my experience is anything to go by, the only issue you'll have is not getting too frustrated with the language; it's quite idiosyncratic and most CompSci people who I've seen using it pretty much loath it. Totally undeserved but that's how it is... For the vast majority of stuff an engineering student will be doing they won't need to go beyond pretty simple scripts; you'll have no trouble explaining the basics of how to program properly. Teaching her how to use the documentation properly will be a great help because that's something that lots of engineering departments don't teach well but is absolutely crucial.
MATLAB is an OOP language. If you know Java or C++ you'll be fine.
Agreed. ‘Intro to’ assumes she doesn’t already know Matlab. Just let her learn.
I feel like a lot of MATLAB courses for non-scientists/engineers use MATLAB because its syntax is simple and readable, typing is very flexible, and because once it works exactly the same on different OSes. So if you can get her familiar with the basics of programming (what are variables and functions, basic control flow, etc) that will make the course much easier. 
\^\^\^\^ Listen to this. Vectorized code, especially when run on a parallel pool, can save you huge in both lines of code and computation time (depending on what you're doing). One of my colleagues recently wrote this abomination of a nested for loop that was taking over a day to run. I got rid of the loops and vectorized what he was trying to do and it ran in seconds.
I think python is all pretty similar, my two words of advice with matlab are that indices start at 1 and not 0 and you should be using semicolons after most lines
Why can't she learn it herself?! WTF is this?
If you have Signal Processing Toolbox, use buffer function y = buffer(x,n,p) %overlaps or underlaps successive frames in the output matrix by p samples:
She’s extremely intelligent but she also has a very very hard schedule this quarter and since the subject matter is my major I figured it would be nice of me to help her out if it’ll make her life slightly easier since she is my girlfriend and I want her to do well
Are you going to White Knight every time she has a difficult project at work? If she's "extremely intelligent" then why don't you trust that she can figure it out on her own?
No I’m just being helpful since she asked me to do so 
I’m just letting you know now that this argument you’re starting with a stranger on the matlab subreddit is a waste of time because I’m not going to be doing what you want
This isn't an argument. It's fact.
It's an intro to Matlab course. Matlab isn't that difficult to learn even for people with zero programming experience. Let her find out for herself.
Dude...it’s not even if she needs help. OP isn’t saying she would. Maybe he just wants to be there for her to help explain some of the programming principles if she gets stuck. Where is this deep seated rage coming from? Lol wtf 
Google matlab on ramp for a free starter tutorial (takes about 2 hrs). Also, a lot of the interactive interfaces in matlab (ie customizing a plot or using an App) will have a generate code option. It’s how I learned matlab. Do something point and click, then generate the code to see how it’s done. Also, the online webinars are pretty good (kind of long... ~50 mins) Also, I’ve heard some folks say that the matlab syntax reminds them of c/c++? I can’t say personally... Also, the documentation has some pretty thorough concept pages that explain various topics. If you’re a CS major, check out the advanced software development section: https://www.mathworks.com/help/matlab/software-development.html Also, check out the matlab central community pages. The blogs are super helpful and I highly recommend Loren on the Art of MATLAB. Hope that helps!!!
Thank you, I felt this was a bit off. I don’t see how it’s different than a tutor or office hours except it’s easier 
If you're comfortable with Python, Matlab will be a snap for you. Worry more about your teaching skills if you're trying to help and or want to maintain domestic harmony.
Best quote I know is "It's MATLAB, not LOOPLAB"
And that's how it should be used imho. If you start using a lot of if conditions or even just loops you are probably better of with a real programming language. a for loop in matlab should often be something like (startIndex:endIndex) in one line.
Heres another way that works. This is similiar to what /u/prosperosmile posted, but uses `unique` to avoid checking unneeded numbers and uses logical indexing. x=[2 6 7 8; 2 3 6 4; 3 5 2 3; 4 9 2 3; 4 6 7 8]; [xu,~,xuid]=unique(x(:,1)); y=zeros(numel(xu),size(x,2)); for nn=1:numel(xu) y(nn,:)=mean(x(xuid==nn,:),1); end
&gt; but because 'greater' still has the original value from the first iteration, it ends up being the total of the values above 30 of the first column plus each of the next column iterations. Then maybe you want to set it to zero somewhere after the first iteration but before the second. 
To make sure it’s in the right spot, you should be setting greater=0 in a new line just after the the first ‘end’ in your current code. This should also be able to be vectorized, if that’s something you’re interested in. I’m on mobile now, but will try to remember to send something later.
Can you post that code? 
Sum(a&gt;30)/length(a)
I think pixhawk is directly coded in c++ and most support tools are in Python. 
When you read from Excel, you're getting in a cell matrix. Use `split()` instead of `strsplit()` and you'll probably be good.
Assuming `c = {x,y,z}` is the cell of positional vectors you speak of, you can do [Ax,Ay,Az] = aerodynamic_torque(c{:})
This was very helpful for my next question I was going to post. Thanks!
But don't you need the negative imaginary numbers because you have both frequency and phase?
Sure, the negative frequencies aren't 'unique' but they are necessarily part of the fft. If you remove these, you cannot perform the inverse operation and retrieve your original function. I don't know what you're actually trying to achieve, but perhaps you want the [power spectral density](https://en.wikipedia.org/wiki/Spectral_density), rather than the FFT?
Yeah don't take that guy to heart. Even if I did want to learn something purely on my own, having someone there to be able to instantly help me when I'm confused is such an invaluable asset. OP is being a dickbag for reasons we can't understand - probably projecting the gf aspect.
Matlab does not expose the functions in fftw which take advantage of this special case of the forward fft. 
You will need to read up on the syntax of for and if statements. For example, your for loop iterates over only one value, i = 0.
thanks, will do.
+ thanks that worked
&gt; If you remove these, you cannot perform the inverse operation and retrieve your original time series. Sure you can (so long as the original time domain signal is real valued, as it is in my use case). I quite literally posted 2 lines of code that both accomplish this. Feel free to test it yourself. dataTime = randn(4096,1); dataFreq=fft(dataTime); dataFreq=dataFreq(1:ceil((numel(dataFreq)+1)/2)); dataTime_recovered1=ifft(cat(1,dataFreq(:),conj(dataFreq(end-1:-1:2))),[],1,'symmetric'); dataTime_recovered2=ifft(dataFreq(:),2*(numel(dataFreq)-1),1,'symmetric'); err1 = nnz(abs(dataTime-dataTime_recovered1) &gt; sqrt(eps(dataTime))) err2 = nnz(abs(dataTime-dataTime_recovered2) &gt; sqrt(eps(dataTime))) &gt; I don't know what you're actually trying to achieve /u/mapsandclocks - this part is responding to you as well. The code basically does the following 1. fft a bunch of 1D time series representing different physical locations in the real world --&gt; freq domain 2. window a local grouping of data locations 3. Loop over frequencies. For each frequency apply frequency dependent weight and sum the data. 4. ifft each windowed+weighted+summed output toi return to time domain The summation applied take the form: % f = frequency; % [c1,c2,c3] are some values that do not depend on frequency dataOut = sum(exp(1i*f*c1) * (c2 + 1i*f*c3) * windowFunc(dataIn)) By substituting `f --&gt; -f` and `dataIn --&gt; conj(dataIn)` each of the 3 "parts" of the summation (`exp(1i*f*c1)`, `(c2 + 1i*f*c3)`, and `windowFunc(dataIn)`) all become their complex conjugate, and (by definition) if `x = a * b * c` then `conj(a)*conj(b)*conj(c) = conj(x)`
I figure this is probably the case, but was hoping that *maybe* there was an undocumented feature that would let you call these typically unexposed subroutines... Alternately, I hoped that perhaps someone had a particularly clever way to throw away part of the output of fftw before the entire output hits memory (it would seem this would only be possible from a MEX environment, and only if `fft` calls `fftw` using a loop of some sort when `data` in `fft(data)` is a 2+ dimensional array (meaning multiple independent 1D fft's will need to be computed). I sort of expected Id need to directly interface with fftw (or MKL's fft subroutines, which I suspect will be faster on my hardware) to get this functionality, but it would be nice if I didnt have to.
short answer: no longer answer: see [this](https://www.reddit.com/r/matlab/comments/99z09j/if_there_any_good_way_to_prevent_fft_from/e4s3dpx/) comment
Have you looked into watershed segmentation? It may be what you're looking for. https://www.mathworks.com/company/newsletters/articles/the-watershed-transform-strategies-for-image-segmentation.html
What is your definition of a window? I am familiar with windows being applied to time domain data, but not to frequency domain data. Why are you applying a windowing operation after taking the fft? The workflow that I use for frequency response testing is 1. Apply "rectangular window" to time domain data to reduce dataset. Size of window is a function of desired frequency bin spacing, number of ffts which will be averaged from data, overlap between data. 2. Apply appropriate window for noise type (flattop, rect, etc.) 3. Perform fft. 4. "Slide" indexes for 1, repeat 2 and 3 until you run out of compete data sets. 5. Average all ffts, calculate coherence I ask this because if you are taking an fft, and the resulting data is causing a memory issue, it sounds like you are taking an fft of an immense dataset, which unless it is an image or videostream, I can't think of a reason to. What's your target frequency bin spacing? What is your sampling rate? How large is your vector? Can you downsample your data? If you only need low frequency data, you can cheat and simply take every 2nd point (or more). You'll reduce your dataset by whatever integer you choose. Actually, is there even a reason you a modifying your data in the frequency domain? Applying weights to certain frequencies is surely something that can be accomplished by a finite impulse response filter, right? This may be a complex filter, but you wouldn't have to do any fft nonsense. 
This is a tricky problem, and the techniques in the literature are limited. From what I’ve seen, most of the techniques use maximum likelihood estimation and b-splines to estimate the position and size of overlapping cells. I don’t have any of the papers handy, but you can search for some of those key words. I remember at least one of the authors provided code for their paper. I will try to remember to look for the paper when I get home after the weekend.
&gt;But don't you need the negative imaginary numbers because you have both frequency and phase? Yes you do but if your input is real you can guess your phase. 
Oh geez, I guess I goofed up. Thanks for this, it honestly had been driving me crazy.
NP &amp;#x200B;
You can but you have to specify the simulation yourself 
Interesting. Where to start or what keywords am I looking for? I'm very new to Matlab/Simulink
Uh, that's a rather open-ended question. Most models are always simplifications, so you'll first need to define what properties you want to simulate. You've mentioned temperature and a resistor, which makes me think you are actually assigned to make some kind of a thermostat. Probably for the full points of the assignment, you'll need to note that heat doesn't immediately transfer between the heater (resistor) and the thermometer, and model heat input as a function of power, while using the thermometer as a control. Feel free to correct me if I'm wrong. A simplified version estimates heat input (as a function of power) and Newton's law of cooling (for heat transfer). Simulink is just another form of presenting mathematics.
It's not really a "guess" when it can be directly calculated. If the input is purely real, you only need half the output of an fft to reconstruct it. Is is a basic fact that you learn right from the beginning of any course that covers Fourier transforms. 
Of which assumptions are made. It's what you learn after maths 101.
No. It's a precise, exact equivalence. 
Ok :)
Are you claiming that the Fourier transform of a real function is not Hermitian? 
No I said ok? What was unclear?
Good :)
https://www.mathworks.com/help/matlab/matlab_prog/pass-a-function-to-another-function.html
&gt; Actually, is there even a reason you a modifying your data in the frequency domain? Applying weights to certain frequencies is surely something that can be accomplished by a finite impulse response filter, right? The short answer is: Im using the approach I am because it is laughably faster than the other half a dozen approaches Ive tried. In 5 minutes my code can do what took me days using other approaches. The longer answer is: The problem with doing this in the time domain is that the equivilant time-space domain operation is a summation over a local window (in spatial dimensions - this is the same local grouping mask that is applied in the freq-space domain data) of a **non-stationary** convolution (in the time dimension). i.e., you would have to do something like: % X = input data (size = [nxIn, nyIn, nt], spatial indices represented by jx and jy) % Y = output data (size = [nxOut, nyOut, nt], spatial indices represented by ix and iy) Y = zeros([nxOut, nyOut, nt],'like',X); for it=1:nt for ix=1:nxOut for iy=1:nyOut Xtemp=zeros([nxOut,nyOut],'like',X); for jx=1:nxIn for jy=1:nyIn convFiltCur = someFunc(ix,iy,jx,jy,it); Xcur = X(jx,jy); Xtemp(jx,jy) = conv2(Xcur,convFiltCur,'same'); % this is the same as sum(sum(Xcur*convFiltCur)) end end Y(ix,iy,it) = sum(sum(Xtemp)); end end end The actual problem is somewhat trickier, as each `ix`, `iy`, `jx` and `jy`each represent a set of&lt;x,y&gt; coordinates, making this effectively a 9D problem (or, put another way, you are taking 5D data, characterized by 2 sets of &lt;x,y&gt; spatial coordinates and 1 time dimension, and you are mapping the 4 spatial coordinates to 4 new spatial coordinates. Each set of &lt;x,y&gt; is a point along a surface in 3D space, so there are also Z coordinates, but each Z is linked to 1 specific combination of &lt;X,Y&gt; coordinates). in practice though, you can think of `ix`, `iy`, `jx` and `jy` as the linear index of some &lt;x,y&gt; combination Instead, by using the frequency domain (and some ridiculously tricky re-indexing), I can implement the above quintuple-nested loop using the following Xf = fft(X,timeDimIndex); Xf_out=zeros([nxOut,nyOut,numFreq],'like',Xf); for nf=1:numFreq A1=someFunc1(nf); % also depends on the spatial geometry of the problem, but this is fixed for all frequencies A2=someFunc2(nf); % same note from A1 applies Xf_out(:,:,nf) = A1*Xf(:,:,nf)*A2; end end Y = ifft(Xf_out); I have a minute, so Ill expand a bit more on the problem (since you seem willing to give suggestions, which I do appreciate - its always nice to have a fresh perspective on a problem, since Ive been working on this one for a while). To briefly give you an idea though: The data is to a seismic survey, which is paramaterized in terms of: * &lt;Xs, Ys, Zs&gt; of the seismic sources (sources are along a surface, so Zs=func(Xs,Ys)) * &lt;Xr, Yr, Zr&gt; of the receivers (geophones) where time-series data are collected. Each source will have a 2D array of active receivers collecting data. (receivers are along a surface, so Zr=func(Xr,Yr)) * time of data recording (relative to the time the source went off. Often times this is 3000 samples at 2ms sampling rate. The "goal" is to take the data, which is usually collected on irregular topography and is not perfectly regularly sampled in space for either &lt;Xs,Ys&gt; nor for &lt;Xr,Yr&gt; and predict what the data would look like if it were collected on a flat regularly sampled grid for both sources and receivers. The "how" is using an idea called stationary phase. Basically, treat each individual sample of the current wavefield as a source, continue each "fake-source" to the location where you want to predict new data, and when you sum the superposition of all these together all the stuff you dont want cancels each other out, and you are left with the correct answer. The spatial window is used because, since we only have discrete sampling of the wavefield, the stationary phase cancellation isnt perfect, and so points that are far away and wont contribute much to the stationary part of the summation tend to introduce (much) more noise than they help add to the signal, so at some point you are better off not including these in the summation at all.
Can you write out the expression for the SA of the dodecahedron given 's'? If so, look up matlab documentation on for loop, while loop, and function syntax. Their documentation is well done and accessible.
And what did you write in mean.m?
Check the order of the arguments being sent to my_mean. Usually the order that you send the arguments in the outer function must match the statement in the function itself. Also, are you sending and arguments to my_fun inside of my_mean? It looks like its being called with no arguments.
okay, i will clean it up. Im sending my_fun a single variable, x. the next step in this assignment is to use these two functions, my_mean and my_fun, to compute the approximation a given integral
You have most of it. The loop you want looks something like this p_guess=[p_min:dp:p_max]; t = zeros(size(p_guess)); for np=[1:numel(p_guess)] p = p_guess(np); A = [ 0 1 2 -1 3 4 -1; -3 4 3 -1 2 -2 6; 2 1 -1 2 0 5 -3; 4 -1 0 1 -2 3 5; 1 0 3 3 2 2 1; 2 2 -1 -2 0 4 5; 0 2 -3 1 -4 -1 2] B = [4 cos(p); 14 cos(p); -6cos(p);9cos(p); 4cos(p); 14cos(p); 5cos(p)] X= A\B; t(np) = X(1); end plot(p_guess,t)
&gt; eventually i need to get to a point where j is going to be a looped if this is the only input that the functiopns need, you probably want ap = @(j)(my_fun(j)*(1/N)*(a+(j-1)*((b-a)/N)));
Oh my goodness thank you so much! I guess I have trouble with the format and what to exactly put for loops. I knew I needed to solve the system of equations and that is good to know as well I can solve it without using a "for loop". I feel like I was adding too much unnecessary things which made it confusing? 
both of those unknown parts depend on which `p`'s you want to compute `t` for. If you decide first which `p`'s to use filling them in is easy. If you dont know but `t(p)` is nicely behaved, you can alternately do something like stopFlag=false; kk=1; while ~stopFlag p_cur=p(kk); &lt;compute t_cur for current guess p_cur&gt; t(kk) = t_cur; if kk &gt; 1 &amp;&amp; t(kk) &lt; t(kk-1) stopFlag=true; else kk=kk+1; end end
creating a function is well documented, you can figure out what part of the function needs a loop and use that
yea thats what I ended up doing
What exactly are you stuck on? loops? or functions? Maybe instead of attacking the above problem. Try just writing out a for loop and do something simple, like add, or display the index. Break up your problem and try and understand each part.
There is already a Matlab function called "mean". You shouldn't name functions or variables identically to existing functions. 
I think you mean “1 times” not “1 plus”. Also might be slightly faster to do “double( randperm(100)&gt;50 )”.
The original post asks for 1s and 2s, not 0s and 1s. Have you by chance actually timed if usung `double`is faster? Ive always sort of wondered, but never bothered testing it. 
Oh alright, yeah sorry about that. I assume it would be faster since I would think MATLAB would have to implicitly type-cast before multiplication. Like you, however, I have been too lazy to check :P.
I could see it either way with the `double` thing. On one hand, avoiding having MATLAB figure out the implicit casting operation by explicitly calling it might save a little time (or might not, depending on how things work behind the scenes). On the other hand, It seems possible that MATLAB *might* have a way to do this (either partially or fully) without caasting to doubles at all. In particular when dealing with the false terms, since casting these to doubles is just taking 8x 0 bits and adding 56x more 0 bits. e.g., maybe internally MATLAB does something closer to input code: y = 1 + (x &gt; 50) internal code: y=ones(size(x)); y(x)=y(x)+1; (Im guessing this is much slower, since the computational savings is probably vastly outweighted by the extra memory overhead, but I imagine a clever coder with a lower level language like C could make something that runs faster than casting to doubles)
All of your else's should be elseif's. See Matlab's documentation on [if](https://www.mathworks.com/help/matlab/ref/if.html). Else is reserved for cases where none of the previous conditionals evaluate to true. 
Looks like the first two "else"s should be "elseif" instead.
You need to be using elseif statements instead of else
You cannot start a variable name with a number.
oh duh, thanks.
If you visit the link I've provided, you'll see that they have actually released tools to make it integrate with Simulink/Matlab. I was actually looking for resources for that. 
Notice how the editor flags all kinds of problems with your code? Stop ignoring the warnings. They're telling you exactly what you are doing wrong. 
I would create a new array, and use a for loop to look at every row in your first dataset. If the class is the correct value, set the row of the new array equal to that row of the dataset. Then look for next row of your original data set thy has the desired class, and again, if it matches your criteria at it to row #2 of your new data set.
Read the documentation for logical indexing. 
I'm going to assume that your data is of type "table". ("modern" data type for this kind of application, usually created with "readtable") To check that, you can try the following command: (anything after the '&gt;&gt;' is a command, that you will have to put in your script. The rest in the answer) &gt;&gt; class(dataset1) ans = 'table' If the answer is 'double' (instead of table, or anything else actually), you can adapt this example, but really, in your case it should be table. Just ask, if it's not table. To select data from a table, there are two steps: 1. you need to know which rows have the certain value that you want. 2. you need to use this information to extract these rows. Let's do it step by step. First we check the criteria. If I want to find which rows have 42 in the column 'A', I can do this: &gt;&gt; my_criteria = (dataset1.A == 42); % (the parenthesis are optional, I include them for readability) This creates a my_criteria vector, containing (in your case) 286 boolean. You want a condition on the column A and B, so you will have to combine them with '&amp;&amp;' and '||' (boolean and and or operators. Check the documentation) Second step is to use "my_criteria" to extract the good rows. This is called indexaction. In MATLAB, you can use a boolean vector to extract (index) values. So I want to extract values from dataset1. To do that, I use the indexation operation (that's the parenthesis) which needs to know 1. which rows to take, and 2. which columns to take (I will take all columns) I can do this like this: &gt;&gt; dataset2 = dataset1(my_criteria, :); We index the table dataset1 with parenthesis. Before the comma, I say which rows I want, by giving the vector that I have created before. It will extract all rows where the value is "true". After the comma, I say which column I want. Here, ':' means "all columns".
data = data(:,2) 
See Ryan's answer above
&gt; I'm really new to MATLAB, and firstly, I struggle a little with knowing where to put the '.' symbol before an operator. My understanding is that you put '.\*' before multiplying something with a vector.. So, please feel free to tell me if I've written my functions out incorrectly (syntactically wrong for MATLAB) for this question. This is a good question to ask as a Matlab beginner. An operator preceded by '.' makes it an "element-wise" operation. Usually, operators are applied in a matrix sense. For instance, consider a = [1 2]; b = [3 4]; c = a*b; This should give you an error since \* is trying to apply matrix multiplication on a and b, but their dimensions are incompatible. In contrast, if you did c = a\*b', b would first be conjugate transposed, so then it is multiplying a 1x2 matrix by a 2x1 matrix, so the operator makes sense and results in a 1x1 matrix (aka a scalar). In contrast, if you do c = a.\*b (note the dot), you will get a new 1x2 matrix, where the first element is equal to the product of the first element of a and the first element of b, the second element of c is the second element of a and the second element of b, and so forth. So use operators without the dot when you want them applied in a matrix sense. Precede them by a dot when you want them to be used on each element. 
Well first off I'm not really sure why you're using an `eval` statement instead of calling `load`. Second, what are you doing with the files? Are you analyzing each one within the loop? Or are you trying to concatenate them together? Third, when you load the data it should produce an array, say it's called `data`; then you can just add data = data(:,2) before the `end` to select only the second column.
Thank you for this. This makes a lot of sense! 
I forgot to mention one exception that I know to the above: the conjugate transpose operator ' when preceded by a dot like .' becomes the transpose operator without complex conjugation. This means that b = [1 i]' should return [1; -i] whereas b = [1 i].' should return [1; i]. Both ' and .' work the same when applied to matrices of any dimensions. I don't know the rationale behind treating the dot differently in this specific case. 
Regarding the question about plotting the difference of the two functions, if you want to know where the functions intersect (where both functions have the same value at a given time) is the same as looking where the difference of the functions is 0 (if they have the same value m1-m2 at that point is 0). However you are working with real numbers and you can't compare real numbers as equals when working numerically (since there is always some error). In this case you are looking for the place where m1-m2 == 0, but you are evaluating the function in a set of times (0.1, 0.2,...) and maybe in this set of times the difference never reaches 0 (but it reaches 0.0001). So you must establish a tolerance and say "Ok, if the difference is less than 0.0001 I'll consider it to be 0" and go for that point. Here is where the absolute value comes in, you have to find the place where abs(m1-m2) &lt; 0.0001 (Or the tolerance you take). I don't know if this explanation is clear enough. If you don't understand something please ask me again.
Yes, thank you. This makes a lot of sense actually. I started to understand it a bit more after I posted this, and your explanation really reinforces to me what is happening! This also clears up what to do with the absolute value. I was pretty confused about how using this function could help, but it does make sense now. 
Hey, OZIZZ, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Cool, now I have my value my positions for `k` for a YYYYMM also for a time HHMM. So I could now just insert `k` into data(k,3) and I should in theory get all rows with poisition k for column 3. I will try as fast as I get home :).
I would like to simply extract all the data into individual variables so that I can analyze them outside of the loop. 
I advise you to read up on [TCP/IP](https://en.wikipedia.org/wiki/Internet_protocol_suite) and [sockets](https://en.wikipedia.org/wiki/Network_socket). Inspect the machine you're trying to communicate with and determine its IP, and the port it's listening on. That information should get you going. The function you've linked is solid and should work nicely, once you understand how to call it.
Hopefully it won't be having to bother you again. I have my finished function: function mdata = extractperiodtwo(data, year, month, time) floor(YYYYMMDD/100) = year*100 +month; k = find( floor(data(:,1)/100) == floor(YYYYMMDD/100) &amp; (data(:,2)==time)); mdata = data(k,3); end and when I call my function: `&gt;&gt; mdata=extractperiodtwo(data,1978,2,1200)` I get an error-message saying that: `Undefined function or variable 'extractperiodtwo'.` I can't to figure out what's wrong. Any ideas? 
Your question is super unclear. Why is there a different amount of characters before the periods into which you want to add the multiplication symbol? Are you adding just a multiplication symbol, or also adding a period as in your example? Probably your best bet is to use [regexprep](https://www.mathworks.com/help/matlab/ref/regexprep.html), but you'll have to learn regular expressions for that if you don't know them yet.
Then you'll need to index each column you're extracting. Outside the loop: all_data = zeros(N,length(files)) Then inside the loop: all_data(:,i) = data(:,2) 
Thanks! I'll be going over that page you linked previously. Do you have any tips for finding what you're looking for? I find it difficult phrasing things in google or having to sift through the mathworks documentation. Is that simply the nature of being a scrub? 
A really good resource for learning regular expressions (very useful if you work with strings a lot) is https://regexr.com/. It also has a very useful debugging tool. As a new Matlab user, you may find the number of functions daunting, but Matlab's documentation is one of the best of any coding language around. If I have a specific coding problem which I think someone else has used before, I always google "matlab [description of problem]". Try to keep the description as general as possible when looking for solutions and you'll be more likely to find someone who has solved a similar problem to yours. For example, if I were looking for a solution to the problem posed here, I would have googled "matlab modify string at specific substring".
Well you should start with obvious. Your error imply Matlab can't find the function you are calling. Are you in the same directory when you call it? have you added the path were the function is saved? Try first which extractperiodtwo
I might be a highly incompetent when it comes to MATLAB. But I've used MATLAB before and never stoumbled upon this before. Now when I accidently pressed "run" in bar above the m.file, it gave me the option to change path and now it works. What did it do? What did I do by changing its path?
You probably changed the the working directory to where the function is saved. 
Cheers. I had no idea about that, probably a good time to look it up. up until now I've just saved my m-files in a folder on my desktop. 
I figured that `floor(YYYYMMDD/100) = year*100 + month` was a little redundant so I redefined that expression. I got it now working. Thank you for the help, you've been tremendous!
Your question says it. "... call the function..." Make another script with a while loop that calls your function within the loop.
Yeh but how do I write the whole loop
When you write a function, you save it with the same name, so your code above should be saved as DodecaSurfArea.m, then in a new script you can use DodecaSurfArea(3) and it will output the number generated by your calculation in the function. To make a while loop you do this: &amp;#x200B; while &lt;condition&gt; &amp;#x200B; end &amp;#x200B; the condition could be x &lt;= 10, so you would first define x=0 before the loop, then inside the loop have the line before end be x=x+1 (this progresses the while loop so that eventually x&lt;=10 will not be true) then on the line below "while" you enter the code for calling the function, an overall example would be this: x=0; x1=zeros(10); while x&lt;= 10 x=x+1; x1(x) = DodecaSurfArea(x) end This will do a while loop 10 times, store each result in a column vector, and then finish. Does this answer any questions you have?
&gt; Welcome to the wonderful world of regex :) As I am quite fond of regex myself, I figured Id post a way tat you could generalize this a little bit. % x = 'someStringToParse' x1 = regexprep(x,'([0-9]*\.)','\*$1') This will identify a sequence of all numbers of any length before the `.` and insert the `*` before the 1st number in the sequence
I'm assuming the 286\*6 in your question is the size of the matrix you're working with, I'm also assuming you're working with a table or a spreadsheet or something formatted, for example in a 4x5 matrix, like: x = \[1, 2, 1, 1, 5 1, 1, 4, 5, 2 2, 4, 5, 6, 2 7, 2, 3, 4, 6\]; And you want to know where all of the 1's are. You could do: binmat = x == 1; And you should get a Boolean/logical array like this: binmat = \[1, 0, 1, 1, 0 1, 1, 0, 0, 0 0, 0, 0, 0, 0 0, 0, 0, 0, 0\]; So, if your columns correspond to A, B, C, D, E and you want to store only those values, you could easily say: A = binmat(:, 1); B = binmat(:, 2); And so on. Depending on what you actually need to do with it, you could do a few things. If you need to count all of the values in all of the classes that correspond, you could use nnz(binmat). This will give you the total number of entries in the whole table that equal your input value (in this case it's 1) which will give you 5. If you want to populate class A with only the values that meet your criteria, you could do A = binmat(:, 1) .\* x(:, 1) (period multiplication is used when you want to multiply two vectors or matrices element-wise, i.e. \[1, 2\] .\* \[3, 4\] should give \[3, 8\]. For A, you would get \[1; 1; 0; 0\] If you need to add them all, you could do A\_sum = sum(binmat(:, 1) .\* x(:, 1) ); There are a few additional things you could do as well, but this is about all I can give you without knowing your specific problem and having a representative dataset suited to your application. I should say, by explicitly declaring everything as a separate variable as I have, I'm not taking advantage of how MATLAB memory management works, so if you can reduce this to something like A = x(x(:, 1) == 1) and likely get the same result much faster, but I find that sometimes the less memory efficient method makes it easier for other people to read and understand your code or for you to remember exactly what you were doing at some point in the future.
Username checks out. If it works, it works.
Make sure you fundamentally understand each and every step here, I got caught up on a lot of basics in the past and it really screwed me.
Applications will differ, but if you know exactly what you'd like to select and draw a freehand bound of the pixels, you could use roipoly. &amp;#x200B; For example: im = imread('cameraman.tif'); y = roipoly(); % Cast the Boolean y to the data type of the input image to avoid errors. imshow(im\*cast(y, class(im)), \[\]) &amp;#x200B; This should plot an image of only the selected area with everything else being zeros. You could try casting the image to double and setting all zeros equal to NaN. &amp;#x200B; Something like: new\_im = double(im\*cast(y, class(im))); new\_im(new\_im==0) = NaN; &amp;#x200B; If you want your selected area to display nicely without having to adjust contrast.
Yeh that helped a lot thank you
probably the easiest way is to make them both an array, so like x(1) corresponds to y(1), and on so x(i) maps with y(i). The just call plot(x,y) to show them. Matlab will re-write the entire array everytime you add a number to your vector, so it's best to pre-allocate like x=zeros(n,1); at the start. 
If you need it to work in subsequent runs of the script then using something like this would be better IMO. xArray = [xArray, inputX] and yArray = [yArray, calculatedY]. This appends the new values of x and y to the end of the x and y arrays. Pre-allocation is less likely to work now, however, I personally don’t worry too much about pre-allocation, Matlab will complain/warn you (i.e. underline your array with a squiggly red line) but will run none the less, and anyway pre-allocation is much more important for much large arrays far larger than I’m sure you’re planning to deal with. Finally, if you need the run the script on subsequent days, or between loadings of Matlab itself, then I would look into saving your xArray and yArray out to a file and then loading them back in at start-up. Matlabs docs are very good so I won’t go into details on how to do this.
readtable() save()
Perhaps consider looking r/datasets
+Many thanks for the reply. I've been reading up on Matlab and Labview's TCP/IP examples and I can hopefully work my way up from there.
Just play around with it, best way to learn. 
Did u looked into fft?
You're welcome. Don't be shy about asking for some code review if you get stuck along the way.
Why are you using symbolic variables? 
should i not be using them? &amp;#x200B;
I have, what does fft accomplish that fourier wouldn't?
Thanks. I'll get on it. ps, I'm a newbie on reddit too. 
Yeah, matlab will do something for you, but if you're not using your intuition, it'll do the wrong thing. You've said it yourself, you expect some dirac delta functions. Where? At what x values? Is your plot showing you x-values that include the range of interest? Taken from the documentation for the fplot command: fplot(f) plots the curve defined by the function y = f(x) over the default interval [-5 5] for x. Does the range -5 ... 5 include your dirac functions? Solving that will help in future stuff. Second problem, though: Now, you have a few dirac delta functions. Those will only be non-zero at very particular points. In fact, your function is either zero or NaN. Matlab cannot plot NaN (infinite). So, you're in trouble. Print out the value you get for h and a. pretty(h) / / / 6746518852261009 \ abs| pi | dirac| w - 2000 pi - ---------------- | \ \ \ 1073741824 / / 6746518852261009 \ \ + dirac| w + 2000 pi + ---------------- | | \ 1073741824 / / / / 6746518852261009 \ + pi | dirac| w - 2000 pi + ---------------- | \ \ 1073741824 / / 6746518852261009 \ \ \ + dirac| w + 2000 pi - ---------------- | | | \ 1073741824 / / / You've got your 4 dirac functions, so you're good. Explain why you can't print these. Now do it the real way: Define Fs as a sampling frequency. Make it at something like 10^7. Create a time interval and sample your frequency. Fs = 10^7 t = 0:1/Fs : 1/Fs*1000 Now, use your new variable and sample your function. y = 2*cos(2000*pi*t)*cos(2*pi*(10^6)*t); Take the fourier transform using the FFT method for numerical DFT calculations x = fft(y); And plot figure(1);clf; plot(abs(x)) You'll need to play around with the right sampling and lengths. (I'm having trouble displaying both delta functions for some reason.
Symbolic variables are for symbolic calculations. You're doing a numerical calculation. You got rid of the symbolic variables, but if you're still using functions that are meant for symbolic expressions, they probably won't work as expected. Use normal Matlab plotting functions. 
Sounds entirely possible. Pre-allocate your arrays, add values to each one and increment your index variable as you go. 
Could have two plots with different attributes. One can show all points, the other could take the outliers out by limiting the ylim parameter on the axes. gca().ylim = [ &lt;some range&gt; ]
My guess is that the two delta functions not being shown are the ones with negative phase shifts? How would I shift the graph to show those as well? 
No, the negative side is being shown (its actually the right side of the graph). The sampling does affect this. Look back at your Fourier table or properties. You're doing multiplication of cosines. What does multiplication by a cosine do?
I'm sorry, but I cannot seem to find anything in my fourier transform tables that has to do with multiplication of cosines, unless you are talking about the fact that 2 functions multiplied together equal the convolution of each fourier transform. 
There should be something, its the modulation property. It won't be two sines, but it will be multiplication by a sine. You are convolving the frequency information of a signal with a delta function. This results in a shift of the frequency content.
Yeah. The program works fine whether it's in a script or a gui, but when I close the gui sometimes the editor client doesn't want to respond. We've used the script for years, but I just made a gui as an easier way to organize, swap between, and compare multiple large data sets
Dang. The only things I can think of are that: * it's hanging while trying to clean up that big ol' wad of data, or * it's some graphics problem (likely to do with drivers). You can make a custom CloseRequestFcn callback to check that everything gets cleaned up before closing or just to get info on what's happening while attempting to close. Sorry I don't have more for you, it's not something I've encountered myself. I usually write GUI code directly in the editor, rather than using GUIDE or the App Designer.
I managed to figure it out. I changed Fs to \~2000\*pi (I guess that's the delta you were talking about?) and was able to see all 4 delta functions. &amp;#x200B; Thanks for the help!
I just used guide for a skeleton, but making a CloseRequestFcn is a solid plan. There's probably some process it's trying to finish up that confuses the IDE on close Thx!
Auto Cad pretty much puts Linux and Mac OS out so: Windows 10 with a system that has atleast: 8gigs of ram, 256gb of ssd storage, i5 processor. Maybe a surface pro 4 would be good for you.
I use vim to edit files for Matlab all the time, so I'm certain this should be possible. Are you sure you're editing the correct file? I can't tell you how many times I've been editing a version of the "same" file that's in a different location versus the one that's on the path and been confused about why my changes weren't taking. Another issue is that Matlab will sometimes retain the old version in a sort of cache mechanism. I've only ever noticed this when using classes (if you have an instance of the class in the workspace and you update the `classdef`, matlab continues to use the code from prior to the change) or mex, but I suppose it could happen with functions too. Try running `clear` or `clear functions` before running the script and see if it helps.
The simplest method would be using [xlswrite] (https://www.mathworks.com/help/matlab/ref/xlswrite.html) and xlsread. If I understand your problem, my work flow would be: 1) xlsread the data into an array and labels into a separate cellular array, save the file name as a string 2) do whatever tests you want 3) generate your outputs 4) xlswrite to an identical file name in a safe spot so you can check the changes between the original and output and "save" (another function) to a .mat file for yourself. I've had issues with the two xls functions on my computer because they don't close Excel when they're done. What you're doing sounds tricky but doable if your formatting is very consistent. 
I'd second everything u/toprelemons said except the Surface Pro. You'll want a fairly substantial computer to run both programs and I don't think you'll want to type on the Surface for long periods of time (term papers). If you're wanting a crazy idea, what my wife and I did was purchase cheap laptops with the intent to replace them every X years and a powerful desktop computer that we can remote into. Total cost was cheaper than a powerful laptop, we only have one computer to buy licenses for, and I can remote in to ~~play my media collection on my phone/laptop~~ check the progress of long-term simulations.
It sounds like you would use a series of independent if statements to run different functions on the data based upon the initial read of the spreadsheet. This could be done in a single script, but it depends on the depth of variation and how involved each re-write function operates. Ideally each new function should be its own separate file/function to make code maintenance and debugging easier. function editXLS(xls_in) edit_flags = paraseXLS(xls_in); xls_out = duplicate(xls_in); if( edit_flags(1) == 1 ) xls_out = editFirst(xls_out); end if( edit_flags(2) == 1 ) xls_out = editSecond(xls_out); end % check if user accepts changes? tempWrite(xls_out); overWrite(xls_out); end Something like this could work and then grow as new edit tools are needed.
I wouldn't recommend playing graphically intensive video games but it isn't that bad. I use school WiFi and the desktop is on high speed Ethernet. We use TeamViewer mostly.
So stuff like solid works and matlab, perfectly good?
Matlab wonderfully. I don't use Solid works but Abaqus and AutoCAD can lag a little bit if I'm working in a huge file (regenall is my friend).
With SolidWorks, it's usable if you have to, but its going to be pretty annoying if you're actually drawing complicated parts. However, if you're running a stress analysis or rendering something, it will be fine. I ran the 2016 version on a 2015 macbook pro, and it worked mostly okay. 
How are the values stored in data? Can you post an example?
A few tricks to keep in mind: 1. If you want a nicely formatted output file, make a template spreadsheet and use copyfile to make your new file and then drop data in. 2. Xlsread will skip some empty rows and and columns so use a specific cell reference if possible 3. If speed is important and you have lots of separate I/O operations, look up how to use ActiveX commands to keep the files open. 4. Use winopen if you want to open the output file in excel after it finishes 5. Use uigetfile and uigetfile.
Absolutely, but it has to start somewhere. If it's feasible that you could label the data yourself with your own rigorous standards, then that's a good option. For scalability, you could theoretically normalize to some known (e.g. physical area) and pre-process the image in some way to ensure consistency. My impression was that OP is trying to generate some labels for some known data. I'm betting that there aren't a lot of open-source and reliable labeled cell data out there like OP is looking for. Identifying a method to create some kind of filtering algorithm by hand-segmenting and QC'ing the data might help speed up this process a lot. You may see that any given image might have proper labeling for 80% of the points of interest and would only need to segment the remaining 20%. Labeling data can take a lot of time, so anything that helps speed this up is usually welcomed on the job.
Right on, I hope it works out!
u/toprelemons u/prosperosmile To be honest with you i'm not very tech savy so i'm not 100 percent sure what you guys are referring to with the computer sharing and all that but what i did get was stay away from mac and look for at least 8 rams and lots of storage? The computer would be solely used for those two programs so i wouldn't interfere with other uses. thanks for your inputs though now im not a total blank slate 
If this is the case, you may want to try logical indexing instead of loops. You can make **x** into a vector and another, **y**, for the second column to filter **mdata** into the valid temperatures. flag_year_month = floor(data(:,1)/100) == x_vec; flag_time = data(:,2) == y_vec; mdata = data(logical(flag_year_month.*flag_time),3); temp_min = min(mdata); This requires you to build out the year_month x_vec and time y_vec in advance, but should make resolving min or max values of temperature easier.
In that case, get yourself a nice mid-range laptop and ignore my suggestion of remoting into a desktop. Remoting is a powerful tool but it causes a lot of headaches. I also wouldn't recommend buying the latest and greatest laptop because component prices are constantly dropping.
I go to an engineering school and the laptop my school required all students in my class to have was the Dell Precision 15 5000 Series. The school installed a bunch of software like MATLAB, Solidworks, Maple, etc for us to use for classes and it runs all of that with no problems. You can even use it for a bit of gaming
I would question why you are using Matlab. Why not use excel macros?
Not OP, but it all depends on how math intensive the logic checks are. If they involved any matrix operations, for instance, I'd much rather do them in MATLAB
^^^This is what I do. I dont use AutoCad so I can run Linux on my main machine (Ryzen 5 1600x 16g ram at 3000mhz, 512GB SSD, 2TB HDD). I even setup Grafana to monitor progress and performance. I can then use my crappy laptop to ssh into the home server and run jobs remotely. I initially did this to streamline my workflow, but it is hella fun to be able to complete jobs so much quicker than those using their laptops/uni computers. 
Hi, first of all thanks for your answer and forgive me if I can only reply now, but I could not go back to MATLAB for 2 days. I'll try to be as clear as possible and rephrase my problem, hopefully it could help. &gt;I'm going to assume that your data is of type "table". what I get is class(dataset1) ans = 'dataset' What I did from the start was, I created this by importing a 286*6 matrix into MATLAB from Excel and renaming it dataset1. With "editds" I labelled all the rows and all the 6 columns ("col1", "col2" etc). In Row Labels I also added 2 sets of classes (class_A and class_B), and for each row the value for the two classes could be either 1 or 2. What I want to do now is create a new dataset2 with all the rows for dataset1 where, for example, both class_A and class_B are 2. I tried to do my_criteria=(dataset1.class_A==2) but the result is "??? Undefined function or method 'eq' for input arguments of type 'cell'" the point is that I don't want to set a condition on the columns but on the classes. 
So firstly, the frequency of your second term is 10e6. Is that right??? You'll have to use a sampling frequency twice that of that frequency to be able to resolve its fourier decomposition! That's just super super high.
App Designer was introduced in R2016a but it started out quite limited. It only really became better than Guide from around R2017a onwards. 
If this wasn't a homework question, I'd say it's a perfect use case for the splitapply function. No need for for loops. Assuming that you have already extracted all of the temperatures and dates into separate variables, this can be done in one line: minTemps = splitapply(@min, temperatures, month(dates)); If the dates are not datetime objects, then you may need to convert them first bring on the format: dates = datetime(dates);
Save the names in a cell array cardNames={'Ace','2','3','4','5','6','7','8','9','10','Jack','Queen','King'} fprintf('\nYour first card is %s',cardNames{cardNumber-1}) % note: the -1 is to make 0 correspond to Ace, 1 correspond to 2,..., 12 correspond to King 
Alright. I forgot to mention but I am unfortunately required to use for-loops for this particular problem. But I see what you're saying
I see. unfortunately I am required to use for-loops for this particular problem.
In that case simply compare the result of each for loop and only keep the lowest temperature found. min_t = 100000; for i=1:n_queries min_t = min(min_t,extractperiod(data,year_q(i),month_q(i),time_q(i))); end This should prevent you from needing to store all the temperatures over the query range.
Based on that figure, the problem appears to be during extrapolation. Your measured values have a maximum x value of 0.71, while your binning values go up to 4.22. There are a few ways to deal with extrapolation, depending on your specific problem. 1. You can set a fifth input to interp1 to specify the output to some reasonable bounding value when you extrapolate. (Not likely applicable in your case - this is more useful when ramping some value from 0 to 1) 2. You can set a fifth input to interp1 to specify the output to some obviously false value (e.g. NaN) when you extrapolate. 3. You can filter the data to handle the extrapolation with a different algorithm. 4. You can modify your inputs so there is no extrapolation (for periodic signals, you might be able to modify the inputs so they are all processed within the same period - I do this regularly with angles, angle = mod(angle,360) forces your angle to be between 0 and 360)
[So far with help of googled code. 6 Channels, do I need adjusting?](https://pasteboard.co/HBBciiL.png)
Also i cant get any demo, i tried emaling them but seems that the demo request page doesn't work.
Thanks. Technical project, Im checking a microphone array.
Try using `'pchip'` instead of `'spline'`
Okay, awesome you have the channels. You can tell plot to treat them as a set by concatenating them together. p_data = [chan1, chan2, chan3, chan4, chan5, chan6]; plot(p_data); You will need to be careful about using **,** or **;** when building the matrix using **[ ]**. It isn't clear if the arrays are vertical or horizontal where **;** specifies a new row and **,** specifies a new column.
I'm sorry if you feel that I am just ignoring your help, after some consulting with my teacher I had to somewhat emulate what she wrote in the pseudo-code. It did give me an idea for the for-loops though. function [algo] = getMiniserie(data, startYear, endYear, time) v = zeros(12,2); for month = 1:12 for year = startYear:1:endYear p = extractperiodtwo(data, year, month, time); q = min(p); v(month,1) = v(month,1) + q; v(month,2) = v(month,2) + 1; v(12,2); end end end So what this does is that it stores the lowest temperature in column 1 and column 2 is denoting what month it is. It does not work however work, iäm getting the error sign; `Unable to perform assignment because the size of the left side is 1-by-1 and the size of the right side is 0-by-1.` I'm not really sure what it means.
I noticed it on my m.file and changed it to what you said. But now it adds the error message: for line 12 `v(month,1) = v(month,1) + q;` weirdly enough.
Shouldn’t this be posted at simulink instead of MATLAB sub?
If the error is &gt;Assignment has more non-singleton rhs dimensions than non-singleton subscripts. It is likely that **min(p)** is returning multiple values which cannot be assigned to the single element of the vector **v**.
But it should only assign a single value for every loop? If so how could I change this?
I sorted it out. I did not realize that there was no data for the time 1400 in my data. However(it never ends :) ) another issue emerged. Now when I call my function &gt;&gt; getMiniseriesone(data, 1997,2002,1200) I get the answer 7. Where I am supposed, or expecting, to get a vector with 2 columns and 12 rows where all the lowest temperatures are on the first column and on the second one there should be the corresponding month. I do know atleast know that my function `extractperiod(data, year,month,time) `works as it should. I am not much wiser though to what causes the answer 7. 
The values of **v** being a problem are due to this bit of code: v(month,1) = v(month,1) + q; v(month,2) = v(month,2) + 1; Each iteration adds **q**, 1 and **v** to the two columns of **v**. Maybe you don't want to add?
You can repeat the code just with a for loop, utilizing pause() as necessary to get the timing right. For storing the data, you can each image in a new layer of a 3 dimensional array, something like for i = 1:100 imagesArray (:,:,i) = imread(myimage) end Then each ith layer will be the ith image, and you can store this variable as text or excel or whatever you prefer
Wouldnt this mess up the array format of each image though when I need to retrieve it later? (The end goal is for another program to then take each image output, a 20x20 array, and apply a function to it; repeating for the full 1 minutes worth of images)
https://www.mathworks.com/help/matlab/ref/pause.html Some code that would be close to what you want: tp = 0.1; c = 0; for iii = 1:60 for jjj = 1:10 tic img = snapshot(cam); img2(iii,jjj,:,:) = rgb2gray(imresize(img,)); tc = toc; pause(tp-tc); end end I would save the images afterwards in a separate for loop, as the save time is likely to be more than that. That being said, you may run into the issue that the inner function requires more than 100ms to process. I would see if you can set the camera framerate to 10fps (most won't allow you to) and save all the images in a [n,x,y] matrix, and then subsequently parse that into the individual files. 
It shouldn't, although I'm not sure exactly what you're doing. You should be able to do any operation on the single layer of the array which constitutes each image without altering the rest at all. Depending on your format you might need mat2gray or similar functions
Oh ok, then from what I understand- it should work with the program I have in mind. Thanks!
Try arrayfun: X=arrayfun(@speedy, 1:0.2:10) However it will be slow! If possible you should consider vectorising speedy it can run speedily!
You could also use your existing code inside of a for loop, and save the images using saveas()
How would I then access this array later to see if it worked btw (once I implemented the code you sent, how can I call it back to see if the information saved correctly)
&gt; One method that occurs to me is to use a cell array instead of a 3 dimensional array Ive used this approach before. It works pretty well during the loop, but I need to have the output in a standard array (since the dimension being looped over here will be used in a `fft
Hmmm... Tricky. How about finding a better way to reconstitute the cell array as an ND array, instead of cat(3,C{:})? Maybe cell2mat(reshape(C,1,1,[])) would give you better performance, I'm not sure. I can't think of anything else, besides trying to write optimized C code as you mentioned.
It looks like NI has a library for working with tdms files: [http://www.ni.com/white-paper/7446/en/](http://www.ni.com/white-paper/7446/en/) &amp;#x200B; If that does not suit your needs, my suggestion would be to look up fopen, fclose, and fprintf to just write your file line by line. Hard to say what the best approach would be without an example of you csv and re-formatted tdms files.
&gt; &gt; If C has fewer columns than A, you could also just do: &gt; &gt; ... I cant guarantee that this will always be the case... A and C ae both square I do not believe your requirements (1) and (2) are compatible. If C is larger than A, then you cannot reuse the memory from A to store C (it won't fit). Therefore, you need to allocate some memory for C. If you do not allocate enough memory for all of C (to satisfy (1)), whenever you use up everything that you've already allocated you'll need to allocate a larger chunk for C. Since there's no guarantee that there is contiguous memory available to do so, you wind up with a brand new allocation and moving everything already in C to that new location, which violates (2). The closest you can come would be if you put the start of C before the start of A, such that it ends at the same place in memory where A ends. However, there's no way to reserve space before the beginning of A (unless you have control over the allocation of A prior to calling the function), so you cannot safely use that memory. You would have to allocate enough space for C (violates (1), since A already exists) and then move A to the appropriate location within C. This would minimize the time that you have both allocated for, but that doesn't really buy you much if you're coming up against memory limitations. Notice that none of this has to do with what language you're using. Your requirements are simply incompatible with the guarantees you can get for memory allocation. The only way around it is if you know how big C is when you generate A, and you allocate space for C then, and generate A in the appropriate place within that allocation, which is getting into some seriously low-level memory handling.
Can you give a more concrete description of what you are trying to accomplish? &gt;1) Does not require having all of A and al of C allocated at the same time. i.e., not this: If C is not preallocated, and changes size, you are going to take a huge hit in performance. Matlab arrays are contiguous in memory and any resize operation results in a malloc/copy. You're better off taking the memory hit up front. The only way around that is cell arrays, which are arrays of pointers to other data objects. You still have a penalty for resizing the cell, but it's only copying nn elements, not numel(C) elements. Of course, not being contiguous in memory anymore means no optimized operations. 
So you’re saying b isn’t a column vector and is basically a scalar value? I’m sure I’m very new to Matlab and not too familiar with the terminology. Also, how could you tell b is indexed with only a single scalar?
Would saying b(n,1) and b(i,1) in their respective spots then be proper way to identify it as a column vector?
It’s more explicit, but it’s not any better in this case. Try this: b_row = 11:15 b_col = (11:15)’ b_row(3) b_col(3)
I’m not really sure where I would fit this or how this would help. Could you elaborate?
Sorry, not clear: just run that code by itself and look at what indexing with one variable does in a row vector vs column. 
So I would have to label b as a column and have it go from b1 to n. So in the script I would have to identify b as b_col=(b1,n) ??
Oh no, sorry, the name is irrelevant. I was just trying to show that the third element was the same for those two vectors, regardless of row or column
Ok yes I see that, but how would I go about indexing b correctly in the script? I’m still not really sure how to fix it exceeding the array bounds.
I doubt the problem is the indexing of b, perhaps it is indexing of x with X(n,1). How big is x? You should try pre-allocating it. Also please do not use i for loop indices. i is a number. use m, n and p.
I’m guessing a call to the IT administrator could solve this. If the package can’t be downloaded and transferred via usb, then they should be able to override the air-gap and install for you. 
Unfortunately the course admin said that they won't be installing MATLAB packages on the machines since there'd be more than 100 students to cater for. They said the only way is to try and move the entire keras folder into my assignment folder when testing if possible :(
You don't want to seed inside of your loop, just seed it once on the outside and your different calls to rand should result in unique values. You're currently trying to redo the same seed every loop.
Sure thing! Finite difference would certainly be the way to go. Is this for a homework problem?
It is yeah, if you want my data set you’re more than welcome. I’ve realised my problem is that I don’t know how to discretise properly, have you had any experience?
I have a bit of experience, yeah! So generally it's most beneficial for us both if you do the legwork, but I help with explaining any particular issues you might have. To start, am I correct in assuming you have a nice evenly-spaced grid? By that, I mean the distance between each point in the y direction is a constant, dy, and likewise for the x-direction, dx? That greatly simplifies the finite-difference formulations. Generally, the approach will involve using central differences on all the interior points, and one-sided (backward, forward) differences on the edges. Are you pretty comfortable with looping over every point and calculating something, storing the result in a new array, and using "if" conditions to apply a different operation based on location? For example, something like for i = 1:imax if (i == 1) [do this] else if (i == imax) [do that] else [do the other thing] end end Sorry if that's super basic, but I see people at many different levels of programming ability in this subreddit!
Thank you so much for being so helpful! It’s pretty late where I live now so I’ll explain my data, the equations etc.to you tomorrow if that’s okay. I’m familiar with for loops and the basic concept of finite difference so that shouldn’t be a problem, I’m just not sure how to apply it in this instance. I’m new to r/matlab and wasn’t expecting such a great offer of aid. Many thanks again friend :). I’ll explain tomorrow. 
No problemo! I'm guessing you've been given the velocity field, and need to calculate the stream function from that. I'll be around, got a three day weekend and no plans!
Im glad you replied /u/Idiot__Engineer. I actually had an idea of how to (mostly) accomplish what I want, but I dont know if it actually can be done (and if so, how I might go about doing it) (I also didnt want to bias responses). I imagine you *might* know if this can be done (and/or would actually work), and perhaps even have an ideas of how to actually implement it (though if not no worries). The idea is more-or-less the following: 1. Allocate a continuous/sequential chunk of **virtual** memory to store `C`, and do so In a way that MATLAB thinks the chunk has been zero-written but without *actually* zero-writing it. This would require that you have enough memory+swap to hold both `A` and `C`, but would avoid the massive number of page faults youd get from placing `C` in "active memory" and zero-writing it 2. At the start of each iteration in the loop, add a command that actually zero-writes the (virtual) memory that the current iterations output will use. This would cause the OS kernel / system memory management unit to update the page table and assign actual memory addresses to the data required for the current iteration output (and free the corresponding swap space addresses that were acting as dummy storage). Most, if not all, of the physical memory being assigned here could come from from the previous iterations input (i.e., `A(:,:,nn-1)`). This would result in the physical memory addresses being non-sequential, but from MATLAB's point of view the memory would still be 1 sequential block. I could see this being non-ideal in terms of performance, though I kind of doubt that the data output would have a sequential continuous block of physical memory doing things "normally" (due to security features like mandatory + high entropy ASLR being active of the system, i would think that OS would forcibly prevent a program being assigned a continuous/sequential block of 10's-100's GB of physical memory...)
Fantastic! Thanks for the help and for suggesting which functions will actually implement my idea. I have a fairly good idea about what computers can and cant do at a lower level, but I still have a ways to go in terms of learning which functions will actually implement what Im trying to accomplish. &gt; However! The existence of realloc itself brings about a new, much simpler, possibility: start by realloc-ing A to the size of C, and then memmove all of A (which you technically didn't disallow in (1) and (2)) to a position within the new allocation such that it ends and the end of the block of memory. The existence of `reAlloc` does seem to make things quite a bit simpler. Since, in general, I wont know the sizes of A and C (and which is larger), would something like this work? I havent tried compiling it so there could be errors, but I think the basic idea is sound. Basically, the intent is to use `mxRealloc` and `memmove` at every iteration to expand/shrink the current iteration's data based on the size of `A` and `C`. My C still isnt very good, but is slowly but surely getting better. #include "mex.h" #include "matrix.h" void mexFunction( int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[] ) { mxArray *dataInCur, *dataTempCur, *dataOutCur, *transferArrayCur; mwPointer *data; const *dimsIn, *dimsOut; // geet dimensions of input and output dimsIn = mxGetDimensions( prhs[0] ); // first input is "A" (3D) dimsOut = mxGetDimensions( prhs[0] ); // first input is array of zeros of size of one iterations output (2D) // create data array that we will dynamically reAlloc on every iteration data = mxCreateNumericArray(ndim, dimsIn, mxGetClassID( prhs[0] ), mxCOMPLEX)( prhs[0] ); // setup temp arrays to use for the cblas_?gemm call in every iteration dataInCur = mxCreateNumericMatrix( mwSize *dimsIn[0], mwSize *dimsIn[1], mxGetClassID( prhs[0] ), mxCOMPLEX); dataTempCur = mxCreateNumericMatrix( mwSize *dimsIn[0], mwSize *dimsOut[1], mxGetClassID( prhs[0] ), mxCOMPLEX); dataOutCur = mxCreateNumericMatrix( mwSize *dimsOut[0], mwSize *dimsOut[1], mxGetClassID( prhs[0] ), mxCOMPLEX); // ||----- MAIN LOOP -----|| for ( nn=0; nn&lt;=dims[2]; nn++ ) { // build transfer array for current iteration transferArrayCur = someFunc( nn ); // Copy current 2D data input array into dataInCur. // Move forward from start by number of bytes equal to output generated prior to this iteration. // Copy number of bytes equal to 2D array slice of the input (i.e., A(:,:,&lt;#&gt;)) memmove( dataInCur, ( mxGetPtr( data ) + dimsOut[0]*dimsOut[1]*sizeof(data)*(nn-1) ), dimsIn[0]*dimsIn[1]*sizeof(data)); // call gemm to implement matrix multiply. Seperate op into 2 parts. part 1: dataTemp=A*B. part 2: dataOut = transpose(B)*dataTemp. // NOTE: I might be missing a blas function call to convert the array into MKL's format before this call, as well as a function call to convert it back after the gemm operations // 1st operation: dataTemp = A*B dataOutCur = cblass_?gemm(CblasColMajor, CblasNoTrans, CblasNoTrans, MKL_INT *dimsIn[0], MKL_INT *dimsIn[1], MKL_INT *dimsOut[1], 1, float dataInCur, MKL_INT *dimsIn[0], float transferArrayCur, const MKL_INT *dimsIn[0], 0, float dataTempCur, MKL_INT dimsIn[0] ); // 2nd operation dataOut = transpose(B) * dataTemp dataOutCur = cblass_?gemm(CblasColMajor, CblasTrans, CblasNoTrans, MKL_INT *dimsOut[0], MKL_INT *dimsOut[1], MKL_INT *dimsIn[1], 1, float transferArrayCur, MKL_INT *dimsOut[0], float dataTempCur, const MKL_INT *dimsIn[0], 0, float dataOutCur, MKL_INT dimsOut[0] ); // write 0's to data where dataInCur was for ( mm=0; mm&lt;=dimIn[0]*dimIn[1]; mm++) { data[( dimOut[0]*dimOut[1]*(nn-1) + mm )] = 0; } // Shift the end of data to create a space that is the same size as dataOutCur (code TBD) // if output is smaller than input: memmove the end of data inward into the newly zeroed area (leaving space for the exact number of byttes in dataOutCur), then call reAlloc on data to shrink it by ( (sizeof *dataInCur) - (sizeof *dataOutCur) ) bytes // if output is larger than input: call reAlloc on data to expand it by ( (sizeof *dataOutCur) - (sizeof *dataInCur) ) bytes, then memmove the end of data outward into the newly added area (leaving space for the exact number of byttes in dataOutCur), then // if output is the same size as input, do nothing // copy current 2D data output array into the newly created spot in data // Move forward from start by number of bytes equal to output generated prior to this iteration. // Copy number of bytes equal to 2D array slice of the output (i.e., C(:,:,&lt;#&gt;)) memmove( dataInCur, ( mxGetPtr( data ) + dimsOut[0]*dimsOut[1]*sizeof(data)*(nn-1) ), dimsOut[0]*dimsOut[1]*sizeof(data)); } // set output as data mxSetPtr( plhs[0], data); } mxArray dataTempIn dataTempOut; for (
Hey, jkool702, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
sorry for the late response, I've been on vacation. when i put disp(b) i get the same two errors but this time it produce a 4x4 matrix with each entry reading 'Inf"
x is the column vector variables. In this system, I am trying to solve Ax=b. How exactly would I pre-allocate it?
Right, so there’s probably not a way that you’re indexing out of b; also you’re not going to solve that, and also b is supposed to be a vector so you’ve got problems there. On the command line, type `dbstop if error` and hit enter. Run your code again. Where it stops, you will be at a point just before the execution of the erroneous line. Highlight each of the indexing expressions, and hit f9 to evaluate them; you will then find out where the actual error is.
ok so it stops at the line: x(n,1) = b(n)/a(n,n); and then when i hover over the highlighted line it reads: n: 1x1 double = &amp;#x200B; 4 &amp;#x200B; im not really sure what this means
Highlight ‘a(n,n)` and hit f9. That’s likely your indexing error, that or the x one. I suspect you’ve passed in a and b opposite.
ok, i'm not really sure what I did, but now the only error i'm getting when i run the code is "Undefined function or variable 'a'." I need a to be any nxn upper triangular matrix. how would i set a to be that?
Re: &gt; Does this really not allocate a brand new `[nTemp x nTemp x N]` matrix and then copy values from A (still exists) into it before destroying the old A? Such an action would effectively result in `A` and `C` being simultaneously allocated in memory. So you're right that would be a problem. However, MATLAB always surprises me--I'd assume it correctly shifts memory, etc. to make it work in the memory that is available. MATLAB's so expensive it better do that correctly lol :P. I'm not in front of a MATLAB-capable computer right now, but one could test this by creating an array that is &gt;50% of your computer's RAM and then appending a single element on the end. If the computer doesn't crash, MATLAB does it the "smarter way." Re: &gt; This also results in interleaving the new and existing values, which I suspect would be a little bit more expensive than the lower-level `realloc` version. As to this, I'm unsure since I haven't played around with serious memory allocation in MATLAB.
&gt;function x = BackwardSub(a,b) &gt; &gt;n = length(b); &gt; &gt;x(n,1) = b(n)/a(n,n); &gt; &gt;for i = 1:n-1 &gt; &gt;x(i,1)=(b(i)-a(i,i+1,i+1:n)\*x(i+1:n,i+1))./a(i,i); &gt; &gt;end I don't know why I was dumb before, but you are doing an indexing expression that is woefully complex, and three-dimensional here: \`a(i,i+1,i+1:n)\` On the first evaluation, you're asking for a(1,2,\[2,3\]). I'm betting that A is not at least m x n x 3 in size, is it? Some things to take away: * matlab evaluates arithmetic prior to generating arrays. So \`1+1:5\` gives you a different result than \`1+(1:5)\`, and \`(1+1):5\`. Try them all and see the difference. * \`x(n,1) = b(n)/a(n,n);\` is asking matlab to make up a matrix, and index to the nth row and first column; matlab says "okay, so what you want is a matrix n tall and 1 column wide. Got it." So it does that. Is this what you want? * From linear algebra for this problem, you know A \* x = b; b is n x 1 for the usual case, which must mean that A is n x p, and x is p x 1; inner matrix dimensions must agree. If A is triangular, that must mean that it's n x n. So x is therefore n x 1. Perhaps preallocate that. * If you truly want that triangular matrix, matlab has an upper triangular function, \`triu()\`, which you could use as \`A = triu( randn( 3 ) )\`, for a 3x3 case. All of the above doesn't actually help your problem, just matlab syntax. You'll have to work that out by hand. Also, after a bunch of years, I have found that descriptive indexing variables are really helpful, and also, they won't let you confuse the index with a number like \`i\` or \`j\`. So use \`i\_row\` or something, and you'll have a better result. Also in the for loop, break down complicated indexing expressions for now. It's hard to see errors with complicated indexing expressions. In your case, that would look like: &amp;#x200B; for i\_row = 1:n-1 a\_dim\_1 = i\_row ; a\_dim\_2 = i\_row + 1 ; a\_dim\_3 = i\_row + 1:n ; &amp;#x200B; x\_dim\_1 = i\_row + 1:n ; x\_dim\_2 = i\_row + 1 ; &amp;#x200B; x(i\_row,1)=(b(i\_row)-a(a\_dim\_1, a\_dim\_2, a\_dim\_3) \* ... x(x\_dim\_1, x\_dim\_2)) ./ ... a(i\_row,i\_row); &amp;#x200B; end &amp;#x200B; This doesn't fix the functional problems you have, but it makes it much easier to find them.
Hey, jkool702, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
There's a [Buffer Block](https://www.mathworks.com/help/dsp/ref/buffer.html) in Simulink that you could use to do your calculations once every 200,000 time steps, but I think you need the DSP System Toolbox to access it. With only the basic Simulink library you could probably cook up a homegrown solution with a MATLAB Function block that contains a `persistent` \[200000x1\] vector and a counter variable where you keep adding incoming data until the vector is full, do calculations, and then reset the counter and vector.
If that's the case it should be straightforward to figure out the size. If A is MxN then x is Nx1 and b is Nx1. When M is not equal to N then pinv must be used.
Okay, so I've been given x velocity (u), y velocity (v) and pressure at 1024 points in a 2D simulation around an aerofoil. &amp;#x200B; The streamfunction (psi) is governed by the equations u = d(psi)/dy and v = -d(psi)/dx. (They're partial derivatives) From this I need to derive the streamfunction at each point, then since it is constant along a streamline, plot the streamlines. Finally I need to calculate the volumetric flow rate as a function of the streamwise coordinate, and verify conservation of mass. &amp;#x200B; I'm currently stuck on the first part aha. I assume I need to rearrange and integrate the governing equations to isolate Psi, but I don't know how to apply that to a discretized volume correctly, e.g. what limits to apply to the integration.
Oh man, that's gonna take a bit more effort to explain. The process usually involves applying a transformation to the grid which simplifies everything, but the transformation itself is pretty complicated. Have you learned concepts like grid metrics and Jacobians? I'm hesitant to overcomplicate this project, since you should have already been given what you need to solve it.
&gt; I'm not in front of a MATLAB-capable computer right now, but one could test this by creating an array that is &gt;50% of your computer's RAM and then appending a single element on the end. I was actually able to get to an instance of matlab earlier and ran a similar test. I created an array that was a significant chunk of memory (~4 GB) and then watched my memory usage in task manager (was using Windoze). I appended another decent chunk on the order of 1GB to the end of the array by assigning `NaN` to `(end+1:end)`. The system RAM usage spiked and then fell back down to something that was a little bit higher than the baseline. All indications are that matlab allocated an entirely new array to append. Interestingly, creating an array with `zeros` did not use any RAM. Matlab seems to have some kind of internal optimization to delay requesting memory for zero-initialized arrays. Now, this test doesn't necessarily mean the `realloc` method I've explored above will work better. You had to expect Matlab to have this behavior, because there's no way Matlab can always be able to extend a contiguous block of memory. But that's also true for `realloc`. Except, I trust the kernel (which implements `realloc`) to do the clever thing and let virtual memory take care of the whole thing - like /u/jkool702 pointed out, the kernel is very good at screwing around with virtual memory - **much** more than I trust Matlab to do that. And it looks like the [Linux kernel implements large `realloc` calls with virtual memory remapping](http://blog.httrack.com/blog/2014/04/05/a-story-of-realloc-and-laziness/), indeed. You would quite reasonably point out that Matlab can invoke this behavior if it simply calls `realloc`, to which I return to my thesis: I don't trust Matlab to do the smart thing.
I will definitely take a look!! &amp;#x200B; Thank you very much!
&gt; It is extremely helpful to see someone's code who actually has an idea of what they are doing lol. In particular having an example of when to call memory freeing functions is helpful, since this still gives me some trouble. Sometimes I feel like I know what I'm doing. I feel I should point out that I usually code C++ (and even in that I'm far from an expert) which gives me lots of ways to avoid worrying about memory management and could easily have a mistake in this code. &gt; having `A` and `C` as seperate arrays that point to the same data This is a very old-timey Fortran-esque type of optimization. People used to do this shit *all the time* even with tiny matrix operations (think 10x10 matrices) with extreme reuse in the middle of iterative algorithms. Very confusing when the meaning of a variable changes depending on what phase of the algorithm you're in! This brings up an interesting point about the code actually. Fortran will (in general) generate faster code for doing this sort of thing because it assumes by default that the two pointers `A` and `C` never point to the same memory, whereas C will not make this assumption unless you tell it to with [`restrict`](https://en.cppreference.com/w/c/language/restrict). Even though they *do* point to the same chunk of memory, I think you'd be OK using `restrict` here because you only every *read* the memory once (through `A`) and then you write to it with `C`. If you needed to read it shortly after assignment the compiler would potentially have optimized the read away and just use an existing register for the value. That said, since you *don't* read after writing to the memory, I doubt `restrict` will gain you anything at all. &gt; setting `plhs[0]` as a pointer that also points to `prhs[0]` with way I allocated the output would cause MATLAB to crash if the original input variable was altered in MATLAB. I would have thought attempting to access the *output* array would cause a crash. This must have something to do with when arrays are copied upon entering/exiting a mex function. Stackoverflow has some discussion on []`mxArray` memory management](https://stackoverflow.com/questions/19813718/mex-files-how-to-return-an-already-allocated-matlab-array) in this situation. &gt; technically what I did would use a bit less memory on some iterations Yeah, you'd linearly ramp from using the amount of memory it takes to store A to using the amount of memory it takes to store C. The method I used just uses the amount of memory it takes to store whichever is larger the entire time. &gt; One quick question on the code Line 20 should be dimsC[3] (3-element array). Line 21 should be dimsC[2] for the last assignment (3rd element). The code is definitely not polished to that level, probably lots of similar bugs like this. In particular I'd be suspicious of my axes selections for the blas function calls. If something looks wrong, it's probably me.
Hey, Idiot\_\_Engineer, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Bad bot! You should learn to differentiate quotes from the main body.
Honestly we haven't, he just made a very brief lecture slide about discretization. I'll probably just ask my classmates what they think as they're in the same boat as me and I don't want you to waste hours just for a few measly upvotes. Thank you so much for trying to help though, if I get it I'll let you know.
Gotcha, then you shouldn't have to worry about that stuff then, most likely he won't care about the small errors introduced by a more direct method. Disregard the can of worms that is grid metrics, for your mental health! Hahahaha! Keep me updated on your progress, as I'm finding this problem pretty interesting. There are many nontrivial ways of solving it that I've been reading about online, and numerical integration is one. If you'd like to send me your data somehow, I'd love to try my own hand at it, though I likely won't share my actual scripts since that would be cheating. One thing that you will definitely need to do as part of any solution procedure is to set psi equal to zero along the boundary shared by the airfoil, as this would be one streamline. Once that's set, the rest of the streamlines should be uniquely defined by relation to it.
Rand will give you a number between 0-1, so 1/rand will give you a number greater than 1. Floor will round this down to the nearest integer. Finally, rand(a,b) will give you an array of random numbers (0-1) with *a* rows and *b* columns. So the output will be a row vector (since *a* = 1) with a variable number of columns (since *b* = floor(1/rand)).
&gt; How about finding a better way to reconstitute the cell array as an ND array, The problem with this is that literally any way I can think of to reconstitute the array (in MATLAB, not using MEX) results in an extra copy of the data being saved in memory, since MATLAB will always allocate a new set of memory addresses for the reconstituted ND array (rather than keeping the data in place and stitching them together).
Petition to get a native dark theme please
&gt; Fortran will (in general) generate faster code for doing this sort of thing because it assumes by default that the two pointers `A` and `C` never point to the same memory, whereas `C` will not make this assumption unless you tell it to with restrict I didnt know this...interesting. Ill have to remember `restrict` and play around with it. &gt; I would have thought attempting to access the output array would cause a crash. This must have something to do with when arrays are copied upon entering/exiting a mex function. Stackoverflow has some discussion on mxArray memory management in this situation. Thanks for the link. That (in particular the bits about shared data and setting the reference counter) looks like it might answer [this](https://www.reddit.com/r/matlab/comments/97ehk7/question_about_memory_management_in_mex_functions/) question I posted about avoiding deep copying the output of a mex function. (funnily enough, the problem in the question in the post linked above seemed to be that, when you assign a variable in MEX by passing a pointer instead of deep copying, MATLAB doesnt implement copy-on-write like it does if you had set `A = B;` in a standard MATLAB session (or, perhgaps, implements copy-on-write incorrectly and in a way that causes memory corruption). Side note: when looking through links sdtemming from that stack enchange discussion, I came across [this](https://www.mathworks.com/matlabcentral/answers/79046-mex-api-wish-list) rather fantastic post about undocumented MEX api's by James Tursa. If you havent already seen it it is imo worth looking over. &gt; Yeah, you'd linearly ramp from using the amount of memory it takes to store A to using the amount of memory it takes to store C. The method I used just uses the amount of memory it takes to store whichever is larger the entire time. Yeah, exactly. Though, this reduced memory usage doesnt seem to really give any benefit unless you require using swap as active memory when dealing with A or C (whichever is larger). In this case I could see it helping, though in this case I probably have bigger problems and would proablly start manually loading/saing data to disk to avoid needing the entire array in memory. 99% of the time Id guess your way is probably faster.
&gt; The system RAM usage spiked and then fell back down to something that was a little bit higher than the baseline. This is the behavior I see as well &gt; Interestingly, creating an array with zeros did not use any RAM. Matlab seems to have some kind of internal optimization to delay requesting memory for zero-initialized arrays. Arrays created using `zeros` basically follow the same 'copy-on-write' protocol that an array created using `A = B;` would use. i.e., x = zeros(arrayDims); % memory is not allocated for the array x(1) = x(1) + 1 - 1; % The entire array gets allocated in memory, even though it is still all 0's.
hurts my eyes at night. f
I believe [MATLAB Compiler](https://www.mathworks.com/products/compiler.html) will allow this, though I dont personally have any firsthand experience using it.
I totally just read dank memes that include toolbars and wanted to share that with everybody.
Remindme! 5 days
I will be messaging you on [**2018-09-08 06:16:46 UTC**](http://www.wolframalpha.com/input/?i=2018-09-08 06:16:46 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/matlab/comments/9chlxe/dark_themes_that_include_toolbars_etc/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/matlab/comments/9chlxe/dark_themes_that_include_toolbars_etc/]%0A%0ARemindMe! 5 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
&gt; The main problem seems to be MATLAB's policy of storing arrays in contiguous blocks of memory This is not a Matlab feature, this is what arrays, as a data structure, are. You could store the same data in disparate locations, but that wouldn't really be an array. This is actually really disappointing, since all Matlab has to do is call `realloc` when you resize an array instead of explicitly creating a new array. However, I think if you look at the detailed semantics of the language, you're really just telling Matlab to assign a different, larger, array to the same variable name, and the old array doesn't get cleaned up until after the assignment.
&gt;% determine average signal amplitude using std signalShift = 3\*mean(\[std(Channel\_1\_Data(:)),std(Channel\_2\_Data(:)),std(Channel\_3\_Data(:)),std(Channel\_4\_Data(:)),std(Channel\_5\_Data(:)),std(Channel\_6\_Data(:)); ff=figure; hold on for nn=1:6 eval(\['plot(ff,Channel\_',num2str(nn,'%i'),'\_Data - mean(Channel\_',num2str(nn),'\_Data(:)) + ',num2str(nn,'%i'),'\*signalShift)'\]) end Appreciate the response. I am getting an error on '=' for the ff=figure; Also at 'for' . Could that be related to my data type?
We've got a workstation with an AMD Ryzen threadripper, but we don't run Matlab on it. If you have any questions I'll try to answer, but I can't really provide any comparison with Intel
Yeah, I think you're right, unless you find a way to make it be the exact same array. I suppose the only thing left is to do it in mex, and allocate space for the new range of C on each iteration, and then de-allocate the "used" range of A... I'm not positive if that's even the best way, I'm no C expert.
Also, [google is your friend](https://www.google.nl/search?q=matlab+plot+a+circle&amp;oq=matlab+plot+a+circle&amp;aqs=chrome..69i57j69i60j0l4.3314j0j7&amp;sourceid=chrome&amp;ie=UTF-8)
I suppose under the hood they could have hashed different sections of the arrays, but still called them “arrays”. I agree it seems disappointing however
A lot of the built-in functions in MATLAB make use of performance libraries, the most significant of which is the BLAS. So, the real question is how well Intel MKL performs on the AMD processor in question. I bet that question can be googled.
Keep in mind that some toolboxes aren't optimized for using multiple CPU threads. In that case an overclocked 4-core CPU may perform better than the latest multi-core CPU. 
Fval goes up, but Feasibility (how much the constraints are violated) goes down. Once Feasibility reaches 0 Fval stops increasing.
The paths being planned are outlined using a special type of spline (not sure how much detail I'm allowed to go into for this which is why I'm holding back some info). The input values are control points for the curves. The initial guess is "reasonably good" in the aspect that it is the minimum of the objective function but it definitely does not meet the constraints. &amp;#x200B; In this first test, I have two vehicles in a square. Let's call them V1 and V2. V1 starts in the bottom left hand corner and V2 starts in the bottom right hand corner. The goal is to have V1 end in the top RIGHT hand corner and V2 end in the top LEFT hand corner. Both vehicles should drive at the same time and same speed. The nonlinear constraints supplied are there to ensure that the two vehicles do not collide. The initial guess is a straight line from the initial position to the final position. This would minimize the jerk for the trajectory but it would also result in a collision. &amp;#x200B; I was thinking about using that method you mentioned about holding all but 2 or 3 variables constant. Unfortunately this means I can only look at one vehicle at a time, but that may be sufficient so I will try that. &amp;#x200B; Could you elaborate on where the feasibility value comes from or point me in the direction of a source to study? &amp;#x200B; Thanks for the tip about the objective value being lower than epsilon. I will verify that I am not running into that situation. &amp;#x200B; Thank you very much for your insight!
Thanks, I'll try some different initial guesses to see if that will give me a zero feasibility initially. 
Yes, the input is a matrix of 4038 x24 so the expected output should just be a normalised set of values for each data point in a matrix, so essentially a vector of the same size. Would you know how can I change the code for the output to be of the same size?
Maybe you can use a global search so you don't have to worry much about your startingpoint.
I'm happy to help. I'll put some code up should work for you. But I encourage you to try and actually understand what is going on, and ask question about things you don't understand. function output = Roller1(data) chunksize = 250; for start_idx = 1:chunksize:size(data,1) end_idx = min( [(start_idx + chunksize -1), size(data,1)] ); idx = start_idx:end_idx; output(idx,:) = normalize( data(idx,:), 2 ); end end Notice a few things here: The looping variable `start_idx` is only 17 values (1,251,501,...4001), and is the starting index of each of the chunks. The use of `min` in the definition of `end_idx` is because if you try to access the indices 4001,4002,...4250 in a vector that is only 4038 entries long, you'll get an error, so I ensure that `end_idx` is not larger than 4038. Rather than have a second loop to deal with each of the 24 columns individually, I simply use the option DIM input to `normalize`. And finally, I'm storing the output from normalize across a number of indices of my `output` variable rather than just a single one, so I don't get the size mismatch you had at the beginning. &amp;#x200B; I think that this code should accomplish what you described above, but I think you should stop and re-read the link that you sent me ([https://www.mathworks.com/help/econ/rolling-window-estimation-of-state-space-models.html](https://www.mathworks.com/help/econ/rolling-window-estimation-of-state-space-models.html)). I think it's important to note here that what you described and what I've implemented is normalizing the data in discrete windows. But I don't think that they would be described as *Rolling Windows*. Look at the graphic included in the link: for it to be a rolling window, I think that the indices overlap, so rather than 1,2,...250, and 251,252,...500, you actually want 1,2,...250, and then 2,3,....251, etc. This means that instead of having a total of 17 different windows, you'll actually have 4037. For each of these windows you can still calculate a single standard deviation and mean (i.e. a moving average), so you can do a normalization over those windows in some capacity... but then the `normalize` function won't really work. In fact, your original code for `std` was closer to implementing a rolling window (though there were some mistakes so that didn't actually work out). &amp;#x200B; &amp;#x200B;
I read through them and it seems like it will work but I think we're supposed to stick to more basic functions like for-loops for this matrix.
Thank you, I just sent you a DM with some more details.
I think a good starting guess would have one vehicle go straight from corner to corner while the second one starts by moving towards the first vehicle's starting corner and then proceeds to its destination corner. 
You could just have your inputs at x and height and then the next line load = 5*x
Thanks for your help. That’s the page I used to set it up. But at present all I can get it to do is return the data at a slice in time when I request it. What I am trying to achieve is, once the connection is set up (which it now is, thanks to that link you highlighted) is a live display of the sensor data that continuously updates as the sensor data from the phone changes. For example, I would like the accelerometer sensors displayed on (pc) screen and when I drop the phone a graph/chart to clearly show this in real time. Thanks for your help again!
You haven’t defined x. Just before you run your function, define x. Like x = 0:0.1:10;
It sounds like the data is there, but you will need to query the object each time you want data. If you type *disp(m)* a few times, do the values update? If the object is updating, then you may need to create a loop where you query the object and then plot it. Something like this: for x=1:100; accel = m.CurrentValue.Acceleration; % I’m not sure if this is the exact syntax disp(accel) pause(0.1); end
After playing around with initial guesses, I think you are correct about trying that. The best results have been similar to that type of trajectory. Thanks!
The goal is to have this algorithm run in real time. I am not intimately familiar with optimizations yet, but from what I've read, a global search would take a long time to accomplish.
Yes that's true because you have to check diffrent startpoints.
S, a, v will be 1d arrays (i.e. with a single row, or single column). Youll then plot s, a, v versus time giving you a 2d plot. It's hard to know what you're stuck on without showing what you've already done!
This is all i have done hah. basically nothing. Just some formulas. % gravitational constant a=-9.81; % time vector t=[0:0.1:100]; v=u+a*t; s=1/2*(u+v)*t; s=u*t+1/2*a*t^2; s=v*t-1/2*a*t^2; v^2=u^2+2*a*s; 
I don't know how to get that formula
You'll just need to put the results of each equation into a vector, and return that from the function. Additionally, you'll need to redefine your second order equation as a system of first order equations. Do you know how to do those two things?
It depends on what you want to use MatLAB for. MatLAB Academy have more courses depending on your field of interest, for example computational mathematics or finance applications. What do you plan to use it for?
Mostly for mathematical stuff
If you have a handle on all the basics, the best way is really to do the mathematics by hand, write pseudocode, and then try to create programs that solve the same equations. Experimentation is a winner. Use the help documentation a lot, and ask questions when you are stuck, for example on this forum. 
I understand how to redefine the second order as 2 first order equations however I am unsure what you mean by putting the results of equations into vectors
Well, shoot, who would have thought of using it for that?
What I posted didnt close a set of brackets and parenthesis (i didnt actually run the code since i dont have the data...sorry bout that). Use this line instead (I think the rest of the code is OK as is) signalShift = 3*mean([std(Channel_1_Data(:)),std(Channel_2_Data(:)),std(Channel_3_Data(:)),std(Channel_4_Data(:)),std(Channel_5_Data(:)),std(Channel_6_Data(:))]); 
&gt; So, I expect the behavior y'all observed is general at all array sizes and will cause a crash if A occupies &gt;50% of the available RAM. Part of the problem is actually that this doesnt cause a crash. There are 2 things that will cause MATLAB to throw a memory-related error (or perhaps crash, though it *should* throw an error but keep running): 1. Having a single variable go over the maximum array size limit set in the settings 2. Having the total sum of all variables exceed the maximum system *vurtual* memory. I.e., The amount of RAM swap/pagefile space. There is no way (from within MATLAB, ignoring the possibilities of using system calls within MATLAB to implement this outside of MATLAB) to prevent MATLAB from going into swap space and potentially bringing the *entire* system to a grinding hault. (PS, the best way around this ive found is to (on linux) use control groups to limit matlabs physical memory usage to, say, 80-900% of available RAM, and not limit swap usage. This allows matlab to dip into swap and solve large problems that wont fit in memory at every single function call, while leaving 10-20% of the system RAM free for other processes to use and allowing the system to keep running normally). &gt; If you can bound the maximum size of B in your code, then you can initialize A as the maximum possible output size. I know what sizes `A` and `C` will be (well, the code figures it out automatically prior to the loop), but there are a few complications in the code that make doing this difficult (at least without hitting the same "double memory" issue that we are trying to solve) A workanble solution seems to be to resize/reallocate the array using `mxRealloc`, which should avoidf the double memory issue, but I havent had time to implement it and try it yet.
The function needs to return an array with one row for each equation you are solving. See the "Solving Nonstiff Equation" section in the documentation: https://www.mathworks.com/help/matlab/ref/ode45.html In your case, it sounds like you want to replace f(U) with different functions one at a time. If so, you'll just need two rows in the vector, one for each first-order equation. Normally you would need to encapsulate this in a function, but if you would like to include it directly in your script, you can use [anonymous functions](https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html). It would look something like: % Function that calculates vector [d(X)/dt; d^2(X)/dt^2] dxdt = @(t,x,E,U) [x(2); -x(1)-E*U^3]; % Integrate function using ode45 [t,x] = ode45(@(t,x) dxdt(t,x,E,U), tspan, x0); Where E, U, tspan, and x0 are previously defined appropriately for your problem. x0 being a vector containing the values of [X; d(X)/dt] at t=0. It's also possible to define U as a function of time, and/or as a function of X. Does that make sense?
You are likely missing a library that was linked against the MEX Function. 
I would highly reccomend against the AMD in this specific case (though not necessairly in general) for the following reasons: 1. Most of matlab seems to be tuned to run on intel hardware (e.g., as /u/trialofmiles mentions, MATLAB's BLAS implementation is Intel MKL). 2. A fair bit of MATLAB is still single threaded, and some single threaded processes (e.g., `fread` and `fwrite`) just dont have good parallelizable alternatives. The generally faster clock speed will help you a bit here. 3. If your codes utalize high-performance AVX (e.g., BLAS/LAPack operations), Intel's AVX units are much stronger, especially on skylake xeons (and skylake-x). Intel has a 2x advantage with AVX2+FMA, and a ~3.5x advantage for AVX512+FMA (depending on how good your cooling is, which determines how much the chip will downclock for AVX512) 4. This is the main one. MATLAB is not NUMA aware. This will cripple high-performance parallel function (e.g., BLAS) which expect uniform memory access times. This is especially true with the new 32-core threadrippers, as 2 out of the 4 zeppelin 8-core groupings dont have **any** direct memory access. 
&gt; epsilon = At / Ay; This never gets applied, since you overwrite it when you set the 2nd equation for epsilon. Maybe try epsilon = (alpha/2)^(1/beta) * (py/p1)^(1/k) * sqrt(gamma*(1 - (py/p1)^(beta/k))) - At/Ay; [S.py S.p1] = solve(epsilon == 0, At = 6*Ay)
&gt; That’s what I get for trying to write code on 3 hours of sleep. This sounds like me perpetually lol, (and on that note, it probably should be `At == 6*Ay` in the `solve` function call. &gt; And yeah I’m not a fan of 2018a. It’s slow and takes way too long to initialize. If they arent installed, the updates I mentioned in my laast post *might* help with this.
https://en.wikipedia.org/wiki/MATLAB?wprov=sfla1
Sorry sir, but unfortunately, we're not allowed to take any informations regarding MATLAB from wikipedia. Do you have any other sources? 
Wikipedia does.
Yeah but unfortunately we can't take any informations from there. 
I'm sorry to say, but if you can't figure out a workaround for this problem, you might not get very far in CS.
I'll facilitate for you because you are a freshman. Go to the wikipedia page, look at their sources a go to these sources
Nah I'm just looking for extra informations over here~anyway wish me luck yo. (I'm 18 btw) 
Ohh okay then thanks!! Never thought about that before!! 
Any other homework you need done? Chores? Taxes? 
i kinda have an idea, teacher want us to do most of the work ourselves
Have a look at Matlab’s built-in hgtransform class, it might help to explain some of the particulars of rotations in Matlab. You can access the documentation by typing “help hgtransform” into the Command Window. Once you are on that page it should lead you to a few other functions that you may find useful. 
Its the homogeneous form of matrix transform. Top 3x3 is the rotation matrix with zeros on the forth line and the last colum is the center of the frame with a 1 on the forth line.
Coordinate transformations are applied using homogeneous coordinates. 
I don’t want to spoil the homework part of this too much, but I think this help page will be a good place for you to start: https://www.mathworks.com/help/matlab/math/random-integers.html
would you mind explaining rmatrix=zeros(4,4)? plz :s
Wiki also have a good explanation of rotation matrices. The reason it's one dimension larger is to allow for a translation movement by adding a constant value to x or y or both
Did you installed it in a newer version of Fedora? or the same version as before? If it is a different one, look for any major change in kernel, libraries, etc... If not look at the packages that Matlab needs to run. In my opinion, could be when you uninstalled Matlab, maybe some important packages where erased (maybe due to some crash in the graphical interface?). You can check the crash log: **Linux:** On Linux, crash dumps are saved to your home folder. Type "cd \~" to navigate to your home folder. [https://www.mathworks.com/matlabcentral/answers/100816-how-do-i-locate-the-crash-dump-files-generated-by-matlab](https://www.mathworks.com/matlabcentral/answers/100816-how-do-i-locate-the-crash-dump-files-generated-by-matlab) 
First, be sure that `sudo chown yourusername -R ~/.matlab` Does it run with sudo? If those didn't work, run matlab in terminal to see what errors appear and copy them here.
You forgot to include your attempt at a solution.
Thanks, attempted the chown to no work. With sudo I get the activation error since I guess it doesnt look for the activated keys in ~/.matlab. I only run it through terminal, nothing shows up just the ./matlab fro when I run it. Ill try the symlink and moving libstdc++ after class. Thanks 
Same install of fedora. Thats what I'm thinking I'm going to look around and look into that in a bit, thanks!.
Right, got an update for ya. I've successfully calculated the streamfunction at the discrete points, integrating and applying limits as I mentioned before: `for i = 2:lengthy-1` `streamfuncy(i-1,:) = y(i-1,1).*u(i,:) - y(i+1,1).*u(i,:);` `end` I'm now stuck trying to use this to plot the streamlines. I have the velocity components and streamfunction at each position and am trying to use that to plot streamlines. I'm trying to extract the matrix indices of identical streamfunction values, apply these indices to the y and x lists for the coordinates of each point, and plot a line between these points to make a streamline. This would be so easy in Python... But I'm dreadful at Matlab. I've been looking into the 'streamline' function as well, but to no avail. I'm happy to send you the data if you want it.
I just need help with the table and part A.....the other 2 seem easy.
Great! I’ll have another look and PM you the data and what I’ve done so far after this finishes (an hour)
Nobody is going to help you if you don't include some of the work you've done to solve it. We aren't doing your homework for you.
f(1,:) = 0:15; for i=1:15 f(i+1,:) = f(i ,:)+16; g(i) = median(f(i,:)); % also probably not right, you didn't give any instructions here end g(16) = median(f(16,:)); imshow(g) I doubt that's even correct as your 'image' would be a column but that's all you have written. 
I have uninstalled/re-installed Matlab with all the proposed libraries. I have also re-installed Psychtoolbox. No success so far. Do you see anything I am leaving out ?
https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations
Thank you, captain, sir.
I appreciate your response! This is a real world problem that I am working on (first semester of grad school, this will eventually become part of my dissertation so I definitely have a lot to learn). I am fine with not using fmincon, in fact, my advisor and I were thinking about moving this to Python. Do you have any experience with the "minimize" function from the Scipy library? Eventually we will write a custom function but we are trying to get a proof of concept going first. I will check out the Polak-Ribierre formula. Can you recommend any other sources for me to check out for non-linear optimization? Thanks!
Matlab works on a mac. In my experience, nothing extra is needed. Maybe the download you have doesnt include mac versions?
I had no problem with it and I used a macbook. The only thing I would say is be very patient and cautious. You’ll be fine but just know that your MacBook might slow down or something when you are running Matlab. I assume there are other laptops not that powerful. Just that MacBooks aren’t always known for their power. But I want to reiterate that you will be fine. 
Yeah you're fine. I've been using Matlab on a Mac for the last 8 years with no problems. I'm assuming you can download from Mathworks and use the university license. If that is the case then you just download the mac version. The only issue I ran into was using code that was written on Windows where they hard coded file paths because the slashes are different directions. I learned when writing code to use the fullfile function to create paths and then it works cross platform.
Three of my co-workers do full-time Matlab work on Macs. You have nothing to worry about
Definitely runs on a mac. In fact it even lets you create iOS apps 
There is a Matlab version available for Mac. Just go to the Matlab website and look for the instructions.
step 1: google 'matlab zeros' step 2: click on the first link [https://www.mathworks.com/help/matlab/ref/zeros.html](https://www.mathworks.com/help/matlab/ref/zeros.html) step 3: discover that this function creates a 4x4 matrix of zeros, and calls it rmatrix
I don't know how your professor stylizes it, but it should be either Matlab or MATLAB (or MatLab, if you're weird or something) but definitely not MATLab lol.
Just used the MacOS version to write a program for homework. Downloads fine and runs fine.
Thanks mate, this has helped get the ball rolling 
You've not described what happens when the length is over 70. Is it an error message?
Yeah sorry the first 70 convert to time and the rest say NaT(not a time)
Hey brother, I’ve actually done it all now! But I’ll send you the data and my script for your interest, sorry it took so long to get back to you
&gt; I am fine with not using fmincon, in fact, my advisor and I were thinking about moving this to Python. Do you have any experience with the "minimize" function from the Scipy library? I dont, but id imagine the situation is probably about the same as with `fmincon`. It is basically impossible to make a inversion algorithm that works well in every use case, there is no "one size fits all". As such, decent optimization algorithm that is tuned and customized for your specific problem will usually run faster and give better results than any "generalized" optimization algorithm that you will find in packages like MATLAB or SciPy. &gt; I will check out the Polak-Ribierre formula. Check out the [nonlinear conjugate gradient method](https://en.wikipedia.org/wiki/Nonlinear_conjugate_gradient_method). The polak-ribierre bit is just an alternate formula for one of the constants in the method (typically called `beta`). The different formulas for beta are equivilant for quadratic error, but for realistic error distributions some work better than others. I have found Polak-Ribierre w/ automatic direction resets (`max(Beta_PR,0)`) to be good for a wide variety of problems (likely why the wiki article says it is a popular choice). &gt; Can you recommend any other sources for me to check out for non-linear optimization? Personally, I am a strong believer that the best way to learn about a given optimization/inversion method is to code it up yourself. Most of the algorithms are really quite simple at a base level (often times most of the challenging coding comes in the form of making the code run fast and efficiently computing the error function derivatives). Wikipedia is actually a decent resource in terms of giving some idean of what inversion methods exist and a brief overview of what they di (allowing you to further research the ones that look interesting using more academically rigerous sources). The [nonlinear least squares](https://en.wikipedia.org/wiki/Non-linear_least_squares) and [nonlinear programming](https://en.wikipedia.org/wiki/Nonlinear_programming) and links therein are a decent place to start. Here are a few relatively common inversion techniques **Local (gradient-based) inversion**: these basically follow the following workflow: The gradient is computed by constructing a foirward modeling operator (based on the physics of the problem you want to solve) and then using something like finite differences / finite elements or, depending on the problem, using the adjoint (this is an approximation, but much faster than finite difference / finmite element methods). 1. use error function derivative information to compute a search direction that goes in the direction that error decreases 2. Determine a step length to find how far to travel in the search direction. 3. When you find the minimum along the search direction, recompute search direction and repeat (1) and (2) 4. stop when the difference in error between iterations is sufficiently small. The search direction is often computed via one of the following: * steepest descent - this is just `-1*gradient` * conjugate gradient - this uses `-1*gradient` in a transformed domain such that subsequent directions are A-conjugate to each other. The background math is a bit more involved and relies on Krylov subspaces, but can easily be understood in geometric terms. * newtons method: this assumes quadratic error and finds the minimum of the quadratic surface at every iteration using the 1st and 2nd derivitives of the error using the current model (which are the gradient and the hessian). [the math is pretty easy for the 1D case](), and the general case is the same except it uses the `Hessian \ Gradient` instead of `1st derivative \ 2nd derivative`. * quasi-newton methods are the same as newtons method, except they approximate the Hessian (since typically directly computing the hessian is computationally *very* expensive). [BFGS](https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm) is one popular way of doing this. Stepsize can be found using a line search method, simplex-like method (i.e., set min and max possible stepsize, and iteratively reduce the possible range by trying intermediate values), or by using effectively an iterative 1D newtons method (which looks at the error function derivitives along the search direction). I typically use the 1D newtons method (or a varient of it), but there are many way-s to do this. Note: the [Wolfe Conditions](https://en.wikipedia.org/wiki/Wolfe_conditions) mathematically specify the requirements for stepsize that are needed to guarantee convergence. They are in my experience too expensive to compute in practice outside of code testing, but when testing an algorithm its worthwhile to make sure your stepsizes meet these conditions. There are also trust region / feasibility region based methods, which use the error functionm (usually with a quadratic assumption) to compute a "feasible" region where the minimum might lie, and then iteratively refine it. IIRC `fmincon` uses the interior point algoriithm most of the time, which is in this class of optimization methods. **Global Optimization methods**: These are ways that selectively sample the entire possible model space such that you only draw samples where you are likely to have feasible answers (i.e., error is relatively low) * Markov chain monte carlo (MCMC) - this is one definitely worth learning about, and it is the bases of many other global methods (like simulated annealing). the math behind this is quite elegant but too involved toi explain in a post. Basically, it uses the concept of a stationary distribution - if you have a distribution of samples representing some "true" distribution, the stationary distribution is a distribution which, when added to the "true" distribution, does not change the distribution. A standard normal distribution is a good example, as its stationary distribution is also a standard normal distribution, and you can keep adding samples drawn from a standard normal distribution and the result will be a standard normal distribution. The elegance of MCMC is how it is computed: 1. Draw an initial sample 2. draw a new sample from some proposal distributin of your choosing (e.g., a normal distribution centered on the current sample) 3. compare the errors of the new and old sample. If it has lower error accept the new sample. If not, accept the new sample with some probability (this turns out to be `exp(-1*constant*(increase in error))` as long as the proposal distribution is symmetric, meaning that for any 2 point P(a--&gt;b) is the same as P(b--&gt;a)) * simulated annealing is just MCMC where the `constant` terms in `exp(-1*constant*(increase in error)` gets smaller and smaller as you progress, meaning you are less and less likely to accept worse samples. * Bayesian methods: these utalize Bayes rule to incorporate prior information, and basically are brute force methods that find points that are statistically most likely, but where the integrations needed to get an exact answer are implemented using MCMC. * neural nets: these are also basically brute force staticstics, but use different methods than traditional Bayesian approaches *other: a few others are Genetic algorithms, particle swarm optimization, quantum annealing (a variant of simulated annealing that also uses gradient info), etc. &gt; Eventually we will write a custom function but we are trying to get a proof of concept going first. Others may disagree, but IMO you are doing this in the wrong order - for inverse problems, I typically view the proof of concept as proving a particular inversion methodology is viable using simple synthetic data, where you know the correct answer, and then scaling up the method to apply it to the real data. If you mean this in terms of experimenting with different approaches to see which ones might work well then that is fine, but otherwise (unless you plan on ultimateloy using a custom-coded version of the same approach, e.g. a custom interior point algorithm for `fmincon`) then Im not sure how much utility there is in this. &gt; first semester of grad school As someone starting their 6th (and hopefully last) year of grad school: I wish you the best of luck. It sucks sometimes, but it is worthwhile imo. Out of curiosity what are you studying? (My focus is on computational geophysics / optimization+inversion / hydrocarbon exploration / seismic data processing / seismic wave propogation)
Yeah after some searching I found out that is where it switches over to discernible military time. I.E 12:59 to 13:00.
I've done quite a lot for fun, but never have I ever considered adding it to my resume. I've done quite a lot of hacckerrank challenges (like CODY's but for any programming language) and I did them in C, they helped me immensely for a coding interview I had. It wasn't a single topic in particular, but the challenges just helped keep a sharp mind on how to do various things in the programming language of choice. 
Cheers mate! 👊
&gt; However, I can't figure out how to import the entirety of 10 files from a folder at once. filenames=dir('*.txt') filenames=filenames.names; data=cell(1,numel(filenames); for nn=1:numel(filenames) data{nn} = someloadingfunction(filenames{nn}; end 
I just realized you can eliminate the `memmove` of `A` if you iterate backwards over the pages (`for (int nn = NN; nn &gt;= 0; nn--)`, make sure you use a **signed** loop counter). You should only do this if `numel(C) &gt;= numel(A)` though, otherwise you have to do an equivalent `memmove` to put the resulting `C` at the beginning of the space that you `realloc` after the loop.
You could use regular expressions to forcibly convert to standard time. Im pretty sure the following will work: x = ['0:00 00:33 1:21 03:44 7:00 09:00 11:11 12:59 13:00 17:03 21:33 22:00 23:59'] % example list of military times for testing x = regexprep(x,'(([0 ]|^)[0-9]\:[0-5][0-9]|1[0-1]\:[0-5][0-9])','$1am') % add am to times 0:00 - 11:59 x = regexprep(x,'(1[2-9]\:[0-5][0-9]|2[0-3]\:[0-5][0-9])','$1pm') % add pm to 12:00-23:59 x = regexprep(x,'(0| |^)0\:([0-5][0-9]am ?)','12\:$2') % convert 0:__am to 12:__am x = regexprep(x,'(1[3-9]|2[0-3])\:([0-5][0-9]pm)','${num2str(str2num($1)-12)}\:$2') % subtract 12 from hours 13:__ to 23:__ x = regexprep(x,'0([1-9]\:[0-5][0-9](am|pm))','$1') % standardize times by removing leading 0 from times like 09:21
Awesome, I’ll check out hacckerrank for cpp
There is a workaround for this, if you *really* want to use vscode. You can install the linux version of matlab in ubuntu from the windows 10 store. There were several issues getting it to work, but I was eventually able to completely install it. From there, you can modify the extension from OP to convert windows paths to the ubuntu paths, then voila! You'd need to use xming for the installer and for plots/simulink/appdesigner. Most issues with the installation process are well documented on the internet, so it just take persistence
Wow thank you so much for the mountain of awesome information. I will probably be referring to this post for weeks! I don't think I have even got a strong enough background to ask any more questions. Looks like there is a ton of studying ahead! You mentioned neural nets and genetic algorithms. I hardly know anything about them other than writing a super simple 3 neuron net a while back for fun but we do plan on using them in the future. Specifically, they will be used to pick good initial guesses so that the optimization algorithms do not have to iterate as much. You mentioned that it may be a good idea to focus on writing the optimization algorithm first using test data rather than using a generic approach on real data. I agree with what you are saying but I think that my problem is different. Your view seems to be more on the data analytics side whereas what I am doing is focusing more on getting a robot to move. Please correct me if I am wrong though! The largest problem we are likely to encounter is the amount of time it takes to optimize the function since the goal is to use this system in a real time controller. Congratulations on nearly finishing your degree! I am pursuing a degree in Mechanical Engineering with a focus on controls and robotics. My advisor and I are specifically working on optimal trajectory generation using Bezier curves. Thanks!
This should help. I was just looking for some general guidance and if it would technically work. Thank you!
&gt; I don't think I have even got a strong enough background to ask any more questions. Looks like there is a ton of studying ahead! Ive Ta's the Inverse Theory class in my department for the past few years (my advisor teaches it), and this is the better part of a full semester's worth of stuff (a whole semester worth if you include the background linear inversion that most of the nonlinear methods are based on). Dont feel you need to rush to learn it all lol. just starting out you have lots of time. &gt; You mentioned neural nets and genetic algorithms. I hardly know anything about them other than writing a super simple 3 neuron net a while back for fun but we do plan on using them in the future. Specifically, they will be used to pick good initial guesses so that the optimization algorithms do not have to iterate as much. In a general sense, I think that there is a lot of potential for using a global method to get an initial model (or perhaps a few initial models) to be used in a local/gradient-based optimization. IF you have enough data to make neural nets work and, in particular, if you have data that covers all (of most of) the situations you want the robot to adapt to in real time using the inversion approach, I think that using neural nets could be very good. In particular, neural nets are *very* quick to run after they have been trained, meaning you can (and should) train it on the most powerful computer you have access to and then having the robot apply the neural net would be very fast (which sounds like it would help with your expected "real time compute" problems). The downside is that neural nets tend to require a lot of data to train, and tend to only perform well in situations that their training data covered (i.e., if it encounters a situation that it didnt see in the training data, it could give a very wrong result). I havent used genetic algorithms much, but (for problems in my field anyways) they tend to run slowly and not be much/any better than some of the other global methods. VFSA (*very fast* simulated annealing) Ive found to work well and be reasonably fast. Though, as I mentioned previously, there is no "one size fits all", and I dont really have much intuition about what will and wont work well in robotics applications. &gt; You mentioned that it may be a good idea to focus on writing the optimization algorithm first using test data rather than using a generic approach on real data. I agree with what you are saying but I think that my problem is different. Your view seems to be more on the data analytics side whereas what I am doing is focusing more on getting a robot to move. Id probably classify this as "trtying to figure out what methods do and dont work", which there definitely is utility in trying out new methods that are easy to apply and dont require writing a full-on tuned and optimized problem-specific optimization algorithm. That said, I wouldnt spend months trying to get, say `fmincon`, to work well and give really good results only to then write a custom inversion code that uses a completely different methodology. &gt; The largest problem we are likely to encounter is the amount of time it takes to optimize the function since the goal is to use this system in a real time controller. If it were me (and keeping in mind that I know next to nothing about your specific problem), I would probably try using a trained neural net to get a initial guess at a solution and then using nonlinear conjugate gradient (preferably with the derivatives computed using an adjoint state approach, if possible). i like CG since it tends to converge faster then steepest descent with minimal additional cost, and tends to be (much) cheaper than newton/quasi newton methods (and usually works better too, unless error is actually close to quadratic) &gt; Congratulations on nearly finishing your degree! I feel like it not nearly as "almost finished" as id like at this point lol, but nevertheless thanks &gt; My advisor and I are specifically working on optimal trajectory generation using Bezier curves. So I have no idea if this will be of any use, but in geophysics we often compute minimum traveltime paths (of acoustic waves traveling in a variable-velocity medium) by solving the Eikonel equation (e.g., ray tracing) and/or using concepts like "stationary phase". In case you arent familiar, stationary phase basically says that if you take the superposition of all possible paths and add them all together, you are left with the actual path. This path is "stationary" in the dense that the derivative of traveltime wrt the path is 0, making it a minimum (usually) or maximum (under very unusual circumstances) traveltime path. I wouldnt be surprised if you could modify some of these to solve your forward problem (depending on what factors go into determining how optimal a path is). If you get stuck, it might be worth looking into. Or it might be a complete waste of time...50/50 shot lol.
By asking it on the Matlab subreddit instead of doing my own homework.
Just concatenate the strings and the string variable(s) together: [cids, cgs] = readClusterGroupsCSV(['E:\HDF5\' subject_id '\result\cluster_group.tsv']); You can either use the square brackets to concatenate the strings (since the strings are character arrays) or you can use explicit functions like [strcat](https://www.mathworks.com/help/matlab/ref/strcat.html). 
No problem. Here's an alternate approach (and one that I would personally use): filename = fullfile('E:\HDF5', subject_id, 'result\cluster_group.tsv'); [cids, cgs] = readClusterGroupsCSV(filename); I think this is a better approach because: 1) [fullfile](https://www.mathworks.com/help/matlab/ref/fullfile.html) is specifically made for the problem you're trying to solve; 2) generating the filepath string prior to calling the function results in cleaner and easier to read code; and 3) it makes it easier to do error checking (like checking to make sure the file exists) before calling the read function. However, my previous answer is still important for you to think about since it fundamental to understanding how to generate and manipulate strings in general. 
To add to this, if you are doing the same thing for each subject then you can create a cell array of subject id's and loop through them. 
/r/titlegore
Another option could be something along the lines of: file_name = sprintf('E:\HDF5\%s\result\cluster_group.tsv', subject_id) [cids, cgs] = readClusterGroupsCSV(file_name) Its similar to the other string concat post, but just a matter of personal choice. 
Not a matlab native, but it seems that x, y and z dimensions are 256 rows by 1 column, while tmp is 1 row by 256 columns
Seems pretty clear from the error message? clr, the 5th parameter, has 3 elements (b, g, m), not 265 as required. 
Thank you for your help!
Hey, sorry not to have responded - must have missed it. As I was under time constraints I essentially coded an escape key (x) into the code whenever there was a pause between experiment trials. Horrible fix but means that the script can be exited at least. Couldn't figure out a way to keep scanning for an escape key throughout the whole thing!
I'd recommend converting them to a timeseries object and using the interpolate function.
If I understand your question, you have two arrays: t for time and y for position, where each entry in t corresponds to the entry in y. Your problem is that your t array has a non-uniform increment. If that is correct, then you can just interpolate to get a time series with uniform time increments. For example, let’s say that we define a new time vector t2=linspace(min(t),max(t),length(t)); This will be an array with the same time span and length as the original time array t, but t2 has a uniform time increment. Next, you want to interpolate to get the encoder position at each time in t2. To do this, you can use y2=interp1(t,y,t2);
You called your script linprog so it is called instead of the existing MATLAB function.
Declare it as a function at its first line. ie function x=lingprog(parameters) ... code
I figured the some of the numbers maybe outside of integer range, so I used double() function to try to correct them. However, it doesn't work. 
It looks like matlab is expecting inequality constraints (A,b) and equality constraints (Aeq,beq). I’m assuming that you are using the inequality constraints, so you need to include empty arrays for the equality constraints
Also, you shouldn’t need the double() conversions
Instead of doing all that is described in the other comment, you can also replace hh in your code with HH. Lower case is for 12h format, upper case for normal 24h format.
Jesus christ 
A couple additional things you might find useful `num2str`: this, as the name suggests, turns a number into a string. If some part of the filename is a number computer by the code this is very useful. e.g.: subjectID=round(1000*rand); filenameRoot='E:\HDF5\' filenameTail='\somefolder\someotherfolder\somefile'; filename=[filenameRoot,num2str(subjectID),filenameTail]; Also, if you want things to be portable with linux and mac, you can do something like slsh = char(ispc*'\' + ~ispc*'/'); then, everywhere you want to add a slash, instead of [str1,'\',str2] do [str1,slsh,str2]
Yes, it's possible. But unfortunately it's not very straightforward. It's been a while since I have last used it, so I can't remember many of the details. You'll have to look into callback functions, which are usually used in GUI building. If you look for axes callbacks I think you might find what you need. Another way of doing it, even if it's not as elegant and would be a little cluncky to use is to use the ginput function. With that, you would select two points in your plot, zoom in between them and apply your function. It worked, but using callbacks will get you nicer results.
I've been looking a lot on the mathworks websitd without a proper answer. Thanks for telling me about ginput ! I looked it up and it seems to be what would make this work ! 
There's a function to get the x-axis limits - get('gca', 'xlim') - , which returns the value at the left and right side, which are either the index number, or you'll have to find the index of the closest value to them, and then you can run an algorithm on your data\[left:right\]
Can you give me an example? Honestly Matlab is not that hard. I usually follow Mathworks tutorial when dealing with an unknown toolbox
MATLAB is so large and multidimensional program that it should not be attempted to learn in a single go rather it is a gradual process. What you should do is : 1-Start working, 2-Use matworks documentations extensively, 3-when you are stuck ask questions on this sub or on MATLAB Answers, these communities are very helpful.
is that a matlab error, or the web program you're using?
The web program. Universities VPN is currently not working so there is no way for me to access Matlab from my home other than web.
youtube
Look for similar examples of your assignments on Matlab Central.
I think you need something like this. It implements homogeneous transformations and pre mutliplies successive transformations. Note, I have not tested this code. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Google matlab onramp. Two hour free tutorial
You've pretty much already said what the most likely cause is. Round that stuff and you'll be golden. 
This is not an issue with your setup. Rounding and truncation errors occur in floating point calculations. It's always best to minimize the distance to your number instead of testing for equality. Here are some links for you to study: * [Why does 1 - 2/3 - 1/3 not equal zero?](https://www.mathworks.com/matlabcentral/answers/69-why-does-1-2-3-1-3-not-equal-zero) * [What Every Computer Scientist Should Know About Floating-Point Arithmetic](https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html) * [Cleve's Corner - Floating points - IEEE Standard unifies arithmetic model](https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/company/newsletters/news_notes/pdf/Fall96Cleve.pdf)
What do you mean by round it? I would have thought it was rounded by its definition, i don't actually understand floating point that well Or do you mean by asking matlab to find any value between .4099 and .4101 instead of 0.41?
To add to the pile, check the sidebar for a handful of great links --&gt; Look for where it says "Places to learn Matlab". If you don't have the fundamentals for the class or the time to learn them, it might not be the class for you! Maybe it's not too late in the semester to swap (even if you have to get permission from the new professor)! Good luck to you.
I understand the first link but that's about all we were taught Not sure what you mean by minimizing distance to number but thanks for info
ohhh ok gothcha! yeah i will do this I thought you meant try to minimize the distance to the number in terms of only trying to find values in the first few index locations of the vector where the floating points are maybe less likely to have lost their accuracy! lol 
I would recommend storing your data in a timetable and using the "synchronize" function to then manipulate it. "synchronize" gives you many options to resample or interpolate your data. https://www.mathworks.com/help/matlab/ref/synchronize.html
What should be 0.41 is maybe actually 0.41000001. I don't fully understand the computer science behind it, I'm sorry. So I mean that if you were to round that number back to 0.41 exactly it would work again as you would expect it to 
To add to the other answers: if you need to test for equality, replace x == val with abs(x-val) &lt;= sqrt(eps(val))
After using surf, you can use the "shading interp" command to hide the grid and make it into a smooth surface.
Since nobody has seemed to mention it yet, the reason it finds 0.45 is because this number is exactly representable as a float so it incurs no rounding error. This will not be true for most numbers and thus you should never perform equality checks on floats as others have pointed out. 
Would you mind going into a little more detail on this? 
I will be messaging you on [**2018-09-12 06:45:52 UTC**](http://www.wolframalpha.com/input/?i=2018-09-12 06:45:52 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/matlab/comments/9etf1j/genetic_algorithm_toolbox/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/matlab/comments/9etf1j/genetic_algorithm_toolbox/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Ah cool I didn't know about that function
It sounds like you're talking about simscape, not simulink. It's probably because having two prismatic joints one after another is redundant and makes your system indeterminant. Why not just use 1 prismatic joint?
Take a look at “Linear fit with both uncertainties in x and in y” on the File Exchange by Julien Browaeys. 
you can export a point cloud of velocities for your meshgrid. In CFX you can export a point cloud and list the patameters you want to export. It has been a while since I have done it so I cannpt remember exactly what to do but is this the kind of thing you are after?
This actually turns out to be a really interesting problem. For example, the slope coefficient that best predicts a new y given a new x, is not the same as the best estimate of the actual proportionality constant between x and y.
I know it as Type 2 regression, but it comes under [Errors-in-variables models](https://en.wikipedia.org/wiki/Errors-in-variables_models). Draper and Smith's Applied Regression Analysis is meant to have a piece on it (page 91). [Here is a function that I've used in the past](https://github.com/sidhenriksen/hm/blob/master/fit_bothsubj2error.m). The lambda argument specifies the ratio of the variances in the two variables (var(x)/var(y), so that when var(y) -&gt; 0, lambda -&gt; infinity). 
No, you are creating the variables "files" and "path" from you user input (uigetfile) When you run that line a file navigator will pop up, you choose the files that you want to process (they do have to be in the same folder), and then it will create the "path" variable with a path to that folder and the "files" variable will be a cell array with the files you chose. If you just type that line in and run it, then grab a couple text files from anywhere you'll see what it's doing. &amp;#x200B;
Great explanation. Thank you!
Thanks for the reply but I resolved it already. I was following a guide for some modelling and they use 2 prismatic joint which is allowed for the 1st Generation simscape.
What do you mean by doc size and doc zeros?
Just type it into the console. 
If you type *doc size* into Matlab command window, it will show you the *doc*ument for the function *size*. You can probably guess what *doc zeros* will do. When you ask questions in this sub, there is an expectation that you have exerted some effort to solve the problem on your own, prior to the post. Otherwise, it will be flooded by students in intro classes that want an easy way to solve their homework. In your case, many of these questions can be answered by looking at the Matlab documentation. Even after years of Matlab, it is likely that a user references the built-in documentation or Mathworks site. For example, if you look at the documentation for [size](https://www.mathworks.com/help/matlab/ref/size.html?searchHighlight=Size&amp;s_tid=doc_srchtitle), you will see that *size(A,1)* will give you the length of the array *A* in the dimension *1* (this equates to number of rows in your example). Once you have answered the basic questions via help browser, you can ask a more concise question about something that isn’t so straightforward. 
Yes! Give me one sec.
Have you tried just using load myFile
Wait, can I get an e-mail address via PM? 
Is there another step I'm missing?
https://www.mathworks.com/help/matlab/ref/struct2cell.html this command will help convert the struct into usable data 
Excellent references. 
Not quite sure what you're asking. You can provide your own arbitrary plotting function to most of the optimization tools in Matlab, so you plot whatever you want. Once the plot exists, you can save it, copy/paste it, or whatever you want. You wouldn't use the "figure" function at all for this, since that creates a new figure and has nothing to do with saving an existing figure. 
These problems could all be solved by writing a custom output function, specifiable in the options structure you pass to fminsearch. The function is called at the start and end of the optimisation and at each iteration. It will give you access to the data at each iteration which you can plot, or save in a global variable which is what I use when I want to plot the convergence after the optimisation. I’m not linking anything but you can find it in the fminsearch help page.
There's no general answer for this. It depends on how the data is stored in those structures, which is entirely up to the person who created the files. You should talk to the person who gave the files to you about their data format. A .mat file is just a container. There's no standard format for the data inside it. It's like a cardboard shipping box. Everybody knows how to open the box, but I can't tell you how to use what's inside the package if I don't know what it is. 
Weird. I've never seen that. Is this not a standard Matlab console? Looks like it might be a linux shell? I wonder if you unintentionally sent some kind of shell commands or formatting characters? 
it is, I've just changed the colour settings to be less strain on my eyes.
Well, can draw text with colors, because you can acces the underlying java stuff. [cprintf](https://nl.mathworks.com/matlabcentral/fileexchange/24093-cprintf-display-formatted-colored-text-in-the-command-window) for instance does that. But that does require some delibirate work. 
Oh neat, I always did that in unix terminals but it never occurred to me to do it on Matlab. 
Is line 87 consistently the only line colored when run run the code multiple times? Or was it a 1-time fluke? Or does it vary which line(s) it outputs colored? If it is consitently line 87, my best guess is that it whjere it hits some kind of terminal buffer memory limit (perhaps forcing the terminal contents in the buffer to be written to disk?) That is 100% just a stab-in-the-dark guess though, I really dont know why this would happen either.
1 time fluke! Went back and checked. Really strange.
im guessing OP means "saving a figure for reuse", not "saving a figure to disk". i.e. something like f1=figure; f2=figure; hold on for nn=1:maxIter % get fevalCur and modelValCur for current iteration of optimization algorithm plot(f1,nn,fevalCur) plot(f2,nn,modelValCur) end 
If you are ok with assuming everything is i.i.d. and all errors are normal then you can implement this pretty simply with [weighted least squares](https://en.wikipedia.org/wiki/Weighted_least_squares). Depending on the problem and on the available information about the error distribution it might (or might not) be a reasonable assumption.
Thanks this helps but it is rather annoying and cumbersome solution 
assuming the "tsp" is the fitness function, it's not actually finding the shortest distance. rather, the fitness function is quantifying the current candidate solution. speaking of.... I've never used the GA toolbox but have made my own GAs in the past. "sol" is the candidate solution that is getting passed into "tsp" to evaluate how it performs. the line: val = -sum(diag(distMatrix(sol(1:numvars),[sol(2:numvars) sol(1)]))); appears to be a vectorized way of calculating the distance for this solution. for example, if sol = [ 2 1 3 5 4], it is probably summing distMatrix(2,1) + distMatrix(1,3) +distMatrix(3,5) +distMatrix(5,4) + distMatrix(4,2). so, the function tsp is simply taking in the solution, evaluating it to value, and returning both. they are probably doing it so that somewhere in the background code they are keeping the solution and its value together. also, you can definitely modify the fitness function, and you should at least put a stop point in it to make sure what I described is accurate. 
For some reason, Matlab doesn't have the `+=` operator. You need to write it out fully.
say you have a column of variables and want 0-45. X = 'column of variables' X(X&gt;0 &amp; X&lt;45) This will return all variables in that range. A = (X&gt;0 &amp; X&lt;45) This will return you a series of 0s and 1s that you can index with if you also wanted. Using this sort of logical indexing should be what you need. for more - https://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/ 
Pretty easy using logical indexing and the all function. Something I just typed up and tested: `test = [randi(10,100,1),randi(90,100,1)]` `idx = all([test(:,1)&lt;3,test(:,2)&lt;45],2)` &amp;#x200B; *idx* will be a logical array that is true if both the first column of test is &lt; 3 and the second column of test is &lt; 5. You can adjust the logic to your liking. You can feed it back into your matrix and verify: `test(idx,:)`
Let's say that your matrix is called "F", the first column is direction (which needs to be between 0 and 45 inclusive) and the second column is speed (which needs to be between 0 and 3 inclusive) I'd do something like: rows = size(F,1); % find out how many rows in your matrix count = 0; % initialise your counter for ii = 1:rows if F(ii,1) &gt;= 0 &amp;&amp; F(ii,1) &lt;= 3 &amp;&amp; F(ii,2) &gt;= 0 &amp;&amp; F(ii,2) &lt;= 45 count = count + 1; end end In that for loop, what we're doing is going through all the rows and checking to see whether the first column has a value between 0 and 3, **and** the second column has a value between 0 and 45. If both are true, "count" is increased by 1. This isn't the most elegant solution, and I'm sure someone else can produce something better, but it should work. 
This is what Matlab code written by a programmer looks like. It is technically correct but terribly inefficient. See thew answer by Huwbacca for a better solution.
Assuming that column 1 is direction and column 2 is speed, we can count it in one line: count = sum((x(:,1) &lt; 45) &amp; (x(:,2) &lt; 3) );
If any of the angles or speeds are negative, this will not meet the condition OP stated. We just need to modify it with conditions for non-negativity and it's a great answer!
purfect thanks!
Great reading, thanks!
So... with zero idea what you're trying to do, why not just write each function with same signature as in your post? Then call them: finalVals = matlabfunc3(A, B, matlabfunc2(A, B, matlabfunc1(A, B, array)))
This is overkill and likely slow. Definitely not the approach you should use with MATLAB. See vectorization and logical indexing, check the solution below by u/tweakingforjesus
I'm kinda curious, have you tried matsim? :)
TBH, not since the first day I saw this. I haven't had a project with Simulink recently. I'll have something coming up in a few weeks though. I plan on using it as the project is specifically meant to create models based on a sensor parameter list and this would be perfect to implement.
You have two options: Anonymous functions or putting multiple functions inside a single .m file. Anonymous functions are generally used for one line operations (which can be a lot in MATLAB). To put multiple functions inside a .m file (all of which will be callabel from within that function), you just declare functions the way you normally would and terminate them with an end. For example: function\[array\] = main\_function(A,B,array) \[array\] = function1(array,A) \[array\] = function2(array,B) end function\[array\] = function1(array,A) do stuff... end function\[array\] = function1(array,A) do stuff... end &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
You can use the find command to obtain the index values. Have a look at help find.
Yes! This is what I was looking for, thank you very much :)
Thanks!
FYI (both for you and for /u/juckeyy): this is dfefinitely the right way to go about doing what OP requested, but you are much better off using `nnz(cond)` rather than `sum(cond)`. `sum` will cast everything to doubles and then compute a general numeric sum, which (for especially large data sets) can actually slow things down quite a bit and potentially cause memory problems. Using `nnz` also has the advantage that it will work if the input is an array with &gt;1 non-singular dimension (whereas `sum` will act over the 1st non-singular dimension iirc)
For?
&gt; I have an Excel file with 25,000 data points. I am trying to use Matlab to average data points in blocks of 20 and then plot them. I am able to get Matlab to import the data but I am having troubles iterating through and averaging only blocks of 20 data points at a time. I can do this manually but I have about 30 files to do this for and I think this will be easier. For work
Without knowing too much about your data and goals, this is what I would start with: &amp;#x200B; `column = 5; %whichever column you're trying to analyze` `block = [];` `currblock = 1;` &amp;#x200B; `for row = 1:20:size(a,1) %start at row 1, jump 20 rows each iteration/block` `block(currblock) = mean(a(row:row+19,column)); take average of current row + 19 (total 20 row avg)` `currblock = currblock + 1;` `end` &amp;#x200B; `figure; plot(block)`
I'm assuming you want a tumbling window(non-overlapping) rather than a sliding window (overlapping) based on your question. Additionally assuming you have a single 25,000x1 vector in Matlab once you load it. &gt; data_windows = reshape(data_points,20,[]); &gt; data_means = mean(data_windows,1); Notes: * The [] means that it will automatically figure out the number of columns needed to make 20 rows out of a length 25,000 vector. The vector length must be divisible by the # of rows or it will throw an error. * The second part of the mean entry will do the average across the vectors. You will then have a vector length (25,000/20) containing the means in non-overlapping windows of 20.
Think of your data as one big vector, like this: X = [x1 x2 x3 x4 x5 ... xn]; Let's say we want to average every five elements. What we'll want is to turn this into a rectangle: X = [x1 x6 x11 xn-4 x2 x7 x12 xn-3 x3 x8 x13 ... xn-2 x4 x9 x14 xn-1 x5 x10 x15 xn]; Once you have your matrix like that, you can see how easily it will be to compute the average of every 5 elements: simply call `mean(X,1)`. Note that your vector X must be of the correct size to be turned into a rectangle--you'll probably have to pad the ends in order to make it such.
For a crystal clear response, here's what's happening: You're creating a vector like this: x = 1:10; What's happening is `1:10`algorithm is making something this: x = [1 1.9999999999999 2.99999999999999 3.99999999999999999 4.0000000001 ... The reason for this is because the computer can't represent floating points to infinite precision, so things get rounded. Note that this is only sometimes the case. When you say "locate the position where x == 3", the computer can't do that; there is no location where x == 3. There are two general ways to fix this: 1. Round `x`: idx = find(round(x,6)==3); 2. Find the element with the minimum distance to your target: [~,idx] = min(x-3);
&gt; We just need to modify it with conditions for non-negativity If you wanted to be really thorough I would do something like this function [angleVar] = wrapAngle(angleVar) %% wraps the angle to an equivilant one between 0-360 degrees. Input and output are in degrees. while any(angleVar &lt; 0 | angleVar &gt;= 360) angleVar(angleVar &lt; 0) = angleVar(angleVar &lt; 0) + 360; angleVar(angleVar &gt;= 360) = angleVar(angleVar &gt;= 360) + 360; end count = nnz(wrapAngle(x(:,1)) &lt; 45 &amp; wrapAngle(x(:,2)) &lt; 3);
It will be in the format x +/- yi. Is this what you mean?
https://www.allaboutcircuits.com/textbook/alternating-current/chpt-2/polar-rectangular-notation/
Yeah. I read the page that u/jckanthem posted. thanks
thanks a lot this explains it
Is there a didference between i and j for the imaginary component?
You may not have seen it, but it has definitely seen you! Think intermediate algebra, trigonometry, or pre-calculus. The complex plane has the real numbers on its horizontal axis, and the imaginary numbers on its vertical axis. If you draw a line segment from the origin to a point in the plane, you can use it to form a right triangle with the real axis; the adjacent and opposite sides of the triangle represent the real and imaginary components, respectively. The angle subtended by the line segment and the real axis, and the hypotenuse of this triangle are the two components you're looking for.
Is there a difference between i and j for the imaginary component
No in Matlab i and j are the same thing. Matlab may automatically convert j to I when displaying an answer. 
Thanks
Context! Generally pure mathematicians refer to the square root of negative one as `i`, while engineers (especially electrical engineers, who like to use `i` for current), use `j`.
I see, thanks again
You're most welcome.
I tend to write my own input checking code rather than using something like inputparser. I havent tried this using a standalone matlab executable, though I imagine it should work decently well, perhaps with some minoir modifications to instruct MATLAB to load data from whatever files you direct it to. There are 2 versions, one for each user input (generalized here as `varName`) being an independent variable, one for all of them being different fields in a structure (called `userOpts` in this example). The main difference is whether you check for existance using `exist` or by looking at the fieldnames of the structure and trying to find a match. % Check input 'varName' and, if needed, set it to its default value of 'varDefaultValue' % In this case, 'varName' must be a numeric scalar and cannot have a value of 'NaN' or 'Inf' % use a structure to contain all user-set options in a single variable if ~any(strcmp(fieldnames(userOpts),'varName')) || isempty(userOpts.varName) || ~isnumeric(userOpts.varName) || all(isnan(userOpts.varName) | isinf(userOpts.varName)) % set 'varName' to default value if it doesnt exist, is empty, is nonnumeric, or entirely composed of NaN's and/or Inf's userOpts.varName = varDefaultValue; else % use input, but filter down to the 1st value that isnt NaN of Inf if numel(userOpts.varName) &gt; 1 warning('''varName'' must be a scalar! Only the 1st valid element in varName will be used.') end userOpts.varName = userOpts.varName(~(isnan(userOpts.varName) | isinf(userOpts.varName))); % remove NaN's and Inf's userOpts.varName = userOpts.varName(1); % keep 1st remaining element end % use standard variables for user-set options if ~exist('varName','var') || isempty(varName) || ~isnumeric(varName) || all(isnan(varName) | isinf(varName)) % set 'varName' to default value if it doesnt exist, is empty, is nonnumeric, or entirelyt composed of NaN's and/or Inf's varName = varDefaultValue; else % use input, but filter down to the 1st value that isnt NaN of Inf if numel(varName) &gt; 1 warning('''varName'' must be a scalar! Only the 1st valid element in varName will be used.') end varName = varName(~(isnan(varName) | isinf(varName))); % remove NaN's and Inf's varName = varName(1); % keep 1st remaining element end
Hey, jkool702, just a quick heads-up: **existance** is actually spelled **existence**. You can remember it by **ends with -ence**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
In pure mathematics, i is usually used for the imaginary number. In electrical engineering applications, i is usually used to represent the current flowing in a circuit. So you'll see j used in engineering scenarios instead to avoid that confusion. Matlab understands both. 
Look at the doc for `fprintf`
No, it's just a notation difference. Electrical engineers like to use j because i means current.
As far as I have seen, all of the plotting functions give you flat surfaces. You just need to increase the resolution by including more points. Also, you can add some shading by looking into gouraud lighting
 string = input('Enter a letter: '); switch string case {'A','B','C','D'} fprintf('Congrats.'); otherwise fprintf('Fail.'); end Look at 
 admitted={'A','B','C','D'}; answer = input( '\nInput letter: ','s'); if any(strcmp(answer,admitted)) fprintf('Congrats\n') else fprintf('Fail\n') end
 admitted={'A','B','C','D'}; answer = input( '\nInput letter: ','s'); found=0; for check = admitted if check{1}==answer fprintf('Congrats\n') found=1; break end end if not(found) fprintf('Fail\n') end
Look at the doc for both strcmp() and any()
I haven't seen the correct answer yet. You're looking for `ismember`
I've never had to use imaginary numbers, but I'd recommend a search on imaginary numbers in matlab first. That "I" will reference a variable I'm pretty sure. Everything else looks good. 
Maybe change i to sqrt(-1)
I see, here's what I have now. sqrt(5*cos(45/(2 * pi))+exp(8+(sqrt(-1))*6))
1i is totally kosher in matlab, it's defined as the complex unit, 'i' is a little tricky, since it's often used as a variable. imag(6) is bad, since it's taking the imaginary part of the number 6, a real number, so imag(6) will evaluate to 0. Your initial line looks good to me. 
Using the 1i is common Matlab syntax. But all these other comments are still valid. Equation looks good though.
even if `i` is used as a variable, the literal `6i` will always mean six imaginary units. Note that it is part of the number, not multiplied by the number.
Wtf? No don't do that. 
Don't do that. 
Jesus christ no don't do that. 
No. In Matlab i and j are both the imaginary number. You don't need to redefine them. 
i should never be defined as a variable. Don't do that. 
Ok probably not i, but a variable called im or something
I don't understand why you're asking this. Type it into Matlab and **try it**. 
Absolutely not. Why on earth would you do that? i is a constant in Matlab. 