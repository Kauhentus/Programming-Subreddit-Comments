Well when you first start learning a language you're going to get lots and lots of error messages, actually you never really stop seeing lots and lots of error messages. So rather than learning the functions I'd recommend reading up on the types of error messages you're likely to see. Knowing when you should be looking for a syntax error or when you've improperly prepared your inputs, etc. is really the key to getting the basics and becoming an efficient programmer. http://en.m.wikibooks.org/wiki/MATLAB_Programming/Error_Messages
From what you've written it looks like variable "gas" should be an input to the function instead of a and b. Like this: function P = pressure (T,v,gas)
Thank you.
We certainly don't want gui_OpeningFcn falling into the hands of the Soviets. 
I find the unique command one of the most functional ways to compare vectors and columns. Just need to configure the settings to have it output what you need. 
Yeah, they're likely to use the explosion callback function against us. I don't know if we could handles it. ^^^OK ^^^I'm ^^^done.
Thanks for the link! It's something I wouldn't have thought about. I'm just learning about indexing and functions now, and you are absolutely right, so many error messages. 
http://en.m.wikipedia.org/wiki/MATLAB Initial release 1984. And it was an academic program before that. 
Oh? The gui functions too eh? 
Either [line\(\)](http://www.mathworks.com/help/matlab/ref/line.html) or add another set of data to your plot command. Position = [-40 -30 -20 -10 10 20 30 40] ; Time_to_rotate = [5.9 8.2 12.1 26.5 31 13.7 9.2 6.7] ; plot(Position, Time_to_rotate, 'o'); hold on; more_x = -40:0.1:40; more_y = spline(Position, Time_to_rotate, more_x); plot(more_x, more_y, 'b--'); % or plot(more_x, more_y, 'b--',[0 0],[5 50],'r-'); line([0 0],[5 50]) % or plot([0 0],[5 50]) You can set your limits manually or use some code to determine them automatically.
Thank you! It's been added to both. Do you know how to make it so the colors would be static though (therefore not changing when you get a new highest value tile)?
Oh man, thank you so much for this. I work with large data sets in matlab all day for work, and sometimes I need a brief distraction. This is perfect. 
Hah no worries man. Glad you enjoyed it and good luck on your non-2048 matlab work!
Store information in a vector between iterations. Generally speaking, if you have some for loop with ten iterations, write y=ones(10); **for i=1:10** y(i)=function end
You don't want to use `imagesc` then, just `image`. 
Ahh okay. Then there is a cap to the colors (I think four)... can I expand that in any way? Thank you again for your help
There's no cap. You can have arbitrary colors with `image`. 
Ahh okay I am figure it out. Now I just need to figure out how to scale it logarithmically instead of linearly
Posting your code would probably be a good start.
[Hey I got it](https://i.imgur.com/mOXvDNX.png)
Thank you!!! 
It's always interesting how oddly overly-complex the math/programming is that ends up in movies or TV. Does anyone notice the weird transition from MATLAB to what looks like Ada? 
So what issue are you having with this?
I do not know how to do it. Format it at all. I am taking modern computational methods over summer and we are moving at lightning pace I made it through Computer Science 1 barely (C language) and I am not a computer person, I am good with math. If you could help me get started I'd appreciate it.
While this is not really written in matlab. I can give you this code and just try to learn from it. import math counter=0 # very useful when you are starting from zero term =0. total=term Ea=100 while Ea &gt; 0.001: term =1. / ((counter+1) ** 2.) #counter+1 is good when you start at 0 prevtot=total # a temp variable to hole the prev value total = total + term # summing the terms Ea= ((total-prevtot)/total) *100 counter += 1 print total, counter print Ea
A brute force method could probably work. Just write a loop that sums up 1/n^2 and adjust the size of the loop to get it into the desired margin of error since the exact solution is given. A more elegant approach would include a check inside the loop to compare to current sum to the desired sum. Have the loop run and sum until you get the error you want. 
What namespace are the figures are created in? If they aren't created in the same namespace they won't share variables. Consider making both figures in a single function (OK) or have them managed by a class (better). Seeing your code would give a better idea.
Instead of queuing the jobs up asynchronously using parfeval, can you not just run them synchronously? Run them one by one, calling them in a for loop or something? Edit: If you want to run them asynchronously, perhaps try the following? a = parfeval(w,@fcn,1) for i = 2:10: a = parfeval(w,@fcn,i,a) and in your @fcn, start with fetchOutputs(a); which will stop the code from continuing until the result from the previous job is available (ensuring that it's finished).
Because the disk IO takes so long it would be more efficient to get a head start on load/save. What I ended up doing was creating a loop where I started asynch loading of the next data set before processing of the preceding one. It's not exactly what I want but it helps. 
See my edit. If you call the blocking code after the load but before the GPU operation, it might work for you.
You should ask your tutor. We're not here to do your homework for you. What we can do is answer any specific questions you might have. How to write a loop? How to address variables? If you don't know to write the Matlab code, try writing pseudo-code. What steps need to be taken to solve this? Could you write these in bullet points? How and when would you calculate the error? 
Please state what the ≈ function should do.
I don't know, but you can make one pretty easily: function out = closeTo(arg1, arg2, tol) if abs(arg1 - arg2) &lt;= tol out = true; else out = false; end
Let's say we get in a loop and if a≈b (with, idk x% accuracy) it stopes the calc and moves on with that it got there.
Not that I know of, but you can do the following. Instead of `a==b` do something like `abs(a-b)&lt;=1e-8` where `1e-8` is my tolerance. If `a` and `b` are vectors, you can do `norm(a-b)&lt;=1e-8`. If `a` and `b` are matrices where each row is a vector and you want the logical index, you can do `sqrt(sum((a-b).^2,2))&lt;=1e-8` to take the Euclidean norm of the rows. I hope this helps **Addendum:** Actually for the last thing, it would probably be faster to do `sum((a-b).^2,2)&lt;=(1e-8).^2` but it shouldn't matter much
I'll give a little pseudo-code here to get you started. Basically, you want to sum all of these terms together: 1/1 + 1/4 + 1/9 + 1/16... and so on. Each of those is an iteration in your while loop. Once that sum reaches your known value (pi^2 /6) then you stop summing more terms together and exit your while loop. 
I found a way cooler method to get what you want: first throw away the obsolute values in your rgb thing: pic=pic(:,:,1); %change to size MxN %do your indexing thing ... %create a new empty rgb image colorimage=zeros([size(pic),3]); %insert the indices in your color image to be colorimage(:,:,1)=idx_red; colorimage(:,:,2)=idx_blue; %note: don't add the indices since this would result in different tints of green, use OR instead colorimage(:,:,3)=idx_green1 | idx_green2; keeps it way cleaner in my opinion and is probably faster too (since you don't need any multiplications etc. 
&gt;a nice 3D plot in mathcad mathcad? In matlab, it should be able to read that pretty simply with `load` (or `dlmread` but probably not needed). Then, you can simply use `contour` (or, as I prefer, `contourf`). If you want 3D, you probably want to use `surf` (or `surfc` or `mesh`)
well, there are 2 figures, created separately, and i keep them in the same folder, this is the code: (When i push the button to go to figure 2) **close (gcbf); openfig('fig1.fig','reuse')** (and this is the code when i go from figure 2 to figure 1) **openfig('Fig2.fig','reuse')** Do i have to save the variables i need? If yes, how do i do that? I don't know how to work with classes in matlab, i'm still learning edit: so you suggest to link both figures to the same namespace? if yes, how can i do that? 
The coders from those days were way ahead of their time.
I posted the code below.
So in you code currently the namespaces of the 2 figures never overlap. It's hard to recommend a solution without seeing how you use the variables / how you have structured your code. You need to pass your variables from one figure to another. Pack all your variables into a struct: s = struct s.var1 = value1 s.var2 = value2 etc Then you can store this struct 'in' the figure which can access it later. close (gcbf); f1 = openfig('fig1.fig','reuse') set(f1,'Userdata',s) Then when you need the variables you can get them out: s = get(f1,'Userdata') 
Thanks very much for your reply, I will give this a try!
 % random image (0 to 1) I = repmat(rand(10,10),[1 1 3]); % one picture for each color, same size as I [Ir ,Ig ,Ib] = deal(zeros(size(I,1),size(I,2))); % I don't know how you set your ranges, but you could do it % all in one array, with an corresponding matrix of colors range = linspace(0,1,6); colors = [1 0 0 % red 0 0 1 % blue 0 1 0 % green 0 0 0 % black 0.5 1 0 ]; % yellowish green % set colors based on thresholds for ii = 1:length(range)-1 idx = I(:,:,1) &lt; range(ii+1) &amp; I(:,:,1) &gt;= range(ii); Ir(idx) = colors(ii,1); Ig(idx) = colors(ii,2); Ib(idx) = colors(ii,3); end % put them back together I2 = cat(3,Ir, Ig, Ib); subplot(1,2,1) image(I) subplot(1,2,2) image(I2) 
Its probably behaving poorly because that's not the best use of "while". Try using waitfor... b = uicontrol('Style','togglebutton'); for ii = 1:20, sprintf('Number %d\n',ii), waitfor(b,'Value',1), pause(0.5), end
Worked! guidata was all I needed to update as well! Thanks! Edit: Yea I wasn't getting any warnings
Perhaps I can clarify: I'd like to read in the data from the file into a 2d matrix. Then I'd like to plot the points from the 2d matrix in a 3d plot, such that the row and column of each element from the array corresponds to the x and y co-ordinate, while the actual value of the element corresponds to the z co-ordinate.
Wow, this looks like a great method. The images I am working with are about 50 Mb each, so I don't really want to use a for loop if I can help it. However, this has some great ideas. Thank you very much for your help.
that looks like generated code for a GUI created using the *GUIDE* tool (well most of it, the lower part is not even valid MATLAB code)... Although MATLAB started in the mid 80s, it wasn't until MATLAB 5.0 (released around 1997) that the GUI designer was introduced.
I hope it helps. The for loop runs only five times, once for each color, but all the matrix operations are vectorized. Some things aren't worth vectorizing, because the marginal performance gains aren't worth the loss of readability. For example, this accomplishes more or less the same thing faster, but is shitty code, and I won't remember what it does next time I see it: % random grayscale image (0 to 255) I = repmat(round(rand(10,10)*255),[1 1 3]); % color matrix, shifted into third dimension colors = shiftdim( [1 0 0 % red 0 0 1 % blue 0 1 0 % green 0 0 0 % black 0.5 1 0 ],-1); % yellowish green % Complex loop-free indexing I2 = reshape(colors(:,floor(I(1:end/3)./256*length(colors))+1,:)*255,size(I)); subplot(1,2,1) image(uint8(I)) subplot(1,2,2) image(uint8(I2)) Good luck!
Are you getting some error message?
If you are starting with 0 knowledge and got no idea of basic principles in computer vision/tracking and detection, I doubt anyone is going to write up a pagelong post highlighting the different methods and their advantages so that a beginner can understand it. Maybe you can take a look at [differen Matlab implementations](http://www.mathworks.de/discovery/face-recognition.html) and go from there.
A starting point: Edge recognition. Look up fourier transforms and filtering out low frequencies. 
No, just the checksum goes to all zeros with longer inputs. I've noticed while trying to debug that when it does the division the numbers are getting smaller and smaller until I believe they're getting treated as zero 
Rather than remove outliers, you can refocus the axes with the command: axis([x1 x2 y1 y2]) You can get data out of hist, too, to see the range. Just designate outputs when you call hist: [nelements,centers] = hist(data,nbins)
The way i am currently doing it is just doing data((data &lt; max) + (data &gt; min)); I am just using a histogram to display the data, the actual display is less important too me. I can easily remove them manually by limiting the data ranges, but I am looking for a way to do it automatically in code. For most data sets i put into the code, there are no such outliers. When they do occur it warps any kind of average calculation i get. I am asking if there is any easy way to go about ignoring outliers.
You can always just put in an if statement : if value is greater than the threshold you set for outliers, delete that entry.
Could you make some kind of if condition which depends on the height of the bar (below, say, 1% of the largest bar) and the position in your dataset (e.g. more than *x* units away from the central bar)?
That actually could work really well. Now to find a way to get the data from histogram bins. I will need to be careful about how i implement it though. There are pretty short stacks near the edge of the peak that actually are significant.
I've taken to using NaN instead, because it's easier to tell if something isn't working (presumably no element should be NaN afterward).
Thank you for the response. This will be a good starting point, tho it seems quite overwhelming. Will look at the link provided, if you know any more I would deeply appreciate it if you could share them Thanks for everything
Thanks for the suggestions. So is it the timing causing the different behavior? Hard to troubleshoot if code behaves differently when I'm troubleshootin'... Tried it, waitfor works great. It's what I was looking for but did not know. Using the while loop is my first attempt
https://www.youtube.com/watch?v=g5_tonFnfaQ http://www.cse.psu.edu/~rcollins/CSE486/lecture32.pdf
Just to follow up based on your more detailed information. The two commands that I think you should use are dlmread and surf. If you are new to matlab, type "doc dlmread" and "doc surf" at the command line, and this should give you all the info you need to get going.
You could set max and min to be based on the standard deviation and eliminate any points in your actual dataset that are more than 3 or 4 standard deviations from the mean. meandata=mean(data);stddata=std(data); data(data&lt;meandata+(3*stddata)&amp;data&gt;meandata-(3*stddata))
that is a pretty crude tactic because when its applied. If you have an outlier that is a few orders of magnitude greater than the mean, the entire thing will go haywire.
True, you need to know what your data look like if you want to automatically remove outliers
thank you so much.
I wasn't expecting an easy road. Thank you for the comment will look into it. If you know any more would be greatly welcomed.
Use the median absolute deviation for scale measure then. 
Do you just want to *show* them your work? Or do they need to actually execute it. If you just want to share your work/results, you can write a published cell-script demo and generate a nice published HTML page with everything in it (just like the demos in the product). If you need for them to actually execute the code, then they'll need to get access to a license with stats tbx in it. Maybe they could just remote desktop into your computer if they just need to run it once? OR... you could get the MATLAB compiler, and compile your code to a deployable executable. Then they could run it on any computer.
If you send them the dependent code you'll certainly be violating the TOS, so be aware. I don't know if it would work or not; MATLAB may have some sort of validation process. If you just need them to execute it but not to be able to see it you should be able to compile it as a standalone executable they could run outside of MATLAB. 
Matlab Compiler &amp; Runtime are the only way to do exactly what you're asking.
Thanks for all the replies. I was hoping to not have to compile since this process is somewhat iterative and it is much easier for me to run the processing (then re-run with changed params) than create the tool. I can do the stand alone if push comes to shove. Thanks.
So you just want to fit a regular chi-square distribution? As you only have one discrete parameter, it seems easy to just try a bunch of DoF values and choose the maximum likelihood one. 
Well thanks so much. You really did more than I could have expected.
Probably a violation, but you could cut and paste the used functions from the toolbox in the bottom of your current function. 
Why should I care about your shit if you don't even mention what parameters? 
Instead of having the parameters hardcoded, read them from a config file. Then you can compile your script and have it read from the config, which you/ they can edit. You can even then encapsulate the whole thing in another script which does your parameter iteration for you by editing that config file and re-running everything else, inspecting the output, and changing the parameters again. 
&gt; If you send them the dependent code you'll certainly be violating the TOS, so be aware. I don't know if it would work or not; MATLAB may have some sort of validation process. I doubt it. Maybe it's the case with mex files, but with m files there's really little they can do. It would be a pretty significant computational load to check files for copied code at runtime. 
One other (pretty obvious) option that has not exactly been stated -- if you only depend on one or two functions, you could always try to write your own version or look for a works-alike version on the Matlab Central File Exchange... there are lots of those for common toolbox functions. It's basically the same as the "send them the .m files from the toolbox and violate the TOS" answer, but... reading Matlab's version and writing your own version using the same algorithm isn't *technically* stealing the code anymore. Obviously, not very useful if you depend on LOTS of toolbox functions (or very complicated ones that don't have a free version on the File Exchange)... then you're stuck with one of these other options.
You're not actually using your axes handle in any of your calls. By default, each callback generated by GUIDE passes the `handles` data structure, which is a data structure containing the unique IDs of all the GUI elements created in GUIDE. Just looking at your first pushbutton, you first pull the ID of the current axes and store it as `axesHandle`. You use this twice and then never use it again, switching to `axes1` in the next 3 plotting calls which won't do anything. You can replace all 5 of those with `handles.axes1`. I haven't looked at anything else but this will likely fix most of your current issues. You can change the name of these handle variables by modifying the `tag` property using GUIDE's property inspector. And a test: handles.axes1 == axesHandle ans = 1
I have replace those 5 instances with handle.axes, but now it tells me there is an error with my fill command. Apparently there aren't enough input arguments, which is odd because it works fine when not bounded to the GUI. Also I tried to test the values like you suggested and it is returning an error statement that says that it is undefined.
First, take a blank piece of paper and manually draw the steps you need to take to calculate the cumulative sum. Just draw. Think about what steps you're repeating and how you're keeping track of which number tore supposed to add to the sum reach time you repeat your steps. Then start writing your code. Also, type help cumsum To decide whether you wanna use cumsum or not.
Thanks so much. I'm gonna give it my best shot. 
Based off [this](http://www.mathworks.com/help/matlab/ref/cumsum.html), what you should be trying to do is write a for loop that replaces the cumsum function. What you have right now is going to take the cumulative sum of each number in your vector for i. In other words, it will evaluate cumsum(4), then cumsum(4), then cumsum(7), and so on. 
Teach a man to fish... :(
Can you explain more about what's wrong with the code? Does it produce an error?
sure, here's the error I get: "Attempted to access mat(-2); index must be a positive integer or logical. Error in run (line 13) x = mat(x+1); %if pat = 2, move 'x' 1 row down" http://i.imgur.com/TInAYjN.jpg there's a link to my assignment, if it helps 
mat(-2) I assume (and hope) you know you can't access a negative element in the matrix, as also confirmed by the error message. That being said, what I would do is to un-semicolon some of your lines and see where x = -2 *edit, more generally, where x+n, x+1, or x+1+n is negative pops up, as per your error message. It may be calculated to -2 on a different line than 13. Also, I don't think you're initializing your search correctly. You're trying to use x as an index but you initial define it from the value in the matrix. I think you would be better served here to use 2-d indexing instead of just 1-d: for your first iteration, where pat(1) = 3, it would make more intuitive sense (might not be faster coding/executing, and hopefully you keep mat small for your assignment and this isn't part of a larger thing) so you then get the 2nd value for the sum (the 2), from mat(2,2) and not mat(8). Even on the first iteration of your for loop, I don't think you're getting mat(8), I think you're getting mat(10). I would code as such: cur_row = 1; cur_col = 1; score = mat(cur_row,cur_col); for ii = 1:length(pat) if pat(ii) == 1 cur_col = cur_col + 1; elseif pat(ii) == 2 cur_row = cur_row + 1; elseif pat(ii) == 3 cur_row = cur_row + 1; cur_col = cur_col + 1; end score = score + mat(cur_row,cur_col); end As a helpful debugging tip, first un-semicolon spots or throw in disp(&lt;somevar&gt;) or disp(size(somevar)) statements to see if the data is working correctly. Then, once you spot where you are getting an anomalous value, -2 in your case, find what iteration it was in your loop. Finally, you seem to have a pretty solid explination of what the code should do, now is the time to walk through your code to see if, in how you've coded it, you're following what you believe the code should be doing - that's where I went on above about the 2d/1d indexing and the mat(8) vs mat(10). Also, we're (/r/matlab) here to help /r/matlab learn new things, from mistakes, errors, and other questions :) *Another edit: I think I got your error! In trying to step iteration by iteration through your code, once you do the 5th iteration you get this for x: x=mat1=4 pat1=3; mat(4+1+5)=3; pat2=1; mat=(3+5)=2; pat3=2; mat(2+1)=6; pat4=2; mat(6+1)=-4; pat5=3; mat(-4+1+5)=-2; Forgive my non-matlab indexing, it was quick in a notepad.. Here is where x=-2, and I suspect if you were to put a counter in your code and increment it 1 each loop, it would read 5 or 6 (depending on if you put it before/after the error). Try putting: count = 0; for ..... count = count + 1; in your current snip and see what iteration it fails at (coded as this, my bet is 6).
Seriously, what happened to "we don't do your homework!" from the sidebar. /u/aeikostx went about helping in the most helpful way - OP is going to learn MATLAB, not just pass his course.
I would avoid using sum as a var as it's already a MATLAB function itself. Also, what happened to the we don't do HW bit..? :(
To help you learn a bit more, take a look at [matrix (and arrays, they're just 1d matricies) indexing](http://www.mathworks.com/help/matlab/math/matrix-indexing.html) as well as [for loops](http://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html). [cumsum()](http://www.mathworks.com/help/matlab/ref/cumsum.html) is also here. A tip for the future if you keep with MATLAB for programming, in Google, search "matlab + &lt;function name&gt;/&lt;some concept&gt;" and it'll take you to a) MATLAB documentation or b) file exchange where someone may have already made a function you're looking for. Good Luck!
gosh, i can't thank you enough for your help, time, and patience in explaining so thoroughly every step of my code to me. I appreciate your help so very much. You're a life saver! Thankyouthankyouthankyou!
Hi there, there's no equation for cubic interpolation, it just calculates the value of all the points between your data by presuming they are joint by a polynomial. Finding an equation that fits your data can be really hard and there is really no different way than trying different models out and picking the one that fits the best. With some experience you can get fast at this, but still it is hard. Edit: I would recommend, as a starter, to go for polynomial and specify as many degrees as you can for x and y. Then go down untill the R-square or the RMSE have values that you like.
Well it only plots (0,0) because it does not go through the while loop since y==0. Change while y&gt;0 to while y(end)&gt;=0 Also remove the / from the Accy line. The (end) means it only checks the last element of y and not the whole array. In this case it works without (end) but that means that Matlab checks the whole vector and every element has to be &gt;=0 and that is not needed. 
I'm sorry, I didn't know. When I was submitting this the form said "If this is a homework question copy what you have and error messages completely" so I thought it was for homework help.... 
Thank you oh so very much. Didn't see that / in the Accy line and thanks for the tip on the while loop.
I should have prefaced my response by saying I don't have MATLAB in front of me so I'm only able to check this out in notepad. &gt; but now it tells me there is an error with my fill command. Apparently there aren't enough input arguments, which is odd because it works fine when not bounded to the GUI. Because your syntax isn't correct. Look at the documentation for [`fill`](http://www.mathworks.com/help/matlab/ref/fill.html). You're trying to mimic the syntax for `plot` where it allows you to specify the parent object as the first input to the function, which doesn't apply with `fill`. What you need to do in order to specify which axes to draw your polygon is to set the `parent` property of the polygon: fill([1.75 2.25 2.25 1.75],[0 0 1 1],'c','parent',handles.axes1) &gt; Also I tried to test the values like you suggested and it is returning an error statement that says that it is undefined. Are you [using a breakpoint](http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html) so you're testing the values while in the function workspace and not the base workspace?
Well... I went back through my post this AM, and even after the 5th iteration giving you x=-2, on the 6th iteration your code *should* still process, and I think it should be able to complete. Now I'm lost at where you're code is breaking down, but at the very least, what *I* think your code is doing isn't exactly what your assignment wants it to do. At any rate, I think using the 2d indexing will not only get the code to work but will be more intuitive to you at the moment. This -2 is gonna bug me all day today...
I think you may be in the wrong place. Have you tried /r/python?
bobinpants got it. But I wanted to make the obligatory, 'now do it with a Runge-Kutta Scheme' comment. These codes are fun to make just using basic physics (I've done several of them for the hell of it), but you should also consider trying to do the same thing with an RK4 scheme. You could use an ODE solver in MATLAB but I tend to prefer to write my own. It's not nearly as difficult as it may sound to do it for a specific problem like this and you get a higher fidelity solution. In practice the error between this and RK4 is pretty low, but it's a good flexing of your skills.
New to r/matlab and matlab in general. I remember hearing about that RKS thing in a lecture, but never was taught how to use it, same with ode45 or something... XD so I can't flex the skills I don't have.
No worries! It's more of a problem during the school years and ends of semesters when the lazy "I-dont-go-to-class" and "please-do-my-hw-project-for-me" types come out of the woodwork with "HALLLPPPP I DONT UNDERSTAND MATLAB AT ALL AND HAVE THIS PROJECT DUE IN 2 DAYS"
i always go to class and do my homework =D i'm just a confused little girl right now hahah
Again, not accusing you personally! And I don't want to scare you off from asking for help here
You can just do var = NaN(m,n);
Learn something new every day, thanks!
Matlab doesn't give out the code for their functions. You might want to look into this page though. http://stackoverflow.com/questions/9845292/a-tool-to-convert-matlab-code-to-python
Look up the help files for ODE45 and other ODE solvers built into Matlab. [Runge Kutta is simply a numerical method.](http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods) It's very easy to implement. The hardest part is often boiling down the governing equations to a single big Ordinary Differential Equation. When I was once in your position I was told that "you should have done this with an ODE solver." And that's not a wrong opinion, but it is a little short sighted. So don't take that same argument from me. Running the physics the way you have is a great exercise and will give you good results. Just understand that you may need a pretty small time step to manage the error. An ODE solver of some kind is often more tolerant of larger time steps.
You'd be able to create a condition outside of ode45 to indicate if the solution doesn't meet the required radius. However to actually modify the solution such that a minimum radius is achieved you would have to add a controller, which would involve changing the equations you are giving to ode45. Are you plotting trajectory, searching for a specific one, or attempting to control trajectory? 
If the figure is loaded you can use get(gcf) to see all editable characteristics of the figure. and set(gcf, "property","property value") Though adding text like that may require you to add more children to the figure. It's been a while since ive used matlab 
You can open the source code for the ode15s function using the command: edit ode15s 
See : http://www.mathworks.com/help/bioinfo/ref/pdbread.html It takes a string specifying the filename of a pdb file. getpdb('1abt', 'ToFile', 'nicotinic_receptor.pdb'); pdbstruct = pdbread('nicotinic_receptor.pdb'); 
I'm assuming you want to add labels to the axis to denote specific regions. There's nothing built in but you can get what you want. The way MATLAB creates a plot window is no different from how the user creates a GUI so you can add, manipulate, and remove objects easily. For example: x = 0:10; testfigure = figure; plot(x) label1 = uicontrol( ... 'parent',testfigure, ... 'style' ,'text', ... 'units' ,'normalized', ... 'string','Hi 0-1', ... 'position',[0.05 0.14 0.05 0.025] ... % [x_pos y_pos length width] ); label2 = uicontrol( ... 'parent',testfigure, ... 'style' ,'text', ... 'units' ,'normalized', ... 'string','Hi 1-2', ... 'position',[0.05 0.24 0.05 0.025] ... ); And so on. Modify the `string` parameter to whatever you want. You may have to adjust the size of the text box if add a longer string or change font sizes. You're will have to play around with the placement to get the labels where you want them. I chose to use `normalized` units so the text will shift if you resize the figure window, but you can also use `pixels` if you want to get really precise with the location. For `normalized` units, everything is relative to the size of the parent figure window and the origin is always at the bottom left. See the `uicontrol` [property documentation](http://www.mathworks.com/help/matlab/ref/uicontrol_props.html) for more information on what you can manipulate. A fun little project would be to write a function to automate the label generation if you don't feel like writing out every single label each time you do something like this. If you make it generic enough you can leverage it for future code.
Do you have the bioinformatics toolbox? Have you [read the documentation](http://www.mathworks.com/help/bioinfo/ref/pdbread.html)?
Make a matlab script that runs your sim, copies the output to 'workspace2' or whatever, then runs the sim again. 
'to workspace' should be fine. sim('modelname',time); newname = oldname; sim('modelname',time); 
I haven't made a matlab script from simulink before. I tried the help function...but it just made it more confusing. If you don't mind, can you tell me how to take output values from the simulink model to the script? Or atleast a link explaining the same?
Use to workspace.
Sorry to re-hash this, but as I was looking at my standalone, I was thinking about writing the m-file not as a GUI, but as a series of uigetfile for the inputs, then some figures windows if need be, and then uiputfile windows for saving. So not command line, but pretty similar. Does that sound the most efficient to you? Will definitely save me some headaches since the GUI seems to give me errors I don't encounter in every day use. Thanks again for the advice.
I feel like statistical work is easiest to do in R, rather than MATLAB.
What is the error you're getting?
Your problem is floating point comparison. See [here](http://floating-point-gui.de/) for the explanation and [here](http://stackoverflow.com/questions/686439/why-is-24-0000-not-equal-to-24-0000-in-matlab) for an ok-ish Matlab workaround.
No error, the code under the statements simply won't execute.
I don't think there's a MATLAB user in the world who hasn't done this at least once. Using breakpoints at the if statements would have helped you debug it.
Whatever you put in 'to workspace' is just going to be a variable.
If statements not working, then doing something wrong.
At first I thought you were offering obvious criticism haha
Try using [interp1](http://www.mathworks.co.uk/help/matlab/ref/interp1.html).
I haven't been thinking with that workaround advice. What you probably should be doing is multiply everything by 100 and work with modulo of integers. Much neater than this floating point nonsense.
I will take a look at it, thank you 
A couple years ago when I was working more heavily with MATLAB, I'd created a vectorized method for this. It was actually slower than using this method with less vectors and more scalars. I'll post it tomorrow if you're interested, because we had a hell of a time getting it to work in a vectorized way and then it ended up slower, so there may be something you could tell me there. This was just an exercise to help get me back into the swing of things. I took the fastest code I'd created a couple of years ago and then just started paring down the lines as an exercise to see what else I could compress without regard to performance.
thanks, but then I'd have to seek the actual value using find. i found what i need is polyfit/polyval
A few years ago I played golf with someone and we ended up with something like this 8 lines. (I'm working from memory so it may have been slightly different.) It's both smaller and faster than the non-vectorized version. [x y] = meshgrid(-2.5:0.005:1.5, -1.5:0.005:1.5); mandelbrot = x * 0; % output image z = x + y * i; for k = 1:64 mandelbrot(find(abs(z) &gt;= 2 &amp; mandelbrot == 0)) = k - 1; todo = find(abs(z) &lt; 2); z(todo) = z(todo) .^ 2 + (x + y * i)(todo); end I only tested it in Octave. I bet Matlab will choke on parsing line 7 due to its parser being utter crap, so it may need to be adjusted. 
That is what I ended up doing. Thanks for pointing out the problem though, because I'm not sure I would have thought of it.
Oh...okay I'm really stupid. Thank you :)
Have not looked at your code closely, but the first thing that jumps out at me is you use of * to multiply an array by a scalar quantity. You should use .* instead. This may (or may not) solve you problem.
nah that's not the problem. array\*constant is the same as array.\*constant. Im not sure what the code is supposed to do but since x depends on t, the array x can contain equal values for different t-values. s depends both on x and t. So if x has the same value for two different values of t, s can still have different values for these x values since it also depends on t. Therefore in the plot you see that for the same (approximately) values of x you have multiple values of s. Please explain what the code is supposed to do.
Not the issue. Like I said, I'm certain TrackIndex is in bounds (the first time this issue occurs, TrackIndex is at 13 and the number of rows in CulledTrackData is 219). 
Are you sure that is where the errors are? The error messages that I would see say "??? Matrix index is out of range for DELETION."
Thanks, this is what nailed down the cause for me. Turns out I was using conditions in IF statements that incorrectly checked things based on the raw data instead of the culled data, and that's what was causing the out-of-index error. 
I've had to do this for the title and colorbar for a set of 2x2 subplots. What I ended up doing was placing each object in the figure window (4 plots, 1 title, 1 colorbar) using a (x,y) from [0 1] for the bottom left corner, and then some height+width info. I can repost more tomorrow if your interested. I'm not claiming it to be fastest/best, but it got the job done for me.
Unfortunately I able unable to do so, thank you though, I will keep this option in mind 
You need to make an array for t, you can use the linspace command for that or semicolons. You will need to use the plot function. 
Ok, So it is important to know what your plot should look like initially. Because time only increases, we know that the voltage will exponentially decay, so this is the plot we are looking for. Let me know if you need any other clarification on the theoretical part of the problem. Now on to the Matlab. So let's first make a vector of t. The problem states that t goes from 0 to ten, so I recommend you let t = 1:.1:10; I'll explain the syntax of this statement, if we let t=1:10, then we would have a vector of length ten with increments of 1 (this is the default), because we put a .1 in between the 1 and 10, that means that the increment is .1. In general, vector=begin:increment:end; Ok, so next for the actual formula, to declare a function we can use this syntax, syms t v = @(t) v1*exp(-t/T) This declares t as a variable, and for v, we can call this as we would expect, v(5) would mean that we are passing in 5 for the time. And now the loops, in matlab a for loops syntax is the following, for i = start:end stuff end So, what you need to do is make a vector that stores the value of v, let's say, voltage, and set it equal to the value at t, voltage(i) = v(t(i)); Make sure that i is the length of t so you access every value in the t vector. Edit: oops missed a space And I completely forgot about plotting, my bad! To plot your answer, just use this syntax, plot(time,voltage); You will then need to change the values of T for each run
I do not know any off the top of my head, but one idea is to come up with a problem and force yourself to solve it in Matlab. No using other programs/languages. Alternatively, revisit old work. Hopefully you did a great job commenting and you should follow/relearn your logic. If not, you should go through and comment the code, that will force you to rethink it all. Or, delete comments and do it again.
In addition: imagine you have a function and you're supposed to plot it on paper. you would do the same. you would make a table with values for tima and calculate each v. that's what you do here, too. since you might be on Octave as a student, the definition of the v(t)-function also works without the symbolic t: T = 0.5; v = @(t) v1*exp(-t/T); the second statement is a so-called anonymous function. actually a pretty advanced concept as it is a function that's not stored in a program file but exists as a handle associated with a variable v within the current workspace. if that seems to hard to understand at first, maybe the programmatically simpler method would be to declare two vectors for t, as done above, and v as a vector of zeros that has the same size as t: v = zeros( size( t ) ); now you can for-loop over t and set each element of v accordingly: % within for-loop v( i ) = v1 * exp( -t( i ) / T ); at the end, you plot like mentioned in the original post. As you learn, you will soon realize that you do not need an actual loop here as you can do pretty much everything with just vector algebra. extra points for you if you post your ideas! a few hints for you as a newbie: * use the command help functionName to get help, use doc functionName to open the documentation * use extensive google searching, the online help of Matlab is stupendous and you will find something * when you write functions, use the debugger. if you are in fact on Octave, use keyboad, dbstep, dbnext and return to leave debug mode * don't be afraid to simply use trail-and-error * be aware at all times that you have to outline what you want to do; use pen and paper to scribble down an outline and maybe the dimensions of matrices. Use programmatic approaches to mathematical programming/modeling, too * have fun! you know where to find us.
depends on the use case. if you do modeling and using a Modelica-tool codependently, you probably want to refresh your simulink knowledge. you would model in dymola and export to s-function to be consumed by simulink. i do not know dymola all that well but as a devepoler in a company producing another Modelica-tool, i can tell from the use cases i encounter that the following points might be interesting: * FMI-standard * Simulink s-function * COM interface and optimization in Matlab * Co-Simulation via s-functions * Matlab/Simulink Coder
So the minimum/maximum r is not part of the ode but an initial value problem? you could check that before invoking the solver. if it is the case that you need to impose constraints on the solution vector, the only thing i know of is the "NonNegative"-constraint found in the odeset()-options. you could calculate the solution so that a breach of your imposed condition r&lt;=R_min would result in a negative solution. The solver should then be able to avoid this. i think you would have to give us something more than what you already have in order to enable us to help you in a more specific way. i think simply adding how exactly the solver is invoked without the context of the ODE-function would already help.
Sounds good my man. Thanks.
If you're just viewing the figure on your PC, you can also title the whole window with `set(my_figure_handle,'name','my_window_title')` ... but obviously that won't be very helpful if you want to print the figure out to an image or whatnot.
Good expansion on what I said, I think the main reason I didn't want to introduce vectorization is because the OP's class will probably stress loops (and it's a good thing to learn and understand well) I have been doing a lot with function handles lately, but good call on not needed any. To the OP: I would recommend taking this advice and not using function handles yet. 
I'm not sure what you're hoping to hear, you should learn how to work with cells. Its the easiest and most straightforward solution to your problem.
You should probably start by reading in your data using a loop, or you can just copy it into a variable array. Once it's I'm your workspace you can figure out how to address it and operate in parts of it. It sounds like one of your limiting issues is knowledge of cell syntax, that's ok, and very easily fixed with some playing around In the variable viewer. You're also really not clear what you're attempting to do with the data, and that's fine, I think your first step is learning cell syntax.
Use a dataset
If you use textscan, the return value will be a cell, but inside that cell will be regular matrices (for numeric data, anyway). I regularly have something like this at the tops of my functions that read in XLS/text files: fields = textscan( my_file_id, my_format_string ); column1data = fields{1}; column2data = fields{2}; ... etc.
Execute the command dbstop if error Then rerun your code. You will stop in the debugger when the error occurs. Then look at the values of the offending indices. 
of course you need stats toolbox, but I agree. 
Do you have a screenshot comparison of what goes wrong? &gt;set(h,'units','inches') &gt;set(h,'position',[0 0 8 4]) Why are you using inches? Seems like a bad idea. Use absolute pixels or pixels relative to `get(0,'ScreenSize')`. &gt;xlabel('time $(s)$','FontSize',22,'interpreter','latex'); That's incorrect, you should never use cursive when writing units. 
&gt; Do you have a screenshot comparison of what goes wrong? I will try to get some screen shots soon but it is hard because the issue is not exactly with *this* plot. It is with other plots but this uses the same thing. And, as part of the issue, it isn't always reproducible. May show one thing today and something different tomorrow. &gt;Why are you using inches? Seems like a bad idea. Use absolute pixels or pixels relative to get(0,'ScreenSize'). No. My goal is to export these. Pixels, inches, and cm are all absolute and exactly define (I think it is something like a in is 72 pixels). Screen size or normalized are relative so they would not give me consistent exported sizes. But, this is irrelevant since it is happening on *the same machine* Finally, &gt;&gt;xlabel('time $(s)$','FontSize',22,'interpreter','latex'); &gt;That's incorrect, you should never use cursive when writing units. This is **irrelevant**. This was a test example and I wanted to show using LaTeX. Even then, it doesn't matter since my export is a slightly modified version of `mlf2pdf` (which calls `matlabfrag`) so *everything* is set is LaTeX (though not necessarily in math mode)
Sin/cos as used here accept radians as their angle. Are you using radians? Or are you using degrees. Use cosd/sind if so. Are you able to by hand get the answer you should be provided the correct inputs?
Nah. It's not that. Just floating point errors. Or maybe it's something else, but obviously it's impossible to know if OP doesn't provide code. 
If you want to use them in latex anyway and want total control over the plots you might want to use the pgfplots package. Instead doing all of the design work in matlab and then using the latex export you could just export the data itself and display it with pgfplots. It's very powerful and makes for very consistent figures throughout your paper. Set the axis width to 13 cm? It will be exactly 13cm all the time. It can do line plots, scatter plots, surfaces, bar plots, and some more exotic ones. You can easily and heavily modify the way it's displayed. Apart from all the basic needs it's based on tikz/pgf so you can modify it to your hearts content. Want tufte style range frames? Possible. Want a spectrogram with highest 4 peaks automatically labeled with their frequency? Done. It doesn't take long to get a basic grasp of it and there is an excellent documentation. 
There are two Matlab principles going on here: 1) When you have a 2-D matrix but you use a single index into it, you're doing linear indexing. Which means the indices run down the columns and then across the rows. In other words, if you have a 3 (row) x 2 (column) matrix as you do here, item 3 is the third item in the first column. Item 4 would be the top item in the second column. So m{3} would be the item that's the empty cell, {}. 2) Then there's the difference between accessing cells with parentheses () versus braces {}. It's simple in principle but a little hard to wrap your head around at first: Using braces takes the item in question out of the cell matrix, parentheses don't. So for the first item, m{1} would return the regular matrix [3 4 5 6 7], but m(1) would give you that same matrix but still inside a cell: {[3 4 5 6 7]}. The key thing for m(3) / m{3} is that the un-celling of using braces only goes one level deep. So m{3} gives you {}, the empty cell matrix (taken out of the outer cell matrix), whereas m(3) gives you that single item but still enclosed in another cell, or {{}}. So size(m{3}) is 0x0, since {} is empty, but size(m(3)) is 1x1, since {{}} is a 1-item matrix containing the single item {}. Hope that helps...
Depending on how you launch matlab the screen pixels per inch is different. get(0,'ScreenPixelsPerInch') ans = 96 Which is why you never use inches as a unit. Second, if you want to repeatedly put something exactly where you want it use: http://www.mathworks.com/matlabcentral/fileexchange/21351-getplotposition to get the pixel settings. Second, other than that I have never had the problem you have. If something works on one day it works the next. Even on multiple different computers. I used Matlab to export directly to eps and even had matlab write my LaTeX for me.
 m=get(0, 'screensize') hypot(m(3), m(4))./get(0, 'screenpixelsperinch') ans = 22.947 You can compute what Matlab thinks is your monitor size this way. It's correct, I do have a 23 inch monitor. I imagine this can change, e.g., if a laptop is connected to an external monitor or not. 
I considered using pgfplots but eventually decided against it for simplicity. matlabfrag is nice because it is just an `eps` file and LaTeX overwrites all text but I also didn't want to have to rely on all collaborats having the packages (for some reason, it isn't on some of their machines). Instead, mlf2pdf (plus a few things to fix and clean up the output), makes very nice figures that hold true to what is on screen. The issue is that what is on screen keeps changing as per my original question. Thanks for tips though
 m{2} looks at the 2'nd cell element, which is 1:2 or [1 2] and what is this size? 1 2 or 1 row 2 columns. Your m looks like this: 'a' [1 2] {7 8} 'hello' 9 [] So, for example, size(m{4}) = 1 5 . I think your issue might be in converting from the location m{x} is to what *you* think it should be as m{i,j}.
Edit/elaboration: I'd be willing to bet it's a simple typo and they meant for the question to ask about m{3}. Seems like the simplest explanation.
My code seems to work fine when the column input is the column number, but when i input a column header, for example 'BMI', it doesn't seem to extract the right column. I'm not sure what I'm missing in my code that should enable this to work. 
Why can't you use lab view or signal express? You should very easily be able to turn up your refresh rate to well beyond that....
I'm not using lab view because I'm doing on-line data analysis in Matlab. I don't know about signal express. Can these programs communicate with Matlab in real time? The rate-limiting factor appears to be the multiplexer switching. When I reduce the number of multiplexed channels from 16 to 8 the speed doubles. When I just read continuously from a single channel without multiplexing (just using a single input scan called once per loop) then I can get up to about 30 samples/second.
Figured it out! My strcmp command just needed me to add an 'i' at the end: strcmpi(rawread(1,:), column). The 'i' is for case-insensitive scenarios, which is why an input of all lowercase letters like 'bmi' wasn't working because in the excel doc, the header is in all caps. Thank you for all your help though!
Can you multiplex the signal before sending it to matlab? So you take 16 different inputs (in parallel) --&gt; multiplex -- &gt; single stream (of this type {a1,a2,a3,a4,a5,...a16}) --&gt; feed to matlab. This should be much faster, since you have reduced the operations from two to one. Try using an arduino to do it. 
Honestly you would be better off buying some multi-channel, i2c (or spi) adc's. It gives you better control over front end conditioning (not sure how much noise that MUX will introduce) and let's you read much faster, as you can read one ADC while the others are still converting. You could also expand the number of channels easily as long as you don't run out of addresses (i2c) or cs pins (spi). Just about any microcontroller will be able to command/control the adc's and serve as a simplified serial interface for MATLAB/LabVIEW/whatever Edit: that ni-dac may have i2c onboard, so you might be able to use the board you have to talk directly with the adc's.
The whole story of what I'm up to is that I am performing this 8x in parallel. The NI DAQ has 8 analog input channels and each one is connected to a 16 channel multiplexer. This was the cheapest way I could think of to read in ~100 analog input channels. Given that this is what I am trying to do, can you recommend any products/setups for under 1000$? I would be extremely grateful 
You can probably fake it with the ni-daq, but I think you are in a place where it makes sense to spend some effort and design something that fits your exact needs from scratch. How experienced are you with hardware design and embedded C? Can you find someone who will work for cheap (maybe an EE student)? A 12 bit 16 channel i2c ADC is a pretty common item and you can find them for a few dollars. The exact one will depend greatly on your requirements. You can also get arm microcontrollers (look at ti's tiva series) with 4+ i2c buses as well as USB for pretty cheap (~$10). That combo would give you 64 channels (one 16 channel ADC per) i2c bus, which would give you essentially pure parallel reading (kilo to mega sample /s range). Add four more adc's (2 per bus) and you have 128 channels at nearly parallel speeds. All of the logic behind controlling the ADC's and buffering the data for retrieval can be handled by the MCU, so interfacing with it from MATLAB can be made very simple (and formatted exactly how you want) Throw in the passives and some input filtering/buffering and you are looking at maybe $30 - $40 in components for a single board, and in the $20 - $30 range for printing 3 pcb's (maybe $100 if you wind up needing something fancy). Then you just need someone who knows how to design, build and program it. (Obviously there is more to it, but that is the gist) When I was in grad school we hired ee students to build stuff like this from time to time. I would consider $1000 for a simple-ish project like this (parts and labor) a reasonable fee.
With the arduino you could read 6 analog signals. The arduino itself would multiplex between each channel. You could program the arduino to wait 50ms before reading the next channel simply by coding "delay(50)". So an ideal situation would be something like this: void setup(){ Serial.begin(9600); } &gt; This is your baudrate or how many bits you want to send over the serial interface per second.. usually its 9600, but could go to 10^6. int BigArray[500]; &gt; depending on data type and size change int and 500... void loop(){ for (int i =0 ; i&lt;500/6;i=i+6){ BigArray[i]=Analog.Read(A0); &gt; So each analog channel is denoted as An, where A stands for Analog, and n is the channel. BigArray[i+1] = Analog.Read(A1); &gt; reading next analog channel. &gt; repeat... &gt; repeat... BigArray[i+5] = Analog.Read(A5); &gt; last channel to read. } &gt; Now we will send it to matlab via serial COM. &gt; Second loop to go through bit by bit for (int i=0; i&lt;500;i++){ Serial.write(BigArray[i]); } } } Thats pretty much it on the arduino side.
Here is the tile function I used function block = tile(X,bs) [r,c,d] = size(X); numblocks = floor(r/bs)*floor(c/bs)*d; % segment the image into processing blocks block(bs,bs,numblocks) = 0; b = 1; for z = 1:d, for x = 0:floor(c/bs)-1, for y = 0:floor(r/bs)-1, block(:,:,b) = X(y*bs+1:(y+1)*bs,x*bs+1:(x+1)*bs,z); b = b+1; end end end It was what my teacher gave us to start with, I just changed it thought. I did the quick change to alpha and am trying to do the same in the other for loops, but am running into issues due to size mismatches. I replaced the x and y loops with this and it isn't working correctly. blk = block(1:bs,1:bs,b); cs = cos((pi/bs)*((1:bs)-0.5)*(u-1)).*... cos((pi/bs)*((1:bs)-0.5)*(v-1)); temp = zeros(bs); for q=1:bs temp(q,:) = alpha(u)*alpha(v)*blk(q,:).*cs+DCT(u,v); end DCT(u,v) = temp(u,v);
What ni daq box are you running and with what OS? In my experience (with brief attempts at fixing what about to describe) there are serious lags in communication with anything beyond win xp. My setup was similar to yours. I would monitor the analog input for a particular event, and when it was detected I would write a digital output. In win xp it was effectively (for my purposes) instant -- on the order of 10s of milliseconds. On win 7 it was intolerably long and highly variable. When it comes to driving a multiplexer, I wouldn't rely on a USB daq device and matlab, even with win xp. You might want to consider using some external hardware, or a more expensive device. 
I second this. You might end up killing A LOT of time trying to solve this with the box you have, and end up with nothing in the end. I would break down the problem with your boss and point out that you're probably going to sink an inordinate amount of time into solving a technical problem with no guarantee of a solution. I'm sure the bigger problem is more interesting rewarding, and worth the extra investment. 
You probably want 2 lookup tables. Can you give an example as to how you think this would work?
Yup... just do "help imshow" and it will tell you this: imshow(I,[LOW HIGH]) displays the grayscale image I, specifying the display range for I in [LOW HIGH]. The value LOW (and any value less than LOW) displays as black, the value HIGH (and any value greater than HIGH) displays as white. Values in between are displayed as intermediate shades of gray, using the default number of gray levels. If you use an empty matrix ([]) for [LOW HIGH], imshow uses [min(I(:)) max(I(:))]; that is, the minimum value in I is displayed as black, and the maximum value is displayed as white. Another way to achieve the same effect is with the `imagesc` command.
Have you considered reshaping the 2D array to a 1D array before taking the mean and standard deviation? Easy enough with the reshape function. 
Let's say you have a 2D matrix called "data". If you want to take the mean and std of the whole array, use this syntax: mean(data(:)); std(data(:));
How do I sum all the values in (v) though? It generates an incorrectly sized matrix. I hoped sumx would accomplish this, but it fails to do so. Edit: Sorry, just to clarify. Since I have to group the images (listA and listB), and then resize the images and take the green channel (this is to simplify the filtering I'll be doing later), I can't just take the mean(listA) or mean(listB).
 &gt;&gt; which sldemo_fuelsys C:\Program Files\MATLAB\R2012b\toolbox\simulink\simdemos\automotive\sldemo_fuelsys.mdl Do you have the toolboxes installed for the demo? &gt;&gt; which cvsim C:\Program Files\MATLAB\R2012b\toolbox\slvnv\simcoverage\cvsim.p 
 sum(v(:)) Edit: Hmm let me see if I understand what you are trying to do. Basically, you have a bunch of images. You want to divide the intensity of each pixel by the mean intensity of the whole image for each image? Or, do you want to find the mean intensity of the entire set of images?
&gt; which is a buyable add on right Everything is a buyable add on.
Haha. ok thanks for answering my questions quickly!
I think I understand what you want. You want a 'grand mean' in each channel over all images. %pretend we have 2 images, image A and image B, lets grab the green image_A_green = image_A(:,:,2) image_B_green = image_B(:,:,2) % make a single vector of green from both images all_green = [image_A_green(:) image_B_green(:)] %mean and std of both green_mean = mean(all_green(:)) green_std = std(all_green(:)) %apply to original images image_A(:,:,2) = (image_A(:,:,2)-green_mean)/green_std image_B(:,:,2) = (image_B(:,:,2)-green_mean)/green_std
My problem is summing all the images in a group (listA or listB). I'll then find the mean and standard deviation, which should hopefully be two separate matrices with equal dimensions (471x322). When I take an image from the list (in the filtering stage, not included here), I want to use the mean and std dev matrices(because the images are also 471x322) to normalize its intensity values. I hope I made that clearer! 
Okay, so I plugged in sum(v(:)); and placed v in allNorm. allNorm now shoes the correct dimensions, but the mean and std dev are both 1x322. I'm a step closer. Thanks for the help!
Seems fairly interesting - however you (or the author) has fallen for the usual trap: working the numbers without analysing their meaning in the context of the problem. Without any further information aside from the title, this could be any other controls analysis. Is this a possible controller for handling the aircraft?
The code works fine for me. Did you place the function in an M file named "reversal.m"? Also, you might be interested in [fliplr](http://www.mathworks.com/help/matlab/ref/fliplr.html).
Function y = f(x) y{1} = 4; y{2} = rand(50); Etc.
Excuse my ignorance, but how do I place a single function in an M file? I'm just starting to use matlab.
Simulink V &amp; V is only available for Standard and Academic licenses (Not home or student). It is targeted toward software certification for automotive and aerospace firms and will run you $500 - ~$2.5k.
This documentation page explains how to create a function and save it: http://www.mathworks.com/help/matlab/matlab_prog/create-functions-in-files.html Before you create the function you will need to launch the MATLAB editor. You can do so by typing edit in the MATLAB command prompt. 
You can mux the inputs, but different sample times can make this dicey. The easiest way is to use two look up tables. Create a copy of the look up table by right clicking the block and dragging it. If you want to reuse the same break points and table data, use variables for the parameters in the block parameter screen and define those variables in the base or model workspace.
So if this is my function statement: function [ca, avgnca, avgcac, stdevnca, stdevcac, pvalue]= pdb_analyze(pdbid) How would it work? 
yea it would be for industry work. However, it turns out when my boss told me to make sure we can verify and validate our code, he just meant to make sure matlab runs properly. So thanks for the help though!
One line has [ca avgnca...] = pdb_... The next few lines will be : Y{1}= ca; Y{2}= avgnca; Etc
Yes I already did it with two lookup tables. I was hoping to make it more compact by using one. Thank you. :) I wanted both the input conditions to be matched and give me two outputs. for eg : when value of a=1 and b=2, values of c and d should be 3 and 4 respectively. Both c and d should have a value for particular values of a and b.
thank you. I'm going ahead and doing it with two lookup tables.
Static gain error is 80%. That is a lot of error; to me, it's practically useless given that. You should write how you "iterated" on the lead-lag parameters. There are systematic ways, and non-systematic ways to do that. Just changing the parameters is non-systematic. 
The system that is modeled in this article is actually non-linear but it is represented by a linear time-invariant transfer function. This transfer function will probably work for a small range of inputs and outputs. These assumptions have to be verified. Your input into the plant is the elevator deflection angle and if you are not careful with your gains you might end up with a simulation where the commanded input is 180 degrees, which is physically meaningless. One way that one can verify the commanded input for a closed loop system is to derive a transfer function for delta/theta_des That transfer function should be delta/theta_des=C/(1+CP) You can plot the commanded input via the step command. See code below (this should be right, but it is pretty late here): s = tf('s'); P_pitch = (1.151*s + 0.1774)/(s^3 + 0.739*s^2 + 0.921*s) K = 10; alpha = 0.10; T = 0.52; C_lead = K*(T*s + 1) / (alpha*T*s + 1); sys_cl_u=C_lead/(1+C_lead*P_pitch); step(0.2*sys_cl_u); %give 0.2 amplitude step 
Could you take a screen shot of what you're talking about? Because your description makes absolutely no sense. &gt; when a=5 and b=7, values of c and d should be 13 and 38 (no mathematical relation)). and then you say. &gt; a= 5 , c= 13 and for b = 7 , d=38. Which sounds like it does what you want it to do. 
 function outcell = pdb_analyze(pdbid) % "stuff" means whatever calculations outcell{1} = stuff for ca outcell{2} = stuff for avgnca outcell{3} = stuff for avgcac outcell{4} = stuff for stdevnca outcell{5} = stuff for stdevcac outcell{6} = stuff for pvalue 
1. I recommend using **fullfile()** for concatenating the folder name and *.mat. This will avoid duplicate or missing file separators ("/") and get the in the right direction ("/" vs "\"). 2. Look at the contents of the variable lData. **dir()** returns a data structure array with several fields, the most important of which is **name**. You need to index into the array (lData(1)) and then pull the field **name** out. Like this: &gt; AllFiles = dir(fullfile(d2, '*.mat')); &gt; FirstFilename = AllFiles(1).name; &gt; FirstFileFullPath = fullfile(d2, FirstFilename); &gt; D = load(FirstFileFullPath); &gt; Note this isn't the most efficient way. This is demonstrating how to get the FIRST file in.
`lData` is a cell array, you cannot index it with a string as you do here.
&gt; Everything is a buyable add on. I lol'ed
I'm using an NI 6008 and Windows 7. Interesting. So Windows XP is faster? Yeah, it really sounds like my best option is to use some external hardware to switch, read and buffer the voltages that I'm reading. I'm in the process of tracking down some EE students who might be willing to do this. But that's likely going to take a few weeks, in a best-case scenario. So in the meantime I'm trying to be as creative as possible in speeding things up. It sounds like you might have used the listener functions and background data acquisition. Do you know if there is any way to use these tools to quickly scan and return very short scans? The thing is I'm not listening for an event--I'm just trying to scan everything as quickly as possible.
Thanks for the info. I'm trying to find someone from the EE department now. 
Or you could, in calling the function, have Y = cell(1,nargout('pdb_analyze')) [Y{1},Y{2},Y{3},Y{4},Y{5},Y{6}] = pdb_analyze(pbdid);
Thanks for the reassurance. I will write it up in java and try and convince him
Try [this](http://www.mathworks.com/matlabcentral/fileexchange/27627-plot-google-map)
This is because it is a 1-D lookup table. I want it to be a 2-D lookup table, value of c *has* to depend on value of b as well as a.
Well first of all, I am not sure how many clusters I will have in my dataset - so doesn't that bar me from using kmeans? I thought to use kmeans you need to specify how many clusters you want identified
Yea, that's a problem if you need the algorithm to be completely automated. If you can run it for a range of k and then choose the best fit manually, then it's not. You said you tried other clustering algorithms too, what other problems did you encounter with those? FYI, I'm far from an expert at clustering, I just noticed that your OP left a lot of unanswered questions that I think will prevent many people from being able to help you.
NostalgicForever's link looks pretty neat, but if you want something a little simpler, more self contained, you might use UTM: http://www.mathworks.com/matlabcentral/fileexchange/10914-utm2deg
looks like embedding whos in the function/matlab file shows the memory usage of the call. 
Bookend your code with this: profile on {code . . } profile viewer It will show you a report. You can also generate a pdf. help profile shows the details.
I do not have the theoretical background (signal processing, etc) to really help with this but just thinking about it from a pragmatic point-of-view, maybe the following approach would help. **warning:** I really do *not* know what I am talking about so take this with a grain of salt. I'm pulling this out of my butt. Anyway, I could imagine some iterative procedure as follows. Step 1, remove non-clustered points. Step 2, determine remaining clusters. Iterate as needed Step 1: * Calculate the distance between every pair of points (see [this](http://www.mathworks.com/matlabcentral/answers/52417-how-to-quantify-the-spread-separation-of-points-on-a-circle) for a vectorized way to do that). * Now, you have to operate on row-wise or column wise (either way), but you can remove any row/column that does not have at least one value within some tolerance. (This removed non-clustered points) Step 2: * Select a single remaining point (at random I guess). You know this is a cluster of some kind * Use the same function but instead of operating on itself, operate on that single point (or, use `bsxfun` to quickly calculate some euclidean distance). * All that fall into a tolerance are grouped and removed from the previous set of points * Iterate until all clusters are accounted for **Edit/Addendum:** As I think about it more, my instinct to warn you against just going with this was right. This algorithm is pretty darn bad. See my [comment below](http://www.reddit.com/r/matlab/comments/27smhj/cant_figure_out_how_to_find_clusters_with_a_set/ci50q45)
This is not that unusual, and quite easy to do in Matlab. In fact, there is even an example GUI that shows you how to do it - this would be the iconEditor example code. It doesn't appear to be present in r2014, so I uploaded the r2013 copy here https://mega.co.nz/#!g5w3EB6I!r35EPXbuWe9hiamDmJelW3gWZVoyjpttDw2gzzC_x3o Most of the code is actually just making the GUI pretty. I'll make it easy for you - the guts of the code are lines 60-62 which set the callbacks for mouse clicks, localEditColor() on line 259 which gets the coordinates of the clicked point, and localUpdateIconPlot() in which line 332 is the only part that *really* matters, where the data property of the plot displaying the matrix is updated. This example code uses the surface() function to display the matrix, but I actually think imagesc() would be a better choice.
Wow, you're awesome! Thank you so much!
I still maintain I do not really know what I am talking about, but I made a test problem (with the union of a few shifted and scaled `randn` calls) and it worked. Below is the code I made to do it. Note that it does not iterate. It is far from perfect but it kinda works %% Make data. Because it is random, I do not always expect it to work ungrouped = [ ... bsxfun(@plus, 0.10.*randn(20,2), [0.2 0.4]); ... bsxfun(@plus, 0.08.*randn(10,2), [0 0]); ... bsxfun(@plus, 0.20.*randn(05,2), [-0.5 -0.24]); ... bsxfun(@plus, 0.01.*randn(11,2), [1 -1]); ... % really tight bsxfun(@plus, 0.15.*randn(20,2), [0.6 -0.8])]; % Add some random points that may or may not fall into a grouping ungrouped = [ungrouped; 2.*rand(8,2)-1]; ungrouped = ungrouped(randperm(size(ungrouped,1)),:); % Random order % Plot: plot(ungrouped(:,1),ungrouped(:,2),'*');pause;hold off ax = axis; % fix them %% Step 1 loner_tol = 0.3; total_dist = interdist(x0); % This is that function I liked to total_dist(total_dist==0) = Inf; % So they won't interfere cut_ix = all( total_dist&gt;loner_tol,1); loners = ungrouped(cut_ix,:); ungrouped(cut_ix,:) = []; % view remaining now and pause plot(ungrouped(:,1),ungrouped(:,2),'*');axis(ax);pause %% Step 2 i = 0; tol_group = 0.4; while ~isempty(ungrouped) i = i+1; % Pick the first point and make it its own cluster x = ungrouped(1,:); dist = bsxfun(@minus,ungrouped,x); dist = sqrt( sum(dist.^2,2)); clusters{i} = ungrouped(dist&lt;tol_group,:); ungrouped(dist&lt;tol_group,:) = []; % view remaining now and pause plot(ungrouped(:,1),ungrouped(:,2),'*');axis(ax);pause end Ok, so it isn't perfect. But this was a nice distraction from real work
Interesting! Here's what I've done so far: %Distance Calculator For 3D Points Set_Thresh=10; A=[1 2 3; 4 6 9; 9 1 2; 9 9 9; 2 2 2; 2 1 5; 2 8 9; 2 20 40; 1 0 9; 10 4 1; 8 8 8]; %A is your data matrix containing coordinates for all 3D points in space %this can be obtained from excel later on as a user input file %The unique parameters of A can be defined later, after the USER has %selected the appropriate data range size for k=1:11 a=k; for k=1:11 Distances(k,a)=sqrt((A(k,1)-A(a,1))^2+(A(k,2)-A(a,2))^2 + (A(k,3)-A(a,3))^2); end end % %Distances is a matrix containing the spot to spot distances %You can either use that, or generate the below matrix, Distance_test to %see if the spot to spot distances meet you Set_Thresh criteria % for k=1:11 a=k; for k=1:11 if 0&lt;Distances(a,k) &amp;&amp; Distances(a,k)&lt;Set_Thresh Distance_test(a,k)=1 else Distance_test(a,k)=0 end end end Basically, I've spit out a matrix called Distance_test which tests every two-point combination to see if it meets the tolerance criteria (Set_Thresh). If there is a 1 in Distance_test, it meets the criteria. A 0 if not. Now how would I use *this* matrix to test all the 3-point combinations? Basically, I see that points 1 and 2 and then points 1 and 3 meet the tolerance. And then Points 2 and 3 meet the tolerance. So for my purposes, that is a "3 point cluster". I want to count such clusters in my set.
Also, I have found that the number of coefficients only increases by 1 when I increase the number of knots. How can this be a cubic spline?
Oh man, I just figured it out. In the UNLIKELIHOOD that someone else will have the same problem, fn2fm fixes the problem. Cheers. 
yes interpolate, look at [interp1()](http://www.mathworks.com/help/matlab/ref/interp1.html) for 1D interpolation
 Prc95 = prctile(StatMat, 95); ScaledMat = bsxfun(@rdivide, StatMat, Prc95); This is the idiomatic way. Check out the documentation on `bsxfun`. It's amazingly versatile. 
Yep, that did the trick, thanks!
Ok, so I keep on thinking about this (instead of doing work...) Anyway, while the my algorithm should work for some sets of data, I'd argue it isn't very robust. Consider a few issues: * non-clustered and uniform data. Suddenly no points get ignored and your clusters become based on which point you test first. And the final clusters become dependent on tolerance. If your result is so sensitive to those things, you have to ask yourself if you're modeling the data (which you want) or are you modeling the method (which you don't) * What if a cluster isn't round? I look in a circle (or sphere) around that points * Or, what if the point I pick is on the edge of some cluster? It may miss most of it Basically, my warning of me not being an expert and taking what I say with a grain of salt was correct. Proceed with **extreme caution**
 rng('default'); StatMat = rand(130, 10); Prc95 = prctile(StatMat, 95); ScaledMat = bsxfun(@rdivide, StatMat, Prc95); &gt;&gt; size(Prc95) ans = 1 10 &gt;&gt; size(StatMat) ans = 130 10 &gt;&gt; size(ScaledMat) ans = 130 10 Do not see the problem. 
Your loop starts at i=a, not i=0 like you say the program should. You need to loop from i=0 to b, and display the value when i&gt;a. So you will need an if statement inside your for loop
You don't seem to have read the documentation about bsxfun. You won't understand until you do. Bsxfun expands the matrices to the same size along all dimensions of length 1. That is, you have a 51400x130 and a 1x130 so bsxfun will effectively repeat the second matrix along the first dimension, before doing the division. It is more efficient but the same as using repmat. For example (not at my computer so hopefully this works...) d= bsxfun(@rdivide,a,b) is the same as c = repmat(b, size(a,1), 1) d = a./c Both of these methods solve the mismatched dimension problem, but bsxfun should be more efficient. 
I messed up something earlier on in my script like a dummy. It works just fine. Sorry about that.
Thank You! It worked !
Thanks for the additional explanation. I actually read it then doubted my understanding, not even considering that I'd messed something else up beforehand.
Is there a paper somewhere outlining the method? It's sometimes hard for us academics to use it without one to cite. Am I right in thinking it's a general nonlinear optimization toolkit that supports manifold constraints, or is there something more to it? Edit: [found it](http://arxiv.org/abs/1308.5200)
So you have an explicit function z = f(x,y) = sin(x)+ln(y) and you want to plot it over a x-y domain in the z direction? x = -5:0.01:5; y = -5:0.01:5; [Xgrid Ygrid] = meshgrid(x,y); z = sin(Xgrid)+log(Ygrid); Here is where you have some plotting options: - contour() gives you a 2-d contour plot in the x-y plane - contourf() gives you a 2-d **filled** contour plot in the x-y plane - surf() gives you a 3-d surface in x-y-z space Play around with each of them as well as their little quirks and see what works best for you. Documentation is: using Google: "matlab + &lt;functionname&gt;"
The command you want is `legend`. You can pass a cell array of strings.
[Here's the legend() documentation..](http://www.mathworks.com/help/matlab/ref/legend.html) Not using OEDs, but here's an example: x = 0:0.1:100; plot(x,2*x,'b') plot(x,x^2,'r') plot(x,1/x,'--k') legend('2x','x^2','1/x') There are several ways you can specialize the legend location (and more contents). The legend shows linestyle and the name associated with it, and if you could guess by my example, names the lines in the order they were plotted in (some funny business can be done to ignore every other line, such as if you're plotting 3 data sets and their linear fits, but only want to specify the 3 data sets). You can also make plot calls like: plot(x1,y1,x2,y2) to plot 2 data sets in the same plot call. I'm not sure how the legend works out as I don't plot this way, but I imagine legend('data1','data2') would work just fine.
Can I use this to fit data?
This sounds like an introductory DSP course project.. [Matlab image processing toolbox](http://www.mathworks.com/help/images/examples/index.html) offers pretty much the exact functions you need. Take a look
Have some images to share so we can try to offer more concrete ideas. Sounds like color segmentation or simple thresholding of the grayscale converted image right work based on your description. 
Seconded. If you could throw some images on imgur to help us understand what you are looking at, that would help. Also, I am unsure what "predict" means in this context. 
What do you have in mind?
I would like to fit non-linear functions to data. I currently use nlinfit, but I've been looking for something that can do total least squares. It looks like the toolbox can do weighted non-linear least squares (trust region solver) which is what nlinfit does, but I need a non-linear fitting function that includes the measurement error of the x-axis as well as the y-axis (i.e. total least squares). I was wondering if this toolbox can do that.
Pedantic but all skin (beneath what you see) is vascularized. Why don't you start simple and record a video of your wrist and do some exploratory analyses to see what channels or what linear combination of channels is best phase locked with your pulse? If you're restricted to using your phone you can likely rig a circuit to track your pulse And log this as audio with video to see what the best predictor is. The next step would be to take your model and see whether or not it works for your face data. 
Sorry, here you go: [Link](http://imgur.com/uGipCf4) By predicting i mean that i have some images with and without the streethlight, and when i get a 'new' image i want to check if it have a streetlight in it or not. 
Cool application :D 
I would add `pcolor` to the above list. It is like `contourf` but not contours. It is basically `surf` viewed from above
How long is your video? Is is possible that your 'background' frequency peaks are occurring because your time series is not periodic? Have you tried windowing your FFT i.e. fftMagnitude = abs(fft(filtBrightness*hamming(length(filtBrightness))); Some other notes - line 37, it looks like you're taking the mean, but you are dividing by the size of the original frame, not the size of the section of interest. You should use the (:) syntax to write your 2D matrix as a 1D vector, and then take the mean of that i.e. brightness(i) = mean(colorPlane(:)); - line 52, you should use 'end' instead of getting the size of the matrix again 
First of all, thank you SO much for the help. Line 37: great catch, and great suggestion about 1D. I made corrections. I was transplanting code from the website I linked and overlooked both points. Line 52: Another great point, correction made. This code is definitely a hack job with respect to cleanliness and proof-reading. So I apologize for the amateurish appearance and logic for now :) Cleaning up the logic and syntax when I am not so tired. I added the hamming filter but the issue is in the input signal. It has a very visible 5 and 10 Hz component before any alteration via filtering/code. Not sure if it is all of my cameras having the same issue? Or maybe how the videos are encoded? So I took a video of my finger right on my camera phone with the light on and got a beautiful peak that closely matched my manually taken heart rate both before and after exercise. I took a video of a red box (inanimate) and those 1,2, 5 and 10 Hz background peaks showed up all with similar prominence. BUT, the thing is that my finger was so clear that the background signal is insignificant, so telling the difference between inanimate and living should be straight forward under those circumstances despite the fact that I have a 1Hz frequency peak in the box analysis. Here's the thing, once I start backing the camera off my finger and onto my face or with air between my finger and the lens, I have a feeling the background signal will pick up dramatically, then I will start having issues. I'll keep running my experiments (backing away and moving to forehead) and keep you posted. For those interested in how one could extract heart rate from an iPhone video of their finger... well that code is a good 1st intro into it. 
Thanks! Take a video with your finger right up to the lens of your camera phone with the light on and run it through the code. You can see how one can extract the heart rate from the video signal. 
Thanks for the comment. What I meant by vascularized was perfused with blood. I should have been clearer! I have access to ekg readouts if we want to see it match the code output, but right now I want to see if I can extract any physiological signal from a distance. I am having issues with this "inherent" signal coming from either the camera, the transfer of the video file, or something before the code is run. That signal is corrupting what I assume will be a weak signal as I get further from the skin. There have been papers that stated green or hue are the best options for this type of analysis: for those interested : [paper](http://saki.siit.tu.ac.th/icictes2014/app/webroot/uploads_final/34__a70e4c7c28921f35e22a6f6350f272ab/A%20Comparative%20Study%20for%20Heart%20Rate%20Measurement%20in%20Video%20Sequences.pdf) So this kind of thing has been done successfully before but I haven't been able to recreate the results yet. 
Oh, and the videos are usually 10-20 seconds
In that case I'm not sure this package is what you need. The idea is to optimize over a certain manifold constraint, for example if you want your solution to be a low-rank matrix or an orthogonal matrix.
Your best bet is to call the installation support team. As long as you have a legitimate license, they will help you install MATLAB. You can find their contact details here: http://www.mathworks.com/support/contact_us/?s_tid=sp_ban_cs You may also want to search the installation help articles and see if the issue that you are experiencing is documented there: http://www.mathworks.com/support/install-matlab.html 
I had a problem similar. Turned out to be an issue with my java installation. I don't have any links, but try some searches about reinstalling or fixing java with respect to matlab. Hope this helps. 
Aight, thanks for the info.
thanks, that is the closest thing on forums I've found so I'm trying that now
Are you sure your new implementation actually sorts the list? To me it seems that you could get m=0 by accident. That is, you might go through the for i=1:n loop and accidentally only hit pairs of values which already are in the correct order. This will not increment your sorting check variable m, making it look like your done sorting. This will become more and more likely as your list gets sorted. Try this: n=10000; A=zeros(1,n); m=1; iterations=0; for i=1:n A(i)=randi([1 1000]); end while true for i=1:n x=randi([1 n-1]); y=randi([x+1 n]); if y==x y=y-1; end if A(x)&gt;A(y) z=A(y); A(y)=A(x); A(x)=z; iterations=iterations+1; end if i ~= 0 and A(i)&lt;A(i-1) m=m+1 end end if m&lt;1 break end m=0; end A iterations What it does is use your old checking mechanism in the new implementation. Shouldn't cost *too* much processing power. I don't have MATLAB installed, so you might run it instead and tell me about the results. I suspect it will take a lot more time. Several orders more actually.
In the last few iterations of matlab, loops have used JIT compilation and so aren't nearly as bad. Still relatively worse than logical indexing, but not a large absolute time sink. 
The other commenters who suggested that the "random sort" program might not actually sort correctly are right -- I just plugged them both into Matlab and confirmed. You may not have noticed before, because the output of the random sort is *somewhat* sorted... but there are still many out-of-order values. I've spotted at least one bug that can lead to this (just took a quick look -- there might be more), but will leave it to you to figure it out on your own, since debugging is a great learning experience. Here's a hint to get you started: The values are actually sorted better towards the end of the list (fewer errors when the values are larger), but there are lots of errors towards the beginning. This is not a coincidence. Why might this be? If you really have trouble, leave a comment to let me know and I'll give more hints.
&gt;The last thing I noticed is that you use &gt; &gt; A(x)&gt;A(y) &gt; &gt; to compare your values. In general this could cause a problem in Matlab since, depending on the format of the array-entries, it might return True even if A(x) == A(y) which might occur in your case. Since randi produces integer values, your comparison will still work, but for other formats, this could cause an issue. Can you provide an example of this? I can't think of a single situation where both A(x) &gt; A(y) and A(x) == A(y) are true.
I meant A(x) == A(y) in a non-Matlab kind of way, but if they are actually the same number. E.g. if you try (1.001-0.001)==1 it should obviously be true, yet it returns 0 while (1.001-0.001)&lt;1 returns 1 Edit: Spelling as usual
You can try using this argument in profile: profile('-memory','on') code Then after the code enter profile viewer to get a summary report. To turn memory off I believe the option to pass is profile('-nomemory') though you can find more out by doing edit profile.m to see more details.
You are correct. The first time I looked over the code, I thought this error might result in an infinite loop in his sorting algorithm depending on the input values. This, however, is not the case. Thanks for clearing it up
Why are loops so bad? (I'm a programming noob)
Unfortunately and AFAIK, you have to manually enter the legend entries. This can be done as Halsey117 said or you can enter the name when you write the plot function and just put legend after all plots are made. For example, lets say you plot X, Y and X, Z plot(X,Y,'-k','displayname','function name 1'); hold on; plot(X,Z,'-r','displayname','function name 2'); legend('show') What this will do is assign names to each plot curve and the legend command will "automatically" show whatever you wrote in the 2 displayname texts, in this case, you will see two entries labeled function name 1 and function name 2. 
If you only have that 1 cut point, you can do C=mean(B.*(A&lt;3)); D=mean(B.*(A&gt;=2)); Just some examples...
I just reread your post and realized that your looking for not operating on a matrix. Look into griddata to convert an ordered pair input (scattered or not) and then you can use surf or the others mentioned here
Minor point: You don't need the periods here. (Edit: By "don't need," I really mean "don't want at all." Unless I've missed some very recent major update to the Matlab language since installing the version I have, the code with the periods won't run. But take out the periods and those examples are good.) OP, more generally, look up the concept of logical indexing in the docs. You can do things like your first example with mean( B( A&gt;0 &amp; A&lt;2) ) (This also assumes you're familiar with logical operators like &amp; and | )
Loops are not universally bad, and in some programming languages (for example, C), they're the only way to do a certain task. But Matlab is optimized to do many types of operations on vectors/matrices of numbers all at once, and putting things in a loop really slows it down. Not a huge problem for simple little scripts, but when you get into heavy data processing, you want everything to run really fast. So for example, if you wanted to add up two lists of random numbers, you could do this: a = rand(100,1); %makes 100x1 vector of random numbers b = rand(100,1); %ditto c = zeros(100,1); %makes vector of zeros to store the sums in for i = 1:100 c[i] = a[i] + b[i]; end However, that's going to run much slower than this version, which does the same thing: a = rand(100,1); %makes 100x1 vector of random numbers b = rand(100,1); %ditto c = a + b; It doesn't matter much when you're just doing 100 operations, but when you start to work on hundreds of millions of values... that's another story.
If it is a distance in terms of pixel count then isn't this area a square? Am I missing something? 
thanks to both of you!
Thanks! just a note, it only works with B(bin==bin(1)) B(bin==bin(2)) But I assume this is what's intended?
Next time, put four spaces at the begining of a code line and it will format correctly. Otherwise, reddit tries to turn the `*` into an italics control character. Like this: C=mean(B.*(A&lt;3)); D=mean(B.*(A&gt;=2));
Nope, /u/CaptainLunatic (despite his/her name) is right. Check it again. After executing this code, the variable `bin` contains bin indices from a histogram... i.e., where `bin == 1`, the values in A fall into the first bin (between 0 and 2) and where `bin == 2`, the value sin A fall into the second bin (between 2 and 4). Now if it so happens that the first value in A ( i.e. `bin(1)` ) is actually in the first bin (0-2 range) AND the second value in A ( i.e. `bin(2)` ) is in the second bin (2-4 range), the two will come out the same. But that would just be due to random chance. CaptainLunatic's code is the correct way to do it.
Ah, I see why they were there now. I was on mobile originally and the italics didn't show up. Good catch by /u/Mimshot. However, I should note that even with the asterisks put back in, the code still isn't correct. When you multiply `B.*(A&lt;3)`, you don't remove all the values where A &gt;=3; you replace them with zeros. So when you then take the mean, you're not taking the average of all the values in B where A&lt;3; you're taking the mean of all the values in B where A&lt;3 AND a bunch of zeros. Which is not what you want. The correct way to do it would just be to use logical indexing straight up, with no multiplication: `C=mean(B(A&lt;3));`
Upload a picture for a few different scenarios if possible. In this picture, I'd make an image mask (binary) for certain color values that match only the light or post and count the size of the binary objects to filter out anything that is too big or small to be a light. You could even make sure the two objects are close or touching. This set of functions will be vital: http://www.mathworks.com/help/images/object-analysis.html http://www.mathworks.com/help/images/pixel-values-and-image-statistics.html In particular bwarea colorThresholder That would be my first go at it. The key will be coming up with a consistent and reliable measure to distinguish light/pole from everything else. Hue and/or RGB color values may be the simplest way to do this. I probably wouldn't go the route of edge detection or "shape" detection yet because that can be much more difficult and less reliable. Depends on your images, however. That would include functions such as edge().
I would also take a look at the Matlab documentation for the other ode* flavored functions. So to answer your question, the answer is yes, you can solve these; Matlab has specific functions designed to deal with stiff systems. I do, however, have a couple of questions: * What were the "semi-relevant" things in the other courses? * Is the following line a typo? It makes for a redundant equation so you now have a system of five ODEs in five variables instead of 6. x3 = t^-0.5
I think ode45 should work for you. At the very least it should give some results. The fact that you wrote equation 3 like that makes me a little concerned. How are you managing equation 3? You can't treat it the same way as the other equations. I would eliminate x3 in the other equations by substituting equation 3 for x3. 
* Basically what I described in my answer (usage of ode45 and solving the heat diffusion equation with FTCS and Crank-Nicolson) * I should have been more clear about that. We solved that the same way /u/gyp_casino described.
 p = primes(n); [px,py] = meshgrid(p); primemat = tril(px+py);
Hey, thanks! I remember reading about meshgrid, but it's one of those things that I hadn't had to use before, so it doesn't come straight to mind.
Are you expected to find solutions starting at t=0? Sometimes it is also useful to have asymptotic solutions, for example statistical information for large t in a chaotic system. This would avoid dealing with t^(-1/2) for t near zero. Otherwise, yes, you could try implicit methods. Instead of x(n+1) = x(n) + dt * f(x(n)), you instead solve x(n+1) - dt * f(x(n+1)) = x(n) at each time step using Newton's method. It'll be messy, for sure.
I hope this means that hg2 is ready for prime time. Yair Altman has some nice articles about hg2, an upgrade to the graphics system that's been in the works for several years. The plots don't look totally different, they look like improved versions of the current plots. Think better antialiasing, better font rendering etc. Another big difference is that you can directly set the properties of graphics objects without using set or get. For example, if ax is the handle to the current axes, the following are equivalent xlim = get(ax, 'Xlim') set(ax, 'XTick', 1:10) And xlim = ax.xlim ax.xtick = 1:10 Which is much nicer. You can try out hg2 today with appropriate command line switches, but it is still incomplete e.g. In r2013 saving the figure made some parts disappear. Although you might think your Matlab figures are pretty awesome, there are still plenty of ways they can improve the system. Not saying they will do these things, but some of the things on my wish list are: being able to save an OpenGL-rendered figure as a vector image, being able to use a log-log scale with the OpenGL renderer, and better intersections between transparent surfaces in 3D. Oh and squares in eps files actually being squares, not pairs of triangles!
I just installed 2014b and made a few simple plots. Here are a few [comparison shots between 2014a and 2014b](http://imgur.com/a/w3DsQ). Definitely an improvement, especially on text.
Appears as if Mathworks stumbled across Oliver Woodwards excellent "export_fig" function. Figures seem very similar to those outputted by his function
Looks like they're playing catchup with matplotlib for python which has been antialiasing lines since the beginning. Older versions of matlab had this as an undocumented feature set(0,'HideUndocumented','off'); called 'LineSmoothing', but it was quite buggy. Hopefully it's sorted out now. Matplotlib has another beautiful feature where in [3D scatterplots](http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#scatter-plots) it desaturates the color of the markers based on how far away they are from the viewer. I'd love to see this in Matlab too. 
Ask for your output variables (note that "rows" and "columns" in this case are variables, and you can name them whatever you want): [rows,columns] = size(m); if you only want the rows and don't care about the columns (or vice versa), you can replace the variable you don't want with a tilda: [rows, ~] = size(m); Lots of functions have little tricks like this. Try looking at the help dialogue for function to learn the tricks.
Thanks, that's cool but not what I'm after. I want to index into any array returned by function and extract an element or sub-array or whatever. Cheers
It's not pretty, and produces virtually unreadable code, but you can do this with subsref() Subsref is the method MATLAB calls when indexing a variable. E.g. `A(1,1)` Is actually run as `subsref(A,s)` Where s is a structure defining the indexing. So to index into the output of a function (e.g. size), you could do something like `S.type='()' ; S.subs={2};` `B = subsref( size(A), S )` The full documentation is here: http://www.mathworks.com/help/matlab/ref/subsref.html Interesting addition: you can overload subsref in a classdef, allowing you to define custom indexing behavior for objects. 
You can crudely do it using eval(), but that isn't very clean, nor as fast as just doing it in 2 or 3 lines. Fewer lines of code doesn't mean faster.
Yes, some time ago I thought the same as you: doing size(m)(1). Later I discovered that you can do: size(m, 1). It works.
Thanks for the info. I am on my phone so I can't find it now, but for the color rectangles, look for fix_pcolor_eps or something like that. It fixes it in most cases. Also, I am not saying my plots can't be better or that this won't make it better. I am simply worried some of the things I do to make it better may break. 
This is what I have done in most of my things too. Just be careful to remember what the function needs when cleaning up the workspace. 
I wasn't aware that this was an issue -- good to know because I'm going to be in the market for a new MBP soon. What is the issue, exactly? 
This. What are the retina problems? I'm running 2013a on a 15" retina and haven't had any issues.
Also running 2014a on a 15" retina. No issues. 
Really? According to MathWorks (and everyone I know with a retina MBP) this issue is universal. You can read more about it in the official support response here: http://www.mathworks.com/matlabcentral/answers/102946-why-does-the-matlab-desktop-look-blurry-when-using-matlab-8-2-r2013b-on-my-mac-with-retina-display You can still use MATLAB just fine, but everything is a little blurry. It is very obvious to me, but I guess it may not be noticeable to everyone.
It only affects 2013b and 2014a. 2013a still uses your system JRE instead of a built in version.
Oh I guess I see it now. Hmm. I'll live as long as matlab still does its thing. As long as matlab still does its thing its not going to bug me much. 
Could also do: p = primes(n); primemat = tril(bsxfun(@plus, p, p'));
I don't understand why this is upvoted more than the (seemingly) reasonable answer of just inputting the desired dimension in the size() function as the 2nd variable. Am I missing something? Is there some reason one would want to do it the way you describe? I don't mean to sound like a dick. I'd just never heard of subsref().
The size function , size(m), outputs the dimensions of the array in the form (rows, columns). You can also narrow down the output to either rows or column in the following way * size(m, 1) -&gt; this will give you the number of rows in the arraw m. * size(m, 2) -&gt; this will give you the number of columns in the array m.
Instead of a constant block with the value 20, use the output of the while iterator subsystem and a memory block where you define the initial condition (20) like this: [solution](http://i.imgur.com/W0NsKEa.png)
Thank you. Is there any way I can use the value from the constant block to set the initial value of the memory block? For eg, store it in a variable and then set the initial value of the memory block as the variable?
You can do that by putting the variable name in the initial value box of the memory block, no need for an extra block. EDIT: Or if you really want to use an external signal for the IC for some reason, use a "Unit Delay External IC" block instead of a memory block. 
Thank you.
But...if my code doesn't look pretty there's no reason to have it.
Op wanted a generalized use case, and in general this is how you do it. You are right though, for size it is a little silly. The main place I have used it in the past is to allow me to get cellfun to output a (numeric) array when working with a function that only returns a structure. The alternative is multiple calls to cellfun (one to generate a cell array of structs and one to index therm), but this is slower and less memory efficient (you have to store a lot of data you don't care about) than doing it on a single line.
I do not think the intensity of color change in skin will enable you to extract heart beat. The FFT is going to be very noisy. With an extremely low SNR from the color intensity change, you will never extract the heart beat frequency from the video. Furthermore, measuring which regions of skin are perfused with blood is many times more difficult because you have even fewer pixels to work with (even lower SNR!). Frankly, I think this is a good idea that will not work.
Nailed it
I see that now. I don't think his clarification was up when I posted. This makes a lot more sense!
Have you tried anything yet?
Here are a couple more things you can try. 1. Use optimset to set some integration parameters. You can for example force the integrator to take very small steps. 2. Decide if the system is stiff. If the coefficients in your equations differ by several orders of magnitude this is likely the case. If this is the case you should try one of the stiff integrators. It also is very beneficial in this case to supply an analytical Jacobian. The documentation for the stiff integrator should explain how to do this: basically you would derive it on paper and then write a .m file to return the result. 3. If the various x variables cannot physically be less than zero (for example if they are chemical concentrations) there is an option to force the integrator to keep them positive. 4. Always keep open the possibility there's a bug in your code. Take a look at what your rate function is returning as the derivatives for x1, x2, etc. Does it make sense?
Come to the microcontroller side and bask in our elegant coding. #include &lt;Wire.h&gt; // Used for I2C #define PRESSURE_ADDRESS 0x28 #define BRIDGE1 0x01 //Data Byte 1 int btnPin = 2; long count = 0; long stTime = 0; // state tracking variables int btnState = HIGH; int lastBtnState = HIGH; int active = LOW; // Active/Passive mode flag. If low, we're in standby. If high, active. long lastDebounceTime = 0; long debounceDelay = 50; void setup() { Serial.begin(115200); Serial.println("Starting up the SSCDANN150PG2A5 Pressure Sensor program..."); Wire.begin(); //Join the bus as a master Serial.println("Sensor Ready."); } void loop() { int btnRead = digitalRead(btnPin); if(btnRead != lastBtnState){ // reset the debounce timer lastDebounceTime = millis(); } // if the reading hasn't changed in the debounce delay time, then it's valid if((millis() - lastDebounceTime) &gt; debounceDelay){ // Check to see if the button is different from the current state if(btnRead != btnState){ // update the state btnState = btnRead; // if the button is pressed, toggle record on/off if(!btnState){ // see if we're toggling on if(!active){ Serial.println("Recording Data:"); active = HIGH; // toggle into active mode count = 0; stTime = millis(); } else{ active = LOW; // toggle into passive mode Serial.print(count); Serial.print(" recordings in "); Serial.print((millis()-stTime)/1000.0); Serial.print(" seconds... "); Serial.print(count/((millis()-stTime)/1000.0)); Serial.println(" Hz"); } } } } lastBtnState = btnRead; if(active){ int pressureCount = readPressureData(); // Read the adc values //float pressure = (pressureCount/16384.0 - .1)*(1034213.59 - 6894.757)/(0.8); count++; } } int readPressureData() { byte rawData[2]; // pressure register data stored here while(1){ readRegisters(BRIDGE1, 2, rawData); // Read the two raw data registers into data array if(((rawData[0] &gt;&gt; 6) &amp; 3) == 0){ break; } else{ Serial.println("Stale Data"); } } int pCount = rawData[0] &lt;&lt; 8 | rawData[1]; return pCount; } // Read bytesToRead sequentially, starting at addressToRead into the dest byte array void readRegisters(byte addressToRead, int bytesToRead, byte * dest) { Wire.beginTransmission(PRESSURE_ADDRESS); Wire.write(addressToRead); Wire.endTransmission(false); //endTransmission but keep the connection active Wire.requestFrom(PRESSURE_ADDRESS, bytesToRead); //Ask for bytes, once done, bus is released by default while(Wire.available() &lt; bytesToRead){ Serial.println("I'm stuck in readRegisters!"); } //Hang out until we get the # of bytes we expect for(int x = 0 ; x &lt; bytesToRead ; x++) dest[x] = Wire.read(); }
Iversity's MOOC on Matlab and Simulation is quite good - I'd start there. 3 weeks will get you through most of the material.
This is a feature not a bug. In a struct array (what you have) all elements of the array take the same form and have the same fields. If you want to have different fields, put structs in a cell array.
You could start with the sidebar ----&gt; Go through some of the tutorials and the try to work your way through Project Euler problems using Matlab.
Was going to suggest something similar -- although Project Euler is currently down due to having had its site hacked recently (note to self: still need to change that password... lest some evildoer steal my sweet, sweet Project Euler karma). Although you can probably find most of the problems archived somewhere with a little searching. But at any rate, yeah -- if OP has some programming experience already, my suggestion would be to start working through tutorials to get familiar with the basic language and such, and then start giving yourself increasingly difficult programming problems to work through, whether via Project Euler, another source, or your own invention. Note that Matlab has really good documentation (both in the app itself, and mirrored online), so that will be your friend. A lot of functions you'll be tempted to code from scratch are already built-in (e.g., want a function to sort a list of values, or one to generate prime numbers? No need to write your own... `primes` and `sort` already exist). Searching around online to find out about what's already available will save you a lot of wasted effort.
Alternately it might be better for performance to just look for the unpopulated entry and use arrays. Depends on how big the array is.
Oh this feels exciting. Thanks for all the advice, and I'm sorry that I didn't use the sidebar first. I'll add some information in case it will further help you help me. I am going to be using matlab in conjunction with labview to simulate how light may propogate through nonlinear materials. This means that the speed of the light and the angle of refraction will change dynamically as the light makes its way through the material. With this in mind, is there any specific direction or problem that you think I should spend a lot of time on?
Thank you, and thank you /u/Mimshot, for your detailed replies. I am working on a pretty complex system, and my structs have arrays... It may not be the most efficient way to code things, but it works. I have determined that a simple workaround for my system is simply to replace my (not shown in the code in the original post) "isfield(asdf,'blah') " with "isempty(asdf.blah)" Perhaps once my project is finished, I can redo everything to make it more efficient....
line plots and the like look really nice, but at work we use imagesc a lot and for that, it's not quite ready at least for 2013b w/ using the undocumented trick. Haven't tried 2014b yet though, can anyone try it?
But the problem is I don't need to just see the file in matlab I need to be able to make an array of evenly spaced points along the surface of the model for use in another couple functions that would be outside of VR toolbox.
Just a quick comment: you should exercise extreme reservation to suggest something a "bug" simply because it does not meet your expectations, especially when it concerns a program or code that is widely used.
I did say **possibly**, but yes I see your point. Can't change a title, but I will word things differently next time around
at any case, you probably want to look into this first: http://meshlab.sourceforge.net/
Sorry, evenly spaced points was a terrible way to put it, constant vertex density is much better. And losing some clarity as a result is not a big issue. Meshlab doesn't seem bad, it just seems like it may be too much? Sorry I'm not the most proficient with MATLAB/most programming in general (if you didn't already notice). The readstl files were close in that they got me a grid of points representing the shape, but the problem is that I'm going to be using the shape as the source mask in [this](http://www.k-wave.org/documentation/example_pr_3D_tr_spherical_sensor.php) m file. So I need something applicable. My bad I should have included that m-file in the initial description
add figure between the hist commands. figure hist(length) figure hist(width)
Case closed!
I've never used Labview and that research topic is out of my wheelhouse, so I can't be too specific about that... but my general programming advice would be this: People always want to jump into writing code, but writing the code (especially in a new language) is made much easier if you thoroughly outline the steps of your algorithm first. So my suggestion would be to think through what you need to do. For example, in my field (cognitive neuroscience), say I want to see how activity in two brain areas is correlated throughout a several-minute period. Before writing any code, I'd break down this problem into what I'm going to need to do to solve it: Read in the files representing the brain activity in the whole brain over that period of time, pare down the data to only the two areas in question, run the correlation, output and save the data. (There would actually be a bunch more steps, and each of these would have sub-steps, but whatever... it's just an example.) Then, once I had the problem broken down, I'd try to figure out how to write Matlab functions to perform each separate step, independent of the other steps. Then when I'm done -- it's just a matter of stringing all the function calls together in a master script! It makes programming/learning much easier when the problem is broken apart into multiple simpler sub-problems, and you'll tend to write better/more reusable code that way as well...
Could you use [randi()](http://www.mathworks.com/help/matlab/ref/randi.html) twice to pull two random indecies to update?
Do you have a list of the non-zero elements? You have a maximum fixed number of neighbors for each non-zero element, except on the image edge. 4 neighbors, 8 if you count diagonals. You know the position of each NZE, the offset positions for the neighbors are all permutations of (-1:1,-1:1). I make an indexed list of all 8 possible neighbor positions. (9 if you include the self position). Loop through your NZE list, for each element, pick a random number from 0 to 9, inclusive. 0 is the no-choice case, 9 is self. This loops over all neighbors iteratively, so you can keep track of neighbors that have been modified, and skip that if you need to. 
&gt; I'm not the most proficient with MATLAB/most programming in general That's scientific computing for you :) I'm on the same boat, more-or-less. Having said that, are you sure the code does what you expect it to do for an arbitrary shape? consider trying the same thing with a sphere or a cube first. In my opinion, The stl file that you have essentially contains as many points as are necessary to create the model under some rule (CAD software for example), but if you want it to work for the package you are linking to, you probably want the density to be as high as it is between the small vesicles in the pic. Fort that you need to oversample everything and this is why you should look into the meshlab thing. Mind you, I fear the calculation costs would blow up in your face by then.
[projecteuler.net](https://projecteuler.net/) Good place to do some problems that MATLAB can solve, helps learn syntax and capabilities. I learned Python this way after already knowing MATLAB. As always, use the help [function], the documentation is really good.
Or use subplot, if you want them in the same figure.
You should always rememeber: still need to change that password... lest some evildoer steal my sweet, sweet Project Euler karma
Fixing your code... In the future please use four spaces at the beginning of each code line. power = 2; sigma=0.1; a = 1 /(sigma * sqrt(2*pi)); c= (sigma^ 2)*2; syms x y f = exp(-(x.^ power)./c); dfdx = diff(f,x); c1 = diff(dfdx,x); f = exp(-(y.^ power)./c); dfdy = diff(f,y); c2 = diff(dfdy,y); meancurvature = (c1 + c2)./ 2; gaussiancuravture =(c1 .* c2); mean_curv = integral2(meancurvature, -Inf,+Inf, -Inf, +Inf) gauss_curv = integral2(gaussiancurvature, -Inf,+Inf, -Inf, +Inf) Also, `integral2` is a numerical not a symbolic function.
Thanks! After I posted this I also found the "extractfield" function by googling. The helpfile for it doesn't seem to be connected to the other struct helpfiles, but it does what you accomplished with the [] trick, which is the key I was missing. 
Do you know what a function handle is? This is not a function handle: f = exp(X); This IS a function handle: f = @(X) exp(X) As the other poster mentioned, if you're looking to do this symbolically then integral2 is the wrong function, http://www.mathworks.com/help/symbolic/integration.html
I would also mention that you can pass a figure handle to hist to do this. You're just telling the function which window to plot in. h1 = figure; h2 = figure; hist(h1,length); hist(h2,width);
You'll only need to modify the scatter line: scatter(Longitude,Latitude,... [],Time,'MarkerEdgeColor','k','MarkerFaceColor','k'') 
Why not use `plot3`?
If you do something like the following you can reference them by name: h_fig = figure; set(h_fig,'KeyPressFcn',@(h_obj,evt) disp(evt.Key)); 
fit(x,y,fitType,fitOptions) fit() takes in a struct, fitOptions, which contains all of the settings. This struct is the variable you called options. It's not a global setting, you need to actually give fit() the options to be used. So at the moment, *none* of your settings are doing anything. Use [fitinfo,~,~]=fit(ch,allspecs(ch,i),Gaussian,options);
Baaahh!!!! I am retarded. Thank a lot. I don't know how I didn't see that after checking the code repeatedly.
Reading the error message carefully, it suggests that you have two things called 'mosquitos'. Indeed, your male mosquito inherits from a class called 'mosquitos' and your code snippet had a function called 'mosquitos'. Inheriting from the handle class may or may not be what you want, certainly it is not what you want if you have already specified behaviour for the mosquito class. So you would need to at least change the name of the function. However, you don't seem to fully understand the concepts of object oriented programming. For example, 'generation' is probably a property of all mosquitos, not just male ones. Similarly, you probably shouldn't have code like "female{i}=male_mosquito", this doesn't make sense. Perhaps you should do some more general OO tutorials before attempting to use OO in this code. 
Thanks, though not exactly what I was looking for.
&gt;Similarly, you probably shouldn't have code like "female{i}=male_mosquito", Yes I caught that mistake a bit later. And you're right, I really don't understand the concepts of object oriented programming. I've read a bit of information and watched a video on mathworks but find myself reading alot without really understanding what they're saying. I feel like I'm missing some basics of programming/matlab/something. Thanks for the input, this is all just for fun anyways - I'll look around the web a bit more.
Thanks. I tried this but got the same error. I think I need to read a bit more and actually understand how this stuff works before I'll be able to do what I want.
I haven't seen anything like that. However I know that you can execute console commands from matlab. From that pretty much anything is possible. [Here is the doc](http://www.mathworks.com/help/matlab/matlab_env/run-external-commands-scripts-and-programs.html). From what you wrote is seems like you are trying to save something. There is lot of solutions in matlab to save variables or figures, you might want to look at that.
The short answer is no, but anything you can do through the interface you can do programatically. For example, you can save a figure or workspace with the appropriate function call. If you're a bit more specific in your ultimate goal (i.e., what you're trying to do with Ctrl-S) we might be able to point you in the right direction.
I'm not sure if this would fix it, but you could try putting -hgVersion 2 at the end of the target path for booting MATLAB. AFAIK this forces a different engine to render the plots. Someone please correct me, but it's something like that.
Yup. You can import java script stuff and use that. Google 'java awt robot matlab' You can control keyboard, mouse, query pixels on screen, etc. 
Did you mean java rather than javascript? I've never heard of a javascript engine in Matlab. How do you access it?
Thanks for the link, it'll help.
I've seen videos of coupling Java with MATLAB before, but I was wondering if there was a separate built-in function for it. This clarifies it, though. Thanks for the reply. 
I apologize for not being too clear with the question. You've answered it, though. I wanted to clarify if there was built-in functionality in MATLAB to control keyboard functions, mouse, etc. Thanks for the reply.
Sounds to me like you want to use the remainder (rem) function. Use a normal integrator block (with no range limits) and add a math function block at the output. Change the function to "rem", add a constant block with the value 180 and connect it to the second argument of the math function block.
Cheers for the rem function, I dealt with the problem using the following code: y = -180+rem(u+180,2*180);
No man, y = rem(181,180); returns 1 instead of -179.
My bad, however your function is also incorrect for u&lt;-180. You should use mod instead of rem, so the correct one is: y = -180+mod(u+180,360);
You're the man, I've been trying to see what went wrong for the past hour. LOL cheers mate
Yeah, the goal is to make a movie. The solution I found was to use the system screen shot accessed through `java.awt.Robot` though the java interface. The code that finally did it is below. This is of course starting with HG2 active and software OpenGL active. % Assign left, right, height, and width by guess and check rbt = javaObject('java.awt.Robot'); rec = java.awt.Rectangle(left, right, height, width); clear mv; fcount = 1; for t = frame_times % % Plotting code goes here % view(v); drawnow; pause(.500); % wait stupidly for system render to finish %mv(fcount) = getframe(h, pix2get); img = rbt.createScreenCapture(rec); rgb = img.getData().getPixels(0, 0, width, height, []); clear I; rgb = reshape(rgb,3,[]); for c = 1:3 I(:,:,c) = uint8(reshape(rgb(c,:), width, height))'; end mv(fcount).cdata = I; mv(fcount).colormap = []; fcount = fcount+1; end movie2avi(mv, 'movie.avi', 'FPS', 30, 'compression', 'none'); close all; 
diff() is a function that takes the difference between adjacent entries in an array, might be what you're looking for. It's kind of like the discrete version of a derivative. So for instance diff([0 0 1 1 0 0]) will return [0 1 0 -1 0]
probably
Although if the data is something like [0 0 1 2] then diff() will return [0 1 1] which will not differentiate the zero-to-nonzero transition from other increases. If I'm understanding you correctly, OP, I think what you'd need is something like this: mydata = [0 0 0 0 0 0 0 1 2 1 2 5 3 0 0 0 0 0 2 6 4 0 0 0]; %or whatever it is change_indices = find( mydata(1:end-1)==0 &amp; mydata(2:end)~=0 ); In that sample code, `change_indices` should now contain 7 and 18, the indices of the zeros immediately preceding each chunk of nonzero numbers. If you want the indices of the first nonzero number of each chunk itself, just do `change_indices+1`.
Oh, quick note -- keep in mind that equality testing is tricky with floating-point numbers (the default data type in Matlab). The code above assumes that your zero values are really "true" zeros, but it will fail if any of your "zero" values are really nonzero values that are only infinitesimally different from zero...
I'll have to be motivated, since it's a major college requirement. :P It'll help, as mouse cursor functionality is something I also am looking into. Thank you.
Thank you, I will check this out
Matlab's symbolic toolbox is nice for reasonably simple problems, but when you're getting into some more complicated ones Mathematica or Maple is better. Furthermore, how do you suppose your question is even remotely answerable specifically? &gt;an equation that should return a more complex version of the Lambert W function This says pretty much nothing. 
If you are prepared to go the c++/mex route: https://code.google.com/p/tesseract-ocr/
http://www.mathworks.com/matlabcentral/fileexchange/index?utf8=✓&amp;term=Optical+Character+Recognition+
I need to plot the numbers off of a monitor that would be video recorded. Any suggestions?
Isn't this the point of captcha? So that computers can't automatically read text and buy 8 tickets/sec on TicketMaster?
To answer your question... no, that's not the point of a captcha. A captcha is used to make it difficult for computers to fill out online forms. OP is asking how he can recognize numbers from an image.
Wait a second, you just wrote, &gt; A captcha is used to make it difficult for computers to fill out online forms But, isn't reading an image of text difficult for computers to figure out? I mean, I suppose if it was a perfect screen grab. But OP stated, &gt; I need to plot the numbers off of a monitor that would be video recorded I mean, I know that many of the captchas I've seen are all distorted, but I've also seen some where the letters are just turned sideways. Maybe those ones are easy for computers to crack. Apparently from other responses, this code is out there and free. I was mostly just curious, I know what OP was asking. I guess it is an arm's race and reading straight aimed camera feeds from a computer monitor with correct frame rates (to avoid aliasing) would suffice for the available software.
I see. I think I took your comment a bit too literally. Besides that though, it is relatively simple to recognize upright characters. The hard part is doing it when the images are distorted - which is what a captcha aims to be. So I guess to kind of satisfy your curiosity: it's (relatively) easy for a computer to recognize upright, regular text (especially just numbers), but not distorted text! I don't know what camera OP is using, but if it's anything made in the last 10 years, the images shouldn't be very distorted. Disclaimer: this is all my (slightly informed) opinion. My lab mate implemented character recognition through a camera back in 2009 for our robotics class. 
If you have access to the font(s) being used, OCR is really quite trivial. It is even easier if the text always appears in the same location(s).
Have used this successfully with matlab in an automated system - works well if you do a bit of normalisation and thresholding etc on the images first.
holy shit are there other matlab easter eggs I should know about?
That's exactly what I said! Have you tried "why" ? That's another one I'm aware of.
1: xpbombs 2: image; %one image of a kid made of: figure; defImage = pow2(get(0,'DefaultImageCData'),47); imgCell = repmat({zeros(size(defImage))},8,7); for shift = 0:52 imgCell{shift+1} = bitshift(defImage,shift); end; allImages = cell2mat(imgCell.'); imshow(allImages,[min(allImages(:)) max(allImages(:))]); 3: fifteen 4: penny 5: shower In older versions there was also toilet which would bring up a simulink model of a flushing toilet.
What renderer is being used? In an earlier version of Matlab I remember a weird bug in which it seg faulted when I rendered certain images with opengl. Unfortunately I don't remember all the details but maybe try changing the renderer to painters or something else and see if that helps? set( figureHandle, 'Renderer', 'painters') 
Anything besides a spreadsheet. 
Or you can use shading flat which should work too (however if you want all your data plotted, you need to add an extra row and column at the end)
It sounds like you want to build an "agent based" simulation. I don't know if MATLAB is the best tool for this, especially if you want to run it on very large numbers of agents, but I'm sure it's capable. You'll obviously need to start with MATLAB basics, like syntax. If you're going to be using it for a year, you'll want to get very comfortable with the help files and MATLAB style. Follow a tutorial for this. You should be able to find one that includes programming basics, like loops and objects. You'll probably want to define an agent class - find out what this means. You'll want to parallelise your code, which is fairly easy to do in MATLAB. 
This is a pain. Yes, you can use `imshow` as other have suggested but I find that it lacks some of the options you want. I made my own to do it but I don't have it posted anywhere. However, I found [sanePColor](http://www.mathworks.com/matlabcentral/fileexchange/35601-sanepcolor). Give that a shot
Thanks for the input! And yes, an "agent based" simulation is what I meant. I saw some vids and was wondering if I should get involved in something called Simulink or Guide-Gui? 
Yeah I got that too, but my code is just straightforward plotting. The graph displays fine in MatLAB, and other export formats like png work fine.
[Yours is better than mine :(](http://www.reddit.com/r/matlab/comments/1qq6ff/so_matlab/)
Yeah, could also do find(diff(array&gt;0)) or something like that 
Morphological operations (combinations of erosion and dilation) can be used to accomplish tasks such as this. For an overview see: http://www.mathworks.com/help/images/morphological-filtering.html In your case, imclose ( dilation then erosion ) can be used to fill in the holes. You may need to experiment with the shape and size of the structuring element to get it just right. For more on that see: http://www.mathworks.com/help/images/ref/strel.html The following code worked for the leaf that I clipped from your screenshot. se = strel('disk',5); closed_leaf = imclose(BW,se); figure; imshow(closed_leaf); title('morphological closing');
The Matlab documentation gives you all the examples and information you need for basics such as plotting. Either go into the help file and look up *plot* or check the [online documentation](http://www.mathworks.de/de/help/matlab/ref/plot.html). plot(t,fh) would limit your plot between -4 and 4 in your case
You want copyobj http://www.mathworks.com/help/matlab/ref/copyobj.html Plot the base plot and copy it to all of your additional axes. Then you can over plot at will. All the plot objects are stored as child objects of their respective axes... So you can actual modify the plotted data directly, including deleting things.
So your plot is technically correct (except that you were plotting sin(pi*t)), however... You are not using enough points for t so you are experiencing aliasing and hence the jagged straight lines. Try adding more points for t to fix that. Using linspace or smaller interval for your t values. Lastly, when you call plot(fh), Matlab is going to use the x-values it sees fit to give you the best graph. So use plot(t,fh) and it will plot your function fh over the interval t
Thank you for that. Also, I am having trouble plotting *e^-t cos(t)* over the same limits for *t*, but I get [**this**](http://imgur.com/VYZJ5xn) weird error. Why do you think that is?
Thank you for that. Also, I am having trouble plotting *e^-t cos(t)* over the same limits for *t*, but I get [**this**](http://imgur.com/VYZJ5xn) weird error. Why do you think that is?
Matlab is vector based unlike most other languages so when you use ' * ', you are performing matrix multiplication of the two row vectors obtained from exp(-t) and cos(t). Instead, use ' .* ' to perform element-wise operations. 
The sin function is a good example of matlab's vector capability; that is, it operates on vectors as well as scalars. To see this, notice that if you type sin( pi ) Matlab returns 0. But if you pass the sin function a vector, it operates on each element: sin( [ 0 , pi/2 , pi , 3/4 * pi ] ) you get the value of sin with each of those inputs: ans = [ 0 1 0 -1 ] If you notice, you're plotting those values that are on the order of 10^(-15), because you're feeding a sine function integer multiples of pi; that's really zero, but there's some precision trouble. What you want is to get a bunch of values over a small interval. Notice that if you type 0 : 0.1 : 1 you get a vector in 0.1 increments from zero to one. See why? The format is ( minimum value ) : ( increment size ) : (maximum value ) So if your function is sin, which has a period of 2pi, you probably want to divide that up into, steps of, say, .2pi. So something like times = -4 : 0.2*pi : 4 fh = sin( times ) would give you a start on what you want. 
try .*
I think the dither function will provide the effect you're looking for. https://en.wikipedia.org/wiki/Dither#Digital_photography_and_image_processing Dithering works by diffusing the quantization error to neighbouring pixels. On average, in a larger neighbourhood, it seems like there is no error. But this reduces the resolution as you suggest. If you use only 3 colors (R,G,B), you will not be able to in general remove this quantization error. If you use a minimum of 8 colors instead to bound the entire color cube (black, red, green, blue, cyan (B+G), magenta (R+B), yellow (R+G), white (R+G+B)), the procedure should work much better.
Loadfinedlibrary? loaddefinedlibrary, isn't that right one? 
Is `bcvtb` the same bit-ness as the MATLAB install you're using?
Both are the 64bit versions.
Yes lol typo.
so did that fix it? Not sure where you'd call loaddefinedlibrary, haven't used loadlibrary in a while. What are you trying to call? Just curious. I always used it to interface with hardware. 
No that was a typo from me typing in the errors. I typed this on my phone because I was away from the computer so I couldn't copy paste the error code. I'm calling a matlab library within a program called BCVTB because I need to use matlab to interface with it.
Are you using the ODE solver or did you write your own? I think you could do something like that if the differential equation is non-linear but likely there is something wrong with your code.
You can use: &gt; z(z&lt;0) = 0 just after you have defined the z values in each loop cycle. This will change every element in z that is less than zero to zero. If you wanted to delete the values of z less than zero then you would use: &gt; z(z&lt;0) = []
I don't understand why you can't use the built in sort? 
I actually ended up figuring it out after looking at it with a fresh set of eyes. You can take the absolute value of z after z=s.*z, such that z = abs(z). I appreciate the help though!
If dy/dt is proportional to y, then it will naturally asymptote to zero. As y gets smaller and smaller, so will its derivative. 
Try this: dSNO = - Constant * Y(6); This should make Y(6) asymptote to zero. But keep in mind that after making this change, it is a different problem. It may no longer have any physical significance. edit: you could also try making the value of KNO much larger than Y(6). Then dSNO will be approximately proportional to Y(6) which should produce asymptotic behavior in Y(6). 
Okay I can try that out and see how it works - I forgot to mention that the equations I'm using have been pulled directly from a paper that I'm modelling after. The paper's model seems to work perfectly fine in preventing the value from dropping below 0, but I haven't been able to get it to work out.
Matlab is most efficient if you can figure out a way to vectorize this process. If you are set using loops to do the sort it may be a better idea to use another programming language
Here is a sample program % dither test I = imread('https://upload.wikimedia.org/wikipedia/en/2/24/Lenna.png'); RGBColormap = [1 0 0; 0 1 0; 0 0 1]; KRGBCMYWColormap = [0 0 0; 1 0 0;0 1 0; 0 0 1; 1 1 0; 1 0 1; 0 1 1; 1 1 1]; RGBDitherI = dither(I,RGBColormap); KRGBCMYWDitherI = dither(I,KRGBCMYWColormap); figure; imagesc(I) axis image saveas(gcf,'original.png') figure; imagesc(RGBDitherI); colormap(RGBColormap); axis image saveas(gcf,'RGB.png') figure; imagesc(KRGBCMYWDitherI) colormap(KRGBCMYWColormap); axis image saveas(gcf,'KRGBCMYW.png') The three outputs can be seen here: http://imgur.com/JyWFhIN,cuFp4HM,5eU75Ab As I said, the results are much better if you include 8 colors in your colormap rather than 3. 8 colors means 3 bits per pixel. 
So I left and started working on my code some more and found the exact mistake that I was making. You were absolutely correct regarding the 3 colors vs 8. Thank you for the detailed explanation.
There's also imagesc which produces something quite creepy. I accidentally discovered it once while playing around with that command but not using the normal inputs properly.
For those who prefer their code short and fat: spy text(60, 20, 'SUCH MATLAB', 'Color', 'r', 'BackgroundColor', 'k', 'FontWeight', 'bold') text(40, 10, 'SO SCIENCE', 'Color', 'g', 'BackgroundColor', 'k', 'FontWeight', 'bold') text(20, 40, 'WOW', 'Color', 'm', 'BackgroundColor', 'k', 'FontWeight', 'bold') text(70, 100, 'MUCH SPARSITY', 'Color', 'y', 'BackgroundColor', 'k', 'FontWeight', 'bold') text(30, 120, 'MATRIX', 'Color', 'g', 'BackgroundColor', 'k', 'FontWeight', 'bold') text(5, 90, 'NUMBERS', 'Color', 'C', 'BackgroundColor', 'k', 'FontWeight', 'bold')
Yea, that's the same image you get when you execute the image command, see point 2 above.
Fuck off with your clickbait.
What do you mean plant? I guess what you want to do is the larger the number the larger the restoring value you would use. You will need to write a few equations first, before you even think of coding it up in MATLAB. 
&gt; What do you mean plant? It's a controls question. OP may have better luck in an engineering forum. OP, you've opened a whole bag of worms. How accurate do you want the plant? You can just model it as a brick. You can model it as a vehicle with independent 4 wheel suspension. You can model the amount you turn the wheel into it. Hell if you really wanted to you could model people in the car. If you've drifted you obviously don't want to jerk the car back, so you want a slower controller. Then you'd feed in all of the road curves in the US and make sure your people don't die.
I replied to another below saying for now, if it is possible, I would like to completely ignore the vehicle dynamics, and just get it to work "following a line" if you will. I think I've been a bit to liberal with the terms I'm using, sorry!
The rest of the code shows the important part of the easter egg. Namely that the image is composed of other images, run it and u'll see.
You said each cell contains a matrix. So this is how you should access the elements of that matrix Thing{1,cellNum}(row,col) So if you want to change all 3's to zeros in the sixth column: Thing{1,cellNum}(Thing{1,cellNum}(:,6)==3,6)=0; **Edit**: Also with the above, you only need to loop over cellNum=1:3.
That did the trick! Thank you
No problem, glad to help.
I don't know about the exact code to do this, but mathematically speaking you could compute the answer to the rotation using linear algebra (orthographic projections), and then plot the new points from that answer. I can try to dig up some examples later if you want
File Exchange FTW http://www.mathworks.com/matlabcentral/fileexchange/6400-shadowplot See also, http://stackoverflow.com/questions/8231195/matlab-2d-projection-of-a-3d-function
Can you please show your code? Triangulation is a method of DelaunayTri, so there shouldn't in general be a problem here. http://www.mathworks.com/help/releases/R2010b/techdoc/ref/delaunaytriclass.html In R2010b your other option is to use TriRep, http://www.mathworks.com/help/releases/R2010b/techdoc/ref/trirepclass.html
If you want an orthographic projection, all you need to do is apply the desired rotation matrix, then discard the z coordinate, for projecting onto the x-y plane. If you want a perpsective projection, then you can use a projection matrix, as suggested by Coloradolcculus.
Wow! Can't believe I missed this. Thanks a lot...I should suggest renaming this function to the author for the sake of getting the most people to stumble upon it.
In odeset, you want to do (... , 'NonNegative' , 1:(#ofvariables), ... ) Also, you are not passing your options defined in odeset to the ode solver. It won't flat line, but it won't allow negative values. options = odeset('MaxStep', 0.05, 'NonNegative', 1:6); [t, Y] = ode45(@AlgaeModeldrv4, tspan, Yo, options); EDIT: Also, from your other post in this thread, you are using the wrong notation, or one I'm not familiar with, in your ode solver. Take a look at how mine and yours differ. I've been using MATLAB awhile and have never seen it your way. 
for part (c), you need to subtract the distance from part b *times the unit normal vector* to the plane. Also, if you have this unit normal vector **v**, you can combine parts b and c to flatten out 3d point P into 2d point P_2d: P_2d = P - sum(P.*v) * v; But like other people said, you probably want to look up perspective projections.
I'm no expert myself but here is what the person said who posted this where I found it: &gt;Just looks like an upside-down little boy, right? Well, if you rotate the 53-bits of the double precision fraction component so that each becomes the highest valued bit, you can easily see the hidden images.
Add an if else statement in the ode function. So: if Y(6)&gt;0 dSNO = -VNO*Y(6)/(KNO+Y(6))*Y(1); else dSNO = 0; end
I actually managed to figure it out. To get the effect I wanted all I had to do was use an if/else like this: if Y(6)&gt;1e-10 dSNO = -VNO*Y(6)/(KNO+Y(6))*Y(1); else dSNO = 0; end For the differing notations do you mean using "AlgaeModeldrv4" rather than @AlgaeModeldrv4? When looking around I've actually rarely seen it written the way I do it, but that's how I originally learned it so I never thought to change it.
I've only ever seen @AlgaeModeldrv4 in all examples on the matlab site and other sites. That's also what I use. Also, don't forget that you weren't passing options to your ODE solver.
Oh! I didn't see that I hadn't passed my options to my solver, but I must have fixed it at some point since it's in my code now. Thanks!
Thanks! Doing that is what ended up getting it work for me. For some reason I didn't think I could use an if/else with bounds on Y(6).
I always get the feeling people are just posting their assignment here and hoping we can do it. I'm not going to give you the exact code, but I will give you a few examples. If I wanted to calculate say C = A(i,j)*B(i,j) + A(i+1,j)*B(i,j) I would do something like this. %first i would do the inside points, then fill in the gaps C = NaN(size(A)) C(1:end-1,:) = A(1:end-1,:)*B(1:end-1,:) + A(2:end,:)*B(1:end-1,:) C(end,:) = A(end,:)*B(end,:) + A(1,:)*B(end,:) % now to do the boundary point you need some more information, in this case I'm assuming its periodic So in your case you'll have to do all the internal points first. e.g replace j with 2:end-1 , in that case j+1 would be 3:end and j-1 would be 1:end-2 In essence you have zero loops. 
As described in my text, I'm aware of *how* to accomplish it, but it makes little sense to repeat what someone else has spent time refining. 
You might be able to wrestle something together with bsxfun and circshift in addition to the standard matrix operations, but it wouldn't be particularly intuitive or easy to maintain that code. By the way, u(1,:,:,:,:) is a 5 dimensional array, not a 5 element array.
shadowplot (2004) fails with some error about Undefined function 'gobjects' for input arguments of type 'double'. Error in shadowplot (line 101) h = gobjects(0); I'm not going to try and figure it out right now. 
Don't worry it isn't homework. I am new to Matlab and I am just trying to make some old code more efficient. Thanks for the advice.
You'll be able to speed it up immensely by doing matrix operations. You will also get significant speed up if you leave it in for loops and just compile it to an executable. 
Hi -- I haven't done exactly what you're asking about before but I work a lot with Matlab/stats. I suppose you're using `anovan` because you have an unbalanced design and thus can't use `anova2`? It looks like `multcompare` would do what you're looking for with `anova2` output but not `anovan` output. I still find Matlab's stats support pretty lacking beyond simple t-tests and correlations and so forth, compared to what you get (though with much more pain) in SPSS or such. What I usually end up doing is looking up the math and writing my own function (and checking it against SPSS or similar, of course). Though people might have be just about sold on switching over to R for purposes like this one... I have barely used it at all but I gather it's got better statistical modeling support than Matlab, and is not as horrible as SPSS...
My thoughts exactly, looked into this a while ago and came to this conclusion: If you're only doing this a few times use spss, if you're doing it 10s to 100s of times a matlab - r communication might be worth a shot, and if you're doing it 100s to 1000s of times code it up in matlab. http://rwiki.sciviews.org/doku.php?id=tips:callingr:matlab http://www.mathworks.com/matlabcentral/fileexchange/37450-cumulative-distribution-function-of-the-studentized-range--for-tukey-s-hsd-test-
Hi, Thanks. It's the SPSS pain I'm trying to avoid. I'll try it with an anova2 and see how I go.
Would be hard to find the minimum point then. I would simply do Li(~ConstraintsFulfilled) = Inf; Then one can easily get the min and argmin. 
I solved a similar problem using mtimesx: http://www.mathworks.at/matlabcentral/fileexchange/25977-mtimesx-fast-matrix-multiply-with-multi-dimensional-support
That certainly works, unless `Li` has multiple points which take the minimum value while only some are admissible according to the constraints. 
Thank you very much for this. It works perfectly. Admittedly though I don't completely how it works. Would you mind elaborating if you have the time? 
What I did is reassigning the left half of your matrix to the right half of the matrix in reverse order. This part tri(:,(ceil(N/2)+1):N) takes all 1024 rows of your matrix and the second half, meaning the N/2+1^th to N^th, of your columns (which until that point only have zeros inside them) and reassigns new values to them. The values, or more precisely the matrix, that we want to reassign here corresponds to the horizontally flipped "first half" of your matrix. We get this part of the matrix by indexing the columns of the first half backwards: tri(:,ceil(N/2):-1:1) For better understanding, you can try *imagesc(tri(:,ceil(N/2):-1:1))*, which will output the matrix that is assigned to the right half of your original *tri* matrix. I'm sorry if my formulation is confusing. Matrix-indexing is hard to explain in simple terms for me as I have been using Matlab for a very long time and it is difficult for me to see which parts of it are hard to understand. Feel free to ask again if there are still parts you don't quite understand. 
Again, thank you very much for your taking the time to elaborate. This is very helpful to me. Just for clarification though: in this part tri(:,ceil(N/2):-1:1); I assume that the -1 stands for the reverse direction (negative sign) and the stretching factor (the -**1**) ? This is just a guess though. What does the colon do in front of ,ceil? And for good measure, what does the last "1" do? Sorry that I'm bothering you with these most likely banal questions, but like I said, unfortunately I'm quite new to this. 
To make it more clear for OP, this: x=startvalue:stepsize:endvalue makes an array from startvalue to endvalue with stepsize being the difference of consecutive elements of that array. The default stepsize is +1, so if you don't indicate a stepsize it uses +1. So: x=1:10 is the same as x=1:1:10 The same idea applies to for loops. The value loops from the startvalue to endvalue with the indicated stepsize. Now, OP wants to have a -1 stepsize so he has to provide the stepsize to Matlab. /u/K_osoi 's solution is the easiest, but the other solution to OP's problem would be to change for j = N/2 + ceil(2/3*43) : N/2 + ceil(2/3*43) - ceil(43/25*l) to for j = N/2 + ceil(2/3*43) : -1 : N/2 + ceil(2/3*43) - ceil(43/25*l) in the non working loop. At least that would make the loop working, not sure of the result. 
You might want to read through the [Matlab documentation](http://www.mathworks.de/company/newsletters/articles/matrix-indexing-in-matlab.html) on how the indexing of a Matrix works. You are right about the **-1**. In general, [a:b:c](http://www.mathworks.de/de/help/matlab/ref/colon.html) creates a vector going from *a* to *c* using stepsizes *b*. In your case, it goes from ceil(N/2) to 1 using steps of size **-1**. The 1 is necessary at the end as it wouldn't otherwise know where to stop. *a:b:c* is basically a generalized version of *a:c* where *a:c* only allows you to go steps of size **1** from *a* to *c* and *a:b:c* allows you to define your stepsize enabling reverse directions. The stand alone [colon](http://www.mathworks.de/de/help/matlab/ref/colon.html) tells Matlab to use every entry in that dimension of a matrix. If for example you have a 2x2 matrix A, e.g. A = rand(2,2); and you want to change the second column to [0;0], your indexing would look like this: A(:,2) = zeros(2,1); This is equivalent to A(1:size(A,1), 2) = zeros(2,1); I suggest to read through the documentation I linked to in the beginning for a better understanding on how Matrices are indexed in Matlab since the pictures there make it much easier to comprehend. Edit: Links fixed
The first : in this case means "all". So take all the rows and corresponding columns ceil(N/2):-1:1 of tri, the last 1 is the end value, see comment below.
This does not quite give the wanted result. Changing the loop to for j = N/2 - floor(1/3*43) + ceil(43/25*l) : N/2 + ceil(2/3*43) would give what he wants. I think he got confused as to which column he is currently indexing and tried to switch around both for loops while the reversal in stepsize is already given by his while loop and definition of *l*.
And yet again, thank you very much for your help. I do believe I understand it better now. And once I have the time I will look at the documentation you linked to.
Awesome, thank you very much. This is exactly what I was looking for. Thank you very much for the explanation.
Your line 17 reads ` end [a million spaces] c`. That's your problem. In general, don't put random characters in your code. How did all your co-workers and you miss this? :)
First off, what's the error you get out of MATLAB, if any?
Jesus. Thank you 
My consultancy bill is in the mail. ;)
I realized it was because I need version 2013b, otherwise it is not supported.
You can do this without any loops at all, using Matlab's matrix-orientedness and the glory of logical indexing. E.g. the following should do what you want: vals = [0 0 1 1 0 0 2 2 2 0]; is1or2 = (vals == 1 | vals == 2); to_eliminate = [false (is1or2(2:end) &amp; is1or2(1:end-1))]; vals2 = vals; vals2(to_eliminate) = 0; At the end, the variable `vals2` should have just what you said: [0 0 1 0 0 0 2 0 0 0] (You could do this in fewer lines of code, as well... I just used a few more to spell it out more explicitly.)
FYI in your case I believe you can literally just type the name of your file at the end of each of your case statements choice = menu('Choose and Option', 'TaylorSeries', 'Limit', 'End'); switch choice case 1 [e_x_T] = TaylorSeries; fprintf('%f', e_x_T); filename.m case 2 [e_x_lim] = Limit; fprintf('%f', e_x_lim); filename.m case 3 endprogram; I think this will work as long as you change filename.m to what ever your file name is, but you should learn how to use matlab functions. 
Since you already have a choice that ends the program, you can just put everything inside of a while loop that runs indefinitely. while true choice = menu('Choose and Option', 'TaylorSeries', 'Limit', 'End'); switch choice case 1 [e_x_T] = TaylorSeries; fprintf('%f', e_x_T); case 2 [e_x_lim] = Limit; fprintf('%f', e_x_lim); case 3 endprogram; end end end
Hard to answer without more info. This is continuously sampled binary data? Also sampling rate frequency is greater than nyquist frequency? I've solved similar problems by setting low value to -1 and high value to 1, then you can use conv(vector,[-1,1]) to get positive values at a low to high transitions and negative values at a high to low transitions and zero everywhere else. Pretty simple to take it from there, but that only works if you're sampling well above nyquist frequency.
Its not really binary. Its step. Imagine actual peaks and valleys that look like that and you want to know the ratio between them using a ruler that spans between 2 periods and 1 period descending. Not sure about the "setting low value" you just mentioned. Can you elaborate on that? 
Hmm the problem I solved was a time series of corrupted data. I turned the data into 1s where it was corrupted and zeros everywhere else leaving me with binary data, so either 1s or 0s which I made 1s and -1s, continuous data would be a different situation. Also I didn't have the "ruler" constraint so I'm not sure my solution applies. What is the logic behind the ruler? This is some sort of measuring constraint? Or do you have access to the data at a higher frequency than the ruler? I suppose with the ruler in place you should expect to get equal numbers of peak-peak and trough-trough vs peak-trough samples. You may be able to make an estimation based on the number of times each situation occurs. Edit: added the set to -1 part 
The ruler is a constraint and the entire purpose. A little background: I have a periodic structure that is being illuminated by a beam of light. (the ruler). The peaks and valleys show the projection of that periodic structure. And the beam of light becomes thinner as I sweep. Didn't think you needed that information when I submitted, but if that helps in understand it, cool. So how do I do this? I'm decent at matlab, not an expert. 
What do I do if I want to exit out of the program when the user chooses option 3 i.e. to end the program?
Can't you just do diff(m)?
Huh? You get a time vector out of ode45 too so that's fine. Doing diff(m) will give you the exact same numbers that ode45 computed. Another solution would just to be call your differential equation function in a loop, since it's returning the derivative you want.
Look at the documentation and examples for the function "imregtform". Same algorithm, but the output is a geometric transformation that can be applied to your other images with the function imwarp.
You are solving dm/dt = odefun(m,t,...) . ode45 has output of m, and corresponding t values. Can't you just evaluate odefun(m,t...) using the m and t values you get from ode45 after integration to give you the corresponding dm/dt values for those exact times?
Nah, this would not be very precise. It would be exact if ode45 would use a first order solving method but it uses 4th to 5th order, hence the name.
Like I said below the diff(m) method is not exact. The second method (loop over time) is the way to go. OP just run ode, then you have t and m. Then loop like this: for ii=1:numel(t) dx(ii,:)=odefun(t(ii),m(ii,:)); end where dx is dm/dt
Perhaps you misunderstood me - or meant to reply to the other post about using diff()? I was saying to do exactly what you wrote in your other post i.e. dx(ii,:)=odefun(t(ii),m(ii,:));
Yeah sorry, didnt read correctly.
Is your differential equation an "ordinary differential equation" (i.e., ODE) or a "partial differential equation" (PDE)? Usually a PDE will have boundary conditions, while an ODE has an initial condition. If you are dealing with PDEs I suggest this [matlab documentation link](http://www.mathworks.com/help/matlab/math/partial-differential-equations.html). Edit: Since you say it is an ODE, I suggest this [documentation on boundary value problems](http://www.mathworks.com/help/matlab/ref/bvp4c.html).
It is an ode, this is more of a general question than a specific problem. I am interested to learn more about solving pdes in MATLAB though, so thanks!
How much amplification will be needed if you want to make an amplifier yourself?
Without even looking at your algorithm, if all you want to do is iterate a single routine over any combination of your {i,j,k,m} parameters, it's possible to avoid having allo sorts of nested for loops by defining a list with all parameter combinations, and then iterate over that list. for example, consider the following nested loop: for i = 1:2 for j = 1:4 some_function(i,j) end end The nested loop example can be converted into a single loop with: iterator_list = struct('i',{1, 1, 1, 1, 2, 2, 2, 2}, 'j',{1, 2, 3, 4, 1, 2, 3, 4}) for iter = iterator_list some_function(iter.i, iter.j) % end And the above line can be further vectorized with the help of standard functions such as arrayfun. **edit**: corrected the struct array declaration
Awesome, thanks. 
What if I wanted to do the reverse of that. As in, go from vals2 to vals3, where vals3 was this: [0 0 1 1 1 1 2 2 2 2] Essentially make it so that it repeats a number in a row (or column) until it comes up to another number, at which point it copies that. Edit: I should note that the values aren't 1's or 2's, but between 1-9.
If you don't have a ridiculously huge amount of data to process, you could do something like the following. (If you do have a huge amount of data, there are more computationally efficient ways, but the code would be a bit more complex.) vals = [0 0 1 1 0 0 2 2 2 0]; is_nonzero = (vals &gt; 0); to_eliminate = [false (is_nonzero(2:end) &amp; is_nonzero(1:end-1))]; vals2 = vals; vals2(to_eliminate) = 0; vals3 = vals2; replacement_val = 0; for i = 1:numel(vals3) if vals3(i) == 0 vals3(i) = replacement_val; else replacement_val = vals3(i); end end Note: code not checked for typos and such but the idea should be correct. Also I updated the previous code to check for any nonzero values, not just 1's and 2's.
One solution is to use the `'KeyPressFcn'` feature of the figure window to intercept keypresses instead. Although I have found if people hold a key down or press too fast or whatever, it still sometimes gets echoed to the command window. One way around that is to force re-foregrounding of the figure window by calling `figure(my_figure_handle)`. If you want to get super-hardcore about suppressing keypress echoes, there are other ways to do it too, but it's probably more trouble than it's worth. (If you do want to go down that road, shoot me a reply and I can elaborate.)
Thanks. Why in the structure does "i" have the numbers repeated as 1,1,2,2,3,3,4,4 and 'j' 1,2,3,4,1,2,3,4? Edit: I think I understand. It creates (i,j) = (1,1),(1,2),(2,3),(2,4)....(4,4). So if I wanted to make that run from i = 1:100 and j = 1:100 how would I type iterator_list without typing each number in? Thanks. Okay I think I have it. Here is my example code: %%%%%%%%%%%%%%% n = 4; w = 2; v = ceil( (1:(w*n))./w ); nn = 1; xx = (1:4)'; rr=repmat(xx,2,nn)'; iterator_list = struct('i',{v},'j',{rr}); A = rand(4); B = zeros(length(v),length(rr)); for iter = iterator_list B(iter.i,iter.j) = 7*A(iter.i,iter.j); end %%%%%%%%%%%%%%% Thanks!
[I'm a great latex salesman.](http://media-cache-cd0.pinimg.com/originals/7b/dd/c8/7bddc85684db4575fdd5617c5fffc900.jpg)
If you want/need the command line to do it, you can look into the *mcc* command. Otherwise, check out the "Application Compiler" app in the "Apps" tab.
It's pretty basic, being my first game and all. Sort of hard to explain though. If you want I could send you a zipped folder with the files so you could run it for yourself.
That would be cool! 
Thanks. I used this code, only changing the variables for the latitude and longitude and it does not plot anything. There are no errors though, so I'm just missing something. Do I need to add a plot command?
The command ~~"hold on"~~ "hold all" allows you to add plots to an existing figure. Matlab will automatically cycle through colors for you as you continue to plot things. I.E. -- M = csvread('filename.txt'); plotmatrix(M); hold all M2 = csvread('filename2.txt'); plotmatrix(M2) 
deploytool Everything after typing that should be relatively easy.
This has always been an issue for me in matlab. If you're using macro/symbols you **must** put them inside $$. Do the labels display if there is just text?
Sorry, bad advice. Thanks for correcting me, bobinpants. On top of bobinpants' recommendations, you may also want to look into the scatter() function. If you're still unsure how you'd like to visualize your data, you can browse [this plot gallery](http://www.mathworks.com/discovery/gallery.html?s_tid=abdoc_plot_1) for ideas. 
 Data=load('Mat1.mat'); Struct1=Data.Struct1; Struct2=Data.Struct2; save('Mat2.mat','Struct1');
Thirding the other two commenters -- I have not yet found a Matlab textbook that I can really get on board with. They tend to really hold your hand for the first chapter or two, and then suddenly go off the deep end with complexity -- rather than gently guiding you through the intermediate stages, which is probably where you need guidance the most. But yeah, Matlab built-in documentation is pretty great. I recommend practicing along with that, a strong dose of Googling and reading the MathWorks forums, and of course finding a nearby Matlab guru to bug with questions. If you can find someone like that, I definitely recommend that even after you get a piece of code working, you go to them periodically and say, "Hey, can you look at my code? Is there a better way to do this?" You learn a lot of good tricks that way. One last tip: USE THE DEBUGGER AND CODE ANALYZER! I used to just ignore the warning messages in my code. Then I gradually realized that the vast majority of them, even if they aren't telling you anything mission-critical, are encouraging good coding style. I've learned to develop better coding habits that have largely helped avoid certain common types of bugs by always writing code that is clear of any code analyzer warnings/errors.
It didn't work... but let me run it by you to see what I did wrong (if you don't mind). So I loaded one of the mat files first Data=load('materials2.mat'); then within that there is the structured file Ag, which needs transferring, so I did the following. Struct1=M.Ag (M.Ag is found within materials2.mat) so then I went to save it in materials.mat, the one I want to transfer it into,using save('materials.mat','struct1') aaaaaaaand I got an error :[ what went wrong? 
Have you tried looking yourself... Just literally copy your title and put it in google. First hit...
yes sorry if you do plot3(c(:,1),c(:,2),c(:,3),'-') then it will plot a line in 3D
This is the way I learned MATLAB, documentation and trial-and-error. I also had years of programming/scripting experience and more than a semester to become something close to an expert in MATLAB programming. I would say this strategy would work for someone with programming experience and time, but not necessarily for someone taking a class. In fact, for someone with an accelerated learning pace and introductory knowledge of programming, the most valuable resource won't be a textbook, but a TA or professor office hours. Having someone to answer ill posed questions is a boon to a novice's learning.
&gt; an error Why do people never post the error? It's the single most useful thing to provide. If that's actually what you typed, `struct1` doesn't exist, `Struct1` does.
No, they don't. I'm running a script that is working in 2013b and fails to render the labels in 2014a.
Thank you for your help, between your posts and /u/bobinpants I think I have what I need. I looked into the scatter function before posting, but I could not figure out how to use the different columns as two separate inputs, which scatter requires, but from /u/bobinpants post I think I figured it out. 
Thank you for your help! the ability to distinguish between columns of my input was the piece I was missing! 
Greatly appreciated, since I'm only interested in properly exported figures for publication. I'll try these out. Thanks! 
This worked (reduced increment) x = 0:.1:20; y = sin(pi*x); stem(x,y); 
need the function to go to 0 after 11 man
Check out Jan's recommendation on MATLAB Answers: http://www.mathworks.com/matlabcentral/answers/56304-the-analog-input-block-has-timed-out-while-trying-to-synchronize-to-real-time-kernel &gt;This is likely because the real-time kernel runs at slower rate than it should or has not started at all. The most frequent cause of this behavior is aggressive power saving, so please first look for power saving options and choose maximum performance, especially for CPU. Sometimes, it is necessary to go to BIOS settings and disable EIST or C1E. These are CPU power saving methods and "disabling" means "setting to maximum performance, no power saving". I also recommend running the [confidence check](http://www.mathworks.com/help/rtwin/ug/testing-the-installation.html) to ensure that you have installed everything properly. 
You may want to pick a different increment. The sine of integer multiples of pi will always be 0. 0 = sine(0) = sine(pi) = sine(2pi) = ... Anyways, to answer your questions, you replace values in an array using [indexed assignment](http://www.mathworks.com/help/matlab/matlab_oop/indexed-reference-and-assignment.html) For instance to set elements 12-20 of y to 0 you could do: x = 0 : 1 : 20; y = sin( pi * x ); y(12:end) = 0;
I changed it to this : if Re &gt; 0 &amp;&amp; Re &lt;= 0.2 C_d = 24/(Re); else if Re &gt; 0.2 C_d = (21.12/(Re)) + (6.3/(sqrt(Re))) + 0.25; end end Now it gives me another error saying " Undefined function or variable C_d" 
Many thanks for the suggestion, but it doesn't work. The synchronization block would still time out.
Double ampersand is a short-circuit AND, so if Re is zero or negative you will never declare C_d.
Try both and time them to see which is faster. In general I'd guess the first. You have a classic space/time tradeoff, though it sounds like a low key one. The space for a single field is completely negligible. The time for the calculation is probably also minuscule, but if its in your algorithm's inner most loop I guess it might impact performance. Mostly it sounds like premature optimization. Unless you're having memory issues that can be tied to that variable (ludicrously unlikely) or performance issues that can be tied to the calculation of that variable (still very, very unlikely) just do whichever makes your code more readable.
So just overwrite with zeros. 
Step 1: make a user defined function that is the piecewise function you are trying to fit Step 2: use [nlinfit](http://www.mathworks.com/help/stats/nlinfit.html) or [lsqnonlin](http://www.mathworks.com/help/optim/nonlinear-least-squares-curve-fitting.html)
Sadly I can't show you the actual data for national security reasons (I wish I was kidding LOL). Maybe you can share what your approach would be? I'll see if I can show you something when I get into work tomorrow where my data is! 
Maybe this drawing will help with what it looks like. http://imgur.com/lR9DL3w 
Nope! :)
Everything you plot has a "graphics handle". A variable which allows you to access and modify it's properties. instead of just histfit(dataset,32), save the variable which stores the handle handleArray = histfit(dataset,32) now handleArray is an array which contains 2 elements. The first is a handle which describes the histogram. The second is a handle which describes the curve. You can delete the first one. Just do this: handleArray = histfit(dataSet,32); delete(handleArray(1)); Now you should just see the curve.
Matlab's sparse matrix support may help you on this. One way to declare them is by calling the following function: sparse( matrix_row_indices, matrix_column_indices, element_values ) So, you'd generate a N-by-N identity matrix by calling: sparse( 1:N, 1:N, ones(1, N) ) To generate a permutation matrix, just tweak this function call to reorder the row or column entries, like: permutations = [2 1 3] sparse( 1:length(permutations), permutations, ones(1, length(permutations) ) ) If you wish to get a full matrix in the end, just convert the end result to a full matrix: permutations = [2 1 3] full( sparse( 1:length(permutations), permutations, ones(1, length(permutations) ) ) Finally, you may create a convenience lambda function to wrap everything quite nicely in a nice bundle: perm_matrix = @(permutations)( full( sparse( 1:length(permutations), permutations, ones(1, length(permutations) ) ) ); P = perm_matrix( [2 1 3] ) Hope this helps,
Thanks, yeah the impact is negligible, just curious as it is often a brain teaser trying to design the algorithm and feels like cheating simply counting. Was kind of hoping that the algorithm was faster! 
Like... what algorithm does nlinfit use?
Use the [hold](http://www.mathworks.com/help/matlab/ref/hold.html) keyword. It allows you to plot multiple graphs in the same figure.
... The fuck :D ?
what is your initial value for y? if it is zero, you'll have a problem at t=0. You probably either have an initial value for ydot( t = 0 ), or you have a boundary condition at ydot ( y = 0 ). Look at the ODE and determine what's done. It seems to me like what you want to do is more of an error in your math than your programming. While on thet topic: y is a vector of two elements, right? in that case, the line Re = (2 * rho * y * a) / (m_u); also yields a vector. you then compare that vector to a scalar and use vector division. review your code regarding the vector dimensions because whatever it does so far is probably undefined. here're your steps: 1. review your original code regarding the vector dimensions e.g. the line metioned above. Then run ode45 with the initial values for y being greater than zero, e.g. y = [ 0.1; 0.1 ] 1. review your constraints, i.e. your initial values or boundary condition (probably the first. something like ydot( t = 0 ) = 0) and implement this by writing an if-block checking for t = 0, setting ydot and then return before the rest of the code. Btw, you don't need the return statement you currently have. it's the end of the function, you will return. only use return statements if you want to cancel execution of the function before its end. hope that helps. oh and for the lazy, the code is [here](http://pastebin.com/1vfPpafB).
Bad P or N
By the way, if you need the equation describing the lines of best fit, a gaussian has only two parameters which are easy to estimate from your data. myMean = mean(dataset); myVariance = var(dataset); You can then save these variables and plot the curves however you want. You may have more freedom to plot the curves the way you like using the plot function. For example, this will plot a blue dashed line. x = linspace(-10,10,100); y = exp(- (x - myMean).^(2) /2/myVariance)*(1/sqrt(2*pi*myVariance)); plot(x,y,'b--');
This worked. Thanks ! Also My bad. It is actually supposed to be y(2) in the Re equation. My solution for ODE45 is supposed to be (t, out) where out is 2 column vectors, first being the position and the other being the other being the velocity.
is there some toolbox needed for this? I can't seem to use these functions. 
First of all posting your code would be helpful too, so we can see if it can be improved. Possible improvements: - Try using ode23s. - You can also try reducing the accuracy by setting options with odeset (RelTol and AbsTol settings). Increasing these values (tolerances) means lower accuracy. - Provide the Jacobian matrix in odeset. Since you have a linear system, the Jacobian is constant. This should also considerably make it faster. J (the jacobian) is the matrix A if you write the system of odes in this form: dx/dt = A x . To do all of the above: options=odeset('Reltol',value,'AbsTol',value,'Jacobian',J) [T,Y] = ode23s(odefun,tspan,y0,options) Try first without reducing the accuracies. Also try both ode23s and ode15s and maybe other solvers (http://www.mathworks.nl/help/matlab/math/ordinary-differential-equations.html)
This is the system of ODEs I'm solving: function ode=DifferentialEquations(ton,toff) global k1 k2 k3 k4 k5 k6 L1 L2 L3 L4 H1 H2 H3 H4 g1 g2 E1 E2 A0 J0 IRXon IRXoff gamma AIP=@(t) 0; for i=1:length(ton) AIP= @(t) AIP(t) + (A0*(heaviside(t-ton(i))-heaviside(t-toff(i)))); end IRX=@(t) J0*(heaviside(t-IRXon)-heaviside(t-IRXoff)); function dy=model(t,y) dy=zeros(9,1); A=AIP(t); J=IRX(t); gamma=1.4e-6; delta=3.5e-7; dy(1)=k1*y(4)+L1*y(2)+H1*y(7)+H4*y(9)-(k2*A+L2*(J/(J+delta)))*y(1);%C1 dy(2)=k3*(1-(J/(J+gamma)))*y(5)+L2*(J/(J+delta))*y(1)+L3*y(3)-(k4*A+L1+L4*J)*y(2);%C2 dy(3)=k5*(1-(J/(J+gamma)))*y(6)+L4*J*y(2)-(k6*A+L3)*y(3);%C3 dy(4)=k2*A*y(1)+L1*y(5)-(k1+H2+L2*(J/(J+delta)))*y(4);%Q1 dy(5)=k4*A*y(2)+L2*(J/(J+delta))*y(4)+L3*y(6)-(k3*(1-(J/(J+gamma)))+L1+L4*J)*y(5);%Q2 dy(6)=k6*A*y(3)+L4*J*y(5)-(k5*(1-(J/(J+gamma)))+L3)*y(6);%Q3 dy(7)=k1*y(8)-(k2*A+H1)*y(7);%D1 dy(8)=k2*A*y(7)+H2*y(4)-(k1+H3)*y(8);%D2 dy(9)=H3*y(8)-H4*y(9);%Z end ode=@ model; end
What is this part supposed to do? AIP=@(t) 0; for i=1:length(ton) AIP= @(t) AIP(t) + (A0*(heaviside(t-ton(i))-heaviside(t-toff(i)))); end This AIP thing and IRX can be calculated inside the odefun: J=J0*(heaviside(t-IRXon)-heaviside(t-IRXoff)); Avoid using globals. Pass the parameters as extra arguments to odefun. Rewrite the differential equations part to dy = Am * y So as a start, the first row of Am is [-(k2*A+L2*(J/(J+delta))) , L1, 0, k1, 0, 0, H1, 0, H4]; Since you have values that depend on the time you need to make a seperate functio fjac(t,y) which returns the jacobian each time and pass it in odeset: odeset('Jacobian',@fjac) This jacobian function basically returns the Am matrix of the odefun.
There is no need for for loops. Use find() to find the indices of the rows which have the same targ value. Then use sum() on those. I dont understand what this has to do with diff though, what is DataArrayDiff. For example: ind=find(DataArray(:,3)==1); x1tot=sum(DataArray(ind,1)); Without find it works too, then ind=(DataArray(:,3)==1); makes a logical array. I dont think this is much faster though.
I think the slicing is best. find() may default to finding the first location, rather than all locations. To the OP - If your matrix is huge, here is another way to do it, and to get all the 'targs' programmatically as well. The 'summer' matrix uses a matrix of ones and zeros to filter out only the values you want for each 'targ'. utargs = unique(DataArray(:, 3)); [xsums, ysums] = deal(0*utargs); for i = 1:len(utargs) summer = (DataArray(:,3) == utargs(i)) .* DataArray; xsums(i) = sum(summer(:, 1)); ysums(i) = sum(summer(:, 2)); end edit: english 
Have you heard of accumarray? It was designed for problems like this. http://www.mathworks.com/help/matlab/ref/accumarray.html
What versions of Matlab are the three computers running?
Are you using [this module](https://github.com/blickly/ptii/tree/master/lbnl/lib/matlab)? You need to compile the mex functions if so. Check out `mex help` for information on how to compile C code to run with matlab.
Yeah, nlinfit is from the statistics toolbox and lsqnonlin is from the optimization toolbox. If you don't have these you can use probably use the [OPTI Toolbox](http://www.i2c2.aut.ac.nz/Wiki/OPTI/index.php/DL/DownloadOPTI). MATLAB also has a [Curve Fitting Toolbox](http://www.mathworks.com/help/curvefit/index.html). There are also non-linear least squares functions on the [File Exchange](https://www.mathworks.com/matlabcentral/fileexchange/16063-lmfsolve-m--levenberg-marquardt-fletcher-algorithm-for-nonlinear-least-squares-problems).
I wanted the difference because **x** and **y** show the cursor position at time t. If I find the difference between x1 and x2, I can find the distance the cursor traveled from t1 and t2.
fprintf('computing important things and optimizing data structures...\n')
If your system is linear, you can write down the closed form solution. Perhaps you could solve it symbolically and then work with that. Given your system, the equations would be god awful ugly, but they can be computed. 
Alright, I may need some help understanding how accumarray works. when you type accumarray(subs,val), what exactly is subs, val. I've read the doc and searched the web on it, I'm not finding it very intuitive.
It is rather big at 180000x3. How are you dot-multiplying by DataArray? edit: Question 
Ha. I wrote a multidimensional optimizer for a small group of users and had this snippet waiting for them when they used it: hwb = waitbar(0,'Doing your job for you...'); 
fprintf('reticulating splines... \n');
Thank you! Will give it a try on Monday. I really do appreciate it.
I've read anecdotes in which updates that improved the speed of an algorithm from a few seconds to near-instantaneous were negatively received because it was so fast the user thought it couldn't really be doing what it was supposed to be doing.
I worked with a dude whose desk faced the wall opposite the door, so that when you stood at the door of the office, you saw the back of his head and his computer screen. We worked in Matlab a lot, and he had what he called his "sleep script"... basically it just created a bunch of random data and popped a bunch of plots and progress bars up on the screen at various intervals. He'd run the sleep script, put his hands on the keyboard, and take a little nap... to my knowledge, never got caught.
On the last day of my Master's course we took a long lunch from the computer lab to go to the pub- left a surface plot displaying random data regenerated every 3 seconds. When we came back there were a couple of demonstrators around it who hadn't wanted to touch the computer but were trying to work out what it was doing. 
sorry I didn't see this til now. Yes, line 4 is "dot-multiplying" (element-wise). Still shouldn't take too long, even at that size, assuming reasonable RAM on your computer.
Can you upload a .mat file with that data in it?
 fileID = fopen('holmesSample.txt'); holmesCell = textscan(fileID,'%s %s', 'Delimiter', '='); fclose(fileID); holmesCell{2}{5} Edit: and you'll need str2num on the result, of course.
Thanks, I really appreciate it! The only thing is that the location of 'finterval' may change from file-to-file but a simple 'find(strcmp('finterval', holmesCell{1}))' solved that problem. 
yw
Yes. You can use real-time parameter tuning with Simulink Realtime to tune the parameters in your target model( both querying current values and changing them). See: http://www.mathworks.com/help/xpc/examples/parameter-tuning-and-data-logging.html Simulink Realtime has a MATLAB , C/C++, and a .NET API for interfacing with the target computer during simulation. You will want to use one of these APIs on the back end of your GUI to perform the actual control. C/C++ API - http://www.mathworks.com/help/xpc/cpplist.html .NET API - http://www.mathworks.com/help/xpc/netlist.html MATLAB API - http://www.mathworks.com/help/xpc/classeslist.html
So the error is telling you that Data.Struct1 doesn't exist. Why would that be? Look at the structure of Data.
The way I do it is to export data to arrays instead of timeseries, since I think that's easier. Double click the to workspace block and change it to array instead of timeseries. Then you get a matrix since you have 5 signals together. If you need the time also, somewhere in your model put a clock block and connect it to a workspace and change it to array too. Now to extract each column (A is the name of the output): A(:,1) %first column However Matlab plots seperate lines automatically for each column in A if you do this: plot(t,A); You can do the same with a timeseries structure but you need to get the data using: A.data and A.time for the time array. EDIT: Saw your edit, you dont have a timeseries but a structure with time probably. Then you can do .signals.values like you found out instead of .data. 
Thanks for the reply, I'll edit the bit about the timeseries now. I was used to doing it this way: A.Data(1,1) And then extract the data accordingly to separate variables, but of course this isn't possible in a structure with time, which I found out the hard way. That's how I figured out how to do the .signals.values. I do prefer using structure with time, because Simulink exports a variable called tout which holds the time. So in the end I only have to issue this to plot it all: plot(tout,column1); plot(tout,column2); and so forth.
Yes, however be aware that Matlab at default only exports a maximum number of 1000 values for tout. If more time steps are done during the simulation Matlab is going to save only the last 1000 values and thats not what you want because then plot(tout,data) is not gonna work. So that's why I export the time with a clock block, where you dont have this problem. Or you can also uncheck the limit of 1000 in configuration parameters (gears icon), then go to export/import and uncheck limit data points to last:.
also also, what is the meaning of this? Why doesn't this one work out? &gt;&gt; save('Materials2.mat','-struct','materials.Struct1', '-append') Error using save The argument to -STRUCT must be the name of a scalar structure variable.
Is it possible? Yes. It will be clunky but it's relatively straightforward. You can load the frames of your *.gif using [`imread`](http://www.mathworks.com/help/matlab/ref/imread.html#f25-722074) and [create a GUI](http://www.mathworks.com/discovery/matlab-gui.html) to display the image with some playback control pushbuttons. Depending on what button is pushed, you update the axes accordingly using [`image`](http://www.mathworks.com/help/matlab/ref/image.html).
Do yourself a favor. Load in your data, then double click on it in your `Workspace` window. This should open your `Variables` window and allow you to investigate the structure of your data. This will allow you to fix your syntax.
But what I need is the commands used to transfer variables from one mat file to another. 
Likely the same reason your other command won't work, you're not correctly addressing your data structure. `materials.Struct1` does not exist, this is exactly what the other error message is telling you. Either your data is incomplete or it is formatted differently than what you're expecting.
then what should I format it to? they are both 1x1 sruct files containing 32 different variables.
It doesn't matter what you format it to. I'm trying to get you to check to see if you're addressing it correctly. I honestly don't know how else to explain it to you.
 &gt;&gt; Data Data = materials: [1x1 struct] &gt;&gt; Data.materials ans = PV: [1x1 struct] wavelength: [1x601 double] glass: [1x1 struct] silver: [1x1 struct] air: [1x1 struct] ITO: [1x1 struct] solar: [1x1 struct] flat: [1x1 struct] al: [1x1 struct] PEDOT_PSS: [1x1 struct] LiF: [1x1 struct] PMMA: [1x1 struct] PET: [1x1 struct] THV: [1x1 struct] PS: [1x1 struct] aSi: [1x1 struct] PMMAd: [1x1 struct] PSd: [1x1 struct] SiO2: [1x1 struct] crSi: [1x1 struct] polySi: [1x1 struct] TiO2: [1x1 struct] Si3N4: [1x1 struct] Au: [1x1 struct] &gt;&gt; Data.materials.Struct1 Reference to non-existent field 'Struct1'. &gt;&gt; Struct1=Data.Struct1; Reference to non-existent field 'Struct1'. &gt;&gt; 
And we're back to your syntax. You can see that `Data.Struct1` doesn't exist. The only field in `Data` is `materials`. ETA: Say you want `solar`: `Struct1 = Data.materials.solar;`
To use this process, do I need to have the frames already separated or can I do it with the *.gif file
`imread` should read them all in at once if you call it appropriately. I don't have MATLAB in front of me currently so I'm not sure how the output is structured.
ok.... so I got that, now back to the original question...now how do I put Data.materials.solar into materials2.mat? &gt;&gt; Data=load('materials.mat'); &gt;&gt; PS=Data.PS Reference to non-existent field 'PS'. &gt;&gt; PS=Data.materials.PS PS = ..................................(data)................. &gt;&gt; save('materials2','Data.materials.PS') Error using save 'Data.materials.PS' is not a valid variable name. &gt;&gt; save('materials2.mat,'Data.materials.PS') save('materials2.mat,'Data.materials.PS') | Error: Unexpected MATLAB expression. &gt;&gt; load materials2 &gt;&gt; save('materials2.mat,'Data.materials.PS') save('materials2.mat,'Data.materials.PS') | Error: Unexpected MATLAB expression. &gt;&gt; save('materials2','Data.materials.PS') Error using save 'Data.materials.PS' is not a valid variable name. ------------------------------------ &gt;&gt; Data=load('materials.mat') Data = materials: [1x1 struct] &gt;&gt; PS=Data.materials.PS PS = n: 1.5700 k: 0 interp_flag: 0 &gt;&gt; save('materials2','PS''-append') Error using save 'PS'-append' is not a valid variable name. &gt;&gt; save('materials2','PS','-append') &gt;&gt; load materials2 &gt;&gt; &gt;&gt; and PS does not appear in materials2 
I've got two Macs running on Mavericks with no problems, myself. I'm even running an older version (still on 2012b) so it's not that your version is out-of-date per se... although of course there could be bugs that are 2014a-specific.
Running 2013a just fine, or at least as normal as previous years. Only two major things I ever have issues with: 1) Mac MATLAB and the clipboard don't talk well (but I don't think the Mac clipboard talks well with any program), and 2) there is a compiler bug that I don't recall specifics about (just test out executables before prime time).
Thanks! It worked and you're a lifesaver
Don't have MATLAB in front of me, but you can try something with reshape: test = 1:25; slicesize = 5; maxes = max(reshape(test,slicesize,(length(test)/slicesize))); Should work for a vector, you might have to get a little creative for multidimensional arrays and arrays that aren't evenly divisible. There's always loops too.
2013b and it crashes every now and then. It is weird :/ 
&gt; maxes = max(reshape(test,5,(length(test)/5))) &gt; Thanks.. I know about this technique, but is there a way where I can get the index of the multiple max value in relation to the original vector (the "test vector" in your example)? 
I don't feel like trying to be clever, might as well just use a loop test = 1:25; slicesize = 5; [maxes,idx] = max(reshape(test,slicesize,(length(test)/slicesize))); for ii = 1:length(idx) idx_new(ii) = idx(ii) + slicesize*(ii-1); end
I had this problem too. You can always tell when it's about to happen because there's a slightly longer than usual pause allowing you to get all your expletives out ahead of time. 
omg sir, thank you soooooo much. This language has been exceptionally hard to learn on my own, and I just was NOT getting this at all. Thank you thank you thank you for all your help and patience. Enjoy the gold, it's the least I can do to show my appreciation!
No problem :) I'm happy to help, though I do apologize for being testy. 
I know this is solved, but you can avoid using the find command by using logical operators instead. ind = sqrt(x.^2+y.^2) &lt;= r; x = x(ind); y = y(ind); z = z(ind); This can help if you have very large data sets. It also works on ND matrices.
what are your machine specs?
There's really no way we can even begin to answer your question with the minimal amount of background or detail you've provided.
I've got a retina MBP running Mavericks and MATLAB. I was having frequent crashes, figured out that they were related to the Java UI, and replaced the bundled Java version with a newer version. Literally copied and pasted from my Library folder into the contents of my MATLAB install. Fixed all my crashes. [There is probably a safer way to accomplish the same thing](http://floriko.wordpress.com/2014/04/04/fix-matlab-2014a-looks-blurry-on-your-mac-with-retina-display/), but I like to live dangerously. I think it was Java 7 Update 50. It also fixed another issue I was having with the UI. Namely the one in which the interface looks like a shit-smeared lens that fell into a tub of vaseline. edit: Tried it with Java 8, got crashes and slowdown. Java 7 Update 65 seems to work great! If you, too, like to live dangerously, follow these steps: 1. [Download Java SE Runtime Environment 7u65](http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html) (the .tar.gz one) 2. While that's happening, go to Applications/MATLAB.app (might have some stuff like r2014 or something in the name), right click on the icon and select "Show Package Contents." 3. Now you're on the inside. Go to sys/java/jre/maci64/. Inside maci64 is yet another folder called "jre". Make a backup of said incepted "jre" folder and put it on your desktop–ideally next to your "PORN(circa 2007)" folder. 4. Unzip your still-warm download; locate the "Home" folder within and then rename it to "jre". 5. Copy your newly-named "jre" folder into Applications/MATLABpossiblyotherstuff.app/sys/jre/maci64/ 6. Run MATLAB and rejoice; first at the crispness of the UI, then at the fact that you can actually use the doc command without MATLAB crashing (if your issue was the same as mine).
Check out the comment I just left. You will no longer feel like you have astigmatism every time you have to use MATLAB and will probably want to kiss me all over.
Hope this helps, array = 1:30 submaxes = arrayfun(@(n) max(array( [1:5]*n)), 1:6)
You don't need to delete the bundled Java version. There is an environment variable "MATLAB_JAVA" that you can set to point to a new version. See: http://www.mathworks.com/matlabcentral/answers/103056-how-do-i-change-the-java-virtual-machine-jvm-that-matlab-is-using-for-mac-os
based on this, can you then create a new vector of the size of the "test" variable, where the values ​​are equal to 1 at the position of "new_idx" and the rest are 0 ? 
The only trouble I have had was with `doc` and some of those things. [This](http://www.mathworks.com/support/bugreports/870843) fixed it though.
I had [this problem](http://stackoverflow.com/questions/16724242/matlab-r2013a-on-mac-os-10-8-3-crashes-when-viewing-documentation) once upon a time
Haven't used it, but http://www.mathworks.co.uk/help/images/ref/imadjust.html seems like a likely starting point.
first you need to convert your bw image to the right file type to accept color http://www.mathworks.com/help/images/ref/im2uint8.html http://www.mathworks.com/help/images/converting-between-image-classes.html. Color images have a intensity plus a vector of rgb i.e. [123 50 90] for each pixel. 
Thanks for your reply, I will give this a try! I didn't mean to rhyme that... Want some pie?
The image that I have actually does have an rgb vector. The vector just has the same value for all rgb values. So black has values like [9 9 9]. Thank you for your reply though!
%read image file input = imread('lenaTest1.jpg'); % reads grayscale image. Stores as [n,m] uint8 %convert to grayscale if needed %input = rgb2gray(input); %uncomment if image is RGB format -&gt; [n,m,3] uint8 %input = ind2gray(input); %uncomment if image is indexed -&gt; (X,map) %set thresholds Th1 = 0; Th2 = 50; L = (input &gt; Th1)&amp;(input &lt; Th2); %threshold image -&gt; L is logical Masked_input = input.*uint8(~L); %set thresholded pixels to zero Output = repmat(Masked_input,1,1,3); %create copy of 'Masked_input' in RGB format -&gt; [n,m,3] uint8 Colour = 1; % 1=red, 2=green, 3=blue Output(:,:,Colour) = Output(:,:,Colour) + uint8(L)*255; %set value of thresholded pixels to 255 for selected colour layer only. figure; imshow(input); title('Original image'); figure; imshow(Output); title('Output image'); 
Try 'doc format' for a good description of your options for displaying numerical data.
format long g. It isn't perfect, but it's the best Matlab has got.
The screen output on Matlab isn't really 'proper' output, it's more like a quick look at the data. If you want to control the formatting of the output, you need to use fprintf() which gives you complete control over how the numbers are displayed. The downside is that it will take a bit more code, so perhaps in your case you might want to write a function that prints out the data using fprintf() internally
this worked thanks a lot!
I haven't tested this, but it's always important to be aware that logicals and doubles *are* different types, even though the logicals get printed as 1 and 0. My guess is that the problem is in converting a logical to uint8, usually Matlab does the conversions automatically and it works fine but sometimes it doesn't do what you expect and it trips you up. A very good example would be something like x = 1:3 x = x&gt;1 % x is now [0 1 1] x(2) = 2 % x is now [0 1 1]...wait, what?? It's because x is a logical array, so the value 2 gets converted to a logical before being stored in the array. The answer is that on the second line, it is vitally important that you read it as [false true true] rather than as numerical values [0 1 1]. False and 0 are not the same thing, but Matlab does the conversions automatically so pervasively that 90% of the time you can just treat it as though that were the case. Whenever you are faced with this problem, you can just put a + in front of the logical array to convert it to a double array of 1s and 0s. For example ~idx_red : %finds inverse matrix with *FALSE* on pixels of interest +(~idx_red) : %finds inverse matrix with *zeros* on pixels of interest Again, I'm not sure if this will fix your problem, but it is very important to know
This looks like it has some great ideas. Thanks for your help I will give it a try!
This may fix my problem. I assumed at first that converting the logical to uint8 would give me a usable array at first. Thanks for your reply.
This looks really good. I didn't think of using rgb2gray. Thank you very much!
Yes, look at imadjust.
MatLab has a lot of convenient functions for image analysis. :)
SSD's primary claim to fame is miniscule seek time. You'll likely experience faster launching of MATLAB if it resides on the SSD (there are lots of tiny files involved, many functions are m-files, etc). For sustained transfers, it's entirely possible that a RAID could outperform a SSD. As /u/college_pastime below mentions, it will depend on the specific hardware. Also be aware that caches (in both operating system and drive) can yield misleading read/write times. 
Linux [caches](http://www.thomas-krenn.com/en/wiki/Linux_Page_Cache_Basics) files to speed up future reads. Try running the exact same benchmark multiple times, ie, tic; loadfile(); toc tic; loadfile(); toc In most scenarios, the second time will be much faster because the file has been cached by the kernel in unused memory.
Regarding [drive caches](http://en.wikipedia.org/wiki/Disk_buffer#Write_acceleration), hard drives (mine anyway) have 32 or 64 MB of cache. So I can write a 64 MB file to the drive at nearly SATA-3 interface speed, the drive will write it in the buffer, and return "done writing" to the OS. Then over the next half second or so, it will actually write the file onto the platters from the cache. It lets the drive perform at SATA-3 speed when writes are sufficiently small and infrequent by amortizing the write time.
The more you know! (*
http://stackoverflow.com/questions/6511534/can-i-buy-remote-matlab-processing-time
I can't speak for anyone else, but I am confused by your post. The cross product is only defined for two vectors in three Cartesian dimensions. (It can also be defined for seven dimensions, but that's a bit different). There is no such thing as a cross product in a 361 dimensional space.
I do not understand what your A and B vectors are. i run into the same problem as /u/Mimshot also you say &gt;My a1, a2, and a3 are arrays three times as large as the arrays b1, b2, and b3. which confuses me even more edit: &gt;C = cross(A,B,dim) evaluates the cross product of arrays A and B along dimension, dim. A and B must have the same size, and both size(A,dim) and size(B,dim) must be 3. The dim input is a positive integer scalar. http://www.mathworks.nl/help/matlab/ref/cross.html
How does this help me? Suppose instead I give you a general polynomial. There is always a solution in complex variables. So the question rephrased for this problem would be, How would you find the root with the smallest magnitude?
You're probably right so I'll step back. I'm doing work with antennas for an internship and have been using *Antenna Engineering Using Physical Optics* by Diaz and Milligan. The software the book came with was messed up but I found errata for it and it seems to work for the most part. I'm trying to replicate a plot in the textbook using the same inputs as the book gave. This plot is supposed to have one curve for the E field polarization and another for that of the H field. I can get the E field with no issue but the H field is causing trouble. Earlier in the text it says to go from the E field outputs (Pth and Pph which I have) to the H field outputs, I need to take the cross product of the unit vectors in the direction of propagation of my wave (spherical coordinates r, theta, and phi) with the outputs from E. My program doesn't output the r-component for E, so I took it to be zero. As you may know, the unit vectors r, theta, and phi each have components in three orthogonal directions x, y, and z. Refer to the picture in the OP and read the first 4 lines to see what I mean. Now look down to the first matrix halfway down the page. The problem is I'm not sure how (not even sure if I'm allowed to by the rules of math) to take a cross product where some elements in the matrix are arrays and others are arrays of a different size.
Gradient descent is one of several local-minimum-finding algorithms. Take a look at this: http://www.mathworks.com/help/optim/ug/fminunc.html Basically, it's like rolling a ball down a hill until it stops. This finds the local minima. You can keep searching my moving the ball until it rolls to a different spot.
How many dimensions do you have? Will your functions always be [differentiable](http://en.wikipedia.org/wiki/Differentiable_function)? If so, you could use a bit of calculus to build a list of inflection points, and then only check those to make sure they're actually a minima and find the smallest one.
R theta and phi are not unit vectors because spherical coordinates do not define a linear space over which you take the cross product. Just convert your propagation direction back to Cartesian coordinates and the rest should be easy. 
Root-finding procedures will typically find a local root meaning that the result you get will highly depend on your starting value. If your function is not too costly to compute you could try different starting values and see to which points they converge. If you know the region where your lowest zero should be you could also try some constrained minimization (fmincon) as explained at the bottom of this [page](http://plato.asu.edu/sub/zero.html)
&gt; Elements can be anything Nope. They have to be elements of a field. So when you say the following &gt;The elements a1, a2, a3, b1, b2, b3 are not simple numbers. In fact, they are, themselves, column vectors (arrays) Which are distinctly *not* elements of a field, some (possibly many) results about algebra/arithmetic of matrices do not necessarily hold. Hence, your matrix of the form [i j k a1 a2 a3 b1 b2 b3] is not 3x3, nor 7x7 and hence the cross product of A = &lt;a1, a2, a3&gt; and B = &lt;b1, b2, b3&gt; is not defined.
How can you do the same for multidimensional arrays? for e.g. test = rand(25,3);? Where i take each column through this index process. I have done it with loops, but i want do it without as it slows my system considerably. 
You can use Amazon Cloud, but of course you have to pay for this - there you can run your code in parallel. http://www.mathworks.com/discovery/matlab-ec2.html
I won't be able to get to MATLAB until tomorrow, but a quick way would be to drop the previous solution into a separate function and then loop through and feed the columns to it. There is most likely a way to generalize it using [linear indexing](http://www.mathworks.com/help/matlab/math/matrix-indexing.html#f1-85511) and/or [arrayfun](http://www.mathworks.com/help/matlab/ref/arrayfun.html), but I'd need to play around with it a little bit to get it working.
&gt;I won't be able to get to MATLAB until tomorrow, but a quick way would &gt;be to drop the previous solution into a separate function and then loop &gt;through and feed the columns to it. I have developed a solution this way, but this makes my system very slow with a matrix 1200 x 10000.
I will provide the code: %Maxout part data = rand(30,5); new_vectorDrop = zeros(size(data,1),size(data,2)); for i=1:size(data,2) % first loop paVector = data(:,i); maxoutGroupSize = 6; maxoutUnits = length(paVector)/maxoutGroupSize; %%%% the part i learned from you idx = zeros(2,maxoutUnits); idx(1,:) = 1:maxoutUnits; [maxes,idx(2,:)] = max(reshape(paVector,maxoutGroupSize,maxoutUnits)); maxoutUnitsIndex = sub2ind([maxoutGroupSize maxoutUnits],idx(2,:),idx(1,:)); new_vector = zeros(size(paVector)); new_vector(maxoutUnitsIndex) = 1; %%%%%% %____________________________________________________________________ %Dropout part % I use this to "turn of" the max vlaues with 50% probability dbMask = binornd(1,0.5,1,maxoutUnits); dropoutUnits = dbMask.*max(reshape(paVector,maxoutGroupSize,maxoutUnits)); dropoutUnits(dropoutUnits==0) = []; dropoutUnitsIndex = zeros(1,length(dropoutUnits)); for ii=1:length(dropoutUnits) % second loop dropoutUnitsIndex(1,ii) = find(paVector==dropoutUnits(1,ii)); end new_vectorDrop = zeros(size(paVector)); new_vectorDrop(dropoutUnitsIndex) =1; new_vectorDropSet(:,i) = new_vectorDrop; % this is the goal value/array end %------------ I know this is a stupid way to show you, but just ask me for any clarification. And again thanks for your help
ideally i would like to find a way to remove both loops, but the first one is the most important one
Is it just that you wrote "transformIDM" instead of "transform"? 
This is the standard plot that my professor prefers for journal papers. Take it and modify it as you wish. Also the toolbox export_fig is your friend. Find it and download it if you don't have it already. An example of my plot is shown [here.](http://imgur.com/xe9STef) figure('color','white') hold all dataselectplot = plot(data(x),data(y),'linewidth',2,'linestyle','-'); axis([minx,maxx,1.1*miny,1.1*maxy]); set(gca,'Fontsize',14,'fontname','arial') box on xlabel('X Axis Label');ylabel('Y Axis Label'); dataselectleg =legend('Legend 1','Legend 2'); set(dataselectleg,'Location','Best','Box','Off','Color','None','Fontsize',14,'fontname','arial'); %Export Figure to Folder s = ['./' string '_additionalfileinfo.jpg']; export_fig('nocrop','-m2','-painters',sprintf(s));
With final insertion into the document, assuming you use Latex, I do this: [Inkscape images with latex fonts](http://www.howtotex.com/tips-tricks/inkscape-images-with-latex-fonts/) In Matlab just save as .eps, open in Inkscape and proceed as described in the how-to.
I use Tecplot for this - use one standard template then import the data files. Others use gnuplot, still others use root. IMHO Matlab isn't the best when it comes to reliable, repeatable styles.
 %This gets the current screen resolution/size W=get(0,'ScreenPixelsPerInch'); P=get(0,'ScreenSize'); %This sets your figure to 5" wide x 3" tall D=[5 3]; figure('position',round([P(3:4)*1/8 D*W])); axes('Fontsize',12,'fontweight','normal'); %This sets paper size if you print directly to pdf or something set(gcf,'PaperUnits','inches','PaperSize',D); set(gcf,'PaperPositionMode','manual','PaperPosition',[0 0 D]); box on; %This plots a line with X Y data, with style G{1}, color G{2}, width %L and name K P=plot(X,Y,G{1},'Color',G{2},'linewidth',L,'displayname',K);hold on; %This copies to clipboard automatically hgexport(gcf,'-clipboard'); If you are planning on printing your plots in both color and b/w, I suggest the [cube helix color scheme](https://www.mrao.cam.ac.uk/~dag/CUBEHELIX/) as the colors show up in variations of grey. There is literally a ton of options for how you want your legend to format and how you want your axis to show up (which you can explore) but the above script will always give you an exact size figure. 
What does 'hold all' do? Different from 'hold on'?
You're just making this up
If you build off of what /u/cromissimo posted you can get something more generic. This is probably how I should have done it in the first place, I got a bit overcreative. Again assuming a uniform distribution of array elements: slicesize = 5; numslices = numel(test)/slicesize; [submaxes, idx] = arrayfun(@(n) max(test((1:slicesize)+slicesize*n)), 0:(numslices-1)); idx = idx + (0:(numslices - 1)).*slicesize; Where `idx` is the [linear index](http://www.mathworks.com/help/matlab/math/matrix-indexing.html#f1-85511) of the corresponding max value. If you need to map the linear index back to a subscript you can use the [`ind2sub`](http://www.mathworks.com/help/matlab/ref/ind2sub.html) function: [subidx(:,1), subidx(:,2)] = ind2sub(size(test), idx); Where column 1 is the row index and column 2 is the column index.
Have you tried using `lcc`?
From [MathWorks:](http://www.mathworks.com/help/matlab/ref/hold.html) &gt;**hold all** holds the graph and the current line color and line style so that subsequent plotting commands do not reset the ColorOrder and LineStyleOrder property values to the beginning of the list. Plotting commands continue cycling through the predefined colors and line styles from where the last graph stopped in the list. &gt;**hold on** retains the current graph and adds another graph to it. MATLAB adjusts the axes limits, tick marks, and tick labels as necessary to display the full range of the added graph.
I used to save the final figure with: print -dtiff some_name -r600 this way I can control the DPI parameter (here 600 DPI), which is often strictly specified in different journals.
No, what is it?
Shit I missed one. This code was originally set up using getenv to find the os info. If(strcmp(os,'windows')) is supposed to be a match, but the os variable for this PC using getenv doesn't return Windows it returns Windows_NT.
Just fixed that and ran it. Everything seems to have worked fine.
Thanks! This is interesting, but I was looking for something more explicit. I'm thinking I'll still use this to plot a more fluid surface when I present the data.
Question: Why do you think it isn't real? 
If you're looking to fit a surface to those points, fit will do it for you. However, you'll need an idea of what kind of function to fit. If you think polynomial will do, they have an example in the "fit" documentation.
 help save see 'append' option.
I'm sorry but I don't think that's the right interpretation. Peaks at 64 Hz and 128 doesn't necessarily mean that those are resonant frequencies. If you ramped the driving input up in frequency and you had a non-linear response at those frequencies, then I would buy that argument. 
Well, we need to see your C# code too. Are you looping through p or something? Also, many MATLAB programmers will use .^ out of habit/paranoia.
Unrelated... do you know how I can expand a vector (which is in a saved mat file) with a new value? 
.^ will raise each term in the array by the poower following the ^ operand. ^2 will perform a matrix multiplication rather than a square of the inside terms. Look up vector/matrix ops Edit: your p is a vector which matlab treats as a matrix with one row. So there is a matrix in there
I'm not aware of any method other than loading it in and saving it again. The `-append` flag for `save` only appends an entire variable to the *.mat file.
that is a shame... That is also how much i know 
Your equations do not implement the trapezoidal rule. [HINT implement this](http://en.wikipedia.org/wiki/Trapezoidal_rule#Non-uniform_grid) Things to note: 1) The magnitude of the time steps is not constant (non-uniform grid), but this does not necessarily matter. 2) It might be easier (conceptually) to use the trapezoidal rule to integrate the numerator and denominator separately and then divide the results at the end. 
You can use [matlab.io.MatFile](http://www.mathworks.com/help/matlab/ref/matlab.io.matfile-class.html) to edit portions of the MAT file without resaving the entire variable. [This example](http://www.mathworks.com/help/matlab/import_export/save-parts-of-variables-to-mat-files.html) demonstrates how. You may need to preallocate the array when you initially create the MAT file. I do not believe this feature supports array resizing.
First off, thanks, I really appreciate the help. I read the links and they were pretty helpful. One more questions though: The axes my current handle is set to doesn't display any important information to get in this case: what I do is display a DICOM image using imshow, and as I use my slider callback I sift upwards and downwards through the stack I have saved in handles. In other words, there isn't any intrinsic information in the parent (hObject in this case) that I use in my callback. What I see in the second example: Create Nested Callback Functions (Programmatic GUIs), I see there is a struct created: data = struct('val',0,'diffMax',1); which is modified in the nested callback: data.val = sval; data.diffMax = diffMax; and this is closer to what I have. This is what I currently have set up in my gui: I have a WindowScrollWheelFcn that more or less does nothing at this point. I listed this here, because it wouldn't work without it: function figure1_WindowScrollWheelFcn(hObject, eventdata, handles) then I have this function set up under it: function scrollfunc(hObject, eventdata) does stuff code What I think I have to do, after reading your commend, is change my first function to store the necessary information with: function figure1_WindowScrollWheelFcn(hObject, eventdata, handles) setappdata(mainfig, handles.imageStack, handles.imageStack) and change my latter function to: function scrollfunc(hObject, eventdata) getappdata(mainfig, handles.imageStack) does stuff code setappdata(mainfig, handles.imageStack, handles.imageStack) is this right? I would test this, but I'm away from my lab computer at the moment. Thanks again! 
I would use setappdata to store the images as app data when they are read in and then use getappdata in the callback to retrieve a certain image and draw it on the axes.
Would it be a better idea instead of saving everything to handles, instead to just save everything to appdata? I can do it your way, thanks for the advice. Unfortunately for me, I never really learned how to code GUI's intelligently, it was kind of a learn as you experiment kind of thing. I don't know if setappdata is more optimized/more clean, or if its just a preference kind of thing.
Are they all from the same room? 
Unknown, also when compared to this analysis of the same data: http://www.holistic.ecs.soton.ac.uk/data/home_dryer/data.php their algorithm does not produce this 192hz spike. 
I'm going to look at this using wavelets. Your code look fine. Did they apply tapers before doing the fft or use a moving window + average? edit: they did something a little different than you. Scaling and normalization aside, it looks like they had a 1 second fft window. I come from a different planet (I work with signals recorded directly from the brain) but when people (on my planet) do this, they will take a 1 second snippet of data, multiply it by tapers, fft the tapered signal, and average across the tapers (the tapers can be cosine tapers, some number of sleppian tapers, etc.) They then step the window forward in some increment, and repeat. When all is done they average across all time points, or look at how the spectrum changes over time. BRB with the wavelet transform. 
http://imgur.com/HUl6HnE Here's the log power calculated using morlet wavelets. Frequency axis is vertical, time (in samples) on X. It's subtle, but the 192 Hz peak is there through the entire recording, so I'd say it's real. 
Do you mean relative to the time-frequency plot I linked to? This is because of a property of the wavelet transform: the time-frequency resolution changes as a function of frequency, so the peak is broader and lower relative to the lower frequency peaks. If a uniform time-frequency window is important to you, then I would use multitaper fft's to analyze your data. (link here: http://en.wikipedia.org/wiki/Multitaper; also check out the Chronux toolbox for a matlab implementation) I just wanted to confirm those peaks using a different approach. 
Any time! 
It's ok. You weren't helping before either
Watch your C# datatypes. If you have any integer variables you may end up with integer overflow or mixed mode arithmetic causing rounding issues.
There IS a array in the equation, you said so yourself, p is a vector. .^ is an element-wise operation, which means it can have a different effect when any of the variables it operates on are non-scalars. Also, some people use element-wise operators by default, even when it makes no difference.
I used Matlab s built in fft, same as you. I also ran STFTs on the data with Gaussian windows, and the same leak was visible later in the data set.
You can use the plotting function surf.m. surf wants your x and y in matrix form. The strings of x,y, and z values can be turned into a grid via griddata.m You will have to set the range of the values you'd like to grid over. say your x vals in deg range 130:130.02 and you'd like them to be mapped at 0.001 deg. Then in the example for griddata.m you would use: dx = 0.001; xq = 130:dx:130.02; dy = 0.001; yq = 3.2:dy:3.25; zq = griddata(x,y,z,xq,yq); surf(xq,yq,zq); Mathworks has a tutorial that will help you learn some of this: [Creating Mesh and Surface Plots](http://www.mathworks.com/help/matlab/learn_matlab/creating-mesh-and-surface-plots.html) Also, read the help for each of those functions before using them to make sure you know whats going on.
An alternate way to do this without using interpolation is to use a [triangular surface plot and delaunay triangulation](http://www.mathworks.com/help/matlab/ref/trisurf.html). Edit: The example on [this page](http://www.mathworks.com/help/matlab/ref/delaunay.html) actually uses bathymetry data as an example of how to use trisurf.
It's pretty hard to troubleshoot your model from those images. I'm not really sure what your question is either. Also, it's probably worth pointing out that trains use a single phase for traction power. Railroads that run their own T&amp;D systems build the whole thing as a single phase. For example look [here](http://pixels.com/featured/northeast-corridor-power-lines-steven-richman.html). See how the distribution lines run in pairs not triples? They also tend to be lower frequency than the domestic grid, or sometimes HVDC.
Ok I see what you mean. I'll try explain a little more. The system I am simulating here is the B-series trains in perth western Australia. Which, as you mentioned, uses 25kV single phase overhead lines. The single phase is then fed through a transformer onboard the train (in blue). The active/inactive load subsystem in red is just so I can have it draw power while in a idle state (for air con ext). The output of the transformer is fed to two setts of 4 AC traction (induction) motors through, the rectified and smoothing capacitor. Which is then conditioned by the IGBT inverters to power the motors. I will be just lumping each set of 4 motors as two current drawing loads for ease of simulation. Now, I could be wrong, but I was under the impression that AC induction motors are 3-phase...right??? So the single phase is then converted to 3-phase at the IGBT subsystem. But this isn't really the problem. Because what I'm trying to do here is represent the load. Cant use a resistor...(its doesn't draw current). I can't use the 3phase AC motor given in MATLAB, because from what I understand, they need a primer to start...which just adds complexity. I have tried a dynamic load, but I can't work out how to make it draw current like an AC motor. Any thoughts? Please let me know if you want me to clarify anything. Some of my stuff before the motors could be incorrect...but I'm pretty sure this is the system layout (1phase-&gt;transformer, rectifier, capacitor, Inverter-&gt; 3phase-&gt;motor). Get me? Oh yeah, one more thing. In the second schematic in grey, I haven't got the load connected (you can see the terminals to the far right). This is just because I don't know how to make the load here
For the uninitiated, FEM is Finite Element Method (a standard partial differential equation numerical method).
Yeah, I'm trying to make a constant output power over some time with decreasing current and constant voltage. I'm pretty sure they are 3-phase (polyphase) IM's, rated at 195 horsepower 1225V, 116A, 60hz, 1773RPM each. I need to control the time of acceleration and the power delivered. My network is getting pretty big (16 stations with pie networks between each stop) so want to have my load as simple as possible to prevent it from crashing. When it comes down to it, I don't even care about the power conditioning before the motor or the motor its self. I just need to represent the load...even just as an ideal load. Its really an investigation of the loading effects on the network, not the actual train system edit: Sorry if i'm sounding frantic. Just a little frustrated trying to get it to work :) Also, I'v been trying other models but the outputs end up all distorted when I bump up the voltages. I think it could be the IGBT's...I don't really get them, so its difficult to know exactly where the problem is. 
Thank for the input! In the meantime I found a way to make it work. Apparently the xlabel position is measured from its top to the axis and the ylabel position is measured from its bottom to the axis (with a small offset, I don't know why, but it is so small I could ignore it). And the label text is centered relative to that position. What I did next: 1) Calculated how much space the labels needs (in pixels, centimeters or other units). 2) Changed the position of the current axes to make room for the labels. This is the position of the axes relative to the size of the figure. 3) Calculated the position of the labels. I centered them to their corresponding axis and used twice the font-size of the axes as offset. This position is relative/normalized to the size of the axes! You can see the result here: http://i.imgur.com/ySA3ITd.png I added some space on the right of the graph since I often use plotyy.
This will only answer part of your question (at best), but pulsing in general can be generated by the summation of a series of very similar frequencies. The addition of only a couple gives something called 'beating', which might be familiar if you've heard the 'wah wah' sound of playing really similar notes on a piano (like a G and a G sharp at the same time). Add a lot of those frequencies together and you start getting large-amplitude peaks called pulses, while all the noise in the middle starts to flatten out. The end result starts to look something like [this](http://i.imgur.com/L0WOkH6.jpg).The more frequencies you add together, the cleaner the pulse. However, this would only be useful if you want true, technically defined pulsing. Otherwise, I would say it would be easier just to create a binary signal which can be sent to the output device with a defined duration and then a set pause time. You can then just loop the command. Anyway, this might not be helpful at all, but I thought I'd throw in something since there aren't any comments yet. 
Thanks for the reply. Although not exactly what I'm looking for with the pulses, but you did give me a couple ideas. And when you say to create a binary signal..my scope only takes binary files, but i don't know how to create these in matlab. 
Cost?
Is there a reason you can't just use a for loop? It would only be 8 iterations, and if you operations ran as fast as the for loop that's pretty good. Another option is bsxfun, although I do not know the inner workings of that function.
just roll your own data structure containing relevant indices
Probably won't work on the GPU. MATLAB treats data on the GPU as a distributed memory object the same as if it were a distributed or codisteibuted array in a multi-worker environment. However you can index into GPU arrays now, so if instead of copying the data to a new array, you just reference it by index, MATLAB *shouldn't* copy the data. 
You can do this by writing tests for your code using the builtin unit test framework included in MATLAB: http://www.mathworks.com/help/matlab/matlab-unit-test-framework.html
Edit: Since you are doing element by element, just subdivide A into 8 chunks then do 8 discrete operations and reassemble later. Indexing would look like: C(start_idx:stop_idx, ... ) = A(start_idx:stop_idx, ... ) .* B Where b is the smaller matrix and A, B and C are gpuArray objects. I believe this will work...but I'm not confident that Matlab won't just convert indexed A into a temp var in memory....and it might be hard to tell. Note: to do it as written, you will have to compute the chunks serially. If you do it in parallel, C is a codistributed array....and there are no codistributed gpuArrays....so you would have to wrap it in a "gather"...but if you are pulling the whole matrix back eventually, that might not be a big problem. 
I can't see all of the math you are doing, but it appears to be fairly straight forward (just a lot of it). One of the other issues with MATLAB is that it does not support shared memory. So if you parallelize this with multiple workers per GPU, you have to copy the source matrix once for each worker. I would honestly just hunker down and take a week to learn cuda-c and write at least the core program in that. Either as a Mex file or a stand alone process. That will give you much better control over how things are stored in GPU memory and how the individual blocks and threads split up the work. Just for reference, I did a lot of development with the GPU processing using the 'built in' tools. I squeezed every last inch of performance out of the toolbox (without going to a c based cuda kernel). When we started migrating the code from MATLAB to C++, we saw a &gt;2x speedup mainly due to the more streamlined (to our problem) GPU memory management. 
x = inv(a)*b;
x = a\b; The relevant doc is http://www.mathworks.com/help/matlab/ref/mldivide.html This solves the linear system via Gaussian elimination (with pivoting), which is better numerically than calculating the inverse explicitly (both in terms of speed and accuracy).
Do the 6 cell arrays of 607 rows contain data as you expect? If so, check the 608th row of your data file to see if it contains a consistent format. Although I would have thought textscan may have produced a warning if any inconsistency occurs. I don't think your problem is with a textscan size limit. Some example code below: // Generate sample file out_fid = fopen('c:\tmp\out.txt', 'w'); for i = 1:46000 fprintf(out_fid, '%d %d hello %.3f %.3f there\n', i, 2*i, i/2, i/4); end fclose(out_fid); Contents of file: 1 2 hello 0.500 0.250 there 2 4 hello 1.000 0.500 there Parse it back in again: file_id = fopen('c:\tmp\out.txt'); data = textscan(file_id, '%d %d %s %f %f %s'); fclose(file_id) whos Name Size Bytes Class Attributes data 1x6 12328672 cell &gt;&gt; data data = [46000x1 int32] [46000x1 int32] {46000x1 cell} [46000x1 double] [46000x1 double] {46000x1 cell} Now if I go to my out.txt file and add the word 'pineapple' to the end of the line 608 (so it now has 7 fields) and run textread again, I get **no error** and: &gt;&gt; data data = [608x1 int32] [608x1 int32] {608x1 cell} [608x1 double] [608x1 double] {608x1 cell}
Does the bitness of your two MATLAB versions match (32bit vs 64bit). MATLAB uses the codecs installed on your system to read the AVI file. The bitness of the codec must match the bitness of MATLAB, so if this is the case you could be using two different sets of codecs. 
Good answer. Just an addendum -- I use `textscan` a lot and can confirm that it is a finicky beast. With regard to "I would have thought textscan may have produced a warning" -- yeah, that would be helpful, wouldn't it? BUT IT NEVER DOES. Instead, it just goes on its merry way, mangling your data. Just this morning I actually had a case where it was actually giving me MORE rows than were actually in my data file. (Turns out I just missed one of the format specifiers, causing it to divvy up the data weirdly.) So, yeah... if anyone at MathWorks is listening, some warnings when `textscan` doesn't get the format it's expecting would actually be really great.
I don't have access to matlab right now so I can't check this solution but: Try to create another struct that holds the structs reurned by load. Then you can load all data at once and access it with keywords from said struct
Does each run*mat file have the same exact number of variables, each having the same name? (note: variable size can vary) If so, do this: runFiles = dir('run*mat'); for i = 1:length(runFiles) run(i) = load(runFiles(i).name); end If run*mat doesn't return the file order you want, then you can generate the filenames within the loop so that you don't get weird ordering (e.g., on a unix system you might get run10.mat coming before run2.mat). Now, if some files have more variables than others, then you have a few options. One would be to go back and create empty dummy variables to serve as place holders in the .mat files lacking those variables (e.g., check to see if a variable is present using varNames = whos('run1.mat','-file'); if var1 isn't present then: var1 = []; save('run1.mat','var1','-append') ) and then do what I suggested above. Alternatively you can do you what you're suggesting regarding different variable names for each file. If you *really* want to do this, then you'll want to take advantage of the eval() function. runFiles = dir('run*mat'); for i = 1:length(runFiles) loadCommandString = ['runVar', num2str(i), ' = load(runFiles(', num2str(i), ').name);']; eval(loadCommandString) end Now, note what I did there. I concatenated a bunch of strings into one and stored it in loadCommandString. On the first iteration the string will look like this: 'runVar1 = load(runFiles(1).name);' When you call eval(loadCommandString), matlab will evaluate that string as if it was a command. Then you can save the resulting varialbes to a mat file by doing: save('bigRun.mat','run*');
Nicer than `eval` for this particular task is [`assignin`](http://www.mathworks.se/help/matlab/ref/assignin.html).
If you are absolutely sure that your 4*1000*800 matrix is actually a concatenation of 8 4*1000*100 matrices, why not treat it as such? From your description, it sounds like you are trying to do element-wise operations as one-liners at the expense of over-complicating your memory management.
So you want them every hundredth loop, or every loop after the hundredth? The first can be done through if any(k==100:100:m_steps) %do whatever end
/r/mri is a small community, but there may be someone there with Siemens knowledge.
I'll look into it, thank you!
Use a cell array. The cell type was designed for this exact purpose. eval() is the basic way to accomplish what you're asking, and it's generally discouraged, especially when there is a cleaner way to do it, like by using a cell array.
I'm not sure what you're trying to do with your nested for loops, but looping over the same variable (k) in both is probably not going to give you the results you're expecting.
I want the force under if r&lt;1-epsilon, to happen for every k between 1 and m_steps, but I want the forces under if r&lt;.1 to only happen after k=200, but until k=m_steps as well. 
I want the force under if r&lt;1-epsilon, to happen for every k between 1 and m_steps, but I want the forces under if r&lt;.1 to only happen after k=200, but until k=m_steps as well.
 if r&lt;.1 &amp;&amp; k &gt;= 200 
Why do you want random numbers that aren't random?
Yes. the 607 rows do have data as I expect. And I can't check the 608th because there is none in the data read by textscan. It stops at 607. And actually, the output looks like this: data = Columns 1 through 5 [607x1 uint32] {607x1 cell} {607x1 cell} {607x1 cell} {607x1 cell} Column 6 [606x1 double] I didn't notice this before but column six actually stops at 606. In your example, the reason your data stops at 608 after you add pineapple is because the format you submit to textscan with your file doesn't match with the actual file since this file now has an extra field, and the field is of type %s; therefore, textscan stops scanning once it encounters such an exception to the rule/format. So i checked if that might be the issue with my file, but every line before after and including 607 is uniform. I too agree it's not some memory/cell array size limit. But now I'm even more confused! Thanks for your help! 
It is very common to want this. I want a random but deterministic sequence of numbers. The idea is for testing and speedup purposes. For example, if I have an MC algorithm but I want to try to speed it up, I want to make sure I am always getting the same result to compare to. Or, in development, I want to make sure I am always comparing to the same thing., Only after I am happy with the developed algorithm, do I do something more advanced to set the random sequence. (In practice, you set the random seed with the system time or something like that but there are many ways. In matlab, just use `rng('shuffle')`) By the way, very few times that you ask anything for a random number is it truly random. In general, it is pseudo-random. There are, of course, ways to get a truly random number but that isn't important.
&gt; I want a random but deterministic sequence of numbers. Ignoring the contradiction that is "random but deterministic" I think I know what you mean. If you want such a sequence, then generate one. There really is no such thing as a sequence in `parfor` though. The individual iterations can be executed in any order. Your question suggests there's a bigger problem with your code. If the seed you pick changes the outcome of your MC in any meaningful way, then your algorithm is no good, you're not running enough iterations, or you're over-fitting.
They use different random number generators. See here in the documentation: [http://www.mathworks.com/help/distcomp/control-random-number-streams.html#btms9o_](http://www.mathworks.com/help/distcomp/control-random-number-streams.html#btms9o_)
From your answer, I'm afraid is seems that you're not familiar with the uses of [pseudo-random number generators](http://en.wikipedia.org/wiki/Pseudorandom_generator). What OP is doing is *extremely* standard practice, and he is rightfully worried about getting different numbers due to a seemingly unrelated choice between for and parfor. For example, using different random sequences each time makes debugging much harder. It makes repeating our experiments harder. Maybe I *do* have a problem with my method, and I want to find it out by repeating my experiments exactly, holding all variables constant except one? 
Ok, I know what a pRNG is, you don't need to link wikis at me. Now, tell me, how do you think they work when distributed across multiple cores, or even multiple machines? Even if they all shared a single RNG (Which they don't) there's no way to guarantee what order the iterations of the parallel loop get executed in. Lets say, they *did* share a single RNG, consider the following code: Q = zeros(1,4); rng(42); parfor i = 1:4 Q(i) = i + rand(1); end One execution might give you `[1.372 2.837 3.773 4.209]` and another might give you `[1.837 2.773 3.372 4.209]` depending on all sorts of things like network latency and scheduler availability. If you want guaranteed ordering, as I said before, you need to pre-allocate the random vector by generating a sequence and then using it as needed: Q = zeros(1,4); rng(42); R = rand(1,4); parfor i = 1:4 Q(i) = i + R(i); end Moreover, just because something is standard practice (in some fields) doesn't make it a good practice.
Hi, First of all, if I am using the same generator/algorithm, and the same seed, the sequence *better* be the same across all implementations, etc. And, I am (trying) to reset the seed **inside** of the `parfor` so it should be the same, regardless of execution order. Other than that, you are correct with your examples. It is just *not* what I am trying to do. I'll answer you prior post directly from that one
Great! That is what I wanted to know. I do wonder what the design decision was to use different generators. I assumed that the Mersenne Twister was just the gold-standard. Also, I use `rng` since it is easier than `s = RandStream('twister'); RandStream.setGlobalStream(s);` but I will play on my own to see if I can work it the same. Finally, the note at the bottom of that link is good to know. For those reading this and not clicking the link, it says &gt; Because `rng('shuffle')` seeds the random number generator based on the current time, you should not use this command to set the random number stream on different workers if you want to assure independent streams. This is especially true when the command is sent to multiple workers simultaneously, such as inside a `parfor`, `spmd`, or a communicating job. For independent streams on the workers, use the default behavior; or if that is not sufficient for your needs, consider using a unique substream on each worker. Thanks!
Wow thanks for the replies. I had never heard of either of these, I mean maybe seen them but not consciously understood what they were for. I ended up using the eval() method mentioned by /u/neurone214 above, worked like a charm, exactly as I needed. I knew this was the place to ask :p. Thanks again everyone!!
I'm working with Siemens MRIs, but unfortunately have no clue what the problem could be. If you or someone you know took an IDEA programming course, you could try the IDEA forum. I think the guys there might have an answer. 
Thanks very much for the advice! 
Cell arrays really aren't too bad once you get used to them, and actually they're super-nice for certain things. You definitely don't want to use them (or structs) in a situation where you could instead use a pure numeric matrix, because matrices of `doubles` are WAY faster to work with than cells or structs. But when you've got something like a bunch of strings of irregular length, cells are the way to go. And returning a cell array is far from my least favorite trait of textscan -- what I usually do is follow each of my textscan uses with a bunch of lines un-celling all the data, i.e. my_fields = textscan(fid, '%s%d%f'); %or whatever column1_str = my_fields{1}; column2_int = my_fields{2}; column3_flt = my_fields{3}; Maybe a little annoying to have to write those lines of code, but it's not the end of the world or anything. At any rate, I'm sort of with you on preferring textread -- that's what I used to use. Then it looked for a while like it was going to be deprecated/removed, so like a good little boy I switched to textscan as the documentation recommended. Although maybe there was enough backlash to give textread a stay of execution -- now (at least of R2012b, which is what I still run) the documentation still says textread isn't recommended and to use textscan instead, but it doesn't explicitly say textread is deprecated, so I dunno. SafeTextscan would not be a bad idea. The other thing that kills me about textscan, though, is that you have to do your own fopen and fclose calls even though 99% of the time you are just doing fopen, textscan, fclose. So you should totally be able to just give textscan a filename, as you do with textread. I understand I could have just written my own LazyTextscan to go along with SafeTextscan, but it's the principle of the thing...
So you want your output to be a matrix? Try ones(3,1) * a + b * ones(1,3) Edit: Format...
Did you mean to include (1+1) in the example? If so, I'm confused.
A more dynamic and possibly faster way to do this: sum_ab = bsxfun(@plus, a, b'); % note the b transpose
oh woops. Yes that is wrong.
fantastic. Thanks. On the same vein, Once I have sum_ab, if I wanted to reproduce this loop: for i = 1:3; for j=1:3; result(i,j,:) = sum_ab(i,j)*c(:) end end So that result is a 3x3x5 matrix, could I use bsxfun to avoid the loops?
Indeed you can. You just need to reshape c out into the 3rd dimension: result = bsxfun(@times, sum_ab, reshape(c,1,1,numel(c)));
You're going to have to be capturing periodically in order to detect the triggering color in the first place. You can wrap this up in a for-loop with a pause (say, 1 second). If the trigger is detected, then you can instruct the program to "capture and save 60 images" or whatever you need. 
If you're reading in RGB frames from the AVI, they will come in as MxNx3 dimensional arrays (probably of type uint8). If you want to get the first channel of a frame (you say that the first of the 3 is the original), you can either: GrayFrame = RGBFrame(:,:,1); This will give you an MxNx1 array. If I'm misunderstanding your question, please post the code you're using.
Not all MATLAB functions are supported for gpu arrays. You can see the list here: http://www.mathworks.com/help/releases/R2014a/distcomp/run-built-in-functions-on-a-gpu.html You can also see the list this way: methods(gpuArray(1))
You could use rgb2gray() on each of the frames.
Linkage m files. I bet there are a lot of if statements. 
I'm interested!
Alrighty then. I'll see if I can get it started by Sunday then. Hope it helps somebody.
See if they are already available on file exchange, if not, post them there to reach a wider audience. 
It looks like it is all space delimited, but the problem is that all of your time sections are in their own blocks. whatever you write will be very custom. Generally, I start with getting it into a matrix and work from there. you will actually need to fully parse the file to use all the information. Do you have any example code to check or other software to help you? Often, manufacturers of these devices have drivers, dlls, handlers, or their own software for the output files. Did you look for that? Even if the example code is in, say LabVIEW, it can help you understand what the many fields mean as well as a general algorithm to handle it, saving you time. Good luck. I've had to figure out and parse data files like this. It takes a while to develop something, but it is a pretty straightforward, kinda fun, but long process once you have it as a matrix.
Come to think of it, I think it did come with done example code. I'll have a look through and see if that helps. It's an old system made by a company now bankrupt so I wouldn't expect to find much support online for it. Thanks for the tip.
There are a few archives out there. At least worth a search. Good luck. It might be an old standard/convention, so there might be sources if you can find similar products. 
My code inside the comments %%%%% range = [0.0005,0.001,0.005,0.01,0.05,0.1,0.5,1]; for x = range x end %%%%% I ran this and it prints out each item in the list "range". Not sure what you are doing wrong, but It works ok for me 
Can you paste in your code?
Updated my post
are you sure? can you paste in your code using the code formatting? EDIT: when i run the code that you have in there right now I get a 2x10 grid with [1,1] being .0005, [1,2] being .001 and so on up until [1,9] and [1,10] which are both 0. all of row 2 is zero as I don't know what S is and commented it out. but it seems to be working properly. are you still having issues? this is exactly what i just ran grid =zeros(2,10); % initialize matrix to do my grid refinement analysis. number =1; % keeping track of sequences range = [0.0005,0.001,0.005,0.01,0.05,0.1,0.5,1]; for x = range % Start for loop that should follow the #s on my range =[] %[Some finite element analysis code where 'x' is my grid spacing] grid(1,number) = x; % saving on the first row and column 'number' %grid(2,number) = S; % saving my 'solution' to the second row number = number + 1; % increasing my number so that it saves to the correct column end 
sorry i thought OP was replying to me. I didn't look at usernames. I'm not having any problems with the code.
a few problems: 1) edit your post so all your matlab code is indented with 5 spaces or more so it looks pretty. 2) You should probably plot T instead of t (you should probably use more different variable names) 3) What is T? you initialize it to a constant 100, but then you assign it as a cell by using the {}, but then you use it like an array with T(i), T(i), and T(i) 4) the first loop of the for loop, when `i` is 1, you reference T(i-1), which is T(0), which is your error (exceeding matrix dimensions), since everything in MATLAB starts at 1
Thanks for the tip!
In this line, T(i)= {((t*diff_iron)/(x^2))*(T(i-1)-(2*T(i+1)) + T(i))}; You have T(i-1) When i is equal to 1, you're indexing into T(0). Matlab is 1-indexed, not zero-indexed. Now if you fix that, you'll find that you're asking for T(i+1) in the same line. But on loop one, for instance, there is no T(2). So you'll have to initialize T to, say, a 1x9 vector of 100s, or some other initial temperature. You can't call a value in a vector before it exists. Next problem is those curly braces; in MatLab, that indicates you're accessing the contents of a cell. But that's clearly not what you want here, because you're also accessing cells themselves. So if you type a{ 1 } = 'mike' a{ 2 } = 3.8 a{ 3 } = true a{ 4 } = uint8( 9 ) You've initialized a cell array. Now, if you type a( 1 ) MatLab returns the cell itself, not the contents; only functions that operate on cells can work with that: a( 2 ) + a( 4 ) returns Undefined function 'plus' for input arguments of type 'cell'. However, if you type a{ 2 } + a{ 4 } You just get 13, because MatLab is going into the cells, getting the contents, and doing its best to combine the datatypes since it's a very weakly typed language. (MatLab assumes you want an integer because that uint8( ) forces 9 to be an integer). So, you need to fix the indexing so you don't try to index into zero of a variable, and for now, probably don't use curly braces at all, since I think you don't want cells. 
Try initializing the matrices as z = [ ] etc, with square brackets. 
Ah, I didn't know there was a distinction between capturing and saving for that specific tool. Thanks you for the idea, and the clarification. :D
Do mods have the ability to prevent the op from deleting the question?
You have scattered data. You have to first interpolate the data on a grid. To do this, first use meshgrid where you the indicate the gridpoints with two vectors (with equal distance between the elements) for the x and y points. Then you interpolate the scattered data on the grid with griddata. Finally you can use mesh to plot the mesh of the interpolated data. [xq,yq] = meshgrid(-2:.2:2, -2:.2:2); % change these values to suitable ones for your problem. Maybe use min and max on the x and y data etc. zq = griddata(x,y,z,xq,yq); figure; mesh(xq,yq,zq); 
No, I don't believe so. The people who delete their questions bear all the blame, and ought to simply stop it. Maybe the mods can create a more civil version of this post and sticky it/put it in the sidebar. That wouldn't hurt at least. 
Thank you, helped a bunch!
Some subreddits have an automatic mirror sub, so OPs cannot edit their OP or alter it.
As somebody who frequently gives detailed answers that rarely even get a thanks, I'm feelin u breh
alright. I'll work on that. thanks!
thank you!
Maybe put up a sticky? Or update a sidebar? Sort of "before and after posting a question".
There are literally [hundreds](http://www.mathworks.com/matlabcentral/fileexchange/index?term=type%3AExample) of them in the sidebar link. 
No, we do not. If one mod deletes a post, another can reinstate it, but if the Author deletes it, you need to have saved the hard URL to view it and the original author will show as "[deleted]".
Sadly, the non-regulars tend not to read the sidebar either :( The trouble we have just getting people to format their code correctly should be evidence of that.
Thanks
Each time MATLAB starts, it sets up its random number generator with a seed of 0 using the 'twister' algorithm. Each time you call rand(), rand() returs the next number in the random number sequence started on startup. Calling rng() resets matlabs internal random number generator without having to restart matlab itself. You'll get a new random number each time you call rand() unless you restart matlab, or call rng(0,'twister), in which case the same sequence will start over. from &gt;&gt;help rng &gt; rng('shuffle') seeds the random number generator based on the current time so that RAND, RANDI, and RANDN produce a different sequence of numbers after each time you call rng. If you're worried about getting the same numbers each time you start MATLAB, then just call rng('shuffle') once at the beginning of your program to restart the random number generator used by rand() with a new seed.
Every time you run the code with `rng(3,'twister')` in it, you will get the same random numbers (an oxymoron). If you want to ensure that you have different numbers every time you run it, do, as /u/Brekab7 said and add `rng('shuffle')`. But note that the shuffle uses the system time so if you launch a bunch at the same time, you will not have different numbers. As for a *better* generator, what do you need it for? Matlab's is pretty good and should serve you well until a very, very, very large number (If I had to guess, I'd estimate it around 2^32). There are other ways to generate a true (as opposed to pseudo-random) numbers. [Random.org](http://www.random.org/) has a whole thing on it but there are many other ways. A quick google search turned up [this](http://www.mathworks.com/matlabcentral/fileexchange/13007-random-number-generator) but I cannot vouch for it or how it works
I think 2^32 would probably barely suffice suprisingly. I am simulating bacterial growth. Which runs probably on the order of using 2^24 different calls to rand. There is randomness in movement and growth since I am simulating nearly 10^7 cells which is nearly 1% of the numbers (I think)
Your options at that point are get a library with a better generator, continually add entropy throughout your simulation, or use a hardware RNG (although recent leaks about the NSA suggests these may not actually be random).
My assumption is they are getting homework answers and are trying to avoid it being found.
The [standard Matlab RNG](http://www.mathworks.com/help/matlab/math/creating-and-controlling-a-random-number-stream.html) (the Mersenne twister) has a period of 2^19937 which is more than you will ever need. No need to change the seed between calls to `rand`. (In fact, reseeding withing an application is discouraged.)
Never used this particular function. But I have seen memory leaks over time. Check the available memory after each call to test.
That's crazy; I've been using Matlab for 15 years and never noticed that the random numbers repeat on startup. I wonder why the default isn't to seed it with the clock on startup.
Can you write down the exact error message you get, or even better a minimum running example? parfor isn't going to like doing anything which is sequential. For instance, parfor won't like it if you have a variable that is both an input and an output of a function inside your parfor loop.
The imread function does exactly what you want.
 A = imread( filename ) will produce A, a &lt; H x W x 3 &gt; matrix corresponding to the RGB planes of your image. In the first example, it's 341x917x3.
Thanks everyone. I'll try to get some snippets of my code up here this evening - sadly at work right now and can't get it transferred over.
Thanks! Is it possible though to output a matrix based on a scale similar to example 1 (ex -10 to 17 where red is -10 and off white is 10). 
I think this'll work, though I am not at a computer with MATLAB right now so you'll have to test it: for i = [(1:j-1) (j+1:n)]
This is a great idea for a contribution. 
genius idea! we need this so much. will check it out asap.
&gt; and Ubuntu has apt-get If your system relies on apt to manage packages then your Matlab/Octave already has a package manager. You just need to package your code, submit it to a repository and you're ready to go. P.S.: [the apt family of tools is a Debian thing.](http://en.wikipedia.org/wiki/Advanced_Packaging_Tool). Technically, you're right in saying that Ubuntu has apt-get, but as Ubuntu was forked from Debian...
You're right. I never thought about using apt-get for Matlab packages... Iff also has the benefit of working very easily on any system, Windows or *nix, since it's all built on Node. I use Windows at work and OSX at home, so it's nice to have something that runs identically in both OSs.
&gt; no one has ever made a package manager for Matlab or Octave Octave comes with a package manager called `pkg`. It pulls packages down from [Octave Forge](http://octave.sourceforge.net/packages.php). pkg install -forge &lt;package&gt;
which is great if you want to use SVN, but it's 2014 :P In all seriousness, the whole point of a CLI package manager is to make your life easier. Reading through the [docs](http://octave.sourceforge.net/developers.html) for pkg it looks pretty complicated to submit your code to the official repo or even to create the 'package description' file. Modern package managers for other languages have made this exceedingly simple, (like 'iff publish', or 'iff init' to interactively create a manifest file). My goal is to design something much easier like that. ...also my website's a little prettier than theirs. 
After using uigetfile, are you loading the absolute path of the file or the relative path? Might not be the case here, but probably the simplest way this could happen is if your test mat file is on the path, and you're only using the file name part of the output from uigetfile. You need to get the first two output arguments from uigetfile and then use fullfile() to concatenate them before loading 
I used to think this couldn't be done, but here you go http://www.mathworks.com.au/help/matlab/matlab_oop/scoping-classes-with-packages.html Matlab's implementation allows you to have namespaces for your packages etc. so it is pretty good. There is a small performance hit when using functions in a package eg. foo(2) is slightly faster than packagename.foo(2) but this goes away if you import the function. I hope more people start using packages in Matlab, it has made my code a lot cleaner
Great it worked! Do you know why this is necessary when running the compiled GUI and not necessary when it is ran from the m-file? Either way, thank you very much for your help!
I'm not 100% sure I understand your question, but I think you'd want to do something like this, substituting your equation in, of course: function fx = example_script(a,b,c) fx = a + b + c; end to call it, use: fx = example_script(a,b,c); 
That was what I was trying to figure out, thank you. Do you know if "if" statements can be included in the function script? Also When I call it, it won't answer.
&gt; Is it just a folder with an individual file for every function that the user might want access to? Usually, yes. Or you can do it the object oriented way and make a class. 
Another vote for export_fig. It's incredibly versatile, and just looks way nice. Also, it can save you a lot of hassle to include some things in your startup.m that you use a lot. For instance, I like the Cambria font because of its association with LaTeX, so in my startup.m I have a command for that, and a few others: set( 0, 'defaultTextFontName', 'Cambria' ) set( 0 ,'DefaultLineLineSmoothing' , 'on' ) set( 0 ,'defaultUiControlUnits' , 'Normalized' ) set( 0 ,'defaultFigureUnits' , 'Normalized' ) set( 0 ,'defaultFigurePosition' , [ 0.1 0.1 0.8 0.7 ] ) And since the Jet colormap is widely known to be a big ole pain in the butt, I grabbed a script online to make a diverging colormap, and I include that for all my surfaces: cmap = diverging_map( linspace( 0 , 1 , 256 ) , [ 0.230, 0.299, 0.754 ] , [ 0.706, 0.016, 0.150 ] ) ; set(0,'defaultFigureColormap' , cmap ) 
Make sure that the folder you stored your function file in is in the matlab search path, otherwise matlab won't be able to call the function file. Use the set path dialog box to check if your folder is included in the search path. There are no restrictions on the matlab language in a function file, so you can use "if" statements in a function file.
The `.m` file must have the same name as your function. In /u/masterpigg's example above, the function definition would have to be in `example_script.m`.
Why are you trying to build a new file format? Is there a reason you can't just do `save u.mat u`?
That isn't a very Matlab like way to organize your code. While Matlab does support namespaces for OOP code, it's not something that's typically used. Also, it's highly discouraged to use case sensitive function names.
It takes a really long time. I thought fwrite would be faster.
Excuse my ignorance, but what is a multipage TIFF? What does each slice along the third dimension contain (i.e., 4 slices of MxN)? Are they each layers with an (bitmap?) image that is then composited? If so, how does one know what is image and what is to be discarded in compositing? (i.e., needing an alpha channel for each layer) Someone else may be able to provide more/better info, but I'm just trying to help reason through the information you have.
It seems odd to me that you wouldn't just save a .mat file, but here's an example: clear; fclose all; siz = 3*ones(1,5); F = randn(siz) + i * randn(siz); Fr = real(F); Fi = imag(F); filename = 'tmp.bin'; precision = 'double'; fid = fopen(filename, 'wb') fwrite(fid, Fr, precision); fwrite(fid, Fi, precision); fclose(fid); fid = fopen(filename, 'rb') G = fread(fid, inf, precision); fclose(fid); Gr = G(1:numel(F)); Gi = G(numel(F)+1:end); Gr = reshape(Gr, siz); Gi = reshape(Gi, siz); H = Gr + i*Gi; &gt;&gt; max(abs(H(:) - F(:))) 0
I'm just wondering what the 4 components are? For an RGB image, each "layer" corresponds to the intensity in the red, green, and blue channels. I'm just wondering what the four components might be for a multipage TIFF (CMYK channels?).
Mat files are binary, which in practice means they should be both smaller and faster. Also you won't have to worry about your matrix dimensions getting messed up, and you won't lose precision as you do if you only put 5dp or whatever in your text file Edit: oh, one thing. For some reason, writing a mat file with the latest file format can be super slow in some circumstances such as an NFS share. To rule this out, save with the v6 option eg. 'save filename.mat -v6'. The downside is that you will lose compression and the output file will be bigger. So give this a try too - chances are it will not give you any improvement but it is worth a try 
I think it's an alpha channel.
try [readRGBAImage](http://www.mathworks.com/help/matlab/ref/tiff.readrgbaimage.html)
I keep getting an error if I just do "save data.mat u". It says that u cannot be saved for versions of matlab prior to 7.4 (I think I am away from my computer) and that I should use the -v7.4 switch or something like that. I will get the exact error when I am at my work computer. The matlab install is the latest version, I use Linux, but I haven't tried -v6. 
I would use /u/IsAnAlpaca's [solution](http://www.reddit.com/r/matlab/comments/2c8w3y/converting_multipage_tiffs_to_jpgs/cjdhp82) and then just save the RGB matrix using imwrite. I should have asked how you were importing the image, but regardless, using imwrite(tiffimage(:,:,1:3),'newimage.jpg'); should only save the RGB channels. Note that it may be an issue if there is any information in the (alpha &lt; 1) region and the image may be corrupted in those masked regions. However, you can deal with by just applying white a white mask to the RGB channels.
Check out [savefast](http://www.mathworks.co.uk/matlabcentral/fileexchange/39721-save-mat-files-more-quickly) on the file exchange. If your data is more than 2GB you need to use the v7.3 format (which is HDF5) - but as you found it is very slow because it uses compression. There is no option to turn it off, but you can use the savefast script to do it - it will save much quicker, but still be readable like a standard matlab file. 
I would like to do it in Matlab:) as its a part of a larger image transformation system that im making
thanks, will try that!
Yes if statements can form part of a function. Functions are a basic part of matlab scripting and are extremely powerful. If your function returns no variable when called define it as such: function functionname(input1,input2,...,inputN) Check out more information with doc function 
This is a good answer if all you need is a bunch of random binary strings (the function to use, by the way, is `dec2bin`). However, assuming there is some reason you need to generate the 1's and 0's one at a time according to some rule, you could do something like this: rng('shuffle'); my_array=repmat(' ',20, 10); while any(my_array(:) == ' ') space_inds = find(my_array==' '); which_ind = Randi(numel(space_inds)); if rand&lt;.5 my_array(space_inds(which_ind)) = '0'; else my_array(space_inds(which_ind)) = '1'; end end my_array_dec = bin2dec(my_array); That will gradually fill up a 20x10 character array (initially set to be all spaces) with 1's and 0's. This code just does it randomly, which is a super-inefficient way to generate a random matrix of 1's and 0's -- but if you had some other rule, you could replace the if/else statement here with that rule. So, in essence, this code generates 20 random 10-digit binary strings as a character array -- no need to use cells or anything funky like that. Then if you want it, you can use `bin2dec` (inverse of `dec2bin`) to turn it into 20 regular decimal numbers...
That's perfect, thanks. The 1's and 0's have been coming from the main bulk of the code (to do with spotting anomalies in data...it's a weird question - this is an extension). Sorry I was so vague - I couldn't think of a better way to phrase it. Thanks again!
The documentation site has hundreds of tutorials and examples. http://www.mathworks.com/help/matlab/
I haven't always had the greatest luck printing figures as non vector images (ie weird image inconsistencies like you're experiencing). Saving as an eps seems to be the way to go. Also I'll add, I've noticed that bugs can pop out if you resize the window before saving. I suspect that's what's happening here. So when saving multiple figures, specify the desired size first and don't resize using the window. http://www.mathworks.com/help/matlab/creating_plots/positioning-figures.html
I don't know exactly how fit works either but for these types of things it's often important to know what you exactly want to fit. Do you know if it's a polynomial? (what order?). If you know the type of function it should fit to you can allways write your own least-squares fitting function (maybe a bit more tedious to make but you can get exactly what you want by building it yourself).For a lot of thing least squares approximation can easily be done with ' \ '.
This is just a basic question about how many iterations a loop runs. Think about the values of the loop variables and try thinking it through manually for lower numbers, i.e. a = 1:3
Well, a counts 1, then b counts from 1:1. Then a is 2, then b counts from 1:2. At each count of b, you get a +1 to your total. If you work out the math, you'll have to end up using n(n+1), where n=some number. .. Of course, the easiest way is implement the code and run it. ;) 
I second this. Save your figures in .eps format. They'll look sexy as hell when you put them in print (plus they are easy to use with LaTeX).
Hating PDFs is a very silly reason to avoid the content you're searching for. Plus, Matlab has a wealth of information available through its site and help.
Ok here's what I found : if you put a marker on the line and change the type of the plot to stem and then right back to line, the grid and the label are very fine, but right after you edit anything or save it goes back to the default one. Really weird. Edit : found it!!! All you have to do is go to figure property editor, then "export setup" and zbuffer as a custom renderer. Bam! =)
Not quite. If you run the code, count ends up as a non-square number (I won't give the exact value so I don't do OP's homework for him/her). Given that it's not set up as a function (i.e. with an explicit input and output), it's hard to say concretely that it's really got a purpose... but if you replace the 9 with `n` and make it a function of n, it would become a function for (really inefficiently) calculating the formula given at the end. Which is actually the formula for [a different geometric class of numbers](http://en.wikipedia.org/wiki/Triangular_number)...
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Triangular number**](https://en.wikipedia.org/wiki/Triangular%20number): [](#sfw) --- &gt; &gt;A __triangular number__ or __triangle number__ counts the objects that can form an [equilateral triangle](https://en.wikipedia.org/wiki/Equilateral_triangle), as in the diagram on the right. The *n*th triangle number is the number of dots composing a triangle with *n* dots on a side, and is equal to the sum of the *n* [natural numbers](https://en.wikipedia.org/wiki/Natural_number) from 1 to *n*. The sequence of triangular numbers (sequence A000217 in [OEIS](https://en.wikipedia.org/wiki/On-Line_Encyclopedia_of_Integer_Sequences)), starting at the [0th triangular number](https://en.wikipedia.org/wiki/Empty_sum), is: &gt;&gt;0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406 … &gt;The triangle numbers are given by the following explicit formulas: &gt;==== &gt;[**Image**](https://i.imgur.com/dMipzGB.png) [^(i)](https://commons.wikimedia.org/wiki/File:First_six_triangular_numbers.svg) - *The first six triangular numbers* --- ^Interesting: [^Square ^triangular ^number](https://en.wikipedia.org/wiki/Square_triangular_number) ^| [^Centered ^triangular ^number](https://en.wikipedia.org/wiki/Centered_triangular_number) ^| [^Squared ^triangular ^number](https://en.wikipedia.org/wiki/Squared_triangular_number) ^| [^Tetrahedral ^number](https://en.wikipedia.org/wiki/Tetrahedral_number) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cjfp2c7) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cjfp2c7)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I see it now. Looking at it again I realize that A was dynamic but for some reason this morning I saw A as a constant value. 
I've actually worked with the exact setup and initially did it the with a while loop but eventually found a better way to do it using [serial callbacks](http://www.mathworks.com/help/matlab/matlab_external/events-and-callbacks.html). Basically you setup your arduino to send an end byte after it's done sending the data. Then setup matlab to fire the callbacks function whenever it reads that byte. I *might* have some code floating around somewhere I could post if it'd be useful to you? 
Any help would be appreciated, thanks! Not keen on starting anew with a pure Simulink set up :D
I don't know why you're getting down voted, but see my top level post.
pdf *is* an epub format.
First you filter the signal A forward and get B. You flip B - B', filter it again and get C'. Now you filt C' to get the resulting signal C. C is the result of filtering A using FiltFilt. As I understand it, if you are using a linear filter the phase shifts from the forward filtering A-&gt;B and backward filtering B'-&gt;C' cancel out. A similar method should work for CWT.
Mathworks is up for me. Here is the answer on that: &gt; There are several reasons why you may receive this error. In general, the License Manager Error -9 means one or more of the following: &gt; &gt; - The Host ID of the license file does not match the machine &gt; &gt; - The username in the license file does not match your user login (user-based licenses). &gt; &gt; - Your machine does not have a C:\ drive (Windows), an eth0 interface (Linux), or en0 interface (Mac OS X) &gt; &gt; - You have a B:\ drive on Windows &gt; &gt; - You have a Designated Computer license, and the license is already in use by another user (R2008a and higher) &gt; &gt; - You have upgraded to OS X Mountain Lion 10.8 &gt; &gt; To resolve this error, see the following workarounds below: &gt; &gt; NOTE: If you are receiving this error and you have a license that requires a dongle, see the related solutions below to resolve the error. &gt; &gt; For MATLAB R2008a and higher: &gt; &gt; ========== &gt; &gt; 1. If you have selected the Standalone Named User (SNU) activation type, the license is locked to both the Host ID of your machine as well as your username on the machine. If either the Host ID or username does not match your license file, you will not be able to start MATLAB. &gt; &gt; Additionally, if you are using a Mac OS X machine, the username that MATLAB looks for is the short username, not your full username. Make sure that when you activate, you use the short name. To obtain the proper username, look for your home folder in the "Users" folder on the machine or in a Finder window sidebar. Your short name is represented by the name of this folder. &gt; &gt; NOTE: In MATLAB R2008a, the username that MATLAB locks to is case sensitive &gt; &gt; If you are using Windows and your computer has a B:\ drive, you must activate MATLAB to your MAC address. &gt; &gt; For instructions on obtaining your hostid, visit the related solution: &gt; &gt; http://www.mathworks.com/support/solutions/en/data/1-171PI/index.html &gt; &gt; 2. If you have a Designated Computer (DC) activation type, this error means that either the Host ID of your license file is incorrect, or that the MATLAB license is already in use by another user. If you have confirmed that no one else is using the MATLAB, it is most likely that the Host ID of the activation is incorrect. In that case, you will need to deactivate and reactivate MATLAB to start MATLAB on this machine. &gt; &gt; To confirm no one else is using MATLAB on a Windows computer, open the Task Manager by pressing Ctrl+Alt+Delete. Go to the processes tab. Check the box 'Show processes from all users'. Click on 'Image Name' to sort alphabetically and look for a MATLAB.exe process. If one exists, you will need to have that user close MATLAB. &gt; &gt; 3. If you have upgraded your computer to Apple's OS X Mountain Lion (10.8) or OS X Mavericks(10.9) then you simply need to follow the steps below: &gt; &gt; For Student version: &gt; &gt; - Navigate to your Applications folder, right-click MATLAB, then select Show Package Contents &gt; &gt; - Look for licenses folder, open it, delete all license files inside it. &gt; &gt; - Go back, look for Activation folder and delete it if it's present. &gt; &gt; - Once this is done you can simply launch MATLAB, which will prompt you to activate, go through activation and you should be able to use MATLAB. &gt; &gt; For Professional version: &gt; &gt; - Launch Activation client and make a new activation &gt; &gt; Follow the link for more information: &gt; &gt; http://www.mathworks.com/support/solutions/en/data/1-614OPR/index.html &gt; &gt; You will also want to remove the existing activation. To do so, follow the solution below: &gt; &gt; How do I deactivate MATLAB without the deactivation string? &gt; &gt; http://www.mathworks.com/support/solutions/en/data/1-AV466O/index.html &gt; &gt; For versions prior to R2008a: &gt; &gt; ========== &gt; &gt; 1. If you are using a stand-alone license on Windows, you may get this error if you copy your MATLAB installation from one hard drive to another. The only workaround is to re-install MATLAB. &gt; &gt; 2. This error can also occur in stand-alone installations if you do not have a C:\ drive formatted on your computer. MathWorks only supports the C:\ drive for DISK_SERIAL_NUM node locking, which is what occurs during the creation of the license.dat file in a standalone Windows installation. &gt; &gt; 3. You will also receive this error message if you are trying to run MATLAB on a terminal server. MATLAB is not supported, and will not run on a terminal server. &gt; &gt; See the Related Solution below: &gt; &gt; How do I start the activation process when I am unable to open MATLAB? &gt; &gt; http://www.mathworks.com/support/solutions/en/data/1-614OPR/index.html &gt; &gt; If you are still unable to resolve the issue by the steps above, contact the Installation and Licensing Team by creating a Service Request here: &gt; &gt; http://www.mathworks.com/support/contact_us/index.html
&gt; but today the motherboard on my macbook was replaced (OSX 10.9) It changed your MAC address. It changed your license. You should have no problem doing a self service and getting a new license from Mathworks.
thanks so much, works perfectly
So I just managed to read in all the numbers to a 1D matrix where every 2 numbers are a range as specified above. I know the beginning and end positions I want to use for one chromosome - figured that would be easier right now for me. My original file is now in a "pos1 &lt;TAB&gt; pos2 &lt;NEWLINE&gt;" format.
Ok, so now all you need to do is count how many ranges each index is in, right? You can start with a vector of all zeros the length of your chromosome (or down-sampled) and go from there. Give it a try and post your code.
None of the ranges overlap, so each index would be a zero or one. Not sure if that's what you meant. The chromosome is 250 million base pairs so I'm getting "maximum size exceeded" when I try to map a binary value to each position. If I could use the position pairs directly to make a density plot that would be best. If not, then maybe a plot from 0 to 250M where lines or points specified by my data could be represented with y = 1 for x = pos_1:pos_2.
Well, if the ranges don't overlap then the density actually *is* zero or one for each bp. At 250 Mbp though you probably want to down sample pretty aggressively. For example, if you down sample by 10k your vector would range from 1 to 25000. Then if you had a pair that was `383726-837162` you would want to increment all of the bins between 38 and 83. 
Then why does it only list the result as a float for 4.1*48000 and not any other condition?
For the record, I came across this as I was using the result of this equation as an index of an array. I was getting an error because it didn't consider this value an integer.
So I have a vector with 25k buckets whose values I incremented each time a base was present within a range. ex. 9500 10500 -&gt; buckets(1)+=500 and buckets(2)+=500. How do I use this data? Edit: Use the data in a density plot* graphing the bucket values versus the index times 10000 is quite messy. http://i.imgur.com/3Q5SQ4A.png
First, put 4 spaces in front of plain text in order to render it as-is: &gt;&gt; x=4.1*48000 &gt;&gt;x = &gt;&gt; 1.9680e+005 Second, 4.1 cannot be represented exactly in floating point math, because the binary representation has an infinitely repeating decimal. Asking a computer to compute that is like asking what 0.333333333 * 3 is. It's 0.999999999. That's probably not what you _meant_; you probably meant 1/3 * 3 = 1. &gt; I was getting an error because it didn't consider this value an integer. Never, ever, ever use floating point numbers as integers. Never. Don't expect x/x = 1. Don't expect x-x = 0 or similar identities to work (actually, this will work...sometimes). It doesn't work in MATLAB, and it won't work in any other programming language that uses floating point. Here's a handy tool to see what decimal numbers are in binary: http://www.h-schmidt.net/FloatConverter/IEEE754.html
I still dont understand why 4.1 yields a float and 4.2 yields an int. Neither are their exact value according to the webpage you linked. I also understand casting in a language like C, but I never ran into any issues like this with Matlab before. I understand your comment though that when in doubt force an index to int. Thanks.
&gt;I still dont understand why 4.1 yields a float and 4.2 yields an int. Neither are their exact value according to the webpage you linked. This is a bit tedious to show why this might be the case, but it could also be that MATLAB tries to be smart when it detects this kind of stuff going on and tries fancy stuff on its own to compensate. &gt;I understand your comment though that when in doubt force an index to int. That's not really what I meant. This should be a last resort. Try to rework your code to not require this kind of hackery. Also, this SO question has some pretty good info: http://stackoverflow.com/questions/11381905/multiplying-two-floats-doesnt-give-exact-result
Event though I do avoid using them like that, but I would think identities x/x=1,x-x=0 should hold in floating point. Its that for identity x-y=z you can't expect the identity x=y+z to hold, and similar. Where as the latter is subject to floating point precision and round off error, the former just seems to be dependent on whether x is deterministic or random (on each access). 
The elements of the forest are decision trees, right? Last time I looked at that, I remember some way of getting the trees, and from the trees the threshold for each node. Couldn't you just write Matlab code to iterate through the trees, and write node values to a file? Then you would write your C code to read tree data from the file and build decision trees. Then you could even have different forests, if you wanted to. Say, if you wanted to test a new one with your code, or use a smaller one during development. 
That plot is a thing of beauty, but if you want it smoother, either down sample more or just smooth it post hoc. Good work. Not knowing what your data represent, it's hard to say whether you should increment a bin for each base that is in it or just once for each fragment.
I wouldn't be able to deploy the app without matlab then.
That sounds like a great idea. Not sure how I'd build decision trees automatically in C though. Wouldn't I have to type out each if else statement using the threshold for each node? That would take forever.
It basically filters the signal once using filter(), then it reverses the filtered signal and applies the filter on this filtered signal. The phase shifts cancel each other out. Read more about it by typing doc filtfilt and/or edit filtfilt to actually read the code.
Floating point math is fucky. Everyone learns this the hard way at some point. 
I'm not sure what you were trying to do, but you messed the link up and the post has been removed.
I did try dividing the output of `dwt` by sqrt(2), but I guess I was so focused on my expect output that I didn't notice it was the first level... Thank you!
At least try and hide the link!! I'm guilty of using lmgtfy here as well for equally "easy" questions. Thanks - I guess my mind took a break and couldn't correctly formulate what to search.
Nah, you're not at fault. The google the_truth_is_harsh used included the keyword 'escape'. You didn't use that word anywhere in your post, so why should we assume you'd think to search with it?
No prob. And, no subtlety required for something that easily google-able ;)
Jeez... no one suggests OP is "at fault". It was just a simple way to 1) answer the question 2) express that it's easy to google (independent of the exact phrase) 3) teach OP the expression escape character. 
I can smooth one curve with the Basic Fitting Tool available under tools within the plot window. However, I found the following http://www.mathworks.com/matlabcentral/answers/102392-can-i-fit-multiple-data-sets-using-the-basic-fitting-tool-in-matlab when trying to do multiple plot fits. Do you know how to use the data saved to the workspace (fit, resids, normresid) in order to generate the fitted curves? Thanks again for all the help! 
I have. That's utilizing something akin to Simulink serial converter. I got a code working that just reads the COM ports and changes string to serial. It hopefully fits my needs. However, I do know that it's faster than the Arduino support package
&gt;no subtlety required Oh I know. I've lmgtfy here for posts like "how do i make plots in matlab?" &gt; "matlab plot" Again, no worries
Not at all. How do you think Matlab does it? You can reference parameters, tree nodes, thresholds, etc. indirectly. In pure C you'd do it with pointers. This is over thinking it though. Surely there is a C library that implements decision trees/random forests. Find it, and populate the forest from your stored thresholds. 
Yes. That's the idea anyway.... And if your pool only has one worker, parfor is treated as a normal for loop. However, I would suggest using a spmd block and drange() over parfor as it gives you much better granularity in terms of what is being run in parallel and how it is being run. 
You won't be able to do this using a gain block. Simulink is step based. The gain block only operates on the input at the current time step. It's probably easiest to make the change in the base workspace. If you want to automate this, you can add the necessary code to the StartFcn or StopFcn callbacks. See: http://www.mathworks.com/help/simulink/ug/model-callbacks.html 
Would you mind explaining spmd and drange() for me real quick? It might just be something you have to play around with, but reading the documentation isn't helping me understand why I should use them.
Weird, I was trying to do a text post. And typed into the box. Well I got my help from somewhere else so I guess I should delete the post?
Because your loops contain only comments, I believe parfor should run without a problem. edit: c'mon people, it was a joke!
An spmd block defines a region of code to be run in parallel. Everything in the block will be mirrored across all workers and run in parallel. If you create a new variable, each worker gets a copy that exists inside its own local scope. So if you do something like this: Spmd a = 2; a = a - rand (1); End Each worker starts with its own copy of a, and they all equal 2. Then each worker computes a unique random number and subtracts it from a. Now each worker has a different a. Since we want to operate on different data in each worker, we need a way to distribute memory around and tell each worker what chunk it should be working on. This is done with codistribited arrays and drange. Here is an example Spmd r = zeros(1, 40, codistributor()); for n = drange(1:40) r(n) = rand(1); end end r = gather(r); The first line creates a 1 x 40 array and deals out chunks to each worker (as opposed the each worker getting an entire copy). The second line is the for loop. Since everything in the spmd block happens in parallel, using a normal for loop would result in each worker running 40 iterations. In some cases, this is desirable... In this case it isn't. Drange creates a distributed range. It hands each worker only a subset of indicies to work with (matching how codistributed dealt out r). So it will run 40/nworkers times and fill r with random numbers. The gather at the end pulls the distributed memory back to the main workspace. Why is this better? It gives you more control. A parfor is just a spmd block with a drange in it....except you can't add code outside the loop and have it execute in parallel. Using spmd allows you to control what data is pushed/pulled to/from the workers (potentially reducing overhead), let's you push/pull and operate on multiple codistributed arrays (allowing for more complex operations) and let's you vectorize in parallel. 
Hi again I am currently trying to improve my solution. Your idea here do not seem to work. If you try test = rand(1,25); it do not give the right values, and I cant really see why? 
If you're getting these images in RGB, you could move a mask of however many pixels you decide is big enough to say "it's green" around the whole image, and check if it's green by taking the average RGB of all the pixels in the mask. There's a range of values that'll look green. You could also take a picture of this signal and see what its RGB values look like. I'm guessing this is a little slow though.
&gt;what is important to you? (top three things; very open ended question) Finding new ways to enjoy my time. Hanging out with people I love. Self improvement. &gt;what are the top three things you look forward to in your week? Hanging out with my gf. Playing soccer. Accomplishing something significant for the week. &gt;what are your interests? Learning, guitar, soccer, socializing, traveling &gt;what else do you do in your spare time? Video games, read about random stuff on the internet, reddit, work out, try to cook &gt;are you introverted or extroverted? I very much value my alone time, but if the distinction is which you gather energy from, I would have to say I'm more towards the extroverted side. &gt;are you eco-friendly? Depends. I don't recycle because it's not cost-effective in my area. However, I'm eco-conscious, meaning that I try to reduce my consumption of things like packaging, waste, plastic bags, etc. &gt;do you identify with a specific community (online or otherwise)? if so, how important to that community to your identity? Not one group specifically. In fact, I've never been singularly involved with any group, online or IRL. It's always some blend of several different groups at any given time. 
Ah, that makes sense. Thanks for explaining that!
What's a comment?
That's not a bad idea. Thanks a lot for that. However, one thing I see which might pose an issue is the distance of the triggering object. The program would count more green pixels the closer the object is to the camera, and it would count less the farther it is. Any idea how to overcome that issue?
%Commenting for later
what is important to you? (top three things; very open ended question) Feeling like I've improved the world even a little bit. Getting to enjoy life with my loved ones and animals. Ice cream what are the top three things you look forward to in your week? Finishing my current work project. Spending time with the misses. Dinner what are your interests? Sports, animals, women, movies, reddit, working out what else do you do in your spare time? video games are you introverted or extroverted? middle/introvert are you eco-friendly? When I can be do you identify with a specific community (online or otherwise)? if so, how important to that community to your identity? Computer geeks, my college alma mater, and redditors. A little bit. 
The `arrayfun` call was incorrect. I have updated the post.
Ah, I thought it was constant size. In that case, what you might have to do is a little machine learning. It's a little beyond what I can tell you about, but you could use an SVM -- matlab function svmtrain. 
Thank you. This will help a lot.
&gt; what is important to you? (top three things; very open ended question) Success, happiness, friends &gt; what are the top three things you look forward to in your week? Completing a challenge, finding a new challenge, and sleep (my weeks are well beyond 40 hrs) &gt;what are your interests? Investing, Inventing, Problem Solving &gt;what else do you do in your spare time? See above, but beyond that, girlfriend, intramural sports, taking care of the house/yard, video games, taking care of the dog &gt;are you introverted or extroverted? Yes. Really depends on the environment and situation. Extroverted in a group of introverts, Introverted in a group of extroverts. &gt; are you eco-friendly? HA! No. You hippie. Have you tried nacho cheese that's transfat free? I'm not religious, but that's a sin. &gt; do you identify with a specific community (online or otherwise)? if so, how important to that community to your identity? I do not. I'm logical. If it makes sense, I go with it. If it doesn't make sense, I abstain.
I didn't do much research, but just looking at the image, I think you could try to use a hold after your hemisphere plot and then surf the shaded part over the hemisphere. If you're trying to replicate the exact color as well, use surf(X,Y,Z,C). You can specify color with C. 
My honest suggestion to you is to create it using Microsoft Word's Equation Editor. It'll look a lot nicer than what MATLAB could give you in the command window. 
I made something that sort of approximates that :) for k=1:3 if k==2 disp([num2str(A(k,:)) ' + ' num2str(B(k,:)) ' = ' num2str(C(k,:))]) else disp([num2str(A(k,:)) ' ' num2str(B(k,:)) ' ' num2str(C(k,:))]) end end
 [latex(A) ' + ' latex(B) ' = ' latex(F)]
What I've done in the past is use [polyfit()](http://www.mathworks.com/help/matlab/ref/polyfit.html) and [polyval()](http://www.mathworks.com/help/matlab/ref/polyval.html) - as their name suggests they do polynomial fitting. polyfit() will return the coeffs. of an n-degree (accepted as input) polynomial, and you can then in turn use those coeffs. with polyval() which evaluates a polynomial with coeffs. provided at the x-values provided (both you will input). Finally, you can go to plot them. Example, say you've got daily temperatures from a weather station over the last 10 years and you can "see" visually there appears an increasing trend. You can do the following: day = % days since 01-01-2000 T = % temperature values coef = polyfit(day,T,1); % last input is the degree of the polynomial line = polyval(coef,day); figure(1); hold on plot(day,T,'.b') plot(day,line,'--r') Will plot your temperature (as blue dots) time series along with the calculate linear fit (as dashed red).
Hi. I'm trying to spread my toolbox around and get some feedback and and constructive comments. I hope it's a proper submission w.r.t. the subreddit rules. Thanks.
Ahh brilliant! It may take me a while to completely sort it as I have lots of data spread across structs and fields, but I tried it with one case and got exactly what I wanted. Thanks!
If this is an image over a video, which I am assuming, try using morphological functions like erode multiple times and check what is still there...eventually only the large objects will remain. Just a suggestion.
Thank you, that did the trick; unfortunately, using VideoReader gets rid of the file's audio...should I just extract the video file's audio and read/write it separately?
VideoReader/Writer don't support audio. If you have the vision toolbox, you can write / read audio (see the step function in [VideoFileReader](http://www.mathworks.com/help/vision/ref/vision.videofilereader-class.html) and [VideoFileWriter](http://www.mathworks.com/help/vision/ref/vision.videofilewriter-class.html)). If you don't have the vision toolbox I don't think it is possible to write audio + video in a single file in MATLAB, but it can easily be done using [ffmpeg](https://www.ffmpeg.org/download.html) which is free (http://askubuntu.com/questions/59383/extract-part-of-a-video-with-a-one-line-command). Just install ffmpeg and wrap the ffmpeg command in a MATLAB [system](http://www.mathworks.com/help/matlab/ref/system.html) call.
I know next to nothing about PCA, but when I create Toolbox software I include something like the following in every function: % Calculates the TUFF test statistic (kupiec 1995) based on hit sequence % and coverage inputs. % % USAGE: % [Test, asymptotics, name] = fTUFFtest(I,p,sign) % % INPUTS: % I - Hit-sequence, I, column vector % p - Coverage level of VaR % sign - (Optional) significance level for assymptotic critical value, default 0.05 % % OUTPUTS: % Test - Test value % asymptotics - critical value of sign significance in asymptotic distribution % name - name of test % % EXAMPLE: % a = 0.95; %Coverage set to 955% % p = 1-a; %Coverage rate % T = 500; %Observations % I = binornd(1,p,T,1); %Simulates hit-sequence % fTUFFtest(I,p) %Calls "Time untill first failure" test function % % Author: Thor P. Nielsen (econ.ku.dk/pajhede) % E-mail: thorpn86@gmail.com % Date: 04-06-2014 % Version: 1.0 % %% I like that you included multiple examples, you could consider making a short .pdf manual as well
Thanks alot for your feedback. The reason some of the functions included do not have a full description or examples is because they have no use outside the ad hoc usage of the toolbox itself and the specific PCA technique from the referenced paper, which I also wanted to encourage to be read before the toolbox is used. The main functions, on the other hand, are described in a similar manner to your suggestion, both in the readme file and the functions themselves. And thanks for suggesting a pdf manual. I will look into that.
http://en.wikibooks.org/wiki/MATLAB_Programming Simple questions with simple answers. The link above will help you with most of them. You should do your own homework.
Have you already segmented the objects? If so, check out the command regionprops. It will return all kinds of data about binary objects in an image, including area, centroid, and boundingbox.
I do not know OP's exact problem, but often times you are only interested in the linear part. Therefore, you ignore (or set the weight to zero) early, non-linear part. If that is always at a different point, you need to come up with some heuristics to test where that is but that shouldn't be all too hard. 
Check the installation? Specifically, did you add the path of the cogent download? http://apps.usd.edu/coglab/psyc770/pdf/cogmanv125.pdf
I used exactly the same manual and added folder with subfolders to ML. Files can be seen, commands like help_cogent work and it's all fine until you want to give control to cogent. Any ideas?
Can you give a more specific description of the error you get? The text would be great. I've never worked with this toolbox so I'm not sure of its ins and outs and intricacies. 
It only says "Undefined function or variable 'start_cogent'." Thanks for reply!;)
Convert the region into a grid of points and use `surf`?
Thank you for all of your suggestions, I'll look into it!
What version of windows are you using? I don't use Cogent but I understand it's pretty iffy outside of Windows XP. Could also be the Matlab version as it's pretty new.
thanks again.... Is there a more efficient way than the ismember function in order to find multiple values in a matrix. 
This sounds a bit like "would you like to make my homework, thank you". What have you tried yourself? Are you required to use loops for these questions or are you allowed to use other functions? (if so, have you tried googling the answer... "matlab calculate average" would give plenty of results for your first question.)
You don't need loops at all for this. You just need to have your data in [table](http://www.mathworks.com/help/matlab/ref/table.html) format, then use [varfun](http://www.mathworks.com/help/matlab/matlab_prog/calculations-on-tables.html) or rowfun to create the summaries.
This is my favorite - but it ultimately depends on what you need to do: http://www.mathworks.com/matlabcentral/newsreader/view_thread/306676 it's about 1/2 way down the page and the function is loc= find(any(all(bsxfun(@eq,reshape(x.',1,n,[]),M),2),3)); freaking fast comparatively. I use it all the time in my dynamic programming routines because I have to determine the appropriate indexes all over the place. Good luck
If you indent all your code with 4 spaces, it will be understandable. 
In the sidebar here at /r/matlab : &gt;MATLAB code tricks, discussion, and questions; *but we don't do your homework!*
Have you done whatever configuration needs to be done prior to calling start_cogent I'm asking this based on the [first .doc](http://www.google.com/#q=cogent+2000+doc) found from that Google search. Bottom line, to me, it seems that the reason is: 1) you don't have the paths correct 2) you don't have something configured prior to the fn call in which the fn needs (but I think that would produce a different error) 3) you may very well have EVERYTHING you need in the package, EXCEPT this fn. 4) fuckifiknow Hope you've found an answer! *Edit: In my searches, I'm understanding that cogent2000 is a MATLAB program designed to accept user interaction/feedback (reactions?) and as such needs to configure several things prior to running. My first point to look would be checking if I had all the configurations set up correctly. [Here](http://www.icn.ucl.ac.uk/courses/MATLAB-Tutorials/Sessions2008_09/Christian%20Kaul_1/html/example2.html) they configure both the display and keyboard prior to the start_cogent call. [Here](https://github.com/egolfino/sdap/blob/master/functionalLocalizerCode/visualStim.m) the display, keyboard, data, and log are all configured prior to start_cogent.
Here's another thought. Say I have three processes (functions) that I want to do. I'll use math: y = cos( exp{ sqrt( x ) } ) Lets say that you coded up cosine, exponential, and square root functions yourself. Let's say that you, in your haste, forgot that x &gt;= 0 for real valued output of the square root. If you put in x = -2, you'll get an error: error line 12 sqrt --&gt; some random error message error line 5 exp --&gt; another random message error line 6 cos --&gt; again, message. What I'm getting at is that the cosine function might not be the cause of your error, and it's error message may be more cryptic than you would expect. However, this sequence of 3 error messages provides us with a path to take in nailing down your error. [Here's another Google search result relating this to your toolbox](http://forum.cogent.ca/showthread.php/659-Error-using-gt-CogInput). Turns out there was no help in that thread because it was the wrong place to post it. More Google search results that may help (if you haven't caught on, a lot of us here use Google "matlab+&lt;searchterms&gt;" - it's amazing what you can find) on toolbox installation: http://www.mathworks.com/matlabcentral/newsreader/view_thread/154082 
Yes, cogent is basically a stimulus delivery toolbox, therefore it requires display configuration given first (prior to start_cogent command). It doesn't work either though - so to clear things up, I'm trying to run a n-back task written in cogent and published online by some other research group. First error I get is about display configuration, same as with start_cogent, undefined function thing. Then, when I run sample scripts provided by cogent itself they work - unless there's start_cogent command somewhere. That makes me think my installation was correct, it just 2013b on w7 that causes issues. Lack of results in google search ("matlab 2013b cogent200") kind of confirms it but yet again, I've heard someone uses it (sadly, a person out of my reach). Well, I might try downloading some older versions of ML instead of trying it to work this out. Thanks for help!
Your thought would be very helpful if I were running self-made code ;) 
I want to search the values from vector (about size 1 x 10) in a matrix of the size 400X 60000. hotcarl7379: your sulotion does not seem to work on that task 
Correct. Mine basically finds a column vector in a matrix with the same number of columns... 
Do you want to find the exact vector in the matrix, or do you want to find the elements of the vector wherever they exist in a matrix. Give us a smaller example to see what you're trying to do
Fool around here for a bit: http://www.mathworks.com/help/matlab/interpolation-1.html It's got MATLAB's built in interpreter functions, and can interpolate N-dimensional data. It'll take your raw data on odd spacing as well as the desired output spacing, and give you nice, gridded output.
thanks - I've been looking at this - do you think "[Interpolating Scattered Data Using griddata and griddatan](http://www.mathworks.co.uk/help/matlab/math/interpolating-scattered-data.html#btdzf16)" is the best approach? I'm not sure if it is right though because I need to average the profile in one direction but not the other (i.e. I need depth across the profile of the channel averaged over distance). Is this possible? I'm feeling a bit lost! 
Are you trying to plot the temperature isoclines? Or are you trying to make 20 surface plots stacked on top of each other? Plotting 3D data is not really trivial unless you know exactly what quantity you want to plot. There are different types of plots you have to use depending on the features of the data you want to emphasize.
Use [scatter](http://www.mathworks.com/help/matlab/ref/scatter.html) with your time axis as the color argument. Or do what /u/Halsey117 suggested and make a 3D plot with your axes as x=x(t), y=y(t), z=t.
Like college_pastime said, it's hard to give advice without a very precise understanding of what you're trying to plot, but I might be able to help a little. I think some of the confusion comes from the way your data is organized. You've got an array of X values, an array of Z values, and then an array with 20 Z values corresponding to each (X, Y) pair. This confuses you because you're trying to think about depthsatnode as a function of (X, Y), which doesn't really make any sense. Ultimately what you have is 20*54 temperature measurements, with an (X, Y, Z) coordinate for each one. Every group of 20 temp measurements has the same X and Y coordinate, so your data set has been "compressed" a bit by removing the redundant X and Y values. You could "un-compress" your data by making xnode into a 20x54 array where each row is an identical copy of your current data, and likewise with ynode. You can this with repmat(). Once you do that, you'd have temperature data with a corresponding coordinate position for each measurement. For each temperature value tempatnode(n, m) You would have a corresponding set of coordinates: [xnode(n, m) ynode(n, m) depthsatnode(n, m)] Of course, the shape of those matrices is no longer meaningful, so you could just use a single index rather than (n, m). That should make it simple to feed this data into any plotting tool you like, but you'll still have to figure out what exactly you want to plot.
 gamma = []; for j = 1:1:N gammacol = []; for i = 0:1:N-1 gammacol = vertcat(gammacol,(a.^i)*b); end gamma = horzcat(gamma, gammacol); end gamma Something along the lines of this .... however this doesnt give me the upper triangular as zero nor does it shift everything down 
figured it!! 
I want to plot temperature isoclines - the temperature profile for the [cross section of the fjord](http://imgur.com/sr2AeMJ). I'm just trying to [average this across a distance](http://imgur.com/zhPlOcU) to reduce anomalies/noise. 
Hi, I see what you're saying. I think what you are suggesting is that I deconstruct the data into 20 sets of xyz data - but I'm still not sure how to average the data after this point because the z data is not at the same points for the surrounding nodes. And also, I'm not looking for an average single node but a cross-section. That's my fault though, I'm sorry - I wasn't clear in what I was looking for! I want to plot temperature isoclines - the temperature profile for the [cross section of the fjord](http://imgur.com/sr2AeMJ). I'm just trying to [average this across a distance](http://imgur.com/zhPlOcU) to reduce anomalies/noise. 
&gt; I think what you are suggesting is that I deconstruct the data into 20 sets of xyz data No, I'm saying you have a collection of 20*54=1080 data points, each of which is an (x, y, depth, temp) set. You've just hidden that fact by organizing your data in the way that you have. I'm still not sure what you want to average over. You don't have any repeated measurements to average out. Maybe you mean you want to smooth the data? You could use TriScattetedInterp to interpolate it to a uniform grid and then smooth all you like, but that's getting a bit ahead of yourself. Try to plot it first. 
Also, before you go smoothing data, you should consider whether such an action is justified. Are you doing it to produce a prettier figure for a paper? Or do you actually believe that the variation you see in your data is due to noise? If your temperature sensors have variances of something like 0.1 degrees, and you're smoothing away variations of &gt;1 degree or so, you're just hiding real detail in the data. Accuracy before aesthetics. Don't sacrifice accuracy unless it's necessary to make the data visually comprehensible. 
Hi there, thanks for your response. I do see what you're saying, but it's not to make it 'pretty'. The model which simulates this behaviour runs over a year, the data is hourly. I'm trying to compare multiple years by comparing profiles at the same points at each year to see if/how the model changes in time given the same input. So, I don't want what could be hourly noise to result in false conclusions. Therefore I'm trying to average the data spatially and temporally then comparing this same segment between years. The first question is how do I do the spatial average (what I'm trying to do above). The second is then averaging over time. If averaging in space is not possible (or if this is the wrong approach) I will just have to take the same profile after averaging in time, which is doable just - I would think - not as defensible when trying to draw comparisons/conclusions.
When I got mine, it was a direct download. I believe there was still the option to additionally purchase it on a physical disc instead, but the download was the default option. Basically a couple drop-down menus to choose your operating system and the extensions you wanted. The home address is probably just to confirm you're real.
Sorry again - error finding installer class ? after downloading mathlab? WHAT IS THIS? 
Beats me. I never had any problems. Check out [this post on MathWorks](http://www.mathworks.com/matlabcentral/answers/92499-why-do-i-receive-an-error-finding-installer-class-message-when-trying-to-install-matlab-on-windows) or maybe give tech support a call on Monday.
If you are trying to plot isoclines, I suggest using [isosurface](http://www.mathworks.com/help/matlab/ref/isosurface.html). This function automatically interpolates your data to plot the isoclines you specify. You can set an alpha value for each plot so they are see through, and you can specify the color of each. You should go through the example from the manual to see the structure of the required variables.
I don't really know what you mean with "n units away from my original function". Do you mean an offset? Could you maybe give a simple example?
The distance on the normal line from the original curve to the other curves are n units long. http://www.chiefdelphi.com/forums/showthread.php?t=126639 but instead of doing it for one function, I want to do this for any function I input
new to programming ( i know some C++ but veeeery little) Im an engineering student (Aero) and my teacher said over summer to start learning some MATLAB 
oooh, ok, I get the problem. Though I think I might need to disappoint you since I do not have any experience with these kinds of problems (of course I can brainstorm with you). I assume you actually have a function (so not data points) and you want functions as outputs (again not data points). But if i take a look at your thought process I see a problem with point 5. You want to essencially take a bunch of points with distance n to your function and then fit it. But the problem is that you don't know what kind of function you are fitting! So giving a function as an output would be quite difficult with this method. So my guess is you would have to think of something else unless you think that an approximation is sufficient. 
Online obviously. There's a pdf of a matlab for engineers text out there, actually there are a couple/few, just Google. Do the project Cody stuff, YouTube online tutorials, etc... matlab is super easy and super powerful, but obviously has its own limitations. Good luck, and have fun!
The sidebar has some good references as well
If you want to get your feet wet go through some Cody problems. Those are always fun... https://www.mathworks.com/matlabcentral/cody/
Both My uni teachers said for anyone who has 0 programming abilities matlab (for engineers) would be the first step ? So i was just wondering since I just bought the student suit where should i start 
Does perfecting MATLAB make it easier to learn C or Python?
okay, i get that, i should have put radius &gt;=2 rather than &gt;=4 in the question. but the problem still stands that isopleths at v=9 and 4 (which are quarter spheres of radii 3 and 2 respectively), are truncated by plane along y=2, rather than the quater spheres &gt;= radius of 2 truncating a plane of v=x(i,j,k)=1