You need to use this for a class and there are direct paths in the function? (and Windows paths at that!). Obviously it takes a number from 1-5, but there is some other data stored in F:\Living Systems\Runs\ and F:\Living Systems\Scaled\ that you need.
Not really. My research adviser mostly just threw this project on me and said go. He is not the most helpful of types. Is there a website or a book you would suggest to look at to get a better understanding of numerical methods?
http://www.amazon.com/gp/aw/d/0824704436
you might want to try setting it up in simulink. Simulink has a lot more control on the step size, solver type, tolerances,...
One of the best things you can do for MATLAB's ODE suite, assuming you have a large state derivative vector, is provide the sparsity pattern of the Jacobian. This can drop the cost by orders of magnitude. Are you doing this? edit: And if you could provide it with a Jacobian you are building yourself, this would be even better. Are you capable of doing this?
I found this simulink block set that might do the job. Does anyone have any experience with [simServer](http://www.mathworks.com/matlabcentral/fileexchange/13721-distributed-parallel-simulations-with-simulinkr-and-other-tools)?
Do you know how to use the differential equation solvers, such as *ode45* and the like?
Use the "math function" block and change the function to "mod." 
Simulink is a wrapper for the ODE solvers, and in fact it's more useful for complicated equations, not simple ones. Simulink would be total overkill in this case. 
Can you post how you've written the actual call to the ODE solvers? Also, write out the dynamical model you're trying to simulate *mathematically*: what are the differential equations? Also, I *strongly* recommend you do not use global variables. There may be unintended namespace collisions that could be screwing stuff up. In my personal experience, whenever the ODE solver hung up it was because I screwed up writing the equations: I'd miss a negative sign or something, and all of a sudden my dynamical system went from stable to unstable. So if you're using the ODE solvers correctly, this is likely an issue with your code itself.
Thanks a lot!
A differential equation of arbitrarily high order can be formulated as a system of first order differential equations. Pose your problem in this way and ode45 will be able to solve it.
Your error with **convhulln** is due to the fact that your X is transposed. It's expecting mxn matrix where m is the number of points and n is the number of dimensions. try: K = convhulln(X'); As for the rotation, try [wikipedia](http://en.wikipedia.org/wiki/Rotation_matrix).
I've added the stuff in the edit above! 
That didn't help since I don't have a subscription. Fair use guidelines let you reproduce sections of this paper, you know. I don't need the entire paper, I just need the equations 
http://www.viewdocsonline.com/document/4lobww Uploaded the paper
To do this a bit further (I enjoy small exercises like these). Let's say we have hexagons whose sides are length n, with center position (x,y). Then we can calculate, with respect to the center, the location of each of the 6 points of the hexagon, and use the fill() command to create the hexagons. Here's the code: n=1; % side length x_offset = n*sqrt(3); y_offset = n+n/2; num_rows=20; num_cols=30; % determine the center locations X_centers=repmat((1:num_cols),num_rows,1); X_centers = X_centers*x_offset; Y_centers = repmat((1:num_rows)',1,num_cols); Y_centers = Y_centers*y_offset; % now shift odd rows over odd_offset=n*sqrt(3)/2; X_centers(2:2:end,:)=X_centers(2:2:end,:)+odd_offset; X_vertices = zeros(num_rows,num_cols,6); Y_vertices = zeros(num_rows,num_cols,6); % topleft X_vertices(:,:,1) = X_centers-n*sqrt(3)/2; Y_vertices(:,:,1) = Y_centers+n/2; % top X_vertices(:,:,2) = X_centers; Y_vertices(:,:,2) = Y_centers+n; % topright X_vertices(:,:,3) = X_centers+n*sqrt(3)/2; Y_vertices(:,:,3) = Y_centers+n/2; % botright X_vertices(:,:,4) = X_centers+n*sqrt(3)/2; Y_vertices(:,:,4) = Y_centers-n/2; % bot X_vertices(:,:,5) = X_centers; Y_vertices(:,:,5) = Y_centers-n; % botleft X_vertices(:,:,6) = X_centers-n*sqrt(3)/2; Y_vertices(:,:,6) = Y_centers-n/2; % reshape vertices X_vertices=permute(X_vertices,[3 1 2]); X_vertices=reshape(X_vertices,6,[]); Y_vertices=permute(Y_vertices,[3 1 2]); Y_vertices=reshape(Y_vertices,6,[]); % generate figure scrsz = get(0,'ScreenSize'); width = scrsz(3)*.9; height = scrsz(4)*.9; left=(scrsz(3)-width)*.5; bot=(scrsz(4)-height)*.5; figure('outerposition',[left bot width height]); axes('position',[.01 .01 .98 .98]); % create random colors num_hexagons=num_rows*num_cols; map=colormap; num_colors=size(map,1); color_index=round(rand(1,num_hexagons)*(num_colors-1)+1); % plot hexagons hexagons = fill(X_vertices,Y_vertices,color_index); axis([min(X_vertices(:)) max(X_vertices(:)) min(Y_vertices(:)) max(Y_vertices(:))]); set(gca,'xtick',[],'ytick',[]); **Edit:** Updated to generate a separate color for each hexagon, which you could later change by doing set(hexagons(i),index); % "index" is an index into the color map or set(hexagons,color_index); % "color_index" is a vector, one index per hexagon
Look at my reply to my reply.
look up the linprog command
Can you write a pseudocode or an algorithm for the problem you have? There is a table listing some variables in the image you posted, see what's going on there. In fact, you only need to understand assigning values to variables and evaluating the value of an expression at a given point to do this problem. Understand this, play around, and try to make the variables behave the same way in the matlab window as in that table. Refer to the sidebar for a crash course (refer slides from "for, while, if relations" till "scalar functions"). 
Yes, but then I won't get both column values (at least, not how I've tried). It's like I have an x column and a y column, I need the x that corresponds to the minimum y.
So take the arg min [m,l]=min(A(:,2)) A(l,1) is the matching x. and A(l,:) is the matching row.
Oh I misunderstood your intent. Suppose you have A = [1 2; 3 4; 5 6] and you want to find the pair corresponding to the minimum in column 2. min = min(A(:,2)) = 2 idx = find(A(:,2) == min) = 1 output = A(idx,:) = [1 2] EDIT: My way is kludgy. DoorsofPerceptron did it the right way. 
There's an error in this line: r = mp; Since, you haven't defined the value of mp. Try seeing what you get if you type f(1) in the matlab window. If you get an error then the file f.m is not in your working directory. Edit: Also i don't think you need to take "f" as an input to bisection(f, -2, -.05, 0.0001), just try function r = bisection(-2, -.05, 0.0001) with f(x) being called within the code. Should work fine as long as f.m and bisection.m are in your working directory. 
This is not a Matlab question. There are no typical units. Just ask whomever gave you the code or read the code itself and look for comments. 
Your math is off. Your range of x's will depend on r. Delete the line "x=[-6:0.1:6];" and add in right after the for declaration "x = -r:0.01:r;". That's the way without changing too much of your code. It's not a good way to plot circles though. How's your trig?
Honest question: Why do you need that function? Why don't you just use whichever of surf, contour or mesh you need in a specific case?
I don't see anything terrible about this. I do have a couple of recommendations, though. * For variables which have a finite set of possible values, you can use switch/case statement. * You should maybe do some input checking to make sure that x and y have values that will do good things. * The return of y as an output is redundant. You could returns nothing or return something useful like the handle of the figure you created. * sprintf, in my opinion, is easier to use when constructing strings with numbers Here's my altered code: function hf = delete_plot3(x,y) %function plot3d requires two input variables (x,y) x defines the size of %the matrix, and y selects 1 of 3 options. % perform some input checking. if x&lt;2, we don't see much if x &lt; 2 error('first input x should be 2 or greater') end % decide which plot to use based on the value of y switch y case 1 %option 1, 3D surface with lighting. surfl(peaks(x)); title(sprintf('surfl plot of %d by %d grid', x, x)) hf = gcf; case 2 %option 2, series of contours. contour(peaks(x)); title(sprintf('contour plot of %d by %d grid', x, x)) hf = gcf; case 3 %option 3, 3D mesh. mesh(peaks(x)); title(sprintf('mesh plot of %d by %d grid', x, x)) hf = gcf; otherwise % they input an invalid value for y. % we could also throw an error here instead. msgbox('Second input y should be 1, 2 or 3.') hf = []; end 
Here it is in a single command: A(A(:,2)==min(A(:,2)),:) This part: A(:,2)==min(A(:,2)) returns a logical index showing with a TRUE which row in column 2 has the lowest value. If column 2 of A has 2 rows with same minimum value, you get: A = [1 20; 3 578; 4 3; 8 90; 54 3] A(A(:,2)==min(A(:,2)),:) ans = 4 3 54 3
Thank you for looking into this for me! The dynamical system is defined by component mass balance (equations 1&amp;3) and energy balance (9 and 10). I would have thought it was a solely time dependent problem as it is only really working out how the reaction rate changes with time, and using the residence time to work out distance through the reactor (velocity is constant). I'll give the boundary value solver a go! cheers 
Hooo, buddy. You are in for a doozy of a project if you decide to move ahead with your idea as-described. As far as I know, MATLAB does not include a m-file parser/tokenizer script. General parsing scripts like 'textscan' and 'textread' do not have nearly the versatility to tackle the (relatively) complex syntax and structure of a general m-file. So that leaves you two options - find an existing piece of code like [this]( http://www.mathworks.com/matlabcentral/fileexchange/3915-fparser-a-pedestrian-m-file-parser-and-tokenizer), or become intimately familiar with MATLAB's regular expression parser, 'regexp.' I'm not going to tell you that your baby is ugly, though. If you're convinced that this is the best way to modify code on-the-fly then more power to you. You've just got a heck of a job ahead of you. I really do think you might be better served constructing your own mini m-file within a series of loops for testing things using MATLAB's 'eval' command, but good luck to you!
It was a question as part of a test. There was no reason for other than to test our abilities with matlab.
That looks really good. I don't what a lot of it does though as I've only been using Matlab for a short while. I'll be sure to use those tips in the future. Thanks.
I purposely put in some fancy stuff so you can look up the commands in the doc and learn more.
Not correct, the third argument specifies the dimension along which the min is taken.
You can't really just modify the equations and claim `t=L`. Units don't work out. But knowing that the flow velocity is constant with some velocity `v`, you could potentially change this to an initial-value problem by saying `v=L/t -&gt; dL = v*dt` and applying this chain rule to get time derivatives. Personally I would try to use the boundary value solver.
This is nothing to do with matlab. This is to do with which equation you have used.
I will attempt that, however there are no other boundary conditions other than a lengthspan which is already defined and the initial conditions (Temperature and partial pressures/masses), therefore I can't see why ODE45 shouldn't solve it. I have simulated multiple systems like this before and this is the first time I have had an issue with it.
&gt; I start the simulation with an initial frequency of 50Hz and modify it on the fly while the simulation is running. I think there's your problem. I think all of this stuff gets complied down at runtime. There should be a checkbox somewhere to allow changing of values during the simulation.
Yep. Add a 'verbose' statement and make it global. write your own fprintf function like fprintf and depending on 'verbose' it does different stuff.
axis([-6 6 -5 5]) will give you what you want. You're still including invalid ranges of x. If you change your code as per my suggestion, and add in the line above, you'll have what you want. why's it making the line? Look at what r and x start out as. In the first iteration, r = 1, and you let x start out at -6, so your first calculation is y = -sqrt(1^(2)-(-6)^(2)), which is not on the circle of radius 1. 
I get your point, but I cannot find such check box, if you know where it is. An alternative I tried is to start and stop the simulation from a script while changing the frequency in between, but it makes the overall simulation times prohibitive and there is no real continuity in the simulation.
Here's a quick solution: minvals=min(A,[],1); [I,J]=find(repmat(minvals,size(A,1),1)==A); [~,locs]=unique(I); minlocs=J(locs)'; **minlocs** now gives you a list of the unique locations for each row. Quick point: if you simply want the minimum values in each column, just use: minvals = min(A,[],1);
Thanks very much, this worked perfectly!
What's the problem? Just post the questions that way in the future people can see it. Search my post history on /r/matlab, I kind of know what I'm doing depending on your level.
I get the vibe this is sort of a commission, do his homework and (potentially) get something of monetary value back. If I have to guess he does not want to post his question because he is scared he will be caught for plagiarism. *To OP*: As such, I will not help. If you want answers, post (pseudo-)code and we help you clean it up or point you in the right direction. Leaving homework/projects for the last second then turning to the internet when you realise you are not up for it is neither ethical or in any way pedagogical. But I guess you know that OP, you just don't give a fuck..
He got a big fat zero and got reported for plagiarism since the fucking dumbass just copy pasted code+code comments straight from reddit. He made it too easy to prove it was copied, usually I need to cross-check with coding style from other assignments. He never really protested and he is the kind of guy thay was never around for lectures/labework so no real contact was had.
Did you at least staple the thread to the back of his assignment? Maybe draw a little alien out of pencil with the 0 in bold red being the head?
Naaah, I do not have an emotional attachment with reddit for me to try and be playful and show him I am part of his secret clun, site's popular enough! I just printed the webpage and collated it with the plagiarism form, formal stuff, boring stuff. Plus I need to try and keep my reddit account and real identity fairly separated (although from this thread alone you can prolly identify me.. Scary)
I would start by diagramming your system and writing down the differential equations that describe the power flow through each component. A good reference for modelling hydraulic systems is [here](http://www.amazon.com/Hydraulic-Control-Systems-Noah-Manring/dp/0471693111/ref=pd_bxgy_b_img_y book). Matlab has a good demo [here](http://www.mathworks.com/products/simulink/examples.html?file=/products/demos/shipping/simulink/sldemo_hydcyl.html) on how to model a simple hydraulic system in Simulink. 
&lt;3 
What are you using yay, fay and bay for besides the sums? And do you need the sum at every iteration? If all you need is the sums then you should be able to get rid of the loop completely. q = sum(v&gt;5 &amp; v&lt;10); d = 2*sum(v &lt; 5); e = 10*sum(v &gt; 11); Am I missing something?
Your problem might be that, for example, if 5 is an element of v it does not meet any of you conditions. The same for 10 and 11. If you wish to do nothing with these numbers then put an 'else' before the 'end' in the 'if' loop. Otherwise change '&gt;' and '&lt;' to '&gt;=' and '&lt;=' as appropriate
diff(y)./diff(x) will give you the instantaneous slope at each point. This could be ugly due to noise, though: x = linspace(0,2*pi,100); y = sin(x) + 0.01*randn(size(x)); plot(diff(y)./diff(x)) % should be cosine wave One option would be to perform some smoothing (see: **filter**) on the data before you do this. You could also perform regression (see: **mldivide** or **polyfit**) to try to fit some function of x to the data and then use that knowledge to estimate the slope.
I see three options. The first is what thisaccountisbs said- normally in Matlab you never need to use a loop. But I will not suppose to know more about your program than you do. So moving on... If you want yay fay and bay to be of length "length(v)" then start off saying fay(1:length(v)) = 0, then they will all be zero filled and only their indices which meat the requirement will be 1's. However, if you just want the sum, why make an vector at all? Just say yay = yay + 1 (and fay = fay + 2, bay = bay + 10) after initializing it to zero outside of the loop. Now just for a friendly tip. If the code in thisaccountisbs's comment doesn't mean anything to you, you should look up logical arrays in Matlab, as it is one of the program's most powerful features. 
Editor &gt; Debug &gt; Set/Modify conditional breakpoint. Find what ever variable is going to NaN and set isnan(variable). The debugger will stop on that line when the conditions are met. Then figure out why you have a NaN. 
thanks matt. you're great:D
Store your questions in a cell array and use randperm to select the question. For example questions = { 'questions 1...', 'question 2...', 'etc...'}; n=randperm(1:length(questions),1); set(handle,'string',questions{n}) Depending on the gui you are trying to put together, the above code would probably be part of a button function. You can always use guide to quickly create a gui, but manually writting the code is much cleaner.
:( Noob no likey. Sorry if this is super basic, guys. I'm wanting to keep track of the number of times a user selects a certain answer. After they complete a series of questions, I want their results to be added to the rest and then displayed in a chart.
While app is running: if choice == choice1 counter1 = counter1 + 1; end Never used GUIs in MATLAB, but I think this logic should work.
How many different answers can the user select? If it's not that many, you can just set up a lot of if, elseif statements. if user_answer == option_a counter_a = counter_a + 1; elseif user_answer == option_b counter_b = counter_b + 1; ..... end Unfortunately, this can be very tedious, add a lot of perhaps unnecessary code, and take longer for the code to run.
Sorry, I have no problem with Noob questions. My only problem was how vague the question was. It is almost impossible to give a really useful answer. Could you past in some code in your comment? How will you be asking these questions? If you can show where you're having trouble, then we can probably help you. But beyond what I (and others below me) have written, there isn't much we can do. 
I have a vague memory of MATLAB getting mad at me for trying to use ~ like that without separating commas. ie: Possible fix? [~, rest] = foo();
I agree. I believe that comma separation is required here.
I think we're gonna need some more information. You're animating this?
Ok, so I'm not entirely clear what you're trying to accomplish here (confusion on my part with your notation), but if you initialize your theta vector before adding the numerical values theta = zeros(1,1,100); theta(1,1,:) = theta_numerical; you get a 1x1x100 matrix. Then, evaluating Q: Q = [cos(theta) -sin(theta); sin(theta) cos(theta)]; gives you a 2x2x100 matrix. Therefore, if you were to loop through the third dimension of Q you could multiply each of the elements of x and v by SQCQ^T (which is what I assume you are looking for?). Hope that helps. Also, there's probably a way to vectorize this computation but my brain isn't working so well right now.
I tried to do that but what I was getting out of interp1 wasnt making any sense. The problem is that sum_peaks isn't evenly sampled so I think I need to interpolate.
The simplest way to do that is sum_peaks_uniform = interp1(locs,sum_peaks,0:999); If that isn't doing what you expect, then I think you'll need to explain what you're expecting in more detail.
when I interpolate and plot uniform_peaks it looks exactly like the image above, but the fft of that is all complex NaN, so I don't know what happened.
The problem seems to be not with the interpolating, but with preforming the fourier transform on the interpolated data. The output of interp1 is fine, and if I plot it, ti looks exactly like the plot of the data I got it from, however fft(sum_peaks_uniform) is all Nan. thank you for the advice you've given me 
As you have it now, your sampling frequency is 1Hz. The sampling frequency defines your timestep, where tstep=1/Fs; Then you just do: x=sin(2*pi*f*t); For the fft, you always do it like this (as shown in help fft), at least until you are familiar with how everything works. NFFT=2^nextpow2(length(x)); %In your case you want exactly 512 points, whereas this will give you 128, so NFFT=512; f=fs/2*linspace(0,1,NFFT/2+1); %Your frequency vector X=fft(x,NFFT); %The full spectrum X=X(1:NFFT/2+1); %isolating the positive frequency values only plot(f,X); %plot the spectrum
Try this: NumAsFloat32 = typecast( uint32( bin2dec( NumAsString ) ), 'float') (stolen from [here](http://www.mathworks.com/matlabcentral/newsreader/view_thread/271997) )
Let me give more detail. The sensor is sending a packet message BIN1, which has 8 bytes of a header, and then the data, and then &lt;cr&gt;&lt;lf&gt; (0x0D, 0x0A=13,10 respectively). [Here is info on BIN1](http://www.hemispheregps.com/gpsreference/Bin1.htm) We haven't tuned the capture yet, but the raw stream looks [as such](http://imgur.com/ROwdj). So I spot the 13 and 10 and then start counting. Trying to figure out what the heck it's sending me.
I'm not exactly sure what you mean. Do you mean you want to preserve the bit-order of the incoming double, but have Matlab read it as an integer instead? Try something like this: x = fi(2.5); y = logical(bitget(x,1:x.wordlength)); % this gives a binary array of the bits y=int32(sum(sum(y(end:-1:1).*2.^[0:length(y)-1]))); % convert logical array to integer type
this may not be allowed for your assignment but... use landscape mode in microsoft word? EDIT: I did some research, and the matlab editor has the preference option to automatically wrap comments at a given editor width column, but I'm unsure if it can do this retroactively, and it appears not to have this option for actual code. You may need edit your .m file in another text editor that has a feature to retroactively wrap text to a given width column. However, this may give rise to new problems, as your comments will require a "%" character a the new line, and your code will require a "..." string of characters before the new line. Some editors may be smart enough to handle these commands. Hell, maybe you could write a matlab script to edit your matlab script in this way. Someone online said to check out Sublime Text 2. It may contain this functionality but I don't know as I haven't used it. 
Considered that. It would be allowed, however it would greatly extend the page length of the report which would be frowned upon. I'll use this as a last resort. Thanks!
From what I just tried to play with it looks like word will wrap it for you at least on my computer and if it is copied out of the word document it will still run in Matlab. Now if you are worried about it looking perfect on paper, I am not so sure how to quickly add ... into your code. Perhaps do copy ... with a line break and use the arrow keys to scroll down your code and split up any long lines. 
Does it have to be .doc(x)? If you can submit as a pdf, I would use Matlab's publishing function and print the html as a pdf. It becomes nice and pretty, especially if you use the %% command to break up sections.
This. But newer versions will actually write to Word for you. If you do a PDF just add it as an Appendix. Also, this is where LaTeX shines. I would write multiple lab reports in LaTeX. The Matlab would write all the equations and answers for me. Then I'd reference them in my LaTeX and then the LaTeX would include the Matlab source code with the LaTeX document. 
Thanks for the start, I'll give implementation of the code a go, but probably won't have time to spend working out the bugs thoroughly. If you can't get around to writing the full function let me know in a pm and I'll see if I can take a crack at it in my spare time after this report is submitted.
Try putting single quotes around all the zeros in your init function, I think the way it is now you're mismatching the data type (ie trying to set a variable as a string, but using a double)
The 'V' in HSV means 'Value', which is essentially brightness. Assuming the hue is the main thing you care about in the top-left image, you should just be able to set the values in the third dimension of your HSV image to the the values in your magnitude image. THEN convert to RGB (if needed).
That was stupid of me, thank you.
Serial capture is grabbing the bytes as uint8, the documentation for the sensor tells me they are native float values, I'm just trying to collect the data and be able to actually read the values correctly.
I see. So the method I provided, which I don't think will be very fast (but I haven't tested it)--I'm pretty sure it grabs the actual bit sequence, although I'm not sure. It's very possible that "fi" rearranges the bit representation of the floating point. I hope the above solution worked for you.
Can you explain the problem a bit more? I'm not sure what you're trying to do. It looks like you have a list of group numbers, and for each group number, you have a list of times (this is why "group" has multiple entries, in case multiple "times" are associated with a particular group). I don't understand where "NewTimes" comes from. What does it mean to be 'zeroed" by group?
He's subtracting the minimum time for each group from all of the times for that group. So group 2 has a 9 and a 10, that converts to a 0 and 1. Group 3 had 7 8 8, that becomes 0 1 1. I'm not sure I understand the question beyond that though. It sounds like he has the answer he wants, just wants to know if there's a faster way.
Are you talking about saving a figure or saving variables? From the way you stated the problem, I'm assuming you're using a UI to save. Is that correct?
I may have worded it wrong, When I write a script file and want to run it, I have to go through and pick the folder I want it to save to, I would like to change the default folder so I don't have to manually change it every time.
Oh, okay. You can create a startup file to run any code you want before matlab opens. ...\MATLAB\R2012B\toolboxes\local If you create a file named 'startup.m' in that directory you can write in any code in there and it will run during startup of matlab. Mine says cd('C:\Users\MyUser\Documents\MATLAB') clc disp('Have a nice day!') I think there are some annoying issues with permissions, if I'm not mistaken, so it's best if you create the file with as startup.txt using a different editor program, rename it to startup.m and then move it to your matlab directory. 
Wow, this is definitely an improvement of simplicity compared to the code I managed to developed last night! My code uses sparse arrays, accumarray function and run-length encoding. Tested both codes with very simple inputs, like in the example, and then extreme cases of 1E7 observations of 20,000 groups and 2,000 possible times. Answers matched and speed was almost identical (4.81s vs 4.71s). (Yours won) I like your code! Thank you!
Is this for a numerical methods class? Do you have a numerical methods text book?
numerical analysis yes, book no.
Hey dude, So I finally got around to implementing this... works like a charm! I also learned a lot from it, I was not aware of the 'fill' and 'patch' commands before. When I dug into it, it is really simple, you are making the points of the hex's at each vertex, and then filling accordingly, etc etc. Sweet! :-) 
Sure give me some time gotta get to a computer sit down and find Em. Which ones specifically or just the ones you mentioned 
just those three, thank you so much!
I think your teacher intends for you to code those methods yourself. Those are the simplest methods that are taught for their educational value. Each takes only about 3 lines of code. 
well i figured out the first two, cant figure out trapezoidal method though that ones hard :/
Matlab is prettty easy to learn and there are lots of tutorials on the web. There are some nice video tutorials here : http://www.youtube.com/user/MATLAB I would also recommend the Mastering Matlab by Hanselman &amp; Littlefield. Finally, Matlab Central is a good place to ask questions, read others code and get answers quickly. http://www.mathworks.com.au/matlabcentral/answers/ Good Luck!
Are you saying you need the area inside the region, rather than underneath it? If so, then just find the area underneath the upper curve, and subtract the area underneath the lower curve. You can find the transition point by estimating the direction of the curve and finding where it is closest to 90 or 270 degrees.
No. They did this because the negative half of the frequency spectrum is a mirror image of the positive half and it does contain half of the energy. Simply looking at 0 to 60 Hz is completely different, provided that you multiplied by 2 before you trimmed to the desired range.
way to matlabify a perfectly good for loop.
Use [polyfit](http://www.mathworks.com/help/matlab/ref/polyfit.html) then you can calculate it for any value of x.
That function should be in a file called rs.m and the file should be in your MATLAB path. From the command window you can run: value = rs(2x, 0, 10, 0.1) Now I can't say I know what your f variable will do that you pass into rs (anonymous function?), but that is the syntax. Edit: Check out this link for further information. Matlab provides many helpful resources. http://www.mathworks.com/help/matlab/ref/function.html;jsessionid=d185776d9b430b41dedd16d5f1a4
Functions are called from command line or scripts. For example, value=rs(@f,0,10,0.1). The function f must be defined first. This is accomplished via command f = @(x) 2*x. 
For every pair of adjacent points, find the direction of the line segment connecting them. The one with a direction closest to 90 or 270 degrees is closest to a point on the curve with vertical tangent.
I missed an `*` in that line. Dunno if that was the error or if your code itself has a misplaced x. I didn't see one in what you posted, though.
got it, thank you!
one more question, this one seems a little different. how do i run this function function [x,y] = Trapezoid(a,b,h,y0) N = (b-a)/h; y(1) = y0; x = a:h:b; for j = 2: ceil(N) + 1 y(j) = y(j-1) + h/2*((1/(1+x(j-1)^2) - 2*y(j-1)^2)+(1/(1+x(j-1)^2) - 2*y(j-1)^2) + h*(1/(1+x(j-1)^2) - 2*y(j-1)^2)); end end If i have y'=3y and y(0)=1 on [0,10] with h=.1 Im not sure where I use y'=3y 
Interesting, so essentially I could just use some trig and have my first point be the origin on the triangle, and then my second point be the tip of the hypotenuse. From that triangle I could find the angle and if it reaches either 90 or 270 degrees I know the direction has flipped, right?
That sounds about right. Give it a try, if you have trouble, share your code here.
Awesome! Thanks for the help!
There is a link to a crash course in the sidebar. It seems pretty good. 
Try the polyarea() command. It will get you the area inside a closed polygon. I used this specifically to do the same thing -- to determine the work on an arbitrary P-V diagram. POLYAREA Area of polygon. POLYAREA(X,Y) returns the area of the polygon specified by the vertices in the vectors X and Y. If X and Y are matrices of the same size, then POLYAREA returns the area of polygons defined by the columns X and Y. If X and Y are arrays, POLYAREA returns the area of the polygons in the first non-singleton dimension of X and Y. The polygon edges must not intersect. If they do, POLYAREA returns the absolute value of the difference between the clockwise encircled areas and the counterclockwise encircled areas. POLYAREA(X,Y,DIM) returns the area of the polygons specified by the vertices in the dimension DIM.
Well to have periodic boundary conditions you could write you own filter function, but another (and crude) solution would be to just add the vector you are working with to the beginning and end of itself. 
I just came back here to say thank you, I ended up getting 93% on this. I don't have a great understanding still but it all helped so thank you :)
Nicely done. Congrats.
Hmmm, this seems easier than using the angle that you can get between the points, I'll look into it, thanks! EDIT: I just tried it and that was an extremely simple and effective solution!
Glad it worked for you! Happy coding!
&gt; through a beagleboard/bone You want Simulink. Compile to board. Done. Anything else is going to add latency and kill your bandwidth.
This is a shitty reply. I'm sorry. I've been in your spot. Just get him to upgrade. For christs sake, 6.5? I was using that before I had a cell phone. Full disclosure: I was late to the cell phone game. 
This is an initial value problem. It is solved with an ODE solver such as ode45. Check the help page for more details. The function you have here is the trapezoidal integration.
now i really want to see your script. 
Actually it's a bit more complex, I am taking a data I have found using a model in COMSOL ( to simulate microplasmas), and im trying to plot a graph of time v intelectrode position ( my x-axis) in_n0 = mphinterp(model,'n0','coord',x,'solnum',1:nt); contourf(in_n0,'DisplayName','in_n0');figure(gcf) Im using these functions to plot the graph and when I do I get http://imgur.com/a55No But I want the x axis to be from -.0005 to 0.0005
Thank you so much. I have done it now
Apologies, without the details it's hard to figure out exactly what the problem is sometimes. Glad you got it figured out.
No need to apologise! was my fault for not explaining very well, appreciate the help :)
I know a few people who still use XP, I don't think it's THAT nuts
this will certainly help. 
If you have access to the image processing toolbox, it has MEDFILT2 which has some boundary padding control.
Does Matlab 6.5 support the function "filter"? Then you just have to come up with the coefficients for a digital Butterworth Filter. Wow your employer again by showing your knowledge of discrete z-transforms. Check out the link in Alcebiades reply.
Is this your final? Homework? Three things I noticed: 1) you defined h and w but don't use them in your if statements, 2) you need to remember that velocity has a sign, so the surface friction should always act to reduce the magnitude of the velocity (not necessarily always be subtracted from the velocity) and 3) when the ball hits a wall, one component of its velocity will change signs. Think about those things and see how it goes.
You're logic is correct for the most part, you're having sign issues. If a ball hits a bottom wall, vy was negative just before hitting the wall and then is positive just after hitting the wall, while the sign of vx is unchanged.
You could set up a finite element model to simulate the molecular diffusion of a substance through another substance. For example, LSD through skin. This is something that would pertain more so to mass transfer (engineering bias here), but definitely applies to biology and also chemistry.
Look up "vectorization" in the Matlab help for more similar tips. But the short answer to your question is, no.
Some "for" loops can be replaced by using colon operators. Can all "for" loops be replaced by colon operators? 
ok thanks, i just wanted to know if I could make my programs any faster. I guess I can't add too much speed.
Many can. Many more can by clever use of matrix math, vertcat, and horzcat. And cellfun, arrayfun, and bsxfun. Though I've been told those are basically disguised for loops. But yeah, most of the fun of MATLAB is seeing how many for loops you can eliminate
I'm no expert, so it might not be the most efficient way, but I usually just use fprintf and a loop. I don't do any massive number crunching though so I don't experience any lag time, really.
Yes, unfortunately the mathworks has been really tight lipped about tips and tricks as to which loops will be JIT'd and which won't. They used to tell you in the profiler, but now they don't, so designing code for the JIT is pretty hard.
Also, the vectorized version has the benefit that the multiplication operator is parallelized when the inputs are large enough
I think of cellfun, bsxfun as for loops, only the entire operation remains in a mex file - does not return to matlab. So probably faster but not as fast as a regular matrix operation. If you're doing a bsxfun that's really slow, you could make your own mex file to do that operation though
 a=cell(1,32); a(:)={zeros(1860,2)};
Well, we must provide a proof of concept that the algorithm given is actually able to complete the task it was written to do in close to real-life conditions. It is a continuation of a research made by the professor who is leading our project. Not arduino, android - as in a samsung galaxy s3 smartphone which is running java.
Oops, sorry. Yeah I have matlab and arduino mashed up in my bookmarks. I read that way too fast. Unfortunately I don't think that there is a way to compile to Java.
Thank you very much, I read the documentation and it seems there is Java to matlab import but not the other way around. Maybe somebody else had the same problem and could provide another insight.
What will work: 1. Use the Coder products to generate C code from your MATLAB algorithm. 2. Wrap the C code using the JNI framework. 3. Call from within your Java application (built for the Android). What WON'T work: 1. Builder for Java (requires the MCR which will not run on the Android) 2. Attempting to rewrite the entire coder to emit Java (If you were imagining that it would be possible to hack some TLC code to make the code generation products emit Java). I hope that helps.
Yep, that sounds like what I was looking for. Thank you very much!
What are you trying to accomplish? You can checkout file exchange for submisisons like this: http://www.mathworks.com/matlabcentral/fileexchange/33931-live-audio-stream-analyser-and-voice-coach
[fsolve](http://www.mathworks.com/help/optim/ug/fsolve.html) is exactly what you're looking for.
sorry, see my other post. "A" actually does change between iterations. Post is edited now.
OK, I see. Is there any chance that the eigenvectors of A are still conserved between iterations? Or that they transform "nicely"? If you can keep an efficient eigendecoposition of A and update it, then you won't need the expm. Another question - is A sparse or structured in any way (for example banded, circulant, etc.) ?
Are A's eigenvalues small? If yes you might get away with a few terms expm(A) ~ 1 + A + 0.5*A*A+...
just tried this and the difference between the taylor series and the expm values are huge, unfortunately'
It looks like you can do all but that line vectorized. Can that line, y(i)=... be done under a parfor loop?
Why do you need to change the rendering parameter? Is there something wrong with the default?
Thanks for the reply! haha I finished it a month ago! :)
Yeah, that struck me too - I assume OP means min(a(i),b(i))? If he actually has : instead of , that would be 1 reason why his code is so slow, and I would expect it to actually fail since if a&gt;b a:b would be [] where he would expect a value. That being the case doesn't: d = min([a;b]) Do what is required?
Try this, http://www.mathworks.com/matlabcentral/fileexchange/20979-myaa-my-anti-alias-for-matlab It looks like it might just render as a static image, but it might be what you're looking for. It looks like zbuffer is the renderer you want to use with this. Are there a ton of points?
I've tried this in the past, but it always screws up the text, especially if I use the LaTeX interpreter.
The min() function can do min in whatever direction you want, and operates on matrices. Also--you don't have to preallocate memory for x in the statement x = blahblahblah. Matlab will automatically determine the size of the right hand side and allocate appropriately. So in this case, you can do this: a = [a1 a2 a3 a4 a5.....a100000]; b = [b1 b2 b3 b4 b5.....b100000]; % note: a and b must be the same size. d = min([a;b]); That returns a vector d with the minimum of all elements in a and b. By the way, your initial code d(i) = min(a(i):b(i)); Wasn't doing what you expected really--it was creating a vector, counting in 1s, from a(i) to b(i). So if a(1) is 2 and b(i) is 5, a(i):b(i); means [2 3 4 5]. In the event that a(i) &gt; b(i), you'd return an empty matrix, since a(i):b(:) = [], and the min() function would return [] as well.
Try this: http://www.mathworks.com/matlabcentral/fileexchange/28748-displaymatrix/content/display_matrix.m
In this example you're right, but I should have mentioned M is not always an increasing vector. It might be better to think of it as M=rand(1,N); where N is some large number
I'm an idiot. I made a mistake in the post. Here's what I have at the moment (slightly edited to also make it more understandable): M=1:5; %or M=rand(1,5); or whatever vector M may actually be a=[1 2 4]; b=[2 3 5]; for i=1:3 d(i) = min(M(a(i):b(i))); end And what I'd like to do is replace the for loop with: d = min(M(a(:):b(:)));
Is numel(a(i):b(i)) constant for all i? If so tehre is a way to do it imo - bbl to answer it if nobody else does!
I print to both a printer and to png files. This isn't for a particular application really. I just use MATLAB to generate a lot of figures, and I'm sick of them looking crappy and playing "guess and check" while writing scripts and printing. If possible I'd like to know how to do it from the command line. I really don't like interacting with GUI, becuase chance are if I do it once I'll have to do it at least several dozen times.
Unfortunately not. However, I may be able to reconstruct my code to accommodate it. 
You can check your startup entries. Press windows key + R. Type msconfig Press enter. Check "Startup" to see if MATLAB has an entry. 
I did that but never saw "matlab". Does it have another name it runs under by chance?
your image is 3 matrices in matlab. search that 3 matrices for 0 value. When you find a zero, make it 255. 
the first question you need to ask is ["how black is black?](http://www.youtube.com/watch?v=wx6fwfBKCIQ) Does the pixel have to be exactly [0 0 0] or is [0.05 0 0.03] OK? (if integer, then is [3 0 5] ok?). Let's do this the easy way. Any pixel that's exactly [0 0 0] will be turned to [1 1 1] (or [255 255 255] if integer): % this code assumes truecolor uint8 image I = imread('your_image_filename'); [nrows, ncols, ~] = size(I); for curcol = 1:ncols for currow = 1:nrows if I(currow, curcol, 1)==0 &amp; I(currow, curcol, 2)==0 &amp; I(currow, curcol, 3)==0 I(currow, curcol, :) = [255 255 255]; end end end And here's a fancy MATLAB vectorized way to do this % still assuming truecolor uint8 image I = imread('your_image_filename'); Osize = size(I); D = sum(bsxfun(@minus, reshape(I,[],3), uint8([0 0 0])),2) == 0; D = reshape(D, Osize(1:2)); I(repmat(D, [1, 1, 3])) = 255; If you're looking for "close enough," you'll have to replace the "== 0" parts with a distance calculation like: if I(r,c,1) &lt; 3 &amp; I(r,c,2) &lt; 3 &amp; I(r,c,3) &lt; 3 or something.
Thanks, I had the for loop set up as in the simple example you gave, but I didn't realize I was looking at three matrices. Working great now, thanks!
One option would be to use [TriScatteredInterp](http://www.mathworks.com/help/matlab/ref/triscatteredinterp.html) or some other method to interpolate your data into a proper image matrix and then use the image processing tools. After that, you could pick the points back out. Otherwise I think you're looking at a lot of complicated programming to replicate some of the image processing techniques.
There are easier ways to do it than other people show below. Let's say you do the following: I = imread('image.png'); You now have a NxMx3 matrix. The first slice is red intensity, second slice is green, third is blue. A "white" pixel is where R = G = B = 255, and a black pixel is where R = G = B = 0. So, you can find the locations of black pixels very easily: S=sum(I,3); black_pixels = S==0; % sum of R, G, and B should be 0 if pixel is black black_pixels=repmat(black_pixels,[1 1 3]); Now if you want to turn them white, just do the following: I(black_pixels) = 255;
Is `inarray`, in fact, a 6x1 cell array? Also, given that the two strings are already strings, your `sprintf` statements seem highly redundant. 
If there is only 1 dimension you don't need to do the full referencing. inarray{6} and inarray{1} will work. But I don't see anything wrong with your code. Are you sure that infile is named the same in the script?
In theory, `fullfile(inarray{6}, inarray{1})` should work. Assuming the cell contents are what they are expected to be.
1. simulink is expensive. 2. If I can do it through MATLAB without simulink, there should be a pretty good analg for doing it through python.
[3D - Spectrograms ](http://imgur.com/a/Vihbv#1) are always neat. This is the effect of a modulated filter on a square wave. Unfortunately it's not real time and neither is the filter, I have no idea how to do that. What you might consider looking at is the milkdrop visualizer for winamp. The code for writing visualizers on there doesn't seem to be too crazy. I know it isn't matlab but you might get more entertainment for your time this way.
This would be handy for something that I'm doing as well, so I'll hack at it for a while and let you know what I come up with.
You initialize a cell object PositionMatrix1=cell(n,m); Where n and m are its dimensions. And assign elements with a command like PositionMatrix{i,j}=Value; However in your case I don't think you need a cell. Better to have two numeric matrices PositionMatrixX and PositionMatrixY for the x and y coordinates. 
As other have already suggested, creating one .mat file per song would probably be the easiest way. Two other good options are use of [databases](http://www.mathworks.se/help/database), or [HDF5-fileformat](http://www.mathworks.se/help/matlab/hierarchical-data-format.html). You can append data to HDF5 files and read it in small portions. I'm not quite sure if MATLAB high level function h5write(filename,datasetname,data,start,count,stride) allows you to append (/extend) datasets, or if it can only be used to modify the data. If you can not do things with MATLAB high level functions, you can always use [the low level functions/packages](http://www.mathworks.se/help/matlab/ref/hdf5.html) (also see the official [HDF5 documentation](http://www.hdfgroup.org/HDF5/doc/index.html)).
They are all around 12x12 -- B is symmetric but A and C are not. x(i) is a vector that is about 4500 entries long. I don't actually call x(i), I call x(floor(i/5)); what I wrote was just to simplify the explanation. edit: also, C is quite sparse. I think out of its 144 values, usually only 18 are nonzero, possibly less.
B is symmetric, but after adding C*x(i), it loses any sort of special structure.
I'm not sure - very unfamiliar with special implementations for parallel processing, and I don't have the MATLAB toolbox for it either.
So B is a matrix the size of A. How about C and x(i)? What are they?
Did you ever figure this out? If not, what you need to do is download the updated version of the matlab pyramid toolbox, and replace the one that was included in the code from MIT. Link is here: http://www.cns.nyu.edu/~eero/software.php
Sweet! Thanks for sharing. Love coursera and always looking for ways to expand matlab skills. 
If you want a more low tech solution, you can set up a dummy gmail account and use the email functions in matlab to send you a notification of a complete task, or using a "try catch" structure you can also get it to email you whenever the program falls over. See two approaches: http://blogs.mathworks.com/loren/2010/09/16/my-first-use-of-sendmail/ http://blogs.mathworks.com/pick/2007/10/23/matlab-can-txt-msg-u/ For try/catch: http://www.mathworks.co.uk/help/matlab/ref/try.html try %% handle errors and email them to the desired address %&lt;insert code here&gt; catch err %% catch any errors tha happen % write the error to string for email % first line: message message{1}=sprintf('%s\n',err.message); % following lines: stack for e=1:length(err.stack) message{e+1}=sprintf('%s in %s at %i\n',err.stack(e).name,err.stack(e).file,err.stack(e).line); end %% 'message' contains the error you want to email/text to yourself rethrow(err) end
2-D, as opposed to a 3-D image. IE change all of the pixels that correspond to data points to a value of I in a 2-D image, and then put all non-data point pixels in the 2-D image as 0. 
This doesn't seem to have been answered yet, try this: A = M(1:end-1); B = M(2:end); D = min(A,B); If you're short on memory, you could skip the first two lines and just use D = min(M(1:end-1), M(2:end)); 
 w=1; for i = 1:size(mycell,1) if isempty(mycell{i,2}) w=w+1; continue end mycell{i,1}=w; end
time = 0.1:0.1:10; %Does the same thing
thanks for your reply! I understand that bit, but if you notice closely, some pixels of certain intensities are missing entirely and some are ramped up. There is some particular type of statistics at play regarding the relative intensities of the pixel intensities, and I can't understand exactly which/how. 
Thanks. Is there a way to see the workspace of the function above the one where the error is? I've tried vectorizing it in the past but this way seems faster since I can use information from the previous loop to considerably reduce the computations required for the next one.
It sounds like you're looping over your search space and running calculations at each point. If you're looking for specific values, such as minimums or maximums, or even just "the place where output Y is closest to known value A", you should consider using the optimization routines. Something like fminsearch or fmincon can traverse your search space a lot more efficiently than a brute for approach could, and should cut your run-time significantly.
If your bombing out in function_C, you could disp() important variables from function_B so that when function_C bombs you will have your variables in the console (ie, disp(['var A: ', mat2str(varA), ' var B: ', mat2str(varB)]) just before calling function_C. For solving analytical equations there are many options. Do you have the symbolic toolbox? I used that years ago. Also, matlab has a function (besselj, iirc) that could help immensely. Access to the optimization toolbox would give you many potential solvers too.
So yeah, without knowing exactly what Photoshop is doing, it's a bit hard to tell. It's possible that they're messing with the saturation of the image, which is the amount of *colorfulness* and isn't completely intuitive, since it's derived from how we perceive color. You could try adjusting saturation by using rgb2hsv() and adjusting the 2nd coordinate, which is saturation.
what exactly does changing "satudartion" mean/do in terms of RGB values in a uint8 class array? any idea? I understand contrast changes relative intensities of colors, hue phase shifts the colors (so to speak) to a different area of the spectrum, but what would saturation do?
Part of being good at vectorizing is also being able to manage memory. In the past i have been successful with dynamic updates and "crazy" indexing. After 15 years of mainly matlab work, i have been out of the loop for about a year (been focusing on python lately), but there is an option in the profiler for memory. When i discovered this years ago, i was floored. Immensely helpful. [Here is a link to an Undocumented Matlab Blog](http://undocumentedmatlab.com/blog/undocumented-profiler-options/)
In regards to programming in matlab, here is my two cents: don't bother vectorizing it, concentrate on writing easy to read / debug code that can be ran in a parfor. This is especially true when working on a project with multiple authors. Vectorized code can be extremely confusing to get your head around, especially if you were not the original author. After your code has matured and you do find vectorized solution, don't delete your for loop, just comment it out and say "This single line of code is equivalent to this for loop". When dealing with large data I just run my code on an 2x4core Xeon machine. Don't underestimate how efficient you can be with matlab running while you sleep. 
&gt; When dealing with large data I just run my code on an 2x4core Xeon machine. Don't underestimate how efficient you can be with matlaq running while you sleep. This was back when I had a 1 Core Pentium III @ 833 mHz. Parfor didn't exist.
I like to pretend that problems back then were easier than the ones today. Dealing with memory limitations is tricky business that I still slows my work down significantly to this day.
Yes! A git repo of file exchange would be very useful. I'm starting to notice more people putting code up on Github and skipping file exchange altogether...
Not only would it be awesome, I will help if you like 
Is there a language you prefer? I know PHP best. I'm trying to learn Python. (Well, technically I know Matlab the *best*) but it's been a while since I've used either since I'm in 24/7 Matlab mode at work. What I've found so far: For any given project: http://www.mathworks.com/matlabcentral/fileexchange/35409-sshsftpscp-for-matlab-v2 You only need up through the number: http://www.mathworks.com/matlabcentral/fileexchange/35409 The download link is: http://www.mathworks.com/matlabcentral/fileexchange/35409?download=true This redirects to the actual zip file: http://www.mathworks.com/matlabcentral/fx_files/35409/4/ssh2_v2_m1.zip They only seem to hold the last version in the repo. .../3/... doesn't lead to anything. The lowest number I can find is: http://www.mathworks.com/matlabcentral/fileexchange/15 So after you download a file you need to make a repository. Either by name or project ID. I was going to name it after the name of the zip file. Hopefully these are unique (knock on wood). Otherwise you could do something that made no sense to read, but would be easy to convert. Such as the project numbers. So in the case of the project above. matlab.example.com:/ssh2_v2_m1.git matlab.example.com:/35409.git matlab.example.com:/35409/ssh2_v2_m1.git The thing I like about the ID is that all someone has to do is go "Hey I like project 34531. They check it out the ID.git. On to the Git side. Something like GitLab would be great for a GUI but a very basic git daemon (or gitolite) running You can watch http://www.mathworks.com/matlabcentral/fileexchange/index?term=type%3Afunction for updated stuff. What do we archive: Functions, Apps, Examples, Simulink Models, Videos, Drivers? I'm leaning towards functions, apps and models. Those are the things you'd most likely add to a submodule in a project.
matlab is designed to handle matrices correctly. Symbolic is not that great. Assuming your dimensions are correct try this: D=A*B then calculate D*A to get A*B*A
Maybe A and B are symmetric in which case ABA = A(BA)' = AA'B' = AAB.
Hmm, well none of those last three links worked (the links have ... in them). But yeah, it is probably something you can do. I've interacted with serial devices via Matlab on many occasions. It isn't too hard, though it really depends on how friendly the device you're using is. Does it have documentation for RS232 commands? Will it be as simple as, "If some condition is met, send command X out the RS232 port"? I did [this](http://code.google.com/p/limnocruzer/) a few months ago. It interacts with a sensor via RS232. [This code file](http://code.google.com/p/limnocruzer/source/browse/YSISonde.m) shows an example of doing some of the RS232 interaction. What RS232 board are you sending a signal? Does it have documentation on the RS232 interface it provides?
first thank you very much for your quick respons. I have this only documentation about the protocol used with the rs232, it is in french :http://pdfcast.org/pdf/qsdqsddd 
Yeah, looks pretty reasonable. You'll just have to open a connection to the com port and send it the relevant commands when needed. Though I don't understand the specific commands, the fact that they have provided a nice document like this and an overview of the connection parameters (Baud rate, parity, stop bits) probably means it will be fairly easy to interface with. Just in case there is an english language version out there, what's the model name and number of the device you're interfacing with?
the only information i have are in this document :https://docs.google.com/open?id=1uzMH8Cy3sms6SnjNJNZgoJHSDL0xj0rRBjTC4JDaRKM5NbJUhCWQt7xNEQMl
sorry https://docs.google.com/open?id=1uzMH8Cy3sms6SnjNJNZgoJHSDL0xj0rRBjTC4JDaRKM5NbJUhCWQt7xNEQMl
The reason Matlab's symbolic toolbox isn't maintaining order of operations is because the declared symbolic variables are assumed to be scalar quantities. Even if you rename the left-multiplied A as AL and the right multiplied A as AR, it will still rearrange the multiplication order alphabetically (i.e. AL * AR * B). The only solution that I know of is to explicitly define the symbolic variables as matrices. This is best achieved as follows: A = sym('a',k); B = sym('b',k); C = A*B*A where k is the size of your matrices (a numeric value). With this formulation, each element in C will be a function of the elements in A and B per matrix multiplication. So, the multiplication order will be preserved. Hope this helps. edit: the naming convention for the symbolic matrix elements is a little annoying, so here are some alternate forms you can play around with: F = sym('f_%d%d',k); G = sym('g_%d_%d',k);
You are awesome, Thank you so so much. My first time on reddit. Now I hope I will be abble to help someone like you did. I will certainly email you for the matlab code. Have a nice day, and happy new year from all my heart. Best regards Stanislas
This is a task that I have not yet found a solution for. In that past I have just written down the equations, organized them and placed them in an RK4 solver and used the simulink model to test for accuracy. Another trick I have used is getting your system into a state space representation. At that point it is very easy to code by hand. Of course, it matters what your end goal is...
How about a structure? mp3_struct.Smells_Like_Teen_Spirit.location="\media\Nirvana"; mp3_struct.Smells_Like_Teen_Spirit.data="fft_data"; mp3_struct.Smells_Like_Teen_Spirit.fname="Nirvana Smells_Like_Teen_Spirit.mp3" Does the song exist in the database: isfield(mp3_struct,'Smells_Like_Teen_Spirit') Of course you would need to have strict rules in regards to the fieldname; many characters that are legal in filename are not in fieldnames. Perhaps you could have a unique method to identify the files other than their filename, for example: mp3_struct.(file_md5sum) I've had pretty good luck/speed with ~2GB structures, but I am not sure if that is reasonable for the machine you want to run it out. One could always have several libraries: mp3_struct_ABC mp3_struct_DEF mp3_struct_GHI Best of luck 
Hmmm, no clue. It works fine in Matlab so I'm thinking your latex is right. Maybe just a bug, have you tried a different version of octave? If it still shows up with the newest version of octave, you should submit a bug [here](http://www.gnu.org/software/octave/bugs.html).
You probably need to use the scalar form of the exponent, i.e. with a preceding '.' 
Try: y=x.^2; %including the "." With the period, Matlab will square each element in the array. Without the period, Matlab will attempt to raise the entire vector to the second power, which is where you get your error, since the vector is not a square matrix. See: http://www.mathworks.com/help/matlab/ref/arithmeticoperators.html
No worries. Just put four spaces at the start of a line for code formatting.
you can also try to set 'parity' to 'none' or to change system locale before starting matlab. 
something like save([AGE 'y.txt'])
In MATLAB, you can form a string by concatenations using square brackets ([]). So you have [AGE,'y'] will concatenate the variable AGE with character/string 'y'. Since AGE is a double or integer, this will usually result in garbage looking characters. Use num2str instead. So, the code you need is save([num2str(AGE),'y.txt'],D,'-ascii') 
I think you're right, though you would probably need to do it like: save([num2str(AGE) 'y.txt'], '-ascii')
What everyone else said is correct. Another way to look at it is that when you see a function call *without* parenthesis, it is essentially taking each space-delimited word after the first as a separate string argument. So save 50y.txt D -ASCII becomes save('50y.txt', 'D', '-ASCII') Using the concatenation knowledge that others already gave, the full command that you are looking for is save([AGE 'y.txt'], 'D', '-ASCII') 
My end goal is to run a 5 phase induction motor with it. Is there can way I can see your work, the one with state space representation? It would be helpful if you could mail me at prasgane@gmail.com
Using the save function as detailed is one way, but you can also do eval('save ' num2str(AGE) 'y.txt D -ASCII') to run the exact command given in the string argument. using save([num2str(AGE) 'y.txt'], '-ascii') is almost certainly better in this case though!
I always prefer sprintf. It makes the code longer but a bit more readable. saveFile=sprintf('age_%d.y.txt',AGE); save(saveFile,'-ascii');
&gt;using save([num2str(AGE) 'y.txt'], '-ascii') is almost certainly better in this case though! I can think of literally no situation under which you would even think about using the first one. Why are you randomly using eval? There is nothing there that requires its use. Why don't you put more eval around it? Why not wrap it in 5 layers of eval?
Thanks, you're was very similar to the other suggestions. the only thing that needed to be changed was AGE was changed to num2string(AGE) with the end code being save([num2str(AGE) 'y.txt'], 'D', '-ASCII') Your suggestion included the 'D' portion which was missing form the other suggestions which worked out that issue I was having. Thanks a bunch
Usually I don't get much out of this blog, but this is a great post. It will definitely make me a better matlab-er
Maybe check how many local maximums and minimums there are. For example bimodal will have 2 maximums and 3 minimums. Or something like that.
To create a dataset array from your file, you can use this command: D = dataset('File','seeds_dataset.txt',... 'ReadVarNames',false,... 'VarNames',{'Area','Perimeter','Compactness','Length','Width','Asymmetry','GrooveLength','Variety'}); D is a dataset with columns Area, Perimeter, etc. as described in the data page you linked. To access a specific column, you can do this: Col3AsDouble = D.Compactness; % returns a single column of type double or: Col3AsDataset = D(:,3); Returns a dataset array with one column called Compactness % alternative: Col3AsDataset = D(:,'Compactness');
Thank you for your quick reply, but I am unsure how to apply the code you have written - what does the '...' and the line-shifts indicate? 
The "..." is just command continuation in MATLAB syntax. You can just put it all on one line: D = dataset('File', 'seeds_dataset.txt', 'ReadVarNames', false, 'VarNames', {'Area', 'Perimeter', 'Compactness', 'Length', 'Width', 'Asymmetry', 'GrooveLength', 'Variety'}); Run this at the command line or put it in your script/function file.
I thought that might be the case, so I tried to type it as you did, and have now tried to copy directly, but I get the following error: Error using dataset (line 258) Illegal datatype I couldn't find help on google for this error.
I used your image as input, which is what I think you wanted. The trick is to use the image to estimate the density of the points. What I did was take the image complement (black-&gt;white, white-&gt;black) and then use a sum of white pixels in some neighborhood as my density. Think of it as "number of white dots per N-by-N square neighborhood." Choice of N will be up to you. Also, for the BEST output, you'll want to eliminate the black circle and black '+' since those mess with the calculations. This is left as an exercise for the reader. Here's my code: %% script to calculate the density of dots in an image and show contours clear %% load the image, preprocess, and show the raw form I = imcomplement(rgb2gray(im2double(imread('E1VtH.png')))); imshow(I), title('the inverse image') %% run a filter which sums up the points in some neighborhood (N x N) N = 32; J = imfilter(I, ones(N)); %% display J, which is a density sort of image figure, imagesc(J), colorbar title(sprintf('count of white pixels in %d-by-%d neighborhood',N, N)) %% display using contour() figure, contour(J) title('contour map using contour()') %% display using contourf figure, contourf(J) title('filled contour map using contourf()') %% display using imcontour % this output is simular to that of contour() figure, imcontour(J) title('output using imcontour()') 
1. I converted to double because otherwise it keeps the data type as uint8, which allows you to only count up to 255 after which it saturates. try removing and see what it does. 2. Yes, N is measured in pixels. 
I did you exactly copy and paste what he said? Because I think everything in quotes is something you yourself have to put in. What your error is saying is the function "dataset()" is looking for specific datatypes (int, string, double, character, etc.) for it's arguments, and what you have provided is not correct. As far as dataset() is concerned, you can get A LOT more help from looking up online API's by simply googling the function name and the programming language you are using, for example, I searched "matlab dataset()" and I turned up this: http://www.mathworks.com/help/stats/dataset.html Hopefully this webpage can help you out a lot more than we can. 
I did copy it, yes, but only because the things in quotes are the variable-names from the dataset I provided. Thank you for the link - I tried investigating what to write, and came to A = dataset('File',filename,'ParamName',Value) and if specifying the variable names, you had to set ReadVarNames to false, but by doing so, I get the exact same as agentq512. I tried reading up on the 'Value' thing, which it puts after ParamName, but I couldn't figure anything work-able out.
I have no idea. Which version of MATLAB are you using? Here are some commands to try. Basically, you need to try all of the Parameter/Value pairs separately to see which is causing the error. % basic call. Will mangle the first row of data to use it for the column headers D2 = dataset('File', 'seeds_dataset.txt'); % Don't use the first row for headers. Instead use generic column headers. D3 = dataset('File', 'seeds_dataset.txt', 'ReadVarNames', false); % Use the first row for headers, but then replace them with these names. D4 = dataset('File', 'seeds_dataset.txt', 'VarNames', {'Area', 'Perimeter', 'Compactness', 'Length', 'Width', 'Asymmetry', 'GrooveLength', 'Variety'}); 
I think the problem is not serial port related. Looks like your bytes are interpreted as text and your current character set does not contain any letters at 0x80-0xA0 positions. Try to write same sequence to a file ( fopen('a_file.bin' ) ) and check content of the created file. 
Very strange. I don't have the student version here, but this alternate method also works in R2012a 32-bit (read the data into a numeric array and THEN make a dataset): A = dlmread('seeds_dataset.txt','\t'); A = A(:,1:8); % for some reason I get 2 extra. Probably invisible tabs in there. D5 = dataset({A,'Area', 'Perimeter', 'Compactness', 'Length', 'Width', 'Asymmetry', 'GrooveLength', 'Variety'}); Just a question, is your seeds_dataset.txt file exactly as on that page you linked? If you made changes to it at all, it will not work with my code.
Thank you for your reply, The first two lines of code here worked, but with the third I get this error: Error using horzcat CAT arguments dimensions are not consistent. Someone else told me there was hidden tabs in there - any idea how to remedy it? And no, I haven't changed the data in any way.
This is a very slick solution but can't account for overlapping points like a 2D histogram. 
In principle this is a good idea, and is something I tried. There were a few problems, though: one being how to operationally define local minima/maxima (e.g., how far apart should the peaks be, how deep should the trough between them be?), how many bins to select to get a sufficiently smooth distribution, as well as a few others. Although I might have been able to optimize those parameters empirically, I opted to abandon this approach because it doesn't readily allow me to quantify the polymodal-ness of the distribution. I'm not opposed to integrating this approach with another, though. On second thought, maybe I could bootstrap the distribution e.g., resample the data 1000x to get 1000 distributions, then PCA the distributions. The first principle component should be a smooth representation of the data... OK, I like this idea. Then the polymodalness could be assessed by looking at the ratio of the global maximum to the lowest local minima. Thanks for the suggestion!
I'm starting to think something's funky with my MatLab (though I never had trouble in class...). I did as your proposed, and re-downloaded the data-set, fixing the extra tabs while I was at it, but I get the same exact errors. Could you try posting exactly what you are doing, and I can mimic that and see? Thanks again guys, I appreciate this.
Thanks for your reply, this time I tried doing it without touching the dataset (nothing changed), and also by drag-n-dropping, wherein the data was changed to a char array, which doesnt seem to work either - third line from agentq512 didn't, at least. The first two lines work when I import as new, but the last one gives an error. I've tried uploading the matrices into a .mat file here https://dl.dropbox.com/u/4626839/seedsMatrixA.mat Thanks.
Plotting in general is very slow in MATLAB. Some items might not be required to plot every iteration. For example, "legend" is incredibly slow, but you can plot it only on the first frame and use "hold on" to keep it for the rest of the animation. This might affect other parts of the plot though. I typically create quick animations by computing all of my data first then using a for loop and pause(0.1). For any quality animations I use tecplot, but it's a bit expensive. For lower quality quick animations, you can also you gnuplot if you are working on a linux machine. Your best option is probably to use your code to create the slow animation and pull each frame to assemble a final *.mpg file to watch in real time later. For a quality animation, I would format the figure using the context menu and export the code "file--&gt;generate code" to create a plotting function that will give you a nice figure for your animation. The exact plotting properties could also be specified exactly from the calling statements, but I find using the context menu to be quicker, albiet less clean code. See, for example http://www.oc.nps.edu/~bird/oc3030/matlab/mat_animate.html
Thank you for taking the time to reply, &gt;Plotting in general is very slow in MATLAB. Some items might not be required to plot every iteration. For example, "legend" is incredibly slow, but you can plot it only on the first frame and use "hold on" to keep it for the rest of the animation. I do this where I can, like if I need to plot an x-y graph of position that I want my scatter plot ball to traverse, I'll introduce that before my loop so it doesn't get sent every time. This does help &gt; I typically create quick animations by computing all of my data first then using a for loop and pause(0.1). I do get all of my data first, I compute say 40 seconds worth of data and then send the user to a new function which only serves to output the data to matlab using the engine function to be plotted. &gt;Your best option is probably to use your code to create the slow animation and pull each frame to assemble a final *.mpg file to watch in real time later. For a quality animation, THIS! I've thought of this before, but I do not know how to do it. This makes a lot of sense and would definitely allow me to smooth out my animations. Any links on how to do this? &gt;For a quality animation, I would format the figure using the context menu and export the code "file--&gt;generate code" to create a plotting function that will give you a nice figure for your animation. I don't exactly understand this part, I'll read your link and get back to you. Thanks again edit* here is a short video of spring+mass simulation program I created using the method mentioned in the op http://www.youtube.com/watch?v=KD8Phn3QCak
It's not Stats Toolbox but something called [PRTools](http://prtools.org/). So I imagine that they have different implementations of the `dataset` class.
I was just on my way to say that - we are using PRTools in class, could that affect something?
The context menu that I'm talking about allows you to format your picture using a gui instead of specifying the properties with the command. Context menu isn't very specific. I think [plot tools](http://www.mathworks.com/help/matlab/ref/plottools.html) is the actual name. Under file there is an option to export the exact code that will generate the formatted figure so you can just pass your data. It may not actually be that useful in your case. I've found that MATLAB's final exported graphics are quite terrible so a bit of formatting is usally involved to get decent looking graphics. Screen rendered graphics are probably much better than exported graphics so it's probably not necessary.
My matrix A, using dlmread, changed from the original &lt;210x8 double&gt; to the 1x9300 char. I found the site on common issues with PRTools aswell, but the first two didn't work - does removing the stats toolbox sound like a good idea? Thanks for taking the time mate - I tried your code, and while it loads seeds_dataset.txt (as above, in &lt;210x8 double&gt; and creates the 1x8 cell Labels, it returns an error after that: Error using dataset Cannot redefine class 'dataset' without a call to 'clear classes'. So I don't know. Disabling PRTools works to some degree - a friend of mine tried it and it worked at the start, but began messing up when it was re-enabled. I'm starting to wonder if it's possible to perform the analyses I have to without having the data as a 'dataset' - my initial reaction was that this would be required, as that was the way we worked in class. Returning to the original point, do any of you know how to use cvpartition? I have to use leave-one-out-cross-validation, and so write c = cvpartition(210, 'leaveout') , but how do I apply this to my seeds_dataset? I appreciate all the help guys. 
Thanks for all your help mate.
&gt; then using a for loop and pause(0.1). If you're shooting for exactly 10 fps, then pause(0.1) is fine. If you're just trying to create graphics as quickly as possible to save frames to disk to compile into a movie later (using, e.g., ffmpeg), don't use pause(0.1), use drawnow
I make animations in matlab often. Two thoughts, not sure if this helps. One, you don't need to solve the differential equations and plot real-time. You can solve the diff eq's, save the results, and then plot the results. Unless the diff eq's solve instantaneously this is more logical. My second thought is you don't need C++ for problems like these. Personally I would use Matlab for all your tasks. 
Also, I've experimented with making both .avi and animated .gif files from Matlab. The animated .gifs turn out better. 
I definitely do solve all of my data first, and then do the plot. And I actually don't solve differential equations, I use kinematics to estimate position, velocity, and acceleration based on the net force over something like 250 intervals a second, with my spring program I currently have no energy loss after 40 seconds of motion calculated so I'd say my techniques for estimating are pretty good. I have a function that takes in initial conditions, then a function that calculates a preset amount of time worth of simulation data (say from 0 to 40 seconds), then I have a function whose sole purpose is to get the requested time frame from the user (say 5 -23 seconds) and then run the loop to plot the data. I'm not sure how to use matlab to run loops and store large arrays of data. I'm sure it's possible, but I'm really pretty good at doing this in C++. How would I begin to write actual program in matlab that take initial conditions, run them through large loops to calculate large blocks worth of data, and then simulate the data? Should I be looking into simulink? I've seen some video's of what people have made with simulink, and it seems to be something that is good for making physics simulations
I've done animations like this before in matlab. Assuming you know how to plot, all you really need to do is get the number of frames per time you want and make a loop. Every x seconds, you plot the image and move elements. 
This is not an elegant solution, but it's quite an interesting problem for a Sunday afternoon! What I do is fit an ellipse to each contour level (http://homepages.inf.ed.ac.uk/rbf/CVonline/LOCAL_COPIES/FITZGIBBON/ELLIPSE/). Then transform this contour data from map space and into the ellipse space, ending up with data that is roughly on a unit circle. Then just use 1D linear interpolation on the unwrapped phase and transform back to map space. Seems to work quite nicely http://imgur.com/hLBHh
My knowledge of languages is limited (MATLAB, C/C++, Java) but of those, and for overall sheer ease of implementation I would say you could get a working version off the ground fairly quickly. What you describe is definitely feasible for MATLAB, however it may not be optimal in the manner which you seek.
Thanks tenza. so you're saying that of those, matlab WOULD be the easiest? 
When you say "plot on a map," do you mean an actual map, like of the US? I've never done that in any program, but I do know that R has some packages for map-plotting. GIS would probably be the best for map-based stats, but I think there is a large learning curve there.
Yup, well... in this case the UK, I was thinking maybe adding a map of the UK, assigning co-ordinates to the image and then giving the data point an appropriate location and colour. What's R and GIS??
Have you tried interp2()?
I think MATLAB is a good choice for this application. MATLAB has a mapping toolbox that might come in handy. If you don't have access to that, you may have to try to find border data on your own.
I don't know if you have thought this through yet, but plotting coordinates on a map is more difficult than most people think at first (you have to project the coordinates into 2d the same way the map has been projected). Importing the text file is a oneliner in matlab, python, R, etc. so you should look which makes it easiest to plot with. If you have access to a matlab map plotting toolbox, go for it. Otherwise python or R which have open source packets for this night be easier. 
Agreed, this looks like a fun problem. Thanks for the link to the ellipse fitting code - this helps me with another problem! 
[R](http://en.wikipedia.org/wiki/R_(programming_language\))
what other languages do you know?
A programming language, google r language
I do this all of the time. Matlab is ideal for this. Use the [mapping toolbox](http://www.mathworks.com/help/map/getting-started-with-mapping-toolbox.html) and it will be no problem. Super easy if you can use [importdata](http://www.mathworks.com/help/matlab/ref/importdata.html) and [plotm](http://www.mathworks.com/help/map/ref/plotm.html) or [linem](http://www.mathworks.com/help/map/ref/linem.html).
Thanks Fergie, I'll let you know how I get on! assignment is due in a week :S
Cool...I think this might work for what I'm trying to do. Thx for the method suggestion. I will see if I can make it work later tonight.
Not sure you can, but in the future always use screen. http://serverfault.com/questions/19634/how-to-reconnect-to-a-disconnected-ssh-session
MATLAB doesn't actually have any syntax for name-value pair arguments. The function is just expecting to see the name (as a string) and then the value, in that order, as arguments. So something like: myfunc('name1', value1, 'name2', value2, 'name3', value3) The `inputParser` class is useful for writing functions that take these sorts of arguments.
Ask in r/Linux ;)
For this function, the scales variable has to be a structure, cell, or vector, with 3-5 arguments. So some sample code might be: sig = [...]; myscales = struct('s0', 4, 'ds', .2, 'nb', 100, 'type', 'lin'); output = cwtft(sig, 'scales', myscales); myscales could also have been written as: myscales = {4, 0.2, 100, 'lin'}; In the latter case, order matters. Also, an array would not accept characters, so you have to use a cell for that last parameter.
While I'm sure that MATLAB could do this, it doesn't seem like the best tool for the job. To me, this seems like a problem PERL would be wonderful at solving, to produce a comma seperated file which has just the information formatted easily to import into MATLAB. 
I see now. I had the correct structure for scales but neglected to realize i needed to specify the name of the argument in the actual function. Thanks! Works perfectly now.
Depends which axis you wish to use as the center of revolution. Due to the nature of your polynomial, I will assume you wish to revolve it around the **X**-axis, since it looks nicer. The governing equation for a circle that is centered on and normal to the **X**-axis is: **y^2 + z^2 = r^2** where **r** is the radius of the circle. You may notice that all you are doing with this is fixing the hypotenuse of a right triangle to the value of **r**, choosing different values for the length of one of the sides, and figuring out what the value for the remaining side should be. In your case, **r** is defined by your polynomial (**ax^2 + bx + c**, for simplicity), so that fixed radius value is no longer fixed. However, the calculations are essentially the same. Thus, if you know an **X** and a **Y**-coordinate (really any 2 of the 3 variables, though an unknown x-value could become difficult and have multiple solutions), you can determine the appropriate **Z**-coordinate by simply solving the above equation for **z**: **z = sqrt( [r(x)]^2 - y^2 )** This simple parametrization allows you to determine all of the points on your surface. If you wanted to know the surface area of your surface, that is a bit more complex, but not necessarily more difficult. 
Why not do rapid acceleration which compiles to code, runs and from with in simulink? http://www.mathworks.com/help/simulink/ug/how-the-acceleration-modes-work.html#brc69jb
Since that article is a bit of a stub, maybe you can answer this for me, to make sure I am getting this right. I have two main subsystems (which have various subsystems of their own too), call them BlockA and BlockB. BlockA is our main concern for real time (I have seen this set up work with compiled BlockA running on a dSpace computer and sending the results back to a computer hosting BlockB in Simulink). Using this method, is it possible to have BlockA run in Rapid Accelerator mode, and feed data back and forth to a seperate Simulink model hosting BlockB and the necessary UDP blocks (used to send packets to visualizer etc)? Or would I have to have the full system (BlockA and BlockB together with everything including UDP) run as a single accelerated model? I appreciate any help, you have given me a good direction to look into, so do not feel obligated to help if you are unsure.
You don't even need to do the separate model just use reference model blocks and you can run it as a Software-in-the-loop. http://www.mathworks.com/help/simulink/slref/model.html#bsc2zye-8 http://www.mathworks.com/support/solutions/en/data/1-F7S3A3/index.html?solution=1-F7S3A3 This one has a good example at the bottom. http://www.mathworks.com/help/releases/R2011a/toolbox/ecoder/ug/bsf5j6k.html#br74nq4-1 
Here are some news about my project, I have a lots of difficulties to learn matlab codes and fonction. But here is what I have done, and my problemes. Can you take a look. So first, this program allow me to stream data from the acquisition board %This script demonstrates live data streaming from LabChart to MATLAB. %Instructions: %1) Open a document in LabChart %2) Run this script in MATLAB %3) When LabChart starts sampling, the latest data from channels 1 and 2 are %plotted in MATLAB (while sampling). %4) If you stop sampling and make a selection in LabChart, then MATLAB will plot the %selection. global gLCApp; global gChans; %Array of channel numbers specifying channels to retrieve sampling data from %gChansData holds the data copied from LabChart channels in the %OnNewSamples() function in LCCallBacks.m. %gChansData is a cell array because LabChart channels are not necessarily all the same %length while sampling, since the data can arrive in each channel with %different delays. global gChansData; % global gEnableOnNewSamples; gEnableOnNewSamples = 1; %First a reference to a LabChart instance (gLCApp) is obtained, either by attaching to %an already running LabChart, or starting LabChart. try gLCApp = actxGetRunningServer('ADIChart.Application'); catch err error('Please start LabChart before running this script.'); end if (isempty(gLCApp.ActiveDocument)) error('Please open a document in LabChart before running this script.'); end gChans = [1 2]; % collect sampling data from channels 1 and 2. RegisterLCEvents(gLCApp.ActiveDocument); % hook up the OnSelectionChange event and the sampling events such as OnNewSamples and OnBlockStart. And the fonction I have to use for obtain data in a variable called "gChansData" is this one function OnNewSamples(varargin) %Example event handler called when sampling, whenever new samples might be %available, typically 20 times a second. %This example gets any new samples from channel gChan, appends them to %the gChan1Data vector, then plots the latest 5000 samples. global gLCDoc; global gLatestBlock; global gBlockSecsPerTick; global gLatestTickInBlock; global gChans; %Array of indicies of desired channels global gChansData; global gChanLengths; %Array across channels which keeps track of the number of samples in each channel %Reset to 0 in OnBlockStart(). global gT; global gEnableOnNewSamples; %disp('OnNewSamples called') gLatestTickInBlock = gLatestTickInBlock+double(varargin{3}); if gEnableOnNewSamples == 0 return end newSamplesMax = 0; %max new samples added across channels minChanBufferLen = 1e30; %number of samples in the shortest channel for ch = gChans % HRESULT GetChannelData([in]ChannelDataFlags flags, [in]long channelNumber, [in]long blockNumber, [in]long startSample, [in]long numSamples, [out,retval]VARIANT *data) const; % For the sampling case we can pass -1 for the number of samples parameter, % meaning return all available samples chanSamples = gLCDoc.GetChannelData (1, ch, gLatestBlock+1, gChanLengths(ch)+1, -1); gChanLengths(ch) = gChanLengths(ch)+length(chanSamples); if newSamplesMax &lt; length(chanSamples) newSamplesMax = length(chanSamples); end gChansData{ch} = [gChansData{ch}; single(chanSamples)']; %Convert from double to single precision to save space. %Calculate the number of samples in the channel with the smallest %number of buffered samples if minChanBufferLen &gt; length(gChansData{ch}) minChanBufferLen = length(gChansData{ch}); end end if newSamplesMax &gt; 0 nSamples = length(gT); gT = [gT; [nSamples:nSamples+newSamplesMax-1]'*gBlockSecsPerTick]; end %plot non-overlapping blocks of chunkSize samples chunkSize = 1000; plotRange = 1:chunkSize; %Every channel will have at least minChanLength samples in gChansData{ch} numChunks = fix(minChanBufferLen/chunkSize); for chunk = 1:numChunks %Uncomment a function similar to the following to do %custom multi-channel processing, e.g.: %myRealTimeCalculation(gChansData{ch}, chunkSize); for ch = gChans %Replace the following subplot line with a call to a function to do %custom single channel processing, e.g.: %myRealTimeCalculation(gChansData{ch}(plotRange)); subplot(length(gChans),1,ch), plot(gChansData{ch}(plotRange)); gChansData{ch}(plotRange) = []; %remove the processed samples end end But here is my problem, i want to take two consecutiv data from "gChansData" and put them in A and B in my own program here : as you can see, my communication with theRS232 is in it, another probleme is to concatenate the commande for the motor speed A3, with the order of speed, given by the Vitesse variable. I mean, if my sensor give 5 km per hour, I want to write in the RS232 A30005, can I do [A300 V] with V equal to 5 to obtain A30005, and does "fprintf(s, myCharV)" will work, with myCharV equal to CommandeMoteur=[A3000 V]. Here is the code A= A / Linearite / Alimentation % in mm B= B / Linearite / Alimentation % in mm % We do the math calculation to obtain the speed Vitesse = abs((B-A)/(1/20)) % in mm/s because 20 frame per second with the powerlab % Here is a security test for the speed determine by the user (VitesseSecurite) VitesseSecurite = %in mm/s If Vitesse &gt; VitesseSecurite then s = serial('COM4','BAUD',4800); % attention de bien choisir le port via le device manager de windows fopen(s) % Open the serial port for r/w myChar = 'A2'; % A2 est la commande stop moteur fprintf(s, myChar) % Write first char of user input to serial port myChar = input(prompt, 's'); % Get user input fclose(s); % Close the serial port delete(s); End % Now we verify that the sensor is in a range define by the user ValeurMinLongueurCable = % it's the min value for the cable ValeurMaxLongueurCable = % it's the max value for the cable If A&gt; ValeurMaxLongueurCable or A&lt; ValeurMinLongueurCable Then s = serial('COM4','BAUD',4800); % choose the RS232 port fopen(s) % Open the serial port for r/w % conversion speed to mm/s in Km/h V=floor (Vitesse * 0,0036) % conversion CommandeMoteur=[A3000 V] % concaténation between A3 and the speed [A3000 5] give A30005 to run the motor as 5 km/h but I am not sure if it's work !!!! myCharV = CommandeMoteur; % A3 is the speed order, and 0050 the speed fprintf(s, myCharV) % Write first char of user input to serial port fclose(s); % Close the serial port delete(s); End So my main problem is to give A and B their value from the powerlab and write the spped command to the RS232
My university has some toolbox licenses but when we were first instructed how to install matlab they are all left out for speed and I guess simplicity. I have found the toolboxes and managed to install this one. Would you recommend other toolboxes, in particular the PDE one? 
I have a cracked version so I have all of them on my home computer. I use Image Processing Toolbox and Curve Fitting Toolbox for my research. 
It can simulate any spring up to 10 meters long, if the user inputs conditions that cause the spring to "hit the floor" (computationally) it will have the user select a new height. The spring is assumed to have zero mass, and the effects of air friction are not being taken into account. Adding an option to include air friction might be my next move, by the way I am pretty new to Matlab, and fairly new to C++ as well. I find it a lot of fun to use Matlabs visualization features (plot, spring, arrow scatter, etc) to make simulations, as I currently do not know how to make them in C++, although I have read that it is significantly more difficult.
That last link leads to an error page. Do you remember the title/your search query that lead you to it? Thanks a million again.
It works, [try this linkified](http://www.mathworks.com/help/releases/R2011a/toolbox/ecoder/ug/bsf5j6k.html#br74nq4-1) Should be under *Choosing a SIL or PIL Approach* in *Embedded Coder* documentation.
Odd, I keep getting the error. I tried going into documentation for other releases and get the same error. I seem to only be able to access the r2012b documentation from my desktop using chrome. Guess I'm limited based on the version I have installed. Seems like a poor practice on their part to deny older documentation. I think I found the appropriate article thanks to your search term.
Pretty cool stuff! 
thanks! My favorite simulation is definitely the energy one, I think it's a really cool means of showing how the different types of energy are related and more importantly, how they are all conserved
Numerical integration. Or differential equations. First how the dT function works. Then do it by "hand" Then show how ode45 work. All of which should be basic differential equations.
Why use C++? couldn't you do the same thing in just matlab?
I bet you could but I don't know how. I learned some C++ first, then I bought matlab to create simulations. 
We run a computational medical physics course where we solve problems in the field using Matlab for numerical analysis. Here's the [course outline](http://www.science.mcmaster.ca/medphys/images/files/courses/3r03/2013/Course_Outline.pdf). PM me if you want more details.
Go to the Desktop menu. From there you can select which windows you'd like open (Command Window, Command History, Current Folder, Workspace, etc.). You'll see a check next to each window that is already open. Then you can manually drag them around and reshape them.
If you provide an image when you run the function it will be used. I haven't seen that kid in years, but I also can't think of any reason to open an image with no data.
Read: Mathworks threw enough cash at us to buy all of our IP.
Its probably because you are combining a script and a function. You can either (A) create a new m-file with ONLY the function myfun and call it or (B) create a 2 sub-function format. If you create (A), then any work done via script or in the command window can work with myfunc, but if you create (B), then myfunc only works within the single m-file that contains it. A) Script interfacing with function x= d0= ... I= v = myfun(x, d0, dI, L, w, E, I) Create new M file, title it "myfun" and have this only in there: function v= myfunc(x, d0, dI, L, w, E, I) ... end B) 2 sub-function in same M-file "my_program" function my_program x= d0= ... I= v = myfun(x, d0, dI, L, w, E, I) end function v= myfunc(x, d0, dI, L, w, E, I) ... end
Go to the Desktop menu and find the restore to default option. Then play around with it as you wish.
Seriously? Do your own homework. If you have a question, ask it. But nobody here is going to do an assignment for you.
Do you want us to write your reports too?
You know, I must have misread this years ago, because I've been calling these data nips since I've known they existed. Apparently they're called data tips. I know you can export the info from a data tip to the work space, but I'm not sure about controlling its position from the work space. Maybe you might find something useful here: http://www.mathworks.com/help/matlab/creating_plots/data-cursor-displaying-data-values-interactively.html Also, you might want to see if you can edit the properties of a data tip. If so, and one of the properties is a position, perhaps you can set that from the command line. I would try this to see if it works but I promised myself I'd get off reddit and go back to work. 
Literally minutes after I made the post I just tried pressing the arrow keys just for the hell of it. And miraculously the cursor moved by small increments! None of my fellow students knew about this afaik. Thanks for the response though.
Thank you!
Absolutely, but if it's on a report, sexiness in MATLAB goes a long way.
[foo,bar]=max(function) gives you the location and value of the maximum value of the function. If the value is the same in a few places of the vector, it will show the first placement of said value if you want to look at your function value at a given point simply input "function(location)" where "function" is the name of your value string and "location" is an integer i have a feeling you're using the "bode" command, in which case I urge you to take a better look at the transfer function you're inputting. It's quite simple to find the location of all zeros and poles.
I have to show on matlab that we got that point along with 2 others. Analytically doing so would be annoying to plug in a ti89 because we had to design a second order butterworth filter that satisfied 3 different specifications. We had to guess at what would be an appropriate resonant frequency, so basically 3 times a lot of guesses.
Come on man, at least give us a link that actually works.
Check the wiki link [here](http://en.wikipedia.org/wiki/Sobel_operator).. It is basically a convolution operation of the image with two 3 by 3 filters -- there is a nice implementation **without using the the edge function** [here](http://www.mathworks.com.au/matlabcentral/newsreader/view_thread/272564) by ImageAnalyst
Thanks, much appreciated. I've also found other functions like fzero() that are closer to what I need. I'll check out your method as well. 
Apologies, I did not know this at the time. I had tried solve() and assumed fsolve() would have the same function. Thanks for the reply.
Also, if you have made enough data points, you could just say find(y==1).
So you want a low pass filter? Yes, matlab can filter the data. Use filtfilt if you don't want to phase shift the data.
 You can try smooth(Y)
Try testing decimate or resample. If you have time stamps for each measurement, then you could use that to make daily averages using grpstats.
 data_min=inf; data=reshape(data,1,length(data)); for data_point=data if data_point&lt;data_min data_min=data_point; end end What is described is a bubble sort of some sort. Edit: The reshape is unneeded, if your data is already in 1xn size. However if it's nx1 it the for doesn't work right. But in this format the 'for' acts like a 'foreach' so if you have a lot of cells to process for current=array is easier to me than for i=1:numel(array) current=array{1}
This would find a min by comparing a value to the previous one. It doesn't seem to be just 'find the min'. N = 10; data = rand(1,N); notordered =1; data2 = data; while notordered changes = 0; for I = 2:N if data(I) &lt; data(I-1) temp = data(I-1); data(I-1) = data(I); data(I) = temp; changes = changes+1; end end if changes==0 notordered = 0; end end disp(['the data min is: ' num2str(data(1))]) 
Can you describe the pattern better? I'm not getting it. Like is it supposed to be 5 7 9 11...?
Plus it avoids naming variables after matlab functions. Things never go well after doing that. :)
Not the only way or the most efficient, but itll do. Input your initial conditions on the first 2 lines, and irrespective if the first number is even or odd, the next set of numbers for y will be the successive even numbers. y=zeros(1,7); y(1,1)=5; if mod(y(1,1),2) y(1,2)=y(1,1)+1; else y(1,2)=y(1,1)+2; end for i=3:length(y(1,:)) y(1,i)=y(1,i-1)+2; end y
This is a little confusing: "even integers starting with 5." Do you mean odd integers starting with 5 or do you mean start with the first even integer after 5?
Well if this is the actual pattern, and since he didn't make any other specifications, a much more efficient way would to just make a vector: y = [5 6:2:16];
n=-1:5; %A = zeros(1,7); for i=2:7 A(i) =5+(2*n(i)+1); end A(1)=5;% cheated...i need to create the vector that starts with 5 A
Don't use 'i' as a loop variable. It's the imaginary number. Even if you don't use complex numbers right now. Just get used to it not using it. Use 'k' or whatnot. I didn't listen to that and once had a 2h debugging marathon because of this stupid mistake...
Wouldn't it be possible to put them both in a vector?
Or make it a habit of using 1i for complex since it is faster ;)
I do that too. Though, some libraries don't. It's wise not to redefine 'i'. It goes well 999 times and then this one time it'll take you forever to figure it out why your code isn't working. -&gt; Don't use 'i' as a variable name EVER.
Do you want to plot them?
Target Language Compiler, this is /r/matlab is it not?
It's a core component of the Matlab package and used by numerous people. Just because you've never heard of it doesn't mean it doesn't exist.
And if by 'nobody' you mean John Deere, Caterpillar, General Motors, Toyota, Ford, Honda, Continental Teves, Jaguar, Allison Transmission, JPL (Used on Curiosity), NASA, Lockheed Martin, 
I had no idea what he was talking about either and have been using matlab for quite a long time. 
its just A(:,1) if you want the first (or any other) row its A (1,:)
If you make your script into a function you can have it return a value, say an error message. Then after you call the script just do one of these. myShitSucks=coolFunction() if myShitSucks error('your shit is fucked.'); end
The long PDF in the middle wasn't a give away?
Who said you had to click on it. targetlanguagecompiler.pdf And if you've never heard of it, why not just move on instead of making a smart ass comment like the first reply? There are numerous lesser used bits of Matlab that I've seen on here that I know nothing about but I refrain from posting. Until this thread /r/matlab has been a relatively intelligent and helpful subreddit like /r/woodworking or /r/linux. I guess I was wrong. &gt; I need help using the cumsum function? &gt; LOL WHY NOT GO TO THE LOCAL BAR. THEY'LL HELP YOU SUM CUM.
It would have, but your shitty response to the first reply made me uninterested. 
&gt; Target Language Compiler, this is /r/matlab[1] is it not? That shitty reply? Where I expanded TLC and questioned if I correctly posted in matlab. Where the logical place to post for TLC help would be.
Cheers, that was much simpler than I thought. I was sitting playing with eval functions, never realised I could just set a range of values for m like that.
This would have been my suggestion as well. If, for some reason, you can't do that, you could create a global variable in your function (or before) and assign the error message in your script to that variable. Then, after your script is done, you can check the value of the global variable within your function. This is rather ugly, though, and I'd recommend using /u/cantquitreddit's approach.
The equations are all linear. Write it as a matrix equation Ax=b then "invert" A. How you do that depends on its dimensions but in MATLAB, x=A\b.
[I hope this helps.](http://www.mathworks.com/help/matlab/ref/any.html)
If your matrix is called A, such that A = zeros(100,100,3); Then check = isempty(A); should give you either check = 1 or 0 
There is no need for the verbosity in your function. Point by point: 1) it is set to have a comparison to imageblocks of size [100 100 3]. It seems unnecessary to limit it to only that size, so why not make it dependent on the size of imageBlock as follows: function [IsBlank] = CheckGridBlock(imageBlock) if imageBlock== zeros(**size(imageBlock)**) IsBlank=true else IsBlank=false end return 2) there is no need for a return call at the end of the function: function [IsBlank] = CheckGridBlock(imageBlock) if imageBlock== zeros(**size(imageBlock)**) IsBlank=true else IsBlank=false end **% snip!** 3) also, as bent0 said, there is no need to compare to a matrix. Instead you can use an element by element comparison: function [IsBlank] = CheckGridBlock(imageBlock) if **all(imageBlock(:) == 0)** IsBlank=true else IsBlank=false end 4) while we're at it, the if statement is not necessary: function [IsBlank] = CheckGridBlock(imageBlock) **IsBlank =** all(imageBlock(:) == 0)**;** At which point we are are small as you can get without getting a little silly and domain specific. 
Certainly possible. You'd do: 1. Read in video. Convert to a bunch of images 2. Overlay the data onto each image 3. Put the video back together out of the images Never done this, but I'd image you won't be able to keep the images in memory so you'll have to do some I/O and it might be slow. Not sure if MATLAB can work like a stream on videos in which case you'd avoid storing the images. Also, ffmpeg comes to my mind. I'd google something like "Overlay data video ffmpeg script" HTH
Not sure why this got ignored. It is a nice little bit of code that does exactly what the OP wanted using a builtin. It is likely faster than [OP's version](http://www.reddit.com/r/matlab/comments/1768mg/help_writing_a_function_to_work_out_whether_a/c82nqho), too. It would also be easy to make it callable: CheckGridBlock=@(x)all(x(:)==0)
To Matlab, empty is different than zeroed
I assume you have some function that can calculate the stats given an excel file, I'll call it OneExcelFileStats(FileName) I would do it something like this (well, I would use regexp): % create some functions that tell you if a file matches the pattern you are looking for MatchPrefixFcn = @(FN) strncmpi('test',FN,4); MatchSuffixFcn = @(FN) strncmpi(fliplr('.xls'),fliplr(FN),4); % combine them MatchFilePattern = @(FN) MatchPrefixFcn(FN) &amp;&amp; MatchSuffixFcn(FN); % list all of the data in the directory D = dir(DataFileDir); % initialize an accumulator that will collect the output from the stats function AccumData = []; for n = 1:numel(D) % do we have the right file? If not, continue. if ~MatchFilePattern (D(n).name) continue; end % run the stats on a file AccumData = [AccumData OneExcelFileStats(fullfile(DataFileDir,FileName))]; end % write the data to an excel file, somewhere WriteDataToExcel(AccumData)
Oops, oh yeah. Then any() is the way to go. 
never knew about the all function, I've always been doing max(a(:)) == 0
What you might do is multiply the numbers by 10000 round, then check for equality. Sorry for the formatting, but: &gt;&gt; 5.00001 == 5.00002 ans = 0 &gt;&gt; round(10000*5.00001) == round(10000*5.00002) ans = 1 edit: Insert an asterisk between 10000 and 5.00xyz in the second command. Reddit edited it out. 
so I've done some thinking, typing out my problem definitely helped. DistMax=round(h*tan(a)) %the maximum distance the light reaches totals(DistMax/Incriment,1)=totals((DistMax/Incriment)+1,1); %replaces the NaN value returned by L(n) with the next value along for x1 and similar for x2 but now I can't figure out the second part where you recall values between the two rows in a specific column Incriment=0.1 x1=DistMax; %value in metres x2=DistMax+d; x1Position=x1/Incriment %/Incriment converts metres value to row number x2Position=x2/Incriment MinIntensity=min(totals(x1Position:x2Position),3) is my attempt but it returns *Subscript indices must either be real positive integers or logicals.* even when x1Position and x2Position are real and positive. I must be missing something?
This is a quick and dirty method that will work for most cases. However, the user could encounter floating point errors that will return false answers to the logic (it's pretty simple to get to a case where a variable == 1 returns 0 even though the variable should be 1). I'd suggest using a tolerance with this method, if possible.
You've discovered one of the problems inherent to comparing floating-point numbers with ==. The best thing to do is to establish a tolerance factor, for equaltiy, then test if the difference between the two is within the tolerance... tol=1e-5 if(all(abs(eigenvalue_vector-char_poly_root_vector) &lt; tol))
Ah, of course. I don't know why I didn't think about this. I'm away from a computer with a MATLAB license right now so I'll have to try it tomorrow. Thank you for the help.
Octave is a really good replacement thats free and runs 99% of matlab code. I use it all the time.
It says they should be real positive **integers**. The x1/Increment and X2/Increment are probably not exactly integers.
thanks, yes there is a command to open excel just once and read for the loop, as opposed to opening/closing excel for every iteration.
This was a few years ago when I last had to use it - I don't think it was capable then without using another bit of code. I'm glad it's been fixed.
stuck! but I took your lead and now have a column of filename strings I can (hopefully) stick into my xlsread/function. Here's what I have files = dir('foldername/*.xlsx') filescell =struct2cell(files) filenames = filescell(1,:)'
Does Matlab work well with xlsx files? That *could* be a problem. I've never tried it. I never save as xlsx (since I mainly use OpenOffice, anyway)
no problems with xlsx so far
I think I would probably not use excel spreadsheets (maybe export them as csv files), but have you also tried using *fopen*? What problem are you running into? Can you just loop through the files and run the script each time? e.g. for i=1:length(files), load([files(i).name]) myScript(files(i).name) end
Does it work? Yes. Well? Eh.... XLSREAD does a serviceable job, but it's really slow. Like, frustratingly slow when compared to how fast Matlab can read data from flat files. It's quite easy to use though and lets you pull data out of specific tabs or cells if you don't need the entire spreadsheet. XLSWRITE is pretty slow too, but again, it works. There are other issues I've run into as well, such as coming into work in the morning and having 117 copies of excel.exe running because somehow they didn't get killed after Matlab wrote to a spreadsheet. So overall, yeah, it works but it isn't ideal. I do my best to only read a spreadsheet once, and save everything to a .mat file if users don't need to see it or csv if they do. 
don't forget - the first two elements of "files" will be "." and ".." You should do a for ii = 1:length(files)-2 xlsread(files(ii+2).name) end or just files(1:2) = [] before your loop.
The command you're looking for is error(). You use it like so if ~any(x==a)||~any(x==b) error('You broke it') end Where x is your predetermined list of allowed values, and a and b are your inputs
Sorry, totally missed the switch bit. For switches, just add an *otherwise* as the last case, and put your error there. See the [MATLAB documentation of switch](http://www.mathworks.co.uk/help/matlab/ref/switch.html) for examples. The vertical line is above the backslash on my keyboard, so shift+backslash to get it.
otherwise error('Error, component not in list') Thank you so very much Jammie1!
It's no problem, although I'm not sure if I know what you mean. If your input is valid, it will match one of the cases. The otherwise case will only execute if the input doesn't match one of the cases. Your code will look something like this speciesB=input('what is species diffusing in:','s'); switch speciesB case 'acetone' sigmaB=4.6; MB=58.08; case 'acetylene' sigmaB=4.033; MB=26.04; : otherwise error('Input not valid') end
The two "vertical lines" occur when you hold shift and press the \ key, which should be somewhere around your enter key. It is a logical or. The structure of code you are describing is not a very good way of representing the structure of data you have. Basically, you have a lookup table, where there is a key (the name of the material) and some parameters (sigmaB and MB). Instead of describing it with a switch statement, I suggest the following: % A cell array representing a table of information DiffusionParams = { % Species SigmaB MB 'acetone' 4.6 58.08 'acetylene' 4.033 26.04 'air' 3.711 28.97 'ammonia' 2.9 17.031 'argon' 3.542 39.95 'benzene' 5.349 78.11 'bromine' 4.296 79.9 'n-butane' 5.339 58.12 'i-butane' 5.341 58.12 'carbon dioxide' 3.941 44.01 }; % user input speciesB = input('what is species diffusing in:','s'); % check that the input matches known data. If not, error. assert(any(strcmpi(DiffusionParams(:,1),speciesB)),'Species %s not found!',speciesB); % assign the matched model parameters [SigmaB,MB] = deal(DiffusionParams{strcmpi(DiffusionParams(:,1),speciesB),2:3}); You might then replace the cell array data with something that reads from a file. That is a much better way of storing model parameters than putting it directly into your code.
The program will terminate upon reaching an error command.
I thought matrices were 2D and arrays were 3+ dimensions?
Thank you
With that many inputs why not have a popup dialog and have the user select? I can see you fat fingering and getting the error message http://www.mathworks.com/help/matlab/ref/listdlg.html
I think the function you're looking for is [fzero()](http://www.mathworks.co.uk/help/matlab/ref/fzero.html)
Just confirmed my original post on my Windows machine. I have 6 files in my current directory. I input the code: d = dir; which returned *d* as an 8 x 1 structure array. In *d*: d(1,1).name = '.' d(2,1).name = '..' d(3:8,1).name are the names of the various files in the dir. [Proof.](http://imgur.com/6B2yO7U) Edit: I'm using version R2012a (7.14.0.739).
That's why my code is files = dir('*.xls') OP said he was only interested in Excel files.
 reshape() Is also a very useful function for things like this
3D is like an Array of Matrices. 4D is like a matrix of matrices. 5D is like an array of matrices of matrices, and so on... 
Whoop! My mistake. missed that part. I just assumed OP only had .xls files in his folder.
An inelegant method would be to have either matlab or the arduino board write to the hard drive of the computer that matlab is running on and then have either matlab or the arduino board keep scanning the folder and grab the file to process when it is there. Can use filenames to keep track of stuff and sync the system. This will only work if your arduino board is able to interact with the filesystem of the matlab computer. Note: I have a very limited knowledge about the capabilities of an arduino board, but if it has BT/eithernet/USB it should be able to communicate with a computer's filesystem. 
Mathworks has some [support packages](http://www.mathworks.com/matlabcentral/fileexchange/32374) available that you can use Matlab and even Simulink to control your Arduino. I dabbled with some of these functions a while back, controlling a stepper motor and gathering input signals. It seemed to work ok. 
Can you tell us what the Fourier series is? In general, you can probably use some recursion (for or while loop) to calculate the first n terms and sum them. I can't give any more details without hearing more about your problems though.
z = fft(data); plot(z(1:5))
Do this - takes like 2 seconds to do and figure out. I do it all the time for Arduino and other MCUs to test serial connections and commands.
Thanks for the code but i still get this error: Error in Untitled3 (line 16) finalsum=sum(terms) + a % This sums every element of the vector "terms" and then adds the first term "a" &gt;&gt; Untitled3 Subscript indices must either be real positive integers or logicals.
I just copied and pasted the code and I did not get an error. For 100 terms, I got a sum of 0.5 Perhaps you have a typo in an index somewhere?
 function [cols] = test() %Declaring a test function enables the subfunctions to be in the same script data={{'1','a','abc'},{'2','b','bcd'},{'3','c','cde'}}; %Sample Data func=@(x) strjoin(x,char(9)); %http://www.mathworks.com/matlabcentral/fileexchange/31862-strjoin rows=cellfun(func,data,'UniformOutput',false); %Join the cells in each row with tab delim mystr=strjoin(rows,'\n'); %Join rows with newline filewrite(mystr,'c:\test\data.txt'); clear all; mystr = fileread('c:\test\data.txt'); rows = str2rows(mystr,1); %Split to rows with newline, exclude first line in data file cols = rows2cols(rows); %Converts cell of rows to cell of columns cols = cellfun(@transpose,cols,'UniformOutput',false); %Makes each column vector a vertical one %Useful functions for the script above function [cols] = rows2cols(rows); tmp=vertcat(rows{:}); tmp=transpose(tmp); tmp=num2cell(tmp,2); cols=transpose(tmp); end function [] = filewrite(s,filename); %Write string to file fid=fopen(filename,'wt'); fprintf(fid, '%s', s); fclose(fid); end function [rows] = str2rows(s,headerlines); %Read file rows to cell vector tmp=regexp(s,'\n','split'); tmp=tmp(headerlines+1:end); %Exclude first row rows=cellfun(@(x) strsplit(x,char(9)),tmp,'UniformOutput',false); %Split each row end end
Can you provide a sample on pastebin?
Generally, for computer science and mathematics the definitions are simpler. An array is a block of n dimensional data, and a matrix is anything you can perform matrix operations on. So how do you define matrix multiplication on a "3d matrix"?
okay for some reason it work now. I m trying to graph this now by changing t=1 to t=1:1:100 and using the plot function but its not working.
t has to be a scalar in order to generate the vector "terms." Use a different variable for plotting. x=1:99; % By default, this generates numbers by adding 1, so you don't need to specify plot(x,terms)
Everything works now but the graph for 5 terms and 25 terms are the same. I would image 5 terms wouldnt really look like a saw wave because of such a low term. Idk. Thanks for your help though.
There doesn't seem to be any representation that is both useful and preserves standard matrix properties. This is why matrix languages and libraries designed after matlab (like numpy) tend to favour array primitives such as element-wise multiplication over matrix multiplication -- it scales correctly to higher dimensional blocks of data.
See the help documentation for input(). Examples: str = input('Give me a string: ','s') Give me a string: Here is your string sir. str = Here is your string sir. num = input('Pick a number, any number: ') Pick a number, any number: 5 num = 5 
Bingo, that's exactly what I meant. I'm getting an error: unexpected matlab esxpression, though. I'll look into it. 
You might want to employ structures to handle your variables. Just a suggestion.
Here is a solution that has one input, the minor leg length (with this algorithm the major leg length will necessarily be the hypotenuse of the previous triangle + minor leg length), and number of iterations to perform. I apologize in advance for the crudeness of the variable storage, but I tried to assume as little Matlab knowledge as necessary. clc; clear all; close all; % define user inputs leg = 4; % leg length iterations = 10; % iterations % define initial points p1 = [leg/2 leg/2]; p2 = [-leg/2 leg/2]; p3 = [-leg/2 -leg/2]; p4 = [leg/2 -leg/2]; % define initial angles a1 = 90; a2 = 180; a3 = 270; a4 = 0; % define intial hypotenuse lengths h1 = leg; h2 = leg; h3 = leg; h4 = leg; % draw the initial square points = [p1; p2; p3; p4; p1]; plot(points(:,1),points(:,2)) % run the loop hold on for i = 1:iterations fprintf('iteration: %.0f\n',i) % perform calculations p1n = [p1(1) + leg*cosd(a1) , p1(2) + leg*sind(a1)]; p2n = [p2(1) + leg*cosd(a2) , p2(2) + leg*sind(a2)]; p3n = [p3(1) + leg*cosd(a3) , p3(2) + leg*sind(a3)]; p4n = [p4(1) + leg*cosd(a4) , p4(2) + leg*sind(a4)]; a1 = a1 + atand(leg/(leg+h1)); a2 = a2 + atand(leg/(leg+h2)); a3 = a3 + atand(leg/(leg+h3)); a4 = a4 + atand(leg/(leg+h4)); h1 = h1 + leg; h2 = h2 + leg; h3 = h3 + leg; h4 = h4 + leg; % draw leg lines plot([p1(1) p1n(1)],[p1(2) p1n(2)]) plot([p2(1) p2n(1)],[p2(2) p2n(2)]) plot([p3(1) p3n(1)],[p3(2) p3n(2)]) plot([p4(1) p4n(1)],[p4(2) p4n(2)]) % draw hypotenuse lines plot([p1(1) p2(1)],[p1(2) p2(2)]) plot([p2(1) p3(1)],[p2(2) p3(2)]) plot([p3(1) p4(1)],[p3(2) p4(2)]) plot([p4(1) p1(1)],[p4(2) p1(2)]) p1 = p1n; p2 = p2n; p3 = p3n; p4 = p4n; end hold off 
Well, it involves copying part of your txt file, pasting it and hitting one button. I'm sure if you've managed MATLAB, you'll be fine with pastebin :)
This guy's got it. Bravo. The only change I would make is throw in an axis square above the hold off at the end to square the graph and get the proportions right. 
yup, good call on that
Wow, thanks for the comprehensive response. I utilized your code, and changed a couple things to fit my specifications. Your implementation extended minor triangle legs of constant length, leading to successively longer, slimmer triangles on the outside. I wanted to scale up the length of minor triangle legs extensions, so that each and every triangle in the picture had similar side and angle ratios (but much bigger triangles on the outside). clc; clear all; close all; % define user inputs leg = 2; % leg length iterations = 18; triSideRatio = [11 60 61]; ml2sH = triSideRatio(1)/(triSideRatio(2)-triSideRatio(1)); % minor leg to sub hypotenuse ratio legUP = leg * ml2sH; % scaled leg variable % define initial points p1 = [leg/2 leg/2]; p2 = [-leg/2 leg/2]; p3 = [-leg/2 -leg/2]; p4 = [leg/2 -leg/2]; % define initial angles a1 = 90; a2 = 180; a3 = 270; a4 = 0; % define initial hypotenuse lengths h = leg; % draw the initial square points = [p1; p2; p3; p4; p1]; plot(points(:,1),points(:,2)) % run the loop hold on for i = 1:iterations fprintf('iteration: %.0f\n',i) % perform calculations p1n = [p1(1) + legUP*cosd(a1) , p1(2) + legUP*sind(a1)]; p2n = [p2(1) + legUP*cosd(a2) , p2(2) + legUP*sind(a2)]; p3n = [p3(1) + legUP*cosd(a3) , p3(2) + legUP*sind(a3)]; p4n = [p4(1) + legUP*cosd(a4) , p4(2) + legUP*sind(a4)]; a1 = a1 + atand(legUP/(legUP+h)); a2 = a2 + atand(legUP/(legUP+h)); a3 = a3 + atand(legUP/(legUP+h)); a4 = a4 + atand(legUP/(legUP+h)); h = h + legUP; % draw leg lines plot([p1(1) p1n(1)],[p1(2) p1n(2)]) plot([p2(1) p2n(1)],[p2(2) p2n(2)]) plot([p3(1) p3n(1)],[p3(2) p3n(2)]) plot([p4(1) p4n(1)],[p4(2) p4n(2)]) % draw hypotenuse lines plot([p1(1) p2(1)],[p1(2) p2(2)]) plot([p2(1) p3(1)],[p2(2) p3(2)]) plot([p3(1) p4(1)],[p3(2) p4(2)]) plot([p4(1) p1(1)],[p4(2) p1(2)]) p1 = p1n; p2 = p2n; p3 = p3n; p4 = p4n; legUP = h*ml2sH; end axis square; hold off; * defined 'triSideRatio' as the ratio of sides in a special side-based right triangle. * developed 'ml2sH' (minor leg to sub hypotenuse) scaling ratio * replaced 'leg' with 'legUP', which ramps up in size with each loop iteration * changed 'h1','h2','h3','h4' to just 'h', as all hypotenuses are the same within the same iteration. * added 'axis square;', as /u/SilenceFromMars suggested I thinks that's about it. the critical inputs are 'triSideRatio', 'iterations' and i supposed 'leg' (but its effect is only visible when iterations are small, as it defines the size of the initial square). Thanks a bunch for you help. Your solution was very pretty in its own right.
They also have a embedded coder support package. It says that it's windows only but I've gotten it to work on other platforms. http://www.mathworks.com/matlabcentral/fileexchange/30277-embedded-coder-support-package-for-arduino
Thanks for the quick response! I forgot to mention that the problem I need to do has to include a for loop. Also, do you mind explaining the last two lines (specifically that arguments)?
Ah, this is for a problem. Well I'll leave the work for you to do then, but much of what you'll need is shown above. When creating X the dimensions are specified as size(A,1) and size(A,2)*2. "size(A,1)" gets the number of elements in the first dimension of A, in other words, the number of rows in A. size(A,2) gets the number of columns in A. Now, the line X(:,2*r1-1) = A; uses MATLAB's useful array indexing. If I have a matrix Z that is 4x4, for example, and I write Z(:,[1 2 4]), MATLAB will return the 4x3 matrix comprised of the first, second, and fourth columns of Z. Z(1:2,:), for example, returns the 2x4 matrix that is the first two rows of Z. Here, r1 is a permutation of [1,...,n]. So if A has 4 columns, r1 might be [3 1 4 2]. Then 2*r1-1 is [5 1 7 3], and the notation X(2*r1-1) means that the fifth, first, seventh, and third columns of X should be replaced by A. --- Now, when implementing this as a for-loop, the naive way is just to shuffle A shuffle B for i in {1,...,n} remove first column of A and append to C remove first column of B and append to C end where you can see how to do the shuffling from the discussion above. 
Ok thank you. Sorry I just started using MatLab today but I know Java so this is coming a little easier to me. So far, I have this: function out = shuffle(A , B) if(size(A) == size(B)) % checking sizes are equal out = zeros(size(A,2) + size(B,2)); %creating memory for new matrix for i = 1:size(out,2) out(:, 2i-1) = A; out(:, 2i) = B; end else error('The matricies are not the same size.'); %throwing exception if sizes are not equal end I feel like I am very close, but I keep getting this message: Subscript indices must either be real positive integers or logicals. 
Try replacing "2i-1" and "2i" with "2\*i - 1" and "2\*i". MATLAB needs those asterisks to do multiplication. Also, you are going to get a dimension mismatch error here, since you are setting a single column of "out" to an entire matrix.
Ok. By doing out(:, 2*i -1) = A(:,i); Wouldn't that also be an out of bounds error? I'm trying to think of ways to grab a single column at a time.
Nope, I don't think so. This looks like the problem: you have out = zeros(size(A,2) + size(B,2)); when what you want is out = zeros(size(A,1), size(A,2) + size(B,2)); If I just do zeros(n) it will make an nxn matrix. To specify a rectangular matrix I have to do zeros(m,n). 
[ Method 1 ]: I am guessing the Q is the heat being transfered and T is the temperature. You need to use two things from thermodynamics: 1) You need the relation of Heat Capacity for constant volumes: Cv = Q / (Delta T), which for differentials becomes: Cv = dQ / dT 2) You need the definition of specific heat capacity: c = C / m, which in case of differentials becomes: c = C / (massvolumedensity) Combine 1) and 2) to get the relation between the differentials dT and dQ. Use this to modify your current differential equation so that is describes the problem with temperature differentials dT/dr instead of heat dQ/dr. Now you can use your current boundary conditions. [ Method 2 ]: Alternatively rewrite your boundary conditions with what we now know, solve for Q, and then use the relations from thermodynamics to plot T with our function Q. [ How to plot ]: Be rewriting differentials as forward differences dx/dr = x(n+1) - x(n) / (Delta r) you can rewrite the entire differential equation into a step-wise integration algorithm known as explicit euler. Use this to iteratively calculate new values and plot them. For any confusions use google - they have alot of good material on specifically for discretization and integration algorithms.
I actually had two tables with more than 45 different species. This worked out so much better than the switch function. Thank you so very much!
Ok so I appeciate that this may be a bit specific. I understand how to do most of it, it is just the last line I am struggling with.
You can use a break to terminate the loop when you reach the current end of A. For i=1:size(A,1) A=MyFunction(A,i); if (i-1 &gt; size(A,1)) break; End Or use a while loop, it is less confusing for the reader. (I'm guessing you only delete lines after the current line. Otherwise it is messier.)
There's a link on the sidebar for basic MATLAB crash courses. Maybe you can start there
I need more than a crash course in MATLAB. I was asking for suggestions or things people who taught themselves did while learning it that helped them to understand the material better.
What exactly do you need to learn? You can teach yourself any language through crash courses and books, but I find the best method is to have a problem you want to solve and find the way to do it. Learning from example problems gets boring pretty fast and you don't really use your initiative. How are you at coding in general? If you have the basic knowledge of coding logic you should be fine. That is if you understand if, while for statements. The only difference in Matlab to something like C or Fortran is everything is pretty much done in Matrix form (hence the name MATrix LABoratory). So as long as you understand standard matrix operations you should be fine. So pick a problem you want to solve, for example make a blackjack simulator, whereby two hands are dealt in a standard blackjack fashion and see who wins. Once you have a basic grasp of the matlab syntax then learning to use specific tool should be easy. I have entirely taught myself Matlab and it seems daunting at first but if you don't know how to do a task, just google it there are so many stack overflow / forum posts on pretty much every topic.
Please use a while loop for this kind of behavior. What does it mean if you delete the first row of A on the (let's say) 3rd iteration? Should the iterator i be decremented? Should you skip over the 4th row? I think you should rework your control flow.
As mostlywaiting points out MATLAB isn't good for teaching good coding practices, however, that being said it is probably what makes it much more accessible than many other languages out there. There's no compiling or worrying about loading libraries, its more a press enter (or run) and get the results. A quick google for 'matlab basics' gave me this: http://www.math.tamu.edu/~phoward/m308/matbasics.pdf which looks like a good start. Most universities will have a page like this one outlining the matlab basics for taking their course. So start by looking through a few of them to get the grips of the very basics, assigning variables doing maths plotting results. Like I said before the best (or at least the way I found easiest) is to learn by doing. There will be a number of books on matlab for maths/engineering/chemistry/statistics in any academic library, but they're probably a waste of time (unless you find it easy to learn by reading). Matlab is a huge program, with thousands of functions and you will likely only use a tiny fraction of them. But like I said Matlab is very forgiving if you do something wrong it will through up lots of red text and tell you what is wrong. It is also very well documented typing 'help' followed by the function name will give information on how to use it including examples. Once you have a few simple functions under your belt you'll realise that it is not as hard as you first thought. For numerical methods you'll probably be using symbolic maths but you can cover that later when you have a handle on the basics. Anything you work out and plot will (by the nature of the topic) will just be a series of calculated values most likely a matrix of data points. For example to plot a simple sine wave y=sin(x): x = linspace(0,2*pi,60)';% generate 60 linearly spaced values between 0 and 2pi. then ' transposes them to a column vector. and a semicolon to suppress output. y = sin(x); % get the corresponding y values for each of the 60 x values plot(x,y) % plot x against y. And you're done. Give it ago. Once you've done that you've: assigned variables called a matlab function (sin) and plotted. Learn by breaking, its the best way. 
You’re right, by the way at this point my code is such a mess that it will be better to start all over.
I have no idea what A stores, or what MyFunction is doing, but a quick and dirty solution would be to set the rows to NaN in the loop, and then remove them all at once once you exit the loop with A(isnan(A)) = []; It might even be faster than dynamically re-sizing the array once per iteration. 
Matlab was suggested to me by someone on the internet as a way that I could do some "rudimentary" analysis of eye movement data ("rudimentary" was the word the person used). I had never heard of Matlab before and went to my undergrad advisor and said something like "I heard this program 'Matlab' can analyse data". He laughed and gave me a student copy. I had very little background in programming at the time. I sat down with the getting started guide, googled a lot of stuff, and just dove in. I picked it up pretty quickly after figuring out how variables worked (and how they were different from the way the word 'variable' was used in my math classes) and gained an understanding of the syntax. I think the best way to get into it is to get the basics down (i.e., understand the syntax and different data types/structures), and to have a problem to work on. Google and the 'help' and 'lookfor' commands are your best friends when learning matlab. 
I think this is key - having a problem to work on while learning is how I did it. 
I've never used an arduino but your application sounds useful for me. I'm using Matlab's DAQ toolbox to control an LED driver using the analog out channels on a National Instruments USB-6008. My problem with this is twofold - 1) the voltage output max is 5V (I need 10V) and 2) the output rate is slow, giving the output waveform a 'jagged' appearance. My solution was to put the output into an op-amp that's in line with some low pass filters to double the amplitude of the output and smooth out the jagged waveforms. This is fine but it's klunky. Now, this Arduino solution sounds like it could be nice given the flexibility I know the Arduino has. Can you get analog outputs? If so, what is the output rate? Edit: Got excited and posted this without googling. Looks like it's the same deal with the Arduino, but the output rate is much faster than my NI DAQ box. I think I'm going to invest in one of these and give it a shot. http://provideyourown.com/2011/analogwrite-convert-pwm-to-voltage/
Matlab has a very shallow learning curve and very good in-program documentation in the help browser. While I haven't checked it in a while (being fairly fluent now) I strongly suspect there's a "getting started" section of the documentation. It doesn't take a semester to learn Matlab. You could learn the basics in a weekend. It's a very easy language.
Try simulating some of your physics homework problems. It would be very straight forward to plot position vs. time for anything. It also helps to look at someone else's codes as examples (and hopefully they comment well). 
Tons of issues with this code, here are some: error('The matrix is not a square'); return; This return will never be executed, when an error is thrown, MATLAB stops working entirely. This is not what you want. If you have an NxN matrix A, and you want the vector of sums of all rows, you get it through sum(A,2) (the vector will be vertical). The vector of sums of all columns is sum(A,1) (the vector will be horizontal). If you want to compare two vectors X and Y of the same length (but possibly of different orientation), the easiest way to do this is: all(reshape(X,[],1) == reshape(Y,[],1)) which will return true if the vectors are the same (except for orientation), and false otherwise. With all of that said, it's really strange that you want a function that does what you want for a Sudoku solver. I don't see where that would be useful. Consider revising your algorithm.
Could you post the code that you have so far and possibly info on the filter you're trying to implement?
Not OP, but I've never thought of it that way... Though it's got quite a few dimensions to it I feel like. Maybe that's not the right word.
I've always wanted to solve sudokus using the method we'd solve them. There's also quite simple recursive backtracking methods in solving sudokus which are very fast. I agree with your [Easy] tag comment though. Taking the sum of the rows/columns would be, but not actually solving them. 
Ive never used simulink but this looks pretty interesting. Could this be used to do signal processing on the Arduino? e.g., wavelet transformations?
Why don't you post your code and we go from there?
How are you building the GUI (with GUIDE or programmatically with uicontrol() calls)? What you want to do is: within the callback for the slider (executed whenever the slider is moved) set the 'String' property of the static text boxes showing the value. As for setting the min/max properties of the slider, just use the set() command when you load the data. You'll have to perform some analysis on the data to find the min and max, of course.
Here is a really poorly written description simple algorithm to solve a sudoku in the vein of dynamic programming. Given the known pieces calculate all viable independent assignments for the remaining spots. Save the list of firmly known assignments. Fill all single possibility squares. Save into list of firmly known. Iterate until all blank squares have multiple possible independent assignments. In any sequential fashion (you can be smart here ;)) assign a value to an unknown square, then recalculate remaining squares viable independent assignments. Filling in any singletons iteratively until only multiple assignments are left. Search through the assignment space until you reach a point where any cell does not have a valid assignment. Backtrack one level and take a different decision branch. 
It has integer constraints. Clearly, not a system of linear equations.
We're all busy here. Mind doing some formatting maybe?
Well the matrix would be given, and all you'd have to do is find the sum of all the rows and columns to see if they are the same. Nothing difficult. I'm a beginner.
Ok.
I see that you listed 2 example puzzles. Were you able to produce a solution with this program?
Yes, and they were both verified as correct by an online solver afterwards. As best I can tell this will solve all solvable Sudoku puzzles, but I haven't tested any edge cases. There is always the possibility that I've made a mistake somewhere that only affects a subset of problems. Also I didn't try out the higher order Sudoku puzzles (bigger than 9x9) which it will accept or changing the groups it uses. I also see on the wiki that there are other styles of Sudokus; this cannot be used for anything but problems with 1:N items to fill. Edit: here are the problems with solutions: B = [ 5 3 NaN NaN 7 NaN NaN NaN NaN 6 NaN NaN 1 9 5 NaN NaN NaN NaN 9 8 NaN NaN NaN NaN 6 NaN 8 NaN NaN NaN 6 NaN NaN NaN 3 4 NaN NaN 8 NaN 3 NaN NaN 1 7 NaN NaN NaN 2 NaN NaN NaN 6 NaN 6 NaN NaN NaN NaN 2 8 NaN NaN NaN NaN 4 1 9 NaN NaN 5 NaN NaN NaN NaN 8 NaN NaN 7 9 ]; % solved by: B = [ 5 3 4 6 7 8 9 1 2 6 7 2 1 9 5 3 4 8 1 9 8 3 4 2 5 6 7 8 5 9 7 6 1 4 2 3 4 2 6 8 5 3 7 9 1 7 1 3 9 2 4 8 5 6 9 6 1 5 3 7 2 8 4 2 8 7 4 1 9 6 3 5 3 4 5 2 8 6 1 7 9 ] and B = [ NaN 1 NaN NaN 9 NaN NaN 6 NaN 2 NaN NaN NaN NaN 7 NaN NaN 5 NaN NaN 5 NaN 4 NaN 1 NaN NaN NaN 3 NaN NaN NaN NaN NaN NaN NaN 1 NaN 2 NaN 6 NaN 8 NaN 4 NaN NaN NaN NaN NaN NaN NaN 1 NaN NaN NaN 3 NaN 8 NaN 7 NaN NaN 7 NaN NaN 4 NaN NaN NaN NaN 3 NaN 5 NaN NaN 1 NaN NaN 9 NaN ]; % solved by: B = [ 4 1 7 5 9 2 3 6 8 2 6 8 1 3 7 9 4 5 3 9 5 6 4 8 1 2 7 6 3 4 8 2 1 5 7 9 1 7 2 9 6 5 8 3 4 5 8 9 3 7 4 2 1 6 9 4 3 2 8 6 7 5 1 7 2 1 4 5 9 6 8 3 8 5 6 7 1 3 4 9 2 ] Note that the first one takes a much shorter time to solve; on my computer it is .3 seconds vs. 1.4 seconds. 
"change the matrices from mxn to nxm" means what exactly? Transpose? What is A and B? Show an example please!
Yes it is. After installation, you'll need to install x11 though 
If s1 is 9x2 shouldn't you use something like s1(1,:)?
I think the one that would actually remove the necessity for the backtrack is a really weird method that I didn't realize I could use until I got into Very Hard Puzzles. If you look at this small segment, where o is a spot you cannot manipulate (mostly there for reference), and X is a number you're trying to place: 1 2 3 4 5 6 7 8 9 1 o o 2 o o 3 o o o o o o X 4 o X o 5 o o o 6 o o o 7 o o 8 o o 9 o o From here, you can safely put X in 7,3. The X at 3,9 removes it from the rest of the row (3,2 &amp; 3,3). On the top left block, X can only go into slots 1,1 OR 2,1. Not sure which, but that's sufficient, because it HAS to go in one of these two spots, in the future. That X for the top left block will knock out it being a possibility for 8,1 and 9,1. So, in the bottom left block, X has to go into 7,3. It's a powerful method when you get used to it. Without it, it's extremely difficult to not just do guess &amp; check.
If I remember correctly, the minimum amount of given numbers required to solve a Sudoku is 17. 
Which line of your code produces the error? You should be able to narrow it down and debug. 
Sorry to say I don't have much feedback for you except to say this is an awesome project that I'd definitely like to try sometime! 
If mxn to nxm means to just transpose the matrices, then it would just be A'-2*B' No need for reshape. If you actually want to change the matrix from mxn to nxm columnwise, then it's reshape(A-2*B, n, m) This is not the same as transposing, though.
Ah man this is embarrassing. I can't seem to get it to format properly. [here](http://pastebin.com/5Uf1dVWv) is the link if that works.
I have very little programming experience. Can you go into a little more detail?
Seconded. I have MATLAB R2012a student edition running on OS X 10.8.2 as well. No issues.
Analytically, the integral should be 1 when the xoffset variable is less than 1 and the integral should be 0 when xoffset is greater than 1. The issue is that when xoffset is, say, 1.2, the integral comes to .22 when I use 10 facets, .28 with 50 facets, and still .28 with 500 facets. I'm struggling to explain an error component this large that seems to be independent of the number of facets.
[link to XQuartz](http://xquartz.macosforge.org/landing/) for the lazy.
This is a very interesting point and I'm not sure how to express this approach in code. There seems to be a combination of restrictions in the [3 3] upper left matrix, the [9 1] leftmost column, and the [3 3] lower left matrix that makes this possible. Do you know of any algorithms that can do this? In addition, it is clearly the tip of the iceberg. It should be possible to extend this to combinations of more than 3 groups of numbers. However, there will be an explosion of dimensionality so I'm not sure if at some point it ends up very close to backtracking, which tends to find solutions after only a couple backtracks due to the way I order the proposed solutions. Nevertheless I find your comment extremely informative, thank you.
This is not true, unless you mean to say that the minimum number of given numbers to produce a Sudoku with a unique solution is 17. A blank Sudoku puzzle can be solved by any valid Sudoku arrangement, for example.
much appreciated I didnt even realise that nlfilter() existed 
Run "db stop if error" so debug mode will turn on when it hits an error. Then run your program and inspect the state of the variables.
This, or put a breakpoint on the line in question. When paused in debug mode, look at y. Why y? Because that's the only indexing you're doing in either of the two text() calls. My guess is that y has only one column. Some commands that might help narrow down the issue: &gt;&gt; player_stats(2:end,[2 6]) % check to make sure this comes out to what is expected &gt;&gt; size(y) % is it N-by-2? &gt;&gt; class(y) % is it double? &gt;&gt; y(:,1) % does this work? &gt;&gt; y(:,2) % does this work? 
A couple things: First off to format your code better use four spaces before each line and two blank lines before and after the code block. Second off I thought I had an answer but I was incorrect. This one is tricky.
Thanks. I'll see if I can get the formatting better in a bit, and thanks anyway for trying for an answer.
Yep, I run it without a problem. 
And I presume you installed x11?
Awesome, thanks for the help. I actually figured this out after a lot of attempts and hours on google. I do have a similar question though, I can set the min and max slider values but I haven't figured out to set the step value. All the answers I've found on google are very vague. So far i've just set the min and max and then used the fix function to make it step by integers.
Very nice! Hope that works out for you. I haven't played around much with Arduino/AVR PWM, but should do the job nicely when put inline with your op-amp. I have also found NI's tools to be handy, but slow, unfortunately.
Yes, this was a little bit ago, but I believe it prompted me to download and install X Quartz. This might have happened automatically. 
Can you please give us the exact arrays that are causing a problem?
You essentially have to model a second order ODE as two first order ODEs in MATLAB. Also, if you're looking to get an analytical solution, you'd be better off using some other software as MATLAB won't give analytical solutions for second order ODEs; only numerical solutions. Also, you're going to need some sort of initial or boundary conditions. I'm guessing x(0) = 0 &amp; x'(0) = 0 since you say "zero initial conditions". Hopefully you have initial conditions rather than boundary conditions as it's a little more difficult to write code for a boundary value problem, especially for a second order ODE. [This video](http://www.youtube.com/watch?v=fx3bl4oA_0U) helped me when I was taking a class on modeling and simulation during undergrad. Hopefully it'll help you too.
I'm guessing you're looking for the [ode function](http://www.mathworks.co.uk/help/symbolic/mupad_ref/ode-solve.html) which is a part of the symbolic math toolbox. If you don't have that, then [Wolfram Alpha](https://www.wolframalpha.com/input/?i=x''+%2B+3x'+%2B+7x+%3D+1.75t^2) is probably your best bet.
Did u rewrite this as a first order system?
Yeah, the min/max step just tell MATLAB how far to move the slider when you click either the arror (min) or the "slider trough" (max). To enforce integer values I think that you just have to use fix() like you're doing. If you haven't already, you should try putting the fix() call inside the callback of the slider so that it "snaps" back to the nearest integer when someone makes a move. Something like: set(handles.slider, 'Value', fix(get(handles.slider, 'Value'))) 
I second this. If OP can provide a .MAT file of the data used and/or reduce it down to a small array this would help in the debugging or bug identification.
[Here](http://blogs.mathworks.com/loren/2007/08/29/for-versus-while/) is a little tutorial on the use of for loops vs. while loops. Since you said WHILE, I assume it's so you can learn to use them. A while keeps on repeating over and over until some condition changes. For instance, while (I'm not independently wealthy) go to work make some money end For math, you might have some limit for some variable x = 0; y = exp(0); while y &lt;= 5000000 x = x + 1; y = exp(x); end So this loop keeps going and going until y exceeds 5 million.
You don't need to use indexes in loops. As long as it's the right shape doing a for on an array or cell array is like doing a foreach in other languages. manyPoints={'a','b','c','d','e','f'}; manyPoints=reshape(manyPoints,1,numel(manyPoints)); % Not needed, but I always do it to force the right shape for singlePoint=manyPoints disp(singlePoint{1}); end or manyPoints=rand(50,1); manyPoints=reshape(manyPoints,1,numel(manyPoints)); % Not needed, but I always do it to force the right shape for singlePoint=manyPoints disp(singlePoint); end
One more hint: if you want to create a multiplication table you probably need two loops, one inside the other. First try to create a 1-by-12 table with one loop.
Depends, do sym links actually work in Windows7? They won't follow .lnk but in OS X and Linux they will follow 'ln -s'
Have you looked at the documentation for mxCalloc or mxMalloc? That is probably the most straightforward way to do dynamically sized arrays (if that is what you are asking).
Thanks! I'll look into that.
You can use vectors or cells in *subs* and change all the variables at once. Either replace all *x* or all *a* with 0-s.
Yeah I finally figured it out B = subs(-E, x, zeros(n,1)); Thanks :)
Maxima is a free symbolic maths program. 
Look at fsolve.
One word dude. WolframAlpha.
Oh come on! That's two words with the space in between them missing.
I should clarify, I was doing Matlab homework and was upset I couldn't do this.
I think it is one word. The word is the name of a product. But I could be wrong.
You'd probably have more luck posting in a Linux subreddit than here, sorry :-(
I just use Octave and the Qtoctave gui
It is incredibly similar. and it does have m files like matlab. you can actually run most scripts and functions you would in matlab in octave. There just seems to be some very small syntax differences that I have found to be pretty easy to get over. Sometimes when I'm stuck I'll go to the matlab documentation to figure something out in octave.
Just a warning: Octave is incredibly slower than Matlab. However, it does have a GUI- search Ubuntu Sofware Center for Octave, you will get QTOctave which is the GUI frontend for octave
What version of Matlab and what architecture for Ubuntu? Also, how did you install it (from an iso, disk, tar, etc)?I have 64 bit Matlab 2012a running perfectly on 64 bit Ubuntu. 
if you search in the software center there is a package that lets you run matlab more comfortable
`matlab-support`
Possibly. I'm not too good at programming. Why did you write it this way? I did try: A= input( 'link' num2str(k) 'blah blah blah'); and that didn't work
I also tried: disp('link');disp(k);A=output('blah blah blah'); all in the same line and it displayed in 3 different lines.
Yes, it has a gui. If you start it from the command line you have to add a flag to it, if I recall correctly. I'll boot into my Linux partition and check for you. EDIT: you can run it by adding the flag "-desktop" when you launch it from the terminal.
I've only just found out about this exist command, thanks a lot, it's solved my issue!
Ah. Good to know. Thanks
You could try Scilab, which shares some roots with Matlab and is more efficient than Octave. It also offers a decent gui. It's a really good, opensource and multiplatform software. We use it daily for data analysis and simulations/modeling. 
Use nargin. Nargin tells you how many input arguments you have coming into your functions. So if Nargin==2, there is no string. If Nargin==3, you have a string to work with. You can also use varargin.
For sure, you might also look into 'varargin'. It's short for variable arguments in. It's very useful in situations when you have more than one input like this.
To expand on this, the advantage of using sprintf/fprintf is that you can control the precision with which the number is converted to string: % sprintf creates a string from the converted output X = sprintf('The value of pi is: %.7f. Thank you\n',pi) Y = sprintf('The value of pi is: %.2f. Thank you\n',pi) % fprintf used like this just writes it out to the screen fprintf('This number: %07d has some leading zeros\n', 7) Using it with the input() command: N = 5; Choice = input(sprintf('Please enter a number from 1 to %d, please:', N))
Regular Expressions. The majority of my use of MATLAB is reading in and doing basic processing of test data to output it in some presentable form. Regexp has allowed me to much more elegantly parse out things that I need when the data isn't given to me in the most user friendly format (basically always). I still have a novice understanding of regular expressions, but it's such an obscenely powerful tool it's already helped clean up my code significantly. That and the proper use of eval(). It's pretty awesome for iterative commands.
Your first step should be to go speak with your professor and ask for more information / clarification. (As an engineer, this was my biggest flaw both as an undergraduate and as a graduate student.) Perhaps s/he could explain it with drawings on a whiteboard. Second, look around the web. There are a LOT of [kalman filter examples](http://www.cs.ubc.ca/~murphyk/Software/Kalman/kalman.html) using MATLAB. 
Zero mean means that you can assume the sensor's errors will cancel each other out over a long time frame. Covariance of 1 means that the sensor will change only when the positions changes. If the object is stationary, it's as simple as taking multiple measurements and averaging them to the desired accuracy. 
This goes for pretty much any class. If you don't understand the question, you gotta ask the prof. 
No, I believe somehacker is incorrect with his comment on covariance, because 1 covariance is not the same as 1 correlation. You should implement the kalman state update functions in matlab. For example, look to wikipedia, which has all of them, or if you are using Dan Simon's excellent book Optimal State Estimation, then use those. Then create the system equation, plug in ones for the covariance measurement noise matrix, and see what happens.
Anyone?
A few things in no particular order. It would be much easier for me to evaluate this if I could copy it into matlab instead of using an image! I'm too lazy to type out those images. I recommend using "priori" and "posteriori" labels instead of "true" and "hat". There really isn't ever a time when you know the true state of a filter, except when simulating. If you do know the true state because you are simulating, you should not generate the simulated "true" states at the same time as the kalman filter. Instead, generate them beforehand and use them as an input to your function. The way you described the problem ("stationary target") says to me that the u matrix should always be zero, because otherwise it is being perturbed. You may want to set SigmaW to zero as well (assuming that you know the target it stationary). You should disentangle the way you are generating the previous U_k and then applying it to the current measurement afterwards. Also, your simulation of z_k should not be directly dependent on D_u, instead it should just be x plus noise. why does xtrue suddenly become 2? Your noise belongs in the measurements, not in the forcing itself. I think you should be setting Z_k to the random number. Otherwise things look ok, I think?
Are you using the Matlab Coder tool? What version of Matlab are you running? By using the Matlab Coder tool it is a fairly simple routine of selecting your top level function and defining your I/O. This includes support for variable sized arrays. For example you set a double array size 1 x :1000 meaning the array is variable up to a max of 1000. I think this is only available in the latest release, maybe from 2012a. Hope this helps!
It's not that bad, I think you'll be fine.
Thank you. Do you recommend any online sources for me? I think 4 months would be enough to get some basics down. 
The crash course on the sidebar of this subreddit is actually a pretty good introduction. As far as what it's good for, it's an exceptionally full-featured calculator. Do you have a group of equations you need to solve? Write them as a matrix and tell MATLAB to do it. Do you need to do some signal processing task? Put your data into a text file and tell MATLAB to deal with it. Do you need to do statistics on a large data set? Tell ... you get the idea.
I did the same thing, and then spent a few weeks for my summer internship studying and did ok. However, I can't stress enough that you do not underestimate it. It is a multi-paradigm programming language, so you could see elements of functional, object oriented, or straight up imperative programming, and you should have at least a little familiarity of each. Also, know how to write idiomatic matlab: don't use for loops, instead use vectorized operations. Untangle the mess of [] vs {} referencing through practice. Also get used to cellstr, matlab's datenum, and handle graphics. Try using matlab with the python challenge, for example. It should be able to handle most items in it. Alternatively try project euler, if you want a more number crunchy approach. Buy the mastering matlab book as well, and follow it. If you have an internship then presumably they are a possible avenue of work after college - you don't want to get off on the wrong foot.
Paste bin or 4 spaces.
If you know any other higher level programming languages then it'll be pretty easy to pick up, you just have to learn the syntax. At least, that's how it was for me.
I honestly can't tell what you're asking. I'm going to *attempt* to recreate your code in idiomatic matlab. I downloaded the mie functions to get this to (maybe???) work. Then I prayed to the dark god of mcode. Also I suspect that you are simply missing an end statement somewhere. Or maybe it is because you are using m as both an input and as a loop iterator? In any case, the following works. What are you trying to do that it does not do? function p(m,x,u) % construction of phase matrix using M+,M-,S21,D21 made of S1 &amp; S2 S=mie_S12(m,x,u); S1=S(1,1); S2=S(2,1); mplus= .5*(S1*conj(S1) + S2*conj(S2)); mminus= .5*(S2*conj(S2) - S1*conj(S1)); S21=.5*(S1*conj(S2) + S2*conj(S1)); D21=(1i/2)*(S2*conj(S1)-S1*conj(S2)); % please do not assign in a loop like that! See % http://en.wikipedia.org/wiki/Loop-switch_sequence pm = [ mplus mminus 0 0 mminus mplus 0 0 0 0 S21 -D21 0 0 D21 S21 ]; pm(:,:)% this is the result matrix function a(m,x,u) %a=pm; t=3;%t could be any new variable b=t*p_matrix(m,x,u); function result = mie_S12(m, x, u) % Computation of Mie Scattering functions S1 and S2 % for complex refractive index m=m'+im", % size parameter x=k0*a, and u=cos(scattering angle), % where k0=vacuum wave number, a=sphere radius; % s. p. 111-114, Bohren and Huffman (1983) BEWI:TDD122 % C. M�tzler, May 2002 nmax=round(2+x+4*x^(1/3)); ab=mie_ab(m,x); an=ab(1,:); bn=ab(2,:); pt=mie_pt(u,nmax); pin =pt(1,:); tin =pt(2,:); n=(1:nmax); n2=(2*n+1)./(n.*(n+1)); pin=n2.*pin; tin=n2.*tin; S1=(an*pin'+bn*tin'); S2=(an*tin'+bn*pin'); result=[S1;S2]; function result = mie_ab(m,x) % Computes a matrix of Mie Coefficients, an, bn, % of orders n=1 to nmax, for given complex refractive-index % ratio m=m'+im" and size parameter x=k0*a where k0= wave number in ambient % medium for spheres of radius a; % Eq. (4.88) of Bohren and Huffman (1983), BEWI:TDD122 % using the recurrence relation (4.89) for Dn on p. 127 and % starting conditions as described in Appendix A. % C. M�tzler, July 2002 z=m.*x; nmax=round(2+x+4*x.^(1/3)); nmx=round(max(nmax,abs(z))+16); n=(1:nmax); nu = (n+0.5); sx=sqrt(0.5*pi*x); px=sx.*besselj(nu,x); p1x=[sin(x), px(1:nmax-1)]; chx=-sx.*bessely(nu,x); ch1x=[cos(x), chx(1:nmax-1)]; gsx=px-i*chx; gs1x=p1x-i*ch1x; dnx(nmx)=0+0i; for j=nmx:-1:2 % Computation of Dn(z) according to (4.89) of B+H (1983) dnx(j-1)=j./z-1/(dnx(j)+j./z); end; dn=dnx(n); % Dn(z), n=1 to nmax da=dn./m+n./x; db=m.*dn+n./x; an=(da.*px-p1x)./(da.*gsx-gs1x); bn=(db.*px-p1x)./(db.*gsx-gs1x); result=[an; bn]; function result=mie_pt(u,nmax) % pi_n and tau_n, -1 &lt;= u &lt;= 1, n1 integer from 1 to nmax % angular functions used in Mie Theory % Bohren and Huffman (1983), p. 94 - 95 p(1)=1; t(1)=u; p(2)=3*u; t(2)=3*cos(2*acos(u)); for n1=3:nmax, p1=(2*n1-1)./(n1-1).*p(n1-1).*u; p2=n1./(n1-1).*p(n1-2); p(n1)=p1-p2; t1=n1*u.*p(n1); t2=(n1+1).*p(n1-1); t(n1)=t1-t2; end; result=[p;t]; 
I suspect that this might be a "usual" problem because you're not constructing your functions correctly. Your code begins like this: function p(m,x,u) You failed to specify that your function should have an output. It **should** look like this: pm = function p(m,x,u) Basically, if you're using a function and not a script then any variables you create are not accessible after the function has finished running unless you specify them as output variables as shown, above. Edit: Also, pastebin or 4 spaces. 
As an alternative to 'varargin,' you might look at 'nargin' which is an integer variable created each time a function runs specifying the number of arguments passed to it. So, instead of using the 'exist' command, you could write: function out = ToAnyBase(in,b,str) if nargin &lt; 3 str = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'; str = str(1:b) end
This actually explains it pretty well!
Those are really good suggestions. Thank you!
Thanks!
Yes, this is the answer you are looking for.
A.) Do you understand how to do this on paper? People will be much more inclined to help you if you show that you understand the mathematical process and just have no idea how to express it programmatically. B.) Have you spoken with your professor and/or your TAs? You're paying these people a fair amount of money to educate you, you might as well take advantage of it.
Yup I do understand how to solve on paper. I have class and discussion as well as office hours today. I will be asking for helping from all the sources I have available. I just figured it couldn't hurt to ask here as well. 
Are you sure your school doesn't have MATLAB available for free to download? A lot of major uni's do, especially if you have courses based in MATLAB. Otherwise darkscout has the right idea. 
Should I be the inner loop? It's i&lt;j where as you have j&lt;i.
c(i,1)-c(j,1) c(i,2)-c(j,2) c(i,3)-c(j,3)
Your code and your formula don't seem to match, consequently it's not clear to me what you're trying to do. That said, nested for loops in matlab usually mean you're doing something wrong.
In this case i and j are symmetric. But yeah.
No loops should be needed. Use MATLABs strenghts: ri6 = R^-6; a = ri6^6 - 2*ri6; UT = triu(a,1); disp( sum(UT(:)) ) (Code is untested)
I'm not exactly sure what you're asking for. What kind of differential equation are you trying to solve? If you know how to do it on paper, you should be able to translate it into code, but I'm not sure "where" you are in that process
The problem is I have no idea on how to code at all. But I did end up getting a ton of help from the TA. I was in the right ballpark but since I know nothing about writing code I would of never found my way to figuring it out. Basically I needed help indexing and ordering my code properly. I apologize for not being able to convey that to you and the rest of /r/matlab but I knew so little I couldn't even ask what I needed help with. Thanks though
Sorry I didn't get a chance to respond earlier, my next question was going to be where you were in the course. I would have hoped your instructor at least touched on loops before assigning this problem.
1) First. Holy shit formatting. 2) We're not here to do your homework. Find a specific question in that wall of text and ask it. "I'm having trouble doing the quadratic equation numerically". 
What is eps? So I did that, and ran it... And got this... &gt;&gt; q'-x' ans = 0 0 0 0 4.44089209850063e-16 0 Very close to 0 I know, but not exactly 0 (although I know it should be)
 eps Floating-point relative accuracy
Ahh no worries thanks anyway. We discussed them this morning actually. The TA did an awesome job helping me and I got it done. 
It's like giving your data a little hug. 
If you're testing for equality, another way around this is to test for "close enough:" x=-3:1.6:6; q=linspace(-3,5,6); MyTolerance = 0.000001; (q-x)&lt;MyTolerance
Just to clarify, you won't be able to insert comments into the .M file that is currently running and doing the parsing. You'll have to be operating on another file. Also, as far as I know, MATLAB's File I/O functions don't allow for insertion of text into an existing text file. This means you'll have to generate a new file. That said, I would look at the fgetl() command since you want to get a line at a time from the file. When you read in a line, it comes in as a row vector of characters. With this, it's easy to strip off 80 characters at a time (some extra logic will be needed to make sure you don't hack words in half). Anyway, since a string is just a row vector of characters you can perform indexing just like if it's a numeric vector: fakeString = char(64+randi(26,1,125)); % some fake data fakeString(1:7:125) = ' '; % insert some spaces to create "words" fakeComment = ['% ', fakeString]; % add the '%' to the beginning
So...which parts did you actually try?
How do I post my code so you all can try it out. I think I have it correct.
 Finally figured out how to post code. Hopefully this looks right! % Initialize simulation variables SigmaW = 1; % Process noise covariance SigmaV = 1; % Sensor noise covariance A = 1; B = 1; C = 1; D = 0; % Plant definition matrices maxITer = 100; xtrue = 10; % Initialize true system initial state xhat = 0; % Intializ Kalman filter initial estimate SigmaX = 1; %Initialize Kalman filter covariance u = 0; % Unknown initial driving input: assume zero % Reserve storage for variables we want to plot/evaluate xstore = zeros(maxITer+1,length(xtrue)); xstore(1,:) = xtrue; xhatstore = zeros(maxITer,length(xhat)); SigmaXstore = zeros(maxITer,length(xhat)^2); for k = 1:maxITer, %KF Step 1: State Estimate time update xhat = A*xhat + B*u; % use prior value of "u" %KF Step 2: Error covariance time update SigmaX = A*SigmaX*A + SigmaW; % [Implied operation of system in background, with % input signal u, and output signal z] u = 0.5*randn(1) + cos(k/pi); %for example... w = chol(SigmaW)'*randn(length(xtrue)); v = chol(SigmaV)'*randn(length(C*xtrue)); ztrue = xtrue; % z is based on present x and u xtrue = A*xtrue;% future x is based on present u % future x is based on present u %KF Step 3: Estimate system output zhat = C*xhat + D*u; %KF Step 4: Compute Kalman gain matrix L = SigmaX*C'/(C*SigmaX*C' + SigmaV); %KF Step 5: State estimate measurment update xhat = xhat + L*(ztrue - zhat); %KF Step 6: Error covariance measurement update SigmaX = SigmaX - L*C*SigmaX; % [Store information for evaluation/plotting purposes] xstore(k+1,:) = xtrue xhatstore(k,:) = xhat; SigmaXstore(k,:) = SigmaX(:); end figure(1); clf; plot(0:maxITer-1,xstore(1:maxITer),'k-',... 0:maxITer-1,xhatstore,'b--', ... 0:maxITer-1,xhatstore+3*sqrt(SigmaXstore),'m-.',... 0:maxITer-1,xhatstore-3*sqrt(SigmaXstore),'m-.'); grid; legend('estimate','bounds'); title('Kalman filter in action'); xlabel('Iteration'); ylabel('State'); figure(2); clf; plot(0:maxITer-1,xstore(1:maxITer)-xhatstore,'b-',... 0:maxITer-1,3*sqrt(SigmaXstore),'m--',... 0:maxITer-1,-3*sqrt(SigmaXstore),'m--'); grid; legend('Error','bounds',0); title('Error with bounds'); xlabel('Iteration'); ylabel('Estimation Error'); 
Wolfram Alpha can do this [with an ugly-ish equation](http://www.wolframalpha.com/input/?i=plot+a+heart&amp;a=*C.heart-_*PlaneCurve-&amp;a=*DPClash.MovieE.heart-_*HeartAftabPictures.dflt-) But I attacked it in MATLAB with simpler geometry. Here is my code, which builds the heart piecewise: %% The Lobes xLobe = linspace(-1,1,100); yLobe = sqrt(1-xLobe.^2); % Left Lobe: rotate it 45 degrees Rot45 = [cosd(45) -sind(45); sind(45) cosd(45)]; xyLL = Rot45*[xLobe; yLobe]; % translate it [-1 1] xyLL = bsxfun(@plus, xyLL, (sqrt(2)/2)*[-1;1]); plot(xyLL(1,:), xyLL(2,:), 'Color', 'r', 'LineWidth', 5) hold on % Right Lobe: rotate it -45 degrees Rotn45 = [cosd(-45) -sind(-45); sind(-45) cosd(-45)]; xyRL = Rotn45*[xLobe; yLobe]; xyRL = bsxfun(@plus, xyRL, (sqrt(2)/2)*[1;1]); plot(xyRL(1,:), xyRL(2,:), 'Color', 'r', 'LineWidth', 5) axis equal %% The Slants xSlant = xLobe; ySlant = zeros(size(xSlant)); % Left Slant: rotate it -45 degrees xyLS = Rotn45*[xSlant; ySlant]; % translate it xyLS = bsxfun(@plus, xyLS, (sqrt(2)/2)*[-1;-1]); plot(xyLS(1,:), xyLS(2,:), 'Color', 'r', 'LineWidth', 5) % Left Slant: rotate it -45 degrees xyRS = Rot45*[xSlant; ySlant]; % translate it xyRS = bsxfun(@plus, xyRS, (sqrt(2)/2)*[1;-1]); plot(xyRS(1,:), xyRS(2,:), 'Color', 'r', 'LineWidth', 5) hold on 
Which parts of EE interest you? There are far too many areas of EE to address them all. Controls? Compression? Image/Video processing? Signal processing? circuits? RF? power? machines? solid state devices? photonics? More of the math-y stuff like optimization or information theory? Which tutorials have you watched? Which interested you?
Ok that got me a % on the front of string awesome! And I can use this to find my spaces: spaces = strfind(fakeString, ' '); finds spaces in string This will actually give me a 1 x N array , where N is the number of spaces. The values of the vector are the positions of the zeros. so given the position of the zeros i should be able to make an if then or case statement to cut off the string... So what we have so far in psuedocode and real code: while string is longer than 80 fakeComment = ['% ', fakeString]; % add the '%' to the beginning spaces = strfind(fakeString, ' '); % finds spaces in string find less than 80 and cut string and put it in a new array and set counter to say it is line i is that line do something to trim string at i=i+1 end while then just loop through I and stuff it into a new file 
Sorry that "max(histogram) *2" thing makes no sense. Forget that. 
Aww :)
There's no point in striving for a more complex looking solution if the simple one does what you need it to do.
A really simple way is to just throw out all data below a certain energy level. qq = find(energy(:) &lt; 0.03); new_energy = energy(qq); new_time = time(qq); A more complex method is to keep energy values that occur less frequently than a certain value. Example, if you kept stuff that was only less frequent than 30%, you'd get everything larger than 0.05, but in another sample you might get stuff that's larger than 0.04, etc. This would allow you to compensate for different background noise situations or different microphone gains, etc. 
This will heavily depend on your knowledge and general programming experience. I learned MATLAB mostly through implementing all sorts of numerical methods, and Simulink (which you should learn if you're planning on doing comms) through simulating communication systems, both analog and digital. I don't know of any particular books or websites to help you, but a couple of ideas taken from my courses: **Comunications:** * Do all sorts of modulations and demodulations, with noise. Roll your own code to do it, and then try it in Simulink using the Comms Toolbox. This gets fun when using real-life signals; same with DSP (some basic filtering, FFTs, spectrograms). Take out a comms textbook and compare your simulation results to theoretical expectations. * Error control coding schemes are also good to try procedurally and then in Simulink. Bonus points, simulate a complete communication system from baseband coding to error detection and correction. **Control:** * Simulate (controlling) an inverted pendulum. * Simulate an autonomous robot under some sort of control algorithm and sensor framework. Include plots of the robot's beliefs and real state. I did something like this last semester for a differential-drive wheeled robot using an EKF with a variety of sensors. (Will edit if something else comes up.) Basic MATLAB is pretty easy to pick up if you have some C/C++ exposure. More advanced usage begins to show its true power (and quirks), but MathWorks has pretty good support, and F1 is your friend. Good luck, and have fun!
Why not look at the shape of the histogram? You could look at the max occurrences and set threshold as the energy level at half max. Or find the steepest part of the slope (usually the middle). Or find the inflection point (where the histogram starts to become flat (around 0.03). Just some suggestions. 
I am not completely familiar with this domain, but it sounds like you want a histogram-shape-based automatic thresholding method similar to [Otsu](http://en.wikipedia.org/wiki/Otsu%27s_method)
it is important to convert the energy in decibels, because that is the way humans hear it. 20*log10(energy) would give a more natural distribution. 
also i would say under normal conditions "silence" is the lowest energy possible, so find the lowest value (in decibels) and to be sure take double that as a trheshold? if there is a lot of irregular background noise this wil not work as well.
I'm glad you're getting along well. Just an FYI: the textscan() command is amazing if you're importing formatted data from text files. It can hide a lot of the complexity of parsing line by line with fgetl, fscanf, etc.
This is a great, and informative answer. The only thing I can add is that those pages were not visible in google books when I tried to look at them, and instead I went to mathwork's http://www.mathworks.com/help/phased/examples/constant-false-alarm-rate-cfar-detection.html which outlines a little bit of the theory and shows some examples. I have a feeling that the book is more complete, but for me it was not available.
Use coder.typeof. Eg: codegen abc.m -args coder.typeof(0,[1000 1],1)
Uhm, I found it quite hard to understand what you meant. If you know how to plot one, then you can use the 'hold on' function after your first plot then plot the second. It would look something like this: plot(bla,bla); hold on; plot(bla2,bla2); hold off;
Okay. The book is Radar Analysis and Signal Processing Using Matlab. [Try this link](https://www.google.com/search?q=radar+signal+analysis+and+processing+using+matlab&amp;oq=radar+signal+analysis+and+processing+using+matlab&amp;aqs=chrome.0.57j61j0j62l2.6514&amp;sourceid=chrome&amp;ie=UTF-8#q=radar+signal+analysis+and+processing+using+matlab&amp;um=1&amp;ie=UTF-8&amp;hl=en&amp;tbo=u&amp;tbm=bks&amp;source=og&amp;sa=N&amp;tab=wp&amp;ei=q04UUbLoFKjo0gHcxYG4Cg&amp;bav=on.2,or.r_gc.r_pw.r_qf.&amp;bvm=bv.42080656,d.dmQ&amp;fp=919f4b0fe5476b9a&amp;biw=1314&amp;bih=783) and see if it shows up. If not, here is [figure 7.17](http://imgur.com/nadexzV) and equation 7.110 is: Pfa = 1/((1+K0)^M) which allows you to solve for K0. M is defined in figure 7.17. Let me know if you have any questions. I do this kind of detection regularly.
I got everything put together and it works beautifully. I used Simulink to program the device to record from an analog input, perform some filtering/scaling, then write the signal out as a parallel digital signal across 16 digital pins. I put those into a DAC chip, coupled the output to an RC filter and voltage follower, and get beautiful signals out around 1 kHz, which is far faster than I need. I'm definitely now a big fan of Arduino. Building this saved us a few grand!
Thanks! 
Sort doesn't mutate your argument. You have to store the return value. Right now the sort() is for nothing.
Also, your sort,diff,zeros,find can bascially replaced with unique() and using its three return parameters
Not correct, he never allocated 1e6 x 2e6. 2e6 is just parameter for randi() to say: Give me random integers between 1..2e6. He'll get n x nr_sims size
http://undocumentedmatlab.com/blog/undocumented-profiler-options/ http://undocumentedmatlab.com/blog/profiling-matlab-memory-usage/ 
I think there's a much simpler, less memory intensive way of doing this. Recognize that exactly one person wins every day, because everyone picks a different number and there are the same number of lotto numbers as there are people. So, it seems equivalent to me to *assume* that the winning lotto number every day is, say, 1, then randomly choose an integer between 1 and 2,000,000. You've got a winner if the random integer is 1. Do that for n days and count up the number of wins you've got. If it's 2, that's a successful trial. At the end, divide the number of successful trials by the total number of trials to get the probability. Here's some code.. my matlab is a little rusty so the syntax might be wrong, but it should give you the gist: n=input(' Please enter the number of days: '); nr_sims=1e6; success_count = 0; for i = 1:nr_sims r = randi(2e6,1,n); wins = sum(r==1); if wins == 2 success_count += 1; end end probability = success_count / nr_sims; I swiped the idea for the sum(r==1) line from [here](http://stackoverflow.com/questions/2880933/how-can-i-count-the-number-of-elements-of-a-given-value-in-a-matrix). edit: made the code a little less obviously pythonic and fixed the call to randi to return the right thing :) edited again: Upon further thought, I am wrong, I think. If I roll a pair of dice and I want to know the probability that they will come up the same, then the probability that the first die will come up with a certain value is unimportant. Only the second die matters. The probability that the second die will show the same value as the first is 1/6. Similarly, the probability that some person will win on the first day is 100%. The probability that the same person will win on the second day is 1 in 2,000,000. So I think the trials should only be done for n-1 days. Change r = randi(2e6,1,n); to r = randi(2e6,1,n-1); And then change the test for wins to wins == 1
Solution 1: Quite bad, but: h = waitbar(0,'Taking a while to calculate'); n=150;%input(' Please enter the number of days: '); nr_sims=1e6; Match_sum=0; for i=1:nr_sims h=waitbar(i/nr_sims); R = randi(2e6,n,1); sort(R); diff_R = diff(R); Match = (sum(diff_R==0)&gt;0); Match_sum = Match_sum + Match; end ratio = Match_sum/nr_sims; disp(['Probability of winning twice during this time frame: ', num2str(ratio)]) OR subdivide your current algorithm in smaller chunks. Determine the size of nr_sims your computer can handle (e.g. 1e4), and apply a for loop, performing 1e6/1e4 loops, and storing the average ratio.
There are a number of robot arm examples on the file exchange http://www.mathworks.com/matlabcentral/fileexchange/index?utf8=%E2%9C%93&amp;term=robot+arm you really just need to measure the position in space for any given component to determine collision. ML/SL will not automatically stop motion if a collision occurs, it needs to be modeled in the system.
I just want to add this as a separate comment, in case you don't pay attention to my longer one. A million trials is no where near enough. Think about it. If n = 2, there's only a one in 2 million chance that the same person will win both days. If you only do a million trials, there's a very good chance that the probability you calculate will be 0, which is obviously wrong.
The way I see it, (similarly to what Rostin has said): 2 mil people pick a number between 1 and 2 million, uniquely. So, if you generate (say) 14 random numbers between 1 and 2 mil (representing 14 lottery drawings), and two of those numbers are the same, that means a person has won twice within 14 days. nDays=14; nSims=2e6; nSucc = 0; for i = 1:nSims r = randi([1 2e6],1,nDays); if length(r)~=length(unique(r)) nSucc=nSucc+1; end end probability = nSucc / nSims I got probability = 5.05e-005 from running this. edit: This is the probability of "someone" (anyone) winning twice. The probability of a specific person winning would be different.
ahh yes, my bad.. not sure how I missed that
 A = ['a1';'a2'; 'a3'; 'b1'; 'b2'; 'b3']; A=cellstr(A); B = [234, 12, 356, 45, 25, 316]; for i=1:length(A) C{i}=strcat(A{i},'=',num2str(B(i))); end 
 A = ['a1'; 'a2'; 'a3'; 'b1'; 'b2'; 'b3']; for i=1 : length(A) eval([A(i, :) '=' num2str(B(i))]); end This will work as well. Djent_Reznor's way is much better, but I think this way demonstrates how Matlab treats arrays and vectors a bit more bit more clearly. Replace "eval" with "disp" to see exactly what you're evaluating. Edit: Forgot the first step 
True, and the other method is definitely the way to go if you're gonna be implementing it a lot, but it seems like OP is pretty new to matlab. I know I didn't have to start using cell arrays for awhile after I started learning matlab, and I don't think there's any need to complicate things more when OP's just learning to concatenate. Though if OP really does want the array C in the format he has, there's really no choice besides Djent_Razor's way.
Thanks a lot! For some reason Djent_Reznors way didn't seem to work, but this way worked very well. I really appreciate your help, guys!
Aha. And I guess there is no way around it is there? 
Someone with more experience than me may have a better answer, but no, I don't think so. You've reached the limit of this algorithm. If you wanted to calculate more digits you'd need to use a different algorithm or different software.
also, try using vpa() to display your results, it should show a longer string of decimal place.
i find that i could estimate Pi up to 48 decimal place with the series
Actually, 1/Inf = 0, not NaN. EDIT: Turns out that the numerator in the k=42 term also goes up to Inf, so Inf/Inf = NaN.
Thank you very much. Quick question though, is there a reason you made i a column vector instead of keeping it as a row vector?
Primarily out of habit and preference - I tend to visualize vectors better as columns. Also, people seem to write vectors as columns almost as a convention. But for this case, it's not essential to write it as a column.
They're also much nicer to read with matlab's output style. Rather than having a list saying 'col 1' 'col 2' 'col 3' etc and starting a new line dependent on width of window, you just get a nice column of numbers when outputting.
I think you are going about this is a confusing way. Your data is calculated as a function of radius and position. So plot all those points rather than just plotting them two at a time. plot(radius,temp_surf,'x') %This should plot all your calculated points as a function of position. If you want to plot a smooth curve between the points you need a functional model for it. You've solved the heat transfer problem at the interface between layers, so you should be able to solve it within a layer pretty easily. Then just plot the internal points with a line marker type. Which will end up looking something like this note the '-' marker type. Use 'help plot' to get more information about plot styling. plot(internalpoints,internaltemperatures,'-'); You can't just connect the points with logarithmic interpolation because the function should be different for each shell layer of your composite cylinder due to the different material properties, and you need more than just two end points to get the correct logarithmic interpolating function. 
Sorry, A is the matrix. I used this code for random symmetric 2x2 matrices and now I need it for random symmetric 3x3 matrices so for example A = [6,3,7;3,2,1;7,1,5] and I need x to be a random vector that lies on the unit sphere.
A quick Google shows that it's [this question sheet](http://homepages.warwick.ac.uk/~masbu/MA124_asq_5_11.pdf)
ah for an assignment aye. Its perfectly described on the wiki page. The only new thing you need is to define another angle and insert that into the formula for spherical co-ordinates ;)
If you get your x and y data in vectors, you can use cftool to plot the data as points and a log fit.
I don't know why it's a problem. This is a useful resource for any help, and if people are willing to answer the question then why not?
Agreed.
What is the point in going to school to learn if you're just going to get someone to do your homework? Plus, the side bar say so! &gt;matlab code tricks, discussion, questions; but we don't do your homework!
There is a difference between "I don't understand how to do this one bit" like this: http://www.reddit.com/r/matlab/comments/17yzs2/checking_for_equality_with_error/ And a wall of text that is obviously the homework such as http://www.reddit.com/r/matlab/comments/17ybbk/hello_rmatlab_im_having_some_trouble_with_this/c8a22sf The second, the OP made no attempt at even formatting the question.
The negative sqrt of a number is the same as the positive square root of the same numerical value *i, right? 
I'm not completely sure what you mean but if you mean programming code like this it's just to put four spaces in front of a new line.
Thank you !
Thanks this is really useful !
I kind of wish the four spaces, or common code pasting websites were on the sidebar right at the top.
Because Reddit's primary demographic is 18-25 year old males which is the age most people go to college. Most people who are using Matlab either have a license for work or license from school. Guess where the biggest overlap of redditors and Matlab users is going to be: 18-22 year old engineering students. 
This can very easily be done straight from the MATLAB editor. If you have your tab key defined to insert 4 spaces (the default, I believe, in MATLAB. Go to Preferences-&gt;Editor/Debugger-&gt;Tab), you can do this*,**: **CONTROL-A** (selects all of the code - alternately select just what you want) **TAB** (inserts 4 spaces in front of every line) **CONTROL-C** (copies the selection to the clipboard) **SHIFT-TAB** (undoes the insertion of 4 spaces) **ESCAPE** (deselects the code) **CONTROL-V** (pastes into reddit comment window) %% this is some fake code I = rand(100,100,3); imshow(I) title('this is my fake image') * hot keys will vary by platform or altered preferences ** for some reason, the first line never gets its 4 spaces, so you have to insert those manually
Good point! But I was thinking of a more generalized form that extended to other roots. for example the seventh root form of the equation: "x(n+1)=x(n)-(((x(n))^ 7)-P)/(5*(x(n))^ 6)"; the answer approaches the proper answer in radians without an angle value , but not the *real, imaginary* type of answer I was thinking of. 
As simply as that. Thank you very much. This is very useful to me !
I am a female chemical engineering student that is having to take a numerical methods course for my degree. This course is primarily matlab based with no textbook and no real instruction. I have had issues in learning the material because of this and I always do an exhaustive google and mathworks search before I post anything on here. I have been very lucky to have some people assist me with my assignments, and others have even gone above and beyond to show me how to apply better tools than what I was supposed to be using. I understand some of you may be frustrated answering some questions that you think are very basic, but the assistance that I have received is very much so appreciated. That being said, I would never post an entire homework problem and expect someone to do it for me, but rather, I post my specific issue within the code I am trying to write. Once again, I think you are all wonderful to assist when I have issues and am extremely grateful for all the assistance that has been provided. 
I think a lot of people learn MATLAB initially through having to do homework in engineering or math or whatever. It makes sense that if this is their first exposure to MATLAB, all they really have to ask about is what they're trying to do -- which is their homework. Should I put something more explicit in the sidebar?
I think you're calling exp wrong. When you want e^ something, call it as exp(something). I think you're typing exp^sin and exp isn't a variable that matlab knows what to do with. exp() is a built-in function so calling it as such gives the right idea The code below gives what you want. f=inline('exp(-sin(4*x))') 
I'm guessing this is a rhetorical question, but in case it isn't: Very few people go to school to learn. They go to get a credential so that they can get a well paying job and have a comfortable, middle class life. Also, with the exception of possibly electrical engineering students, most people who are required to learn Matlab probably hate programming and plan on never doing it again once they finish their numerical methods course. Source: Two-time numerical methods TA 
Agreed on the first part definitely. Disagree on the second somewhat. Neuroscience grad student here who loves MATLAB and coding (but I see your point). It's a very select group of people who would use programming after school.
This is a good suggestion.
this is very true, thanks for that! guess i'm just too used to the LaTex typing by now
This is only mildly on topic, but it's as good a place as any to harp on it. Probably most of their teachers suck. I am fully in favor of engineers and scientists learning how to program. I think it's an essential skill for a technical career. But when we want engineering students to learn math, we send them to the math department. When we want them to learn physics, we send them to the physicists, and to the chemists to learn chemistry. Why do we insist on teaching them programming ourselves instead of sending them to the experts in the computer science department? I'm afraid part of the reason is that many of us view programming as an arcane art that we take great pride in having mastered and, paradoxically, also a trivial field of study that doesn't deserve our respect. ("Those computer scientists aren't real scientists/engineers.. what do they know?")
Alternatively, try using f = @(x) exp(-sin(4.*x)) 
Your advice helped out! Thanks so much, we went back in an solved for the temperature distribution and used a for loop to plot the distribution between each layer. Thanks so much! 
How does that transform that AO Index from a serially correlated index to an independent index?
Can you be a little more specific about what you mean by serial correlated and independant with respect to the data you linked? To me I see one data set over time in the link you gave.
I am working with this AO index and also geopotential heights. The AO index is serially correlated meaning indices in the past affect indices in the future thus the data is dependent on itself. The other dataset I am using (not listed here) is Geopotential heights at 500milibars in the atmosphere and that by nature is not serially correlated and thus independent.
Autocorrelation is the cross-correlation of a signal with itself. Informally, it is the similarity between observations as a function of the time separation between them. It is a mathematical tool for finding repeating patterns, such as the presence of a periodic signal which has been buried under noise, or identifying the missing fundamental frequency in a signal implied by its harmonic frequencies. It is often used in signal processing for analyzing functions or series of values, such as time domain signals.
You can ask homework questions, like what's the best way to do something, A or B. That's a homework question without being too dishonest. I understand now that darkscout was referring to posts more like [this one](http://www.reddit.com/r/matlab/comments/17ybbk/hello_rmatlab_im_having_some_trouble_with_this/) but my response to idiots who post such things is: "no one will help you if you're so obvious and clearly not trying" and I think that they will naturally be downvoted. As you say, it's in the MO that we don't do other people's homework...but that doesn't mean questions can't be based on homework trouble.
So is the general problem that you want to remove the autocorrelation within your variables before comparing them? Or instead that you want to find a statistical test in which the autocorrelation is taken into consideration when calculating p? 
Additionally, regarding the first question, I want to remove the autocorrelation (AKA Serial correlation) from the Arctic Oscillation Index only... The geopotential heights are already independent.
Have you looked at the 'filter' command to remove auto-correlation (estimate auto-correlation coefficient)?
Also to be honest, I'm not sure if there is one! I think your best bet is to look into using an ARIMA method to detect and remove trends. Here's a tutorial I found online: http://userwww.sfsu.edu/efc/classes/biol710/timeseries/timeseries1.htm Is the autocorrelation smooth around the zero lag, or is there distinct periodicity? If the latter, then maybe use a whitening transformation or even PCA on a matrix where at least one column contains the original data and the remainder contain time shifted versions of the data (you can choose the relevant time lags based on the autocorrelation function). Both will return matrices with uncorrelated columns. I might go with PCA in this case, actually. 
For the record, this is known as an [anonymous function](http://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html?s_tid=doc_12b) and (in my experience) is used more often when passing functions into other functions such as with optimization, fitting, and some filtering operations. I've seen it mentioned, though I can't find actual documentation, that inline functions are slower.
I've been using anonymous functions a bunch but these 3 blog post of Loren@Mathworks were great &amp; I learned a bunch: http://blogs.mathworks.com/loren/2013/02/07/introduction-to-functional-programming-with-anonymous-functions-part-3/
There's also a new book called MATLAB for Psychologists which includes a chapter or two on Psychtoolbox. I haven't read it so I can't vouch for it. On a related note, there's also a new book called Modeling Psychophysical Data in R which include a brief introduction to R. Both are available through Springer. If you are at a university, your university might have access to both of those books for free online.
Oh this is beautiful. I was planning on learning Python then trying to learn MATLAB. I'll give this a whirl though and try to find the books in my library. Thanks! 
I agree. As a first step, I'd recommend setting a breakpoint and debugging your function to verify that floating point vs. fixed point is actually the issue.
https://gist.github.com/anonymous/4773789
Your user name is pretty great OP. I wish i knew how to solve your issue, but i wanted to post that anyway. 
plotyy.
You can use the copyfile function with a wildcard to copy all of the text files to to each folder as you create it. copyfile(['*.txt',folder) 
I have an idea! Do your own homework. Google first when you get stuck. Ask a more specific question about what you're confused about showing you put a sliver of effort in; get real answers. Good luck!
Not perfect, but you can do this easily: A = ['a1'; 'a2'; 'a3'; 'b1'; 'b2'; 'b3']; B = [234; 12; 356; 45; 25; 316]; C = strcat(A,'=',num2str(B)); If you want to get rid of the awkward spaces and put it into a cell array, you can just alter the 3rd line: A = ['a1'; 'a2'; 'a3'; 'b1'; 'b2'; 'b3']; B = [234; 12; 356; 45; 25; 316]; C = strrep(cellstr(strcat(A,'=',num2str(B))),' ','');
no problem, that's exactly why I asked for a pastebin link, formatting on reddit is an issue in itself :)
You have a nice start here, but I wanted to present a more scalable example: SourceFiles = fullfile('C:\Whatever', '*.txt'); for m = 1:5 DestFolder = sprintf('Folder_v%04d', m); mkdir(DestFolder); copyfile(SourceFiles, DestFolder) end
Some of her constructs are very strange to me, because in my mind anonymous functions are only needed when you can't define a subfunction or reference an existing function. I kind of wish that she had used a mix of both named functions for things like her "if" structure and then better anonymous functions utilizing those named functions. If an anonymous function is of general utility then it shouldn't be anonymous. It should instead be in some library.
 uint8(floor(double(a)/double(b))) where a &amp; b are a uint8. It's just how fixed point math works. Edit: Simulink gives you the option 
 help histc
You need to clear and redraw every time but you capture the screen and make a movie. http://www.math.canterbury.ac.nz/~c.scarrott/MATLAB_Movies/movies.html (There are other ways by getting the handles of each of the plots clearing some and not clearing others but it's more trouble than it's worth). 
Thank you so much. Using your code, I found out the problem is in (r.*t-x.^2).^(1/2). When "t" takes the initial value "up", the value (r.*t-x.^2) is supposed to be zero but matlab gives a floating point answer -7*10^(-13) which causes a complex number in fcdf_input1. Now I force any smaller enough value to be zero by creating https://gist.github.com/anonymous/4946143 All the problem are then solved. I truly appreciate it.
"Is now empty" it was full before?
Its a script that I was running before. What I mean is now when I try to open it in the editor there is no longer any code. Its just blank
The editor crashed and wiped the file. Re download it. You do have backups, right?
The image histogram is not normal, so fitting a normal distribution to it wont work. You probably wont find a single distribution that fits that histogram, it has several modes and doesn't look like a standard distribution. You may be able to combine two histograms and take the max. For example, the middle (around 150) looks normal, but the peak around 50 looks more like an exponential distribution. Long story short, you're probably not going to be able to find a single closed form expression for a distribution that will fit your histogram. You may be able to find two and say newHist = max(hist_1, hist_2); Where hist_1 and hist_2 are computed using segments of the total histogram. Plot hist 1/2 individually on the original histogram and tweak the params until you can take the max of the two and get the original.
Whoops I forgot about this post - What I ended up doing was using the distribution fitting app and changing the distribution to inverse gaussian. I changed the histogram bin to 'integer', which removed the averaging. I also had to create an exclusion rule to remove the first 5 columns because of how many black pixels there were in each pic (black pixels = no data, appears as 0 intensity). This basically solved everything. I'm now able to compare variances, lambda value, and mean across the histograms to see if statistically significant trends emerge. The only thing I'm having trouble with now is how to pull mean/lamda/variance from the distribution fitting app. I have to copy it one at a time to excel to compare them.
The OP probably did not like the answer!
What are you using as a compiler? And have you successfully compiled code into a mex file from the examples you followed?
I am using Microsoft Visual c++ 2008 Express with Visual Studio 9. And yes, I've managed to compile and run a few of the simplest examples from this list (http://www.mathworks.com/help/matlab/matlab_external/table-of-mex-examples.html) including explore, mexfeval, and arrayProduct.
What kind of errors are you getting? Have you you made sure that the header files that are referenced in your code is in the working directory (same as the code)? (I think you can also point to the header files in visual studio if they're in another directory, I've messed up this step before)
It's not that I'm getting an error... it's that I'm having a hard time wrapping my head around the code well enough to even identify where I should pass in the inputs/define the outputs... I know I need to #include "mex.h". Further, I need to make some variable definitions related to my inputs/outputs. This is where I'm having trouble... and I believe it's mostly due to the fact I have a very poor understanding of c++, rather than the lack of matlab ability. Thanks for your help, and sorry for the vague question...
There's three relatively easy ways. The easiest is as follows. Save your data in a variable, e.g., x = [ 23 45 1 3 4 ...]; Then, try "figure; hist(x);" You'll see a histogram. If you want to change the number of bins, try "figure; hist(x,50);" here, you get a histogram with 50 bins. if you want to output the frequency and bin centers, do "[H C] = hist(x,50);" and H will have the frequencies, and C will have the corresponding centers. If you'd like, you can specify the edges of each bin (the linspace() function in combination with hist() or histc() may be helpful in this case). See the help documentation for hist and histc for documentation. 
I have been the master of stumping reddit lately. redditors hate my problems. 
What is the question?
No, this isn't homework. It's research related. I'm not very familiar with C++ or .mex files in general, but thought I might try to use a well established, efficient C++ implementation rather than writing my own.
Great, I'll look into this! Thanks for the advice. The reason I asked a mex specific question is because I thought that was the only way to accomplish something like this. Like I said, I'm not familiar with linking C++/matlab. Edit: That algorithm doesn't allow for lower bound constraints. Honestly, I appreciate your feedback, but would appreciate it more if you dropped the baseless accusations...
 quiver
You will use: odeopts=odeset('Mass',M); [t x]=ode15s(@odefun,[t0 tf],x0',odeopts); But be careful, usually when you have a mass matrix you are using a second order differential equation. What I personally prefer to do is calculate M^-1 outside the ode function and pass to one of the ode solvers like: Minv=M^-1; [t x]=ode45(@odefun,[t0 tf],x0',[],Minv); function dx=odefun(t,x,Minv) This makes it easier to separate your integrator states.
I'd be really surprised if any homework actually had mex. It's a pretty 'low level' function that I've seen used most in TLC code generation and implementation of old algorithms from fortran or C. Not just that he actually has gone through and done some basic Mex stuff plus the question doesn't read like a homework problem (unlike the other ones around here). 
Give it vectors.
any idea on getting error elipses?
 hold on 
My inexperience, more than anything. So far, it looks promising.
Thanks, I tried it with axis(AX(1),[0 4 0 250]); axis(AX(2),[0 4 0 3]) ; 0 to 4 being the time span (x axis), and the second being the vertical, but for some reason they still keep coming out overlapped on the x and secondary axis. I'll keep trying.
Come on dude, there are plenty of reasons to use MEX that are not homework related, chill out a bit eh?
Now that I've fiddled around with it, it actually works better than I expected and solved my problem. Thanks.
Yeah I am doing a project currently where I had to do a bit of MEX work. I had some C programs that we needed to port over to MATLAB, and MEX seemed like the most straightforward way. And yes it is a "mess, clunky, and an out-dated interface", which is why I am not surprised to see people asking for help.
You need to run your command ` axis(AX(1),[0 4 0 250]); axis(AX(2),[0 4 0 3]) ;` after *each* call to yyplot. Are you doing that?
Jesus christ, these are the legitimate 'wtf matlab' questions that belong here. He's already done the hard part.
This worked! Thank you!
I guess this is the same concept as the previous statement, that worked, but thanks for the help!
I'm not the one going through every single recent thread accusing people of wanting us to "do their homework" for them. And I can't speak for anyone else but I'm not going to miss you. RES says I've managed to downvote you 23 times. Probably for being a douche.
Yeah, he beat me to it while I was playing with the code. I was hoping plotyy(AX) would fix it but it didn't.
This is a legitimate question for this subreddit. What the hell is your problem? Edit: OP was a guy that has been going through every single thread and telling the poster to do his own homework, ask the teacher, quit using /r/matlab to do homework, etc.
thanks that's very helpful
It means more that you support the original question knowing that you were just on my thread the other day complaining about blatant homework answer seekers. I support this comment. Have more upvotes from me.
Might want to use a boolean, e.g. bPressed = true; and build your condition around that. Also, if having trouble with uicontrols not beeing updated in loops, try drawnow. 
also, draw now is your friend
There are more advantages to model referencing (running parts of the model in rapid accelerator mode) than was mentioned previously. You can find out how to mask a model reference here: http://www.mathworks.com/matlabcentral/answers/6211 
Instead of sitting in a while loop, why not use a timer to "sample the data" asynchronously? You can start and stop the timer whenever you receive a button press.
It seems as though you should be using a matrix of electrodes values instead of this reflection-based stuff you are doing. It will probably make it a LOT easier to debug and it will make it run faster.
Thats a good idea, thanks!
Not sure if you're already doing this or not, but you might find it easier to try writing a "wrapper" MEX function to go around your existing code. That way you can just use the mx/mex APIs to get the command-line inputs as an mxArray and then hand the "raw" data off to your Simplex algorithm in whatever data format it requires. Then take the result from there, package it back up into an mxArray, and send it back to the MATLAB command-line. Of course, as others seem to have mentioned, you could compile the C++ into a DLL and access the functions from MATLAB with LOADLIBRARY/CALLLIB and such, which might be easier to deal with.
At a very fundamental level, there is no difference between solving a set of differential equations with Simulink and doing the same with an ode solver from the command line, provided you are using the same solver in both cases with the same time step size limits. From a development perspective, though, there are several advantages to Simulink over using the ODE functions (at least in my opinion). Here are a few off the top of my head: 1. I can model a system in Simulink without having to think of it in terms of first order differential equations. The signal lines just represent "data" and I can use blocks to represent functions that act on this data. The interface is intuitive enough that I can model a plant and successfully design various controllers that are enabled for different scenarios without ever really needing to think about rewriting the whole system as y' = f(t,y); Simulink handles all of that for me. 2. If I'm designing an algorithm that I want to implement on some kind of hardware (microcontroller, DSP, etc.) I can easily switch to a fixed-step solver and (with Simulink Coder/Embedded Coder) generate C code out of the model. MATLAB Coder does exist for base MATLAB code, but it currently has more limitations on what functions can be converted into C code (I'm not sure if any of the ODE functions are supported for code generation). 3. There are extension products such as Simscape that can be used to model physical systems more easily (circuits, mechanical and hydraulic systems, power systems, etc.) and can be integrated with an ordinary Simulink model. So, I could model my physical hydraulic system with SimHydraulics, and then quickly generate some control scheme with Simulink that can be converted into C and implemented on a microcontroller, without needing to spend time on how to formulate the equation for the ODE solver. Of course there are plenty of cons as well, the most obvious of which is the fact that Simulink is an add-on product and isn't cheap (neither is Simulink Coder, Embedded Coder, Simscape, SimHydraulics, the list goes on). If you and your colleagues are all comfortable with using the ODE functions for your needs, that's definitely fine. But, as much as I love programming, I really do find Simulink development to be easier.
Comments look pretty clear to me.
That makes sense, from the development perspective is really where they differ. It's much easier to look at someone else's block diagram and understand what's going on than looking at their code. 
I am sorry, like I mentioned in the statement above, I don't understand how a for for works and was just looking for some assistance. Sorry to inconvenience you on a weekend. 
I believe that the for-for is a nested loop that's examining every permutation of two variables... 
Thank you! I am still new to this and have not seen a for followed by another for before. I just didn't know what was going on. 
Here ya go buddy, this stuff pops up constantly. http://mathbits.com/mathbits/compsci/looping/nested.htm
Thanks for the input! I'm working on your first suggestion.
What exactly do you mean? In PsychToolBox you can use something like: DrawFormattedText(w, 'my message', 'center', 'center'); Otherwise I am not sure what screen you are talking about... please elaborate. :)
Then you should be able to use the line of code I posted. The variable 'w' is defined (in my code) when I open the window at the very beginning: [w sRect] = Screen('OpenWindow', 0, 0, [], 32, 2); Since you are requesting/expecting input from the user, you might want to take a look at the GetEchoString() [and maybe GetEchoNumber()] function. HTH.
It performs naïve gauss elimination, which is a method of solving systems of linear equations. The basic idea is you start out with a coefficient matrix and a "right hand side" (solution) matrix. You systematically modify rows so that you get an upper triangular matrix of coefficients. Each row operation (on the coefficient matrix) also modifies the RHS matrix. The end result of having an upper triangular matrix is that you end up with the last row being something like: a_33*x_3 = b_3 So you can solve for x_3. Then the next row up is: a_22*x_2 + a_23*x_3 = b_2 So you can substitute your solution to x_3 in and solve for x_2. Then do the same for x_1. This latter process is called back substitution. The "naïve" part is because it doesn't use pivoting, which is a method to avoid division by zero and numerical inaccuracies.
 pastebin, gist, four spaces. The only thing I avoid more than unformatted code is a screenshot of code. You're one of those people that puts screenshots in an excel file to send to people aren't you?
If by 'that internal variable nonsense' you mean 'a feature that is nearly universal in modern general-use programming languages', then yes. Matlab, like most programming languages, generally assumes that any variables you create within a function are temporary. This is a useful feature because in some functions, you may have to calculate dozens of intermediate values in the process of finding the one or two critical outputs the function is supposed to return. Normally, you wouldn't want to return all of those, because they are likely to be useless to the calling function and it would take up unnecessary memory/CPU overhead (not to mention human memory overhead in keeping up with all the return values) to return everything. One weird thing about Matlab -- most conventional programming languages have a 'return' (or similar) statement at the end of a function, which simultaneously does 2 things: 1) Ends the function 2) Returns whatever value(s) is/are specified to the calling function. Matlab doesn't do it that way -- instead, you specify the values you are going to return in the function header. Matlab assumes that you will create variables with those names within the function, and it returns only those values (not the values of any other temporary values created within the function) as outputs. And the function terminates whenever you get to the end of it... there is a 'return' statement you can use to make it finish early, but I think you can usually avoid that with good Matlab coding style. There are some pluses and some minuses to handling function outputs the 'usual' C/Python/etc. way versus the Matlab way, but most of the time they're close enough to equivalent that it doesn't matter much... it's just different syntax you have to learn. Maybe it doesn't make much sense in that simple example why you wouldn't just return 'len' along with the others... but trust me, if you ever write a function (as I have) whose job is to crunch for several minutes/hours through gigabytes of data, with an end goal of producing 1-2 comparatively simple output matrices... you will understand why it doesn't make sense to return any variables but the critical ones as output.
The short answer is: If you make S and v a matrix, each column will be plotted as an individual function. The slightly longer answer is... an adapted version of your code because that's more useful than an explanation (I hope). Vmax = 5.0; KHalf = 20.0; H = [1 2 10]; S = zeros(100,length(H)); v = zeros(100,length(H)); for j = 1:length(H), for i=1:100, h = H(j); S(i, j) = i; v(i, j) = (Vmax*S(i).^h)/((KHalf.^h) + (S(i).^h)); end end plot(S,v); Note that: 1. the vector H contains all values of h you want to use; 1. S and v are defined based on the number of values in H; 1. iterate through H using another for loop outside your previous for loop; 1. define the current value of h before calculating v; 1. the plot() function will know what to do with the matrices. HTH.
Ah! That's perfect!!! I kind of cheated and made v1, v2, v10 with the h values just typed in and then plotted them separately, but this is what my initial thought process was. Thanks!
Matlab is great at dealing with vectorization. Try to avoid iterating wherever you can. Here is how I would do it: Vmax = 5.0; KHalf = 20.0; S = 1:100; v = zeros(3,100); h = [1 2 10]; for i = 1:3 v(i,:) = (Vmax + S.^h(i))./((KHalf.^h(i)) + (S.^h(i))); end plot(S, v'); hl = legend('h = 1', 'h = 2', 'h = 10'); set(hl, 'Location', 'SouthEast'); Here, you're calculating all your v values for each value of h and putting it along one dimension. v(1,:) represents v for h = 1, v(2,:) represents v for h = 2 and v(3,:) represents v for h = 10. Calling plot on that (v' is transposed so that it plots the right dimension) plots each of those separately. And then we just put the legend on it for prettyness.
Glad I could help. :)
Surely any job that requires the use of MATLAB provides you with a copy?
So because you defined S as 1:100 before, you don't have to define i in terms of that... D: What is v(i,:) called? I haven't seen that before (matlab newbie)
Arent there other nice alternatives based on python?
I think you answered your own questions...
What you're basically doing is creating a vector with 1:100. These are great because you can modify all of them with a single operation, such as +, -, .*, ./ or .^. (1:3).^2 would give you [1 4 9], and (1:3).*[2 4 6] would give you [1*2 2*4 3*6] = [2 8 18]. This is more idiomatic matlab code, and faster for matlab, since it's optimized for vector and matrix operations. Say I have a matrix M: 1 2 3 4 5 6 7 8 M(1,:) would be the first row, i.e. [1 2 3 4], and M(2,:) would be the second row [5 6 7 8]. Similarly, M(:,1) would be the first column [1;5]. What I did there was pack in the 3 graphs of "v" into one variable, so that the first row of v is when h = 1, the second row is when h = 2 and the third row is when h = 10. Plot knows how to handle multiple graphs in one variable, but it actually takes each column and plots them in separate graphs. That's why I transpose it in the plot function (v'). The apostrophe is the transpose function, which takes a matrix and basically flips rows and columns, like for the M' (from above) would be: 1 5 2 6 3 7 4 8 
Are you saying you have to use a package for a class, but your university/college doesn't provide you with a license?
I don't even see how that's legal (to force you to buy it or use a poor knock off) but in that situation I'd pirate it.
This is what I came here to say. Very often the the FOSS alternatives to fancy commercial codes have crappy GUIs and are constantly playing catch-up in terms of their features.
It's no different than requiring you to use a textbook. It's shitty though, my university gives us whatever version of Matlab that we want.
I definitely did all my DSP homework using SciPy. Luckily I got markers who seemed cool with it. Just try to write nice, obvious code and document it, I'm sure they'd rather see that than the tangled mess of MATLAB that's typical of, well, students using MATLAB.
Freemat is a nice alternative, but it is limited (no simulink). Scilab is another option, but coding in it is a bit different. It also has xcos which is a simulink alternative.
Without being snarky, I've literally NEVER found a situation that octave didn't work on or couldn't be made to work with minimal effort. However, I have heard that the windows version is less stable. 
You need to get into the firmware of the nerf gun so you can get MATLAB to talk to the servos. OR if there is a gui for the nerf gun, MATLAB can allow for a java robot to control your keyboard and mouse. 
Have you looked at the slice function? [xsp ysp zsp]=sphere(100); [X Y Z]=meshgrid(-1:0.01:1,-1:0.01:1,-1:0.01:1); C=sin(X).*(Y-Y.^2).*cos(Z); slice(X,Y,Z,C,xsp,ysp,zsp);
When you print the matrix B, what does it look like?
MATLAB for students is reasonably priced. It's $100. You'll spend more on a textbook and probably get less use out of it.
Presumably, computers in the engineering labs would have matlab. 
a matrix that has a ridiculous amount of rows and 6 columns
Your labs don't have the software that you need?
It's not available through my Engineering program's free software but all the labs have everything needed.
&gt;Octave uses isn't going to compete with Intel MKL. Well, A), yes it can, depending on your application B) Matlab didn't use to use MKL by default, I guess now it does. C) Octave just links to /usr/lib/libblas.3gf.so on your system and /usr/lib/liblapack.3gf.so, so whatever blas implementation you have installed is what it uses. If you installed intel MKL on linux or replaced the dlls on windows you could easily use any blas you want. For example, I use AMDs Core Math Library with Octave and it provides a tremendous speedup on multi-core systems over ATLAS in some cases.
Does trying: "B(end,1)" give you the entry in the last row and first column of B? It's tough figuring out what exactly is wrong since the issue can be caused from numerous errors.
My school only has a certain amount of licenses, so if at some time they're all in use MATLAB won't launch. I just recently tried out Python(x,y) [Numpy, SciPy, Spyder, etc.] as a MATLAB replacement and I think I like it. It's nice to not have to create a new file for each function.
&gt; It's nice to not have to create a new file for each function. So you mean an anonymous functions? Or you could make a big script with a bunch of anonymous functions and tada, you pretty much have how python does it.
This may be a start in the right direction. http://www.mathworks.com/help/matlab/ref/instrfind.html 
Not sure, but you might be able to use the Instrument Control Toolbox.
Nevermind. I figured a way around my issue.
You're assuming that the library has the budget to buy a new edition of *every textbook* used at the University, *each semester* (because remember the "new edition" is new each semester), and are informed of the text book choices for the upcoming semester in time to obtain their own copes. 
Well it's also required for us to have our own laptop to register, and my class takes place in an electronics lab (power supplies, circuit building materials, etc... but no computers).
I am confused as to where you need help? Jacobi and Gauss-Seidel are iterative methods and you are doing a 2-D problem, so you first must start out with a discretization: x=linspace(0,1,N); y=linspace(0,1,N); so x and y vary between 0 and 1 with N points. Then you have to construct a grid, the most common way is to do this using the built in function "meshgrid" [X Y]=meshgrid(x,y) Now you may define your u_{i,j}, the actual solution: u=X.*(X-1).^2.*Y.*(Y-1); That line performs all of the computations on the matrices X and Y element wise (hence the .*, ./, .^). Then comes the meat of the problem, you know you have to iterate over problem, this results in 1 for loop; you know you have to iterate over each spatial dimension, this results in two for loops for a total of 3 for loops. With MATLAB there is a way to do this with only one loop and make it much faster, but I will leave that to you. Now the loop structure is going to look something like: uiter=-((6*X-4).*X.*(X-1)+2*X.*(X-1).^2);%Initial guess for m=1:6%10%20 for i=2:(N-1) for j=2:(N-1) uiter(i,j)=uiter(i-1,j)+... Your solution method Likewise, you need two for loops to calculate the RMS error. To plot, you will use figure(1) surf(X,Y,u,'Linestyle','none') hold on; surf(X,Y,uiter,'Linestyle','none') hold off; This plots the solution, then sets the figure so that you may add a second plot, plots the iterative solution and finally makes the figure over-writeable. Then to show off use figure(2) surf(X,Y,abs(u-uiter),'Linestyle','none') set(gca,'ZScale','log') to plot the difference in log scale. That should get you going. 
Octave: because we need a less functional free version of an already terrible program. Granted the 2012 release is a lot better (it has objects), but there's still a ton of really basic shit they just don't provide... like documentation.
Did you assign a value to a variable called "size" earlier in your code?
&gt; usb missile launcher that shoots nerf gun like missiles Photos or it didn't happen. Also, the thing should have come with an API of some sort. How do you normally control it without MATLAB?
Thanks so much for this response. I will mess around with it for a while then post an update 
Actually ours are. I'm not sure if it was a requirement but they usually had 1 or 2 of every book. Granted we have 15 libraries.
And I would never consider octave for any real work given the number of ~~libraries~~ toolboxes we use.
My friend had the R2012b .iso, not sure where he got it though.
What do you mean it should equal [1,1,1]?
Difference is night and day. Especially on Linux/Mac. Simulink actually has a tool bar now. Sadly work is still stuck at R2010b and will be for the next few years.
This may just get buried but you should google Julia. It's a pretty new technical computing language built by some smart people at MIT. It's free and open source. Basically it compiles at the speed of C, with the ease of use of Matlab (compared to C). I've been using Matlab for four years, and am just learning Julia now and it is pretty damn similar too. If something takes 100 seconds in Matlab, 1 second in C, it will take like 2 seconds in Julia. I really love Matlab too, but my money bets Julia will replace it in 10-20 years, or sooner. The professor is pushing it in my Numerical Programming class at MIT. The downside is that documentation and downloadable functions and the like are underdeveloped right now. It's community is growing though!
Hey OP, you can get a student edition that never expires (but only works on one computer ever, IIRC) for $100. It comes with a bunch of toolboxes built in too!
God forbid they build an open source free clone of one of the most well documented languages/computing environments and don't provide redundant documentation.
Fix the different vectors x_N as he says. Then get X_N=abs(fft(x_N)) and compare them. Make sure you also define the vectors f_N so that you can understand the differences when you plot(f_N,X_N) 
I've been running 2012b since it was released. It took me a few weeks to get used to the ribbon as I had highly customized my toolbar, but the ribbon is a better UI. I'm very happy with 2012b and I'm looking forward to 2013a.
He is asking you to use the fft function in MATLAB. I am guessing that he wants you to use y=abs(fft(x,N)); to see amplitude contribution of each normalized frequency. To explain why they are different, read what the fft function does when you add the second parameter N and think about how that impacts the DFT. So you know you are doing right, it should look like the trajectory of a ball bouncing up until it hits a peak at 0.1, at which point think of a ball bouncing down. Because of symmetry about the halfway point you also will have a peak at 1-0.1=0.9. 
Is this what you mean like a ball bouncing ? http://imgur.com/Hmz8jyB Also what does he mean by : **Normalize the scale so that it extends from 0 to 1 − 1/N, then plot each of the transforms one above the other. Explain how these plots diﬀer from one another and why.** Also thanks for the help :D 
That looks almost perfect to me, but I am not the instructor. To finish you need to use f=linspace(0,1-1/N,N) This will create a grid from 0 to 1-1/N with N points. Then plot the absolute value of the fft against "f."
Sorry, it seems I was unclear. I meant the 2012 MATLAB release was a lot better, but MATLAB is still missing a lot of what I would consider really basic features. I also think MATLAB is terribly documented and they've recently moved most of their documentation behind a paywall that makes it really hard to access even if you do have a license.
Ribbon? Can you show a screen shot? :-)
I know, but $100 is still a good deal of money just for a class. I was able to obtain an .iso from a friend though. 
Thanks for the info, it looks like a good alternative. If the class wasn't centered around Matlab I would probably look to it as my free alternative, but I'll probably try it out after having learned all I can in class.
hmmm - do you know how to use the debugging feature? Just add a breakpoint and you can step through the code. Also, it'd be very helpful if you shared your code so we could help you find what you're doing wrong
Here's a nice blog post about it: http://blogs.mathworks.com/loren/2012/09/12/the-matlab-r2012b-desktop-part-1-introduction-to-the-toolstrip/ Ribbon is the name that MS came up with for Word 2007, Mathworks is calling it the toolstrip
And ignore the comments at the bottom. It's mainly from people that never actually tried it just saw that it looked like ribbons. Like I said it's great especially if you want to use it on Linux (The old UI left a lot to be desired)
Also, how are you running code. F5, F9, 'waves' at the command window?
they took the increment tool out of the toolbar. Kind of a bummer-- I can always map keyboard shortcuts so it's no big deal. If you want a gui for it you have to right-click to get the menu. Made me feel like I was the only one that used cell evaluation mode. Also, on my Mac Pro I find R2012B kind of unstable.
when i'm plugging in my own solution (numerical), i need to insert a delta x^2. how can i do this in matlab? dx?
You could just use dx=x(2)-x(1); dy=y(2)-y(1); If you have a non-uniform grid you will have to implement this inside the for loops.
Look you need to loop for each element in the row vector, I will provide you with the pseudocode because I want you to make the implementation(If you have a problem with the implementation just tell me). &gt; function polint &gt; n = length(A) &gt; B // define a new vector B with n+1 elements &gt; for ( i = 0; i &lt;= n; i++)// a for loop that goes from i = 0 to i =n &gt; { &gt; B[i] = A[i]*(1/i); // the loop body &gt; } &gt; Return B // the result &gt; Hope this helps! 
Upvote for providing the concept and not the answer!
I used Matlab with Windows 8 for a few months last semester- No problems here.
Thanks for the suggestion. I ran your example, and it looks like exactly what I'm looking for. However, I'm a bit unsure of how to use the slice command (I'm reading through the documentation, but it's a bit unclear to me). In my case, I have three vectors of length N by 1 each corresponding to the x,y,z positions of the points I have on the sphere and a fourth vector of length N corresponding the value of a function at the (x,y,z) point. I see that by the documentation, it is imperative that the X Y Z you choose be generated from meshgrid, so I assume I can also proceed similarly. I do not see how this mesh relates to my given coordinates, however. So, I suppose my question is the following: the C vector contains my data, but for the slice command it must be the same size as the X Y Z arrays. Therefore, it seems that I need to augment C in some way. I already have fixed x,y,z column vectors; can I use those instead of the [xsp ysp zsp] = sphere(100)? I see that those are 100 by 100 arrays each, yet my x y z are vectors, not N by N arrays. Thanks for the help!
Admin could change the CSS to something like the /r/funny submission page (http://www.reddit.com/r/funny/submit) so that it says If you are pasting code use gist.
The great thing about MATLAB is if you can't find the exact function you need, you can write your own. At first glance (I've never heard of these arrays before), it looks fairly straightforward in MATLAB. I'd recommend writing out an example array Aij by hand and sensing the pattern and then assembling the MATLAB to perform those operations.
Your X, Y and Z will be generated by: [X Y Z]=meshgrid(x,y,z); You will evaluate f(x,y,z) for all the different combinations of x, y and z, chances are you have a function that is defined for all of R^3 but you are restricting it to S^2 . What slice is doing is taking your function f:R^3 -&gt;R and doing a linear interpolation at the points xsp, ysp and zsp to attain a colour map and then plots xsp, ysp and zsp with the colormap based on the function. Rerun the example with the added line: colorbar to see what the colormap corresponds to. You will have to redefine your C vector to be a C matrix, this will be accomplished by either reworking your function to operate element wise (.* ,./ , .^ ) or to use for loops. Elementwise operations will be much faster. Can you post an example of your function? The last resort is to use something like the patch function, but it is considerably more work but is much easier when working with arbitary manifolds. 
The function "surface" may also do what you need.
I'll have to play with your code a bit more after class, but it looks pretty interesting. Last semester in a dynamics course we coded the EOMs for a binary star system. We didn't make a full 3D simulation like you've made, but along with their positions in an external reference frame, we also plotted things like their position in respect to center of mass (more interesting with stars than a planet, since neither body has the center of mass for the system inside it).
http://postfarm.net/uploads/VUlqTXR.gif
I actually made a script to simulate the three body problem. Once, I get back home I'll take a look at yours. I'm curious how similar they are.
Yours is probably fairly, different. I just did substantial edits to this to make it better, and in the next couple days my goal with this is to make it work with 3 bodies. I would love to compare when I finish, though.
Do you mean like uigetfile? But if you want to make your own look at using a "uicontrol" called "popupmenu" in a figure. 
I believe you need to convert the excel file to a txt file. Or perhaps csv. I never import directly from excel.
This looks like it will do the charm. I will give it a try. Thanks!
Well, we're not going to do your work for you. But if you have a SPECIFIC question, or want us to help debug a certain piece of code, that's more reasonable. If that's the case, I'm happy to help out... but please reply to this comment because otherwise I will totally forget to check the thread again.
It's possible, but depends on your OS, which type of Excel file you are using (XLS versus the newer XLSX), etc. I try to avoid importing Excel directly too, but it is possible if your situation suits it and you don't care about your code being easily portable.
or csvread 
I just wanted an explanation of what i should do kind of to get started on it
File -&gt; New? Honestly, I would focus on user input first and then build a game layer under it. 
I wasn't aware of any problems between xls vs. xlsx? I've been mostly using xlsx without issues
[available via thinkgeek I think](https://www.google.com/search?q=usb+nerf+missile&amp;sugexp=chrome,mod%3D12&amp;um=1&amp;ie=UTF-8&amp;hl=en&amp;tbm=isch&amp;source=og&amp;sa=N&amp;tab=wi&amp;authuser=0&amp;ei=HK0lUZCoG_Sr2AWFgIHoBw&amp;biw=1280&amp;bih=688&amp;sei=Ia0lUeuuAuXr2QWj9YGQDw)
you're gonna need a) some kind of user input b) some kind of data structure that keeps track of the game state c) some kind of game logic that determines when the game is over and what the result was. oh and d) some kind of knowledge of how to do that in matlab.
Could you add some comments into the code? I'm having trouble following what exactly you are doing.
Thanks! What are Z and K? The bisection method that I'm familiar with is a rootfinding method that acts on a function. Are we talking about the same bisection method?
Yup the function is in a different file, which is listed above the bisection code. Z is a set of 7 values(programmed to be able to accept N values), K will have 6 known, and one that changes over a given range(programmed to be n-1 in length). The root I am looking to find is the variable "x" Currently with that code I am just getting x = 0.500, which is the mid point from the initial values not after a root finding technique.
Hmm, I'm still not sure what Z and K are supposed to represent. The bisection method that I know does not give anything except (1) the function and (2) a range where we ought to look for a root (xl and xu, in your setup) I see in your code that you reference 'xm' which i'm assuming is (xl+xu)/2, but I don't see it defined anywhere before you call it. Also, your IF loop currently says that if func(xl)*func(xu)&lt;0, set xl=xm. This is not correct. It should be this: %% not really code if func(xm)*func(xu)&lt;0 xl=xm; else xu=xm; end The idea is this: If the midpoint and the upper endpoint multiply to less than zero, then you should set the midpoint to be the new lower endpoint.
Yeah, I see it now. Is the code above the most updated version?
I stripped down your code and produced a version that works for y=3x^(2)-1. Maybe you can compare it to yours and figure out what's wrong %%Bisection method xl = 0; %initial lower limit guess xu = 1; %initial upper limit guess xm = 0.5*(xu + xl); while (abs(func(xm)) &gt; 0.000001); if (func(xm)*func(xu))&lt;0; xl = xm; else xu = xm; end xm = 0.5*(xu + xl); %how to find the mid point end xm %what I want Down here is the function file %%Function function [ F ] = func(x) F = 3*x^2-1; end
I can't get it to work :\ z = [0.16 0.09 0.21 0.13 0.06 0.15 0.20]; function [ F ] = func(klast,x,z,k); n = length(z); %length of Z will be 1 larger then length of the amount of K's provided F = 0; %setting the F loop for i = 1:n-1; F = F+z(i)*(1-k(i))/(1+x*(k(i)-1)) ; %Setting the known portion of the summation end F = F + (z(n)*(1-klast))/(1+x*(klast-1)); %The klast value will flucuate end F = F + (z(n)*(1-klast))/(1+x*(klast-1)); %The klast value will flucuate end ??? Error: File: func.m Line: 3 Column: 1 Function definitions are not permitted in this context. Error in ==&gt; bsmethod at 9 while abs(func(klast(n)), xm, z, k) &gt; 0.001 %Start while loop, setting Tolerance
I'm afraid I can't quite pierce through what this function is. It seems to me like you are trying to apply the bisection method to n different functions, and something is going wrong when you loop through the n different functions. Maybe you can just let Z and K be one value and make it work like that first, then add in the additional values later? At this point, I'm pretty sure the bisection method part is good.
Ya I agree The function is a summation, the for loop of the function is to write a summation. The last K value(regardless of size) will be unknown, but a range is given. If that helps clarify what I am trying to do? 
Sorry, the function is throwing me for a loop (haha!) I strongly suggest that you work it out for just one value of z and k, and take it from there. Wish I could be more helpful!
You have helped a ton no worries :) I am at a point where I don't know if I should press forward in hopes of fixing it, or just give up. Its due in the morning, and the stuff I just did feels like it made it worse lol.
If your up for it I could upload the PDF of the question if that would clarify it? If not thanks a ton anyway 
Sure. At this point, I may as well take a look!
At this point I feel like its the way I am indexing the variables. I need Z to be a defined length, Klast to be length of the range, k to have the length of Z minus one. I have no idea how to do all 3 at the same time lol
Here's a problem I'm encountering - for some values of klast, there is no solution via the bisection method because the values of the function at endpoints have the same sign. Is that supposed to happen? I don't understand the physical implications of the problem at all - just the math.
I don't believe so. As Klast fluctuates, so should the Psi value. So the Klast range should be fine. 
Done! %%Bisection method clc clear all global klast klast=.05; dk=.01; % this is the step size for going through different values of klast. This value must divide evenly into 4-.05 for i=1:(4-.05)/dk + 1 xl = 0; %initial lower limit guess xu = 1; %initial upper limit guess xm = 0.5*(xu + xl); count=1; if func(xl)*func(xu)&gt;0; disp('Function values at endpoints have same sign. No root guaranteed in this interval') return end while (abs(func(xm)) &gt; 0.000001); %Start while loop, setting Tolerance if (func(xm)*func(xu))&lt;0; %Check to determine if there is a root between the values xl = xm; %If the previous line is negative, change the lower point to the mid. else xu = xm; %if its positive change the upper to the mid end xm = 0.5*(xu + xl); %how to find the mid point count=count+1; % This counts how many iterations of bisection you use- just to know that something is happening end root(i)=xm; %what I want klast=klast+dk; % This increments klast up by .01 or whatever you set dk to. end And here's the code for the function %%Function function [ F ] = func(x) global klast z=[ .16, .09, .21, .13, .06, .15, .20 ]; k=[3.52, 1.92, 1.22, .84, .43, .08, klast]; for n=1:length(z) Ftemp(n) = z(n).*(1-k(n))./(1+x.*(k(n)-1)); end F=sum(Ftemp); end
I'm impressed with how honest you are! I tried to add in comments about what each part does. If you have any questions, I'll probably still be here! Good luck!
Still getting the same answer ! Lol. Going to try and figure it out if not Ill update what I have. 
Great scott it worked! Now I just need to get some graphs from the data points! My god thank you sir. 
~~Sir~~ Miss! Just trying to give the ladies more credit on this subreddit ! I'm glad it worked out. The graph part should be a one-liner: plot(1:(4-.05)/dk, root) Good night! Let us never meet again! =P
My awesome TA is a female as well, I show no bias to those that are awesome and willing to help!
Hmm, just looked in 2012b and it seems to do both XLS and XLSX equally well now. I'm fairly sure there was a period during which XLSX support was limited or non-existent, or was limited only to Windows... but that might have been a few years ago since the last time I really tried it?
I interpret your question as "How do I get/create a list of files and then present it to the user as a dropdown menu?" To get a list, you can use dir() temp = dir('*.xls'); FileList = {temp.name}'; %just get the names out as a cell array Or you can create it manually: FileList = {'File1.xls'; 'File2.xls'}; Then you simply set that list as the string property of a popupmenu gui component: hdrop = uicontrol('Style', 'popupmenu', 'String', FileList); Then, in the callback function for either the menu or a pushbutton, you get the selection and do whatever you want. If you want to avoid GUI programming (it can get confusing when you're just beginning), you can use menu() or listdlg() with FileList as an input and they'll be easier to work with.
Thank you for your feedback. Thats kind of what i want but i would like the popup to display a folder location and the files within that folder that you can select.
In that case, uigetfile() is probably what you want.
I have an m-file which uses this method take a look [here](http://i.imgur.com/bRTxG0G.png), maybe you'll find it a help, maybe not.
Ah right, no problem then
Looks like you went about it a different way. Let me know when you're done and I'll send you mine.
Woah, I'm having trouble just writing a non pivoting gaussian elimination code for a single column in a matrix. Right now I think my code just takes a matrix, does some funky stuff with the numbers, and returns a new matrix filled with random numbers, haha.
fminsearch
This is awesome! I think this will help me out! I'm trying to write a code given an augmented matrix and indices (i,j) and then eliminate ONLY the values in that j column while turning the (i,j) value into a 1. After around 6 or 7 hours my code basically just takes a matrix and does a bunch of random stuff and then returns a new matrix filled with random numbers. haha 
That code is more of less correct. You just have to make it so it counts properly. I still have the final code so feel free to shoot my a pm if you want it.
My go at it: http://www.youtube.com/watch?v=oTGqF-1usOE
I don't remember a ton from the class at this point as far as programming but here's the segment of code that I have that will do elimination on a non square matrix. I'm sure you can easily modify it to get it to multiply your pivots out to 1. [r c]=size(A); %get dimensions of matrix A rnk=rank(A); if rnk &lt;= c %Performs correct # of eliminations when rank&lt;c col=rnk; else col=(r-c+rnk); end for j=1:col %evaluates all but the second to last column for i=(j+1):r %evaluates rows starting at row 2 if A(j,j)==0 %performs row exchange when pivot=0 A([i j],:)=A([j i],:); end if (A(j,j)~=0) %pivot doesnt = 0, perform elim p=A(i,j)/A(j,j); A(i,:)=A(i,:)-p*A(j,:); end end end U=A; 
do you still need some help?
Nope I turned it in that night I received help. Thanks a ton though :)
The fuck disliked this? You come up with a better solution how to solve the problem. People these days. 
Are the vectors going to be the same? You can just multiply by an array. So put ones(n,1) into your constant block.
Sadly they are not going to be the same. That source block on the picture is just for testing.
~~Then you're going to have to mux with 100x inputs.~~ I figured it out with the screenshots of the model posted elsewhere. 
Damn. I hoped there's a better solution. I had a similar problem when I wanted to calculate mean and I was scared I'll have to use a lot of blocks, but in the end I used like six or seven
Well, if your signals are already in a muxed array you can get away with a mean with blocks. Sum. Signal width and divide. Edit: It's nice to see some people pushing the limits of Simulink also. I have some pretty crafty stuff sometimes.
Oh, I forgot to mention that I needed the average of last n values. Nevertheless It was probably just a way easier problem to deal with.
So the big blocks I've found for dealing with stuff like this: Reshape. Assignment. (You can pick off certain values, assign values. great for matrix stuf).
http://i.imgur.com/48kr3jt.png
http://i.imgur.com/GlswIZ9.png The help is actually quite helpful for all of these. In matlab pseudo code this is what is going on. a=zeros(100,1); b=a while (1) c=[sinewave b] b=c(1:100) a(1:100)=b; 
http://www.mathworks.com/help/matlab/ref/nchoosek.html That should do exactly what you want. Then the string operations should be easy enough and generating the inputs for it. 
that works! thanks!
Convert to the "seconds since January 1, 2000" format: datenum('03/04/2004') ans = 732010 Then sort those.
You can use the [Matlab conosle](http://blogs.mathworks.com/community/2010/02/22/launching-matlab-without-the-desktop/) to copy data into a Matlab work space from a C++ program and perform commands (such as launching scripts and executing commands) just as if you were in Matlab. I don't think you can make Matlab plot into the window you want, but you can defiantly make it plot in a Matlab window. I did it for a project once and the only problems I had was it was a bit slow to copy data into the Matlab workspace so if speed is a problem, this probably won't do.
Hmm, I have a number of problems unfortunately. First: my vectors x,y,z are well over length 1000, and matlab says it can't do meshgrid on my vectors. Second: The values C arise from the solution to a PDE on the sphere, and my numerical algorithm is only displaying its values at the given fixed points from the (x,y,z) vectors. If I need, I can interpolate using the given values to find it on other spherical points though, but since this makes no reference to points outside the sphere in R^3, I'm not sure I can really do much with evaluating it at said points off of the sphere for use with a meshgrid. Thanks for all of the suggestions and help so far! EDIT: I was googling around and I think I found something. In the newer version of matlab (newer than mine), there is a convhull function and a trisurf function that will create the convex hull of a surface and allow surf to run over it. For anyone that happens to stumble upon this similar question, I figured I'd paste the solution below that I found: http://stackoverflow.com/questions/12853058/how-to-plot-a-list-of-vectors-as-a-sphere
Depending on how large your matrix is you could xlswrite to an .xls file, sort in excel, then xlsread back into MATLAB. I know that's not what you were looking for, but that might be a temporary solution until you figure it out. (Excel has some great tools for dealing with dates...)
`max` returns the index as the second return value. [~, i] = max(data(:, 8)); data(i, :); 
I tried n=max(m) with m as the 3x3 and it spits the entire row indeed. I wonder about columns.
It's returning the maximum value for each column, not any particular row. 
Couldn't you generate an image using matlab commands and then present that with the c++ program? Just generate a certain file name that it looks for. 
I see. My bad.
I never understood why *max* didn't have a property that allowed you to find the max of a 2D array. Instead you have to nest two *max* commands.
Also: max(A(:))
Maybe show us what you already got and point out exactly where the problem is? We are not going to do you homework, you know. Happy cake day. :)
What is this sorcery.
Did you copy this from hand written instructions on the board? Are you sure that "a" in the second part isn't a "2"?
If you find yourself needing to print code, you're likely doing something bizarre and unnecessary. What's the purpose of this?
I believe the "compute the ratio" part is a simple check calculation to make sure your x-values are converging. Basically, your newer values of x (x_n+1)should be closer to the true answer (a) than your previous values of x (x_n), so the ratio should converge onto some value (probably zero?)
a is alpha and its from a handout 
You want to use __who__ and __eval__. One gets the names of variables and one evaluates strings. To add 3 to all variables: &gt;&gt; clear &gt;&gt; a = 2; b = 7; ddsa = 5123; &gt;&gt; var = who var = 'a' 'b' 'ddsa' &gt;&gt; for v=var'; eval([v{:} '+3']), end ans = 5 ans = 10 ans = 5126
No need to use mean, std: bins = min(x) : max(x); or something like this.... counts = hist(x, bins); counts = counts ./ trapz(bins, counts); % Normalize, i.e. array sums to one
I don't believe you need the second set of for loops either, if you just type a then it will show the matrix a
This worked. I realized I made a stupid error with the fprintf statement. Also, what does sprintf do? Edit: Do I input numbers as strings with sprintf? Why? 
It's just a way of creating a formatted string, in this case parsing 'i' and 'j' as integers in place of the '%d's in the first argument. You could also create the string explicitly as: ['Enter the value for a(' num2str(i) ',' num2str(j) ')']
Sorry but I don't understand this. You you give an easier explanation. 
Ok, thank you. That sort of makes sense. : )
Have you looked at the other plotyy post that was on here about one or two weeks ago?
You need to force the same x-labels for both plots. plotyy essentially overlays 2 plots and has one y-scale on either side of the plot. In other words, both plots have separate x-scales as well. 
plotyy creates two axes objects. From the doc: **[AX,H1,H2] = plotyy(...) returns the handles of the two axes created in AX andthe handles of the graphics objects from each plot in H1 and H2. AX(1) isthe left axes and AX(2) is the right axes.** You can set one axes' XTickLabel properties to nothing: [ha,hline1,hline2] = plotyy(askldjfksdjfkldjfjk) set(ha(1),'XTickLabel',[]) datetick(ha(2),'x')
i just found the same thing on google but thank you
thanks. how would i do that without trapz function?
thanks 
 x = randn(0,2000); x_avg = mean(x); x_std = std(x); num = sum(x_avg-x_std &lt; x &lt; x_avg+x_std); VAL = num/length(x) This avoids having to use for loops and if statements which can take a tiny (nearly insignificant) bit longer.
 X_avg=mean(x); X_std=std(x); VAL = sum( (x &lt;= (X_std + X_avg)) &amp; (x &gt; (X_avg-X_std)) ); Sorry, edited like 4 times.
Logical indexing FTW!
Do you know the matlab syntax for creating a matrix anyways? This is all just very basic stuff built-in to matlab: a = [1, 2, 3, 4; 5, 6, 7, 8; 9, 0, -1, -1] would give the response: a = 1 2 3 4 5 6 7 8 9 0 -1 -1 
&gt; which can take a tiny (nearly insignificant) bit longer Something tells me you don't use Matlab for anything computationally intensive.
implement your own function to compute the integral of the historgram using the trapazoid rule: http://en.wikipedia.org/wiki/Trapezoidal_rule
I new once I posted this I would get it. In my earlier experimentation's I tried using conv2, but I was obviously using it wrong. One refined google search later and I get my answer. ud = 60; A=(1/(ud+1))*ones(ud+1,1); %mean filter diffImg = conv2(diffImg,A,'same'); 
I don't know, where does the problem occur?
Use bar(fk) Instead of hist(x, fk)
Yes i know this. Was just trying out stuff. 
Haha thats what I would think too, but it eventually will output a NEURON code to run, so its outputting a code in a different programming language
Make an array of theta values from 0 to Pi/2 radians in whatever incrementation you want. Evaluate the force function, that will give you an equally sized array of F. Then plot F vs Theta, your desired value of theta is where you have a derivative sign change.
There's a bunch of ways. Easiest way is to just use wolfram alpha, like so: [click](http://www.wolframalpha.com/input/?i=F%3D+%280.6*50%29%2F%280.6*sin%28theta%29%2Bcos%28theta%29%29) If you must use matlab, use plot, like so: [click](http://www.mathworks.com/help/matlab/ref/plot.html) 
[i just woke up and you're lucky how much i love matlab](https://dl.dropbox.com/u/19403256/reddit.m) now, be quite sure that the formula you gave us is the correct one, I changed it a bit in my version, since Force is in Newton meters I went from pounds to kg's and multiplied that with g. The setup should be relatively easy for you to read out, and to change the formula if the posted one isn't correct.
FYI there's also filter2() and imfilter() for this sort of operation. imfilter() is in the Image Processing Toolbox, though.
I believe I finally got it now. Thanks.
Generally for loops in matlab should be avoided. That said, I'm not at all clear what it is you're trying to do. What are you searching for? How will you know when you found it?
In c this might work fine, but this is really not how you should code in matlab. 
I should preface this by saying I know nothing about search theory and numerical based investigation. Having said that... If you divide your circle in discrete pieces, you can easily represent it in a vector, right? If your circle is divided in n pieces, you'll have a vector of length n. Then you can use a simple for loop to go through your vector and do whatever needs to be done at each "location". for i = 1:length(yourVector), % Do whatever you need to do at location i if searchWasSuccesful, break; end end Please ignore me if I am misunderstanding the problem...
Yeah, it definitely should be. Thanks for the correction!
No this is exactly the kind of thing I had in mind. That makes things a lot clearer. Thanks!
The idea is that by some equiprobable random choice a hider hides on a discrete piece (flrrrn has helped me a lot here) of the circle and then the searcher searches each discrete piece until they find the hider. Sorry I realise that I haven't been very specific or clear. 
I'm not entirely sure what you're looking for, but it seems like you want to use find(). Example randarray = randi([-100 100],2e6,1); % Really big array with random data between -100 and 100 randarray(randi([1,2e6])) = 101; % Give a random location a value of 101 find(randarray == 101) % Pop out whatever location equals 101 It'll run a lot faster than a loop and you can feed anything that outputs a logical into find(). It'll also give you multiple locations. 
Glad I could help. Although I have to say it feels a bit like cheating because I have absolutely no clue what you are actually up to. :D
Here's a slightly more elaborate answer based on the information in your reply. I wrote this so it's as easy to understand as possible -- not because it's the "best" solution: %% Setting up... n = 20; vec = zeros(1, n); % Vector of length n, filled with 0's rand_loc = randi(n); % Probabilities are uniformly distributed ("equiprobable") vec(rand_loc) = 1; % Place a single 1 at the randomly generated location %% Option 1: for loop for i = 1:n, if vec(i) == 1, sprintf('target found at location %i', i) break; end end %% Option 2: logical indexing/find() find(vec == 1) % or, in this case simply: find(vec) As /u/getoutofmyaccount pointed out, the second option should be used for optimal performance. However, the first option might be easier to adapt to how exactly your "finding" works (e.g. which conditions have to be met etc.). Also, I often find that for loops are easier to read for beginners. HTH.
 format short g format compact beep off dbstop if error Then it calls one function to add my tool paths, and another function to set some default HG properties, like figure position, "axesnextplot"="add", "axesgrid"="on", and a few others. All dependent on the machine name. 
Nothing. I do, however, have a script in my project's base directory to set its path up, run the initialization function, and so on. I can't say I have much issue with MATLAB crashing, so I have little need to automate startup. I work with multiple versions of this project, so having one of them set itself up automatically would be bad. The toolbar showing your current directory keeps a history of where I've been, and my code is designed to be fairly insensitive to the current directory, so I find the current directory saving to be strange. 
Matlab is dynamically typed you could always make it 0. char(0), double(0), single(0), etc.
I am not sure I understand. I guess what I was thinking of something like: set x string set y double set z integer What you seem to be saying is that it does not matter, matlab will set it to the proper type once I put a value to it? x = 'cat' y = 2 z = 3.2 When I ran this y does not come out as an integer it comes out as a double. Edit: format and spelling
Because it can't be done, that's just not the way dynamically typed languages work. It'd be the same if it was Python, PHP, etc.
 set(0,'DefaultFigureWindowStyle','docked')
Just something I have to get used to I guess, I wonder what advantage dynamically typed languages have. Thanks for your help! 
You don't have to go through and put int a double b char* c at the beginning of every file. I can just whip together a=, b=a*4, etc.
What I don't understand is why you would want to do this at all.
Ah, so it's just a coding style as opposed to an actual perceived technical need. Depending on who you talk to, it can still be considered good practice to initialize all your variables to some dummy or blank values before ever using them. For example, in Python (sorry, I actually haven't used MATLAB in a long time and I'm rather rusty): if i &gt; 10: j = 1 elif i &lt; 10: j = 2 This is prone to bugs because j won't be set to anything if i == 10. So a quick `j = 0` at the beginning would solve that. Note how I didn't declare any types or anything, but I still initialized the variable beforehand. You can do this in MATLAB too; there's no reason you can't. On a side note, I don't think you typically use integers specifically in MATLAB. Everything is just a double, more or less implicitly. EDIT: There's no reason you _can't_ do this in MATLAB. You definitely can, but they need to have initial values; you can't _not_ give it a value.
Thanks! Yah I always initialize variables, make a var list at top blah blah blah. I am trying to teach myself OOP concepts now- much like old gosub, but with stricter structure it seems.
hahahahaha but really, in my opinion Matlab is a crappy place to learn OOP. Its implementation feels half-assed and it is more confusing to write class methods and constructors than other languages I've used. Also, I have never found any good intros to Matlab's OOP, I've just used the official docs and trial-and-error.
See also: http://www.economistsdoitwithmodels.com/
The online help is pretty good for that -- it has a tutorial. That's how I learned. And while I won't defend Matlab's OOP, I will say we use it a lot where I work (a hedge fund), so I disagree somewhat with the other posters here. I mean we're not writing operating systems with it or anything, but we definitely use it pretty widely.
The problem I have with it is that I have never messed with an OOP before and must learn it in matlab- the resources seam a bit thin the tend to show how to define a variable then create a class that controls the Goldstone telescope. A little hard to get my head around the latter part. And the texts i have either do not cover OOP or they or part of online content, which since I am second user of the book... Thanks everyone for the comments. 