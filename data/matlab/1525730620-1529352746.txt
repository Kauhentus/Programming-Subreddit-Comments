How about adapting this example for tracking objects https://www.mathworks.com/help/vision/examples/using-kalman-filter-for-object-tracking.html
Eh, I'm still a bit skeptical. The changes are pretty dramatic. That would still be a rather unexpected change in direction. Maybe if you've looked at it from a few different angles it doesn't seem so odd, though. One check I usually do with these kinds of simulations is conservation of energy. If that doesn't hold, you know you dun goofed.
MATLAB can plot whatever you tell it to plot. Is there a handy dandy prebuilt function to turn two variables into their positions on the equilateral triangle? Maybe... But I'm not aware of one. But the fun part about programming is when you realize that you can literally do anything. Look at that image you posted, it's made of several lines. Try and see if you can figure out how you'd represent those lines as equations... Then plot them using good ol "plot()". Then once you have your background layer of tons of red blue and green lines.... Figure out a way to transform your data into that same coordinate frame.
&gt; fullfile(prefdir,'History.xml') Oh, if only it were that simple.... The problem is that, when running in `-nodesktop` mode, MATLAB doesnt record *anything* to this history. I can run cat ${HOME}/.matlab/R20__[a,b]/History.xml and the only commands that are there are ones that were executed when the full desktop environment was active. The command *has* to be saved somewhere, since I can press `up arrow` and it magically appears, but im fairly sure that "somewhere" is in the terminal's active buffer. If I could force the shell to write its buffer to disk I could then pull it from there, but I dont know how to do this (if you do please do share). Also, the commands entered into Matlab arent added to the bash history recordings either (e.g., making a system call to `history 1` or `cat ~/.bash_history` wont work). (Note: nodesktop mode can be run by calling `matlab -nodesktop` on a linux system, and is the default on linux systems without X11 available)
[Here](https://imgur.com/gallery/9W0O4) is another cute cat! _____ ^(I'm a bot. Downvote to 0 to delete this comment)
Bad bot.
Thank you, Idiot\_\_Engineer, for voting on My\_First\_Bot1. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I don't have Matlab in front of me, so I can't check any of this. So let me get this straight: in `-nodesktop` mode you can hit up and *see* history from past sessions, right? So you can open a session, type a command, and then when you hit up it's seamlessly integrated into into the command history, but then the new history from this session doesn't get saved? Does the command-window only mode suit your use case? How about opening the command window with `commandwindow` and working from there? For that matter, why on earth does your function need to know the previously typed command? I assume you want to use `-nodesktop` because the Matlab execution is non-interactive, but needing the previous command only makes sense if there's a user to enter that command (otherwise it's scripted and fully defined).
Im glad you got it working.
I'm glad that I was wrong about the integration between the `-nodesktop` and command window histories; that would have been a disturbing state of affairs. Also glad that it led you to a solution. &gt; Unfortunately, there is (afaik) no way to check in an output was defined as empty - Matlab will not assign that particular output, but it will still generate it. You really ought to have a separate function, such as `myHeaderLoad`. That would be a clean design that wouldn't require stacking hacks on hacks. &gt; tend to connect to a machine via ssh Ah, understood. If I use Matlab over ssh I'm usually either using X-forwarding or one off commands (i.e. `-r`), but this use case makes a lot of sense.
&gt; You really ought to have a separate function, such as myHeaderLoad. That would be a clean design that wouldn't require stacking hacks on hacks. I do have a dedicated function for this (and most other tasks)...the "main" functions (1 for reading, 1 for writing) mainly serve to check user inputs, determine the problem size, and apply logic to decide which code branch to take. The only "productive" thing that these actually do is make the actual `fread` / `fwrite` calls once everything has been setup. I also have inputs added on to the end of the main functions input that, if set, will override any automated empty output checking. Ultimately, this comes down to "If I have to choose between useful (imo) feature that is based on hacky but (mostly) reliable code and which gives you manual overrides in case it hits an unusual situation --vs.-- nothing, Id rather have the feature." &gt; Ah, understood. If I use Matlab over ssh I'm usually either using X-forwarding or one off commands (i.e. -r), but this use case makes a lot of sense. A lot of times (for me anyhow) these end up being "one off commands with some initial debugging". Ill write the bulk of the code on another machine, but theres always a few snags to work out between switching to a new machine and scaling up the data size. A lot of times these codes will take hours or days to run, which is the main reason i dont use X forwarding - it seems more stable for long-term usage without. I also never get very good X11 performance unless im hardwired into the same network as the machine im ssh'ing to. 
I've had to do this before and while it is difficult it is doable. It usually helps to do in on pen and paper first to work out the problem. 
How do you calculate speed?
[removed]
Google for: Barycentic Coordinates. 
You need help, you found examples. What more do you need?
Ahhh 2006. Facebook started accepting everyone as users, Twitter was created, and the PS3 was released. 
I'm assuming your assignment requires a for loop, otherwise you should use logical indexing. Look up preallocation and matrix indexing. They are beginner articles on the mathworks website.
 G1 = randi([0,1],[1,20]); B = rand(1,20)*100; C = B(G1==1);
 You could use the find command to give you an array which contains the indexes, then iterate through that and grab the values at the indicated indexes. But your solution can be made to work fairly easily. + First, consider *what* G1 is. G1 is an array, it has multiple values. When you're checking if G1 == 1, it's checking if the whole array is equal to 1, which will always be false. + Try changing that to look at the value *at* the ith index in G1. + Every time you *would be* adding a value to the item array, you're first resetting the array. Try moving the item = []; statement to be *before* the for loop.
Ah, yes. Thanks for making that more precise for others. 
As far far as I can tell, you never change the value of left or right, so your loop will never exit. Also, because of that, your first and second "midpoints" never change value. This alone will be problematic for your code. In the future, try looking into debugging in matlab, since this kind of error can be easily detected that way.
&gt; I also never get very good X11 performance unless im hardwired into the same network as the machine im ssh'ing to. Try using compression (`-C`). This helps me immensely.
I don't see an error. Where is the rest of your code. I never understand posts like this - is it really easier to screenshot your page, post that screenshot to a hosting service, then link to that image, than it is to just copy/paste the code here??
My bad, and it is simulink code which uses a matlab function so i found it hard to copy/paste. I’ll post and image of the error now.
&gt; About 1.2 million combinations. Good luck. I mean, this isnt *that* many combinations. Its more than youd want to count by hand, but childs play for a modern computer. Looks like there are ~35 values * 1.2 million combinations, so lets just say 50 million values that need to be stored * 8 bytes/value = 400 MB of data. Id *love* to only have 400 MB worth of data to worry about... 
Im pretty sure ive tried with compression and it didnt help me all that much, though its been a while since I used X11 forwarding for much more than a one\-off GUI window. If I know im going to need to extensively need a GUI interface over ssh I try and use VNC, which \(while not quite as stable as a text only terminal\) is still pretty stable. With Matlab A lot of the time ill connect with ssh \-Y and then use the \-nodesktop flag to start matlab, since this still allows me to generate figures as needed but doesnt \*require\* the use of X11, so it seems like a good compromise \(so long as you arent doing significant code writing or debugging where the full editor really comes in handy\)
Hm... I see why you were a bit confused about A2... that one makes no sense to me either... every value above 0 just fills out the plot with all blue (filling the plot up completely), and the x1+x2 gives a very fat blue waveform... so yeah, I need to do something else with A2... As for x1+x2 im not sure why that confused me so much... that exactly what I did in pure data -_- you know "+~" before "dac~". FS=44100; %set sampling rate t=[0:(4*FS)-1]./FS; % 4s long time line A1=0.062; %amplitude f1=1/1.0525; %frequency A2=0.00001; T=1.0554-1.053; %period f2=1/T; x1=A1*sin(2*pi*f1*t); %signal with angular frequency x2=A2*sin(2*pi*f2*t); figure plot(t,x1) figure plot(t,x2) figure plot(t,x1+x2)
Thanks!!
np, glad to help :) 
Hi again, I did some reading ( http://media.aau.dk/~sts/ad/modulation.html ) and I guess it was my mistake to plus those signals together (I'm not sure what the purpose of plussing signals together is in term of audio processing). But I guess I should have been multiplying x1 and x2 (plot(t,x1.*x2)), which is ring modulation, right? I'm having some issues understanding the difference between ring and amp modulation (even after reading the mentioned link) -_- But I'm still getting a strange result where the waveform is filled with blue in the plot, and I'm pretty sure it's not supposed to look like that &gt;_&gt;
Do you have a specific ODE solver you want to use? If you are just using ode45, you can make a function called, say, c_rhs(t, x) that just returns the right-hand-side of dc/dt as a column vector and similarly for n_rhs(t, x). You can then invoke ode45(@c_rhs, time_domain, x_initial).
uhm... ignore everything I said in regards to the one being filled with blue, obviously when i zoomed in i saw it had a bunch of frequencies. I was just being stupid.
Yes. I had to make the t vector the same length as x. I held x constant and plotted concentration wrt time. The profile showed a decrease, which doesn’t make sense. The other plot indicated an increase. 
What's the stability criteria of Verlet integration? For explicit methods like this it typically depends on time step, velocity and spatial resolution. It looks like the total energy of the system is increasing as time goes on; perhaps as the system increases towards max kinetic energy \(and max velocity\), it becomes slightly unstable, adding in some error that accumulates. Have you tried adjusting your time step to be smaller or your spatial resolution to be lower \(bigger steps between points\)?
The \`biograph\` object is inherently a figure...even if you arent currently displaying it it still needs to be displayable for Matlab to allow it to be used. At any rate, assuming you are using \`ssh\` to connect to the machine, the solution is probably to connect with ssh \-Y hostname On the machines i use connecting with the \`\-Y\` flag enables figure windows to be generated in the \`\-nodesktop\` mode. But you still need X11 for it to work.
Im not familiar with this method, but this seems....off. %Force of Lenard Jones Fl = @(r) -24*eps/sigma*(2*(sigma/abs(r))^13-(sigma/abs(r))^7); %Potential of Lenard Jones Pl = @(r) 4*eps*((sigma/r)^12-(sigma/r)^6); In F1 both the `(sigma/abs(r))^13` and the `(sigma/abs(r))^7` terms are negative, but in P1 the `(sigma/abs(r))^12` term is positive and the `(sigma/abs(r))^6` term is negative. If I remember how to integrate things correctly, these should both change signs, no?
Yeah we already tried making dt smaller. It dors reduce it but still its too much considering making it that small means the real simulation with 25 particles moves at a snails pace
 D = reshape(D,4,[]); Dcur = D(:,iter);
Try making `m0` a matrix with 2 rows. Iteration 1 will use the first row, and Iteration 2 the second row.
Organize m0 in the shape that you can access with iter For example, a 4 x 2 matrix.
Please format your code so it is readable. You can do this by putting 4 spaces in from of each line (an another 4 for an indent) so it looks like this
Thanks for the reply. I’m sorry if any of these questions seem rudimentary, but I’m just very, very rusty with matlab so... Are dc/dt and dn/dt not coupled in this system? If I were to write dc/dt and dn/dt as two equations, and use ode45(@c_rhs, ...) and ode45(@n_rhs, ...) separately, wouldn’t I encounter a problem since ode45(@n_rhs) will just evaluate the equation with a fixed c?
Oh you are right, I didn't notice they were coupled. In that case, you can just stack the dx/dt vectors. Make the first N components the vector for dc/dt and the second N+M components the vector for dn/dt. To extract c and n, you will then have to set c=x(1:N) and n=x(N+1:N+M).
Will try, thanks!
&gt; wouldn't i want to actually reshape m0 Yeah, sorry about that... It should be m0 = reshape(m0,4,[]); m0Cur=m0(:,iter);
 &gt; No matter what I do, version \-java always returns 'Java is not enabled'. try running the following usejava('jvm') usejava('awt') usejava('swing') usejava('desktop') If things are properly set up, the 1st 3 should return `true` in nodesktop mode. &gt; PuTTY with X11 forwarding enabled. Are you running from a windows 10 machine? If so, do yourself a favor and drop putty and use WSL instead. Youll need to: 1) go to the windows store and download the app called 'ubuntu'. This is the "original" windows subsystem for Linux (WSL), though there are others available now too. You may need to enable the WSL service in windows...there are directions on the app's download page. 2) go [download VcXsrv](https://sourceforge.net/projects/vcxsrv/). There are other windows X-servers that work, but I personally use VcXsrv and have been happy with it. WSL gives you an (almost) fully featured ubuntu install, and as long as you have VcXsrv running in windows you should just be able to run `export DISPLAY=localhost:0.0` and then `ssh -Y &lt;host&gt;` and everything *should* work. If not, then the server your connecting to doesnt have X11, which is an issue youd have to work out with whoever administers that suystem. Also, if you want you can use these [rather handy scripts](https://www.reddit.com/r/bashonubuntuonwindows/comments/8gwc8t/automatically_start_and_stop_vcxsrv_when_when/) (if I do say so myself) which will automatically start and stop VcXsrv whenever you call `ssh -Y` or `ssh -X`. Just add then to ~/.bash_functions and they *should* work with no modification.
doeS your code require you to have all solutions from every iteration?
&gt; if i want to access the whole size of m0 again how would i do it? you would just use.... `mo` ? The values of m0 havent gone anywhere. If yopu want to reshape it back to its original size, you could do domOrig=size(m0); m0=reshape(m0,4,[]); for iter=1:N m0Cur=mo(:,iter); end m0=reshape(m0,[dimOrig]);
I’m on mobile so the formatting is a bit wonky and I’m not sure I fully understand what you are trying to do. Here are some thoughts: 1. I don’t think you need the typecast argument. 2. Can you just open the and use fseek to get where you want to write, then overwrite the bits? 3. Matlab sucks at file IO speed. 
So, my OCD got the better of me and I optimized your code for you. You have a lot of unnecessary operations in there. I ran a couple tests and this produces an identical result. % setup variables and preallocate d0 = cell(1,2); G = cell(1,2); m0 = [0; 0; 0; 0; 0 ;0 ;0 ;0]; m0 = reshape(m0,4,[]); % Main Loop for iter=1:2 Dm = bsxfun(@minus, stationGroups{iter}', m0(2:4,iter)); dn = vecnorm(Dm); G{iter} = ([ones(size(dn)); -Dm./(v.*dn)])'; d0{iter} =(m0(1,iter) + dn./v)'; end % outputs G = blkdiag(G{:}); d0 = cat(1,d0{:}); 
You're running into a hardware limitation, not a Matlab constraint. Top if the line consumer flash drives only have 3 - 400,000 random IOPs under load. If you're only writing a few bytes at a time, throughput will be limited to a few MB/s. You mentioned clustering together nearby writes to improve performance. It might be worthwhile checking out Matlab's memory mapping (memmapfile) to see if it can speed up the process of pseudo-random writes.
Wow, thanks! i'm just beginning so any help is very welcome. I will have to study some to see what you actually did but thank you! :D
&gt;The only issue is actually enabling Java. On this note, it is worth running import java.\* java.awt.\* java.swing.\* java.jvm.\* Im not all that familiar with java, but it might help. &gt;Is it possible that there is a "default" setting set by the administrator that can't be overwritten? Someone with root access \*could\* do that, but i dont see why they would. The easiest way would be to alias \`matlab\` to something else, which you can check with \`alias matlab\`. If it is aliases, running \`\\matlab \&lt;your options\&gt;\` should run the unaliased command. You can also run \`type matlab\` and see if anything funky pops up. &gt; I've set up X\-Win32 as per documentation on my university's site I can almost guarantee you any instructions are from before WSL was a thing, since its pretty new. You'll also probably want to follow instructions for connecting from another linux machine, since thats effectively whats happening from WSL. \(except for the X11 server actually running in windows\). As a side note: WSL is pretty freaking awesome, and even if it doesnt solve this particular problem \(though i think theres a good chance that it will\) id definitely recommend keeping it around. &gt; Just want to say thank you again for this information! Really didn't expect to get much feedback, to be honest :\) Glad to help! I have a tendency to ask some rather....unusual Matlab questions too, so when I see an unusual question I can answer I always try to. I figure its good question asking karma. 
Also, in case it is helpful, here is the start of the output from running \`matlab \-n\` on the linux system i use that works. I replaced some of the path prefexis with generic replacements, but it should show pretty clearly what the initial settings shouls be like. This is for R2017b btw. `-&gt; s AUTOMOUNT_MAP =` `-&gt; e DISPLAY = localhost:10.0` `-&gt; r ARCH = glnxa64` `-&gt; s TOOLBOX = &lt;matlabroot&gt;/toolbox` `-&gt; e MAX_OPEN_FILES = 1024` `-&gt; s _JVM_THREADS_TYPE =` `-&gt; e MATLAB_JAVA =` `-&gt; s MATLAB_MEM_MGR =` `-&gt; s MATLAB_DEBUG =` `-&gt; s LD_LIBRARY_PATH = &lt;matlabroot&gt;/sys/opengl/ib/glnxa64:&lt;matlabroot&gt;/sys/os/glnxa64:&lt;matlabroot&gt;/bin/glnxa64:&lt;matlabroot&gt;/extern/lib/glnxa64:&lt;matlabroot&gt;/runtime/glnxa64:&lt;matlabroot&gt;/sys/java/jre/glnxa64/jre/lib/amd64/native_threads:&lt;matlabroot&gt;/sys/java/jre/glnxa64/jre/lib/amd64/server` `-&gt; a arglist = -prefersoftwareopengl` `-&gt; e SHELL = /bin/bash` `-&gt; e PATH = .:$HOME:/usr/bin:/usr/local/bin:/usr/bin/X11:/usr/sbin:/sbin:/usr/lib64/qt-3.3/bin:/bin:/usr/local/sbin`
when using num2str the second argument can be the format. look at the documentation for sprintf for more info (doc sprintf). Here you can see that "%d" means that it's an integer. The "-" is for some kind of justification, I think.
Most of what I did was just remove unnecessairy intermediate variables. Take this sequence for example `d0n=(m0(1)+(vecnorm(repmat(m0(2:4),1,n)-D(:,1:n)))./v);``d0t=d0n';``outd0{iter} = d0t;``d01=cell2mat(outd0(1,1));``d02=cell2mat(outd0(2,1));``d0=[d01;d02];` For the sake of simplicity, say that everything that comes after the \`=\` in \`d0n=\&lt;...\&gt;\` is \`d0n=FF\` `d0t=d0n'; --&gt; dot=FF';` `outd0{iter} = d0t; --&gt; outd0{iter}=FF';` `d01=cell2mat(outd0(1,1)); d02=cell2mat(outd0(2,1)); d0=[d01;d02]; --&gt; (outside the loop) d0=cat(1,outd0{:});` I also replaced every instance of `[D(1,:)-m0(2); D(2,:)-m0(3); D(3,:)-m0(4)]` with `bsxfun(@minus,D,m(2:4))` Also, dont use `cell2mat(c(n1,n2))`, instead use `c{n1,n2}`. `c(....)` returns that actual cells in a cell array, whereas `c{...}` returns the contents of one \(or more\) cells. 
One explanation I've read is that the "-" left justifies the string. I tried changing the argument to 'd=%+c' and iterations like that and couldn't make head or tails over what was happening. But I couldn't get the output to be right justified or a "single character". But thanks for your reference, I think I can pick things apart from there. 
&gt; You're running into a hardware limitation I think you're probably right. I ran a test with `dd if=/dev/urandom of=$HOME/test.bin obs=8 ibs=8 skip=8 count=10M` And got results comparable to MATLAB. &gt; memory mapping \(memmapfile\) Ive tried this in the past \(though admittedly not for a few MATLAB versions\) and it never worked well. In general terms, it seems like memory mapping is really intended to read small amounts of randomly distributed data in a file, whereas this usage will typically be reading large swaths of data one after the other that are fairly reguarly spaced \(though not necessairly of an exact regular grid\). I also had trouble with getting MATLAB to release data from ememory of any part of the file that mapped file was touched, even if that part was no longer being used. A lot of the time the whole file \(or a rather large chunk\) will get fully read, but the data I work with can be up to a few TB so loading everything at once just isnt practical. Using tall arrays and setting up a custom datastore is another project on my to\-do list, but that is a different project all together and it doesnt "replace" this one. From the fwrite speeds im getting, i think it should be much faster \(up to some cutoff block size\) to read in the data sequentially, replace the values I want to replace, then re\-write it sequentially. You have any ideas other than memory mapping? Do you think it is worth taking another look at memory mapping for this particular use case?
&gt; I don’t think you need the typecast argument. The actual data im writing is uint32, so this is just to make sure everything is consistent. It \*shouldnt\* matter, but you never know. Plus typecasting is effectively a free operation. &gt; Can you just open the and use fseek to get where you want to write, then overwrite the bits? I \*could\*, but this is slower yet. The built\-in skip parameter does a this more efficiently than using fseek does. PROOF CODE `% make data` `x=typecast(randn(500000,1),'uint32');` `% initial write` `tic; fid=fopen('test1.bin','w'); fwrite(fid,x,'2*uint32',32); fclose(fid); toc;` `% make new data` `x=typecast(randn(500000,1),'uint32');` `% blocked over-write` `tic; fid=fopen('test1.bin','r+'); fwrite(fid,x,'2*uint32',32); fclose(fid); toc` `Elapsed time is 0.173672 seconds.` `% make new data` `x=typecast(randn(500000,1),'uint32');` `Elapsed time is 3.541427 seconds.` `% loop overwrite` `tic; fid=fopen('test1.bin','r+'); for nn=1:numel(x)/2; fwrite(fid,x(2*nn-1:2*nn),'uint32'); fseek(fid,32,'cof'); end; fclose(fid); toc` `Elapsed time is 14.665219 seconds.` &gt; Matlab sucks at file IO speed. A lot of the time yeah, it does, but fread/fwrite tend to be one of the few exceptions to the rule.
What happens if you move the plot command outside of the for loop?
What does "doesn't work" mean? Have you read the documentation for fminsearch()? 
https://www.mathworks.com/company/newsletters/articles/whats-the-big-deal.html
Thanks!
Consider that you're actually looking for where f1 = f2, or rather, solving the equation f1 - f2 = 0
I don't think the documentation is especially clear on this. It looks like `fminsearch` is only capable of passing *one* "input" to the function. You are defining two inputs, `x` and `y`, and `fminsearch` is failing because it can't handle the two inputs. If you instead defined your function to be: f = @(x)(2-x(1))^2 + 10*(x(2)-x(1)^2)^2; Then you can say that `x` is `x(1)` and `y` is `x(2)` and handle it that way. This would mean that you would then call the function f( [1; 10] ) Note that the input is a single vector, not two comma-separated values. You can then also call `fminsearch` as fminsearch(f, [1; 10]) FYI, you said, &gt; trying to use fminsearch(f, [1:10]) doesn't work In that particular instance, it might work (because the anonymous function `f` uses `x(1)` and `x(2)`), but you might not get the results you're looking for because you used the colon `:` operator, not a semicolon. That is, you said `fminsearch(f, [1,2,3,4,5,6,7,8,9,10])`. If `f` only uses the first two values of the input, then this is equivalent to saying `fminsearch(f, [1,2])` instead of `fminsearch(f, [1, 10])`. If there are two different local minima, you won't get the answer you're looking for. 
Have you read the documentation for fzero()? Have you experimented with it a little? If you knew how to use it to find one intersection, can you think of a scheme that would allow you to find multiple intersections? 
Same error
Okay so I've tried `import java.* java.awt.* java.swing.* java.jvm.*` But I'm not sure I understand exactly what this does. The command line "disappears" (I'm sure there's another way to say this haha), until I `ctrl+c` out when I run this line. &gt;`alias` There is no matlab item listed when I type `alias`. When I try `type matlab`, I get `matlab is hashed (/cluster/bin/matlab)` &gt; `matlab -n` My results are nearly identical to your, with the exception of `-&gt; a arglist = -nosplash -nojvm` I'm going to retrace my steps and maybe you can catch something. 1. Launch VcXsrv 2. Launch the Ubuntu app (I have already gone to "Turn Windows features on or off", then turned on "Windows Subsystem for Linux") 3. `ssh -Y -X user@host` (I've tried `export DISPLAY=localhost:0.0` here, which has led to `Warning: no xauth data; using fake authentication data for X11 forwarding.` in the next step) 4. `ssh -Y -X &lt;host&gt;` (Annoyingly, it is *sometimes* possible to ssh directly to the linux cluster where I want to run MatLab, but usually I have to ssh to the university Windows server, then ssh to the linux cluster from there.) 5. `export DISPLAY=localhost:0.0` again (again, possible I don't fully understand these steps, but wouldn't this just open a window in the Windows server from step 3?) 6. `matlab -nodesktop`: `usejava('jvm')`, `usejava('awt')`, `usejava('swing')`, and `usejava('desktop')` all return logical false. 7. I also tried `import java.* java.awt.* java.swing.* java.jvm.*` after exiting MatLab, which returned `import: unable to open X server 'localhost:0.0' @ error/import.c/ImportImageCommand/360.` &gt; Glad to help! I have a tendency to ask some rather....unusual Matlab questions too, so when I see an unusual question I can answer I always try to. I figure its good question asking karma. Hopefully at some point I'll get my shit together enough to pay it forward :D
**Woop! Got it to work!** I didn't need /u/jkool702's solution, but I still want to reiterate a final time how grateful I am that they took the time to try to help me figure it out. #For anyone experiencing similar issues What worked for me was to launch MatLab using `&lt;matlabroot&gt;/bin/matlab -nosplash -nodesktop` I won't pretend to know exactly why this solved the problem, but my guess is that the default userpath when starting up MatLab in this particular cluster does not contain all of the files needed to enabled Java. You can find the root path while in MatLab by typing `matlabroot` and maybe this will solve the issue if you're experiencing the same thing.
&gt; The problem is the kinetic energy of the system increases with time whereas according to our teacher it shouldn't. So first, let me start by saying that I think your teacher is wrong. Put two particles nearby with zero speed. Let go of them. If they accelerate **at all**, then the kinetic energy just increased. Is there a potential field? It *looks* like it - your code has a `P1` term, but *you never use it*. What is the *total energy* in a system? Kinetic energy **plus** potential energy. The **total energy** should remain constant. That said, your code is really difficult to look at. I don't think it's all correct either, but I'm not going to grade the project, I'm just here to offer advice. Specifically, the crux of your question seems to revolve around the calculation of kinetic energy, yet in your code you have: Ek(i,p+1)=m*(Vx(i,p+1)^2+Vy(i,p+1)^2); What's the formula for kinetic energy? Is it `m*v^2`, or is it `0.5*m*v^2`? Then there are things like: dt/2/m*(Fx(i,p)+Fx(i,p+1)) Which I understand that, by order of operations, is technically correct, but man is that hard to look at. Average force, divided by mass, gives acceleration. Multiply by the time step to get velocity. Again, I understand that's what you've got, just in a different order, but writing stuff like that makes it hard to read, which in turn makes it hard to debug. fAvg = (Fx(i, p) + Fx(i, p+1))/2; avgAccel = fAvg/m; Vx(i, p+1)=Vx(i, p) + avgAccel*dt; I hope you see that the above is easier to read. There is a ton of other [code smell](https://en.wikipedia.org/wiki/Code_smell) throughout, but this isn't my field so I can't tell at-a-glance if it looks like you're on the right track or not, and I'm not about to try to work everything out myself. Other things that look off ("smell"): 1. You're overwriting and then using a system variable for "the smallest possible number" in your calculations (`eps`) 2. You are using absolute value functions in your force equation. 3. If your distance gets too big you set it to zero (`sqrt(rx^2+ry^2)&lt;Rc`) (more on this later). 4. You use `atan(abs(ry/rx))` instead of `atan2(ry, rx)`. 5. It looks like your energy equation is incorrect. Off by a factor of a constant (0.5), but incorrect is incorrect. If the basics are wrong, there's probably other mistakes. 6. You define an equation for potential but never use it. 7. You're using global variables. 8. You seem to be artificially constraining the distance between the particles (with the `&gt;Lx/2` and `&gt;Ly/2` checks) If I had to guess, I would say that (2), (3), (4), and maybe (8) above are the primary drivers for errors here. Regarding (3), you have a check in your code: if r ~= 0 F = F1(r); end Try adding an `else` and warning - if r ~= 0 F = F1(r); else warning('r == 0!'); end You get it a lot. You seem to simultaneously use `r` as an actual value and as a flag to the rest of your code to stop calculating forces on the particles. You get the `r==0` flag a lot, which again isn't necessarily bad, but may mean something is happening in your code that shouldn't be happening. I also just checked your force calculation, and I don't think it's correct, either. For the record, I tried `F = diff(P, r)`. I'm not positive this is the correct way to calculate it (it's been a while since I've taken physics), but the gist is that `sigma` should remain raised to the 12th or 6th power, while `r` goes up to the 13th or 7th power, respectively. You *don't* wind up with sigma^13/r^13. You've chosen `sigma = 1`, though, which means it doesn't really matter to what power you raise it, the result is always the same. Again, like the kinetic energy formula, maybe it's not an issue, but wrong is wrong and you'll get wildly different results if someone picks *anything* other than one for `sigma`. I'm not saying any one thing is to blame, but as a whole it's hard to read, which makes it easy for bugs to hide. It looks like maybe you're not always doing what you intend to be doing, which is how bugs happen. Regarding a fix, the easiest way might be to "cheat" the answer. If conservation of of energy holds, then you could normalize **total** energy at each step. Total energy at the current step *must* equal the total energy at the previous step. 
 &gt; 0! 0! = 1 
&gt; I would like to be able to specify exactly where each input should go. How would you like to do that? 
Additionally you could use m0=[(iter-1)*4+1:(iter-1)*4+4] Depending on how and if the m0 vector can change, you could perhaps do some length dependant formulation. 
I got to work guys
Oh I hadn't seen that. Btw, if you post some code next time, please use double enter and 4 spaces in each line to help with code readability. Good luck in your work :) 
Thanks, np!
So I'm a little confused. Part of what you are writing makes me thing what you want to do is evaluate the functions at a lot of spots and find where the difference is nearly zero, but on the other hand you say you want to use `fzero`. I'm going to assume the `fzero` solution. If you read the [documentation on `fzero`](https://www.mathworks.com/help/matlab/ref/fzero.html) you'll see you have the option to hand in `x0` as an interval instead of as a single number. When you do it that way, MATLAB will look for solutions inside that interval only. And if you look at the optional return parameter `exitflag` you can see what `zero` does if there is no solution there. So, in general you can step though range [0,10] in small steps, and check between two bounds, seeing if there is a zero there. You may want to plot the function first, to look at it and see how small of steps you need to take (just eyeball where the intersections happen, and make sure your step size is closer than the distance between intersections). 
Thank you for the long reply! ill try to reply to ur suggestions one by one: * yes i meant peak kinetic energy should stay constant. * yeah it seems we forgot the ½, but adding it obviously doesn't fix the error * we're using [the formula given by the teacher](https://i.imgur.com/lI6sd2r.png) for the calculation of the position and velocity of the particles so while i agree that adding an acceleration matrix would've been nice it'd complicate things a bit &gt; You're overwriting and then using a system variable for "the smallest possible number" in your calculations (eps) * i don't understand the problem with this :/ * [ this](https://i.imgur.com/gCMoX23.png) is the formula given to us for the equation of the force so the use of absolute values was needed * the Rc is actually not relevant here. it's purpose is (on the main code) to make sure for a given particle, if another particles is not near enough, it's contribution on the force will not be taken into account. when there're 100 particles most, for a given particle, only a minority of them are relevant and this greatly reduces the amount of time necessary to calculate the forces acting on particles * we didn't know about atan2 fuction, but i tried the following on matlab and the results are not the same: atan(abs(-3/4)) ans = 0.6435 atan2(-3,4) ans = -0.6435 * we actually used the equation for the potential but it's irrelevant since we (and the teacher) are trying to fix the increasing (peak) kinetic energy of the system so i erased that part before posting the code * the use of global variables are so that we can use those in the function "neighbor" * the Lx and Ly parts are relevant on the main code and not here. basically we're using only 25 or 100 particles and then pretending they're infinite. this means for instance (if Lx=Ly=10) the particle at (1,0) is 2 units away from the particle at (9,0). [Here](https://pastebin.com/pwcvc0MS) is the main code (the explanations are in french) if ur interested. and [here's](https://pastebin.com/CT5fqkVr) another function that's used the generate the type of crystals. * i checked the force formula by deriving the potential wrt r and it's correct, but you have to purposely try to get the same result as them otherwise it looks a bit different *the normalization things seems like a good idea, if we can't fix it that's what we shall try, thanks!
Your function for dV should not have all of the parameters as arguments. They are not passed through to the function. As a result, you're getting the error "not enough input arguments" because ode45 is trying to call dvdt_Chung with only `t` and `y`. As a result, Matlab is treating `gca` as the built-in function handle used to get a current axis (GCA= get current axis handle). That's where the sub-error "undefined operator '*' for input arguments of type 'function_handle.' You can pass these parameters as global variables instead. There is a more elegant way of passing parameters through to your ODE but it's not something I regularly work on so I forget the details.
Oh, no you're right. I was misreading the parenthesis. My bad.
&gt; m0(2:4,iter) Basically, just replace `m0(2:4,iter)` with `reshape(m0([2:4]+(iter-1)*4),[],1)` and replace `m0(1,iter)` with `m0(1+(iter-1)*4)`
it's telling you that you are trying to access an element of an array that doesn't exist. I.e., if `A=[1, 2, 3, 4]` it would give you this error if you tried to call `A(5)`. It looks like when you call the element `i+1` in your code, that element doesn't exist yet.
How am I gonna define the next iteration then?
I can't solve your problems for you. Your code is unclear because you say `E=D-inv(B)*C` but in the very next line you overwrite E as `E=[k(i+1),l(i+1),m(i+1)]`. It doesn't really make sense. [You need to think logically about the problem and the sequence of computations necessary to achieve the solution.](https://i.giphy.com/media/3o7buirYcmV5nSwIRW/giphy.webp)
When I try to write it as [k(i+1),l(i+1),m(i+1)]=D-inv(B)*C; I get "Too many output arguments" error. That's why I resorted to define it in a different line. I am not overwriting E, I am trying to define the next input. 
In any loop where you are referencing the i+1 index of a data structure (in this case, the arrays k, l, and/or m), you should check at each iteration (preferably in the while condition) if you're already at the maximum length. e.g. while erA(i)&gt;=0.001 &amp;&amp; i &lt; length(k)
So, I actually think that these might still be the issue, though for a completely different reason than I originally thought. what kind of values are you getting for `(sigma/abs(r))`?. Unless this is ALWAYS very close to 1, you are probably going to hit some huge floating point precision issues due to the power of 12/13. `eps` is basically what changing 1 bit will do for a floating point value of 1. For doubles this is 10^(-16) or so. Im pretty sure this means that if you are combining 2 numbers and the ratio of the small to the big is less than `eps/2`, the smaller one literally gets rounded down to zero (and you start losing numerical precision way before this). Unless im mistaken, this means that for numbers bigger than `(2/eps)^(1/12 or 1/13) --&gt; ~17 or ~21` and numbers smaller than `(eps/2)^(1/12 or 1/13) --&gt; ~0.047 or ~0.059` you literally lose all the contibution from one of the terms, and the range is more limited than this to get decent numerical accuracy. (say you wanted single precision accuracy - the cutoffs are ~0.22 and ~0.45, since ``eps --&gt; sqrt(eps)`). If everything else appears correct, this seems like the type of thing that could easily explain a systematic coherent error (in this case making energy increase over time)
&gt; i=1; &gt; k(i)=0.1; &gt; l(i)=0.1; &gt; m(i)=-0.1; You write this at the top, so your k, l and m variables only have one index.... You are trying to increment i, so when i = 2 you try accessing k(2), l(2) and m(2) which don't exist. I don't understand how the math your'e trying achieve works, but what I just told you should help you figure out where to go from there. 
But how would I overwrite the position L is at in Pop with W if there double's. I'm not really sure on what would change. I get: Expected one output from a curly brace or dot indexing expression, but there were 20 results. Error in ActualFMGA (line 51) Pop{L} = W; When changed to a double. 
That actually isn't what's going on.
The error is clear: `A and B must be floating-point scalars`. The function is not designed to handle multiple inputs for arguments A and B. If you want to perform many integrals at differing bounds, you'll need to create a loop or simply do a sequential call of each bounds you want to use.
I'm not exactly sure what you're trying to do, but I see you're mixing brackets {}, [], () in any case. Cell arrays are index by {}. If you want to overwrite a given cell index n of a cell array A, you'd just say A{n} = whatever "Whatever" could be a vector of 20 binary values stored as a cell in another cell array, e.g., B{m}. If apart from that you only have to flip the values in the vector, you can use normal matrix operations to do that, and then just store the result in the cell.
Oh, you are right. I should have looked more clearly at the start of the code. k, l, and m only have 1 element, and in the first iteration, the second element is referenced. ...Nevertheless my advice should stand in all cases, including this one!
The advice is definitely a good thing to consider in general :)
The [MATLAB PDE Toolbox](https://www.mathworks.com/products/pde.html) can do that for 2-D domains very easily, but I'm not sure if it can handle a 3-D structure like a waveguide, although I am by no means an expert. For simple domains, like a prism, finite differences are viable, but beware of indexing nodes in 3-D, it is a royal pain in the ass. Finite element methods work also, but require some kind of mesh generation, but computing the eigenmodes and eigenvectors are much easier with finite elements.
&gt; we didn't know about atan2 fuction, but i tried the following on matlab and the results are not the same: Right, they're not the same because those aren't the same inputs. Try plotting those values! If you plot (+4, +3), you wind up in Quadrant I, so the value of theta should be somewhere between 0 and pi/2. If you plot (+4, -3), you wind up in Quadrant IV, and so the value of theta there should be somewhere between 3*pi/2 and 2*pi, or 0 to -pi/2. Typically `atan` returns results from -pi to pi, so I would expect (+4, -3) to be between 0 and -pi/2. &gt; the normalization things seems like a good idea, if we can't fix it that's what we shall try, thanks! edit: actually it'd only work on the 2-particle system and not on the one with 25/100 particles Again, you'll need to look at total energy here - potential and kinetic - to get the correct numbers. If you add up all the internal energies of all particles at step `p = 1`, say you get 100. Then on step `p = 2`, you add all internal energies again, now you get 102. You just go through, for all particles, and multiply that particle's potential and kinetic energy by `100/102`. This should scale everything back such that the sum of all internal energy is 100 again. Again, this is kind of cheating, but it's common practice with, e.g., quaternions to normalize after each integration step. So, again, number of particles should matter, because you wind up scaling *all* the particles by `U_original/U_current` to get the total internal energy back to `U_original`. This should hopefully fix any minor integration drift/error. The rest of the things I brought up were just things to check. Again, this isn't my field, but everything I listed is a relatively common source of problems with Matlab code in general. Also, the [equations you were given](https://i.imgur.com/lI6sd2r.png) have a `lambda` for the velocity. I don't know what this is or if it's significant, but there's no lambda in your code. Anyways, if you're sure everything else is correct, then I'd personally proceed with normalizing after each step. This should definitely allow you to choose a larger time step, which should get your simulations running a lot faster. If you notice unusual or unexpected results then you could try turning the sample time down and re-testing. You could also try, for example, checking the percent error between new and original total energy and throwing an error if there's more than (some threshold) difference between the two. Good luck!
actually yeah i though about it only from the total energy for the system but the total energy for a given particle can be normalized and even if the result isnt perfect it'd be certainly better than what we currently have! indeed the lambda is something else but it's again not relevant here thanks a lot!
Awesome, thank you! I think I may just do three plots, one for each plane. Can I get eigenvalues (frequencies) from the toolbox?
It's been a while since I've messed with it, but I am 99% sure that is something it can handle 
Typically i try to call I-1 and I instead of I and I+1. Then starting I at 2 instead of one and you accomplish the same thing. This way when you come to do your final calculation and exceed dimensions. 
I believe your error is not Matlab related at all, but rather specific to C and the compiler you are using. Matlab, and really Windows, tend to be lenient with / and \ for directory definitions. This is often not the case when using *nix systems. Did you previously use the same compiler, MinGW64, when this worked on your previous computer? Did you ever change any of the compiler settings.
It could be that you are building a 64-bit application and this is a 32-bit library. [This blog post I found](https://www.man42.net/blog/2011/09/pthread-w32-for-windows-64-bit/) may help in getting the 64-bit version. 
For most practical dielecteic waveguides (e.g. fiber optics) where you don't have to worry about higher order modes you can invoke the weakly guiding approximation and disregard any field along the average direction of propagation giving you a 2D problem. Metallic waveguides are even easier. Then you can take advantage of symmetry to turn this into a 1D problem or two 1D problems if you've got a rectangle. This can then be solved by starting at one side of the waveguide, and using the right boundary condition, integrating using something like ode45, where you iterate until things match the boundary condition at the other end. Or if the geometry is simple you could look up the analytical solution. What's your waveguide like? Is there symmetry at all? If there isn't you'd have to do something fancier. I do not recommend this. If you wanna go for broke and give yourself a challenge you can build an FDTD simulation and figure out the allowed modes based on how a test input propagates through the waveguide.
I actually got the code to run so I fixed the parameter issues but when I try plotting the actual graph it comes out as a single linear component as opposed to a series of oscillations. Any advice? 
I can’t figure out why Matlab prints out what looks somewhat arbitrary for the tick marks when I use subplot. The image on the right is the correct one with values ranging from 1 to 29.8 on both the x and y axis. When I change to a subplot it labels the x axis with the first half of the vector and the y axis with the second half of the x vector. How can I fix this? Thanks. subplot(2,2,4); colormap(); imagesc(greedy_v_type2_5_25); colorbar; title('Greedy v. All Class II Allocations'); xlabel(xlbl); ylabel(ylbl); xticklabels(x); yticklabels(y);
It’s because you’re making the plot a smaller area. Just resize the window to be larger after it generates 
Happy to help! 
No DST. sometimes Inaccurate time label % code by u/ansariddle % coordinates: 33.4242° N, 111.9281° W , Meridian: 105 (NO DAYLIGHT SAVINGS) % Masters, Gilbert (2004) "Renewable and Efficient Electric Power Systems" - Page 409 Lat = 33.4242; %Latitude Lon = -111.9281; %Longitude Mer = -105; %Meridien (Constant if no DST) n = 0:1/24:365; %Solar time B = 360/364*(n-81); E = 9.87*sind(2*B) - 7.53*cosd(B) - 1.5*sind(B); %time shift n = n + (4*(Mer - Lon) + E)/(60*24); %Solar Time to Clock Time decl = 23.45*sind(360/365*(n - 81)); %declination H = (0.5-mod(n,1))*24*15; %hours from noon sinbeta = cosd(Lat).*cosd(decl).*cosd(H) + sind(Lat).*sind(decl); %sin of solar altitude phis = asind(cosd(decl).*sind(H)./cosd(asind(sinbeta))); %solar azimuth cond = cosd(H)&gt;=tand(decl)/tand(Lat); phis(~cond) = -phis(~cond)+sign(phis(~cond))*180; %correct azimuth x = cosd(phis-90).*cosd(asind(sinbeta)); %normal x,y,z vector of sun position y = sind(phis-90).*cosd(asind(sinbeta)); z = sinbeta; scatter3(x,y,z,x*0+50,n,'filled');axis equal view(-238,31);axis([-1 1 -1 1 0 1]) grid on;grid minor; [~,i] = max(decl-abs(H));[~,j] = min(decl); [~,k] = min(abs(decl)); hold on; plot3(x(i+(-12:12)),y(i+(-12:12)),z(i+(-12:12)),'linewidth',2) plot3(x(j+(-12:12)),y(j+(-12:12)),z(j+(-12:12)),'linewidth',2) plot3(x(k+(-12:12)),y(k+(-12:12)),z(k+(-12:12)),'linewidth',2) for n = (-7:6) text(x(i+n),y(i+n)+.1,z(i+n),num2str(13+n,'%i:00')) end quiver3([0 0],[0 0],[0 0],[0 1],[1 0],[0 0],.25,'k','linewidth',2) hold off;text(0,.3,0,'N');text(.3,0,0,'E'); camproj('perspective'); h = colorbar; ylabel(h, 'Day of the Year') colormap('hsv') title(sprintf('Position of Sun in the Sky throughout the Year in Lat: %.1f^o and Lon: %.1f^o at Different Times of the day',Lat, Lon)); x = 1:1024; x = x'; colormap(circshift(flip(hsv(1024)),-270,1) - circshift(flip(hsv(1024)),-270,1).*heaviside(-.90+sin(24*pi/1024*(x-60)))) set(gca,'XTickLabel',[]);set(gca,'YTickLabel',[]);set(gca,'ZTickLabel',[]) legend('Solar Path','Solstice A','Solstice B','Equinox')
Thanks again for your suggestion...I was able to put together something that (I think) works in all situations. In case you're curious, [heres the code](https://pastebin.com/4DngGwQg). All you need to do is, from the workspace of the function you want to debug, call `shiftWorkspace`. This will cause the function to copy over all variables from whatever workspace your currently in into its own workspace, and then call `keyboard` to allow you to continue to debug. When youre done, call `dbcont` and it will take all your new variables and transfer them back to the original functions workspace (for the ones that it can - you still cant add new variables if the original workspace is static). Note: this doesnt continue the main function, this just returns you to the function's workspace. Youll need to call `dbcont` a 2nd time to continue the main function.
Edit: The titel should be "to vectorized code"
 dim1 = 10; dim2 = 26700; binaryTrain = zeros([dim1, dim2]); indices = labelTrainCopy + dim1 * (0:dim2-1); binaryTrain(indices) = 1;
This is relatively unhelpful. Did you quit and restart Matlab as suggested by the error? Can you reproduce the error reliably? What code is causing the error? Is it occurring on start-up? You'll need to be more specific.
see [this](https://www.reddit.com/r/matlab/comments/8hkrii/psa_if_the_spring_creators_update_broke_your/) post from a few days ago.
Can you explain what's going on in line 4?
Thanks, He'l try
r/dataisbeautiful
Thank you! It works very well!
Never thought of that. On that note, I have a few dozen things I could post there. 
What does that even mean
The goal was to get the indices of the matrix binaryTrain which would have a 1. The indices of the matrix go 1-10 for the first column, 11-20 for the second column, etc. The dim1 * (0:dim2-1) then gives us the vector [0 10 20 30 ...]. We know labelTrainCopy has positions 1-10, so if we add that to the previous vector, we get the indices of binaryTrain. Easier with smaller dimensions to visualize it: dim1 = 3; dim2 = 6; binaryTrain = zeros([dim1, dim2]); labelTrainCopy = randi(dim1, [1 dim2]) % random values between 1 and dim1 columnIndexStarts = dim1 * (0:dim2-1) indices = labelTrainCopy + columnIndexStarts binaryTrain(indices) = 1
FYI If your goal was to speed up the code, I don't think vectorizing helps in this case.
Are you referring to 'activation' functions?
Yes
Thank you very much :) It worked 
Hmm, he followed the link from above and the update fixed it :)! Weird, because I used this as a last resort, couldn't really find it on google. But maybe I suck at searching :s? You could give me some searching tips if you have any ^^
Thank you this is really cool!
Glad to hear it
I see, it seems M-Lint is really just for errors and not so much style. I'm realizing that I "abused?" matlab's IDE color scheme with sections and comment blocks in my code. It seems readable to me thorugh the IDE but if I'm viewing the source code through something like bitbucket of gitkraken, its virtually unreadable as I don't tend to use whitespace as I do in python. I suppose I will look through your pdf's and just adhere to them as best as possible though it would be nice to have reminder as positive feedback.
I believe your error is here &gt; e = zPos - 4; Your sign here looks wrong. It should be 4 - zPos for the traditional commanded - measured. That is assuming that zPos and your force actuator point into the same direction. &gt; I've 2 feedback for my PID. They're position error and force error. You say that, but I don't see any place in your code where performing feedback control on the force. That shouldn't be necessary unless you have a force actuator you also need to model. 
I see your problem: you can't control a free falling mass because then it stops being in free fall.
And latitude and longitude 
I don't fully understand your question. Are you trying to fit your data to a normal distribution? If this is the case then there is no "A" because the PDF must benormalized such that it's integral equals 1 over -/infty to /infty. You might be looking to fit a clipped gaussian, which is slightly different: https://en.m.wikipedia.org/wiki/Truncated_normal_distribution 
**Truncated normal distribution** In probability and statistics, the truncated normal distribution is the probability distribution derived from that of a normally distributed random variable by bounding the random variable from either below or above (or both). The truncated normal distribution has wide applications in statistics and econometrics. For example, it is used to model the probabilities of the binary outcomes in the probit model and to model censored data in the Tobit model. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Its just some data that is in the shape of a guassian, so I would like to fit another guassian to it. In that case, "A" would exist since it sets the amplitude of the Guassian. That being said, you could always just normalize it, but my problem is I don't know how to correctly use fminsearch to find the coefficients of gaussian equation ('A', 'mu', 'sigma') to fit the data. Does that make more sense?
I tried e = 4 \- zPos; commend. But then our error can become "\-" sign and PID control give force in the directon of gravity vector. System force can't working the same direction with gravity vector. We just can giving force "\+Z" direction.
Also on page 557 \(573\) there is the example program 5 that is written in something that isn't MATLAB that i tried to convert but that didn't work either. [https://pastebin.com/DtXXnrDb](https://pastebin.com/DtXXnrDb)
Where do the cosines come from and why are you doing that 0.5*pi - theta business? 
To be honest the half pi \- theta was something my tutor suggested and i didn't really understand it but i'm not one to argue. The sin and cosine all comes from changing coordinate systems. As initially we have the velocity at the midpoint of one panel, in the x and y direction of the panel causing it, then we convert to the global coordinate system then to the coordinate system of the panel that the velocity is generated on. There is probably a way to do this in fewer steps but this is just what made sense to me. Thanks for taking a look :\)
[Hold](https://www.mathworks.com/help/matlab/ref/hold.html)
&gt; [that] was something my tutor suggested and i didn't really understand it but i'm not one to argue. That's *exactly* the time to argue, *especially* with a tutor. "I don't understand why you're doing this, please explain so I know when I should do it in the future." I'm not positive what you're doing with any of this math, or whether your handwritten equations are correct or not, but there are a lot of inconsistencies between the handwritten equations and the Matlab code you posted, so that's what I would check first. Also, the real trick to troubleshooting is to verify all the intermediate results. If you have a method that gives you the wrong answer, but it's done in ten parts, find out at which part your numbers go south. That said, here are the things I noticed *at a glance* as glaring discrepancies between your handwritten notes and your code (I'll use HW for hand-written and ML for Matlab): 1. HW little `u` is `(gamma/(2*pi)) * (theta2 - theta1). ML little `u` is `(1/(2*pi))*Beta`. 2. HW little `v` is `-(gamma/(2*pi))*log(r2/r1)`, ML little `v` is `-(1/(4*pi))*log(r2/r1)` (I'm assuming on the r2/r1 bit). Point is you seem to have `gamma = 1` for (1) above and `gamma = 0.5` for (2) here. (1) also uses `Beta` instead of `theta2 - theta1`. 3. HW formulas for big `U` and `V` are a function of **Beta**, ML formulas are a function of **Theta**. 4. HW vector uses **negative** `Vinf*sin(Theta)`, ML uses **positive** `Vinf*sin(Theta)`. 5. ML code sets the last `VinfComponents` equal to zero (line 46). 6. There is a lot of work with `Ubar` and `Vbar` in the ML file that's never written once in the HW notes. Again, I can't tell which is correct (if either even is), but they are definitely not the same. As I stated earlier, the best bet would be to work out all the steps, by hand, for an easy case and ensure your code is doing all the little steps correctly. (Unit testing!). Hope this helps! Good luck :) 
Amazing, thanks for your help :) will definitely look through. It was really annoying because I took the theory from several places and they decided to use different symbols so some might just be different. I have had the advice of going through by hand and I'm currently just at the start of the induced velocity section on a six panel airfoil. Thanks again :)
I've never used fimplicit to plot things, but I imagine you could use the subplot() command.
&gt; I tried e = 4 - zPos; commend. But then our error can become "-" sign and PID control give force in the directon of gravity vector. An error begin negative is fine. You can have positive errors and negative errors. Most importantly, the error sign has a significant impact on your PID stability. By selecting Measured - Commanded to calculate your error, you are applying a -1, which means using positive controller gains (which you are) will result in an unstable system. &gt; System force can't working the same direction with gravity vector. We just can giving force "+Z" direction. If this is a requirement that you need to meet, then you are implementing it in the wrong way by changing with the sign of the error. To constrain your force to positive only, just do force = max( 1000 * (P + I + D), 0)
This is an input example: x=linspace(-pi,pi); i.x=x; i.y=157+2*x+5*cosh(x)+.37*exp(x); S=hw3(i)
Will look into it, thanks! 
Ok, so you're not trying to actually find the probability distribution, you just have a curve of the form exp(-x^2) that you're trying to match to a data set. Can't the statistics tool box fit custom functions?
You can solve this one of two ways then: first is to take the natural log of your data, do a quadratic for, then transform back into the exponential form, second is to use nonlinear regression. Try the first method.
You know what, I lied... We did the lifting line method... Not vortex panel method...I can send you the info on lifting line though if that might help.. Sorry!
I don't know whether it's actually any faster, or feasible for what you want, but you could use matrix operations like: A = [1 2 4 2; 3 3 2 1; 1 1 1 1; 4 4 1 1] [nRows, nCols] = size(A) b = [0.3, 0.4, 0.5, 0.6] A = A(:) * ones(1, length(b)) A = A == ones(size(A, 1), 1) * 1:4 A = A .* (ones(size(A, 1), 1) * b) A = sum(A')' A = reshape(A, nRows, nCols) 
Ok thanks! I'll keep that in mind
First of all, if you do one of these method, please leave a comment in your code for other people (and for future you, when you open the file in 6 months) to explain what the line is doing, why you do it, and how it works. So now to the method to use: if all the values of A are integers with a value in the interval [1, length(b)], you could use indexing like this: a = b(a): &gt;&gt; a = [1 2; 3 3; 2 1]; &gt;&gt; b = [4 5 6]; &gt;&gt; a = b(a) a = 4 5 6 6 5 4 So this works if A contains only 1,2,3. If that's ok for you, stop here. If A does not meet the requirement (for example if you have A(i) = 42) but you want to leave these value in the table, you have to do a little more work. Let's say that &gt;&gt; A = [1 2; 3 3; 42 43]; First you need to find the indexes that you want to replace &gt;&gt; idx = ismember(A, 1:length(b)); % there are several ways to do this Now apply the previous method combined with logical indexing: &gt;&gt; A(idx) = b(A(idx)) A = 4 5 6 6 42 43 
In addition to the other answers giving advice about algorithms, if performance is that much of an issue, you can always compile your functions from within Matlab (might be restricted by license, I only have the academic). From how I understood it, it’s faster because it doesn’t parse the next command on demand, loosing debugging functionality.
If you have access to the parallel processing toolbox, try using parfor instead of for. https://www.mathworks.com/help/distcomp/parfor.html
Others have given good answers, so I might mention that if you need to work with really large data sets, a complied language might be better. C++ is popular, but if you want something close to Matlab, try Fortran (not Fortran77, but anything Fortran90 and above). People think that since it's old, it must be hard, but it's really not (although I consider C++ to be hard). "Fortran" is short for "Formula Translation", and it really is about as simple to read as the corresponding mathematical formulas. I believe Matlab was strongly based on Fortran. The syntax is very similar. 
Help poly..
My current theory is that i have incorrectly calculated the velocity induced for points below the vortex sheet
i assume A, B, and C are vectors of the (X,Y) position of the starting vertices? the recursive code takes the original triangle and subdivides it until you reach an iter of 0. if you start with an iter of 1, it goes to the else, then it creates triangle A-midpointAB-midpointAC with iter 0 and fills it it creates triangle B-midpointBA-midpointBC with iter 0 and fills it it creates triangle C-midpointCA-midpointCB with iter 0 and fills it the output should show the original triangle ABC filled except for the subtriangle midpointAB-midpointBC-midpointCA if you used an iter of 2 it would further subdivide these subdivided triangles into another 4 triangles each
Not at work at the moment, but IIRC you might want to check out accumarray. From what I remember, it was unexpectedly fast doing a variation of this type of operation.
Have you started by making a planetesimal move due to gravity? Can you make it orbit? Have you tried introducing multiple planetesimals? 
Accumarray is fucking witchcraft when you use it right. It's amazing. 
[This really heavy pdf might help.](https://pdfs.semanticscholar.org/a26f/0c396a9553d40bc6e4438697dd6455aaa25a.pdf) 
Sounds like a neat problem. You could make some nice visuals and animations to go with it. I don't know much about the physics though.
I am also unsure but I believe there is going to be an array of values using the force of gravity equation. You are going to have to create values for the planetismals and then provide the framework for the problem and then study the tidal forces and roche limit of your planet that you are creating. Then play with the values.
To help troubleshoot, if you plot both the data and your equation using (d, A, mu, sigma) does your fitted function look like it fits? Just looking at this, there may be a few guesses. First off, this should work reasonably well if the center of the gaussian is around 0, and it won't work well at all if the center of the gaussian is around +90 or -90. You may need to use a von-mises distribution. Either that, or you could sort of perform the fit twice: once with your raw data as is, and once with your raw data shifted by 90deg, and then "unshift" your fit coefficients afterward. Finally, if you are doing something like calculating a tuning function to a neural orientation response, you may have to add a parameter for baseline firing rate.
Please see [our rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/). "I don't even know where to start" is not acceptable, nor helpful, nor true. We don't know if you don't know the physics, how to program, how to launch MATLAB, etc. There has to be something you can do to help us. 
Sorry about that
Can you explain a bit more about what you are doing? - Did you solve the problem yourself or use an external program? - The colour chart looks good. Can you talk me through the psuedo-code for it? I’m interested in implementing a similar thing so any advice would be useful! 
What software is generating those numbers? 
Technically, stain. But here it's the same thing
if you can export data from this software to an excel spreadsheet, then you can use matlab to extract information from that spreadsheet using [these commands](https://www.mathworks.com/help/matlab/import_export/ways-to-import-spreadsheets.html), based on how you want matlab to store that data. if you only have the images, it might be a bit more difficult, but matlab has an ocr function in one of its toolboxes.
Unfortunately, I don't have the capability to export it to excel. I can export it as a notepad file with labels if that helps?
Well, where did you get this file and what do you know about it? Is it plaintext? Binary? Some other format? We know less about it than you do. 
Are you using the \ operator? Much faster than taking the inverse directly 😊
Yes, export it as a notepad file - most likely it will be a table format called "comma separated values" or csv format. Then you can use the matlab command csvread Or you can manually import the text file by clicking the "Import Data" button on the home tab.
Don't you mean strain? That's the term I recall from my structural engineering classes (not a native English speaker so I may be mistaken) 
I found [Barycentric coordinates](https://en.wikipedia.org/wiki/Barycentric_coordinate_system) very interesting. Thanks.
**Barycentric coordinate system** In geometry, the barycentric coordinate system is a coordinate system in which the location of a point of a simplex (a triangle, tetrahedron, etc.) is specified as the center of mass, or barycenter, of usually unequal masses placed at its vertices. Coordinates also extend outside the simplex, where one or more coordinates become negative. The system was introduced (1827) by August Ferdinand Möbius. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Yep, rods. The structure is 3D, but the elements are only transferring push/pull. 
How do I upload it as a gif from an iPad? (The force/ black arrow is spinning around) If I add it to an email it shows the animation... 
I think I tried a few things, also the \ operator ;) Read a bit about the sparse solvers, but they only "win" on much larger problems. Would like to try to solve for the eigenvalues and get a bouncy tent ;) 
Oh sorry you are right, I guess I gave little information above. It is a black and white image, 8 bits per pixel (256 levels of grey). ‘.lum’ is because the image only has its luminance values (no chrominance like common image files). I think that it has no compression of any kind (I’m quite sure about it), so the bits are directly the pixels value. I’ve got no clue about how the ‘next line of pixels’ (what determines at what point the pixels correspond to the next line) is coded nor the size of the images (I’ve got about 6 images). And having said this, I do not know anything else. Hope it complemented my initial information. Thank you.
You're going to have to make some assumptions about the images I'm afraid, if you have some reference image with the dimensions it should be a bit easier. If not I think you'd have to assume it is a square image, then take the square root of the size of the file divided by 8 to get the total number of pixels in the image (assuming there are no headers or footers on the file) Then create a square matrix with these dimensions, loop through the file feeding each 8 bit value into each cell, then process it using standard matrix operations. If it isn't a square matrix you might be a bit buggered really, it is probably following the bitmap file format, in which case the first 14 bytes should tell you some general information, then there is a variable sized header depending on the format so you may have to read up on the bitmap file format considerably to work it out Good luck!
No worries I fixed it already. I used surf on it and used options to set its face and edge colour, then to draw edges I used fill3 on the outer points with facealpha set to 0. Convoluted, but it worked
[https://fr.mathworks.com/matlabcentral/fileexchange/16201\-toolbox\-image?focused=5133198&amp;tab=function](https://fr.mathworks.com/matlabcentral/fileexchange/16201-toolbox-image?focused=5133198&amp;tab=function) ?
When the tents a-rocking, don't come a-knocking.
Using which function or tool? In the optimization toolbox, you can specify bounds on all parameters when using optimizers. Not sure about other tools
Thank you very much!
fminbnd has the option to take a nonlinear boundary function. I'm not sure if it will allow what you're asking for. Check the documentation. 
Yeah, your best bet is going to be having your Med-PC script save its output to a text file and then figure out how it's formatted, and write a MatLab script that can auto-import the data. It'll probably help if you are conscientious about entering identifying information about the (subject # etc) when starting the session in Med-PC, so that it's easier for your MatLab script to automatically keep track of which days comes from which animal / which session, etc.
The text file it gives me is not useful as it turns out. It's mainly just the X, Y, Z coordinates every 50ms. I need things like stereotypy, rears, etc, and would rather not figure out how to quantify those from XYZ coordinates. Are you familiar with the Analysis.mdb database? It seems to have everything I need, but has like 18 entries for a single block of a single session for a single subject. There are also pairs of identical data for some reason?? I'm trying to figure out how to tell which of these I should use, and if there's one row that has a session total.
Ah, I see. I've only used MED-PC with tracking chambers once (usually I just do operant chambers), so I'm not too familiar with that. The output you posted, is that coming from a different piece of software? Perhaps it has other options for how to export the data?
I am using the regular fit function. I know how to set fix boundaries, but I want a boundary which is dependent on another fit parameter.
Unfortunately, the MDB to Excel software is clunky and you have to do a long convoluted process subject by subject. I've found the Analysis.mdb database has what I need, but there's a lot of duplicate data rows with different ID's, so I'm attacking it from that angle, now.
Well, dealing with duplicate rows shouldn't be too hard. If you can import the data into MatLab and format it as a table, you can use the function `unique` with the 'rows' option, and it'll give you a version of the table that has no duplicates. Tables are really, really great for this kind of thing, I find they don't get recommended nearly often enough.
The thing is, they're not exact duplicates. There are 3 entries for each zone of each block for each subject, and the actual data isn't always the same. For instance, for subject 1, block 1, zone 1, and session 1, activity monitor generated 3 unique IDs, and two of them have identical data while the third is unique. Any thoughts how to interpret that?
Happy Cake Day
Well, one obvious answer is that some data was mislabeled (e.g. one of those rows is actually subject **2**, block one, zone 1, session 1). Another possibility is that it may store multiple analysis results, and some of them may have been run with different parameters. If that were the case, I would look at the other columns of those 3 entries, and see if any columns indicate analysis parameters, or the date/time the result was generated. If you can find anything like that, that would probably tell you that you're seeing the results of multiple different analysis runs on the same data, and you could filter down the data to results generated with a certain set of parameters, or on a certain day.
Pretty much every post in this subreddit gets downvoted to zero. No idea why but it is annoying. I can't help you with your query but I thought I'd fill you in with regard to the downvote.
Thank you. Maybe there's a troll hanging around ;\)
I hope that's not the case. I've yet to make a public example, though I have made sure to pull anyone who does that kind of thing to the side and explain why they're ruining expensive research. Two of the 3 duplicate rows are identical except for the MedPC generated ID (which is separate from the subject id I give them). The third row's values bounce between 45-55% of those listed in the others. I'm looking at the session time right now, which should be an hour. For session time, it says 60, for end time displayed, it says 30, and for session time7 it varies wildly in Ithink seconds.
Thank you 
You most likely want to push all values to the nearest integer when you solve for dependent part of the line. You could feed your line equation n...N values for x and then floor of ceil the result to push it down or up to the nearest n...N element in Y.
I’m not sure I worded my question very well. I’ve edited the OP for clarity. I’m not looking at finding only the points in the vicinity of the line, I’m essentially using the line as a barrier, and want to keep all points in the matrix on either side of this barrier.
That's not even code. It's art :)
Okay. The approach is the same as your main concern is still identifying the proper elements in the matrix to include in your final matrix. Once you have your diagonal of best fit you can find the Y index values and use those with **zeros()** and **ones()** to build an identically sized flag matrix to extract the valid values from the original matrix. OR. You can be even fancier and unroll your matrix allowing you to loop over the Y index values. This would allow you to extract the valid values in your matrix **A** when iterating using **i** as new_A = A( (i*N-y_index):(i*N) ); Although this means you'd need to smart about indexing new_A to avoid changing the size with each loop. If you need to take a general upper or lower triangle you can use **tril()** or **triu()**, but they start from the upper left element of the matrix which means you'd need to flip it once you sort out the proper diagonal.
 The hell is 'Scilab'?
Mathworks offer a free course called 'On Ramp' https://matlabacademy.mathworks.com/en/selfpaced/gettingstarted?s_tid=mlac_gettingstarted_ban
Thank you very much! I'll get started first thing in the morning! 
You're using to vectors that have a different length, if your x scale is linear a quick fix could be linspace ( min(t1),max(t1), length(t2)). Where t1 is what you plot on the x scale and t2 is what you want to plot on your y scale Can you give us more info on what exactly are you plotting on the x axis ? 
Scilab is like matlab a numerical computation suite. It's open source like octave, but had a native gui before octave did. It also contains an equivalent to simulink (xcos). 
They still are in my experience, but it won't matter if you're running a program that just needs to do everything once. But say you're numerically optimizing a large parameter model by maximum likelihood, the difference between computing the residuals through vectorization and loops is going to be something like 4 seconds vs 4 minutes per optimization. 
Do you have access to the Symbolic Math Toolbox? https://www.mathworks.com/products/symbolic.html
the error is pretty clear, but it's pretty hard for anyone to help if you haven't shared the code that produces the error
I will have access to my code in about 30 Min. Will you be able to look at it then?
Use the command “format rat” and it will rationalize everything
clear all;close all; figure\(5\); load\('swimstimboth1min.mat'\); almost\_time=1:size\(data,1\); Tstep=50e\-6; time=1000\*Tstep\*almost\_time; zm\_data=zeromean\(\-data,100\); sm\_zm\_data=smooth\_move\(zm\_data,10\); plot\(time,sm\_zm\_data\); title 'Swimmeret Stimulation'; xlabel 'Time\(ms\)'; ylabel 'Extracellular Axon Voltage \(V\)': axis \(\[0 60000 \-.07 .07\]\); set\(gca, 'box' , 'off'\); set\(gca,'fontsize',16\); hold on; threshold=0.018; plot\(\[0 time\(end\)\],\[threshold threshold\],'k'\); pp=pointp\(sm\_zm\_data',threshold\); spike\_loc=find\(pp\); spike\_times=Tstep\*spike\_loc; sum\(pp\); for i=1:size\(spike\_loc\); peak\(i\)= max\(sm\_zm\_data\(spike\_loc\(i\)\-.001/Tstep:spike\_loc\(i\)\+.001/Tstep\)\); trough\(i\)= min\(sm\_zm\_data\(spike\_loc\(i\)\-.001/Tstep:spike\_loc\(i\)\+.001/Tstep\)\); end amplitudes=peak\-trough; plot\(spike\_times\*1000,\[peak;trough\],'ro'\) it says the error is in the "plot" \(it doesnt give me a line # for some reason, but i assume its the last line.\) It is able to graph the data, which is a bunch of spikes. However, I need to get red dots to appear at the max and min of each spikes, but they won't show up. I did this exact thing for 2 other data sets and it works fine
&gt;spike\_loc=find\(pp\); &gt; &gt;spike\_times=Tstep\*spike\_loc; I think you need to change the Tstep\*spike\_loc because spike\_loc is the indices of the location of the peaks. I think to fix it you should put spike\_times=t\(spike\_loc\); But even then you have to make sure that pp and t have the same length or else you are corresponding two values that don't necessarily have the same index in the respective matrix
\&gt; I hope I was able to help a little Oh, most definitely. We may not have ever actually fully understoood what the other was talking about / trying to accomplish, but it was definitely helpful advice nonetheless lol. Im pretty happy how it turned out, and actually use it quite frequently, since anytime I run into a static\-workplace\-related error when debugging i just run \`shiftWorkspace\` and can continue on like nothing happened. Is seemless enough that I dont even lose any focus on what im trying to debug. As an added bonus, I \*think\* that since everything is assigned using \`varCopy=varOrig\`, all the copied variables take on the standard "copy\-on\-write" property that Matlab uses, so this doesnt really use any memory other than what is needed to store any modified variables. Another useful \(though not intentional\) feature is that if you exit the temporary non\-static workspace with \`dbquit\` instead of \`dbcont\` the temp workspace effectively turns into a test workspace, so you can try different things and, if it doesnt work, very easily get back to the exact point that the function threw the error without actually needing to re\-run the function. . PS Im fairly sure the linked version has a couple bugs that I found and fixed on my local version f the code but I never got around to re\-uploading. In case you \(or whoever\) wants to use this Ill try and remember to update it tonight with the bug\-free version.
incredible find. Thank you! 
A Mac will talk from the terminal using the “say” command, in MATLAB you can access the terminal using the system function. I used to write code that would check if you were using a Mac and then say "Processing is now complete" at the end of the code. I just hope someone has run that code on a Mac since I wrote it. 
I’ve never used the table editor, but I find it easiest to simply put your X and Y data into two MATLAB vectors and either store them in the base workspace or enter them as literals (i.e. something like [0 1 2 3]) into the lookup table block dialogue. Then the “breakpoints” will be your X vector and “table data” will be your Y vector. If your data is already in Excel it should be easy to get it into MATLAB!
 why
I tried that, but why does not return a value, but only writes to console with disp :(. I think its possible to read from the command window, but you'll need to use java stuff for which for as far as i know is undocumented.
You want to plot it as a 3D graph?
You want to plot a vector field in 3d? In 2D there is quiver for this. Pretty sure there is quiver3, something like `quiver3(x,y,z,u,v,w);`
I think you're in the wrong sub. Not sure where to direct you, but audio drivers for Windows is *not* a Matlab thing. 
&gt; How do I do this? How do you expect it to look? What do you want the result to look like?
Yeah, neither do I know. It's only that matlab is the language I'm better at, so I thought about doing it from there. By the way, for what is worth, you can always compile something out of matlab or turn it into a C code (never done it though), so there is a possibility after all.
my educated guess is that you made a variable called exp. check your workspace or type ` which exp ` . 
&gt;As you can see, the Value of the number 2 breakpoint is larger then the one before and smaller than the following one. No it isn't. It's smaller.
Huh? There is a minus in front of the numbers? \-0.103 is smaller than \-0.102, no? Am I not seeing the obvious right now?
I'm just not quite understanding why the API is causing MATLAB to crash since MEX files are subroutines so normal (non-mx) allocations that weren't freed will remain until MATLAB closes. What exact error are you getting when MATLAB crashes? Heap corruption? Assert error (this may be caused by how you're handling the data when you return from MEX)? I can't see the full picture yet, but if you want to use MEX you'll probably want to use `mexAtExit()` to set an exit callback function for when MATLAB clears the MEX file. If you want to keep track of your pointers between calls to the functions you can allocate to a global variable using `mxMalloc()` and then call `mexMakeMemoryPersistent()` so you can access it again later. You can use all your normal C libraries when using MEX, so you could also spin off a background thread to handle the stream and then shut it down using the functions above. If you're not already, you can also attach a debugger to take a look at things. If you're on Windows it's pretty simple with Visual Studio. Just open the directory in VS, compile in MATLAB with `-g`, and then attach to MATLAB. Hope I've been somewhat helpful.
I have it in my student license. Anyway... Thoughts on how to start this? My doubt is right on how to start this really - whatever needs to be done/written around the main "structure of ideas" is not a problem for now.
You are definitely way more than helpful. As I wait for VS to install and update, I created a diary in Matlab to investigate the cause of the crash, resulting [to this output.](https://pastebin.com/yLQ64aXN) At least now I know that the issue is due to the USB interface! I will attempt to investigate your proposal with VS and report the findings. Thank you very much!
Depending how you what you want to show/visualize/demonstrate, I'd recommend using [slice](https://www.mathworks.com/help/matlab/ref/slice.html) to show relevant cross sections of the function. There are so other volumetric visualization methods at the bottom of that link.
Seems to have problems plotting? Could just be me though, didn't have a lot of time to troubleshoot it.
I have noticed it can be choppy if the buttons are pressed too quickly. 
 rref([A,B]) 
Your system doesn't have 2 solutions. It has a family of solutions. It is rank deficient. Eqn1=Eqn2+Eqn3
The problem is your set of equations doesn't have 2 solutions, it has infinite solutions. 
You can build a Simulink model into C++ code. Look at the code generation portion of the model options. Once you've set the options appropriately, just click the build button.
that worked, thanks!
&gt; Thoughts on how to start this? See if there's a way to interface with existing sound devices rather than trying to write your own (looks like there is - [WASAPI](https://msdn.microsoft.com/en-us/library/windows/desktop/dd371455(v=vs.85).aspx)), and try also to find examples of programs that modulate audio output. I'm betting that probably some kind of a custom audio mixer would probably be the kind of project you'd want to start from, but I don't know how easy it would be to find source code for it. In [looking around online](https://www.howtogeek.com/217348/how-to-record-the-sound-coming-from-your-pc-even-without-stereo-mix/), it looks like Audacity might be the place to start. It's open-source, so you might be able to dig down and find how they're interfacing. Probably not a beginner project, probably not a Matlab project, either, but /u/EatMyPossum made [this post](https://www.reddit.com/r/matlab/comments/8jto7o/making_matlab_talk/?ref=share&amp;ref_source=link) a few days ago, highlighting how to use [.NET with Matlab](https://blogs.mathworks.com/loren/2010/12/07/using-microsoft-net-to-expand-matlab-capabilities/).
This has happened to me in the past with Windows update. I'm sure it is obvious and you might have tried it already, but a full reinstall of Matlab will probably fix it.
There's an embedded code generation toolbox if you are looking to do embedded software. I currently use this at my job
Look at isosurfaces, you can colour code them and make them semi-transparent etc. Makes it look nice.
as I understand (please correct me if i'm wrong) a built model can only be used by opening the .exe file and opening external mode in matlab. I dont want to involve matlab after conversion.Is there another way?
This looks interesting is can it compile externally without being used as a toolbox from matlab
Colour cloud in 3D-Frame.
It's a $12 class. Are business promotions allowed on this sub?
&gt; then returns an error The errors are normally very descriptive. Why don't you tell us what the error is?
Are you calling the function correctly?
make sure windows defender isn't clocking in crazy cpu usage
Instead of using the tf function and other functions from the symbolic toolbox you can define your own vector of frequencies and do all the transfer function calculations yourself using arrays. Matlab has to do this eventually anyway and plug in numbers for frequency in order to make the Bode plot. I don't have Matlab in front of me but something like this should work. First, you can get a frequency vector, w, using the [logspace](https://www.mathworks.com/help/matlab/ref/logspace.html) function or some other clever method. w = logspace(-5,5,1000); % 1000 logarithmically spaced points in the interval [10^-5,10^5]. s = i*w; % s is just j*w h1 = 0.474932 ./ (s + 0.474932); % Note you are doing division for each element of the array so you need ./ And similarly for h2, h3, and h. Then you can get the magnitude via the abs function and phase via the angle function. Finally, make your own logarithmic Bode plot using loglog.
I don't have a use for it right now, but this all actually sounds really cool. Good job finding the virtual audio cable and VSTHost! I would imagine that, if you can intercept audio output in realtime, you could probably also intercept audio *input* in realtime as well, so you could make modulators or filters (voice changers, effects pedals, etc.) in Matlab or Python or something and make your own recording studio suite :)
Sir, I owe you a pint! Inside the callback, I had a `mxMalloc()`, which I free each time the callback is over. Exiting at a random without disabling the stream caused the crash. One last question, please. When I run the MEX and exit all variables are lost unless I make them `mexMakeMemoryPersistent()`? That would be more than enough to let me do what I want. &gt; Hope I've been somewhat helpful. You taught me to, 1. Debug a MEX 2. Allocate memory correctly 3. Interact with the .dll API efficiently and most of all, to not give up hope. 
Having the error would help us finding the problem. From what I have seen at the code, it requires this one to run when you set a window size: [https://www.mathworks.com/matlabcentral/fileexchange/12550\-slidefun](https://www.mathworks.com/matlabcentral/fileexchange/12550-slidefun) If you do have the slidefun downloaded and in the same folder, I believe you may be running out of memory. Which actually seems more likely as you mentioned the code takes a long time to run. Quickly looking at slidefun, if your data vector has N elements, it will create a N x N matrix internally. For your case, N = 11440000 would need roughly one exabyte of memory if I got that code right. I would look into another solution such as a for loop to implement that. If you do not set a window size, it does return a single value, as specified in the comments: `% windowSize = window size of moving spl calculation. If no windowSize is``% declared, the spl of the entire input signal will be``% returned as a scalar. If windowSize is declared, but Fs is``% not declared, the units of windowSize are number of``% elements of the input vector. If windowSize and Fs are``% declared, the units of windowSize are time given by 1/Fs.` Note that if your sampling frequency is 190667Hz, it returns the average sound level for the second around each sample, when you require a window size of 190667. I'm not sure if that is what you meant. If you just need the instant spl in db for each sample, no moving averages, no windowing or any of the sort, just running: `spl_db = 20*log10(y/p_ref);` should give you your result.
Thanks could you please direct me to a tutorial or link I’ve been looking for a while .
&gt; spl_db = 20*log10(y/p_ref); this works super great. i guess you were right. it was a memory issue.
You could start here: https://www.mathworks.com/help/dsp/ug/generate-c-code-from-simulink-model.html;jsessionid=4defee0f8c6b78adfbf8c97644f5
Yes, thanks! In fact, capturing audio inputs is pretty straightforward with Matlab if you have the daq toolbox, which has built-in objects to get the data vectors coming and do whatever you want with them. If you don't have that toolbox there may be some additional hard work to do, but it shouldn't be more than two arm's length away. I guess the VSThost reamke process would probably demand some Visual Studio work, while the virtual cable might demand something even more low-level maybe. However, Cockos (the guys from REAPER) have (something like) their audio driver source code as open-source, so that could be used to make a bridge between one place and somewhere else.
Yes I clicked on that error and looked at the code for integral2Calc but I couldn't decipher it. I'm not very experienced in programming. You and u/FallingPiano cleared it up for me though. Thank you.
Ok that fixed it. Thank you very much.
 +Matlab code
What is "c=1" for? 
Unformatted code, not optimized, with superfluous variables and no explanation. On mobile, so I can't double check, but I'm pretty sure you can replace everything after the `im2double(x)` with just `ex = log(1 + x);`.
Something like this? % data x = 1:10; y = x + rand(1,10); % fitting the data p = polyfit(x,y,3); y_ = polyval(p,x); % compute the error error = abs(polyval(p,x) - y); SAD = sum(error); MSE = sqrt(sum(error.^2)); % display scatter(x,y); hold on plot(x,y_); hold off title(sprintf('The mean squared error is %.2f', MSE)) 
+log transformation tutorial
Yeah exactly, thanks :)
+Connect Mobile Camera With Matlab Amzing
I think you can use the profiler to get the information you're looking for: [https://undocumentedmatlab.com/blog/profiling\-matlab\-memory\-usage](https://undocumentedmatlab.com/blog/profiling-matlab-memory-usage)
I'm somewhat confident you can just use `nnz()`. MATLAB stores `nzmax` (non-zero max) directly, so this function probably just retrieves it. You can calculate the memory usage by using the fact that MATLAB allocates space for &gt;* A pr array of length nzmax. &gt;* A pi array of length nzmax, but only if ComplexFlag is mxCOMPLEX in C (1 in Fortran). &gt;* An ir array of length nzmax. &gt;* A jc array of length n+1 where `n` is the number of columns. More info [here](https://www.mathworks.com/help/matlab/apiref/mxcreatesparse.html). This means that for a real matrix on a 64 bit machine you have memory usage of 8\*(2\*nzmax + (n+1)). If you want more confidence, you can get `nzmax` [directly](https://www.mathworks.com/help/matlab/apiref/mxgetnzmax.html) using the [MEX API](https://www.mathworks.com/help/matlab/mex-library.html). Good luck!
thanks, I did get it eventually but this explains the code really well
The "answer" was to download and instal an update to MATLAB 2018a, which can be found [here](https://www.mathworks.com/downloads/web_downloads/download_update?release=R2018a) 
Why do you think that using a BLAS other than the MKL version currently used in ML will give you a 50% speed up?
I just finished (literally yesterday) A new computer with a i9-7900x CPU, which has AVX-512. R2018a ships with MKL 2017 update 0. [Looking over the MKL release notes](https://software.intel.com/en-us/articles/intel-math-kernel-library-release-notes-and-new-features), literally every MKL release has a handful of major performance improvements related to AVX-512. Furthermore, I dont think that MKL 2017 update 0 will even use AVX-512, since the release notes for 2017 update 2 include "Intel® AVX-512 code is dispatched by default on Intel® Xeon processors " (Im fairly sure skylake-x is recognized by software as a Xeon). Between enabling AVX-512 and 6 updates worth of AVX-512 specific improvements, I wouldnt be surprised if I got close to double the performance by updating to the newest MKL version, though +50% seems like an absolute minimum of what I should expect.
That’s what I figured. Yep, makes sense.
I wouldn't recommend this, since there is more at stake than performance. MATLAB is specifically tuned to integrate with the version of MKL that ships with it. Upgrading MKL without any of that tuning can introduce nasty bugs. The blog post you linked to includes a warning along these same lines. For example, you might upgrade and then notice that multiplying two matrices causes MATLAB to crash (not necessarily the case, just one possible side effect). I would say the only good reason to upgrade MKL beyond the one that ships with MATLAB is to work around an existing bug in MKL that is causing you issues with a specific problem. And even then, you would only use the upgraded version when solving that particular problem, and would revert to the version that ships with MATLAB for general computations. 
You can plot another dataset on the same graph with hold on and then plot whatever you want to plot. 
Sorry I was MIA, but he was removed by the admins before I could block him
[removed]
I think he wants the engine to know that since a = bcd; c = a/bd implicitly. I'm not sure how he would go about doing that, but I figured I'd clarify on his intentions.
Kinda depends on what kind of noise the image has. If it is a low interest standard white gaussian noise, a sliding median filter should do the job. The image processing toolbox has functions in place to do this for you, you just give it the image and window size, but even if you don't have this toolbox it's not the hardest thing in the world to develop a sliding window filter. There are definitely tutorials online
I’m not sure if it is gaussian noise or not, but I don’t think it is because some of the photos are taken through water so I think that messed up the photo quality 
I have not used `Transform` objects, but my 5 second impression is that it's way overkill if all you want to do is animate some points. Here's what I'd do: * When you plot each entity, store the handle to the plot as a member (`h = plot(...)`). * When you want to update the plot, use either `set()` or simple dot-notation to update the `XData` and `YData` of the entity's plot (`obj.h.XData = current_x; obj.h.YData = current_y`). * Make a call to `drawnow` after everything is updated. You may find you want to slow the animation down. If so, you can use `pause` in addition to/instead of `drawnow` This is most similar to your second option. You don`t re-plot the entire thing every frame, you just update the plots that you already made. It's *much* faster to do it that way.
I was tryng to do it by using plot function but it didn't work, but with your code it does, maybe I was writing something wrong, thanks
I was tryng to do it by using plot function but it didn't work, but with your code it does, maybe I was writing something wrong, thanks
It's me again, it seems that I'm having trouble with Plot([Sh_Min Sh_Min],[Sh_Max Sh_Max],'-k') it just doesn't plot the solid line, I don't know what it is, every other single line is good but that specific one doesn't work, any ideas?
Try rescaling the original image from 0 to 1. max(image(:)) should be 1 before gamma corrections
What do you mean rescale the original image from 0 to 1? Could you expand on that a bit for me? I'm pretty new to MATLAB.
Try this: &gt;&gt; activeImg2 = double(activeImg); &gt;&gt; activeImg2 = activeImg2 - min(activeImg(:)); &gt;&gt; activeImg2 = activeImg2/(max(activeImg2(:)); &gt;&gt; activeImg2 = gammaCorrector(activeImg2); &gt;&gt; figure; imshow(activeImg2); 
On the second line I get an error that says: Error using - Integers can only be combined with integers of the same class, or scaler doubles. Should I make activeImg a double also?
I made a a mistake The second line should be: &gt;&gt; activeImg2 = activeImg2 - min(activeImg2(:)); 
yes, that is exactly what I meant. I am currently taking a course in system controls and finding transfer functions can be very tedious due to long equations; for this post, I've used short equations to demonstrate my question. 
In that case, have you tried using the transfer function command [tf?](https://www.mathworks.com/help/control/ref/tf.html) you can assign transfer functions to your variables and form algebraic expressions with them. You can also transform that into a zero-pole form using the [zpk function](https://www.mathworks.com/help/control/ref/zpk.html)
I am assuming the circuit has states, otherwise the whole argument below becomes meaningless. How do the states get integrated inside the circuit block? If it is a continuous model then the module somehow has to know the sample time of the simulation. Or if it is a discrete time model than you have to make sure that the block is running at the appropriate frequency.
Don't do symbolic math. Don't do symbolic math. Don't do symbolic math. It's slow, it doesn't play nice with anything else, and there's almost never a reason to use it. Use symbolic math to get your answers, then convert to a function handle. Consider this: syms a b; S{1} = matlabFunction(a+b); S{2} = matlabFunction(a*b); S{3} = matlabFunction(a/b); Now you can do: &gt;&gt; S{1}(2,3) ans = 5 &gt;&gt; S{2}(2,3) ans = 6 &gt;&gt; S{3}(2,3) ans = 0.6667 Actual function handles will typically play nice and do what you want them to do, you can pass them to other functions, etc. Symbolic expressions are **dead weight.** Stop dragging them around.
Oh shit. So I take it that I shouldn't use symbolic math? Jk, but this is great! I didn't know this. Many thanks! 
Here's the rule of thumb: symbolic math is for doing... symbolic math. If you want to pass a number in or get a number out **it ain't symbolic math**. 
Matlab is a pretty intensive application, so it would be recommended to open Matlab *first* when you want to use it, then navigating the current directory in Matlab to the location of the file (or copying the file to the current directory in Matlab). You can then directly open the file in Matlab. In fact, you can open multiple files in multiple tabs all at once, while manipulating things from the command window. Hope this is helpful.
I feel like I may have to download the file association fix. I understand what you're talking about, opening M files by starting up Matlab first. But my issue is just that they don't open when I go to my folder location and open it that way. It opens fine when I just boot up Matlab though.
You can use `cart2pol` to convert a complex number into a radius and angle, is that was you mean?
What I mean is instead of inputting x= 60+103j Y=32+192j Z=x/Y Is there a way just to put (120&lt;120°)/(120&lt;0°)
Checkout the symbolic toolbox 
Have you tried looking up the shooting method? That’s how I solved the Blasius Equation.
Yeah: 120 * exp(1i * 120 * pi / 180) / (120 * exp(1i * 0 * pi /180)) or more generally \(a\&lt;b\) / \(c\&lt;d\) a * exp(1i * b) / (c * exp(1i * d))
You can use the exponential function to input \(r\&lt;a\) as r * exp(1i * a) Or you can always make your own class, for example: classdef pol properties radius; angle; end methods function obj = pol(r, a) obj.radius = r; obj.angle = a; end function disp(obj) disp(['(', num2str(obj.radius), ' &lt; ', num2str(obj.angle), ')']); end function p3 = mtimes(p1, p2) p3 = pol(p1.radius * p2.radius, p1.angle + p2.angle); end function p3 = mrdivide(p1, p2) p3 = pol(p1.radius / p2.radius, p1.angle - p2.angle); end end end Using this class you can type: &gt;&gt; pol(1, 0.2) * pol(2, 0.1) ans = (2 &lt; 0.3)
Hi folks, I posted this on r/computervision but I think some of you dealing with the computer vision toolbox might be interested! \(sorry if not\) Making calibration targets has always been a pain in my research lab, so I started [calib.io](https://calib.io). I have just made this online tool for quickly generating calibration targets. You can download them as a PDF and print yourself \(Just make sure that your printer does not apply scaling\). If you don't feel like printing yourself, you can of course support us and have us provide you with a rigid metal composite board. I hope to add more pattern types in the future, such as CalTag. I welcome any feedback!
\^ This, 100%. As soon as you need an actual number, *stop using symbolic expressions.*
Yes. ... do you have a more specific question?
I get an error when I try to do this as described. Have you declared `x` as symbolic? I think so. Try it instead without the function handles, then convert to matlabFunctions when you're done, like so: f_sym = x^5 - 6*x^4 + 14*x^3 - 20*x^2 + 24*x - 16 fd_sym = diff(f_sm) fd_sym = diff(f_sym) u_sym = f_sym/fd_sym du_sym = diff(u_sym) f = matlabFunction(simplify(expand(f_sym))) fd = matlabFunction(simplify(expand(fd_sym))) u = matlabFunction(simplify(expand(u_sym))) du = matlabFunction(simplify(expand(du_sym))) Like I mentioned in another answer [I wrote yesterday](https://www.reddit.com/r/matlab/comments/8lbify/pass_values_to_function_in_an_array/dzehlxa/), do the hard work with the symbolic math, then convert to function handles when you're done. Symbolic math doesn't generally play nice with function handles (or anything else). 
This isn't vague, this is pretty clear. The whole point is for you to understand how Lagrange multipliers work. Do you? If you do, you shouldn't really care that the problem statement is in 3 functions. How would you formulate this as a merit function with Lagrange multipliers?
thanks! copied what you've sent, diff does not work , why ? and yes I was using syms
I put z in terms of x and y (z = x+y) and found the gradient( in terms of x and y). I then solved them for 0 and put them into fsolve. What I'm really wondering is how to use the guess. I used x(1) as x, x(2) as y, and x(3) as lambda. Is the guess vector for those 3 values? 
Looks like it's a custom/3rd party toolbox. Maybe there's some expert on that toolbox here, but probably you're not going to get any help unless your question is a more general Matlab question and not specific to your domain or the toolbox. Generally speaking, as with anything in Matlab, I would suggest you read the documentation. That said, it looks like the link to the toolbox primer is broken. There is a link to the [manual](https://www.jyu.fi/hytk/fi/laitokset/mutku/en/research/materials/mirtoolbox/manual1-7.pdf) from the [homepage](https://www.jyu.fi/hytk/fi/laitokset/mutku/en/research/materials/mirtoolbox), but it's over 200 pages long. At a glance, it looks like it's really a manual - more of a textbook on how to use the tools than it is a reference guide like most stock Matlab documentation. Good luck. It looks like it will be a royal pain to follow along in the manual unless you're looking to read it cover-to-cover.
Those aren't numbers. I'm not sure what you're saying. 
Also your g() function doesn't actually indicate a constraint. It the constraint that g() = 0?
I was told to equate the x component of the gradient of f to lambda times the x component of the gradient of g. I did this for each variable and solved each equation for 0, then put them into fsolve. to do that, I was told to use x(#) for each different variable in the equations(x, y and lambda) 
&gt;surface given by the graph of the function g(x,y) = 2−x^2 − (1/2)y^2 Meaning the constraint is z = g()? 
Okay. But your guess still needs to be a number. If somebody asked you to guess where is the minimum of f(x) = x^2 - x, would you reply "x", or "0.5"? A variable is not a number. 
My guess was a number. The function i put in fsolve used "x (2)" instead of "y" because thats what i was told to do by an instructor
Yes
sorry, this was assuming `syms x` at first. I'll edit the comment. 
What number is x(2)?
The print statement at the bottom might be a hint. It is finding the pixel with greatest correlation coefficient between two images.
Oh, you're talking about writing the function. Yes x(2) makes perfect sense there. Now I understand. Yes. Your guess should be a guess at the input vector that you are trying to optimize. So if your function is f(x) you want to provide a guess x0. It should be exactly what your function is expecting, so you could call f(x0) and get a reasonable answer. 
Its used as the variable y in fsolve 
hey thanks. I managed to figure it out. 
Alright thanks so much 
So you want [diag](https://www.mathworks.com/help/matlab/ref/diag.html)?
I wanted to see the whole thing 
So [hold on](https://www.mathworks.com/help/matlab/ref/hold.html) then?
Seconded. However, I would be prepared for an analytic solution that is... untidy, like your example. Such solutions I've found not to be terribly practical. If that turns out to be the case you may want to consider fixing one or more inputs, or generating a dataset of specific solutions in a domain you're interested in for later interpolation.
use fmincon
You could also try using mesh
so I changed y for w just to get the cell array size from it. (in the docs didn't find how to size it, just how to clone. would it just be cell(1,4)? w=zeros(1,4) sw=size(w) y=cell(sw) still i'm getting this message Conversion to cell from function_handle is not possible. 
w=cell(1,4) w{1} = fcn1 w{2} = fcn2 etc...
but what do i need to use to analize it? using the big O notation or flops?
Look at your code! For example, the algorithm for matrix-matrix multiplication is of order N^3 operations.
[BigO Notation](https://en.wikipedia.org/wiki/Big_O_notation) analyzes the program by looking at the code itself and figuring out which portions of the code will take the most time to run. Counting [FLOPS](https://en.wikipedia.org/wiki/FLOPS) is essentially running the code and timing how long it takes to run. They both have different uses, like inspecting a car in the shop vs watching it run on a race track.
Thanks a lot! 
You probably don't want this. Not that it is impossible, but mathworks team often modify functions directly and compile their own flavor together with bootstrapping their own matrix algebra routines. This was an issue for example when ?GEBAL bug was a problem. There are other less obvious interactions so you might end up getting completely wrong answers and you won't be able to notice it unless you look very carefully.
You should be able to call **csvwrite()** with the proper offset to have it put the data after the headers. Your code only shows an attempt to write **B** so I am not sure what you are doing with **yfit**. However, if you combine **B** and **yfit** into an output matrix of size *[N x 2]* and call **csvwrite()** you should be able to get the output you desire.
&gt; I need to count the arithmetic operation for the code resulting complexity. *Why* do you need to do this? Did someone tell you to do it? Did you ask *them* which method you should use?
[GIFV link](https://i.imgur.com/CEwFlov.gifv) --- _^I ^am ^a ^bot. ^[FAQ](https://www.reddit.com/r/livven/wiki/gifv-bot) ^// ^[code](https://github.com/Livven/GifvBot)_
Yeah i figured it out now. Thank you
Thank you so much for this! I edited it in this way: % script to allow movement of a cursor using the directional keys 8-4-2-6 %-------------------------------------------------------------------------% %creating the cursor environment T = 1; while T &lt;= 10 cursor_env = figure; hold on axis([1 2000 1 2000]) grid on xlim([1, 2000]) ylim([1, 2000]) x_values = (1:.25:2000)'; y_values = (1:.25:2000)'; set(gca,'xticklabel',{[]}) set(gca,'yticklabel',{[]}) xticks(x_values(1:16:end,1)) yticks(y_values(1:16:end,1)) stext1 = text(196.0208, 1899.860724233984, 'The directional buttons are: 8 - up, 4 - left, 2 - down, 6 - right'); stext2 = text(746.252595155709, 1689.41504178273, 'Move the cursor to begin'); %adding start cursor at random point on figure x0 = randi(length(x_values)); y0 = randi(length(y_values)); s_cursor = plot(x_values(x0,1), y_values(y0,1), 'bl O'); s_cursor_cd{T} = [s_cursor.XData s_cursor.YData]; n = 1; current_cursor{T} = s_cursor_cd{T}; h = findobj(gca, 'Type', 'Line'); xC = h.XData; yC = h.YData; current_cursor{T}(n,1) = xC; current_cursor{T}(n,2) = yC; c_cursor = plot(xC, yC, 'bl O'); delete(s_cursor) %adding target point xT = x_values(randi(length(x_values)),1); yT = y_values(randi(length(y_values)),1); target{T} = [xT yT]; xr = 50; yr = 50; tgt = plot(target{T}(1,1), target{T}(1,2), 'r O'); target_met = (c_cursor.XData &gt;= xT - xr &amp;&amp; c_cursor.XData &lt;= xT + xr) &amp;&amp; (c_cursor.YData &gt;= yT - yr &amp;&amp; c_cursor.YData &lt;= yT + yr); while target_met ~= 1 %placing x0 and y0 as first coord, waiting for directional press bpudlr = waitforbuttonpress(); tic bpn = get(gcf, 'CurrentCharacter'); bpns = str2double(bpn); %checking to see which button has been pressed, moving point specified %direction %up if bpudlr == 1 &amp;&amp; bpns == 8 == 1 delete(stext1) delete(stext2) set(c_cursor, 'XData', current_cursor{T}(n,1)) set(c_cursor, 'YData', current_cursor{T}(n,2)+50) current_cursor{T}(n+1,1) = c_cursor.XData; current_cursor{T}(n+1,2) = c_cursor.YData; drawnow end %down if bpudlr == 1 &amp;&amp; bpns == 2 == 1 delete(stext1) delete(stext2) set(c_cursor, 'XData', current_cursor{T}(n,1)) set(c_cursor, 'YData', current_cursor{T}(n,2)-50) current_cursor{T}(n+1,1) = c_cursor.XData; current_cursor{T}(n+1,2) = c_cursor.YData; drawnow end %left if bpudlr == 1 &amp;&amp; bpns == 4 == 1 delete(stext1) delete(stext2) set(c_cursor, 'XData', current_cursor{T}(n,1)-50) set(c_cursor, 'YData', current_cursor{T}(n,2)) current_cursor{T}(n+1,1) = c_cursor.XData; current_cursor{T}(n+1,2) = c_cursor.YData; drawnow end %right if bpudlr == 1 &amp;&amp; bpns == 6 == 1 delete(stext1) delete(stext2) set(c_cursor, 'XData', current_cursor{T}(n,1)+50) set(c_cursor, 'YData', current_cursor{T}(n,2)) current_cursor{T}(n+1,1) = c_cursor.XData; current_cursor{T}(n+1,2) = c_cursor.YData; drawnow end n = n + 1; target_met = (c_cursor.XData &gt;= xT - xr &amp;&amp; c_cursor.XData &lt;= xT + xr) &amp;&amp; (c_cursor.YData &gt;= yT - yr &amp;&amp; c_cursor.YData &lt;= yT + yr); end trial_time(1,T) = toc; wintext = text(196.0208, 1899.860724233984, 'Target Reached'); continuetext = text(196.0208, 1500.860724233984, 'Press any button to continue trials'); bpe = waitforbuttonpress(); if bpe == 1 T = T + 1; end end 
Havent used MatLab in a while; do you not need a semicolon after syms s?
Nope. You technically don't need a semicolon after most lines (or any?), but Matlab likes to give a warning about how the line evaluation may display in the console when you run the script. The only thing the semicolon does is prevent it from displaying in the console when you run the script.
Is that a boob bouncing?
&gt; MATLABWindow: symbol lookup error: /usr/lib/x86_64-linux- gnu/libatk-1.0.so.0: undefined symbol: g_log_structured_standard It sounds like your operating system is using a library that is out of date. Simulink is using this library and expecting this function to be present, but it's not there on your system for some reason. Depending on what Linux distro you are on, you can try updating the package that provides his library using your system's package manager, or you might need to move forward to a newer release depending on what the dependencies of that library are. 
High school and you're learning Fourier transforms? Im impressed. Let me take a look...
Can you provide the txt file. You can dm me
No no no, This is not business promotion. I am just sharing the information for Sub people who are interested to learn. 
I'm working with MATLAB 2018a, it's the newest and latest edition. I installed it today but I'm having issues with Simulink and its respective tools. How can I update the package that provides my library. I'm new to Linux Ubuntu and I've my system up at least 4 times already, i need guidance in how to proceed in solving the aforementioned issue.
Are you using Windows?
Bet this is it. To make the code more robust you should have’x=1:1:length(y);’ instead of explicitly defining the range of x.
https://www.mathworks.com/matlabcentral/answers/364551-why-is-matlab-unable-to-run-the-matlabwindow-application-on-linux
Maybe you've got something else using the `s` name. Try `which s` before running your code. I don't know what would happen if you made a function named `s` and then tried to use it with `syms`.
What have you tried? Have you read the documentation about creating plots in Matlab? 
What is the error? Is it a secret? The error message literally tells you exactly what the problem is. Also, what's the point of that for loop? Aren't you just setting x = 1:365? i is the imaginary number, sqrt(-1). Don't use it as a variable like that. 
 It's final exam week next week so i'm working on them but the thing is I have so little knowledge about matlab so asked here if anybody could help me with the code. Probably it's quite easy when I think about that he asked like that was the final question if I could plot that.
... And a link to imgur. What I should have done was look directly to the gif file. 
Dude it's engineering project which they gave me when I couldn't say much about it. I changed school 2nd grade, I passed the same class without any Matlab information (they gave C on other school) the lesson they gave here was too basic anyway. Although it would be nice if someone does it for me, I know it's not fair asking about it. At least I need pretty good explanation of the topic due to the reason I stated above.
Yeah - you're trying to vertically concatenate some matrices and their dimensions are not consistent. You'll need to make the dimensions consistent, then try again.
just plot it as a coordinate over time (tIme series), if its a motion stability vector if you plot a whole video worth of it it should just look like a circle in 3 dImensions with noise in the middle of it. As mr. lazer said you gotta do your own hw we can only help point in the right direction.
I think the problem is that you're inconsistently using spaces in your anonymous function definition. You have: deq1z=@(t,y)[a.*y(1)-b.*y(1).*y(2) -g.*(y(1).^2); ... -c.*y(2)+d.*y(1).*y(2) - h.*(y(2).^2)]; The first line has ` -g.*(...`, and that space only on one side makes Matlab think you want a new column there. I'll format it differently to show you what you wind up with: deq1z=@(t,y)[a.*y(1)-b.*y(1).*y(2), -g.*(y(1).^2); ... -c.*y(2)+d.*y(1).*y(2) - h.*(y(2).^2)]; The second line, you have a space on either side of the minus sign ` - h.*(...`, and so Matlab thinks that should all be together as one thing. Don't put any spaces in a matrix definition, or put a space on both sides of operators. 
&gt; I found some code online and submitted that for my project but can't answer any questions about it. Can *you* answer the questions? You were asked to sketch it. You mean by hand? Do you mean plot it with Matlab? Did you try just googling "how do I plot something in Matlab? &gt; It's final exam week next week Wow sounds like now's the time to pay attention and ask for help and figure out how to do everything /s
Yes, Windows 10 home.
My senior design project at college was completely run by an Arduino with a laptop running Simulink. Having the interface made it so easy to watch our models run and test systems purely in simulation before running it on the hardware. Looks like a super fun kit!
If you can, update to R2018a and then install R2018a update 2. This will \*probably\* fix the issue. Spring creators update broke Matlab symbolic functionality \(at least on R2018a, but, it probably did on earlier versions too\). Im guessing your home computer updated \(since Microsoft doesn't give you the option to not update unless you have a pro/enterprise license\). The schools systems most likely haven't installed the update \(These tend to be enterprise licenses that either don't get updates until the general population had identified all the major bugs and they've been resolved, OR never updates at all, depending on which enterprise version is being used\). The only way I know to fix this is to install R2018a update 1\+ \(update 2 also installs everything from update 1\). AFAIK, people with older versions of Matlab on Windows 10 who can't upgrade to 2018a and pretty much screwed \(which is probably why TMW hasn't been particularly vocal about this issue and the available fix\).
I’ve tried to use imgradient to be able to recreate this but have had no luck, I’d appreciate if someone can point me to the right direction 
np, glad to help. Little stuff like that can drive you crazy.
Sure. Make a line that blends from black to white, then stack all the lines up. Set each channel (R,G,B) to those values, and display the result. gradientLine = linspace(0,1,1024); gradientImage = repmat(gradientLine,768,1); myImage(:,:,1) = gradientImage; myImage(:,:,2) = gradientImage; myImage(:,:,3) = gradientImage; image(myImage) 
Is it vectorized? Vectorize it. 
Collect environmental conditions as well as measure moisture samples with whatever other dirty math and parameters you need. 
It's an annoying bug of 1803 (Spring update). You need to update to MATLAB 2018 a.
It is a discrete model \(as the underlying principle is model predictive control\), the system is to measure the states of the circuit and feed them into the matlab function for them to be evaluated and in turn spit out an output \(switching states\) that will control the future state of the circuit.
Hey. Sorry I still wasn't able to solve the problem. The Mat file and the script are in this link. Thank you so much in advance. [https://drive.google.com/open?id=19oH487ozvX0tT1h\_\_a2B6CvzLIpEXxmg](https://drive.google.com/open?id=19oH487ozvX0tT1h__a2B6CvzLIpEXxmg)
What are acceptable values of R1, R2, and C?
R1 should be something of 10\^3, to 10\^4 tops. R2 should be something of 10\^6. And C can be anything bellow 10\^\-6
Nope. Sorry :/ 
So you’re fine with not matching the phase of your data?
Alright sorry this took me awhile, I had to run an errand for a little bit. Anyway, I'm not sure which frequencies you care about the most, but overall, I believe the least-squares results I am getting fit the experimental data better than your values. As you will see, I have two methods, the first method fit your model to the measured data in the regular spectrum world and the second method does the fitting in the decibel realm. The solutions to R1, R2, and C between the two methods slightly differ which the dB solutions are slightly lower. Feel free to mess around with the code. Hope this helps you a little bit! [LSQ MATLAB Script -- OneDrive Link](https://1drv.ms/u/s!AsdILTvMFOwFipEZ_TlFltO4YpN0jQ/)
This all seems awfully complicated. 
With a student license this will be difficult. I you live in the US you can try the MATLAB parallel cloud which should be free (last time I checked). Maybe your school/university has a cluster on which you can run MATLAB jobs (that was how I solved my problem since I don't live in the US). But first you should vectorize and allocate variables before the remaining loops. If you have a multicore processor you can use the parallel computing toolbox.
i have created a matlab s function to simulate the nuclear reactor. But I am getting this error and dont knw whats happening. Pls help me.
LL=[250E-6, 250E-6, 500E-6, 500E-6, 250E-6, 500E-6]; ww=[5E-6, 10E-6, 5E-6, 10E-6, 5E-6, 10E-6]; dd=[0.2E-6, 0.2E-6, 0.2E-6, 0.2E-6, 0.1E-6, 0.1E-6]; for iii=1:length(LL) ti = 0; tf = 2.50E-9; tspan=[ti tf]; y0=[0; 0; 0]; V=LL(iii)*ww(iii)*dd(iii); [T,Y]= ode45(@(t,y) rate_eq(t,y,V),tspan,y0); figure(1); hold on plot(T,Y(:,1)); title('Densité des porteurs'); xlabel('Temp'); ylabel('tayc'); hold off figure(2); hold on plot(T,Y(:,2)); title(' Densité de phorons '); xlabel('Temp'); ylabel('photon'); hold off figure(3); hold on plot(T,Y(:,3)); title('k gc'); xlabel('Temp'); ylabel('G'); hold off end figure(1); hold on legend('L=250 \mum,w=5 \mum,d=0,2 \mum','L=250 \mum,w=10 \mum,d=0,2 \mum','L=500 \mum,w=5 \mum,d=0,2 \mum'... ,'L=500 \mum,w=10 \mum,d=0,2 \mum','L=250 \mum,w=5 \mum,d=0,1 \mum','L=500 \mum,w=10 \mum,d=0,1 \mum') hold off figure(2); hold on legend('L=250 \mum,w=5 \mum,d=0,2 \mum','L=250 \mum,w=10 \mum,d=0,2 \mum','L=500 \mum,w=5 \mum,d=0,2 \mum'... ,'L=500 \mum,w=10 \mum,d=0,2 \mum','L=250 \mum,w=5 \mum,d=0,1 \mum','L=500 \mum,w=10 \mum,d=0,1 \mum') hold off figure(3); hold on legend('L=250 \mum,w=5 \mum,d=0,2 \mum','L=250 \mum,w=10 \mum,d=0,2 \mum','L=500 \mum,w=5 \mum,d=0,2 \mum'... ,'L=500 \mum,w=10 \mum,d=0,2 \mum','L=250 \mum,w=5 \mum,d=0,1 \mum','L=500 \mum,w=10 \mum,d=0,1 \mum') hold off function dy = rate_eq(t,y,V) dy = zeros(3,1); % d = active layer thickness [meters] %d = 2E-7; I = 0.3; % te = electron lifetime[seconds] te = 2.2E-9; % tp = photon lifetime tp = 1.6E-12; % BuyukGama = optical confinement factor BuyukGama = 0.3; % a = linewidth broadening factor[GAIN CONSTANT][cm^2 -- m^2] a = 2.5E-20; % Betasp = malzemenin spontane emisyon faktoru Betasp=10^-3; % B= radiatif rekombinasyon sabiti[CM^3/S -- m^3/s] B=10E-16; % c =velocity of light[m/s] c=3*10^8; % e = electron charge e = 1.602E-19; %ug= grup reflecive index ug=4; % n0 = carier density at transparancy[cm^-3 -- m^-3 ] n0 = 1E24; % V = volume[m^3] %V=d*5E-6*250E-6; % h = Planck Constant h = 6.626074E-34; % vg=grup velecity[vg= c/ug] vg= c/ug; % am= resonator loss [cm^-1 -- m^-1] am=45E2; % nuu = frequancy nuu =(c/1300E-9); % Ey(1): carier population % y(2): photon population % rate equation for carrier density % Carriers dy(1) = (I/e) - y(1)/te - (BuyukGama*c*a*(y(1)/V-n0)/ug)*y(2); % Photons dy(2) = (BuyukGama*c*a*(y(1)/V-n0)/ug)*y(2)- y(2)/tp + Betasp*B*y(1)^2/V ; dy(3) = h*nuu*vg*am*dy(2)/2;% end 
That works, it just doesn't look particulary nice since it's just a plane you're looking at (so just using imagesc would be more visually appealing). Try it with z = 1 - (x-(-1)).^2-(y-1).^2 and you can see that there's a 3D thing going on. (You can rotate and move using the hand and circular arrow icons on the toolbar.) 
Are your `printf` statements working? You're supposed to use [`ssPrintf`](http://www.mathworks.com/help/simulink/sfg/ssprintf.html) in s-Functions. I would keep adding these until you can pinpoint where the crash happens. You probably have a segfault or something of that nature.
The first thing to consider is that your employer would probably not appreciate that.
Well I was also thinking, after I wrote the post, it wouldn't really make sense if they gave us that capability cuz each license is for one machine, right? Or else mathworks is relying on the honor system to keep one license per machine, which seems totally unlikely 
Try adding some to the initialization functions, then. Hopefully it always happens in the same spot and you can find your error.
I know that there are both individual and network licenses for MathWorks products, but beyond that I don't know much. It's complicated and I let my employer handle it. But I would agree with the basic point that this isn't likely to be as simple as re-using the license info.
I have initialized all variables. Also exception handling for file I/O. Usually it crashes when I re-complie s-function (mex).. I think there is some memory allocation issue but unable to figure out what it is exactly.
You might consider setting up some type of remote desktop thing. Then MATLAB stays on your work computer and you are just accessing your computer remotely! I use TeamViewer or Windows Remote Desktop but there's probably way better ones out there; those are just the most low-effort ones.
If you have one of the eligible licenses, you can access Matlab Online which runs from your web browser. Check it out 
Can you do this work in Octave (GNU MATLAB clone)?
Pardon for prying, but is there a reason why you're not using the MATLAB function block? They use m, but you don't need to create the IO information for the block, it just becomes inherited from your function definition. They're supported for code generation as well. I use them when I need dynamic equations which can function in MATLAB or Simulink. I'll write the ODE in m, then just throw it in a MATLAB function wrapper to use in Simulink. 
Thank you for your reply, I have included those function by #include "MultiRotor.h" (and inside that #include "matrix.h" and compiling all 3 files together in "mexHexa.m"), I also tried your suggestion but it gives errors (redefinition of functions/variables) I'll try using malloc, and how can I store/recover the pointer via Matlab? I'm not very experienced with C, I'd be very thankful if you point me some resources where I can read about it or get help regarding it. 
I work for a company that uses machine locked licenses. Our agreed interpretation of their license rules was that it is fine to remote into a machine to use it. We have a workstation with one license that any number of permitted people can log into and use. The issue is that only one person can use it at a time, and it's a nightmare to deal with changing users. My question would be do you have a way to remote into your workstation from a non-company computer? Our IT team has a VPN we can use to remote from one company machine to another when we are off-site, but we cannot access the VPN from a non-company machine. 
On mobile so I can’t look at my source code that does this. This link describes basically what we use for our models that require persistent memory: https://www.mathworks.com/matlabcentral/answers/100848-how-do-i-allocate-and-free-memory-for-a-pwork-vector-in-a-c-mex-s-function I think your mex script is fine I didn’t look at it. 
Link for the lazy. https://matlab.mathworks.com/
**Farthest-first traversal** In computational geometry, the farthest-first traversal of a bounded metric space is a sequence of points in the space, where the first point is selected arbitrarily and each successive point is as far as possible from the set of previously-selected points. The same concept can also be applied to a finite set of geometric points, by restricting the selected points to belong to the set or equivalently by considering the finite metric space generated by these points. For a finite metric space or finite set of geometric points, the resulting sequence forms a permutation of the points, known as the greedy permutation. Farthest-point traversals have many applications, including the approximation of the traveling salesman problem and the metric k-center problem. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Thanks for your comment. I think the best approach for me turned out to be a furthest first traversal. https://en.m.wikipedia.org/wiki/Farthest-first_traversal
Non-Mobile link: https://en.wikipedia.org/wiki/Farthest-first_traversal *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^186380
**Farthest-first traversal** In computational geometry, the farthest-first traversal of a bounded metric space is a sequence of points in the space, where the first point is selected arbitrarily and each successive point is as far as possible from the set of previously-selected points. The same concept can also be applied to a finite set of geometric points, by restricting the selected points to belong to the set or equivalently by considering the finite metric space generated by these points. For a finite metric space or finite set of geometric points, the resulting sequence forms a permutation of the points, known as the greedy permutation. Farthest-point traversals have many applications, including the approximation of the traveling salesman problem and the metric k-center problem. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/matlab/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Thank you! I'll check it out.
&gt;If you have a multicore processor you can use the parallel computing toolbox. In my experience, code tends to be much faster using natively parallelized built\-ins \(matrix operations, FFT's, convolution functions, etc.\). These use multiple threads but dont have the \(rather significant imo\) overhead that using the parallel computing toolbox does. Of course sometimes there just isnt a good way to use a parallelized built\-in to do what you want to do, and in these cases the parallel computing toolbox can be quite useful, but if speed is a main priority this should \(imo\) be a "do this if all else fails" type of thing.
&gt;We have a workstation with one license that any number of permitted people can log into and use. The issue is that only one person can use it at a time, and it's a nightmare to deal with changing users. This is probably a limitation on how your IT department set up the system, not based on Matlab's capabilities. Ive used a similiar setup \(on a Linux server, not a windows server\), and know for a fact that \(as of a year or so ago\) you can have at least 8 individual Matlab instances running in parallel. They all have to be launched from the same user, since the license is user\-locked, but \(at least on Linux systems\) having multiple log\-ons to the same user isnt an issue. Of course you need to be careful about things like "not writing to the same file at the same time from multiple different instances" and there is a finite amount of processing power and memory that everyone needs to share, but it is definitely doable. 
That would be quite difficult to compare if you see use a certain polynomial relationship for the initial value problem. I would however go for a relationship which is quite more like a complicated equation like something including sines, cosines, or exponentials. And use the L2 Norm error to compare which according to me would be the best. So write a complex equation as said before, maybe including 3 variables and use 2 ODEs or 2 variables but a second order ODE which will be a little complicated too but the I can bet my life on it that the solution that you will get will be different in both the ODE45 and ODE23 cases. Compare with the exact solution. Use 'format long' for highest precision.
[gramm](https://github.com/piermorel/gramm) has that feature built in, as well as many other nice graphic things.
Depends on what you mean by comparing. If you can solve both ODE’s you should be able to plot them on a single graph. Alternatively, I have seen plots of one against the other (can’t remember the name for this) which is usually done for a system of 2 ODE’s. 
Company I work for now has 1 Linux machine with 96 cores and we are capable of running 96 matabs instances at a time. We all remote into the same account and have a script setup to use a free core, and we perform our data analysis with multiple cores. So yea, I second that it can easily be done.
Check out [fimplicit3](https://www.mathworks.com/help/matlab/ref/fimplicit3.html).
Use odeset to turn 'Stats' to 'on' in the options structure and you'll get some algorithmic details about how many steps are taken by each solver.
Probably the correct ones. 
Thank you so much, i'll try it.
Not trying to be snarky but all the information on why you're getting an error is in the error message. it's telling you two things: the first is the line of code in Huffman.m that's giving you an error, and the other is a description of what's causing the error. You can see the error is on line 47 and that the error message specifically relates to the zeros() function. The message states that you cant use Inf or NaN with zeros(). Check your inputs to the zeros function (nx and cl) and see 1) how those two values relate to the values you feed into Huffman.m and 2) under what conditions either of those variables would be NaN or Inf (typically the result of unexpected math operations eg if you calculate 1/X and feed in X=0 you're going to run into errors)
Two options: 1. Make your function one order higher and add the derivative as a state: &amp;#8203; dS(1) = S(2); % S(2) is your old S(1) dS(2) = .... % put your old dS(1) function here, replace S(1) with S(2) in your old function Then the first output will be your derivative. 2. Use deval: sol = ode45(...) t = linspace(0,3,100); [S, Sdot] = deval(sol, t); %evaluate S and dS/dt at t
Thanks for your answer! I tried both options but I'm not obtaining something that I have been expecting to obtain - it might be a problem with my code but I really appreciate the help, thanks!
Ignore the first option, i realized its wrong. The second one should work though, so without more info/code from your side i cant say why you get something that you dont expect. Another option is to use your ode function to calculate the derivative like this: [t, y] = ode45(@odefun, ...) yd = odefun(t, y) ; % you may need to loop over odefun if it doesnt work with vecotrized inputs
&gt; Company I work for now has 1 Linux machine with 96 cores and we are capable of running 96 matabs instances at a time. For some reason, I imagine this playing out like that one scene from Oliver Twist. Kernel "One worker and a couple gigs of ram for you....one worker and a couple gigs of ram for you..." Process: "Please, Sir, I want some more" Kernel: "WHAT! $(kill processID)"
&gt; even if you don't have this toolbox it's not the hardest thing in the world to develop a sliding window filter. Something like this should work kernel = &lt;weights for sliding window&gt; imgNew = conv2(img,kernel,'same') You would want to normalize the edges, but that isnt all that hard.
I sometimes forget that not everyone deals with terabyte\-sized datasets. Ive literally run out of memory on systems with 256 gigs, and this was on a relatively small "test" case. Needless to say, my view on memory is a bit....skewed. So, wait, are you running a bunch of single threaded matlab instances and then manually splitting the data between them? If so, that is actually a pretty good way to implement a \`parfor\` loop type of operation \(I tested this a couple years back and it was \~2x as fast as using \`parfor\`\). However, if you can vectorize it into a matrix operation then \(in terms of execution time\) you would almost certainly be better splitting things up along NUMA nodes \(e.g., using \`numactl\`\)and then running independent matrix operations on each node. Ive tested this pretty extensively and BLAS basically always wins as the fastest method. The only notable exception ive found is if you can use \`fft\` instead.
Yea, essentially what you said. I'm generalizing quite a bit, but we have our "sample data" that we run several different tests on, and for each unique tests that we run with our data we launch a MATLAB session on a new core of our computer to process that data set with the test type. We have scripts that handle all the multi-core processing launching for us, assigning each test to a core, and it detects when all are done and performs a final overview post-processing script to finish the job. Kinda our entire system in a nutshell.
Hi /u/YouTubeWantrepreneur, Thanks for the feedback. I will work on this across the whole channel, but keywords is a constant struggle for me. When I look at competing videos, they often have the keyword "matlab", and that's it, so it's difficult to figure out what to use. Do you have an example of a pinned comment? I haven't seen that before. Anyway, appreciate the feedback :) Hope you enjoy the NN video - I want to focus on that type of content a lot more going forward, but it is higher effort, so I want to screw up on the easier stuff before hand.
I suggest you look into using `accumarray` This is an absurdly powerful function for manipulating histograms. Even if it doesn’t quite fit this problem (it might not tbh) it’s something to get to grips with if you want to seriously put MATLAB to use
I think it should be feasable. I made some code that smooths the image to supress noise, then makes a 1D profile (in two different ways) of the image, uses findpeaks to detect where the white border at the top ends and a simple threshold in 1D to find where the image starts to get whiter. I impleneted the same thing twice, trying both a mean and a max function to make a 1D profile from the image. You'll have to decide using more data which works better. also there are some parameters you'll have to tune. Depending on the uniformity of your data, this method might not work. Especially the thresholds are sensitive to exact shape of the data. I hope this helps. img = imread('zbtxifx0fr011.jpg') ; %since it's a black and white image, take one color channel. im = double(img(:,:,3)) ; %note the 3 in the next line is a parameter you can play with %(see help imgaussfilt) imdenoised = imgaussfilt(im,3) ; %make the max profile, by looking at the maximum value of each row maxProfile = max(imdenoised,[],2) ; %find the fist valley to skip the white bar at the top of the image [maxPeaks,maxPeakLocs] = findpeaks(-maxProfile) ; %find the index of the first value higher than 210 after the valley %note that the 210 here is a parameter you should play with maxAfterValleyHighI = find(maxProfile(maxPeakLocs(1):end) &gt; 210,1,'first') +maxPeakLocs(1)-1 ; %do the same things, but now look at the mean value of each row meanProfile = mean(imdenoised,2) ; [meanPeaks,meanPeakLocs]= findpeaks(-meanProfile) ; % again, 80 is a parameter meanAfterValleyHighI = find(meanProfile(meanPeakLocs(1):end) &gt; 80,1,'first') +meanPeakLocs(1)-1 ; %plot everything figure(1) ; clf subplot(2,2,1) ; imagesc(im) ; hold on ; %plot the two top lines generated by this method plot(xlim,[maxAfterValleyHighI maxAfterValleyHighI],'r-') plot(xlim,[meanAfterValleyHighI meanAfterValleyHighI],'g-') legend('max method generated line','mean method generated line','location','w') colormap bone title('image'); subplot(2,2,2) ; imagesc(imdenoised) ; title('smoothed to supress noise') ; subplot(2,2,3) % plot(maxProfile) plot(double(maxProfile)) title('whitest color as function of height') hold on ; plot(maxPeakLocs(1),-maxPeaks(1),'mx') plot(maxAfterValleyHighI,maxProfile(maxAfterValleyHighI),'ro') subplot(2,2,4) plot(meanProfile) title('mean whiteness as function of height') ; hold on ; plot(meanPeakLocs(1),-meanPeaks(1),'mx') plot(meanAfterValleyHighI,meanProfile(meanAfterValleyHighI),'go') 
Self reply ftw! I had another tought, in stead of a fixed threshold you could use one that is relative to the value at the minimum so e.g. this line: maxAfterValleyHighI = find(maxProfile(maxPeakLocs(1):end) &gt; 210,1,'first') +maxPeakLocs(1)-1 ; would become maxAfterValleyHighI = find(maxProfile(maxPeakLocs(1):end) &gt; -maxPeaks(1)*1.05 ,1,'first') +maxPeakLocs(1)-1 ; with 1.05 your new tunable parameter. this should make the method insensitive to scaling of your data, but i dont know if the results will be better, again, you'll have to check that with more data. 
Maybe something like: Compute sum of all adjacant bins Find pair of adjacant bins with minimal sum Set bin to left edge of left bin and right edge of right bin with count equal to sum of both bins Repeat until some criteria is satisified
And if I were you, but you have no time, I would have created several system, each one with a different PID configuration, and then use the step function like this : step(sys1,'b',sys2,'c',sys3,'m',sys4,'r') Plotting in one time, 4 PID configurations in blue ('b'), cyan ('c'), magenta ('m') and red ('r').
Thanks a ton, u/EatMyPossum!!! I am a beginner and this took a long time to work on. 
Not positive but it may just need some calls to drawnow() or refresh() peppered in to push updates to the screen on each iteration. Playing around with the available flags for drawnow() can help if you take a big performance hit, depending on how everything is structured, but shouldn't be too bad. Sounds like you want updates pushed to screen every frame but if not you can hide calls to drawnow inside a mod() statement to only run eg every 5 frames which would help performance if that becomes a concern.
&gt; On a related note, due to how our hardware is implemented, it may be more practical to use an algorithm with worse complexity on paper in order to get better data locality, fit data into cache rather than RAM, etc. This is an important point (and one I probably should have mentioned in my original reply). Its my understanding that things like "avoiding cache misses" and the general problem of making sure the cpu gets constantly fed with data ("feeding the beast") are much bigger issues in praqctice. Unfortunately, I dont think there is a good way to model these effects in a general sense like big-O notation does...you basically need an in depth analysis of a particular architecture.
Changing **meanAfterValleyHighI** in the same format as **maxAfterValleyHighI** gives the same answer. I am able to get to the exact height!!
nice :)
This would be my guess as well. In the original code OP is displaying a frame object extracted from a video, and since it is a video frame MATLAB probably goes ahead and displays it in real\-time without needing and special input \(I dont know this for a fact, but it makes sense\). The 2nd code though is just plotting regular old figures, where you need to have a drawnow / refresh / pause call in the loop to update the figure as the loop progresses.
I'm going to guess your equation isn't typed correctly. I don't read... Portuguese? and you didn't actually post the question at all, so I have no idea what you're trying to do, but in looking strictly at the math you have a term in the numerator and a *similar* term in the denominator. The numerator has: (L/2) - (a/cos(x)) The denominator has: (L/2) * (a/cos(x)) I would wager one of those is incorrect. When I tried making the denominator `(L/2) - (a/cos(x))` I got the same non-answer as you posted about. When I reverted it and then changed the numerator to `(L/2) * (a/cos(x))`, I got an answer. Again, total shot in the dark. If you want more help, please **post the problem statement**, and maybe translate the prompts. But at a minimum I need to know what you're trying to do to be able to help you.
No. Those are black box IPs and the code isn't released so that users pay for them. 
what do you mean pay for them? they are examples on the toolbox...where do you have to pay for them?
What have you already tried? [Pythagorean theorem?](https://www.pbslearningmedia.org/resource/mgbh.math.g.pythag/calculating-distance-using-the-pythagorean-theorem/) ? 
I tried some online calculators but the problem is i have the data in coordinates, i was looking for something that would directly convert the latitude and longitude, then add the third coordinate and finnally calculate using pythagoras yes.
The thing is i have my data in latitude and longitude, i was looking for something to convert it also
[Have a look at this](https://nl.mathworks.com/matlabcentral/answers/381039-finding-distance-between-two-points-from-3d-coordinates)
Thanks for the link, it's helpfull. But i am still looking for something to convert the data from latitude and longitude 
Look up the Haversine formula, which calculates great-circle distances on a sphere with lat/long. To include elevation, here's my initial guess: assume the great circle distance to be a straight line with known length, then apply Pythagoras to find the hypotenuse (which is your resulting total distance).
This seems like it's the answer OP is probably looking for. It should work well for any pairs of coordinates where the great circle distance is relatively small compared to the circumference. And for any pairs where the great circle distance is too large, you would have to be careful about defining what distance you actually want to calculate \- the direct distance which will tunnel through the Earth, or the distance seen by an observer travelling over the surface.
Those represent position on a sphere. You don't have to translate them. You need to look into measuring distance along a sphere using lat/lon. 
[GIFV link](https://i.imgur.com/AP1kKAf.gifv) --- _^I ^am ^a ^bot. ^[FAQ](https://www.reddit.com/r/livven/wiki/gifv-bot) ^// ^[code](https://github.com/Livven/GifvBot)_
[GIFV link](https://i.imgur.com/AP1kKAf.gifv) --- _^I ^am ^a ^bot. ^[FAQ](https://www.reddit.com/r/livven/wiki/gifv-bot) ^// ^[code](https://github.com/Livven/GifvBot)_
Or spherical coordinates.
That’s awesome!
Can you show us your code?
Please post your code. I would love to have this
That's quite the singularity you have there...
u/EatMyPossum, I am actually confused in this line: maxAfterValleyHighI = find(maxProfile(maxPeakLocs(1):end) &gt; -maxPeaks(1)*1.05 ,1,'first') +maxPeakLocs(1)-1 ; Could you please explain the purpose of this line? Why have we used this heuristic?
I took a kinematics class a while back, daydreamed about making a robust simulator that handles all possible inversions, like everyone else I decided it wasn't worth the effort.
This is cool. Question... I see that the center vertical bar cannot pass through \(it strikes\) the top pivot; so what's going on when this bar passes through/over the bottom pivot?
Good you ask. What it does is looking where after the valley in the profile, the profile becomes 5% higher than the lowest point. The purpose is to find the end of the valley and therefore the beginning of the white stuff in the image. The simpler approach `(...) :end) &gt; 210,1,'first') ` fixes the value at which the valley should end to some number (210 here), but to me it makes more sense that a valley ends when the value of the profile is a certain percentage above the lowest point. 
Thanks for the easy explanation!!!
Thanks for your answer. An application for this could be cars/robots moving through a determined bounded path for example
Do you mean they are on a track like a train? What is the IMU for if they're guaranteed to stay on a predetermined path?
To know its speed, which could vary.
Thanks for your answer. I don't understand this part: &gt; Consider, the lateral acceleration you measure will be a function not only of the second derivative of your position parameter, but of the position itself and it's first derivative! You'll have to re-derive the Kalman filter in terms of those new variables. Specifically the " ... but of the position itself and it's first derivative!" Why is this? I rly don't understand. My background is mech. engineering.
i initially thought this was a political post.
For your first question, you can pass constants to a function. The syntax is that you have to use an anonymous function. So the function handle argument would be @(r,u) twoode(u,r,youngsM,nu,rho,omega,bodyF)
Why don't you show us the code you've tried? It's much easier for us to help that way. 
Thank you. And yes you are right, independent goes first. 
Imagine the IMU is moving along a curved path. Let's say a circle for simplicity. You've parameterized the IMU position by a single variable, s, the path length along the circle. If s_dot (the first time derivative of s - the "velocity") is nonzero and s_dot_dot (the second time derivative - the "acceleration") **is zero**, the IMU is in circular motion, right? What would a 3-axis accelerometer on the IMU read? Well s_dot_dot is zero, so the accelerometer data would read zero, right? **nope**. The contour is curved, so the acceleration of the IMU is not zero even though it's re-parameterized coordinates are not accelerating. The measured acceleration will depend on s_dot because it's the speed of motion around a circle. In this case that dependence will be quadratic. It will also depend on the direction and degree of curvature of the trajectory, which will depend on the position s, and if your trajectory were more complex than a circle, it would also be highly dependent on the details of the trajectory and it's curvature at every point! What if it's also accelerating along its circular path? In other words, if s_dot_dot is nonzero? Well, no surprise, you'll measure acceleration in that case, and you'll see it in a direction tangential to the trajectory at the current location. But what direction is tangent to the contour? Well that depends on where you are on the trajectory! So it also depends on s! An analytical solution here, for an arbitrary trajectory defined by, say a polynomial or something, rapidly becomes massively complex and likely intractable. Numerical solutions could be obtained pretty reasonably though, assuming you aren't constrained too much by computing power and real-time operation. 
If you only care about speed, and the IMU orientation is rigidly fixed to the train body, you could simply integrate the acceleration axis oriented along the direction of travel. That's a much more restricted problem space than your original post, which is asking an extremely general question. The first step in solving any problem is understanding how you can restrict the problem space. 
Thanks. I know there is something wrong with the sharp angle at the top. The code is not very refined. The lower arm is just rotating and then I find the intersection of two circles with a radius of the upper arm and the coupling arm. Of the two intersections of these circles it just picks one. I think that's why the blue dots show some odd behavior at the bottom
Are you trying to write your own optimization algorithm, or are you having trouble using the built\-in functions like fmincon?
Yes the IMU would be fixed to the moving body and yes the idea would be to use the measurement from the axis of travel direction as a way to calculate traveled distance. But this would still be 'unrestricted' and measurement noise will add up as accelerations are integrated, no?
Thanks, very very insightful, I understand now. The path would be described in a discrete manner, like a set of points from which the orientations can be described for each point. As I comment in the other reply to you, I thought about using the accelerations in the direction of travel although now I see how in a curve the front pointing IMU axis would not be exactly like the path's 'forward' at that exact location.
Idk try it, you might learn something.
I just got some Robotix motors to work with Simulink. You should switch to the Raspberry Pi and control with Simulink: https://forums.pimoroni.com/t/automation-hat-with-simulink/7788
dec2hex(bin2dec('10010010'));
Toolboxes are not free. You need to buy them as add-ons. Although the student license does come with a few toolboxes included.
I do have the toolbox, the question is how to access the actual code of the App
If you know the path your body is taking, you can, in a way, determine the bias and the scale factor of your IMU.
There is a matlab function for that : [binaryVectorToHex](https://fr.mathworks.com/help/daq/ref/binaryvectortohex.html).
The simplest way : the use of movmean ? You just have to determine the window size to smooth your trajectory. The other way, you could determine the boundary counditions for your trajectory and then discriminate the false negatives/positives.
Thanks! I guess movmean, like smooth only smooths the x and y vectors seperately rather than doing something with the euclidena difference. I was hoping there was something that would determine the boundary conditions, and either nan out values or interpolate those that exceed those conditions. 
Here's one thing that you could try First, fit a circle to the curve (look up circle fit by taubin for a function). Then calculate the polar coordinates of the pixels based on the center point of your circle. I will refer to these coordinates as rMeas and thMeas. Create a "grid" of polar coordinates. You can use the meshgrid function for this: [rGrid,thGrid]=meshgrid(linspace(min(rMeas(:)),max(rMeas(:)),size(image,2)),linspace(min(thMeas(:)),max(thMeas(:)),size(image,1))); Here, "image" is your input image, which I am assuming to be an NxM double array Next, you will interpolate your image on 
If you can plot your data, maybe in the "Tools" menu, the Basic Fitting tool will help you a bit. You can always try to build a simple kalman filter.
Yeah, I think a kalman filter will be what I do when this is done more correctly. I have a meeting in a couple of hours and was hoping for something imperfect but out of the box. I have too many trials to use the basic fitting tools i think.
I'm sorry then, I don't have that on hand. I'll try to work on it a bit.
Oh, wow, thanks. Thats really nice, I wouldn't have expected anyone to code something up for me. 
Don't wait something from me, I'm just a dude from internet ;) Just kidding, I'll try do write a script but I'm not sure I will be able to do it before your meeting !
ok, thanks
ok
I've heard about the optimization toolbox, but I don't know how to use fmincon for 4 variables, and I just start self-studying MATLAB from scratch so I don't know the algorithm yet... 
If you have the optimization toolbox it's very straightforward. You write an objective function, something like `function [obj] = my_function(init_val)` `obj = 3.01 + 1.42x1 - 1.05x3 + 0.31x4 - 0.51x1x3 + 0.90x1x4 + 0.13x2x3 - 0.3x3*x4;` In your main you want to impose the upper and lower bounds so you write `ub = [1 1 1 1];` `lb = [-1 -1 -1 -1];` `init_val = [0.5 0.5 0.5 0.5 ];` `x = fmincon('my_function',init_val,[],[],[],[],lb,ub,[])` I'm not sure what role your g\(x\) plays, but from your post it sounds like the same values of x satisfy both optimization criteria.
Are you asking about how to use the libraries in the toolbox, or to see the code that was used to write such libraries? 
So, there's a ton of ways to smooth data, but I feel like it takes more input from you because there is def not a "one size fits all" approach to this. There are [smoothing splines](https://www.mathworks.com/help/curvefit/smoothing-splines.html) and [quite a few other ways](https://www.mathworks.com/help/curvefit/smoothing-data.html). But no one method is the right way. 
There is a variable for mscohere that does exactly this. It would be right before your sampling rate in your example. So you'd want something like this: [Cxy,F] = mscohere(detrend(x),detrend(y),[],[],0.1333,42); However, if you're also interested in the frequencies around 0.1333 Hz, then you can give mscohere a range of values that includes your target. For example, this: [Cxy,F] = mscohere(detrend(x),detrend(y),[],[],0.1320:0.0001:0.1340,42); would give you coherence estimates from 0.1320 Hz to 0.1340 Hz in 0.0001 Hz steps. For more detail, the Documentation for mscohere is pretty good for this questions. For example, [this](https://www.mathworks.com/help/signal/ref/mscohere.html#bvi4lxm_sep_shared-f) describes the variable, f, that you need to play with. How much data do you have to compute coherence with (i.e. length of x and y)? I only ask because the resolution of coherence estimates depends on your windowing (which with the code you posted here will default to 8 Hamming windows with 50% overlap), especially at such low frequencies.
This is perfect, thank you! Although I feel a bit dense for not going through the Documentation a little more thoroughly
No worries; MathWorks Documentation can be a bit rough - especially for some of the signal processing functions. 
Node 1 and 7 are fixed and a load applied to node 6. Quiver is used for illustrating the load direction. Each node only have two dof. 
I think you are in to something with the window around the peak method. On the matlab exchange there is a function peakdet for detecting peaks in a signal, I have used it before and it's good. Next select a large window around the peak and calculate the histogram of that. (Or the histogram of the difference of the values) Maybe this can give you something to filter out only the part of interest. http://homepages.inf.ed.ac.uk/rbf/HIPR2/adpthrsh.htm Maybe this trick from the image processing world can give you some inspiration 
Break it down. Instead of doing too many things at once, try to see what the individual operations to to find your source of error. what happens when you multiply something with the dimesions (26622×3) with (3x3)?
So number of columns in the first matrix must equal number of columns in the second matrix. So I can fix that: vel_L(i,:) = vel_L(i-1,:) + (init_DCMbn*delv_b) + grav*deltat Now we can perform *(init_DCMbn*delv_b)*. But now I get the error: Error using * Inner matrix dimensions must agree. Why do you think that is? 
I’d like to see the actual code
nah. discords cool. 
That makes it work perfectly well! THAAANK YOU VERY MUCH! I dont need to use that method, that was the method that I found to help me with my problem, but I couldn't make it work. Yours is perfect. Thank you!!
Yeah, it's portuguese. The equation was correct, something on the solve was not able get the answer right. The method the other guy posted above made it work like a charm. Thank you for trying to help!! I was only trying to found the value of Teta when it hit the maximum value of W. It should have been max(w), instead of "5.283892" which I put on the code. I was trying something different and ended up sending the "5.283892" by mistake :( Thanks again.
Also consider applying some smoothing to your coherence output in post processing as results can be rendered unusable with non ergodic timeseries
Sum the image?
This is not true. I’m not in front of MATLAB, but I’m pretty sure that if the array had been initialized as: y = function_handle.empty() Instead of with zeros, the assignment would have work. It is correct to say that arrays (of a numeric type) can’t hold function_handles. And that’s the error we see, there is not automatic cast allowed to happen.
I think that you need to be enrolled at a university to get a student license. You can download matlab from mathworks for free. You just won’t be able to use it without a license. So, if you’re torrenting matlab, it won’t be helpful unless you download a fake license too. I have no idea what packages the fake license would include.
You could also go on the Math Works website and do the MATLAB training they have there. It's completely free and it uses a web-based version of MATLAB so there's no need to download anything and no need for a license. Here's the link in case you're curious: https://matlabacademy.mathworks.com/
First, for an intro class most likely Octave would be just fine. It's very similar to MATLAB, and for most cases they can run each other's code. Second, if you call MATLAB and explain what you want to do, they'll probably give you a long enough trial. MATLAB's entire business model is based on people becoming reliant on MATLAB, then getting a job and getting their work to buy it for them. 
How strong is your linear algebra? This isn't a problem with Matlab, but a problem with fundamental matrix operations!
Nice! This could be nice example for my students! 
I figured it out. Thanks though!
The `legend` command can optionally take two parameters- the function handles and the strings. So, you can create the legend by saying `legend(h,titles)` and pair the handles with the titles. 
Have you tried restarting matlab, this sometimes helps when I'm using my laptop and have this kind of problem. Also, matlab has debugging tools. You should be able to step through the code line by line. 
I did the line by line debugger and it recognizes it's a value and what that value is, but for whatever reason, it doesn't affect the final outcome. 
put in ".*" instead of just "*"
No change
Try looking at the bs and ba values by themselves. When I put the value of v that you did into those, ba essentially was equal to 0 so J became only a function of bs(v)
It seems 10 important toolboxes are these https://www.mathworks.com/academia/student_version/add-ons.html are the available in octave or Scilab? 
Can we get the equations you're trying to implement, in your handwriting?
Thanks, I'll give this a try once I have access to my code
It depends on how your school gets its license. You likely need to ask your local admin, or see if they have a document about how to install (and license) MATLAB. If you created a MathWorks account, you can log into it and see if there's a license associated with it. You should be able to install/activate it that way. Did you transfer the data from hdd to ssd using a dedicated utility? Or did you set up a new os and reinstall applications? Also, have you tried starting matlab?
Yes I have reinstalled on a fresh OS. Also I have the installing document, however installation requires a registry key and license file. I have the key but I didn't save the license file. I thought that perhaps through installing the license file gets stored somewhere but I can't find it.
I don't know which version of Matlab you are running, but [perfcurv](https://www.mathworks.com/help/stats/perfcurve.html) returns [X,Y,T,AUC] in the current documentation. Perhaps first check to make sure you have the correct variable? Otherwise it appears you are using the function correctly. I'm too certain of the worked linked in the paper, but I take it the threshold is based on the value of the scores. This would provide a point at which scores over it are generally 'true/positive' and scores under it are generally 'false/negative'. The T you receive from the function should be linked to your X values, give the input commands to perfcurve, means that T relates to your Y values. For a given Y value, T tells you how about the error of classification at that value of Y. I think you'd want to find the lowest values of T and use them as an index for X and Y. 
That's what I'd say, as well. Within the function J, using the range of v = vg:10\*vg, ba\(v\) is not just close to zero, but many orders of magnitude smaller than bs\(v\); so it's that term that dominates. Unless of course X is something incredibly large, like \&gt; 1e35. And then when v \-\-\&gt; 10\*vg, it'd need to be \&gt; 1e170 to have an effect...
%% nodes clear E = 3e4; A = 10; EA = E*A; p = [ 0 0; 2 0; 4 0; 6 0; 8 0; 10 0; 1 2; 3 2; 5 2; 7 2; 9 2; ]; % points in ft bc = [ 1 1; 0 0; 0 0; 0 0; 0 0; 1 1; 0 0; 0 0; 0 0]; e = [ 1 2; 2 3; 3 4; 4 5; 5 6; 7 8; 8 9; 9 10; 10 11; 11 5; 5 10; 10 4; 4 9; 9 3; 3 8; 8 2; 2 7; 6 11; 7 1]; f=zeros(size(p)) % f(9,2) = -2*100000; f(4:5,2) = -100000; f(4:5,1) = 0*-100000; % f = [ % 0 0; % 0 0; % 0 0; % 0 0; % 0 0]; % load vector % build the local k matrix 4x4 for i = 1:length(e) k(i).local= truss_2d_element(p(e(i,1),:),p(e(i,2),:),EA); end % dim the global k matrix ks = zeros(2*length(p)); % assembly of k.local into global k for i = 1:length(e) ks = trussAssembly(ks,k(i).local, (2*e(i,1)-1),(2*e(i,2)-1)); end % apply bc's to global k matrix % similar to f bc2 = reshape(bc',1,numel(bc)); f2 = reshape(f',1,numel(f)); i = 1:length(bc2); i2 = i(logical(bc2(i))); f2(i2) = []; for i = 1:length(i2) j = i2(end-i+1); ks(j,:) = []; ks(:,j) = []; end % solve d = ks \ f2'; clear i j k d2 % place zeros in f and d where it's missing info due to bc's % d2 = zeros(1,numel(p)); j=1;% counter in d k=1;% counter in i2 i2(end+1) = 0; for i = 1:numel(p) if i == i2(k) d2(i) = 0; k = k+1; else d2(i) = d(j); j=j+1; end end d2 = reshape(d2,2,length(d2)/2)'; % plot the result and node deflection clf scale = 1e-1; d3 = d2*scale; for i = 1:length(p); plot(p(i,1), p(i,2),'or'); hold on text(p(i,1)+.3, p(i,2)+.3,num2str(i)); end hold on % displaced points plot(p(:,1)+d3(:,1),... p(:,2)+d3(:,2),'*') % deform shape for i=1:length(e) plot([p(e(i,1),1)+d3(e(i,1),1) , p(e(i,2),1)+d3(e(i,2),1)],... [p(e(i,1),2)+d3(e(i,1),2) , p(e(i,2),2)+d3(e(i,2),2)],... '--b'); end % undeform lines for i=1:length(e) plot([p(e(i,1),1) , p(e(i,2),1)],... [p(e(i,1),2) , p(e(i,2),2)],'b') end %% quiver plot hold on for i = 1:length(p) quiver(p(i,1) , p(i,2),... d2(i,1)*scale, d2(i,2)*scale) end %% input force quiver temp.xli = get(gca,'XLim'); temp.yli = get(gca,'YLim'); scale2 = 2e-5; scale2 = max([range(temp.xli), range(temp.yli)])/range(f(:))/10; % scale2 = max([range(temp.xli), range(temp.yli)]); for i = 1:length(p) h=quiver(p(i,1) , p(i,2),... f(i,1)*scale2, f(i,2)*scale2) h.LineWidth = 2; h.MarkerSize = 12; h.Color = 'r'; end %% axis equal set(gca,'XLim',[-1 1]*.1*range(temp.xli)+temp.xli); set(gca,'YLim',[-1 1]*.1*range(temp.yli)+temp.yli); 
function [K L] = truss_2d_element (p1, p2, EA) % mod for accepting points instead x1 = p1(1); y1 = p1(2); x2 = p2(1); y2 = p2(2); % function [K L] = truss_2d_element (x1,y1,x2,y2, EA) % compute the element stifness matrix for 2d truss bar in global coordinats % input data % x1 y1 is the location of joint 1 of the element % x2 y2 is the location of joint 2 of the element % EA is the prod of e-modul and crosssection % output % K is the 4x4 truss bar element stiffness in global element coord. % L is the length of the element L = sqrt( (x2-x1)^2 + (y2-y1)^2); c = (x2-x1)/L; % cosine of bar s = (y2-y1)/L; % sine of bar K = (EA/L) *[c^2 c*s -c^2 -c*s; c*s s^2 -c*s -s^2; -c^2 -c*s c^2 c*s; -c*s -s^2 c*s s^2]; 
function ks = trussAssembly(ks,k,a,b); temp = zeros(size(ks,1)); temp(a:a+1,a:a+1) = k(1:2,1:2); % sym part. temp(b:b+1,b:b+1) = k(3:4,3:4); temp(a:a+1,b:b+1) = k(1:2,3:4); % asump part temp(b:b+1,a:a+1) = k(3:4,1:2); % temp(b,b) = ks(1:2,1) ks = temp+ks; end
clear clf set(gcf,'Color','w') v.arms = [410 1000 420]; v.bcDia = 6000; v.hsbmPins = [0 -500; 0 500]; v.resol = 50; filename = '4bar_01.gif'; for i = 1:140 % v.ang = -.4+i/20 v.ang = i/20; input = FourBarLinkageForHSBMtool_01(v); % this gives the 4 point for the mechanish. point(i,:) = mean(input(2:3,:)); % center point of coulpler. ang = atan2(input(2,2)-input(3,2),input(2,1)-input(3,1)); % angle of coupler point2(i,:) = [0,150]*[cos(ang), sin(ang); -sin(ang), cos(ang)]+point(i,:); % offset point of the coupler, input = [input(1,:);... % add center point and offset to the mech. points. input(2,:);... point(i,:);... point2(i,:);... point(i,:);... input(3,:);... input(4,:)]; if i==1 h = plot(input(:,1), input(:,2),'--ro'); % plot the var. and fix handle. hold on p = plot(point2(:,1), point2(:,2),'b*'); else h.XData = input(:,1); h.YData = input(:,2); set(p,'XData', point2(:,1),... % update both handles simultan. 'YData',point2(:,2)); end % xlim([1.9 3.2]*1e3) xlim([-1 1]*6e2) ylim([-1 1]*8e2) grid on % axis equal % view(0,90) drawnow pause(0.01) frame = getframe(gcf); im = frame2im(frame); [imind,cm] = rgb2ind(im,256); if i == 1 imwrite(imind,cm,filename,'gif', 'Loopcount',inf,'DelayTime',.001); else imwrite(imind,cm,filename,'gif','WriteMode','append','DelayTime',.001); end end 
function output = FourBarLinkageForHSBMtool_01(v) % 4-bar linkage for HSBM tool % clear; % v.bcDia = 6000; % v.hsbmPins = [2500, -500; 2500, 500]; % v.arms = [300, 600 300]; % v.ang = 20; % angle of upper component. %generate points circle of the brake disk % v.resol = 50; for i = 1:v.resol d.bd(i,:) = [v.bcDia/2*cos(i/v.resol*2*pi),... v.bcDia/2*sin(i/v.resol*2*pi)]; % circle for the brake disk % d.armLow(i,:) = [v.arms(3)*cos(i/v.resol*2*pi),... % v.arms(3)*sin(i/v.resol*2*pi)]; % d.armUp(i,:) = [v.arms(1)*cos(i/v.resol*2*pi),... % v.arms(1)*sin(i/v.resol*2*pi)]; % d.coupler(i,:) = v.arms(2)*[cos(i/v.resol*2*pi) sin(i/v.resol*2*pi)]; end % d.coupler(end+1,:) = d.coupler(1,:); % d.armLow(end+1,:) = d.armLow(1,:); % d.armLow= [v.hsbmPins(1)+ d.armLow(:,1) v.hsbmPins(3)+ d.armLow(:,2)]; % d.armUp(end+1,:) = d.armUp(1,:); % d.armUp = [v.hsbmPins(2)+ d.armUp(:,1) v.hsbmPins(4)+ d.armUp(:,2)]; d.bar(1,:) = v.hsbmPins(1,:); d.bar(2,:) = d.bar(1,:)+v.arms(1)*[cosd(v.ang), sind(v.ang)]; % d.coupler= [d.bar(2,1)+d.coupler(:,1) d.bar(2,2)+d.coupler(:,2)]; d.bd(end+1,:) = d.bd(1,:); d.bar(1,:) = v.hsbmPins(1,:); d.bar(2,:) = d.bar(1,:)+v.arms(1)*[cos(v.ang), sin(v.ang)]; d.bar(4,:) = v.hsbmPins(2,:); % intersection of circles; d.circIntersection = circcirc(d.bar(4,1),d.bar(4,2),v.arms(1),... d.bar(2,1),d.bar(2,2),v.arms(2)); d.bar(3,:) = d.circIntersection(1,:); output = d.bar; % plot the figure. % clf % hold on % plot3(d.bd(:,1), d.bd(:,2), zeros(length(d.bd),1) ,'-.') % plot3(d.armLow(:,1), d.armLow(:,2),zeros(length(d.armLow),1),'-.r') % plot3(d.armUp(:,1), d.armUp(:,2),zeros(length(d.armLow),1),'-.k') % plot3(d.coupler(:,1), d.coupler(:,2),zeros(length(d.coupler),1),'-.b') % plot3(d.bar(:,1), d.bar(:,2),zeros(length(d.bar),1),'--ro') axis equal xlim([1.5 3.5]*1e3) % ylim([-.75 .75]*1e3) view(0,90) end
function Output = circcirc(x1,y1,r1,x2,y2,r2) % intersection of two circles; 3 cases, % 0 intersection, 1 intersection/toutching, 2 intersections (normally) % info on circ1(x1,y1,r1) and circ2(x2,y2,r2) % http://mathworld.wolfram.com/Circle-CircleIntersection.html % clear % x1=6; y1=0; r1=5; % x2=0; y2=0; r2=2; centDist = sqrt((x1-x2)^2+(y1-y2)^2); % remove X1 from both X1 and X2 orgAngle = atan2((y2-y1),(x2-x1)); % rotate X2 by -OrgAngle-&gt; you only need centDist for calc, add this later % to result. % case 0 intersec. sum of radius is smaller than distance between X1 and X2 if centDist &gt; (r1+r2) Output = [0 0; 0 0]; % no intersection elseif centDist == (r1+r2) % toutching! if r1&gt;r2 xt = centDist-(centDist^2-r1^2+r2^2)/(2*centDist); else xt = (centDist^2-r2^2+r1^2)/(2*centDist); end yt = 0; else if r1&gt;r2 xt = centDist-(centDist^2-r1^2+r2^2)/(2*centDist); yt = (sqrt(r1^2-xt^2)); else xt = (centDist^2-r2^2+r1^2)/(2*centDist); yt = (sqrt(r1^2-xt^2)); end end transformOutput = [xt yt; xt -yt]*[cos(orgAngle) sin(orgAngle); -sin(orgAngle) cos(orgAngle)]; Output = [transformOutput(:,1) + x1, transformOutput(:,2) + y1]; if yt == 0; Output = Output(1,:); end % end % Output % plot % v.resol = 100; % clf % plot(x1,y1,'or'); hold on % plot(x2,y2,'ok') % plot(x21,y21,'ok') % plot(xt,yt,'+b','markersize',20) % plot(xt,-yt,'+b','markersize',20) % clear c1 c2 % for i = 1:v.resol % c1(i,:) = r1*[cos(i*2*pi/v.resol) sin(i*2*pi/v.resol)]'+[x1 y1]'; % c2(i,:) = r2*[cos(i*2*pi/v.resol) sin(i*2*pi/v.resol)]'+[x2 y2]'; % c2(i,:) = r2*[cos(i*2*pi/v.resol) sin(i*2*pi/v.resol)]'+[x21 y21]'; % end % c1(end+1,:) = c1(1,:); % plot(c1(:,1), c1(:,2), 'r') % plot(c2(:,1), c2(:,2), 'k') % % axis equal % % grid minor % grid on % % for i = 1:size(Output,1) % plot(Output(i,1), Output(i,2),'+b','markersize',20) End 
Check matlabroot/licences as well as in your user directory (c:\users...). 
I'm sure there's a better way, but have you looked into regular expressions? [https://www.mathworks.com/help/matlab/matlab\_prog/regular\-expressions.html](https://www.mathworks.com/help/matlab/matlab_prog/regular-expressions.html)
I think you'll need to have a new license generated, as they are machine specific (at least the license I use is, I know there are also group licenses, which perhaps are different). If you login to your Mathworks account, you can generate a license there. 
Probably a group license, since the whole class used the same license
Yes I think this is the problem as well. The derivative of bs(v) with respect to v is negative and grows in magnitude relatively quickly. d/dv(bs) = -[a*v (exp(b*v) (b*v-2) + 2)] / [exp(b*v)-1]² where, a=2*Fs/c² , b=h/(k*Ta) So for big v you are getting incredibly small value of bs. So your code seems fine, you might just need to choose a smaller 'v' if you want to see the difference 'X' makes. 
You should use textscan. It allows you to set a format that can be used to read the text file. As long as the pattern above is consistent, you could use: textscan(fileID, '%s %f %s %s'). As long as this pattern continues to the end of the file you will be able to pull out every float. However if this pattern doesn't continue consistently, you may need to use textscan(FileID,'%s') to read in the entire contents as one long string and then use regexp() to search for the floats using a regular expression. 
If I have understood your question right, then you might be looking for something like passing the handle to the graphical objects as a output argument from your functions. E.g. Inside function for plotting make it h= plot. In the top add h as an output e.g. Function [h, other outputted] = functionName(input) To get the points yawn in the plot your can use h.xdata and expert with e.g. Xlswrite to put it into an excel sheet.
It's in one of the comments. I hope I included all the sub-functions
Oh man, several of my timeseries are definitely not ergodic. Thanks for the tip!
Thanks for the advice, u/Lysol3435. There is an error in the griddata line. I am getting this: &gt;The lengths of X and Y must match the size of Z. I have tried to debug this error to no avail.
You can also use the "gca" function to get the current axes, and get your information that way. If you already have the plots, but just want the data, gca would be a quick and dirty solution. 
Okay, after a week-end where I didn't have access to Matlab, I have a .py script ... The main idea is to make the hypothesis that the first [1 - n] points (X,Y (Z?) coordinates) are correct. Then : * Compute the norm and determine the Linear Regression (LR) or Quad. Regressions (QR) from those points. * Add the n+1 point. **If the n+1 norm belongs to the QL or LR from the [1 - n], then go on to the next point ** If not, you determine the LR or QR for each coordinates and correct the n+1 coordinates (if needed) to fit on the LR/QR determined. And you got the idea ...
MATLAB supports CUDA, which is made by NVIDIA, I see no reason why the 1050 wouldn't be supported. 
If you have the plot, you can select the plotted line and : X_data = get(gco(),'XData'); Y_data = get(gco(),'YData'); You can find documentation here : * [get](https://fr.mathworks.com/help/matlab/ref/get.html?searchHighlight=get&amp;s_tid=doc_srchtitle) * [gco](https://fr.mathworks.com/help/matlab/ref/gco.html?s_tid=doc_ta) * [gcf](https://fr.mathworks.com/help/matlab/ref/gcf.html)
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://fr.mathworks.com/help/matlab/ref/get.html?searchHighlight=get&amp;s_tid=doc_srchtitle) - Previous text "get" [Here is link number 2](https://fr.mathworks.com/help/matlab/ref/gco.html?s_tid=doc_ta) - Previous text "gco" [Here is link number 3](https://fr.mathworks.com/help/matlab/ref/gcf.html) - Previous text "gcf" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Good bot !
Could I see your results? I'm deciding whether to invest time in Mathematica or MATLAB. 
I don't know if this could be useful, but there is an MATLAB/Simulink integration for Arduino. 
Worked like a charm, thanks again!
Hey, try using (:) after each argument that you pass to griddata. This will make all of the arguments into vectors. Then you will just need to use reshape() to get your vector back to a matrix.
Thanks for the only response! Do you know if it is documented anywhere? Im looking to do an eGPU setup with a 1050 ti, and to run this specifically: https://github.com/omrysendik/DCor/ 
From reading this bit on compiling for GPU, it supports all CUDA enabled GPUs. https://github.com/omrysendik/DCor/blob/master/matconvnet-1.0-beta20/matlab/vl_compilenn.m And looking at NVIDIA, it appears that the 1050 ti is CUDA enabled https://www.geforce.com/hardware/desktop-gpus/geforce-gtx-1050-ti/specifications So i think you're okay. 
Thanks so much man! I guess I didnt look hard enough there. On a second note....do you reckon this new egpu: https://support.lenovo.com/ca/en/accessories/acc500012 Would be able to be supported as well? (its a 1050 not a 1050 ti) 
How would I do that?
Yes, as long as its CUDA enabled, MATLAB can recognize it and use it. It doesn't matter if its an external or internal configuration. 
Thanks alot, really helpful!
Hey, coldassturkey, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
One option is using extractBetween. This should be superior to regexp. textscan might also work for you. str = fileread('yourFile.txt'); result = extractBetween(str,'&lt;Repetitive substr&gt;','&lt;Repetitive substr&gt;'); result = double(result);
You're looking for the function ncread, not netcdf.open.
I don't understand. What is the specific question? The code is generally correct for what you are trying to achieved. If you can make the questions more specific you are more likely to get an answer.
Sounds like something is happening outside of the code you posted. The code you posted looks fine so something else must be going on, perhaps in how you're calling it. 
sum\(data\(:\)\)
the code that is calling it if i remove that line and just hard code a path works fine and returns the correct values. And I know the matlab code is receiving the input fine. 
Weird. Could be something going on inside of audioread. Try running your code with the debugger set to break on error. For example: dbstop if all error StressTest\(myfile\)
Did you use Jacobian Matrices?
Wouldn’t any vector norm do? Usually people just use the Euclidean norm. 
Okay, I will try this. Thanks!!!
No, not for this. 
Matlab's LQR command is for continuous time systems. So when you put discrete time matrices into that function, it interpreted them as continuous. If you discretize, you should use dlqr(). You sampling interval was likely small enough that the continuous and discrete time systems were close enough for it not to matter. Why did you use 10ms?
Hey there, If you are able to read the contents of the line into a single character string, and assuming the elements are separated by a single space, you can achieve what you're looking for using regexp with the split option. As an example: a = '1 2 3 4 NA NA NA 5 6'; b = regexp(a, ' ', 'split'); you should get b = {1, 2, 3, 4, 'NA', 'NA', 'NA', 5, 6}; As a result. The syntax and specifics may vary, as it's been a little bit since I've used matlab, so I recommend checking out the documentation yourself. Let me know if that helps!
A=fopen(‘filename.txt’); B= textscan(‘A,’%c’); This should be close to what you have. Now B should be a cell made of an array Just set some other variable equal to B{1,1} That other variable should be a char string. I’m not sure how to change the NA to one element. But I’m sure it’s pretty easy. I only answered because you said it was tickling your noodle. I thought that was hilarious and I wanted to help you because if it
You're only handing plot one argument. What you want to do is hand in 2 `plot(t,y)` instead of just `plot(y)`
oh, thanks :)
cellfun acts on every entry within a cell. In your example, X{1} contains a cell array of dimension 1700x1. When you feed X{1} into cellfun, it processes every entry of the 1700x1 cell array. I believe that you want to convert the cells in X{:} into vectors: for i=1:9 XVect{i}=[X{i}{:}]; end A = cellfun(@var,X);
Thank you for the quick response. The code you gave me output a 1x9cell for XVect with all of the values for each column put into a single cell. So for instance XVect{1,1} is 1700 numbers combined into one long value, etc. I am getting the error message "Error using sum Invalid data type. First argument must be numeric or logical. Error in var (line 148) y = sum(abs(x - sum(x,dim)./n).^2, dim) ./ denom; "
That sounds like your numbers are stored as strings. You need to add str2double() in there. There's probably a more efficient way to do this, but I think the following should work: for i=1:9 for j=1:length(X{i}) XVect{i}(j)=str2double(X{i}{j}); end end A = cellfun(@var,X);
The answer is fine. The matrix is singular, so your second and third vectors just should be orthogonal. Take a look at the result from V./V(1).
Absolutely. To expand on what you said, eigenvectors are unique up to scalar multiplication (i.e. you can multiply an eigenvector by a scalar and it is still an eigenvector).
Looks like you accidentally defined p as a symbolic variable. 
I totally forgot about that! I should've caught up on on my linear
Because RMS is calculated in a sliding window. You'll have constant RMS only if the window of the integration is the multiple of the period of the signal.
Yay sound synthesis. My only help I can offer is on 4th issue. Since you want to divide across a matrix, use '/.' (or is it './' I can't remember off the top of my head) Instead of '/' this will produce a matrix result of your division. Does that make sense?
Also, cool paper, I'm going to try recreating this part in simulink! shouldn't be too hard, right? Haha [](https://i.imgur.com/LJNGihn.jpg)
an how can i achieve that ?? 
What is line 32? They way you have it formatted here we can't see 32 lines.
Also you are iterating through letters in your file name. for ifile = 1:length(filename) This goes through each letter in your filename, which I'm sure is not what you want to do.
I'm just in an intro to matlab class over the summer so my reasoning could be super basic or stupid idk but couldn't you make a while loop that updates a time variable that you could plug in incrementally in whatever function you need it in, and have the loop stagnate over certain time intervals? I saw something in my book about animation of graphs or something, maybe look into that? Sorry if this doesn't help, but maybe it can click something for you! Gl!
I think more info is needed. Are you just trying to make a graph with this info, or is this some animation that you want to be displayed? By ‘output’, do you mean the ‘y’ value corresponding to that time interval on the graph? If you just want an x-y graph, then you could manually enter values into t/Va arrays and then plot. Think of time from zero instead of ‘for one second’, such as: T=(0,1,2,3,5) Av=(0,900,900,600,600) And so on 
A piecewise function, I guess? 
Hmm, what is that which Jupiter has and Matlab’s IDE lacks? To me, their IDE is order of magnitude more superior: workspace pane, directory, script editor with breakpoints, linter... 
The root sum square, I suppose? 
I'm sorry for the messy data, it's just that it's pasted like that... it's basically a set of x,y,z points.... If I organize it's like this: \-0.03 \-5.65 28.46 \-0.1 \-5.62 28.3 \-0.13 \-5.57 28.1 \-0.19 \-5.53 27.97 \-0.25 \-5.52 27.88 But I don't know how it's paste into matlab
take a look here: https://www.reddit.com/r/matlab/comments/8euwtx/jupyter_notebooks_now_with_100_more_matlab/
you say you don't want to change the equation...so are you just trying to zoom out of the plot? if you are plotting [0:10] and you want to make it look steeper, you can do that by plotting [0:40] or something similar.
No, I can't change the time either. I can change the time interval though. Is there anyway I can do this using if statements?
Can you draw pictures of what you want? 
what I have: https://i.imgur.com/ojU4j4S.png what I need: https://i.imgur.com/gVKBq44.png
Okay, secondly, I'm a little confused what the restrictions are. Can you just make the plot narrower and take by raising the window it's in? 
so basically I'm working on a project that deals with propellers. The angular velocity is based on an equation and I am given certain values for the equation. (However, I could get the second pic if I change one of the constant in the equation, but its a constant so I can't). I want to get the speed of the propellers to 9000rpm as quickly as possible. But as you can see from the first graph, the first slope needs to be steeper. 
Not very clear why you would want to do that. Could you publish some code for us to be able to help you? 
I said nothing about the sample time.
On top of that, what are we allowed to change? There's nothing I could think to do that would not effectively boil down to being the same as changing the equation once you take a second to think about it. 
Can you change the scales on the x and y axes?
no
good luck :D
sorry about late reply, was at an exam today, had to prepare after i made OP &gt;_&gt; shame you couldn't help me with the other issues, i've still not made any progress on any of those :( anyway, I tried to do as you suggested, but then I get another error message: "Cannot divide a double array by a duration array." i don't even know what a duration array is...
If I'm reading this right... I think you can convert each cell array into a matrix then run var(M). Then put that value into a cell array for each answer? Something like: %some loop M = cell2mat(X{1,i}); my_var = var(M); my_ans{i} = my_var 
The only thing you can do if you want different output values is change the values of parameters. Is there a coefficient you can play around with?
Look at the documentation for indexing and slicing of arrays. You may also want to look at reshape(). 
1) Make sure file is in your MATLAB path (current folder) 2) Make sure you included the extension (.fig) in your filename string. voila
I'm not sure what error is referring to
This might add some additional information https://www.mathworks.com/help/matlab/ref/eig.html#btgapg5-4 &gt;[V,D] = eig(A) returns matrix V, whose columns are the right eigenvectors of A such that A*V = V*D. The eigenvectors in V are normalized so that the 2-norm of each is 1. If A is real symmetric, then the right eigenvectors, V, are orthonormal. Try this one instead and see if you get different values that look more appealing to the eye. &gt;[V,D] = eig(A,'nobalance') also returns matrix V. However, the 2-norm of each eigenvector is not necessarily 1. 
If they are subfunctions they have access the variables in program A. So you could just create an array variable in program A and modify it in subprograms. I'm not sure if this is considered good programming practice or not but for simple manipulations it works. 
Or as you mentioned an Excel file, why not just append data onto the excel file in each subfunction? Since you seem to be planning on exporting to Excel anyway, why not do it as you go? 
Check bs term over that range, and also check Fs/Fa see how small that is. Might be shrinking that expression into oblivion
No. You cannot change the value of an expression without changing the expression. That's a basic mathematical fact, not a Matlab problem. 
I'll look at your code. I only charge $100 an hour (4 hours paid up front, since this is the internet and all) Currently working in fimamce, have refactored dozens of projects in my life 
Fimamce you say
If you haven't already, it worth looking at the inbuilt [profiler] (https://uk.mathworks.com/help/matlab/ref/profile.html) for matlab, there's even a hidden profiler option for [memory usage](https://stackoverflow.com/questions/21997579/memory-profiling-of-matlab-columns-meaning/22585099#22585099).
I'll take a look at the profiler thank you. I inherited a dozen or so scripts when I took this part time job. The majority of the speed related things that I did were related to pre-allocating memory and fixing a lot of the obvious "yellow line" type errors. Stuff like getting rid of an unnecessary clear all at the start of all the scripts and some autofix optimizations related to the find commands that show up in the middle of the code. I could post an example of one of the scripts that I work with, but then again they're 500-700 lines long and nobody wants to read through that for free. 
$100 an hour is pretty steep considering I make that in a good day at this job. Thank you for the offer though. 
Put a link to pastebin.com of the file, people may take a gander at it. 
Yah, it's a lot like finance but also there's ice cream cake
https://pastebin.com/K1RDf4yT There's a pastebin link. The code takes data from a txt file with mixed amounts of data that comes from a bank of sensors out in the field. The script writes a lot of data to excel files and then plots 7-9 graphs depending on the site location and the installed sensors. The graphs and excel spreadsheets are what the scientists at my job use to check the sites in terms of Quality assurance. 
 for i=1:n WP6inAVG(i)= (WP6inMIN(i) + WP6inMAX(i))/2; WP1ftAVG(i)= (WP1ftMIN(i) + WP1ftMAX(i))/2; WP18inAVG(i)= (WP18inMIN(i) + WP18inMAX(i))/2; end So something like this can be improved because the for loop isn't necessary. The arrays are the same size so you can do division and addition without the loop. You can divide each element in an array by adding in a period. WP6inAVG= (WP6inMIN + WP6inMAX)./2; 
How did I miss that? Good eye. Probably took a second or so off the runtime based on tic toc before and after. 
So, looking at your code sample you posted, there are a couple of easy things you can do which will help a little. 1. A lot of your `for` loops are unnecessary. For instance for i = 1:n SlrCH_tot(i) = SlrCM_avgB(i)*60 end can be replaced by slrCH_tot = SlrCM_avgB*60 You have a lot of similar `for` loops in your code you can replace. This won't buy you a lot, but some. Even your other loops with math in them you can say, for example `WP6inAVG = (Wp6inMIN + WP6inMAX)/2 and get them all in one go. Second, when you're creating all of your zero arrays, don't keep calling `length` over and over again. Every call takes some processor. Instead, say `n_days = length(days)` and `batt_day = zeros(n_days,1)` (and actually, you might save some time not calling the `zeros` function more than once. I'm unsure but worth checking if `batt_days = zeros(length(days), 1)` followed by `rain_day = batt_days` might be a little faster. I think the `zeros` function has unnecessary overhead. 3. Similar to above, save off your logical indexing one time. e.g `idx_d = IDX == d` then say `batt_day(d) = mean(batt(inx_d,end))` Those are just the pure MATLAB tricks for you. I didn't spend a lot of time actually looking at the math you're doing, but one thing is see if anything you're calculating MATLAB has a built in function for. The more built-ins you use, the faster your code will run. 
&gt; Yes, as long as its CUDA enabled, MATLAB can recognize it and use it. This isnt quite true. This is not docuented many places, but there is a [minimum required compute level to use cuda for things like neural nets](https://www.mathworks.com/help/gpucoder/gs/install-prerequisites.html). A minimum compute level of 3.2 or higher [basically means that you need a 700-series card or newer](https://developer.nvidia.com/cuda-gpus], though not all 700 series cards qualify. OP's 1050ti qualifies just fine, but there are quite a few older CUDA enabled cards that dont. I only know this because my last computer had a 660m, which had a compute level of 3.0, making it just barely short of the minimum.
Thank you!
Great may be a stretch, but thanks all the same. The later parts of your code start calling subfunctions, but the same concepts should apply. You're trying to find fancy/tricky ways to do math.
To be honest, I hadn't looked at the math all that much. Those were things that the intern before me had coded and I should have taken a closer look to how they were done. Really appreciate the help!
Since you haven't used it for a long time, I'll go the ELI5 way Assuming that you are plotting some data, let's call it y. And you want to plot it against something, let's call it x. you can simply go with: figure (1) plot (x,y) Now here comes the other parts, to limit your x\-axis between the minimum of x and the maximum of x, you go with: set(gca,'XLim',\[min(x) max(x)\]) If you want to draw without the line then simply do this instead of plot: scatter (x,y) Now depending on what symbol you want, you can add it within the scatter function between a ' ': * scatter (x,y,'o') &amp;#37;does them with circles * scatter(x,y, '\*') &amp;#37;does them with stars Below you can find a list for the markers and how to type them in * '\+' Plus sign * 'o' Circle * '\*' Asterisk * '.' Point * 'x' Cross * 'square' or 's' Square * 'diamond' or 'd' Diamond * '\^' Upward\-pointing triangle * 'v' Downward\-pointing triangle * '\&gt;' Right\-pointing triangle * '\&lt;' Left\-pointing triangle * 'pentagram' or 'p' Five\-pointed star (pentagram) * 'hexagram' or 'h''' Six\-pointed star (hexagram) * 'none' No marker (default) I hope this helps :D Cheers
Definitely the profiler. It has even made recommendations within a mex function that reduced the execution-time by orders of magnitude.
Sure, I will do that. Thanks :)
http://www-personal.umich.edu/~lkilian/book.html the irf is figure 4_1, while the bootstrapp ci is figure 12_5
I think you got it right with the last approach if I understand correctly. Linspace gives you a linear sequence from a to b, which gives you a domain fr your function. exp(x) gives you the exponential function values (i.e., image) over that domain. E^0 is indeed 1 and E^1 is indeed around 2.8. If you do (assuming Fs is your sampling rate, into how many section you divide the line from 0 to 1 on the x-axis), x = linspace (0, 1, Fs) y = exp(x) plot(x, y) then you should see a nice exponential curve (cant test it at the moment myself though).
Linspace does what it says on the tin - makes a bunch of *linear* spaces numbers. You need to find a way to transform this generator into an exponential space. The question you’re really asking is less to do with matlab and more about basic curve fitting. Do it by hand, without matlab first. Start with the endpoints. How can you fit an exponential function to the points (0,0) and (1,1)? Remember you’re initially looking for something of the form y=a*exp(b*x) Once you have the correct function, then you can start to put it into code. But you have to start with an understanding of the problem you’re trying to solve - linspace can give you a vector you can use as x, but it won’t give you anything other than linearly spaced points unless you know how to tell it to do that. 
hm, that one starts from x=0, y=1 and it still ends at x=1, y=2.7 :/
well, i guess i could just put in multiple points along the way, and fake the curve like that. but i'm really bad at math, so i'll try to see if i can figure out something with what you said. my hope was just that i could use "exp" somehow to the linspace and everyone would be nice and dandy. 
Ooh, sorry, you need the y-value to be 1, not the x value. So maybe the idea is to think about the inverse of the exponential function - was that something in the lecture or reading material? That would tell you for which x-value exp(x) would be 1.
Use the clock block, mulitply it's output by your varying frequency, and use that as the input to a trigonometric function block set to sine.
Math 
you don't say...
You're not bad at math, you just haven't seen the way through this particular maze yet! Lets take it step by step, and modify along the way to get the results we want: * Start with \`y=exp(x)\` (which is the same as \`y=2.718\^x'). If you plug in x=0, you get y=1 \- we're looking for (0,0) and got (0,1), so lets try subtracting 1 from the function to force it where we want it. \`y=exp(x)\-1\` gets us the point (0,0). Awesome! * How does it behave with the other point that we know we have? Well, plug in and find out. \`y=exp(1)\-1\` gets us 1.718, telling us that we have the point (1,1.71). Not quite. We can't subtract again, because that will mess up the first point that we so carefully placed. What about multiplying/dividing? Since our second point is too high, we can divide by the amount it is off by to correct the error. That is, \`y = (exp(x)\-1)/(e\-1) = 0.582\*(exp(x)\-1)\`. What happens now? * \`y = 0.582\*(exp(1)\-1) = 0.582 \* 1.718 = 1\` giving us the point (1,1). * \`y = 0.582\*(exp(0)\-1) = 0.582 \* 0 = 0\` giving us the point (0,0). Note that the multiplication/division didn't affect our answer at 0, since any finite number times 0 equals 0. * You can plug the equation into a plotting program like Wolfram Alpha to double check that it looks like what you want it to look like. * Lastly, turn it into the code you want. Luckily you've already done the legwork on this. Simple put this equation into the definition for \`att\` that you already did, and use your linspace function as the x vector.
hm, that seems like it gives me the exact same result. well, i'm looking at this paper by John Chowning: https://web.eecs.umich.edu/~fessler/course/100/misc/chowning-73-tso.pdf and i'm just trying to duplicate his woodwind-like graph on page 7. so i'm not given that much to work with, i'm literally just trying to just duplicate his image in matlab. i guess what i've to do is mess around with exp until i get the correct equation that results in it starting from 0, because you would probably have to start it before 0 in order for it to start at 0 in the time domain. and somehow make it hit 1 in amplitude at the time of 0.1 second. but right now i'm just trying to figure out how to get that curve, after that i'll mess around with how to make it fit at the correct time.
Thank you for the reply. That's exactly what I did. Output waveform is something else. 
Post pictures of both the Simulink diagram and the waveform in a scope.
The profiler works with mex? wha... really?
thanks a lot, but i think my dyslexia kicked in at your last bullet point. i seriously don't understand what you meant by that. you want att to be both "0.582*(exp(0)-1)" and "linspace (0, 1, 0.1*fs)"? how would you combine that? i tried to make something like this: up = 0.582*(exp(0:0.1:1)-1); down = 0.582*(exp(1:-0.1:0)-1); and that seems to work, but i just confused as to how you wanted to do "att".
That works just as well, I was just trying to match the implementation you had already written with linspace. I meant to say that you should substitute “x” in the function we came up with for the vector you made with linspace. Both linspace and the 0:0.1:1 are simply ways of generating a vector of numbers between two endpoints. You can take that vector and manipulate it much like a single number to get a similarly manipulated vector as the output, just as you have done both in this reply and in your original post. Ultimately what’s happening is that you’re plotting a bunch of points which have both x and y coordinates - you can generate one of those coordinate sets however you like, and if you come up with the other corresponding coordinates to place those points on the curve it will come out looking the same. 
I'll check on dlqr() then. I chose 10ms because, well the system has 1 input (voltage to the motors), and 4 outputs (wheel position, body pitch, wheel velocity, body pitch velocity). I took the four transfer functions and looked at the closed -loop bandwidth of each tf. Only the voltage vs wheel position and voltage vs wheel velocity had finite bandwidth. Then I just followed a rule of thumb that the sampling frequency be at least 30 times larger than the closed-loop bandwidth frequency, 10ms just complies with that rule. 
Give (uisave)[https://www.mathworks.com/help/matlab/ref/uisave.html] a whirl
There is a command to get the current directory. Just use something like: currentDir = pwd; And put currentDir in the place of the directory. To prompt the user for a directory, I see two options. The first one is to have currentDir as an input like the function that is doing the saving. The other is to use something like the uisave function, which will open a file browser for the user. You can find more about it here: https://www.mathworks.com/help/matlab/ref/uisave.html This website also has the manual for all other functions and is usually very helpful.
Thank you. I would normally browse documentation and help forums but I have to go back and forth between my workstation and a computer that has internet so getting help/resources is hard/time consuming. I hope when my assignment is done I can get formal MATLAB training. 
Thanks this appears to be just what I need
Use python + numpy + django
manually translate the matlab code using numpy?
http://imgur.com/1nZilPZ 
The sample time is to large for that frequency. Lower is by going to model configuration parameters (the gear icon), drop down the additional options pane, and change the max step size.
You need your output to be an `mxArray`, which is a struct. I'm not familiar with MKL, but you'll need to allocate an `mxArray` with the proper data width (looks like complex doubles), and then use the pointer from `mxGetData` for assignment in the call to `mkl_sparse_c_spmmd`. After that just assign your mxArray to the output. Note that in R2018a you can do this a lot more easily since for the first time Real and Complex numbers are stored [side-by-side rather than in different allocations](https://www.mathworks.com/help/matlab/matlab_external/matlab-support-for-interleaved-complex.html).
So, I *thought* I was doing all this (though again, 1st mex function, so Id be very appreciative if you see any flaws in my logic if you would point them out). The idea was that: * the output `mxArray` is defined in the `mexFunction` call `mxArray *plhs[]` * data is retrieved with `MKL_Complex8 A; &lt;...&gt;; A = (MKL_Complex8 *)mxGetDoubles(prhs[0]);`. This uses `mxGetDoubles`, not `mxGetData`, since from what I can tell the documentation seems to indicate that `mxGetDoubles` is the version of `mxGetData` that is optimized for getting real doubles and for use with the interleaved R2018a memory model. This also typecasts the real doubles to complex singles (both of which contain 8 bits per value) * `sparse_matrix_t *mkl_SPARSE_ARRAY_1; &lt;...&gt;; mkl_status = mkl_sparse_c_create_csc(mkl_SPARSE_ARRAY_1, &lt;...&gt; , &amp;A)` converts `A` to MKL's internal format. The `&lt;...&gt;` contain the size and indexing information output by `mxGetIr`, `mxGetJc`, `mxGetM`, and `mxGetN`, as well as information about the indexing scheme (0-based CSC format) * `mkl_status = mkl_sparse_c_spmmd(op_type, mkl_SPARSE_ARRAY_1, mkl_SPARSE_ARRAY_2, layout_type, ArrayOut, numRowOut);` implements the actual matrix multiplication, and outputs a dense array of interleaved complex singles using column-based sorting. I believe this is identical to the sorting scheme used by matlab (in 2018a). * `plhs[0] = (mxArray *)ArrayOut;` takes the pointer to the output from the matrix multiplication and converts it to a mxArray and passes it to `plhs[0]` The idea was to not allocate any memory for `plhs[0]` (or, at least not to allocate memory for any data contained in the array), since I want to be able to just pass-by-reference the output of the MKL multiply function directly to the output of the mex function by just "passing a pointer". I dont want to have allocate space for the array and then have to copy the output of MKL into that allocated memory (Id have to with 2017b and older, but all the machines I'll be running this on have 2018a). That said, perhaps I *have* to define the size of `plhs[0]` prior to passing the output of MKL to it? If so, how can I do this without allocating memory to `plhs[0]` (other than the memory needed to define the "non-data" parts of the array, like the size and data type)?
Well... I cant help, but man am I hungry for almond bread now...
Yeah I see what you want to do since I've wanted to do something like this before, but there are a couple of problems here. Firstly, `mxArray` is a header struct which has pointers to data segments, so casting directly to `mxArray` won't cut it. You may have thought of a simple solution of allocating an empty `mxArray` and then using `mxSetDoubles` to set your data, but unfortunately this won't work either. This is because MATLAB checks to make sure that the allocation used for this came from either `mxMalloc`, `mxCalloc` or `mxRealloc`. Now, MATLAB checks this by appending either an 8 or 16 byte (version dependent) header to those allocations. This has information on size and memory alignment as well as a signature (and it just so happens that I recently a hacked solution for this, if want to see that just ask). However, unfortunately this means that if you're using the raw allocation that MKL gives back to you MATLAB will crash. If you could feed MKL a preallocated segment then this would be a lot easier. Is ArrayOut allocated by MKL and does MKL do garbage collection on its own?
The mexFunction doesn't know what plhs is except that it's some kind of mxArray, so you have to allocate it within the mexFunction with a call to one of the mxCreate* routines. See [here](https://www.mathworks.com/help/matlab/create-or-delete-array.html).
+Thanks for the unexpected (but very helpful) ELI5!
[removed]
&gt; `mxArray` is a header struct which has pointers to data segments Is it not possible to generate the header struct and then (in a seperate operation) feed it a pointer to a data segment? (I think you are saying "no, it isnt possible unless you use a a "hack", but I jst want to confirm). Side note: In the actual use case Im building this for, it wioll probably be called like so for nn=1:numIter Acur = functionToGenerateAcur(nn); dataOut(:,:,nn) = sparseMultiplyMKL(Acur,dataIn); end Perhaps this makes things easier, since `dataOut` is preallocated in matlab before the loop? It would be nice to have the mex function directly over-write these values one 2D slice at a time using MKL's output directly (without making any additional copies). Any tips for setting this up? &gt; it just so happens that I recently a hacked solution for this, if want to see that just ask That would be awesome. &gt; If you could feed MKL a preallocated segment then this would be a lot easier. This is literally my first time using MKL as well, but I think the answers are &gt; Is ArrayOut allocated by MKL? Maybe????. I am currently defining the MKL output as a `MKL_Complex8` but not explicitly allocating anything...everything else is done by the MKL function call (which I believe means it is allocating the memory), but that doesnt necessarily mean it has to be this way. MKL might be smart enough to not allocate if it sees the input already has enough memory allocated. &gt; Does MKL do garbage collection on its own? I dont think so. MKL has a `mkl_free` function, and I think i remember seeing that you need to call this to un-allocate memory. In case you feel like trying this yourself: [this](https://pastebin.com/BPLqPBmx) is the actual C source code and [this](https://pastebin.com/mn1ceQAd) is a bash script you can (hopefully) use to compile the `*.mexa64` executable. It is slightly more complex that what I posted here, but I think my original post covers all the important post. Note: the compile script assumed by default that MKL was installed in `${HOME}/intel`, that the c code you want to compile into a mex binary is located in `${HOME}/Documents/MATLAB`, that any non-standard GCC binaies are in `${HOME}/opt/gcc-[#]-[#]-[#]/bin`, and that the MATLAB binary is located in `/opt/MATLAB/R2018a/bin`. The paths for MKL and Custom GCC binaries correspond to local installs, and the matlab location is standard for a system-wide install. There are options near the top to set these to different values though.
Very similar to this, but use mkdir https://www.mathworks.com/matlabcentral/answers/108706-how-to-simply-add-the-date-to-a-file-name-when-saving-a-file
Thank you very much! That worked. I had set a different solver which I usually use for control system simulations. Now that it is discreete, the solver, does that make any difference when it is deployed to hardware?
thank you! i'll take a look. 
O shit u r rite
You're welcome mate :D goodluck :)
function\[\] = &amp;#37;Declare Global Variables global KS; global KC; KC = 0; KS = 0; End = 0; while (End == 0) choice = questdlg('Choose a function', ... 'Fuction Menu', ... 'A','B','B'); switch choice; case 'A' Program = 'Start'; while strcmp(Program,'Start'); Choice = menu('Enter the Trigonometric Function you wish to compute', 'Sin', 'Cos','End'); switch Choice; case 1 &amp;#37;sine x = input('Input an angle (in Radians):\\n'); eps = input('Input a value for epsilon:\\n'); \[sum\] = sine(x,eps); fprintf('Matlab answer: &amp;#37;5.2f\\n',sin(x)) fprintf('Taylor answer: &amp;#37;5.2f\\n',sum) fprintf('KS = &amp;#37;d\\n',KS) fprintf('KC = &amp;#37;d\\n',KC) case 2 &amp;#37;cosine x = input('Input an angle (in Radians):\\n'); eps = input('Input a value for epsilon:\\n'); \[sum\] = cosine(x,eps); fprintf('Matlab answer: &amp;#37;5.2f\\n',cos(x)) fprintf('Taylor answer: &amp;#37;5.2f\\n',sum) fprintf('KS = &amp;#37;d\\n',KS) fprintf('KC = &amp;#37;d\\n',KC) case 3 Program = 'End'; end end case 'B' &amp;#37; Triangle 1 Given Values A = 1.0472; b = 7; C = 0.5236; &amp;#37;Finding sides a and c and angle B using Law of Sines B = pi \- (A\+C); c = sine (C) / (sine(B)/b); a = sine (A) / (sine(B)/b); disp(\['Triangle 1'\]) fprintf('angle B in radians = &amp;#37;f\\n', B); fprintf('length of side a = &amp;#37;f\\n', a); fprintf('length of side c = &amp;#37;f\\n', c); &amp;#37;Triangle 2 Given Values using Law of Sines and C osines a = 3; B = 1.5708; c = 4; &amp;#37;Finding side b and angles A and C b = sqrt((a\^2)\+(c\^2)\-(2\*a\*c\*cosine(B))); C = asin(c \* (sine(B)/b)); A = asin(a \* (sine(B)/b)); disp(\['Triangle 2'\]) fprintf('angle of C (in radians) = &amp;#37;f2\\n', C); fprintf('length of side b = &amp;#37;f2\\n', b); fprintf('angle A (in radians) = &amp;#37;f2\\n', A); fprintf('KS = &amp;#37;d\\n',KS) fprintf('KC = &amp;#37;d\\n',KC) end End = input('Enter 0 to continue or other # to stop: '); end &amp;#37;Sine function function\[sum\]= sine (x,eps) KS = KS \+ 1; eps = 0.0001; sum=0; i=0; k=1; while abs(k)\&gt;eps &amp;#37;Taylor Series of Sine k = (((\-1).\^i)\*((x).\^(2\*i \+1)))/(factorial((2\*i)\+1)); i = i \+ 1; sum= sum\+k; end end &amp;#37;Cosine function function \[sum\] = cosine (x,eps) KC =KC \+ 1; eps=0.0001; sum=0; i=0; k=1; while abs(k)\&gt;eps &amp;#37;Taylor Series of Cosine k = (((\-1).\^i)\*((x).\^(2\*i)))/(factorial((2\*i))); i = i \+ 1; sum= sum\+k; end end end
You could use now to get the serial time and convert to a string in whatever format you desire. Another useful function might be clock
Do you mind posting the unformatted code somehow/somewhere?
function[] = () %Declare Global Variables global KS; global KC; KC = 0; KS = 0; End = 0; while (End == 0) choice = questdlg('Choose a function', ... 'Fuction Menu', ... 'A','B','B'); switch choice; case 'A' Program = 'Start'; while strcmp(Program,'Start'); Choice = menu('Enter the Trigonometric Function you wish to compute', 'Sin', 'Cos','End'); switch Choice; case 1 %sine x = input('Input an angle (in Radians):\n'); eps = input('Input a value for epsilon:\n'); [sum] = sine(x,eps); fprintf('Matlab answer: %5.2f\n',sin(x)) fprintf('Taylor answer: %5.2f\n',sum) fprintf('KS = %d\n',KS) fprintf('KC = %d\n',KC) case 2 %cosine x = input('Input an angle (in Radians):\n'); eps = input('Input a value for epsilon:\n'); [sum] = cosine(x,eps); fprintf('Matlab answer: %5.2f\n',cos(x)) fprintf('Taylor answer: %5.2f\n',sum) fprintf('KS = %d\n',KS) fprintf('KC = %d\n',KC) case 3 Program = 'End'; end end case 'B' % Triangle 1 Given Values A = 1.0472; b = 7; C = 0.5236; %Finding sides a and c and angle B using Law of Sines B = pi - (A+C); c = sine (C) / (sine(B)/b); a = sine (A) / (sine(B)/b); disp(['Triangle 1']) fprintf('angle B in radians = %f\n', B); fprintf('length of side a = %f\n', a); fprintf('length of side c = %f\n', c); %Triangle 2 Given Values using Law of Sines and C osines a = 3; B = 1.5708; c = 4; %Finding side b and angles A and C b = sqrt((a^2)+(c^2)-(2*a*c*cosine(B))); C = asin(c * (sine(B)/b)); A = asin(a * (sine(B)/b)); disp(['Triangle 2']) fprintf('angle of C (in radians) = %f2\n', C); fprintf('length of side b = %f2\n', b); fprintf('angle A (in radians) = %f2\n', A); fprintf('KS = %d\n',KS) fprintf('KC = %d\n',KC) end End = input('Enter 0 to continue or other # to stop: '); end %Sine function function[sum]= sine (x,eps) KS = KS + 1; eps = 0.0001; sum=0; i=0; k=1; while abs(k)&gt;eps %Taylor Series of Sine k = (((-1).^i)*((x).^(2*i +1)))/(factorial((2*i)+1)); i = i + 1; sum= sum+k; end end %Cosine function function [sum] = cosine (x,eps) KC =KC + 1; eps=0.0001; sum=0; i=0; k=1; while abs(k)&gt;eps %Taylor Series of Cosine k = (((-1).^i)*((x).^(2*i)))/(factorial((2*i))); i = i + 1; sum= sum+k; end end end
his comment was"Why is eps an input when it is set inside the function and not spec'd as a variable?? " 
Your sine and cosine function take eps as an input but immediately overwrite whatever value is there with 0.00001. Your prof wants you to realize there's no point to asking the user for an eps value if you just overwrite it. So get rid of those eps = 0.00001 lines in your sine and cosine functions.
Hum?
Mandelbrot = almond bread in German 
Ah thanks for explaining!
Thank you! 
I am not an MKL user, but a quick Google brings me to the documentation, which looks pretty straightforward. &gt; Is it not possible to generate the header struct and then (in a seperate operation) feed it a pointer to a data segment? (I think you are saying "no, it isnt possible unless you use a a "hack", but I jst want to confirm). Yes, this is possible. However, the data segment must be allocated with `mxMalloc`, which MKL isn't going to do internally. /u/gharveymn is saying that you can use a hack to make Matlab think the MKL-allocated array was allocated with `mxMalloc`. These kinds of low-level hacks are perilous, though. &gt; If you could feed MKL a preallocated segment then this would be a lot easier. This does not appear to be possible from what I saw in the API. &gt; I am currently defining the MKL output as a `MKL_Complex8` but not explicitly allocating anything...everything else is done by the MKL function call (which I believe means it is allocating the memory), but that doesnt necessarily mean it has to be this way. MKL might be smart enough to not allocate if it sees the input already has enough memory allocated. MKL isn't going to look at the `MKL_Complex8*` you pass it at all. That function argument is an output, not an input. It will allocate the `MKL_Complex8` result array and store the location of the result in the pointer you gave it. &gt; MKL has a `mkl_free` function, and I think i remember seeing that you need to call this to un-allocate memory. Yes, you need to use this to clean up all of the arrays that MKL operations give you as outputs. Failing to do so is a memory leak. Since you deal with such large data, the memory leaks will be crippling. &gt; Perhaps this makes things easier, since `dataOut` is preallocated in matlab before the loop? You ought to be able to use this. You'll have to pass `dataOut` as an argument to the mex function. Then you can convert the `MKL_Complex8` output to `double`s (if `dataOut` is `double`) and then you'll need to figure out where the `nn` portion of the `mxArray` begins, and you should be able to copy the data to that location. I'm not intimately familiar with `mxArray`, but I would expect that to work just fine. I don`t see you getting away without copying the MKL output at least once anyway, and doing this will save you on additional copies. ----- // This should convert the (bit encoded) real doubles stored by Matlab to the complex singles they represent. A = (MKL_Complex8 *)mxGetDoubles(prhs[0]); /* first input matrix */ B = (MKL_Complex8 *)mxGetDoubles(prhs[1]); /* second input matrix */ This is not how casting works. All you've done is cast the pointer - the underlying data is not changed at all. You will probably wind up using some kind of MKL or Matlab function to convert the `double`s to `float`s. I haven't looked at your code in detail, but this one jumped out at me.
What’s your answer to his question? It’s a straightforward question, all things considered. What aren’t you understanding?
Hi again, Sorry about the long hiatus! After that last post I just broke down as the thing I made just gave me an error message: "Matrix dimensions must agree." So I'm still stuck with this :/ &gt; That works just as well, I was just trying to match the implementation you had already written with linspace. I meant to say that you should substitute “x” in the function we came up with for the vector you made with linspace. I'm sorry if this is a bit much to ask, but could you write what you mean by this in code? Because I really don't get it. I mean, nothing changes if I try to change the values inside of the linspace, so I guess I don't understand where my "X" is supposed to be in this case. Are we talking "linspace(x,y,whatever)"? Or are we talking about the x and y-axis on the plot? I mean, I don't understand how I'm supposed to make this work with linspace. I'll post the whole code, maybe that will help? **My code so far:** fs = 44100; % sampling rate fc = 400; % carrier frequency %"The ratio of c/m = 5/1" fm = fc*5; % frequency modulation seconds = 0.5; % entire lenght of the signal att = linspace (0, 1, 0.1*fs); sus = linspace (1, 1, 0.3*fs); rel = linspace (1, 0, 0.1*fs); env = [att, sus, rel]; if length(env) ~= 0.5*fs % total samples is 0.5*fs 'something is wrong!'; end t = [0:1/fs:seconds - 1/fs]; % what does "- 1/fs" do? to remove an extra sample fmOut = sin(2*pi*fc*t+(sin(2*pi*fm*t))).*env; soundsc(fmOut, fs); figure plot(env) ylabel('Amplitude'), grid on, title('Woodwind sound'), xlabel('Samples') soundsc(fmOut, fs) **My earlier attempt before trying to use linspace (I couldn't make that work either):** attackLength = 0.1; %seconds attack = exp(0.0001/attackLength*([1:1:fs*attackLength])); %0.0001 is the exponential curve attack = attack / max(attack); % to keep amp at max 1 sustain = ones(1,fs-fs*0.1); releaseLength = 0.1; release = exp(-0.5/releaseLength*([1:1:fs*releaseLength])); envelope = [attack, sustain, release]; I'm sorry to be such a bother, I'm just so confused as how to make this work :/ it's really frustrating, as I could make it work in PureData. There I just couldn't make the envelope work &gt;_&gt; &gt; Both linspace and the 0:0.1:1 are simply ways of generating a vector of numbers between two endpoints. You can take that vector and manipulate it much like a single number to get a similarly manipulated vector as the output, just as you have done both in this reply and in your original post. &gt; Ultimately what’s happening is that you’re plotting a bunch of points which have both x and y coordinates - you can generate one of those coordinate sets however you like, and if you come up with the other corresponding coordinates to place those points on the curve it will come out looking the same. I mean, I technically understand what is going on. But I'm having a really hard time trying to figure out how to actually apply it, especially how to apply it to how linspace works... I kinda feel like my earlier attempt (see code) made more sense to make rather than linspace, but there I also get an error message for when I try to apply the envelope to the sinusoid(sinusoid). So regardless of what I've tried I keep ending up with the same problem :(
Ah that's very helpful - Figure 11 right? So you have a curve that goes through 3 points, written as (x, y) - (1/6, 1) - (1/3, .75-ish) - (5/6, .6-ish) with the x-values being proportions of 0.6 s I think. You can't really read off the exact y-values. I'm assuming the zeroes at the start and end need to be ignored, otherwise it's nothing like an exponential curve. You could fit an exponential curve to the three values in the middle though. Like Afronanny said, that would mean finding the three parameters of the function y = b * exp(a * x) - c that work to get you those pairs of (x, y) values. But I'm not sure that's that easy to do by hand. Are you sure that you need to do it that way? Skimming the paper it looks like Fig 11 might actually *be* the envelop, i.e., it has linear sections. You can define a function like that just by listing the line-equations over the different sections of the x-axis. 
&gt; Ah that's very helpful - Figure 11 right? Actually it's Figure 12 I was trying to do (hence the lack of a decay). But maybe it's a better idea for me to make Figure 11, that would remove my need for making these exponential functions that I'm completely stuck at. Then linspace would be just fine. I didn't even consider doing Figure 11, I was so hell bent on Figure 12. &gt; You can't really read off the exact y-values. I'm assuming the zeroes at the start and end need to be ignored, otherwise it's nothing like an exponential curve. You could fit an exponential curve to the three values in the middle though. I'm a little conflicted about what you said here. I mean... Figure 11 doesn't have an exponential curve, it only has linear curves... right? &gt; Like Afronanny said, that would mean finding the three parameters of the function &gt; y = b * exp(a * x) - c &gt; that work to get you those pairs of (x, y) values. I'm still working on trying to figure out how to make that work for my code. At best I get Matrix Error Messages, and when I plot the curves individually they look correct, but the moment I try to combine them in the envelope the plot gets completely messed up and looks nothing alike what they do individually &gt;_&gt; &gt; But I'm not sure that's that easy to do by hand. Are you sure that you need to do it that way? Skimming the paper it looks like Fig 11 might actually be the envelop, i.e., it has linear sections. You can define a function like that just by listing the line-equations over the different sections of the x-axis. An envelop doesn't have to be ADSR, e.g. if you make a bell-sound you would only use A and R. But I guess I should just give up on Figure 12, it has been way too frustrating trying to make an exponential curve, and I've now been talking to 4-5 different people trying to resolve this, and it's still a mess :/
&gt; I'm a little conflicted about what you said here. I mean... Figure 11 doesn't have an exponential curve, it only has linear curves... right? Yes, sorry - I was mistakenly thinking that you wanted to fit an exponential curve through the three points connecting (some of) the lines in Fig 11. You could approximate Fig 11 a lot easier than Fig 12. I am just wondering whether you're maybe expected to use parameters and a program that generates the envelop, rather than trying to replicate the shape manually? It depends on your aims / assignment of course. 
We were told to use PureData or Matlab, and the requirement was just to pick something covered in the course and make a project about it for the exam. So it's really vague how detailed it must be and what the focus is, but I'm guessing they don't care much about the math since we also can use PureDate. So I just decided to make some sounds using FM and envelopes, and then maybe add a delay or a lowpass filter (running average) or something. Regardless, I'll wait and see if Afronanny gets back to me, or else I'm going to skip this exponential BS. I've spent way too much time on this crap and I don't think I even need to do it anyway :/ I really hate vague descriptions. I also have no idea what I'm supposed to put on my slideshow... this is so dumb, I'm going to bed *flips a table*
Haha :) But frustrating! Yeah, maybe the best way forward would be more about asking for clarification from the lecturer? From my own experience, I'd guess that the intention is to use skills / theory that's been covered in the course. It'd make sense to me to generate sounds for what it's worth. Maybe this is more helpful for that as a tip - in Matlab, try: Fs = 144000; Duration = 1; t = 0:(1/Fs):Duration; carrier_freq = 800; amp_mod = 0.3; amp_mod_freq = 10; amp = sin(2 * pi * carrier_freq * t) .* sin(2 * pi * amp_mod_freq * t); y = sin(2 * pi * amp .* t); sound(y, Fs) plot(y.^2) % Smooth to get something like the envelope and watch the volume / deafness-risk via headphones... It's fun to play with this stuff. clear('all') turns the sound off if you make something you want to go away :) The paper you linked is a step more advanced than this but it's maybe a useful first step. 
Oh just fuck off.
Cmon
Thanks for the response /u/Idiot__Engineer , it helped clear up a few things. &gt; However, the data segment must be allocated with mxMalloc, which MKL isn't going to do internally. Too bad. This is a project where I really wouldnt want to use a "low level hack" unless it was extremely well tested or absolutely necessary, so I guess Ill just have to live with making 1 copy of the data. &gt; MKL isn't going to look at the MKL_Complex8* you pass it at all. This almost makes me think it might be possible to allocate it with mxMalloc first? I mean, if 1. it doesnt actually use this info (other than for input class checking, which might be a problem), 2. and the underlying data structure is identical (Im guessing the data is stored as a binary blob broken into 32/64-bit segments, though idk if there is additional meta-data or not) then it seems like it might be possible? idk. Its not really a priority for this moment, but maybe I'll try that out at some point in the future. &gt; memory leak So, what exactly does and doesnt need to be freed? Am I correct in thinking that anything that can be traced back to a pointer passed from input data (i.e., it already existed outside the function and is just being refferenced) doesnt need to be freed, but anything created inside the function does? (After copying it into an output, if that is needed)? Working on that assumption, I modified the end of the function linked above as follows. Does this look right-ish? (At least `mxFree` calls...I know you said your not super familiar with MKL). /* EXPORT RESULTS */ // typecast from MKL_Complex8 to mxSingleComplex E = (mxComplexSingle *)D; // Create output array arrayOut = mxCreateNumericMatrix( nOutDimSize, nOutDimSize, mxOutClass, mxOutComplexity ); // Set output data mxSetComplexSingles( arrayOut, E ) /* FREE MEMORY */ mkl_free(D); mxFree(E); mxFree(nOutDimSize); mxFree(nRow0); mxFree(nRow1); mxFree(nCol0); mxFree(nCol1); mkl_free(nRow0m); mkl_free(nRow1m); mkl_free(nCol0m); mkl_free(nCol1m); mxFree(mxOutClass); mxFree(mxOutComplexity); mkl_free(sparseLayoutType); mkl_free(sparseIndType); mkl_free(descrA); mkl_free(descrB); mkl_free(op_T); mkl_free(op_NT); mkl_free(op_CT); mkl_free(mkl_status); &gt; This is not how casting works. All you've done is cast the pointer This is exactly what I was trying to do actually. Calling this a "conversion" is perhaps poor word choice on my part...reinterpret is perhaps better. At any rate this is supposed to be analogous to a typecast operation. The reason for this basically comes down to I have data that is complex singles and that is too sparse and too big to use a dense array with, and Matlab doesnt support sparse single arrays. e.g., The matlab code might look like this. Note: Typecast hasnt been updated to support the new interleaved memory model, and still requires a non-complex input. % Xt is real singles Xf = fft(Xt); Xf = Xf(1:ceil(size(Xf,1)/2),:); dim = size(Xf); Xf = reshape(Xf,[1 dim]); Xf = reshape(typecast(cat(1, real(Xf(:)), imag(Xf(:))), 'double'), dim); Related question: I tried to implement this conversion in mex, and came up with #include "mex.h" #include "matrix.h" void mexFunction( int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[] ) { // define variables mxDouble *A; mwSize n, m; mxComplexity cFlag = mxREAL; // get size m = mxGetM( prhs[0] ); n = mxGetN( prhs[0] ); // get data A = (mxDouble *)mxGetComplexSingles( prhs[0] ); // destroy input // mxDestroyArray( prhs[0] ); // allocate output plhs[0] = mxCreateDoubleMatrix( n, m, cFlag ); // set values in output mxSetDoubles( plhs[0], A ); // free memory mxFree( A ); } But this 1) doesnt give the right answer, and 2) crashes matlab if I try and use it for in place replacement (i.e., `A = convertComplexSingle2Double(A)`). And thoughts on why? Thanks again for the advice. It is much appreciated.
&gt; This almost makes me think it might be possible to allocate it with `mxMalloc` first? Oh, shit. I'm so used to C++ that I was thinking of this differently and incorrectly (I described pass-by-reference which doesn't exist in C, but is how we do output arguments in C++). Yes, this is how you can pull this off. I think you're actually passing garbage pointers to the MKL functions right now, which could definitely be contributing to crashes. You need to make sure you allocate memory at the pointer for MKL to store the output in, just use `mxMalloc` instead of `malloc` for the one that you want to stick in an `mxArray`. &gt; So, what exactly does and doesnt need to be freed? Anything that is *dynamically allocated* needs to be freed. `new` and any variant of `malloc` perform dynamic allocation. Probably a lot of the Matlab mex functions for creating matrices as well, which makes mex functions... not exactly a gentle introduction to C memory management. And yes, I would assume that the caller is going to take care of managing the memory of anything that it passes to you. You only ever free pointers, so most of those things that you're showing don't need to/can't be freed. Variables are destroyed when they go out of scope automatically. The reason that memory needs to be freed is that, for dynamic allocation, your variable is a pointer to the data, not the data itself. So when you go out of scope, the pointer is destroyed... but the data remains. And now you don't have a pointer to the data, so you can no longer do anything with it at all. &gt; This is exactly what I was trying to do actually. Calling this a "conversion" is perhaps poor word choice on my part...reinterpret is perhaps better. This is such a bizarre thing to do that I'm struggling to wrap my head around how you're using it. But reinterpret is the right word, in C++11 we used `reinterpret_cast&lt;&gt;()` to do this kind of casting. &gt; I tried to implement this conversion in mex, and came up with... But this 1) doesnt give the right answer, and 2) crashes matlab if I try and use it for in place replacement I can't completely explain what you're seeing, but that's probably because I think you've invoked some kind of undefined behavior. The issue is right at the end: // set values in output mxSetDoubles( plhs[0], A ); // free memory mxFree( A ); The `mkSetDoubles` documentation says: &gt;All mxCreate* functions allocate heap space to hold data. Therefore, you do not ordinarily use this function to initialize the elements of an array. Rather, call the function to replace existing values with new values. &gt;This function does not free memory allocated for existing data. To free existing memory, call mxFree on the pointer returned by mxGetDoubles. This is a little unclear, but because of the caveat about not freeing the existing data, I'm pretty sure what this is doing is changing where `plhs[0]` matrix thinks its data is. So you're *not* copying the values from `A` into `plhs[0]`, you're just replacing the data in `plhs[0]` with the data at `A` - which, incidentally, is exactly what you want to do with your MKL output. Then the problem you're having is that the next thing you do is free `A`... so now the data in the `plhs[0]` array has been freed/is no longer valid. At that point the memory that `plhs[0]` is looking at to get array values can be used for whatever else Matlab wants to do, so you'll get garbage out. What you ought to do is store the pointer in `plhs[0]` before you call `mxSetDoubles`, and then free the stored pointer. Something like // Get the current pointer mxDouble* oldArray = mxGetDoubles(plhs[0]); // Replace the data mxSetDoubles(plhs[0], A); // Free the old data mxFree(oldArray);
&gt; This is such a bizarre thing to do that I'm struggling to wrap my head around how you're using it....I can't completely explain what you're seeing, but that's probably because I think you've invoked some kind of undefined behavior. You know...It usually takes me a couple of years of working at something before I start to get comments like this. I have somewhat mixed feelings about starting out from day 1 like this. Regarding the typecast / reinterpret_cast operation...it really is just a work around to be able to use sparse complex single arrays in matlab. Though, thinking it over, I *might* not need to do this. To give a bit of insight of what this is intended to achieve: The data are a set of time series that are based on 4 coordinates: source and receiver x and y coordinates. in `C = A * B * A.'`, `B` is a symmetric array containing a single frequency of the data (this is implemented in a loop over frequency). Each dimension represents some unique (x,y) combo for either source or receiver. It is made by symmetric by applying reciprocity (saying the data are the same when the source and receiver positions are flipped), which is basically saying B = X + X.'; B((X ~= 0) &amp; (X.' ~= 0)) = B((X ~= 0) &amp; (X.' ~= 0)) ./ 2; In general the input data are not on a regular grid, and since this method fundamentally requires each unique source/receiver position to have its own row/column in `B`, `B` tends to be very sparse. `A` acts are a frequency-dependent "mapping operator" that uses the geometry of the input data and the (user-specified) geometry of some output to estimate the data at every point in the output grid (hense the output being dense). In order to optimize re-generating the `A` and `B` arrays for every frequency, I figure out a list of row and column indicies to pass directly to `sparse(...)` in matlab, since this is (typically) the fastest way to generate a sparse array. The indicies however, dont change with frequency, which almost allows me to generate them once, sort them and the data properly for CSC format, and then just pass the raw data to matlab (which, since this wouldnt be sparse, I could store it using its native data type of complex singles). The problem is the points where `X(i,j)` and `X(j,i)` both have data. Right now I deal with these by pre-dividing these points by 0, and then use the sparse accumulation feature of `sparse(...)` to sum the 2 halves together. I cant just choose one or the other, as this would break the symmetry (The data are roughly the same, but not exactly identical). And this I suspect the best option is going to be to continue to use `sparse`, since i doubt that MKL has an equivilant sparse accumulation feature. &gt; The reason that memory needs to be freed is that, for dynamic allocation, your variable is a pointer to the data, not the data itself. So when you go out of scope, the pointer is destroyed... but the data remains. This makes a lot of sense. Thank you. &gt; What you ought to do is store the pointer in plhs[0] before you call mxSetDoubles, and then free the stored pointer. Something like Ill give the code you suggested a shot and see if it works. I'll post another reply and let you know. Thanks again for the help....it is much appreciated.
Sampling rate is 44100Hz
[https://nl.mathworks.com/help/symbolic/digits.html](https://nl.mathworks.com/help/symbolic/digits.html) The link above should sum things up pretty well, instead of going with format long try going with: vpa(eig(A)) Hope this helps :D
you can go like this: t=linspace(timeStart,timeEnd,size(data)); plot (t,data) what linspace will do is that it will create a vector which starts at timeStart, end at timeEnd and has a total number of element that is the same as the number of elements of data Hope this helps :D 
In fact that just increases the number of digits in the original values. A better result is obtained with `eig(vpa(A))`. So moving back to double with `double(eig(vpa(A)))` gives: ans = 1.000000000000033 + 0.000000000000000i 0.999999999999984 + 0.000000000000028i 0.999999999999984 - 0.000000000000028i which is certainly much better. Thank you for the reminder to use vpa!
Glad to help :D 
Yup just recall about linspace :P Thanks for the answer !
I'm not sure this is about precision. Is this maybe more about two of the rows of the matrix being scaled versions of each other?
It's also good practice not to use eps as a variable name since eps is a built-in function/value. 
by doing linspace I'm guessing it should be fine since the sampling rate was not changed with time right ? i.e: n number of points were taken per second along the whole signal Can you elaborate more what you want ? Maybe I can be of help
You would be way better off using Excel.
I tried that first, but I couldn't figure out how to make the peaks last over an interval of values on the x\-axis. For instance, how do you make peak 1 last for from 200 to 220? 
Excel you could do with histograms or just make a scatter plot.
You'll want to use the function **area()** to generate your plot. The first thing you need to do is build a complete vector of your data. So in your example produce a **Y** of 500 zeros. Y = zeros(500,1); Then use your x values as the index to assign the y values you wish to plot. Y(200:220) = 72; Y(320:360) = 120; Then plot it. figure(1);area(Y); 
Just copy the peak value 1 across x axis numbers 200 to 220
Perfect, thank you!
Convert to symbolic first, and solve it symbolically. If you need to convert back to double, use double(). Do everything symbolically if you want to preserve precision as much as possible, and convert back to double at the end of your calculations. A = sym([-3 -7 -5; 2 4 3; 1 2 2]) double(eig(A))
there are a lot of ways you could do this, and I'm no guru, but you could use the modulus (mod()) function, it returns the remainder of one number divided by another. if the remainder is zero then you know the one number is a mulitple of the other.
is there a way to use a while loop with that? I think I need to use one for this assignment
We can't do your work for you. The problem is laid out very clearly, so can you specify which parts you don't understand? &gt; I am working with Matlab only 1 month and I have to solve this already in a given time. I'd be very careful saying such things, as this problem is something I'd expect a month-long Matlaber to be able to accomplish (in due time).
I think I have decent experience with simulating simulink diagrams through matlab scripts. If you have a simulink file open through a matlab script, all the variables in the matlab workspace are available in Simulink. This means that you can take the sim() command and put it inside a loop: for I = 1:50 sim('SimulinkDiagramWhichUsesI.slx') end The above will iterate the simulation of the diagram 50 times, with different values of i. Keep in mind, this increases the time taken for the simulation by a lot. [Reddit Enhancement Suite](https://redditenhancementsuite.com "also /r/Enhancement") 
Use the 'bar' plot function. I hope that helps. Check the Matlab help for bar.
It would seem as though this is a classic logarithmic interpolation issue. Don’t be afraid of exponents and proceed cautiously 
The same way you are sweeping over S and J, you can sweep over the variance. The trick is to make that parameter in the simulink block a workspace variable and then loop over it. So find the block and replace the value of the parameter with a variable name say simvariance or so, and then add a for loop in you script that goes over different values, eg: for varvalue =1:50 simvariance = varvalue; sim(...) end You don’t have to change anything in how you call the sim command. If I got the question correctly, you want to do this on top of the S and J sweep, so you have three parameters to sweep over which means you can nest the for loops.
What's your attempt looking like so far? 
Oh shit fuck me over with an ice cream cone So I can basically replace any parameter with a "variable", for example a random workspace variable P, and then just do a for loop for P = x:n:y???
Think about how you would calculate the LCM of two numbers by hand. How would you do it? Try to break that down, step by step. Then think about how to write each step as MATLAB code, without worrying about using the while loop. You can use a while loop wherever you need to repeat something until a condition is met. Where in your solution do you need this? That's where you use the while loop.
Its already solved :) I can either use timeseries function or handles.dt=1/44100; &amp;#37; sampling time in seconds N=(length(audioSamples)); &amp;#37; number samples in record T=(length(audioSamples)\-1)\*dt; &amp;#37; sample time, s timeStamps=(linspace(0,T,N))'; &amp;#37; make the time vector match the size of the data stream
Eyyy good to hear, best of luck :D
Without seeing your code, there's just no way we can help you
A couple of things. First, format your code so that it is readable. You can do this by putting it in pastebin or by starting each line with 4 spaces so it looks like this Second, describe what error you're getting. Do you get a run-time error? Is the result you get wrong? Why do you think it's wrong? 
If you have a recent version of Simulink (&gt;= R2017a), in addition to what has already be said, you can use [parsim](https://fr.mathworks.com/help/simulink/slref/parsim.html) for that. It's slightly different but the concepts are similar. (and I think more readable, but not everyone may agree) Instead of changing the values in the workspace, you first create an object with the different parameters that you want to override for each Simulation, and you pass it to the function. Bonus: You get a free GUI showing you the simulations progress if you use the good option (ShowSimulationManager. Or ShowProgress to show the progress in the command window output). And if you have a parallel computing toolbox license, you can launch the simulation in parallel without any changes to your code.
So far all I have is the input process, and then I thought maybe I needed the remainder so I have that. I also have the fprintf for my result that I need but obviously I'm missing code in between
So I would probably start with thinking about what prices you need to follow to accomplish each of your tasks. It's fine to be able to know what code prints to the screen. (fprintf, disp, etc) but fundamentally, try stepping through a few times of each individual little thing you do while accomplishing lcm or gcf by hand. There's a few different methods, and I think it'll be easier for you to implement in code if you think of the process yourself, rather than if I tell you how I think about the process for each of these problems. You may not think of the most efficient way to do things, but I doubt that will matter unless you are doing something crazy like trying to reverse engineer an encrypted password or something. (which involves large lcm of two primes, iirc) 
Try removing the extra unnecessary steps. E.g. write a=round(ii*25). What's the value of b when it fails? See if it's an integer. It needs to be, when used as an index. Consider using round there as well.
The problem is that 1/(0.1*0.1) != 100 OR 100.00 Do the operation and check what value is produced. Unless you need decimals, don't insert them into your code. You should also define **c** before you start loading it up.
I think a good starting place is : profile on; CODE profile viewer; This will let you see your bottlenecks...
Oh thanks, this is pretty much my first time optimising so it should be fun
Without knowing what level of a coder you are, it's hard for me to give too much advice. If you're a novice, look at the little yellow squiggles in your code editor. I see a lot of people who ignore those, and that really can account for a lot of the slowdown (like not pre-allocating variables). Assuming you're doing that, then the profiler is your best bet. One nice thing about it, it tells you what's worth working on. Normally when I write code, I do some things I know are not ideal, but I just want to get the code working before I go through and try to speed it up. There are some times when code would be a lot of work to change, but I see that my script is only spending 1 second in that part, and 30 seconds somewhere else. So, why bother making the change until I've fixed the 30 second problem?
I have fixed a lot of the problems that were in the code like storing unnecessary variables and of course pre\-allocating the size of any variable I might be using. The code went from taking almost 13 seconds to only taking 4. But still in the grand scheme of things I want it to go even faster. That's why I asked the question. This is maybe my third or fourth project that I have done on MATLAB so yeah for sure I am still a novice. This is the first time that I hear of the profiler and I'll make sure to use it tomorrow. Thanks for your input :D
Sorry, that makes perfect sense. Please see the below: Inputs: H - an op_nnodes x op_nnodes matrix D1 - an op_nnodes x op_nnodes matrix x - and N x 1 vector op_accorder - a double scalar op_ltewgt - a double scalar op_srtype - a character op_nnodes - a double scalar objective_weight2: my objective function, it takes in the inputs and finds fval. As you can see, I use eig() to calculate the maximum eigenvalue by magnitude of D1. If I comment out where I find the eigenvalue my optimization seems to run fine and goes through all 5000 points. However, if I calculate the eigenvalue, even though I don't use it in finding fval, my optimization only appears to analyze a single trial point rather than showing outputs from the optimization for each set of trial points (i.e. up to 5000). When I run it with eig() I get an warning saying the matrix is singular to machine precision so maybe that might be messing up the optimization procedure and stopping it from analyzing the other points. function [fval] = objective_weight2(H,D1,x,op_accorder,op_ltewgt,op_srtype,op_nnodes) e1 = D1*x.^(op_accorder+1) - (op_accorder+1).*x.^(op_accorder); e2 = D1*x.^(op_accorder+2) - (op_accorder+2).*x.^(op_accorder+1); error = (e1+e2)'*abs(H)*(e1+e2); switch op_srtype case 'deriv' sr = max(abs(eig(D1))); case 'Asys' B = zeros(op_nnodes); B(1,1) = 1; sr = max(abs(eig(D1+H\B))); case 'LCE' end fval = op_ltewgt*error;
What you are trying solve is polynomial interpolation (or regression, depending on how you set it up). It looks like this is 1D so it is easy (and almost certainly interpolation). The big question is, do you understand what you're even trying to solve? You are looking for coefficients of a curve: F = c(1) + c(2)*x^1 + c(3)*x^2 + ... + c(n) * x^(n-1) You need to solve for `c`. You have `n` unknowns (`c = [c1,c2,...,cn]`) and `n` pieces of information (e.g. at `x = 3, F = 5`). Now you put that into a matrix form. A*c = f `A` is a Vandermonde matrix. It is essentially `A(i,j) = x(i).^j` (careful. I may have that flipped). Assuming it is well posed, you can invert the matrix via `c = A\f`. That is the theory. Before you continue, try to understand where this came from. And then try to build your own Vandermonde matrix (again, I may have had my definitions flipped). Or, use Matlab's tool but *read the documentation* to make sure you understand the order. 
What is the distance between any two points along a circle? You know for a given r and theta, `x = r*cos(theta)` and `y = r*sin(theta)`. Use the *same* `r` but `theta_1` and `theta_2`. From there you can get `d theta`. Once you have that, its as easy as: r = whatever; theta = 0:dtheta:2*pi; x = r .* cos(theta); y = r .* sin(theta); plot(x,y)
So the code I have so far is clc; clear; x = input('Enter the first number: '); y = input('Enter the second number: '); a = x * y; b = factor(x) c = factor(y) is there a way I can compare the factors of two numbers or something? Because the way I learned to do LCM is factor the two, multiply them, and then divide by the common factors
In sets the terminology would be the intersection of the two sets of numbers. I think your prices will work. I don't know off the top of my head if there's a function for that in matlab, and I'm not in a good position to check at the moment. Hopefully there is and then you should be able to do what you want pretty easily. Only problem would be, I don't see where you would need to use a while loop, but I'm sure you can do that somewhere if it's a requirement,even if it is not necessary. 
In general it's bad practice to use the base workspace, as this is a pretty non-protected area for your variables; any other program can edit these. I'd recommend learning to use the "UserData" property of your various GUI components. As an example, if you want a simple GUI that will set a particular state to red or green with buttons, and a third button to print the current state, you might have the following file called print_colors.m that stores the states in the UserData property of your main figure: function color_buttons fig = figure('Position',[500 500 200 100],'MenuBar','none'); fig.UserData.Color = 'green'; % the format for sending arguments to a callback is 'Callback',{@func,arg1,arg2,...} uicontrol('Style','pushbutton','Position',[25 50 50 25],'String','Green!','Callback',{@set_state,'green'}); uicontrol('Style','pushbutton','Position',[125 50 50 25],'String','Red!','Callback',{@set_state,'red'}); uicontrol('Style','pushbutton','Position',[50 20 100 25],'String','What''s the State?','Callback',@print_state); % 1st argument is a handle to the object that was clicked (the uicontrol button) % 2nd argument is "eventdata", which we don't need % 3rd argument is our 'green' or 'red' gets passed in when the buttons above are pressed function set_state(hObj,~,color) fig = hObj.Parent; fig.UserData.Color = color; function print_state(hObj,~) fig = hObj.Parent; fprintf('Color is: %s\n',fig.UserData.Color); This way our data is stored within the GUI itself, and will be deleted when the GUI is deleted as well, and we have no need to access the base workspace.
If you want to elaborate a bit on the project I can help you speed it up quite a bit.
In my code "a" will rarely be a multiple of 25, I just used that value as an example. I will define length\_var as integer and that solves the problem. Your solution would work too, so thanks.
Thank you. It is indeed a floating point number that changes slightly in the 9th iteration. I will define length\_var as integer. 
Addendum: it looks like intersect() only provides unique values in a vector. This might be a good place to put in your while loop, if you can develop your own way to either use the inescapable to determine how many there should be or just used vectors b and c to develop the intersect you want. 
Have you read the documentation? The input function probably needs to be capable of taking a vector of inputs and producing a vector of corresponding outputs. That "slew of errors" probably tell you exactly what the problem is. Don't ignore them. 
Hey guys I figure it out! Thanks for all the help! clc; clear; x = input('Enter the first number: '); y = input('Enter the second number: '); a = x * y; c = x; d = y; while y ~= 0 t = y; y = mod(x,y); x = t; end b = a / t; fprintf('The LCM of %g and %g is %g!', c, d, b);
not enough information to help. please go to this site: [https://docs.openmicroscopy.org/bio\-formats/5.7.0/developers/matlab\-dev.html](https://docs.openmicroscopy.org/bio-formats/5.7.0/developers/matlab-dev.html) You need to read in your data for each setting, which can easily be done by writing a loop and saving the output (raw data) in a structure array. 
Look at the code and see where I'm doing things I don't need to do, where I do things I've already done, or where I do something in a more complex way than I need to. Then fix those things. 
Select a pixel from each image. Plot its value. 
Avoid for loops at all costs using matrices and logical indexing. 
a few things i would try: -push out the function further, out to like 20 or so, to see if the behavior continues -ensure your algorithm is doing what it should be doing by comparing to other's work -is there some "smoothness" characteristic of this function that could be influencing the performance? for example, are the parts of the function where it's really accurate ([1.8 to 3] and [5.5 to 6.5]) smoother than the parts where it isn't? could you try with some special cases to see if the distance from 0 is indeed the problem? try looking at the original function being a sine wave, line, and parabola.
Vectorize your code where possible, and allocate arrays before loops using the zeros command is a great start
[`fgetl`](https://www.mathworks.com/help/matlab/ref/fgetl.html) reads a line. [`split`](https://www.mathworks.com/help/matlab/ref/split.html). [`str2num`](https://www.mathworks.com/help/matlab/ref/str2num.html) converts strings to numbers. 
[removed]
Find some way to do what is called *image segmentation*. Isolate the pixels in that object on the bottom, find the boundary, then measure whatever you want. There should be a lot of academic work on segmentation, possibly even for your specific type of image since it's a common task in medical imaging. 
Why are you using symbolic variables? This looks like you're doing numerical calculations. Get rid of the symbols. Plot is for numbers. Alternatively, you can use vpa. 
Just replace ':' with '=', and evaluate the resulted string as a MATLAB expression. eval(strrep('speed: 100', ':', '='))
You might want to add a ';' at the end of the expression, so it doesn't print in the command window upon evaluation. eval(strcat(strrep('speed: 100', ':', '='), ';'))
[removed]
If I get rid of the symbols, I can't create the function. I get this error: Undefined function 'int' for input arguments of type 'double'. Error in fourier1 (line 3) a0=(1/To)*int(1,t,0,1) %&lt;---the average
Well it seems likely you'll have to use a different function then, doesn't it? Have you looked at the documentation? 
If you have access to the Coder toolbox, I have found that compiling MATLAB functions to .mex files has given me &gt;100x computation speed improvement. This might be a bit overkill depending on your needs though! It takes a long time to get the code just right.
What is this documentation? Besides I am also curious as to why mine doesn't work? It did create a function which is correct but for some reason, equating the t with values(double) doesn't change the t in f(t). As a result f remains as a symbol and it is unable to plot. But when I manually type in the function f, I am able to plot the graph. I have no idea why the above is unable to change the t in f(t) to values.
The matlab documentation is very thorough. You can open it by pressing f1. Yours isn't working because it's trying to plot a symbolic expression. Plot() is for numerical data. To plug numbers into a symbolic expression you'll have to use the proper function. Again, I'd suggest reading the documentation to see what that might be. 
There is a free toolbox called [MATLAB Support Package for USB Webcams](https://de.mathworks.com/matlabcentral/fileexchange/45182-matlab-support-package-for-usb-webcams) where you should be able to access a lot of webcams (built\-in or USB). When you scroll down on the page, it even says, that you do not even need any toolboxes. Although there are some official non\-free toolboxes that make post\-processing easier. On the other hand you might consider buying a machine vision camera (Point Grey, The Imaging Source, ...) for your project, because in my opinion the task you want to do seem to be too demanding for a webcam. These machine vision cameras are rather expensive, but you can buy a lot of accessories like lenses or filters for them. I hope this helps you a bit.
Thank you for your input, this looks like something that I might use at the end of the project. But right now we would really like to see some of the variables that are being calculated and hence I am storing some of them in the base. I will make sure to look into your comment when we finish !
Sadly for loops cannot be avoided in my case, but I will try to cut back on them when they are not necessary. Thank you for the suggestion ! 
Already done that ! Thank you for the input !
Done and done :D Thanks !
Sadly I don't know what that is and maybe I don't have enough time to look into it, but I will take it into consideration and will mention it as one of the ways that can make the program faster ! Thanks !
I will look into the profiler and get back to you if I have some more questions :D Thank you for your help and perseverance ! 
Trace its path?
Is the function fplot()? And I redefine t as t=[0 5];. I get a different error now which is Error using fcnchk (line 106) If FUN is a MATLAB object, it must have an feval method. Error in fplot (line 60) fun = fcnchk(fun); Error in fourier1 (line 27) fplot(f,t)
I don't know. Sounds like it's time to read the documentation. 
U mean like doing it by hand? Beacause i've already done it but i need to verify it.
U mean like doing it by hand? Beacause i've already done it but i need to verify it.
What's your necessary field of view and depth of field? These are more of a problem than magnification. You can buy cheap microscopes with USB cameras for that price range, no problem. [This one](http://omaxmicroscope.com/special-microscopes/student-and-kids-microscopes/g223a-c03s-omax-20x-40x-student-binocular-stereo-microscope-with-dual-lights-and-usb-camera.html) for 3D objects at medium resolution, [this](http://omaxmicroscope.com/microscope-accessories/cameras/a3530s-omax-3mp-usb-digital-microscope-camera-compatible-with-windows-xp-through-windows-10.html) and [this](http://omaxmicroscope.com/compound-microscopes/general-monocular/40x-400x-student-monocular-compound-microscope-led-light-on-battery.html) for completely flat samples will get you to 1um resolution. 
Use a for loop. Have you tried that? If nothing helps, PM me
Basically it writes your MATLAB into C which can be used by MATLAB.
Just pick a random x,y position from each image. You could load th images into a 3d array and then just plot(array (y,x,:)) only plot will error. So you do vector = array (y,x,:), then plot(vector (:)) to overcome the reshaping issue. Hope this helps!
``` Imgs = zeros(308 ,200 ,3,42);%make 4D space form your RGB images % zero is sample value ExposureTimes = ones(42,1);% sample valus PixelFromAllImages = Imgs(1,1,:,:);% 1x1x3x42 PixelsFromAllImages2Dshape = reshape(PixelFromAllImages,3, 42);% 3x42 PixelsFromAllImages2Dshape = PixelsFromAllImages2Dshape';%42x3 ExposureAndFistPixelInAllImages = [ExposureTimes PixelsFromAllImages2Dshape];%42x4 %Now you have matrix: 1st column: exposure values,2nd: red value... %1st row - first exposure and first pixel from first image %2nd row - first exposure and first pixel from second image ```
Well the one I have been looking at right now is: https://www.staples.ca/en/muvi-20x-200x-usb-microscope/product_194054_1-CA_1_20001 From some videos it looks like it can get the images I need. But my only problem is I am not sure if matlab will recognize it and if I will be able to take pictures from the image feed from matlab. The link you provided says it is a support package for UVC compliant webcams after reading up on what UVC meant I am still not sure if the ones I am seeing online are or are not. Many look like this camera and say its UVC but IDK if THIS one is and will work like I need it to. 
Or this one says its UVC but it doesn't say it works with windows 10 so that is sketch... https://www.amazon.com/Celestron-Handheld-Digital-Microscope-Capture/dp/B004QF0A1Y/ref=sr_1_121?ie=UTF8&amp;qid=1528829125&amp;sr=8-121&amp;keywords=UVC+microscope
You can use noise injection to get a transfer function. Should be able to google for examples.
Can i use matlab woth python? Even if I don’t know how to program using python?
The [MATLAB Compiler](https://www.mathworks.com/products/compiler.html?s_cid=global_nav) allows you to create executables which don't require MATLAB to be installed (but the MATLAB Compiler Runtime does need to be installed). [MATLAB Coder](https://www.mathworks.com/products/matlab-coder.html) allows you to create truly stand-alone executables but not all MATLAB functions are supported. 
I used the compiler, but it takes too long time to run the code, as it takes more than 10 minuets to run a code that reads from .xls, manipulates data then write to a new .xls file. How can i lower the runtime?
Write your code better? Honestly, without seeing your code and knowing what sort of data you're reading, we have no way of being any help. 
Yes, you are right. That code is much too long and has many repetitive tasks, I didn’t know how to write it as OOP, as I don’t know if Matlab supports it.
Yes, you are right. That code is much too long and has many repetitive tasks, I didn’t know how to write it as OOP, as I don’t know if Matlab supports it.
Is this a one-off project or will you need to do this many times? I would input the image to WebPlotDigitizer and use that to turn the surface boundary and the green line into datasets. 
You asked this question almost verbatim, ignored the responses, and then deleted it. https://www.reddit.com/r/matlab/comments/8qe5fs/image_processing
Object oriented programming does not make your code faster. 
You can also just write C and compile it yourself without the coder toolbox. 
For plotting things, the only time you should really be clearing the figure with clf is when you call the figure. Use figure handles to change x/y values of a particular plot instead of clearing the figure and redrawing it. Do this with the "set" command. Try not to ever write the same logic/code more than once in a program. If you write out the same steps multiple times in a program, there's a fair chance you'll typo one or more entries, a good chance you'll forget to update at least one of them if you want your program to behave differently, and a great chance you'll never bother to try to optimize that code snippet because it's too painful to edit all the places where it exists. Encapsulate. Refactor. Optimize. Profile your code and learn what commands or programming styles are expensive and then avoid those patterns. We can all give more specific advice, but not without your code. 
## marked as duplicate by u/FrikinLazerBeams This question has been asked before and already has an answer. If those answers do not fully address your question, please do not delete you question, your account, make a new account and post the same question again just so people can do your homework.
haha, its like they just want someone to write it for them. 
If you are familiar with web development then you can get a glimpse of idea here [https://in.mathworks.com/videos/how\-to\-build\-a\-web\-site\-powered\-by\-matlab\-106529.html](https://in.mathworks.com/videos/how-to-build-a-web-site-powered-by-matlab-106529.html) But you need to have MATLAB production server, either in cracked version or licensed. Without having compiler or production server, you can't deploy. Rather there are few alternatives to MATLAB, if you can work on them like octave, Julia, Python. the choice of other language depends upon your application which you have written. Not everything written in MATLAB can be replicated by other language. Like MATLAB simulink has no other alternative. With Regards Team http://www.free\-thesis.com
normalization of error reduces the difference between consecutive values in that matrix and scale down every value in between 0 and 1. There are various methods for it but the popular one is `norm Error=(error-max(error))/(max(error)-min(error))` With Regards Team http://www.free\-thesis.com
Sorry about that. I create a new question because the first one was not clear and did not explain what I wanted to do. The other comment said so. And I know that I need to select a pixel from the image and plot it, I just need some help to know how to do it.
I generally expect compiled scripts to perform about the same as when executed in Matlab. Depending on your script, the delay might be in initializing the runtime environment. It may be worth writing your code so that the runtime is initialized and then waits for an input, such as a pathname, executes on the .xls file given, and returns to the input prompt. I could be wrong, but this may result in a long initial loop, and short execution time on subsequent loops (.xls files). Also assuming you are processing multiple files, and not batch processing them.
Thanks, u/FrickinLazerBeams. I will surely try that. 
It is on a massive dataset of retinal OCT images. I wanted to devise a solution which is working universally for all the images.
True but in my experience it’s a much bigger barrier than just using coder.
&gt;MATLAB is a high\-performance language for technical computing Eh. The *language* isn't high\-performance, but it does wrap some high performance libraries for certain jobs. IMO, the variety of off\-the\-shelf toolboxes, and the visualization side of things, are its biggest strengths.
What do the typical ranges look like? You could apply rounding i.e yticks(round(ymin:step:ymax)) But this can come out with uneven steps.
It gives me this error for some reason "Value must be a vector of type single or double whose values increase" An example is a graph where yticks(ymin:step:ymax) gimes me values from 0.14458 to 0.14846 
I connected an old USB microscope (Conrad DP\-M01) to my computer (Windows 10) and I was able to preview the images from the microscope in MATLAB. I think, that you can use almost any camera, that is compatible to your OS and it shows up in the device manager. The documentation for the free webcam\-toolbox ([Link](https://www.mathworks.com/help/supportpkg/usbwebcams/ug/acquire-images-from-webcams.html)) shows how to access the cam and [here](https://www.mathworks.com/help/supportpkg/usbwebcams/ug/acquire-webcam-images-in-a-loop.html) it is shown how to record several images in a loop. You are welcome btw. Please don't foret to let us know if you were successful.
It worked, thanks!
Most likely you are not writing idiomatic Matlab code, and/or are using inefficient methods. If your code is taking 10 minutes, I'm guessing that you're performing multiple calls to xlswrite() instead of saving the results for the end and doing a single call. Look for this problems in your code: xlswrite('file.xlsx',3,'A1'); xlswrite('file.xlsx',4,'B1'); Do the following instead: xlswrite('file.xlsx',[3;4],'A1:B1');
[the first result might help](https://www.google.nl/search?q=matalb+axes+in+the+middlee&amp;oq=matalb+axes+in+the+middlee&amp;aqs=chrome..69i57.4847j0j7&amp;sourceid=chrome&amp;ie=UTF-8)
By the way, using round on your yticks may make them unevenly separated, which can be a bit of an eyesore. It's probably better to use the hidden function sprintfc(), which takes a numeric array and generates a cell array of strings. Try mimicking the following (I'll use 5 ticks here so our numbers are long): % generate figure and axes fig = figure('Units','normalized','Position',[.1 .1 .8 .8]); ax = axes('Position',[.06 .08 .93 .90],'Box','on','XGrid','on','YGrid','on'); % generate ticks ticks = linspace(0,1,7); ticks = ticks(2:end-1); % remove '0' and '1' from the ticks % apply ticks to axes ax.XTick = ticks; At this point, it looks bad--the tick labels are too long. let's fix them with sprintfc! % generate new tick names and apply to axes new_ticks = round(ax.XTick,2); ax.XTickLabel = sprintfc('%g',new_ticks); Ta-da! tick labels have been rounded and we haven't moved the actual tick locations.
Yeah, I tried this but nothing happened. It's a 3D hollow shell type surface I'm looking at
Ok thanks I got it already.
Stop using loops and use matrices. 
You could just add another axis drawn manually using plot3 or surf.
This isn't possible in Matlab unfortunately. I'd translate your object so its mean position is zero instead.
I agree, this does not seem possible.
You have to pass val by reference not value.
It is already centered at the origin but visually it would make all the difference for me. But thanks! 
I'm a bit confused, if is centered at the origin then your axes should be going through its center--what's the problem?
Thank you! I figured it out.
Rounding to a certain decimal might decrease the unevenness. yticks(round (ymin:step:ymax), n) 
I mean when you do a surface plot, the axes are automatically placed on the sides of the planes and not crossing in the center 
&gt; I tried this but nothing happened Dude, what? Can you be more vague? It's possible that maybe you just didn't get the implementation or syntax correct
Replace the following lines as such: `void myADD(int a, int b, int* val) //asterisk val` `myADD(a, b, &amp;val); //&amp;val`
I usually do it like this: Set all derivative veriables as symbolic functions of symbolic variables. Use the solve function. Use equationsToMatrix function. 
Analog has some very good learning material on its website, even very basic stuff like sampling etc was very well explained. I love to find these gems in websites like these. Thanks for sharing.
convert it into frequency domain and then back to time domain
no.
It worked!! We were able to use Prewitt's filter and find the heights.
Add a perturbation of order eta to the steady state and solve for the linear perturbation
I might be missing something, but I think these equations are all linear, so it wouldn't be too hard to differentiate this by hand. Alternatively, as long as you're just differentiating equations and not processes, you could look into complex step differentiation. Mathworks has a great write up on it, and someone posted code to find the gradient.
That looks like a linear system to me...
Almost. The top two equations each have a term with a product of two z variables.
I'm Gay
Here's a quick start for what you may want: fig = figure('Units','normalized','OuterPosition',[.2 .2 .6 .8]); ax = axes('Parent',fig,'NextPlot','add','Position',[.2 0 .6 1],'Visible','on','XLim',[-2 2],'YLim',[-2 2],'ZLim',[-2 2],'Visible','off'); axis(ax,'square'); [X,Y,Z] = sphere(25); s = surf(X,Y,Z); s.FaceAlpha = 0.5; view(45,25); % plot x-y plane X = [-2 2 2 -2]; Y = [-2 -2 2 2]; Z = zeros(4,4); surf(X,Y,Z,'FaceColor','white','FaceAlpha',0.25,'EdgeColor','none'); % plot x-z plane X = [-2 -2 2 2]; Y = [0 0 0 0]; Z = repmat([-2 2 2 -2]',1,4); surf(X,Y,Z,'FaceColor','white','FaceAlpha',0.25,'EdgeColor','none'); % plot the y-z plane X = [0 0 0 0]; Y = [-2 -2 2 2]; Z = repmat([-2 2 2 -2],4,1); surf(X,Y,Z,'FaceColor','white','FaceAlpha',0.25,'EdgeColor','none'); % plot axis lines grey = [.5 .5 .5]; plot3([-2 2],[0 0],[0 0],'Color',grey); plot3([0 0],[-2 2],[0 0],'Color',grey); plot3([0 0],[0 0],[-2 2],'Color',grey); lighting('gouraud'); camlight;
This may be a good place to use regular expressions. To match an integer at the end of a string (will not recognize decimals, although that can be added easily enough): str='speed: 100'; speed = str2num(regexp(str, '\d+$','match','once')); For more options with regular expressions, look at `help regexp`
Hi there. NetCDF files are valid HDF5 files. (See https://www.loc.gov/preservation/digital/formats/fdd/fdd000332.shtml ) I’d recommend using a HDF5 library to read the data. I’m not sure what file format you mean by .img as there are many formats that use that extension, but typically the .img file stores raw bytes. Typically these formats have an associated header file that describes how much data is in the .img file, what the numeric representation is, and what ordering the bytes have (ie fortran/C or BIL/BSQ/BIP or ieee-be/ieee-le). Lots of options. As for an actual HDF5 library, I prefer PyHDF5 and python. In matlab, .mat files are actually HDF5 files, so you may be able to directly open the files with ‘load()’. To save the data in the .img, you’ll probably want to use ‘fwrite()’ to write raw bytes to a file. For learning matlab, Mathworks has many tutorials that are useful. If you do not have a strong need for linear algebra, I would strongly recommend considering learning python. It is becoming increasingly used instead of Matlab depending on your specific field(and is free). 
Awesome! Thanks so much for the info! I’ve been equally considering learning python instead of matlab but if more people are starting to use python I think I’ll go with that! Thanks again! 
 Testing formatting more tests more 
If you just want a line that span a range of y values for x = pi then you need to tell it the y values. plot([pi, pi],[0, 1],'-')
Thank you soooooooo much! !redditsilver
Another possibility if you want to be really lazy: `ezplot('pi')` 
No I meant to write it in Python instead of Matlab
Offtopic but do not declare symbolic variables if you do not need them (you don't need them 99.99% of the time)
Offtopic but do not declare symbolic variables if you do not need them (you don't need them 99.99% of the time)
Also try line
I believe I figured it out. It seems that during the optimization some of the trial points created would produce a matrix that contained NaN's or Infs. If I put this into eig() it would throw back an error and kick it out of the optimization, however, it wouldn't produce the error in the command window. I put a flag to replace NaN or Inf with a large number, say 1e6, so that it would increase the spectral radius of the operator and essentially disregard it. After doing that my code seemed to run all of the trial points.
don't you need pi()? Or is that C? My MatLab license has been gone for a long time, so I don't know :P
just 'pi'. it's essentially a pre-declared variable in Matlab, so you just treat it as if you started your code by declaring 'pi= acos(-1)' or whatever
MathWorks has Matlab mobile on the play store. Connects to either the cloud or a local computer.
How do you get it to show up all fancy like this? or did you paste it into some latex compiler?
It's called a livescript fam :) https://www.mathworks.com/help/matlab/matlab_prog/create-live-scripts.html
I'm genuinely stumped, and this is both a good question and a good application of symbolic math. That's three things that almost never happen, all in one post. Is this real life? 
What happens if you extract one of the troublesome expressions from the matrix, and try applying subs() to that expression on its own? Do you get the same behavior? Are there any other things going on in this code that could have an effect? Some assumptions()? Or maybe some of those variables are defined in terms of others? Could this be a legitimate, but non-obvious simplification? 
I have not tried an octave online web page, but that could work too I bet.
If I understand your problem, you should be able to vectorize with the following: Index = [false,(P(2:end)&gt;P(1:end-1))]; P(Index) = nan; T(Index) = nan;
Ahh, thanks this seems a good solution. Will give it a go next time I'm back at work. 
You could also use xlim() ylim() if you want your line to expand with the figure. It should be placed towards the end which I generally do anyways as i uses these lines as annotations which typically I don't want appearing in my legend. plot([pi,pi],ylim()) plot(xlim(),[pi,pi])
You can go also with: idx=P(2:end)&gt;P(1:end-1); &amp;#37;gives a logic vector, 1 when next element is bigger than previous and 0 otherwise P(idx)=\[ \]; T(idx)=\[ \];
Or you could install Termux and ssh into an Octave box. 
There octave for Android exists already.
You can find the index first element where P gets bigger using `find(diff(P)&gt;0, 1)+1`. So overall you can do: i = find(diff(P)&gt;0, 1)+1; if ~isempty(i) P(i:end) = NaN; T(i_end) = NaN; end 
This example works because the values are increasing after the first increase. However, if I understand correctly, it won't work outside of this special case. So if I understand correctly, in this case: P = [10, 8, 6, 4, 5, 4, 3] The result should be P = [10, 8, 6, 4, NaN, NaN, NaN] While your code gives P = [10, 8, 6, 4, NaN, 4, 3] 
I like it for some things, but I wish there was a way to save matrices as variables. 
Yes, that is how I meant to phrase it, many thanks, will this a go next time. 
This is an excellent resource and exactly what I was looking for. Thank you!
You might need to change your renderer. How are you outputting the image?
mostly I just use plot , like this. t=0:0.5:10; plot(t,t,'o','MarkerFaceColor','b'); I don't have too much experience with matlab, but all plots I make the circle markers look like this
Glad to hear you got it :) Saving the figure will do weird things. If you will keep making figures in the future, try using the export_fig function on matlab central.
This is two (major) steps removed from what you're talking about but on iOS (step 1) there is a really cool python (*major* step) app that support numpy and matplotlib called [Pythonista](http://omz-software.com/pythonista/)
&gt; But right now we would really like to see some of the variables that are being calculated When you are running things from a function, hit the "pause" button (where the "run" button usually is turned into "pause" after the code starts) or add a break-point (click just next to the line number and it will add a red dot). These both cause the function to enter debugging mode, where you can manipulate things and see individual outputs much like you can in the base workspace.
If I were to guess without running every tests, it is that you are updating B one point at a time within a given iteration, and then using the partially updated B to compute the next point. If you always use the same ordering for the points that will create a systematic bias of some sort or another. Something like %Iterate through segments for i = 1:length(q) a = 0.001; %Learning rate %Iteratively update for j = 1:n B_old = B; %Last iteration B d = x(:,2) - q(i); %Distance to query point W = exp(-(d./.5./dx).^2); %Weight based on distance yhat = x*B_old(:,i); %Predicted output delta = (yhat - y).*W; %Weighted error %Update parameters B(:,i) = B_old(:,i) - (x'*delta).*a; end end That said, Im going to revise my guess of what is wrong...somewhere an `i` needs to be a `j`, since your inner loop doesnt have any variables that depend on `j`. Im guessing the `q(i)` should be `q(j)`, but Ill let you figure that one out.
Alternately, If you need to get the variable name from the string too, you could do eval(regexprep(str,'^(.*): +([0-9]*)$','$1 = $2')) That said, generating variable names with `eval` is typically seen as bad practice, but depending on the exact usage it *might* be acceptable to use it like this.
The term you are looking for is "alpha channel'. https://www.mathworks.com/matlabcentral/answers/371019-alpha-channel-in-image
Thanks for the reply. I've actually figured out what the issue was; though, I forgot to come back here to update the post as such. I'll do that in a moment so it doesn't look like I'm still waiting on an answer. In regards to your suggestion, the code I posted does update based on every point for each iteration. In this case the input x is a matrix, with each row being a data point and y is a column vector with the outputs for each point. The variable 'n' is only the epoch number so 'j' is just keeping track of how many iterations it has gone through in case I needed to debug at intervals. 
Ah, my bad. I was thinking about the code as if `B(:i)` were `B(:,j)`, and that the inner loop was to loop over data points instead of to iteratively refine the estimate for all points. I should probably go get some sleep...lol. If you got it working and are happy with the results then great, though if you are planning on using this for anything particularly demanding or important I wrote a CGLS code that I am rather proud of that I could (hopefully) find somewhere in my archived files and share. It: * implements Conjugate gradient using the Polak Ribierre Beta formula * allows you to define separate general weighting matricies for both the data norm and the model norm * allows for using a non-zero initial model * allows you to interdependently set what p-norm to use for both the model norm and the data norm. For norms other than L2, it uses the standard IRLS method but applies it directly as a part of the CG update by treating it as a pre-conditioner, which makes implementing it almost negligible in terms of performance * only matrix-vector and vector-vector operations are used. No matrix-matrix operations are used, making it quite fast. I literally just put together a new computer and my files are a mess, but if you are interested I know I have it somewhere, it is just a matter of finding it lol 
Matlab isn't built for this. You'll have better luck rolling something in c++ or maybe python 
So you're having memory problems with very large arrays running in parallel? It may be because each worker in the pool has its own memory space, so it's allocating the same matrix for each worker and then transferring it through the disk. I'm not totally sure if this will solve your problem but I'm almost finished writing an [implementation for shared memory in MATLAB](https://github.com/gharveymn/matshare/tree/multiple_objs) (ignore the master branch). I'm just currently doing final testing and writing documentation. To use it in a parfor you can write mysharedvariable = mshshare(myvariable); parfor i = 1:numworkers remotevariable = mshfetch; end so that `remotevariable` points to the same memory as `mysharedvariable`. This also includes automatic garbage collection, so in principle you shouldn't have to worry about crashing your MATLAB. If you are running Windows and don't have a compiler I can send you a binary if you want.
Thanks for the reply, I've been wanting to switch to python but I've been hesitant because the weird file type I'm working with (.sdf = self descripting file created by the writers one specific phyics pic code) doesn't have any scripts pre-built for importing data except matlab. Opening the files in any other program including python would require building an file reading system and I'm not the best at coding. But I suppose python is versatile enough that I should suck it up and write my own scripts to read the data. Thanks
What's the application of your large matrices as far as I know matlab is pretty good at men allocation u can obviously do a better job in C++ but u must be fairly advanced in your c++ knowledge to get the same or more efficient member allocation , I would suggest u stick to Matlab if Ure coding as an engineer. If ure doing CFD or fem related work I can share tips to reduce memory allocation 
Hey, thanks so much this looks awesome. And it's pretty much exactly what I need. I'm currently running on windows so I'd love the binary. I will be moving to a unix based supercomputer - not really because of the parallelization but because I'll need to be running multiple instances although the more parallelization the better. I'm actually tracking things through discrete timesteps and while I need to read batchs of timesteps together (to get time derivatives of behavior) I'd love to vectorize the code further. I'd love to get that binary file -- I dm'd you my email address.
+ Yeah I'm not very advanced at C++ (or even computers in general). I'm actually a physicist but primarily experimental - my computer knowledge is painfully scattered. It's probably more information than you want to know but I run a physics simulation of a high powered laser and dense plasma interactions (using open source code epoch) which outputs the data for particle tracking throughout time and space (and about 14 other variables) in 100's of gb of .sdf (self descripting file - something I believe invented by the code's writers). I have pre-written for me scripts which can input the .sdf files into matlab structures which I then use matlab to track through the parameter space. I try to use parallezation to seperate the time steps but I'm not super good at it so I'm basically for looping through time taking snapshots of data. And my problem is as I forloop through the time snapshots I open multiple ~gb output files an inport the data into a preallocated matrix but I'm working with limited disk space on my local computer (partially because of my lack of computer skills) and the script ends up running for the majority of timesteps before crashing the computer. I've worked on speeding up the code but I've just been crashing later. I'm hoping that with the improved parallelization method shared above that I'll be able to at least complete the tracking on my local computer at best save computer time on my supercomputer (again very bad at computers but I believe I'm "paying" per cluster not node so by not using the parallelization fully I'm wasting time). tl;dr i'm an experimental physicist aka a glorified engineer, so I think i'll stick to matlab. but i'll take any tips you think might help. but the majority of my computational power actually goes to reading data. (But to save computational power/because of my lack of computer knowledge I generate the data via massive parallelization but try to read it locally without much parallelization which I think is causing problems)
Hey, tronjeezy, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
It sounds like you aren't using sparse matrices. You should probably be using them if you can.
There are a few reasons why allocating a zero array in matlab doesnt necessairly mean you have room for it 1) Memory optimization. First, I'm fairly sure Matlab doesnt actually assign memory to the array until you write something to it. You can force it by using `zeros(...,'like',data) + ones(1,'like',data) - ones(1,'like',data);` 2) memory compression. Even if matlab actually requests the space, the OS typically has memory compression enabled by default, so it goes "oh look, a billion zeros all in a row! I can compress the shit outta that!" 3) enough space for data =/= space to do stuff with it. This is especially true since MATLAb tends to "play it safe" and make extra copies of stuff when you try and change it until it is 100% sure you wont need the old version. As a rule of thumb, id say that if you want to run an operation of X MB of data, you need at minimum 3*X MB of storage : 1x for the data input, 1x for the data output, 1x for doing stuff with the data. This still isnt enough for every case, but its a decent ballpark imo. Note that this means that, as you become memory constrained, vectorization at the really big scale does more harm than good. Split up operations into the biggest data chunks that can be run without dipping into swap space, but no bigger. &gt; should I try to be more explicit in my calling of parallel implementation? IMO: absolutely not. For one, as someone else mentioned, explicit multi-threading uses up a lot more memory, which you dont have. I have a bit of a different take on how Matlab runs code. Another commenter said that Matlab isnt suited to handle problems like this, and they are absolutely right. But, that isnt the whole story. See, in a lot of ways, nothing actually "runs" *inside* of Matlab. It doesnt matter what it is you are running - if you pause the code and in the debugger go to the bottom of the function stack, 100% of the time there is a call to an external binary. Matlab's sole purpose is to make setting up these function calls more user friendly, not necessairly faster. So, my personal design goal tends to be to figure out how to get into these external function calls as fast as possible, and have them do as much of the setup as possible. You *can* explicitly set up things like parallelization, but there is basically a )% chance you set it up in MATLAB more efficiently than, say, Intel's MKL library does whenever you call a matrix operation, or the FFTW library does when you call an fft operation. If you manage to get your code to spend 05% of its time executing in these external high performance libraries, then (basically by definition) running the code in Matlab is at most 5% slower than running it in a "fast" language like C or fortran, and that is assuming it sets things up instantly, since if it is going to call the same function you are calling (or, rather, Matlab is calling for you), once you hand things off to the function things move the same speed regardless. The only possible exception ive found to this is in regards to I/O: `fread` and `fwrite` are about as fast as MATLAB can read and write data, but these are fundamentally single threaded. Setting these up to run asynchronously with some general data processing workflow (i.e., 1 thread is always writing the already processed data, one thread is always reading data to be processed, and the rest are doing the processing) seems like it would be quite beneficial. But I havent tested this much.
I suspect it's how your slicing your big array. Can you send me your code?
Is that still true if each parfor worker slices an array, which avoids broadcasting the entire variable to each worker?
So maybe here in lies the fundamental problem, which I'm not sure I fundamentally understand, but a more re-efficient wording of my questions is this: I pre-allocate a large sparse matrix. I then go through lots of data reading to make it a totally dense matrix. My computer slows down and freezes when the matrix is mostly dense. I've sped up my code by marginal amounts and get further. But should I be pre-allocating a dense matrix? Is there a way to do it. How much memory do I need for computing a dense matrix of x mb? (/u/jkook702 below suggest 3x times as a good rule of thumb and I think part of my problem is I might have been below that) Also my question v2 is this: I'm doing proof of principal experiments on my on my old-ish local computer. I'll eventually need to preform this task &gt;100 times for which I'm getting extensive super computer time but I want to be efficient in my time (something I have like no concept of how to do). Eventually depending on some factors I'll be running this code one node of 24+ cores (more than my local computer) so how can I make this code be optimized in different cores. That being said while I'm currently very poor in computational time I expect a big payday and I am a lowly experimental scientist with duties in the lab so the time I can spend optimizing this is also limited.
A) I know one of the hardest things in science/tech is make complex ideas easily understandable by relative laymen (aka me) and you did a beautiful job. Thanks! B) &gt;Split up operations into the biggest data chunks that can be run without dipping into swap space, but no bigger. Sorry if this is a dumb question but *how* do I know when I'm dipping into swap space. C) &gt; Matlab's sole purpose is to make setting up these function calls more user friendly, not necessairly faster. This is 100% while I'm hesitant to switch to another program. I do care about speed but I'm ultimately not running enough code that it's worth spend the man hours making my code that much faster (we're experimentalists so while we rely heavily on simulations any time out of the lab = time lost in my boss' eyes) Also as I mentioned above the data I'm working with is a weird file format. I write 100's of gbs of custom formatted data but to avoid writing unnecessary data each file has a custom header describing whats in the file (i.e. it's not a file of x tabs of y rows of data and the header is unreadable by a normal text reader - so completely foreign to someone of my ability) so I can't just use the standard fread/fwrite that I use when analyzing other data sets. D) I love your answer of not being more explicit in parallelization because I don't quite understand it fully. But at what point should I be? (I know that's maybe a crazy vague question but...) On my local computer I have limited cores and process my physics simulation more or less sequentially in time through a for loop (I say more or less because I do take numerical derivatives -- in the babiest sense -- that rely on adjacent time steps, currently just to get something to run I only rely on two adjacent time steps but three would be better) But in the future I'll need to do this so often using my local computer is impossible. I have the ability to run externally on several tens of nodes with ~48 cores each (depending on which resource I use) via bash script. Shouldn't I use more explicit parallelization on more and more cores? I thought (?) matlab's default was ~12 cores. I can ask for less cores per node to save some computational time which might just be my best bet if I can't get massive parallelization to work? Sorry to be so wishy-washy but I am now trying to run with limited memory and parallelization just to not get my local machine to crash, but in the future I'll have (virtually) unlimited memory on lots of cores so I guess I not only want my code to work now, but I want it to work well in that alternate situation.
Have you tried looking at tall arrays then? They were introduced in R2016b.
&gt; Sorry if this is a dumb question but *how* do I know when I'm dipping into swap space. Oh, you'll know. When matlab is running full tilt in the background you can normally still use the rest of your computer. Maybe you see a little bit of lag here and there, but you can still do things. When you start using swap every action you take on the computer turns into a waiting game. Minimize a window? Wait 45 seconds. You want to open a browser? Give me a couple of minutes. I run on Linux, and usually use `swapoff` to disable swap completely since I always want to kill a program that starts using swap anyway. I'm better off with the program simply crashing because the system is out of memory. You said the code makes your computer "unusably slow" - you're probably thrashing (using swap). You can monitor this more explicitly by looking at memory usage. Once you hit 100% memory usage you start using swap. Swap use *could* be slowing you down by several orders of magnitude. Especially since you say you're crashing at ~90% completion. My guess is that the crash happens when you fill up your swap space - something I would never have the patience to do. ~100 million doubles is under 1 GB of memory, so your output array might not be the culprit. I'm much more suspicious of all of the input data you're reading in. Make sure you're throwing away old data from the timeseries that you won't need anymore. I also agree with /u/Kiloblaster, you might have written the parallel code in a way that is causing Matlab to slice it poorly. /u/gharveymn's claim that Matlab gives each worker a copy of the array is true in the general case, but depending on how you're using it that's not always necessary. Sometimes with a very simply fix Matlab can give just a small portion of the array to each worker. &gt; I thought (?) matlab's default was ~12 cores. I can ask for less cores per node to save some computational time which might just be my best bet if I can't get massive parallelization to work? Matlab's *maximum* is 12 workers. To use more you'll need to either spin up multiple instances or use the "distributed computing server".
I don't have matlab on my pc anymore (so i can't try out anything), but I should (hopefully) be able to help you on your way (at least a bit). You didn't mention fs. This is your sample rate. So when you double your sample rate your sample plays twice as fast (try it out with your origional sound sample: soundsc(fmOut,fs) vs. soundsc(fmOut,2*fs)). so if you have a (theoretical) sample rate of 100 samples per seconds. Than 60 samples would be 0.6 second. So 'delay' is the amount of seconds you want to shift. 'd' is then the amount of samples you want to shift. the line: y = zeros(size(fmOut)); Just makes a vector of the same *size* of 'fmOut' and fills it with *zeroes*. This is called preallocating. There are cases where you can remove it and it will still run. But Matlab will give a warning. Preallocating is done so your computer can resever a bit of memory of exactly the right size. If you don't preallocate your pc would have to move all bits of memory to somewhere else every time you make your dataset bigger (which is incredibly slow). A delay uses samples from 0.6 seconds ago and repeats them. What would happen if you start your signal (time=0). Where does your program get their samples from? The line: y(1:d) = fmOut(1:d); Is to solve that problem. Now the for loop: Check out the [matlab page](https://nl.mathworks.com/help/matlab/ref/for.html). I think there is still a lot you can learn on for loops from there. The trick here is to just write it out by hand. Make your own signal (for example fmOut=[0,1,2,1,0], y is all zeroes and pretend that d=1). What would happen in your loop? With regards to alpha and the images you showed: You shouldn't really trust the images for these high frequency signals. If you zoom in/out you'll probably see them deform quite a lot. That's because the signal has more datapoints than your image can simply show. It's better to either zoom in (a lot!) or use some signal processing stuff. But if you think about it: with alpha = 1: how high would you expect the amplitude your delay sample to be? Would it be exactly as high as your original sample? Or would it be slightly higher/lower? (as in your image). (Hint: Has your original signal died out completely when your delayed signal starts?). 
Adding to the answers by u/yourfavoritemusician, I've tested the program and it actually works like it should. The issue with your echo part being greater than 1 can still very much happen though. From looking at the line &gt;y(i) = fmOut(i) + alpha*fmOut(i-d); you can see it depends on the decay of your original signal and the delay you choose. If by d seconds (so your delay) it still has a high enough amplitude and you add the attenuated echo from the beginning of your signal (alpha*fmOut(i-d)), it might just have a higher amplitude than it should. To emphasize: [see the jump in amplitude right after your delay time if your input is just a continuous 1](https://ibb.co/bZpbqJ). Your program just assumes a natural sound with a certain decay in amplitude after a short time is used. It worked with the one I used, which was just a short generic sound file of a bell I found online, but apparently not for yours. Also, be careful to use the correct sampling frequency, the one your original sound is sampled at. You can just grab it like this &gt;[fmOut, fs] = audioread('bell.wav'); 
&gt; You didn't mention fs. This is your sample rate. So when you double your sample rate your sample plays twice as fast (try it out with your original sound sample: soundsc(fmOut,fs) vs. soundsc(fmOut,2*fs)). My mistake, I forgot to mention my sample rate, which is 44100. But that confuses me a little. Because using more samples just means more quality or correct the sound is, right? I mean, if you only use a 100 samples of a tone, then you won't get a very good/detailed tone out of that. So how come having more samples means that it would go faster? (I tested what you suggested and you're right, I'm just perplexed now... I always thought that if you e.g. had a long tone or a full song you would need more than 44100 samples, because of its length...) &gt; so if you have a (theoretical) sample rate of 100 samples per seconds. Than 60 samples would be 0.6 second. So 'delay' is the amount of seconds you want to shift. 'd' is then the amount of samples you want to shift. That makes perfect sense, that is also the way I understand the 'delay'. But I'm still a tiny bit confused about 'd'. Is 'd' just applying time to the sample rate, or I guess converting the sample rate into time? If that's the case, then maybe calling that variable time makes more sense? Or timeConversion? &gt; the line: &gt; y = zeros(size(fmOut)); &gt; Just makes a vector of the same size of 'fmOut' and fills it with zeroes. This is called preallocating. There are cases where you can remove it and it will still run. But Matlab will give a warning. Preallocating is done so your computer can resever a bit of memory of exactly the right size. If you don't preallocate your pc would have to move all bits of memory to somewhere else every time you make your dataset bigger (which is incredibly slow). By zeroes you just mean that it's sort of empty space that is preallocating to whatever is going to be filled up on those spaces? &gt; A delay uses samples from 0.6 seconds ago and repeats them. What would happen if you start your signal (time=0). Where does your program get their samples from? The line: &gt; y(1:d) = fmOut(1:d); &gt; Is to solve that problem. Okay, that makes sense, but I'm a little unsure how that line fixes that. It just seems to say that 'y' is the same as 'fmOut' Also, could you perhaps suggest a better name than 'y' then? y always makes me think of x and y position on a graph, which 'y' isn't in this case. &gt; The trick here is to just write it out by hand. Make your own signal (for example fmOut=[0,1,2,1,0], y is all zeroes and pretend that d=1). What would happen in your loop? Uhm... I'm not sure... i=d+1:length(fmOut) y(i) = fmOut(i) + alpha*fmOut(i-d); I don't really understand the "d+1" what's the "+1" there for? The way I understand it is that index goes from (whatever d+1 is) to the length of fmOut, which is how long fmOut is. So "y(i)..." must mean that it somehow moves everything a bit to one side while applying the additional signal on top of the original signal... I guess. &gt; With regards to alpha and the images you showed: &gt; You shouldn't really trust the images for these high frequency signals. If you zoom in/out you'll probably see them deform quite a lot. That's because the signal has more datapoints than your image can simply show. It's better to either zoom in (a lot!) or use some signal processing stuff. &gt; But if you think about it: with alpha = 1: how high would you expect the amplitude your delay sample to be? Would it be exactly as high as your original sample? Or would it be slightly higher/lower? (as in your image). (Hint: Has your original signal died out completely when your delayed signal starts?). So you're saying it's because it's lying on top of some of the frequencies form the original signal, and that the echo is added on top of that, which would mean that its amp of 1 would get multiplied with whatever amp is already there when the echo occurs? Thanks a lot for your reply! Sorry about the additional questions.
I guess I wasn't thinking about it properly, but yeah, it makes sense because I make the echo overlap with the original signal, so obviously it would be like additive synthesis, adding those two signals on top of each other. But I don't know if I could perhaps lure you into a deeper explanation of this line: y(i) = fmOut(i) + alpha*fmOut(i-d); I mean, you have fmOut(i), which I'm guessing is the original signal with all of its samples/inputs (index), and then we plus that with the new signal/echo. But I'm still confused about the "(i-d)" part. Index minus the delays in seconds? Not sure if it makes it easier for you, but I can give you the full code (just make sure you run it in sections (bell first, then echo): %bell sound fs = 44100; % sampling rate fc = 400; % carrier frequency fm = fc*1.4; % frequency modulation from John Chowning's paper seconds = 15; % entire lenght of signal t = [0:1/fs:seconds]; %outputs an array of values ranging from 0 to seconds, with 1/fs increments i = exp(-2*t+1); %exponential decay of modulation index env = exp(-2*t); %exponential decay of amplitude fmOut = sin(2*pi*fc*t+(sin(2*pi*fm*t)).*i).*env; % output figure plot(t, fmOut) ylabel('Amplitude'), grid on, title('Bell sound'), xlabel('Seconds') figure spectrogram(fmOut,hanning(1024),512); %soundsc(fmOut, fs); %% %echo for bell sound delay = 0.6; % 0.6 second delay alpha = 1; % echo strength d = delay*fs; y = zeros(size(fmOut)); y(1:d) = fmOut(1:d); for i=d+1:length(fmOut) y(i) = fmOut(i) + alpha*fmOut(i-d); end figure subplot(2,1,1) plot(fmOut) ylabel('Amplitude'), grid on, title('Bell sound'), xlabel('Seconds') subplot(2,1,2) plot(y) ylabel('Amplitude'), grid on, title('Bell sound w/ Echo'), xlabel('Seconds') soundsc(y, fs);
Also xls file is quite slow. You may also write a simple csv file (comma separated values, pure text file) which is much faster... 
&gt; I have the ability to run externally on several tens of nodes with ~48 cores each (depending on which resource I use) via bash script. Shouldn't I use more explicit parallelization on more and more cores? As a general rule of thumb: I typically take the approach of "explicitly parallelize between different NUMA nodes, but within a given NUMA node try to use natively paralleled binaries rather than explicitly setting up the parallelization yourself". Of course it depends on what you want to do and whether there is a good natively parallelized function that you can use, but in general this is what I try for. Note: unless you want to pay for the absurdely expensive distributing computing licence, youll need to parallelize by starting up multiple independent matlab instances. Also note: the 12 core limit is for explicit parallelization. If you are calling, say, a matrix operation where MKL implements the parallelization, it will happily run as many cores/threads as it can utilize. &gt; On my local computer I have limited cores and process my physics simulation more or less sequentially in time through a for loop (I say more or less because I do take numerical derivatives -- in the babiest sense -- that rely on adjacent time steps, currently just to get something to run I only rely on two adjacent time steps but three would be better) It really depends on the problem and the available resources. For something like this, the "obvious" is to only keep the time steps you actually need in memory, and continually write older ones to disk. If that still isnt enough, then you need to start figuring out how to order things to minimize the amount of data loading and unloading as the program runs, which is not easy to do. I think I saw in another comment you spart with a sparse array and gradually fill it up. If youre doing this, just use a dense array from the start. The sparse array will be lower memory and (maybe) more efficient at first (though matlab's sparse matrix algorithms are surprisingly bad...they run single threaded since they dont use MKL). BUT, as you fill it in it will get slower and take more memory than the dense version (the reason is simple: you have to keep track of indicies in the sparse array and dont in the dense array). If you have any `parfor` ,`spmd` loops, or similiar, maybe temporairly replace them with standard `for` loops. These parallel loops make a copy of data for each worker, and deepening on how the code is designed it could be making a copy of ALL the data on EVERY worker, not just the data immediately needed. &gt; each file has a custom header describing whats in the file (i.e. it's not a file of x tabs of y rows of data and the header is unreadable by a normal text reader - so completely foreign to someone of my ability) so I can't just use the standard fread/fwrite that I use when analyzing other data sets. I work with data that is similiar (segy data). It is possible to use `fread` and `fwrite`, but you need to have a very good low level understanding of the file layout. One (of many) tricks to make this work well is to read everything as a "binary blob", then identify the bits that correspond to headers and separate them from the main data and typecast them to their actual values. As someone else suggested, tall arrays and datastores might also be worth looking into, but one warning on those: if you think that at somepoint you might want to take the code out of matlab, id avoid these, since these will make you relieve on matlab functions that (i imagine) are much more difficult to replicate in another language.
I think you're having less of an issue with the code, which I think you understand, than with picturing what it's supposed to do. An echo, in this simple case, is just an attenuated 'copy' of the original sound, that sets in after a certain time (e.g. after your voice has been reflected from the cave or valley or whatever). With that in mind, consider your loop &gt;for i=d+1:length(fmOut) y(i) = fmOut(i) + alpha*fmOut(i-d); end As you said correctly, the fmOut(i) part is just the original signal. The loop starts at *d* so your delay. After that delay comes in the echo, which is just the entire signal again at a different amplitude (*alpha*). If you put alpha=0, nothing happens at all. Now the first part of your signal should also be the first part of your echo, which, again, is the same. So how do you get there? Well, the first sample of the echo part should be the first sample of your original. In your loop, *i* is currently at *d+1*. So i-d = 1. Then when i is d+2, i-d = 2 and so on. That's really all there's to it. And thank you, I don't need the other half, although it's interesting to see how to create a bell sound. One note there, if you write the spectrogram part like this &gt;spectrogram(fmOut,hanning(1024),512,512,fs,'yaxis'); you get a much more useful output, imo. Now it actually shows the power over time in seconds and frequency in Hertz. 
&gt; I run on Linux, and usually use swapoff to disable swap completely since I always want to kill a program that starts using swap anyway. I'm better off with the program simply crashing because the system is out of memory. I *might* have a decent 3rd option. IMO, theres nothing inherently wrong with matlab using swap space when it needs to. The problem is that when it does this and there is no actual memory left free (since matlab is using it all), thus forcing everything else to use swap as well. Thus makes me think that if you can get matlab to start using swap space when it has used, say, 80% of the system memory (plus or minus, depending on memory size and the needs of the rest of the system)...then Id think you get the best of both world (i.e., the extra (much slower) memory that lets MATLAB continue, and the continued use of the rest of the system). It seems like this *should* be possible using control groups. Earlier today I finally got around to writing a script for this, but Im working off WSL in windows, not "real" linux, and control groups dont seem to work :(. But, I think the script should basically work (50/50 shot it works outright, and if not Id think the required changes are minimal). Your welcome to try it out if you want. [CODE is posted here](https://pastebin.com/jPrFsLx7)
You can convert these strings into doubles for plotting by using [**strsplit()**](https://www.mathworks.com/help/matlab/ref/strsplit.html). times = strsplit(timestampStr,':'); After this you only need to convert the string in each element of the **times** cell into a double. Then pick your precision and build the new array.
It seems that I cant use the strsplit() on this type: timestampStr = {'13:24:57.874'; '13:24:58.546'; '13:24:59.253'}; times = strsplit(timestampStr,':');
So first off, props for taking on this project. There are soooo many instances I can think of where shared memory would be quite useful. Question: is there *any* chance that the function would work (or could be easily modified to work) to share memory doing something like this? %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % MAIN INSTANCE % % % % % % % % % % mySharedVariable = mshshare(myvariable); setenv('MATLABROOT',matlabroot); fid=fopen('curInstanceID.bin','w+'); for nn=1:numInstances fseek(fid,0,'bof'); fwrite(fid,uint32(nn),'w+'); !"%MATLABROOT%\bin\matlab.exe" -r "run('foo.m')" -nosplash &amp; pause(0.1) end %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % AUX INSTANCES % % % % % % % % % % function foo fid=fopen('curInstanceID.bin','r'); curInstanceID=fread(fid,[1 1],'uint32'); remoteVariable = mshfetch; % &lt;...&gt; end
I dont know if this is actually better or not, but you could try something like this uniqueLabels=unique(allLabels); xMean=zeros(1,numel(uniqueLabels)); for nn=1:numel(uniqueLabels) xMean(nn)=mean(data(cellfun(@(x)(strcmp(x,uniqueLabels{nn})),allLabels))); end
If you are on R2018a, id suggest installing update 3 and seeing if that works, especially if you are running on windows. It could very well be a bug, and maybe a already-fixed one. Also, the dropped variable isnt set to 0 anywhere prior to this, is it?
Indeed you can! In fact since `matshare` allows you to place variables into shared memory you can do something like %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % MAIN INSTANCE % % % % % % % % % % mySharedVariable = mshshare(myvariable); setenv('MATLABROOT',matlabroot); for nn=1:numInstances mshshare(uint32(nn)); !"%MATLABROOT%\bin\matlab.exe" -r "run('foo.m')" -nosplash &amp; pause(0.1) end %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % % % % % % % % % % AUX INSTANCES % % % % % % % % % % function foo % the first return is the most recently shared variable % the second return is variables that this process has not already fetched % the third return is all variables in shared memory [latestvar, newvars, allvars] = mshfetch; curInstanceID = latestvar; remoteVariable = allvars{1}; % &lt;...&gt; end
Of course! strsplit() isn't going to operate on the array you've created. Double check an example. data = '1.21, 1.985, 1.955, 2.015, 1.885'; C = strsplit(data,', ') In your method you would need to iterate through each element in the cell array. While Matlab is generally forgiving of data type, you still need to plan things out when calling functions. Try this and see if it helps. timestampStr = {'13:24:57.874'; '13:24:58.546'; '13:24:59.253'}; strsplit(timestampStr{1},':')
I believe only the slice will be transferred in that case.
Thank you for the contribution, but this is take about 60x time to run (with n=1e3). 
This sounds like a much better production solution. It's not applicable for me (I really do want Matlab to crash), but if your problem size requires swap and you're OK with that, this seems worth doing.
1. The way I wrote the sample data set, `labels` is actually a character array not a cell array, one has to `cellstr` it to yield that. 2. `mu = grpstats(data,labels,'mean')` is compact and easy to read is maybe 1 of 2 % faster that my formulation, if one adds the `cellstr` 3. My solutions is 5x faster than `grpstats` if `labels` is a character rather than a cell array 4. My guess is that `unique` operates much faster on character arrays than cell arrays and the runtime of loop (or arrayfun) over the unique labels is negligible compared the `unique` itself. 
OK, time for round 2. This I think *should* be faster than what you have, but theres only 1 way to find out. % example data and 1-character wide labels labels=['abcdefghijkoplqmqyrinsstnuvmniwmmsomdynzzzzzcddgmxcnmjkadfngfhjgbeieaiunefgyugfberueapfjwkhjfwehhjgkdzahkleaubyybyweyywbyiuuiywbb']' data=abs(randn(size(labels))) % get unique labels and mapping indicies [uLabels,~,indRS] = unique(labels,'stable') % get mean by using indicies and accumarray dataMean=accumarray(indRS,data,[numel(uLabels) 1],@mean)
&gt; My guess is that unique operates much faster on character arrays than cell arrays and the runtime of loop (or arrayfun) over the unique labels is negligible compared the unique itself. Thinking it over, this almost has to be the case. I wasnt thinking about this initially, but since the sorting kernal doesnt have to consider things like size or data type (since all rows in a char array must be the same size...Some may have spaces but that is just another character that can be matched like anyt other). I imagine being able to reuse the same kernal of all the data without needing any checks is a huge time saver. I revised my approach. Im using the same `unique` call as you are, but am using `accumarray` to get the mean rather than `arrayfun` + logical indexing. It is my understanding that `accumarray` is pretty efficient, so I think it should be somewhat faster, but im rather curious to see of that is actually the case or not.
Simpler even. `dataMean = accumarray(indReMap,data,[],@mean)` yields a ~25% speed increase at n = 1e3, though only ~5% at n = 1e5. 
Ive considered turning off swap entirely too, but the main reason I dont is because I dont want to kill programs with "harmless" swap usage. Im not really targeting programs that I know will use a bunch of swap, since (in general) they would take prohibitively long to run, and they either need a rewrite or a machine with more memory and ill want to kill those off even if they dont take down the system by massively using swap space. The main reason I dont turn off swap is for codes that might occassionally just barely dip into swap space once or twice at a couple particular operations, where the swap usage is minimal enough to only slow things down for a a few seconds. Im almost always memory bound, and (for performance critical parts) sometimes dynamically determine block size for splitting up an operation based on expected usage and currently available memory. Theres enough headroom to stay out of swap 99% of the time, but id need a lot more to guarantee id *never* dip into it requires a lot of headroom and/or more carefully designed safeguards.
One note: I think `unique(data,'stable')` actually needs to be `unique(data,'rows')`. Also, turns out the `stable` flag is probably hurting speed a little bit. `Unique` uses `sort` to determine what is unique,so when you use the `stable` flag you dont prevevent it from sorting, but rather force it to unsort everything once youre finished. FYI: `unique` (for your use case) basically does the following: [sortA,indSortA] = sortrows(labels); groupsSortA = [true;any(sortA(1:end-1,:) ~= sortA(2:end,:),2)]; indReMap = cumsum(groupsSortA); indReMap(indSortA) = indReMap; uLabels = sortA(groupsSortA,:); dataMean = accumarray(indReMap,data,[],@mean); This is unlikely to be any faster than running `unique`, but if you could find a faster replacement for `sortrows` then it might get a decent speed bump.
&gt; I don't really understand the "d+1" what's the "+1" there for? The command would be more clearly written as follows d + [1:length(fmOut)] which is the same as [(1+d):(length(fmOut)+d)] Everything is getting shifted by `d`
Removing `'stable'` yields about a 11% speedup, adding `'rows'` about a 15% slowdown.
&gt; removing 'rows' about a 15% slowdown. does it give you the same answer with this missing?
sort(\[u(:); v(:)\]) The colons are to force the input vectors to be columns regardless of their original orientation.
There are a few built in tools you can use to make this easier, unless you aren't allowed to use them. I would suggest reading up on how to [concatenate](https://www.mathworks.com/help/matlab/math/creating-and-concatenating-matrices.html) in Matlab and how to control the [sort](https://www.mathworks.com/help/matlab/ref/sort.html) function.
It does, so long as the the column and row vector inputs are kept appropriate. (all transposition was done off the clock) 
What do you mean by convert? There are more or less analogous function in both languages. You have to rewrite your code using the desired language’s syntax. Aside from that, I don’t recall any way to convert Python to Matlab.
You can run python in Matlab. https://www.mathworks.com/help/matlab/call-python-libraries.html But as far as I know no "converter" exists between matlab and python code where you can just paste code, convert, compile, and run. Why move from a non-proprietary language like python to a proprietary one like matlab? What are you trying to do with matlab that you can't do with Python basically?
Rather surprisingly using dataMean = accumarray(indReMap,data,[],@(x)(sum(x)/numel(x))); was in many (though not all) cases quite a bit faster than using `@mean`. For example, for `N=1e5` and 4-character-wide words, time was 0.2 s vs 0.35 s.
If I'm reading this right, this is a classic problem for the function `ode45`. I think it will do everything your want. 
Hm, alright. I will look into trying to do that. I did try that initially but I had some issues with it, I'll make another attempt.
I would deffinatly day pc. You would be less likely to run into edge case problems.
The converter is you. 
What are you using Fortran for now that MATLAB can’t do? Is it legacy code?
Modern Fortran has many uses that make it appealing to MATLAB users. It supports paralleling processing (MPI), is much faster since it's a compiled language, and offers many object-oriented design features, among others. I believe the powerhouse of any serious numerical code ought to be written in Fortran, C, or C++.
Interesting, thanks! 
Thanks for the explanation and your patience - I am new to Matlab.. I tried to iterate over all the elements in the cell array and split at each ':'. Then I am trying to make these into doubles with the "str2double", but I get "Subscripted assignment dimension mismatch." and can't understand why? timeCell = {'13:24:57.874'; '13:24:58.546'; '13:24:59.253'}; splitStr = {}; for i = 1 : length(timeCell) splitStr{i,1} = strsplit(timeCell{i},':'); timeSecDbl(i) = str2double(splitStr{i,1}); end 
Sure sure. The result of strsplit(timeCell{i},':') Is going to be a cell array of what is split up. In your case, it will have three elements. When str2double is called on it it will attempt to return three elements but you've only allowed timeSecDbl(i) to accept one element. It may be more helpful to you to split them up. splitStr = strsplit(timeCell{i},':'); timeH = str2double(splitStr{1}); timeM = str2double(splitStr{2});
I prefer MacOS in general. Matlab works fine on either but a *nix environment is better than Windows for development. Linux on a PC is probably best. 
If you are able to compute the exact gradients, I'd recommend [this](https://www.mathworks.com/matlabcentral/fileexchange/35104-lbfgsb--l-bfgs-b--mex-wrapper) implementation of L-BFGS-B. I personally use it in my day to day work. Other than that, I'd recommend checking out the community files for other versions of constrained optimisation algorithms [here](https://www.mathworks.com/matlabcentral/fileexchange?term=constrained+optimization).
The given constraints are linear in terms of your optimization variable. So, the properties of your problem will be defined by the properties of your objective function, i.e. f(\\vec{x}). If the objective function is linear then the optimization problem is a linear program, if it is convex then the problem will be a convex optimization problem due to the properties of the constraints, etc. fmincon is the common function to use when you have nonlinear, or nonconvex optimization problems. Default algorithm, if I remember correctly, is the interior-point algorithm. If you have a linear program, you can use straight forward `linprog` in MATLAB (with the option of using interior-point algorithm instead of the default, probably simplex). If you have a convex optimization problem, I would propose this: [CVX](http://cvxr.com/cvx/), which is free to use by the way and very useful. If you have a nonconvex optimization problem, again, I would propose to study interior-point algorithm. 
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](http://cvxr.com/cvx/) - Previous text "CVX" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20e0vd7rf) 
I made the video in this post with Matlab! https://old.reddit.com/r/dataisbeautiful/comments/8bzdr8/gaze_and_foot_placement_when_walking_over_rough/ 
Thanks. I am a bit confused in how I should plot the time when I get for example the seconds-array of 5X.xxx's and then 0.xxx's. timeCell = {'13:24:57.874'; '13:24:58.546'; '13:24:59.253'; '13:24:59.964'; '13:25:00.696'}; for i = 1 : length(timeCell) splitStr = strsplit(timeCell{i},':'); timeH(i) = str2double(splitStr{1}); timeM(i) = str2double(splitStr{2}); timeS(i) = str2double(splitStr{3}); end
hey /u/sandusky_hohoho loved your content. (Will see all links and paper later) I have a lot to learn! 
I use MATLAB for neuroimaging research and reinforcement learning approaches to studying human behavior.
Vehicle dynamics engineer in pro auto racing. Matlab gets a fair amount of use, it's a tool in the toolbox for performance analysis etc. The data visualization is excellent. Use that quite a bit. Some toolboxes for signal processing, model parameter regression, etc. Sometimes it's a good environment for general purpose prototyping. It has its limitations though. C# / .NET I find to be a lot better for UI development, and larger applications with multiple contributing developers. Really prefer an enforced static type system and OOP at the forefront of the language for that sort of thing. Then for really high performance simulation, ultimately you end up in some native-compiled language like C++. Or C-style libraries wind up being more portable and usable across environments. I think when it comes to anything, it's important not only to ask "what can I do with this" but "what *shouldn't* I do with this?"
Some good questions.... the seminal paper that goes over this would be the Harris paper called On the Use of Windows for Harmonic Analysis.... It's a classic. To tell you the truth most entry level texts on signal processing will have the harris paper fully integrated into its text though. But I would recommend you read that paper. &gt; The signal should start and end in zero in order to get accurate results There is a subtle distinction here... the window should start and end at zero in a periodic sense. You can review the Harris paper for this finer point. &gt; How do I chose the sampling frequency or the resolution frequency (as some call it apparently) of the FFT ? Your sample frequency (i.e. sample rate) would refer to how often you sample your analog signal, which should twice the bandwidth of your signal. The resolution bandwidth refers to how long of a record you should gather before you do perform your analysis. Resolution bandwidth will be determined by how close your sinusoids can be in frequency for you to resolve them. &gt; Is it possible to identify significant high frequency components (frequencies that have a high amplitude when plotting the amplitude vs frequency diagram) by using a threshold value ? If yes then how much should this be ? If no then what should I do ? This is a legitimate way to use the fft. You should review the findpeaks function in matlab. This function is specifically taylored for this scenario. Your threshold should be based upon the application, your signal conditions such as signal to noise ratio, and your tolerance for false positives and false negatives. I admit that's a hand wavy answer to your question, but these are the additional details I would need to know to provide a decent recommendation for a threshold.
I use it for modeling hydraulics in stormwater systems.
First thank you for your very detailed answer ! I really appreciate it ! &gt;the Harris paper I will definitely look into this before doing a next try at solving this problem &gt; Your sample frequency (i.e. sample rate) would refer to how often you sample your analog signal, which should twice the bandwidth of your signal. The resolution bandwidth refers to how long of a record you should gather before you do perform your analysis. Resolution bandwidth will be determined by how close your sinusoids can be in frequency for you to resolve them. The sensor I am using is recording data at a frequency of 500 KHz, hence a total duration of 2 seconds resulted in 1 million data points. Of which I am taking distinct transient parts that I am applying FFT to. How would this translate to what the sample rate should be ? I am still not getting this point to be quite honest. But I will look into it next time as well &gt; This is a legitimate way to use the fft. You should review the findpeaks function in matlab. This function is specifically taylored for this scenario. &gt;Your threshold should be based upon the application, your signal conditions such as signal to noise ratio, and your tolerance for false positives and false negatives. I admit that's a hand wavy answer to your question, but these are the additional details I would need to know to provide a decent recommendation for a threshold. I already did this, it did give some pretty good and expected results but to be honest on an engineering level it is far from satisfactory. But maybe in engineering nothing is white or black in this case, it's all approximations Again thank you for your reply ! 
This was eye-opening. no puns. Really advanced work there. What was your job though?
much like @sandusky_hohoho
This is a lot similar to what I intend to use it for. How long have you been in this field? And did you start using MATLAB since the start of it?
Again a lot similar to what intend to use it for. What's your job title and how long have you been using MATLAB at it?
Don't be sorry! They are good questions. Lets see what i can answer some of them: &gt; using more samples just means more quality or correct the sound is, right? Yes, keep in mind though its samples ** per second**. Not just samples. You can have a sound that consists of 44100 samples. But you need to know at what sample **rate** it is recorded. If it was recorded at 44100 samples per second (Hz) the sample will be a nice sounding sample of 1 second long. However, if (for some reason) it was recorded at 100 Hz, it would probably mean its a very low quality recording that takes 441 seconds to play. So if you call soundsc(fmOut,2*fs) it will play your file with a twice as high of a sample rate as you recorded it, resulting in a faster playback. &gt; But I'm still a tiny bit confused about 'd'. Is 'd' just applying time to the sample rate, or I guess converting the sample rate into time? If that's the case, then maybe calling that variable time makes more sense? Or timeConversion? It's the other way around, you have the time in seconds (*delay = 0.6*) and you want to know how much samples that is. So it is indeed a conversion but the unit of *d* is *samples*. I fully agree with you that *d* is a nonsensical name. I would call it something like *delaySamples*. &gt; By zeroes you just mean that it's sort of empty space not sort of, it's exactly filled with zero. Matlab has other similar functions, try out the following bit of code and see if you can understand what it does : A = [1,2,3;4,5,6]; % a 2x3 matrix print(size(A)); % what is the output? print(zeroes(size(A))); print(zeroes([2,3])); %is there any difference with the previous line? Which line is more convenient to use? print(ones(size(A))); print(nan(size(A))); print(eye(size(A))); &gt; Okay, that makes sense, but I'm a little unsure how that line fixes that. It just seems to say that 'y' is the same as 'fmOut' It says exactly that! But think about what your signal should exist of for the first 0.6 seconds. You want the first 0.6 seconds of your original signal + that same signal but then shifted back in time for 0.6 seconds. Does that exist? &gt; Also, could you perhaps suggest a better name than 'y' then? y always makes me think of x and y position on a graph, which 'y' isn't in this case. Yes, To be really honest: why is your *input* signal called fm*Out*? I would put your delay code in a function with an input (*fmIn* or *signalIn*) and change *y* into *fmOut* or *signalOut*. &gt; I don't really understand the "d+1" what's the "+1" there for? The way I understand it is that index goes from (whatever d+1 is) to the length of fmOut, which is how long fmOut is. Correct again! Since *y* is already filled from 1:d we want to continue from there (hence the "+1"). &gt; So "y(i)..." must mean that it somehow moves everything a bit to one side while applying the additional signal on top of the original signal... I guess. Don't sell yourself short, because you are correct :). If you are still in doubt. Do the "loop by hand" exercise. It's silly but it really helps with comprehension. &gt; So you're saying it's because it's lying on top of some of the frequencies form the original signal, and that the echo is added on top of that, which would mean that its amp of 1 would get multiplied with whatever amp is already there when the echo occurs? Not multiplied but added. If the original signal had an amplitude of 1 at the start, and it faded to about 0.35 before the delayed signal starts (check it!). The delayed signal amplitude is equal to: 0.7. So if you calculate the amplitude by hand: Signal amplitude (at index d) = fmOut(at index d+1) + alpha*fmOut(at index 1) ~= 0.35 + 0.7*1 = 1.05. Which is more or less what you see in your image! Let me know if you have any more questions! 
Just to add up to the excellent answer u/RamjetSoundwave provided, don't forget it is a good practice to zeropad the signal prior to applying the FFT, so that the size of the signal is a power of 2. 
I use it as a beefy calculator most days. I analyze large chunks of data routinely, generate great looking plots/graphs for reports, perform math calcs. We have it on all our work PCs so I've also written .exe files which uses matlab to run things like excel macros, then my colleagues just need the .exe files to complete tasks. I recently tried to use Octave because it is open source but found it to be lacking.
This is my 11th year in the field, and have been using Matlab the whole time. It's pretty much all I knew in college. There was a time when I tried using it for everything. Wasn't until half way through my career that I realized there were better things out there for certain jobs and branched out.
I thought that the algorithm distinguishes this by itself and applies a different method if it is not a power of two. Is this correct ? 
I would pre-allocate `By` to avoid warnings. You should use `&amp;&amp;` instead of `&amp;` on your conditionals, as a single `&amp;` is the AND operation. e.g. `By(x &gt;= -d/2 -delta &amp; x &lt;= -d/2 ) = (x+(d/2)+delta)*B0/delta;` to `By(x &gt;= -d/2 -delta &amp;&amp; x &lt;= -d/2 ) = (x+(d/2)+delta)*B0/delta;` 
I haven't dwelled into the FFT implementation in MATLAB, but I know it is faster if you do use a power of 2 as the input vector's size.
It is faster yes but i don't want to alter too much in the transient data to start with. &gt; it is faster Yes this is true for sure
When your only tool is a hammer, all your problems start to look like nails.
Mathematically you're not altering the result; you'd be just interpolating the extra samples in the frequency domain (resulting in a smoother curve representing the same signal). 
I have a friend who works at MathWorks. Users include: Bankers Traders Other finance people Engineers Automotive Aerospace Medical device companies Medical researchers Military Restaurant chains Supermarket chains Or you can just look at their website: https://www.mathworks.com/company/user_stories.html 
You are assigning too many elements in the By variable. By(x &gt;= -d/2 -delta &amp; x &lt;= -d/2 ) = (x+(d/2)+delta)*B0/delta; This statement is saying I only want to assign the values of x that are between -d/2 - delta and -d/2 to the whole array x. You can do some like this instead to clear up the error I = x &lt; -d/2 - delta &amp;&amp; x &lt; delta; By(I) = (x(I) + (d/2) + delta) * B0/delta; As another comment has already pointed out... you can pre-allocate By altogether with this statement By = zeros(size(x)); This will also allow you to skip the zero assignments because your array is pre-allocated zeros.
Systems and software engineer here. I've used MATLAB extensively in three jobs, past and present. In all three cases, my employers had large and sophisticated home-grown toolboxes for various things from signal processing, visualization, optimization, and data analysis. I now use it heavily for prototyping and for research.
I use it for modeling how digital calibration can help analog circuits. The analog impairments can be modeled and its pretty easy to write code in MATLAB that tries to calibrate it out and see how well it does without firing up digital synthesis tools.
&gt; The sensor I am using is recording data at a frequency of 500 KHz, hence a total duration of 2 seconds resulted in 1 million data points. Of which I am taking distinct transient parts that I am applying FFT to. How would this translate to what the sample rate should be ? I am still not getting this point to be quite honest. But I will look into it next time as well So your sample rate in this example is 500 kHz. This means that the highest frequency you can theoretically analyze in this scenario is 250 kHz. Usually this frequency is lower in practice due to the anti-alias filter that is used in your sampling system. Now for an example of a resolution bandwidth calculation. Let's say you have a transient that you identify that is 4,000 points long. You also are using the hanning window because you are enamored with its 60 dB / decade roll off. This window has an equivalent noise bandwidth of 1.5. The RBW (resolution bandwidth) calculation (using the enbw method ) would be 1.5 * 500 kHz / 4000 = 187.5 Hz. This number represents the limits of your ability to resolve frequency of sinusoids in your analysis. A fun sidenote is that this type of calculation was first done by Lord Rayleigh in the context of telescopes ability to resolve stars.
I'm a civil engineer. Most of my work involves stormwater drainage. I've been using matlab for about two years. I've found matrices to be a great way to model multiple storm events at once.
&amp;&amp;
Thanks a lot for the clarification ! now it makes much more sense to me ! 
I will discuss this with my supervisor and then see what I should do, hopefully he will understand this better. I will give him the source about this. I already have one, thanks a lot for your responses !
This. For the parallelism. 
I was thinking that about Linux. But I’m assuming in this case a VMbox simply wont cut it. I’ll have to dual boot into Linux. 
Plot it in a way that suits your needs. I am not sure what your goal is, but the most direct way to plot it would be to convert all the units to seconds and sum them. This would give you a single value, in seconds, for each original time stamp. plotTime(i) = timeH(i)*3600 + timeM(i)*60 + timeS(i);
My professor taught us the opposite, zeropadding is NOT good practice. You're adding data that you haven't measured and this will alter your results. Or in his words: "If you need to zeropad to get good results you should redo your measurement, i.e. measure longer or at a higher sampling frequenly"
Hi again, Sorry about the late reply, I should have replied sooner, I've just been frying my brain with reading through theory today. So I haven't looked through your answer yet, but I'll after I've fixed some other things that I'm still confused about (not related to the code). But maybe in the meantime you could answer my questions here? Because I've been unable to find any answers to them during my studying today :/ https://www.reddit.com/r/audio/comments/8rretx/questions_about_fundamental_frequencies_and_how/ 
Hey that might not be what you serched for but i found it a really good visualisation on what a fourier transformation is and to get a bit more "feeling" for it https://www.youtube.com/watch?v=spUNpyF58BY&amp;t=585s
What I want to display on the x-axis of the plot is just some ticks from 0 (= time of the first sample value) to the time of the last sample (~22sec), with maybe 2 sec interval.
I've seen this video two or three months ago actually :D was really nice to finally know why we used to do those long integrations and convolution in my signals course. Thanks for your reply !!
Yeah this is also something that I read before. But it could be worth a try
Dual booting is a good option, Linux really is the standard for scientific computing. There’s a lot to like about a *nix setup. If you run Linux on the PC and you’ve already got a Mac then you can set up your SSH certificates so you can remote into the PC painlessly when you need the extra CPU grunt and still having the elegance and productivity of MacOS. 
Well, you can just convert all of the plotTime values to be offset by the number of seconds in plotTime(i). This would 'zero' out everything to track the number of seconds between samples. trueTime = (plotTime - plotTime(1))./60; Matlab has a lot of features for controlling the display of the plot, **xtick()** and **xticklabel()** that should allow you to display seconds with a step size of 2 seconds.
Medtronic uses Matlab for a number of their products/research. I remember seeing lots of emails from the cardiac research/workgroups about releasing licenses so they could run simulations. I previously used it to analyze flight data from suborbital rockets. Other colleagues used Octave/Matlab for analyzing flight trajectories or ran Matlab to analyze vibrations (accelerometer vibrometer data) of rocket motors.
Assuming you already plotted something else and you just want to add a vertical line to your existing graph: YL = get(gca,'ylim'); hold on; plot([pi,pi],YL);
I am a biomedical engineer working in the pharmaceutical industry. In my current role I use MATLAB to automate experiments and analyze their outcomes. Specifically, I have developed systems that can characterize muscle contractile properties using a combination of instrumented robotic interfaces and artificial neural controllers, and assess how they are augmented by pharmaceutical agents. I have also previously used it for: \-Back-end 3D reconstruction for an open-source motion capture system I developed + animation of limb kinematics \-Design and control of robotic environment simulators to study locomotion and simulate the influence of a worn robotic device \-EMG-based control of a wearable robotic exoskeleton \-Simulating neuromuscular biomechanics \-Automation of neuropathology in whole-brain slice image analysis \-Control systems for a sand-swimming robot Pretty much all of this could be done using other languages (e.g. python), but documentation and ease of use in MATLAB is tough to beat (especially if you are building GUI's for your non-command line inclined colleagues ). Learn all you can about the different toolboxes while you are in school, as you have to buy them a la cart in the real world, and they get very expensive very fast
that is interesting af great plots/animations
power of 2 is faster for matlab, but if you're building a simple script to practice dont worry about it. if you're building a piece of embedded software or something that runs thousands of times, make it a power of 2
I'm developing a way to analyse data from a sensor. I don't think speed is that big of a deal. However I will compare both methods to see what happens. Thanks for the reply !
Hey i've posted some scattered comments here and there already, but to answer this question specifically *How do I chose the sampling frequency or the resolution frequency (as some call it apparently) of the FFT ?* There is no right or wrong sampling frequency (f\_s) from the FFT viewpoint, since it will just perform the fft on a random set of data you feed it. The right fs is entirely dependend on the application. \-Trying to analyse sound/music?; human hearing goes to 20kHz, so you need to sample atleast at double that (nyquist). (most digital audio is sampled at 48Khz or 44.1Khz). \-Analysing a motion system(simple mass spring damper like setup)?; 1kHz will do. 
Just FYI reddit links users like u/sandusky_hohoho
I would agree if we were talking about the normal DFT. FFT is an optimised algorithm focused on speed though. In the industry, we usually are limited by hardware constraints, so sampling at a higher frequency or longer times are usually not viable options. Also, FFT implementations on FPGAs really need the zeropadding. 
You can use tic toc commands for that
why? In general, it is not an easy task. Especially if the original code made good use of the wonder constructs python provides. If it is just an algorithm or something like than, than maybe.
what about a sensor with a sampling rather of 500 kHz ? do I need to go to 1 MHz ? 
What sort of prototyping Arristotelis?