read the remainder of the message. And mind that I said that "scilab may have" instead of "scilab has". Also, my comment about it not being as feature wealthy. The devil is in the details ;D
However, with open source you can/have the "freedom" fix the bug yourself. Not suggesting this is an appropriate solution for most cases, but it is a major difference with the "closed source" model of software development. Open source is only truly free if your time is as well. 
I mean one index like `A(23)` instead of `A(12,52)` .
That's like...totally backwards. Only in open source code can you trace every single line of code back to the person who wrote it. It's a licensing issue: you have to be able to do it.
I use python and matplotlib instead now, actually. 
Wat... Again, totally backwards. You _don't_ know that the person likely has a PhD in the area. Why would they? You don't need a PhD to code. It could have been outsourced to some lowly code monkey in India and you wouldn't even know. With open source, you know exactly who wrote it. Every single line of every single file, you know exactly who wrote it and when and why they wrote it. I have never heard anyone say they don't feel confident in open source because they can't tell who wrote it. That is one of the most ridiculous things I have ever heard. And anyway you can simply compare the output of, say, MATLAB to Octave and it will be obvious whether it's doing things correctly. The internet is more or less built on open source. Surely it can't be wrong.
&gt; Again, totally backwards. You don't know that the person likely has a PhD in the area. Why would they? You don't need a PhD to code. I take it you've never actually used Matlab or spoken to their customer support. &gt; With open source, you know exactly who wrote it. Every single line of every single file, you know exactly who wrote it and when and why they wrote it. You don't know why they wrote it. You have no clue why they wrote it. They don't have to document it. Octave has **a** developer. John W. Eaton. Mathworks has 2,800. When I interviewed there they didn't look at anyone with less than an MS. The people I *interviewed* with had PhDs in controls, hydraulics, aerodynamics, etc. John Eaton was a computer administrator for a chemical engineering group at UW-Madison. (His own web page and wiki are pretty sparse). He wasn't a controls engineer. He wasn't even an engineer. He was a computer admin. He doesn't even come close to having a full PhD education in the background of the [toolboxes available for Matlab.](http://www.mathworks.com/products/) Not to mention if you use Simulink and Simulink Coder you **CAN** see all of the code it generates. We can inspect all of our code before we compile it for our embedded controllers. (Although we don't). If we have a bug I can go through the source code of every function and every subsystem.
Nope
&gt;I take it you've never actually used Matlab or spoken to their customer support. I used to use MATLAB quite a bit. MATLAB specifically, because Octave didn't have an IDE. Due to a career change I don't MATLAB much (or really, at all) anymore. That's not to say I wouldn't use it over Octave if I had to use one of them. &gt;You don't know why they wrote it. You have no clue why they wrote it. Why does that matter? Why does any open source exist? Partly it's because people like to code things for fun (the rest of the reason is that some people work at places where it is their job to write open source software, like Red Hat). Why does it matter _why_ something is written, so long as it's written correctly? &gt; They don't have to document it. What is there to document? Just point people at the MATLAB documentation. If it doesn't match, they won't use it. So it's in the Octave developers' best interest to make sure it works. &gt; Octave has a developer. John W. Eaton Umm, what? http://hg.savannah.gnu.org/hgweb/octave/ There are tons of developers. &gt;toolboxes available for Matlab. But there aren't any such toolboxes for Octave...so I don't see why you're concerned about the quality of software which doesn't exist. If you like MATLAB over Octave because it has toolboxes which Octave doesn't have, that's totally valid. If you like MATLAB because of its IDE (like me), that's also totally valid. It's total nonsense to say that you can't tell who wrote it, when such information is explicitly publicly available. It's total nonsense to say that you think you can trust MATLAB's developers because you think they have PhDs. It's total nonsense to say that you think you can't trust John W. Eaton because his official job title is "computer administrator".
you *like* MATLAB's symbolic toolbox? you may be the first person that i've encountered that would say that. you should try mathematica.
You should do both logical statements at the same time If length&lt;15 &amp;&amp; weight&lt;20 Cost = 15; elseif ..,
this isn't the subreddit for homework help
Honestly depends on the platform you are using it on. If you are using it on Linux, setting up python is easy as 123. Windows its a pain. But Spyder comes as part of a "distro" called winpython and it makes installation a lot easier. But you can only install packages available for that "distro" and winpython is missing a lot of python libraries. If you only want to use for numerical analysis, it includes the most important libraries and you can easily get by. But other libraries are still a pain to install(if possible at all). In terms of speed, python seems to be atleast 10 times faster for multiplication of a 10000x10000 matrix. 
This isn't the subreddit to get people to do your homework for you. There's nothing wrong with posting code and asking people to help. It's simple to walk him through why it isn't working without actually giving him the answer.
are you just looking at the user interface or the syntax? Python with scipy and numpy will get you pretty darn close in terms of syntax. If you're looking at a matlab clone then try octave. Octave should easily work with native .m files. Freemat is another option however I think it is horrible especially since they switched to using a jit compiler. I get more errors from just the compiler than any program I try to write.
Wow! Can you ask them to finally implement an option to control the use of compression in v7.3 format? It is unbelievable that in a product as mature as Matlab one has to download [hacks off the file exchange](https://www.mathworks.co.uk/matlabcentral/fileexchange/39721-save-mat-files-more-quickly) or to save plain numerical data in a reasonable time (ie not 2 orders of magnitude slower than v6/v7), or use undocumented functions to [manually serialize more complex data structures](http://undocumentedmatlab.com/blog/improving-save-performance/).
I am a "Pythonista." I used Python (+NumPy,+etc) because Matlab's licensing bothered me. The charge thousands to use it, and offer students free/cheap deals that rope them in. I even did [a Matlab vs Python vs C][1] comparison. It turns out the NumPy in it's optimized form is 3-4 times faster than Matlab, but unoptimized, it's about 100x slower. I switched to Matlab because it's hard to write optimized (vectorized) code at first. Plus, everyone uses it, it's documentation is on par with Python's, and people here say that bugs get fixed quicker. I think Matlab is on the way down. I look at languages like [IDL][2] and the similarities between Matlab and IDL are obvious. I think it'll go the way of SPSS and R. [2]:https://en.wikipedia.org/wiki/IDL_(programming_language) [1]:http://nbviewer.ipython.org/urls/raw.github.com/scottsievert/side-projects/master/matlab_vs_python/Python%2520vs%2520Numba%2520vs%2520Matlab%2520vs%2520C.ipynb
or ninja you can do this; color = ['y';'m';'c';'';'r']; plot(y, color(i),'linewidth',2); in the for loop
ok that might work. Is there and RGB table available that you know of?
http://www.mathworks.com/matlabcentral/fileexchange/21050-varycolor
Thanks for the help it works now
I've been teaching myself Python coming from years of a heavy MATLAB background and found spyder as part of the Python(x,y) package to be tremendously helpful. Just understand that if you're like me and use the variable explorer a lot for debugging, not all data types are supported and won't show up. Pandas dataframes for instance do not show up. It is possible to tell spyder to show unrecognized data types but then you have to wade through tons of other stored numbers. It's the best replacement out there for MATLAB but it certainly has it's quirks which I guess you could say of python in general in my experience. MATLAB on the other hand being licensed and commercially-supported software is much more tolerant of new users. Still, spyder has been very accommodating to me as a MATLAB user.
But what you are describing as a drawback of Spyder is actually a feature (of Python): the variable explorer can't display all types of objects flawlessly simply because there are literally infinitely many. Pandas is a non-core python module and as such Spyder can't deal with it's classes specifically. If you were to stick to the 1:1 equivalents of Matlab objects (namely python built-in types and Numpy objects) they could be displayed fine. Personally I believe the Spyder IDE feels somewhat unnatural for Python development. I guess your comment kinda shows how it can be misleading (for Python newcomers) to try to make python development feel like Matlab development. It makes Python feel like a poor substitute for Matlab instead of showing that it is actually much more versatile.
You could set cost to 15 to start with, then add 5 if the weight &gt; 20 and add 10 if length &gt; 15.
this is true
I was able to fix my mistakes. Thabks for the help guys
I typically do stick to them and it isn't really a problem. Its just a limitation I wasn't aware of until recently when I wanted to use pandas. I assumed that since it was included with spyder in python(x,y) that they would be more compatible than they are. Coming from MATLAB where everything just works together natively, I didn't expect that. Its easier to do that for MATLAB because its a largely closed code ecosystem. But python is a collection of lots of libraries rather than that cohesive a code set. That's its greatest advantage IMO but is not without some associated weaknesses.
I went from MATLAB to Python (using mainly Spyder) last Spring and virtually have not opened MATLAB since. It took a little getting used to, but I am very glad I did it. It made me a much better programmer, and now I can easily move my work between Windows and Linux without having to install that multi-GB monster MATLAB on both. Two commands I used to rely on heavily in MATLAB were "clear" and "clc". Moving to Spyder my initial reaction was that I hated having red text from exceptions in the Python shell, and I wanted to start "fresh" with no variables in memory each run. Both are possible in Spyder by setting the run button to open a new Python shell for your program, an option that is unique to each. Over time I've begun to rely less and less on the variable explorer, and if I need to see something I will just print it in the shell. One last thing I like is that I don't feel like my code could ever "go to waste" by somehow not having access to a MATLAB license; Or rather I never felt like I "owned" my MATLAB code since it required expensive proprietary software to run. 
For loops can be made to run very quickly in python if you use numba's @autojit decorator. Or you could just use list comprehensions and be on par with matlab Or you could just use numpy arrays (which have almost the same syntax as matlab) and be on par with matlab. The only time python is 100x slower than matlab is when it is coded very very naively. 
I am not.
I have.
thanks for the help! the graph is in 3d though, and only one shows up - is there a way to make the graph in 2d and for all slices to appear?
Put the ; at the end of the input() command. Semicolon only suppresses output for the line it terminates. Bonus advice: Mad props for trying to make your posts legible, but making everything a bullet list is very disorienting. Instead, put four spaces before each line of code and Reddit will format it nicely. For indentation add four more spaces. This can be tedious and annoying. The next step is installing RES to handle it for you at the click of a button.
Put a semicolon after your first line.
ya is not defined anywhere.
I'll know for next time. Thanks for the help and advice.
For your code, embed it in ` or indent it by four spaces. ie, &lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;this code Or `this is also code`
Try hold all instead of hold on. 
&gt; `this is also code` WAT `test` test Mother of God.... (I'll still use RES, but nice to know...)
dude, your being super negative.
I meant from a company perspective. It's more the accountability aspect that I am actually more concerned about. I definitely believe in a community-based support system, but I feel if one's job is on the line, they are more likely to focus on generating a more finished code. 
Your boundary conditions, I would assume.
True, but who would work on an open source project for free other than those who are deeply passionate about it?
Can you elaborate on why you need to have ya(2) in your expression for Hs? (What does actual equation for Hs look like?) 
here's what I came up with: clear all; x = 0:0.02:10; y = x; [X,Y] = meshgrid(x,y); z = sin(sqrt(X.^2 + Y.^2))./sqrt(X.^2 + Y.^2); idx = 0:2:10; for i = 1:length(idx); figure plot(x,z(Y == idx(i))); title(sprintf('2D Slice at y = %g',idx(i))); xlabel('x'); ylabel('z'); end basically, create regularly spaced vectors that you know contain 0,2,4,6,8,10, create a vector of indices to plot at, and plot your z-values as your y-values on the 2D slices. i'm sure there's an easier way, but it is simple and fast enough. hope that helps...
Sure. "Hs" has this as one of the variables in this equation. I know that doesn't really explain much, but I have provided a couple of links to the problem below. Its actually [H+]_s in the second page. I'm not even sure if my code is set up correctly. Page 1: http://postimg.org/image/6rf4qm6lt Page 2: http://postimg.org/image/sp706nw8h
have you looked at Sliceomatic on the file exchange ? It does what you're talking about graphically, but I guess you could look at the code to see how it works.
Wow, that's a pretty elaborate problem... Okay, so the issue here clearly deals with the boundary condition at r=Rp which is defined by both a function and its derivative. Now I *thought* I knew kind of how to deal with this (approximating the boundary with ode45 by setting it up as an IVP with an initial condition of phi(r=Rp+5*lambda)=0 and using the solution from that to plug into the boundary condition argument of bvp4c) but apparently I don't because I'm not actually able to get any answers for any of the parts due to singular Jacobian errors, so I guess I'm not actually doing it right? Here's what I tried if you want to have a look. http://pastebin.com/6UaRmZLd --- **edit**: In terms of representing the boundary as stated in the question, something like this actually might be more intuitive now that I think about it, although I still get errors when I try to use it: function res = bvp4bc(ya,yb) global N F R T c10 c20 c30 c40 z1 z2 z3 z4 ka kb Ef lambda rlow rhigh sigma_2 Rp Hs = c10*exp((-F/(R*T))*ya(1)); sigma = -F*N*((ka-kb*Hs^2)/(ka+Hs+kb*Hs^2)); res = [ya(2)-(sigma/Ef) yb(1)]; --- One other thing I noticed is that you did have a lot of issues with properly translating some of the constants and expressions to MATLAB (you left out a lot of necessary brackets in places esp. when dealing with exponents, see the pastebin for my changes). You probably want to watch out for that in the future. Anyway, let me know if you figure this out! I'm in the middle of taking a course which kind of involves MATLAB and numerical methods (which is why I wanted to have a go at this) and it would be nice to know.
Its a program, think of how to write a function that returns 1 for values between -1/2 and 1/2 and 0 otherwise
Sorry! I forgot to mention doing it in Matlab.
Yea I figured since you posted in matlab. Do you have any programming experience?
Usually I use constant block (source) and then sum junction to add the integrator.
Only a little C and C++. I have forgotten a lot of it because the professors taught it as concepts instead of concrete material. I have done a lab with matlab but it ended up the T.A. doing the lab for the entire class. This is why I am posting in /r/matlab. I wouldn't be in this situation if Matlab was actually taught to us properly.
Yes, that's what I'm usually do, and it works just fine 
Ok thanks!
That's actually a feature of Markdown, the formatting that Reddit uses. There's a full guide available at [the wiki][wiki]. You can format links nicely, have lists, have cool headers and more. ## This is a section Here are the details with [some links.][wiki] 1. Here's 2. a 3. numbered 4. list. ## Another section * Here's * an * unordered * list. [wiki]:https://en.wikipedia.org/wiki/Markdown
No one wants to do your homework for you. That said, all you need to use is the plot function and x-y pairs of coordinates. 
Its not really homework on the matlab part. I just want to see what the function looks like. The actual problem is that I have to prove that the rect() is the sinc() but I thought it would be useful to know what the rect() looked like
Perhaps you could try SVD.
Evaluate det(coefficient_matrix). If the determinant is zero, then the matrix is singular and you made an error setting up the coefficients. Hope this helps. 
Maybe using image processing can lead to more interactive class, because the student can use each other faces :) and main hardware required is webcam, which is a standard feature on laptop nowadays. Other than that, if image processing is kinda hard on the theory, accelerometer maybe a good choice, because it forces the student to move and interact with the matlab.
So make another array with the last and first point from the original array and plot that on top of the first plot?
 A = Zeros(m,n) A=phase(A)
What useful applications does this have?
Test point. http://www.mathworks.com/help/simulink/ug/working-with-test-points.html
like I have implemented in one project, that if my program detects a face through a cam, it has to switch on the computer screen immediately. Thus saving a lot of power &amp; for demo purpose, these kind of example i have found very best!
I also thought it was that originally. However, it returns an error saying something along the lines of phase has to be applied to a single vector. 
Not only to end a screen saver, you can set an optimum Screen Off Delay &amp; when the software will give a interrupt through mouse cursor movement it will again switch on! Power saver u see! Moreover it will depend on us, that how we are going to use it!
Try angle(A)
This is for freshmen at a community college, and the programming course covers only the most basic aspects of Matlab. With this, many of the students are in Physics 1, Calc 1, and Intro to Engineering. Their academic knowledge is limited. I do like the idea of plotting of terrain. The Arduino setup can read many sensors at once (depends connection protocol), but naturally the more there are attached the less time between samples. However, simplicity is important because the lab is going to be only an hour long and within the limited realm of understanding of the students. My current idea is using the premise of a captured enemy secret document container call the "Black Box". The "Black Box" flashes a coded sequence of binary encoded characters using a faceplate mounted LED. The box will open when the correct decoded sequence is flashed into a faceplate mounted light sensor. (Will use visible light instead of IR for the sake of visual confirmation the system is working) The students will then use the Arduino sensor board to record the flashed pulses and create a lengthy array in Matlab. Fortunately an intelligence agency captured what they think is the decoding sequence. The students will have to then apply the decoding sequence to the array, gather the corresponding code, and flash the transmitting LED on the Arduino senor board; thus, if successful, opening the "Black Box". Considering the gathering of the raw code, applying the decoding pattern, and sending out the new code requires many many loops, my professor will be ecstatic! I know for some this may be a stretch, but our college is located close the the military–industrial complex. For the first lab of many, it's a start. :)
I like it, good luck!
I believe that SVD is the best MATLAB tool available for solving problems with ill-conditioned matrices. If you are confused about implementation, I would suggest consulting a numerical recipes book for the details. Singular value decomposition is a well documented process.
 The function "date" returns todays date in the form of a string, which is just a list of characters. This value of date can also be assigned to a variable instead of just the temporary variable 'ans' MatLab uses. The way to access the elements of this string is to assign the value the function returns to a variable. I chose to name the variable I assigned today's date to as "today". Then you can access any of the elements of the string using regular Matlab expressions. For example, today's date in Matlab form is 06-Oct-2013. Therefore, today(1) returns the value "0". You can select a subset of the string by typing today(1:6), which returns the month and the day. Then you can use an if statement to check if that value is the same as Christmas. clc clear today=date; if today(1:6)=='25-Dec' fprintf('Yes \n') else fprintf('No \n') end 
i agree with this post. when EVERYTHING is new, its hard to get oriented. once you basically "get" the way matlab handles different stuff, you can rely on the documentation easily. thats why i didnt post anything snide here. good call
Between the RAM used by the OS, other programs running, and MATLAB itself, you have very very little room leftover to do anything else. You will see some speedup by going to 4GB. If you have 32-bit MATLAB that is the end of the road. With 64-bit you can go much much higher.
The upper cap is 8gb for this hardware, 64bit. It's mainly used for one function: run a matlab program that controls a couple processes. I ran purge and freed up 1gb, so total free is 1.32... but I'm still inclined to expand the ram to 4gb. I'm sure the incremental difference will be noticeable for the data processing but I just didn't know how significant it may be. 
The 8GB cap is an arbitrary OS limitation, with a more recent version of OSX you can push it to 16GB (at which point it become a chipset limitation) Any performance bumps from a RAM upgrade are going to vary wildly based on the specific task being done. Easy rule of thumb is gigantic matrices -&gt; huge payoffs in giving it more RAM (until it will all fit in at once, then the gains stop entirely).
That depends entirely on your usage scenario. If you do heavy I/O stuff but never hit your RAM limits, an SSD might help; however if you constantly struggle with keeping all your data in RAM, then getting more might help. If you don't hit your RAM limits now, additional RAM will not help at all performance-wise. Also, if you don't run the 64-bit versions of both Windows and Matlab, more than 4 GB of RAM won't be usable for any single program you run.
I agree, to answer this question OP should find out what bottlenecks the code. The average user with 4GB probably won't hit the memory limit, and similarly isn't likely to have too many read/writes off the hard drive in one program - in which case it would be the processor that limits speed the most, and upgrading memory or hard drive wouldn't do much.
how do i know what is bottlenecking? for physical memory i have about 81% used, 600 megs free when running code and 700 megs free when matlab is idle , (according to windows task manager) doesn't windows require a certain amount free at all times? could i be hitting my ram bottleneck?
The _whos_ and _memory_ commands will tell you how much memory matlab uses at any point in time (use breakpoints to interrupt your program if necessary). Another good way is to time your code using Matlab's speed profiler - I believe on the newer versions it's as easy as clicking "run&amp;time". This lets you see if the program spends a lot of time in sections of the code that, say, read a lot of data from the hard drive or deal with very large arrays, respectively.
my code deals with large array computations. i will check out the commands and report back sir!
If `[A B C] = svd(X)`, then X^-1 = C B^-1 A^H . So you'd want to calculate the solution by doing: C * inv(B) * A' Here, `B` is a diagonal matrix, so calculating inverses this way isn't too computationally intensive. If any of that didn't make sense, then I agree with /u/aztronut about consulting a textbook for more details.
You're going to want to use fprintf. You would want to use it like this: quart = 1; nick = 1; dime = 0; penny = 10; fprintf('Change to give %d\t%d\t%d\t%d\n', quart, nick, dime, penny) This will output: Change to give 1 1 0 10 The \t are tabs to space the values and the %d are formats for the values (%d in this case is for an integer). Each %d corresponds to the input arguments listed after the string, in order. The \n moves the cursor to the next line.
/u/9000rpms has the right idea, but just so you know, you can add strings to numbers together (to form new strings) by using quotes and num2str, so: disp(['Change to give' num2str(1) num2str(1) num2str(0) num2str(10)]) the square brackets [] do the concatenation for you! You'll probably need to put in spaces or tabs by hand, as well.
Screw you guys, I'm going home. Haha, no problem. Either way works and both are good to know.
Yea, I like them both, I just have a partiality to the disp() method (is that what they call them in MATLAB?) for some reason. I guess not knowing exactly how fprintf() handles several parameters averts me since I'm never sure of what it will output.
I can understand why you prefer to use disp(), but in case you are planning on using MATLAB for the long haul I would strongly recommend you to spend some time looking into fprintf() and sprintf(). These functions provide a much higher degree of control on output formatting when compared to disp(). It is easy to pick up if you are familiar with C as both fprintf() and sprintf() are inspired by printf() in C.
Yea I noticed the similarities of fprintf() to printf() in Java, and I get the idea, but I'll have to do some experimenting with combinations of the %d and number of parameters after the string, and if those parameter(s) is/are a matrix.
Can you be more specific? Perhaps provide code about what you're trying to do, and explain why you're trying to do it?
Like a for loop?
It's handy to know both. fprintf is way handier at printing tables and the like though...
Please don't like this one better. It's nasty and a hack. Fprintf and Sprintf are very powerful if you learn to use them correctly. 
Can you explain a bit more what "Matlab compatibility" means to you? Usually we take this to mean that code that runs in Matlab should also run in Octave and produce the same results. What do you mean by it? Do you want Octave to look exactly like Matlab to the point that you can't even tell the difference which one you're running?
I would estimate my company spends probably close to $10-25M on Mathworks. 1) Your packages seem to be no better than the Matlab File Exchange. If something doesn't work you can try e-mailing the guy that wrote it. If he doesn't respond, god speed. If my optimization toolbox fails I make a phone call and get a call back from a guy with a PhD in optimization that can assist me with the toolbox. 2) Simulink. 80% of my work is Simulink. Without a replacement for that (and what we use it for and everything it does) you'd never talk us out of switching.
1) About the quality of those packages, would your company be willing to send 1% of their Matlab licensing fees for Octave support? We have plenty of PhDs working for Octave too. EDIT: Oh, so it's the optimisation package in Octave that isn't working right for you? Is that where your vote is? 2) Okay, Simulink is a completely different program that happens to use Matlab. It would take a lot of effort to replace that.
Why toolboxes aside? I use matlab solely for specialized toolboxes (optimization, signal processing, image processing, maps). Because some functions are named differently (even if they do the same thing), I fear I will never be able to migrate from matlab to octave...
Yes, I'd say that 99% of the Matlab code out there in the wild runs in Octave without modification. The problem is that almost any Matlab package out there also includes that 1% of code that doesn't work in Octave yet. Then it becomes a question of whether you can modify your Matlab code to remove that 1% or if we can implement that 1% for Octave. Sometimes this is easy, sometimes it's not.
Except for maps, those are Octave's best-maintained packages. I have written a few functions for the image processing package myself, and I can attest to its quality. Have you tried them? Is the maps toolbox then your sine qua non?
Yes.
Thanks very much for this opportunity. One intangible reason I like prototyping particular problems in Matlab is because it is comprehensive (including toolboxes, which I have access to as an academic). I don't know if my fears are entirely justified, but I'm concerned that if I start prototyping in Octave or Scipy, I might run into a case of "haven't implemented yet" or "implemented kludgily" (like Scipy's signal.deconvolve). I feel that for me to switch over more completely, I would want some reassurance that this will not happen, or that I can port my existing Octave code to Matlab to continue developing there when necessary. Another reason is that the Matlab's official documentation is just so darn educational in the application of their functions. It may be the case that people have built equally helpful tutorials around Octave, but they are found on various websites and I am not sure of their quality as often they would be in a domain area outside of expertise (hence my need for a tutorial). I install through Macports and run in Emacs, but that's a little more raw than most scientists are willing to do (considering the ease of installing R + RStudio). They often begin with, what's Macports? I agree that a GUI/IDE would make it easier to convince others to switch from Matlab, which has one of the best IDEs for an interpreted language. I wonder how it is that R was able to get such a large number of users to switch from S-PLUS? Was it solely the package system? The community? I made the switch almost exactly ten years ago because it offered several things S-PLUS didn't...a few libraries and the capability to typeset Greek symbols in figures. Since the code was similar enough (or maybe I was naive in this regard), I thought I could just try coding in R until I ran into trouble, and then continue coding the rest in S-PLUS. Here I am, ten years later, still coding in R...and for me, the Emacs integration with ESS has been a tremendous argument for R (and I recommend RStudio for non-Emacs users). I wonder if there could ever be such a story for Octave.
Universities do.
Not exactly! I mean, maps would be nice but I can use R/Scipy for this also. I just don't know how far Octave has advanced. And maybe that's it. If there were a table for each of the Matlab operations (functions) and Octave's implementation (whether one exists, with some indicator of quality), then that would be very helpful. Even on a package/toolbox level - what problems might I run into? (Maybe some won't matter for my application and I wouldn't care.) Some comments from experts regarding their appraisal on a package level might be reassuring. I also use Scipy and have been meaning to make one of those tables.
http://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html
It's difficult to maintain these tables because they quickly go out of date, as both sides are constantly changing. The best I can say right now is just try your code on Octave and let's see how far it goes. Perhaps we need a better bug tracker so it's easier to tell which bugs a particular package has and whether those bugs affect you or not.
I have nothing to add, just wanted to say thank you for your work. I use Octave at home often and really like it. Some people feel justified in pirating Matlab...but it doesn't sit right with me I doubt I can convince my work to change to Octave though...the problem is less with "what can we offer" and more of a "everybody else uses Matlab and there is someone to point the finger at if a calculation turns out wrong." That is probably the biggest issue. Accountability. If I'm working on something, and a bug is discovered in say, a handling of a sparse matrix, I don't have time to debug the software. I need to go to MathWorks and say "this is broke, we pay you $$$$$$$$$$$, fix." 
First of all, let me say thank you for the excellent work you guys have done. I think Octave's functionality is fantastic. I teach a Matlab/Octave workshop for other grad students. It's great that it doesn't matter what everyone has installed -- the instructions and functionality are the same. The only small requests I have: Installation can sometimes be tricky for individuals who are not computer savvy. There used to be an installer, maybe around version 3.2 for Mac and Windows. It would be nice to have that again. The display of structures is extremely annoying. Is there a way of getting it to appear in some compact format like Matlab? Edit: wrong word
&gt; Another reason is that the Matlab's official documentation is just so darn educational in the application of their functions. So better Octave documentation would be good. However, is this a reason why you can't use Octave right now? Ideally all of the documentation that TMW and everyone else has already written for Matlab should also work for Octave. &gt; I install through Macports and run in Emacs, but that's a little more raw than most scientists are willing to do Yes, making this easier is priority #1 for our next release. &gt; I wonder how it is that R was able to get such a large number of users to switch from S-PLUS? I've often wondered about this myself. What did R do correctly that Octave has been unable to replicate? R is my role model for how to make Octave render Matlab as obsolete as S-PLUS. If they could do it, so can we!
Plotting. I know you use gnuplot, but it was seriously hard to make nice plots in Octave. Especially if you want to do anything beyond a simple x-y plot. edit: changed tense.
&gt; In a business environment the cost of Matlab is fairly minimal It's not that minimal. Some places spend millions of dollars on Matlab licenses. It's places like these that are our biggest enterprise customers and pay for Octave development, because they can use Octave and paying us to fix it do the One Feature They Really Need is cheaper than paying those license fees. One of these places is currently financing our lead Octave dev. &gt; The cost might make a difference for hobbyists or true garage phase startups, No, most of these people just torrent it. It's a fact. As another commenter said in this thread, "people pay for Matlab?" &gt; Mathworks also has pretty good support I'm wondering how much of a support market there really is. We have been [offering paid support for a long time](http://www.gnu.org/software/octave/commercial-support.html), but it doesn't seem like that many people bite. Perhaps we're just not marketing it correctly. &gt; What is Octave's value proposition? Buy one, install infinitely many free. How do you like having your licenses not being managed at all? Absolutely no black boxes, you don't like how we're calling BLAS or you think you can find a better BLAS than the one we shipped, then go ahead an tinker and change that. &gt; The workflow is the main reason I use Matlab. The integrated core, ui, debugger, plotting tools, and ability to modify paused routines on the command line make it very easy to develop fairly complex algorithms. These are all mostly done on the current development GUI that we're about to release. &gt; If there was a list that said something like, "The default Octave installation can be used as a drop in replacement for Matlab 2012a with toolboxes A, B, C, and D," it would go a long way. Well, the default installation for Octave already has packages that are mostly named the same as the Matlab toolboxes. We shouldn't need this list, we should just *implement* the corresponding features with nearly identical names in Octave. &gt; I use: Simulink, Control Systems, Curve Fitting, Image Processing, Instrument Control, Coder, Compiler, Optimization, Parallel Computing, Signal Processing, Stateflow, and Symbolic Math regularly. Okay, some of these are more than just toolboxes, despite the marketing name that TMW chose for them, so I can understand the problem. Simulink is a completely different program that happens to use Matlab. It's not just a toolbox or an add-on. The symbolic package is a completely different program too, MuPAD, that got rebranded as a toolbox. Implementing it as about the same magnitude of effort as implementing Mathematica. It would take a lot of effort, so perhaps our best bet would be to link Octave with Sage and call that a toolbox. As for some of the others, yes, there is a lot of extra features here that would take a tremendous effort to replace. At least control, curve fitting, image processing, instrument control, optimisation, signal processing, and parellel computing are all already in Octave and in fact are some of our most mature packages. &gt; Convincing the company to make a charitable donation is much harder. Would a support contract work instead? What if we sold you a binary under the terms of the GPL? You give us money, we give you a branded binary. 
&gt; I need to go to MathWorks and say "this is broke, we pay you $$$$$$$$$$$, fix." So, support contracts? [We have those](http://www.gnu.org/software/octave/commercial-support.html). I suppose we need to market them better?
Are you saying that [this](http://jweaton.org/) is comparable to the support package you get when you purchase a Matlab license? That seems like a stretch.
Sure it is. Do you think we need a fancier website in order to attract customers? You ask for something to be fixed, and we can find someone who will do it. Many very smart people work on Octave, and you can talk directly to whoever needs to fix whatever part of Octave needs to be fixed.
That is the first I've heard of it! Interesting.....
I wish I had a list of all the tiny little glitches and oversights that I've noticed while using Octave. It's hard to remember these small things, but when each one requires you to search for, or create, a workaround, it gets tedious. Here is one example - look at these screenshots http://imgur.com/a/ZgMw5 . All I did was create a figure with a simple line plot. When I resize the window, the axes don't resize with it! This is unacceptable.
So you want CentOS rpms? We are working on those. I actually make some of those for my day job, but I don't know if this is exactly what you want. Do you really care about the installed size of Octave or about the difficulty of compiling Octave from source?
Instead of finding things that matlab does and copying them you should find things matlab lacks and outperform them. Someone mentioned fixing the ability to export figures into Latex. That is a great idea you should look into that. It took me forever to fix that for my thesis. I would also like to see a well developed vim plug-in over a gui. If you give me some of the basic functionality that the matlab gui has, but I can run it in vim I would never use matlab again. For instance highlighting code and executing it saves a huge amount of debugging time. basically I would like the the F5 and F9 functionality in vim. Great job btw. I still use matlab for now, but I have my eye on octave for the future. 
It's not about the website, it's about the quality of the service. I have never used paid Octave support, and only used Matlab's support once, so I don't think I'm qualified to compare them. But Eaton is just one guy, right? One of two small companies listed on the Octave site that provide support? You're telling me that those are equivalent to the full customer support staff at the Mathworks?
These plots are all created with the exact same code on Matlab and Octave (they're marked with %demo blocks in the Octave source code). Yes, it's possibly to zoom and rotate, but I'm not sure exactly how intuitive it is.
Ah, this is an old bug bug with the fltk back-end. [Fixed in dev](https://savannah.gnu.org/bugs/?37597). 
I used Octave for six months after using Matlab for years. It is just full of small glitches and oversights, which I never take the time to record, because each one is so small. I am going to try to make a list here. * plots don't automatically resize with windows: http://imgur.com/a/ZgMw5 . I believe there are several other issues with any sort of graphics callback event in Octave, but it's even harder for me to remember these because I gave up on using callbacks in Octave. * pressing ctrl-c ends debug mode in Octave, but does not in Matlab. I realize this may be related to running in a terminal, but Matlab can do it in a terminal too. * Matlab has a special command, "axis vis3d", which locks all the display ratios in a 3D plot, so that you can rotate the plot without changing the proportions of the plot. I have yet to find a way to do this in Octave. It probably doesn't help that the way Matlab does this appears to be totally inaccessible (last time I checked, at least). I have had to alter my workflow, find or create workarounds, or (rarely) just give up on a task while using Octave instead of Matlab. However, for 95% of my work, Octave performs exactly as I need it to, and the items on the list are usually very minor.
/u/ajmarks link to the logic documentation should answer both questions, along with the overall [control flow documentation](http://www.mathworks.com/help/matlab/control-flow.html). Regarding your initial question, a for loop would be the ideal choice. For your second question, a while loop would be the ideal choice.
Eaton is the head of that business, but he's not just one guy. He subcontracts from the community when he needs someone to help, and the community is nothing to scoff at. We have many very smart people working with Octave too.
&gt; Instead of finding things that matlab does and copying them you should find things matlab lacks and outperform them. It would be nice to do that, but there's enough work as it is catching up to Matlab, and our users really seem to want nothing more than catching up to Matlab. If you want something better than Matlab, we already have R, Scipy, and Julia. Innovating with Octave is dangerous, because sometimes we do something before Matlab, then Matlab goes and does the same thing in a different way, so we have to revisit what we did and redo it their way. It results in wasted effort.
&gt; It is just full of small glitches and oversights, which I never take the time to record, because each one is so small. I am going to try to make a list here. If you're planning on this, it would help if you did it in [our bugtracker](http://bugs.octave.org) instead.
&gt; Would a support contract work instead? &gt;What if we sold you a binary under the terms of the GPL? You give us money, we give you a branded binary. A branded binary would work for my company. There is no way I could get permission for a donation for free software. It would also be difficult to convince someone I need to pay for a support contract. I have to convince someone "I **need** to pay for this so I can do XXX faster or better." If you package up something that makes installation really fast and easy and leave the free version as is that could be a good strategy. 
I would be glad to enter items from my list there. What about when I submit an issue about X, the developers agree that the way Matlab does X is simply wrong, and Octave will never give in to the wrong-but-standard way of doing X? Do the devs think that is a good way to convert and retain users?
I realize this is due to my own lack of knowledge, and it's independent of the question at hand here - but - I don't know how "Fixed in dev" is supposed to help me. Does that mean I have to download source that is not available in distribution repositories and compile it? To me, that is not a user-friendly solution.
I had initially written cell arrays and then thought I meant structures instead, but now I realize I meant both. Neither is very compact. If there's a large matrix in a cell or subfield, for example, it would be nice if it didn't display the whole thing: MyStruct.nums = zeros (10); I'd like MyStruct to return something like [10 x 10 double] in the subfield instead of showing the whole thing. For cell arrays, if I have a 1x3 array it would be nice if it actually appeared as columns instead of rows with the [1,1] notation.
Yes, and this something that might be done by forming a committee comprising members that use these packages regularly, so that they can keep them current. I think one reason for slow adoption is that there is much cost in the trial-and-error approach you suggest, and for many of us we are only rewarded for the scientific knowledge that we produce. In that sense, contributing new scientific packages is one thing, but "debugging" a package in Octave that already works in Matlab (figuring out if a particular function is implemented in the way we expect) - instead of being productive in Matlab immediately - is something many of us cannot afford, however much we'd prefer to break free from the tyranny of Matlab licenses. 
1) bundling an IDE with the compiler and libraries would really expand the usability (think pythonxy). This is the number one complaint for people who are not programmers who I try to get to use non-matlab/mathematica 2) I would be quite interested in OOP if you have a good toolbox spread/library. I put up with matlabs crappy OOP (what a crappy memory management system it has when forming large object arrays) merely to use their toolboxes. I save a ton of time and $ by invoking their toolboxes rather than writing my own basic functions. To that end, the mapping toolbox, the various statistics toolboxes, and support for parallel computing are a must. 3) version control. I don't have a ton of experience with octave so maybe you have this solved, but I run into it with other languages and open libraries. Please control versions of libraries. If I have a program that invokes library functions, it should run on everyone's system who has installed those libraries at some point. I can't share code when version control of every single library becomes an issue. 4) DOCUMENTATION matlab has an impressive documentation strategy. It's effective and works.
&gt;It's not that minimal. What I meant was, "for a single copy..." I don't know about the people who can pay you to implement new features, as I only have first hand knowledge of the organizations I've worked for. We've spent 10-20k on licenses in the last few years. &gt; No, most of these people just torrent it. Well, I can't speak to that. I certainly wouldn't use pirated software in a startup because you have no idea what IP claims might come later if you become successful. &gt; you don't like how we're calling BLAS or you think you can find a better BLAS than the one we shipped, then go ahead an tinker and change that. I'm using Matlab because I don't want to worry about how BLAS is implemented. &gt; These are all mostly done on the current development GUI that we're about to release. That is exciting, and I'm looking forward to checking it out when it comes out. &gt; Well, the default installation for Octave already has packages that are mostly named the same as the Matlab toolboxes. Where? I can't see from the web site whether my code will work or not. This may be just a marketing problem. &gt;Simulink is a completely different program that happens to use Matlab. It's not just a toolbox or an add-on. This isn't true though. I have a real-time machine controlling equipment running a simulink model through xPC with Matlab function blocks doing most of the heavy lifting. This machine streams data in real time to a Windows computer running Matlab where online analysis and diagnostics happen through a GUIDE/Matlab UI in addition to writing incoming data to disk. This data can then be loaded into Matlab on another computer for analysis -- also in Matlab. I can share objects and routines across all three setups with no need to translate them between different languages/platforms. Simulink is very tightly integrated with Matlab. &gt; It would take a lot of effort, so perhaps our best bet would be to link Octave with Sage and call that a toolbox. Yes, this would be a great idea. Just integrate it enough that you can pass data back and forth without much cognitive load on the programmer's part. &gt; As for some of the others, yes, there is a lot of extra features here that would take a tremendous effort to replace. At least control, curve fitting, image processing, instrument control, optimisation, signal processing, and parellel computing are all already in Octave and in fact are some of our most mature packages. This is not obvious from the [Octave web page](http://www.gnu.org/software/octave/). Even from the [package list](http://octave.sourceforge.net/packages.php) it's not immediately obvious what's supported. I don't see, "curve fitting" on there. If I click "Fits" it says that package is for reading and writing Flexible Image Transport System files. At this point I think many users would conclude that Octave doesn't have the feature I need and move on. Optim is a little better, it clearly says "non-linear optimization toolkit." When I open up the function reference though and CTRL-F `fmincon` or `quadprog` I don't find either. &gt; Would a support contract work instead? What if we sold you a binary under the terms of the GPL? You give us money, we give you a branded binary. A combination of the two might work, like the old Redhat model. Sell a copy with a support contract. The support offer has to be credible though. How does a business know John W. Eaton won't take a job at Goldman Sachs a year from now? 
So the good tutorials by Mathworks nudges me to use Matlab for two reasons: * I partially feel indebted to their services - together with their software and educational material, Mathworks has packaged a pretty nice product. Perhaps overpriced, but has value. * You mention the similarity in Matlab and Octave code - but to know that the similarity is 99% without knowing exactly where the 1% that might give me trouble is, I'm hesitant to embark on a proposition which may end up costing me a lot of time. Again, Matlab just works. About R and S-PLUS - sometimes I wonder if it's because S-PLUS never approached the maturity of Matlab, so it was reasonably easy for R to assume the quality of S-PLUS very rapidly. Once enough people started coding in it, others felt that the momentum would be on R's side when it came to conflicts in language syntax or semantics.
seconded
Link to the submission please.
It means a fix is forthcoming, or if you're very impatient and industrious, you can build from the dev sources to get the fix yourself. It's basically a promise of a fix.
It's very rare for us to completely agree that there is a Matlab bug that shouldn't be duplicated in Octave. If I mention the examples where this has happened, you probably wouldn't even know what I'm talking about.
I wish I had some examples, I believe I ran into this once or twice while I was using Octave regularly. It may have been related to callbacks, or other seriously non-core features.
I see. Yeah, I can see the value in this. [I'll work on implementing this](https://savannah.gnu.org/bugs/index.php?40211).
You nailed it. I cannot understand why people think Matlab is expensive. It is not! A corporate email account costs much more! A company which chooses (unsupported) Octave vs. Matlab has nearsighted greedy management - that's all. 
I spent years programming in Matlab, and there is just so many small things that Matlab got right and makes coding much easier, like mLint, debugger, profiler etc. It reduced any chance to make a syntax error/typo! Makes working much more efficient. A lot of small things done right. I tried Octave, and it was just dead slow, no GUI, no GUIDE (which is a great thing, IMO). So I asked management for Matlab. 
http://www.mathworks.com/matlabcentral/fileexchange/?search_submit=fileexchange&amp;query=icosahedron&amp;term=icosahedron platonic_solid and make icosahedron seem promising
Thanks for your hard work. I've been using Octave and Matlab in equal parts at work for the past 8 years. I think Octave gained significant ground when it hit 3.0 in 2007, to the point that *Octave does a number of things far better than Matlab ever has*, such as parsing, concurrency (fork/pipe support), and terminal interaction (it behaves properly as a Emacs inferior process). There are still a few reasons for me to use Matlab instead of Octave. * If I'm collaborating with a colleague who is using Matlab I'll just stick with Matlab to avoiding wasting time sorting out any compatibility issues, especially if I were to accidentally use some Octave-isms (#-style comments, double quotes, etc). The only real solution would be to convince them to use Octave, but these people are not really the programmer types, so they're married to the Matlab GUI. They don't really have the time, need, or desire to invest in learning anything else. * Matlab can still generate plots that Octave cannot, especially when it comes to 3D plotting. Matlab's plot interface is really a generic drawing API supporting a number of primitives, both 2D and 3D. Maybe this is different with FLTK, but I haven't been able to get that working yet. * Missing functions/toolboxes. Even with Forge there are still some gaps in Octave's function definitions. The most recent case for me was [`viewshed`](http://www.mathworks.com/help/map/ref/viewshed.html), and probably a number of other mapping-related functions. Final note: I've never actually seen `classdef` used in the wild, so it's not something I personally care about. 
* There's an outstanding bug [concerning our warning for Octave-only syntax](https://savannah.gnu.org/bugs/?36743). We should see about fxing it. * It would be helpful if I knew exactly which 3d plotting things are missing. I have also heard people say that they don't care so much about 3d plotting because it's more difficult to do good 3d plots for publications. This is however absolutely essential for you? * We'll always be missing functions, but it's important to know which ones are the most important and that people absolutely need. Everyone seems to have that one function that they really need, and we need to know, can we implement it for Octave? If not, is it possible that you can still use Octave even if it's missing that one function?
For 3D plotting the things that come to mind is stuff like `lighting`, `light`, `material`, `rotate`, `alpha`, and `camlight`. Octave is aware that all of these are missing since it issues a special warning about them. There's also the EdgeAlpha property, which is probably more important than those previous items. All of these are definitely *not* essential for me, just something to play around with in Matlab to tweak finished plots. The time where I needed those mapping toolbox functions has since passed, so I don't have any particular toolbox needs right now. And I can't really predict what I might need in the future. Either Octave will already have it or it won't, and if it doesn't then I probably have no reason to use Octave for that task. For example, that `viewshed` function I mentioned is actually quite complicated to implement, which is why I'm really happy I didn't have to do it myself. It was the sole reason I was even using Matlab for that particular project. Without it, I would have had little reason to use either Matlab or Octave for that work, instead choosing a more preferred language/platform. 
Awesome!
If you were to put some effort into the portability of figures into latex, and making some vim plug in features. I think your customer basis would grow and I do not think TMW is spending any effort in those areas. I don't think you should deviate from the language itself just the interface. 
I don't think there's anything that can be done about how difficult it is to compile and the number of dependencies. Octave just has to do many things, and we can't bundle all of the libraries that it needs. We already build a lot of flexibility into the build system so that it can proceed when it can't find some of its dependencies at build time. I think the RPMs should serve you better. We're also investing time in making those.
Native (NOT x11) Mac support would probably get me to switch, and then work around any of the other inconsistencies.
I didn't think MATLAB resized plots...
Maybe it help if I understand it a little better. What if the number of special characters (%d &lt;-these thingies) and the number of other parameters don't have a correlation of 1:1? What if one of those parameters is a matrix? Will it cycle to the next matrix if reiterated?
Uh, thought I'd try out Octave in response to this post. As far as I can see it's not a Windows program so I won't install it. I'm looking for an .exe and I am presented with 15 pages of text http://wiki.octave.org/Octave_for_Windows I'm being facetious of course, but this is as far as I would usually get in trying such a program. Everyone uses Windows and MATLAB works on Windows.
Yes, there *is* a trick, though it's not exactly straight forward: http://undocumentedmatlab.com/blog/setting-desktop-tab-completions/
Yes, you can specify a specific date or a range of dates along with what specific bits of information you would like (to include a large block of securities all at once). [Obligatory RTFM link....](http://www.mathworks.com/help/datafeed/yahoo.fetch.html) You are already on the right track. Read through the docs and see where it gets you. If you're still stymied post what you've accomplished and we'll go from there.
Because the formatting is god awful ugly and it only works because your case is incredibly simple. You have very, very little flexibility on the formatting (read: absolutely fuck all flexibility) and if any of your data items change it is going to mangle the entire output. This is a very good example of using the right tool for the right job. Just because you can doesn't mean you should, simple situation or not. And no, it doesn't work well. It functions. And is bad. And you should feel bad. (Not really, it's just printing some text, but seriously, stop it. Fuck!) fprintf() and it's bretheren on the other hand let you specify EXACTLY what should happen, how much space to put for each item, and a myriad of other things. Changes to the data you are working with then require very few, if any, alterations. Learning proper use of fprintf() takes about 10 minutes and very, very quickly pays off (if for some reason you do a lot of text output)
&gt; It's not that minimal. From a business perspective, it's relatively cheap compared to their labor force. If a company switches to Octave and finds out halfway through the project that some legacy code is incompatible or there are just some toolboxes that haven't been developed (fully or partially), that is a devastating loss, financially. Except for the case of super small businesses, I think you won't ever been be able to argue for Octave on the basis of cost. R had this problem with SAS for a long time - regardless of its warts, SAS was the de facto tool for statistical analysis and companies weren't willing to risk the switch until very recently (and still many resist).
Maybe if you're using a 10+ year old version it doesn't. The current version definitely does.
look up tfdata
I used Octave after graduating college in order to study linear algebra, machine learning, and kinematics in my spare time. I just started grad school and, due to the nature of the work I'll be doing and for compatibility with my colleagues, I'll be reluctantly changing back over to Matlab. From my limited experience, (I'm thrilled with it by the way), the only hang-ups that I had were the graphics stuff causing hangs and crashes and the OOP organization. I only ever used OOP once to build a really basic backprop learning algorithm and it was a headache to set up. Finally, pressing &lt;delete&gt; in the command prompt on an empty line would close Octave on my Windows installation (it doesn't do that on Ubuntu). There is probably some way to change that behavior but it seems annoying enough that my vote would be not to default to it. On another note, I just got done writing a little script for homework using Octave and I'm trying to modify it so that things run well in Matlab before I turn it in. The experience is making me recognize some syntactic details that I really appreciate in Octave: [A_vec + B_vec](ii) *I can't even figure out why this won't compile in matlab. What the hell is the correct syntax for this?* += *I've read an explanation as to why it can't exist in matlab, it seems like a silly reason* ++ *Likewise*
I may have missed the rest of your question. The help should describe what each of the arguments mean. The placeholder is rect as you say, which means that by default the window will fill the entire screen.
Ok ok ok, I actually tried to implement it, and it really doesn't even work like I wanted it too; you're right ^^even ^^if ^^you ^^were ^^a ^^bit ^^of ^^a ^^dick ^^about ^^it. Going with fprintf.
There might already be something written in Image J.
Oh, yeah the arguments do have to appear in that order. That's true for Matlab in general, not just in psychtoolbox.
I believe this tutorial will be helpful: http://www.mathworks.com/help/images/image-enhancement-and-analysis.html
You could probably use the regionprops command from [ImageAnalyst's great tutorial] (http://www.mathworks.com/matlabcentral/fileexchange/25157) .
Something matlab sucks at is basic line plot with transparency. The base volume visualization are not very good either, but there a good function on matlab central. http://www.mathworks.com/matlabcentral/fileexchange/22940-vol3d-v2 Exporting large scatter plots with colors with print takes also forever in matlab for some reason.
It's predictable only if you already know Octave well, of course. We try to document where we're falling behind relative to Matlab, but we don't always get all of it.
If you really want to try it, just [download this](http://sourceforge.net/projects/octave/files/Octave%20Windows%20binaries/Octave%203.6.4%20for%20Windows%20Microsoft%20Visual%20Studio/). It's got a very alpha version of the GUI that the packager eagerly but prematurely packaged, so please don't judge the upcoming release based on that.
&gt; From a business perspective, it's relatively cheap compared to their labor force. If that were always true, then we would never get companies approaching us to fund Octave development so they could spend a little less on Matlab. It's not always that cheap, and millions of dollars per year on Matlab licenses is not that uncommon. And if you're already spending millions of dollars on Matlab per year, you're not a super small business. Arguing for Octave on the basis of cost is the easiest way to argue for Octrave.
* The documentation should be improved, but is this a reason to not use Octave? A lot of the Matlab documentation is also valid for Octave, especially all of the tutorials and books people write independently from The Mathworks. * Maintaing this list is difficult because both sides are constantly moving targets. Such lists have been attempted in the past and always end up going out of date. Our time seems better spent in implementing the missing features. * You seem to really want classdef objects. A few people do, which is why we're implementing them, but it looks like... * The #1 request is a GUI. Like I said, a new GUI will be released very soon, and hopefully will meet your needs.
Came here to recommend ImageJ as well. This is what most people that I've seen doing automated biological image analysis use. http://rsbweb.nih.gov/ij/
&gt; The documentation should be improved, but is this a reason to not use Octave? Absolutely. MATLAB is one of the most well documented pieces of software I've ever used, and in my opinion that's one of its best features. Sitting down with nothing more than an editor and the help browser the majority of users will be able to get exactly what they want out of a pretty intimidating piece of software, even without prior programming experience. It may not be the most efficient or elegant way to solve the problem, but it will work. I understand that writing comprehensive documentation is a daunting task, especially with (I'm assuming) a relatively small development group. While I absolutely agree that there are some fantastic external resources, I don't think saying "why not use MATLAB's documentation, it's close" is the appropriate answer if you're trying to sell folks on Octave. That will work for those already familiar with MATLAB and other programming syntax (heck, I'd argue it's part of the fun of learning to write code) but it sets a barrier to those without much experience who want to be able to set up and get what they want out of a program right out of the box.
While there may be something in existence in ImageJ already that is up to the task, it is difficult really know how to do this without seeing the images. Are we talking one single image? Do you have any chance of dying/visualizing the different cells using some sort of marker? What you need may or may not be straight forward based on your experimental setup/images. You may also try looking at [cellprofiler](http://www.cellprofiler.org/) although I'm not sure if it will be easy to get what you want. During my masters degree, I used software called [Acapella](http://www.perkinelmer.ca/en-ca/Catalog/Product/ID/AC-SW-001) and I know that I can make this software do exactly what you want. Matlab is a good tool, but I'm not sure I'd limit myself to it in the area of image analysis. Good luck.
No, I was just answering the question. My reasons pretty much mirror what /u/Mimshot posted. I'm not averse to using Octave, and I'll probably check it out again at home once the GUI changes are implemented. At this point in time though there's really no compelling reason for me to use it over our established MATLAB infrastructure and knowledge base at work. Plus we use Windows machines with no admin privilieges and a time-consuming software approval proccess. Boo.
&gt; [A_vec + B_vec](ii) I can't even figure out why this won't compile in matlab. What the hell is the correct syntax for this? Can't do that in MATLAB. You either have to use an intermediate variable, [create an anonymous function](http://blogs.mathworks.com/loren/2013/01/24/introduction-to-functional-programming-with-anonymous-functions-part-2/?s_eid=PSM_3365#db344cb8-ae1b-4b25-8071-af3883a49003) to handle it, or do some [ugly hack with SUBSREF](http://stackoverflow.com/questions/3627107/how-can-i-index-a-matlab-array-returned-by-a-function-without-first-assigning-it/3628885#3628885).
[Steve on Image Processing](http://blogs.mathworks.com/steve/) will definitely help you here. Look at his posts using M&amp;M's to find the cells, then classify based on the area of each cell.
So you would use Octave even if our documentation isn't great, as long as the GUI is great? This is what I really want to know. I know that Octave is lacking in many aspects, but how many of them are so bad that you can't even touch the thing? Apparently the documentation isn't *that* bad, because it won't stop you from touching Octave.
Use the rem function to determine the remainder when dividing the number by 2. If remainder is 0, then do calculation. Example: &gt;A = [1,2,3,4]; &gt;for i = 1:length(A) &gt; if rem(A(i),2) == 0; %is even &gt; calculation = A(i)*whatever &gt; else &gt; continue &gt; end &gt;end 
Thank you very much, I will try that out now! I had been using the mod function to no avail.
I am probably one of the few who don't care about a GUI. I always launch Maltab with `-nodesktop` but I think I am just special
wow. That is so much more than I was looking for. I'll just stick with writing something like ``load``, using that tab-complete, and then changing ``load`` to whatever I want. Thanks though!
I usually see if the number divided by 2 is equal to the same thing rounded. Eg round(x/2) == x/2
That sounds like an odd problem. Do you get that problem when you just try to open the editor (running "edit" without any arguments)? What version of MATLAB are you using? If you could post the exact command you run to get this error, that'd be helpful as well.
&gt; So you would use Octave even if our documentation isn't great, as long as the GUI is great? As someone already relatively competent in the syntax, yes. I don't know if my answer would be the same as a completely fresh user. While I do enjoy trawling the internet for user content &amp; to see how to make better code, it can get annoying &amp; frustrating at times. This is amplified for newer users &amp; those not as inclined to go searching. &gt; This is what I really want to know. I know that Octave is lacking in many aspects, but how many of them are so bad that you can't even touch the thing? Apparently the documentation isn't that bad, because it won't stop you from touching Octave. Honestly, not many. All the ones I can think of are already captured in this thread. However, given the maturity of the software I don't know if "what is so bad" is the appropriate question to be asking. I think the better question would be "what can be done to make Octave compelling enough to switch away from MATLAB?" A lot of this has already been touched on by others. Since you're trying to get people from MATLAB they need to know explicitly what Octave can do compared to MATLAB, not only in the base software but in the "toolboxes" as well. When switching software, the user would really like it to function similarly (similar interface/workflow/syntax) so they don't have to spend some amount of time retraining themselves and so their existing code base continues to function with little (realistic) or no (ideal) additional effort. If something goes wrong, the user needs a solution as quickly as possible. If they can't work it out using the documentation, they contact the developer. When a user contact Mathworks, they can reasonably assume that they will get an answer and a solution/workaround within a couple days that they can implement immediately. Assuming Octave is not your full time job (please correct me if I'm wrong) this is not necessarily an assumption one can make for Octave. One advantage Octave does have in this area as open source software is that it can address and fix bugs in core functionality far more often than MATLAB can with its biannual release cycle, though it may require the added user hassle of compiling a dev branch (which many will not want to deal with). In a commercial environment, the guaranteed, documented, visible software functionality and developer support structure carries a lot of value. MATLAB's cost is comparable to other scientific data packages and on par with many maintenance contracts for many other software packages provided by smaller programming houses. For most users who don't utilize MATLAB's toolboxes, I'm sure they could switch to Octave once the GUI is implemented and be perfectly content. For users utilizing the toolboxes, Octave may not be a robust, viable enough alternative out of the box. Even if it is, there's really no easy way to tell from the project's site.
The thing is, I don't run any commands. I just double click on the "current folder" tab, and try to open it in the editor. If I double click on the m file, it doesn't work. If I open the editor, and try to open any m file manually, it gives me the same error I mentioned in the self post. I can right click and choose "run configurations" and it runs the file, and it does so without any problems. Its just that the editor doesn't work. I was running 2013a, I upgraded to 2013b today because I thought upgrading would solve the issue.
Unfortunately it doesn't work for arrays (or so I have found).
Sounds like a jacked up path list to me. Working from an install that was copied over rather than properly re-installed is asking for trouble like that. Edit: Try running 'which -all &lt;filename&gt;' to see where MATLAB thinks everything is stored. After thinking about it some more, a lot of the behaviors you describe are really, really odd and I don't think can be attributed to just a path list problem. Either way, something is (obviously) fubar. Your easiest fix is going to be nuking everything from orbit and reinstalling from scratch (not by copying/pasting an old install form somewhere!) and going from there. If it is still jacked up, call Mathworks. They are going to be infinitely more helpful than we are and you're paying for them to answer this stuff. Might as well make us of it.
Definitely sounds like a job for Mathworks. I can understand a file or two throwing that error due to name collisions, but for it to happen with basically everything is damned impressive. Being unable to open a file from the folder browser is equally baffling.
Its one of the most unusual problems I ever came across, thats for sure. The only thing I did was copy/paste the MATLAB m files I wrote in the past. I had a big folder of them, I sometimes dropbox them to other computers, and I usually have zero problems.
Mod is better. This could back fire based on datatypes because 2 doesn't always equal 2 in Matlab.
I apologise. I let my friend post this on my account. She is hopelessly lost and I will try to get specific questions from her. At our uni they drop you into mathlab with only an intro course in c++ and nobody knws what theyre doing. Not even the TA's. She is looking for any help. I'll come back with specifics
This is what I have so far: function project1 global ef F R T z1 z2 z3 z4 C1 C2 C3 C4 sig gamma N Ka Kb ef=7.08e-10; F=96490; R = 8.31; T=300; N=1.3285e-5; Ka=10^-4.6 ; Kb=10^1.1; %Part 1 CKCl=10; Rp=40e-9; Plot (sig, pH) pH=3:0.2:9; z1=1;C1=10^(-pH+3); z2=1; z3=-1; z4=-1;C4=10^(-14-pH+3); if pH &lt;=7 C2=CKCl; else C2=CKCl+10^(-pH+3)-10^(-14+pH+3); end if pH &lt;=7 C3=CKCl+10^(-pH+3)-10^(-14+pH+3); else C3=CKCl; end sum=z1^2*C1+z2^2*C2+z3^2*C3+z4^2*C4; Hs=C1*exp(-F/R*T) gamma=(ef*R*T)/(F^2*sum); sig=-F*N*(Ka-Kb*Hs^2)/(Ka+Hs+Kb*Hs^2) xlow=0; xhigh=L; solinit=bvpinit(linspace(xlow,xhigh,100),[-0.01 0]); sol=bvp4c(@bvpodu,@bvpbc,solinit); %plot(sol.x,sol.y(1,:)*1000,'-k'); %Part 2 pH=6; Rp=40e-9 %Part 3 Rp=1e-8:1e-9:1e=7; end function dydx=bvpodu(x,y) global z1 C1 z2 C2 z3 C3 z4 C4 F R T ef summ=z1^2*C1*exp(F/R*T)+z2^2*C2*exp(F/R*T)+z3^2*C3*exp(-F/R*T)... +z4^2*C4*exp(-F/R*T); dydx= [y(2) -y(2)/y(1)-F*summ/ef] end function res=bvpbc(ya,yb) global sig ef gamma res=[ya(2)-sig/ef yb(1)]; end 
Pastebin. That still looks like a cluster fuck.
Well what have you tried so far?
The syntax in Octave and likely Scilab (never used it) is going to be the same as MATLAB. http://www.mathworks.com/help/matlab/control-flow.html http://www.mathworks.com/help/matlab/matlab_prog/local-functions.html
Paste bin. Gist. Four Spaces.
I am not familiar with V-Realm Builder and I am not too familiar with Simulink either, but I believe there is an XY plot in Simulink that you could use as a first pass to visualize the masses moving in two dimensions. Second, I am not sure your method of modeling the spring is correct. Are you modeling a linear spring between the two masses? If so, then the x force of the spring is not directly proportional to the x distance between the two masses. It is directly proportional to the magnitude of the distance between the two masses (a function of both x and y).
Are you using linux or a mac? If so try launching matlab as root and see if it works then. If it does, then it is permissions. to launch as root, open a terminal and type: sudo matlab edit: in case it is permissions, you open terminal and type sudo chmod 777 /mfilepath
Yeah, I see there's a lot out there for PID stuff. The first link I have seems perfect for me and I watched the video but it doesn't run at all. Have you used it before? Thanks.
Its windows, I use Windows 8 actually. I checked the security tab for the files, folder, and drive. Everything is set to full permissions, so I don't think its that. Also, I can freely read/write the file in notepad++. This is either a problem with me getting cocky with MATLAB, or I fucked something up, or I'm not sure what. Since this is a fresh install of 2013b, though, I'm not entirely sure. Maybe I'll just reformat my lab computer and stick to 7.
Also, Did you check the permissions of your preferences file? [This looks similar, but on linux.](http://www.mathworks.com/matlabcentral/newsreader/view_thread/300659) When you say that you copied your matlab directory, does that mean your path, or the applications folder?
My directory of projects and apps and such I did in the past. Functions, m files, that sort of thing. EDIT: actually, going by your first point, I CAN make sure I'm running MATLAB with admin privileges. 
At first i wrote this which seemed to work based on user input: function [product,scalar,list] = x x = input ('enter the array: '); a = input ('enter a scalar: '); y = input ('enter the second array to be multiplied: '); product = prod(x); scalar = a * x; list = x * y'; disp(product); disp(scalar); disp(list); but apparently I need the three functions to be separate of one another, and I can't seem to get the function to take inputs as parameters and not input from users. Most stuff I try gives me an invalid argument error or something along those lines. 
Look at the following MATLAB documentation page to see how functions are written. Especially look at the section on "Multiple functions in a file". http://www.mathworks.com/help/matlab/ref/function.html In additions to the three functions you also need a function that will test the code. Call this function something like "homework" and this will be the first function and will contain the test commands like disp(list_product([2 4 6 8])), etc. This function should be followed by implementation of the three functions list_product, multiply_by_scalar and multiply_lists. All the best. 
hahaha you.. I like you. At least you use your asshole powers for good :)
Yes, and I think I would personally be more inclined to start a project in Octave if the differences in terms of functionality or syntax were well known so I can choose on the basis of whether I think I'll be hurt by these differences or not (in some to many cases, I suspect not). I regularly use R and have been moving toward Scipy; I can foresee cases in which I would want to call Octave routines from R or Python, but I don't write full programs in Matlab like I used to. As is the case with many of us in the community, I'd like to see Octave succeed but have many priorities to tend to for the sake of moving science forward. I feel like I'm coming across as an ass but I'm grateful that you are continuing to work on it so that someday the tide might shift toward Octave from Matlab. It really is a critical phenomena when the momentum shifts towards the open source version of the language (as it was with R) and then it would become easier for us fringe players to jump on the bandwagon. At our university, the administration strongly encourages us to teach in Octave, but every student I've worked with still program in Matlab. Because of site licensing issues (we work in areas without internet sometimes), I tried to get a PhD student to switch to Matlab but the lack of IDE was what ultimately kept her from switching over and she ended up tied to wifi hotspots to do her work, to the detriment of our team coordination. I hope IDE, functionality and these things will one day come together such that people will no longer be in want of Matlab. Having said that, they have taken a weak language and created a great product. For Octave to challenge their comprehensive, educational product is a formidable challenge, but I hope for the best. Many thanks for your efforts in this. 
Already saw those links and the codes were not quite what I was looking for. But I managed to write my own thing in the end. Thank you for taking the time to reply and help me!
That was only part of the problem. The underlying problem was in my isLeapYear function. It all works now. Thanks for the help. 
What is your histogram code line looks like? when you write min(data),max(data) what do you get?
Thanks for your reply, I will try out the xy graph. It is a linear spring, I have a m file where I think I take into account the x and y componant using pythagoras. 
thanks, i see what your getting at, will give it a look see
Thank you for your words of encouragement. In case you're curious, we now have [a release schedule](http://wiki.octave.org/Release_3.8).
I'm not aware of audio segmenting code, but there are probably simple algorithms that would do the trick. Have you considered rectify, lowpass filter, threshold?
I wasn't kidding about the novice part ;) Are those three things easy to incorporate in a code?
I like to think of myself as the asshole this subreddit needs AND deserves. Case in point: the guy who just posted about trying to do a histogram and having issues with the bins being returned but didn't post the code causing the issue. Whiskey tango foxtrot assbag :|
Thank you! If you're not going to provide at least a portion of the code you're having trouble with and include comments explaining the rest, don't expect a whole lot of help! I'd say my assholiness comes out in /r/whowouldwin. I cite EVERYTHING I say to back it up, which granted, wikis aren't always the most reliable and I'm willing to take a counter point, but if you could give me a source before you argue with me, yeaaa that'd be greaaaat.
"Segmenting different sounds" is a broad topic. I'm sure there are plenty of Matlab programs that do that, but you haven't provided any specific information, so it's hard to answer your question.
This is not exactly a simple problem. Block off a couple of hours and Google 'optimal packing' and 'circle packing' then get to reading. There is a lot of material out there on the subject. Thankfully you picked an 'easy' permutation (circles in a rectangle) to cut your teeth. Most of it is going to center on stuffing as many circles of a given size (or sizes) into a given square, but there should be some material about fitting a specified number. Doing so in an even/symmetric pattern is going to prove even more challenging, but just getting them to fit to begin with will be a great start.
'Storing values in matrices' is a little vague, and pretty much describes everything that matlab does- what do you mean? The obvious storage solution is to store the coordinates in an n-by-2 array, where n is the number of stars; you can easily visualise it with scatter(array(:,1),array(:,2)). First order of business would be to define what 'evenly distributed' means- i.e. a cost function. I would suggest something like the mean sum of distances between all of the stars and the edges (for example, take star 1, use norm to determine the distance from it to each of the other stars and the nearest edge, sum them; take star 2 ..., then take the mean of those sums). You want to maximise that metric. A hacky but fun way to approach the problem would be to go genetic on it- make 100 different flags randomly, choose the best 25 based on your cost function, then produce a new 100 flags which on those 25, and for each of them, 3 variants where each star is jittered (moved in a random direction by a small amount- how far it's moved can be a constant or that can itself be random, probably normally distributed). Then pick the best 25, and so on. Run until you're bored. Then start a completely new batch of 100, etc. etc. A better (but still fairly slow and not necessarily optimal) way of doing it would be to pretend that all of the stars (and the sides) are particles which repel each other. For each star, determine the forces acting upon it from all of the other stars and sides (direction opposite to each other star, magnitude some function which is high for small values of distance and approaches 0 for large values of distance, maybe something along the lines of whichever magnetism equation it is which determines this). Then move them according to those forces, and repeat. Continue until they're not moving very much each time. Repeat this a few times with new random starting positions; once you have a few solutions you can check them against each other to see if they look the same!
The largest problem is a lot of curricula are centered on teaching basic CS type concepts using MATLAB. They focus on the absolute basics and don't cover the extensions and abstractions on them that end up making MATLAB actually useful. So you end up with a ton of people who 'know MATLAB' but write code like they are using any other language pulled out of a hat. Really and truly there is nothing wrong with using a stripped down subset of MATLAB functionality to get someone's feet wet with programming. There are significantly better options out there for doing so, but that is another debate entirely. But little care is given towards separating the 'training wheels' stage from the proper use and exploitation of MATLAB's features and strengths.
&gt; A hacky but fun way to approach the problem would be to go genetic on it Or just specify a cost function and use `fminunc` or `fmincon` to optimize the star locations. 
I'm sure there is a way to force it to do that, but that is much more of an "excel" function. MATLAB as far as I know does not like doing tables, it does "matrices" instead. Is there a reason you can't use excel for what you are trying to do?
Not necessarily just trying to kill two birds with one stone. I have a lot of data I need to process stored in files and was going to use matlab to do basic averages and standard deviation. Instead of moving data around I thought it would be nice to just do it all in matlab. I could always do my plotting in matlab and create a table else where. Just thought this format looked nice
If all you need is basic averages and std dev, consider using excel. The graphs are much easier to manipulate in excel too, unless you are just running a script in which case keep matlab. Also look into GUI for matlab, it might have an option to display options like that.
I'm definitely going to stick to matlab even if I can't get the table down there. Scripting will save me way too much time not to utilize matlab. The data I'm processing is stored in four separate files each containing results from 10 separate tests (10 results per test). Need to average the groups of ten and also find the standard deviation (which I know how to do) then graph the results. 
You're going to have to look into figure handle control. When you're plotting, adding legends, etc. MATLAB does a lot of it behind the scenes, but you can still address everything programmatically and accomplish the same task yourself. Follow MATLAB's documentation on setting up a [programmatic GUI](http://www.mathworks.com/help/matlab/creating_guis/laying-out-the-simple-programmatic-gui.html), along with how to [get](http://www.mathworks.com/help/matlab/ref/get.html) and [set](http://www.mathworks.com/help/matlab/ref/set.html) object properties. Check out the the documentation for figure(), axes(), legend(), and uitable(). It will show you how to create each individual object and how to create a unique handle for that object to manipulate it directly. While MATLAB gives you far more control once you know what you're doing, doing this in Excel is going to be much easier.
At the moment I'm not very efficient with matlab. But I'm trying to use it as much as possible to become more efficient and be able to tackle more challenging tasks. Would it be easier and quicker to just use excel yes but I'm quite alright taking a little more time to learn new things. Thanks for giving me a direction to look into 
Many thanks!
What does the error message say?
use backslash before asterisk for proper formatting edit: in reddit i mean
Reddit interprets \* as italics
It depends whether the s-function is written in C or Matlab, and if Matlab which version you're using. If you're using a level 2 Matlab s-function your Update method is going to get passed an instance of `Simulink.MSFcnRunTimeBlock` awhich is how you access the parameters, input ports, output ports and everything else. `doc Simulink.MSFcnRunTimeBlock` should give you lots of information on how to do that. Be sure to look through the parent class also. If your s-function is set up like the examples something like: param1 = block.RuntimePrm(1); param2 = block.RuntimePrm(2); The level 1 matlab s-functions and c s-functions are more complicated and should only rarely be used, but if you're using one let me know and I'll explain that too.
 function [y] = W(t) if (t &lt;= 28) % If time is less than or equal to 28 days evaluate this function y = 48 + 3.64*t + 0.6363*power(t,2) + 0.00963*power(t,3); else % Otherwise use this function y = -1004 + 65.8*t; end end If you want to multiply 3 by *t* you need to write `3*t` not `3t`. Also, you can vectorize this function so you don't need to use the `if else` blocks and can call the function on an array rather than one value at a time. function y = W(t) y1 = 48 + 3.64*t + 0.6363*t.^2 + 0.00963*t.^3; y2 = -1004 + 65.8*t; y = y1.*(t&lt;=28) + y2.*(t&gt;28); % use y1 when t is &lt;= 28 and y2 when t &gt; 28 end **Edit:** fixed some syntax.
edit: see responses, yay edits!
all right everyone. his code is actually this (taking into account that reddit formats the asterisk as *italics*): function [y]=W(t) if (t &lt;= 28) % If time is less than or equal to 28 days evaluate this function y = 48 + 3.64*t + 0.6363*power(t,2) + 0.00963*power(t,3); else % Otherwise use this function y = -1004 + 65.8*t; end end that means your function is correct, you're calling it incorrectly. tell us the error message and we'll help you.
true yet still not correct since the vector t doesn't have to be monotically ascending. you would have to wrap the whole thing in: [tc, order]=sort(t); ... y=y(order); and still have to concatenate. also, he needs to delete one "=" in the y1 assignment. it would be: function y = W(t) [t,order] = sort(t); y1 = 48 + 3.64*t + 0.6363*t.^2 + 0.00963*t.^3; y2 = -1004 + 65.8*t; y = [y1(t&lt;=28), y2(t&gt;28)]; % use y1 when t is &lt;= 28 and y2 when t &gt; 28 y = y(order); end
Yes I had an error, but I did intend to use addition -- not concatenation, which would mess up the order of elements. I've fixed it now. No, the first function (with the `if else`) will not work on an array. It will pick one of the two functions depending on whether *all* of the elements are less than or equal to 28, not pick a function for each element. 
your last assignment returns a matrix. not a list. imagine you have two 4x1 vectors. multiply one with the transpose of the other, you get a 4x4 matrix. that violates the other function definitions. [check here](http://pastebin.com/EtE1Y1ZK) EDIT: i have only tested it in Octave. Scilab does indeed have a different syntax but it might not be too different.
Can you paste the first 20 lines or so?
Take a cue from the current flag design, and just try different combinations of offset rows. The current flag has 6 horizontal rows of 5 stars, and 5 horizontal offset rows of 4 stars, for a total of 50. If you're lucky, some other combination will get you 51, 52, or 54. This reduces the dimensionality of the problem enough that you can loop over all reasonable values.
I cannot. I can't access the s-function code since it is not mine. 
I'm really confused then. I thought this was an s-function you wrote. Are you saying you want to access the parameters from *outside* the s-function? If that's the case then you can use `set_param` like you can on any simulink block. set_param('ModelName/BlockName', 'ParamName', new_param_value); The parameters for an s-function are called 'P1', 'P2', etc.
Well, MATLAB isn't recognizing the S-function in the traditional sense: &gt;&gt; get_param(gcb,'Name') ans = S-Function &gt;&gt; get_param('S-Function','Name') Invalid Simulink object name: S-Function
You're going to gain way, way, ***WAY*** more speed by doing this properly (vectorising it) than you will by finding something faster than mode (since no such command exists). Finding the item that occurs most often in a list is an O(n) operation. It is impossible to do without looking at everything in the list. This is precisely what mode() does. There is no improving on it. Your code as a whole is very confusing. I cannot make sense of it when pretending x and y are vectors nor when I pretend they are single values. Parts work with one, but not the other. It would benefit you greatly to step through with breakpoints to see what is happening. I'm 99% sure it is not doing what you intended or expect. Here is a vectorised form of what you stated was the problem. With 200 dice and 100,000 iterations it runs in 1.5 seconds. You didn't say how big your test case was, but given the flaws in your implementation I cannot imagine it being very large and still running in 10 seconds. Also, I changed your variable names because they were bothering me. Descriptive names people! They will save you a ton of headache. numDice = 200; %num of dice dupes = 10; %max num of duplicates iters = 100000; %num of iterations rolls = randi(6, iters, numDice); % generate all our dice rolls % find the mode and occurence frequency for each iteration [M, F] = mode(rolls, 2); % find the iterations where the mode occurs less than our duplicate threshold l = F &lt; dupes; % our score is the dice value (the mode) times its occurences, whenever % we broke the threshold the logical becomes 0, abuse that fact to set % score to 0 in those cases results = l.*M.*F; toc 
There is absolutely no reason for x and y to be vectors. The number of dice rolled and the threshold you use to determine scoring should be the same for every iteration. Otherwise you aren't doing a Monte Carlo simulation, you are just counting a bunch of random useless shit. Your system has to be the same for every single iteration. That is the entire point of Monte Carlo. Use a massive number of trials of the same thing to develop a statistical model describing your system. If you change what each trial is testing you've invalidated everything.
&gt; [mode, freq] = mode(rolls, 2); Talk about bad variable names...
If you want to test each iteration for multiple thresholds, then y being a vector makes sense. It still doesn't make any sense for x to be anything but a single value. None of that was part of your original explanation though ;) It does shed some light on your posted attempt though and makes it slightly less mystifying. Bumped you from two unnecessary for loops to just a single one. There may be some clever way to still avoid both of them, but I'm going to leave that as an exercise for you.
http://www.mathworks.com/help/releases/R2013b/simulink/slref/sfunction_dialog.png I am trying to modify the S-function parameters from the command window.
So get_param(gcb,'SFunctionModules') works to find the modules and I can write to that box using set_param... For some reason I can't do the same for the Name or Parameters boxes.
Here is what i have so far: %%Operation 1 %Polygon Vertices A=[-4 0] B=[0 -6] C=[6 0] D=[1 4] %definition of raypolygon polygon=[A B C D A] %% Operation 2 %Definition of a suitable plotting window % %calculate suitable window size as larger than the maximal values scale=1.1*max(max(abs(polygon))); %plot the window and make it square figure(2),clf,axis([-scale scale -scale scale]),axis('square') %lock the window for later use hold on %% Operation 3 % %enable fast plotting in the chosen window set(gcf,'DoubleBuffer','on'); %plot the rectangle plot(polygon(1,:),polygon(2,:)) %% Operation 4 %calculation for edges: E1 -&gt; E4 E1=A-D E2=B-A E3=C-B E4=D-C %calculation for normals using edges %N1 N1(1)=E4(2) N1(2)=-E4(1) plot(N1) My task is to create a polygon, and then make a ray bounce around inside of it, i know how to create the ray, and am currently stuck figuring out how to create the edge normals so that i can calculate the angle of reflection. 
Yeah, being in biology you wouldn't believe how often I try to iterate over `cell`. It is amazing that they don't at least give a warning for assigning over a named function in the path.
You can create two separate figures and call the figure handle before using the subplot function. For example, y=1 figAmp=figure(); %Create a figure and save the figure handle in a variable figPhase=figure(); %Create a figure and save the figure handle in a variable for i=1:8 figure(figAmp) subplot(2,4,y); plot(meanAmp(xSpec)) ... figure(figPhase) subplot(2,4,y); plot(meanPh(xSpec)) ... y = y+1; end Hope that helps. Edit: Also look into figure() for some cool options. You could use the 'Position' parameter to make the figures show up on different parts of your monitor. By default matlab puts all figures at the same position and you need to manually move them around in order see both figures at the same time.
Works perfectly. Thank you.
diff is a predefined function in matlab that operates on a vector and consecutively takes the difference between pairs of elements in the vector. It doesn't operate on functions, just vectors.
People don't pay for matlab? It's expensive.
Good to know that I could be of help. But there is no need to delete the post after it has been answered. If you leave the post undeleted it could help someone else who might have a similar problem.
Is there some alternative command that I can use to take a derivative in the function?
might i suggest using the function taylor, or using the help button? Generally provides better results.
Glad to be of help.
No i meant literally type in taylor series expansion into the help button. 
Although your code is a bit hard to follow (and I can't chomp through it on my phone) my first question would be why you aren't growing your shape labelled regions with (i,j+1) and (i+1,j) indices (unless shapes are always rectangular). Other than thought it is clear your code is either incrementing the label value before assigning it to the particular indices or reassigning it (which looks more likely). What if you run your code from the end to one ( i
Video and or images might be interesting because it might motivate students with smartphones to get into programming so they can take advantage of various data modalities like photo, video, accelerometer, and so on. 
The problem I have is I want to use the function. But the function is not working properly. I don't get an error but I get a different m3_1 value. It is working if I don't use the function but to please my teacher I have to shorten my program code (that function is often needed in my code). Currently I cannot solve this. I asked my teacher and he also couldn't.
&gt; h = 1e-05 &gt; Uzk = 565 &gt; pi = 3.1416 %should be alrdy defined in your MATLAB &gt; Phase = 0 %currently not used but planning on using it &gt; L = 2e4 &gt; C = 3e-4 &gt; R = 1 &gt; IL = 5.3764 &gt; t_z = [0.002 0.002 0.002 0.002] %it is a vector in my program but currently every value is 0.002 &gt; y3 = [511.1765 511.0054 510.8428 510.6898] &gt; y3I = 1e4 * [-1.7510 -1.6704 -1.5793 -1.4784] &gt; %m3_1 only holds 1 value. from above code: i runs through all t_z, y3 and y3I: m3_1 gets different result with variant A and B. (First, second, ... m3_1 value from variant A is different from first, second, ... m3_1 value from variant B. Issue is not first, second, ... m3_1 being different.) ------- thought knowing the value might be interesting if you want to reproduce.
you have to give all your inputs to your function to ode45 and the hold command opens a figure window.
.gz suggests a gzip format file to me. Maybe with a NIfTi file inside?
When you first define the function all the variables that aren't in the @() are bound to their current values. If any of them change in the file, the second version uses the changed versions. There are a lot of variables there so make sure they are all set to what you want when you declare your anonymous function..
Is this an image from an MR scanner? SPM is a free matlab toolbox you can use to download, view, and manipulate NIfTi images. 
In MATLAB, using the toolbox you downloaded: gunzip('file_name.nii.gz'); data = load_nii('file_name.nii'); size(data.img) Also, I agree, SPM is a good standard toolbox to use for nifti. http://www.fil.ion.ucl.ac.uk/spm/ 
download 7zip to extract the files
You seem to use `x_bar` and `xbar` interchangeably.
Try pdf = normpdf(position, expected_value, sigma_bar);
So get_param(gcb,'SFunctionModules') works to find the modules and I can write to that box using set_param... For some reason I can't do the same for the Name or Parameters boxes. 
Can you provide a sample from *xf*? Normpdf is not a fitting function but simply gives the probability density at any given value given a known population mean (mu) and standard deviation (sigma). If you want a "smooth" PDF, you just need to evenly sample the PDF. For example: popMean = 10; popSD = 4; randNormallyDistributedData = randn(20,1)*popSD + popMean; sampleMean = mean(randNormallyDistributedData); sampleSD = std(randNormallyDistributedData); X = -100:0.1:100; % "True" population distribution: plot(X,normpdf(X, popMean, popSD), 'r'); hold on; % Observed sample distribution: plot(X,normpdf(X, sampleMean, sampleSD))
Note: If you intend to use a normal distribution to model your data, keep in mind that there are a lot of assumptions, but the biggest is that your population is normally distributed. This is ok for some things, but can be an oversimplification for others (for example, radon: https://en.wikipedia.org/wiki/Radon#Accumulation_in_houses)
Given how you're using the loop a parfor would help. But you'll need the distributed toolbox.
Before doing any radical restructuring of your code, I would suggest using the [profiler](http://www.mathworks.com/help/matlab/ref/profile.html) to see where the bottlenecks are occurring. Right now it sounds like you're assuming that performance will be helped by removing the FOR loops, which may be the case, but you should verify that assumption before spending effort on rewriting too much.
My data passes the Kolmogorov-Smirnov test for normal distribution, 'kstest' function in matlab
You don't need the loop or the if. Just use logical indexing: vowels = word=='a' | word=='e' | word=='i' | word=='o' | word=='u'; word = word(~vowels); That's it.
For the 1:numFilters loop, what kind of filtering operations are you applying? If these are linear filtering operations, can you combine you filters via matrix multiplies?
oh sweeet, never knew about this. Thank you
&gt; what kind of filtering operations are you applying? im doing convolution, not sure if this is what you meant?
You don't need the @ if you use quotes. And I think you're sort of right about *t*. Except what ode45 requires (or so I think) is just the range in which it's evaluating. And here, that's *xspan*. Thanks though. 
I'm not even sure that's relevant here though. Because right now my biggest problem is that ode45 stupididly things rhs =[x(1) ; x(2)]; has 3 dimensions. And I have no freaking idea why. 
It doesn't sound like you need to use normpdf. You're just trying to find the PDF for your test data, correct? The shape of this curve will entirely depend on your data. If you do hist(xf), this will give you your general shape. You can normalize it, if you wish, but this is what it will look like. And if it's a small sample size (&lt;100-1000), it's probably not going to look like a standard normal distribution. To get a normalized PDF, you can do: [nelements, centers] = hist(xf); pdf = nelements ./ sum(nelements * (centers(2)-centers(1)); figure; bar(centers, pdf); If you really wish to normalize your positions (non-dimensional instead of cm), you can do this first: xf = xf ./ mean(xf); EDIT: Also, you can overlay what a true normal distribution would look like on top of your data. This will use the normpdf function. x_pdf = min(xf) : 0.01 : max(xf); % You can adjust this to get the resolution you want y_pdf = normpdf(x_pdf, mean(xf), std(xf)); hold on plot(x_pdf, y_pdf, 'r'); EDIT2: Changed the pdf line so that bin sizes other than 1 will work.
ah, that's because you pass x.2 in one of your element and it has two elements, so 2+1 = 3 you should specify an element or a reducing operation for that expression. Its your second element with the -E
Oh thanks. That fixed that but now my problem is I can't raise a non-square matrix to a power. And that makes sense, but if I can't use *x^ 2* or *x.^ 2* how am I suppose to square x? 
what mathematical operation do you really want there? You need a scalar returned from a vector (or you need to just specify one element of x)
You can probably speed it up several orders of magnitude by taking advantage of the fast-fourier transform to do your filtering operations
First, Why are you evaluating the PDF at each of your data points? You should evaluate them at each of the bin positions, since that's the graph you want to plot. Second, don't use the weighted histogram bin positions to define the expected value of your data. This is imprecise and depends on how many bins you use. You already set the expected value to 1, so just use that value, or if you must, recompute it the same way you compute the variance: expected_value = mean(x_bar); sigma_bar = std(x_bar); 
You should look into "bsxfun".
Please post what you have thus far. 
For normpdf, you would want to use the sample mean, which would be 1 if the sample distribution is normalized. And regarding your question about the the PDF function resulting in "extremely low and inconsistent numbers", I'm not sure what you mean? I'm assuming that you might be misinterpreting the PDF's y-axis to be the probability for any given value and this is not the case. The Y-axis is the probability *density*, not the probability. So, probability density functions can have very low y-values (&lt;&lt;1) or very high values (&gt;&gt;1). The important fact is that the area under the entire curve is 1. Keep in mind that any value on the (continuous) x-axis has an infinitesimally low likelihood of being selected. When using a PDF, the calculation of a probability is done by selecting an interval and integrating across the area. Basically, the area under the PDF curve between two x-values (e.g., 1 and 1.5) is the probability of a value drawn randomly from that distribution falling between those two.
Okay, here's the two cases %No Wheel for odd integer multiples of pi (Apogee pts), e=0.1, phi(0)=0.4% x10=0.4; x20=0; e=0.1; vspan=[pi:(2*pi):200*pi]; [v,x]=ode45('orbit1',vspan,[x10,x20]); plot(x(:,1),x(:,2),'.g','MarkerSize',10) %No Wheel for even integer multiples of pi (Perogee pts), e=0.1, phi(0)=0.4; x10=0.4; x20=0; e=0.1; vspan=[0:(2*pi):200*pi]; [v,x]=ode45('orbit1',vspan,[x10,x20]); plot(x(:,1),x(:,2),'.r','MarkerSize',10) function dx= orbit1(v,x); e=0.1; dx2=((2*e*sin(v))+(2*e*sin(v)*x(2))-(0.5*3*sin(2*x(1))))/(1+e*cos(v)); dx=[x(2);dx2]; I think I'm having problems because my step size is too big, but I'm not sure
Now please post what you have and take 20 seconds to format it so we can actually read it.
Use four spaces at the beginning of a line of code to fix your formatting.
I have it, but I broke it. I'll try to get that to you within the next 2 days. Thanks for the advice though! 
Excellent videos, thanks for the tips! I'm in dif equ now, so I've been trying to code what we're learning in class haha
Could you put this in the submission text?
It's already right above the textbox in bold. I've added it to the submission text too.
Do you have any data or measurements of friction vs velocity for a representative piston and cylinder? First characterize the friction, then figure out how to model it. What's the deficiency of coulomb friction? I am not familiar with piston friction. 
At least OP posted his code, an example call, AND the full error message. That's almost gold worthy around here....
I actually have a solution to an assignment in a modeling and simulation course dealing with friction simulation in Simulink. Send me a PM and I'll give you the PDF. It has some discussion around different friction types and implementations of these. You may find some useful stuff in there.
You need to linearize the equation by taking log on both sides to get the following. ln(y) = ln(alpha) + beta*x Now you can substitute the two (x,y) values to get two equations with two unknowns (ln(alpha) and beta). The final stage would be to express the two linear equations in matrix form and solve it to get ln(alpha) and beta. Hope it helps.
Please don't ignore the submission text. There's a very helpful hint in big, bold letters: put 4 spaces before each line of your code so it's formatted correctly. If this is too difficult, use something like [pastebin](http://pastebin.com/).
Sorry, first time posting here. Edited OP
Should you reset the variable *count* and *error* at each for-loop iteration (instead of once at the beginning)? randmat = 6.*rand(100,2); e = 10^-6; answers = []; telapsed = []; for i = 1:100 error = 10; count = 0; a = randmat(i,1); I don't know if that will fix you're problem, but it should help.
`Output` gets overwritten every time through the `for` loop. Also, `step` calculates the step response of your system, it does not iterate the system for a single step. This loop should place in `Output` the step response of the system as it is defined on the last iteration through the loop. I'm not entirely sure what you want, but I'm pretty sure that's not what you want.
So I had already moved the count function, totally slipped my mind to move error as well, good catch thanks. However, after doing so, while the amount of solutions I had became significantly more finite(from a ton of different ones, to mostly 2 or 3 different outcomes, which is good), I'm still left with outliers. Curiously, the outlier is now 50 orders of magnitude higher.
This is the answer. Without resetting 'count,' at the very least, your while loop will only run once after the first iteration of the for loop. Also, try not to use variable names that are the same as MATLAB functions ('error' in this case). It can make MATLAB do some confusing things.
Did you also move the initialization of the *error* variable?
Yeah, those were my results for after moving both error and count.
This should work for you. Essentially it creates a vector of the delta x across each interval with diff(f). Then it finds the average y value across that interval as shown in mean_y. Then the dot product of the two vectors gives you the resulting integral. mean_y = y(1:end-1) + diff(y)/2; integral = sum(mean_y.*diff(x)); I'm nor sure what you're trying to do with coefficients. With numerical integration you don't need any information about the polynomial used to create the discrete data points.
Look up the documentation for [polyfit](http://www.mathworks.com/help/matlab/ref/polyfit.html). While the way you have it formulated here may work with a small number of points, but if you have say, 1000 data points you're telling MATLAB to find a 999th degree polynomial with your function. I'm not sure this is what you want, and depending on the shape of your data it may not give you an accurate function. If you're trying to interpolate the data to make it uniformly spaced, you'll want to look at various [interpolation] (http://www.mathworks.com/help/matlab/1-d-interpolation.html) methods and decide if this is what you want to do with your data.
I tried that, as well as other break point error testing earlier, but I can't find a real pattern. Currently f1 is in the form of a = f1 and f2 is b = f2, so I'm going to try switching what the program is solving for, in hopes that my system of equations has easier to find roots in that form.
No go on that...
An approach could be to work on the while-loop first. Fix the for-loop to a single iteration: for i = 1 And then keep track of the error at each step of the while-loop: ... error_steps = nan(100,1); tic; while abs(error) &gt; e count = count + 1; f1 = (10-a^2)/b; f2 = 57-3*a*(b^2); error = f1-a; error_steps(count) = error; ... And then have a look at it: plot(error_steps) 
I'm actually thinking of running the state-space model directly within a loop. A = [...] x = [...] B = [...] u = [...] y = [...] C = [...] D = [...] Output = [...] %size 3 x n y = 1*(Ax + Bu) + x %initialize the first output at n = 0 Previous = y %store the current output value for n = 1:1:1000 y = 1*(Ax + B) + Previous Previous = y Output(:,n) = y if (y(:,2) &gt; Demand) q = 0 else q = 10000 end end
Thanks for all the help guys, it was much appreciated. I feel like my code is a little better now, but my project is due soon. I'll still be keeping tabs on this, because I am still really confused as to how I messed up this seemingly simple code so badly, but I'm done meddling with it for tonight.
And does that work? Also, you missed a `*` between `A` and `x` and `B` and `u`
Do you go to RIT? I did an assignment eerily similar to this....
UW. van der Pol, Fitzhugh, eigen values... these are all classic scientific computing algorithms, and are great for Matlab applications
a.) Can you give us the problem statement and then walk us through your thought process for the script itself? b.) What is the purpose of this part of your script? if abs(b) &gt; 100 f2 = randmat(1,2); end If it's what I think it is, I'm not sure it's doing what you want it to.
PM sent. Thanks.
I tried fixing it and I couldn't get it back to 100% So far, it's only able to play a single tic tac toe game over and over haha 
&gt; I've only defined the loops to calculate the value of the RHS or LHS at n number of points between a and b. Your for loops aren't doing anything. Take them out and you will get the same answer. If you're iterating i from 2 to n, you should probably use i in the equation somewhere. (sidenote: don't use i as a variable name, it will override the complex number)
I don't understand this "having my tspan input for ODE45 be an interval in steps of even integers of pi." Do you stop the integration and then start it again? Why?
On the "Home" tab look at the "Environment" section of the ribbon at the top. Click "Preferences". From the menu on the left select "Code Analyze." There should be a long list of errors and warnings with checkboxes for each option. Under "Aesthetics and Readability" re-check "Use of brackets [] is unnecessary." Welcome to Matlab. It's actually great once you get good at it.
Oh thank you, thank you, thank you. I'm actually really enjoying it. It's different from Mathematica in its own unique way. Of course, I can get my code written in Mathematica about 3 times as fast, but that comes with experience.
Have you looked into using the MATLAB object oriented language features?: http://www.mathworks.com/help/matlab/matlab_oop/learning-to-use-events-and-listeners.html I would look into using events and listeners.
I am defining the 10 numbers in a script as --&gt; c = 0 + 50*randn(10,1); &lt;--. . . What am I doing wrong???
1. Fix your formatting, no one is going to try reading that wall of text. They definitely aren't going to edit it so it will run. use PasteBin, Gist, or add spaces before your code. 2. "I'm having a problem" is an absolutely useless statement. We know you have a problem, the request for help made that clear. Tell us what the problem is. We aren't psychic and until you fix #1 we can't even run your code to try blindly guessing at the issue.
Short answer, you can't. Slightly longer answer, [you can...sorta](http://www.mathworks.com/support/solutions/en/data/1-16B8X/)
I'm sorry, I actually fixed it and got it running, should I post it up for others? Through Pastebin or gist of course.
Short answer: matlab -r &lt;myfile.m&gt; Will run the matlab file from command prompt without opening the matlab GUI. I would suggest trying matlab -r with no filename and see what it does (sorry, I don't have a Windows install available). Otherwise, try using matlab -h from the command line to see other possible options. Also, [this](http://zoomicon.wordpress.com/2011/09/22/launching-matlab-with-no-ui-headless-for-remote-automation/) seems like a promising place to start. It provides lots of nice command-line args to run with matlab.
Lucky Tobii Studio user then ? 
Just an average matlab user :)
I don't know much about the algorithms, but Matlab is perfectly capable of reading/writing most common image file types and doing all the math necessary to make and create the watermarks. It would certainly be possible to do with Matlab, but if you're looking for a pre-fab solution instead of writing your own, you might be able to find a package that already does this more easily with a more widely used (and free) language like Python or Perl, or even C/C++.
Thank you, I'm still in the research phase (actually my proposal is due Monday) and I'm having to find technical elements fast because my idea was largely based on law and ethics. I think prefab is okay if I can modify it or bend it to my purposes. Matlab is only being put forward as I know I can access it readily.
I am looking to embed a pixel pattern that is unlikely to spontaneously appear in level 0 of an 8 bit jpeg which I understand is more like noise and doesn't noticeably affect surface features of the image but can be searched for. My lecturer has said to investigate steganography as part of my research. edit: my terminology might be incorrect. I'm new to programming.
This seems to have decent reviews: http://www.mathworks.com/matlabcentral/fileexchange/3508-digital-image-watermarking
MATLAB is going to be one of your better choices for a quick implementation. That is a fairly basic technique as far as steganography goes and won't be terribly difficult to implement.
Thank you, good to hear.
Thank you.
Try setting the axis label 'interpreter' property to 'latex' and use standard latex syntax (don't forget the $). 
Use MATLAB's documentation. http://www.mathworks.com/help/matlab/random-number-generation.html
we did this as a final project in an introductory computer science class. they just change the RGB color values in the pixel one by one for a certain watermark. he hid a picture of dogs playing poker behind a famous painting just like in thomas crown affair.
Convert your cooling and heating time constants into constant vectors and plot those instead. e.g.: cooling_vector(1:length(time)) = cooling_time_constant; heating_vector(1:length(time)) = heating_time_constant; figure(); hold on plot(time, normalized_Tbead_2lpm, 'k'); plot(time, normalized_Tbead_9lpm, 'm'); plot(time, cooling_vector, 'b --'); plot(time, heating_vector, 'r --'); xlabel('Time [s]'); ylabel('Normalized Bead Temperature'); legend('Small TC Bead','Large TC Bead','1/e','1-(1/e)','Location','SouthEast'); hold off I don't know why MATLAB behaves this way, but this should fix your problem.
[Really?](http://i.imgur.com/LqC8a2m.png)
I had seen that, but when I run the code, I'm getting negative numbers. I can't have that. EDIT: god damnit, I got it. Thanks. Sorry, I'm an idiot... I really appreciate your help. 
I'm a fucking idiot. I got it. Thank you. Sorry to be such a burden. Was mis-typing one stupid thing.
It being introductory level is promising!
:) Programming is fun!
EVENTUALLY
Ah yes you're right, I didn't directly copy and paste from code. However this change doesn't correct the problem.
do you get an error or just a weird output for your label? You could try \theta. If it's not that, maybe it's the frac command. \theta works for me in the default interpreter.
You need to use the LaTeX interpreter for the more complicated stuff. Try this alternative xlabel('${\Theta} = \frac{T - T_{final}}{T_{initial} - T_{final}}$','Interpreter','Latex') Note the '$' at the beginning and end of the label and the setting of the 'Interpreter' property to 'Latex'.
That first one's hardly a matlab easter egg, more a maths easter egg... 
I don't know how to help you, but I wanted to let you know that your Imgur profile is set to private, so that others cannot see the pictures you linked.
thank you. You just helped me.
OP, what you are looking for is not a combination, but a partition. You are trying to break the number 25 up into at most 3 numbers. You will have to do some work from that point, which I could figure out for you if you want, but here is a nice function: http://www.mathworks.com/matlabcentral/fileexchange/24133-set-partition/content/SetPartFolder/SetPartition.m
This may sound ridiculously stupid, but I have no idea what a partition does. I read through the comments in the link you posted, but it just doesn't make any sense to me. The only things I have been "taught" are basic logic and basic loops (e.g. "if," "while," "for," "switch"). Also, apparently the code can be written in under 15 lines, which baffles me considering how long it has taken me to get absolutely no where. Thanks for the help though, I'll keep reading on partitions. 
No problem, I can help you here. A partition is any way to write a number as a sum of other numbers. For example, I partition the number 3: 3, 2 + 1, 1 + 1 + 1 You are asking a more difficult question. How many ways can we partition 25 into groups of 3 (or less correct?, you can get all 50 watt bulbs correct) numbers. Let's give a few attempts: 12 + 11 + 2 14 + 10 + 1 Now, there are lots of ways to do this, which is what SetPartition(n,k) does. It will create the list of partitions of the number into k parts. Therefore, to create this list for your purposes, you want to use: SetPartition(25, 1) SetPartition(25, 2) SetPartition(25, 3) Now this isn't the end of the story. There is only one partition of a number with one element, itself. This 25 can go in three spots, so as we count the outcomes, we need to multiply this number by 3. The partition of 25 into 2 numbers can also be split up into the different wattages. This, finally, is a combination. We send the 2 numbers to 3 positions to get C(3, 2) spots. Therefore, to get the total here we multiply length(SetPartition(25,2)) * C(3,2). Finally, the partition of 25 into 3 numbers has two different possibilities. First, all the numbers can be different, which gives us a permutation P(3,3) = 6. Therefore, if the numbers are unique in the partition, there are 6 ways to arrange the numbers. If they are not unique, there must be 2 the same (since 25 is not divisible by 3), at which point, we can only arrange the position of two of the numbers and the third is set. This gives us a combination C(3,2) (or C(3,1), whichever your prefer). There will be 12 such partitions (1 + 1 + 23, 2 + 2 + 21,..., 12 + 12 + 1). Therefore, the final count of partitions into wattages is: length(SetPartition(25,1)) * 3 + length(SetPartition(25,2)) * 3 + length(SetPartition(25,3) - 12) * 6 + 12 * 3 Now, this didn't account for the light bulb colors. To account for this, we have to add a new SetPartition for the lightbulbs. Unfortunately, I've got to head to bed, I'll try to code this all in the morning and get a solution.
I'm not sure exactly what you're trying to do, still, but I think a full factorial design of all the possible combinations would be a good place to start. (matlab command "fullfact") This let's you set up a design matrix for all of your possible combinations, and you can just reference back to that if you want to randomly sample from it, etc. bulbColors = {'clear','frosted','sunlight','natural'}; bulbWattage = [15:15:150]; numBulbColors = length(bulbColors); numBulbWatts = length(bulbWattage); DesignMatrix = fullfact([numBulbColors numBulbWatts]); numCombinations = length(DesignMatrix); Then, you can randomly pick out bulbs from the matrix using "randi" or something like that. If you picked out the 3rd combination in the design matrix, you can re-reference back to your original names... ColorChosen = bulbColors(DesignMatrix(3,1)); WattageChosen = bulbWattage(DesignMatrix(3,2)); 
In my opinion, I wouldn't bother with a book unless you are looking for a focused set of problems dealing with x. I would recommend looking at both [Project Euler](http://projecteuler.net/) and [Cody](http://www.mathworks.co.uk/matlabcentral/about/cody/).
I'm not so sure that would work. What the problem wants me to do to is find every bulb/wattage combination whose average wattage falls in the range of 50-75. My attempt at this was to find literally every combination of 25 bulbs and then remove those not in the range, as no possible combination can go unreported.
No Händel? load handel sound(y,Fs)
Code please: http://pastebin.com/
I added it to the description.
I just opened MATLAB to try the fire....nifty! 
If it's not available in MATLAB it's either niche or MATLAB is implementing the function in a faster way than that particular algorithm. Is the latter acceptable?
Anything which implies doing scalar access from a matrix, for example the algorithm for matrix multiplication (except that this one is already implement in MATLAB and in a better way than the "naive" version).
Not really, my goal is to show that for some case, you just can't use optimized Matlab built-in's (because it doesn't exist :P) and you have to use loops and scalar access from matrix (which is fairly slow in Matlab). Do you have an idea of an niche algorithm in mind ?
Not really. Maybe you could show how MATLAB doesn't natively implement int sparse matrices or something like that.
It really is pretty sneaky if you ask me. Of course YMMV depending on application specifics. Now FLOP/$ at the top end your best bet is still AMD for a workstation because the Haswell Xeons have only single CPU motherboards available. In this case 4x Opteron 6386 SE on a single motherboard put out 0.7 Teraflop/s for ~$6000. If you were looking for best FLOP/$ without caring about getting maximum computational power, it's hard to beat the Xeon 1270v3. 224 GFLOP/s for ~$300. That's 6 times cheaper per FLOP than the Opteron.
Where are you getting GFLOP ratings? I'm curious how this compares to a i7-4820k.. Anyway, either one of those intel chips is quad core. I liked the AMD because of the 8 cores (given I use the par. toolbox) but apparently, given their shared FPU, it wouldn't buy me anything.
Use scatter n times, overlaying each time using hold, where n is the number of different categories. You can change the marker with set, I think. You'd need to convert the array into a list of indices using find and ind2sub, I think. 
thanks, checked them out last night, cool. 
Thanks for the advice. I'll give it a try and see how it goes.
Really close, if you make three small changes it should work: 1. The inner loop, over columns, should start with the line "for C=1:columns". 2. You don't need the first fprintf() statement. 3. You should have a line after the inner loop, that prints a line break, which is the '\n' character.
[Here's] (http://stackoverflow.com/questions/15655835/flops-per-cycle-for-sandy-bridge-and-haswell-sse2-avx-avx2) a good summary of FLOP/cycle for common processors. Take the Cycle rate x FLOP/cycle x FPUs for floating point GFLOP/s. Important to note that you need 256bit FPUs for double precision. This means single precision (which uses 128bit) is double that performance. This is theoretical max. Real world performance will be slightly less or a lot less than this depending on how well optimized and designed the algorithm is. To hit max you will need to take advantage of AVX, FMA, and make sure you're not cache-starved (since memory throughput can easily be a limiting factor nowadays). I know MATLAB optimizes matrix math pretty well, but I'm unsure of how well it takes advantage of more modern features.
That );% smack in the middle of your textscan() call could be mildly problematic...
type doc quiver in the command line to get detailed help. You need to tell us the format of B for us to help with the exact code, but it will be something along the lines of: quiver(B(1,:,:),B(2,:,:),B(3,:,:),B(4,:,:)) xlim([-3,3]);ylim([-3,3])
You can run this code yourself by calling bulbs(1, [], [], 1, [])
Hi, I felt that I need to chip in and clarify a couple of things; the first thing you have to do is to justify based on your use case and your budget on what category you belong. If you are a home user or a causal play-around with technology then you could get away with a cheap computing machine; there is not much fiddling with such you won't really see a comparable difference when running normal workloads/data-sets. When I mean causal you could get a decent machine with "enough" computing power for most of MATLAB (or other) uses for around 700 $ (just the CPU, MB, RAM, GPU) if you are that kind of user. Now if you need a proper workstation and that includes precision, reliability and compatibility your budget has to go up... Those Xeon processors for example that you see, well they have an ECC capable memory controller which is tremendously useful in scientific computing especially if you have a huge amount of RAM (and yes... your RAM can get corrupt; FAST! even cosmic rays can corrupt your RAM and they are often [[1](http://stackoverflow.com/questions/2580933/cosmic-rays-what-is-the-probability-they-will-affect-a-program)]). Beside the ECC capability workstation/server grade chips are picked with precision and higher manufacturing standards because they are rated for 24/7/365 operation something consumer grade processors are not. They also run cooler using lower voltage which in turn affects your power bill, your AMD for example has a horrible performance per watt curve. The same goes for the other components of your system; unfortunately the thing is that when you are in the market for a workstation or a server usually the budget is twice the money of a "consumer" grade machine of roughly the same performance mainly due to the fact of the guaranteed reliability, advanced features (such as ECC, more CPU Registers etc) and most of the time a better &amp; extended warranty when compared to their consumer counterparts. Hopefully that clarified some things.
Believe it or not, MATLAB loves RAM and single threaded performance; it has many low-level and OS-specific optimizations that either stem from java's JVM or MATLAB's engineers themselves. valuable tools to determine machine performance are given in [here](http://www.mathworks.com/help/matlab/code-performance.html) by Mathworks themselves.
Your flair doesn't lie! Thanks. Worked perfectly. I was messing around with reshape but I couldn't quite wrap my head around it. 
I have no idea why this is. But how did you make this?! Is this line-by-line time estimation stuff in matlab or is it another piece if software? That's amazing! Edit: perhaps variable 'increment' isnt a single number or something and it gets confused? Maybe if you changed what type of variable it is, perhaps that may fix it
He's using doc profile A very useful tool for improving performance. As for why this line has such terrible performance, I'll have to test it once I get to to work and will edit my comment later on today. Edit: /u/xixor captured exactly what I concluded while tinkering with this operation today, so I unfortunately don't have anything else to contribute. If it turns out that this behavior is what you intend to do, perhaps you should discuss in greater detail the details behind the function you're trying to implement along with some sample input/output and someone may be able to provide you a suggestion to improve the underlying algorithm.
I think it is profile. Simply enter "profile on" and run your code. With "profile viewer" you can analyze your code. http://www.mathworks.de/de/help/matlab/ref/profile.html
It's not precised what's the increment variable, is it just a constant? I duplicated your code in my Matlab R2012b, profiled it, and didn't see the offending line taking that much time. Does it also stand out when working with smaller images ? Looks like the image you tested it on has a lot of pixels or you're doing it 200 times in a row, it's weird. It could be a memory issue with very large arrays. Check that no array are declared sparse (do a clear before anything).
And my company just moved to 2011b a year ago and evaluating 2012b and a lot of major projects are on 2009b. I think Matlab version adoption goes something like this. 1. Academia. No worries about backwards compatibility. All theoretical work. 2. Industry, Development. Slight worries about backward compatibility. But it takes a long time to get all of your internal tools updated so that they work. One of the biggest recent changes is they moved away from TLC (Target Language Compiler) to something newer (I think). 3. Industry, Production. You need to validate. EVERYTHING.
Still waiting for our license server to get upgraded, but I'm most interested in checking out the new tables to see if it's an improvement over cell arrays/data structures for mixed data types.
Matlab has a JIT compiler so that accessing variables from a for loop or all at once with an array of indexes take about the same time. Try out some timings with the "profile" command
I'm also not sure why that particular row takes so much longer than the surrounding ones, but one suggestion: It seems that what you want to do can be achieved much more easily with `hist3`.
It is a constant. It's 1/num_pixels because I'm building a distribution for pixel values and binning them.
If it's a constant, why are you looping? Why aren't you just applying that value to the matrix in the entirety?
I am iterating through the image arrays and, from them, generating a corresponding location in the joint_dist array based on the pixel values read from image_A and image_B. This requires me to iterate through those images to generate the increment location. When it's generated, I increment that location. If I could generate the locations without having to use a for loop I most certainly would. I couldn't think of a way that avoids them since histc wont work on joint values, to my knowledge. Otherwise I could just use the colon operator.
you can also use the "unique" function to find all the different values that occur at least once in a matrix. then loop through that, finding the number of pixels that match that.
I've been playing with them a bit and it seems to be an improvement over struct arrays, at least for my data structures. There is some basic functionality that seems to be missing though like collapsing columns that contain vectors of the same length into a matrix. c = {false, [1 2 3]; true, [4 5 6]; true, [6 8 10]}; t = cell2table(c); t(t.c1, 'c2') ans = c2 _________________________ 4 5 6 6 8 10 Works like you would think, but you can't call `mean(t(t.c1, 'c2'))`. **Edit:** Actually it looks like you can do `mean(t.c2(t.c1))` but that only works if the rows all start out with the same number of columns. &gt;&gt; c = {false, [1 2]; true, [4 5 6]; true, [6 8 10]} c = [0] [1x2 double] [1] [1x3 double] [1] [1x3 double] &gt;&gt; t = cell2table(c) t = c1 c2 _____ ____________ false [1x2 double] true [1x3 double] true [1x3 double] &gt;&gt; t.c2(t.c1) ans = [1x3 double] [1x3 double] Here `t.c2(t.c1)` gives a cell array that would have to be flattened before calling mean on it, so the full line becomes the rather unsightly `mean(cell2mat(t.c2(t.c1)))`.
At my workplace we use [GNU Octave](http://www.gnu.org/software/octave/) for image processing. We have some algorithms for automatically detecting certain kinds of lesions in MRI scans, and we have several dozen Octave processes constantly humming in the background running our code. We work with data from multiple sclerosis and Alzheimer's disease. We also use Octave for minor statistical analyses, but for anything fancier than mean() and std(), we use R.
We have an electronic system that records data in a main test data directory that we then have matlab parse, extract data, and store the data in multiple arrays on which Matlab performs statistical and mathematical analyses.
After `figure` add a line `hold on` to plot both on the same axes. That said, I don't think you're solving the ODEs correctly. Since `u` and `v` depend on each other, you probably want to solve them as a single system of equations. 
I worked in a neuroscience research institute; my work involved using matlab to process dMRI scans and try to tell the difference between healthy and diseased brains with a few machine learning algos. I never realised how uncommonly brilliant matlab was for array manipulation until I tried using something else. I'm sure you can get around it, but as all of my programming experience so far is in matlab, my first instinct is to solve problems with n-D arrays, which a lot of languages don't even support natively (I'm looking at you, python). I now realise I totally missed the point of this question as I'm not a professional in industry. Sorry.
I do simple models and simulations of physical processes, small scale agent based modeling, and prototyping of algorithms before coding them into more appropriate languages for large scale modeling. 
The entire code here loops through ImageA and ImageB at the same pixel location (i), where you do a histc(), then test for equivalence to find a '1'. What is it you're trying to do? Because this looks bizarre. Also, how are you able to get a histc() when you are getting, what appears to be, 1 value from ImageA and ImageB?
 x = a + (b-a) * rand(1,N);
http://www.mathworks.com/help/matlab/math/floating-point-numbers-within-specific-range.html
Thank you, i have to read and practice more on matlab i guess.
Yeah, that's for real numbers, what i want is for vectors. It still works if i use vectors instead of reals though. Thanks.
Most basic math operations work with vectors and matrices. You should really consider working through a tutorial.
Could you elaborate on "appropriate languages" (I assume you mean compiled)? I have just started using Fortran with a super computer on my campus for some research and am still pretty novice to the process. 
I work in high tech electronics. Mainly in a firmware and embedded software area. We use matlab/simulink for modelling and development of algorithms (a lot of image processing, filtering etc). Then we use a model driven engineering flow to implement those algorithms on FPGA or embedded processors. Our whole tool flow is centralised around Matlab.The great thing about matlab/simulink is having a common environment for development, implementation and verification.
Making control software to run our hardware. Directly flashable onto our ECMs.
Thank you so very much. Your help has been phenomenal. I was able to use your code to learn the logic needed to solve such problems. Needless to say, I learned a lot. As it turns out, the problem was not supposed to be completed. But rather to test how far we would go before giving up (a lesson in endurance I guess). Thanks again, so very much.
For each i in image_A and image_B, I extract their pixel values. I run histc on each of those values independently to see what bins they fall into in a bin vector defined by the user(e.g. [0 128 256]). Then I use these two values to determine which index they'd fall into jointly in a bin matrix as opposed to a vector. I was under the impression that histc could only take in a vector of bin values and return a vector. I need a matrix for binning of joint values, so I worked with histc to make that possible as I didn't see it supports binning on joint values.
[Conditional color for line plots](http://www.mathworks.com/matlabcentral/fileexchange/37725-conditionally-colored-plot-ccplot) May or may not be exactly the solution you need, but should be a nice start.
Yes, i'll do that. It's hard for me to think in "matlab mode", i'm so used to do a little bit more "fors" in python and a lot more in c++ :P
Please add four spaces before each line of code so it displays properly. Reddit mangles things otherwise. This makes it (nearly) impossible to copy your code to see what is going on or to just read it in place. Nothing really jumps out at me as being glaringly wrong. There is no need to use logspace() to setup your frequencies. semilogx() is the proper function to generate the style of plot you want. My only guess is you typed in the equation for Af imporperly (misgrouped some terms).
Use MATLAB to implement machine learning techniques to tease apart neural differences in cognitive-task manipulations.
Correct me if I'm wrong here: * image\_linear\_A and image\_linear\_B are both 1 x _N_ vectors, wherein _N_ is the num\_pixels. * loop for i = 1:_N_ * histc() is performed on image\_linear\_A(i) isn't that a histogram of _one_ element in your vector? Also -- doesn't the image processing toolbox have this kind of stuff already? 
How would I do that? I'm not very good with matlab, I never really learned how to use it.
It's pulling elements from both. Line 10 gets the *bin vector* for image_A and line 12 gets the *bin vector* for image_B. The result of these two lines both is a vector of zeros and a single one at the index where the value was binned. These bin vector indices are then treated as row and col indices, respectively, for the bin *matrix* I instantiated called joint_dist which is of size bin_num*bin_num and which I increment by 1/num_pixels so that all values sum to 1 (the matrix is a probability distribution). There aren't any built-in functions for this that I know of. There is one on MATLAB central though.
Look into eval() for the "understanding input". If you have a string, i.e. x = '1+2+3' Then eval(x) returns 6, which can verify it adds to the sum of the dice. You can use strsplit() to break the string into it's parts, separated by the '+'. I'd use an array of 0s and 1s for each player to track the numbers, i.e. first turn they roll 9, decide to use 2+3+4, resulting matrix would be board1 = [1 0 0 0 1 1 1 1 1] When sum(board1) = 0, player 1 wins. To roll the dice, use rand(1,6) twice. Displaying the dice would depend on how you want to interface your game. You could create a full gui, and create images of the 6 dice sides (1 dot, 2 dots, etc.) and display the images based on the results of the rand(1,6) rolls. You could display the players boards, etc. Or you could probably do it command line, if you wanted... Hope this helps!
Ah, I had commented that out to see if it was HeaderLines causing the problem.
I tried using importdata but it was failing due to "mismatched matrix dimensions" or something similar.
 figure; hold on; plot(t,u(:,1)); plot(t,v(:,1)); or, as rlrl mentioned: figure; hold all; plot(t,u(:,1)); plot(t,v(:,1)); 
That is pretty helpful and thank you. However I have another question, I sorta changed my code from what it is what I posted previously, however I was thinking of having it when the sum of w (where w is the numbers the player inputs when they get a correct answer, so if the dice gave them a 3 and they type in let's say 2, 1 sum of that would be 3). However I realized that the sum of numbers 1:9 is 45, so if I make it when sum(w) = 45 disp('You won'). However I am not entirely sure on how to do this. I tried an if statement if sum(w) = 45 disp('You won!') end However this does not appear to work. Do you have any ideas? I am sorry to bug you, I am afraid I am quite stupid with this program. 
I'm still fairly new at this myself. I still have a lot to learn, so this is good practice for me, as well. :) You may want to stick with the technique of using '+' instead of ',', as it allows you to use eval(). If you use ',' you'll have to parse through it and figure out what the numbers are, etc. That said, the code you have is very close. '=' is used for setting variables. '==' is used for comparisons. Change it to if sum(w) == 45
I do apologize however the '+' and ',' technique was just there to clarify that those are separate numbers was thinking of having it being entered in with spaces between, but I dunno, would that make it worse? Also your last part, I am not sure if you noticed, but you did not complete that code. I don't mean to be rude by pointing that out, but I am quite curious as to what it is haha. Thanks again for helping me out with this! 
May be due to the space between the name and the units? You'd have 4 columns on the top. :/ edit: Maybe you can specify more headerlines in your original textscan(...) call. 
what may I ask do you do?
Double click the x-axis. A window will pop up with options. Click "logarithmic."
I think the issue is with files1. I am on my phone right now, but try using files1{i} Instead of files1(i)
Set a break point on the `load` line and make sure your variables are set correctly and it still works from the command line. I suspect you have a [scoping](http://msenux.redwoods.edu/Math4Textbook/Programming/VariableScope.pdf) problem.
What didn't he go over? The Matlab or the cypher stuff? It seems like the cypher part is supposed to be the hard part, but maybe I'm wrong. What is your Matlab problem? Not to be cheeky, but did you read the assignment? I've never taken a cryptology course and the instructions seem pretty straight forward.
Yes I read the assignment. This is an introductory Matlab course, and I have no experience with programming, and all the other homeworks have been very straight forward. The matlab stuff is what is giving me trouble, because I'm assuming you copy and paste the cipher stuff from the pdf. "I'd recommend starting with the shift cipher example from class (\shift.m", posted with the other in-class examples). You'll need to make a number of modi cations:" is bullshit, as this is a different professors assignment that he took. 
How many data points is the 3D brain? How much RAM does the computer that you are running on have? 
Well, if you really are stuck with the Matlab part, you need to post what you have tried so we know what you're stuck on. Otherwise, you're just asking us to do your homework for you, which won't help you and isn't a great use of our time. Yes, most of us can do this assignment in three lines of code (or one if we don't care about readability), but that is not what your professor wants nor will it benefit you next week when the assignment is challenging assuming you *already* know how to solve this week's.
atmospheric science research data processing and visualization
High Performance Computing (HPC) for full-scale code is done in C, C++, or Fortran for virtually any computationally intensive program, usually in concert with MPI (Message Passing Interface).
I recently had an MRI scan of my brain and asked them for a copy of the scan. Looking in MATLAB it looks like it is 240x240x175 points. Maybe jordigh will be using higher resolution scans though.
alternatively, you can just use normal "plot" and run "set(gca 'xscale' 'log')". Then "xlim([20,20000])"
Did this work out for you? I was bored, so implemented the above; my code iterates repeatedly through the 13 different marker types and randomises the colour for each category. Also, TIL you can get find to output subscript indices instead of linear indices. This would have saved me literally several lines in the past; there was me, using ind2sub like a chump...
This is a fairly typical resolution and comparable to the resolution that we use for most scans.
My role is mostly in writing support software for most of the company operations. I was initially hired by this company in order to make Octave work for them, and I release my Octave patches publicly. I have written a few support image processing algorithms for the company. For example, [the initial implementation of bwlabeln for Octave is mine](http://sourceforge.net/p/octave/image/ci/c8354d61ecaa18b597389d72317b309c0110459c/log/?path=/src/bwlabeln.cc), although others have improved it since then. I also write software for handling the flow of our data pipeline and for creating summary reports of our operations. The latter is more in Python and Perl.
If you're just getting started I think you want to check out Arduino and Simulink. It's pretty easy to do. An arduino is ~30 bucks and has a built in LED you can make blink: http://www.mathworks.com/discovery/simulink-target-hardware.html 
XPC is now made by a different company. SpeedGoat. And yes, I have tried it (actually tried it A LOT, speedgoat even made us custom hardware) but unless you need a RTOS you can get away with cheaper hardware and fewer licenses. 
You might also be interested in the instrument control package from Octave. An example of what it can do: http://www.dwengo.org/node/486 http://www.youtube.com/watch?v=d1If8XOL73c&amp;feature=youtu.be
This is /r/matlab not /r/domyhomeworkforme. We are happy to help with your homework assignments, but you need to post your code showing what you've done and explain what's not working or where are stuck. Just posting your assignment will get your thread deleted -- like this one. If you would like to post a Matlab problem as I just described, feel free to create a new thread.
OP, you need to do a few things here. You are entering the plaintext as a string, so you need to treat it as such. Therefore, you need to write plaintext = input('Enter some text', 's'); You need to carry out a similar procedure for the shift. Then, letters start out their numerical values at 97, so in order to shift by an amount, you want your new letter to be equal to letter + shift - 96 (that is if you want to count a as a shift of 1, otherwise, do letter + shift - 97 and a will keep it the same) Then, it is poor form to reassign the index variable letter inside the loop. Create a variable newLetter to concatenate to the ciphertext: newLetter = letter + shift - 96 if ... ciphertext = strcat(ciphertext, char(letter)) 
My friend also told me about ARM. I have just read that MATLAB supports ARM through C/C++ code generation. What is better to learn/use in future?
This is an interpolation problem that can be solved in various ways in Matlab. Here's my take: % create random data precip = rand(72,144,156); % create simple grid xIn = linspace(0,1,size(precip,1)); yIn = linspace(0,1,size(precip,2)); zIn = linspace(0,1,size(precip,3)); % define output grid. note that the 3rd dimension is identical xOut = linspace(0,1,180); yOut = linspace(0,1,360); zOut = zIn; % define interpolant gi = griddedInterpolant; gi.GridVectors = {xIn, yIn, zIn}; gi.Values = precip; gi.Method = 'linear'; % regrid the data precipInterp = gi({xOut yOut zOut}); % test first matrix against resizem testPrecip = resizem(precip(:,:,1),2.5,'bilinear'); display(sprintf('Max deviation from resizem: %s', max(max(1-(testPrecip./precipInterp(:,:,1)))))); Note the default method for resizem is 'nearest', which is also accessible for the griddedInterpolant class.
cheers man for pointing me in the right direction
It's ok, I figured it out in the end. You were right in a way - needed to use '.*' and '.^' as well as use log10 instead of just log!
Ah, I hadn't noticed that it's actually tabs. I didn't realize it until I actually opened it in Notepad++ instead of just Notepad.
I'll try that when I get a chance. I'm not sure what textscan does with any "extra" stuff on the same line.
for the first question i posted, here is what i have done.... im doing engineering and one module is programming so i'm very inexperienced and rather unfamiliar with some notation and language etc. http://gyazo.com/60fcd09e87ff5be1e6d012b08996089d
Can't you just loop through the 156? resized_precip = zeros(180,360,156); for n = 1:156 resized_precip(:,:,n)=resizem(precip(:,:,n),2.5); end Might be slow though...
And what have you tried? 
Well, the instructions say to write a function. function [output1 output2 output3] = nameOfFunction(input), where input consists of your book prices, and the outputs are the three values you're asked to find. *edit: sorry, missed a bracket.
you could use the "find" function to locate the position of the max/min in your array 
I am now thinking about using the "sort" function then multiplying the whole thing by this matrix: Z = [0 0 0 0 0 0; 0 0 0 0 0 0; 1 1 1 1 1 1; 1 1 1 1 1 1; 1 1 1 1 1 1; 0 0 0 0 0 0; 0 0 0 0 0 0]
Please, for the love of floating point, use four spaces at the beginning of each line to format your code. I've tried to fix it below, but there's a good chance something got screwed up. cost_friend=0; cost_you=0; price=76 if(price&gt;100) cost_friend=cost_friend+price; else cost_you=cost_you+price; end fprintf('The cost of your friends books is %d\n', cost_friend) fprintf('The cost of your books is %d\n', cost_you) total_cost=cost_friend+cost_you; fprintf('The total cost is %d\n', total_cost) You want a function, so you "input" multiple values to the function by passing a vector to the function argument.
But it can't be... :( I think that I may have it figured out now actually, I just feel like there is probably a more efficient way of doing it though.
SOLVED! I figured it out, then repeated it for the next 5 pages of the Excel sheet! Here is how I did it: http://imgur.com/VamI1Bu.jpg
http://www.mathworks.com/matlabcentral/fileexchange/8382-chaotic-generators-demo
Totally non general though. Replace: DiverScores = Z .* DiverSort; with: DiverScores = DiverSort(3:end-2,:); Then you don't need the Z array, and if your data ever gets any bigger you'll still be OK. If it gets much smaller your existing "drop top and bottom two" logic will break down and you'd need different code. Also, you can do: CompetitionScore = DiverSum * DiverDifficulty'; *note the * ', this transposes one of the vectors and performs the dot product to calculate the sum you want in one step. 
I do like the idea of getting rid of the Z array. I think that I will use: DiverScores = DiverSort(3:end-2,:); Thanks for the advice! But I need both the score totals and the competition score to be outputted into the command window, so I don't think that i can use the modification to CompetitionScore. But I will keep the technique in mind for the future! 
Please sketch in Paint or on paper (and scan) what you want the result to look like.
Gah, so close! Try using sort then copying out everything but the top 2 and bottom 2 rows. Or alternately assigning the top 2 and bottom 2 rows to be [] which effectively removes them.
min() and max() have multiple sets of return values (as do quite a few other matlab commands). One set contains not only the actual value, but also it's index location. The issue you'll hit though is you cannot easily remove arbitrary items from every row and have MATLAB collapse your matrix by 1 along that direction. Instead you'll have to loop over every row/column, remove the item, then append it to a new matrix. At the end you will then have what yuo need. Now your issue is going to be having a nasty nested for loop, one to swipe items out and one to iterate multiple times since you need to remove four items but can only do at best two at a time. Since order seems to be unimportant, sorting and slicing is going to be the neatest and easiest method to use.
For publication quality figures I always end up exporting into Adobe Illustrator and then doing my final layout. 
This is what I would do, without knowing of any N-Dimensional resize functions. OP might also try imresize() if s/he has the Image Processing Toolbox.
I am not aware of any Control Design Toolbox for Matlab, so I'm not sure what you're talking about. Did you mean Control System Toolbox? Regardless, that tutorial only requires Simulink as far as I can see, so you should be fine provided you have Matlab and Simulink. The student version of Matlab comes with Simulink by default if I recall correctly.
There is a toolbox called [Simulink Control Design](http://www.mathworks.com/products/simcontrol/) that adds some functionality like linearization and frequency response estimation to Simulink. OP: you could always use the [`linmod`](http://www.mathworks.com/help/simulink/slref/linmod.html) function (which doesn't require Simulink Control Design) to linearize your model and then do a `bode` on the resulting state-space system you get. There may be smarter ways to do this but that's the first thing that comes to mind.
The target hardware support packages use code generation under the hood. It would be similar to how support with ARM would work. These packages make it easy and cheap for people to perform complicated (and often expensive) tasks where actually reviewing the code isn't required. The technology is all similar. You should really figure out what you want to do, what interests you and go from there. If you're interested in DSP you will have different requirements than control system development. Mathworks now has a MakerZone that may help you get some ideas: http://makerzone.mathworks.com/
Why not just this? function f = hfun(t) f = 2.13*t.^2 - 0.0013*t.^4 + 0.000034*t.^(4.751); if f &lt; 0 f = 0; end Also, use `else` for mutually exclusive options. You're probably passing NaN or something to the function and NaN is not less than zero, nor greater than or equal to zero.
That doesn't seem to work, the function still dips below zero when I try to plot it. This is what I'm doing in my other file, so maybe this is where the mistake is: clear all; clc; t = [0:0.01:70]; h = hfun(t); figure; plot(t,h,'b-')
it is because you are passing in a vector to the function. Do this: function f = hfun(t) f = 2.13*t.^2 - 0.0013*t.^4 + 0.000034*t.^(4.751); f(f&lt;0) = 0
Nope. Defining your own script and putting it somewhere in your path is just as easy. I use cc.m to close &amp; clear everything.
Override clc with your own custom version that takes an argument to determine if it does vanilla clc or your custom version. Best of both worlds. Edit: In hindsight I'm completely 100% wrong :( MATLAB's wacky prioritizing and overloading rules won't let you get away with doing what I suggested. Added that tidbit of knowledge to my ever growing list of absurd and annoying quirks. [See this almost useful portion of the docs](http://www.mathworks.com/help/matlab/matlab_prog/function-precedence-order.html) for a not quite thorough enough breakdown of the selection rules.
One way to do it without for loops. p_len=length(p); temp = sort(p); % replace this line with p=sort(p); thanks matuba! div_P=min(find(p&gt;q)); A1=p(1:div_P-1); A2=p(div_P:end); For your code, close off the values inside the loops, eg: A1(end+1)=p(i); And in between the two ends, do this: end A1 A2 end
One step further: A1 = p(p&lt;q); A2 = p(p&gt;=q); Edit: Also, your code is borked now that I look at it more closely. You sort the data, then operate on the unsorted copy under the assumption it is sorted. 
I understand nothing of the code you wrote, so i'm guessing i'm way off writing anything like that, but I will try to understand it at least. As for your solution to my code, i've already tried that and countless other things without it working. If I do what you said it prints: ---- seperate(p, q) A1 = 1 A2 = [] A1 = 1 2 A2 = [] A1 = 1 2 A2 = 4 A1 = 1 2 A2 = 4 5 ans = 1 2 ----- So it gives me back A1 and A2 for every i, and ans = [1, 2] which basically is A1. The perfect solution would be if the function outputted the 2 vectors, but it doesn't do that at all. If the code worked as it should wouldn't the output be ans = [1, 2] [4, 5]
I have made a simplified sample of one of the figures I am meant to use, I have used gimp to illustrate more or less what I want to do. [Imgur link](http://i.imgur.com/W9g1HcJ) This legend was made with [columnlegend](http://www.mathworks.com/matlabcentral/fileexchange/27389-columnlegend) , but it does not seem to be very friendly with subplots... 
If you see my other post, simply adding ; to the A1 and A2 makes the function print: ans [1,2] In other words it gives out 1 vector. I just can't get it to give me back 2 vectors.
I think there is a small disconnect between whatever version you posted for us and some of your edits along the way to trying to fix. I took what you posted and made the following two minor change: added a ; to the assignment to suppress the crazy output, and edited your function definition to use A1 and A2 rather than A and B. This is the result: Code: function [A1, A2] = seperate(p, q) A1=[]; A2=[]; for i=1:length(p); if p(i)&lt;q A1(end+1)=p(i); else A2(end+1)=p(i); end end Test case: [y, z] = seperate([1 9 3 6 2 7], 6) Output: y = 1 3 2 z = 9 6 7 
Yup. first time trying to get out 2 different things, so the way I went about getting my answer was all wrong. I just wrote seperate(p,q) when I should've done what you did: [A1, A2] = seperate(p,q). Thanks alot. 
That is simply brilliant :O 
No problem. You should seriously consider the two-line version I posted above in reply to elducky. Logical indexing is insanely handy!
I don't really understand. Is that imgur link artificial or real data? 
You could write your own clc.m and then use the [`builtin`](http://www.mathworks.com/help/matlab/ref/builtin.html) function to call the original `clc` whenever you need it (something like `builtin('clc')` ). Maybe not ideal, but it's good to note that shadowed built-in functions aren't lost forever.
I think you are going to have to manually do that with an [annotation object](http://www.mathworks.com/help/matlab/ref/annotation.html). Sounds like a pain in the ass, but definitely doable. 
That is exactly what I am doing
Thanks! I was trying gscatter without getting exactly what I needed. Currently, I have a high RMS values (200-300); which is expected for what I am currently doing, but thanks so much!! I will try this tomorrow and see what happens.
that data itself is real-ish, it is not exactly the data I am going to use but something I cooked up in a different experiment. The legend in that figure was created with a the columnlegend function and I used Gimp to paste on the location I need to have it
That sound incredibly painful. Now I am kinda regretting using matlab for this, apparently python's matplotlib would have been a better choice. sigh... I am not looking forward to re-writing the whole script in python 
Yeah, I derp'd a bit. Thank you for helping me!
Thank you both!
As matuba says, function [A,B] = separate(p,q) A = p(p&lt;q); B = p(p&gt;=q); end is the best way to go. Logical indexing is one of matlab's greatest strengths and will save a lot of time and lines once you get to grips with it! Let's have a look at what it actually does. '&gt;' is a conditional operator (along with &lt;, ==, ~= etc.), so matlab knows that any statement with that in it is a question. p &lt; q produces a logical array (i.e. ones and zeros) the same size as p, with 1 (true) if p&lt;q, and 0 (false) everywhere else. So for p = [1 2 3 4 5], q = 2.5, p&lt;q returns [1 1 0 0 0]. Then you have logical indexing. Instead of telling matlab to pick out an array element by where that element is, you can pass it a logical array of the same size, and it will pick out any elements where the corresponding logical array elements are True. So, when p = [1 2 3 4 5], p(logical([0 0 1 0 0])) = 3. The combination of the two means it's very easy to do tasks like this! Other examples include picking out all nonzero values, a = p(p ~= 0), or picking out values in one array which correspond to nonzero values in a different array of the same size, a = p(r ~= 0).
the closest I can think of is using [str2func](http://www.mathworks.com/help/matlab/ref/str2func.html).
Another note: to append an element to the end of an existing vector, you can do A = [A newElement]. The same can be done with any two arrays you want to stick together. It does mean you need to be mindful of whether it's a row or column vector, though- the column form would need to be A = [A; newElement]. You don't want to do this too much, though: what matlab does is it assigns a fairly small amount of memory to a new array. If you keep adding elements to it, then it outgrows this space, so it copies it to a new, bigger space. But if you keep adding to it, it'll have to copy it again: this can make it very slow when you're growing an array by a large amount. To avoid this, you can pre-define the size of an array by making an array full of zeros or NaNs (I prefer NaNs, but they're a pain in some other languages)- if you're not sure how big it'll get, ballpark a maximum size. Then iterate through the elements, filling them one at a time, and when you're done trim off the rest. For example: aBigNumber = 1000; aSmallerNumber = 50; array = nan(aBigNumber,1); i = 1; while i &lt; aSmallerNumber array(i) = i; i = i+1; end array(i:end) = []; %this makes empty and deletes those elements Recent versions of matlab will remind you to pre-define the size of your arrays rather than adding to them iteratively.
ah, I didn't know about builtin(). Thanks!
Something like X(a &lt; X &amp; X &lt; b) = c?
I came here to say this, and to further point out that a lot of these are built in demonstrations that actually are documented. 
To solve it, you can use fsolve and an anonymous function: fsolve(@(x) c-x*tan(x), initial_guess) Because it's transcendental, it will return the solution nearest the initial guess. 
u/drinkwell 's solution looks fine, but another more flexible possibility is: arrayfun This applies a function to every element of an array. Up to you what that function may be.
You are over complicating things. There is no need to change to a new directory to make a folder in it. Just use relative path names. Since your code is already running in "{whateverpath}/user/researchwork" you can use mkdir("./plots/newones/{string with identifier}") to make the directory. The "." tells it to start in whatever the current working directory is and work from there. Added bonus: there is really no need to check it already exists based on your code above. Asking MATLAB to make a directory that already exists just produces a warning, no harm is done. You are reusing the directory if it exists rather than taking some other corrective measure, so just blindly go for it to begin with. The extra check is largely worthless.
Thanks for the help! I totally forgot about the "." and what it does.
Don't forget about his annoying counterpart ".." that takes you up a level.
This was amazing! I just got around to doing this today (I know, I said I would a month ago..). I had to fiddle with your positioning in order to a) get everything sized right and b) get the right plots in the right "subplot indices". One more question that hopefully you can help with, how can I make a general title for the whole 2x2 subplot. I'm looping 4 times, and each time I generate a subplot('pos'[posvect]) I'm also pinning a title to it. But I've saved room at the top for my *Grand Title*... Any ideas how? ED: Never mind, found something that will work: http://www.mathworks.com/matlabcentral/newsreader/view_thread/153708
It's displaying that because you're telling it to create a cell array of cell arrays. What you want to do is access those strings directly (see matlab's documentation [here](http://www.mathworks.com/help/matlab/matlab_prog/access-data-in-a-cell-array.html)) to concatenate them together (see matlab's documentation [here](http://www.mathworks.com/help/matlab/ref/specialcharacters.html) for the difference between [] and {} for concatenation), and there are a few ways to do it. The easiest would be to change your second to last line to: x = strjoin([p q r],' '); Another method could be: x = [p{:} ' ' q{:} ' ' r{:}]; Or even: x = sprintf('%s %s %s.',p{:},q{:},r{:});
 doc 'polynomial fit' and doc 'identify points'
wut daaaaaaa fuq is this shit. aaaa dam what da numbas on top fo. what they be teaching yall class d's days 
For your first problem: figure;axes; [x,y] = ginput(10); plot(fit(x,y,['poly',num2str(numel(x)-1)]),x,y) This will work for up to ten points. Hit return to plot fewer points. I can't be bothered with your second problem. As someone who is openly lazy, I'm sure you can relate.
You can do it by convolution, using the [Discrete Laplace Operator](http://en.wikipedia.org/wiki/Discrete_Laplace_operator#Implementation_in_Image_Processing): sig = sign(img); h = [1 1 1; 1 -8 1; 1 1 1]; z = conv2(h, sig); z = z &lt; 0; z = z(2:end-1,2:end-1);
amusing for someone called /u/allthenerdythings seems you missed one out take your own advice &gt; Also, quit being in denial about "being an adult". Our parents won't pay for your stuff anymore, and you need to be more independent. 
Perfect. That was almost a 10x speed improvement.
As far as I can tell, the best answer you can get from that formula, with given V, q1 and q2, is a ratio of r1:r2, which would have many solutions for the coordinates. How exactly do you calculate the coordinates from the radii?
Are you saving the workspace when you are done? If so, deleting the variables will reduce the file size. Other than that, I don't really see any point in deleting variables unless they're very large.
yeah im saving it to a workspace so other scripts can load it
My only concrete habits are: - Making sure to comment thoroughly (especially if someone else it going to augment it). - Setting my format at the beginning of my mfiles (format compact, format long, format short, etc.) - close all; at the beginning of each mfile that produces a lot of figures - to close all figures - and clc;clear all; to clear out values. Especially handy when debugging and are going to be running your script repeatedly. edit: not sure that's exactly what you're looking for, sorry.
I'm on my cell so I can't check this, but my 1D convolutions are much faster if I do them by multiplying in the frequency domain. Is this true for a 2d convolution?
If you're using output values in other scripts, then you should definitely look into rewriting your script as a function - this will be faster and less prone to mistakes than saving the variables to disk and re-loading them in subsequent scripts. Like /u/nn_ylen pointed out, this will also eliminate the need to explicitly clear your intermediate variables.
Well... there is a problem with the "problem_4a_fcn" which you do not show. Recheck the code inside that block
Yeah, we're going to need to see whole the error. Also, why is it trying to compile an S-function?
Here is the fcn http://imgur.com/EMoAeqF Edit: the IVP problem shown is wrong. The equation is the same but the initial conditions are y'(0)=-1 and y(0)=1
[Here is the function](http://imgur.com/EMoAeqF) And here is the error Making simulation target "problem_4b_fcn_sfun", ... /Applications/MATLAB_R2011a_Student.app/bin/mex -c -O -DMATLAB_MEX_FILE -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../simulink/include -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../extern/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/mex/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/debugger/include problem_4b_fcn_sfun.c /Applications/MATLAB_R2011a_Student.app/bin/mex: line 305: gcc-4.2: command not found /Applications/MATLAB_R2011a_Student.app/bin/mex: line 1041: gcc-4.2: command not found mex: compile of ' "problem_4b_fcn_sfun.c"' failed. gmake: *** [problem_4b_fcn_sfun.o] Error 1 
Well, you don't have GCC installed. However I'm unsure what you're trying to do such that you need GCC. Are you trying to compile the model?
No, I'm just trying to run the simulation. It then hangs for a bit and this error comes up. The equivalent solution without the use of a user defined function creates no error when the simulation is run. [It can be seen here for reference](http://imgur.com/Rczc3r8). The thing is for this assignment I have to use both methods using simulink as well as ode45 in a driver file.
I have to use both as per my hw assignment. What exactly is gcc? Could it be not installed because I am running matlab on a mac?
No, GCC is what you would use on a mac. It's a compiler. And there are other "use Matlab code" blocks. Try to use that one. Actually paste your homework information because I can't believe that the teacher would make everyone install a compiler for their respective OSs just to complete an assignment.
I think it's automatically trying to compile your file as C code, as you named it .c. The picture you showed of the source code makes me think you're still writing matlab, and you need to name it .m at the end...
[Here is the assignment](http://imgur.com/17svp00). The issue I'm having, as you know, is solving the de's in problem 4 using embedded functions due to the error I get.
First thing: you've misspelled studentaverage as "studentaveage" on line 4. At what point do you try and save to a file? I don't see that in your code.
I'm not sure where you're seeing that I saved the code as .c and not .m. I certainly don't see that when looking at all my files.
Telling us the actual error would make giving advice significantly easier, but off the top of my head here are some problems I'm noticing (all assuming that is a direct copy/paste from what you are trying to run): You first for loop creates a variable name studentaveage, the next loop operates on studentave**R**age. Emphasis mine. Secondly, those for loops are not doing what you think. I am assuming x is an Nx3 matrix holding all the scores. If so your first loop is only taking the average of two grades, not the three you mentioned. And you are clobbering the value computed at each iteration so in the end you only have the final value. The second loop is exploding because it is using an undefined variable (see above). Bonus: it won't work anyways for the same reason as above, it is clobbering the value computed each time. For the third loop I'm not sure why you are again trying to iterate over all the original grades. When comparing the averages you aren't telling it which student to compare. Your assignments to status of pass and fail are trying to assign some other variables value. Those variables don't even exist! Try status='pass' to make it an actual string being assigned. Also the space in 'disp (status)' won't generate any errors, but is ugly and should be fixed ;) The largest problem is you don't need these loops at all. This could all be done with vector operations. I would still highly recommend you take each of those loops and just look at the data being produced at each step. It will help you understand what is happening and why it is not what you want. As for some actual assistance, consider the code below: scores = randi(100, 10, 3) studentAverage = mean(scores,2) classAverage = mean(scores(:)) passorfail = studentAverage &gt; classAverage First generate a 10x3 matrix of random integers (this would be your score import). Each row is a student, each column is a specific quiz. Take the mean across each row, this is for each student. Take the mean of the entire dataset to find the overall quiz average. Final, find which student is above the average. This gives a logical array showing which student passed or failed. I'll let you take it further to generate the nicer output you want. Edit: I see you posted some more code in reply to el_matt. I'm not going to try to decipher what should be happening since it is mostly based on a borked approach above and I still don't really know what your exact issue is other than "it broke somewhere" Take the above snippet, modify what you've done, see if it helps, then reply again with the new stuff and a more specific request for help (ie- an error message)
Oh, sorry. I didn't copy the whole thing in. Here it is: x=csvread('quizGrades.csv'); for i=x(:,2:3) studentaverage=mean(i'); end for y=studentaverage(:); classaverage=mean(y); end for i=x(:,2:3); if studentaverage&gt;classaverage status=pass; disp (status) elseif studentaverage&lt;classaverage status=fail; disp (status) end end studentid=x(:,1); status=studentaverage(:,4); str=[studentid(status),repmat(',',size(data)) num2str(data),repmat(char(10),size(data))]; fid=fopen('quizGrades.csv'); fprinf(fid,'%s',str') fclose(fid) edit quizGrades.csv
[Built-in functions that support GPU acceleration](http://www.mathworks.com/help/distcomp/run-built-in-functions-on-a-gpu.html) [Toolboxes that support GPU acceleration and/or parallelization](http://www.mathworks.com/products/parallel-computing/builtin-parallel-support.html) NOTE: That second link lists both GPU acceleration and parallelization (multi-cores or nodes). fmincon is part of the Optimization toolbox. From the looks of it there is no GPU support, however it can be split up to run on a cluster.
You could code your fitness function, if it is a custom one, to use GPUarrays. It may be possible to call a parallel optimization solver and have each worker connect to an available GPU via SPMD
Strings are stored as character arrays in matlab. You can access each element by index, e.g. s = 'abc' with s(1)='a', s(2)='b', s(3)='c'. Dirty method, but if you really need this result returned, initialize a cell array with the length of the string and populate it with a for loop. If you can though, try to avoid this with whatever you're doing.
You need to install GCC as /u/DStoo said. MATLAB Function blocks generate C code that gets compiled to a MEX file, even for simulation. If you don't want to install GCC, you need to try using the Interpreted MATLAB Function block instead.
I ran into a similar problem a while back with MatLab R2011a. It could be that you need to install or just locate a compiler for MatLab to compile the embedded function. First, in the command window type "mex -setup" and see if it gives you any options for compilers. If it doesn't or gives you an error when you select one, try the following: 1. Uninstall all versions of Microsoft C++ redistributable, Visual Studio, and MS SDK. 2. Install C++ 2010 Express and then reboot. 3. Install MS SDK 7.1 and deselect the C++ install option (I had issues with the iso so you might want to use the online installer) I got it working doing this but your mileage may vary. Also there is a list of supported compilers for different versions of MatLab on the Mathworks site. Edit: Just noticed you're on Mac. Disregard then but I'll leave this here in case someone else has issues on Windows.
For starters you need to add an "end" at the end of your function to terminate it. I am fairly confident that will fix your problems.
If it's a matlab function, name it .m, not .c. Then and an "end" command to the end of that function. Then it should work. 
I didn't put the end because I used the user defined function block and matlab, which normally adds "end" to a user defined function, didn't. That being said I already tried to add "end" to see if that would fix it and it doesn't. As for ".c" I didn't do that. It is not a normal user defined function but rather a user defined function block within simulink. I named the file "problem_4a_fcn" and as you can see since it became "problem_4b_fcn_sfun.c " matlab must be adding "_sfun.c" to the end of the function name somewhere internally because I didn't do that nor do I have access to that file.
Damn, ok then. Also, do you know how I would convert a string let's say 'x' to just a variable x?
weird. OK. Then install GCC and see if that works. 
Yeah, that's it. But you probably won't have much luck installing it from there. [Here's a link that seems to describe the process](http://www.mkyong.com/mac/how-to-install-gcc-compiler-on-mac-os-x/). I'm not a mac user, so I don't know for sure. 
I installed it but I still get the errors: /Applications/MATLAB_R2011a_Student.app/bin/mex -c -O -DMATLAB_MEX_FILE -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../simulink/include -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../extern/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/mex/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/debugger/include problem_4a_fcn_sfun.c /Applications/MATLAB_R2011a_Student.app/bin/mex: line 305: gcc-4.2: command not found /Applications/MATLAB_R2011a_Student.app/bin/mex: line 1041: gcc-4.2: command not found mex: compile of ' "problem_4a_fcn_sfun.c"' failed. gmake: *** [problem_4a_fcn_sfun.o] Error 1
Looks like I led you wrong with gcc. Matlab doesn't work with it anymore. Sorry. Here's the info: http://www.mathworks.com/support/compilers/R2011b/maci64.html Looks like you'll need to install apple Xcode. https://developer.apple.com/xcode/
Thanks for the info. I installed Xcode and restarted matlab but still am having the error. This is one of the things I dislike about matlab is that sometimes I spend more on something basic than I do on the "hard" part of an assignment. Making simulation target "problem_4a_fcn_sfun", ... /Applications/MATLAB_R2011a_Student.app/bin/mex -c -O -DMATLAB_MEX_FILE -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../simulink/include -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../extern/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/mex/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/debugger/include problem_4a_fcn_sfun.c /Applications/MATLAB_R2011a_Student.app/bin/mex: line 305: gcc-4.2: command not found /Applications/MATLAB_R2011a_Student.app/bin/mex: line 1041: gcc-4.2: command not found mex: compile of ' "problem_4a_fcn_sfun.c"' failed. gmake: *** [problem_4a_fcn_sfun.o] Error 1
A quick google search led me to this article: http://www.mathworks.com/support/solutions/en/data/1-OAMYBZ/ This is why I hate using apple products for scientific stuff.
That info actually kind of helped. I actually have 2011a although I'm still getting errors but they are much less now: Making simulation target "problem_4a_fcn_sfun", ... /Applications/MATLAB_R2011a_Student.app/bin/mex -c -O -DMATLAB_MEX_FILE -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../simulink/include -I/Applications/MATLAB_R2011a_Student.app/toolbox/stateflow/stateflow/../../../extern/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/mex/include -I/Applications/MATLAB_R2011a_Student.app/stateflow/c/debugger/include problem_4a_fcn_sfun.c /Applications/MATLAB_R2011a_Student.app/bin/mex: line 305: gcc-4.2: command not found /Applications/MATLAB_R2011a_Student.app/bin/mex: line 1041: gcc-4.2: command not found mex: compile of ' "problem_4a_fcn_sfun.c"' failed. gmake: *** [problem_4a_fcn_sfun.o] Error 1
Yeah there is. I just found out they're having a similar windows version of the same problem on the school computers. I'll try that. Thanks for all your help.
It's still the same basic error. The only relevant line is the last one: gcc-4.2: command not found. If you followed the instructions on all the links (install Xcode, install command-line tools from within Xcode, edit the mexopts.sh file) then I don't know what to tell you. Maybe try to download an earlier version of Xcode. 
Pretty sure if you just installed XCode things would be better. It's free; you don't need to pay for it.
Ok I installed GCC. Still getting the error. Maybe matlab doesn't "know" I installed it? Is that a possibility?
The reactors are all the same? I.e. V is a constant for all reactors? Or is it the total volume of the reactors? And do you know n? 
The reactors all have the same V so V1=V2=V3=Vn, and I'm supposed to come up with a function that can solve for any value of n, but i need specific solutions for n=5, n=10, and n=50
&gt;On the side, please tell me there's an easier/better way to do this. freq=5000 samplerate=48000 wavelength=floor(samplerate/freq) binstring=[0 1 0 1 0 0 1 1 0 1 1 1 0 1 1 0] packedmat=binstring'*ones(wavelength,1); y=packedmat(:)';
Try thinking about it like this: if you knew V, could you write a function to find n and a(i)? Or if you knew V and n. 
Can you open a terminal, type gcc, hit enter and see what happens? What about gcc-4.2? If those don't work, you need to install command line tools from within XCode or from developer.apple.com. Instructions are here: http://stackoverflow.com/questions/9329243/xcode-4-4-command-line-tools
If i knew V, wouldnt it be a matter of writing out a coefficient matrix and using mldivide to solve for my values of a(i)?
"clang: error: no input files"
I think the squared term keeps you from using linear methods like matrices. But you know a(0), so you could calculate a(1) easily, right? Quadratic formula or fsolve. Then you can solve for a(2) and so forth. Point being, write a function to take V as an input, and return the value of a(n). Then use fsolve on that function to solve for V (since you know what a(n) should be) . Only tricky part is how to pass n as a variable to the a(i) function without it being directly passed to the function. I'll let you figure that out (hint: Google passing extra parameters matlab). At least that's how I'd approach the problem. I'm sure there are other ways. 
Is that from gcc-4.2? That means it's installed and exists. Did you run "mex -setup" from within MATLAB?
Also, Xcode is installed and I've confirmed that the command line tools are installed as well. Do I actually need to use the command line tools? If so how do I use that to get gcc on my comp? 
You typed 1 or 2, and the output from mex -setup is?
Don't I need values of V to solve for each successive a(n)? I'm sorry, this problem has me very confused. Are you saying create a global V from like 0:1000, then graph my equation so I can see where my zero is at?
You might need to edit mexopts.sh to point to the correct gcc. At this point it would literally be faster to find someone near you to set it up for you; it's incredibly inefficient to do this over reddit. For example you've posted the error message from mex multiple times, but not once have you actually posted the _entire_ message. It scrolls very far to the right.
I copied and pasted it into the comments several times. I see your point though. I'm appreciative of all the help you've given me. I'll ask my professor although I don't have a lot of hope that she'd know how to fix it. I really like her but she's kind of incompetent with regards to this class.
Oh, yeah you need to edit mexopts.sh most likely. Again, it would be easier for someone to actually take a look at your computer. Also, in the future pastebin is the place to copy/paste code to.
oooh. Good to know. I've never used pastebin but I'll check it out. Thanks again I really appreciate you taking your time.
eval() takes a string and evaluates it as if it were a command. For example evalstr = 'x = 1+1;' eval(evalstr) x returns x = 2. This is a very powerful, if ugly, tool when combined with sprintf().
You can add whitespaces between each character with sprintf('%c ',x) %the space is vital! then use strsplit as you have above. Although my matlab is saying that strsplit doesn't exist :s Out of interest, why do you want to?
Note that arrayfun is just a shorthand for looping through every element, so it's slow. Use vectorised code where possible.
mex -setup
Did you start xcode just once and accept the TOS? Happened to me not that long ago...
I realized I let you slightly wrong in the last comment. The outlet_conc function should return the difference between the desired outlet stream and the calculated outlet stream. Then call that function with V = fsolve(@outlet_conc,initial_guess)
oh ho, I see you creeped! It's true that I was relying on reddit here (and I did get everything done, so thanks!) But I'm the type of person who thinks 2 steps ahead in my grand plan of life, so I'm already sick of classes and getting ready to work next semester as a co-op =P
I did. Still not functioning :(
My solution: x = 'abcdefghijklmnopqrstuvwxyz'; y = cellstr(x(:)) y is a cell array with one character in each cell. To access a character, use: z = y{1}
Writing x=[x x x x] is a perfectly valid way of replicating your vector. A slightly 'cleaner' method would be repmat(x,3,1) but that is going to more or less do that exact same thing internally.
You should read more about matrix indexing. It allows you to do things like: &gt;&gt; x = magic(5) x = 17 24 1 8 15 23 5 7 14 16 4 6 13 20 22 10 12 19 21 3 11 18 25 2 9 &gt;&gt; x(2:4,2:4) = 0 x = 17 24 1 8 15 23 0 0 0 16 4 0 0 0 22 10 0 0 0 3 11 18 25 2 9 &gt;&gt; x(2:4,2:4) = [1 2 3; 4 5 6; 7 8 9] x = 17 24 1 8 15 23 1 2 3 16 4 4 5 6 22 10 7 8 9 3 11 18 25 2 9 Once you understand what is happening here, you'll be able to accomplish what you want in a single line of code.
try this: [i j] = meshgrid(1:400); r = sqrt((i-200).^2+(j-200).^2); a = zeros(size(r)); idx = 50 &lt; r &amp; r &lt; 200; a(idx) = r(idx)/200; If that does what you want, then try to step through it and understand what each line does.
You can save the workspace to a MAT file with the [`save`](http://www.mathworks.com/help/matlab/ref/save.html) function, but the individual lines of code executed from the original scripts aren't saved in the Command History (assuming the scripts were run by typing `scriptname` at the prompt and not just copy-pasting their contents).
That isn't an infinite loop. It will be a single iteration. Things still won't work after making that 'fix' due to the botched conditional and improper assignment of his 0 case. Every time that 'else' fires he is going to clobber everything stored in A up to that point.
OP wants a 2-d grid, not a single vector. You also can't do a compound conditional like that. And no definition of r at each point to wrap things up.
You get absurd amounts of spam in the command window because you aren't suppressing the output of your assignment inside that if statement. Every iteration it is printing out the entirety of that matrix. There are numerous other things broken, but they've been pointed out (in varying degrees of correctness) below so I'm not going to repeat them. I would advise you to read garblesnarky's post below. His answer is correct and an example of how to properly solve your problem.
OP wants a grid containing a ring, you're giving him a vector showing a single profile across the ring. That's a fairly significant difference.
This is not really a programming problem, so it would be a better question for /r/probabilitytheory or /r/math. Moreover the problem is not really well defined - "random" is not a probability distribution. Think about why the process is random. What is the source of uncertainty here? That will give you a better idea how to model your problem. There are a number of ways how you could implement a "random" distribution that satisfies your criteria, but they would all have different properties, so you really need some further restrictions... for example, just distributing 50 items every day will be perfectly within your constraints, but it's probably not what you were thinking of.
I would start with talking to Mathworks support. Aside from that, I would look around here: http://undocumentedmatlab.com/, and even send an email to the author of that site.
&gt; Anyone use Target Language Compiler to compile to custom chips/devboards? I've done it with XPC and I've looked into writing some TLC code. &gt; Anyone written a .tlc file for a new platform from scratch? I would strongly recommend against this unless you happen to be the manufacturer of the board. Writing a .tlc file for an entire platform is going to be no small task and is terribly documented.
I've used it with XPC, Arduino and our own custom boards at work, but the EE/CS majors did all that heavy work. ST has released stuff for their STM32F4 chips: http://www.st.com/web/catalog/tools/FM147/CL1794/SC961/SS1533/PF258513, however it doesn't work with the GCC tolochain (which I was hoping to use). And I do plan on being the "manufacturer" the board, of sorts. I plan on making a engine control module for my car (sort of like MegaSquirt), but I'll be starting off with the STM32F4discovery. So while it would be for a 'whole' platform I didn't plan on making it completely agnostic as I planned on Pin 1 being ADC even though it could be ADC, UART, etc. There's another company that makes the [waijung blockset](http://waijung.aimagin.com/). I haven't figured out how they fit into this, other than they have a very complete set of blocks that support a limited number of STM32F4 chips. But all of their functions and hooks are .p code so it's protected. However I also did want to make it run NuttX or ChibiOS instead of just the 'periodic interrupt' that it does do.
r=hypot(i-200, j-200); is a bit cleaner and in some numerical edge cases, better
I think this could be a brute force sort of method: You could generate 1500 uniform random numbers, then scale them by 30 and ceiling them so that you get integer values 1-30. These can represent days of distribution for each of the 1500 products. The amount of product distributed each day can be found by a histogram with 30 bins. Get the number distributed each day and check with find if any daily distributions are greater than 60. Determine how many times that occurs and the days they occur from another find. Pick the last 61+ ones, and draw a random day for those again for different days by doing a range selection. You may end up with a while loop that checks whether you don't go over your daily max distribution, but that should be the basic solution to your problem.
Good suggestion.
 D = [fliplr(conv(A,fliplr(data(2,:))','same')); fliplr(conv(B,fliplr(data(2,:))','same'))]
I'm assuming you want y as a vector. You need to set successive entries in y to the next value for the solution. What you're doing is treating y as a scalar.
F10 - step over F11 - step into
I think your problem is ill posed. What do you want your algorithm to do if there is a cluster bigger than 10 nm?
DBSCAN or OPTICS edit: http://en.wikipedia.org/wiki/DBSCAN http://en.wikipedia.org/wiki/OPTICS_algorithm --- dbscan.m: % DBSCAN - provide this function with an array of point coordinates (pts), % a cutoff distance (eps), and the minimum number of points % required to declare a group as a cluster (minPts). % If minPts = 1, clusters of size 1 will be included in the output. % % Ester, Martin, et al. "A density-based algorithm for discovering clusters % in large spatial databases with noise." Kdd, 1996. % % http://en.wikipedia.org/wiki/DBSCAN function clusLabel = dbscan(pts, eps, minPts) c = 0; [m,n] = size(pts); visited = zeros(m,1); clusLabel = zeros(m,1); for p=1:m if visited(p)==0 visited(p)=1; neighbours = regionQuery(pts(p,:), pts, eps); [a,b]=size(neighbours); if a &lt; minPts clusLabel(p) = -1; else c = c + 1; [visited, clusLabel] = expandCluster(p, pts, neighbours, c, eps, minPts, visited, clusLabel); end end end end function [visited, clusLabel] = expandCluster(p, pts, neighbourPts, c, eps, minPts, visited, clusLabel) clusLabel(p) = c; [m,n] = size(neighbourPts); for q = 1:m if visited(neighbourPts(q))==0 visited(neighbourPts(q)) = 1; neighbours = regionQuery(pts(neighbourPts(q),:), pts, eps); [a,b] = size(neighbours); if a&gt;=minPts neighbourPts = [neighbourPts; neighbours]; end if clusLabel(neighbourPts(q))==0 clusLabel(neighbourPts(q))=c; end end [m, n] = size(neighbourPts); end end function reg = regionQuery(point, pts, eps) d = sqrt(sum((point(1) - pts(:,1)).^2 + ((point(2) - pts(:,2)).^2),2)); neigh = d&lt;eps; reg = find(neigh); end
Out of curiosity, did that yield any performance benefit?
Heun's method (among others) is for numerically solving ordinary differential equations. The solution you get from these methods is a vector of points describing the solution curve which satisfies the original differential equation. What is the equation you are solving? &gt; If I only want the definite integral from x(1) to x(end), (which should be just one value, right?) do I need y to be a vector? That topic is unrelated to Heun's Method, but if you are interested, what you are describing is [numerical quadrature](http://en.wikipedia.org/wiki/Numerical_integration).
No problem.
There's an r/octave for this purpose. You seem to be using macports, so you should also use macports to install Octave packages. So try instead "port install octave-struct".
It works for me. Do you have the ribbon minimized? There's an arrow on the top right that lets you minimize/maximize it (or you can double click on a tab)
For any programming or coding that you do, it is imperative that you COMMENT YOUR CODE. When commenting, describe what that particular line will do in terms of action (i.e. adds two vectors for use later) instead of saying something like, "vector a + vector b". No duh that two vectors are being added, tell me why! I can't tell you the number of times I have been asked to modify someone-else's code, but I couldn't because they didn't tell me what they were trying to do. COMMENT, COMMENT, COMMENT!
Try doing the same command but with a sudo in front: sudo port install octave-struct
Don't settle with knowing how to do something, always insist on knowing WHY. Not just "why am I computing this?" but "why am I computing it in this particular fashion?" There is almost always another way to do it, and 95% of the time that way is SIGNIFICANTLY better. This will be true for the rest of your programming days no matter what language.
As I've been learning, I've found it helpful to sketch out my program flow on paper and then figure out how to make it happen in the programming language of choice. The simplest method I can think of for this problem is to iterate through your string and compare n-letter chunks (where n is the length of your search string) to your search string. Alternatively, you can iterate through your string and find where a letter is the same as your first letter. If you get a match, see if the letter after that matches the second letter in your search string, and so on until you've matched the whole thing. Depending on the spirit of the problem, one approach may be more appropriate than the other.
This is more practical then other suggestions and maybe more boring but learn the various ways of using cellfun and your matlab days will be happy ones. e.g. cellfun(@(x) x{n},function(cell)) 
Doing all these single comparison operations and tracking everything is severely over complicating the problem. Looking at n-letter bits of your main string for your search string is vastly more efficient. Take each n length substring, subtract whatever you are searching for, then sum the result. If it is 0 you have a match. Anything else is not a match and you can move on. Type casting FTW! Or you can be boring and just do a plain comparison which is effectively the same and probably a tttiiinnnyyy bit faster (unless you have some absurdly long strings in which case it will be appreciably faster).
No, you are not learning Matlab by learning linear algebra. I would start by learning the syntax of Matlab and general programming before you go any further into simulation. Matlab is like a calculator, you should probably learn how to use the calculator before you start doing advanced calculus with it.
I have a written a function that does essentially this. Unfortunately, mine was a little different because there was also a temporal dimension. Basically, in each time frame, I computed the centroid of points. If any point was greater than the threshold distance from the centroid, I removed it then recursively called the function again with the new list of points. This continues until all points are within the threshold distance of the centroid. By the way, could you (or anyone) please explain to me like I'm five how K-means works? I just discovered it, but the help documentation isn't making a lot of sense to me. Thanks :)
Here's a quick little implementation I did. string1 = 'hello'; string2 = 'asdwcqwhelloewqdhellofwqdwdwhellehelloc'; index = []; % Iterates through string2 for fittable words. for mover = 1:(length(string2)-length(string1))+1 % Cuts out the same length word as string1 from string2. tempStr2 = string2(mover:(length(string1)+mover-1)); % If they're the same, keep the index. if (sum(tempStr2 == string1) == length(string1)) index = [index mover]; end end index = 8 17 34 Here's a trace: tempStr2 = asdwc tempStr2 = sdwcq tempStr2 = dwcqw tempStr2 = wcqwh tempStr2 = cqwhe tempStr2 = qwhel tempStr2 = whell tempStr2 = hello index = 8 etc etc... I just 'slide' string1 past string2. If there's a complete match (adding logical indexing) I keep the index. Pretty simple!
Learn about logical indexing and vectorised code. It's the thing matlab does which is unique, and is necessary for decent code. 
For some operations, the only fast solution is to write a MEX file. Also the guy who made the [lightspeed](https://research.microsoft.com/en-us/um/people/minka/software/lightspeed/) toolbox has some [tips](https://research.microsoft.com/en-us/um/people/minka/software/matlab.html)
While I agree that MEX is sometimes the answer, the utility of switching to a MEX file depends entirely on the quality of your compiler.
Well, gcc is pretty good and it runs on every platform that MATLAB runs on, so we're not limited here unless the user is too lazy to install gcc.
While gcc is great if configured correctly, the default installation -- especially on Windows -- is not. I have nothing against gcc, but just having it on your computer is not sufficient for real performance optimization. It's also easy to write a loop that won't get optimized correctly. If you're not using the SSE registers there's probably a faster way to do what you want using matlab code. I'm not trying to bash MEX. It's a powerful tool in the right hands, but it has a pretty steep learning curve to do things "correctly" and saying "use MEX" should really be directed at a different audience than "preallocate arrays."
http://www.mathworks.com/matlabcentral/fileexchange/30923-fast-stl-import-function I literally googled "matlab stl import".
I know basic matlab programming and ideas associated with programming in general. I'm used to the syntaxes but on a very basic level. I want to move forward from there. What would you suggest in that case? 
Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Practice Then some more practice. And ask questions along the way (with code examples por favor).
Read the documentation!
Calling Java can be a nice compromise but obviously is not as well integrated as MEX. Plus each Java call has a significant overhead so you wouldn't want to have lots of small calls
You only have to do it once? It's copying something like 5-10 GB of data over and decompressing it from .zip. Any installation of about the same size takes about just as long.
You have to somewhat master the basics and then some. There isn't really a way around it. Find some course on basics and do that. Examples: Could you sort a vector? Could you do basic image processing like replacing all instances of a certain color in a picture? Could you make a game of some sort, perhaps something simple that just talks to the user and gets some text input? Stuff like that is good practice and is a good idea to know before you go into anything specialized. It is possible for you to skip learning all the basics and go straight into something like scientific computing, but when you come to a problem, you wouldn't even have an idea of where to start simply due to a lack of experience.
i figured this out just before you replied, thank you! 
 a = 3.8; xi = 0.4; maxCount = 100; % or whatever your limit is for loopCounter = 1:maxCount xi = a*x1*(1 - xi); end disp (xi);
 x(1) = 0.4 for i = 1:n x(i+1) = a*x(i) - a*x(i)^2 end EDIT: This will help you save xi at every time step.
I think you should also tell us the error, what kind of error, and try to separate comment with actual code.
To have the text show up as code, just begin each line with four spaces—here's the result of doing that to the code you posted: %ChNE 515 %2-D Laminar Couette Flow %constants H=0.005; %meters n = 10; %calculation points del_y=H/n; %meters time_total=60*10000; %seconds, time_steps= 10000; del_t= time_total/time_steps; mu=4.15*10^-5; %kg/m*s rho=0.35; %kg/m^3 nu = mu/rho; nu_t_y2= nu*del_t/del_y^2; %Intial velocity zero everywhere u_old=zeros(n,1); u_new=zeros(n,1); u_old(1)=0.889; u_old %Intialize time to first timestep time=del_t; %iterates conservation of momentum through total time while time&lt;time_total for j=1:n if j==1 %top wall u_new(j)= 0.889; elseif j==n %Bottom wall (stationary) u_new(j)=0.00; else %middle nodes u_new(j)=u_old(j)+nu_t_y2*(u_old(j+1)-2*u_old(j)+u_old(j-1)); end end u_old=u_new; time=time+del_t; end u_new (mostly for my own benefit so I can try to parse the code.) You're initializing u_old and u_new as n x 1 (2-dimensional) arrays, but your loops only specify elements with the j dimension—what happens if you replace u_new(j) with u_new(j,1) (and similarly for u_old)?
my error is that depending on how I set u_new=u_old I either get: u_new = 0.8890 NaN NaN NaN NaN NaN NaN NaN NaN 0 or u_new = 0.8890 0 0 0 0 0 0 0 0 0 and the correct answer is a linear increase from 0 to 0.889. 
Oh, I see. (Sorry, without a function copy of Matlab handy, I'm kind of shooting in the dark.) I'm a bit curious about the code—it looks like u_new(j) depends on u_old(j-1), u_old(j), and u_old(j+1), but unless I'm missing something (entirely possible) only u_old(j-1) will be nonzero on any given iteration. Regardless, it's confusing that you're getting NaN values, since you don't seem to have divided by zero anywhere... What exactly do you change in the code to switch between an output of zeros and of NaN's?
As far as the code it is the differential equation reslut from conservation of momentum: du/dt= d^(2)(u)/dy^2 so the du is u_new-u_old change in time dt= del_t and the d^(2)(u) is approximated by grabbing surrounding spacial velocity u(j+1);u(j-1); u(j) wrt y 
The physics seems reasonable—and I embarrassingly just now understood the structure of your program (disregard my prior comments about nonzero entries and moving things inside for loops). Unfortunately, that means I'm confused, too, about why it doesn't work. Sorry I couldn't help, and for being a bit dense tonight.
Your del_t is too large for your problem, in particular you want a del_t such that nu_t_y2 &lt;= 1 for your numerical method to be stable. I ran your code with del_t = 10^-3 out to time_total of 10000 and got a linearly increasing velocity profile.
Depending on what you're trying to do, cumsum() (http://www.mathworks.com/help/matlab/ref/cumsum.html) could be faster.
Many good things have been said; I would add that since MATLAB is such a huge software that it's practically impossible for you to know everything because there are so many different things you can do with it. My suggestion therefore is to focus on particular things that you feel you want to know and learn new things from there. Also check out [this](http://www.google.se/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;ved=0CC4QFjAA&amp;url=http%3A%2F%2Fprojecteuler.net%2F&amp;ei=2FF2UqH1O8bHswaQ04CYAQ&amp;usg=AFQjCNFW7PrMk0NSvKgoR9RYdherBt3i6Q&amp;bvm=bv.55819444,d.Yms) link.
I'm not really sure of what you mean by "good for now" as the learning process is never finished. I learned Matlab while I was learning linear algebra, they do not have to be learned together and to actually utilize them in conjunction, you have to be pretty good at both (it's also good to point out that a matrix/ vector is not the same as linear algebra, and in Matlab, they are used for data storage as well as mathematical functions). At the end of the day, the only thing that matters is that you practice. How you do so is up to you. But I can't shake the feeling that you think Matlab is some mathematical, abstract programming language and it is not. It is developed to be of better use for STEM fields but it has many, if not all features of a general purpose programming language. If you actually need to use linear algebra for your applications, I suggest learning both individually.
The documentation for [step](http://www.mathworks.com/help/control/ref/step.html) provides the following: &gt;step(sys,Tfinal) simulates the step response from t = 0 to the final time t = Tfinal. Express Tfinal in the system time units, specified in the TimeUnit property of sys. For discrete-time systems with unspecified sampling time (Ts = -1), step interprets Tfinal as the number of sampling periods to simulate. So, the values that are coming out correspond to the step response from t=0 up to t=Tfinal (in your case, Tfinal=2.07) So, if you just want the final value (at 2.07), suppress the output of the full array with a semicolon: answer = step(sys, 2.07); and then print out the last value in the array: answer(end)
That was the issue, it finally works thanks so much!
Your "greg_pi_array" isn't actually an array. The way you're using it in the FOR loop is as a scalar, and simply overwriting the previous value with each iteration. You need to index greg_pi_array with i in the loop. Try: for i = 1:n greg_pi = greg_pi+ 4*(-1)^(i+1)*(1/(2*i-1)); greg_pi_array(i) = pi-greg_pi; end You'll need to declare greg_pi_array as an array BEFORE the loop, with something like: greg_pi_array = []; Or better yet: greg_pi_array = zeros(1,n)
Thank you! Now it makes a lot more sense
Are you talking about using hold on Or the actual plotting of box plots?
You should probably post more of your code so we can see what's going on. But just looking at your improved Euler method, I don't think it should work since your formula doesn't look dimensionally consistent.
I still can't get it, but thank you. When the plot pops up the points representing the iterations are there, but they are all lined up on y=0
Can you explain what you mean by dimensionally consistent? Will post more code this afternoon 
type in the command window of MATLAB, "VideoReader.getFileFormats()" to see all the supported video format that matlab will be able to play on your system
Huh, I did some undergraduate research using Kalman filters in Matlab to track vehicles.
I know there's a cleaner way: a=[1 23 4 5 2 5 3 6 7 8 34 2] [b,ia,ib]=unique(a) c=setdiff(1:max(ia),ia) d=a(c)
Since h has dimensions of time (or whatever derivative you are taking of) terms like g and hg have different dimensions and thus can't be added together.
I found that this worked for me A=[1 23 4 5 2 5 3 6 7 8 34 2]; B=sort(A); B(diff(B)==0) 
 tmp = sort(a); disp(tmp(find(diff(tmp)==0))) Not sure if this counts as cleaner... 
Well, I mean if I use the function boxplot(data) % data = [50 x 11] I get my boxplot. But If I in addition also have a = [1 x 11] How would I go about if I want 'a' to be plotted in the same plot (axes?) as the boxplot?
Yeah, 'hold on' should do what you want. boxplot(data) hold on plot(a) hold off I'm not exactly sure how boxplot works, but I think this should get you started. 
Got it, thanks for the help
This is very open ended problem, but there is a default method for most image processing problems. Get Image &gt; Apply Threshold &gt; Binary Calculations &gt; Results? &gt; Fine Tune &gt; Better Results First, get your image. [Imread](http://www.mathworks.com/help/matlab/ref/imread.html) should work fine. The next part would be to convert your image from RGB data (largely qualitative) to binary (strictly quantitative). A very simple example would be to go through the G value for each pixel in your image, and see if it falls within some range, assuming some range of G is indicative of forests. You would start with RGB data (0-255,0-255,0-255) for each pixel, and end up with binary data ( 0 or 1) for each pixel. Then you just have to count it. [BWArea](http://www.mathworks.com/help/images/ref/bwarea.html) does this automatically, assuming you can provide it with binary data. Most likely, the first time you do this, it will suck, for a multitude of reasons. Maybe you accidentally included someone's lawn or car, or maybe you are missing some small gaps. In that case, you'll need to do some more binary actions before you count everything up. In general, these methods can be referred to as Image Segmentation. [MatLab as several in depth examples on their website.](http://www.mathworks.com/help/images/examples/)
The diff function calculates the difference between adjacent values. For example: diff([2 3 5 7 11]) would return [1 2 2 4] In my code, I sorted the array, then it checks where there are numbers next to each other that are equal (Hence diff(B)==0).
Oh! And then it would list any value who's difference is 0 (repeated). Thanks a bunch for the explanation!
Yeah, that seemed to be the issue, as the hold on now has everything showing up. For some reason though, I've got two functions printing on the graph? http://imgur.com/eyJuxJR It looks like it is plotting Ti and yi as completely separate functions? I'm not sure where the lower half of the graph is coming from 
I don't understand...
The part of the graph that hits -0.5 shouldn't be there and I'm not sure where it is coming from.
you define yi=[p/18;0] on line 18, then in your while loop on line 20 you use yi(:,j+1) and yi(:,j). This is running your loop for the starting values for pi/18 and 0. So in the end the variable yi contains two plots of the function with different initial values.
Thank you for replying. I figured it though. 
shit thank you guys so much. forgot to check back haha, whoops. I seriously appreciate it though. makes sense. 
When you're writing code in reddit, always add 4 spaces to the front. And use imgur to host files, it's much better than tinypic, works with RES, quicker etc. Could you edit your post with the 4 spaces thing? That first line is a mess, can't tell what's meant to be on new lines, commented in or out.
but if you want to ensure it's fixed step, you're going to want ode4. Ode45 does a variable step interpolation, which can cause problems in sensitive systems. ode4 does not ship with Matlab, but it's available from mathworks here: http://www.mathworks.com/support/solutions/en/data/1-1TJ3GZ/index.html?solution=1-1TJ3GZ Predator-prey systems can be sensitive in some parameter regimes.
I'm not really sure how to give you hints regarding how to figure this out for yourself because you are really far off. This works, and maybe you can do some googling to figure out why: N=101; n=1:2:N; %set n as a vector of odd integers f= @(x) 4/pi*sum(1./n.*sin(n*x)) %define an anonymous function f A=arrayfun(f, 0:pi/16:2*pi); %evaluate f from 0 to 2pi by pi/16ths figure;plot(A) I simplified your expression since L=pi, but you had it mostly right. The "./" and ".*" denote element by element division and multiplication.
That's nice. Do you have a question or should we all get on doing your homework for you?
Thank you very much. I'll take a better look when I go home 
Thanks for the useful info!
Okay I just recently did this too, basically google ode45 examples. You need to define the functions that need to be solved, then pass these functions to ode45. Look at some examples and youll get a general idea of the structure of the solution code
The first figure looks like a scatter plot. Use: plot(x,y) where x and y are vector containing the data points. Use errorbar(x, y, e) for making errorbars on a graph. The documentation is [here](http://www.mathworks.co.uk/help/matlab/ref/errorbar.html). If you want multiple lines on a plot, you can specify "hold on", which plots all subsequent lines to the same figure. You can use hold on for both errobar(x,y) and plot(x,y) To turn it off, specify "hold off." To change a property of a figure or line, use the syntax 'propertyName', 'property'. E.g. to set the background color of a figure, use: get(h, 'Color', color), where h is a handle specifying which figure to change (use gcf for current one) and color is a 1x3 vector specifying the RGB values of the color. Generally, if you don't know how to change a specific figure property, google/mathworks has good documentation/help.
Hi, Thanks for the reply elecki, quick question: In graph1, there are numbers within the graph. How can I achieve this? 
And if you want to have dots like in the first graph use : plot(x,y,'.','black') The annotations are little bit more tricky but there is ton of help in the matlab doc.
Ah, you mean the numbers at the top of each peak? In Matlab speak, those are called annotations. You can add them using the text function: text(x,y, 'annotation') where x,y are the start coordinators of the annotation. It can be tricky to get them right, might take a couple tries. [Here](http://www.mathworks.co.uk/help/matlab/ref/text.html) is the documentation for the text function. If you give up on getting the annotations right in the code, you can usually click&amp;drag them to the right place in the GUI (I think, don't usually use annotations in my figures).
Nvm I figured it out. Thanks again.
&gt; The E values are the last ones in the vector of the outputted function. How obtain the last number and put it in a vector to plot? See MATLAB's documentation for [matrix indexing](http://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html), specifically the [end operator](http://www.mathworks.com/help/matlab/ref/end.html)
Yep, &gt; if-statement also works in your program: if (all(tempStr2==string1)==1) % all(X) is 1 if the vector X is all ones. Not sure if you caught on, but I used 'sum' here, as if they were all ones, they would sum to the length of the string i.e if (sum(tempStr2 == string1) == length(string1)) % if sum(X) == length(string1) then they're all ones. (All match). No it didn't take long at all, I've been using MATLAB for almost a year now, and been programming for almost 1.5, so I already know how to 'think' like a programmer. When you see enough problems you can come up with neat ways of solving them. Especially with MATLAB, try to make good use of logical indexing and matrix operations. This makes it a lot easier to do things (and faster too). I hope I helped! 
http://www.paul-rosenthal.de/wp-content/uploads/2010/03/rosenthal_eurovis_2006.pdf
Calculate the gradient by taking tiny steps along each axis.
What are you struggling with specifically? The maths? The algorithm? The syntax?
Another post helped with the gradients and hesssians. I don't understand how to allow the user to input a function of any number of variables and then know how many variables to allocate to the function.
Are you aware of the functions: nargin and varargin?
I wasn't before, but now I am! That will help me a lot. I also decided to start by writing pseudo code before I begin the actual code.
1. This will help http://www.mathworks.com.au/matlabcentral/newsreader/view_thread/116291 2. Hint: 'strfind' could be a useful function. 3. Just stack this full of "IF" statements. Check the length of the inputs (1 or 2 args), if 'age' do this... If 'name' do that... etc. 
Try saving it as a .m file and using the 'load' command in the editor
So copy the code from the internet file onto a new script, save as .m, then load it into the script I'm working on?
Are you sure you want to use Matlab for this problem? It will probably be easier to calculate the derivatives by hand. If you definitely want to use Matlab, and you don't want to use the symbolic package, then you're stuck with numerical methods like finite differences. Remember the definition of derivative? With the limit as h goes to zero? Well, use that except h will be finite and small, like 0.01.
That will work - you should also be able to right click the link to the file and "save link as" or similar.
I get this error when I try and listen to the sound the jblah file creates. "Number of columns on line 2 of ASCII file jblah.m must be the same as previous lines."
Grammar!!!! Anyway... This sounds very very much like one of the problems I was assigned for my intro to Matlab course. Are you creating a function that takes a function handle and a couple arguments to do a Taylor approximation of the derivative? assuming you are trying to take the nth derivitive of f(x) at a point X: The way I did it was to create a 2 by n+1 array of numbers. Basically x and f(x) values in parallel. You create a bunch of x values, very close together, on either side of X. (i.e. if you want to take the 4th derivitive at X=5, then your x values will be 4.999999998, 4.999999999, 5, 5.000000001, 5.000000002) Then calculate the values of f(x) for all your x values. You then populate a second array, 2 by n. The 'x-values' for this one will be the average of each pair of adjacent x-values from the first array (4.999999998 and 4.999999999 will average to 4.9999999985 as the first element in the next array) and the f(x) values will be the slopes (delta-y / delta-x), just like in algebra. This gives you the approximation of the slope of the line between the points. You then populate a third array from the second array.... repeat this process n times. The size of the arrays shrinks by 1 each iteration, so for the last derivative you're just operating on two elements. I ended up using, I think, 3 nested **for** loops. One to do the Taylor calculation the problem wanted, one to repeat for each derivative, and one to populate the array. Watch your floating point precision. You want your deltas to be as small as possible, but the algorithm shits the bed if you run out of precision and you get a bunch of identical x-vals
A = [6 3 4; 3-2 1-6 7-5; 2 3 -5] b = [5.41; -0.9; 0 ] x = A\b
No error here (MATLAB 2013b, Mac OS X 10.9). My line 908 is the same as your unedited non-transposed version.
I found the problem. I had masked `int2str`, which gets called by `num2str` in my path and it was returning a column vector rather than a row vector for some reason. Renaming that file fixed the problem and I could undo my edit. Thanks.
Call your matrix M. b = M(:,3)==1; will create a column vector that is 1 for every row that has the day equal to 1, and 0 for all other days. a = b.*M(:,6) will create a column vector with the temperatures for day 1 in the correct rows, and 0's for all other rows. Take the average of a, then recalculate b for the next day. Try it and let me know!
OP's dataset covers numerous months and years. Your code is going to grab the first day of every month covered in the set resulting in erroneous answers.
Don't focus on the varied number of entries for a given day. Don't worry about some months ending at 30 and others 31. Just watch for any instance where the day changes. The fact that each item you want to aggregate doesn't follow any strict pattern is not as problematic as you are making yourself believe. It does make it harder to write some extremely clever, short solution to the problem, but it is still easily solvable. There is no shame in using a for loop here (and it isn't very often I'll make that claim!)
So... go look at line 2 and fix it? 
Thank you. I managed to solve it doing just that by employing the use of the datenum function. That made it incredibly easy noting when the day changes.
Thanks for the hints! I got the third one. Do you think you could help me out a bit more with the first two? I'm finding them really tricky... 
Woops! You're right. I didn't think it through.
&gt; I formatted this part of the script near identically with another part. The other part is working fine, this one is malfunctioning. Providing us with the other part would be a prudent choice. We may be Jedi, but we aren't psychic. As posted, your code is fine.
Google says [this](http://www.mathworks.com/support/solutions/en/data/1-1NWF1E/) and [this, too](http://www.mathworks.com/matlabcentral/newsreader/view_thread/305136)
 figure(1) plot(R, XM_em(1,:),'b-',R, XM_em(2,:), 'g-', R, XM_em(3,:), 'r-', R, XM_em(4,:), 'b:', R, XM_em(5,:), 'g:', R, XM_em(6,:), 'r:', R, XM_em(7,:),'b--', R, XM_em(8,:), 'g--', R, XM_em(9,:), 'r--'); legend('Z=0.1','Z=0.2','Z=0.3','Z=0.4','Z=0.5','Z=0.6','Z=0.7','Z=0.8','Z=0.9'); title('System Amplitude Ratio vs Frequency Ratio') xlabel('Frequency Ratio "r"') ylabel('System Amplitude Ratio "XM/me"') 
Turns out one of my "static" variables was a scalar and caused the issue. Thank you for pointing me in the direction to find the solution.
No problem. Enjoy the bliss of finishing a project and learning something new.
1. .dat files save whatever variables you tell them to. 2. Yes 3. If you don't use GUIDE, just use a programmatic GUI and get very familiar with function handles and variable visibility by the sub-functions. 4. Yes, however you will have to convert the colors (Google info on how to do this).
Added a few more questions, but thanks for the response. Regarding saving save files, what would be the most compact way of saving the data without allowing average users to edit it? (I'd assume that .txt is immediately out of question, and .dat is still exploitable)
I mean it would probably be the honor system for them not to load the .dat file in and alter it. Anything like denying certain access is going to be beyond my level and someone else would have to chime in. To answer your next questions: 5. I haven't had real good luck switching seamlessly. Usually once my GUI has completed the user input I close the graphics handle and pause 2 seconds to let it close completely. You can experiment with turning the figure handles off and on and having them preloaded. Not sure how well it would work. 6. If you are talking about the "edit" style text box in uicontrol (which allows user to input text), then I do not believe so. If you use the "text" uicontrol, then yes.
You could do some sort of simple encryption to your .dat file that reverses on load. If you even add 5 and make every 10th entry a dummy entry, then reverse that process on load the user will not be able to alter his data without knowing you did this.
Ooh, now that's a good idea. But if you were to turn 'visible' to 'off' on the other one while switching to a new GUI, would the dynamic text box retain its content, or would you have to store it somehow?
As soon as you go into the sub-gui you will lose the text box content unless you pass it into it or declare it in an outside function shared by both.
Outside function sounds like the easiest, because, for example, if you were to press the 'Options' button on the main GUI, that could do a callback to a GUI that strictly manages 'Options'. Assuming that, if the visibility was turned off to the main GUI, would it retain the content while the user was doing things in the 'Options' GUI? (Sorry if this is a nooby question. MATLAB's GUI management is a lot more convoluted compared to the other two languages I know)
I think you can recall the master gui using the figure command. It should keep it's previous parameters. This is kind of an area I haven't had too much experience in.
&gt; I think you can recall the master gui using the figure command. Interesting. You're completely right. Thank you for sharing your comment.
&gt; so specifically Im actually not sure how I can create a code to generate the curves. By taking your hand calculation and making it into a [MATLAB function](http://www.mathworks.com/help/matlab/ref/function.html), where the inputs are your parameters. &gt; And would the user input the loads? How many loads? If you're looking at calculating values as a function of the % of some load, does it matter what that load is?
While this may be generally true with GUIDE, this isn't the case with programmatic GUIs if you utilize a single handles structure. It can also be done with GUIDE but it's annoying to implement.
&gt; (Sorry if this is a nooby question. MATLAB's GUI management is a lot more convoluted compared to the other two languages I know) Very true, and GUIDE doesn't necessarily make it easier in many instances. For this application I would recommend you don't use GUIDE and dig into learning about generating the GUI programmatically. It's a bit more tedious to initialize the figure since you don't have GUIDE doing it for you, but it gives you far greater control. This will allow you to utilize a single handles structure in one function instead of trying to pass things between multiple GUIDE built GUIs, which can be done but can get annoying.
Is there a way to use GUIDE as a learning tool, and convert what you made in GUIDE into code? Because programmatically, it's not the friendliest code to make well-formatted GUIs anyway.
The function handling code is automatically created through using GUIDE if you want to use that to learn. In terms of GUI creation where you say "place this there and make it that large," no, it won't show you that, though google is your friend for examples. As always, start with small parts of the GUI and build up from there.
Since you added 5) and 6) late, I'll address those. &gt; &gt; 5) Is there a way to switch a GUI overlay seamlessly if certain conditions were met? (strcmp = false, or what have you) Yes. Every handle has a Visibility field that's True/False. Write a couple functions. One of them hides all handles by setting this value for all handles to False. Then have other functions like showGroup1(), showGroup2(), etc... that just turn on visibility for the handles you're working with. Now when you want to swap... if conditions == true hideAllHandles(); showGroup1(); end 6) Yes. Generally you can do anything you want in terms of formatting. Just check the property editor for the dynamic text boxes to see what fields you can modify. Color should be in there.
Yeah I'm in Smith's 11 o'clock class. This is exactly what I was looking for, thanks!
You need to also be using fftshift() and ifftshift(). There is plenty if discussion on why so I'm not going to repeat it. Hit up Google for in depth discussions on the matter
All GUIDE does for you is initialize the GUI. Essentially what it does is run [uicontrol\(\)](http://www.mathworks.com/help/matlab/ref/uicontrol.html) a bunch of times (and axes() if they're present) and sets the properties &amp; callbacks for you. This is great for most folks because it just spits out a handles structure and gives you all the callbacks in the *.m file that you can edit yourself. To convert what you made in GUIDE into code is relatively straightforward because all you really have to add is the GUI initialization portion (which is the tedious part, particularly the layout). You can keep everything else in place.
&gt; I mean I know thats what im supposed to do, Im just not sure how to actually do it. Ok, your question wasn't very clear. My EE knowledge stopped at volts for dolts, and that was 6 years ago. I can't really help you beyond that point without knowing what the equations are. Is this your first experience with a programming language? &gt; And im also wondering how you know i dont need the actual load values (which I know you dont) but Im not sure why how you knew that right away. It's in the problem statement. You're calculating based on the percentage of a load, so it doesn't matter what the load is. It could be two or it could be a million, it won't change the result.
Read up on graphics handles and their properties. You'd do something like: set(handleName,'ForegroundColor',[0 0.5 0]); That will change the text color for that handle to some shade of Green ([Red Green Blue]). To see what you can modify and play around with modifying it, open up a new GUIDE file and put some objects out there. Double click an object to open up the Inspector. You'll see a ton of properties listed. All of these things can be controlled and modified from their defaults. If you don't know what one means (like seriously, wtf is HitTest?), open up the MatLab help files and check it out.
Latex is implemented fairly well for axes objects &amp; children in MATLAB. See [text\(\)](http://www.mathworks.com/help/matlab/ref/text.html) and [its properties](http://www.mathworks.com/help/matlab/ref/text_props.html) (search for the 'interpreter' property). Unfortunately, the implementation for UI control objects is horrendous at best. Why they wouldn't implement it for static text, at the very least, is beyond me. If you don't specifically need Latex functionality, I'd go with /u/SwellsInMoisture's suggestion.
Yeah, just tried Latex, and it's messy. Thanks for that.
If this is being distributed as a plain m file, any type of encryption or obsfucation of the saves is going to be worthless. 
Can you post example code? Quoting the Matlab [documentation](http://www.mathworks.com/help/matlab/ref/ifft2.html): For any X, ifft2(fft2(X)) equals X to within roundoff error.
matuba's comment is right on spot. Also, you could try viewing at different levels. 
It is likely the case that fftshift() is appropriate here, but as opios says, ifft2(fft2(x)) should be equal to x within roundoff error.
You can do exactly that. Let's say you want to save a variable called data in to matlab.file, just use: data = 9000; save([a '.' b], 'data');
I have just quickly glanced over your code. Please try posting using the code tag in the future; and also post fully working code snippets with all used variables included. That being said, your matrix operations might benefit from mtimesx (http://www.mathworks.com/matlabcentral/fileexchange/25977-mtimesx-fast-matrix-multiply-with-multi-dimensional-support), so you could calculate q for your whole array of points.
Hi, sorry I didn't know how to post using the code tags and I had to make the post in a hurry. The full code requires input text files.
"Should be" is a very dangerous phrase. The FT is a fickle bitch full of little nuances. There is a reason it inspires textbook after textbook. Little things here and there have to be accounted for based on your signal. Is it Real? Complex? Even? Odd? Symmetric? How does that play in to what you are trying to do. Does it come in to play when using certain algorithms to compute it? Which brings up another rabbit hole: the DFT adds an entirely new level of infuriating gotchas, fuck ups, and headaches. I'm not going to pretend to be an expert here. I get it wrong just as often as anyone else. I'll leave the explanation and derivations to someone with way more signal processing chops than I could ever hope to have, plus, they've already typed it up so why should I waste time recreating that? I'd highly suggest checking out [this little blurb on MATLAB Central](http://www.mathworks.com/matlabcentral/fileexchange/25473-why-use-fftshiftfftfftshiftx-in-matlab-instead-of-fftx) that goes in to some detail on a case where things go to hell in a handbasket. Download the PDF, it has some nice sample code you can throw into MATLAB. Although for whatever reason the plot() functions are left out. You'll want to look a the real portion of Xan, Xfft, Xfftshit, and Xfinal.
It is equal to X, except for the times when it isn't. MATLAB's documentation is far from canon, especially for a topic and deep and nuanced as computing and utilizing a FT.
Really, you're going to need to be way more specific on how "it isn't the same" My below comment on using fftshift() and ifftshift() are still relevant and prudent. It is entirely possible you are having issues that will be resolved by that, but it could be any number of other things. A more likely cause is datatypes. fft2() is going to return a bunch of doubles. If you're looking at the output using imshow() you;re going to have a bad time. You'll need to either use imagesc() on the double values, use imshow() and specify a range (basically what imagesc does for you behind the scenes), or cast it back to unit8 and use imshow() as normal. But again, not enough detail is given to really make an informed decision on what advice to give, so until then more wild ass guesses because I'm bored...
Oh thanks, this works. Is this all the brackets do inside save? I don't see them in the save documentation.
The brackets are how you horizontally concatenate strings. Look that up. 
Oh, I see now.
There's no such thing as a free lunch. The issue is with your test. It is very poorly chosen. There is added overhead when using parfor. it has to communicate with the workers, tell them what to do, wait for them, collect their results, and potentially a myriad of other things. That takes time and resources. Your task is so trivial that the added overhead negates any gains from splitting the work. Try again with a more substantial amount of computation. Something big like solving a large system of equations or finding the eigenvalues of a large matrix. The same behavior can be seen when using GPU resources. There are myriad situations the GPU is going to be significantly faster for a given computation. However the overhead of shuffling data around can cause a decrease in performance for smaller datasets. The actual computation is indeed faster, but that added overhead eats away at the gain.
Ok cool, thats exactly what I was thinking. I read up on the scheduler and I assumed setting all the workers takes time. Makes sense. Ty.
hey buddy, quick question. Whats the optimal # of workers to set per core?
Yea, you're right about all of that in general, but the MATLAB function ifft2() is the inverse function of the MATLAB function fft2(), unambiguously (to within roundoff error).
But of course!
Generally a single worker per core (or possibly per thread, but I don't have any hyperthreaded machines to play with). It is going to be highly application and implementation specific though.
 1. figure('name','put name here', 'NumberTitle','off') 2. figure('name','put name here', 'NumberTitle','off','units','normalized','position',[0 0 1 1]) 3 I think you're looking for the eval() function. help eval() for more. 4 doc figure has examples of setting position. Not sure about 5
I'm not sure, sorry. I get what you mean, but I don't have much GUI experience
Matlab has a tool called Guide for designing and building GUIs. I've used it successfully a few times to build deployable tools. http://www.mathworks.co.uk/discovery/matlab-gui.html Edit: Just saw your other post on there, is there a reason you're avoiding Guide?
The standard approach is to write a function for your system. Instead of x and y, you'd use y(1) and y(2) (a 2D vector) to define your system: function dy = myODE(t,y) dy(1) = y(1)*(3-y(1)-y(2)); dy(2) = ....(fill in the blanks) end then you have to call it with the ODE solver: http://www.mathworks.com/help/matlab/ref/ode45.html 
You can't concatenate vectors of different lengths into a matrix. Use a cell array instead. 
Ohhhh, now I get what you're talking about for colored text. When I replied to your last thread, I gave you direction on how to turn the whole text area to a certain color,but you want to change a line within the field. Not sure on that, honestly. Have you tried looking on Mathworks Central?
There is a static text uicontrol object. It takes some tweaking to get it to display multiple lines of text, but it can be done. Another option is to use a big edit box, but you run into the issue of the user being able to edit the entire box.
Not allowed to use it :'(
If I used text, I would have to have multiple text lines, I think. And sequencing them would be horrible. Is there not an easier way?
But would it be able to carriage return sorta like command window does it?
There's so many different combinations of text outputs, though. Would I just put ; at the beginning of a cell array in order to make it return?
Not by default. You may be able to get creative and work something out with callbacks and some logic to determine when 'enter' is hit, but I'm not sure off the top of my head how I'd do it if it could be done.
Yeah. It would be easy to just make it output to the next static text line, but making them scroll up once the screen fills is incredibly messy.
&gt;There's so many different combinations of text outputs, though I think that's always an issue with text-based games. In graphical games, you have so many different combinations of particle states. 
True. But alas, there has to be a way.
If you are not trapped in matlab for the project, there's [ImageMagick](http://www.imagemagick.org/script/index.php). There's probably a way to integrate both, given their relative configurability.
Octave's [image processing package](http://octave.sourceforge.net/image/overview.html) is one of the best-maintained Octave packages. Tooting my own horn, I made the initial bwlabeln implementation for it. :-)
vlfeat : [http://www.vlfeat.org/matlab/matlab.html](http://www.vlfeat.org/matlab/matlab.html)
There are directions on how to format code at both the top and the bottom of the text post submit page. Somehow lots of people miss it on their first posts to /r/matlab. How can we improve the interface to make it more clear?
I don't think that it is poorly laid out, the fault was with me trying to leave the house too quickly.
Generally pre-allocating then slapping your variable length vector in there would be fine. MATLAB gets cranky when doing parfor though (as you are well aware). I know there are some rules for valid assignments, but cannot recall them or where I read them. That will be an exercise for you should you chose to go down that road. It does limit what is considered a valid assignment and a valid slice. You might be able to get away with zero padding your results before trying to assign them. I don't know how that will work out with your data and results however, that is up to you to determine. Not quite as elegant as using NaNs that can be easily removed/ignored later. But it will make each vector the appropriate length and should remove MATLABs complaints about variable length slices. The other option, and generally better practice when dealing with results that are of variable length, is to use a cell array to store them. They are implemented to handle data of varied lengths (and types). Fixing things for use with mesh() is the tricky part. For that I'd suggest using the above padding idea and seeing if it fixes your assignment woes. 
I'm not 100% willing to reveal the source code, but I can send off the .p file for sure.
Why exactly can you not use the IPT? It comes with the student version of MATLAB... 
Yeah I'm not sure about this, I read that IPT should be included in the student ver. Though functions like http://www.mathworks.se/help/images/ref/rgb2gray.html for example can not be found, thus I'm thinking I dont have IPT. Whaa now I'm thinking I dont even have the student verision.. Either way, a free alternative would be nice due to limited budget! 
Yes, a [MATLAB function](http://www.mathworks.com/help/matlab/ref/function.html).
You declared z as a symbolic variable. Like the error code states, you can't convert a symbolic variable to a double for plotting. Either clear z after your summation or use a different variable name for your plot.
Thank you, how do I clear z after the summation? 
You can use [subfunctions](http://www.mathworks.com/help/matlab/matlab_prog/local-functions.html) or [nested functions](http://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html) (or both) in the same *.m file.
clear z
Run the 'ver' command to find out for sure. It will give information on your version, license, and what toolboxes are installed. I'm far from an authority on Mathworks licensing, but it is really odd that you don't have access to the IPT. It is one of the 'standard' freebie toolboxes (might as well be built-in).
I took out my second for loop, don't know why I was trying to plot it in a for loop like that, and used the clear z function as you said. Now I am getting these errors: Error using sym&gt;checkindex (line 2248) Index must be a positive integer or logical. Error in sym&gt;privformatmatrix (line 2209) checkindex(x); Error in sym&gt;privformat (line 2184) s = privformatmatrix(x); Error in sym/subsref (line 1387) [inds{k},refs{k}] = privformat(inds{k}); Error in NE451HW4p1 (line 16) plot(Flux(z), z) 
&gt; All the documentation I've read requires that a main function be defined first, then the local functions after that. Yes. You can do this all in the same *.m file &gt; My question is if I can create a function that doesn't require its own separate file and can be inserted into my code after all of the calculations have been done. Yes, by using a subfunction. Right now you have a [script, not a function](http://www.mathworks.com/help/matlab/matlab_prog/scripts-and-functions.html). If you want to use subfunctions, you have to have a function, not a script. [Pastebin](http://pastebin.com/Sx2Yu2PD)
I suggest you to change the editor you are using, you can do so in the settings. The Matlab's editor is a bit outdated and in Linux it's got weird shortcuts. I personally use Sublime Text, it's beautiful.
why would you want that? just save it to a separate file and at it to your path so you can call the function any time
Sublime is open source? I didn't know that... how come they're always asking me to pay? 
Just another small thing I noticed: You're incrementing x multiple times by having x = x+dx; within your for loop.
I would love to do that! The issue is I don't know how to run my scripts straight from sublime text. Is that possible or I do I have write in sublime text and then open the file in Matlab to execute the file?
Assuming you know the number of iterations *a priori*, just make *a* a vector of the appropriate length - then you will have a_1, a_2...a_i represented as a(1), a(2),...a(i). Representing things as vectors and matrices should always be your first instinct in MATLAB. It's how it's meant to be used! As an aside, this can be extended to multi-dimensional matrices. There are also cell arrays and structures for more inconvenient sets of data.
thanks fella! it was transforming back to doubles. your wild ass guesses are a life saver!
this was nothing to do with shifts
You have to install Octave. It won't run in Matlab.
Dragging the window to different sizes doesn't help. Seems like the first digits lay directly behind the window border. Is there a way to adjust the margins of the scope window? -EDIT- Since the problem only occurs in Simulink's scope window, I now use the 'to workspace' block instead of 'scope'. This way I can just use the plot command, which does show the axes correctly (hadn't crossed my mind before..) This workaround is a bit clumsy as I'm still building my model and constantly have to check different signals. The scope is usually the quickest way to accomplish this, so I'm still looking for a way to fix my precious scopes. 
Mainly because of the constraints of the project. She wanted one .m file, but since I am done with the project, I guess I don't *need* to use just one file, but it would be nice to know if I ever have to.
There is, and sorry I can't be more specific as to your problem as I'm just now learning how to manually modify the figure windows and not just letting MATLAB freely plot things. What I do in my work that may relate is I've been plotting a 4 panel subplot with one large colorbar on the left that all panels use. You've got to use the set() function, with the proper arguments. As a brief and not well tied together example: subPOS_sea = [0.08 0.49 0.31 0.31; 0.45 0.49 0.31 0.31; 0.08 0.1 0.31 0.31; 0.45 0.1 0.31 0.31]; %[left, bottom, width, height] for isea = 1:4 %loop over seasonal subplots subplot('Position',subPOS_sea(isea,:)) % plot data end hcb = colorbar; set(hcb,'Position',[0.82 0.1 0.05 0.7]) If you can see, this uses a 4 element vector to point out where each element's lower left corner starts as well as the width and height of the element. The entire figure window is of unit width and height, starting from [0 0] in bottom left to [1 1] in top right. Furthermore I've wanted to center a title in the figure, and make it have no border: ax = axes('position',[0,0,1,1],'visible','off'); %uses the whole figure tx = text(0.5,0.925,{varnamPLT;maintitle;['Time: ' timeperNAME ' ' regionBOUND]},'VerticalAlignment','middle','HorizontalAlignment','center'); This may not be the most elegant, best, or efficient way to do what I'm doing, but it works for me. To provide a briefer answer: maybe treat each element you want in your figure by itself, and set its position individually if you aren't happy with how MATLAB is plotting automatically.
My understanding (and I only create new .m files for functions), is that you can organize your .m script as such: lines 1-100 are script commands, some of which may call a function fubar(). IN THE SAME .m FILE, below these 100 lines, lines 110-120 may contain the following: function [out1 out2 out3] = fubar(in1,in2) % what the function fubar() does return I may be incorrect and/or incomplete with the description, but I've seen functions within scripts that have similar syntax as above.
Read the documentation on colormap. There are also plenty of easily Google'd examples involving its use. Even a few helper utils on the file exchange that simplify the process.
This is the same thing as what /u/excaza posted above. I'm working on other homework right now, but I expect to be able to go back to my code laser tonight and insert his and your comments. Thanks a bunch for the help!
So I have a few solutions for you. In the early line of your code, you do this: minFab = Fab(minPos); %Value of member AB's minimum force minFad = Fad(minPos); %Value of member AD's minimum force minFbc = Fbc(minPos); %Value of member BC's minimum force minFcd = Fcd(minPos); %Value of member CD's minimum force You could just as easily define it as: minF(1) = Fab(minPos); minF(2) = Fad(minPos); ... So you end up with a minF vector having all 4+ values of each min. Then just loop over the length of minF to display values on screen. BTW, disp is a pretty sucky means of printing, use fprintf instead. Now, suppose you want to get fancier and employ structures. You could create a list of member names, e.g. Truss_elements =['ab'; 'ad'; 'bc'; ... ]; and define properties for each element (maybe forces, areas, whatever). Then stick them in a structure, in a loop, e.g. for i=1:however_many_elements_there_are Truss_info.name=([Truss_elements(i,:)); Truss_info.force= ... end Now you have 1 structure called Truss_info, which you can loop to pull out the name or force or whatever parameters you defined for it. Similarly, you can use a cell to save each truss property, which allows you to mix and match strings/variables to be easily recalled in loop as the above examples, e.g. X{1}(1,:)={'Fab','100','other Property1'}; X{2}(1,:)={'Fad','200','other Property2'}; So if you want the name of 1, you say X{1}(1,1), and its value is X{1}(1,2) The loop I mention is just taking your code and not hard coding each variable name. for i=1:numberofelements S='compression'; if sign(X{i}(1,2))&gt;0 S='tension'; end fprintf('Member %s is in %s %.1f N\n', X{i}(1,1),S,round(X{i}(1,2))); end 
Thanks! I'll give this a try tomorrow.
An example of somehting that could be implemented is what they do for submissions in /r/photoshopbattles. Go to any of the threads, and trying to provide a "top level" submission (just below the OP) there is some text in the box. As soon as you put your cursor there and click to input text, the "subreddit text/instructions" clears and the user is left with the normal white space. Maybe something like that could be used for most inputs here in /r/MATLAB I would suggest maybe 3 points, a reference to the sidebar or whatever other aids, and definately a reminder of how to format the code (4 spaces to begin a line).
You can edit your file on any editor and tell Matlab to use that as the default one. Anyway, you'll need to run the script from the Matlab console. Or the good old select-F9.
OH! I see now, thank you! This means that I am increasing it twice, correct?
Tip: hit reply to a comment and not just reply to the OP, I didn't know you had replied RE: me until I revisited the OP. If this was me, I would try the following: (1) use the find(), as you have, provided that threshold is a singular value and you are looping outside of your lines above. (2) find() will give you the indices of all values matching your criteria (3) determine first if length(onsetval) &gt;30, otherwise you can quit out of the loop entirely with a "break" command, or continue looping checking your next trial with a "continue" command (this would be done in an if-conditional). (4) loop 1:length(onsetval)-30 and check the i-th value and the i-th+30 value to see if their difference is 30, this will tell you that there were 30 consecutive hits where baseavg&gt;threshold. (5) if (4) is satesified, then you can break your outermost loop entirely or continue on to the next trial, whatever your data and application asks for. Hope that provided *some* help/direction.
Just a note: m can be as small as 1. The color map isn't very exciting with one color, but it's perfectly legal.
As I understand it you are trying to find the first point where `trial9_baseavg` is greater than the threshold for 30 elements in a row. You shouldn't need to loop at all. % gt_threshold is a vector that holds 1 where baseavg is greater than % threshold, zero otherwise gt_threshold = baseavg &gt; threshold; % Find the transition points: onsets is where gt_threshold goes from zero % to one (i.e., where the difference between adjacent elements is 1). onsets = find(diff(gt_threshold) == 1); offsets = find(diff(gt_threshold) == -1); % Sometimes the signal is still above threshold at the end, if so had a % dummy transition from high to low to make the vectors the same length if gt_threshold(end) == 1 offsets = [offsets length(gt_threshold)]; end % Sometimes the signal starts above threshold. If this happens drop the % first high-to-low transition since it doesn't follow an onset. if gt_threshold(1) == 1 offsets = offsets(2:end); end % Now find the first point where the difference between an onset and its % corresponding offset is greater than 30 transition = find(offsets-onsets &gt; 30, 1, 'first'); 
"...using the image acquisition toolbox's built in functions" Neat and all, but unless I'm missing something this doesn't give us anything the documentation doesn't.
they forgot TIL
TIL how to use the image acquisition toolbox to acquire an image
ode45 solves a differential equation in the form x' = f(x) You will have to set up your states as: y(1)' = y(2) y(2)' = y(3) y(3)' = -(4y2 dy2 /dt2 +8y(dy/dt)2 +3dy/dt) - sin(t) where y(1) = y y(2) = dy/dt y(3) = d^2y/dt^2 And then proceed with ode integration given in the MATLAB documentation. http://www.mathworks.com/help/matlab/ref/ode45.html
Thank you so much! This worked perfectly!
True. My mistake.
Snippets! x(k,1) = randnum(1,10); function f = randnum(a,b) f = floor(((b+1)-a)*rand+a) 
Hey there Mercury-7. How is your project coming along. If you are further than me on it, would you mind meeting up with me and helping me out please.
Thank you kind sir! I knew it would be something stupid that I couldn't see.
Do you go to the same University as me? If so, I would be happy to work on it with you.
I'm pretty sure. Haha I've never seen anyone else doing this project. NMSU?
I live off campus, but I am a hop and a skip away. I can meet you there in about 15 minutes. 
I assumed he wasn't aware of the usage of randint, since, unless there's something I'm missing, his procedure is unnecessarily inefficient.
&gt; I have an assignment &gt; I'm definitely a beginner Looks like yet another misguided educational adventure. "First we will learn a terrible way to do everything, then the semester will end before we get to the proper approaches and you'll have a nice pile of terrible habits to struggle with! Enjoy!"
Fairly common thing to need to do. Kudos on at least knowing you needed the while loop. pfstatus = -1; while(~ismember(pfstatus, [0 1 2])) pfstatus = input('enter 0 1 or 2: ' ); if pfstatus == 0 disp('entered 0') elseif pfstatus == 1 disp('entered 1') elseif pfstatus == 2 disp('entered 2') else disp('please enter 0 1 or 2') end end
Hi! Thanks for your reply. I have a few questions. How can I set pfstatus to -1 when it depends on the user input? Also, would the final code look like this? pfstatus=input('Enter 1 for Leading, 2 for lagging, or 0 for N/A'); %user input if pfstatus == 2 I2_FL=amps.*cos(-anglea)+amps.*1i.*sin(-anglea); else if pfstatus == 1 I2_FL=amps.*cos(anglea)+amps.*1i.*sin(anglea); else if pfstatus == 0 I2_FL=amps.*cos(0)+amps.*1i.*sin(0); else pfstatus = -1; while(~ismember(pfstatus, [0 1 2])) pfstatus = input('enter 0 1 or 2: ' ); if pfstatus == 0 disp('entered 0') elseif pfstatus == 1 disp('entered 1') elseif pfstatus == 2 disp('entered 2') else disp('please enter 0 1 or 2') end end O and also what does "disp" mean? to stop? why would I need to put, for example disp('entered 0')?
You just.... set it to -1... exactly how I posted it. The only changes needed are swapping out my dummy input/disp stuff for your input prompt and the math. I just gave a quick, dirty version to show the idea. Edit: Just noticed the bit at the bottom. disp displays text to the command window. It is there just to fill in the if/else block. My response was more of a "here is a pattern to follow to solve your problem" rather than an exact solution to it. Mainly because copying/pasting in your actual behavior was :effort: and I'm lazy.
This last line: &gt; else &gt; disp('please enter 0 1 or 2') &gt; end will the input the user enters be saved as pfstatus? 
Original content isn't exactly this guy's forte. His entire posting history is full of links to other articles on that website that are also largely devoid of substance.
So my for code, would the following be correct? pfstatus = -1; while(~ismember(pfstatus, [0 1 2])) pfstatus=input('Enter 1 for Leading, 2 for lagging, or 0 for N/A'); if pfstatus == 2 I2_FL=amps.*cos(-anglea)+amps.*1i.*sin(-anglea); else if pfstatus == 1 I2_FL=amps.*cos(anglea)+amps.*1i.*sin(anglea); else if pfstatus == 0 I2_FL=amps.*cos(0)+amps.*1i.*sin(0); else pfstatus=input('Enter 1 for Leading, 2 for lagging, or 0 for N/A');
Their input is always in pfstatus. That first line setting it to -1 only executes once. It exists for two main reasons: first initializing your variables is a very good habit to get into and secondly the variable has to exist in order for the while loop to have something to test when it first executes. So I set it to a known value that will definitely fail my test. The user then provides their own input and thigns progress from there. If it is valid, one of the if/else will match and your math is done, then the loop can terminate. If not, we inform them of their error (always be nice to the user, even if they are idiots!) and prompt for input again.
Other than needing to close out your if/else block and your while loop, yes. Also, else if and elseif are VASTLY different.
so what does isempty() or ~isempty() actually mean?
This is simpler than a MATLAB problem, though I understand what you *want to do*... But if this were me... If I'm understanding this correctly, you've plotted a figure, but not saved the data (first mistake!). The figure contains 6 lines. You say that it will take too much time to find the (x,y) for each line, and I agree, this is a waste of time. BUT: let's not forget basic math here... Pick any two points on one of the 6 lines: I would chose points near the ends. y = m * x + b Calculate your slope, solve for the intercept, and if you've choosen points near the ends, just have MATLAB generate your x-vector (beginning:step:end) and your y-vector (y=mx+b). Done! I admit, I have not answered your question in the way in which you *want* to go about the problem, but if it were me, and if I were in a time crunch, *this* is how I would find the (x,y) for your 6 lines. Now, if it is important to know precisely the x-values originally used to make the line (and by extension the y-values), completely disregard this post.
But half the "fun" is in stumbling, trying to interpret error messages, and googling/fileexchanging new functions! At least, this is exactly how *my* MATLAB education has gone (going on 6yrs MATLAB, 10 coding).
haha. YUP. then you can say things like "oh just use cellfun" they look at you like you're some kind of wizard. 
Yeah... Also, I did misread what he said. I interpreted "I have an assignment" as "I have to assign a value to a variable!" ...sometimes I'm really slow.
Please use Pastebin or something like it. Nobody is going to be able to find your error in that wall of text. Feel free to repost your question in a legible format, but this thread is being removed.
Six of one, half a dozen of another :) You save a step or two by using the value test rather than checking for existence then testing value. Not really a big deal either way, but simplicity and clarity make me happy. 
Yeah, this is an ongoing problem. I kind of wish there were something we could do about this. I don't have any ideas, unfortunately. Hopefully someone does.
Hint: that hint is there for a reason.
Yeah. I have used that to identify the region of interest, I have also tried using histc(t,x) to identify the bins that values of interest are in but I have no idea how to implement this into my loop when length(x) could be anything. Do I just have to have a large number of elesif statements? Apologies again, I'm ridiculously new to matlab. 
Then we'll start with a breakdown of what you need to do. You already have a bunch of x/y pairs for this function. Now you have these values in t you need to evaluate based on them. Why would you care about the length of x? It has nothing to do with what you are trying to solve for: the value associated with t. t is all you care about. You need to go through each value of t and find where it falls inside x. You know how to do this using the t&lt;x trick (where t is now a single value from t and x is the vector you are given, this notation is fucking horrible and your instructor should be punched in the throat for doing it, but that is another rant entirely). So you go over each value in t, find where it falls in x, use that to find the corresponding values in y, then bingo bango you can solve this arbitrary function at t based on those values. Do that for everything in t and you're done!
Thanks! I'll try and work that through. No rant necessary, I have fists. 
You need to reduce the third order system to a system of first order equations and then enter the initial conditions as vectors. If you google it there will be lots of resources of how you do this.
is it finding hidden files or do you actually mean that the same exact file appears twice in the output?
It's returning the same files twice. The first ones appear as ._L_abd_1.anc and the second version appears as L_abd_1.anc
 while x &lt; k; matrix1 = m(x,:); a = matrix1(1,1); b = matrix1(1,2); g = geecd(a,b); answer = [num2str(a), ' ',num2str(b), ' ',num2str(g)]; answer = strjust(answer); disp(answer); x = x+1; end;
Those look like two separate files to me...
Thanks! I'm a few years separated from Dif eq, but I boiled it down to: 1. x1 = x 2. x2 = x' 3. x3 = x'' so - dx1/dt = x2 - dx2/dt = x3 - dx3/dt = x3 + x2 - x1 + 1 and then my code was rhs = inline('[x(2);x(3);x(3) + x(2) - x(1) + 1]','t','x') [t xnum] = ode45(rhs,[0 6], [0 0 0]); which gave me my answer. Again, thanks for the help!
No problem!
A reason you can't implement the whole thing in Simulink? I'm having a hard time visualizing what you're doing.
You're going to have to be slightly more specific if you hope to get any meaningful answers. No one is going to dig through 280+ lines of code (that we can't even run!) to find some obscure, vaguely described bug that is related to a portion of your code base that you haven't provided. 
Isn't that a matlab easter egg if you type in some command? 
Yep! spy But in older versions (prior to 10b, I think) it makes a Spy v. Spy image.
wow, so fantastic
So wolf
sans the text, yes. Well done OP. edit: up till 2012b, at least. 
I like asking MATLAB why. A*B; why
so doge
wow...this sounds awesome... Alright then, i can think of two possible ways to approach this though I'm not sure how correct they will be. 1 Some sort of a box count method. You can create a 10-D empty matrix which corresponds to all possible points in this vector space. There obviously will be some sort of loss of resolution as you will end up with an evenly spaced grid which may not line up exactly with your data points which may have floating point co-ordinates. In this vector space, you insert 1 in the indices where you know both datasets will have a value. For example, scaling it down to a 3D problem, given a grid with a resolution of ...-2,-1-0,1,2.... in all 3 dimensions, the points (2.5,2.3,2.1) and (2.7,2.2,2.4) will both occupy the same 3D 'box' and you therefore set the value of that grid location to 1. That is, vector_space(2,2,2) = 1 Indices which don't have elements from BOTH datasets falling into them will be filled with a 0. Now, you count all the boxes, and as you know the volume of a single n-dimensional box, you can calculate the total volume in terms of the number of boxes. This would give you a decent approximation if your data is not scattered all over the place and has some semblance to an actual shape. 2 Now the second, possibly more accurate method (or completely wrong one, not sure though...someone with a better understanding of integrals please correct me here). Since volume in 3 dimensions is simply a double integral, i.e integral ( y, integral ( x,z ) ) you could extrapolate this to 10 dimensions and have a long nested integral statement. The issue here is that to do so, you must have a surface of intersection of the two data clouds, which is usually in terms of gridded co-ordinates. If it is scattered data, you can use the interpolation functions for scattered data in MATLAB, "griddatan", which takes in scattered data and returns the value of the function at the query points. In your case, these query points will be gridded. If the data is already gridded, then you just have to make sure they're both using the same grid. "interpn" should do the trick here. All of the above may be completely wrong, but I hope it gives you something to start out with. 
Using the "tic" and "toc" commands, work out how long it takes to process one (or more, for an average) iteration of the loop. Then simply multiply by the number of times you're running that code. 
thanks. I am fairly new to MATLAB. I didn't know those functions existed!
length(fc3) * length(gain_4a) * length(gain_1a) * length(gain_2a) * length(gain_3a) * length(bw1a) * length(bw2a) * length(bw3a) Is the number of times round that inner calculation That comes to : 647,232,768 If the inner calculation took 1 second to complete it would finish it in 647232768 / (60 * 60 * 24 ) days = 7491.1, also known as 20.524 years To complete it in 24 hours the inner calc would need to complete in 0.00013349 seconds If you can test a shorter run you can estimate the runtime. Making everything a single length except bw3a and bw2a would take 546 iterations, or 1 millionth of your total runtime
Can you convert cores to a string array and then in a second for-loop open each core? 
 number = 5.67; string = sprintf('%g, number'); disp(string)
What are you looking for help with?
Help dlmread
Same problem again. Did you ever figure out how to do this one? I had no idea
Problem solved. Thanks!
I'm not going to go through your code a decypher it - it's a Saturday night. That said, loops are best avoided in matlab unless you cannot do the calculation without (i.e., iterative loops where the &lt;i&gt;th sol'n is needed for &lt;i + 1&gt;), and you've got several nested loops. If the dimensions of whatever you're trying to calculate are uncoupled, you can calculate the whole solution "in one" as an array/matrix operation, which is where matlab's strength lies (MATrix LABoratory). Apologies if you already understand this, but it's easily overlooked by newcomers to MATLAB.
No worries. Hope it actually helped - I can't remember off the top of my head how to use it, but I know it's the correct function.
Ok, had a quick go at this. End product works ok, but you might need to play around with the numbers a little to get results you want. Sounds a bit washy when vocals are playing, but I'm not sure how to fix that (not even sure why the line dif &gt; 0.7 &amp; dif &lt; 1.5 does what it does, but eh). %Window length (choose power of 2 for quick DFT) wl = 512; %Step size (for overlap and account for windows) step = 300; %Window - hann gives good sound back w = hann(wl); [Y, fs] = audioread('drake.mp3'); %Set up output array out = zeros(size(Y)); %i is starting index for i=1 : step : size(Y,1)-wl %Get data and window dat = Y(i:i+wl-1,:).*[w,w]; datL = dat(:,1); datR = dat(:,2); fftL = fft(datL); fftR = fft(datR); %Use this instead of for loop with if for faster processing dif = abs(fftL ./ fftR); mask = ones(size(datL)); mask((dif&gt;0.7) &amp; (dif&lt;1.5)) = 0; fftL = fftL.*mask; fftR = fftR.*mask; lout = ifft(fftL); rout = ifft(fftR); datout = [lout,rout]; out(i:i+wl-1,:) = out(i:i+wl-1,:) + datout; end audiowrite('tmp.wav',out,fs) If you have any questions or want an explanation of the windowing feel free to ask.
"Do my homework for me because I'm not smart enough/to lazy to do it myself."
MATLAB doesn't use 0 based indexing. As written, your first value is trying to index z(0,1), which won't work.
I've never used the parallel computing toolbox, but if matlabpool open local 1 (or whatever integer) works, try eval(['matlabpool open local ' int2str(cores(i))])
Yeah, thank you both. Every time I kept looking up new ways to create matrices I kept getting a whole bunch of different errors.... Looks like I know how to do it now, thanks! 
Ok, I'll try that when I get home. Thank you!
Nevermind, I figured it out!
Surely you will try to show some sort of work or logical thought process before shamelessly asking for someone to complete your entire homework assignment for you, right?
FYI, this is a real picture of one of the developer's husky dogs
You realize that those ls are supposed to be 1s? As in "the number 1" not "the letter l"? As in 1e-8 = 1*10^(-8) ?
Wow that was an excellent reply. The idea of conforming the data to a discrete grid and then counting the 10d "boxes" sounds like it would work great here. I only need a reasonable approximation, and this sounds like it would be perfect. It's even better because my data is already more or less on a discrete grid as all of the components tend to be integers. I think this might not be too difficult to code up as well. The integral method seems like it might work as well, but it does look more difficult to handle so I'll try the gridding method first. Thank you very much! 
So be nice, I'm just an undergrad. I'm just really happy to have finally figured out this code: x = 0:20; x1 = max(16 - x,0); x2 = max((28-x)/2,0); ytop = min([x1; x2]); area(x,ytop); hold on; [u v] = meshgrid(0:20, 0:20); contour(u,v,-2*u - 3*v); hold off; xlabel('x(1)'),ylabel('x(2)') title('Maximize f(x(1),x(2))= 2x(1) + 3x(2)') 
I don't already understand this. I'd give you background as to my education as a 36 year old electrical engineering student, but it's a Saturday night. :) In all seriousness, I'm not sure how to do this without brute force, except for multi-threading, perhaps, but I'm really not that familiar with that, either, and this project is due Tuesday. We really do (I think) need the &lt;i&gt;th solution because changing one variable in one filter could have an effect on the rest of the transfer function. ie, you mess with the front part of the transfer function that is attempting to fit the ideal, it messes with other parts trying to fit the overall target function. This means (again, I think) that we really do want the exhaustive approach in calculating minimum error. That being said, our initial trial led to ~14 hours of computations, which suffered from approximately 5% lag time due to a 'counter' variable printing in every single iteration. (I computed this by witnessing an AMD processor averaged over 7 trials, using tic/toc and inserting the "stopwatch function" inserted into the fourth loop. The AMD had roughly the same specs as the i7 quad-core, and averaged through the fourth nested loop in 43.8 seconds. Multiplying by the iterations left to be ran yielded an approx 13.3 hour run time.) 
see: other reply to saxoffender. Our total array was made up of ~377 million members (we had a counter to verify that printed to the monitor). This computation took about 14 hours. I used a smaller set on my own AMD processor that is similar in nature to the i7 and came up with 13.3 hours by inserting a clocking function into the fourth nested loop. This difference can be accounted for by assuming a certain lag in having to print a counter out to the console. 
i already figured out my error in my mathematical expansion. it had nothing to do with my Matlab coding. Please disregard.
You need to determine how they relate to or another. You can make a polynomial using polyfit and that'll work for any input. You could even then implement that within your own function. There are built in functions that do what you want but a) I can't recall them and b) this may do what you want and teach you a little bit about writing functions/sub functions.
tic and toc have some overhead if you are spamming them though, because it prints to the command window. There is a way to store the system time in a variable and you can do aritmetic to figure out how long certain operations take.
I've had a better look at your code, and I don't think you need an iterative solution. What I mean by needing the &lt;i&gt;th solution for the &lt;i+1&gt;th calculation is that you require the actual result, not the parameters that determined it. Think of results like transient CFD/FE methods where you'll have some loop stepping through in time, and you need to know what happened at one time step to calculate the next from some sort of differential equation. I've only got my ageing laptop at home, but I'm going to have a quick look at your code and see if there's a suitable vectorised solution that calculates the minimum total error. Without being able to run your *long* method, I won't know if it gives the same result, but you should be able to have a look at what I'm doing and try and adjust it suitably. The looping problem used to be much worse in older versions of MATLAB (which version are you using, btw?), and some elements of vectorisation are done automatically by the software when you try to use loops that could be modified for it. It's good practise to vectorise, though - read this to understand why, and go through the quick examples they give and use tic and toc to determine the speed difference http://www.mathworks.co.uk/help/matlab/matlab_prog/vectorization.html I'll be back once I've booted MATLAB up and had a look. EDIT: What are bpf2 the other referenced arrays/functions in the middle loop? It looks like vectorising this code *will* work, but if these are functions from elsewhere, they need to work with array inputs, too.
good for you did you get the results you hoped for? 
Nice one. Try using something like [export_fig](https://www.mathworks.co.uk/matlabcentral/fileexchange/23629-exportfig) to save high-quality plots.
I wrap that in a function of my own (save as ef.m to a folder on [MATLAB's path](http://www.mathworks.co.uk/help/matlab/ref/path.html), or add your own), to speed things up (a few different settings I use commented out in the function): % EF exports current figure using export_fig function ef(name) if ~exist('figs','dir') mkdir('figs') end eval(['export_fig figs/' name ' -png -pdf -transparent -m3 -painters']) end There's probably a better way to do this than 'eval' but it works well for me :)
If you have your data on a regular grid, just construct a griddedInterpolant object from your data in cloud 1, and then evaluate that interpolant at the coordinates of your cloud 2 datapoints. If extrapVal is set to NaN, you'll get a value for each cloud 2 point contained in cloud 1 and NaN for each one not contained. You can query all points simultaneously, so that should be quite fast. You only need cloud 1 data on the regular (but not evenly spaced) grid for this to work.
Not really. :) But, it did lead us to think about the problem in a way that did allow us to solve for orders of magnitude less error than we already had, which was already pretty good. Now we are far under 1% error which is very good for us. 
yes, but tic and toc didn't have to run that many times since they were near the top of the list. If something has to run less than 10000 times in a loop size this large, I categorize it as negligible. That may be sloppy? I dunno.
the bpf2 and hpf1 are both functions for filters. I can include those if you like. function h = bpf2(f,f0,b,gdb) % This function evaluates complex points of a second % order band-pass filter with resonant frequency f0 % in Hertz, and a gain in dB at resonance of gdb. % The function syntax is: % % tfbp = bpf2(f, f0, b, gdb) % % where f is an array of points in Hertz where the % function is evaluated at, b is the 3 dB bandwidth % in in Hertz, and tfbp is the array of complex % evaluation points. % j = sqrt(-1); p = j*2*pi*f; gres=10^(gdb/20); h = (2*pi*b)*gres*p./(p.^2 + (2*pi*b)*p + (f0*2*pi)^2 ); function h = hpf1(f,fc,gdb) % This function evaluates complex points of a first % order high-pass filter with cut-off frequency fc % in Hertz, and a gain in dB at infinity of gdb. % The function syntax is: % % tfhp = hpf1(f, fc, gdb) % % where f is an array of points in Hertz where the % function is evaluated at, and tfhp is the array of % complex evaluation points. % j = sqrt(-1); p = j*2*pi*f; ginf=10^(gdb/20); h = ginf*(p/(2*pi*fc))./(p/(2*pi*fc) + 1 );
The fastest solution, I find, is the 'rank' function in Matlab. If you have a set of vecors (assuming they are the same size), you can write them into a matrix M, each column filled by 1 vector. The function rank(M) gives you the rank of the matrix, which is equivalent to the amount of linear independent vectors. E.g. you have the vectors a = [1;2;3] and b = [1;-2;3] Your matrix M would be M = [a,b] rank(M) would compute to 2 - meaning the matrix M has 2 linear independent vectors. If you insert b=[1;2;3] instead, rank(M) would be 1 since both vectors are the same and therefor not linearly independent. 
I'm guessing that x(1) and x(2) are really x₁ and x₂. In that case you can use Tex-syntax and write: xlabel('x_1'); ylabel('x_2'); title('Maximize f(x_1,x_2)= 2x_1 + 3x_2');
Just because other languages let you do that does not mean it is a good idea. There are quite a few reasons "while ( (x = myFunc(y1,y2,y3)) &lt; X )" is disgustingly broken. I don't think you came here to have that explained though so I'll ignore that for now unless you're interested. As for fixing your problem I really see two viable options. First (and simplest), go with the top implementation that annoys you do to the repeated statement. This pattern works, it has no performance hit compared to your preferred version (both call myFunc() an equal number of times), and most importantly it doesn't abuse any shitty language specific behaviors and will work no matter where you use it (or at the very least in more situations than that second abomination will work). Your other choice is yo rewrite myFunc() to be fully recursive. Technically right now you are using a recursive approach to solve your problem, you've just rolled the recursion out into a while loop rather than having it internal to your function. This isn't necessarily a bad thing as the (properly done) looped version is a bit simpler to write and simpler to understand for the next person reading your code. But if you really, really, absolutely MUST get rid of the doubled myFunc() call, that is your exit strategy.
Are you thinking of interp1()?
It looks like vectorising would work with this, but it's quite a change to the structure of your main file and the sub functions above. You're best off looking at how the methods to vectorise work in the link I posted, and seeing if you can do the same in your example. Basically, you create a matrix that calculates all the solutions for all possible permutations of variables that you're currently looping through, then find the row, column and other dimensional co-ordinates that the absolute minimum difference between it and your desired values occurs.
Later you can maybe add the solution to the plot. Use a bit dot in the X,Y coordinates of the optimum and run a pretty line through it.
Do you have to in put the equations? Or can you just set up a coefficient matrix and use the backslash operator? Thats pretty simple
It needs to be done so that the user can input the equations
In which language should it be be programmed or better - where should it run? Could a Matlab GUI solve your problem?
% This script solves three linear equations, with coefficients set from standard input. a1 = input('Equation 1, a:') ; b1 = input('Equation 1, b:') ; c1 = input('Equation 1, c:') ; d1 = input('Equation 1, d:') ; a2 = input('Equation 2, a:') ; b2 = input('Equation 2, b:') ; c2 = input('Equation 2, c:') ; d2 = input('Equation 2, d:') ; a3 = input('Equation 3, a:') ; b3 = input('Equation 3, b:') ; c3 = input('Equation 3, c:') ; d3 = input('Equation 3, d:') ; lhs = [a1, b1, c1; a2, b2, c2; a3, b3, c3]; rhs = [d1;d2;d3]; sol = inv(lhs) * rhs; display(sol)
Just threw this off and didn't check carefully, caveat emptor.
Except for the itch I get when seeing 'inv' used instead of backslash (which doesnt matter too much in this case), this solution works fine.
You should probably do your own homework. If you are serious about getting help, show effort and willingness: - What part of the assignment do you understand? - What have you done already (show code)? - What *exactly* is it you don't understand and need help with? If you don't feel like doing that, you can probably hire some programmer to do this for you for, say, $50 an hour meaning it shouldn't cost you more than $200 or so. If I were accepting such an assignment, I'd also require payment upfront (because, well, I have trouble trusting people who pay others (poorly) to do their homework). Good luck either way.
Sidebar: "We don't do your homework!"
We found a way to implement a solution this time without having to vectorise, but given likely time constraints of future projects, it's good to have the resource that you provided. Thanks!
For embedded solutions, a traditional trick is to calculate the angle, and then subtract 360 until it's less than 360, or add 360 until it's greater than 0. It's just a simple loop. If you're interested in the distance traveled as well, not just the current angle, you simply keep track of all your addition &amp; subtractions to get your delta-theta.
/r/domyhomeworkforme
I think that may do the trick. That, in combination with resets crossing the 360 point should keep my readouts in a reasonable range. Thank you very much!
If nonlinear constraints are the issue, take a look at http://www.mathworks.com/help/optim/ug/nonlinear-inequality-constraints.html
oh duh. thanks
You have to turn on the marker. Right now, it's just plotting the points. plot3(x,y,z, 'o', 'MarkerSize', 10) http://www.mathworks.com/help/matlab/ref/lineseriesproperties.html
'hold on' should be between the two loglog() calls, not before them. 
Thank you! I usually put "hold on" after I initiate the figure just to have it all in one place, and this is the method I've used for numerous other normal plots. Is this the wrong way to do is and it just doesn't matter with normal scale plots?
'hold on' tells MATLAB to lock the current graph type when adding subsequent graphs. It will adjust the axes, tick marks, and tick labels so the new graph will fit, but the graph type will remain the same. When you make a new figure it defaults to a plain plot() style graph which then gets locked with the 'hold on' command. So the loglog() plots you are trying to add instead get forced to be plain plot() style graphs. That is why you've never noticed it before, your normal plots were being forced to... normal plots. So it was 'broken' but in a way that still fit your needs. It is a Good Idea(tm) to create the figure, throw your first plot on there, make any style adjustments, then call 'hold on' and start throwing more plots at it.
Great knowledge to have, thank you again!
.*
I'm not sure I follow the point of this. Most of the functions seem to re-implement built-ins. Is the goal just to make Matlab act more like Python? For example: getUtils.operators.map(f, A) =&gt; arrayfun(f, A) getUtils.operators.filter(f, A) =&gt; A(f(A)) ... built in is much faster getUtils.operators.reverse(x) =&gt; fliplr(x) getUtils.operators.bkwd(start,stop) =&gt; stop:-1:start ... faster and works for negative numbers 
Lookup element-wise arithmetic in help. a = (1:5)'; b = (6:10)'; product = a.*b; % &lt;-- .* operator disp (product)
Agreed. I would need to have some examples of what basic functionality is missing from MATLAB and how these utility functions help me before I'd start using any of it. It also seems kinda weird to me that the author requires the user to pollute the base workspace with function handles in order to use any of the library's contents. I get that they didn't want to have to create a different file for each of the millions of function that they want accessible to the user, but I think I would kinda prefer having them separate, partitioned into packages that can be imported as desired. You could even arrange them into class definitions for each "module" they're creating (operators, path, os, etc.) and access the functions as static methods of those classes.
You, sir, are a saint. Every time I ask a question in r/Matlab I think it proves to me that five years of engineering courses barely scratches the surface of what this program can do. TL;DR I've never heard of that command and it is exactly what I needed 
Since OP is taking a brute force approach you can add the constraint that the center four items (the RHS of your row equation above) cannot exceed 9,999. Any further search down that 'branch' can be ignored entirely as they are invalid. That will greatly reduce the search space.
Like any skill experience matters. It's amazing what a few years of programming Matlab 3-4 hours per day will do, yet I'm still learning new tricks.
That constraint is already satisfied by the bulleted constraints. But you could do something similar on the LHS, i.e. if `(A(1,1)*10 + A(1,2)) * (A(1,7)*10 + A(1,8)) &gt; 9999 ` then ignore any branches of the search where `A(1,1)*10 + A(1,2)` is constant and `A(1,7)*10 + A(1,8)` is higher (and vice versa).
yourValue = T(2,2); [I'd suggest you spend a day grinding through the links on this page.](http://www.mathworks.com/help/matlab/index.html#language-fundamentals)
Yeah tried this right away, no luck. I guess it must just be the format of the tables I am working with.
ok apparently in my situation T is a 1x1 structure, but the structure has a val that is a 4x3 double. The val is what I am trying to get after, any ideas?
Do you have a table? As in Simulink MuPAD table? Those are only 1-d though AFAIK so I'm guessing not. Or do you have a matrix and we have a confusion on terminology? 
Got it! variable=T.val(2,2); The program was storing the table data inside a 1x1 structure. Sorry if I made that confusing, never programmed with matlab before.
That is just a tiinnnnyyyy bit different. Just a little bit. Try: T.val(2,2)