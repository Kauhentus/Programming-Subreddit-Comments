Thank you for your input! I solved it by capturing the XLim and YLim values before drawing the rectangles, and by using uistack. It wasn't pretty but I guess that's just the way Matlab text objects work. Thanks!
I think adding breakpoints, would help you recognize where the issues are. Check what variables you have/want to have in the beginning of each loop and if.
Contour takes a grid. I do not think there is a way around that. But you can use [`griddata`](http://www.mathworks.com/help/matlab/ref/griddata.html) to make it into a grid on the "convex hull". If there are areas you do not want to plot, even within the convex hull, you can probably use `NaN` values
depending on the density of your points, you could also use interp2 to convert from randomly scattered points to a grid of points, and then run contour on that. Success will depend on the type of data. The smoother z is spatially, and the denser the points, the better this method will work.
Your comment just made my laugh in the middle of my class ðŸ˜‚. But seriously having 3 or more loops nested isn't ideal
I ended up using a wavelet but am still interested if there are any caveats in approaching things this way. My concern was regarding picking the appropriate frequency band based on criteria related to power, so I wanted to make sure I corrected for for the bias in the fft. I actually can't think of a good reason why this approach wouldn't be appropriate, but then again it seems that the pre-built functions that do this in matlab and, e.g., Chronux, return power spectra and leave out phase. 
thirdly you should read up on PID tuning with contraints. Last reply as this is easter vaction and it is late in european time and I am drunk [DONE](https://media.giphy.com/media/xT9DPhONuz1SpCONiM/giphy.gif)
Even when I saturate the output to something reasonable like -35 to 35 it just responds with the maximum and then does nothing else.
A link to the Simulink model and Matlab script are [here](https://drive.google.com/folderview?id=0B3H0BuKSbuHdWlBuVzNXdnJzOWM&amp;usp=sharing) You have to run the Matlab script to get the values into the workspace and then the Simulink model references them.
So whats happening is because you're giving fprintf more numbers than "slots" in the formatting to put the numbers in, it just keeps repeating the string until it uses all the numbers up. There might be a more elegant way to do it, but I would just split it into two fprintf() statements: one to print the limits a and b, and the other to print all of the elements of v.
try num2str ['the odd numbers between ' num2str(a) ' and ' num2str(b) ' are ' num2str(v)] 
Is there a better way?
I would suggest making your own PID from discrete components and looking at the scope for each of the Ki, Kp and Kd components.
Thank you for the descriptive explanation. I did a bit of research and found out about Singular Vector Decomposition being more accurate in terms of orthogonality in contrast to eigenvector decomposition. On that note, would it make sense to apply SVD on the covariance matrix and estimate the principal components using the *U* left singulars values? [U S V] = svd(cov(X)) I saw a couple of tutorials using the above, but would like to cross-validate that it conceptually makes sense.
Is your error on this line? newY=K(1)*(1+xdata.*lambda)*(2-(xdata/K(2)))*xdata/K(2); Even if it isn't, that line will give an error. If `xdata` is a 20x1 vector, and you are trying to take `xdata*xdata` you are trying to multiply a 20x1 vectors times a 20x1 vector, which is undefined. I can't tell you what you want to do, because it will depend on what you're hoping to have happen. 
It's supposed to pick up the values of ydata and xdata, build the plot and optimize the variables K(1) and K(2). The way i see it it doesn't even involve the multiplication of matrixes because it is supposed to use each of the values separately.
It's the same thing. pca(X) in Matlab uses the SVD algorithm on the covariance matrix.
I's actually not that hard. Just trying to find the queue length and system length using arrival times(AC) and departure times(DC). I've also put a few examples in the original post. Thanks for the reply though!
If you just installed a new PC, make sure to check your date/time and make sure you're in the current timezone with an updated time. This sometimes happens with newly flashed PC's. Online security certificates will fail if you you try to get to a site and your computer says its 3pm in 1980.
So if multiplication has that particularity, does division also have something similar? I just used / for division there.
The continues and breaks are confusing to me, as I never use them. I just handle everything in my loops with else and end logic, and sometimes just have an else (then leave it blank so nothing else happens, or put in some dummy line of code. Probably not the best way, but I am self taught. 
Oh okay, thank you very much, i believe i know ehat i need to do to fix this
I would do it with an if. Something like this: n = 72; foo = 1; if n&gt;9 foo=1:2; end n_str = num2str(n) for ii = foo a = str2num(n_str(ii)); % Your cases here end
Why do you want to display seventy-two as 'seven two?'
One thing that you can try to get the tens place is this: floor(num/10) where 'num' is the user-given input. This will return the value of the tens place of whatever variable you throw in there. Another useful snippet is: mod(num,10) where 'num' is the user-given input. This will return the value of the 1s place of whatever variable you throw in there. A sample code might look like this: num = 73; % number to print out num10s = floor(num/10); % find 10s place num1s = mod(num,10); % find 1s place switch num10s case 1 printf('one') case 2 printf('two') % etc switch num1s case 1 printf('one') % etc Hopefully that helps
..and sometimes I still wonder why engineering graduates with only MATLAB experience are hands-down the most god-awful "programmers" in existence... My complaint isn't levied at you, directly. It's your professor who should be horrendously ashamed of themselves. Hard-coding 100 switch/case statements is a terrible solution (just in general), but it's a solution to a terrible problem that hurts my brain so I guess fight fire with fire. num2str() is just going to turn a numerical value like 34 into a string '34'; it isn't going to spell anything out in English like 'thirty-four'. You could always do something terrible like use num2str to get the string, then iterate through each character, do a lookup from, for example, '7'-&gt;'seven', and then build the result up piecemeal. Here's code that hurts my soul to type out. Also, I haven't tested it. Your results may vary. value = 751; value_str = num2str(value); horrible_result = []; for idx = 1:numel(value_str) current_character = value_str(idx); if strcmp(current_character, '0') horrible_result = [horrible_result 'zero'] elseif strcmp(current_character, '1') horrible_result = [horrible_result 'one'] % (and so on through '9') end % Add a space separator if this isn't the last one. if idx ~= numel(value_str) horrible_result = [horrible_result ' '] end end It's entirely possible that some of the other MATLAB gurus around here will swing in and show you a much better way to do this.
There is a much cleaner way too do this than `switch` or `if`: use a cell array and index into it. Since Matlab uses 1-based indexing, it's not quite as clean as it could be, but: function word = getword(digit) ordinals = {'zero', 'one', 'two'...'nine'}; if digit &lt; 0 || digit &gt; 9 || (round(digit)~=digit) error ('digit must be integer from 0-9'); end word = ordinals{digit + 1}; To pull the tens digit from a two-digit number, you can divide by 10 and `floor` or `fix` the result; more generally, to get the Nth digit from an M-digit number, you can use: floor(number/(10^(N-1)) - floor(number/(10^N))*10 (Caveat: I'm on a phone, so there could be typos/mistakes)
Thanks for reply. I'm able to draw the cube. However, my code is using the voronoi alghorithm and I need to build a mesh cage around it to fix the boundaries. 
Two things: first, the figures are likely appearing on top of each other. Use the command *figure* before each new plot command to make a new figure window. Second, I don't think the scatterplot command is going to give you the type of scatterplot you're looking for. Also, scatter plots typically need a X and a Y value. Look at the documentation for the [scatter](http://www.mathworks.com/help/matlab/ref/scatter.html) function and the [zeros](http://www.mathworks.com/help/matlab/ref/zeros.html) function to create a zero vector for your X value, and plot it in a scatter plot with your data as Y values. 
EDIT: /u/eagle2k13's submission I think is a lot superior to this, because you're able to have each number outputted to a row without having to use a for loop. Didn't catch that the first time I looked at it. Only thing mine is good for at this point is error checking. Heres another way, and theres probably a ziliion different better ways to do it: x = input('gimme a number', 's') if isnumeric(str2num(x)) dum_length = length(x) for i=1:dum_length a{i} = str2num(x(i)); end else errordlg('Not a valid input') end This will output each individual number into a cell
I split using num2str() + '0' and then back with str2num 
If this is a homework question, please tag it as such--there was a very related question from another user tagged as a homework question, which makes me awfully suspicious. 
Worked perfectly. Thanks
Either make each its own figure, or use subplot. figure; subplot(3,1,1) histogram(A) subplot(3,1,2) scatterplot(A) subplot(3,1,3) boxplot(A) I am also not sure if you want to use scatterplot(). For a [scatter plot](https://en.wikipedia.org/wiki/Scatter_plot), you need two variables (i.e. *plot(A,B,'.')*)
When I tried the scatterplot function on its own, it gave me what I wanted.
hmm i just assumed the constant moved up my curve fit in the y direction so neglected it. The polyfit command i used only gives me 2 constants so i dont know how i would get the third one. I saw log10 being used like that in my book. But I'm not sure if its correct for an exponential then? Would you happen to know what the correct t way to do if would be then? No I'm not plotting on logy wouldn't that make my curve look like a straight line?
I think scatterplot() is what I need... when I ran it on its own it gave me a scatter plot, but when I try to run all three at once something goes screwy and only two show up. When I ran your code, however, three graphs *did* show up, but the scatter plot was blank, so you may be onto something... trouble is, I am not sure what I would need (in terms of x and y) to make said scatterplot.
MATLAB has a great help library, so the first step is to simply type help plot Here you'll see that if you only hand in `plot` a single input, it will use that input as your y-data and will make your x-data your index number. But if you hand it in two inputs, then it will assume the first one you handed in was your x-data, and the second is your y-data. So, in your final plot, you are plotting `col2` as your x-data and `col3` as your y, and then similar for `col4` &amp; `col5`. Now, one thing you say is &gt; time I dont need this If you want it to look like your oscilloscope, are you sure you don't want time? Surely the x-axis of your oscilloscope data is time?
Thanks. I got it after sometime screwing around with it. 
I don't really understand what you want. Your vector elfinal contains the results you seem to be asking for.
create an empty array and append to it. for example: x = []; %x is an empty array. x = [x y]; %adding y element in x array.
I want it to output elfinal=[1 0 27 64] so that everything is just one thing as opposed to it going elfinal= 1 , now elfinal=0 , now .... I'm trying to store all of the elfinals until the end and then put them into a vector. Is that possible?
Perfect! thank you that was exactly what I was looking for!! Works just how I want it to now :)
You aren't displaying elfinal, you're displaying only one element of elfinal each loop. The whole vector contains exactly what you want.
How would I go about making two separate arrays? Say I wanted the output to be positives=[1 27 64] negatives=[0] I've tried adding w=[] as well as x=[] and assigning them but it doesn't seem to work.
If you're assigning all at once (e.g, `a = [1 2 3 4 5]`), then it makes no difference; if you're assigning one element at a time (e.g., `a = 1; a = [a, 1]; a = [a, 2]...`), then you should preallocate. That goes for explicit concatenation--`a = [a, moreValues]`--and for implicit expansion (e.g., for a 1x10 vector A, using `A(11) = nextValue;` to expand the size of A). Don't stress too much about it for small arrays--the mlint will tell at you if you're doing it in a loop (the squiggly orange underline in the editor and orange bar on the editor's scroll bar), but performance won't be terrible if the number of elements is small. But it's a good habit to be in, since failure to preallocate (and vectorize) will kill performance on large arrays (what's "small" vs "large" is somewhat subjective and system dependent, but generally I would consider anything with fewer than at least a few thousand elements to be small and anything with more than a few hundred thousand elements to be getting large). 
Here is something that is probably a little confusing but could give you an idea how short matlab code can get elfinal = A elfinal(elfinal==0) = 0 elfinal = elfinal.^3 positives = elfinal(elfinal&gt;0) negatives = elfinal(elfinal==0) Execute it line by line to see what it does
Where do you want to inject the 6x6 matrix? I see code her without much explanation behind it. Your code is incomplete, and we can't do much with what you have. Here you get some data from a text file: %Get node coords from txt file [Xi,Yi;Xj,Yj;Xm,Ym] And from this equation: A= ((xi(yj-ym)+xj(ym-yi)+xm(yi-yj)))/2 I'm assuming each one is either a 5000x5000 matrix, or a 1x5000 array and you're doing your math incorrectly. From here you various other things, I see equations for shear stress (E/(1-v^2 )) and other random variables that have no initialization or input functions. However, I'll just ignore that and give you some code for what you want to do. If you have a 5000x5000 matrix and you want to inject a 6x6 matrix in for some values, this is how you would do it: % Create a a = zeros(5000); % Create random input, 6x6 matrix b = magic(6); % Inject b into a at the first 6 rows and columns a(1:6,1:6) = b; Just keep in mind when you inject b, you have to keep the number of rows and columns you're moving over consistent. You can even do something like: a(1:2:11,1:6) = b since I properly kept track of the number of rows and columns I'm injecting. However, I think you have a few other problems to work out with this code first. EDIT: Nevermind, k is your stiffness matrix, and you get it from here: [k]=tA[B]^T [D][B] You are going to need to clean the code up to here before we can really help you.
 figure(1) plot/whatever(arguments) hold on plot/whatever(arguments) .... or you ca have them in one figure (not axis) this way: figure(2) subplot(2,2,1) plot/whatever(arguments) subplot(2,2,2) plot/whatever(arguments) subplot(2,2,3) plot/whatever(arguments) subplot(2,2,4) plot/whatever(arguments)
Sorry for the lack of completeness, basically I copied in my psuedocode and was fleshing it out from there. Where the only thing I didn't know was how to inject the matrix. I appreciate your advice with this. 
No problem, hope it goes OK.
Imagine the Cartesian plane. At every point, there is an x coordinate, and a y coordinate. One example of mesh grid is you asking it for the coordinates of all the integer points in a rectangle from the point (2,2) to (5,4); meshgrid spits back all of the x components in one matrix - which is a bunch of columns that are the same within each column - [ 2 3 4 5 2 3 4 5 ] 2 3 4 5 ] and another matrix that is the y components, which vary orthogonally as you'd expect: [ 4 4 4 4 3 3 3 3 2 2 2 2 ] This is extensible to higher dimensions. This way, if you wanted to evaluate some function in 2-d, you could get the 3-d altitude by plugging in the x part and the y part. 
Okay, it feels like cheating but this will have to do: temp = cell(0); % needed for the empty initialization case if(isempty(temp)) % beginning of normal code temp = Instances else temp(1) = Instances end cheers
As u/EphemeralMemory said, use `hold on` (or `hold all`, if you want the new plots to cycle through plot styles as if you had added the plots all at once) or `subplot` to add plots to the same figure without removing the older plot objects. For future reference, though: please format your code. In reddit, place each code block on its own line, preceded by a blank line, with four leading spaces *plus* normal indentation (what the Matlab editor generally gives you if you highlight the code and press &lt;Ctrl&gt;+i); or, for an inline reference, surround it with backticks (the character on the tilda (~) key). Alternatively, use pastebin or another such site to format your code. Formatted code is much, much easier to read, and all of this is covered in the sidebar. 
I'm sorry but i still don't understand. Could you use a simple shape as an example? For example a block with dimensions 5*2*10(x,y,z) Lets say the mesh is x = [0 1 2 3 4 5] y = [0 1] z = [0 1 2 3 4 5 6 7 8 9 10]. There is no value of 10 anywhere in the mesh.
I think this is a fact of life with code. Maybe just use spacing more to your advantage. But what you have isn't too bad. Perhaps the only other thing you can do is write it out in comments in a different way
It simply fills in the space. Your X, Y and Z are the axes of your space. You use meshgrid if you want arrays of all points in that space. Then you can used the generated arrays to generate data in the volume. 
One thing I do when writing a complicated equation is to break it up into sub-expressions. This makes the overall structure of the final equation much simpler, and makes it easier to isolate bugs. 
Meshgrid creates multi-dimensional matrices from vectors which allows us to do higher operations over several spaces with ease. Suppose we have a function of two variables: f(x,y) = xy, and suppose we know the domain of each variable: domain of x is (1,4) and the domain of y is(10, 40). To get f(x,y) we want to multiply all the possible x's and all the possible y's. One way we could do this would be 1) create vectors for each domain with linespace; 2)repmat to create similar size matrices; 3)point-multiply. %horizontal x vector x = linspace(1,4,4); %vertical y vector y = linspace(10,40,4)'; %create same size matrices X = repmat(x,numel(y),1); Y = repmat(y,1,numel(x)); %point-multiply Z = X.*Y; Meshgrid makes this process much easier by removing the repmats: [X Y] = meshgrid(x,y); Z = X.*Y; 
You can add a line break with ... So: ft = ((16*(-1)^n)/((pi^2)*(2n-1)^n))... *sin(((2*n-1)*pi*t)/4);
Did you Google it? My numerical methods textbook had Matlab code snippets for this exact thing, and most of the other main methods. 
This is exactly what I need. Cheers
with minreal() , you can get it in a lower order..
Have you tried this one WEIRD trick that solves all programming problems? Teachers don't want you to know! Google it. Try something. See what happens! Professors hate it! 
If you just want the built in one then it's left divide \ if you want to program it there are lots of guides out there. 
Wow good one. Forgot to laugh. 
Ask bad questions, get bad answers. 
But how?
Sure. 
Yes, I know the theory behind it (MLP,RBF, perceptron,neuron etc...) And I made matlab function approximation programs. So...I thought that I should create sample images, convert it to binary images. Those are matrices so I can give it to a network as inputs, and the outputs would be numbers (1,2,3). Is this a good method or I where should I start to look for these kind of problems? 
without seeing your code or application, it's almost impossible to say. but when in doubt, throw RAM (amount, channels, and bandwidth), CPU (speed, cores, other?), GPU (memory size, speed, core speed, CUDA/OpenCL capability) at it. it might help, or it could be a giant waste of money if your code hasn't been optimized
As you say, this only works in the case where x and y have the same dimensionality. The link provides a way to compute this for heterogeneous matrices where only the second dimension matches. Whilst this is implemented within matlab as pdist2(), I found it good to know and use (as I was working in a different language)
At the end of my most recent calculations I have approximately 1200 Matrices and vectors which took about 20 minutes to save to the hard drive. These are saved all together at the same time, appending them to a current save file These are only saved to the hard drive so that I still have the results to recall whenever I need them in future. Now that the important variables have been saved I clear the workspace and begin again.
You can save to text, and import a text. It may be the easist, non-expensive way to do it. I'm not saying organization would be easy, but its possible, that or find better ways to organize your data. If you want to continue to do it that way, then check the task manager in the way I mentioned. You either need more ram or better HDD's. My money is on the ram given what you said.
There's no universal answer for this. It depends what you're doing, how you've written your code, and what your budget is. I run Matlab on a workstation with 12 cores, 32 gigs of ram, and a video card dedicated to doing gpu calculations. But your needs may be different 
Thank you for taking all this time. The Task Manager says that Matlab uses about 1 GB of RAM. My computer has a total of 8 GB of RAM. Why is this not enough?
Photoshop is in no way an image processing tool that can replace Matlab at all. Matlab is heavily used for image processing in many fields. Photoshop is used for art and advertising. There's absolutely no overlap between the two. 
I've used photoshop in the past on MRI stacks to modify the contrast and export it in one go, I found it was easier to do it there. I've also used it to interpolate images, clear images, run some smoothing etc to enhance what I want to see, and filter what I want out. The fancy UI makes it a zillion times easier. After I have modify my image stack, I bring it in to MATLAB for my analysis. Image processing doesn't just mean quantitative analysis. Photoshop is arguably the most useful piece of software in the world for all the above functions I mentioned, and millions of people use it for more than just art and advertising. I'm not saying you can't do the above in MATLAB, but the interface halved the normal time of my workflow because I could edit it on the go and it was much easier to see what I was doing. With my work, noise has a really big effect on the wave images I was analyzing, and while MATLAB could filter and smooth properly I frequently had to save -&gt; smooth -&gt; check if it was good several images -&gt; reload and repeat if it didn't work well. So yeah, there is a overlap between the two. Possibly not in the way you're referring to, but there is definitely a use for both. Photoshop is useful for a **lot** more than simple art and advertising.
Christ, that's terrifying. 
I would say, these aren't really matlab questions as they pertain more to usage of the control system toolbox. I would start with doc connect matlabs documentation is very good and often provides tutorials on common topics. 
You have A(k,1), but I don't see k defined anywhere. Shouldn't it be something like B(i:i+s,j:j+t)=A(1:s,1:t)?
I don't remember the proper function . But you can create plots in a matrix array, as 2x3 or 3x6 group of plotted graphs. I think on the help files of the plot() DinamÃ³metros function you can find that if you put plot(1,1,1) it will be the top left graph. Plot(1,1,2) the top right, and so on
ahh, so I should be putting [Homework] in the title you mean? I thought just the flair was needed, but I'll make sure to do that in the future!
what are you saving using append? numbers, images? how much bytes are you saving each time? are you using may files or writing to text files? the fastest method of saving numerical data is usually going to be hdf5 files via matlabs h5write. there are some good articles in the documentation with examples. 
I find single threaded performance and memory bandwidth being the biggest help. Cause parallel toolbox is a pain to use, and compared to other languages, memory allocation is incredibly slow in matlab. So ideally find something with DDR4 ram. edit: like others said, have some openCL or CUDA capability is nice.
Inside which loop exactly? I have it inside the second loop and that creates 3 plots but once I increment m and n, it seems like the plots from the first iteration of the loop get overwritten. 
Cheers, I've edited the post to [solved] as the repmat function saved me.
You are assigning an array to a scalar value in this line: map(s) = (datamap(1,x)); Now, 'datamap' is a matrix read from your excel sheet. Taking: datamap(1,x) will yield a 1-D row vector. 'map' has not been pre-allocated, so MATLAB has simply allocated 'map' to start as a scalar value, and will dynamically increase its size with any new indices taken. So on the first iteration of s, i.e. s = 1, we actually have: map(1) = datamap(1, 1:30); 'map(1)' is a scalar, datamap(1, 1:30) is a 1x30 vector. You cannot make this assignment. To make this work, I suggest pre-allocating map as a Nx30 array, i.e. map = zeros(length(subs), length(x)) Then assign each row from 'datamap' as follows: map(s,:) = datamap(1, x); 
isequal
yes that's exactly what I was looking for. lol it's been a while since I've had to use that. Thanks man! 
You should also consider using Kronecker product: kron(M,N) With this you can implement the functionality of replicate in one line without using loops.
No worries, glad to help!
You have a special Matlab function `assert()` for checks like this, that plays nice with the Matlabs internal error control. You would use assert(rowsA == colA, 'matrix A is not square matrix, please use a square matrix'); assert(det(A) ~= 0, 'matrix A is singular, please enter an invertible matrix');
Hey, i was hoping to generate a model that runs through time, investigating additional heat flux from sill-sediment-complexes in rifting margins. I need the inputs to be sedimentation rates (this is dependent on the distance from coast), and the spreading rate. Other than those inputs i need the program to then calculate the compaction of the sediment (this is equal to the rate of igneous intrusion), then from here i need the program to calculate this as a "heat packet" that heats the additional layers via conduction. I hope that maybe makes more sense, im really sorry but very new to computer modeling.
Do you mean an executable or just a UI? GUIDE is the built in UI editor. Eitherway you can compile your code to an executable that runs on any machine with the Matlab runtime installed. 
Sigh, it tells you in the comment box how to format your code for comments...
The command to bring up the compiler tool is deploy, and watch out. Deploying MATLAB code isn't as simple as compiling it to a exe.
So, printing a string like that isn't something that Matlab does on its own. Clearly you've written code in one of those functions which is printing that text. So that means you know where the code is, and you know it's not in the code you pasted, and you know how to make it stop. So what's the he question? How do you open an m file and comment out that line of code? 
Use 'hold on' between plot commands to put them on the same graph, if that is what you are asking. For log scales and such I find it easier to plot the whole data range and do formatting in the plot window until you figure out how you like it.
Can you use the image processing toolbox? If so, some useful functions will be: rgb2gray imgaussfilt To apply some minimal smoothing so that each circle is fully connected bwconncomp To give you indices of each connected circle ind2sub To turn those indices into x and y positions, then the z dimensions can by analyzed separately for each color Matlab has some decent tutorials on this type of stuff on their website.
I would forget about using semilogx and just do set(gca, xscale, 'log') 
You are first plotting a semilogx for the data. Then you hold a and plot a linear "plot" for the straight horizontal line. Correct the "plot" for a semilogx 
I didn't even know you could edit from the plot window thanks!
When I use this command the x scale doesn't go to log. If I change the scale to log in the plot edit window my -3db line disappears Can you actually plot a straight line on a log scale graph? 
Arrays have a homogenous data type. They are either numeric doubles, singles, integers, logicals, etc... Structs and cells, on the other hand, allow heterogeneous data types and data of different sizes. In a 1x2 cell array C, for instance, C{1} could be a 10x10 numeric matrix, and C{2} could be a single string. Similar with structs, except they have fields. So you can think of cell array cells and struct fields as "bins" where you can put almost anything. Even other structs and cell arrays! The closest there is to an "array of strings" in MATLAB is a cell array of strings. Most text processing you'll do in MATLAB will utilize these.
Try something like S(n,:) = ... or S(:,n) = ... By the way, this problem can be vectorized easily: x = 0:.2:3; n = 3; X = repmat(x,n,1) I = repmat((0:n-1)',1,numel(x)) Now you can compute for example X.^I In this solution you have to know n (the number of terms in the polynomial) beforehand, which in case of a simple function like cos can be estimated from the reminder term. Or you could just take n large enough. Or you could do a similar accuracy check in a loop as before.
The problem is here: map = zeros(length(subs), length(x)) This assigns a matrix full of zeros to 'map'. Generally, this is used to pre-allocate the size of a matrix, before you do any manipulations (filling your matrix with zeros is arbitrary, essentially just filling it with anything then fill in the numbers). To make your code work, do that step only once, outside your for loop at the beginning. You do not want to reallocate your map matrix full of zeroes on every iteration, this is causing your matrix to be overwritten with zeroes each time. For clarity: function BloodPressure %Do all your other steps the same %.... %Preallocate map matrix x = 1:30 map = zeros(length(subs), length(x)) %Now do your loop, don't refill your matrix with zeros for s = 1:length(subs) %Do stuff... end %Do other code the same end
I really like his solution. My solution was directly implement ||u-v||^2 without expanding it: dist = @(u, v) sqrt(sum((repmat(reshape(u', [], 1, size(u,1)), 1, size(v,2)) - repmat(reshape(v', 1, [], size(v,1)), size(u,2), 1)).^2, 3))
Thank you. 
If i could have a known number of terms, i could have done this relatively quickly. But my professor insisted we add terms until the nth term is &lt; 1% of the total sum. 
My problem isn't so much the equations, I have all of the inputs, and relationships. My issue if with chosing the correct commands in matlab . Thanks for responding, I appreciate that I sound a little/lot babble-y
Can you [provide your code](http://pastebin.com), so we can attempt to reproduce and mitigate your issue?
'load()' should also work for this purpose, and I believe it will be a little simpler
You cannot control a fourth order system using a PID controller. Check out the Root Locus plot for 1/s^4 . Most of those tools probably expect positive-only plant models as well. I think your translation model Px is wrong. From a dynamic standpoint, your integrated pitch rate will give you your pitch angle. Your net thrust projected onto the normal plane using that pitch angle will give you force to move you in that plane. Divide by mass to get acceleration, integrate force twice, and you're at a position. That is only 3 integrators, not 5. You also have the same zero repeated in Px, something extremely rare in single-body control systems. That negative sign doesn't seem right, either. If you pitch down in a direction, that will create a force to push you in that direction. While a pitch "down" is negative when using a reference line which is parallel to the ground, the force you are creating with pitch is perpendicular to that angle, and so a pitch "down" is positive from that reference. Pitching "down" is a forward force, and I don't feel like there should be a sign change there. It is also my opinion that you redesign your inner loop to be a PD or PID controller on pitch ANGLE instead of pitch rate. Your outer loop is going to be looking at positions and generating *force* commands for the pitch controller. There is a direct and physically meaningful relationship between pitch angle, thrust, and translational force - It's just geometry. In order to get pitch rate from thrust and force requirements, you would need to take a derivative, which is a bad idea. Moving to a PD on position would actually be really easy. All you need to do is add an integrator into your plant, remove the integrator from your old I gain, it becomes your new P, and add a discrete derivative to your old P gain, it becomes your new D. That also gives you the ability to add proper integration in order to improve low frequency disturbance rejection.
Yeah of course! [Here is the script that makes the necessary audio output](http://pastebin.com/xmFqA8Nk) and [this is the simple loop to test its response for every throttle input](http://pastebin.com/H3hYvr7p). A little background might be necessary, I am plugging an auxiliary cable into the headphone jack of my laptop and connecting it to a radio transmitter's trainer port. This allows me to control a tricopter using the PPM script (the 8 inputs correspond to 8 radio channels). All of this has been tested already and it does in fact control all of the on-board servos and speed controllers. The issue with the lag is that this obviously causes a delay with how the tricopter moves. Side note: There might be some redundancies in the main script, this is a rather early iteration 
&gt; Because they are all of the same type, your processor can, for example, add a value to every element in that array in one step, rather than having to add a value to each number individually (which is much slower). Are you sure that's true for CPUs? This sounds more like GPGPU computing to me. Although I'm not knowledgeable about the details of modern architectures.
I like you. If you can't say something helpful, use an awesome lyric.
Just change your -0.1 z command to be a function o true grayscale value Something like &gt;((255-GrayValue)/255)*-0.1 So that the depth depends on the gray value. This will make a value of 255 be a zero depth plunge (or make an if statement so zero depth is ignored even for XY commands) and a value of full white, which is zero gives you a 0.1 depth hole
Ah, this is quite insightful, thanks! My Px model is based directly on the system and control matrices - I have a 12x4 matrix of transfer functions: 12 state variables: [u v w p q r phi theta psi x y z] for 4 controls: U_pitch = [1 1 -1 -1]; U_roll = [1 -1 -1 1]; U_collective = [1 1 1 1]; U_yaw = [1 -1 1 -1]; I've already expressed the image I posted originally what I thought Px should be (the transfer function of x (10th state variable) in relation to the pitch control, so I call it using something similar to "sysTF(10,1)". However considering your comment, if I use "sysTF(10,3)" instead (x in relation to the collective thrust control), which doesn't make a whole lot of sense to me, I DO get: 4.795e-09 ------------ s^3 + 10 s^2 Which is controllable - though I'm still not entirely sure that's what I should be using. Concerning your advice about using pitch angle instead of the pitch rate... I definitely see your point and in fact that was the approach I was using a while back until my advisor told me that using pitch rate would make for a system with much speedier response, and apparently it should work fine as the inner loop, and that apparently I don't need to take into account the mathematical relationship between pitch angle and thrust in the horizontal? I'm confused :( I'm seeing my advisor about it in an hour or so, hopefully he'll clear at least some of this up. I'm having the classic problem of having an elusive advisor! ------- **update**: Apparently there's an issue with the code I was given which computes the system matrices, the pitch to x transfer function shouldn't be of 5th order as we established -- but not even my advisor knows why (even though he wrote the code), he's going to get back to me in a few days about it. It's both very relieving (that it wasn't my fault) and very frustrating...!
Google yyaxis. Click first result. Profit. 
[Relevant MATLAB link](http://www.mathworks.com/help/matlab/ref/plot3.html)
love you 5ever
I think the confusion may be due to unfortunate similarity in the choice of naming for the variables. hObject is a reference to the GUI object behind the scenes in the Matlab interpreter, it is also called a "handle" to the GUI object. "handles" is the struct of data you want to associate with the GUI object (usually so you can access it in callback contexts). &amp;nbsp; So, guidata(gui_handle, data_struct_to_be_saved) Is the syntax to save data for future use. And, data_struct = guidata(gui_handle) Is the syntax for retrieving the data when you need it later. Hope this helps. &amp;nbsp; edit: So after rereading your question I thought that maybe I hadn't clearly answered what you asked. The command, &amp;nbsp; guidata(gui_handle, data_struct) &amp;nbsp; does not store the **data_struct** inside **gui_handle**. Rather, the struct is associated with a GUI object that exists in the back end of the matlab environment (outside of the workspace). **gui_handle** is the "id" or "pointer" to the correct object. This is useful (necessary) because GUIs are inherently callback driven. When some callback function **f** is called (e.g. when the user presses an onscreen button), you need a way to access the state of your program. The mechanism for accessing state is supplied by the **gui_data** function providing a "hook" back into the (state saving) matlab interpreter, and the **gui_handle** pointer allows you to associate with the correct state struct.
huh...
Have you tried plot()? What wasn't working for you? 
plot3(x,y,z)
Your example looks like a diagram, not a graph.
Thank you. I'm not in front of my computer to try things, but this helps. I guess I was under the assumption that **handle** was more than just a *struct*, now I realize it's not. In the past I leaned that a handle is not just the value. For example, a figure with handle "1" I can't just use set(1, 'string', 'hello') . I have to use set(figure_handle, 'string', 'hello') . 
Use this to call your "PulseSignal.m" function and see if it fixes the issue... clear; clc PPM=PulseSignal(-100,-100,-100,-100,-100,-100,-100,-100); n=2; for t=-99:100 PPM(n,:)=PulseSignal(t,t,t,t,t,t,t,t); n=n+1; end PP = PPM'; soundsc(PP(:),44100)
Is the error "output value grop not assigned during function diffusion()"? Because that function doesn't appear to assign it's output value. 
One thing- you almost assuredly don't want to use repmat. Look at `bsxfun` instead, which is a much faster way of doing many of the same thing. But as mentioned, we need to see your code (try using pastebin) to help more. 
Well, `grop` is handed in, and thus `grop` can go back out... but the function doesn't modify `grop` at all. Also, `rate` isn't used. I'm guessing he missed some of the code (hint: look on the website you took the code from- you didn't get it all). 
how do you set the color to black?
Awesome, that helped a lot. So far i get the image, but instead of black its pink^^ the color ranges from 0 to 1, so i thought maybe 0 would be black..
Nope, if i change the value to 1 its white..
No, gro**d** is passed in, gro**p** is passed out. Your real point still stands though - his code is very incomplete. 
Try googling, or maybe someone here knows what value black would be for each of three components then.
A few of them come when you order the software in the mail. My lab has a oooooold one (had? haven't seen it in a few years) when we got a research subscription for 2006 or 2007, that was way before my time. [Is this the kind of thing you were looking for?](http://www.redbubble.com/shop/matlab) Or [this?](http://www.cafepress.com/+matlab+stickers) Try googling around to find what you want, I don't think any one place sells it specifically.
Yes. Although ocammsphaser had a more elegant solution. I'd suggest going with that for better marks (if you have the image toolbox).
Well, the square root of your machine epsilon is the default tolerance Mathworks chooses for lots of their functions. It's an arbitrary small number. It has nothing to do specifically with minreal. 
I've seen them given out at on-campus Matlab seminars conducted by Mathworks reps.
They'd probably be happy to mail you one, maybe even free. Shoot them an email. 
It is a straight forward search of poles and zeros that lie within the tolerance of each other. So if |p-z|&lt;tol where p and q is any possible pole-zero pair, they get removed from the Transfer function
This is some partial code that does what you need. I've intentionally left a lot for you to do, and you won't be able to complete the work without understanding the mechanics of thresholding, or the means of image data storage (which i suspect is what your teacher is wanting you to grasp) im = imread('vnoygQH.jpg'); imtool(im); %column 250 %Rows: 240, 490 im1 = im(1:240, 1:250); im2 = im3 = im4 = im5 = im6 = im1mask = im1 &lt; % some appropriate threshold; im1_colour = im1.*(uint8(im1mask)); im1_average = mean2(im1_colour(:,:,1)); Hope it helps.
They're not at all Matlab seminars I've attended, but I've seen them at every single student competition event Mathworks has sponsored. Aside from that, contact your school's Mathworks rep - he/she might be able to help you get a hold of one.
I don't have the image toolkit, but I managed to find some code that seems to do what I need to to do. By replacing all the contextual instances of "their code" with mine I think I can get it to work. Thank you both for the help :)
Thanks! I'm actually netting with him tonight and I hope to at least have enough prices that he can help me put them together. All the help is appreciated, thanks and have a great weekend!
Let's say you take an FFT of 2 seconds of data sampled at 5Hz - so you have 10 data points e.g. x = randn(10,1) What is the FFT of this? &gt;&gt; fft(x) ans = 7.0489 + 0.0000i 2.1978 + 0.6830i -2.8775 - 1.2516i -2.9108 - 3.6509i -4.5341 + 0.3688i -4.2986 + 0.0000i -4.5341 - 0.3688i -2.9108 + 3.6509i -2.8775 + 1.2516i 2.1978 - 0.6830i What are the corresponding frequencies? The Nyquist frequency is 5Hz/2=2.5Hz, and the frequency resolution is 1/2 s = 0.5Hz, so we have f = [0 0.5 1 1.5 2 2.5 -2 -1.5 -1 -0.5] . This is referred to as the _two-sided_ spectrum, because it has both positive and negative frequencies. There are two things to notice about this 1. The zero frequency and Nyquist frequency components are both real 2. All of the other frequency components come in complex-conjugate pairs (because the signal was real) Where the scaling comes in is if you consider the single-sided spectrum, so only examining the frequencies [0 0.2 1 1.5 2 2.5]. However, the power in the spectrum can be obtained by squaring and summing the frequency components i.e. the energy per period in the time domain sum(x.^2)/length(x) is equal to the power in the frequency domain sum(abs(fft(x)/length(x)).^2) So if you only keep the positive/unique frequencies corresponding to the first 6 entries of fft(x), how do you ensure that the power is still the same? You have to double-count all of the components that have corresponding conjugate pairs. So you have to do y = fft(x)/length(x) P = abs(y(1:6)).^2; P(2:end-1) = 2*P(2:end-1); sum(P) Note that if you have an odd number of points in your FFT, then you won't have a Nyquist frequency component. For example, if you have 1s sampled at 5Hz, then you might have &gt;&gt; fft(randn(5,1)) ans = 2.3004 + 0.0000i -1.4497 + 2.1500i 1.9783 + 0.1288i 1.9783 - 0.1288i -1.4497 - 2.1500i where the Nyquist frequency is still 2.5Hz, but the frequency resolution is now 1Hz. Now, your frequencies are [0 1 2 -2 -1] - you can see that 0 appears once, but 2 appears twice, and there is only 1 real-valued component (the zero frequency). So you scale all the components except the zero frequency component. So whether you do P(2:end-1) = 2*P(2:end-1); or P(2:end) = 2*P(2:end) depends on whether you have an odd or an even number of samples in your time series. 
If you're just dealing with 2x2 matrices like in your example: C=[A.*B; A.*flipud(B)]
Thank you! I did something very similar to this, I guess Matlab doesn't like playing the sound at every step in the loop. Playing it with a giant matrix comprised of all pulses instead cut the run time down tremendously (~16 seconds to 1.2 seconds!)
Sounds like you're trying to plot 370 line plots, with each line having 4 points. Don't overcomplicate things. 
I can't think of an exact solution, but maybe you could come up with something using bsxfun()? Worst case, bsxfun and a single loop would do it without too much inefficiency. I bet there's a clever way to do it without a loop though. 
As an aside: have you considered using ode113 which ships with MATLAB? It is meant to be the main alternative to ode45 for problems where high accuracy is required as you're describing. It is a variable step variable order solver of orders 1-12.
I have created an extensive set of notes about [simulating diffusion in matlab here](http://bradleymonk.com/Brownian_Motion).
Makes perfect sense. Thank you for the detailed explanation.
Why do you want to learn MATLAB? What is your end use?
At my university, biomedical engineering faculty and professors are always looking for help to guide their research. Namely, someone fluent in MATLAB will be of great use to their lab. Would you happen to know how MATLAB would be used in a BME/biological lab setting? I'd like to get familiar with a lab so one day I can start publishing papers and strengthening my grad/medical school application. 
You are my hero. Thanks!
The reason people use Matlab over the dozens of other languages they have available is because it caters to science and engineering professionals. It has a lot of built-in functions for analysis and design, plus high quality documentation. It'll be hard to say how to be fluent when there's so much it can do. I could know all about Control System Design and nothing about image processing. And I could still feel confident in Matlab to the point I would add it to my resume. The best way to learn Matlab and show that you've learned it is through a project. I'm not sure where you would find a project to do, but that's definitely the best way to learn. 
Do you have an array or Clay objects and you want to set the properties of each independently? You could override the set methods. For example function this = set.aProperty(this,x) assert(numel(x)==numel(this), 'sizes dont''match') x = num2cell(x); [this.aProp] = x{:}; end Sorry, I'm on a mobile, so, yeah. **Edit** Okay, you cannot override the set method this way, but you can "deal" the values the way that I showed. Perhaps you could override the `subsasgn` method, but meh. [objArray.aProp] = x{:}; % Where x is a cell array the same size as your object array 
You can do this with any image plotting function: im = imread(yourRGBHeatmap); transparencyChannel = [an mxn matrix of your transparency values] f = imagesc(im); set(f,'AlphaData',transparencyChannel);
This looks promising. You're a saint!
Does that even need to be a class? The way you presented it, you might as well use a structure. Is there more to your class that you left out of your post for simplicity? 
Thank you so much! Thank you for your time! It is 370 people with 4 measurement points which were measured at 4 different times. I know it is going to be a bit cluttered... how would you make this into a 3-d scatter with the id numbers on the z? I imported the matrices as a b c and d and tried to run it. Am I supposed to do anything else besides this? There were parenthesis missing that I will fix on Monday. Thanks so much. Maybe it would help if I just posted the data?
the matlab documentation is excellent. I learned using Attaway's matlab book but i also didn't have any prior programming experience. also learn the vectorization and pre allocation tricks. it can save you a lot of time. I use matlab/simulink for controls design and it's pretty much the only game in town. but if you have a choice and your doing things like image processing and plotting I'd give anaconda Python a look. 
The only way I've found to do this is to write a custom window that displays files and folders as a list or a uitree (or, better, a uicheckbox tree--see undocumented matlab for details), depending on your needs; it was a pretty decent amount of work to fully implement it (with keyboard callbacks to jump to selections and expand/collapse nodes, support for passing multiple default selections and auto-scrolling the viewpane to show the selections, etc.), but not too bad--and the results were great for what I needed (selection of both files and folders at multiple levels and locations within the tree). 
Yeah, just to riff on this, you could probably do what you want with a Java swing component. The website [undocumentedmatlab.com](http://undocumentedmatlab.com) is full of all kinds of stuff like this.
i did something similar for system id work, i used a function called lsqnonlin. the only issue is you need to have the optimization toolbox. i am pretty sure python will have a nonlinear least squares, so it shouldnt be too hard to port it. http://www.mathworks.com/help/optim/ug/lsqnonlin.html
In the worst case you can implement your own least squares fit from first principles (provided you have some matrix library for python). It's not *that* tough :).
What exactly is going wrong with cftool? This should work quite well. 
Set this up as a minimization problem. In other words, if you want an approximate solution to an expression LHS = RHS, you want to minimize LHS - RHS. Then use any of the various minimization tools in Matlab. Your problem may very well be linearizabe as well, which really gives you some options. A decent starting point would be fminsearch, but there are many other options, especially if you have the optimization toolkit. Check out the documentation for these functions and the descriptions of the algorithms they employ. Honestly that portion of the Matlab documentation is one of the best textbooks on applied numerical optimization methods that I've ever found. 
First of all, I suspect using a pre-written java class to do your image processing in an image processing assignment is going to be considered cheating. That said... Are we to assume that your function named decode_qr is renamed QR_group_project? If not, I don't ever see it being called from your script. In decode_qr, you pass in an img argument, which you never use. I know the editor is giving you a warning about this. Why are you ignoring warnings? In your script, you call QR_group_project in two places. The first time you assign it to a variable "a", but then instead of using this variable you call QR_group_project again. Why? Also you never appear to initialize Inventory. This is all pointless since you haven't even mentioned how your code is failing, but fixing the obvious problems that I know the editor is already notifying you about might be a good start. 
The particular data I am working with is supposed to follow two exponentials, the first being a very fast acting rise that plateaus after ~1 second and then for the rest of the curve until 30 seconds the other steadily gains. cftool does a good job overall on the curve, but it misses the first ~0.5 seconds which is critical for me.
Could you point me to an example where someone solves a similar problem with python? Thanks for the suggestion. 
I don't have an example in python, [but here is an example](http://www.dtabacaru.com/ls.m) I wrote for someone else to extract parameters from data that represented a sinusoid. I can probably help work out the equivalent MATLAB code for your particular function but I wouldn't know how to write this in python without some research.
You compute them by fitting. If you have some data which is a set of (x, y) pairs, and a model with parameters A, B, C, D, you want to find the parameters that minimize the sum squared differences between the model and the data so you want to minimize sum((modelFunction(x, A, B, C, D) - y)^2 ). Write that as a function of the parameters and minimize it. If you don't grasp the basics of fitting and optimization, I think you're getting a little ahead of yourself by trying to use Matlab. You must understand the problem before Matlab can help you solve it. 
I'm not sure to be honest, this is the first time I have used matlab, however I was planning on calculating the temperature gradient of the sediment packet as a function in this class. 
It was giving a dimensional mismatch but seems to be working now that I've just tried it again.
Cell arrays can contain arbitrary objects, I think, but indexing gets weird.
This is my current approach, is this what you mean? radius = 3; r_offset = (radius-1)/2; left_regions = zeros(num_coords,radius^2); for i = 1:num_coords r = coords(i,1); c = coords(i,2); region = left_grey(r-r_offset:r+r_offset, c-r_offset:c+r_offset); v = reshape(region, 1, []); left_regions(i,:) = v; end
The trouble I ran into with this approach was generating multiple ranges like r-1:r+1 with r being a vector. I don't know a syntax to make that work in one operation. The online Octave implementations I used just generated a range based on the first element of r.
Thanks for your reply. I dont think it is following the peak, just that it starts at 0 and goes up because it has a positive slope. I showed the value of two peaks to prove that the general trend is a downwards one, it can be kind of difficult to see. [Here](http://i.imgur.com/SkTLEOI.png) is another one I have done using the same coding and It gave me the trend I wanted. I am slightly confused by the inputs of the quantile regression. If i just have an x column and y column and want a straight line back, what do I use for tau and nboot?
Hmm, I thought you were trying to get the trend of the peak. Are you plotting the entire portion of the signal that you are running the regression on? If so I suspect something is wrong with how you are using polyfit. If not, it could be something in the data that isn't shown that's throwing you off. To use the quantile regression, tau is the quantile so .5 if you want the mean and if you want the peaks it would be be a tau of .999. nboot is how many iterations of the bootstrap (quantile regression is not an analytical solution like least squares), I would just do 100 or leave it at the default of 200.
Yes, looks right to me. Instead of getting the fit by multiplying by the slope, you can use polyval and quantval which will automatically account for the intercept as well (the second value of ebulk). The reason you are getting different results is because your data is doing some interesting things. The average value is increasing, meanwhile the peaks are decreasing. So you may have decreasing power (smaller waves) but increasing offset (the average centerpoint of the wave). Does that make sense? If you are interested in the offset, continue to use polyfit or quantfit. If you are interested in the size of the peaks, you are most likely interested in the power of the signal, which is going to require a spectral decomposition approach. 
Hmm youre right! I didnt notice that before. Hmmmmmm.. Im not sure what I want lol. Ill continue to work at it, thank you so much for your help.
can you try the following and tell if it works? v % coordinates [x1 y1;x2 y2; ..] % the 10x10 matrix stack={} for k=1:1:n v31=[v(k,1)-1 v(k,1) v(k,1)+1] v32=[v(k,2)-1 v(k,2) v(k,2)+1] v4=combinations(v31,v32) % combinations.m avalble from mathworks.com v4(sum(v4)&lt;2)=[] % remove coords outside A bounds L1=A(v4) % read ci yi and surroundings stack=[stack;L1] % with cell can have L1 length variable end John jgb2012@sky.com
Your post has been removed, but don't worry- it is an easy fix to get it reinstated. Please format your code as code (putting 4 spaces in front of each line) or submit it to a site like pastebin to make it easier for readers to read your code. Once you have done so, respond to this message and I'll reinstate your question. 
Whether you're plotting the values or passing to a function like `max`, you can use logical indexing to limit your array to values that meet a certain condition. For example, to return only the elements of A that are greater than 5, you could use: A(A &gt; 5)
Lol motor - imagery task. I know THAT game! Google is your friend. http://www.mathworks.com/matlabcentral/newsreader/view_thread/1588
note that some vectors will be shorter than 9 because the coordinates may be right on A limits (then the vectors you want are length 6) and right on A corners (then the vectors you want are length 4 only). The following works: clc clear % A=randi([-100 100],10,10) % test matrix % v=randi(10,6,2) % test coordinates vector % v: coordinates vector with shape [x1 y1;x2 y2; ..] [n vsz2]=size(v) stack={} for k=1:1:n v31=[v(k,1)-1 v(k,1) v(k,1)+1] % generate neighbouring indices v32=[v(k,2)-1 v(k,2) v(k,2)+1] v31(v31&gt;10)=[];v31(v31&lt;1)=[] % remove out of matrix indices v32(v32&gt;10)=[];v32(v32&lt;1)=[] v4=combinations(v31,v32) % combinations.m available from mathworks.com L1=A(sub2ind(size(A),v4(:,1),v4(:,2))') % read ci yi and surroundings stack=[stack;L1] % with cell can have L1 length variable end to read the answer vectors being class double: stack{2} or stack{2} or stack{2}(:)' all the same. To read single elements of one of the output vectors: stack{2}(1) To read the answer vectors being class cell: stack(2)
Thanks! Earlier I had used the input command for something similar, but in that case, I was looking for a filename. I guess I just forgot to delete the 's' when I copied and pasted it.
Just a small thing: it's not a good practice to use i as a counter for loops in matlab. It is used by matlab as the symbol for iota for complex numbers and will get overwritten if used as a loop counter and will give rise to weird numerical bugs. I usually use double letters like ii, jj, kk etc. as loop counters.
Those are the format symbols. Edit: %% will print out a single %.
Ah yes, that's totally true. I am lucky in the sense that I don't really deal with complex numbers. I will definitely bear that in mind. 
 for i=1:size(a,1) new_point{i} = [a(ind(i),:); b(ind(i),:); c(ind(i),:); d(ind(i),:)]; % Create a cell of 4x2 matrices for eacch x,y point between the four 370x2 matrices scatter3(new_point({i}(:,1)), new_point({i}(:,2), i)); % scatter3 with i as the depth
Waitbar actually runs more slowly than mine. I benchmarked it before. :)
It should tell you the line where it occurs, but the problem looks to be with scatter3. From eyebaling it: scatter3(new_point({i}(:,1)), new_point({i}(:,2), i)); should be: scatter3(new_point{i}(:,1), new_point{i}(:,2), i); Try that.
Thank you. Exactly what I was looking for
This is what I do in my stuff. I do not need to update everything at every step, but every 5 or so it works well. I only wish there was a good method of this with parfor. Right now, if I *really* need to know, I just output the number it is on, but there is no way to know how many have been done yet.
Use \\r instead of \\b\\b\\b... 
The only way I can think of doing something like this without any kind of loops would be by using gpu, multicore, or multi-threading; but depending on problem size communication latency might kill the performance anyways. I don't think there is any serial code that you can use to avoid a loop here.
So the loop would compare element by element? for n = 1:10 for m = 1:10 if a &lt; 0.5 a+0.1; elseif a &gt; 0.5 a-0.1; end end end Would it look like this? Or is there a better way? reason I am trying to improve on the speed is that the 10 is actually 500 with even bigger loop already included of 1500 steps
Im guessing you can, something like: for ii=1:x %%Your_matlab_magic_here pause(5) end
 a = rand(10); B = (a&lt;0.5); C = (a&gt;0.5); a = a + 0.1*B - 0.1*C; This ought to do it. 
Thank you. Is there a name to it?
This is logical indexing- there is a great article on it [here](http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/);
Yeah I'll tell you the line next time I thought you were seeing what I was seeing. Thank you I'll try this tomorrow!
First: please format code in your question (use backticks--the ~ key--or a blank line followed by a line with 4 leading spaces in addition to any indentation, or use pastebin or another such site). It makes the code much more reasonable. Second: what have you tried? If it works for a vector, you should be able to make it work for a 2-d matrix--naively, by looping over each row and column; or, in a slightly-more sophisticated way, by looping over each row or each column and using element-wise multiplication (i.e., `.*`). To mirror `prod`, you'll want to end up with a row vector that contains the product of each column; that should give you a hint as to which loop to use (and how to generalize to arbitrary N-dimensional arrays). 
oh shit i just looked at my post and it is abysmal. thanks for understanding still though. and thank you for your post I'll try more stuff and get back on here tomorrow.
 X = floor(X*1000)/1000 %% :P
Can you use the following approach? 1) Convert the number to a string (using num2str()) 2) Check the length of the string and remove a number of characters (S=S(1:end-x)) 3) Convert it back using str2num()
I believe I got it working. I edited the original post.
No, this works fine for numbers with leading zeros, unless you want some other behavior that you haven't explained. 
How about this? b=a-sign((a-0.5))*0.1 
This would be easily done by fitting. In fact you can do it as a linear fit with the \ operator. Read the documentation for linear least squares and the \ operation. There's no need to use symbolic junk. 
Tidying that up a little. range = [6 0 1048570 0]; tmp_data1 = dlmread('E:\New folder\C1mgl1.700000.csv',',',range); time0 = tmp_data1(:,1); plot(time0) e0 = tmp_data1(:,1); Time0 = time0(6.38e6:6.58e6-1); E0 = e0(6.38e6:6.58e6-1)*35; tmp_data4 = dlmread('E:\New folder\C1mgl1.700000.csv',',',range); time4 = tmp_data4(:,1); e4 = tmp_data4(:,2); Time4 = time4(3.8e6:4e6-1); E4 = e4(3.8e6:4e6-1)*35; aver_E0 = 0; aver_E4 = 0; for i=1:2e5 aver_E0 = aver_E0+E0(i); aver_E4 = aver_E4+E4(i); end aver_E0 = aver_E0/2e5; aver_E4 = aver_E4/2e5; E0 = E0-aver_E0; E4 = E4-aver_E4; deltat=1e-9; % pin pu fen xi f=-1/deltat/2:1/(2e5)/deltat:1/deltat/2-1/(2e5)/deltat; f = f/1e6; E0w=abs(fftshift(fft(E0))); E4w=abs(fftshift(fft(E4))); E0w = E0w/(1e5); E4w = E4w/(1e5); E1 = tmp_data1(:,2)*6.321; time1 = time0(1:1e7); E1 = E(1:1e7); plot(time1,E1); What's the error message you get? Most of this code is completely irrelevant to solving the problem you're having. You should only post the relevant code.
Well need an error message, but there's also no reason to call dlmread twice wi th out changing any input parameters.
Suspect there is an error occurring. 
Does the file have a comma at the end of each row? If not, you may need to add the new line character to the list of delimiters.
I like this approach. You can actually specify the precision in `num2str`so you can simplify this to one relatively straightforward (albeit somewhat ugly) line of code: str2num( num2str(X, D) ) EDIT: disregard, still rounds. Darnit.
In an assignment A(I) = B, the number of elements in B and I must be the same. That doesn't occur with what I have pasted though.
If the arrays are all the same size, you can pre-define an empty array, set the first row to A0, and set each subsequent value to the current loop index+1. That being said, if you are doing simple calculations, like a sum, and it is the same every time, it would be easier to use something like `cumsum`. You could define a matrix of the values you want to add, set the first row to the initial values, then just do `cumsum` on the matrix. &gt;&gt; A0 = [1, 2, 3, 4]; &gt;&gt; b = [ones(11,4)*5, ones(11,4)*10]; &gt;&gt; b(1,:) = [A0,A0]; &gt;&gt; c = cumsum(b,1) c = 1 2 3 4 1 2 3 4 6 7 8 9 11 12 13 14 11 12 13 14 21 22 23 24 16 17 18 19 31 32 33 34 21 22 23 24 41 42 43 44 26 27 28 29 51 52 53 54 31 32 33 34 61 62 63 64 36 37 38 39 71 72 73 74 41 42 43 44 81 82 83 84 46 47 48 49 91 92 93 94 51 52 53 54 101 102 103 104
The file does not have a comma at the end of each row. The comma is the delimiter between the two parameters that I have to read. Both are in the same cell and one comma separates them.
But what does it say the error is at line 7? Index out of bounds? Something else? Just copy and paste the whole text of the error message.
This is technically not logical indexing, it's just using the implicit conversion of a logical to 1.0 or 0.0 in the bits of code like `0.1*B`. To be logical indexing you need to actually _index_ an array with the logical values. a = rand(10); B = (a &lt; 0.5); a(B) = a(B) * 1.1; 
You are asking for a function that can tell you how to analyze your data. Sadly, this function does not exist. There are many engineers who frequent this sub, however, so if you show/describe your noise and the signal you want to detect, we can likely give you some ideas.
I'm not sure `project` does what you think it does... [here is the help file for project](http://www.mathworks.com/help/map/ref/project.html). It does not project one vector onto another. 
Thanks, that's kinda what I guessed. But here's the link to the example in my book: https://dl.dropboxusercontent.com/u/38530214/Screen%20Shot%202016-04-05%20at%205.51.57%20PM.png I just don't know where to go on it, so if you have a better interpretation that would be appreciated.
It would be, but the HW specifically states to use product(u,v) for one part.
But, OP already said this won't work in their original question. Floor would be a better choice, but floor doesn't work with numbers less than zero, it just will round down to 0.
"Index exceeds matrix dimensions."
I don't think so. e0 is 1048565x1 double, the number range is (6.38e6:6.58e6-1). I don't know where this range even comes from. 
That's exactly what they're doing. They're doing a moving average from the last "taps" time points. For plotting purposes, they're using a relatively large buffer so they don't want to do a moving average of the entire buffer. If you don't need to plot the data you can set the buffer to your preferred value of taps then just take each moment as the mean of gxdata.
Try this: range = [6 0 1048570 1]; %[firstRow,firstColumn,lastRow,lastColumn] tmp_data4 = dlmread('E:\New folder\C1mgl1.700000.csv',',',range); time4 = tmp_data4(:,1); % First column (time) e4 = tmp_data4(:,2); % Second column (amplitude) plot(time4,e4); % Plot amplitude over time If this yields something unexpected (or errors), check the csv-file. Are your time and amplitude data located on rows 6 through 1048570, in the first and second column respectively? 
i have been using square brackets to do more, but it wasn't plotting the other graphs so I changed it to this format to increase speed while double checking results. 
Sorry, obviously the columns are supposed to be inline.
Add the command 'figure' before 'plot'
Add the command 'figure' on the line before 'plot'. It is plotting multiple times but each time it overwrites the same figure. 
If you know the largest signal will be of length `m_max` then you can pre-allocate your array as follows: M(1:m_max, 1:m_max) = NaN; And you should always get in the habit of pre-allocating your arrays so that your code runs faster (for instance, I know the editor is underlining your code in yellow telling you do do this). On the other hand, unless you need your code in a single matrix for some reason, you should probably use a cell array, as cell arrays are MATLAB's way of storing jagged information. 
Still a problem? dlmread should read and separate the comma delimited data into a 1048565x2 matrix (tmp_data4), which is then assigned to time4 (first column) and e4 (second column). I don't mean columns if you open the csv in excel, but columns of tmp_data4. Did the plot give you what you expected?
Your code works, I think I'll have to multiply the data for the coefficent of the probe and then I should get what I expect. Thank you very much!
Yes, structure arrays are extremely useful, e.g. when you want to try different values in a parameter structure. Accessing a field gives you a comma separated list that you can convert to a cell or numeric array. Example: parameters = struct('nIterations', {10, 20, 30}); creates a 1-by-3 struct that you can index like an array. But you can also do this: nIterations = [parameters.nIterations]; which returns a row vector with the field contents.
A butterworth filter is unlikely to give you very good results. A butterworth filter is what's called an infinite impulse response filter. When you filter a signal, what you are doing is convolving a kernel with the signal so a simple filter can be accomplished by conv(signal,kernel,'same') where sum(kernel) = 1. A convolution is a series of dot products between your signal and your kernel at each time point. So for the video, you are essentially performing a convolution by taking the buffer, applying a dot product, updating the buffer to the next time point, then performing the dot product again. In general a kernel can be kernel = .1*ones(1,10) for a moving average, or it can have a more complex shape such as kernel = hanning(10)./sum(hanning(10)) ... take a look at this kernel (half of the kernel is supposed to be in the past of the signal and half in the future. Many of MATLAB's built in filter capabilities assume you have the entire signal. The filt function is performing a convolution in the forward direction, and the filtfilt function actually performs a convolution in the forward direction then starts at the end and performs the convolution backwards in time. In most cases this means that the filtered signal is a mixture of the past and the future. But for real time filtering, you only have a signal the length of the buffer, and it's all in the past... So that's going to dictate how you filter the signal. Something like a hanning window, which works great when you have the future and the past of the signal will no longer work so well since it would be weighing the most recent timepoint with a weight near zero (i.e. plot(hanning(10)) ). So the best you can do is a moving average, or something like the first half of a hanning window. Filter's are a pretty complicated subject so I'm not sure I've done a great job explaining things. You'll definitely need to do some research to understand everything. Another idea I'll tell you about is the convolution theorem. This theorem states that convolution in the time domain is equivalent to multiplication in the frequency domain. So you might not always see a convolution in filter implementations, rather you'll see an fft of the signal and an fft of the kernel and a multiplication these two results. Then an inverse fft converts the multiplied ffts back into a signal in the time domain. 
I'm working through the cell array link you posted. Hopefully I will find the problem. Do you mean I have to change it to this: dat{k} = [Source{i,2} Source{i,3} Source{i,1}]; If the scatter plot will not plot from it then that is quite unfortunate. Thanks for your help!
Thank you the simicolon to colon it has been fixed!
Another thing I forgot to add is that structures make it much easier to export data in a documented fashion with something like JSON. I've used [JSONlab](http://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) to store data (and load in Python) which works well. I know the newer versions of Matlab have their own JSON parsers but they may be hidden features. I do not remember.
Darn! Tried doing that without luck so i guess that is not what you meant
There might be a better way, but if the code has been written well, the editor shouldn't be giving many warnings. So, on the right hand side of the editor, if you have unsuppressed output, you should have a yellow highlight- click on the yellow highlight and it will take you to the problem area. 
1. Make a model of the dynamics. 2. Figure out the constraints of the system. 3. Choose a cost function. 4. Select an optimizer that works for your problem. The biggest hammer for these is fmincon. A comment: I would fix fuel mass, burn rate, and burn time, then optimize. Later you may do trade studies, but from a design standpoint, you want to start as simple as possible. 
Assuming you only have the basic MATLAB install, you'll want to use [fminsearch](http://www.mathworks.com/help/matlab/ref/fminsearch.html). Tell it what you want to minimize (in this case, time or fuel- pick one) and tell it what you can change (the four things you mentioned) and let it do it's thing. In a slightly expanded view of how it works, you give fminsearch a function you wish to minimize (literally, you hand it in the name of a function you've written), then you tell it which input variable it is allowed to change (in your case, you would make a vector variable with the four things you've mentioned as the inputs, letting it change all four). All the function you hand into fminsearch has to do is, given the four things fminsearch is allowed to change, what is the time til the basketball goes in the hoop. fminsearch will then change all the variables until it finds the solution which minimizes them. If you have the optimization toolkit, then there are more tools available to you than fminsearch, but fminsearch will do fine for a problem like this. 
I have all MATLAB toolboxes actually! Is there any better way to do this by using the optimization toolbox? fminsearch seems like it might work though. Is there any way to constrain it so that, for example, I wont get a launch angle over 90 degrees? EDIT: Also, is there a way to set the accuracy of the optimization of fminsearch? Will it freeze my computer for 12 hours while it tries to find the "perfect" solution?
Benefit to structures over classes is structure fields are dynamic. So you can easily add fields. Technically you can do this with classes too, but that requires the class be of handles type which adds more difficulty. Classes are great for lots of things though.
fminsearch is a really forgiving algorithm. While it doesn't officially accept constraints like that, that I know of, you can simply penalize your time dramatically for things you don't want to happen, like if minimizing time you could say: if launch_angle &gt; 90 t = 10000000; end it shouldn't actually be much of a problem though, as you are looking for physically realizable situations, and fminsearch works well for situations like you've described. As for timing- it has a default accuracy, and you can override it, but you shouldn't have to. Your modeling this data- so there is no noise. Meaning it's going to fall to the solution in a couple hundred iterations anyway, no problem. It will run in a couple of seconds max. 
The lack of dynamic fields is also appealing in classes though. Prevents adding properties that aren't necessarily appropriate to the class. Both have their uses. I recently started using object oriented in my Matlab programming and have been really excited about it. 
thank you @occamsphasor may be you have not told straight forward, but your suggestion help me a bit thank you
Absolutely, it just depends on your usage.
Applying constraints by penalizing the cost function like that is a really good idea; I'm sort of embarrassed I never thought to do it like that. Nice
You need to specify *what* isn't working so people know what to look for. Often, the error message already explains the problem pretty well. Here, your problem seems to be lines 3 and 4. You can't do R=(a+b)/2 because (a+b)/2 is a scalar but R is a vector. In fact, the problem will be that because the line R=(a+b)/2 comes first, R will be initialized as a scalar and the error will occur at line 7. But even if the code runs it's probably not going to do what you want it to do. Why are you using a for-loop inside the while-loop? Does every iteration of your algorithm consist of 10 sub iterations? Since you don't know how many iterations you need, you can't use a for loop. However, you need an index because you want to assign the arrays. This might help: %R(1)=something %E(1)=something i=2 %initialize i. Start at 2 because R(1) and E(1) are already assigned while tol &lt; E(i-1) %while the last iterations wasn't good enough %calculate R(i) and E(i) using R(i-1) i=i+1 %in a for-loop this would happen automatically but this is a while loop end You should also include a condition like i&lt;1000 in your while condition so your function doesn't loop indefinitely if there's a problem. You probably shouldn't display the results inside the function. The results will be displayed if you call the function without a ";" anyway and you usually don't want your functions to display stuff that you can't control later (except error messages). If the function loops 1000 times you don't want to display two 1000x1 arrays. ps: matlab will complain that you change the size of R and E in every iteration because that'S inefficient. If you have no way of knowing how many iterations you need, there's no way around it. However if you limit the iterations, you could preallocate the arrays, e.g. with R=zeros(1,1000) Then cut the array afterwards: R=R(1:(i-1)) I never actually checked what the performance differences with this are like in matlab to be honest. It's still good practice because other languages might not be able to reallocate the array for you.
okay thanks anyway
This is known as a barrier function. They have their place in constrained optimization, but I am very wary of using them if you expect to operate near constraints. Modifying the code I did above, change logWeight, and see how the minimum of the cost with log barrier function changes. Now, I plot two costs, quadratic and quadratic with log barrier. The two new points are a magenta cross and square, the quad cost and the quad w/barrier cost minimum, respectively. As the log weight increases, the optimal solutions gets further from the constraint, but as the log weight decreases, it gets closer, but never reaches the optimal. H=[1 0;0 2]; F=[-0.5 3]; logWeight=0.5; J=@(x) 1/2*x'*H*x+F*x; A=[1 0;-1 0;0 1;0 -1;1 -1];%Box constraint B=[1;1;1;1;1]; xstarfmin=fmincon(J,[0;0],A,B); %Cost function evaluation. xx=linspace(-3,3,100); [X,Y]=meshgrid(xx,xx); Jnum=zeros(size(X)); for a1=1:size(X,1) for a2=1:size(X,2) Jnum(a1,a2)=J([X(a1,a2);Y(a1,a2)]); end end JJ=J; figure(1) surf(X,Y,Jnum,'LineStyle','none','FaceColor','interp','FaceAlpha',0.5); hold on for a1=1:size(A,1) if (A(a1,2)==0) plot([B(a1)/A(a1,1) B(a1)/A(a1,1)],[xx(1) xx(end)],'k--'); elseif (A(a1,1)==0) plot([xx(1) xx(end)],[B(a1)/A(a1,2) B(a1)/A(a1,2)],'k--'); else plot([xx(1) xx(end)],1/(A(a1,2))*(B(a1)-A(a1,1)*[xx(1) xx(end)]),'k--'); end JJ=@(x) JJ(x)-logWeight*log(B(a1)-A(a1,:)*x); end xstar=-H^-1*F'; plot3(xstar(1),xstar(2),J(xstar),'ro','Markersize',20); plot3(xstarfmin(1),xstarfmin(2),J(xstarfmin),'gh','Markersize',20); xstarbarr=fmincon(JJ,[0;0]); xx=linspace(-3,3,200); [X,Y]=meshgrid(xx,xx); JJnum=zeros(size(X)); for a1=1:size(X,1) for a2=1:size(X,2) JJnum(a1,a2)=JJ([X(a1,a2);Y(a1,a2)]); end end JJnum(imag(JJnum)~=0)=NaN; surf(X,Y,JJnum,gradient(JJnum),'LineStyle','none','FaceColor','interp','FaceAlpha',1); plot3(xstarbarr(1),xstarbarr(2),J(xstarbarr),'mx','Markersize',20); plot3(xstarbarr(1),xstarbarr(2),JJ(xstarbarr),'ms','Markersize',20); hold off; /u/QualmsAndTheSpice /u/PM_ME_YOUR_TRIATHLON 
Since you don't mention that it's failing in any way, I say nothing is wrong. 
Yes, barrier functions must be used... carefully. But I felt caviler recommending it in this case because neither minimum time not energy will take you anywhere near your barrier, it just helps fminsearch know not to go that way. 
Have you checked to see if the data gets imported correctly? The problem must be that the number of elements in "DO" and "t" is different. Are all of the values in "DO" and "t" numbers when you import the data? 
What do you mean by being imported correctly? If i remove the interp1 it still plots without any errors just doesn't interpolate for me
Thank you for the explanation
For interp1, you need to specify a set of query points, not the number of points (64). Presumably you want: qp = linspace(DO(1),DO(end),64); taup=interp1(DO,t,qp) 
My version of MATLAB says that mlint isn't recommended. It suggested checkcode instead. I think this will be good enough. Thanks!
Then you should check the data yourself because it seems to be the thing causing the problem. Load the 700 rpm file by typing the first 5 lines of your code into the command window one-by-one. Check if the vectors have the same length. Also check if all values are as expected (i.e. All of them are numbers). 
I haven't checked your ODE function or anything yet, but `ode15s`is a good second option to try if `ode45` isn't able to calculate a solution in a reasonable amount of time. It's meant for so-called [stiff ODEs](http://www.mathworks.com/help/matlab/math/solve-stiff-odes.html). 
I think it's easier to understand animations and videos as flip books, if you remember them. Every frame is like a page of that flip book and you either need to know what is being plotted at each time step, or what static image is being plotted at each time step. Once you figure out what your frames are, you can use a loop along with the pause function to basically refresh your plot at something like 1/30 of a second with each new frame, or if you have something like RGB images you can just use the imply function (or you could still go with the loop+pause). 
What you have already seems pretty close to the best you can doâ€¦ I was only able to get slightly better results with my slightly modified vectorshift3 in 16a: &gt;&gt; vec = 1:10000; &gt;&gt; tic;vectorshift(vec);toc Elapsed time is 1.291218 seconds. &gt;&gt; tic;vectorshift(vec);toc Elapsed time is 1.386764 seconds. &gt;&gt; tic;vectorshift2(vec);toc Elapsed time is 1.237668 seconds. &gt;&gt; tic;vectorshift2(vec);toc Elapsed time is 1.231581 seconds. &gt;&gt; tic;vectorshift2_mex(vec);toc Elapsed time is 1.167222 seconds. &gt;&gt; tic;vectorshift2_mex(vec);toc Elapsed time is 1.184018 seconds. &gt;&gt; tic;vectorshift3(vec);toc Elapsed time is 1.149869 seconds. &gt;&gt; tic;vectorshift3(vec);toc Elapsed time is 1.111554 seconds. &gt;&gt; function M = vectorshift2(v1) L=length(v1); M=zeros(L); M(1,:)=v1; for j=2:L for jj=1:(L-(j-1)) M(j, jj+(j-1)) = v1(jj); end end end function M = vectorshift3(v1) L=length(v1); M=zeros(L); M(1,:)=v1; for j=2:L M(j, j:L) = v1(1:(L-(j-1))); end end vectorshift2_mex is the result of compiling vectorshift2 with MATLAB Coder (with integrity &amp; responsiveness checks disabled).
Damn. But hey, thanks for replying. 
This is a common problem in discontinuous ODEs called chattering. Try approximating the sign function with a continuous (saturation) function like this: d = 1000; max(min(d*y(2), 1),-1) Larger d will give you a better approximation. If you are interested here are some keywords: Filippov system, sliding control, chattering, discontinuous ODE.
That's AWESOME thanks! Edit: Using this was about 40% faster than the loop
 0 0.6000 5.0000 1.9000 10.0000 5.5000 15.0000 10.5000 20.0000 17.0000 25.0000 23.9000 30.0000 31.0000 35.0000 37.9000 40.0000 44.3000 45.0000 50.1000 50.0000 55.2000 55.0000 60.2000 60.0000 64.9000 65.0000 69.1000 70.0000 72.6000 75.0000 75.8000 80.0000 78.9000 85.0000 81.4000 90.0000 83.6000 95.0000 85.6000 100.0000 87.3000 105.0000 88.7000 110.0000 90.0000 115.0000 91.1000 120.0000 92.2000 125.0000 93.1000 130.0000 93.8000 135.0000 94.5000 140.0000 95.1000 145.0000 95.8000 150.0000 96.4000 155.0000 96.9000 160.0000 97.2000 165.0000 97.6000 170.0000 97.9000 175.0000 98.2000 180.0000 98.4000 185.0000 98.7000 190.0000 99.0000 195.0000 99.1000 200.0000 99.3000 205.0000 99.4000 210.0000 99.6000 215.0000 99.6000 220.0000 99.6000 225.0000 99.7000 230.0000 99.6000 235.0000 99.7000 240.0000 99.8000 This is the data file, i have 3 files that don't work and 3 that don't which is the most annoying part
I know you asked for a vector solution, but this also looks like a fun problem for recursion. Here's my shot at a recursive solution: function M = vectorshift(a) l = length(a); if a == 1 M = 1; else M = [a; [zeros(l-1, 1) vectorshift(a(1:end-1))]]; end I got .003147 s for mine vs .004384 for your loop. Doesn't beat the native matlab toeplitz function, but I'll take it. edit: The recursion gets pretty inefficient for larger vectors...
If you wanted to roll your own, I'm fairly certain the following code would work for arbitrary square matrices of size NxN: M = zeros(N); M(1:N:N^2) = 1; M = cumsum(cumsum(M,2),2); I haven't tested it, but I think it would work. 
I'm assuming you want to integrate some function from 0 to 0.5? You're providing a function that's a function of X, but matlab doesn't know/understand what you're giving it since X isn't defined. Look at the documentation for the function [integral](http://www.mathworks.com/help/matlab/ref/integral.html). The first parameter needs to be a Matlab function (not just the equation written out) that computes the value of whatever you're trying to integrate. Also, fyi, using *print* like you have isn't valid matlab usage. Use *disp* instead. 
Look up syms
Okay thanks, I tried correcting that. What do you mean by first parameter needs to be a Matlab function? Thanks for your help.
Thanks! now I get an error on line 8 :/ "Error in V (line 8)" 
[This will help](http://www.mathworks.com/help/symbolic/int.html)
Thanks! got it now :)
it's funny how matlab just gets rid of the redundancy in your original formula, (4X/2 -&gt; 2X or X/1 and X%1 -&gt; X). the thing to notice here is that your expression contains a singularity inside your interval [0,0.5] (at around 0.2) and therefore can not be evaluated. to see this you can just graph it. http://imgur.com/YnBKPiZ (notice scale on the y-axis) good general advice when you encounter problems with evaluating integrals, do a sanity check with wolfram alpha http://www.wolframalpha.com/input/?i=integrate+%28-x%2F3+-+1%2F3%29%2F%282x+-+exp%286%2F19++-+6*x%29%29^2,+x to see that it doesn't converge. for some reason matlab does not warn you about that.
Your post has been removed. Please input your code into pastebin or formatted properly here, as well as share the exact error you're getting. Since you can't change what you're linking to, I recommend re-submitting (preferably as a text post with the pastebin link inside) with these changes. 
The [fit](http://www.mathworks.com/help/curvefit/fit.html) function is really easy to use.
For exposure differences, scale your signal to the ratio of the exposures. Eg if signal A has 100 exposure and signal B has 200 exposure then compare 2*A to B. For the second problem, threshold to make a binary mask. Then use a centre of mass function on the resulting mask to find the centriod.
I think you are absolutely right. I know the value that I want is the point around which the energy from the reflection is equal in all directions. I don't think that there is a practical way to calculate energy from luminosity. However, I think that does point to the notion that I want a weighted calculation for my center point.
Thanks for the reply. I installed the latest IDE through the package manager, I don't think Simulink builds it internally because I couldn't find "Arduino.h" in any MATLAB related folder; You can see on the second image I linked (Configuration parameters) I selected Arduino Uno as the hardware board; I'm using Fedora 23.
I laughed way too hard 
good code requires few comments. the whole, "comment " everything only made sense with fortran. you should focus on having your students right readable code and less on having them write good comments
This made me LOL. hahah
&gt; energy from the reflection is equal in all directions What do you mean? Energy doesn't have a direction, it is a scalar quantity?
Perhaps more information will help people respond? Seems like a good topic, though I'm not sure what you're looking for. 
Sounds like mathematica might be more what you need
I managed to do what I wanted with sym variables but I will look into mathematica thanks
Is there a reason you can't scale your equation to work within machine precision?
As someone who not only programs professionally, but also hires people who program professionally, useless comments are a very bad thing. If I'm reviewing a code sample for an applicant and I see something like you just described: % Do this five times for iteration = 1:5 I'm going to say "no". If it's a fresh graduate I'd cut them slack because there's the possibility that they were told by a professor or TA who's never written professional production code that they had to do crap like that, but if it's a senior person, they're not getting through to the next round. What you should be doing is not commenting your code, but making sure someone reading your code can understand it. for iteration = 1:5 tells everyone exactly what you're doing as does: for row = 1:numRows This, on the other hand, is just terrible: % Iterate over rows for x = 1:5 There are really only three times when you want to add a comment to code. First, for automatic documentation such as the help comment of a matlab function, a javadoc comment block, or a python docstring. Second is for general organization, such has marking sections of the outermost block of sequential logic: `% read input data` followed by 20 lines of text io, `% process data` followed by the core logic, and `% generate plots` followed by the output code. These sorts of comment blocks serve more to draw the eye to distinct blocks than explain the specific logic used, which should be obvious from the code if it's well written. Hint: don't use comments as an excuse to write crappy unreadable code. Third is when a comment conveys information more clearly than trying to name things better. For example a `geodeticdistance` might have a line like `R = 3959; % Radius of Earth in miles`. Otherwise, you should be fixing your code rather than commenting it.
Does the assignment contribute towards the final grade for the course? If so, please don't be a prick to the student. You are fucking them over out of a petty power trip on commenting, of all things. 
1/100. 4 questions so max points to lose is 4 per assignment. 
You could take a look at functions like 'primes' and 'factor'. But using them, I quess, is like using isprime indirectly. Using mod is not out of the question, but the way you're doing it gets messy, as you said, and you can't scale it for bigger numers. Maybe try using mod in a loop? Also think about the output you want to get from the function. Is it a simple yes/no or do you have to print all of the numbers that the input is divisible by? 
At face value you can just check for divisibility for every number from 2 to N-1. If none of those numbers divides N, then it is prime. However, divisors occur in pairs: (2,6) and (3,4) both produce 12. The largest pair that will ever occur in the list is sqrt(N), which means you can cut down dramatically on what you need to check. If any number larger than sqrt(N) divides N, then it will already have been checked since it is paired with a number smaller than sqrt(N). So you can write a pretty compact function for this using these ideas: 1. You want to test for divisibility for each integer p from 2 to sqrt(N). 2. If N is evenly divisble by p, then mod(N,p) == 0. 3. From (2), if any element in the vector returned by mod is zero, then the number isn't prime. Here is an example function: function f = primeTest(N) d = 2:sqrt(N); f = all(mod(N,d)); end You could edit this function further to return the numbers that divide into N as a second output: d(~mod(N,d)) are the divisors in d that evenly divide into N. That function might look like: function [tf,divs] = primeTest(N) d = 2:sqrt(N); c = mod(N,d); tf = all(c); if nargout &gt; 1 divs = d(~c); end end
Documentation is your friend. 
Have you tried using axes handles? That may help you out. For example, ax1=plot(X1,Y1); Then you can modify properties of ax1, etc. and repeat for other graphs in subsequent loops. 
thanks! That helps a lot
In the event that something was not two simple power series, you could do the following: M(1,1) = X %Starting Energy M(1,2) = n %Function of power loss i = 1; while (M(i,1) &gt; Xmin &amp; i &lt; maxIter) %set min energy and max # of iterations i = i + 1; M(i,1) = M(i-1,1) - M(i-1,2); M(i,2) = n; %Again, e.g. '0.1*M(i,1)' end This should do the same thing but extends for different functions of the power loss.. say it was proportion to energy but also had a constant loss term or something else. 
how is Matlab configured to use GPU processing? and could you also explain what kind of applications in Matlab would benefit from using GPU processing? 
I'll try that, thanks! 
My background w.r.t. quadrature is FEM, which focuses on integrating polynomial functions - and sacrifices quality with speed. Since I'm not as well versed on the numerical aspect of quadrature rules, does this aliasing issue have more to do with discontinuous and/or nonlinear functions, or do you see it in otherwise 'normal' functions as well?
`isinteger` tests whether the number is an integer class, and numeric values in Matlab default to `double`: hence, `isinteger(1)` returns `false`. I don't know of a built-in function for treating this, but it's fairly simple to write your own--and you have a couple of options. One way would be to simply cast inputs to an integer class (e.g., `int32(aNumber)`); another would be to use `round`, `floor`, `fix` or `ceil` to force an appropriate whole number. If you want to reject bad inputs rather than merely correcting them, you can compare the result of `round`, etc. with the original number and throw an error if they aren't equal. You may want to wrap that comparison in a call to `all` or `any` with the colon operator and appropriate logic if your input could be a matrix, e.g., if any(round(A(:)) ~= A(:)) error('Matrix "A" contains non-integer values'); end
It's having trouble trying to symbolically take the integral of cos(phi)*Tb. If it works for your application, you can approximate the integral using quadrature with these two lines: % This turns your symbolic functions into function handles fff = matlabFunction(cos(phi)*Tb); % This takes the quad approximation of a vector of functions G = G0*quadv(fff,-pi/2,pi/2)
Thanks !!!
One google search will do the trick
I don't think you know what `mod` does...
Really? Because it would work perfectly for this. 
Need to figure out what the key is for sure. That is not the correct key. They key should end up having all unique letters, at least in the first 26 spots. I tried with the alphabet backwards (maybe I should be so lucky) but that didnt work. What is happening is say you have a key that is 26 charachters long, and unique charachters. lets say it is ZABCDEFGHIJKLMNOPQRSTUVWXYZ these get mapped to [26,1,2,3,4.....25] Then you have the text to encrypt. lets say it is ABE which gets its representation as 1 2 5 The code returns the 1st 2nd and 5th values of the cypher 26 1 4 which will then spit out as text ZAD 
I am not super well versed in the symbolic toolbox, but try giving it something easy like two lines. See if it also throws an error. Then you know it is a bug/install issue/something else and not (likely) your code. Also, is there an analytical solution? Try plotting it and seeing. (I am just asking. I have not tried)
Ok answered my questions, [this link](http://www.mathworks.com/help/matlab/learn_matlab/creating-mesh-and-surface-plots.html) from Mathworks is pretty much exactly what I described. Leaving this for future Googlers.
You need to define lines 10-12 as anonymous fuctions, THEN define line 9 
I would start at the same place that you are: color-based segmentation. I would try a different color space in the colorThresholder app. Maybe L*a*b*. Also, you may have to detect the white areas and the dark areas separately so that you can tune each detector to one specific color.
I was able to do the exact same thin with a circle and line to find the intersect, so I don't think it's an install issue. I was able to find the solution by looking at the graph that I plotted, but for this homework assignment we have to use solve() to find the solutions as well. I am thinking that it must be some sort of issue with my code or some syntax problem that is happening. I am going to double check that the equations are right, since I manually converted the ellipse from parametric to cartesian.
also tried with the cipher being the list of letters in order of most frequent in english language. Come on OP, I need some more help here.
a matrix element may be referred to by its subscript V(i,j) or its linear index V(ind). functions sub2ind() and ind2sub() convert between the 2 types of indices. You probably know that you cannot make an assignment to multiple elements in a matrix like this: size_V = size(V); rowsubs = [5 5 6 6]; colsubs = [5 6 5 6]; V(rowsubs, colsubs) = 5; but you can do it like this ind = sub2ind(size_V, rowsubs, colsubs); V(ind) = 5;
 V(5:7,5:7) = Vin; Or even better S = size(V);SH = S(1);SL = S(2); Hmid = ceil(SL/2); Lmid = ceil(SL/2); V((Hmid-1):(Hmid+1),(Lmid-1):(Lmid+1)) = Vin; For arbitrary sizes of V. 
Hi, thanks a lot! I will give this a go. Are you referring to the matrix' last line? That is an absorbing state for death hence why the corner is 1...like you can enter but can't leave. I'll edit if i misunderstood but am on phone right now so couldnt check link properly Edit: thanks a bunch! I really really appreciate it. And yeah, this model is not too sophisticated, the other zeros represent things like you can't go from active disease back to minor symptoms, etc. I will keep it in mind for future though
check your parenthesis
Are you using Simulink?
Wow, I wish I had thought of something like this I ended up using the remainder function where rem (x,1)~=0 would reject anything with decimals.
Thank you very much sir, very surprised that one missing parenthesis could cause that many errors. Found it and it works well now! (is there a way to flair this as solved/no help needed?)
`rem` and `mod` are very similar. The only difference is that `mod(x,0) = x` while `rem(x,0) = NaN` and `mod(x,y)` takes on the sign on `x` while `rem(x,y)` takes on the sign of `y`. 
I'd have to check to be sure, but I don't think it's possible for floating point imprecision to bite you when comparing to a `round`ed number: if `eps(a)` &lt; 1, whole numbers are represented exactly; and for `eps(a)` &gt; 1, the rounded result would be rounded to the same value as the floating point approximation. I'm not an expert on floating point specs, though, so please correct me if In wrong in my understanding. 
Unless! You are trying to use the class methods in stateflow, and then it falls apart (at least in 2013b). I haven't tested it in 2016, though. Unless! Your class is an enumeration. And then weird things can happen. - incorrectly determined algebraic loops when there is a bus and a unit delay involved - strange errors in code generation if you make a data type alias for the enumeration and pipe it in or out of stateflow It's so frustratingly close to what I want, yet so far away...
I work with alot of .dat files with the research I do. I don't have one of my scripts in front of me but typically I use something like s1=import('filename.dat') and to get vectors I do x1=s1(:,1) for column one in your dat file y1=s1(:,2) looking at your image looks like you have some text information stored in your dat file. Be aware of this when analyzing. I have used some functions that take out text information from a vector. I don't know them off hand, but if you need them I can look up what I have done before. If you need anymore help/clarify let me know.
Anonymous functions are great, but that's a terrible reason to do anything. 
Tried Lab too, got the same problem, the app ignores the white part of the lesion :/ 
Glad to help. It really does give that sense of overwhelming scale when you try it; quite scary. Let me know how it goes.
Can't flair it but you can put a big #SOLVED at the top of your post. 
Running you code and looking at the resulting str matrix, you will find the reason your count is off. Here are a few examples: 100: 'onehundredand' 115: 'onehundredandtenfive' If you fix those problems you should get the right number
I tried your solution but nothing happened. My plot was is a 2D axis with just a blank grid. I should probably provide my code so that you can see what I'm trying to do. One sec, ill put it as a reply to this comment
Thanks! Those were indeed the two mistakes that ocurred. I checked the output, but I overlooked those. Do you have a more elegant solution to remove the 'and's than to iterate through the hundreds and delete it? Edit: Ok I could delete the 'and' if mod(i,100) == 0. Would be more flexible but use more resources (though those are negligible here)
I suppose it's less about the amount of tabs and more so about having my functions on the same script. It feels more convenient for me.
Oh my god, I am so stupid. I was trying to run the programm with F5 instead of using the command window. Thank you so much!
You're likely clicking into the cell and then setting the value equal to exactly 0.22, more or less. Anyway, the proper way to check for equality for floating point numbers is to allow some amount of slack in the form of a tolerance value, often called epsilon or eps. I typically use 1e-12 but 1e-15 is about the error you're going to see, and you can use looser tolerances than 1e-12 if you'd like. &gt;&gt; eps = 1e-12 &gt;&gt; find( abs(0.22 - nodes(:,2)) &lt;= eps )
I suggest: [val,index] = min(abs(nodes(:,2) == .22));
i is the square root of -1, so it's not nice to use it as a loop index. This is a for loop, so the loop index is incremented automatically. I know the Matlab editor is telling you it's a bad idea to alter the loop index inside the loop. Stop ignoring the editor. Looks like you just want to store the value of i when mod(n, i) == 0? Just append the value of i to an array, or even better, use a logical array where X(i) = true when mod is zero. Except you should stop using i because i = sqrt(-1). And stop ignoring the editor when it tells you things. Those red lines it draws aren't decorative. 
Thanks for the help- I replaced plot(i,x(i)) with plot(1:50,x(i)) and got the same problem, no line showing. I then tried plot(1:50,x) and got no change. I then tried replacing the x(i) in my equation with x and plotting (1:50,x), but then I got the error "Index exceeds matrix dimensions" again. . What's very odd is that if I take my original problem and delete the for loop, it runs perfectly.. until I close MATLAB and reload it. Then it doesn't work again.
&gt; I am storing the value of i when mod ==0 No, you are not. t(i) = t(i) + 1 is incrementing t(i), not storing the value of i. 
Here's a good way to do it which also shows some plotting stuff that makes it look nice: x = 0 : 0.1 : 5 ; y = 0 : 0.1 : 10 ; [ X , Y ] = meshgrid( x , y ) ; % repeat X in Y, repeat Y in X Z = X .^ sqrt( Y ) ; % evaluate function figure surf( x , y , Z , 'EdgeColor' , 'none' ) camlight right lighting phong axis vis3d xlabel( 'X' ) ylabel( 'Y' ) zlabel( 'f(x,y)' )
Even if I make it t(i)=i, it makes no difference to zeros. Is that what you meant? 
Well it's hard to figure out what will happen when you're messing with the loop index inside the loop, but even if you weren't doing that, you'd expect zeros in your array. If you assign the n-th element of an array that originally has fewer than n elements, the empty space gets filled with zeros. If this isn't what you want, then you need to append rather than assign. 
You could use another (manual) index to track how many items fulfill the criterion and use that to index t.
I would suggest using either structs or classes, then keeping a vector of what you choose. function catch11() fignum=14565; rad=0.1;%Robot size vel_cons=[0 0.1];%Velocity constraints delthe_cons=[-0.1 0.1];%Delta theta constraints robot=struct('pose',[],'move',[],'rad',[],'vel_cons',[],'delthe_cons',[]); moveFcn=@(x,y,theta,v,delthe) [x;y;theta]+[v*cos(theta);v*sin(theta);delthe]; %Simple motion model %You may want to make a function that can block motion if say you hit a %wall, or other robot interaction. %Robot properties numRob=20; for a1=1:numRob %Robot pose: [x,y,theta]; %robot(a1).pose=[3*randn(2,1);2*pi*rand(1)]; robot(a1).pose=[2.5*cos(2*pi/numRob*a1);2.5*sin(2*pi/numRob*a1);thetaWrapper(0)]; robot(a1).move=moveFcn;%Can add different types of robots robot(a1).rad=rad; robot(a1).vel_cons=vel_cons; robot(a1).delthe_cons=delthe_cons; end %Set desired pose for robot a1 desiredPos=zeros(3,numRob); desiredPos(:,1)=robot(end).pose; for a1=1:(numRob-1) desiredPos(:,a1+1)=robot(a1).pose; end %Simulate plotAll(robot,numRob,fignum); t=linspace(0,100,100*5); for a1=1:numel(t) for a2=1:numRob [v,delthe]=controlDecision(robot,a2,... desiredPos(:,a2)+[2.5*cos(2*pi/numRob*a1/20);2.5*sin(2*pi/numRob*a1/20);thetaWrapper(2*pi/numRob*a1/20)]*(t(a1)&gt;20)); robot(a2).pose=moveRobot(robot(a2),v,delthe); %robot(a2).pose=moveRobot(robot(a2),(1+0.05*rand(1))*v,(1+0.01*randn(1))*delthe); end plotAll(robot,numRob,fignum); figure(fignum) hold on; plot(desiredPos(1,:),desiredPos(2,:),'rx'); hold off; drawnow; end end function [v,delthe]=controlDecision(robots,robotID,desiredPos) %Make the robot move to origin, but velocity is limited to the constraints pose=robots(robotID).pose; theta1=atan2(desiredPos(2)-pose(2),desiredPos(1)-pose(1)); if (norm(desiredPos(1:2)-pose(1:2),2)&lt;0.1*robots(robotID).rad) delthe=thetaWrapper(desiredPos(3)-pose(3));% Desired orientation else delthe=thetaWrapper(theta1-pose(3));%Desired pose end %Make sure velocity and angle delta obey constraints delthe=median([robots(robotID).delthe_cons delthe]); if (delthe==robots(robotID).delthe_cons(1) || delthe==robots(robotID).delthe_cons(2)) v=0;%Rotate to desired point first. else v=norm(pose(1:2)-desiredPos(1:2),2); v=median([robots(robotID).vel_cons v]); end %If close enough if (norm(desiredPos-pose,2)&lt;1E-2) delthe=0; v=0; end %Make sure there are no collisions. newpos=robots(robotID).move(pose(1),pose(2),pose(3),v,delthe); for a1=1:numel(robots) if (a1~=robotID) if (norm(newpos(1:2)-robots(a1).pose(1:2),2)&lt;(robots(robotID).rad+robots(a1).rad)) %Collision delthe=0; v=0; end end end end function pose=moveRobot(robot,v,delthe) pose=robot.move(robot.pose(1),robot.pose(2),robot.pose(3),v,delthe); pose(3)=thetaWrapper(pose(3));%Wraps to [-pi,pi] end function theta=thetaWrapper(theta) theta=mod(theta+pi,2*pi)-pi; end function plotRobot(robot) theta=linspace(0,2*pi,5); R=[cos(robot.pose(3)) -sin(robot.pose(3));sin(robot.pose(3)) cos(robot.pose(3))]; dim=R*[0 robot.rad*cos(theta);0 robot.rad*sin(theta)]; pose=repmat(robot.pose(1:2),[1 numel(theta)+1]); plot(pose(1,:)+dim(1,:),pose(2,:)+dim(2,:),'k') end function plotAll(robot,numRob,fignum) figure(fignum)%Separate motion from plotting. for a2=1:numRob plotRobot(robot(a2)); hold on; end hold off; axis([-5 5 -5 5]) drawnow; end
Thank you for help, problem solved. 
Thank you for help, problem solved. 
Thanks, I thought I understood how floating point values worked but I had no idea, thanks for the answer!
Have you tried: plot(.....); %plot your stuff set(gca,'xticklabel',{'val1','val2','val3','val4'}); you'll likely need to have as many ticks as tick labels, as I think they're plotted together.
Yup, just found that on the file exchange! Cheers!
Thanks for the more in-depth post. Good points. 
Just set ticklabelinterpreter to latex
 Thank you.
How do I test this out? 
\w is "any alphabetic, numeric, or underscore character. For English character sets, \w is equivalent to [a-zA-Z_0-9]" \w+ is a set of one or more such chatacters. regexp(estring,'\w+') returns the start indices of the matches (words), e.g. [1 7] for "hello world" Then estring(regexp(estring,'\w+')); is the same as estring([1 7]) and returns the first and seventh letter.
Well, eig just calculates the eigenvectors as you probably know. Have a look at principal component analysis or proper orthogonal decomposition for the rest. Basically you can construct a functional minimizing the least squares error that can be transformed into an eigenvalue problem. That's the R.'*R you are using eig() on 
Check the help for regexp, especially the part about the input 'match'.
Thank you for the explanation!
Well... what you're doing in the above is trying to set a 2-D matrix (or 3-D with just 1 entry in the 3rd dimension) into a 3-D matrix at places 2 through 100. In words, is this what you want? Do you want the first image to be the first 100? If you do indeed want one frame to take the first N places, you'll need to replicate (check out [repmat()](http://www.mathworks.com/help/matlab/ref/repmat.html), you could also do it slowly with a for-loop) that one frame N times into a 3-D array and then substitute it into where you want it.
Yes, that's what I wanted. I found it hard to phrase and thus wasn't successful in googling it. Anyways, repmat() did it, thanks! Heres what I needed exactly, in case someone else is looking for the same thing: img(:,:,2:100) = repmat( img(:,:,1), [1 1 99] ); 
 img(:,:,1:100) = repmat(img(:,:,1),[1,1,size(img(:,:,1:100),3)] see [repmat()](http://www.mathworks.com/help/matlab/ref/repmat.html) as /u/Halsey117 suggested. 
Best answer here... nice and elegant! I will add that for large n (n&gt;1000), you can avoid logical indexing to improve efficiency. t= ~logical(mod(n,t)).*[1:n];
Hahaha yea I know,I didn't write down that vector like that. It was in my excel file so I just copied and pasted it over. Lol imagine typing in all of that
Please describe your problem or post a MWE. You have no real question posted. For instance, "Program them to be shaded to a new color" would answer your question as posted.
no..
Nice, I didn't think about efficiency. I didn't know the logical function. Does it do anything different than ~=? Would the multiplication still be more efficient with a sparse logical array?
Once you know the sampling speed, one thing to be careful of, is to make sure you are sampling in line with the Nyquist Theorem or else your data will be warped. https://en.m.wikipedia.org/wiki/Nyquistâ€“Shannon_sampling_theorem
 load('clown.mat') figure(1) surf(X','LineStyle','None','FaceColor','Interp'); colormap gray; theta=linspace(0,2*pi,100); el=90*cos(theta); for a1=1:numel(el) figure(1) view(44-1/4*el(a1),el(a1)) drawnow; pause(0.1) end 
Perfect thanks! 
Never mind; solved the issue ;) set figure property 'PaperPositionMode' to 'auto' and print/save using '-r0' option. Excellent ergonomics Mathworks &gt;_&lt;
For latex documents I export my matlab figures with matlab2tikz. It exports the matlab data in a .tex file. Default already does this pretty well, but for complete control over the figure you can modify the texfile. Granted, for complete control it can be more involved as it is written in pgftikz language but this is well documented and one can find many examples on the internet. The great benefit of this is that your graphs get the same style as the rest of your document. 
My first thought when doing this would be something like while(1) X = record(ts); sound(X); end However, I just tried this, and while it does play out what it hears, there's an obvious timegap between each sample it plays out. Perhaps other redditors know of a better way to do it in Matlab, but you're honestly better off using a more suitable programming language than Matlab for this. Disclaimer: this was actually tested in Octave, but I've tried it in Matlab in the past with similar results
Export_fig is the best thing ever
Is an approximation ok? you could use the CLT to get something very close to it..
Not really a Matlab question. 
The process of segmenting foreground from background fits into a broad algorithm area known as image segmentation. https://en.m.wikipedia.org/wiki/Image_segmentation To help you, you'd need to share some sample images so that people could steer you to the right algorithm(s), of which there are many. Here is a place to start for MATLAB segmentation offerings: http://www.mathworks.com/discovery/image-segmentation.html?requestedDomain=www.mathworks.com
WOW! Thank you for such an amazing response to my question!
Thanks, unfortunately, the adc1248 I'm using wasn't designed with the motor issue in mind, so I'm kinda stuck with the lowly 2K Samples/second it outputs. And according to the data sheet, setting it to this sample rate has the least signal to noise ratio (they recommend the 5 Samples per second for best averaging , low-noise performance) . To add to that, I don't have a Simulink supported board (i.e. Arduino, Beaglebone, iPhone, Galaxy, Raspberry Pi, Mindstorm, NI DAQ), so I'm limited to how I can get data off it and into Matlab.. i.e. USB Serial COM. Although this should be theoretically good enough since, 2000 Samples/Sec * 4 Bytes/Sample * 11 Bits / Byte = 88000 bps &lt; 115200 bps With the motor off, I see the data riding on top of a 60hz wave (I'm in the U.S.), there is also some periodic high frequency noise that is most likely due to the switching regulator. With the 340V motor on, the entire signal gets offset by a 200mv, and the high frequency noise on top of the readings are all over the place. So what I'm hoping to do with Matlab is, stream it the data, have it analyze / plot it, and then have it suggest a filter type with coefficients/code that I can implement on board. Is that do-able, or am I way out of line here? It's a bit confusing with so many toolboxes.. Instrument Control, Matlab/Embedded/Simulink/HDL Coder, DSP / Signal Processing / Toolbox, etc Update: Just noticed that this update speeds might not be the fast: https://www.youtube.com/watch?v=xmECpF_ZgIY 
Thankyou, in the end the script was far too complicated for someone on my level, and our supervisor provided a lot of it for us. Appreciate the help.
Something like this: @(s) dot(basis_1D(order,1:order+1,s,0), coordPairs(1:order+1)) Now, only the basis_1D function is needed to be vectorized.
Two things: 1) When you assign `@derivate` to `c`, you're assigning a function handle (a reference to the function) to `c`. `plot` doesn't know what to do worth the handle--it needs values. Either delete the `@` (the way you did with `A`) so that `c` will contain the result of the function rather than a reference to it), or use `feval` on `c` when you pass it to `plot`. 2) Nested functions have access to the parent scope, but you've defined the variables you use in the nested function as arguments to it--and then you didn't pass the arguments. It might work as intended this way--I don't use nested functions much, so I'd have to check Matlab's scoping rules--but it would be more clear if you were to either define it as a subfunction (no shared scope, defined after the completion of the parent function) and explicitly pass the arguments, or delete the parameters from your nested function so it's obvious that it's using the parent scope. 
Interesting. I have always just used File- Save as - name.png Definitely will use this from now on
You need to complete the logical statement on both sides of the || similar to this: If x==a||x==b ... End Also verify that you want the || rather than the | operator as they function slightly differently. Finally, to check multiple values use the ismember function or multiple logical a inside an any function. 
Yes, that's why I added the bit about ismember(). You'll need to use it inside of all() or similar. 
```eps```
It's here: if Split1 &gt; Split2 Temp_file4{g} = Temp_file2(2)*Split1; Temp_file5 = Temp_file2(2) - Temp_file4{g}; elseif Split(1) &lt; Split2(2); Look closely at your `elseif` it is `Split(1)` instead of `Split1` So you only hit this when your first `if` isn't fulfilled
SamStringTheory is correct (aside from their syntax error...), but that line itself doesn't really explain the subtlety of what's going on. When you declare an anonymous function, it internally stores a static copy of whatever variables have been defined in the current namespace, at the time you define the anonymous function. So for your case, you could do t=1:5 f = @(x) foo(x,t(1)) And that would work fine. If we did x = 1 f = @(y) x+y f(1) x = 2 f(1) that's what it means for the anonymous function to have a *static* copy of the variables - in contrast to a nested function. Since the variables are stored inside the function, you can do interesting things like define an anonymous function inside a function and return it, and the anonymous function can use variables that were defined within the generating function e.g function f = makefun(x) y = x*2; f = @(z) y+1; and then to use it a = makefun(3) a(2) 
yes! Actually I can: last night I tried something different and forgot to undo-it today to test the time-domain change, and you're right, it did work after removing last night's changes. Man, I really didn't think that would do it but it definitely did. 
its just an infinite loop
That will probably mess up some later step. The real problem is that `-o` was renamed to `-output` in R2014a or so and OP is using code from a Google Code repository (i.e. it is really out of date and nobody is maintaining it, or they would have moved off of Google Code by now). OP, try looking in the makefile to see where `-o` is used as an argument to `mex` and replace it with `-output`. EDIT: OP, also, try Googling it next time :) This is so common of a problem that all I had to do was type "matlab mex arg" and it started asking if I was talking about the `-o` argument being unknown.
The operator you want is `.*` instead of `*`. The former is element wise multiplication of two arrays that are the same size while the latter is matrix multiplication which requires matrices whose inner dimensions match. Also, format your code. Place four spaces before your text. If you don't do that the asterisk *italicizes* the text. You would do well to read the side bar and whatnot. 
Thank you. I just changed it and it worked now. I guess I just missed typed it or wasn't thinking when I did it.
Thank you for your answer. Since it's running out, it is not a perpetual license, I just checked, it is an annual license for academic use. I got it through my University. Since I'm still studying, I hope I get a new one but beeing able to use the current downlad version without an issue would make it less urgent. Ju
You're right, you'll want to change your f = ... line to have indexing (likely from whatever loops your running). Just checked your code very briefly, MATLAB uses 1-based indexing, so trying to enter a calculation into f(0,0,0) won't work. The very first entry would be f(1,1,1) -- you'll need to adjust your indexing accordingly.
What don't you know how to do?
I've modified the code to: for mx = 1:num_mx+1 As well as my and mz and: f = (c/2)*((((mx-1/Lx))^2+((my-1/Ly))^2+((mz-1/Lz))^2)^0.5) to compensate but now the calculation is incorrect. Any further insights would be appreciated. Oops (I forgot the additional brackets)! f = (c/2)*(((((mx-1)/Lx))^2+(((my-1)/Ly))^2+(((mz-1)/Lz))^2)^0.5) works but I still need to output to a vector.
I had Matlab via university and was only able to use it until the licence ran out, then it asked for a new licence code.
Thank you! It outputs to 3x3x3 matrix. OK. I'll think on this for a while! Thanks again for your help.
home licence https://www.mathworks.com/store/link/products/home/new student licence https://www.mathworks.com/store/link/products/student/new or infinite trial usage :D
What isn't working the way you hope? Are you getting an error? Bad output? Do you have MATLAB problems or physics problems?
`a(k)` is just a vector- the data you've collected from your accelerometer. 
Shouldn't your equation for z1 be a+b-c. Notice last expression is negative. 
Yes! Thank you I must've missed that. Unfortunately, it still doesn't give the right output. http://imgur.com/GRr5dGx
If your results take a long time to generate, you really should have the script save them.
The original magnitude of d is only used for the origin position: r0=[d 0 0] and then this is used to calculate the r value, which eventually adjusts the magnitude in x=r.*cosd(theta); y=r.*sind(theta); this is incorrect? 
If you do this, you're assuming planar motion and your z value will be zero for all t. It looks like the sample plots given do not make the same assumption. I'm not sure of the scope of your course, but I would assume you're supposed to propagate forward using the 2 body equations of motion.
Does anyone know if nesting the part of the code that calculates water position within the first for loop would have an effect? This section: vel=18.5; g=9.81; v0x = vel*cosd(phi(:,i))*cosd(theta(:,i)); v0y = vel*cosd(phi(:,i))*sind(theta(:,i)); v0z = vel*sind(phi(:,i)); x1=x0+v0x*t; y1=y0+v0y*t; z1=z0+v0z*t+0.5*g*t.^2; plot3(x1,y1,z1,'c*')
Change f1=-1 to f1=sym(-1), otherwise the diff command takes the difference, not the derivative.
It is a type thing. f1=-1 is of type double, f1=sym(-1) is of type sym. When you pass the variable to a function, the function is supposed to check what type the variable is, then is chooses how to manipulate the variable. In the case of diff, the difference on a double is x(2)-x(1), but x(2) is undefined, so it returns empty. However, when a sym is passed to diff, it gets handed off to the symbolic manipulator which does its' thing to differentiate it. If you do a 'whos' on the command line, it will tell you the "Class" or type of all the workspace variables. 
your loops encompass too much stuff which is redundant. For the first part (the ladder) you can do it like so: % a) t = 0:.1:25 ; % time phi0 = 0 ; % initial position theta0 = 0 ; r0 = 8.25 ; dphi = 5.00 ; % time derivatives dtheta = 7.50 ; dr = 0.50 ; phi = phi0 + dphi .* t ; % time dependent position theta = theta0 + dtheta .* t ; r = r0 + dr .* t ; % b) x = r .* cosd(phi) .* cosd(theta) ; % cartesian coordinates of position y = r .* cosd(phi) .* sind(theta) ; z = r .* sind(phi) ; plot3(x,y,z,'k') ; % plots the tip of the ladder in black as asked in text hold on for ii = 1:length(t) % plots the ladder as shown on image plot3([0 x(ii)],[0 y(ii)],[0 z(ii)]) ; end for the second part, there is no mention in the text again, but the solution provided cuts the plotting of water once it reaches the ground. Now, the water shoots quite fast, so 25 seconds is huge (ie too big and not too small as suggested above). So you need to cut off the water plots after it reaches the ground. Below is similar to your code, with the right minus sign before the `g` term, and with the cutting off too: % c) v0 = 18.5 ; g = 9.81 ; v0x = v0 * cosd(phi) .* cosd(theta) ; % initial water velocity v0y = v0 * cosd(phi) .* sind(theta) ; v0z = v0 * sind(phi) ; for ii = 1:length(t) % for each ladder position, plot water path t2 = 0:0.01:25 ; % time for water wz = z(ii) + v0z(ii) .* t2 - g/2 .* t2.^2 ; % z of water t2 = t2(wz &gt;= 0) ; % only keep values for which water is above ground wz = z(ii) + v0z(ii) .* t2 - g/2 .* t2.^2 ; % and redo z of water wx = x(ii) + v0x(ii) .* t2 ; % x of water wy = y(ii) + v0y(ii) .* t2 ; % y of water plot3(wx,wy,wz,'c') end 
for such a short code, use four spaces here in front of every line and it will display nicely (your code): syms m Tv f = (1/(((2*m)+1)^2))*exp(- (((2*m)+1)^2) * (pi^2) * (0.5/4) ); V = subs(1-(8/(3.14^2))*f, m, 1:200); plot(Tv,cumsum(V)) now you want to plot this thing, so no need for symbolic variables (i.e. no use of `syms` or `subs`, it just makes things confusing)... Your `Tv` in the graph goes from 0 to 1.5, so `Tv = 0:0.1:1.5;` will do. Then you can use it directly. You just need to write a little loop for `m` to add your terms: m_max = 20 ; % your choice to cut off before infinity % start with the constant 1 on the left Uv = 1 ; % the loop for the additional terms for m = 1:m_max Uv = Uv + 8 / pi^2 * &lt;...&gt;; end where you should replace `&lt;...&gt;` with the remainder of your function, in which you use `Tv` and `m` directly. And then you can directly `plot(Tv,Uv)`.
I have never used meshgrid before, how would I do it with the values like in the table above? Thanks, Boom
Thank you so much! This was extremely helpful. 
There are probably a couple of ways to do this, though it's better practice to have whatever script/function you're running (or a wrapper for it) save whatever data you need to save than to blanket save everything. If you want to save it, though, you can use `finish.m` as u/Weed_O_Whirler suggests; use [`who`](http://www.mathworks.com/help/matlab/ref/who.html) to generate a list of variables in the target .mat file and a list of variables in the base workspace (you'll have to use `evalin` if you make `finish.m` a function rather than a script); then use `isequal` or `ismember(workspace_vars, file_vars)` to see if your workspace matches/is in the file. That doesn't tell you if the variables are the same (I don't think you can easily do that without loading the .mat file), but it at least tells you if some variables aren't saved. If they don't match, prompt with a `questdlg` and take appropriate action. If you wanted to do something a bit more advanced, you could wrap the `save` function to calculate a hash of each variable as it's saved, and keep the hash accessible (either as a variable in the file, or stashed somewhere persistent--0's appdata or `mlock` the save wrapper on startup and use persistent variables in the function); then you can compare the hash of each variable in the workspace to the hashes of variables in the file to tell if they were saved. Alternatively, you could probably set up some kind of listener on the base workspace and have it track which variables are new/changed, but that would be a lot more work and require some undocumented hacks--at best. I initially thought you might be able to use `onCleanup`, but I think trying to access the base workspace while it's being destroyed would be risky/segfaulty. It's great for triggering events when a function ends by any means; probably not so great in the base workspace. Edit: typo
Long story short, we have the capability to do this. But the rate at which it feeds the information back to us is too slow so reading the telemetry off of the video feed is the backup plan. This whole thing relates to a design project so the way in which we have to do things often isn't ideal due to given project requirements, but I really appreciate all of the replies you guys gave! 
Isn't the video feed only coming in at 30 or 60fps? So your maximum rate of data from the video feed would be 30 or 60Hz. Can you really not poll the telemetry data faster than that?
The function fun takes three parameters. But you are only passing it two parameters within the fzero call. 
I don't know and my Internet is down but have a look at https://en.m.wikipedia.org/wiki/Kepler_orbit
Two functions you'll find useful would be [saveas()](http://www.mathworks.com/help/matlab/ref/saveas.html) and [num2str()](http://www.mathworks.com/help/matlab/ref/num2str.html) -- saveas() you can save your figure and num2str() you can use to convert your iterator from a number to a string to use in the file name. You'll have to add a few lines to your existing code, something like (pseudocode): figHand = figure; % you'll need the handle for saveas() subplot(...) % make all subplots curIterStr = num2str(n); % assuming you're for-loop with % n as the iterator is what you want svPath = ['/your/path/here/plot_for_iter_', curIterStr]; saveas(figHand,svPath,'jpg'); This will save the figure as "plot_for_iter_1.jpg" (as an example for the first iteration) in the path "/your/path/here". If you wanted to just crush through this in one line, you could try (after your last subplot): saveas(gcf,['/path/here/fig_name_iter_' num2str(n)],'jpg')
Where would these be saved? 
&gt; it's better practice to have whatever script/function you're running (or a wrapper for it) save whatever data you need to save In what form would I want to save the data? I know numpy has built in functions to work with its own file types (as well as more general purpose file types). I always figured that the workspace / .mat filetype was matlabs version of the same thing. 
Not weird, but probably not ideal. If you need to manually input the data, why not do that in the script, so you can simply re-run and have everything you need? If the data is copied from elsewhere, e.g., a spreadsheet, it would be best to read that automatically as well.
Which class is this for? What math is involved? Is it differential equations? The best place to start in MATLAB and Simulink is a set of equations. Did your prof/TA give any example code/models on which to base your work?
I mean where would startup.m and finish.m be saved? 
Are you posting a PDF of the script, or the output of the script? Because if it is just the script itself, it wouldn't contain the actual song, would it?
Anywhere on your MATLAB path
Thank you so much this helped me get my graph!!!
Use drawnow and print. for n = 1:nmax plot(x,y) drawnow print(...) end 
By `save`, I was thinking primarily of the .mat file formats (necessary for `who`), but the principal applies to any format you might use. .mat is fine (the .mat version best suited for your needs might not be the default, but I would t get hung up on that unless read/write time and file size become a problem for you) if you're using the data in Matlab. If you're using it elsewhere (e.g., in a spreadsheet program, or as input to another programing language), then another format such as .csv or .hdf5 (which is what some versions of .mat use, with specific metadata) might be more appropriate.
Your flair is the best flair. 
Its not that hard really, but its easier to make it programmatic. h1 = figure(...), make a push button in this figure h2 = figure(...), make a push button in this figure And have the button either have close(h2) for h1, or close(h1) for h2.
The first answer doesn't quite do what you asked, but this will: n = 10 ; % number of terms init = pi ; % first value x = init * ... ones( 1 , n ) ; % vectorize twos = 2 .^ -( ( 1:n ) -1 ) ; % negative powers of 2 series = x .* twos ; % result Note that I didn't divide the *initial* term by two, but rather the second. If you want the initial term divided by two, remove the -1 from the penultimate line. The results are: twos = 1.0000 0.5000 0.2500 0.1250 0.0625 0.0312 0.0156 0.0078 0.0039 0.0020 series = 3.1416 1.5708 0.7854 0.3927 0.1963 0.0982 0.0491 0.0245 0.0123 0.0061
Thank you! This is much more rigorous and meaningful than my simple code. 
Holy fuck everybody needs to stop using eval and assignin. 
I wish it was. I'm trying to transfer into the computer science department in my post-secondary. I'll send a picture of my progress so far later today if you're interested.
Well done. Excellent post
Yes, your understanding is correct. The only point that seems fuzzy is why I needed to use repmat. After the rotation is performed we are left with a matrix with dimension 3 by numPoints. If we were to tried to add [x(a1);0;0] to R(theta(A1))*p, we would get an error that the sizes must be the same. So repmat is used to replicate the vector numPoints times. The 4*theta was because I wanted more rotations. If you want it to do a single rotation, remove the 4.
Ah I see, thank you.
Put a break point in the .m. Run it again and see if it hits the breakpoints. 
You basically have a convolution in your hot loop, so replacing that with conv2 is a bit faster since it's compiled code. I was able to get 2-3x speedup with that and some other changes (including what /u/yourfavoritemusician suggested): d = cell(totalcyls,1); for i=1:totalcyls d{i}=find((y_arr - y_centre(i)).^2+(x_arr - x_centre(i)).^2&lt;r(i).^2); %find all values inside cylinders end while err&gt;tol iter=iter+1; %iteration counter %iteration ix = 2:nx-1; %values of x used for iterations iy = 2:ny-1; %values of y used for iterations psi(iy,ix) = 0.25*conv2(psi, [0 1 0; 1 0 1; 0 1 0],'valid'); %psi(iy, ix) = 0.25*(psi(iy+1, ix) + psi(iy-1, ix) + psi(iy, ix+1) + psi(iy, ix-1)); %cylinders boundary conditions for i=1:totalcyls psi(d{i})=mean(psi(d{i})); %set the values inside to the mean of all such values end %pipe boundary conditions psi(1,:)=0; psi(ny,:)=u*ymax; psi(:,[1,nx])=u*y_arr(:,[1,nx]); %when to finish err=sum(abs(psi(:)-psiold(:))); %setting new value psiold=psi; end I think the in-cylinder mean line can be sped up a bit with clever indexing so it's basically a one liner instead of a loop, but I'd have to look up and remember some of the more arcane matlab functions to pull that off. You could also switch to calculating err every 5 iterations or so, that would knock another second off of my machine's runtime (6.8s now on my huge PC). The conv2 line is about as good as you can get without writing C, IMO. Also there's probably faster approaches that would require fewer iterations, i.e. start with a larger convolution kernel to get closer to the output and then shrink it to what you have now. Good luck!
What don't you know how to do? What have you tried? We won't do your homework for you, but we will help you if you've shown some effort
Put forth an idea of what you have to do. Until then you're on your own.
Please format your code as code by putting four spaces in front of new lines so it looks something like: syms y syms x x = (-1:1:1) etc
Why are you using symbolic equations for x and y with plot? Use [ezplot](https://www.mathworks.com/help/symbolic/ezplot.html?refresh=true). Also, what are you plotting in the equation? I see az at the end but you're plotting x and y. I see the equation, and theres two other things. For one, make you code 4 spaces inline to format it as code And the other thing is you can break down a eq into parts to make it simpler. For example: num = z + l/2; den = sqrt(a^2 + (z + l/2)^2); eq = num/den; To organize it a bit better. I say this because I think your problem is right now in organization. Make sure you know exactly what you want to do, then you can approach the problem better.
Answered as part of the other guys's post.
That's all the folding I got done in an evening. http://imgur.com/vHD2lJX Working progress :) This was a reply from another redditor: https://www.reddit.com/r/math/comments/4fm3af/need_help_with_spacing_out_coloured_pieces/d2a54by?context=3 and I asked him this: I wanted to clarify what you said. Here's my picture of what I think you meant: http://imgur.com/1bJYKqX That's the bird's eye view of the top hemisphere. I'm also using ~5.75 cm tall cones with a spherical cone diameter of ~4.3 cm (those are the dimensions if any of that matters). Does this change anything from what you've said earlier? From your diagram, you used colors 1 and 2, 10 times and also 3 and 4 9 times. I see how your hexagonal pattern (previous to your edit would work). They would fit nicely if I was using the 38. Now that I'm using all 40 elements to make a tight packing, how would I arrange the elements in the picture I drew with the 5th row in a 1,7,12,12,7,1 pattern (if I had 7 in the fifth row for a total of 40 elements)? Is it possible to make an arrangement with 5 of each color on the each side of the hemisphere (Having 4 * 5 colours) and have at most 1 (2 at the very very most) same colour touching? If I go with the 1,7,12,12,7,1 arrangement, it seems that some of it will touch due to the lost of the hexagonal pattern. I know that they would be oddly fitting together on the 5th row. I was thinking of earlier using 4 * 9 colours with 2 * 1 random colours for a total of 38 (36 + 2) as the Layers 1 and 6 (single pieces) instead of a 4 * 10. Would this look nicer? I would like the overall structure to be quite packed, but not over-packed. Any comments?
http://www.mathworks.com/help/matlab/ref/which.html
Unzip the folder if necessary and save it in a convenient location (like the matlab toolbox directory). Then use the pathtool function to add the newly created folder (and subfolders) to the path. You should then be able to run functions from the toolbox as desired. There may be a readme file in the folder which you should consult for more detailed information (eg if you have to compile mex files or similar).
You can just open the file before the loop and then close it after. Also, not that this is what you were looking for, but: n = 1:3; save('file.txt','n','-ascii') (done without testing but I think that'll work)
I think you need to do fprintf(fid,'%f\n',k) On mobile so I can't test, but try looking at the fprintf documentation
Yes, now that you post this, I also see the mistake in OP's method. You need to specify how to format the text. `fprintf(fid,'%f\n',k)` means print a float and then a new line
Call `which('fun_name')` from within your main function and display the result. `which` tells you which file is called from within the scope at which `which` is invoked--if you call it from the base workspace, it tells you which file would be used if you invoked the function from the command line; if you call it from within another function, it tells you what file would be used when executing the function from that scope (often the same as from the base workspace, but not always--especially if the function uses nested/sub functions to override base functions). `which` is also useful when expanding a relative path on your matlab path to a fully-qualified path--e.g., if you're trying to remember which included folder contains a function you need for a project you're trying to send to someone else. 
Really didn't expect conv2 to be faster than an already vectorized line of code (Each day I learn something new!). And I'm now slightly bummed that I didn't consider putting d in an cell array... 
Why do you open and close the file between each write? Moving fopen to before the loop and fclose to after the loop would be much faster.
If you need to mix numbers and strings you should use a cell instead of a matrix. &gt;&gt; doc cell
easy thing first: The way you had it set up before was that you determined the indices of the cylinders (d) within your while loop. But the thing is, your cylinders don't move! The indices are constant so they can be calculated outside of your while-loop. So what you want is separate lists of all those indices for each cylinder. An ugly way to achieve that is by calculating and saving each one seperately: d1=find((y_arr - y_centre(1)).^2+(x_arr - x_centre(1)).^2&lt;r(1).^2); d2=find((y_arr - y_centre(1)).^2+(x_arr - x_centre(1)).^2&lt;r(1).^2); %etc and use d1, d2 ... dn later on in your while loop as constants. An easier way to achieve this is using cell arrays and a loop. So you first find all the indices with 'find' and then save each one seperately in a cell array as shown by /u/MathAndProgramming. The huge advantage of this is that it's clear, easily expandable and (most importantly) you don't re-calculate those constants within your while loop each time! Okay, now convolutions: Convolutions can be super-complicated (and to be honest, not really my strong suit) but in essence, what it does here is put a moving filter on your matrix. An attempt to explain how: you make a filter (In this case: M=[0,1,0;1,0,1;0,1,0] ) and move it over your matrix (it works in 3x3 blocks). It multiplies the values in the matrix and the corresponding values in filter, takes the sum of them and places it in the center of your 3x3 block. This way you achieve the exact same thing as your original code. You may notice that there might be some problems at the edges (what's the value at the edge!) but that's what the 'valid' command solves. You can check the wiki-page on convolutions and play around with them (you can make a 1d vector and a filter and take the convolution and see what happens). 
The answers to the three riddles are 'Hope', Blood' and 'Turandot'. I have been offered further hints that we should be thinking in Italian here rather than in English (if I have understood the hint correctly), giving us 'Sperare', 'Sangue' and 'Turandot'. However I have also been given a further clue that the key is longer than 3 characters, so I am now very confused.
Is this what you need? http://www.mathworks.com/help/matlab/ref/function.html?requestedDomain=www.mathworks.com
Yeah this is what I ended up doing.
I have read the documentation already, I am very well aware how to set up a parallel pool, but setting one up every time I run my code isn't an option as it isn't always practical for me to run on all my cores. Hence I need a switch but I want this switch to be me setting up a parallel pool, not attempting to set one up every time it enters the function.
okay so I have changed it to a cell, thank you. Now i am trying to find the index of a specific numeric value in the cell array: index = find(m==a) where m is a cell matrix with numeric values and a is a number in the array. I keep getting an the error Undefined Operator '==' for input arguments of type 'cell'. how do I index a cell array for a specifc value and have it return its index? 
Are you trying to put a tangent line based on an interpolation between 0.2 and 0.5 from (U,I)? Seems like you are trying to interp between these points with 0.28 to 0.33. But then you try and polyfit using the original x-values (U; 0.1 to 6.0) and these new interp'd ysmooth values (made from xvalue queries at 0.28 to 0.33). I think for your polyfit() line you should call it as: pfit = polyfit(p_interested,ysmooth,1); which will give you a fit to that linear interpolation you performed using the correct (x,y) pairs. Then you can use [polyval()](http://www.mathworks.com/help/matlab/ref/polyval.html) to evaluate that tangent line approximation on whatever x interval you want (for example, your original U vector). *e: this (what you're doing) seems like a really round-a-bout way to get a tangent line approximation to your (U,I) data between U = 0.2 and 0.5. Why do you need to call so many functions, and not just algebraically solve for the equation of the line itself?
Ah yes I should have said that. I was trying to approximate the tangent line for 0.3. To solve this algebraically wouldn't I need the function for my data points? I think using polyfit and polyval is the way to do it. At least the teacher suggested it. Thanks for your help but unfortunately I'm still not getting the correct results. Do you have another idea? 
Maybe take a closer look throught the [interp1()](http://www.mathworks.com/help/matlab/ref/interp1.html) documentation and the examples. What you're asking (well, doing, really) in your OP is just like plotting those points and connecting them with a straight edge (linearly interpolating between them). Hence -- the result you should obtain from what you're trying to do with interp1(), polyfit(), and polyval() *should* be the same as if you just algebraiclly solved y = mx + b. I was just saying why do all this computation effort when there's a much simpler way to solve what you've originally got coded (but may not be your intention). Take a look at the first two interp1() examples -- do you want your fit to be based of 'linear' interpolation or do you want an interpolation scheme that will better approximate the true "curviness" of your data points? The sine curve in the example is rather jaged in the linear interp one (as they are just connecting points with lines) versus the spline interp one where some sense of the curvature in the data points is kept. I think you should try your problem using the interp1(.....,'spline') option, see if you get a better approx. to your data and not just a linear connection of the points. You'll still need to alter your polyfit() call.., and also use polyval() to evaluate the polynomial (line) you fit. I can show some pseudocode for this method, but I'd like to see what you can work out.
&gt;If this approximation is good enough, then keep on going! I'm not really sure if it is good enough, it was just my only idea so far. But why do you keep saying between 0.2 and 0.5? I wanted to find the secant between 0.28 and 0.33. &gt;In the end, do you want this new tangent line you will draw to be on the same domain as your data points (i.e. be between 0.1 and 6)? Yes I would like that. That is one of the things that I'm currently not getting to work. 
Great this is working and mostly doing what I wanted. What I don't really understand is this part &gt;linear interp between 0.2 and 0.5 The graph seems to show that you are right, but where do these values come from? I actually wanted to linear interp between 0.28 and 0.33. That would make the (tangent)line more accurate right? What am I missing here? 
No problem, glad to help you through it.
Yeaaahh..... we're gonna need more effort than: 1) assignment 2) code skeleton 3) help do What have you tried? Any errors (post them here)? Where are you stuck?
Well, with MATLAB there is a couple of ways. To add a folder to your path temporarily, you can just right click on the folder in your "current folder" browser, and say "add folder to path." To set your path more permanently, in the ribbon near "preferences" there is a "set path" button. There, you can tell it which folders to have in your path every time you load it. You can also make custom path files. If you have a shortcut to MATLAB on your desktop, you can right click, go to properties and say "start in" and add a folder. Then, MATLAB will boot, with that folder as your current folder, and if there is a pathdef.m file there, MALTAB will load that path. This can be handy if you work on distinct projects. You could have a "work" MATLAB shortcut and a "school" MATLAB shortcut (for instance) that load to different places, with different pathdefs and different startup and finish. 
I can't see the code? 
Do you already know what the values of the fourth array will be, or is it variable? If it's constant, I would make a for loop which iterates through each row. For each row, I would make a switch-case based on the fourth column value. In each case, append the read row onto the end of your new array. If your fields are dynamic (may change in the future, uncertain), that won't work at all, since switch-case isn't dynamic. You could start writing them to structure fields, though. If the field exists, append the values to the existing array. if the field doesn't exist, make the field and throw the values in there. Alternatively, if order doesn't matter, maybe you could sort all of the rows by the value in the 4th column. You could then break it down into smaller arrays/structure fields based on where the string changes between rows. 
Get your figure handle, h, use get(h) to list the properties and get an idea of everything you may edit, but you are interested in setting WindowButtonDownFcn. When the user clicks in the figure window, whatever callback is in there will be called.
Press F5.
What you want to do is logical indexing. Look it up, yo. A = {3 5 7 bed 4 7 9 shelf 5 6 7 cat 2 9 4 shelf 7 9 4 cat}; idx = strcmp('shelf',A(:,4)); shelfArray = A(idx,:); catArray = A(strcmp('cat',A(:,4)),:); bedArray = A(strcmp('bed',A(:,4)),:);
You can use a function handle. I.e: f = @(x) x.^2; You can then write a function that accepts the function handle and does whatever operation on it.
&gt; planning to learn it? so how do i learn filter designing completely? &gt;... &gt; how do i learn all these concepts? Whoa there, tiger! You are correct. There is a lot to learn. It would take more than a lifetime to learn it all. I know EE professors who have built careers around variation of Kalman filters ALONE. Learn what you need to solve your problem; don't stress out about the rest of it. What problems are you trying to solve? What is your math background?
Drag and drop the file to the command window. Then double click the struct variable in the workspace, or type it in the command window. 
You can find it [Here](https://bitbucket.org/gaborvecsei/handrecognition/src/6c1f99b4359db47f2c6fad7816cb40c74fdf373c/Hand_Recognition_homework_ENG.m?fileviewer=file-view-default) btw. you can find it at the left side of the [page](https://bitbucket.org/gaborvecsei/handrecognition) called **source**
And then startup.m and finish.m will be called every time you switch paths? 
Wait, I'm confused. Why are you still in the time domain? you should take the Laplace transform of your equation if you are trying to derive a transfer function. That's kinda step 1 for these sorts of problems.
You could try something like this: function y = rect(x) y = sin(2*pi*x); HalfIdx = y==0; y(y&lt;0) = 0; y(y&gt;0) = 1; y(HalfIdx) = .5; end It has a period of 1, but you should be able to fix that easily enough.
Thanks for the correction. I so frequently write `if all(A) &amp;&amp; b` that I missed the actual behavior. &gt; `sum(logical(A(:)))` That doesn't quite work, since it ends up being truthy for `[1 0]`. I'd guess it's `all(logical(A)) &amp;&amp; ~isempty(A)`.
Type "help sum." You can sum along different dimensions. By default, it will sum along dimension 1. So if I understand correctly you just need: var = sum(X); If I'm missing it, then I think you probably want to sum along dimensions 2 and 3, in which case you should do: var = sum(sum(x,3),2); Unrelated protip: you should avoid assigning values to i and j. MATLAB stores the value sqrt(-1) to these variables. Better practice is to use ii, jj, kk, etc.
You will for sure need to use a for loop to read each of these files individually. To provide any more assistance, I'd need a little more info. How are these data sets stored? In binary or plain ASCII text? If it's in text, what kind of file format is it in - e.g., comma-separated values, tab-separated values, etc?
I've looked at the document (and tried to find other sources for explanations), but they keep referring to 'options' - whose definition I'm not sure of ... :( But thanks anyway!
From [optimset()](http://www.mathworks.com/help/matlab/ref/optimset.html ) it seems that that function outputs a structure variable, which in the docu is just called 'options', which contains various options/settings for other functions that make use of this 'options' structure. Functions like fminbnd(), fminsearch(), fzero(), and lsqnonneg(). Seems like what you're trying to do is use one of these and fiddle with the options for the functions, which is passed into that function by making an 'options' structure using optimset(). Confusing nomenclature right? I would take a look at the example on [fminbnd()](http://www.mathworks.com/help/matlab/ref/fminbnd.html) (even if you aren't using that function) -- it shows a relatively straight forward application of optimset within the fminbnd() function call. Alternatively you could split it onto two lines, set AVARNAME = optimset(...) and then call fminbnd(....,AVARNAME) as the AVARNAME variable will be the appropriate option structure.
Okay, creating a function for a single data file will cycle through all 50 data files? Thanks again!
What equation are you trying to solve? It seems from your description that g, h and m are constant scalars, and x is a constant vector, so what free variable are we solving for?
You have to define it as a function. Specifically, an anonymous function. An anonymous function is basically a separate function file, but a one liner. It's how you write y = f(x) without using symbols. For example: f = @(x) x^2 y1 = f(3) % y1 = 9 y2 = f(4) % y2 = 16 So you would write: g = 5; h = 10; m = 2; f = @(x) g * h * x * m^2 y3 = f(2) % y3 = 400 Then, you would say z0 = fzero(f); % z0 = 0
Thanks! Also, what's it called when you plot a function of x without defining a vector x?
Not sure im right, but since you know the last 2 bytes are always 2 long you could do something like stringname(4:end-2) so from the 4th element to the second last
No - you will need to cycle through those files yourself.
Appreciate it a lot man, thanks for taking the time! 
Yes. You will need to generate a cell array with the name and path of each data file using the dir function.
is it just stuck on itself because I already defined phi(:,1) to be phi0 in line 9? Sorry I'm a little confused
It does what it says in the documentation, which is very clear and straightforward. It makes an options struct, which holds configuration settings for various optimization functions. It even lists each if the various settings and their possible values. Read the documentation. It documents things. 
Saying "I get an error" is like being asked if you know what time it is and saying "yes". That's cool, but... *what fucking error are you getting*? It's important because it literally tells you what's the problem is. That's the whole point of an error. They aren't just red text that shows up to be annoying, and they're not written in a 4000 year old dead language. *read them*
I'm not sure I understand what you mean? Example?
Ctrl+0 or run the program from the command window
X=1:3 would create the x values [1, 2, 3], so your plot might look a little jagged only having three points. If you wanted more points to plot your functions with more accuracy you could use 1:0.1:3 for example, which would list all the values from 1 to 3 increasing by 0.1 (you can use whatever step size you want), and in that case you'd get [1, 1.1, 1.2, ..., 2.9, 3]
I don't think that's it - iteration = 2 on the first execution of that line. The problem is on line 14 - trying to access phi(:,3) before it exists. There's two off-by-one errors on that line.
Look into the 'format' command ('help format' should give more info). I always forget the various permutations of the format options and I'm not in front of Matlab right now, but I usually just do a 'format long' and that does the trick for me.
I don't know exactly what you are doing but I can guarantee you `edit` is the wrong thing to use here. &gt;I'm trying to continually read and process data from a file and it's working great until the file gets too long Why does the file get too long? And why can't you use `fseek` to...uh, seek later in the file?
Using this logic worked great, thanks very much! There's always a much simpler solution than I think.
I wrote a little script once, because I like to be able to switch between decimal and the default. Maybe you find it useful: % Change Command Window output display format - display decimal % % &gt;&gt; dd % Switch between decimal (longG) and default format setting (short) % https://de.mathworks.com/help/matlab/ref/format.html#inputarg_style sFormat = get(0,'Format'); if strcmp(sFormat, 'short') format longG fprintf('Output display format: longG\n') elseif strcmp(sFormat, 'longG') format fprintf('Output display format: short (default)\n') end clear sFormat Edit: I put it in a folder that is added to the search path in the file startup.m so I can call it no matter what directory I'm working in.
You could monitor the file size with the `dir` command S = dir(myFile); if S.bytes &gt; maxBytes delete(myFile) return end It sounds like what you're doing is a little odd. You might want to seriously reconsider your approach to this problem. 
I believe str2func could be of some help to you.
Nope, tried that. str2func makes the string into a function handle, not an expression. Thanks anyway.
*format long* most likely, maybe *format int32* or something like that. *help format* will get you along the right track. 
Preferences -&gt; Variables -&gt; Default array format: bank
Would you mind explaining a little better what you are trying to do? I don't seem to understand in that case.
Probably want to use the eval function (ugh...) EDIT: For example function fn = test s = input('Define a function to analyze: ','s'); eval(sprintf('fn = @(x) %s;',s)); and then &gt;&gt; a = test; Define a function to analyze: x+1 &gt;&gt; a(5) ans = 6 
Ok, so set my refresh function as a listener on changing the limits rather than on the post zoom callback?
Ok, I understand what you are saying. I will need to play around with it, but I think this should help a lot. Thank you.
Statistics toolbox will probably be helpful to you, maybe curve fitting. 
This is a root finding problem g(z) = f(z) - 1 = 0 Using newton's method or the secant method should work
Besselzero solves for the zeros of k that satisfy the summation equation [here](https://www.mathworks.com/help/matlab/ref/besselj.html). That is different than solving for the bessel function itself, which besselj solves for. Think of it as a minimization problem where you solve for roots (besselzero) versus for solving for the equation that gives you the roots IMO (besselj). If you only want the roots, it can be faster to just solve for the roots compared to trying to calculate the entire bessel function. Keep in mind besselj only works for bessel functions of the first kind. If you want to solve for waves going the other direction you use a second kind bessel (bessely in matlab).
Yeah. You are right. I cannot believe I didn't do check `abs(x-y) &lt; eps` Thanks.
LMGTFY
Try this: format long e I'm not sure if this has changed since my version of Matlab: r2014a.
I have seen some tutorials for basic, homogeneous cases but the problem that I have is this one is in Cauchy euler and is non-homogeneous form
Use the laplace function?
[width](http://www.mathworks.com/help/matlab/ref/width.html) is also a command in matlab so I would recommend replacing it with something unique (although it works *now*) Also, instead of converting the choices to numbers, you could just use `strcmp` (string compare) or `strcmpi` (string compare case *in*sensitive). `strcmpi(choice,"yes")` will evaluate true if choise is `yes`,`YES` or `Yes`. You could also check for `Yes` and `Y` for the second prompt: `strcmpi(choice,{"yes","y"})` (should return [ 0 1 ] as logical array which would evaluate to true in an `if` statement) Lastly some advice for troubleshooting and asking for help: remove all unnecessary code that you know doesn't cause the error (run again to check if it didn't cause the error or at least wasn't the only thing). In this case the function would probably have ended up something like function [] = basic_stats(file_called,width) Mean = mean(file_called(:,1)) end Often, you'll find the problem yourself and if not, it makes it much easier for others to figure out the problem. If you include the function call (which you probably should), set the parameters to some example or at least explain what they look like.
You can implement the constructor, by implementing a method with the same name as your class. For example: classdef lineSegment properties endPoint1; endPoint2; ... end methods function obj = lineSegment(endPoint1, endPoint2) ... end end end
Statistics for data analysis. Optimization toolkit might be cool with the arduino to optimize different projects...not sure what, but could be fun. Also the image processing might be cool in addition to that, hook up a camera, do real time stuff. But to look at the functions, I would just look at the documentation and the videos on their website. The built in functions are useful but its up to you how creative you can be in using them. 
I took a similar class last semester and was in the same situation. My advice would be to study your homework and try to redo the assignments without help from the book or internet. Reading your book will only do so much for you. Actually writing the programs in MATLAB will be your best course of action.
`doc`
the point is I want to purposely allow this program to run and bruteforce out answers to this problem. good point about the assignment statements though XD
Not really, only now the particular solution will be the constant zero function. If you would have given an initial condition at some other point different than zero: x&gt;0, then you could solve this problem using ode45 (because the mass matrix would be regular for all x&gt;0). I suspect that your professor intended to give you a problem more interesting than computing the constant zero function. You should query about the correctness of the given initial condition.
`a` is just a string and `image` doesn't take a string as an argument. It doesn't matter what that string is. Try using `image(eval(a))` instead of `image(a)`.
The other person already shows you how you can fix you code, I'd still advise you against doing it that way. It's usually much cleaner to just index matrix objects than having different variables using eval. The first thing that I thought of would be a cell array. Im{1,2,2}=imread(path);
Some tips/questions that will help you get on your way: 1) for-loops usually execute a set/pre-determined number of times 2) for-loops usually do something over and over again 3) what gets repeated in your task? 4) are there anything(s) that get repeated, but at a different frequency from other thing(s)?
Check out the mod() and/or rem() functions. You'll also need to use an if-statement appropriately...
I would use ffmpeg to separate the audio before loading them in matlab.
This line of reasoning is too abstract for what this person is trying to do. I don't think you mean to come off harsh. But it's coming off a little harsh. 
I agree, but in the same breath, I'm trying to engage OP and not just provide some code to get the task done with no learning behind it. I'm not just one post "we don't do your HW" and be gone -- I'll be here to keep helping OP through until they arrive at the solution. Appreciate your comment nonetheless.
I really appreciate people like you because I am new to matlab and I am taking a class called Numerical Methods to PDEs. A lot of the syntax and for loops really confused me. My teacher did provide us with the basic code to work out the problems, but it was with him engaging me to help me find my own answer that really taught me what I am doing. 
To give you another hint about using mod()/rem() Can you see anything *"deeper"* to having alternating +/- in your sum? Is there something mathematical that you can use to your advantage and with how you are using your for-loop iterator (i=2:2:200)? Also, have you been exposed to [if-statements](http://www.mathworks.com/help/matlab/ref/if.html) yet?
Thank you!!! This works!
I won't write out the code on here but couldn't they just solve this problem just with an exponent? Just one line in a for loop, no if, no mod
Our project's goal is to automate a process which today includes manually converting .avi-file to .waw and then analyze the audio. So we really want our script to do the whole process by itself if it's possible. Thanks anyway for help! 
Bad ram? Run a test on it.
Good work. I admit it's more elegant than what I was pointing you towards
Do you not know how to make a rotation matrix? Do you not know how to multiple a matrix times a vector? Do you not know what "rotation" means? You got to give us a little more before we can help you. See the sticky at the top of the sub for tips on asking questions. 
At what point should i update my x value? I know need to set it equal to x_mid at some point, but i really am not sure where.
Without knowing how your data is set up, we have no way of knowing how to answer this. The 95 in 5961x95 obviously refers to the 95 points of interest, and the 5961 refers to... what? Spikes? 5961 sets of data for the 95 points of interest? Organize what you have, and post that information. If you want to scatter 95 sets of data let alone 5961 sets of data, even with group scatters you're going to have a crowded plot. For this reason, organization seems like its gonna be a nightmare. You can't have that many unique identifiers for the data, so a lot of it is going to be sharing a color or linetype, etc with another set of data. That or you just limit what you see at once on any axis. If you want to tie in data points in the cluster to original data, you can either have an extremely long legend that has something like ['data set ' num2str(i)] looped or manage it with gui elements (redrawing by a defined group, with something like a pulldown menu?).
So I'm not sure what part you don't know how to do. Also, I'm not sure what you're trying to do (and to be blunt, I'm not sure you know what you're trying to do). If you want to normalize by subtracting the mean and dividing by the standard deviation, that's fine but that doesn't put your dataset between [-1,1]. But regardless, you're going to subtract something and divide something. To subtract a constant vector from each row in an array, use the function `bsxfun` As an example, to subtract row vector `v` from each row of array `A`, you say: bsxfun(@minus, A, v); Whatever you subtract and divide your training set by, do the same thing to your test set. 
Well, you have to make a [rotation matrix](https://en.wikipedia.org/wiki/Rotation_matrix). If you are rotating a vector `v` by an angle`t` then define a rotation matrix `R` as follows: R = [cos(t), -sin(t); sin(t), cos(t)]; This is the pre-multiply rotation matrix, so then you say: v_rot = R*v
You need to read the [kmeans](http://www.mathworks.com/help/stats/kmeans.html) help file. [idx,c] = kmeans(WP, 3, 'Distance',disk_k); The vector C will tell you how it clustered the groups by providing a centroid for each cluster. Although if you only need to know how your original dataset was sorted, the idx variable contains a column vector telling you how each observation was classified.
Do you actually want to center your data around zero, or just normalize it? If the latter, just divide by the max absolute value of each column to get data that's guaranteed to be between -1 and 1. Note that if you normalize the test set based on the training set, the "normalized" test set is *not* guaranteed to be between [-1,1]. It sounds like you're trying to normalize features for machine learning or regression -- if so, this is okay, as the point of normalization is to have feature values in the same order of magnitude as each other. trainingSetNormalized = bsxfun(@rdivide, trainingSet, max(abs(trainingSet))); testSetNormalized = bsxfun(@rdivide, testSet, max(abs(trainingSet)));
I was going to come back and continue to help out and not just bash you for your sorta harshness, but alas work is a bitch and I couldn't get away. Keep doing good work! 
Don't do it manually. fitresult = fit(xData, yData, ft, opts); Then use *feval* to evaluate *fitresult* in desired range. 
Yes, I'm trying to normalize features for machine learning (classification). Should I just divide by the max or should I actually scale the features to [-1, 1] by range = max(m(:)) - min(m(:)); m01 = (m - min(m(:))) / range; mOut = 2 * m01 - 1;
YOU FIXED IT! haha thank you for the pointers!
You haven't given us a lot to go on about what you've tried, but if you're using GUIDE and you want to change views like that there are three possibilities you should look into: 1) If you really just need to change the question the user sees, just change the string of the text uicontrol which displays it. 2) Put the different views on separate panels, and toggle the visibility when you need to switch. 3) Create a separate GUI with the next view you want. Have your first GUI open the second when appropriate. I'm guessing 1 or 2 will work best for you.
1 is going to be by far the easiest. /u/CyrilFiggis45, look at `get()` and `set()`. Do you know how to use callbacks? If not then you need to check that out too. With `get()`, `set()`, and callbacks you should be able to do what you need.
given the context of your assignment, it looks like you're developing a Nusselt correlation for given Reynolds numbers across some heat transfer surface. so i'd stick to the power law instead of exponential -- there's no asymptote on Nu! i am confused though, because Re=0 (no flow) should result in Nu=0 (no forced convection), so i would expect the equation to be in the form Nu=a*Re^b, with no c. but you know the context of the assignment better than i do. i misunderstood the original question, and thought you had to report the fitting algorithm itself. if not, use matlab's fit( function like /u/owiecc said, using ft power1 (no c) or power2 (with c). and suffice to say that that function definitely uses the least-squares method which, if you forgot, works by minimizing the sum of the squared residuals, or differences between the Nu of a data point and the Nu at corresponding Re on the model curve. good luck!
Changing the question and/or changing the answers. Anything involving just changing text. Further, by toggling visibility, the OP can also change the number of answers. So assuming the OP question is an accurate description of the problem, he or she should be able to do it just by changing one of two properties.
Fair point
Create a figure, turn on hold, run your function which plots with your base z0 values, plot, run your function with new z0 values, plot, repeat til you've plotted all of the values (I'd make z0 an input to your function to make this easier)
&gt;Dont see why fitcdiscr isnt working What is the error telling you?
&gt; elseif (da &gt; 0.2 &lt;=1.1) This doesn't work. 0.2 is always &lt;= 1.1. Also, Matlab can't really do things like 0.2 &lt; x &lt; 1.5, you need two separate comparisons strung together with &amp;.
yea my lab manual says we need to curve fit it on a power function, which is what i am doing my bad if i said exponential somewhere. you are correct! this lab report i am working on is focused on a cross flow heat exchanger. We actually calculated the data at 10% 40% 70% and 100% fan opening and therefore only got 4 data points. This is why i dont have Re=0&amp; Nu=0. Im only supposed to plot my data and give the curve fit equation, not report on the matlab steps i took. Thanks for your help! 
Thank you for the very detailed reply! I have the idea that this is going to be hard, but I want to compare the accuracy of the crystal size from the image with the XRD computations that I have. Your message give me quite some ideas, will try to apply it. Again, thank you very much!
This looks nice, too bad that I don't have r2016a yet :(
 x = [ -1 0 2 2 5 ] y = [ 0 0 2 0 0 ] plot( x , y , 'b-' ) grid on xlim( [ -1 , 5 ] ) ylim( [ 0 , 2.5 ] ) xlabel( 'Time, sec' ) ylabel( 'x(t)' ) 
Thanks for the responses everyone! Had finals all day and am working on this thing now. Gonna be a long night... I'm doing exactly what y'all suggested with get and set, got some help from a friend how to incorporate a back button, now just gotta do a few more questions and some kind of file read and file save. 
It's half of a sawtooth wave, and there's a function in matlab for it, but the real problem is the instantaneous drop to zero. it is indeed possible to piecewise-define two functions together, but in this case, it's probably too much work. 
So is there anyone that can help me with this? Like I said, I'm not trying to find someone who'll just do it for me. I understand the rules here. I'm trying to find how I get this started. I know that I need to import the Excel file, I just don't know what to do with it after that. I mean, I understand that it has to do with the tension in the wires, but there's so much information in the Excel file that I have no idea what to do with all of it.
First the easy one: you only got a single plot because you didn't say `hold on`. Thus, your second plot plotted over top of your first. So, after you do your calculations, you simply say: figure hold on Then do your plots. This will plot the real and imaginary parts of p1 on your screen. A signal is real if it has no imaginary part. A signal is even if f(x) = f(-x) (that is, it is symmetric about zero. So, something cos(x) is even. A signal is odd if f(-x) = -f(x). So, something like sin(x) is odd. 
Thank you for very much for the detailed explanation. How would you use the optimization toolkit for this problem? To be more exact, it is a machine learning problem. I want to tune the parameters C and gamma of a SVM RBF kernel classifier with fminsearch. The third parameter I want to tune is the number of nearest neighbours for missing values imputation which of course can only be an integer.
Thank you for doing this! I'll definitely try some test queries.
What exactly is the problem? Did you remember to use the "." before exponents and multiplication to allow the use of vectors? As in: x=[1 2 3 4 5]; n=[1 2 3 4 5]; Out_vec = x.*n.^2;
For lack of better help, I'd suggest starting at the bottom and working backward through your code. Your error suggests that you're expecting wMax to be 2-D with 3 (or more) columns, but it isn't. Start with a "whos wMax". If it's not, go check both wTemp (is it 2-D?) and if your if-statement *if abs(xTemp)&gt; abs(xMax)* is satesified, as this assigns wMax. Basically, backtrack through your code and follow a trail of crumbs that ultimately ends with the assignment to wMax.
How do you know it was designed using MATLAB? I can't find any mention of MATLAB, MathWorks, or SimuLink in relation to MotoBot.
I don't get this. Why is "y(i) = ..." allowed even if i = 0, while "y(0) = ..." isn't? Edit: think I got it, i is actually a boolean disguised as 0, and inputting the index "false" simply skips that entry.
Did you try setting a breakpoint and debugging this script? What is the size of `wMax`? At a glance, it looks like `wMax` depends on `wTemp`, which only becomes non-empty if `w(3) &gt; 0`. Is it possible that this is never the case and it remains empty? As a side note, `wMax` only seems to get created/assigned to `wTemp` if the condition `abs(xTemp) &gt; abs(xMax)`is true. However, you use `wMax` in the `plot` command outside of that `if` statement, so there are potentially instances where you'll get an error stating that `wMax` is undefined. You might want to consider restructuring the code to somehow account for that.
 stirling = @ (n) n.^n.*exp(-n).*sqrt(2*pi.*n); n = 5:15:300; stirling(n) Here is the code there is no error, but the numbers are not correct. Stirling(n) should result approximately the same as factorial(n) and it's not working. The function works when given just a real number, (for example stirling(5) = 118, factorial(5)=120), but when i try to do all the vector n it's not working correctly. It seems to add zeros at the output and i can't see the true value. Is this something to do with Floating-point? or am i doing something wrong? 
Ah, I did not realize, that idx variable contains a column vector telling you how each observation was classified. This is pretty much what i was looking for. Thank you.
Yeah the 5961 refers to calcium fluorescent intensities. I didn't realized that the index was given by the kmeans function. Oops 
The 5961 are intensities of calcium fluorescent. So i was trying to cluster them based on activity pattern. Ah, sorry AP should be changed to WP (meaning whole prep which is the 5961 x 95dimension). I was a bit careless in specifying the what everything meant. My bad. Kdist i set to cosine. I figured it out though. kmeans can give you the index of each observation for the cluster number.
The optimization toolkit has several integer constrained optimizers- which one you use would be based on the problem you're trying to solve. One to look into might be [ga](http://www.mathworks.com/help/gads/mixed-integer-optimization.html?refresh=true). 
You are replacing the plot with the later plot command (after %plot nodes). Each iteration in the loop is overwriting your plot in Figure 1, and then the plot nodes is also overwriting it. By looking at that code you should have a single plot in figure 1, right? I would put the command 'figure' before each plot command. This will open a new figure so you should end up with a total of nLoads*nNodes*2+1 different plots (assuming all of the if statements come out true. If not you'll have less). So instead of plot(x,y) just use figure plot(x,y)
It's totally something Matlab can do. Well, mostly Simulink. There's actually a live demo where they do exactly that - They have a webcam on a servo track a small green ball. I wouldn't say it's easy. Imagine processing can be a pretty challenging. But it's possible. Also, Simulink is a very fine real-time process, but how good it works really depends on what hardware you're getting. Going to go all out and buy an xPC or dSPACE MBX? You're set for life. Going to just use an Arduino? It'll work, but it's not the most optimized hardware for this stuff. 
I would agree that training a neural network to your data set is a stellar idea. There IS a [Matlab neural networking toolbox.](http://www.mathworks.com/products/neural-network/) I've used it to screw around before. It pretty much just gives you a GUI to train and validate the NN. It's neat, but you still need to know what it's doing in order to understand what it's doing. Plus, NNs don't have to be impossible, even in Python. I really enjoyed watching a short series called [Neural Networks Demystified](https://www.youtube.com/watch?v=bxe2T-V8XRs) which walks through making a simple NN in python. It's very in depth for an introductory tutorial. I couldn't tell you anything about the Hidden Markov Modles, except it sounds like a Kalman filter with a different name. As a controls engineer, I really don't like most "statistical" or "probability" models, especially for controls applications. But for stuff like this? Those seem like perfectly applicable tools. 
There's no way to get around the requirement to have a default value for inputParser. I would suggest you make a class file. You could call the outer function as your class constructor. You could set one property to initialize to your a default value. If someone needs to use the non-default one, they can set it. Your inner function just needs to read the property from the object, which is always there now. Your outer function doesn't need to set it either. No more worrying about the default value in your outer function. A class file is also one of the most modular approaches you can have.
Pass the variable `binary_in` and not the character array `'binary_in'` to the `reshape` function. 
I did change it but the next reshape is still giving me grief. I guess I do not really understand what he is trying to do with this line ([bb1;zeros(15,21)],1,15.*21)
For now just try plotting the real part of the signal, the shape is right, and your code does what it should, but it's not correct especially since you can't set your "t" variable to a negative number Remove your first for loop, and create your "t" vector like you did with "k". Also "p1" does not have to be indexed and can be initialized to zero 
Hey thanks for your reply! I'll reply in detail tomorrow. For now, here is the wave I excited the system with. I ported this code over to the device controlling the motor. %% sinTest.m % % This program is used to develop the input function for % the sin sweep test for the motor dyno. clc; clear; %% input % sampleRate = 30; %hertz duration = 20; %seconds cyclesPerTest = 9; %number of cycles pwmLow = 1100; %ms pwmHigh = 1900; %ms invert = false; %invert the base function direction modulation = true; %enable secondary modulation numWiggles = 2.5; %num modulations at each peak wiggleAmp = 150; %ms %% function generation % pwmAmp = (pwmHigh-pwmLow)/2; pwmCenter = (pwmHigh+pwmLow)/2; cyclesPerSec = cyclesPerTest/duration; t = 0:1/sampleRate:duration; primaryMod = sin(t/t(end)*pi); direction = ((invert*-2)+1); pwmAmp = pwmAmp - wiggleAmp; if modulation if(mod(numWiggles,2)==0) secondaryMod = -direction*wiggleAmp*sin((2*numWiggles-1)*cyclesPerSec*2*pi*t); else secondaryMod = direction*wiggleAmp*sin((2*numWiggles-1)*cyclesPerSec*2*pi*t); end else secondaryMod = 0; end base = direction*pwmAmp*sin(cyclesPerSec*2*pi*t); y = primaryMod.*(base+secondaryMod)+pwmCenter; figure(10) subplot(1,3,1) stairs(t, y); title('Excitation Signal') xlabel('Time, s') ylabel('PWM Command, \mus') grid on subplot(1,3,2) stairs(t, y,'Marker','o'); title('First Peak') xlabel('Time, s') ylabel('PWM Command, \mus') grid on xlim([0 duration/(cyclesPerTest*2)]) %http://stackoverflow.com/questions/15261122/determine-frequency-from-signal-data-in-matlab [maxVal, indexMax] = max(abs(fft(y-mean(y)))) frequency = indexMax*(sampleRate)/duration f = sampleRate*(0:duration/2)/duration; P2 = abs(fft(y-mean(y))/duration); P1 = P2(1:duration/2+1); P1(2:end-1) = 2*P1(2:end-1); %http://www.mathworks.com/help/matlab/ref/fft.html subplot(1,3,3) plot(f,P1) title('Single-Sided Amplitude Spectrum') xlabel('Frequency, Hz') ylabel('|P(f)|')
Have a look a these two functions: [readtable](http://nl.mathworks.com/help/matlab/ref/readtable.html) [writetable](http://nl.mathworks.com/help/matlab/ref/writetable.html)
For anyone that saw my bonus question: http://blogs.mathworks.com/steve/2008/01/28/logical-indexing/ 
You can simply call ode45 with a matrix of initial conditions (with the option 'Vectorized' set to 'on'): tspan=[0 10]; z0=[0.1, 0.2, 0.3, 0.4; 0, 0, 0, 0; 0, 0, 0, 0]; options=odeset('Vectorized', 'on'); [t,z]=ode45('harm_oscillpastpaper',tspan, z0, options); figure(2); plot(z(:,1:3:end), z(:,2:3:end)); There is one catch though: you have to define your ODE in a vectorized manner, also note that when ode45 calls the ODE function it flattens out the input vector, so inside the definition of the ODE function one needs to reshape the flattened input vector, apply the function and flatten back the result. function zdot = harm_oscillpastpaper(~,z) A=0.07; z = reshape(z, 3, []); [~, m] = size(z); zdot=[z(2,:); z(1,:)-z(1,:).^3-0.15*z(2,:)+A*cos(z(3,:)); ones(1,m)]; zdot = zdot(:); end 
From the sidebar: http://www.econ.ku.dk/pajhede/Cheatsheet.pdf You could also make a word document with any operations with examples and/or descriptions.
thanks! that's probably the best thing for it, I'll try it out and come back with any problems. 
Thanks! 
Your figure is exceptional in conveying just what I needed! My compliments to the programmer! Right now, your noise is really only exciting the system at 13.5 Hz, and points around there. You don't really do any excitation at low frequencies. When you send this all to the System IDentification (SID) toolbox, it doesn't really have any data to fit at the low end, so it isn't very accurate. (20% error) You need to use a noise signal which excites the entire spectrum you are interested in, from almost DC up to your Nyquist Frequency (15Hz). I would suggest you try a sine signal with a linear or logarithmic frequency sweep. (Logarithmic maintains constant power over the frequency spectra.) They make it very easy to be sure you excite your frequencies of interest. Keep in mind the spacing of your data points in SIDs FFT results as well. Your lowest data point and the spacing of your data points is determined by your sampling rate and the number of data points. In order to have an FFT resolution of 0.125 Hz when sampling at 30Hz for example, you need 8 seconds of data. Your noise should also have that same period if you are using linear or logarithmic sine sweeps. You can also use multiple,shorter sweeps, but you cannot use LONGER sweeps, because in the 8 second window, it looks like you're not exciting your system at the frequencies you care about. 
Either the [struct](http://www.mathworks.com/help/matlab/ref/struct.html?refresh=true) or the [cell array](http://www.mathworks.com/help/matlab/ref/cell.html) would work for your case. Normally, when everything is of the same type, but my array sizes are just jagged, I use a cell array (since the extra ability of a struct to name your fields is not needed and it is easier to loop through your cell array). Using a cell array is pretty easy- your use `{}` instead of `()` to index it. So, say you have two arrays `A` and `B` of different sizes that you want to store as a single object, you'd just say: mycell{1} = A; mycell{2} = B;
I'm sorry, but could you please elaborate a bit the code? I'm so sleep deprived i can't even think straight right now.
It's easiest to do this in log space. Logs allow you to avoid huge numbers. This is a common trick in statistics and statistical mechanics. Let's first log all the terms, remembering that products become sums and divisions become subtractions. `ln(factorial(n)) = sum(ln([n:-1:1]))` `ln(n^n) = n*ln(n)` `ln(exp(-n)) = -n` `ln(sqrt(2*pi*n)) = ln(sqrt(2*pi*n))` (no need to simplify) Put it all together and then exponentiate. approx = @(n) exp(sum(ln([n:-1:1])) - n*ln(n) + n - ln(sqrt(2*pi*n))) Try that with a few numbers and you see that Stirling's Approximation is pretty darn good
I'm not sure why this is in /r/matlab but Calculate your moment force: 1ft*200 lb=.5ft*F lbs F=400 ft lbs of force on the plate Assuming a Nickel is about .5 in^2 or 0.00347 ft^2: P=F/A=400ftlbs/.00347ft^2 = **115,273 lbs/ft^2**
You can use classdef to create your own matlab class. type "help classdef" for more information. Create an m-file named "group.m" with the following code and save it on your path (or current folder): classdef group properties coord1; coord2; coord3; end end then you can assign values with mygroup = group; mygroup.coord1 = [1,0]; mygroup.coord2 = [2,3]; Another simple way is to just create a struct. Type "help struct" for more information. clear your workspace and type the following: mygroup.coord1 = [2,3]; mygroup.coord2 = [1,0]; mygroup.coord1 ans = 2 3 
Thank you so much man
You want the magic of [logical indexing!](http://blogs.mathworks.com/loren/2013/02/20/logical-indexing-multiple-conditions/). As a quick example, to get the X's and Y's where Z's are 1 you say: X1 = X(Z == 1); Y1 = Y(Z == 1); 
Did you look at the documentation for "butter"? It says what wn is. 
Interesting, all right thanks for the tips!
Vectorization in Matlab is a huge thing. Matrix operations are really well optimized and faster than for loops. 
... How small? I've never had a problem with this although I'm not sure how small we're talking here. I would guess that part of your problem might be the way you output your files and what format you output them to... Not clear though
When I include formulas in the text of a paragraph I want the paragraph spacing to remain the same. Maybe I should be using a different format besides latex to include formulas within a paragraph? Here's a link to a comparison between what I'm currently publishing and what I'd like the pdf to look like, along with my publish settings: http://imgur.com/a/UdNFY
Expanding on this, Instead of using rand command with if you can use the randi command. 
Thanks! I think I might have to have a whole mess of 'drunkards' eventually and start looking how the swarm behaves. I think I'll use what you given me and expand on it a little: steps = rand(1,100); %generates initial random matrix flag = false; while ~flag %loop eliminates 0.5's halves = find(steps==0.5) %finds all values equal to exactly 0.5 if ~isempty(halves) %checks if there are any entries steps(halves) = rand; %generates replacements for these variables flag = false; %lets loop know to check again else flag = true; %lets loop know there are no halves end end ind_pos_r = steps &gt; 0.5; %finds right steps ind_pos_l = steps &lt; 0.5; %finds left steps steps(ind_pos_r) = 1; %sets right steps steps(ind_pos_l) = -1; %sets left steps There we go! Hopefully that has it random as I can get it and most of the time that while loop will only make one pass.
I tried it with 600000 and the value for Wn then exceeds 1. So its unable to work. A tricky one i know. Ping every 12 seconds, 50 pings per sample, 1 log every 10 minutes, which is what i need to filter. If that helps at all. I am completely lost about this, sorry. But thank you for the share knowledge. 
As the other post says, the three dots is usual. In this case though I'd probably be inclined to split up the disp lines a bit into assigning things to strings, catting the strings, and printing the result.
I'd just like to point out that the comments may be required because the markers need a way of determining if the student has actually learnt the theory or is just copying code from lectures. I'm an AeroEng student currently learning matlab and I'm required to do this, even for simple stuff like explaining what "iter=iter+1" means. I know that this is bad practice in actual programming but it means that the marker can read and mark my code very quickly without having to ask me anything.
the b/w classy style 
Not sure if it is matlab, but it could be. To get that effect, you need to manipulate the axes properties at the handle level and adjust the linestyle when you plot. This will help: http://www.mathworks.com/help/matlab/ref/axes-properties.html?refresh=true You can manipulate just about every property of a plot like this. As a hint, most functions that involve plotting or figures in general will return a handle, accept a handle as an argument, or both. For instance: f = figure (); Will create a new figure and return the figure handle f. a = subplot (1,2,1); Will create the new axes and assign the handle to a. l = plot (1:10, 1:10); Will plot the line and return a handle to the line object l. You should be able to do it through the plot properties inspector too, but I think it's simpler to do programmatically. 
Just realized those log2 should be ln actually, oops!! I just edited it. Obviously you can use any log base, but the natural log simplifies it a little here
Maybe something that simulates hand drawn lines (to a very low degree) would get thar "classy" look? Some examples may be found [here])http://tex.stackexchange.com/questions/39296/simulating-hand-drawn-lines) if you're willing to use tikz
2deep4me I'm using LaTeX but that seems just too complicated
Beautiful, thank you!!! 
It is not completely clear to me from your description. Are you trying to take volumetric data, and project it onto an image? If so, then you would use the radon transform. If you are trying to reconstruct the volumetric data, then the Feldkamp-Davis-Kress reconstruction algorithm is what you need.
Is h(t) the heaviside (or step) function? I've met a lot of people that didn't feel good working with this function, but sure it is also a very simple solution. And if I recall correctly it is defined in Matlab by heaviside(t) Then the function f would be defined (like you said) as f = @(x) x.*(heaviside(x) - heaviside(x-2)); witch would be the almost the same: a function defined "by parts". I like the heaviside function better but if you are not familiar with it there's nothing more natural than saying the function is x inside the interval 0 &lt;= x &lt;= 2. 
Would it look like this [a,b,c] = T\\(a+b*log(R)+c*(log(R)^3 )) ? I am pretty sure this is wrong since I am still getting errors like a is undefined and I think I have my T on the wrong side of the \ . 
Before attempting to implement the linear algebra in matlab, can you write out the mathematical equation you're trying to calculate?
 T = 1/(a+b*log(R) +c*(log(R).^3)) 
use signed integers
I tried converting the whole vector to an int8 if that's what you mean, but since that peaks at 127 it wasn't really useful. 
If the image isn't huge just convert it to single or double. imwrite will automatically convert back to uint8 for saving.
Yeah im2single scales to 1, so 255*img will get you back to the same value, but sounds like single() or double() is what you want.
Would appreciate the same matlab code robust/scalability advice (commenting for bookmadking) 
Sound files? Are you asking for .wav files? I suppose there could be a number of them in different locations depending on what version of Matlab you're running and whether it's a Windows, Linux or OS X. If you just want to play a sound file at the end of your script you could do the following: [Y,Fs] = audioread(mySoundFile); sound(Y,Fs); If you just want a beep you could add this to the end of your script: beep; I hope this helps.
I've done somewhat large scale Matlab development. If you are already a competent programmer it shouldn't require any particular resources beyond the documentation. It's very well documented and easy to code. 
If you do it numerically, that seems like the right way to go. In the symbolic toolbox, I am less certain but my guess is that it doesn't know how to separate it. It wonâ€™t plug in Euler's equation and do that math. Test with something like ` x*(y+1i*z)` and see what you get. Also notice that I used `1i` instead of `i`. It is safer and less likely to cause issues if you use `i` in loops (though that is poor practice for the same reason). See more [here](http://www.mathworks.com/help/matlab/ref/i.html)
What is the var assignment of anvil1,2? You arn't inputting that into the function and you don't assign it in code. That could be your error message. I think its supposed to be Assay1 Besides that, it looks pretty straightforward. You don't need loops for this kind of calculation, you initial code looks better. firstorder = log(Assay1) secondorder = -1./Assay1; then your plots. EDIT: log of assay1 is going to give you negative numbers, because you're taking the log of number smaller than 1. That's to be expected. -1/Assay1 will also give you negative numbers for self explanatory reasons. That being said, your second and third plot will have negative x entries. I think you're doing a wrong type of calculation. X/X0, or firstorder./secondorder, for example, would give you non negative entries. Make sure the calculations you want to do are right
I would encourage you to FFT your time domain data and filter in the frequency domain directly. The DSP toolbox is cool but doing it all on your own was really rewarding for me. About your specific code in question, the documentation on the butterworth filter seems adequate, but is that the filter you want to use? It might be rewarding to design your own frequency domain filter whether it is a lowpass, highpass, bandpass, trapezoidal, or butterworth and manual apply it to you data. You always need to be thinking about the impulse response of your signal and filter and how those work with each other to produce a result. 
Remapped it to cool... it gets creepier % this will display a blueish image figure('units','normalized','outerposition',[0 0 1 1]); clf; image; % get image data and color map X = get(findobj(gca, 'Type', 'image'), 'CData'); map = cool(32); % display grayscale image image(X); colormap(map); axis off image;
By zeroing out certain frequencies in the frequency domain amplitude spectrum and them performing the inverse Fourier transform, you can remove certain frequency content from your signal. This is what a Pass filter does. I can give you an example after I get off work today!
Thanks for the reply, it is really appreciated! Yeah, MATLAB may be a bit shoehorned, but MathWork's toolboxes are a bit too good and well tested to replicate more than minor bits in another language. I hadn't seen the toolbox functionality in 2016, that looks rather convenient. Additionally, it does look like it shouldn't be too hard to create a basic dependency management tool with it. Along with the restricted classes of properties and a few other bits and pieces, 2016a does look really solid. 
Your post has been removed. Please read our [rules for submitting homework questions](https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/), and after you have made appropriate changes respond to this post and I'll re-instate it. 
Sorry screwed up hyper linking it. You can find them here: https://www.reddit.com/r/matlab/comments/462uwe/submitting_homework_questions_read_this/
You have to show some effort that you have put forth. Simply saying "I don't know how to do this" is not showing any effort. Do you need help detecting large clumps of white pixels? Do you need help finding least area boundaries? Do you now know how to plot red lines? What class is this for? What do you know how to do? Are you doing machine learning? Literally the only way for someone to help you right now is to show you a way to do it, but as we have stated clearly we don't do homework for you. We will help you, but that is all. 
The very reason for asking a question is due to not knowing how to do it. That being said I thought my question was quite clear, but I suppose it could be made clearer. As you correctly assumed with your first question, I am looking for help on how to detect a large clump of white pixels so I can draw a box around it. 
Please edit your question, putting more detail and then it will be approved. Please also at least put what sort of class this is, as your answer you receive would depend on such things. 
That's my current solution, but it is not ideal for all the reasons you noted. Thanks for the idea though.
Okay, so in context of the problem I have, what would the function for the square and Archimedean spiral look like? Once I have this function, you said I could use it to find the x and y positions of each point, but then I would only have a bunch of points and not a continuous spiral, right? So what would I need to do to that function so I can graph it in MATLAB?
You asked two questions. First: what is the function? Answer: I don't know. I'm sure you can figure it out from the information given above. Second: given a bunch of points how do you made a spiral? Answer: make sure you have your points in the right order and call the plot() function on the x and y values
http://www.mathworks.com/help/matlab/ref/polarplot.html
This isn't so bad, just give it a value 10% larger than the max value: x(isnan(x)) = 1.1*max(x) hist(x) 
Why are xmin/xmax/ymin/ymax not scalar values? If they were, you should be able to extract all points from X with xmin =&lt; x =&lt; xmax and ymin =&lt; y =&lt; ymax with one line like so: Xbox = X ( (X (:,1)&gt;=xmin &amp; X (:,1)=&lt;xmax) , (X (:,2)&gt;=ymin &amp; X (:,2)=&lt;ymax), :); where xmin, xmax, ymin, and ymax are the scalar values for the four edges of the box. You could make it a cube by including zmax and zmin values instead of ":" in the third column. This assumes X is Nx3, so if it's 3xN, you'll have to transpose it first or change the syntax to accommodate. 
Use indexing instead or repmat: a = 1:5; b = a([1 1 1],:) b = 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 
MATLAB also has a [waitbar](http://www.mathworks.com/help/matlab/ref/waitbar.html) function, which does a GUI to show your progress. It is a little bit slower, but if your loop is long enough to warrant a waitbar, then it isn't enough slower to really matter. 
I didn't even know/thought you could define a class on matlab. Thanks for sharing!
I also just learned about parfor, if you have distributed computing toolbox you can run the for loop in parallel.
Looking at your flair, do you have a good explanation of bsxfun? Read the matlab help page and am not getting it.
Following, I'm curious as well.
Oh, sorry, I missed to say that the bounding box is around a line which is not necessarily vertical. Therefore I generate border vectors, corresponding to x(z) and y(z) with the z from X, so I can at least vectorize the logical operations.
A quick overview of Matlab's object model: http://www.mathworks.com/help/matlab/object-oriented-programming.html Mathworks also used to offer a 500 page book on their OOP extensions ("MATLAB 7: Object-Oriented Programming", 2010, 16 chapters). But it's hard to find now. But be warned, Matlab's OOP extensions are slow.
So the question is, is there another function (like fftr in numpy) that breaks this standard for the sake of computation speed? I haven't been able to find one yet. It would be nice to at least know for sure that one doesn't exist, so I could stop looking.
Like I said, fft() does this. 
I think we might be having a miscommunication. Are you saying there is a way to get fft() to output an array that's half the size of the input? If so, could you explain more explicitly? If not, it's not doing what I'm looking for. 
Why? Is it faster?
No, there is no way to get fft() to output a half size array. The point is that if you're after the performance increase of the fftw function for real valued inputs, *you don't need to output only half the values*. So which is it? You originally said you were after the performance gains. You can have that (and in fact you already do). Now you say you want to keep the same output format as the underlying fftw function. Matlabs fft function won't do that, but you could always cut its output in half on your own. As I said, Matlabs fft function inspects the input and uses the most appropriate fftw function to do the computation. Afterwards it formats the results in a standard way, because to not do so would be a very bad thing. 
Well it certainly does something. It should give you the interpolated value at x0, y0. Whether that's what you want, I can't tell you. 
Your question is quite generic, it would be easier to help if you were to be a bit more specific. 1.) How to define a symbolic equation: http://www.mathworks.com/help/symbolic/eq.html 2.) Google something along the lines of math you're doing. There is a ton of code to pick &amp; pry at online as long as you take a little time trying to find it. (ex. search: 'matlab symbolic function solve') 3.) General advice: It's odd for you to state your gender when looking for help on a coding/math question. If you want beginner advice, ask for it. If you want intermediate level advice, ask for it. 
There's no "true" continuous sampling for a box, as computers do everything in discrete parameters. You can use [unifrnd](http://www.mathworks.com/help/stats/unifrnd.html?refresh=true) for sampling from a uniform distribution.
Read the documentation. Switch the help popup to the real help browser, it's dramatically easier to use and search. Then read the documentation. 
Ok, so it's not really clear what you're asking, so forgive me if this is too basic/I missed your question. But it sounds like you're trying to draw uniformly distributed random numbers on a range, yes? Everything in matlab is discrete (it's in quanta of eps)... so I'm assuming you're looking to draw either floats ("continuous") or integers ("discrete"). Like /u/fesxvx said, `unifrnd` will give you uniformly distributed random numbers. But it might be helpful to understand what `unifrnd` is doing, as it's simple and a useful thing to know (see the floats example below). If you want to draw `n` numbers from the range [0,100]: integers: randi(100+1, n, 1) - 1 `randi(imax, ...)` generates random integers from 1 to `imax`. So generate them up on [1,101], then subtract 1. floats: rand(n, 1) * 100 `rand(...)` will generate random floats (well, doubles) on the interval (0,1). Take whatever it gives you and multiply by your maximum value. Documentation for the two functions here: http://www.mathworks.com/help/matlab/ref/rand.html http://www.mathworks.com/help/matlab/ref/randi.html
No. For small data sets it is the same as repmat. For larger data it is slower. It is just faster to rewrite a(:,1) to a(:,[1 1]) instead of repmat(a(:,1),2,1). 
Ok, I'll be converting my code to column major. And I'll look if it's feasible to separate the coordinates. Would there be an advantage of using the structure instead of simply separate vectors of x, y, z from the beginning, apart from cleaner code? Edit: I'm using R2016a.
Thanks for making it clear. How can I sample log-uniform values?
So, you know how to sample uniform values on (0,1). There's a space where log-uniform values are just uniform, right? What's the transform to get to that space? 
I wouldn't expect any difference. The structure just makes it easier to pass around the multiple vectors.
Ok thanks, x0 and y0 are the column vectors containing the data for two dimensions of the 3d point cloud.
Hmmm, you mean 2^x? Let's say I want to sample log-uniform values in [1,100], it is still unclear.
Yep, you're on the right track (assuming you want base2). You want something where log(X) ~ Uniform, right? So X ~ n^Y where n is your base and Y ~ Uniform. We can generate uniform numbers on (0,1) using `rand` and we know the transfer function, the rest is just algebra in getting your start and end points lining up. You'll want to find a function f(Y) that will make n^f(min(Y)) equal to your minimum value, and do something similar for max(Y). If you're looking for a hint, `edit unifrnd` will show you how MATLAB does it for uniformly distributed variables on an arbitrary range. btw... this problem is easily google-able. I figure it's a teaching moment, but if you're just looking for an answer, it's there. When you have programming questions, usually someone has already asked it. I know that's the case for me.
Try replacing pause with drawnow. 
Okay. That's uncommon notation, but that's fine. I'm not sure what you're asking. The interpolation functions just take your data and let you interpolate it to a new set of coordinate values. If that's what you mean by "normalize", then it's doing what you want. 
Fair enough, ignore what I said then. You sound like you have an idea what you're doing. &gt; And Matlab does not give me an error for putting them on top of each other, it just incorrectly places them NOT on top of each other (like puts the new axis in the wrong location, slightly offset from each other). This could be a outer position problem, or a size (not position) problem. Its tougher since you're working in pixels, not normalized units. Sometimes they don't line up exactly and you have to manually define the outer position in addition to the pixel size and location to have it match up perfectly. In other words I see you set the position, but not the size of the axes. It may be worth it to manually define the size of each axes in pixels, and then the outer position, to make sure they're 100% identical in size in position before you move it to overlay the first axes. I have no idea why pausing causes it to work though. Drawnow I don't think would make a difference in this case, but you can try it. BTW: you can set callbacks to resize text on figure resize. It is a bitch though. EDIT1: I just want to make sure: I'm not talking about plotyy either though, you can make two plot objects in the same plot using hold on. So something like a1 = plot(metric); hold on; a2 = plot(english); It would probably have the same effect as having two axes overlayed.
Alright, I'll try implementing it. Worked smoothly with opencv in linux, I'll try this with MATLAB in linux. 
Okay, so for a certain question i need to answer using this code requires 500 intervals. So i would need to calculate the distance between each interval with h=(b-a)/n. Then with that I need to add h to the original and the sequential numbers after that. And with those numbers i need to find the area of each section *I typed this out to see if i had the right thinking process.
I agree /u/Steve132 here. Here is the some additional insight for each step. But this is pure speculation as I have no idea what type of analysis you want to accomplish nor the manner of data. AU1 normalizes the fft results so that what you are now viewing is the peak value of the cosines/sines that comprise your signal. AU2 just takes the first half of the FFT. Recall if your data is real (not complex) then this is all the information you need to understand real data. The second AU2 statement doubles the non-DC (or non-constant) sinusoidal terms. You can use euler's identity as the basis for the proof on why you need to do this. Euler's identity is e^iw = cos(w) + i * sin(w) 
It is safer to have both.
This is a known problem with how MATLAB handles rendering its GUI elements. The event loop that handles the rendering doesn't always fever and display the results when we need it to. Undocumented MATLAB recommends using `pause(0)` and `drawnow()` together to force MATLAB to render immediately whenever you are doing something that isn't extremely basic (and I have even had problems with really basic plotting operations).
 Warning: Cannot solve symbolically. Returning a numeric approximation instead. The solve() function can't find irrational values. Try fzero() instead.
In my experience, you never really need to extract parts of matrices as referencing is so much faster to execute. Lots of for loops can be reduced to matrix expressions as well, orders of magnitudes faster. Glad you figured it out!
Thanks for response. I just tried that but I got a message say ing "If FUN is a MATLAB object, it must have a fevel method"
Have you tried it yet? What was the result? Did you compare it with for example, the area under f(x) = x^2 for a particular interval? One tip: the smaller the interval you use, the more accurate your solution will be. 
You're indexing past the end of Imported_Data, since you're not checking whether Smoothing_End is still in range. You'll need to deal with endpoints more explicitly.
Since the equations are nonlinear, it's quite possible that Matlab cannot find exact symbolic solution. I wouldn't worry about it. For the last part, I'm also not sure what's expected. If you want, you can get coefficients of linear fit programmatically e.g. using polyfit() function.
can you run the 2 versions side by side? I would start with that. I would assume that there's only a very small number of changes to make. Usually the mathworks is pretty good about avoiding large backwards incompatible changes.
unfortunately I have to run a remote desktop to use matlab and that only has 2014. I can try another day to get access to a computer with both though.
The error message means exactly what it says: your index is larger than the size of the matrix you are indexing. Other answers have explained what went wrong, but since this is homework, the import thing for you to learn here is how you could have figured this out yourself. You know what went wrong because the error message told you, and you even know on which line it occurred. So look at the code and think about how that might have happened. You could place a debugger breakpoint on that line or, even better, set the "break on error" option. Once you're in the debugger, look at the value of your index variable. How did it get that value? Why is it wrong? How should this actually be working? Does the solution you come up with just hide the problem, or actually produce the correct behavior? 
Looks like each entry is max(row_number, column_number), so you could do this with meshgrid (or ndgrid) and max(). 
Interesting problem. Good luck!
 N = 3 A = zeros(N) for k = N:-1:1 A(1:k,1:k) = k*ones(k) end
Sidebar: &gt; We are here to help, but won't do your homework
Check this out. http://www.mathworks.com/help/matlab/release-notes.html#bufau0w Look under GUI building. This should give you a good idea of what changed and how you could fix it.
It always says what the error is. In fact that's all the error message says. It's just a statement of what went wrong. 
really? I'll double check then. I could have sworn some of the errors just gave the line that had the error but not exactly what it is
methods? You're not exactly being clear with your question. Here's a simple way to import an image file: http://www.mathworks.com/help/matlab/import_export/importing-images.html
Thanks for the response quikclot, however unless I'm still misunderstanding something, the above approach isn't working either. Creating the handles structure with handles=guihandles(f) yields the following structure http://i.imgur.com/0agw2Mu.png this appears to contain a lot of objects from within the figure f, but does not include the buttons and axes created in the code above. Even after using the guidata command in the ways you specified the structure isn't updated to include them. I guess then, my question isn't with regard to guidata, but in creating a handles structure that includes these objects? I used [g/s]etappdata a lot in a previous gui. But ended up with horrible portions of code, including line after line of getappdata for different variables/objects. I was hoping to achieve the same result (getting and setting numerous variables at once), through a simpler method, which I had thought to be guidata and guihandles. I'm sure that I'm just misunderstanding these functions, so apologies for my ignorance, but thank you again in advance for any further help. Edit: Sorry, quick additional question. Rather than include handles=guidata(gcf) at the start of your local function, could you not just pass handles in as an additional input? Thanks!
The trickiest part of what you want to do is the edge detection task. A good place to start is here: http://www.mathworks.com/discovery/edge-detection.html What tends to be the ``tricky" part is that a lot of these algorithms tend to give different results with different types of images... so if your input images are not well constrained, then you may run into some issues. give it a shot and see how it goes. Converting an image to a matrix is trivial since matlab natively loads images as matrices. Converting to binary and picking out the coordinates are also easy tasks in matlab once you've poked around the documentation a bit. Good luck!
Are looking to convert a raster (jpg) graphic or a vector (illustrator) graphic? If it's raster you'll just import the image like I showed you, but you'll then have to threshold it, somehow. There are literally as many ways to do this as there are grains on sand in space. Your techniques will vary heavily depending on the image. 
Oh that makes sense actually. I think that is what's happening. Thanks so much! This program has a lot of subfunctions. Much more than I am used to dealing with. In the course I took and just general usage for modelling and root finding that I have used matlab for. The code has usually been less than 100. 2 of the functions are in the 1000s which was quite daunting haha.
Thank you so much! Off now to check if the tag property solves all my problems but it appears that it will. It seems like a very important feature of guihandles that didn't fetch a mention at all in the many guides I read, so thanks for putting me onto it!
Mapminmax function. I just did this for a project involving neural networks. 
Have you tried using a gradient based method like fmincon? Presumably you have and it fails or performs poorly because your cost function is nonlinear and nonsmooth. Assuming you must resort to a non-gradient method, fminsearch is a good choice. What is your cost function? There is no way to explicitly enforce an equality constraint on fminsearch (or nelder mead in general). What I would do is use a penalty or barrier function technique, meaning you formulate your cost function such that, if the sum total of your constants deviates from 1, a term in your cost function dominates. Say, new_cf = cf + (|1-sum(const)|)pwr(large number) + 1/(|(1-sum(const))pwr(large number)). The idea is to heavily penalize any deviation from sum=1 such that it becomes the 'first priority' of the optimizer. This method will likely require rounding the result to exactly equal 1. Also, it will require a lot of tweaking to find a balanced cost function. Good luck! Edit: fixed equation
Sorry and thanks for taking the time to help. I'm not exactly using a CNC machine, but what I'm doing works in the same way (I am fairly confident I know how to achieve this part). I'll look into how to 'vectorize' an image and see if this will help.
I believe I need to convert a raster, but I'll look into converting to a vector. Thanks!
Thanks, this looks like a good idea!
One thing you can try is running it through the built in code optimizer to find the longest time delays in your code. Should be under the home tab, look for Analyze Code. I suspect the plot function is not what is holding you up, but the nested for loops you have setup. The only way I know to work around them is to use parfor instead, however that won't work in your case. You need each loop to finish before you can start the next so you can't break them up given the Newton-Raphson. Perhaps you get segment your original data and let the function crawl through different slices? Then you could get parfor to run each slice on a different core. I want to strongly caution you against calling **fft(x,n,dim)** without any parameters. The clarity of your result is dependent on how that function operates. Not specifying the *n-points* means the size of the result is out of your control.
A raster graphic is a photo-like image. A vector graphic is something that was drawn *on* the computer (again, like an adobe illustrator file, or a a plot (like an eps file), etc...) If you're using a photograph, you need to import the raster graphic to a Matlab array. That web page I linked shows you how to do that. 
MEX functions are precompiled subroutines from another language, correct? That's a good idea, I wasn't aware that Matlab could do that. I may end up rebuilding this in Python once I have it cleaned up (and figure out GUI's in Python) and that would probably be useful in both cases.
Use bisection instead of increasing from 1. That is, if you knew it was between 0 and 1000, check 500 first, see if it is larger or smaller. If larger, check 750, repeat til you find it. 
That's right. There's two ways to make a mex function. One is to code in C/C++ or Fortran and then compile the code into a mex. An easier way is to use the Coder toolbox and it will compile your Matlab code automatically into a mex function.
Thank you very much for your answer, I highly appreciate it. I did not try fmincon. I have to clarify a bit. I'm using a SVM classifier and the weights are used in a weighted RBF kernel (one weight for each feature). The parameters to estimate are thus C, gamma and the weights. The cost function is the (cross-validated) accuracy. I think that my cost function (accuracy) is not linear, so as you said, fmincon perhaps is not working. Why do you include the term 1/(...)? What do you mean with rounding the result to exactly equal 1 and why should this be necessary? You mean that when 1-sum(const) = 0.96 I should round to 1? What do you mean with tweaking to get a balanced cost function? You mean tweaking the "large number" in your equation? Last but not least, I have another idea. I could let impose the constraint on the weights w(i) &gt;= 0 but allow the weights to go above 1. Then I could just drop the constraint sum(w(i)) = 1 and just scale the weights inside my cost function to sum to 1. Will this work with Nelder-Mead or will this break my weighting? 
if I understand your question correctly... it sounds like you have N vector pairs of x and y, and you would would like to to gather the N vector outputs a, and n from your magic black box PowerFit function. I suggest you use a cell-array. It is designed to hold disparate size vectors which may very well be the case here. Once you store everthing in a cell array you can use a cell array to gather up the outputs as well. Here would be an example.... % start off with an empty cell arrays in_cell = cell(N,2); % each row is an input, first column is x, second column is y out_cell = cell(N,2); % each row is an output, first column is a, second column is n. % now loop through N inputs and store away results for k=1:N, load somefile; % load x and y into workspace in_cell{k,1} = x; in_cell{k,2} = y; [a,N] = PowerFit(x,y); out_cell{k,1} = a; out_cell{k,2} = n; end Good Luck. 
Does the function test only one element at a time? If it tests all of them you should increment all elements that are not correct at each iteration. In Matlab, vectorization instead of for loops is a big key to speed 
Thank you so much for your answer. I have all toolboxes available. How can I solve the integer-optimization separately, that means which algorithm is best for it? Perhaps I would have to implement it myself instead of using a Matlab built-in function because in the inner part I have the other optimization. By the way, I think fmincon is only for linear cost functions (I assume the accuracy cost function is not linear). Thanks for the link to the overview about MINLP. Which solver would you recommend? Regarding the metrics: Yes, the distance metric is part of the optimization problem. Let's say the distance metric can be Euclidean, Mahalanobis and Chebichev. I want also to optimize over this in addition to the other parameters for picking the best distance metric. Should I just encode these metrics as integers? 
[fmincon](http://de.mathworks.com/help/optim/ug/fmincon.html) can handle linear and nonlinear constraints. If there aren't too many possible integer values you can do a brute-force search. In general, there is not a best solver for every problem and you have to try several ones to get the best results. I have no idea how to attack the problem with the metric.
I'd probably start with a moving average and possibly exclude some of the outliers, that should smoothen the curve enough to allow you to fit it properly
Ok, the elegant but highly complicated route would be to do [nonparametric quantile regression](http://www.jmlr.org/papers/volume7/takeuchi06a/takeuchi06a.pdf). The easier way is to bin your data into time bins, then compute a low (1ish %) quantile for each time bin of data. This should more or less give you the bottom of the curve.
Thank you very much for your answer. Why did you take (X-Y) instead of only X for the weighted RBF? I mean you wrote K_rbf = exp(-gamma * (X-Y)*diag(W)*(X-Y)' ) instead of K_rbf = exp(-gamma * (X)*diag(W)*(Y)' ) I don't think that in a kernel X and Y must be of the same size and if they are not then X-Y will throw an error (matrix dimensions must agree). Or are X and Y in kernels always of the same dimensions? Regarding the K_sigmoid, I think I have to skip the outer diag because this would give me a vector but the kernel should result in a matrix like the unweighted kernel K_sigmoid = tanh(gamma*X*Y' + b); does. Second, would it be possible to apply the weighting before calculating the kernel? That means applying the weights columnwise to X and then calculating K_sigmoid and applying the sqrt(w) columnwise to X and Y and then applying K_rbf. 
The way I like to do it is as follows: st = 0.001; en = 1; ticks = 10.0.^(linspace(log10(st),log10(en),100)); (I didn't test that but you get the picture). As for the random, I imagine you can generate a random number by mapping the `log10` of the bounds and doing the `10.0.^` 
I do not have Matlab running at the moment (not at work), but I am not sure you can easily save multiple variables as a text file. However, you may be able to do it pretty easily (including variable names if you wish) with structures. See [my post on how and why to use structures](https://www.reddit.com/r/matlab/comments/4dm07c/tip_structures_make_your_data_much_easier_to/) for more. Anyway, once you do that, you can use [JSONlab](http://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) to save it. The advantage of this is that you now have saved you data in a self-commented ASCII format that can also be widely ready by many other platforms and is essentially future-proof. However, it is more steps so pick your poision
I'm sure matlab has a package/gui that'll allow you to try all their fits. They have one for cubic splines but am sure that they have one for signal processing!
To get logarithmic values you can use logspace. To get logarithmic random values you can generate normal random values and use those values as exponents.
You have to give us a little more than that! What is your system call like? What happens if you break the execution, switch to a terminal, and run the *exact* call? It could have something to do with search paths that are not in the shell that Matlab spawns. Maybe try writing the call to a script and running the script? 
I edited in the code in question. 
lInear algebra. 
This is what i have for my code thus far. if it helps shed light on what im trying to achieve. for x = zeros(6,11); for m = 0:50:500 A = [-1 -sqrt(2)/2 0 0 0 0;0 -sqrt(2)/2 0 0 0 -1;0 0 -1 -sqrt(2)/2 0 0;1 0 0 -sqrt(2)/2 0 0;0 sqrt(2)/2 0 0 -sqrt(2)/2 0; 0 0 0 0 0 1]; b = [0;0;0;0;0;m]; x=A\b end plot(m,x) end
Also maybe look up the 'eqn2matrix' function in order to get your equations into a solvable form. This should be a pretty trivial problem once you have your equations in matrix form.
Usually when data fitting you don't use a random polynomial. There needs to be a scientific reasoning for the equation, do you have an equation that can model this data? From there, you would use a least squares method to fit this equation to the data. If no equation exists, I guess it's your job to develop the model that can scientifically define what's going on. 
I guess i don't totally understand what is happening with the code. The reason that 2 of the plots wont appear is because they have the same x value. So no matter how i break up the value of my i value, i will still have the same problem of them overlapping. 
Never mind, just plugged it in, and now it makes total sense. thanks so much. 
Do you know how to find x without using the "\" operator? I've been putting that off.
That's correct, but what I meant is that you should be able to show that there are overlapping solutions. Something like this http://i.imgur.com/b4XDHev.png
Yeah, sometimes matlab will update the LD_LIBRARY_PATH variable to point to the one installed with matlab, as indicated in the error you shared. Chances are that the binary executable does not link to the same libstdc++. [Here](http://www.mathworks.com/matlabcentral/newsreader/view_thread/255846) is an article that talks about that. I hope it helps.
Yes. Though if you are using MATLAB, there is no need to ask anyone this. You should get in the habit of exploring answers like this on your own... e.g., by drawing lots of random samples and plotting histograms and/or kernel densities.
On mobile but something along the lines of: for t= 1:(length(sig)-59) bin = sig(t:t+59); newsig(t) = prctile(bin,1); end
I am not asking for a solution, just help getting started.
Where are you getting lost at? It seems like a straightforward problem, so it'd be helpful to know what your actual problems are in order to help you...
First, I can state with confidence that MATLAB code will execute identically every time it is run if given the same inputs. It looks like you're going to have to run in debug mode. My guess is you are handing data that either a.) is outside of the valid domain for your function or b.) enters into a logic branch that is not working properly. The best way to find out is to find two sets of inputs: one that works and one that doesn't. Then, enter into debug mode and see when your code goes off the rails. To enter debug mode, open your script in the editor, and click on the dash next to the line of code you want it to break at. And then, it will run to there and stop. You can then step through your code one line at a time, and see when your calculations don't go as expected. 
Code doesn't just change like that. Did whoever write the program include custom error messages, or do you have the MATLAB error prompt? It doesn't make sense, you can use the debug mode via /u/Weed_O_Whirler 's response.
I am not going to directly address your issue since I really do not know. But I will tell you about tools that can help. Do yourself and your group a favor and get everyone using a versioning system. Git is probably the most popular, flexible and "best" option but SVN is also a good choice (less flexible but easier to understand at first). Commit early and commit often. This way, ever single change is documented. You can diff the changes from a working version to a non-working version. You can roll back if you need to. There is an upfront investment both in time and mental bandwidth but I can all but assure you it will pay off in the end. Especially if you're having issues like this.
Something else to check: If you're importing data from a file, make sure that you don't have multiple files of the same name in multiple locations in MATLAB's search path. Use the command &gt;&gt; which -all mydatafile.txt to find out of there are multiple files with the same name on your path. If so, make sure that the TOP one is the one you want. Safer yet, put the data file in the local folder (the folder from which you're running your code).
you need to hunt down the specifics, right now you know there is a problem but you need to figure out what specifically is causing the misbehaving program. Somethings you can do is start printing out trace statements. Perhaps your program already has this embedded within the code, I'd be surprise if it didn't have them. If they already have them learn how to turn on these trace statements in your code, and set the verbosity of these trace statements to the max. You then need to baseline a few good runs and store these off into a file, and then when your program starts to misbehave you can start comparing the trace statements to the good runs. This usually will identify the areas where your program goes off into the weeds. If your program doesn't have trace statements you should put these into the program. Print out variable values, how long things took, what step you are in the code. Values of any interactions that your program has, decisions your program makes and the inputs into those decision, etc, etc. I don't believe matlab has any support for tracing ( please someone chime if matlab does), but I usually just use fprintf and some if statements. An example of that would be.. if debugLevel &gt;= info, fprintf('We made it to step. 6 in %5.2f seconds\n', step6Time); end I hope this helps. 
Have you considered a PEBCAK error?
Any chance you're using psychtoolbox?
looks like your problem are linear in the unknowns. Use symbolic toolbox in matlab to introduce the known constants, rewrite equations as a system of 4 linear equations A*X = Y, where X is the vector of unknowns, A coefficient matrix and Y constant terms. Then find X by X=A\Y in matlab
Thanks for your comment. I mean literally the branch of a tree. Yes exactly, what I mean to do is get the coordinates of increment portions to the end of the branch. Sorry, I have 12 total, with 11 at 1m, and last one at 0.5m = total length of 11.5m Right, so I did exactly that what you showed, except that I thought that that conversion from polar to Cartesian converts each set of 1m increment individually. In other words, I have exactly what you pointed out, with the branch being measured at 1m increments 11 times (12 to be exact), and what is measured is the azimuth, elevation angle, and x (=1m). The problem lies with that since its measured at increments, the measurements of the azimuth and elevation angle are taken from the end point of the previous increment's end "node". So, to my understanding matlab is taking each point as though they are individual points in space with length of 1, 2, 3m separately.. Where I'm trying to essentially "connect the dots".. Maybe my understanding of the matlab function is incorrect but would love to know more Also - I just got into a project of modeling this tree branch and I'm trying to obtain coordinate points so I can then use it to do a finite element model using ADINA and look at loading, stresses etc.. Do you have any experience in this? Thank you!!
Well I'm assuming you must have the geometry stored in some kind of format. From what I'm reading, you have curvature in your tree branch, but for every 1m portion its straight, so its discretized into straight portions that curve over time, because of this comment: &gt; The problem lies with that since its measured at increments, the measurements of the azimuth and elevation angle are taken from the end point of the previous increment's end "node". So you need to find the azimuth and elevation at each 1m portion as it snakes its way through. What do you have your geometry stored as? If its at an arbitrary location facing an arbitrary dimension, you can use singular value decomposition (svd command in MATLAB) to do a series of rotations and translations to bring it to the origin. 1D finite element, right? Or are you attributing radius to make it 3D? I can't help much today unf, but if you post your geometry I can have a better idea how to help you. How I typically store branch information is through a 3D point matrix for xyz coordinates, and a face matrix with 2 point indexes, like [1 2; 2 3] for point 1 connected to 2, 2 connected to 3. Since you're working in spherical coordinates your point matrix may change, but you have to have connectivity based somewhere.
To me this doesn't really sound like a question that is specific to Matlab. When you ask a question on how to do anything in a specific programming language, you should be asking implementation questions, i.e. how do I solve this linear equation system in Matlab? Rather, it sounds as if you should sit down and think through how you would logically attack this problem structurally, not from a specific language point of view. When you know that, then you implement it and ask specific Matlab questions.
Here's how I would throw together a quick solution: 1. Web server receives image and writes it into a special folder. 2. MATLAB script monitors this folder and runs the analysis on any new images that appear. It then writes the output to another folder. 3. Web server monitors this folder and pushes results to client when they are ready. The choke point here is MATLAB. If your receive too many images at once it will take a while for them to be processed. A more robust solution would be to use a task runner like celery if your server is in python to queue. 
I did it with a Lagrange Approximation and got an answer, but then just created if statements if x == 1 f = 2.4142 end etc and that worked just as well. Lagrange was accurate to 4 digits but the if statements are "more correct" according to prof. thanks for your insight!
Thanks, unfortunately I missed a chance at proper NN classes last quartile. Plus I found out I should be using this right now. Thanks for answering anyway, going to study this in my free time some more :)
You should give it a startpoint for your two free terms, as they do in their examples. This is especially important when the values of your coefficients/terms are going to be really large or really small as (I think) it starts with a random number between 0 and 1 for the free variables which can cause things to fail. From the multiple order of magnitude differences between x and y in your data, I would suspect this is why things are messing up. From a quick test, matlab will order your coefficients in alphabetical order so I think it will expect the startpoint in the order a then c (but if it were me I would remove ambiguity by just writing the fittype equation as 'a*(x/300)^c'. Anyways, lets pretend like you think -100 and 10 are good, ball park starting values for what 'a' and 'c' are as you've defined them, you're call to fit should like this: f1=fit(temp,B_t,eqn,'StartPoint',[-100,10]); The start point terms obviously don't have to be exact, just need to get the fit algorithms in the right ballpark.
For me, zeros are used mostly because of habit. As long as you plan, doesn't typically matter. I like any as a easy conditional though, which is bit easier to type than x == 1
Well shucks, thanks for your help.
What if you do myCell{500,1}? Cells work kinda like matrices/vectors when it comes to indexing, so if you just have one cell array index it like a matrix. If you have a cell array of cell arrays, like: cell = {1,2,3} cell2 = {'q','w','e'} Combocell = {cell;cell2} the indexing {x}{y} makes sense, since you take the 'y' element in the 'x' cell.
I get that, I was hoping to learn when to use which one.
Yes, multiplying by 14 will make them sum to 14. As for the second question, N is a parameter of the distribution you're sampling. It can be anything, it depends on what you're trying to do. If you divide it by 14 you will sample a different distribution compared to the case where you don't.
Epsilon is the 'accuracy' of your answer and N is a maximum number of iterations. The code will keep iterating until it either reaches the max iterations N or it is within epsilon of a root.
Well that depends on the context... If you are thinking about initializing an array, both zeros and ones can be used. 
I think that their "time" is samples. Such that they have sampled 100 times for one unit in your tspan. Edit: It is a really annoying paper since there are no units at all. EDITEDIT: they have a note 9 explaining their "unit" sizes. How ever it makes no sense to me
I know thats the thing and i cant find units anywhere...
was there a question? Try not nesting `if` statements. If you can do a, you can do b. Just combine the loops
already tried, but i don't see where i could start
i tried changing &gt; for &lt; and &lt; for &gt;
How would you do it on paper if you could only look at any two values at a time? Ignore part B all together. Just do part A. Then write the code for part B and ignore part A. Then look at what can be combined in the code together. I will give you a hint. You will likely find at the top of the code, something like: min_pos = 0; max_pos = 0; min_val = .......... Also, convince yourself about whether or not you've covered the edge case of a min/max at the end of your array Maybe a better way is instead of compare `i` to `i+1` or `i-1` just store the current min/max and compare. Then loop through *all* elements. At this point, you're on your own
i did it! clear all clc vet=randi(20,1,15); aux=vet(1); pos=1; for i=2:15 if vet(i)&lt;aux aux=vet(i); pos=i; end end fprintf('Menor nÃºmero Ã© %g\n',aux); fprintf('PosicÃ£o do vetor Ã© %g\n',pos); Thank you
Kmeans with k == 1 is just the mean. Maybe it doesn't expect you to do that. 
HAHAHA HAHAHA 
First, I'd go look at the [Wikipedia article](https://en.wikipedia.org/wiki/Stiff_equation) on stiffness. Some of the more useful tidbits: * 'Phenomenon' is probably a more appropriate word than 'property', since the latter rather implies that stiffness can be defined in precise mathematical terms; it turns out not to be possible to do this in a satisfactory manner, even for the restricted class of linear constant coefficient systems. * In mathematics, a stiff equation is a differential equation for which certain numerical methods for solving the equation are numerically unstable, unless the step size is taken to be extremely small. It has proven difficult to formulate a precise definition of stiffness, but the main idea is that the equation includes some terms that can lead to rapid variation in the solution. Okay, so you should take away from this that a stiff equation is one where a numerical method isn't doing a good job of solving the ODE. My typical intuition of this is that if your ODE is y' = f(t, y) then the function f(t, y) is probably operating on greatly different scales. This is called a slow-fast system. Second, I'd go through the example Moler works in his [textbook](http://www.mathworks.com/moler/chapters.html) (see the other reply to your post; pg 19 of the ODE chapter). Here he works an example where y' = y^2 - y^3 = y^2 * (1 - y). So the system is very slow close to y = 0 and y =1; and the system is very fast around y = 2/3. Go through and read the text and run the code he provides to get more intuition. I think Moler mentions it, but to get around stiffness you make your numerical scheme implicit.
There is nothing to it really. Declare the area you want in the form of a 2D array, calculate the distance from the point charges, and calculate electric field intensity, then of course, divide it into x and y components. In the end find the magnitude of those values and store it in another array and plot it as a contourf or surf plot.
Easiest way is fprintf: fid=fopen ('test.csv','w'); fprintf (fid,'%f\n',rt); fclose (fid); 
Json, xml, mfiles or simply printing to text/csv would probably be easiest, depending on how you're transferring data, the structure of the data and what other programs might need to use it. For json, I'd start [here](http://undocumentedmatlab.com/blog/json-matlab-integration). 
They do not. 
Any interest in doing an AMA on this sub about working for Mathworks? 
You haven't said what you want these numbers for or what you're actually trying to do. Do you just want random numbers? Then one normally samples a uniform distribution using for example the function rand(). Like I said, if you divide N by 14 you're sampling a different distribution, I can't tell you which one is better because I have no idea what you're trying to do. If N is large then you're basically sampling a normal distribution which is why the values are more "evenly" distributed. Finally, you can't sample a random distribution with a constraint that the values should sum up to anything together with a constraint on their range. Then you don't have a set of independent values. For example, let's say the first value you sample is 14, then the rest of your values are already uniquely determined (they're all zero). If you want some random set of numbers with those properties you'll have to first sample one number x1 in the range [0,14], then another number x2 in the range [0,14-x1], and so on.
Did you try this? http://www.mathworks.com/matlabcentral/fileexchange/49040-pcolor-in-polar-coordinates I just found it on MatLab file exchange... 
Great! Thank you. I will try it when I go in on Monday
The numbers should be weights, i.e. I have 14 weights which should sum uf to 14. These are weights for features. That means I have a dataset where the rows are data points and the columns are features. One weight belongs to one column. Yes, I want random weights. Each weight should be between 0 and 14 and they should sum up to 14. How would you do that?
 N(1)=14*rand; for k=1:13 N(k)=(14-sum(N))*rand; end N(14)=14-sum(N); N=N(randperm(14));
One small thing. It looks like you are using angles in degrees and not radians so you should be using sind and cosd instead of sin and cos
Also you seem to reset distance1 and distance2 to be empty [] each loop. Edit: so you should put distance1=[]; distance2=[]; before the loop.
Will the rectangle change orientation with the center of the circle? If it does, then just calculate the distance from the center to one of the outside corners.
Keep in mind, this kind of thing gives you the statistical uncertainty of your fit parameters given the noise in your data. It can't quantify the repeatability of your measurement apparatus. That would require the kind of repeated testing your colleague suggested. Both methods are good ideas, but they measure different things so you should be aware of the difference and think about what is relevant to you and your goals. 
 theta=linspace(0,2*pi,1000); r=4; object=[0.5 0.5 -0.5 -0.5 0.5;1 -1 -1 1 1]; n_points=size(object,2); im_size=r+max(sqrt(sum(object.*object,1))); R=@(x) [cos(x) sin(x);-sin(x) cos(x)]; for a1=1:numel(theta) x=r*[cos(theta(a1));sin(theta(a1))]; obj_motion=R(theta(a1))'*object+repmat(x,[1 n_points]); figure(1) plot([0 x(1)],[0 x(2)],'k') hold on; plot(obj_motion(1,:),obj_motion(2,:),'b') hold off; axis(im_size*[-1 1 -1 1]) axis square; drawnow; pause(0.01); end
Oh wow, now I feel silly. Circles, they tend to mess with my brain! I can't thank you enough riboch, you've been very helpful! Cheers mate! -Nick
Can you provide an example of your code? Kinda hard to debug otherwise..
I can't fathom a way to do what you want without some sort of loop, but Matlab does have a built in function for determinate ~ det(v), so you could sign(det(v)). That is assuming you meant to write 'v(1,1)' instead of 'vecs(1,1)' on your fourth line. 
+1 for JSON. It's what I use to get from Matlab to Python. And it works great with structures which I talk about a lot [here](https://www.reddit.com/r/matlab/comments/4dm07c/tip_structures_make_your_data_much_easier_to/) I use [JSONlab](http://www.mathworks.com/matlabcentral/fileexchange/33381-jsonlab--a-toolbox-to-encode-decode-json-files) which is also mentioned in the primer from /r/phogan1. You should play with the settings to get something that looks reasonable. I also like to add a note to the workspace so I can remind myself later of what I was doing. A for figures, there are a few options. One is simply to be methodical in your figure creation. Generate and save all needed data (with mat or json files) and then write a script/function to generate the figure. Use matlab interactively to play, but make sure if you run your script from an empty workspace, you get your figure back exactly as you want it. This means that if you save the data and the script, you've essentially saved the stuff you need to generate the figure. Alternatively, you can convert it to Tikz with [matlab2tikz](https://github.com/matlab2tikz/matlab2tikz) but it won't be the same
So, to address your last statement first, it is definitely important to enforce constants w(I) &gt;= 1. Beyond this, one route you could go is allowing the weights to be whatever they 'want' to be, if you will. I'm not familiar neigh with weighted RBF as a kernel function to know whether or not this will cause problems. The two large constant terms in my previous comment were designed to penalize a sum not equal to 1 in EITHER direction. If you left out the 1/(...) term, it would just make the weights sum to as low a value as possible. By tweaking the cost function, I meant that it is important to find a balance in terms of the values of your penalty terms. If the penalties blow up too fast, you might miss a global minimum which would require a slight deviation from sum(w) = 1 to reach. Nelder mead tends to be pretty good at avoiding this problem, but it's worth considering that this will be a factor. Basically, you don't want it to totally overshadow your other objective function terms. Alternatively, you could use a genetic algorithm to solve this. They tend to be relatively quite good at finding global minima in complex problems. If you go that route, look into an algorithm called CMA-ES. It's a cool algorithm with good open source matlab code. Edit: forgot to answer your rounding question. My guess is that if you go with the penalty function route, your final answer will sum to something very nearly one, basically close enough for it to be insignificant to the cost function (this is the trade off in terms of penalty weights, too high and your function won't work, too low and your weights won't sum to 1). In this case it's probably fine. What I would do is take the result and tweak/round slightly so that the values sum to 1 for the sake of clarity and consistency.
What does `whos` return?
 &gt;&gt; whos Name Size Bytes Class Attributes acceleration 1x2 60 sym d 1x1 60 sym displacement 1x2 60 sym i 1x1 8 double length 1x1 8 double t 1x1 8 double t_start 1x2 16 double t_stop 1x2 16 double v_final 0x0 0 double v_initial 0x0 0 double velocity 1x2 60 sym 
thanks!
good idea, thanks!
 for i=1:10 eval(['node',num2str(i),'=zeros(1,10);']) end But /u/gentleben590 method is better from a performance standpoint. You should avoid using eval if possible.
It's possible, but it's not idiomatic MATLAB programming to append numbers to variable names in the way the OP wants. The beauty of MATLAB is the numeric matrix and that this type of pattern can always be handled by adding an additional dimension to a matrix and assigning into this dimension rather than encoding this information across many similarly named variables.
Why?
Because it is slow, and it makes code hard to read/understand. It is considered "bad practice" (at least where I work).
Another alternative I just thought of is to use a structure instead. You can assign fields to a structure without using eval. For example: for n = 1:10 nodes.(sprintf('node%0.0f',n))= n.^2; %Obviously could be anything but for example end
If they vary in length you should use a cell array: node{i} = something;
FYI, your animation will look way better if you update the plot's XData and YData in the loop instead of calling plot() every time.
you are properly getting downvoted because you have tried anything yourself. http://se.mathworks.com/help/matlab/ref/bar.html or http://se.mathworks.com/help/matlab/ref/contour.html Can maybe help you with this.
Works for me, can you post your code? Could have something to do with the node, which I'm not too familiar with. 
That's not a linear system. You need to use a non-linear optimization tool, such as lsqnonlin. 
I can also confirm they don't.
Good call, thanks for the tip!
Thanks! that's really helpful! But i had an epiphany. Wouldn't applying log work? I could simplify the problem in a way that would result in Ax = b. I'm not succeeding completly tough
Wouldn't applying logs to simplify it make it linear? Edit: Sorry for the spam, internet went off and didn't seem to send
&gt; But i had an epiphany. Wouldn't applying log work? No, because then n would be easily expressed as just n while C would then be log(C). You still wouldn't be linear to use Ax=b
What do you get if you type `class(f)`? That return value makes it seem that `f` is a `struct`, but then `f(1)` should return a `1x1` `struct`, not "a value, say 10". This leads me to suspect that `f` is an instance of some class, rather than an built-in MATLAB data type. And we can't help much with that unless we know what the class is.
Good point- early am brainfart
The floor function on the second line wouldn't filter out negatives either, so it does seem pretty pointless. There wasn't an elseif case for when n&lt;0 in the code, so that seems to be a simple solution. 
If you WANT to filter out negatives, then you are correct. Dont forget about the =0 case, depending on what you are going for. 
I'm not very good with elementary operations and efficiency, would using mod(n,2)==0 over n-2*floor(n/2)==0 be more efficient? As far as I can tell, it seems like it would but I'm not sure.
I can't speak to the computational methods used, but as far as complexity vs simplicity in coding, its WAY more easy to look at and see whats going on. 
http://www.mathworks.com/products/matlab/matlab-execution-engine/
If you have fixed columns I would use `fscanf` with a format string.
Yes i think Mathematica would work too
Thanks! This solved it. I was making the mistake of using parenthesis instead of curly brackets to specify the cell's contents. 
As I mentioned to /u/flaxencobra above, my advisor and I decided to go down the subplot route for now. However, I'm definitely going to download the plotxx mfile for the future. Thanks a lot for sending that my way!
Why is the documentation so inconsistent? Some functions have absolutely amazing documentation with the syntax followed by input/output arguments at the top, e.g., quadprog, and then you get to something like fmincon, and the documentation is a mess with things like examples before usage? Take a look at javadocs and how consistent things are. Why is the documentation formatted so horribly under linux, and how do I change it? I contacted support about this, but the person was useless. Who do I contact about getting errors corrected in the documentation? It appears that support does not pass that on.
My understanding is the same as yours. 
--The inconsistency is because there are several layouts that have been used over the years, and the migrations from older layouts usually can't be automated since the newest one contains more information. So each page is manually migrated, and that sort of thing would probably be done opportunistically inbetween working on new features. Actually, with the pages you mentioned quadprog is in an *older* format, and fmincon is in the newer one. I don't know for sure, but I would speculate that they abandoned the older template because it is more difficult to capture complex information (data types, syntax dependent sizes, value examples, etc...) in such a simple format. quadprog isn't the best example of this because the arguments are relatively straight forward, so the old layout seems to keep everything tidy. I think a page like UNIQUE gives a better example of how the newer template is superior. -- The examples come before input arguments in the newer layout because most people skip straight to examples to learn how to use a new function. -- I am not sure about what formatting issue you're having on linux. This is something that Tech Support should be able to handle, but you can also try posting on MATLAB Answers as many internal folks read those questions. -- Tech support does forward these sorts of issues, but I think a much quicker way would be to use the buttons at the bottom of the doc pages: "Was this topic helpful?". 
Why doesn't using QR factorization on an under-determined system give the same solution that mldivide does?
If your QR solver gives a different answer then it is using a different algorithm than mldivide, probably without column pivoting. Check out this thread for more info: https://www.mathworks.com/matlabcentral/newsreader/view_thread/238504
Thanks for the kind words! As you mentioned, when you click f1 after starting a function call, it brings up a smaller viewing window for the doc on that function, rather than the full-fledged help browser. This is designed to be light-weight for quick reminders while you're writing code. Using R2016a (haven't checked older versions), the bottom of the viewer has a link to open the help browser if you really need it. But I think the best feature here is that you can click f1 again to toggle focus back to MATLAB. This means you can quickly bring up the doc and then continue typing the function call in the command window with the mini doc window still open. Like I said, that is probably best only for quick reminders about syntax or arguments. You can access the full-fledged doc by typing "doc" in the command window, or "doc &lt;functionName&gt;" if you know the page you need. Also, I think a feature that many people don't know about is that you can do a doc search from the command window, for example: docsearch linear equation 99% of the time you would probably do searches like this with Google (e.g. "matlab linear equation"), but if you're already in MATLAB then sometimes this is useful. As for uitable, I'm not sure what you're referring to since it seems it is documented: http://www.mathworks.com/help/matlab/ref/uitable.html 
My mistake, I meant uitree! That's for the answer, you mentioned a few features of the viewer that I didn't know about. I still change my preferences to use the browser all the time though :) Maybe the issue is that, these days, most people have two monitors, so I've got plenty of screen real estate to spare for the help browser to be open all the time. 
Ahh ok, uitree. My guess is that this will remain undocumented because in R2016a the new App Designer feature came out, which is preferred over using GUIDE to build apps: http://www.mathworks.com/products/matlab/app-designer/
Oh. That's disappointing. I was checking out the documentation for app designer today. Granted I don't have any experience with it yet, but it looks very unappealing. I don't want to be forced into OO to write a gui, and I don't want to have to code only inside the design tool. That sounds like it wild make it difficult to write small lightweight gui tools that can be used from within a script, or otherwise integrate with more complex code. Besides, I don't recall seeing a tree browser ui element in the documentation. Did I miss it? 
Hey, thanks for the great documentation! When you said math doc, did you mean the math.pdf found on mathworks.com? If so, does that mean that there are different team working on different documentations (for different toolboxes etc.)?
Thanks, I'm glad you like the doc! Documenting the changes made to functions is something we've heard about before, and displaying when the functions were introduced was in response to that. I will pass your feedback along to the people working on that. Can you explain more about when you need to do this? Is there a reason you can't just use the release notes? What granularity of information would you be looking for?
Thanks! That is a cool idea. You could do some research online about writing documentation to get an idea of how to write in that style. But by and large you mostly just need to use active voice (e.g. "MATLAB computes the solution" instead of "The solution is computed in MATLAB") combined with imperative statements (e.g. "Create an array", "Solve the equation", and so on).
 WaterInDam = zeros(1,days); EnterWater = 9000; ExitWater = 42; % Insert values :-) WaterInDam(1) = 1337 % Whatever the init value is for ii=2:days % number of days you have WaterInDam(ii) = WaterInDam(ii-1) + EnterWater - ExitWater; if WaterInDam(ii)&lt;0.25 % your limits and stuff here ExitWater = 0; elseif WaterInDam(ii)&gt;0.85 % same as above EnterWater = EnterWater*4; end end This is how I understand the question, maybe im wrong
Love the documentation, I am just sad that so few of our interns seem to know how to use it. The "see also" section has saved me countless hours. The only complain I have is with the browser. I am using matlab 2013b so it might have changed since but the fact that you can copy/past directly from the doc browser is such a pain. I would also love to be able to ctrl+click or middle click to open pages in a new tab (like a web browser). What kind of background do you have to be working at mathwork? I see a surprising amount of job offers aimed at non-CS people.
Why?
Some terrified and rich system manager knew it was a good idea.
Except 'cat', where it's the first :P Though I guess it only comes before varargin in that case. 
-- The browser has been updated since R2013b. See the release notes for R2015b under "Desktop". -- My background is in Physics. I have a BA in Physics with a minor in Mathematics, and an MS in Physics. I used MATLAB as an undergrad for my capstone project and then some more as a grad student in several classes. You're right that many jobs are for non-CS people; they are for domain experts with some coding experience. It is much easier to teach someone that is an expert in signal processing how to code better, for example, than it is to take a CS person and teach them how to be an expert in signal processing.
Thanks for your explanation - it makes it clear just how difficult the porting process can be. I know of a few pages in the doc that detail changes in functionality and how to update your code, for example: http://www.mathworks.com/help/matlab/graphics-changes-in-r2014b.html http://www.mathworks.com/help/matlab/creating_plots/replace-discouraged-instances-of-hist-and-histc.html http://www.mathworks.com/help/matlab/math/updating-your-random-number-generator-syntax.html but I think this is mainly done for big changes. You can access all of the full documentation for every release here (requires login): http://www.mathworks.com/help/doc-archives.html
So how does the writing process work? Do you get assigned a function and you just figure out what it does and write something? Any tips for concise and clear technical writing? (Its an extremely useful skill to have). I have to say: tater tots are okay I guess... (Though we don't have that particular brand where I'm from we have the same sort of thing). But french fries are of course superior. What's your opinion on mayonnaise with fries? 
Please don't simply supply code for people's homework. Please help them write the code themselves. 
&gt; and displaying when the functions were introduced was in response to that This is what I was going to ask for, but I don't see it in the documentation. Where can I find this?
Additionally, iirc, there's a slight performance difference (with `.'` performing faster). Not appreciable in any case I've used it, but maybe in some applications. 
When I was first learning MATLAB my main thought was that the documentation was absolutely amazing. Thank You! For my question, how should I best prepare if I want to apply for a job at Mathworks?
Thanks for the additional information, I will pass it along to someone that can enact this type of change.
Echoing most other comments here... great job on the docs in general. Sometimes I wish there was a little comment on why a function was depreciated, or the reason for a warning that recommends one function over the other. I know it's not a standard thing to do, but it would be a nice thing to read.
You sir, are a hero. I don't even have a question, just wanted to let you know that. :)
If we're just talking about "programming style" then personally I like my errors at the end. Since I want my function to return as fast as possible and errors are not an expected input... so I don't want to have to check them unless absolutely necessary. Thus, base case first and errors stick at the end.
That is nice, but I would recommend placing a note in the same section that explains that it is not recommended. See the top of the [cp2tform](http://www.mathworks.com/help/images/ref/cp2tform.html) page... right after it says its not reccomended, a small comment would be really nice. 
I enjoyed this series: http://www.mathworks.com/matlabcentral/fileexchange/24861-41-complete-gui-examples You can either build it from scratch like above, or use the command 'guide' to launch the gui dev environment which lets you build and autogenerate callbacks and such.
I'm not looking to build a GUI. I'm looking for a tutorial on the features of the MATLAB GUI.
Yeah, consider when population(i,gene1) is in the interval [0, 14]. abs(7-14) = abs(7-0). Wasn't sure if it would be an issue. If the bitwise operations make it confusing, don't worry about it. Ultimately, the compiler will probably catch it and optimize. I was thinking it might be less code and take advantage of the fact that you're using bits.
Ok, thank you for your help!
Will do that in the future. Sorry 
Awesome, thanks!
http://nl.mathworks.com/videos/creating-a-gui-with-guide-68979.html
 find( ismember( A, B ) )
Try: surf(X,Y,V); 
How is the pay?
I think this is cute. A couple of comments: I'm dubious about the use of input, with variables yes &amp; no defined as 1 and 0. The user might reasonably hope to use, e.g., 'Yes' or 'y', both of which fail. My preference would be to input the answer as a string, apply the upper function to it, and then see if the first character is 'Y' or 'N' (and perhaps complain and try again if it's neither). Secondly, your code for working out the intersection of the various subsets is fine, but Matlab has a function to do that already: intersect. Using it would be easier for you, and give more readable code. I love Matlab and would encourage you to continue with it. I have to confess that Python is not on the long list of languages I've had much to do with, but on the other hand, I cannot think of any language I've learned that I now wish I knew less about. So why anyone would come on to the Matlab subreddit to suggest you not bother with Matlab is a little mysterious to me...
Also, thank you for your recommendation as far as the intersect command goes. I thought the multiple "ismember" commands seemed redundant.
Are you familiar with Stack Overflow? It is almost certainly a better forum for these types of questions.
They have great benefits. They also have profit sharing, so you get a bonus each quarter. Overall the pay is quite good IMO.
oh, i didn't know that existed, i'm sorry to ask you for this, but i had to learn matlab for this class and i only had one week, could you show me how that command would change my code? thank you again 
I can't test it right now but the xlsread function looks pretty powerful. You just have to adapt it for your needs depending on your excel file. There are examples on the documentation page. Try to just extract the data first. Then try do do the graphing step by step. Use sample data with few data points so you can keep track and see what happens.
I only point this out because it is something you should get in the habit of checking: I used the number 7 and it guessed it right away. However, I lied and said "no" and then it attempted to show me the second possibility. But of course, given the three questions you asked, there wasn't a second option- so then it crashed. I'd recommend putting in a check to make sure there is a second option before trying to show. Other than that, nice little program. 
The easiest way to do this is to define an anonymous function: `f = @(x)x+2;`. Then try `f(2)` and you should get `4`.
I'm finding inconsistent results. I duplicated (more or less; I saw less of a difference, but same trend) your results using the setup you used, but I fond the opposite and inconsistent trends for other setups. For example: N = 100; iter = 1e6; funcs = {@t1, @t2, @t3, @t4}; for f = 1:numel(funcs) fh = funcs{f}; A = rand(N); for ii = 1:iter feval(fh, A); end end function t1(A) A.'; function t2(A) A'; function t3(A) transpose(A); function t4(A) ctranspose(A); On two back-to-back runs, I got: Function Name | Calls | Total Time | % Time ---|---|----|---- t3 | 1000000 | 16.459 s | 21.4% t4 | 1000000 | 15.918 s | 20.7% t1 | 1000000 | 15.844 s | 20.6% t2 | 1000000 | 15.811 s | 20.6% Followed by: Function Name | Calls | Total Time | % Time ---|---|----|---- t3 | 1000000 | 16.630 s | 20.8% t2 | 1000000 | 16.389 s | 20.5% t1 | 1000000 | 15.982 s | 20.0% t4 | 1000000 | 15.810 s | 19.8% When changing the format of the test a bit to avoid overhead with `feval` and unnecessary function calls, I had the following results on two runs: Code | Calls | Total Time | % Time ---|---|----|---- ctranspose(A); | 1000000 | 13.620 s | 24.9% A.' | 1000000 | 13.479 s | 24.7% A' | 1000000 | 13.436 s | 24.6% transpose(A); | 1000000 | 13.311 s | 24.3% Code | Calls | Total Time | % Time ---|---|----|---- A' | 1000000 | 13.732 s | 25.1% A.' | 1000000 | 13.398 s | 24.5% ctranspose(A); | 1000000 | 13.349 s | 24.4% transpose(A); | 1000000 | 13.318 s | 24.4% All of these results were for `rand(100)` matrices held constant through iterations; they seemed to hold steady when I increased the size of the matrix (I didn't bother copying those results, though). I thought the results might be different for vectors (since, in the past, `transpose` [reportedly](https://www.mathworks.com/matlabcentral/newsreader/view_thread/32417) had a vector optimization not present in `ctranspose`), but I found a similar level of inconsistency. For vectors with an extra order of magnitude of calls, I got: Code | Calls | Total Time | % Time ---|---|----|---- transpose(A); | 10000000 | 7.918 s | 21.3% A.'; | 10000000 | 7.829 s | 21.0% ctranspose(A); | 10000000 | 7.627 s | 20.5% A'; | 1000000 | 7.567 s | 20.3% Code | Calls | Total Time | % Time ---|---|----|---- ctranspose(A); | 10000000 | 7.927 s | 21.5% A'; | 10000000 | 7.633 s | 20.7% A.'; | 10000000 | 7.598 s | 20.6% transpose(A); | 10000000 | 7.421 s | 20.2% It doesn't make much sense to me that `ctranspose` would ever be much faster, since there are more required operations for `ctranspose` (at the least, it requires a check for imaginary numbers not required in `transpose`, and the memory allocation and actual shifting of elements for a real matrix should be identical). Given how close the results are, and the inconsistency of relative performance, I'm going to guess that it really doesn't matter which you use on real matrices. Regardless, even a 15% difference on something that's quick isn't worth worrying over unless you're calling it a lot--I've definitely spent more time looking at this (because it's interesting, not for performance tweaks) than the cumulative time I've ever spent waiting on transpose operations. 
`ctranspose(a)` is called for the syntax `a'` and `transpose(a)` is called for the syntax `a.'`. So some of these results are questionable. I suspect the problem was in your experiment, or maybe just a machine timing blunder? Who knows. 
Yes, that's why I included each--to see if the results differed (or, more specifically, to see what the margin of error on the results was; and to see if there's any overhead/optimization difference between function call and operator). Built-in functions sometimes show unexpected differences in certain use cases (e.g., `cellfun` with `@isempty` vs `'isempty'`, `zeros` vs `ones` for large matrices, etc.). It's entirely possible that the comp I was using had something running in the background (work computer; I don't have much control over that). But I wouldn't have expected the results to be so consistently close worth small variations are that the case, particularly since I ran cases for both sequential loops (where variations in background load would be expected to have a systematic effect) and sequential calls within the same loop. But it's really just a point of curiosity; I've not ever had a reason to perform tens of thousands of transpose operations in a single task. 
I agree with you. these results are curious, I hope someone can chime in on them but I think we are one of the few active members here. (Mr even less so).
Your question is too broad. For one, you should be clearer on what model you want to implement. Is it (35)? In that case, the equation is indeed an ODE. You can find documentation and examples of how to implement and solve an ODE in Matlab's documentation, like [here](https://nl.mathworks.com/help/matlab/math/choose-an-ode-solver.html).
If you're using MATLAB 2016 check out the new livescripts. It will give you a 2 column layout: code on the left, figures on the right.
Thanks a lot. 
So, I used your code exactly and I got -1 both times- but I'm running 2016a. Thus, if it is a problem, it is one they have fixed. Sadly can't help much past that since I don't have 2014b available to me. 
Maybe this is what you want? https://www.mathworks.com/help/symbolic/sym.html#zmw57dd0e130437
No I was not! Thank you!! 
Certainly, x = xStart:xStep:xEnd, where xEnd has to be computed from xStep and the number of elements in y, then plot(x,y). 
Or, if you want to avoid computing the end point: x = start + cumsum(ones(size(y)).*increment) - increment;
I could fix it with: x=x(:,:,1); x=double(x); at the beginning of the function, thanks anyway =)
Have a look at the different interpolation methods that interp offers. The default mode is linear, but you can change that
I hope I'm not doing you're homework. x = round(1:0.5:8.5) Edit: I misread that. Perhaps you want x = 10*v(1:8)+u;
can confirm, ran code with R2016a on OS X, got the same result as you
I'm not exactly sure what your end product needs to be. It sounds like you have already figured out how to sort the files and find their attributes, but now you need to generate a list of all that information? If this is the case you could just use the fprintf function. It is pretty versatile and you can use it to write to a .txt file. For example: FID = 'AllImages.txt'; filename = 'Image1.jpg'; date = '24May2016'; shutterspeed = 100; % In Hz fopen(FID,'w+') fprintf(FID,'%s, %s, %d Hz\n',filename,date,shutterspeed) Use the help or doc commands to get more info on fopen and fprintf. Basically fopen will open a specific file that you can read and write and the fprintf function will write to the file specified by FID (File Identifier). The one thing I don't know how to help you with is getting some handy thumbnails of the images... Sorry :/
Yeah, MATLAB is really, really good for certain tasks. This isn't one of them, though.
X = [12, 23, 34, 45, 56, 67, 78, 89]
Thanks so much! I'm going to give this a shot tomorrow when I'm back in. This sounds super useful. In the meantime I'll pick up more MATLAB general knowledge and probably work on a Python solution. After all, my VPN is working right now for some reason. Thanks again!
What you will find in this subreddit is a bunch of people who dislike actually helping people. Better not to ask questions.
Cool. I tried learning python during a summer course and I just couldn't do it. Indexing if different, simple commands present in matlab didn't exist in python. It was just too shallow of a learning curve for me. So I gave up trying to learn a new language when i already was decent enough in another. If I could do that course over again, I would choose to stick with matlab and not waste any time trying to learn a second language. Moral of the story, work with what you've got and if you are learning both (or don't really know either) go with the open source one. My two cents. Happy coding. Impress your PI :)
Once you figure it out, I think it'd be awesome if you could share your code with this thread. Even though I code in Matlab I think I'd be able to understand your python logic/strategy. I also work with a lot of images in my line of work and I like the idea of making a list of image data while also having thumbnails. Sounds cool to me. Best of luck!
the example i gave wasn't the function i was having issues with, sorry for the confusion. i've added the actual functions. at the moment i've got 2 scripts function F = system(x) F(1) = 6*cos(x(1)) - cos(x(2)); F(2) = sin(x(1) + x(2)); and fun = @system; x0 = [0,0]; x = fsolve(fun,x0) and the program produces the response: &gt;&gt; find_roots No solution found. fsolve stopped because the problem appears regular as measured by the gradient, but the vector of function values is not near zero as measured by the default value of the function tolerance. &lt;stopping criteria details&gt; x = 0 0 surely solutions do exist, but i'm not using fsolve correctly or maybe the wrong function entirely
That seems to have worked! Thanks /u/Halsey117!
Why are you using symbolic math in the first place? 
I've been noticing this more and more. People are doing purely numeric calculations, but insist on calling everything a symbol. MATLAB's not even that good at symbolic manipulation
Have you considered using the report generator Dom API for word?
Do you need to write to Word specifically? Seems to me it'd be much easier to write to a CSV file, and import this manually.
It's too bad nobody has written detailed explanations of all the functions in Matlab. It could be great. There could even be a tool that would let you search all this text -- call it "documentation", if you will -- for key words like "decimal", "binary" or "change of base". Imagine how helpful such a thing would be! 
Is there really a need for comments like this? He clearly said he was new.
Rather than be a snarky ass, perhaps kindly pointing me in the right direction would help? Ever think about that?
I haven't yet, thanks for the link!
BTW its not for homework. Its just something I am curious about!
Agree. Google. Documentation. Then threads. 
Cute is good! When you stop playing, you stop learning.
Wow, thank you. I hadn't even thought about the possibility that I was a name people would recognize, much less like. 
matlab is not going to help you with this at all. With ALOT more work you could numerically solve things given initial conditions etc... Maple or mathematica are better suited. Try wolframalpha. Or just take a picture of the problem and post it somewhere, claim you got the right answer, provide some BS answer, and wait to be corrected.
 this is the easiest way. Really, OP just needs v=1:8, but if he must have all elements, then this. 
No fucking semicolons to suppress a line printing. Make it like python 
That would break backwards-compatibility.
MATLAB [already has them](http://www.mathworks.com/help/matlab/map-containers.html).
You aren't allowed to break backwards-compatibility, but I don't see how default arguments would do that because it currently is not valid syntax.
Ah I meant square brackets to index arrays would break compatibility, whereas default arguments wouldn't 
I really like all of that first set of ideas. Not sure what you mean by a dynamic cell though, you can already dynamically increase the size of a cell in the same way as arrays. For the second set though, I kind of like that Matlab *doesn't* allow pass-by-reference, because it means that functions are guaranteed not to have side effects (unless they use globals...). You only get a performance hit if you write to the matrix though, because Matlab does copy-on-write. If it didn't do that, then not having pass-by-reference would be a real pain. Also, what advantage do you envisage from having scalar and vector types? I haven't really found myself missing them
The prevailing Matlab wisdom is to avoid `for` loops. But, there are other times when they cost you so little and you only ever run them once or twice, that you may as well just do it. Just make an empty `0x1` array and then loop through and append everything as a vector. Tip: If you have an array that is 1D but you do not know if it is `Nx1` or `1xN` (or if you have any dimensional array and you want to make it 1D), just add `(:)`. For example: R = rand(1,100); R = R(:); Use this when appending the values. ---- If you question was more about how to generate PDFs, then things are harder. There are many ways to do it and each has their advantages and disadvantages. But, check out `hist` and `ksdensity`. If you want a CDF, you can just use [`quantile`](http://www.mathworks.com/help/stats/quantile.html) on something like `linspace(0,1,100)` or whatever
Two of those ideas can be implemented--to some extent--with custom classes: both dynamic memory allocation and pass by reference. To create a dynamic data class, simply allocate an array as class property in the constructor and track currently-used bounds in `subassign` and `subsref` (and have each reference the data property of the class rather than the class object itself). You can then have the class expand the array automatically on overrun to avoid the usual performance hit of element-by-element expansion. To pass by reference, create a class that derives from the `handle` class and store the data as a property, and overload `subassign` and `subsref` to make it transparent. For simpler cases, when your only goal is to prevent unnecessary array copying, take advantage of the fact that Matlab uses [copy on write](http://blogs.mathworks.com/loren/2006/05/10/memory-management-for-functions-and-variables/): when a variable is assigned in place (e.g., `x = x + 1`, or even `x = fcn(x)` in [at least some cases](http://blogs.mathworks.com/loren/2007/03/22/in-place-operations-on-data/)), Matlab doesn't actually create the intermediate copy. 
Two of those ideas can be implemented--to some extent--with custom classes: both dynamic memory allocation and pass by reference. To create a dynamic data class, simply allocate an array as class property in the constructor and track currently-used bounds in `subassign` and `subsref` (and have each reference the data property of the class rather than the class object itself). You can then have the class expand the array automatically on overrun to avoid the usual performance hit of element-by-element expansion. To pass by reference, create a class that derives from the `handle` class and store the data as a property, and overload `subassign` and `subsref` to make it transparent. For simpler cases, when your only goal is to prevent unnecessary array copying, take advantage of the fact that Matlab uses [copy on write](http://blogs.mathworks.com/loren/2006/05/10/memory-management-for-functions-and-variables/): when a variable is assigned in place (e.g., `x = x + 1`, or even `x = fcn(x)` in [at least some cases](http://blogs.mathworks.com/loren/2007/03/22/in-place-operations-on-data/)), Matlab doesn't actually create the intermediate copy. 
I've wanted to be able chain arbitrary indexing and function calls for so long. In addition, I'd like them to split the subsref interface (dot, paren, and bracket), and streamline subsref overriding.. Currently, overriding subsref in a class is incredibly difficult to do without breaking something. Not only do you have to handle all index types, you also have to make sure that Have you ever looked at the subsref code for table? It's a nightmare
I've wanted to be able chain arbitrary indexing and function calls for so long. In addition, I'd like them to split the subsref interface (dot, paren, and bracket), and streamline subsref overriding.. Currently, overriding subsref in a class is incredibly difficult to do without breaking something. Not only do you have to handle all index types, you also have to make sure that subsref gets called properly on the rest of the chain. Have you ever looked at the subsref code for table? It's a nightmare.
They only support strings for keys, and they sssssssuuuuccccccckkkkk...
Two of those ideas can be implemented--to some extent--with custom classes: both dynamic memory allocation and pass by reference. To create a dynamic data class, simply allocate an array as class property in the constructor and track currently-used bounds in `subassign` and `subsref` (and have each reference the data property of the class rather than the class object itself). You can then have the class expand the array automatically on overrun to avoid the usual performance hit of element-by-element expansion. To pass by reference, create a class that derives from the `handle` class and store the data as a property, and overload `subassign` and `subsref` to make it transparent. For simpler cases, when your only goal is to prevent unnecessary array copying, take advantage of the fact that Matlab uses [copy on write](http://blogs.mathworks.com/loren/2006/05/10/memory-management-for-functions-and-variables/): when a variable is assigned in place (e.g., `x = x + 1`, or even `x = fcn(x)` in [at least some cases](http://blogs.mathworks.com/loren/2007/03/22/in-place-operations-on-data/)), Matlab doesn't actually create the intermediate copy. You can also use OOP to track whether a data set is one trial or a single row of trials--create the data structure you need and add properties to track anything that isn't automatically tracked. It involves me effort to set up, but it's certainly possible. 
While I recognize when they can be a pain, I really love the namespaces of Python. It means you can easily track which module/toolbox/whatever you are calling from. I would also make it more easily object oriented. Again, like python where everything is an object. (I really love python and use that primarily so take my comments with a grain of salt. My honest answer is "make it almost exactly Python")
I've found a solution that's working for me. Since my matrices are 2x2 I can easily explicitly compute inverse and multiplication. So I've created two functions were I compute Matrix inversion and multplication, that are vectorized along the third dimension. For a third dimension of 30k, running the computation 100 times (for each of the 30k matrices) takes 0.8 s. More than acceptable for me 
There is a great submission on File Exchange designed for this: MMX (http://www.mathworks.com/matlabcentral/fileexchange/37515-mmx-multithreaded-matrix-operations-on-n-d-matrices). So you would basically do: c = MMX('backslash',a,b); diag_c = bsxfun(@times,c,eye(size(c))); outVector = MMX('mult',diag_c,ones(size(c,2),1)); This is probably not the best / fastest way to do this, but it should give you an idea of how to start.
I use this. My problem is not indentation though. What I want is a tool that will force a common code style between my scripts. Eg a=fun(x,y); b = fun(x, y); becomes a = fun(x, y); b = fun(x, y);
I do use linux so that's not a problem. Haven't used indent yet, could it be configured for matlab?
Regarding 4), MATLAB does support function calls to other languages, [including python.](http://www.mathworks.com/help/matlab/call-python-libraries.html) It is a rather advanced topic, but it is supported. 
What do you mean? In the end I decided to write explicitly the computation that goes from a and b to the trace of inv(a)*b. Which is very easy to do with 2x2. And it's very fast. Anyway, any suggestion on different ways to do this are welcome, they could come in hand in the future
&gt; In the end I decided to write explicitly the computation that goes from a and b to the trace of inv(a)*b. Which is very easy to do with 2x2. And it's very fast. Yep, more or less meant this. Finding the analytical solution is almost certainly the fastest way to do this, which you can do with a 2x2.
But it's like Fortran! (Which also makes sense since it's built on Fortran libraries) 
They have much more limited acceptable indexes (only strings) and are not really resizable. And in principle they are slower unless they use a dictionary behind-the-scenes.
Are you opening individual instances of MATLAB of using parallelization? 
Will take a look in a few days, currently away from a computer.
I do this quite frequently. look up SPMD, a easy form of parallelization. if you have functionalized the processing, and the data can be processed in chunks, then running N instances will generally speed up your processing by N (a little less due to overhead). your constraints on N are the computation al resources of your computer (cores, memory) and the license restrictions of matlab. to reduce matlabs own overhead, run it in command line mode using the nodesktop and nojvm options. also, matlab has a python module that allows you to create/control multiple matlab engines from Python. 
Are you thinking of the [DataCursor](http://www.mathworks.com/help/matlab/creating_plots/data-cursor-displaying-data-values-interactively.html)?
No problem! I appreciate it!
Maybe you could try to put shg after your plots, I'm nut sure if it helps anything but it could do the trick.
It worked! Thanks a lot. What you said did cross my mind but instead of adding a small number to the inequalities, I made them strict inequalities. But that did not work either. Haha I did not post the entire question thinking that nobody would be interested in the physics involved. The fluid is actually water itself but it is flowing through two media (sand and clay) and around an obstacle. That triangular region is the obstacle; zero velocity vectors is clay (non porous) and non zero vector region is the sand (porous).
Yea I did check for NaN values. Thanks for your suggestion anyways, the problem is solved :)
It is supposed to loop to continue to sum up the rest of the cell. That is also where my program fails. 
When using [`textscan`](http://www.mathworks.com/help/matlab/ref/textscan.html), you can pass `'CollectOutput', true` to `textscan` to combine columns of the same format into a single matrix--i.e., to return a cell array with one cell containing an Nx2 cellstr and one cell containing an Nx7 double. Alternatively, you could use `cell2mat` or simply concatenate the cells into a matrix to make it easier to operate on them (e.g., `scores = [a{3:end}];`). Additionally, `sum` (and other functions such as `mean` and `std`) supports vectorized operations: if `A` is a 24x7 double, `sum(A, 2)` is a 24x1 double containing the sum of each row in `A` (and `sum(A, 1)` or `sum(A)` would return a 1x7 double with the sum of each column; and `sum(A(:))` would return a 1x1 double that is the sum of all elements in the array. The 1 or 2 specifies which dimension to operate on, and the (:) reshapes the array to a single column). In your code, your function allows for an input `a`, but it immediately discards it (overwriting it by reading from the file) without using it; additionally, when you call `cell_sum`, you pass a function handle (`@sum`) as the first argument and the cell array of values read from the file (not the sum of those values so far); but your function only accepts one input. It looks like you might have been trying to use recursion to do the sum, but 1) recursion isn't necessary (neither is looping), 2) the function `cell_sum` ignores it's inputs and re-reads the file regardless of what was passed, so it's not set up to allow recursion, and 3) the arguments passed to the function aren't supported by the function prototype (in number or type). Additionally: if you want to sum per student, `s` should be a vector with length equal to the number of students rather than a scalar (if you choose to loop, you should preallocate with `s = zeros(num_students, 1)`, not `s = 0`). 
The globals are initialized to empty arrays and remain empty. When multiplied by a scalar, the output is another empty array. Outside this function, you need to set the globals to the correct value and also declare that they are globals inthat scope as well. 
Other notes: * Globals aren't the best tool for this problem. Either hardcode m1, m2 and m3, or parameterize the function and wrap it with an anonymous function. * Use arrays. This isn't C, so you can do arithmetic operations on entire groups of numbers. This way you can avoid repeating expressions where the only difference is subscripts. You could probably cut this whole function down to 10 lines of code. * You can calculate rG and vG outside of ode45, if you want. At the very least, vG is unnecessary.
This is some great stuff! You did this all as a undergraduate project?
Thanks a lot!! I did it spread throughout my undergrad and I've continued these sorts of projects into grad school. I recently began trying to post videos on my recent projects on that linked youtube channel. Matlab is truly a gift! lol
Do what /u/redditusername58 says. If you won't use vectors, why use Matlab? Globals are *almost* always bad. 
Try decreasing the line width
I've tried, it helps a bit but still doesn't fix it entirely. Is that the only solution?
Typically when classes get too big, it's a sign that it's doing too much and should be broken up into several smaller classes. 
It's not clear exactly what the plot you want would look like. The center on your plot is "dense" because there are a lot of lines there; the only way to reduce the density of black pixels near the center is to either make the lines thinner or reduce the number of lines.
Thanks so much! I appreciate it. I was a physics major, and now I'm a grad student in applied math.
Great stuff!
This was a pleasure to watch thanks! do you mind sharing some resources you had on simulating those time dependant spherical coordinates? i got lost in those. im learning matlab atm and would love to see ifbi can comprehend these and gove them a shot. Or did you just experiment with matlab until you started getting the hang of it? anyways thanks again for posting, im subbed!
It sounds like your function G uses interp (or something similar), which can be quite slow when you have a lot of points to interpolate. You can split up the interpolation in two parts, creating an interpolation function outside of the optimization problem with pchip, so you have something like myInterpolant=pchip(Data,Points) and in your function G, you have now something like if x in acceptable region Value=ppval(x) else Value=0 to pass myInterpolant to the function G, you can declare myInterpolant as [global](www.mathworks.com/help/matlab/ref/global.html)
Convenience. If it's a short function that only takes a single statement (typically a wrapper or equation), you can define it in this concise format.
I really appreciate it. I have a lot of new interesting videos I want to make. Just have to find time :( Here's code which will allow you to play with those kinds of plots: http://pastebin.com/sVqR3VTz I first learned matlab by studying a program that kept track of moving particles. From there I just started experimenting with ideas and never looked back haha. Matlab is an unbelievably powerful tool! It's what allows me to do my current research. 
http://www.mathworks.com/help/signal/ref/xcorr.html The mathematical definition of cross-correlation should give you the answer.