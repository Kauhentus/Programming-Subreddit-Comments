The assignment's guidelines are strict in regards to not modifying the source file.
Basically, instead of trying to format it in a way to skip or deal with the non-numeric characters, I just used fgetl() to skip over the first line that contained the headings, and then used fscanf() to get all the numeric data without having to deal with any complicated (at least complicated for me) formatting within the fscanf() function.
We recently learned the fscanf() function, so I chose to use that. After reading some of the documentation for that function, it does seem like that would have also worked.
Mathworks has a team called EDG that hires people with advanced engineering degrees. They split their time between doing software development projects and doing more advanced customer support for MATLAB and Simulink. After some time (average 18 months), you transfer to a development position of your choosing inside Mathworks. You can check out this link for more details: http://www.mathworks.com/company/jobs/opportunities/application-support-engineers-2753?keywords=applications+support+engineer&amp;country[]=US&amp;
I use fscanf when my text file is complicated, dlmread when it is simple. That said, I haven't tried dlmread with headers so don't know if it works with headers.
Another member PM'd earlier me about the EDG. This would definitely be where I fit best. Thanks!
Cool I did not know they provide informational interviews. I will look into that when I am near Boston in the future. 
Ok, yes I believe the series converges to 0, so what you're saying is that I choose a number of iterations, and set that summation equal to 0, then solve for D? That makes sense to me, I'm just not exactly sure how to write a function that truncates the series at a certian point, while still having D as a variable. 
Obviously, call up HR first and ask. Good luck!
Prediction without feedback is rather meaningless. What i mean is that in the example you said about the input/output curves if you do not give feedback as a user to say what is the error in the separation then you have no way to know if the separation was actually successful. Therefore by adjusting the input/output curve to fit the data more correct you start a process of input classification based on "reward feedback". The "reward feedback" stage is the learning stage which is the stage you train the network by adjusting the input/output curve so as to allow the network after several iterations and the input/output curve has settled to a "final" value then to predict based on previous "knowledge". What is it exactly that the neural network is trying to predict in the adsorption chiller model? A general approach would be: If you find a way to find parameters that affect the parameter you are trying to predict then you feed half of your data into the neural network and see if you can "guess" correctly the rest of it. 
I am MATLAB Doug: http://blogs.mathworks.com/videos/ I speak as myself, not as a representative of MathWorks. I was hired thirteen years ago. I have only good things to say about MathWorks. AMA. 1.) Applied on-line, had a bad flaw in resume. No action. Revised resume and talked to my contact in the MathWorks Book Program (I had written a few books about MATLAB at that point) I got a call from a VP within 24 hours, was flown out to interview next business day. Got a generous offer before I left building. At that time we were pretty lean and hiring was quick. Not sure how fast tings are now. By far, knowing someone at MathWorks to hand your resume in to HR is the best way to get in. Baring that, make a name for yourself on MATLAB Answers, MATLAB File Exchange, CSSM, a blog, YouTube... We keep a pretty good track of high profile users and often recruit them. 2.) Masters of Mechanical Engineering. For seven years I was the guy who goes out with the sales representatives to show MATLAB and answer questions. Now I am the guy that answers the hard questions that get through the first two levels of technical support. I run one of the MathWorks blogs. I work with development closely but do not sling any code that gets into the product. 3) Work culture is awesome and laid back. If you are smart and get things done, you will do well. A more extensive answer to this: http://www.glassdoor.com/Reviews/MathWorks-Reviews-E17117.htm 4) What do you want? This place is a meritocracy is a pretty big way. Does management mean "advancement" to you. Does "Advancement" mean a new title every three years? Does it mean being a respected technical guy? Does it mean the same title but healthy raises? Your background is important, but smart people that get things done are always welcome. We have a very successful Civil Engineer here because he knows MATLAB inside out. Apply, find out. We have a few physics/math PhD's running around. -Doug
The system has 3 inputs and 3 outputs that are waterstreams. The temperature of these 3 are measured at the input and output. I'm using this data to train my network. I already trained a fitting network and the MSE is pretty low (1*10‚Åª4). I propably didn't express myself properly. I wan't to know if I can use a fitting network to make predictions (f.e. one step ahead). I'm asking this because a fitting network is static, not dynamic. So I'm thinking that it cant do that, because future outputs are not influenced by past inputs. Therefore the network shouldn't be able to make predictions, because there is no information to base that prediction on. In other words: how can you predict if the behaviour is somewhat random.
Thanks for the information Doug. I have had a couple other employees P.M. me about their experience at Mathworks and everyone else also only had positive things to say. I view advancement for an engineer/software developer as either moving up into management (i.e., less technical, more political/business-oriented) or moving into a senior engineering position which would include both increases in salary and technical responsibilities. Before I went back to school for my PhD I worked at an engineering firm for several years which had very little room for advancement. Employees typically became stuck in one position and the result was a VERY high attrition rate. 
Just tried this. So far it's working! Thank you so much! I really appreciate it.
Our attrition rate is very low. Lots of very senior people up top because they do not leave. Management is not a move up here, just a different path. -Doug
I'm not sure what a matched filter is, but I think what your asking for is a way to use these [trig identities](http://en.wikipedia.org/wiki/List_of_trigonometric_identities#Product-to-sum_and_sum-to-product_identities) to filter your signal. A more detailed explanation of what you need would be useful.
I have data that is white noise with a sine superimposed on-top. I want to use the resulting data to get back to the original sine and determine its frequency and amplitude. all I know is that the spectral flux density of the white noise is constant and that the original signal before the white noise was added was a sine wave.
Do you have access to [this](http://www.mathworks.com/help/phased/ug/matched-filtering.html) toolbox? Or are supposed to implement it from scratch?
http://www.lmgtfy.com/?q=matlab+fit+exponential+decay
Yes it does look like an exponential decay. And you are correct, MATLAB tried to find the best fit possible. The caveat is it did the best with the parameters you gave it. If those are off then it will never actually fit to your data. It can be quite tricky to get right sometimes. Keep tinkering! You may have to specify your own equation. The defaults in the CFTool are not always adequate.
Your bigger issue is that fact that it bottoms out at 350 and not 0. At the very least you need to add an offset to account for that. And yes your initial guess and search range needs to be somewhat reasonable. For a simple curve like yours you will have a decent bit of 'wiggle' room.
Yeah, when I zoom out the exponential nature of the fit is more apparent: http://imgur.com/Nl8KsV1 Thanks for the tip on the custom equation usage.
Nah, it's just a really really really really bad exponential fit. 
Sometimes it can be easier to fit an equation if you linearize it. You expect the data to be exponential, so if you either apply a logarithm to your data (or ask Matlab to plot your data on a logarithmic scale), an exponential should look linear. [Example of what I mean](http://imgur.com/WmN0GPo) (In undergraduate physics labs, we teach them to take the logarithm of data because that allows them use a linear regression to fit the data, and then the expoenential coefficients are a function of the linear coefficients. In principle, this can be done for any data model that has a well-defined mapping to a linear function.)
&gt;Study has shown that previous cycles don't effect the current cycle. Neural networks aren't magic; they can't predict a relationship that isn't there. If the current cycle is not dependent on any input variable (and we're assuming this is actually correct and not subject to debate), then what function is there to approximate? &gt;But then again they can fit input/output curves on data they have never seen. Nope, they cannot. You need examples of the behavior to be learned in order to learn it. Neural networks work by figuring out the function _f_ in _f(x)=y_, given _x_ and some examples of _y_. If you _know_ that there does not exist such an _f_, then what's the point?
If you send me that data sample (.csv or text), I'll whip up a quick code that will automate fitting and retrieve tau. 
Ok, I think I've figured it out. A matched filter is implemented like this: %h is the filter response %s is the signal %y is the filtered signal y = conv(fliplr(h),s); I think to implement the cosine template you do this: %Sample rate is a parameter that controls the strength of the filtering sampleRate = 0.1; h = cos(0:sampleRate:pi); [This](http://www.csee.wvu.edu/classes/ee126s00/group1/main.html) source may help. EDIT: You can also use the filter function thusly, y = filter(h,1,s);
Bingo. This is what I would suggest as well: transform the exponential into a linear form, find linear equation, then retransform back. ...but it is a round-a-bout way
I used the file you linked me to. Fit like a white, studded glove from MJ. function [fitresult, gof] = exponFit(x, y) [xData, yData] = prepareCurveData( x, y ); % Set up fittype and options. ft = fittype( 'a*exp(-b*x)+c', 'independent', 'x', 'dependent', 'y' ); opts = fitoptions( ft ); opts.Display = 'final'; opts.Lower = [-Inf -Inf -Inf]; opts.StartPoint = [0.814723686393179 0.905791937075619 0.126986816293506]; opts.Upper = [Inf Inf Inf]; % Fit model to data. [fitresult, gof] = fit( xData, yData, ft, opts ); % Plot fit with data. figure( 'Name', 'exponential fit' ); h = plot( fitresult, xData, yData ); legend( h, 'y vs. x', 'untitled fit 1', 'Location', 'NorthEast' ); % Label axes xlabel( 'x' ); ylabel( 'y' ); grid on title(['R^2 = ',num2str(gof.rsquare)]) text(3,450,[num2str(fitresult.a),'exp(-',num2str(fitresult.b),'*x)+',num2str(fitresult.c)]) fitresult 
Alternatively, you could mean center the data if all you care about is the decay rate. 
Here's a related [article] (http://www.research.ibm.com/people/l/lloydt/color/color.HTM) about the rainbow colormap.
are these shared libraries part of your compile path? You may need to [add them to the archive](http://www.mathworks.com/help/compiler/mcc.html#br2jars-61) when compiling
There are example/template s-functions in simulink. Start simulink, go to the block library, search for s-function and double click the blue block called s-function examples. There are examples for matlab, c, c++ and fortran s-functions. Open any example and double click the link to the scripts.
Got it. I was not thinking about replacing Matlab with Python. I'm already using Python and I need now to do some algebra. I'm familiar with Maple, but Maple seems to have fallen from the past glory, so I was looking into more "modern" stuff. Gonna stick with Maple for now, as the best tool is the one you know how to use it...
My solution would admittedly be very limited but it'll get me thinking... My first idea would be to restrict the camera view to be at a certain position. If you specified this position, it would be very easy to calculate the distance between that position and any point in the 3d grid. You could then very easily specify the marker size to be a value based on this distance (a magnitude). This would only be the first step, since it doesn't include any fog or line thickness changes. Anyway, hope it's a decent start.
I know this doesn't directly answer your question, but when I need to see a crystal structure I use a program like [Vesta](http://jp-minerals.org/vesta/en/) instead of MATLAB. There are so many crystal visualization tools out there that coding a utility in MATLAB is like reinventing the wheel. Edit: Also, Vesta has projection view. Edit: You can probably use [this](http://www.codeincodeblock.com/2012/03/projecting-3d-world-co-ordinates-into.html) for inspiration in designing the necessary algorithm.
Hey thanks. I guess something like Vesta is what I should be looking for. Otherwise if it comes to implementing the equivalent of a 3D system, OpenGL would be a better starting point.
Well, it wouldn't necessarily be that difficult to do in MATLAB, but it would take time to program. That's why you shouldn't do it with MATLAB if all you need is an image of the 3d structure. If there is some specific thing you want to overlay on the 3d structure I might consider using MATLAB, but only after seeing if Vesta or something else doesn't have a utility for it. MATLAB certainly reduces a bunch of the complexity when programming data visualizations. So, it wouldn't be a bad thing to program a crystal plotting utility in, the only problem is there is stuff that already does it.
I recommend strongly against the s-function builder. The Matlab help is actually pretty good, except that it doesn't really introduce you to the topic. Check the documentation for `mdlUpdate` and `mdlOutputs`. That should give you an idea where to start.
you can make a fit for each column with the depending variable being the first column. If you know what kind of relation there is between the first column (x-data) and the column you want to fit (y-data) (linear, polynomial, exponential) etc, it would make it easier. You can use functions like polyfit for polynomial fits and cftool (curve fitting tool) for other type of fits.
Where the data ends up has absolutely nothing to do with how you organize the database. You are asking the wrong questions about the wrong portion of the problem. Database design is dictated by the data you are working with and what you are doing to it. We can't give any advice without knowing in intricate detail what your work involves, typical use cases, what type of analysis is done, what need to be done, etc etc etc. There is a reason Database Architects/Designers/whatever title you want to give them exist. There is also a reason those that are good at it make a LOT of money. It is far from a simple question and it never has the same answer.
Save the files as csv and use textscan
mysql
Or importdata.
thanks, but how do I "loop" through every cycle to find the maximum torque value?
Play with the find command, which you can use to more easily subset your data. for example: x = [1 4 0 3 6 7]; find(x &gt; 5); % returns [5 6] then you could do: x(find(x&gt;5)) to subset to just get the 5,6 do this on your cycles vector to find entries for cycle 1, then get the max torque and save it somewhere, then find cycle 2, etc. a bit more explicitly, pretend your matrix is called yourdata and the cycles column is column 6. allcycles = yourdata(:,6) % grabs just the cycles column max_per_cycle = []; for i = 1:max(allcycles) this_cycle_rows = find(allcycles == i) this_cycle = yourdata(this_cycle_rows,:) max_per_cycle(i) = max(this_cycle(:,5)) % assuming column 5 is your torque cycle end now max_per_cycle is a vector where each index is a different cycle and the value is the max torque in that cycle. Note: I'm at home w/o Matlab so sorry if anything is slightly off.
thanks!! I will follow your directions.. this is not going to be easy for me
I've imported binary data from LabView to Matlab before. Look up the command 'fread', it should do what you want providing you input the correct parameters. 
You can look into [streamslice](http://www.mathworks.com/help/matlab/ref/streamslice.html).
What I'm doing at the moment is reading 4 bytes at a time. The first 4 are 0 0 0 2 = (0 x 2^32 ) + (0 x 2^16 )+(0 x 2^8 ) + 2 = 2; this seems legit because the .bin file should have two columns of data. However the second 4 byes are 0 0 0 0, which I assume cannot be the second dimension of the .bin file. I think I am interpreting the binary header incorrectly, the two links that I found describing the binary header, have conflicting definitions: http://forums.ni.com/t5/LabVIEW/Loading-Labview-Binary-Data-into-Matlab/td-p/1107587[2] http://digital.ni.com/public.nsf/3efedde4322fef19862567740067f3cc/747b83b6c8e4a6218625669100563b61?OpenDocument[3] I will try reading singles in now like you suggested and hopefully I will find the numbers I'm looking for. If you have time tomorrow, it would be awesome to see how you Load your Labview data sets. Thanks for the help :-) 
I took a quick peek at your data, and it's definitely not just "header bytes + a bunch of doubles/singles/ints/whatever." Throughout the file there are the following strings: "NI_ChannelName", "Sensor A", "Sensor B", "NI_UnitDescription", and "Volts". The blocks are alternating between sensor A and sensor B. Better double check your file format. The first file format description you linked does clearly not match as the second i32 is 0. The second file format description you linked also does not match as it says "Note that the first 4 bytes of the log file corresponds to an I32 that specifies the length of the remainder of the header." For your data this number is 2, which is clearly not correct since there is header-like info further on.
&gt; assume The longest 4 letter word in research :p I'll poke around at it and reply again later.
I'm at quite a loss on advice to give you. Lots of odd things going on with the example datasets you've posted. As pointed out by borzakk, it does not follow the specifications you linked. Additionally there is some random shit floating in the middle of it. I managed to get it to sort of halfway almost read in your values. Below is the modifications I made to the code you posted: clear all clc fname = 'RTL5_57.bin'; fid = fopen(fname,'r','ieee-be'); d1 = fread(fid,4); trash=fread(fid,2,'double'); d2 = fread(fid,4); trash=fread(fid,1,'double'); data=fread(fid,'double'); d1 takes the value 0002 which is the 2 expected. d2 ends up being 2.706e11. No clue where that comes from, perhaps that is the total number of values in your non-truncated 60 GB data file of death (seriously, a single dataset is 60 GB WTF are you researching here!?) This has issues however. The end result is a column vector of numbers. I went through the first 20 or so and they match the numbers present in your text sample. With the caveat MATLAB only snags them with 4 decimals of precision versus the 6 in your file. Second caveat is in multiple places throughout the file the values explode to ridiculously large numbers then back to a few 'normal' numbers (based on your provided sample) then back and forth. Overall it seems like the majority of the numbers you are expecting do indeed pop up, but with little to no relation to where they should occur. I did not see any pattern to this trend (ie- no streaks of X good values, then y bad, then x good, etc... it seems to be highly sporadic). Additionally I have no clue if it includes only numbers from column 1 or if anything from column 2 is interspersed in there as well. This is either a result of a) your data format being jacked up somehow compared to the spec (as evidenced by the header not fitting to their listed specs) or b) the way it is saved by LabView is fine but the fact that you provided a truncated version is throwing a wrench in things. Not sure what to tell you from here. Hopefully this is enough of a kick in the trunks to get this solved on your end since you are a bit closer to the problem than I am. 
Quiver
Check the sidebar on the right, has links to quite a few resources. Otherwise you can try google searching, there is a lot of content out there. Also the biggest advice I would give to a beginner is to learn to use and love the matlab documentation as it is what in my opinion sets apart matlab from other similar programming languages.
Haha assumptions are the mother of all fucks ups 
Thanks for you reply, I know a lot more about my binary data structure now :-) The acquisition VI that I used was written my a colleague that has left our research group; I think he has implemented a custom data structure and has left no comments in his code. Not very helpful lol. I will try and reverse engineer his acquisition VI to find a way to remove the seaming random shit between the data points. 
Thanks for the help :-) using your code and borzakk's advice I realise that my binary files do not follow the standard Labview .bin formats. I think my colleague has created a custom binary data structure, I used his VI to collect my data, unfortunately he has now left are research group now. Even using the non truncated file there is still random shit between the data points :-/ d1 = 2 and d2 = 2.706e11 seems legit, because during acquisition I sample at 1.5 mega samples per second, so it looks like d2 represents the number of data points. The reason my data files are so massive is because I sample at such a high data rate and over a 1MHz bandwidth, these data files of death may seem scary but I used a cluster with 168 cores and 48GB of ram to process data, so it's no so bad lol. I am researching the electric field associated stressed with rocks, to hopefully create an earthquake precursor :-) I have an idea, I notice that using your code the actual data values have a precision of 4 decimal places(1.2345), but the random bad values are always to a higher precision (1.2345 x10^67). So maybe I can write some code to filter out any values that are higher precision than 4 decimal places.
 Hey buddy, My philosophy with a lot of this stuff is to dive in and 'play'. Literally, open matlab, and start with a couple of those commands: **Making some simple arithmetic:** x = 5; y = 10; z = x + y If you type that in to the command prompt, you will get z. I know, its silly, but its more a confidence building exercise than anything mathy. :-) Secondly, let her open the editor, and write this: **Simple for loop:** clear all; close all; x = 0; for p = 1 : 10 x(p) = p*3; end plot(p,x); For this, you can tell her this is a for loop, and we can plot how x changes with p, etc. ---- I think doing this with her will take her really really far, in so far as her getting comfortable with MATLAB. Once she has this 'base', she can start to 'play' on her own. I am currently going through the same learning curve with Python! :-) 
i second this and would like to add that the best way to learn the most basic stuff is to try and solve a problem she knows very well. Since she knows the algorithm for solving it she can just look up what she needs in the documentation as she goes.
This is how I got started. Read the introductory stuff in the help. It is really aimed at the complete beginnner.
I agree with what u/Ayakalam has to say. I remember swearing at Matlab for not acting like a graphing calculator when I first started, and just playing around in the environment really helped. Even more helpful were the videos on the Mathworks website. I typed along to [this getting started video] (http://www.mathworks.com.au/videos/getting-started-with-matlab-68985.html) about five times before I started feeling at home. Another thing that saved my butt was David Doran's awesome youtube channel and typing along to [this video] (https://www.youtube.com/watch?v=ie7iREcYBPU) in particular. The video covers basic signal manipulation using audio signals, which was helpful/specific to what I was doing, but also works as a tangible demonstration of how Matlab treats signals and matrices, which may be generally helpful in getting one's head around it. As a bonus there are great accents involved in both videos. Happy Coding! 
There's some good ones in the sidebar.
&gt; I am unsure about what dimensions to use, I've read the dimensions of the Labview binary files are located in the first 4 bytes chunks: &gt; No, you want to read them directly as an `int32`. Don't read them in as bytes and then try to reassemble. Check the `fread` help for details on how to do this.
Agreed. Listen to /u/matuba. Also, depending on the size of your database it might be better to use a matlab data structure rather than a relational database.
Ah, your formatting is a little off, so it looks like the code you're writing is all on one line. This should be a bit clearer: clear all; close all; x = 0; for p = 1 : 10 x(p) = p*3; end plot(p,x); So you know, putting 4 spaces at the start of a line makes it code-y
http://www.imc.tue.nl/
Ah thanks for the fix! I did not know about the 4 spaces format. TIL! :-)
I think I may have cracked the problem. I was looking at the non truncated file and have worked out that it has the following structure: 4 doubles of header 75000 doubles of good data 1 double = zero 75040 doubles of bad data 750000 doubles of good data 1 double = zero 75040 doubles of bad data ect... Then I wrote the following code to extract the good data and plot it: %% load the data clear all clc fname = 'RTL5_57.bin'; fid = fopen(fname,'r','ieee-be'); trash=fread(fid,4,'double')% dump the header clear trash; I=1; while ~feof(fid) temp=fread(fid,75000,'double');% read the data data{I}= temp;%save the data clear temp; I=I+1; trash=fread(fid,1,'double');% dump the zero trash=fread(fid,75041,'double');% dump channel 2 data clear trash; end %% plot time=(1:1:75000); % sample number vector to plot against i=1; siz=size(data); for i=1:1:siz(2)% plotting loop plot(time,data{1,i}) hold on i=i+1; time=time+75001; end xlabel=('Data sample number'); ylabel=('volatge V'); I then realisedd that only one channel had been plotted, thus the bad data must be the other channel. Does any one have any idea's what format the bad data is or how to convert it? It's values shoue lie between ¬±5. 
I went through the same process a few months ago. I had never programmed before and the lecturers were no help at all. I borrowed a book called Matlab for engineers and scientists from the library and went through the first half, just typing put everything in the book. It helped a lot. 
nvm, for anyone wondering - found ezfft.m , much easier to use and works really well.
you need to fftshift()
Did you plug it in?
I actually have streamed optotrak data before. Is the Vicon sdk already have matlab oriented code? I don't have it personally, but I might be able to help if you show me what there example code looks like. 
Have you tried turning it off and back on again?
Hah, you're a clever one. I have limited funding and therefore have to see whether or not it would work before I buy it. 'preciate the reply though.
Thank you! Here's hoping my PI will sign off on it then. Much better than a $2000 one, at least.
Yes it works for me. Do this then: [crit1_x, crit1_y] = solve('2*x' , '1-2*y' ) [crit2_x, crit2_y] = solve('-1-2*y' , '-2*x')
Do you know the domain that the pressure data is on? If you did you could code up the [equation for a plane](http://en.wikipedia.org/wiki/Plane_(geometry)) and solve it for whatever x value you want to hinge on.
well the domain is rotating so the coordinates change depending on the point of time
I am also interested in the answer to this.
advice put four spaces infront of lines that you want to display as code makes it easier to read Other than that, I don't have an help to offer at the moment, sorry
Find the max of the spectrum. Divide everything by the max, effectively rescaling all of spectrum to have a max of 1. Does that do it?
My problem consists in taking the measurements of an amount of data and obtain the respective transfer functions. I have the measures and their time slots, I just don't understand what do you mean by complex amplitude data? With the command you have showed now I think I can achieve the objective, I just don't understand why i can't use simply the power data in my PSD. Thanks! 
Yes, it does! Thank you for the help.
Ah ok, I understood! Thank you very much!
You are giving linspace() numbers that don't make sense. Those first two arguments are the same. They shouldn't be! I personally cannot think of any way to give any number of points between 3 and 3, can you? You make the same mistake for all three linspace() calls.
God damnit Mathworks... Non-sensical behavior at its finest. That one is going on the WAT list. Documentation doesn't mention when a==b I always assumed it would just explode. If i wanted [5 5 5 5 5] it would make more sense to use repmat(). But there I go again expecting logical functionality in MATLAB. I know better than to do that. In happier news, that narrows it down to the other thing I was thinking: L+(G*K) is resulting in a vector. This one I tested, and it tosses the same error you are receiving. linspace(2:4,6,10) ??? Error using ==&gt; times Matrix dimensions must agree. Error in ==&gt; linspace at 26 y = [d1 + (vec.*(d2-d1)/n1), d2]; With the small caveat it is on a different lines number because I'm using an ancient copy of MATLAB at home.
Are you _absolutely_ certain they have that value when using your function (NOT when you do it by hand on the command line)? If they truly are those values then your code _should_ work. But the fact that you are using globals (a very very bad habit to get into, but I'll spare you the lecture) casts some doubt there. The only way I've been able to reproduce your bug is if one of the arguments to linspace() is a non-singleton (a vector/matrix). That is what leads me to believe either L+(G*K), N, or both are vectors.
But if you sort data, you can request the index vector as well. Then discarding the min/max of the new [sorted_vector index_vector] based on the sorted_vector should preserve the vector of original index/location as well. Though I agree, dealing with those matrix sizes is going to be slow, and my favorite approach in that case is to build as robust and automated script as possible so I can have it work and sort over lunch.
Use four spaces at the beginning of a line to format code. Like this: function [A1,A2] = cournotnew(M1,M2,a1,a2,N) A1=[a1]; A2=[a2]; t=1; while t&lt;=N [r1,c1]=find(M1(:,a2)==max(M1(:,a2))); [r2,c2]=find(M2(a1,:)==max(M2(a1,:))); A1=[A1,r1]; A2=[A2,c2]; a1=r1; a2=c2; t=t+1; end That said, it's really hard to answer questions about your code since you didn't actually say what it's supposed to be doing. Also, when we see a bunch of `find` calls together, that's usually a hint that there's a much easier way to do what you want, but it's impossible to know without knowing what you want.
A for effort, but this bot is really not contributing much to the discussion here.
Oh, sorry about formatting - thanks for the tip! The output is supposed to be: BoS = 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1
Try `help reshape`. Although again, there's probably an easier way to do what you're doing (which still isn't clear to me).
Your output is 1x(2*(N+1)) form, because of two reasons. Use N-1 in your while loop instead of N. Also BoS = [A1; A2] so that it puts A1 and A2 beneith each other and not next to each other. No guarantee that the output is correct though since I dont know what your function is supposed to do. EDIT: So i read your other reply and your output should be Nx2. Put A1=A1'; and A2=A2'; at the end of your function to make columns instead of rows. So your function should be like this: function [A1,A2] = cournotnew(M1,M2,a1,a2,N) A1=[a1]; A2=[a2]; t=1; while t&lt;=N-1 [r1,c1]=find(M1(:,a2)==max(M1(:,a2))); [r2,c2]=find(M2(a1,:)==max(M2(a1,:))); A1=[A1,r1]; A2=[A2,c2]; a1=r1; a2=c2; t=t+1; end A1=A1'; A2=A2'; Another solution would be to directly do this by using A1=[A1;r1]; and A2=[A2;c2];. This way you make columns instead of rows. 
Here is the assignment: http://imgur.com/QYdkCtY I would probably go with "*my code sucks and should be done a different/easier way*" as this is my first time using Matlab...and coding for that matter.
Just a tip from an older researcher: talk to your PI. Don't guess what he/she wants. Some would definitely baulk at being asked to shell out anything for an undergrad's project, others would much rather drop $2k than have you waste a month trying to get a cheap one working. Research is just like *every* other field in that way: communication is the most important thing. 
It works!! Thank you so much! I added: A1=A1'; A2=A2'; 
because at first I had a lengthier script for a preceding question, but I've since changed the script so that it's the entire purpose of that script is to define my global variables. L=8.2e-3; G=0.027; K=0.6; x0=0.06; x_target=9.3e-7; Also, the code was part of a previous problem set that the professor and TA had posted a solution with. So I've tried using the script they provided as well, but still with no luck.
Its the "~" 
[~,c]
You have still yet to look at N (or to tell us the results of looking at). It is just as likely to be the culprit here.
N is the input variable that we desire. For context, x is the concentration, and N is the # of times filtered. The input to run the function would A2Q1(5), or any natural number.
Oh yes I completely agree. I would just hate to go into a conversation with no background knowledge. I present options, she shuts them all down and has better ideas but appreciates my attempt. Hah, it's a fun cycle.
And I thought I was slumming it with 2010b :o
I was helping a friend with processing her thesis work and R2007b was not happy with my R2012a code, especially my liberal use of ~. It got me reading through all of the release notes and it's really interesting seeing how things like syntax and function behaviors have changed as you go back through releases. 
Nice! I've always just used trash_var
I use fopen/fclose, then a while loop: while(~feof(fff)) str=fget(fff); values=parseString(str); end where parseString is a function you write that parses the string in whatever format you would like. I personally hate textscan. My experience with it is that you can only use it if you wrote the file using fprintf and you know the format string exactly.
Thanks for the help but unfortunately, I'm not up to par to follow this. If you can explain a bit more I'd be very appreciative. And yea, textscan looks like a nightmare to me.
Sure, can you post an example of the csv file you are trying to read?
You are trying to do a matrix operation when you want an array operation (element by element). Read page 30 of this http://www.mccormick.northwestern.edu/docs/efirst/matlab.pdf as well as the section of the MATLAB documentatoin dealing with language basics.
Use (1./X)-(X-1) instead of (1/X)-(X-1). The point means that Matlab should do an element wise operation. So in this case Y(1)=1/X(1), Y(2)=1/X(2) etc. This is because normal symbols in Matlab like *, \^, / etc are used for Matrix operations. So every time you want to do an element wise operation use a point before the symbol. You don't need to do that before - or + because the operation for a matrix is the same as element wise, so each element is substracted: 1-X(1). See http://www.glue.umd.edu/afs/glue.umd.edu/system/info/olh/Numerical/Matlab_Matrix_Manipulation_Software/Matrix_Vector_Operations/elementwise for more info.
Learning how to use formatting strings and simple regular expressions is going to be significantly easier than writing a custom string parser. They really aren't that scary :x
Yea.... unfortunately, I don't get to pick my tool belt. Also, I'd need to learn a new set of tools. My education is limited to MATLAB.
Well, yes. But I've got to work with what's been provided for me. Which in this case is matlab. I don't have access to anything else right now. Well, and minitab. I've got plans to use it later in my task. If a completely matlab based solution isn't acceptable. Just going with what I know since time is a factor.
Hint: you can mix and match file i/o commands on a given file handle. If you know you have three lines of useless header information throw three fgetl() commands at it to skip over them. Then start using textscan to grab the data you want.
Thanks for the tip. I'll try my hand at it and get back to you if I have questions.
If this was in r/bash, r/perl, or r/linux I would agree. But given readibility, maintainability, and adaptability for most users I disagree. 
As for matching your actual data, the simplest is going to be: data = textscan(f, '%d/%d/%d%d:%d,%f,%f,%f,%f') You'll get a nice big cell array with entries for month, day, year, hour, minute, and then four more for each of your data columns. Everything nice and split for you to apply what wizardry you were talking about to fix your date to that new format (I glazed over that portion of your post). Edit: For added simplicity you can make them all %f and use cell2mat() to get a matrix in the end. Will be slightly easier to work with than a singleton cell array.
One person incompetence with a tool does not make it a bad tool. The person who wrote the MATLAB in that post is bad and they should feel bad. Does R handle it much more elegantly. Yes, no argument there. But that abomination of someone flailing at a keyboard and vomiting at that terribleness of a solution is a weak argument. You can find equally abhorrent examples of code in any language.
Try this: function [date,data]=ReadCSVData(filename) filename='My_ideal_data.csv'; %filename='What_ive_got.csv'; fff=fopen(filename,'r'); c1=1; while (~feof(fff)) str=fgetl(fff); [DATE,VALUE]=parseString(str); if (~isempty(DATE)) date{c1}=DATE; data(c1,:)=VALUE; c1=c1+1; end end fff=fclose(fff); end function [date,data]=parseString(str) str=strrep(str,'NAN','NaN'); inds=strfind(str,','); date=str(1:(inds(1)-1)); data=str2num(str((inds(1)+1):end)); if (isempty(data)) date=[]; end end
I've said something similar on this sub before. For certain tasks (like this one), it's probably quicker to learn a bit of Python (or R) and then do preprocessing in Python than to do the task in Matlab. Non-trivial text processing is one of these things.
Perhaps. But my goal is to hand over a script that asks where the file is, what dates you are concerned about, and spits out the results. The end product cannot jump through loops. If so, I'd simply tell them to pop open the data file, scoop out he time frame in question, and pop it into a .csv all nice and simplified. My suffering is for their simplicity.
This is supposed to be easier to read, adapt, and maintain than a solution using textscan()?
No offense, but this may be a problem that's better solved with social engineering than computer science. See if the people you're sending code to will use a language other than Matlab for this. Using Matlab will just result in you banging your head against a keyboard.
Heh. The preference was minitab. I don't know the first thing about minitab though. So this might be a grave I've dug myself in to.
The first step would be to get the ode45 solver working. Have you gotten it working to the point where you get an output matrix with 3 columns? If so, then you can begin to interpret the results.
Just so you know, to make your code more readable, put 4 spaces at the beginning of each line. %% Golden Ratio 3 X = 0:1/100:4 ; Y = (1/X)-(X-1) ; % X&amp;Y are CAPITAL! plot (X,Y) grid on Edit: But yeah, as other people have said, the .* command does element-wise operations, which is what you want. If X and Y were matrices and you were doing matrix multiplication, you would want the plain * command
It isn't complicated in MATLAB. At all. Period. Full Stop. Given OP's example data it takes seven lines, two of which are opening and closing the file and four are skipping useless header information. f = fopen('What_ive_got.csv', 'r'); fgetl(f); fgetl(f); fgetl(f); fgetl(f); d = cell2mat(textscan(f,'%f/%f/%f%f:%f,%f,%f,%f,%f')); fclose(f); That isn't some arcane wizardry. I'm not abusing any crazy obscure features. Would it be more complicated with mixed data types? No, the only change would be removing the matrix conversion and being stuck with a cell array. Or slightly better splitting out only some of the data The person who writes that blog cherry picks situations that highlight a strength of some other language then fellates all over it while flouting some terribly written MATLAB code as proof that he is right. That pattern repeats in nearly every article. Anyone can beat that dead horse with any topic. Every language can be made to look like a useless pile of shit with that approach. Failure to adapt to the tool you are using does not make the tool bad. Not knowing your ass from a hole in the ground when using the tool does not make it a bad tool. Is MATLAB going to be perfect at every single task? No, of course not. No language is perfect. Otherwise we'd have a single language that dominates everything (granted Python is well on the way to taking that crown, but that is another discussion). This entire discussion is moot anyways. OP has stated more than once he is stuck using MATLAB. All this fuckery saying it is too difficult to do, on top of being flat out wrong, is distracting and unhelpful. 
Your solution only works for this particular csv file, and it's a very rigid format. Should the csv file change so slightly, add or remove a column, or do quoting, or add or remove a string (and people do this all the time), your textscan string will need to get modified. It also hardwires column numbers to the data of interest. This is a frequent source of bugs, as you awkwardly miscount which column number goes with what kind of data. A better solution would be to be able to associate column *names*. Lastly, there's the issue that this fails to fully parse the date format. You still need to count off which columns contain parts of a date and pass those on to date formatting functions. OP almost certainly wants to parse the dates in order to do useful things like sorting the data by date or picking date ranges of the data. It's not arcane wizardry, but it's just an ad-hoc solution, which is what the original blog post is talking about. It really is best to do this in a language that isn't so terrible at handling CSV files.
No, it's not arcane wizardry. But you've just used a bunch of code to stick the .csv data into something that's going to be annoying to work with for what OP wants to do. It works fine for numerical data, but is going to be annoying to do date parsing, etc. Or god forbid if the input data structure ever change. Compare to: import csv data = [line for line in csv.reader(open('file.csv'))] Could probably do the date parsing in another couple lines.Using the wrong tool for the job makes for a ton of unnecessary headaches. Matlab is great for some things, this is not one of them.
I have, yes. That is one of the few things I have done a fair amount in Matlab. All I need to do is get a respectable scalar estimate for R and then I can do the rest. Eventually I'll be running this many times with sampled values for the four parameters, but I think I'll be able to handle that end.
My preferred method would be to use `textscan`, but this seems to be a good candidate for `importdata`, assuming your formating doesn't change too much between files. Using `importdata`: data = importdata('file.csv'); for k = 2 : size(data.textdata,2) data.time(k-1,1) = datenum(data.textdata{k,1}); end This will give you a structure variable `data`, which has the fields data, textdata, and time. The data field will have all of your numerical data for Headers2 and on. The data.time field will have your dates/times in Matlab number format. You can convert them back to a string by using `datestr`. 
Minor detail being that he has no choice but to use MATLAB. Not sure why this is such a difficult requirement for people to grok. He is stuck up shit creek with only one paddle. I've never said MATLAB was the best tool for this. I've said it's the one he has to use and shown him how to use it in a simple manner to do what he wants. Everything in his example dataset can be easily represented numerically and easily manipulated numerically. Input data changes are going to require reworks regardless of what superior method you come up with for parsing it. Maybe not for the parsing itself, but for everything afterwards. Altering a simple string format specifier is not really the disaster everyone keeps making it out to be. 
When I asked my professor about this, he said that the Riemann sum, over my range of integration (in this case 0 to 5) would serve nicely. And yes, I meant that R is associated with the third column of x after running ~~ode45~~ [t,x]=ode45(blah blah blah). For the purposes of the project, R is the only output of interest. Edit: I should add that my eventual goal is to have a script which 1) Generates a value for each of my four parameters (a, b, k, r), sampled from their respective densities 2) calculates the Riemann sum of R 3) stores that scalar output in a vector Doing these steps 1,000 times. 
Well, ode45 is an integrator...it's basically performing this Riemann sum of each dxdt. My interpretation of R is that: * it is the number of recovered "things" * dxdt(3) is the time rate of change of the number of recovered "things" If you were to integrate R again (get a Riemann's sum of it), you'd arrive at an odd quantity of recovered "things" multiplied by seconds. I am not sure that is what your professor wants. I feel like he just wants the value of R at 5 seconds...
Is this the entire error message? There's no traceback?
Fine. Then let ode45 do the Riemann sum for you. Add a 4th parameter to your x, x(4) will be the integral of R. Then add this to your dxdt function: dxdt(4) = x(3); Using [t,x]=ode45(blah blah blah), x(end,4) will give you this 'Riemann Sum' of R you're looking for.
These can also be modified manually under preferences -&gt; colors (uncheck 'use system colors' to change the background &amp; default font colors), but this is a great way to accomplish it programmatically
&lt;3 dark themes
A-ha! I see what you mean. I'll give that a whirl and report back. Thanks so much for your help!
This was great Just a warning, those who use certain cell- and code-highlighting options will have to change those to dark colors as well. But this looks way better than my default.
I love dark themes. Especially when I'm staring at the screen for hours on end. Thank you!
Reporting in! Works like a charm! Seems so obvious now that I have the power of hindsight. I've successfully built a script to give me the 1000x4 sample matrices I need so now I just need to build a script that will run ode45 for each row. It's slow-going and probably inelegant but I think I can piece it together. Thanks again for all your help! I really appreciate it.
vector=zeros(1,(N+1) ^ 2); vector((end-N):end)=ones(1,(N+1));
I ended up using your previous advice on fgetl. file = fopen('What_ive_got.csv'); % Forgets 1st 4 lines of header info from CSV counter_fgetl = 0; while counter_fgetl &lt; 4 Removed_headers = fgetl(file); counter_fgetl = counter_fgetl + 1; end % Reads CSV - Headers. Date is stored as string, data as double in a cell % array c = textscan(file,'%s %f %f %f %f','delimiter',','); % Process date string to decimal value. ^ is where I'm currently working. Gonna see if the dates() function will work for me. It's probably not the most elegant way to do it, but i get the feeling it'll get teh job done in a fairly robust way. Worst case, I can forsee needing to tweak the number of lines skipped if the header information changes. I don't expect the structure of the data to start carrying strings (except the date). That and I just need to add about 30 more %f's to handle the full size CSV. Thanks for your help!!! ^(Might bother you again, but I hope not!) Edit: yay!!! learning more about matlab and the parts of it I avoided in school. Thinking of using strcmp() to sort the dates instead of concerting to numeric dates! Still need to find a way to break out the time information though. (school was a wonderful place where I could get away with hacking stuff together, mech. e., It didn't need to be pretty to pass, it just needed to crunch my data and let me get back to the rest of the project) Edit: Method (WIP): % Split date string via ' ' delimiter. expected format m/d/yyyy h:mm for n = 1:length(c{1,1}) split_info = strsplit(char(c{1,1}(n,1)),' '); date(n,1) = split_info(1,1); time(n,1) = split_info(1,2); end (feeling giddy and want to share as thanks for your help.)
Any idea how to export your toolbar shortcut icons and keyboard shortcut settings between machines?
Are you sure the channel is recording data correctly?
I would do something like this, but I don't know if it necessarly the most efficent way: N=10; % define N NoOnes=N+1; % calcuates the number of ones NoZeros = (N+1)^2-(N+1); % calulate the number of zeros X=ones(NoOnes,1)';% creat vector of ones Y=zeros(NoZeros,1)';%creat vector of zeros Z= [Y,X]';% combine the vectors Edit: eldarshadow's method is beter than mine.
Yes I am sure because it is consistent with all of my data sets. The data was acquired using a Labview VI that a colleague of mine programmed, it seems to use a unique data structure and he has subsequently left our research group. Using another VI I can convert the data to .txt and both channels can be plotted in MATLAB perfectly, however I don‚Äôt want to do this because it takes too much time to convert (my data files are 10GB to 60GB in size).
Why not just look at the conversion VI figure out how the it is converting the data to a text file? You have all the tools and information at your disposal and we have none of it.
You can even assign a scalar to an array slice. vector=zeros(1,(N+1) ^ 2); vector((end-N):end)=1;
Digging the scalar assignment over a slice, very slick. 
Shouldn't the ESPB{I} =... line have 75041 in it and not 75000? edit...Or is your description wrong? I suspect it has something to do with the intermediate lines (zero and trash) since the first 75000 doubles come through just fine. Do some debugging to make sure you are not throwing away too much or too little.
Look into the [`polar`](http://www.mathworks.com/help/matlab/ref/polar.html) function. Or you'll have to transform your polar function into cartesian coordinates. EDIT: I just found out that Matlab has a conversion function built in. It's [`pol2cart`](http://www.mathworks.com/help/matlab/ref/pol2cart.html), unsurprisingly.
You can use the interface elements. http://www.mathworks.com/help/physmod/sps/powersys/ref/currentvoltagesimscapeinterface.html The dot connectors look the same, but simpowersystems is not meant to be directly connected.
I love the ' operator it is my favourite :-) but I do like yours and eldarshadow's way of doing it also. Much more concise.
How would I go about doing that? Sorry for the stupid questions I got my MATLAB license through school but the documentation isn't super great from them since I got it about a year ago.
If you got it through the school, then *probably* they will renew it and it will be fine. If you're worried about it, figure out who your license admin is and shoot him/her an email.
excellent. is there compact resource you recommend for learning matlab basics such as this?
excellent. is there compact resource you recommend for learning matlab basics such as this?
I like this one, but its behind a paywall: [Matlab (Second Edition)](http://www.sciencedirect.com/science/book/9780123850812#ancpt0015) And [this](http://www.mathworks.com/academia/student_center/tutorials/launchpad.html) shloud also get you started. 
Without knowing anything about your code, other than the goal, that is how I would implement that. 
Yes, but you can do this with vector operations. Let's say you have all 5400 (or whatever) points in the vector `x`. in_window = x &gt; lower_bound &amp; x &lt; upper_bound; pct_in_window = sum(in_window) / length(in_window); 
You're trying to define a function within a script. You cannot do that. Functions must be defined in their own .m file unless they are sub-functions or nested functions, in which case they must be defined in the file corresponding to their parent function.
Just out of curiosity (and as a carry over from the cluster fuck of a discussion during your last post), what is preventing you from using the string specifier I posted that splits those dates out for you at the beginning when processing your input? A large reason I went that route is to skip this step :x I'll revisit this in a few hours after my daily round of useless meetings and try to be more helpful...
Perhaps I didn't full understand. Right now I've got my script using textscan() on my CSV and using a variable number of %s specifiers to catch the headers and the data. Then I'm breaking out the 3 (out of 20-40) columns I actually need (using a short loop and strcmp() on the header info). I also ditch the header info since it's not needed anymore. The time data is the part that is being a SOB to then process down. Each cell contains the date and time info for that run as a string. So as shown in my snippet of code I'm busting it out via strsplit(). Each day has 3 shifts with (many) multiple entries of data. My task is to break down those entries by day and shift, so I need the time data in a format I can process quickly. Once I've got the date separated. I'm using strcmp() to find the total group of entries for that day. Then I break down the entries by shift. I like decimals here since our shifts go from 00:00 to 08:00, 08:00 to 16:00, and 16:00 to 00:00 (next day). So I just process the time data into a fraction of a day and see where it falls relative to 1/3, 2/3, 1 (day). From there is a simple set of sumpeaks() and a little formatting to output a graph. If you've got a better way to break apart a string like " 2012-05-22 16:30:47 " from a crapton of cells, I'm all ears. I haven't been using MATLAB for about 1.5 years so this task involved me shaking off lots of rust to begin with.
The tl;dr - stop pulling the data out as a string, then splitting it. Put the splitting into the textscan() You can use '%d-%d-%d %d:%d:%d' to pull that directly to integer values, then convert from there. 
I think I see, but is this going to affect my headers too? Turns out I'll need them since these datafiles aren't always structured the same way as I thought. Off to experiment.
Your headers should be snagged using a different textscan() call as they will have a vastly different pattern than the data itself. You can specify the number of times (ie- how many lines) textscan() should process to limit that one to just grabbing the headers. Best of luck hitting a moving target. I'm off to brace myself for the incoming deluge of hurf blurf about how terrible I am and why &lt;pull language from hat&gt; is better for this. 
http://stackoverflow.com/questions/18711622/count-frequencies-of-pairs-in-matrix-matlab That seems like a decent start.
&gt; Your headers should be snagged using a different textscan() call as they will have a vastly different pattern than the data itself. You can specify the number of times (ie- how many lines) textscan() should process to limit that one to just grabbing the headers. I love you. I was looking for exactly this but couldn't seem to find it!!! Let me go review the syntax on textscan and see if I can figure it out this time. Will message back later if stuck.
It also bears mentioining that you can use textscan() on a string. It doesn't help with your looping problem, but it will vastly simplify getting the data out of the strings. Hell, you might be able to throw the entire cell array (or a slice of it) in there and get something reasonable out. I've never been in your particular situation so I'm working off tangential experiences here.
Mimshot is right. Based on your above comment, here is an example. l=ones(10,1); l(3:7)=6; [~,in_win]=find(l&gt;5); pct_in=sum(in_win)/length(l); Looping it is unnecessary. 
&gt; You can specify the number of times (ie- how many lines) textscan() should process to limit that one to just grabbing the headers. Looking through the documentation, I don't see how to specify which lines textscan() reads. http://www.mathworks.com/help/matlab/ref/textscan.html?searchHighlight=textscan Are you saying to use fgetl() and fgets() to specify the appropriate lines?
&gt; C = textscan(fileID,formatSpec,N) reads file data, using the formatSpec N times, where N is a positive integer. To read additional data from the file after N cycles, call textscan again using the original fileID. If you resume a text scan of a file by calling textscan with the same file identifier (fileID), then textscan automatically resumes reading at the point where it terminated the last read.
It happens to everyone!
In the past I've used polyfit and polyval to do this. I think polyval accomplishes what you're trying to do. Keep in mind it's easy to overfit data if you have too many terms. If you have higher order terms you should divide your data set into a training set and a validation set. 
The data is actually derived from an existing equation so I think my fit is alright. It was an equation that couldn't be solved for the variable I wanted to solve, an effectiveness-NTU equation for a heat exchanger. Here's the pretty() output for the equation: / 11/50 39/50 \ | NTU (exp(- C_r NTU ) - 1) | 1 - exp| ---------------------------------- | \ C_r / Basically I want to evaluate this for NTU. So instead of messing around with all the natural exponents in here I'm just making a poly model for NTU and using that instead. Looking at the polyval() documentation I think that might just do the trick. Still kind of wish it was just in equation form but now I'm just being picky.
min/max can also return the index of the element they return. [c, i] = min(M(1:6,1)); will give you the value and the index where it occurred. You can use this to then grab the item you want for your other argument.
Awesome, thanks man.
I've hit a slight snag in that my time values are encased in double quotes ("yyyy-mm-dd hh:mm:ss") which is interfering with your suggestion to use '%d-%d-%d %d:%d:%d' (which I loved). Got a suggestion to still pull this one off or should I try %q or %[\^"] and then process them out of being a string?
My suggestion is to use whichever one works :p Going with %q -&gt; %d... strikes me as being simpler and less prone to disaster seeing as %q is there SPECIFICALLY for cases where things are encased in " ". 
I'm using a 3D fit function though, I have two different variables in my polynomial. fit() seems to support it but polyval() assumes a single variable. Any tips on how to make it work for the following equation? p00 + p10*x + p01*y + p20*x^2 + p11*x*y + p02*y^2 + p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3
When I fit data I plug it into cftool first. I'm a visual person so it allows me to easily assess how accurate a given model is and where it's accurate. Then when I find a model I like I just use the fit() command with whatever model I want. The code I'm building will probably be run again and again for years to come (it's a design program for the cooling system on an FSAE car) so I like to keep it as variable and encapsulated as I again. Also clear and simple, of course.
Is 2d interpolation what you're after? Given an x/y domain find an equation for z, and then be able to solve for z given x/y that weren't already specified? Would [interp2()](http://www.mathworks.com/help/matlab/ref/interp2.html) work/help? It won't provide you with coefficients, but if you're trying to make a fit from an experiment and find values within the domain that you don't already have, I think interp2() may help...
What version of MATLAB? What is the other program? What was the video recorded/encoded with? What is the correct number of frames?
Practice. Honestly, practice, trial and error, google. It prab took me a good 2 or 3 years to be able to diagnose all error messages I get quickly. Working with others helps too, as someone else may know some trick or function that will do what you want. The most helpful thing I do is Google "matlab + &lt;what you want to do/name of some process/random function you've come across&gt;". I'd be willing to be that in a year from now when you think you're a wizard and using MATLAB on your project, you'll *still* have something you don't quite know how to tackle without some reference. Just keep coding, we are all here on the sub to help and learn from each other.
Honestly, that's the wrong way to think about Matlab, IMO. Rather, you have the basics (assuming you know how to create functions, etc.) , now you can learn specific functions as you go along. There's just too much to learn and depending on what you do, you'll need completely different things. The help function is wonderful, as is googling.
First and foremost, the code you posted is telling MATLAB to start at 11 and count backwards to 12. I'm no math major, but I'm pretty sure that is impossible! Secondly, you need to use your loop index to tell MATLAB to store the new values in a new place in I_c (this is assuming you want to keep all the values generated at each step, if not ignore this bit): I_c(h) = I_bc+I_dc+I_rc Lastly, the code you posted is going to only display the last plot generated. The others will be computed and displayed, but each loop iteration is going to overwrite the previous iteration's plot. They will all zip by very quickly. If you want to see every individual plot you need to add a figure() call to create a new window. Alternately if you intend for them to be overlayed (all plotted together in one window), you need to create the figure outside of your loop and call 'hold on' to tell MATLAB to throw every plot in the same set of axes. One other bit of advice: when posting code start each line with four spaces and Reddit will format it nicely like the snippet I included. You can add four more spaces to create indentations. An easier solution is to install Reddit Enhancement Suite which adds some helpful buttons to make formatting easier.
&gt;First and foremost, the code you posted is telling MATLAB to start at 11 and count backwards to 12. I'm no math major, but I'm pretty sure that is impossible! I'm an idiot. Thanks for that. &gt;I_c(h) = I_bc+I_dc+I_rc This is exactly what I want. I want to keep all values. I'll keep at it. Thanks for your help! But one more question, if I have h=11:-1:-12, will matlab still store my values in 24 different spots? Like is h=1:24 the same as h=11:-1:-12 when using I_c(h)? 
No, it is going to get angry when you try to use a negative integer as an index. A better approach would be this: h = 11:-1:-12; for i = 1:length(h) fakeNuk = h(i); I_c(i) = fakeNum*2; end Overly simple case, but should get the point across. Since your h values take on values that are invalid for an index, use another index (that makes waaayyy more sense anyways) and use it to get the h values you need.
I've got this now: h=11:-1:-12 for i = 1:length(h) beta=asind(cosd(Lat)*cosd(delta)*cosd(15*h)+sind(Lat)*sind(delta)) phi_s=asind((cosd(delta)*sind(15*h))/cosd(beta)); theta=acosd(cosd(beta)*cos(phi_s-phi_c)*sind(tilt)+sind(beta)*cosd(tilt)); I_bc=DNI*cosd(theta) I_rc=GHI*reflectance*((1-cosd(tilt))/2); I_dc=DHI*((1+cosd(tilt))/2); I_c(i)=I_bc+I_dc+I_rc end figure(1) plot(I_c) hold on 
So, now that you know how to properly write the for loop I feel obligated to tell you the basic tenant of MATLAB: for loops are bad. Stop using them. You can very easily vectorize your code. cosd(), sind() etc... will all take a vector argument and return values for each entry. Most of your constant values appear to be scalars (single numbers) as well. A few adjustments to make your code use array multiplication and division and you'd be good to go. That is the .* and ./ operators rather than just * and / alone. Avoids this indexing issue (granted it is simple to solve), will greatly speed up your code (again, probably not a huge deal for such a small calculation, but in the future it can and will save you from a LOT of heartache and waiting around), and getting comfortable with the idea will open up a lot of nifty built-in commands and tricks that let you do some cool stuff that would otherwise take a lot of work.
Ya. I've used books. I can get a list of them tomorrow, they're in my office... But there was one basic one for my first intro class (about 8 yrs ago now), and that was the only one I had for a while. Within the past 2 years I've since bought 2 others. Gives you a sense that you don't know all that you think you do..
It's been said a few times, but bears beating in to the ground: practice. Just like anything else. Don't wait a year to get those projects and work to find their solutions. Do it right now.
Actually, yes, I recall coming across that before. A teaching assistant recommended not to use the for loop, but it just seems more of common sense to me. So, should I just put h=11:-1:24 i=1:length(h) Then put .* and ./? 
I've trained myself the exact opposite of the majority of the MATLAB community: i is a cherished and time honored index variable. If I want imaginary numbers I use complex(0, var). Community wide standards to the contrary be damned! Bonus: I'm an EE, i is current and j is for imaginary numbers. Makes that habit even harder to break out of unfortunately.
By all means go with what you know and feel comfortable doing for now. I would highly recommend reading up on the idea in the very near future though. plenty of good resources in the side bar, the documentation, and all over the internet. There would be no for loop at all. And a few places where you would add the .* and ./ and you'd be done.
I'd appreciate that very much.
Glad to help someone who has already tried to help themselves. &gt; Last question, I swear! Haha. Biggest lie I've read all month ;) I see you went full monty and decided to try vectorizing things. I applaud you for that. Would really suggest you take a step back and tinker with some very simple examples first to get a feel for what is happening and how it works. It is going to be really, really hard for me to offer anymore advice because I don't know what the rest of these variables contain (I'm assuming all scalar, but assumptions are the mother of all fuck ups). Wild off the cuff guess: DNI is nx1 and theta is 1xn. That makes cosd(theta) return a 1xn vector. What do you get when multiplying a nx1 with an 1xn? Something nxn! Again, just gut instinct conjecture without having everything in front of me. 
On top of practice if you have the opportunity, read other people code. That's what made me understand how powerful vectorization can be. And you will learn tons of small tricks that speeds up your coding. The documentation is immensely powerfull, if you are doing something there is 90% chance that a function doing that already exists. Also if you look at the doc for a new function read the entire page, it will really help you in the long term.
Thank you all so much! This was a huge help! 
Practice, here are some problems http://projecteuler.net/problems
 end_sim = 0; while end_sim == 0 &lt;code to execute to update your conditions&gt; if (testVAR1 == conditionA) &amp;&amp; (testVAR2 == conditionB) &amp;&amp; (testVAR3 &lt;= conditionCtime) end_sim = 1; end end
&gt; you will learn tons of small tricks that speeds up your coding. The documentation is immensely powerful couldn't agree with both of these more!
One way I learned is to do something in (excel, Labview, mathematica, pencil and paper, etc) and slowly work in the matlab version of it. Making a plot from a text of data? Learn to read text files in matlab rather than import in excel and plot. Copious amounts of googling to the mathworks forums too. Then I started using Matlab to replace just about all of those so went from "hey, I wonder if I can do this quicker/better" to "Matlab can do it".
In addition to these great recommendations - DON'T neglect other tools, such as Python, Julia, C/C++, etc. Surprisingly, deep understanding in one language often comes from observing features (or shortcomings) in other languages. And *collaborate* - with your peers or with a prof who well give you a problem and an hour or two of their time each week. (This is really "read other people's code", which has already been mentioned.)
Didn't expect to read this. Now that I think back on my programming experience, this feels so true. Once you know MATLAB fairly well I would recommend Android programming. I found the development environment for Android apps relatable to the GUI development in MATLAB even though the programming is very very different.
No need for gold, but I appreciate the offer. I'm not sure if I would describe the ' operator as inverting rows and columns, but I can see the comparison you are trying to make. All the rows become the columns, and the columns the rows. A flip along the diagonal so to speak. Be carefult hough: the bare ' operator is actually a complex conjugate transpose (also called a Hermitian or adjoint depending on who you ask). You can use .' for a simple positional swap. This only applies to complex valued matrices though, for real valued matrices the complex conjugate does nothing so they end up being equivalent.
"MATLAB Graphics and Data Visualization Cookbook" Majumdar and Banerjee "MATLAB for Engineers" Moore I can't find my very first one, but I know it has a solid blue cover and is prab titled something like "Intro to MATLAB for Engineers and Scientists" I will also add again, that while these books have come in handy for some things, my most used MATLAB resource is Google. "MATLAB + &lt;topic/function&gt;" Also, you might know all there is to know about MATLAB codeing-wise, but it's not going to help you if you can't transform a continuous problem into a discrete one (which computers do) using numerical methods. I would also advise you to get a book/class on numerical methods if you aren't familiar yet...
Great, something else I didn't know. Thank you so much for your help. 
With matlab, you generally write your own! It's very powerful that way.
&gt; But something like plot(idx,u) does not work. Can you be slightly more specific? An exact error message would be helpful. As for changing colors of each plot, there are numerous ways to achieve that. The easiest is to alter your code to save the results for the ones that should be plotted and cram them into one giant matrix. MATLAB's plot() is clever enough that if you give it a 1xN vector for x and a MxN or NxM vector for y it will plot each row/column of the y (be careful if somehow M==N though, thigns will fall apart!) An example: x = 1:20; y(1,:) = x.^2; y(2,:) = x.^1.6; y(3,:) = x.^2.2; plot(x,y) Will plot all three curves at once.
It just says error in FTCS line 21 plot(i*dx,u). i is just the index I am running through in the inner for loop. So u is a function of i, but i is just a discretization of L, so that L=i*dx. So really us is also a function of L due to this relationship. So the only way to change colors is to export the values for each output point and plot them separately on the same graph?
You can specify color using plot(x, y, 'r') plot(x, y, 'b') and so forth, but it can be tedious to specify them individually. Read the documentation on plot() for more details on both approaches. I was aiming for quick and easy to explain (and implement) over covering every solution. As for the plotting issue, is that the ENTIRETY of the error message? At that point in the code i is only going to contain the last value it contained during your loop. It seems to me that you are expecting it to contain the entire vector defined by '2:xn-1' which you then scale by dx (which I'm assuming is some constant that defines the actual change of that value from point to point). 
It actually plots the entire array (at each time step j that I have specified using MOD). Here is the plot below: http://imgur.com/xvKJYi9 The physical answer is correct, but that 0-100 on the x-axis is the node position. Each node position corresponds to an actual position L by the relationship i*dx=L. I would like to plot against L, or change the axis to represent L (which happens to run from 0-20).
I would say it depends on what you're doing and how much you want to invest in learning MATLAB. As a theoretical researcher, I'm familiar with matlab and feel like data visualization is part of my job, in general, especially for expressing complex mathematical relationships that only have numerical (thus, graphical) solutions. I would consider using both. GUI's definitely slow me down. You can (probably) hack the parts of EEGLAB that are useful to automate things and avoid wrist-straining mouse manipulation; often I want to express things differently than standard graphics programs do, though, so I wouldn't avoid writing your own graphics software in matlab if you have a unique idea; matlab makes writing many types of graphics software easy if you are familiar with the most useful packages and functions.
plot is your standard 2D line/point plotter plot3 is a 3D line/point plotter imagesc, image, and pcolor will plot a matrix of values as a square full of pixels, color coding their values. contour, contourf, surface, mesh, can all halp make 3D surfaces quiver does vector fields there's also a game written in Matlab called shooter3 that has a lot of good examples of how to do animation and interactive graphics with matlab, using a variety of tools: http://www.mathworks.com/matlabcentral/fileexchange/31330-daves-matlab-shooter I would also download geebeb's suggestion, EGGLAB, and open up the code and see what they use and how they do it.
Part of my answer before was nonsensical bollocks, I edited it to remove the incorrect parts. Major sugar crash is making me not think straight. Just grabbed a sandwich so I should be fine now. I do stand by my statement that you seem to be wanting i to contain the values '2:xn-1' (the indices your for loop goes over). By the time you get to the plot statement in your i only contains the very last value. That is most likely the source of your issues. My two wild ass guesses at a fix: plot((2:xn-1)*dx, u) or just define L somewhere earlier in the code and use it directly: plot(L, u) I can't really be of more assistance than that. There is too much missing information for me to do more than randomly flail about and hope I get it correct ;)
what format are you exporting it as? I haven't been able to reproduce this, but it might be because you have an older version. You might want to check File-export setup for font settings
Where is myRecording located?
My guess is that your recording is only being saved in the active variable space during your MATLAB session. The same would be true if you simply defined a variable: &gt;&gt;a = 'myvariable'; and did a "whos" on the workspace. It would come back something like "a" is a variable, a "string", who is 1x10 in size, and has the value 'myvariable'. Maybe do a whos on your workspace and find out what type of variable myRecObj is. They you can save that as a binary file with some file name? Without any specification, it will save in your current directory. You can change the directory where you want it saved, and you can specify the entire path length.
Read the documentation for the [audiorecorder object](http://www.mathworks.com/help/matlab/ref/audiorecorder.html) and its methods. [getaudiodata\(\)](http://www.mathworks.com/help/matlab/ref/audiorecorder.getaudiodata.html) should give you a numerical array of your sound data that you can then use with [audiowrite\(\)](http://www.mathworks.com/help/matlab/ref/audiowrite.html).
Is it in your path? I think matlab is searching for love in all the wrong places. 
is everything in the equation supposed to be the same size of 19x1? EDIT: okay will U be a 19x19 matrix?
I'm not sure I understand. If you want diagonals of 1,2,3 why are you using A = diag([12:4:44])?
Time for a [loop](http://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html)
I tried a loop, but keep getting errors. This is the actual code I wrote. The equation in the original question was shortened to avoid confusion. n = 19; for i = 1:n; for j = 1:n; U(j,i) = ((x(j) - x(i)) ./ ((x(j) - x(i)).^2 + (y(j) - y(i)).^2)); end end Now, I need to multiply that UPS with a 19x1 Matrix. How can I do that?
I wrote the code above.
What are the other lines of code you're using that you haven't given us?
ugh
That's the only thing. I started a new cell for it and cleared the workspace.
A = diag([1:3]) works perfectly fine for me so there's something else going on. 
which errors specifically? did you preallocate U?
You can subtract a scalar from a vector.
my mistake. thanks for the clarification.
Have you defined x and y? Your code works for me when I do. If you want to multiply U by a 19x1 matrix the operation will be a matrix multiplication. MATLAB distinguishes between element wise operations (like you did above) with a ".". Notice the difference in the results for this this code: x=1:19 y=1:19 x.*y % element-wise multiplication x*y' % maxtrix multiplication. note: you need the transpose for the math to work
This guy is going places...
Don't put the function handle in quotes.
Yeah, I suggested she do that and she has got some now!
Thanks for that, lots of info there, I'm sure some of it will be of help!
Thanks for that, I completely forgot about the sidebar. Ill pay more attention next time!
Thanks man, I've explained what you said to her. Building up her confidence and knowledge of basics of everything should help her understand. She's the type who unless she can see why she's doing something, she won't want to! Let's hope she never see this post haha
Yeah her performance is definitely confidence based so that would help her a lot.
I didn't realise the 4 spaces formatting either thanks for the tip!
Yes! The first video is bang on what I was looking for, thanks! The youtube channel looks great too, plus its almost got some ASMR qualities to it!
Thanks, I forgot to check the sidebar, will do next time :)
Wow, this will come in very useful, thank you very much as this is exactly what I was looking for!
Thanks man, she's got that book in her library so I've given her your recommendation! EDIT: I found this online if you ever need an electronic copy in the future ;) [link!](https://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;ved=0CDUQFjAB&amp;url=http%3A%2F%2Fxa.yimg.com%2Fkq%2Fgroups%2F24534646%2F778254722%2Fname%2FEssential%2BMATLAB%2Bfor%2BEngineers%2Band%2BScientists%2BFourth%2BEdition.pdf&amp;ei=XOTrUonYPMOihgfG4YGgDw&amp;usg=AFQjCNH7sdbvRoqCRpBq9vEqMu8BXgNW-A&amp;bvm=bv.60444564,d.ZG4)
Apologies for the late replies, I was travelling back up from visiting my girlfriend who lives ~600miles away and attends university there too. All these responses have been very helpful so upvotes all round, thanks very much guys!
I'm going to go out on a limb and guess that you asigned a variable to `diag`, so when you wrote `diag(1:3)` it returned the first three elements of the *variable* named `diag`.
You're welcome :) My university library has it as an e-book so I won't need your link for the next few years, but thanks anyway!
So simple and it only almost cost me my sanity? :D Thank you very much. :)
I used it to control a usb device. It seemed to work fine. If I recall correctly,`actxserver`is to load active-x controls, which was an older way of doing windows IPC before .NET existed. I used that to load a webcam driver a *very* long time ago. I would recommend avoiding it if possible. Maybe if you went in to more detail about what you're trying to do, we can give more specific advice.
I think what he's getting at is there's some other function that does: ud = get(handles.form1, 'UserData') ud.list = {'One'; 'Two'; 'Three'} set(handles.form1, 'UserData', ud); Now he wants to load that into the listbox but doesn't know how: ud = get(handles.form1, 'UserData'); set(handles.LISTBOX, 'String', ud.list);
 I'm not yet trying to accomplish something rather than looking for inspiration ;) Controlling usb-devices sounds very interesting! Perhaps I can interface my measurement devices through .NET. Thank you very much! EDIT: spelling
I got it! I finally got it! Thank you so so much r/bobinpants! 
Also, for pedagogical reasons. If you don't understand how data visualization works in EEG, you could learn a thing or two from trying to do it yourself (even if you fail). And then you'd have a better appreciation of how EEGLab works, and you'd also be able to hack it to better to suit your needs.
I was told earlier to implement the bsxfun function, which is useful for different dimensions. Here is my attempt, but it's still not right: n=1:365; delta=23.45*sind(360*(n-81)/365); h=11:-1:-12; beta=asind(cosd(Lat).*bsxfun(@plus,bsxfun(@times,cosd(delta),cosd(15.*h)'),(sind(Lat).*sind(delta)))) theta=acosd(cosd(beta).*cosd((asind((cosd(delta).*sind(15.*h))./cosd(beta)))-phi_c).*sind(tilt)+bsxfun(@times,sind(beta),cosd(tilt))) theta=theta' I_bc=bsxfun(@times,DNI,cosd(theta)) I_rc=GHI.*reflectance.*((1-cosd(tilt))./2) I_dc=DHI.*((1+cosd(tilt))./2) I_c=I_bc+I_dc+I_rc Is there any chance someone can help me on this?
I was worried about that. I have found Matlab quite powerful but the lazy in me wants a perfect out of the box set up. I have been trying to use EEGLab but was wondering if there was anything else out there. Thanks btw!
Cooley-Tukey is fastest for powers of two. There is a wide range of other algorithms, which are best suited for different situations and platforms. I don't know what Matlab does exactly, but I've used the FFTW library before, and trying to understand exactly how it chooses the appropriate algorithm is not a straightforward task. FFTW will build a large database about optimal algorithms on your particular machine, if you let it. My point is just that there are a lot of factors, and there may not be a single, satisfying answer to your question.
Can you not use meshgrid?
Out of the box tools are great and there's no point in reinventing the wheel! That said though, you learn loads building your own visualization tools. 
you guys are so badass. i dont even understand this post
&gt; I'm having a problem You need to actually tell us the problem. We know there is an issue, otherwise you probably wouldn't be posting here...
if you do this: x= [1 2 3 4 5]; idx = [1 0 0 1 1]; y = x(idx); then you will see that y is [1 4 5] because the 1's in idx select which elements of x are used for y. That's the basic definition of logical indexing.
Assign it? What are you talking about?
I'm sorry, my mistake. I'm just trying to figure out what is going wrong with my code. The concept of nesting loops of different dimension really confuses me. I'm looking for help on adding and multiplying variables that contain different amounts of data. Or perhaps there's a better way to implement my code (that i'm not aware of) in order to get my desired calculation.
I'm not familiar with it. However, I'll do more research on it. Perhaps it'll work
You can just values to any array. You can also pre-allocate an array using the zeros command.
For example: Build an array with length of 300 elements. Now you will need to store 400 elements. Can the size be changed?
Note that even FFTW will be much slower if your signal is a large prime number, or the multiple of a few large primes. Not much of a way around it. 
It's a Matlab-y way of doing a 2D for loop. Generate two arrays representing all index pairs, and then do your math in a vectorized way on those arrays. If you can't vectorize your algorithm, that's when you look at bsxfun.
I'm afraid I have issues with your wording. If the surfaces are parallel, then are not all points equidistant?
It is very difficult to diagnose logic errors in code, especially in MATLAB. We know absolutely nothing about what you are trying to accomplish so finding the place you zigged instead of zagged is basically impossible. All I can really gather from the above post (and your last thread) is that it does a bunch of math that in theory represents some well thought out and valid science. What result comes out? What SHOULD come out? Can you narrow it down to a specific step where things go tits up?
That is one of the nice things about MATLAB. It handles all memory for you. You can just assign whatever size required at any point in time. Unfortunately, this is also one of the features that can make MATLAB extremely inefficient if abused. It is generally good advice to avoid growing matrices/arrays, especially if they are large.
Then how about collapsing them to 2d by only looking at max/min, find one coordinate and then find the other in the corresponding row/column? edit: disregard this comment.
I'm not sure I know what you mean.
Never mind. I didn't think about the possibility of the shortest distance not being perpendicular to the plane surface (not taking bumps into account).
To expound on /u/garblesnarky's post, logical indexing allows you to select only those elements of a matrix (or vector) for which a logical statement is true. Thus for a vector x, to only see those values that are not NaNs, you can do x(~isnan(x)). This works by creating a logical vector (~isnan(x)) that corresponds to the elements of x (i.e. same dimensions) and has true values for the elements you want to keep. You can also use this for assignment. For example, if you want to 0 out all of the negative elements in a matrix (or vector), you can do x(x &lt; 0) = 0. Again, this works because the x &lt; 0 yields an array of true/false values, which you then use to index into x where it is true, and set them to 0.
Just assign to elements 301-400 and it will dynamically resize. It's best to preallocate for speed, but it's legal to grow dynamically. 
ok these tips help me too 
The imwrite() function can be used in much the same way to create a .gif instead of a movie file. Here's a link from MathWorks support with an example: http://www.mathworks.com/matlabcentral/answers/94495
Imagine them as two plates stacked on top of each other. I'm trying to find the point at which they touch.
How do the matrices relate to the surfaces? 
The value of each element of the matrix represents the elevation at that point.
thanks. i really appreciate it
I am not completely sure what you mean, but this looks like this will do what you are trying to do: [values,row] = max(A-B); [~,centerX] = max(values) centerY = row(centerX) Although, I would imagine you want the minimum rather than the maximum...
The only cats you'll find here are N(y)aN cats...;)
You might want to stop using the word parallel in this way, it's not really accurate. And while "surface" isn't wrong, if you describe the two matrices as "height fields", your question will be a little more clear. Are you looking for the minimal distance between A and B, that is along a line perpendicular to the z axis (height axis) ? If so, then something like qm2umi's solution should work. Are you looking for the minimal distance, not constrained to a direction? Then it will take some more work.
It's offtopic now that we know what he meant, but: if by "surface" he actually meant to say "surface *segment*" (i.e., not infinite), then there's a family of pairs of points whose distance is minimal. 
You could only do that if you fit them to the exact same function. Then you would use [chi^2](http://en.wikipedia.org/wiki/Goodness_of_fit). R^2 only applies to a linear function (it is often misused). Basically, since your points are at different times, you will have to either interpolate to get them on the same time intervals, or perform a fit to the same function.
Oh wow! Thanks, I dont know how I missed that, new to this stuff!
Now you know the dangers of copying and pasting a bit of repetitive code then changing the one tiny thing that doesn't repeat ;)
What function are you using to make the movie from the individual tiff files? 
The code I'm using is : for i=FirstIndex:LastIndex %assemble file name to read formatSpecifier=strcat('%0',num2str(size(IndexString,2)),'g'); %create format specifier that will left pad with zeros FileIndexStr=sprintf(formatSpecifier,i); %create string of index part of file left-padded with zeros FileName=strcat(InPath,Prefix,FileIndexStr,InFileExtension); %assemble filename to open %read input file with current index a=imread(FileName); a=rot90(a); %rotate image by 90 CCW if MedianFilter % apply median filter (3x3) (value of MedianFilter assigned in Input section) a=medfilt2(a,[3 3]); %%%%Replace with Hybrid median filter end; %if MedianFilter a2=double(a); %./Flat; a2=a2(crop(2):crop(4),crop(1):crop(3)); %crop the image for display - note that image coordinates (x,y) and matrix indices (i,j) are reversed %display image as desired for a movie frame % imagesc(a2,[LowRange,HighRange]); imshow(a2,'DisplayRange',[LowRange,HighRange],'InitialMagnification',100,'Border','tight'); colormap(cmap); % axis image; % axis off; text(textX,textY,FileIndexStr,'Units','normalized','Color',textcolor,'FontSize',TextSize,'FontWeight',FontWt); % colorbar; %add frame to movie frame=getframe(gcf); %create frame from the current graphics figure MovieFile=addframe(MovieFile,frame); end %i=FirstIndex:LastIndex 
Yeah if you could go ahead and do your own homework that would be great. 
You need to paste your code into pastebin.com because this is very hard to read. 
I'm fairly certain you can just do... scatter3(x(:,1),x(:,2),x(:,3)); I'd think that function is vectorized.
Not sure why it would not work, is this what you need: syms a b c lm=[a+b^4, b^2, c ; b/a^2, b,c]; disp(subs(lm, [a b c], [1 2 3])); Or does it need to be symbolic? Here's another way: lettermatrix = @(a,b,c) [a+b^4, b^2, c ; b/a^2, b,c]; disp(lettermatrix(1,2,3));
1. Google "matlab covariance matrix" 2. Click first result
If you haven't defined a,b, or c before defining your matrix, matlab will reject it. If you want a function of three variables, look at /u/pt2091 's solution. 
The problem is the variable B is being redefined each time the for loop runs. So try something where it adds an index to the variable b for each new value. For example (bear with me, I am on mobile) : %before the for loop, add this variable N=1 %when you define B, write it like this: B(N)= %insert calculations %at the end of the each loop, add 1 to n to change the index N=N+1 End This will now create a variable with all B values after the program finishes. Edit: will fix formatting when I get on a real computer. Edit 2: The loop is not summing up the values, it is just only showing you the last one when w=3
You can use a [3D quiver plot](http://www.mathworks.com/help/matlab/ref/quiver3.html). My friendly advice is to also do a bunch of 2D plots with colors contours. I usually work with 2D velocity fields and I like to do a quiver plot on top of a contour plot. If I have x,y,u and v the code is something like that: figure hold on contourf(x,y,sqrt(x.^2+y.^2)) quiver(x,y,u,v); You could probably use subplots to add a nice figure with the 3 contour plots for your 3 component of your E field. I hope it helps. 
As others have said, you are calculating a new value for B each for loop, but you aren't saving any of the previous ones: &lt;your code up to %temp&gt; wvlg = 0.01:0.01:3; B = ((2.*pi.*h.*(c.^2)./(wvlg.^5))).*(1/.(exp((h.*c)./(wvlg.*k.*t))-1)); OR, if you are reqired to use a for loop: &lt;your code up to %temp&gt; wvlg = 0.01:0.01:3; for i = 1:length(wvlg) B(i) = ((2*pi*h*(c^2)/(wvlg(i)^5)))*(1/(exp((h*c)/(wvlg(i)*k*t))-1)); end These will both get you a nice blackbody curve when you plot(wvlg,B) 
Thank you very much for your help. This will probably help supply a better visual of the effect of the waves.
If you copied my code, your variable "w" for wavelength I've called "wvlg". Also, I just noticed that I was still using your "w" in my for loop above, I've edited it now to include my "wvlg" and either should work, as with the plot() command.
The exact matrix I would need is lm=[-2a-b, -b, -3b^2 ; 3a+b, b, 3b^2 ; 3a/b, 0, 4/ab ], but it gives me an "Error: Unexpected MATLAB expression." EDIT: I figured it out thank you, I just had to put * in between the multiplication
You have the equation for the line and can't find the slope and intercept?
Don't feed the pigeons!
Fixed!
you could use a custom [matlab function block](http://www.mathworks.com/help/simulink/slref/matlabfunction.html) (or s-function) and then trigger that 10 sec input based on the input to the block i.e. block is triggered and then spits out signal stored as .mat
What don't you like about your testing code?
Note: I had to alter the path to protect my identity and not dox myself. 
My error was: " Error using cd Cannot CD to path (Name is nonexistent or not a directory). "
So your path is wrong.
Thanks! that was the trick I was looking for. I knew there was a solution but I was stuck in the "I need to use this block" mindset. Now I hope it's going to work with the crappy simulink 6 I have to use.
The problem is `dirListing(n).name` is *only* the filename, not the path. You need: `filename = sprintf('%s\\%s', path, dirListing(n).name)`; EDIT: Oh, I didn't see you change to the directory in there. That should work, so I don't know what's going on. I would check to make sure the files are where you think they are. Also, it wouldn't hurt to specify the absolute path the way I do.
There are a few ways to do this. One way is to use [find\(\)](http://www.mathworks.com/help/matlab/ref/find.html) to return the indices of your time vector that meet certain conditions. See example 5.
Sorry, example 5?
Click the link
Oops, didn't even see that somehow. So I would do find(t &gt;= 1.5 &amp; t&lt;= 3.5), which would return the indices. But then would I not need to have another function to plug those into? That was what I didn't understand.
No. You have the indices of t &amp; f, you can [address them directly](http://www.mathworks.com/company/newsletters/articles/matrix-indexing-in-matlab.html) to plot.
Okay I understand that, but how would I get the values of f that corresponds to what I indexed in t?
To clarify the last two lines would be ind =(t &gt;= 1.5 &amp; t&lt;= 3.5); plot(t(ind),f(ind)); Right?
i used FIND function
Looks ok. Does it give the answer you expect?
'path' is already assigned by matlab. You should not reassign it, just like one should not use 'i' for indexing a for loop. 'type' is also a built in function. Code: wav_folder = 'path_to_folder'; file_type = '*.wav' file_listing = dir(fullfile(wav_folder,file_type); for n = 1:length(file_listing) [y(:,n), fs] = audioread(fullfile(wav_folder,file_listing(n).name)); end
It appears the formatting is off.. I apologize
Just add a second fit and reuse the dataset. Doing this directly in the cftool is significantly easier. I'm sure it's possible with function calls how you are doing it, but I've never gone down that route myself so I can't be of much help. To make posts that don't look like someone passed out at the keyboard, put four spaces before each line of code. Add four additional spaces to indent. Or go the cool kid route and install Reddit Enhancement Suite and do it with the click of a button.
Thank you. Worked perfect.
Look at functions like dir, fileparts, fullfile, etc. What are the names of your folders? Do you know which file is in which folder? I'm thinking something like this: foldernames = {'Folder1', 'Folder2'}; for foldernum = 1:length(foldernames) AllFiles = dir(fullfile(foldernames{foldernum}, '*.tif')); for imagenum = 1:length(AllFiles) I = imread(fullfile(foldernames{foldernum}, AllFiles(imagenum).name)); % do your stuff here end end Another option is to just add all of the data folders to MATLAB's search path and then you can just access the files by name regardless of where they are.
Something like this, maybe. &gt;&gt; t = 0:.5:9.5 &gt;&gt; t = t' t = 0 0.5000 1.0000 1.5000 2.0000 2.5000 3.0000 3.5000 4.0000 4.5000 5.0000 5.5000 6.0000 6.5000 7.0000 7.5000 8.0000 8.5000 9.0000 9.5000 &gt;&gt; M = [t rand(20, 5)] M = 0 0.8147 0.6557 0.4387 0.7513 0.3517 0.5000 0.9058 0.0357 0.3816 0.2551 0.8308 1.0000 0.1270 0.8491 0.7655 0.5060 0.5853 1.5000 0.9134 0.9340 0.7952 0.6991 0.5497 2.0000 0.6324 0.6787 0.1869 0.8909 0.9172 2.5000 0.0975 0.7577 0.4898 0.9593 0.2858 3.0000 0.2785 0.7431 0.4456 0.5472 0.7572 3.5000 0.5469 0.3922 0.6463 0.1386 0.7537 4.0000 0.9575 0.6555 0.7094 0.1493 0.3804 4.5000 0.9649 0.1712 0.7547 0.2575 0.5678 5.0000 0.1576 0.7060 0.2760 0.8407 0.0759 5.5000 0.9706 0.0318 0.6797 0.2543 0.0540 6.0000 0.9572 0.2769 0.6551 0.8143 0.5308 6.5000 0.4854 0.0462 0.1626 0.2435 0.7792 7.0000 0.8003 0.0971 0.1190 0.9293 0.9340 7.5000 0.1419 0.8235 0.4984 0.3500 0.1299 8.0000 0.4218 0.6948 0.9597 0.1966 0.5688 8.5000 0.9157 0.3171 0.3404 0.2511 0.4694 9.0000 0.7922 0.9502 0.5853 0.6160 0.0119 9.5000 0.9595 0.0344 0.2238 0.4733 0.3371 &gt;&gt; [R, C] = max(M(:, 2:end)) R = 0.9706 0.9502 0.9597 0.9593 0.9340 C = 12 19 17 6 15 &gt;&gt; M(C) ans = 5.5000 9.0000 8.0000 2.5000 7.0000 
 [values, positions] = max(c(:,2:end)); times = c(positions,1)';
Wait, you can give a matrix a row vector like that and it'll show the values? I've been crunching numbers in Matlab for years and never knew this. edit: Cool. Got it to work.
It's a linear index. Super useful. http://www.mathworks.com/help/matlab/math/matrix-indexing.html#f1-85511
You could just iterate for each Vbi until convergence - a brute force solution. EDIT: You also forgot a closing parentheses somewhere in the denominator.
Linear Methods for Classification?
Hint: delta = eta &lt;/thread&gt;
I am sure someone here can help you, but you need to post a.) the question and b.) what you've accomplished so far. 
I was sitting at my desk this morning, when I heard from out in the hallway someone call, "Help!" Slightly alarmed and immensely curious, I replied, "What's the matter?" "I need help," came the reply. I pondered this response for a while. My question clearly indicated that I was aware he needed help. I simply could not understand why he would repeat this fact despite my acknowledgment of his need for help. My question was meant to enquire what kind of help was needed, and yet the response gave me no indication whether whatever assistance I could offer would be useful or meet the needs of this distressed individual. I concluded, that absent more information about the problem, I was not likely to be able to assist in any meaningful way and returned to reddit.
What don't you understand?
http://imgur.com/eyAfe6i
Task 3 wants you to call the function with the required arguments. Type the name of the function in your console window.
You need to show us what you have already done. 
Do you have parts 1 and 2 working? Part 3 is not difficult, the description practically tells you what to do.
Literal username is literal...
I've done everything up until task 3 where I got confused
Then please post the code or link to files.
Yes part 1 and 2 are working, the part that confuses me is where it asks to call the function from another function 
https://www.dropbox.com/s/0p36zfp9aa0yw86/CreateName.m https://www.dropbox.com/s/l4ir9idze3tnhcn/MyConvertor.m
 [output2] = fun2(time,speed) [output1] = fun1(output2,'linear') Function fun2 might take time and speed and determine the distance traveled. Function 1 might take some array, in this case the output from the previous function, or the output output2 from fun2, and use it as input to determine if, say, that input was linear. Your assignment description makes it pretty clear how to take this idea and use it in your context. Very clear, in fact.. *Edit: If you wanted to get *super* fancy, you could even try: [output1] = fun1(fun2(time,speed),'linear') provided that the output from one function can be an acceptable input to another (i.e. using the output which is an array where the input is an array, not using array output where input should be a string) Another hint, think of how you use functions within functions in math, how you perform one operation and pass it on to the next. Eg: y = sin(sqrt(x^2 + log(x+2))) You would add 2 to x, take the log, then add x^2, then square root it, then take the sine. Same thing with your assignment: do thing 1 to an image, pass it to another function where it will do thing 2, and so on...
should I combine the two differential equations?
- Mathworks website with some information regarding monte-carlo: http://www.mathworks.com/discovery/monte-carlo-simulation.html - Example from NDSU: http://venus.ece.ndsu.nodak.edu/~glower/ECE341/Lectures/04%20Monte%20Carlo%20Simulations%20and%20MATLAB.pdf - Example from CMU: http://www.cs.cmu.edu/~ggordon/MCMC/ggordon.MCMC-tutorial.pdf And those were just from a simple google search. If you are going to ask for help in this subreddit it is assumed that you have done as much independent research as possible before submitting. Posting code that you have already completed is good too. Look over some of the links above. 
It's just a name, brohaim!
thank you 
Try `null(A,'r')`. According to the [doc](http://www.mathworks.com/help/matlab/ref/null.html), it gives a "rational" basis for the null space with integer elements (if possible). Edit: as for why `null(A)` always gives decimals, it looks like it gives an orthonormal basis by default because it's preferable for computation.
Maybe someone else finds this clearer than I do, but I'm having some issue understanding your problem. So your vector DiWE contains 132 values, and you want to split this into a 12x11 matrix with values ordered according to month and year? &gt; annualDiWE = zeros(12,11); &gt; annualDiWE(:) = DiWE; Now you want to do what exactly? Place the values onto the days of the year? So since you have monthly measurements that means that you have 353 non-observations, i.e. 0 values, and 12 observations a year? Or am I missing something here? Is it the case that you need to figure out which time values correspond to which dates and plug the corresponding DiWE values in? 
This thread is not appropriate for /r/MATLAB, your question is homework and it can and should be done without MATLAB. Try /r/cheatatmathhomework. Also, I haven't ever taken a control systems class (I'm not even an engineer), I read the first few paragraphs of the first chapter of a control systems text book and I was able to answer everything. Thus, you may want to consider taking a linear algebra and differential equations course before taking a class on control systems, also try your TA or professors office hours.
For the first part... thank you - I did not realise the command was that simple!! Sorry if I didn't explain the second part clearly... I will try and work it out myself now anyway - sometimes it's just that first step which makes everything else possible!
aha! thanks
Just cleaning code up function fiveHundredCollatz startNumber = 2; len = 1; while ((startNumber &gt; 1) &amp;&amp; (len &lt;= 500)) if (mod(startNumber,2) == 0) startNumber = (startNumber / 2); elseif (mod(startNumber,2) == 1) startNumber = (3 * startNumber + 1); len = len + 1; end end startNumber = startNumber + 1; end You seem to be trying to loop through `startNumber` and modify it within the loop as well. That's almost certainly part of your problem. Also, it's not clear what your program is supposed to do when it hits 500 iterations.
I would like it to print the startNumber which causes the code to iterate 500 times. 
Four spaces at the beginning if each line. Plus a few more if you want to indent. 
One way to do it without using an iterative solution... Move the T to the RHS so you have a function of T and Vbi. Evaluate this over a meshgrid (help meshgrid in MATLAB) for the range of T and Vbi you are interested in. Then plot the zero contour of your results (help contour in MATLAB).
The issue is that you are trying to accomplish two different tasks at the same time and confusing the steps along the way. You want to: 1) Find the length of the collatz sequence for a given number 2) Find the first natural number whose collatz sequence length is greater than 500. I recommend breaking these tasks into two different functions. First write a function "collatzLength" that takes an integer and returns the length of the collatz sequence originating at that integer. Then write your "fiveHundredCollatz" function. This function should iterate through the natural numbers starting at 0 and find the "collatzLength" at each iteration. When a number with a length greater than 500 is found, you should break out of the loop and return that number.
Not going to pretend to understand how NIPALS works, but here a couple answers to your questions. X=(A-meanx(ones(10,1),:))./stdx(ones(10,1),:); This is just normalizing the matrix. Same thing as X=zscore(A); B=X'*X; **%I have no idea what is happeing here X'*X** ' means transpose. tol2=(1-0.95)*5*(10-1); **% Why not just .95? Probably he did this because 0.95 is the product of some equation, and when it is written out like this, you can change some part of it and not recalculate it by hand. Also, (1-0.95)*5*(10-1) is 2.25, so, thats another reason why not .95 [dum,idx]=max(sum(X.*X)); t=A(:,idx); **% idx?** Read the help for max. When you request two outputs, the second is the index at which the max is found.
Thank you I really appreciate it :)
&gt;X=(A-meanx(ones(10,1),:))./stdx(ones(10,1),:); %Why not just be (A-meanx./stdx)?** It is essentially doing what you think it should be doing. The extra syntax is required because A is size 10x5 and meanx and stdx are size 1x5. (A-meanx)./stdx , is an illegal operation because array dimensions must be the same for subtraction and elementwise division. &gt;B=X'*X; %I have no idea what is happeing here X'*X Write out the matrix multiplication and it should be pretty apparent what is happening here. If X = [ x1 x2 x3 x4 x5 ] where xi is a 10x1 column vector and if B is equal to X transpose times X then: B = [ dot(x1,x1) dot(x1,x2) ... dot(x1 , x5) dot(x2,x1) dot(x2,x2) .... .... dot(x5,x1) dot(x5,x2) ... dot(x5 , x5)]; &gt;tol2=(1-0.95)*5*(10-1); % Why not just .95? X is used to represent what is left over after removing the PC. If 95% is removed, then 5% remains.
Thank you, I really appreciate it. It makes a lot more sense now. I have two more questions, if that's okay. What is meant by "dum", I don't see it being a variable anywhere. Also, what exactly is MATLAB trying to do in the while loop to "normalize the eigenvector direction".
I did it! Thank you everyone for your help! function [goldenNumber, listLength] = gold increment = 2; i = 1; startNumber = 2; while (startNumber &gt; 1) if (mod(startNumber,2) == 0) startNumber = (startNumber / 2); elseif (mod(startNumber,2) == 1) startNumber = (3 * startNumber + 1); end i = i + 1; while (startNumber == 1) if (i &lt; 500) i = 1; increment = increment + 1; startNumber = increment; else goldenNumber = increment; listLength = i; break; end end end end 
He only wants the second output, the index, doesn't care about the actual value, so he is just assigning the first to a dummy/unused variable. [Another way to do this is with a tilde](http://blogs.mathworks.com/steve/2010/01/11/about-the-unused-argument-syntax-in-r2009b/)
Just fyi, you can copy all of the text in A and place it in B and call it from there. No need for 2 separate files if you're never going to separate them 
If I'm looking at this correctly, you want to call the FUNCTION in the B file. So instead of A; you'd have f=inputFunc() ; Also in the A file instead of saying to return test1 you want to return f and don't want to call B. Hope this helps. Also sorry about crappy formatting... On my phone
You might find [this discussion](http://www.physicsforums.com/showthread.php?t=602471) helpful. The restriction imposed by MATLAB on digit precision (15 significant digits) is not an arbitrary convention, but apparently a limitation inherent to MATLAB. If you want to be more precise than this (and you don't want to represent the numbers as a string), the link I provided recommends working with a lower level language.
You'll have to use [sprintf\(\)](http://www.mathworks.com/help/matlab/ref/sprintf.html).
Very cool link, thanks!
Can you give any sample code of what you're trying to do? Here are some examples of using format() and vpa(). &gt;&gt; digits Digits = 32 &gt;&gt; sqrt(2) ans = 1.4142 &gt;&gt; format long &gt;&gt; sqrt(2) ans = 1.414213562373095 &gt;&gt; vpa(sqrt(2), 50) ans = 1.4142135623730950488016887242096980785696718753769 &gt;&gt; format &gt;&gt; sqrt(2) ans = 1.4142 &gt;&gt; 
What's the over/under on what time they get a DMCA notice?
I think you are going to need to use a C compiler to build the binaries that will work on your platform. See additional information [here](http://www.mathworks.com/help/matlab/ref/mex.html).
You want to use [readtable](http://www.mathworks.com/help/matlab/ref/readtable.html) to get it in the form of a [MATLAB table](http://www.mathworks.com/help/matlab/tables.html). Note you need R2013b or later for this. &gt;&gt; t = readtable('data.csv') t = Date Value1 Value2 __________________ ______ ______ '11/12/2012 14:02' '###' '###' '11/12/2012 14:03' '###' '###' '11/12/2012 14:04' '###' '###' Then once you have the table you can use [datestr](http://www.mathworks.com/help/matlab/ref/datestr.html) to convert the date between different date formats easily.
I know Matlab has functions for logistic regressions, neural networks, and support vector machines (binary). You would have to find a toolbox for a Gaussian Process classifier (GPML or Netlab) or relevance vector machine.
Z seems to be non-invertible, or as MATLab says "close to singular". The det(Z) might be too close to 0 to use "/". There's another way to use the inverse of a matrix. I believe the command is inv(Z) Try this ... n1 = A*inv(Z) 
Considering it's last update is April 2013, the over/under would be resolved. We can do a pool for weeks, or months maybe.
The main problem is you're using the equivalent of a broken crayon (char) and trying to paint the Mona Lisa (a nice aligned table). Your two num2str() calls are the main culprits. The first one has a single column to work with so it makes that set of strings. They only contain the numbers given. The second call has two columns so num2str is nice enough to do a tiny bit of formatting. That is where you get the spacing for them but the butting up against effect for the first column. You also don't need to specify the string format (the '%15.6f') to num2str() it is smart enough to handle these things ;) Make this change: line1 = 'method xmin fmin'; line2 = '--------------------------------'; line3 = num2str([[1:3]', xmintab', fmintab']); product = char(line1, line2, line3); disp(product) and you'll be fine. Also tell your professor he is bad for telling you to use char() and num2str() rather than fprintf() or sprintf() and he should feel bad for doing so. 
Have you tried to reproduce this problem independent of the GUI overhead? You probably have but you haven't made that clear in your question.
http://www.mathworks.com/matlabcentral/answers/26326-simulink-scope-autoscale
Ahh, well alright. No luck with that, and I think to do it with inverse it'd actually be n1 = inv(A)*Z. Either way, the determinant is on the order of 10^-12 so MATLAB doesn't want to play nice with it. Thanks anyways!
inv will give you an even worse answer. MATLAB is trying to tell you that the answer you are getting is basically numerically bogus. Most likely either A was formed incorrectly or the calculation you are trying to perform is not valid for this set of inputs.
I think you discovered a bug in `num2str`. These two should have identical behavior (right?), and they clearly don't: &gt;&gt; sprintf('%15.0f',1) ans = 1 &gt;&gt; num2str(1,'%15.0f') ans = 1 anyways, what matuba said
The error I am getting is "??? Attempt to execute SCRIPT yin\private\rsmooth as a function: C:\Users\David\Desktop\Fifth Year\Thesis\yin\private\rsmooth.m" I am pretty sure I am using 32-bit Matlab. Is there any other reason why it wouldn't be working?
Leading whitespace padding is not supported by "num2str". See the "more about" entry in the [documentation](http://www.mathworks.com/help/matlab/ref/num2str.html). &gt;num2str trims any leading spaces from a string, even when formatSpec includes a space character flag. For example, num2str(42.67,'% 10.2f') returns a 1-by-5 character array '42.67'. You should use "sprintf" instead. 
I should add, the ans=value is one of the output parameters. though again, I haven't asked it to display it.
I''m not sure if it is intentional or not, but Z is a vector of all zeros. So you're solving: 0 = A n1 In that case, n1 is the null space of A, given by n1 = null(A) 
Thanks for the suggestion. I wish I could say I had already attempted to do something so obvious. However, I have only looked at possibilities that don't involve the least bit of coding (ha!). Mostly, I've never had a problem like this in the last 7 years I've been using Matlab. And I only recently started using GUIDE and made this GUI. I'll compile the functions in a script tomorrow and see what happens.
ok, So in this case it's a variable I called r that's showing up. in the file, I have r=sqrt(x^2+y^2); Shouldn't the semi-colon suppress it?
It's intentional, in trying to find principal planes of a given stress tensor you take the 3x3 stress matrix, subtract the eigenvalues of that matrix from the trace elements, and solve the equation sigma_new * [n1; n2; n3] = [0; 0; 0] where ni represents the normals to the principal planes. 
Tell your professor that num2str is stupid and that you should use fprintf/sprintf.
Oh the inherent limitation makes perfect sense. For some reason, I believed MATLAB could go above memory constraints. Thanks a bunch! This explains why my numbers are slightly skewed.
Though geebeb pointed me in the right direction, I'll post the code anyways. (Be kind, I'm still new at this.) I'm trying to set up a function to convert IEEE754 Double precision 64-bit to decimal. The result tends to round at the 15th decimal place. function [ d ] = bin_to_dec( b ) s=b(1); c=0; f=0; for jj=2:64; if (jj&lt;=12) c=c+b(jj)*2^(10-(jj-2)); else f=f+b(jj)*2^(12-jj); end end d = ((-1)^s)*2^(c-1023)*(1+f); end edit: I'm satisfied with knowing that I'll have to use another language. Just wanted to see if it were possible.
They took away minesweeper but I will always have this
A thousand times this. 
Bah, speed redditing strikes again. I just noticed one is a sprintf() and the other is a num2str(). Ignore my comment above :x Today has not been a good day for my attention to detail. The first one is the proper output. You have specified a field width and MATLAB is adhering to it. The second one (the num2str()) is fubar because it is completely ignoring your field width specifier (as /u/Avonalt pointed out earlier). Who knows hwy it behaves that way So definitely not a bug, just another 'friendly' feature. At least it is publicly documented! You are correct in that they _should_ behave similarly though, so you have that going for you which is nice! 
Initialize you variables as symbolic variables, e.g. syms x y z or whatever you want to call them. Then, just create your matrix the way you normally would, A=[sin(x) sin(y) ; .... ], and use the inv, *, etc. operator. I have not used the symbolic toolbox in a long time so if I am wrong, please correct me.
I really love plotly, it's a shame I can't use it for work
Did you check in both the script that &lt;some script commands&gt; [funout] = fun(funin); &lt;some script commands&gt; the function call has a semicolon, and every instance of funout in that script, AS WELL AS in the function fun: [output1] = fun(input1) &lt;function definition&gt; return to check that any instance of output1 also has a semicolon?
What happens if you just try and plot a line?
See: [Undocumented Matlab: HTML Support](http://undocumentedmatlab.com/blog/html-support-in-matlab-uicomponents/)
Im pretty sure you want to determine the eigenvectors which correspond to the eigenvalues. You can use this: [eigvec1,Principal1] = eig(sigma) eigvec1(:,1) % &lt;-- first eigenvector corresponding to eigenvalue 1: Principal1(1,1)
I know what it's supposed to be. I'm trying to troubleshoot without having matlab in front of me.
Easy way: while loop checking type until they get it right. Better-ish way: try/catch statements.
I guess ss2tf only works for SISO. You can get the 4 tfs (one from each input to each output) doing for example this: SS=ss(A,B,C,D) TFs=tf(SS) If you need the num and den in arrays, do this: [num_TF11,den_TF11]=tfdata(TFs(1,1),'v') [num_TF21,den_TF21]=tfdata(TFs(2,1),'v') etc Or: [NUM,DEN] = tfdata(SS,'v'); numTF11 = NUM{1,1}; etc 
you have a mimo system thus you need to supply the additional argument of iu to the ss2tf function so if memory serves [NUM1,DEN] = ss2tf(A,B,C,D,1) %input 1 [NUM2,DEN] = ss2tf(A,B,C,D,2) %input 2 see this [link](http://studzone.pp.ua/files/Group_1/Lab_3_engl.pdf)
You could accept the user input as a string, as the user again to input if it was a string or number, and then convert to a number, str2num(): uin = input('enter something ....'); utp = input('enter "s" for string, "d" for number'); if strcmp(utp,'d') uin = str2num(uin); end May be more round-a-bout of a way, but it would get what you want done. But this may bring about more issues than you want, as the user can enter anything. So on the second input() call, they may enter "j", or "z", or "gofuckyourselfimgoingtobreakyourcode"... You would then need another "if" statement to check if their input was acceptable and keep them in a loop of entering things until it is acceptable or have an error message that warns them to play nice and then terminates the script/function and they have to start over again.
http://www.mathworks.com/discovery/object-oriented-programming.html
yes you're right, it supposed to be fsolve (fa,t), I made a typo. I can't believe I forgot about the loop variable as well. Thank you so much, the code is running faster now.
awesome, I think I found a way of doing it. Thanks a lot 
Cubic equations can be solved analytically in Matlab (you need the symbolic toolbox to get the expressions or just copy &amp; paste them from somewhere). However, due to limited precision this can lead to incorrect results if some of the coefficients are very large or small. In that case, "roots" should be the function to use. Here is an example code for both. Note the inherently vectorized analytic solution is more than 10x faster than using roots. %% solve cubic equation symbolically syms A B C D x; sol = solve(A*x^3+B*x^2+C*x+D == 0,x); %% create vectorized expressions sol1 = vectorize(sol(1)); sol2 = vectorize(sol(2)); sol3 = vectorize(sol(3)); %% create random coefficients nTestCoeff = 100000; A = rand(nTestCoeff,1); B = rand(nTestCoeff,1); C = rand(nTestCoeff,1); D = rand(nTestCoeff,1); %% solve analytically tSymb = tic; resultsAnalytic = [eval(sol1) eval(sol2) eval(sol3)]; tSymb = toc(tSymb); display(sprintf('Analytic solution of %i cubic equations took %2.2f s.',nTestCoeff,tSymb)); %% calculate results via 'roots' resultsNumeric = zeros(nTestCoeff, 3); tNum = tic; for k=1:nTestCoeff resultsNumeric = roots([A(k), B(k), C(k), D(k)]); end tNum = toc(tNum); display(sprintf('Numerical solution of %i cubic equations took %2.2f s.',nTestCoeff,tNum)); 
It would be better if he confirmed it was a number with a following input, then convert the char
 for i=1:3 A(i,i) = sigma(i,i) - Principal1(1); B(i,i) = sigma(i,i) - Principal1(2); C(i,i) = sigma(i,i) - Principal1(3); end Here you are forcing one eigenvalue of A, B and C to be zero. The problem is with what the hell you are attempting to do, not Matlab. 
To find principal planes of stress, you're supposed to solve stress_matrix * column_vector = column_vector_of_0s % where column_vector are the normals to the principal plane. % stress_matrix is the original stress matrix with the trace %elements being the original value - an eigenvalue. % Using the 3 eigenvalues will yield 3 principal planes 
I feel bad for the sidebar. It is the must be the most ignored feature of reddit :(
I feel even worse for the help documentation. That's how i learned everything.
Take a look at the sidebar at /r/matlab
G=tf(ss(A,B,C,D)); Then the numerator and denominator coefficient vectors are in the G.num and G.den cell arrays. 
It's been a while but it may have something to do with the \ command. 
that would be true if the system is linear but it isn't e^-x(1) and e^-x(2) makes it nonlinear
Hey, I haven't forgotten about this, but I just haven't had a time to go back an implement this in my code/see if it works. I'll let you know when I do! Thanks!
Maybe post some code of where you've gotten to so far.?
Visually, you are starting with this [ ], and you are looking for this [+]. You are turning one big block into four little blocks. Personally, I would set A = RAND(1000,1000) like you have, but then I would take A1 = top right, A2 = top left, A3 = bottom left, and A4 = bottom right. Then you have your original 1000x1000 split into four boxes of 500x500 matrices. Or arrays, whatever you want to call them. From this, apply the definitions to find the mean, median, and standard deviation of each block. 
Thanks for your response. Also, If I find the mean, median, and standard deviation to each block, won't all the answers be the same?
The Rand function in matlab will assign each element in the array as a number between 0 and 1 (non-inclusive). Since these numbers are uniformly distributed, it is likely that you will see a similar mean, median, and SD for each block. Look at [this](http://www.mathworks.com/help/matlab/ref/randstream.rand.html) and [this](http://en.wikipedia.org/wiki/Uniform_distribution_%28continuous%29).
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Uniform distribution (continuous)**](http://en.wikipedia.org/wiki/Uniform%20distribution%20%28continuous%29): --- &gt;In [probability theory](http://en.wikipedia.org/wiki/Probability_theory) and [statistics](http://en.wikipedia.org/wiki/Statistics), the **continuous uniform distribution** or **rectangular distribution** is a family of [symmetric](http://en.wikipedia.org/wiki/Symmetric_distribution) [probability distributions](http://en.wikipedia.org/wiki/Probability_distributions) such that for each member of the family, all [intervals](http://en.wikipedia.org/wiki/Interval_(mathematics\)) of the same length on the distribution's support are equally probable. The support is defined by the two parameters, a and b, which are its minimum and maximum values. The distribution is often abbreviated U(a,b). It is the [maximum entropy probability distribution](http://en.wikipedia.org/wiki/Maximum_entropy_probability_distribution) for a random variate X under no constraint other than that it is contained in the distribution's support. &gt;==== &gt;[**Image**](http://i.imgur.com/4PvL0Vr.png) [^(i)](http://commons.wikimedia.org/wiki/File:Uniform_Distribution_PDF_SVG.svg) --- ^Interesting: [^Maximum ^likelihood](http://en.wikipedia.org/wiki/Maximum_likelihood) ^| [^Probability ^theory](http://en.wikipedia.org/wiki/Probability_theory) ^| [^Uniform ^distribution ^\(discrete)](http://en.wikipedia.org/wiki/Uniform_distribution_\(discrete\)) ^| [^Probability ^density ^function](http://en.wikipedia.org/wiki/Probability_density_function) *^\/u/New_Stupid_Agency ^can ^reply ^with ^'delete'. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less.* ^| [^(FAQs)](http://www.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/) ^| [^flag ^a ^glitch](http://www.reddit.com/message/compose?to=/r/autowikibot&amp;subject=Glitched comment report&amp;message=What seems wrong: (optional description goes here\)%0A%0A---%0A%0AReply no. 50804:%0Ahttp://www.reddit.com/r/matlab/comments/1xh3i8/dont_understand_rand_function_beginner/cfbcdlt)
Oh okay, I understand you. but how come when I run A1 = mean(rand(500,500)) it doesnt give me 1 number. It gives me a whole bunch. For example: "Columns 485 through 488: 0.5225 0.5034 0.4567. 0.4631" and it does that for all the rows
hold on should go after your figure call, not down in the loop.
That does not do what you think it does. It is going to give you the minimum value in A (now stored in A which is a bad idea) and the index at which it occurs (stored in B). It will do nothing for your vector B. You need to take the index returned and use it to get the value out of B. It is widely considered a Bad Idea to have the outputs named the same as the variables you are working on. It gets messy and confusing to keep track of. My statements above make very little sense because the As and Bs can be viewed as referencing two different ideas depending on when/where they are mentioned. Along a similar vein: why are you renaming your vectors from P and v to A and B when asking questions about them? This is only going to lead to confusion. Call them what they are: P and v. Throwing A and B into the mix does not simplify anything. 
You want to solve the points when both equations hold so you provide solve with these equations with a comma in between the equations. syms x y [X,Y]=solve((x-1)^2 + y^2 == 16, (x-5)^2 + (y-1)^2 == 2,x,y) The result (X and Y) is in symbolic expressions, if you want to have them in decimal values use double() on X and Y.
Thanks for your reply! I was using A and B instead of P and v because I wanted to simplify it down but then when I came to post my question it said include information to allow others to reproduce your issue, so I pasted in my code for the variables and as you say, this makes it look confusing so sorry about that! I'll also pay note to the naming of variables, not to worry, I can sort that. And now you've explained that it presents me with the index of the minimum value of P within the vector, as it was outputting 15, which is the index of the minimum but didn't occur to me. How do I got about using this index to find the value of v at Pmin? Any help would be appreciated and I apologise for my errors in the original explanation, still a relative novice and what I learnt last semester has slipped from my brain over the Christmas break! 
Each value of P relates to a value of v does it not? P = f(v)? So if the minimum is at the 15th value in P it stands to reason that the 15th value in v caused it. So... grab that item from v and you're in business.
Is there a matlab command that can call that value of v?
Common sense strikes again! Glad you are on the way.
There may be more efficient methods, but this works I think: len = length(TargetVector); index=[]; for ii=1:length(MyCellArray) cur_array=MyCellArray{ii}; for jj=1:length(cur_array)-len+1; if cur_array(jj:len+jj-1)==TargetVector index=[index;ii]; end end end
Thank you so much! I really was stumped on how to plug it all in the solve function.
 matches = cellfun(@(c) length(c)==length(target) &amp;&amp; all(c==target), MyCellArray) The trick is to use the `&amp;&amp;` short-circuiting trick to avoid comparing vectors of different lengths. If you really want indices rather than logicals you can do: find(matches)
Is there any reason why you've choosen to plot the Xn as these rectangles? What is wrong with a simple plot() for the lines?
I guess what I was getting at is why not use 3 subplots all using the plot(), is there any constraint stating that it needs to be "pretty"? **K** eep **I** t **S** imple **S** tupid, in honor of Valentine's Day.
Well, I'll resort to what I effectively can do if I find no answer. I posted mainly asking for advice on possible solutions. While we're at it, it's important that the length be visible. Given that I have a variable for the position of the front (Xn), a var for the lenght (car-len) and another for the width (car_w), how can I show them as two vertical lines using plot()? Or perhaps one very thick line?
You're problem is that an image define the pixels for the entire plot area. So everytime you perform a new imshow, you're overwriting every pixel in your plot. You're going to have to figure out some way to convert your BW image into only an outline or add some sort of transparency. 
Just to be clear, I'd like to be able to call sliderExample() elsewhere and have the currently-chosen sample_size returned. Would the solution be to add a button that closes the window and somehow returns? 
Yes. Listen to matuba. For anyone who wants to read the code, I've fixed it %Reading in the original image and converting it into grey, also adding %noise to the image P = rgb2gray(imread('Lenna.png')); noisy = imnoise(P,'salt &amp; pepper',0.08); I1 = [P]; I1 = 255*mat2gray(I1); figure(2), imshow(noisy) %Producing the FFT of the noisy image fft = fft2(P); absfft = log(abs(fftshift(fft))); absffts = [absfft]; absffts = 255*mat2gray(absffts); %Plotting the noisy image and its FFT alongside one another combined = [noisy absffts]; figure(3); imagesc(combined); axis image; colormap gray; axis off %Attempting the inverse of the noisy FFT and plotting it all alongside one %another. invfft =ifft2(absffts); % absinv = log(abs((invfft))); % absinvs = [absinv]; % absinvs = 255*mat2gray(absinvs); newcombined = [noisy absffts invfft]; figure(4); imagesc(newcombined); axis image; colormap gray; axis off
Found a workaround using `surf` instead of `imshow`: I = imread('rice.png'); BW = im2bw(I, graythresh(I)); [B,L] = bwboundaries(BW,'noholes'); area = regionprops(L,'FilledArea'); [xx, yy] = meshgrid(1:size(L,2)); for k = 1 : length(area) if area(k).FilledArea &gt; 100 temp = zeros(size(L)); temp(L==k) = 1; surf(xx,yy,temp); hold on end end colormap gray shading flat view(0,90)
Thanks for the &amp;&amp; idea, didn't think of using that operator in the cellfun call. However, the code you posted doesn't quite do what I need. The length comparison excludes the instances I am searching for, and the 'all' command forces an exact match. I would need a 'hit' on an example like this: MyCellArrayElement = [4 5 6 7]; target = [6 7]. They are different size, and target doesn't contain '4 5', but since it contains '6 7', it IS a positive hit. Note - I need the target to be an 'exact' match, so that 6 and 7 have to be beside each other in the MyCellArrayElement, so the following would NOT be a hit: MyCellArrayElement = [ 4 6 5 7]; target = [6 7];
Thanks!! That doe's do exactly what I need. My only concern is the nested for loops. I will be running this code on extremely huge Cell Arrays, and I will be running this operation itself from a long loop...so I was hoping to get a very optimized/vector implementation. However, it seems to be very tricky to figure out how to do that so I might have to try with this loop and see if it's fast enough.
Ah. Check out `strfind`.
I tried that before and got pretty close but didn't quite get it working how I needed. Perhaps I'll try again!
What does the data file look like? What happens when you run this?
Nearly, but this only seems to catch them if the target is at the start of the vector: MyCellArray={[4 5 3], [1 4 5 6], [1 2 1 4 5], [2 1 3], [4 5 2 1]}; target = [4 5]; hits = cellfun(@(c) ~isempty(strmatch(target, c)), MyCellArray) Expected result = 1 1 1 0 1 Actual Result: 1 0 0 0 1
You could vary the size of y based on its value. You could vary the color of y based on its value like transform beta, theta, and phi into some value in RGB space and use that for the markercolor for y.
Nope, strfind looks for an 'exact' match (including length, so not anywhere in vector but full vector). strcmp also doesn't work in this scenario. So close, but no cigar. That is why I've spent hour on this...it seems like something matlab should be able to do fairly easily, but just can't quite get there.
Woop I think I found it...the magic ingredient was strtok MyCellArray={[4 5 3], [1 4 5 6], [1 2 1 4 5], [2 1 3], [4 5 2 1]}; target = [4 5]; hits = cellfun(@(c) isempty(strtok (target, c)), MyCellArray) hits = 1 1 1 0 1 Thanks for pushing me back in the right direction!
Strange, it just worked for me on your second test set. What version of matlab are you using?
Who the hell stores data in Rich Text Format? 1990 called, they want their file extension back! More serious answer: using load() on a plain file is not going to work due to the header information at the top of your file. It is far from a robust command when used with a plain text input and will only work with a very very specifically formatted input file. You need to look into using direct file I/O commands (fopen, fread, fgetl, textscan, fscanf, and a host of others). load() is intended for use with .mat files generated by MATLAB with the save() command. http://www.mathworks.com/help/matlab/low-level-file-i-o.html http://www.mathworks.com/help/matlab/text-files.html Those will get you started. There are examples everywhere in the documentation. Take advantage of that. 
The middle one, but it should be: hits2 = cellfun(@(c) ~isempty(strfind (c, target)), MyCellArray) Note `c` and `target` are switched. 
At the very least, op should check out csvread as well
Yeah, I'm working on a mac and the text editor uses rich text format to default save. I figured out how to save it .txt and ended up finishing the program. I'm not too proficient with MATLAB yet, so all the advice and resources you've provided are super helpful. Thanks!
What about: &gt;v = 50:2:350; myargs = [1.2,2.3,3.5]; myrange = 10:2:564; thirdarg = 122.6; A = zeros(length(myargs)*2,1); % length x 2 since you have both A1 and A2 per iteration a_count = [1,2]; &gt; for j = 1:length(myargs) P = POLD(myarg(j),myrange,thirdarg) + PONL(myarg(j),myrange,thirdarg); D = DRLD(myvarg(j),myrange,thirdarg) + DRNL(myvarg(j),myrange,thirdarg); [p1,p2] = min(P); [d1,d2] = min(D); A(a_count) = v([p2,d2]); a_count = a_count + 2; end There might be some really daft mistake in there somewhere, but have a go at debugging it if it doesn't work. Something notionally like that should do it. This is what for loops are for. You can specify a list of arguments (e.g. in myargs) and just have the code loop over the same code multiple times by just changing the one argument (or more if you need to, of course). EDIT: Fixed a syntax fail.
Since it looks like you are only changing one argument between the method calls, you could probably wrap it all in an anonymous function. P = @(n)[POLD(n,10:2:564,122.6) + PONL(n,10:2:564,122.6);DRLD(n,10:2:564,122.6) + DRNL(n,10:2:564,122.6)]; [unused,i] = min(P(1.2),[],2); A1 = transpose(((i-1)*2)+50) [unused,i] = min(P(2.3),[],2); A2 = transpose(((i-1)*2)+50) Or you could make a multi-line function for the whole thing: function [Pmin,Dmin] = getMins(n) [unused,i] = min([POLD(n,10:2:564,122.6) + PONL(n,10:2:564,122.6);DRLD(n,10:2:564,122.6) + DRNL(n,10:2:564,122.6)],[],2); i = ((i-1)*2)+50; Pmin = i(1); Dmin = i(2); end To replicate your output you would type: [A1,A2] = getMins(1.2); [A3,A4] = getMins(2.3); Note, everything above assumes POLD, PONL, DRLD and DRNL return row vectors, if they return column vectors you'll need to modify the above code a lil' bit.
[assignin\(\)](http://www.mathworks.com/help/matlab/ref/assignin.html) can be used to define a variable in a specific workspace. For example, if you change your callback function to: function slider_callback(source, eventdata) sample_size = round(get(source,'Value')); hist(randn(sample_size,1),20); set(value_text,'String',num2str(sample_size)); assignin('base','sample_size',sample_size) end It will return the sample size to the base MATLAB workspace like it would if it was the output for the main function. I'm not sure if this is necessarily what you want. If you're using the value for other calculations in some larger function, you may be better off pulling the value from the slider when you need it. 
I had a feeling that it was something to do with imshow() I'm about to get to a computer to try this out. Thank you very much. 
Winner winner chicken dinner! Those are the two 'accepted' methods for correcting salt and pepper noise. Since it is comprised of sharp impulses, the noise lives entirely in the highest frequency portions of your FT results. You can remove it by either attenuating those frequencies or removing them entirely, that is for you to tinker with. The drawback with that is you are going to degrade your image slightly with the removal of that high frequency content. Overall it is going to become slightly smoothed/blurred. That is where the other option comes into play: median filtering with a very small window. It will also knock out the s&amp;p noise but preserve more of the sharp defined edgess within your image. There will still be some smoothing but not nearly as drastic as the FT filter. Typically low noise gets median filtered, higher noise gets the frequency filter treatment.
dlmread() maybe, but not so much csvread(). Why Mathworks decided to add csvread() is beyond me. It is just a wrapper for dlmread(). API bloat at its finest!
Just thought i'd let you know, in case you were curious. I ended up using a mask instead of surf. It also turned out that the Filled area wasn't the right regionprops either. solid = regionprops(L,'Solidity'); %% loop de loop mask=zeros(size(L)); figure; for k=1:size(area) if (solid(k).Solidity &gt; 0.45 ) mask=mask+(L==(k)); end end imshow(mask&gt;0); But once again, thank you for the advice.
&gt; I tried using 'caller' in place of 'base' and that didn't keep it in sliderExample() either, I assume that nested functions are special somehow. Because the caller is the GUI, not your function. MATLAB functions are, by and large, procedural constructs; they execute step-by-step. Once your function runs &amp; generates the figure window it's completely done running. GUIs are event driven and the callbacks execute within their own scope (along with whatever inputs you add), they're not going to return anything to the base workspace unless it's explicitly stated.
Relevant username. Have an internet point.
Exactly my point. Thanks for saving me what... 4 characters? There are a few other commands with similar marginal added value. At the same time there are a few that are useful. Like semilogx/semilogy/loglog etc that do some nice adjustments for plotting that would otherwise be tedious. I think someone just got carried away and took the idea too far.
Awesome. And yeah, I like your solution better than using `surf`. It was just all I could come up with quickly =).
What's even more interesting is that dlmread is just a wrapper for textscan. Albeit, a fairly sophisticated wrapper.
We need to go deeper! This is more of an example of a justified abstraction. Lots going on in there!
Ran some tests again...this is the best solution. Thank you!
I have very little experience with MATLAB's OO implementation. Mainly because the few times I tried it I ran into similar issues as you: mystery bugs and confusing behavior. The headaches were not worth the gains for what I was doing so I moved on with my life! That said, adjust your function definition to function t = testing(obj, m) and you will be good to go. Your call will be absolutely the same te = test; te.testing([0 1]) and will return the expected transposed version of the argument. MATLAB expects an object to work on as one of the arguments, even though it isn't used. Using the te.testing(arg) format is the same as testing(te, arg) if that helps make it any clearer. Best of luck with the transition! There may be a better solution/explanation that adheres to better practices. Please investigate further as I may only be partially correct here. 
The first argument to an object method must be a reference to the object itself. Python is similar if you've used that. Java handles this for you with the `this` keyword.
Use logical indexing. For example if you're matrix is `Data` you might do the following to plot those magnitudes between 5.5 and 6: inRange = Data(3,:) &gt; 5.5 &amp; Data(3,:) &lt;= 6.0; plot( Data(1,inRange), Data(2,inRange), 'ko'); Then just loop over ranges and color specs.
While, you are using Matlab to do your simulation, your question is really about the algorithm used by your simulation. That is, you're asking a fairly high level electromagnetism question not really a Matlab question. You might want to try /r/physics or /r/ElectricalEngineering
If it is lat long values, have you considered using GMT (generic mapping tools)? It's brilliant at these things.
Matuba's comments are on the money. The key takeaway is that when you invoke a method with "dot" notation, the first input argument to the method is implicitly the object itself. Thus: out = te.testing([0 1]) is equivalent to calling the testing method of te with functional notation: out = testing(te,[0 1]); This is discussed here: http://www.mathworks.com/help/matlab/matlab_oop/ordinary-methods.html#brd2n2o-2
See [here](http://floating-point-gui.de/).
Thank you. Exactly what I was looking for
use scatter(a(:,1),a(:,2),[],a(:,3))
From what I can decipher, the logic for your while loop should be while i &lt;= n Try that and report back. 
But I am getting output like this. 0 0.3723 1.1605 2.8290 6.3614 I just need 6.3614. How can i do that?
Do you only want the last one? You could do something like lastNumber = Result(length(Result));
Doesn't work. Same output. 
Did you update the output argument? Change the function declaration to: function lastNumber = Composite_Gauss(a,b,n,f)
Do what /u/Avonalt said, or change Result to be a value instead of a vector by declaring it as: Result = 0; and changing your computation line to: Result = Result + (feval(f,odd) + feval(f,evn))*H;
WORKS! Thanks you guys.
Thanks. Yes, that would work, there is another way to do it, too: lastNumber = Result(end);
I knew there was something for this, but I didn't remember it. Thanks!
The sidebar is over there ---&gt; It covers everything you need. The documentation is also a great place to start. Topics you will find relevant to your interests: writing a function and logical indexing.
x=sym('(x-1).^2 + y.^2 = 16'); z=solve(x, 'y') Our professor gave us a powerpoint to look at that had a similar problem. The way he solved it was similar too the way I've set it up. Also, there was more to the code than this, I just cut it out because I was trying to resolve the error in the first line. 
Check out the [doc page on solve](http://www.mathworks.com/help/symbolic/solve.html). The second example demonstrates how to solve a question very similar to your own. 
This is a good reference, though what is the difference between sym and syms?
The following two commands are equivalent: syms a a = sym('a') syms is less robust though. It just makes symbolic variables. sym() has a few more bells and whistles. Poke through the docs and Google for more details.
Please don't do this. Show the answer and all code for others to see. 
Eek sorry.
And this is how you vectorize the above code. It will be an important skill for more advanced Matlab programming. function result = composite_gauss(a, b, n, f) h = (b-a)/n; x = a:h:b; odd = x(1:end-1) + (1-1/sqrt(3))*h/2; even = x(2:end) - (1-1/sqrt(3))*h/2; result = sum(arrayfun(f,odd) + arrayfun(f,even))*h/2; end 
 xavg(k) = (x(k)+x(k+1))/2 This is taking the average of your x array, whatever it may be. It is simply making an average vector, xavg, by using the simple average of the k-th value of x and the k+1-th value: two neighbors. If you were to carry out this loop N times, you would come to a problem on the last iteration, N, because when k=N there is no k+1 value, that's one beyond the length of your original x vector. So to solve this, you're simply being asked to put the x(N) value in for xavg when k=N
That makes sense. So for x(k) I would index from the first value to the end and for x(k+1) I would begin indexing at 2 and continue to the end? By the way I'm supposed to do this once using array operations and another time using iteration. 
As for your first part, you loop through only once, incrementing k each time. But you'll have to have a statement to catch the exemption when k=N. Looping once, using k, and using it in the x(k) and x(k+1) parts in your xavg equation does the duty of &gt;index from the first value to the end and for x(k+1) I would begin indexing at 2 and continue to the end though be careful when dealing with the k=N loop... As for array operations, this is certainly doable, and you'll need another exemption catching statement. I'll leave it at this for the moment, try either the array method or the iteration method, and if you get stuck post up some code here and we'll help you debug through it. Remember: 4 spaces to start a new line makes code look nice like this
Alright, we're gettin places. Next time either include an error message matlab spits back at you or, if the code is working, what it's doing and what you're expecting it to do. Now... x = dataNoisy(1:1:length(dataNoisy)); this line is unneccessary. First, you're calling dataNoisy, which is 1x100, and you are accessing indicies 1:1:length(dataNoisy), which is ALL of dataNoisy. You can simply say: x = dataNoisy and that does what you are as well, or even just have: x = 10+2*rand(1,100); Now, onto your xavg line: xavg = (x + x+1)/2; This is taking your vector x, adding it to itslef (x + x), then adding one more (x+x+1), and finally dividing by 2; it is essentially just taking x, adding 1 to every element, and saving it as xavg. What you want is for each element in x: take that element, it's neighbor, take their mean, and save that as xavg. You're currently a) not shifting your second call to x correctly here (if you're trying the array method) or b) not correctly implementing a loop and indexing your array (if you're using the iterative method).
Are you forgetting to open the file with write permissions? fid = fopen('file.csv','w') Also, you might be missing the commas in the header. You could do something like fwrite(fid,[strjoin(subNames,','),'/n'])
1) Why are you trying to get back to Excel? Sorry not much help here. I've only taken data Excel -&gt; MATLAB, with xlsread, in a windows environ. 2) My suggestion would be to just store the data, no headers in the files, and then manually make a README that lists the filenames, their contents, and then what each column is of the files.
Are you getting any error messages? Also, if you have never published with MATLAB before you may want to make sure you have changed the default publishing format/directory. 
these are the errors i get Error in ==&gt; xslt at 90 xProcessor.transform(xSource,xResult); Error in ==&gt; publish&gt;publishToPdf at 511 evalc('xslt(saxSource,getPdfStylesheet(noToc),targetName);'); Error in ==&gt; publish at 186 publishToPdf(dom,options,outputAbsoluteFilename,imageDir) Error in ==&gt; mdbpublish at 55 outputPath = publish(file, options); ??? Error using ==&gt; open at 68 NAME must contain a single string. 
Here's how I would do it: dataNoisy = 10.0 + 2.5*randn(1,100); xk = dataNoisy; xk1 = [xk(2:end),xk(end)]; xavg=(xk+xk1)/2; plot(dataNoisy) hold on plot(xavg,'r') As Halsey117 says, you don't need to include the indices if you are using the whole range. Really you don't need x and dataNoisy to be separate variables, but for the sake of simplicity I just left dataNoisy at the start of the script anyway. I defined xk the same as your x. xk1 is just the same without the first variable (that's the xk(2:end) part), and with the last entry repeated (the xk(end)). This will result in the desired effect of the last variable remaining the same, as well as making the vectors the same length, which is necessary otherwise adding them wouldn't work. You should use the 'hold on' command to stop the second plot overwriting the first. the 'r' just changes the xavg colour to red as otherwise they would both be blue.
Thank you!
hrm. I'm getting an error "Line: 114 Column: 14 Unexpected MATLAB operator." Might be an m file you are using that I don't have? I do get good output however, just with that error. I published to HTML first so that might make a difference. I'm using v.2013a. Can you get HTML output to work? You should getcha self schooled on the %% tag. It breaks your code up into sections. You should always at least start your project with "%% Your Name - Homework 1" or something like that (unless your teacher says otherwise). It'll make it a lot prettier. Then each problem you do should have it's own "%% Problem x" section. The *REALLY* cool thing about sectioning up your code when you're doing homework in Matlab is that there's that "run section" button, so you can write your code in the editor, and then just run it one little bit at a time so you're not waiting for all those differential equations from problems 1-9 to get solved each time when you're just trying to get the graph in problem 17 to look pretty. Also, multiple %s on the same line do not start a new line of comments. edit: Make sure you have permission to write a file to the path in which you're publishing (or the default path to publish to). File permission fuckups can manifest themselves with odd symptoms. Check your publishing settings. 
HTML publish is ok but i need a PDF publish. IDK 
Edit: this post was bad and I am bad. Downvoting myself as penance.
I copied and pasted directly from your post into MATLAB and got the answer you provided.
Try: syms t y(t) de = diff(y,'t') + 3 * y + 2 * int(y,'t') == 1; ic = 'y(0) == 1'; dsolve( de , ic , 't' )
Frack me, I did it again. Reading comprehension has not been my strong point this week. Redacted and a hat tip to you. 
It will only find the local minima unless your function is convex, but I don't think that is what is going on here. I would double check and make sure that your function is correct. Evaluating the function at the inputs you gave me produces a result between ~9.8 and ~25 depending on the value of theta. Fun7_13( [0.00078585 0.000087771] , 0:0.1:2*pi )
[This](http://math.stackexchange.com/questions/76902/difference-between-implicit-and-explicit-solutions) may help with understanding what the error is saying. Futher, the [documentation](http://www.mathworks.com/help/symbolic/dsolve.html) may offer some help. Search for "syms a y(x)" to see the part I am talking about.
Thanks for your response. As for that second link. I tried out sol= dsolve(diff(y) == -(2*x+4)/(3*y.^2+1), 'MaxDegree', 4) and got a return of sol = (C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3) - 1/(3*(C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)) (3^(1/2)*(1/(3*(C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)) + (C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3))*i)/2 + 1/(6*(C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)) - (C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)/2 1/(6*(C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)) - (3^(1/2)*(1/(3*(C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)) + (C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3))*i)/2 - (C7/2 - (x*(x + 4))/2 + ((C7 - x*(x + 4))^2/4 + 1/27)^(1/2))^(1/3)/2 
So how would I accomplish this using iteration?
You could do something like: dataNoisy = 10.0 + 2.5*randn(1,100); x = dataNoisy; xavg = x; for k = 1:length(x)-1 xavg(k) = (x(k)+x(k+1))/2; end plot(dataNoisy) hold on plot(xavg,'r') As you can see the indices need to be in parenthesis. Note that I am assigning xavg as equal to x before changing each value in turn. This is not strictly necessary but preassigning variables their final size and changing a value is quicker than increasing the size of the variable each iteration. Let me know if you have any questions. (I don't have matlab atm so can't check if I have made a mistake)
It's just plotting a straight line for some reason. EDIT: I used the debugger and xavg only has two values.
I just went to my PC, it seems to be working fine for me. Maybe if you have a figure already open the scale is making the new data invisible? Put figure; before the first plot command and see if that fixes it.
This is what I have clc; close all; clear all; dataNoisy = 10.0 + 2.5*randn(1,100); x = dataNoisy; for k = 1:length(x)-1 xavg = (x(k)+x(k+1))/2; end xavg = [xavg,x(end)]; figure(2) plot(dataNoisy) hold on plot(xavg,'r')
I edited it immediately after posting, thought I was quick enough to do it before you copied. Evidently not. :P If you go back and copy it again it hopefully will be fine.
Ah I'm sorry about that man. Thanks for all the help, it's highly appreciated!
No problem
Yeah I definitely did forget to add write permissions, I'll try that and see if it works, it should. With your second suggestion I have to write to a csv file because the strjoin seperates my headers with a comma, right? I'll try that if I'm, still having problems with the fprintf method. Thanks a lot for your help.
 fun =@(x,y) sin(sqrt(x.^2+y.^2))./sqrt(x.^2+y.^2); mesh(x,y, fun(x,y) + fun(x-5, y-5)) http://i.imgur.com/1Y5LIwx.jpg Kind of mountainous, peaks at (0,0) and (5,5).
Interesting. Thanks!
To plot the result correctly you first have to get a correct result. And you don't. The periodogram function assumes that the data is sampled equidistantly. But if you did have equidistant sampling the frequency resolution is 1/(NT) where N is the number of samples and T the sampling time. 
Look of brownian surfaces. That's probably what you want.
#####&amp;#009; ######&amp;#009; ####&amp;#009; Section 3. [**The Lomb‚ÄìScargle periodogram**](http://en.wikipedia.org/wiki/Least-squares_spectral_analysis#The_Lomb.E2.80.93Scargle_periodogram) of article [**Least-squares spectral analysis**](http://en.wikipedia.org/wiki/Least-squares%20spectral%20analysis): [](#sfw) --- &gt;Rather than just taking dot products of the data with sine and cosine waveforms directly, Scargle modified the standard periodogram formula to first find a time delay œÑ such that this pair of sinusoids would be mutually orthogonal at sample times tj, and also adjusted for the potentially unequal powers of these two basis functions, to obtain a better estimate of the power at a frequency, which made his modified periodogram method exactly equivalent to Lomb's least-squares method. The time delay œÑ is defined by the formula &gt; --- ^Interesting: [^Periodogram](http://en.wikipedia.org/wiki/Periodogram) ^| [^Spectral ^density ^estimation](http://en.wikipedia.org/wiki/Spectral_density_estimation) ^| [^Fourier ^analysis](http://en.wikipedia.org/wiki/Fourier_analysis) ^| [^Petr ^Van√≠ƒçek](http://en.wikipedia.org/wiki/Petr_Van%C3%AD%C4%8Dek) *^\/u/danieljr1992 ^can [^toggle ^NSFW](http://www.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cfeo8wl) ^or[](#or) [^delete](http://www.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cfeo8wl)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less.* ^| [^(FAQs)](http://www.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/) ^| [^flag ^a ^glitch](http://www.reddit.com/message/compose?to=/r/autowikibot&amp;subject=Glitched comment report&amp;message=What seems wrong: (optional description goes here\)%0A%0A---%0A%0AReply no. 55997:%0Ahttp://www.reddit.com/r/matlab/comments/1xshpn/i_am_trying_to_estimate_the_power_spectral/cfeo8im)
Thank you all so much! Very helpful! 
Add four spaces before each line of code to make it legible and you'll get more feedback. You can also use Reddit Enhancement Suite to make this easier.
You can get a cheap, but qualified person telling you to fuck off right HERE! Fuck off! Now with a complimentary bag of dicks you can suck!
I really like the aptly-named Optimization toolbox. I use "lsqcurvefit" all the time for least squares optimization data fitting.
you missed an opening parentheses. Line 2 should read: v=((x.^2)+(9/4).* (y.^2)+(z.^2)-1).^3 ...
Try disabling the virus scanner? See: http://www.mathworks.com/matlabcentral/answers/22384-matlab-startup-delay-linked-to-initsunvm Other than that, I would wait until Tuesday and call MathWorks technical support. They should be able to help you if you are still on Software Maintenance Service (SMS). You can also try starting it with -nojvm
It depends on the application. What are you trying to do?
Why wait till Tuesday? Why not Monday?
Well dang, I don't get Monday off and I'm in the US and work for the govt. I'm gonna complain :)
Youre asking matlab to fill in the spaces between the slices to draw a surface. You're using plot3() which is useful for discrete data (think 3d scatter plot). What you need to do is define an array of points and interpolate your data to these points. You can think of it like: your data forms some function, if you want to draw a true surface you need to evaluate that function at every point in the space. Since its not realistic to evaluate the function at an infinite number of points, interpolate at a resolution you choose. meshgrid() defines the array of points at which to interpolate griddata() interpolates surf() fills in the spaces between your interpolation points and infinity note that there are many ways to interpolate and many ways to plot
I typed it from scratch for my sweetheart 
http://i.imgur.com/ncFbDvU.gif
Thanks, that makes perfect sense. Looks like this is the only way to go.
http://i.imgur.com/3RF2RPI.jpg Edit: Hot damn!
Flair set. Now you have to post so we can see it.
I see your silver and raise you GOLD.
Thanks a lot! Edit: Awesome Flair, thanks again.
It is a fairly simple interpolation. Your grayscale image has intensity values for each pixel. These intensity values covers some range from a to b. The colormap is a 3xn vector that serves as a lookup for those intensity values. Your lowest intensity corresponds to the first entry, highest intensity to the last entry. Everything in between is determined by interpolation. The n is just how fine of a gradient the colormap represents, the 3 is the RGB portion. So for your situation you need to snag the colormap, snag your image, then do the lookup yourself and turn the HxW into HxWx3 replacing intensity with the RGB colormap being used. You can probably get clever with the interpolation commands and do this somewhat trivially.
Awesome. I saw some interpolation settings when using Imread. I'll look further into them. Thank you!
Is this a subtle way of telling us that you guys don't want to help noobs? 
Are you at all familiar with C? If you are concerned primarily with speed, the fastest way to do this will be to use a MEX file. Your function is simple enough (2 inputs, 1 output), so you can start with the "timestwo.c" example to see how pointers to the inputs are extracted and return object created, etc: edit([matlabroot '/extern/examples/refbook/timestwo.c']); Then it's just a matter of writing your top loop in C.
A for-loop should be fine in this situation. At 16 values it is pretty shallow and the majority of computation time will be in the mean calculation. I doubt you would see any significant speed improvements from vectorizing this bit of code. If you are looking to improve the speed of your code in this area I would recommend investigating ways of avoiding recomputing the centroids. You could look at stuff like: 1) track which labelings are changed and only recompute the centroids for those labels 2) track which pixels are added and removed from a labeling and update the centroid mean using those values On a macro level, I'd imagine that the clustering step is going to be much more computationally intensive than the centroid calculation and your efforts are better spent speeding up distance measurement rather than mucking around with this step.
It's impossible to say without seeing your full code. Please provide full reproduction code and an example of these incorrect outputs. You might also want to store the exit flag of fsolve and make sure that it is actually converging.
you can try with fsolve
thanks for the help! i went ahead and deleted the function handle things and started giving me values. The only thing is that I still can't get my head around the fb variable. why isn't it working? i thought it would work because I left it the same way as fa and fc. 
Can you explain that?
Actually you don¬¥t even need fsolve. You can use solve. It should be something like this Syms E e=.25; M=pi/4; solve(E-e*sin(E)-M==0)
I don't think solve can handle it since it has no analytic solution
The assignment says to return E, given e and M. Your starting point also returns z. The correct way would be: function E = kepler(e,M) The next thing is you are supposed to solve it using fzero: http://www.mathworks.se/help/matlab/ref/fzero.html The syntax is E = fzero(fun, x0) where fun is a defined function. ex. fun = @(E) E-e*sin[E]-M; and x0 would be the starting value for the solution Putting all of this together you would get something like this: function E = kepler(e,M) fun = @(E) E-e*sin(E)-M; E = fzero(fun, 0); end 
You are not supposed to run the script directly but as a function. fx. kepler(0.25, pi/4) in the command window or from another script. E=0 is not a solution to the equation with e=0.25 and M = pi/4. So either the directions are wrong or the parameters are wrong
Indeed, I was wrong
I think it's very unlikely he's going to do better on this loop using mex unless he's an extremely accomplished c programmer and/or has a *very* high end compiler.
Kinda difficult to answer without more details. What kind of data do you have? Assuming you have an array: % peaks contains the ids of the peaks of x for ii=1:length(peaks) A(:,ii)=x(peaks(ii)-9:peaks(ii)+9); end This stores the values around all the peaks (9 samples before and 9 after) in A. The first column contains the values of the first peak etc.
It is an array, That looks like it will work perfectly. Thank you so much! 
You are indeed correct that we won't be writing many MEX files that beat MATLAB's built-in functions (aside: mean is not a built in function, see "edit mean"). However, I have spent a fair amount of time optimising MATLAB codes of this style. Experience shows that in cases with odd indexing like OP is doing, writing a MEX almost always wins, and often by a huge margin. The problem is what I said: the "centroids==i" part creates a logical array which gets used for indexing. This uses a whole lot of unnecessary memory and creates a lot of additional cache pressure. Pipelining works in your favour when you are doing a lot of computations on a small working set. In OP's case, he's doing a small amount of operations on a larger working set. By eliminating the creation of a logical matrix, we reduce the working set and thus cache pressure, which moves toward better pipelining and so on. Lastly, you are right that a conditional jump would be a bad move; I don't think it's necessary to use a conditional jump in a MEX version of the above code. 
actually... you did help A LOT! I ended up setting an inline function and using f(a), f(b) and f(c) instead of asigning values to fa, fb and fc. I also ran in to another small problem after the numbers started printing... they were not the right values I needed... I felt dumb after I figured out that the values were in radians instead of degrees... here is the code I ended up staying with... Thanks again! function [] = biseccion format short f = inline('x*cosd(x^2)-4','x') %funcion dada a=5; % a,c -- son los intervalos izquierdo y derecho b=0; c =8; TC=50; % TC es el total de calculos err=0.001; %tolerancia minima de error NC =1; %numero de calculos actuales fprintf('NC \t a \t b \t c \t F(a) \t F(b) F(c)\t\n' ); %encabezado tabla for i = 1:TC %ciclo for empezando desde 1 hasta el TC if (NC&lt;TC) b = (a + c)/2; else disp('la funcion no tiene raiz') break; end if f(a)*f(c) &gt; 0.0 disp('la funcion no tiene raiz') break; end fprintf('%d %1.6f\t %1.6f\t %1.6f\t %1.6f\t %1.6f\t %1.6f\n',NC,a,b,c,f(a),f(b),f(c)); if abs(f(b)) &lt;= err fprintf('\nLa raiz de la ecuacion es: %1.6f\n',b ); break % jumps out of the for loop else NC = NC+1; end if f(b)*f(c) &lt; 0 a=b; else c=b; end end
I am getting this error: Subscript indices must either be real positive integers or logicals. Error in Project2 (line 56) A(:,i)=ekg(pks(i)-t_prespike:pks(i)+t_postspike); Any ideas on how to fix this?
Listen to his advice about checking boundary cases. 
After adding that I am now getting Subscripted assignment dimension mismatch. Error in Project2 (line 58) A(:,i)=ekg(locs(i)-t_prespike:locs(i)+t_postspike); I believe this is because prespike and postspike are different sizes. Should I approach this by doing two for loops or is there a slightly different way to code it so that the mismatch will not matter.
It's because all the columns of A should have the same number of elements. You can either pad the shorter arrays with zeros or something, or maybe use cells instead of a matrix like this: A{i}=ekg(locs(i)-t_prespike:locs(i)+t_postspike); You can get the values from each peak by calling A{1} etc. 
Well you've motivated me to write a MEX to see. If I've understood the OP correctly, then "test1.m" does what he describes, and my "cent.c" does the same thing in C. On my machine, the mex file is about 15x faster. driver, test1.m: http://pastebin.com/Ynas3Cma mex file, cent.c: http://pastebin.com/XW52b775 Edit: This is with gcc, using whatever flags MATLAB uses by default. 
z(mm,nn) is zero, which is causing the error. I am not sure what you're trying to do here. Try help(trapz).
got it !!!
Off the top of my head, this should work: lessThanZero = r &lt; 0; r(lessThanZero) = -1; r(~lessThanZero) = 1;
Maybe: r = 1-2*randn(1,10^10); r(r&lt;0) = -1; r(r&gt;=0) = 1; r&lt;0 is a logical matrix that you can use to index into a matrix. I don't have Matlab installed on my personal computer so I can't verify, sorry.
Thank you for the help. 
You will want to read up carefully, bsxfun() is one of the harder functions to get your head around bsxfun(@power,x',n)
Depending on what version of Matlab and toolkits you have available, imfindcircles could be what you're looking for. [Here](http://www.mathworks.co.uk/help/images/examples/detect-and-measure-circular-objects-in-an-image.html) is a walkthrough.
What do you mean by looping the right hand side into the matrix? It's a vector. I think you have to figure out your math before trying to code this up. I'd look up a tutorial on finite differencing 
I know its a vector, but I am not sure how to incorporate the X_i's into the function. 
Regionprops can return an eccentricity value for labeled regions in a binary mask. Removing high eccentricity objects would probably be a good place to start on this.
Because it's not a continuous function, I can't always expect it to actually interstect my barrier lines. I have to catch that they've been crossed and then correct for it. 
Use a while loop to check for whatever condition it is you want to stop iterating at.
You can determine what the Xi values are using a,b and the step size. Then evaluate f at those points
There are user defined function blocks (that allow multiline functions) that you can include in a Simulink model. Go to the library browser and click on "user-defined functions" in the left sidebar. I'm guessing you'll want the "Matlab function." Depending on what's in your code, this can prevent your model from compiling, so be wary if you are using accelerator or rapid accelerator. Alternatively, you could define a sub model and use logic blocks within the sub model. That way you don't turn your main model into a pile of spaghetti. 
Found what I needed. The functions were rgb2ind() and ind2rgb().
There is something wrong with your fdaf variable. fdaf=max() creates a new scalar variable fdaf with a certain value. Any old variable named fdaf is overwritten. Then fdaf(v) =fdaf tells matlab that fdaf is actually a vector, it keeps the scalar value from before as the first entry and creates an entry with the scalar value fdaf at position v, the values in between default to zero. In the next iteration step the now vector fdaf is overwritten again by a scalar as result of the fdaf=max() and everything begins anew. Also, those errors with regard to non integer indices are there for a reason. Without knowing much about what you intend to do with the code I can't think of a situation where this wouldn't be a problem. Consider initializing a i=1 outside the loop and calling i=i+1 inside at the end. Disregard this if there is a compelling reason to do this otherwise Maybe temp_fdaf=max() fdaf(i)=temp_fdaf Helps
Yes that worked. Thanks!
This will be a little quicker: r = 1-2*randn(1,10^10); A = 1; r=sign(r)*A;
Are you attempting a controller? There are a lot more options if you know what kind of controller you'd like to have - PID, lead/lag, etc. That being said, there are a lot of 'code blocks' you can use. I tend to use MATLAB function or s-function depending on what language I want to use.
If you are working with binary image and circular elements, your best tool should me mathematical morphology. It'll allow you to detect any arbitrary shape.
That's a good idea, I feel kinda dumb not having thought of that... it definitely works in the test cases I have so far, now to go and see if I can break it.
Thanks! That one seems to work well. In one test case it marked something that wasn't diaphragm, but it was easy to handle that problem
I'm going to play with that, thanks!
Yes I think I am, I'm new to control problems. I think I will just be able to use the blocks. Thanks
Thanks bud
One possible cause is this- you have list_of_files=dir(fullfile('/home/username/Desktop/Old/MTP/tfcodev2p1/data/', '*.dat')); Yet you use list_of_files(i).name as fname. list_of_files(i).name does not contain the full path, just the file name itself, therefore your code will fail if /home/username/Desktop/Old/MTP/tfcodev2p1/data/ is not your current directory. Even if this does not solve your particular problem, you should set a variable at the start for the data storage directory, and use fullfile() whenever you call getvar() so that the entire path gets passed in 
Try not to think about this as a function intersecting the wall line. Instead try to find a check that you could perform every time step that would tell you if you have moved into the wall yet. In particular imagine the ball moving straight towards the right wall and just consider the x coordinate of the ball. What happens to that value as you do a time step that would have pass the ball through the wall. Once you figure that out you only need to do the mentioned corrections to the velocity and position. Move the ball as far away from the wall as it would have traveled into it
You could try sum(reshape(oldVect,N,[]))
You're right. Any idea on which method is the best one, memorywise? Also, for such gigantic vectors, independently on the specific operation used, is it better to do newVect = reduce (oldVect); clear oldVect; Or vect = reduce (vect);
Good on you for learning Matlab! It's an increasingly necessary skill in neuroscience and psychology. Anyway, I must say I'm not entirely sure what you're trying to do, but what's throwing the index error is: &gt; fprintf(fid,'%s\t%1.0f\t%.3f\t%.3f\t%s\t%s\t%s\n'... ,currentBP,vs(j),int_time(j),perc_time(j),valence, phase, subID); With the offending party being vs(j), int_time(j), etc. These are just single values that you have provided through the input function, and not vectors with indices. EDIT: Oh and btw, a loop doesn't "output" anything as such, functions do. With a loop you just perform an operation for as many times as specified (or while a condition is/isn't satisfied). 
Thanks for pointing that out. I'm hoping to make the vs(j), int_time(j), and perc_time(j) variables a part of a loop. That's where I'm actually getting confused. The end-goal is to remove some of the input functions at the beginning (that only work for one entry) and make them work for as many entries as there are button presses. Valence, phase, and subID are static strings, but each participant has a variable amount of button presses ranging from ~6 to ~100. With each button press there is a response time and score associated with it. I figure once I get the loop to work, and include my formulas in the center, my output file should start working. 
Trigonometric functions expect angle inputs as radians. I see you are using degrees: sin(90-theta).*((ab.*... Convert them to radians and that should work.
These are both 2d plots
Radians != degrees. You and [this guy](http://www.reddit.com/r/matlab/comments/1y9cxi/whats_wrong_with_my_code/) should team up.
yeah... That isn't the issue here. As anyone can see, I converted from degrees to radians. I have also tried writing this code using cosd/sind to handle it in degrees. Neither of these works and regardless should return some sort of array, not a single value.
At least they're not using gradians, god forbid.
Plain and simple: your code just doesn't do what you think it does. I don't really feel like dissecting it enough to give you a more thorough answer, but tossing a few random integers at that first loop and it breaks more often than it works. I can see the approach you are trying to take though. You should really look into the modulo operator. It returns the remainder of a division. You can use that to lop off numbers using the same kind of iterative approach as here. Very clunky and roundabout, but it will do what you are asking. Or you could do it the easy/cheating way and abuse num2str and str2num along with linear indexing: a = 123456; a_string = num2str(a) a_vector = str2num(a_string(:))
There is no reason to convert the number into decimal digits when converting to octal. 10 is not an integer power of 8, so you cannot do digit by digit conversion. None the less, a quick and dirty way to convert a number into its component decimal digits is with "num2str" and some ASCII math. 1) Convert the number into a character array numberString = num2str( number ) 2) Subtract 48 from each element of the character array numberStringLess48 = numberString - 48; This works because the ASCII characters for 0 - 9 are decimal code 48 - 57 As for conversion to octal. This site might get you started: http://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Data/toBaseK.html 
This is happening because the peak of the polynomial is between 7 and 13. Graph the polynomial and see: t = [1, 3, 5, 7, 13]; v = [800, 2310, 3090, 3940, 4755]; tt = 10; vv = LagrangeInterpolation(t,v,tt) x = 0 : 0.05 : 15; y = LagrangeInterpolation( t , v , x ); figure; plot( x , y ); hold on; scatter( t , v , 'rx') scatter( tt , vv , 'ko' ); legend( {'Fitted Lagrange Polynomial' , 'Input points' , 'Interpolated Point'} ,'Location', 'NorthWest' ); hold off; The plot: http://imgur.com/x5yV6d5
Run this: plot(t,v,'b.') vv = LagrangeInterpolation(t,v,1:16) plot(vv,'r*') and you will see the issue. It can only give you a correct answer for the points provided, everything else is at the mercy of the polynomial computed by the formula. It works reasonably well in areas where it is well define and that fall in the 'middle' of your range. Things at the edges get wonky. The technical name for the issue is [Runge's phenomenon](http://en.wikipedia.org/wiki/Runge%27s_phenomenon). The TL;DR is any polynomial approximation is going to be subject to over/under shoot at its boundaries. Some methods (and even applications within that method) will have it worse than others. If you have any familiarity with Fourier transforms and have been taught Gibbs phenomenon it is almost exactly the same idea. Look at the graph for your given data and eyeball some reasonable values for of v at t=9 and t=11. Add those to the set and run it again. You'll find the results to be much more reasonable. That should confirm your theory on that gap between 7 and 13 being an issue. Hint: you nailed it.
I don't know the answer, but maybe someone else will. I just wanted to suggest you post a few examples of the figures you're trying to parameterize. 
You can use odeset to set options for ode solvers: options = odeset('RelTol',1e-8,'AbsTol',1e-8); [t,y] = ode45(odefun,tspan,y0,options); ode45 is more accurate because it is a higher order Runge-Kutta method (4-5) compared to ode23 which is order 2-3. See doc ode45 doc odeset for more info.
that is great thank you. 
This makes me happy. *waxes nostalgic of when I created this sub so many years ago*
I see what you are tying to do and I like it! However, the primes function returns the index of the prime numbers (why I used the length function before). But if I used the isprime function instead of primes it should work! Thank you! 
The command you want is hold() Check the documentation for the details.
I see! This makes a lot of sense! Thank you very much! I thought you were comparing the 0's and 1's (0 being not prime and 1 being prime). Rather, you are creating one array with the prime numbers and saying there are this many below any number (the loop number). Thanks for the help! When I get back to a computer I will check it out! 
Here is what most of the figures look like, more or less. http://imgur.com/lwAf6pF
Yeah, I did notice that as well. Thank you! 
hold() might work (I haven't used it before), but you might want plotyy() as well. It plots two things with two different y-axes. Could look like this: x1 = 0:10 y1 = 0:10:100 y2 = 0:2:20 plotyy(x1,y1,x1,y2,'format1','format2') 
I'm trying to fit each individual line, but they should be pretty similar in slope. Right now i'm attempting to do multivariate linear regression, but I'm not sure if this is the right way to go about it.
You are plotting your entire truss structure multiple times. For every truss you are plotting the ENTIRE thing with the properties you want for that given truss, then writing over it again for the next one. You don't need that inner for i=1:length(Q) loop at all.
Thank you so much! Now I'm getting a plot that at least looks probable. You're a godsend!
Glad I could get you heading in the right direction. One tip that will prove useful: don't use pause for stepping through your code. Use breakpoints for that. In the editor there should be a gray bar between the line numbers an the actual code. Click the dash in that bar and it will change to a red dot (you can also put the cursor on that line and press F12.) Now when you run your code MATLAB will stop there and give you control of the command line. It is INSANELY useful for investigating what your data looks like and what is happening during the middle of execution. Once finished investigating, you can then either stop the code entirely or let it continue executing. There are some other fancier tricks and features that go along with it, but you'll have to investigate and read up on them yourself.
That sounds... problematic at best! Not really a helpful comparison, But I just ran it on Win 7 64-bit 2013a with a random 100k element vector and it took 0.05 seconds. 
Same here actually, which made me think it was something with the data. Turned out I had three NaN's that snuck in at the beginning of the vector. Fixing that fixed the issue. 
Great success!
Yes I'm aware of that, although I haven't been an avid user. I guess I'll have to try it out next time I run into weird loops that don't do what I want!
Please fix the formatting of your code. It's completely illegible at present. Put four spaces at the beginning of each line to make it fixed width.
Cool project. I have somewhat bad news for you though. There is likely no asymptotic percentage. See: [Prime Counting Function](http://en.wikipedia.org/wiki/Prime-counting_function) for more details. 
I'm a bit confused as to what's illegible?
&gt; mypi=[]; a=1; n=6; x=1:10; for i=1:10; n=(2n); a=(sqrt(2-sqrt(4-(a2)))); l=(na)/2; u=(l/(sqrt(1-((a2)/2)))); p=((u+1)/2); end plot(x,p) hold on y=ones(length(x),1); plot(x,pi*y) hold off I think you meant: mypi=[]; a=1; n=6; x=1:10; for i=1:10; n=(2*n); a=(sqrt(2-sqrt(4-(a*2)))); l=(n*a)/2; u=(l/(sqrt(1-((a*2)/2)))); p=((u+1)/2); end plot(x,p) hold on y=ones(length(x),1); plot(x,pi*y) hold off
Sorry, that's how it looked on my phone, I didn't realize it posted everything like that :/
It means apply a circularly symmetric gaussian filter to the damaged area of the image. See [fspecial](http://www.mathworks.com/help/images/ref/fspecial.htm) for image filtering examples. 
You have to be careful when using "plotyy" the y axis limits for the two axes objects can be very different leading to visually misleading plots. 
Are the lines always the same color? If so you can use thresholds to pull out a binary mask and then feed that mask into a hough transform to pull out line end points. Color thesholding: http://www.mathworks.com/help/images/ref/im2bw.html Hough transform: http://www.mathworks.com/help/images/ref/houghlines.html
Thanks, I'll try this function
It is constant because you reset its value every time in the loop. So instead of having a vector of values you just have p with the value of the last loop. Change the p assignment inside the loop to: p(i)=((u+1)/2); 
Make sure to read the directions on setting it up! http://www.mathworks.com/mobile/connect-to-computer.html
Have you tried looking into the clock and/or tic/toc commands? There is prab a more elegant way, but I would start there.
Set it up last night. Very freaking cool.
I figured it out using the clock command, I discarded the command originally because I thought it did not include seconds. Thank you
Use objects and static variables or (shudder) globals to store values between function calls.
Can you get a student discount on Matlab?
Welcome to the wonderful world of planning. As you are painfully aware, generating, storing, and searching every possible outcome is firmly in the Bad Idea category. There are TONS of algorithms floating around for dealing with large scale planning problems along with some tailored to reducing your search space beforehand. Constructive heuristics are certainly one feasible approach. The vast majority of the combinations in any given problem are going to be completely absurd. Even generating a few simple rules to dictate 'good' choices can lower your complexity significantly. Most searching/planning algorithms stem from this idea. I might have (n+1)^m possibilities but if most of them are terrible or completely unfeasible, ignore them. On the flip side it may be possible (and a better option) to identify choices that are seemingly superior, choosing that, and moving on from there. Subspace searches are another idea worth considering. You may have better luck choosing 3 weapons, finding the best assignment for them among all targets, then taking what is left and solving that. Or even further 3 weapons and 4 targets and going from there. You can definitely find a solution. It may not be optimal, but it will be valid. Then you get to wrestle with the NP hurdle from there. This is a huuuge can of worms. I really wish I knew more about it because it is a truly fascinating can in the grand scheme of things. I'd highly recommend reading [Artificial Intelligence: A Modern Approach](http://aima.cs.berkeley.edu/index.html) if at all possible. It is one of the easiest to digest breakdowns of the subject matter in existence. It lacks a bit in depth and technical gore, but you will be hard pressed to match its breadth and ease of consumption. Bonus: they have a metric shit ton of outside resources and references to take you down the rabbit hole once you do find that one topic that sounds promising/interesting. TL;DR - Simplification is your friend. Tracking all the things is never a good idea . It may work for toy problems but it will never survive contact with a real world problem. Constraints, metrics, heuristics (and bears! oh my!) are your friend. How do you eat an elephant? One bite at a time.
Yes. It's about $100, iirc. http://www.mathworks.com/products/matlab/pricing_licensing.html?s_iid=main_pl_ML_tb#student_use
I still stand by my hint of 0-25 and mod(x,26) being an issue. The rest stems from your attempts to flag all non-letter input as -1 and replacing this with a space. My head hurts from trying to walk through your code and unwrangle that portion of the logic, but it definitely breaks your process. I can comment out the portion of shift related to it, fix the hint above, and things work great (with the exception of non-letter entries becoming Z, but at least it narrows it down).
I hope someone else can tell you 'yes' and I'm just not knowledgeable enough, but I think the answer is no. The reason is that when you do testfun(trsnspose (x)), I'm pretty sure testfun never sees the transpose part, that happens before the function begins. A work around would be to take in two arguments, x and 'transpose', but this may not be any better than just taking in the whole string, which you want to avoid. 
No. You could wrap it in a string but there is no way to do that because it evaluates the transpose(A) before anything else.
I've worked on a couple problems like this- but it is not really my area of expertise (so take what I say with a grain of salt). I'd say first you have to figure out what exactly you are trying to study or understand with your model or by setting up your decision space. Then you can evaluate what approaches you take. In my example I had a couple metrics that made for a multi-dimensional optimization problem - minimize cost, maximize benefit. I was looking for various statistics on outcomes over the "good" regions of the decision space and I was also looking for optimized sets of decisions. I ended up using a combination of monte carlo style simulations to sample different regions of the space and then seeded genetic algorithms to optimize promising regions of the space. Once I had consistent results over many trials with different seeds, I was fairly confident in my optimization. Now, if you are more concerned with corner cases or exploring non-optimal regions of your decision space, a heuristic approach may not be useful. There are strategies to achieve full-factorial analysis such as parallelizing functions and running many instances of your code, vectorizing and generally streamlining code where possible - remove for loops, replace iterative calculations with interpolated and stored response curves/surfaces. Things like that. But it can be a lot more work which is avoidable if it is not necessary.
Darn, I got a copy in 2008 ... You need R2012a or higher.
 while toc&lt;starttime+1 end
In your code you are taking the inverse of identical matrices multiple times. It would make sense to calculate the inverse only once and store the result to use it later on. I have no idea how to speed up the inversion loop other than using parfor. Arranging the 20000 matrices in a cell array would allow you to call cellfun on all matrices at once, however my quick benchmarks showed almost no gain compared to the for loop.
From the looks of things, you really only need to calculate 20000 inverses (one for each 4x4 matrix along the "j" axis of your 3D matrix). So why do you have that nested within a 20-iteration `for` loop? You can do a loop from `j = 1:length(M)` first to get your stack of inverse matrices and then do the `1:20` loop afterwards. Also, what kind of math do you end up doing once you have each inverse? [`mldivide`](http://www.mathworks.com/help/matlab/ref/mldivide.html) is faster and more computationally stable than doing an inverse followed by a matrix multiplication (i.e. `A\b` is preferred to `inv(A)*b` ) so you might get a little bit of a performance gain if you can do that sort of replacement in your code. Then, if it's still too slow, profile!
My apologies. I wasn't clear. In my example 'M' would be changing within the 'i' for loop. It is a different matrix each time it is inverted. Thanks for the suggestions though. 
You could put them all in a giant, block-diagonal matrix and invert that.... I have no idea if that will be faster or slower.
My apologies. I wasn't clear. In my example 'M' would be changing within the 'i' for loop. It is a different matrix each time it is inverted. ha. I did profile and 96% of the time is spent on the inv calculation. It is a little hard to explain what I am doing with the matrix once I get the inverse. Essentially, I have to select sub matrices from the inverse matrix (e.g. if I = inv(M), I need m = I(1:2, 1:2, :)). I don't actually do any further calculation with the inverse matrix once I have it. Sorry if it was a bit confusing and thanks for the suggestions
I pmed ya
I tried that before writing my answer. Out of memory error even with a sparse block diagonal matrix. 
Use linear algebra to put that equation in the form: 1/2*w'*H*w + f'*w and solve for H and f. Plug those two values into: w = quadprog(H,f) and you are all done. Hint 1: (phi * w - y ) ' = (phi ' * w' - y ' ) Hint 2: The summation term can be expressed as [1;1;1;1;....] * w Hint 3: y' * phi * w = w' * phi' * y since the result is scalar.
You could use something like fprintf('Array numbers: %s.\n', strrep(num2str(a),' ','')) and fprintf(1,['oauehshtnueoouaehtuoae',... 'eunohnaeuohtnueohtnueaaeuhtn',... 'htuaeoaeuoseutnsoaetnaoehto'])
This is hacky but it produces the desired output. fprintf('Array numbers: ') fprintf( '%d' , array ); fprintf('\n'); You could also do something like: formatSpec = ['Array numbers: ' , ... repmat('%d',1 , numel(array) ) , '\n']; fprintf( formatSpec , array ); In response to your second question bound the string with square brackets and separate each line into individual strings. fprintf(['Lorem ipsum dolor sit amet,' ... 'consectetuer adipiscing elit. Maecenas' ... 'porttitor congue massa. Fusce posuere,' .... 'magna sed pulvinar ultricies,' ... 'purus lectus malesuada libero,'... 'sit amet commodo magna eros quis urna.']); 
Do you actually mean you only need the top corner submatrix? Or is it something different? That seems key to speeding things up. You don't need to calculate the whole inverse to get that.
I am gathering submatrices from all four corners. That is a good point though. I may look into an algorithm in which calculating the inverse may not be necessary. My code will hopefully accomidate an arbitrary dimension once I can speed this up a little, i.e. (nxnx20000), where n is even. Thanks. 
Say you just need the first and the last columns of the inverse. You can do something like: y=M\\[1 0;0 0;0 0;0 0;...;0 1] Then y will have the first and last columns of the inverse.
There's a mistake in "hint 1". Also your "hints" don't help in setting up the function. There's more than just the H and f matrix. You need to set up the constraints as well. Anyways, I figured it out. Thanks for the help.
So post the solution!
I'll post it tomorrow since I left my code in Lab.
This is how `inv` is implemented, so it's a useless tip. 
Thanks for helping me out! I am still working to resolve the issue! 
Good advice here, but one thing to remember: for the actual computation of the inverse, you won't find a faster method than the matlab methods. It does about a dozen checks for matrix type to find the fastest inverse. Also, a million 3x3 inverses is but a blip on computation time. 
I'l just walk to uni to use it for 'free' Must be spending my tuition fees on matlab
Relative to books, which you only use for one, course it's not bad. Many universities let you DL and activate for free. Whether or not they let you know about that is another matter.
Really? Could you please provide some additional information or references? This would be interesting EDIT: It seems Mathworks disagrees with you ["A better way, from both an execution time and numerical accuracy standpoint, is to use the matrix division operator x = A\b."](http://www.mathworks.com/help/matlab/ref/inv.html)
The solution's not gonna be an easy one. 1. I would decide upon a subset of datatypes that the user is allowed to send as input. Maybe numeric, cell, funcptr, any of your own classes that you've written. 2. Next, I would either write a switch case based on the input data type and handle each of the data types to create the string OR if I have objects of my own classes to handle, I'd write a public char() or toString() method in those classes and call this function. 3. Also, I'm pretty sure that calling test_fun(transpose(A)) will always first evaluate transpose(A) and then send the result of that to test_fun. The only way to not do this is thru function pointers where the user would need to enter {@transpose, A} and you would then evaluate the function within test_fun.
Further nudge: your shit breaks because you use -1 as a flag but later you are doing stuff that doesn't play nicely with that. Try using another thing that isn't affected by shifting or modulo. Something that is Not a Number.
No, it definitely isn't. fprintf('%d', array) has the exact same effect. From the documentation: &gt; If you include fewer formatting operators than there are values to insert, MATLAB reuses the operators on the additional values. 
Ahh.. I forget that MATLAB is smarter than other languages for things like this
It bites me in the ass when I go the other way. I long for the day when I can focus on just one or two languages.
This is awesome! It appears as though the commands you run are happening as if they were being typed into the command prompt at your computer (i.e. they're not being computed in the "MathWorks Cloud" but on your pc). This is great though because it allows you to have access to all dependencies and custom libraries on your PC. All that it's doing is redirecting input/output.
That's right. It's better to use `x = A\b` than `x = (A\eye(size(A))*b`. And the latter-mentioned happens to be equivalent to `inv(A)*b`. This can be seen by an example. A = [1e15 1; 0 1]; x0 = [1 .5]'; b = A*x0; x1 = A\b; x2 = inv(A)*b; x3 = A\eye(size(A))*b; eps01 = x0-x1; eps02 = x0-x2; eps03 = x0-x3; eps23 = x2-x3; y01 = A*eps01; y02 = A*eps02; y03 = A*eps03; y23 = A*eps23; Let's look at the residuals. &gt;&gt; [y01 y02 y03] ans = 0 -0.222044604925031 -0.222044604925031 0 0 0 Surely, it isn't a coincidence that the residual through `inv(A)*b` and the one through `A\eye(size(A))*b` are identical.
Thanks a lot... I appreciate the response... at least I know I'm not just spinning my wheels on something trivial... as I go through this I realized that space search/reduction is what many combinatorics problems are centered around, so why am I whining about it - research ensues.
You're welcome. Of note is that there is some computational overhead in that `inv` does more safety checks and shows messages. This takes a little bit more time. But the precision is identical. I'll stick with `inv` and have useful error messages. And if computation time is super-important, matrix inverses can practically always be optimized away. 
Yeah, It's bullet-point 3 that makes me be resigned to this not being possible. So far, what I have done was use a system where the user can input a variable or a string. If it's a string, I used `eval` (or `evalin`). If not, I test with `inputname` and if I can use it, I do otherwise I print something generic. None of this is mission critical. I was just hoping it could be done
Thanks for the help! I managed to get it working!
&gt;edit: I just solved the problem by using the randi function instead. (randi([0,9]) but feel free to enlighten me to solve the problem with rand :P E.g. `floor(10*rand)` or `round(10*rand-0.5)`. This is, however, a strictly worse option. Integer random number generators are specially tuned to be highly uniform for integers and simply rounding a double RNG value is likely to produce worse results. 
Thanks! This might be offtopic, but do you mind explaining how I allow zeros in the randperm function so I can get vectors between 0 to 3 and not 1 to 3 when I do randperm(3)?
Oh, wow. I've been overthinking this way too much! Thank you very much for the help!
You can also use ceil - ie ceil(rand*10-1) - although it's not particularly neat. I'm used to using round() because I simulated dice on my calculator at school and I only had a round() function and no ceil/floor button...
http://www.mathworks.com/help/stats/random.html random('unid',9)
That randiness'll getcha every time.
&gt;im pretty sure its wrong. HEY GUYS IM GETTING THE WRONG RESULT WHAT TO DO This is a schoolbook example of a worthless question. 
A stiffness matrix is created by integrating derivatives of functions that describe the displacement of the structure. Often, those displacements can be modeled by simple polynomial functions, e.g. x^2. Gauss quadrature is a way of integrating polynomial functions without actually integrating. It looks more complicated, and is a bit cumbersome to use at times, but in actuality, its just the sticking weights in front of the terms and summing to yield the exact answer. Doesnt work for many functions, but it does work for polynomials.
Im asking for help to find a different way to solve the problem, if you dont know thats fine, you dont have to comment. Ive been looking at several examples online, but none really deal with arrays.
There is nothing wrong with what you posted. It returns exactly what you asked for... &gt;&gt; Mat1 = 1:16; &gt;&gt; Mat2=[Mat1(1:6); Mat1(7:8) 0 0 Mat1(9:10); Mat1(11:16)] Mat2 = 1 2 3 4 5 6 7 8 0 0 9 10 11 12 13 14 15 16
He has a column vector, thus it doesn't work. OP you should first transform Mat1 to a row vector: Mat1 = Mat1.';
I'll just see myself out. I wonder if that 'camping outside for a week resets sleep cycles' trick from the front page the other day will also work for mild retardation that always seems to accompany deadlines. Maybe I should stop using a MATLAB subreddit as my distraction from actually working in MATLAB...
You probably want to loop over h instead of x. Also you get a straight line of points because you should do ./h instead of /h because h is a vector. close all; clear all; clc; h = 10.^-(1:.1:16); x = 0:.1:(pi/2); for ii=1:length(h) e = abs(((sin(x+h(ii)) - sin(x))/h(ii))- cos(x)); plot(x,e) hold on; %plot all lines in the figure. Remove this if you just want to see each line seperately title(sprintf('h = %g', h(ii))) pause(.1) end
haha, i do the same. Its ok though, you are trying at least to help :P.
Thank you. I think this is what I'm looking for. I'll run it when I get the chance and see.
It was the ./h, forgot you needed a "." for division, thanks a bunch!
First off, replace a with e (the constant) to get a simpler feeling of the Taylor series. Then you can see that e^x is just x^0 / 0! + x^1 / 1! + x^2 / 2! + ... (if you don't see this right away, convince yourself of it) Once you see the pattern and do a few runs with e^x , go back and see how they generalized it as a^x . As a side note, ln(e) = 1; you may already know that. edit: Concerning bullet point 3, I'd argue a for loop is a better iterative structure for this.
Okay,so how many times should I iterate this? Does it matter? I guess what threw me off was that a while loop was recommended, which usually means that the amount of times it needs to be iterated is unknown. EDIT: This is what I have right now, which seems correct. function result = lastName5(x,a) r = 0; for k = 0:1:5 r = (((x * log(a))^k) / factorial(k))+ r; end result = r + 1; end
Composite/Laminate Design What is an efficient way to input a series of z values ( B Matrix in particular) into Matlab? I have been doing it manually. It's very time consuming, and I fear that the composites are only going to get more complicated (more layers, more summations etc), and manual input will not be a realistic option. I'd appreciate any advice/help/links. Thanks! 
The more you iterate, the more it will converge to the correct answer. [Here](https://www.wolframalpha.com/input/?i=plot+e^x+and+1+and+%281+%2B+x%29+and+%281+%2B+x+%2B+x^2%2F2%29+and+%281+%2B+x+%2B+x^2%2F2+%2B+x^3%2F6%29+and+%281+%2B+x+%2B+x^2%2F2+%2B+x^3%2F6+%2B+x^4%2F24%29) are a few plots that will show e^x compared to 1, 2, 3, and 4 iterations (partial sums) of the Taylor series of e^x.
So since it just has to be correct to six decimal points, lets say i do k = 0:1:10 would that be accurate enough? Maybe that's why I need to use a while loop, to make it accurate to six decimal places exactly? How would I check for that?
Ah, I see. I should've read it a bit better. In the while loop, the conditional statement can check for a six decimal error. while (actual - answer &gt; .000001) or something tricky like that.
My pleasure.
For the B matrix, the Z-values can be entered as: vecZ = z(2:end).^2-z(1:end-1).^2;
I'm not quite sure I know where you are confused, but here's how I am reading it: Let's say somebody puts in a 5 and it loops from 3 to 7 (4 loops). It establishes F(1) as 0 and F(2) as 1 and then begins calculating F(3) to F(7). F(3) = F(2) + F(1) etc. The second part is for values of n &lt;= 2. It sets F(1) to 0 and F(2) to 1 if n == 2. If n == 1, it just sets F(1) = 0, and finally if n is neither 1 or 2, it's useless and throws an error (this takes care of negatives). I hope that helps.
Pro tip: To display your code nicely like /u/peargod use 4 spaces before each line of your code. 
I'm guessing you pasted it into your current code. You need to create a new function, and then paste this into that function, and then call that function from your standing code. In other words, there should be an entire file that is just this function, and from the workspace or from another script you can call funcFib(11) and get 55.
You don't need to know that stuff, its stupid. :p
Wait hold on, is this an add on to my original script? I thought it solved the problem by its self. And no i didn't post it with the current code. I put it in its own .m file
The 750Ti seems like a good card and the 2 GB of memory should be enough for tinkering around. I've used many consumer grade GPUs in Matlab and have always been happy with their performance. Just a note: Double precision speed is artificially restricted in the consumer models, so make sure you work with single precision numbers whenever possible. 
Take the above code, put it into an m file and save that to &lt;location&gt;. in matlab, type cd &lt;location&gt; res=funcFib(11) and it should definitely work. in your script you can do the same.
is location a folder that already exists? because I don't have it. I tried creating a location folder. Opened a new script, entered the code you said to and it said Cannot CD to &lt;location&gt; (directory access failure). Wow.. I'm doing so many things wrong today
no. i used &lt;location&gt; merely as a placeholder to wherever you'd want to save the m-file. it could be C:\temp or whatever you want. see, the thing is that matlab has a search path. that is a collection of folders in which matlab searches for files. so when you type mean(1:10) on the command line, matlab searches through the path to find an m-file called mean containing a function called mean (filename and function have to be the same). This brings up a next point. when you saved the m-file, did you name it "funcFib.m"? because you should. regarding your problem: create a folder on the following path C:\temp\myMFiles and then type into the matlab command line: cd ["C:", filesep, "temp", filesep, "myfiles"] this builds a string by concatenating the strings in "[]". filesep is the file separator used by your operating system. Matlab should cd to the location. type pwd to find the current location.
Thanks. Could you recommend me a double-precision compatible GPU? I tried looking and either they're super expensive or rather weak ... Otherwise, single precision should be fine. My main concern is I don't know too much about CUDA (all I know is parallel loops) and I don't want to inadvertently buy a card that won't do much in the way of parallel computing. 
Thanks. Looks like I'm getting the 750 Ti then. I already have access to R2013a so I should have all the necessary tools to learn, hopefully. 
Why not open the file before the main loop, keep it open, and write a line to the file every time you go through the loop? This is the usual way.
Yes this! Also, don't forget to close the file at the end of the loop. 
use: disp( sprintf('The value of k is %i', k) );
Or, switch the order of the statements under the If statements. Have the text first then the equation. Then just take the semicolon off of the k equation and it should display it automatically.
Not sure exactly how to do what you're trying to tell me haha
1. I am not sure if I correctly understand your problem, but I think you'd like to round 1.12345 to 1.1235. So, you just need to multiply it but 10e(# decimal place), round it, then divide it by the same number, i.e. a = 2.12345; a = round(2.12345*10e4)/10e4; 
Don't mean to be a dick about it, but just in case you don't actually know: http://www.wikihow.com/Take-a-Screenshot-in-Mac-OS-X
sprintf returns a formatted string, so you can use it to put the value of k in a string, and then disp will display it properly. After looking at this again, I've realized that you should probably use: disp( sprintf('The value of k is %0.2f', k) ); since k represents money, but the basic idea is the same. [Here's a link to the documentation for sprintf in case you're not familiar with it.](http://www.mathworks.com/help/matlab/ref/sprintf.html) The way it operates is pretty standard (you'll use the same formatting system in C++, for example), so it's good to understand it well.
That's a neat work around, thanks. 
Sorry I wasn't posting this from my laptop I was posting it from my phone but thanks 
You just have to copy-paste what he's typed into your code where you have your disp lines. What I think you actually should do is just use: fprintf('For a %%10 tax, the value deduced is %0.2f\n', k) This will print to the screen the value of *k* as a floating point number with two decimal places. The percent sign is a special character which can be used with letters like *f* to symbolize floating-point numbers or *i* for integers, etc. To actually just display a regular *%* symbol, you have to type it twice. *\n* is used to trigger a new line. This looks like a good tutorial on fprintf: http://www.cs.utah.edu/~germain/PPS/Topics/Matlab/fprintf.html
Thank you both! I used sprintf and it displayed it just how I wanted it
I am thinking out loud, but maybe try to use that as a function and then make a while loop. So set a variable that represents the yes or no of checking another grade, and it will repeat the loop as long as that confirmation flag/variable is set. 
Yeah, this would be the easiest way
Am I the only one who noticed that a text document has been photographed and the picture uploaded? I'm a bit flabbergasted as to the reason why, I must say.
[There's also round2 on the matlab file exchange.](http://www.mathworks.com/matlabcentral/fileexchange/4261-round2)
Something like this might work: RUN = true; while(RUN) (your code) quit = input('Do you wish to continue?'); %type 'y' for yes, anything else for no if(strcmpi(quit,'y')) RUN = false; end end
Generally, you can create a screenshot and post that as an image, or copy/paste your code into a website like pastebin that way we can see it. Your method is like taking a digital photo, printing it, scanning it, then emailing it to whoever you want to. You could have just emailed the original picture. :)
Or just paste your code to something like gist.
As others have hinted at, look into using a "while" loop outside of what you want to do if the user selects "multiple records". You may also want to prompt the user for their input, so something like: nrec = input('How many records?'); nrec_start = nrec; while nrec &lt; 0 % whatever your code to loop over is nrec = nrec-1; end **BUT:** be careful **!!!** as an improperly parameterized while loop can loop forever. ^(and i wouldn't be surprised if my code above loops infinitely)
&gt; ...or copy/paste your code into a website like pastebin... Pastebin works too.
Or you know, directly into the reddit comment.
It does seem goofy, but the easier services like imgur and iCloud make it to move photos around and share them, the more it starts to look like the path of least resistance.
I am constantly amazed at those barcode scanners that read smartphones for airline boarding passes, concert tickets, Starbucks gift cards, etc. Computing power has progressed so much faster than the human species ability to agree on networking standards that now the most efficient way for two computers to communicate with each other is for the first to display an image on its screen and for the second to take a picture of it, run some image analysis routines, and extract the message from said image.
I just read it over. So it looks like the 500-series don't have any restrictions for double precision calculations? 
&gt; but we don't do your homework! Show us an attempt, then we can help.
Could be that it is still restricted, but much less than in the newer generations. A current high-end GTX 780 will barely beat a 580 in double precision. Also, a 580 has a higher memory interface width than the 750 Ti (384 Bit vs 128 Bit). Depending on the application, GPGPU programs can be entirely limited by memory bandwidth, and the aging 580 has twice the bandwidth of the 750 Ti. It is hard to say what exactly you need, as it depends entirely on your application. Dig around for some Cuda benchmarks and compare cards within the price range. I can post some links tomorrow.
Hint: Modular division by 2, min(), and max(). Come back with an attempt (and capitalize a few letters to at least act like you tried... come on, man.)
Try talking to your professor or other students, I doubt many here want to do your homework for you. From the sidebar (emphasis mine): &gt;MATLAB code tricks, discussion, and questions; but **we don't do your homework**! Please do not ask us to help you pirate anything.
Well I'm not really asking anyone to do my homework. I make sure never to ask for help until I've tried my best and struggled for hours. I got pretty damn close to the answer (in #5 at least) but just can't seem to get it right and have no idea why. I plan on talking to him tomorrow.
I haven't used simulink before but I'll check it out. 
I mean it's just a lot faster for me to take a picture with my phone and post it with my phone since I really only reddit WITH MY PHONE haha. But I will try those other alternatives for future reference so thanks to everyone who helped
Look online for some process controls problems using simulink. That program is really nice for modeling and picking the solver you want to use e.g. ode 45. If this is not your first controls class, you might be familiar with the derivative and integral blocks that you see. There are also "toolboxes" in simulink that focus just on control problems. 
What version? You are looking for a Lookup table. If it's a straight linear equation you're better off just doing the equation, it'll be faster.
From that reference, `map()` is as follows: long map(long x, long in_min, long in_max, long out_min, long out_max) { return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min; } It's probably easiest to implement this with base Simulink blocks since this is a simple function. If it were more complex, you might have needed to write an S-Function/TLC that explicitly calls the function. You could also use `coder.ceval()` in a MATLAB Function block, but then you'd have to add the Arduino runtime library to the Sim Target dependency pane (never tried this, dunno if it actually works).
thanks this is what I was looking for
Google it! Chances are, you'll get results from MATLAB Central which should get you where you need to be. We just want to see that you've put some effort into your homework before we help.
You will get better replies if you just post the text of your code. A screenshot is a pretty big no-no already; a picture of your screen is just ridiculous.
You will have more success if you ask a very direct, specific question. "My giant blob of homework code is broken, please read through these walls of WTF IS GOING ON" is not going to get you very far.
The velocity in the pipe is dependent upon the height of the water. Put it in terms of height, and that should solve the problem. Also, the friction factor is dependent upon velocity, so that seems to be part of the issue. First, I would attempt to put velocity in terms of height. Then substitute in. However, this may not work, and you might have to go in and solve each friction factor for a given velocity, and then plug it into the equation as well. 
Thank you so much - I figured out what I was doing wrong.
There are several reasons why you should do it: 1. Readability, its easier to read the code in text form. 2. People can copy paste the code to check it, adjust it etc 3. People will be more inclined to help you if they see you put effort into your post. Besides hitting ctrl-A, tab (so your code appears in code form on reddit), ctrl-C, and ctrl-V should be faster than taking a picture with your phone and uploading.
Sounds like you should go to your professor's office hours.
in general you can't assume that people on here know exactly what you're doing. i for example have no idea what your code really does and don't really want to understand the whole thing. we do look for syntax errors first. that being said, maybe i can point you into the right direction. regarding question 3: the compiler already states the problem within a=[a,find(M1(:,bchoice)==max(M1(:,bchoice)))]; if you're using matlab, i recommend you try the debugger to find the problem. but let's have a look at that. M1 is a 2x2 matrix. as is: M1(:,bchoice) at the same time max(M1(:,bchoice)) is a 2x1 vector. so what you are trying to do here is comparing matrices of completely different sizes. 2x2 == 1x2 that doesn't work. if you are trying to get the very absolute maximum of the second operand, try find(M1(:,bchoice)==max(max(M1(:,bchoice)))) that also allows you to do the actual concatenation of a and the result of the find operation. do the same for the achoice part in the next line. then you go on and do this: b1first10 = b1(1:10,:); problem is, b1 is of size 2x198 and thus your operation is out of bounds. i assume you meant it the other way round but have no idea because i don't know what you're doing, as mentioned above: b1first10 = b1(:,1:10); if you then rewrite the disp like this: display(b1first10.') display(b2first10.') you get the correct results. there's still an error in the second part but i will leave that up to you. use the debugger if using matlab. in octave, i have no idea how to debug but you can just copy and paste code snippets into the command line and execute them one by one. general: look at the sizes of arrays you create, ad a figure() command before the first subplot command, use a piece of paper to actually write down what you are doing and think about the operations you're doing (especially when you're a beginner). there's nothing worse than just starting to write mathematical programs without first really outlining the algorithm. hope i could help.
I figured it out... If anyone is interested i can share some code The short answer is that I used polar() to create polar axes, plotted the data on top of that with pcolor() and then hid/showed what I wanted by setting handle attributes. I had to hack polar() a little bit to make the ticks how I want them [http://imgur.com/bL3LFli](http://imgur.com/bL3LFli)
Are the points evenly spaced? If so you can just use `contour`. Otherwise you're going to have to do some smoothing first. Gaussian weighted average is probably a good first choice.
Thanks. Right now I'm thinking about just foregoing unrestricted GPUs due to the cost/performance. 
You're assigning a column vector to a row vector. Fixing that still throws an error, but you can probably figure that out on your own.
First thing, I believe your double for loop should look like this for ii = 0:3 for jj = 1:10 B(jj,ii+1) = mean(A(jj,(1+5*ii):(5+5*ii))); end end Where the **6**s are replaced with **5**s. In the vectorized version you are providing a matrix to mean(). In this case mean() by default finds the mean along the first dimension whereas you need it to calculate the mean along the second dimension. You can fix this by telling mean() to work along the second dimension as follows. for ii = 0:3 B(:,ii+1) = mean(A(:,(1+5*ii):(5+5*ii)),2); end I believe this should fix the problem.
Oops, yes, those 6s should have been 5s. Thanks a lot for your answer, I didn't know that about mean()!
This can be done using matrix multiplication. It's a purely linear operation. Think about it. 
Brilliant! It totally escaped me even though I have used this trick before. Hopefully OP sees your post and gives it some thought.
Wow, that's amazing. Why didn't I think of that? :P Thanks a lot, everyone!
In this case, the linear operator can be realized most easily using the German army knife that is the Kronecker product. M = kron(eye(4), ones(5,1)/5); 
You two are awesome!
&gt; This is my first time posting so I'm not sure what all of my code I need to include but I'll do my best. All of it.
There aren't enough characters available for it all. Ideas?
Okay I will try and work with that and post if I have problems.. But seeing what you mean in code would help a lot. Thanks
One route might be to also include the find() function, some way, ... some how.
Look in the documentation for max() and it will tell you your answer. [y_max_value,y_max_index] = max(y) This returns the value of the maximum y as well as the index corresponding to where that maximum value is located. Therefore: y_max_value = y(y_max_index) Now the corresponding x for your maximum y is just x(y_max_index). Good luck.
 x(y==max(y)) But if you want more precision you should check out `fminsearch`. It's an amazing function that's designed to solve exactly this problem.
The second parameter is the sum of the filter coefficients. Likely you would like it to be 1, which is the default if you just use the first parameter only. This is all very explicit on the matlab help page. if you just type 'help dbaux' on the command line 
http://eeweb.poly.edu/iselesni/lecture_notes/WaveletQuickStudy_expanded.pdf The bottom of page 4 gives you all the equations you'll need to implement in MATLAB. It's rather straight forward for the forward and inverse transform. 
Also, that was only for 1-D, I'm not sure about the 2-D implementation for an image. 
Turns out it was the virus scanner. Thanks A LOT Pugnare. You're part of reason why reddit belongs in the workplace. Haha.
If you absolutely must use those exact names: W1 = ones(3,1)/3; for kk = 2:20 eval(['W' int2str(kk) ' = A*W' int2str(kk-1) ';']); end Or just save the sub-results in a matrix. W = zeros(3,20); W(:,1) = ones(3,1)/3; for kk = 2:20 W(:,kk) = A*W(:,kk-1); end
Look at the rice wavelet toolbox, rwt. I think that's what you want. 
Thank you everyone! Please if anybody knows more it would help me
Thank you dude! That link seems really useful, I found something about this values but I didn't understand why were this numbers.
Why not use the matrix exponent operator? &gt;&gt; A^19 * W ans = 0.3095 0.4462 0.2442
Lol @ option 1! I think you are answering his question a bit too literally!
It looks ok, what's the problem your having.
My average amount won is relatively low. My friends get values in the plus or minus tens of thousands but mine is between plus or minus 10. Am I that lucky? edit: Which doesn't make sense. Even if I won more than 90% of the time, I still lost tens of thousands of times. And losing double my wager, where as winning would only increase me by 5
Make a vector of strings with the colors, i.e. colors = ['red' 'blue' 'green' 'cyan' 'black']; then inside the for loop, go something like for i=1:5 hold on; plot(xData(:,i),yData(:,i),'linecolor',colors(i)); end
I need it to alternate line styles as well at the same time. How would I do that?
But put the colors into an array. colors={"red", "blue"}; colors{1:2}
you could also do it after the loop. plot(x, y1, '.-r', x, y2, '--g'); if you do not know how many plots you're going to have, you could put it into a format string that you use.
It appears that FITS uses a column-major format like MATLAB. You should be able to recover the image using "reshape". For example if the image "im" has "m" rows of pixels and "n" columns then: fixed_image = reshape( im , m , n ) I'm not sure why the data is being imported as a vector. It may be an issue with the file itself. "fitsread" is capable of importing multidimensional arrays. The example from the documentation page: im = fitsread('tst0012.fits' , 'image'); imports a 31 x 7 x 5 array.
The array colors will need to be a cell array. Otherwise the separate strings in colors will be concatenated together. Also the property name for line color is 'color' not 'linecolor'. The revised code below should run properly. colors = {'red' 'blue' 'green' 'cyan' 'black'} for i=1:5 hold on; plot(xData(:,i),yData(:,i),'color',colors{i}); end
Brilliant, thanks! I'll have a go at doing that. It might be the case that the files are indeed being saved in a way where matlab doesn't read them in the same format, I.e. some of the tables I've been using have been played with via topcat, which hasn't got permission to create certain file formats on university computers.
Also useful function can be lines=findobj(gca,'Type','line'); gca gives you the last active graphical object which creates handles for line objects and then colors={'b','r','g','c','m','y','k'}; markers={'o','x','+','s','&gt;','&lt;','p'}; set(lines(ii),'Color',colors{ii},'Marker',styles{ii}) all that can be useful if you are adding things to the graph from different function or in different loop and if you want the colors and styles "cycle", use function mod to get another index (say you have 8 lines and only 6 colors defined, then the index for colors is jj=mod(ii,6)+1;) 
You can use 'hold all' to ensure color changes with each subsequent graph. It will do nothing for cycling through decorators (line styles) though.
http://www.mathworks.nl/help/physmod/sps/powersys/ref/battery.html
No; that's just an example. It's saying that if you iterate up to 3 steps (up to (x\*ln(a))^3 /3\! ) you have an error less than (x\*ln(a))^4 /4\! Similarly, if you iterate up to only 2 steps, you have an error less than (x*ln(a))^3 /3! Meanwhile, you want an answer accurate to 0.000001 (six decimal places?). Think about what your while loop condition wants to be, considering the above. 
Sorry I'm a little confused, that sounds like the less you iterate the more accurate you will be and that you'll only need to iterate once, which defeats the purpose of a loop. 
Okay so the error must be less than 0.000001, is actual value just a^x? 
Put some numbers to your variables, and you'll probably see that the more you iterate, the smaller your error. (assuming x is small, etc.)
So my actual is the value of the next term?
Ohhhhh so it's just the next term in the series minus the sum of all of the previous terms?
you are very welcome. glad i could help.
I just realized bobinpants also gave my response before me. sorry for stealing the spotlight. there is nothing wrong with the code above.you do not need the X=32 part unless you're actually using it. run a clear all before execution. apart from that i don't know. there are no unbalanced or unexplained parenthesis or brackets. also, the loop should be more something like this: res={}; for i=32:255 res{1,i-31}=char(i); end disp(res); that shifts the elements in the cell so the first element in the cell is the character corresponding to 32. paste this code [here](http://www.compileonline.com/execute_matlab_online.php) and hit "execute script".
So this would be the solution? function result = lastName5(x,a) k = 0; result = 0; error = 0; while (error &lt;= 0.000001) result = (((x * log(a))^k) / factorial(k))+ result; error = (((x * log(a))^k+1) / factorial(k+1)); k= k + 1; end end EDIT: This is actually giving me 1 for every value. I have now changed k to equal 1 initially, is this now correct?
Change error = 0; to error = 1; and (error &lt;= 0.000001) to (error &gt;= 0.000001)
Do you know how your function reads in the data initially? As in, what type of data this column should be and how wide is it before I get to the next data type? If it is strings, and you can be fairly confident that the formatting will always be the same, maybe something simple like stripping off the indexes that are your data and doing a str2num() on them.
You need to try to articulate what you problem is. Writing programs is the most effective way to learn. As you start writing them, you'll have to look up commands that provide the functionality you're looking for and you'll become more familiar with the standard matlab functions. If it's a matter of basics (like flow control: if, for, while loops, or indexing) then you really need to nail down the problem you're having with it. Start by trying to tell us (maybe even edit your question to be more descriptive).
`intmax / 2` is equal to 2^30 , not 2^30 - 1. When one operand of an arithmetic operation is an integer and the other is a double, MATLAB does arithmetic in double precision and then converts the floating-point return value to the appropriate integer data type based on the context [[Doc]](http://www.mathworks.com/help/matlab/matlab_prog/integers.html#f2-98095). So `intmax / 2` is the same as: &gt;&gt; int32( double(intmax) / 2 ) ans = 1073741824 `dec2bin` is a builtin function that will convert a decimal number into binary and return the output as a string. &gt;&gt; dec2bin(intmax) ans = 1111111111111111111111111111111 Of course, you'd have to do something funky if you want it to show any leading zeros.
http://www.imc.tue.nl/
I am trying to convert without using intrinsic functions for conversions. Are you saying I can't do that?
You have a course that requires a program it doesn't provide? That doesn't make any sense.
[fprintf\(\)](http://www.mathworks.com/help/matlab/ref/fprintf.html#inputarg_formatSpec)
This is the same with my classes. They provide a lab so they don't have to provide you with the software. OP there is a student version for $100... 
They are providing you with the software.
I guess it's similar to textbooks. Courses require them but don't supply em
my uni provides a citrix version of matlab, see if yours does. If not, try gnu octave. granted it isnt 100% identical, but for most of the things you want to do, you will be fine. I am curious though, is there a particular reason you are using matlab? is there a specific library you require? is coursework required to be submitted in matlab?
Honestly, I know nothing about matlab- all I know is that I need to use SPM8 to analyze neuroimaging data. And like somebody said below, they do offer computers on campus which have the program, but I need to use it in the classroom... so that doesnt work for me. What is this octave? Will I be able to use SPM on it?
I can almost guarantee your computer labs have Matlab on them.
&gt; SPM on octave It doesn't look like it. Octave is an open source computing language very similar to matlab.
Oh you definitely can. Using your code, all you would need to do is change the line a = floor(a / base2); to something like a = (a / base2) - 1; Also, you probably only want to iterate the `for` loop for `i = 1:31` since 2^31 - 1 is represented with 31 ones in binary.
Validating a time with no particular format is a way too open ended problem. Is 1:00PM valid? How about 13:00? Or "one in the afternoon"? Your best bet is too tell the user to enter the time in a certain format. eg: HH:MM Once you have done that you can use [strsplit](http://www.mathworks.com/help/matlab/ref/strsplit.html) with ':' as the delimiter to split the time into hours and minutes and then validate each separately. "time2str" is depreciated. The current version is [datestr](http://www.mathworks.com/help/matlab/ref/datestr.html). This function is used to convert MATLAB's internal time representation format into a more standard format. It probably won't be of much help here.
One way to learn is to go hang out on [MATLAB Answers](http://www.mathworks.com/matlabcentral/answers/) and [Stack overflow](http://stackoverflow.com/questions/tagged/matlab). Read the questions that people have and try to solve the problems on your own using "doc" and google. If you get stuck, check out the solutions that people suggest. This is a great way to learn how other people use MATLAB and get exposed to a lot of different functions and workflows.
It is significantly more difficult to require an input with no particular formatting. You would have to set up a variety of cases. I'll give you a few examples and how I would solve them. If the date is entered as an integer (123), you could use the modulo function to separate it: input = 123; minute = mod(input,100); hour = (input - minute) / 100; If the date is formatted like 1:23, you can read it in as a string, then use textscan to parse it like so: input = '1:23'; parsed = textscan(input,'%d','delimiter',':'); hour = parsed{1}(1); minute = parsed{1}(2); However, that only works for that specific delimiter. So you have to have multiple situations to check for like '/' or '-' or possibly any non-numeric character the user may decide to enter. Another option would be to set up a UI pop-up which would be more complicated to implement, but would eliminate user formatting dependency entirely. If you force the user to enter a specific format, you can error check it more easily. Then have an error message telling the user they can't read and to try again.
Sorry, I should have been more clear. Yes, I would like HH:MM . Great, I'll proceed to strsplit to validate the HH and MM separately. Thanks for your help.
The course is brand new, so maybe eventually they will offer it with the course.. but until now, you're right about the citrix version. The professor said it probably won't work because of the immensity of the data we need to process if more than a few people in the class attempt to use it at the same time, so I was trying to avoid doing that. If it comes down to it, I will try to use that. Has anybody here successfully torrented it? 
Sorry forgot to update. I was able to get it really really close to working. Couldn't quite solve it, but got it to a great level. Thanks again - very helpful!
Hmm, perhaps you're right with setting up a UI pop-up so I don't have to rely on the users format. Any chance you can link me to a tutorial about that? Thanks for your replies.
Your university should provide free lessons or you should have access to a student edition (not sure about this; I think it still costs money). If not, there are free Matlab emulators: look at Octave and SciLab.
Sidebar, the help documentation and searching in their community solves almost all questions you may have.
Torrent it if you don't care. You can use Scilab or Octave. Octave is more complete than Scilab but i don't think it has a GUI (at least i never used one) and both should do most of the things your course would require for Matlab.
If you only are using spm you may have some luck using the standalone version http://en.m.wikibooks.org/wiki/SPM/Standalone I have only used the standard Matlab version of spm so I have no idea how well the linked version actually works. And you may been to use some other Matlab based imaging stuffs/SPM toolboxes (rest, gift, some visualization program who knows) for your class which would then present a problem, but maybe you could just just the lab for those tasks. 
Haha, great. Thanks for your help. I'll check it out!
Nice! I'll ask my professor if that would work and I'll give it a try.
Watchin YouTube tutorials helps a lot. Also learn to use the Matlab "help" or "doc" function (like "help mean", help "sym", etc). The help function writes function information into the Command Window, whereas the "doc" function opens the help file in a new window. You will be constantly using the help function to find out what sort of information a function takes as inputs and what sort of information is available as outputs. Code examples are often included in the help text.
Are you taking it through a university? If so you can likely access it through a virtual lab.
Matlab also has something called "Cody" online. This starts with small challenges and escalates to harder challenges, allowing you to ramp up. It should be an effective way to play catch up in your class. If you actually want to learn Matlab on top of what Cody offers, try out Google Code Jam. Quite a few of the problems were solved using Matlab, allowing you to observe how others operate Matlab efficiently. 
Matlab has been updating and expanding it's class-based options in recent releases. I expect we'll continue to see these updates as well, but yeah, I think most people have encountered issues with classes. 
Some universities have school-wide licenses. You'd have to figure out if yours does or not probably through the engineering department. Others have mentioned many alternative methods. Of course, you could purchase the student version which is less than most textbooks.
You're this clueless two hours before your final and you're too lazy to at least attempt to find the answers on your own? [Start here](http://www.mathworks.com/help/matlab/). Come back when you've expended some effort.
It's an intro class so this is pretty much the hardest stuff we do. I'm reviewing the other stuff now. I'm putting in all the effort I can man. 
I have also already found some of these. I just don't have time to find ALL of them and was hoping for a bit of generosity from you guys. I've worked through half of these on my own and you seem to be one of the few people on here right now. Do you think you could help me out a bit? I have to be at my final in 20 minutes.
That would be doing the assignment for you. Perhaps if you asked a more general question or something more specific related to the code you were trying to write we could help rather than do it for you
I have a code for part A but I'm not sure how to do part B for an alternating series
It's all in the documentation man. Almost all of them are certainly things you should already know by now if your final is in 20 minutes. 1.) Logical array is an array of logicals. Logicals have their own data type but it's just ones and zeros. 2.) [function](http://www.mathworks.com/help/matlab/ref/function.html). Almost the most fundamental language syntax MATLAB has. 3.) [save](http://www.mathworks.com/help/matlab/ref/save.html) 4.) [Nested function](http://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html). [Subfunction](http://www.mathworks.com/help/matlab/matlab_prog/local-functions.html) 5.) [Symbolic to Numeric](http://www.mathworks.com/help/search/doccenter/en/R2013b?qdoc=symbolic+to+numeric&amp;submitsearch=Search)
Sorry I just have to figure this out in the next 25 minutes. And I figured I'd try to do that because I remember with C++ you could check by dividing the number by 2 to tell if it was odd or even. But we haven't gone over a way to do that with MATLAB and so I'm not sure what would be a good way to do that 
Yeah, heaven forbid you should have to actually learn something.
i = max_value; sum_of_series = sum(arrayfun(@(x) (-1^(i+1))*(i^(-1)), 1:i)); edit: It should have already been due by now, so I don't feel bad about posting this?
Yeah it was due. I had something along the lines of an if else loop where even numbers gave positive values while odds gave negative but I didn't get the value the professor was looking for. Thanks for helping tho
Have you tried Matlab objects yet? The editor seems to be able to tab complete methods, etc.
sum(1./ (1:2:10000)) - sum(1./ (2:2:10000))
As I alluded to.. if those objects come from somewhere other than being explicitly created (e.g. myobject = helper(filename.txt);) then the editor has no idea what class 'myobject' is and can't do anything.
&gt; http://www.baseball-reference.com/leagues/MLB/2013-standard-batting.shtml' Just got a 404 *edit: nevermind, worked
&gt;The function returns an NxN array which includes the data from each cell of the table on the internet, but text and numerical cells are returned as character strings. I would like to extract all the numerical values from the table and convert them from character strings to numbers. So.. something like: 'PlayerName Stat1 0.342 Stat2 0.754 StatN #########' gets returned into MATLAB when you run your function? Row upon row of this? You could simply list the StatN names of the statistic in a cell: statname = {'BA','somethingsomethingPercentage','RBI','statnameN'}; find where in the first stat line you read these strings are, try something like strcmp(), then read the strings that are between these - since the numbers are still a part of the initial string you read in you'll have to str2num() to get them to single/double.
aww, you so nice. of course you are very welcome.
I always find a way of using (-1)^m for alternating series. In this case, since the first element of the series is +ve, m would be m+1. Element 1, m+1=2, (-1)^2 = 1. 2nd element, (-1)^3 = -1, which gives the alternating pattern. From there you only had to incorporate the co-efficients.
Upon going to the site, it's simply 2 tables. There is a link to make a CSV file. If you can work with those that is your best bet I think. You just click to "makeCSV", copy the text from the browser to text file and save. ^(sorry for so many replies)
I would counter with "you get to use the documentation in real life!!!" except this sub has very, very thoroughly proved people would rather post a terrible, vague question, wait 6 hours, get called a moron, and get a half assed answer than spend 20 seconds on Google and in the built-in documentation. 
For each truth, find the nearest user input. You can either allow an input to be matched to two truths, or remove them as they are matched potentially causing an input to be matched to a suboptimal truth. Hopefully your scenarios are well constructed leaving enough space so that it is reasonably expected that there will always be a very distinct 1 to 1 mapping.
I'm not sure if I follow. Presumably you have a set of actual locations for the coins, yeah? So why don't you generate a pair between a given location selected by your subjects and the closest actual location? Am I missing something here?
Sure, but I shouldn't need a grammar text to figure out how to write "The ball is red" on my English final. If I did, at the very least I should know where to look.
But but but the place where you look is BIG and has a LOT of stuff. Surely you don't expect someone to search through it! You jest sir!
Think about how counting in different bases is defined: base^digitCount For the patterns, think about what happens when your pattern occurs. It occupies a small portion of the available spots, how many spots are left? And how many permutations of those spots are possible (hint: this is the same situation as the first part of your problem just with slightly different rules). How many places can this pattern fit? 
Simplest way would be to throw a [breakpoint](http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#brqxeeu-182) in where you'd like to pause the program, then continue when you want to go to the next step. This won't require any modification to the code. Another simple method would be to create an array of your errors and output it so you can plot it and watch how the function (hopefully) converges.
gotcha. this crossed my mind and was going to be my default go to if there were no responses to this thread. Thank you!
Yea, that's what u/matuba seemed to be suggesting as well.
You're a little unclear but that's okay. By visualize, do you mean get output in the command window at each step? If so, you can just take away a bunch of the semicolons in the while loop and the data will print out in the command window as it is calculated. Or do you mean as a plot? For this, there will be a more substantial modification necessary. What I would do is make a vector of length max_iterate + 1 outside of the while loop. I would make the first value of this vector equal to x0 (the guess). Then, inside the while loop, I would put the current value of x1 into the next location in the vector. Since this is a while loop and not a for loop, and therefore there isn't a counter built-in to the loop, you'll have to make a counter. Something along these lines: my_guesses = zeros(max_iterate+1,1); my_guesses(1) = x0; counter = 2 while. . .%this is the while loop start, all the way through to where x1 is calculated my_guesses(2) = x1; counter = counter + 1; Then, you'll want to visualize this. You could return my_guesses as a new variable, but perhaps more simply for a newb you could just plot at the end of the function. So, just before the line with %%%%%%%%%%% I would put this: plot(my_guesses); There are a lot of ways to make the plot prettier, and to remove zeros from the end if the function converged faster than max_iterate, but this seems simple enough for now. Good luck!
I'm guessing you want to use the plot() command since you already print out the iterations as they are computed. One thing you should be aware of is that if you place a plot() command (or any drawing command) inside a loop, most of the time Matlab will defer the rendering until the last plotting command. So what will happen is that your code will run, but the only plot that appears on the screen will be the last one, you won't see anything during the loop. This is a performance optimization for when a figure is composed of multiple objects. The solution is to force Matlab to redraw the figure inside the loop- just call drawnow() after your plot e.g. for j = 1:10 plot(rand(1,10),rand(1,10) drawnow end A call like pause, or pause(0.01), will achieve the same thing because it too forces the figure to be redrawn 
You used this phrase twice: "a function that tangent lines". I don't understand what that means. As far as I can tell it is gramatically incorrect.
Thank you. I will be experimenting over the next couple days with this and hopefully I can get somewhere.
`i=1:n' will give you `[1 2 3 4 ... n]`. It is the same as `i=1:1:n'. The middle is the spacing. It assumes one so if you wrote `n-1:1`, it assumes `n-1:1:1` so you need the middle column to tell it to count down
I guess that's cool that they added the GUI. I think I may be the only one who always uses the `matlab -nodesktop` environment.
start: increment : end
Zero is mathematically impossible to show on a log scale, it is like trying to show infinity on a linear scale. 
if you only include two statements, matlab assumes the increment is equal to 1
You can easily invoke MATLAB from whatever language you use to write the webpage and pass it whatever values the user supplies. This type of behavior is widely considered to be a Really Fucking Bad Idea though. Someone is going to notice what you are doing and they are going to try to exploit it. There are ways to make it relatively safe, but given the fact you are asking these basic questions does not bode well for you locking things down sufficiently. Tl;DR - Yes it is possible. Any webserver will work. Any language you chose to do it in should work. It is fairly simple to do. It is a security nightmare.
bsxfun(@minus,T,T')
bsxfun() to the rescue! T = [1;2;3]; TxT = repmat(T,1,length(T)); dT2 = bsxfun(@minus, TxT, T') Edit: /u/narmedbandit wins the clever SOB award for the day. I win the blind fool medal. DOUBLE singleton expansion! BRILLIANT!
Ooohh, bsxfun will singleton expand BOTH arguments? How have I never thought to try that before...
This is just for a research project nothing serious. Could you please go into more specifics on how to do this though? It would be a great help.
Related question: is it possible to use MATLAB's abilities (with dll calls or something) with, say, a C# program? I guess my question is more like "how do you do it?"
http://www.mathworks.com/help/matlab/external-interfaces.html The documentation knows everything! There is even some support for interacting with web services. Might be enough for what you need (and protect you from some of the terrible stuff that can happen when taking user input through a webform).
I should've thought about that. I once tried using Maple, but I quickly gave up.. I don't really do web stuff, so I'm safe!
Thanks, but I don't think this is quite what I'm looking for. EDIT: Maybe I should add, my issue is mainly because I have two separate logarithmic functions and I want them both to emerge from the origin. So I can use your suggestion to get each one to emerge from the origin separately, but it won't do the trick for both simultaneously. 
I've never used it any other way. TIL.
Thank you!
Thank you!
I just realized you weren't the one who asked about web stuff, that was OP. Ooops... Hopefully he notices the reply anyways. I wasn't aware that they had a SOAP interface or I would've suggested it form the beginning. Much, much safer!
I cannot count how many times I've abused repmat() to pre-expand one argument (just like my reply below) rather than just letting bsxfun() handle both of them for me... If anyone needs me I'll be in the corner hiding due to embarrassment.
Haha! Your comment reminded me that I've always wanted to do use MATLAB with C#, so I had to ask.
You have to be more specific than that. What, specifically, is your problem? Sketch up a solution, and then explain why you think it doesn't work. That way, it's easy to point you in the right direction.
There's also getting started and tutorial videos http://www.mathworks.com/products/optimization/videos.html
~~ncdump(filename)~~ *ncdisp(filename)* will list the metadata that describes the file. ncread(filename,'varname') will read in a specific variable from said file. I would start w one file and run both these commands to see what they do and get used to them. Now, what I do is outside of matlab I run an ls command on the directory containing your 365 files. Something like ls &gt; curdirfiles.txt Then, open this file in matlab and read in all the file names. Next make a loop over all the files and do your ncread() for what variables you want, and keep appending the new data to a 3D array. Finally, use min()/max() and find() to find the indecies you want for the min/max of your data. As for the plot, use mean (or nanmean if your data has NaNs in it). Hope this helps. I use something similar to this all the time dealing with CDF and HDF files. It's a bit more complicated with the HDF ones... **Edit:** use ncdisp(), not ncdump() to get the metadata
correct if i'm wrong but it seems like you're trying to execute C-code in Matlab? That doesn't work. you can't just put in C-Code and hope it'll work. you can call an external function using [ceval](http://www.mathworks.de/de/help/simulink/slref/coder.ceval.html). It might be a good idea to state again what exactly you want to do. little hint: when writing code, please write it like this A=B+C; using an empty line and four spaces in the front.
http://www.mathworks.com.au/help/matlab/ref/ode45.html is what I would advise as a first point. There is plenty of examples like www.eng.auburn.edu/~tplacek/courses/3600/ode45waterloo.pdf I am too tired to think about what the solution would be algebraically. So my answer is numerical solution in case you didn't realise. Also you could code up a finite element/volume method newton solver if you feel like a numerical adventure. So there is plenty of options. It is up to you what you feel like :)
Thanks very much to both of you - I will give it a shot and see how it goes!! (watch this space ;s)
I think the OP is running matlab code, often binary formats are just communicated in C typedefs. Formatted for sanity typedef struct { uint32_t index; uint16_t heelCounts; uint16_t lateralCounts; uint16_t medialCounts; } sample_t; typedef struct { uint8_t heelTemperature; uint8_t lateralTemperature; uint8_t medialTemperature; uint8_t batteryCounts; uint8_t padding[2]; sample_t samples[409]; bindata = fopen('filename.bin', 'r'); index= fread(bindata,1,'uint32'); heelCounts = fread(bindata,1,'uint16'); lateralCounts = fread(bindata,1,'uint16'); medialCounts = fread(bindata,1,'uint16'); heelTemperature= fread(bindata,1,'uint8'); lateralTemperature = fread(bindata,1,'uint8'); medialTemperature = fread(bindata,1,'uint8'); batteryCounts = fread(bindata,1,'uint8'); padding = fread(bindata,1,'uint8');
Well, padding is 2 uint8's. But ultimately, you probably need to figure out what the higher level structure of the file is. Does that header come very first, or are there any descriptive bytes at the front of the file? It may not start with that header. Also, do you happen to know what all the values should be? Things like counts are often straight forward, but data like "temperature" being stored in a uint8 suggests it may need to be converted to give you a real Celsius or F value. Beyond that, I must ask, who gave you "header files that defines the way my data was stored"? Parsing binary files is a non-trivial activity and can be challenging for a solid developer. It can, at times, be nearly impossible for a novice. I'm not saying you shouldn't try, just to have reasonable expectations. 
Step 1) Replace seamount with your own similarly constructed dataset. Step 2) Do exactly what they did. Step 3) Profit. 
Wow, good luck. Do you actually know if this structure is being used in the output file format? Open up the file in a hex reader and see if you notice any high-level pattern or ascii text sitting around anywhere. You're probably officially in "trying to reverse engineer a binary file format" territory. I would push for more information on the format. Otherwise, you might get to learn a lot more about reverse engineering file formats than you may want. 
Sorry I don't understand what you want to do. If those functions are different how do you want them to begin at the same point, what you call the origin (there is no origin in a logarithmic plot). You can scale one of the functions by multiplying its values with a constant but Im not sure if that's what you want.
So do you have data like in pairs of x and y values or do you have the functions in expression form? If you do plz post them. Or the data if you have that and its not too large, else post it here: http://pastebin.com/ Also again, you can't have 0 for y on a logarithmic axis: http://en.wikipedia.org/wiki/File:Logarithmic_Scales.svg. You can let y start at an arbitrary small value but not 0. 
Here's what I currently have, where I've manipulated the y-axis on the first plot to make it look like the first function emerges from the origin. &gt;x=[-23:.0001:-12]; &gt;M=-21; &gt;a=-1; &gt;y=exp(-10.^(0.4.*(M-x))); &gt;semilogy(x,y); &gt;ylim([10^-2.7 1.9]) &gt;xlim([-23 -12]) &gt;hold on; &gt;M=-21.3; &gt;a=-1.25; &gt;y=(10.^(-0.4.*(a+1).*x)).*exp(-10.^(0.4.*(M-x))); &gt;semilogy(x,y); 
You can plot the two functions with different y axis: x=[-23:.0001:-12]; M=-21; a=-1; y=exp(-10.^(0.4.*(M-x))); M=-21.3; a=-1.25; y2=(10.^(-0.4.*(a+1).*x)).*exp(-10.^(0.4.*(M-x))); figure; [ax,h1,h2] = plotyy(x,y,x,y2,@semilogy) axis(ax(1), [-23 -12 10^-2.7 1.9]) axis(ax(2), [-23 -12 4.1815e-05 0.1]) legend('y1','y2') Its not very useful to compare them though with different axis but Im not sure why you want them to start at the same point anyway.
Thank you! This is exactly what I was looking for. I appreciate your help, and your patience. :)
You just.... load it... load seamount Again, exactly like the example :o
Thx for the answer. I followed your advice... strange things happened: The matrix 'errors' contains the differences of the network output and the target data for all three outputs lines. It is a 3x694 Matrix. After training the neural network Matlab displays 0.000169176 as the mse. After saving this network and typing in &gt;&gt;mse(errors) I get 0.0852. (wtf?) Performing mse for the first row of the matrix 'errors' I get 0.1918. And for the second row: 0.047. Last but not least: third row is 0.0168. Different values for the different output lines make sense. But why are the first two mentioned values different? 
that doesn't help me any
1. comment out first 2 lines: `load seamount` `who -file seamount` 2. put your own data in variables x,y,z 3. run
Thank you, I found these yesterday and they're much better than the youtube ones I watched. Although MatlabTutorialFull's channel on youtube is better than most as well.
It's really not clear to me what you're trying to do, how you got stuck, or what help you're looking for.
There is a built-in, prctile(), that handles the first portion. The source is viewable (type 'edit prctile' in your command window). As for weighting, you can always pre-weight the samples before passing them in to the above command, or use it's source as a stepping off point. Without more specifics on how you want the data weighted it is hard to be of more help than that. 
In MATLAB you could use the following: `[a ' ' num2str(b,'%2.2f')]`.
Thank you so much! Is there another way to do this with with either fprintf or disp? You are awsome!
I am certified. The test is given as a follow up to a week long, introductory course. I was way overqualified going into it. The test itself took me ~20 minutes. It's like, "how do you extract values 1 2 3 from thsi matrix? option A/B/C/D". Nope, not useful. Decent on the resume tho.
You could use sprintf and concatenation: `[a ' ' sprintf('%2.2f',b)]` or just sprintf: `sprintf('%s %2.2f',a,b)`. Use fprintf for writing to files or the terminal (stdout/stderr).
Oh wow, I would love to become one too! Never considered it before. 
Thanks Again!
how much was it?
How representative are the questions on the [practice exam](http://www.mathworks.com/services/training/certification/exam-questions.html)? They seem quite easy.
the registration fee is $700 !
thanks for the intel. I appreciate it. I guess it will beef up the CV slightly...
yikes
Sounds about right. Are there additional certifications for toolboxes? :) 
None that I know of. Now that's something I'd be interested in :)
I don't know the toolbox, but the usual way these are trained is by minimizing the sum of squared errors, i.e. adding up all three (for the whole training set). 