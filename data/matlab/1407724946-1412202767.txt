MATLAB is a programming language, and you will see many things reappear in other languages (like if statements, loops, functions, etc). However, C and Python have a lot more to them that aren't necessarily touched on in MATLAB and vice versa. So, easier? Yes. However, I'd argue that the hardest parts of many other languages come after you understand the basics that you learn in MATLAB.
would you say MATLAB is a good starting point? 
Cody is great, but a little annoying. Sometimes you'll rack your brain trying to find the best solution only to find that there is a built in function that already does what you're trying to do. E.g., coding in the stats to do a t-test, instead of using 'ttest2'. But, it is fun and helpful.
I taught myself MatLab and what really helped was having my advisor one door down and asking him questions whenever I needed to. I'm sure it was a bit annoying to him, but not even knowing what to do or how to do it or how to constrain the problem you are trying to solve is a huge pain. A few years ago we began a MatLab club that was an informal 1 credit 'journal club' for senior students, grad students, techs, post-docs and was even routinely attended by faculty. I therefore strongly advise you to find someone who can take you under their wing. You also need to have a *reason* to use MatLab, otherwise it's just too open ended. Learning to program is really about solving problems: I have a bunch of data and I want to look at it in many different ways. MatLab is super awesome for graphical display of information. It's not a great processor. I also really recommend once you get your feet on the ground to learn how to use handle graphics. I beat my head against a wall for about two years. Once you get to that point, you can PM me and I can send you some files with notes on how to make your plots look fantastic (publication quality). You can use your own color wheels and fonts. I like using [Randall's from xkcd (you will need to scroll down a bit)](http://blog.xkcd.com/2010/05/03/color-survey-results/). Good luck and have fun!
Well, I've only ever programmed in MatLab and my girlfriend needed help with R for her master's thesis and I solved her problem in about 6 hours. Most of that time was spent learning the syntax. But, as others have pointed out, for loops, if else and other functions are basically the same. However, I still have no clue how object oriented programming works, so there's that. I do use it, but it's like a magical line of code that kind of scares me....
I agree with this. Matlab is very easy, but it'll only give you a slight bump along the learning curve in similar languages. I think the bigger bump would be going form C to Matlab. I don't use python but I've seen people with python coding experience get very frustrated when trying to learn Matlab. 
I'd fit a spline to it, just how I obtained my original function. Do you think that will work? I'm working out of order on this project, it is for an autonomous robot. I have a vision system that solves where I am in an environment, as well as what is in front of the camera, and I input those into my astar path planning algorithm. Then I will do a spline on the path outputted (it is segmented and looks like this: http://imgur.com/lGmQnRP) The output of the spline is differentiable I believe, so I will be able to compute a velocity and acceleration graph for it. BUT, there are two sides to the robot, left and right, each equidistant to the center, so that is where this problem comes in. 
If you have a license for it, just run the installer again and it will give you the option of adding toolboxes.
I was thinking about doing that. I don't know which would be easier to implement. The linear graph is not the graph of a function but a bunch of points.
But you could easily connect the points with a line, which is a function :). Though I don't really know if it is really easier for implementation since you more or less have to do the same thing you were already planning to do with the spline interpolation. Though it is a nice place to start.
www.imc.tue.nl
I can't help yet because you really need to include some TempData.txt file or something so I can see it myself. Also, my R2014a documentation does not include `'exp(x)'` as a type for `fit` but I may be missing something. Also, fitting 'a + b*exp(x)' seems strange to me. There is no paramater to change the decay rate. Try using `nlinfit` or something like that with the form 'c(1) + c(2) .* exp(c(3).*x)` with some smart guesses and see what that does. It has been a while since I have done this, but to use linear-fitting with an exponential, I think the form needs to be `y = a*exp(b*x)` so that when you take the log, you get `log(y) = log(a) + b*x`. See [this](http://mathworld.wolfram.com/LeastSquaresFittingExponential.html)
Stupid question, but does the code work on its own (without attempting to create a .exe)?
haha yes it does. my compiler is stuck on the line Processing C:\Program Files\MATLAB\R2013a\toolbox\shared\imageslib\mcc.enc I'm starting to wonder if I'm trying to write stuff out from toolboxes that aren't available for C conversion
Which compiler are you using. There are 2 different 'compilers'. One compiles matlab to C and creates an executable. The other adds a Matlab runtime that doesn't do anything faster than matlab will on its own.
Please provide an example. That will make it much easier to diagnose Also, while `nlinfit` is a great function, make sure you understand what it is you're doing with it. It works by using a smart way to optimize the coefficients to reduce the error to its *guess* as the lowest value. Unlike a linear fit, you are not guaranteed an optimal or unique solution. But, if your form is non-linear in the coefficients, than it's one of the best things you can do.
Windows Standalone Application. I have used this same tool to create other executables using a previous version of the code which I am currently trying to compile. It worked perfectly. Since then I have refined my code to include more things, and now the compiler is stuck on the line Processing C:\Program Files\MATLAB\R2013a\toolbox\shared\imageslib\mcc.enc
The program that's causing this error is function rtn = CalculationOfAverageSquaredTemp() %Calculation of &lt;t(n)^2&gt; fid = fopen('TempData.txt', 'r'); matrix = textscan(fid, '%f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %f %*f %*f %*f %*f %*f %*f %*f %*f %*f %*f'); matrix = cell2mat(matrix); [a, b] = size(matrix); averagevalue = zeros(1, b - 1); for i = 2:b k = 0; for j = 1:a if matrix(j, i) ~= -999.9; k = k + 1; usefulXdata(k, 1) = matrix(j, 1); usefulYdata(k, 1) = matrix(j, i); end end number = length(usefulYdata); f = nlinfit(usefulXdata, usefulYdata, 'c(1) + c(2) .* exp(c(3).*x)', [-3, .01, .005]); p = f(1) + f(2) * exp(f(3) * usefulXdata); TrendRemovedData = usefulYdata - p; SquaredTrendRemovedData = TrendRemovedData.^2; averagevalue(i - 1) = sum(SquaredTrendRemovedData) / number; end rtn = averagevalue; fclose('all'); TempData.txt is a very large file, formatted as a 4000x36 matrix, with dates in the first column, and temperatures from 35 different historical reconstructions in the next 35. Here's a representative sample. -999.9 signifies the absence of data for that cell. 1850.042 -2.98 -1.26 -2.12 -2.86 -1.16 -2.01 -1.04 -0.81 -0.92 -1.04 -0.77 -0.91 -0.47 -0.8 -0.63 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 1850.125 0.3 -1.56 -0.63 0.23 -1.42 -0.59 -0.4 -0.78 -0.59 -0.39 -0.79 -0.59 -0.46 -0.77 -0.61 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 1850.208 -1.99 0.44 -0.77 -1.9 0.28 -0.81 -1.07 -1.03 -1.05 -0.98 -0.97 -0.97 -0.73 -1.02 -0.88 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 1850.292 -1.43 -0.86 -1.14 -1.38 -0.84 -1.11 -0.82 -0.82 -0.82 -0.78 -0.82 -0.8 -0.59 -0.8 -0.7 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 -999.9 
No problem! I'm interested in how you're eventually solve it since the applications might be more usefull than I originally thought. I do some things in robotics too and I've never really considered something like this when generating paths. Normally I just make my object bigger than it really is to make sure nothing hits it :).
That is exactly correct. From the `anova1` help file: &gt;If group contains empty or NaN-valued cells or strings, the corresponding observations in X are disregarded. 
Thank you so much. I was previously unaware of the load function and of how you used modelfun.
To find a significant difference between samples you need a post-hoc test as well, e.g. Tukey.
If you have the curve fitting toolbox then typing "cftool" will bring up an interactive graphical interface, that will let you play around with your data and try out different models (incl. custom equations) - extremely useful! [http://www.mathworks.co.uk/help/curvefit/cftool.html](http://www.mathworks.co.uk/help/curvefit/cftool.html)
Nothing obvious springs to mind. Could you copy and paste a small section of the raw data? Have you tried using [csv2struct](http://www.mathworks.co.uk/matlabcentral/fileexchange/26106-csv2struct) ? (generally a very handy utility - might require adding headers) 
csv2struct relies upon xlsread which, on non-Windows machines, cannot read csv files. Data is all in the format: 0,0,0,0,0,0,0,0,0,0,0,...
It sounds like it might be a line termination issue. Can you paste a few lines of code showing how you're reading it in, determining size, reshaping it, etc. and the results of the `size` operations?
Sometimes, it is easier to let Matlab do the work for you. If there is no header and it is purely delimitated ASCII data, give `load` a shot. It may work
You, sir, are a gentleman and a scholar. I doff my cap to you. 
Thanks for your response. Using *load* worked. Beats me as to why, but it did and I'm happy!
Based on what I think you were trying to do, would this work? Assuming that xi, yj, zk are vectors and that you've already defined your functions F(x,y,z) X(x,z), Y( F(x,y,z),z ) [xgrid ygrid zgrid] = meshgrid(xi,yj,zk); % Make your vectors a 3D grid Fout = F(xgrid,ygrid,zgrid); % Evaluate your main function Fout( ygrid&gt;= Y(xgrid,zgrid ) = 0; % Apply the y condition Fout( x &lt;= X(Fout,zgrid) ) = X(Fout,zgrid); % Apply the x condition I'm not quite sure what you meant by: if no, then F must be a value st xj=X(F,zk) but hopefully I've given you enough to go on. If you could make that step more explicit maybe we can help more. 
I just did. It seems to output a png just fine but the pdf has the distortions.
&gt;full disclaimer: may or may not be a fully legit copy , and for that I apologise. I am probably going to purchase it first thing tomorrow, and believe i've had my come uppance as this could not have at a worse time. well... this might be one reason for your error. the bootleg copy might not have all the libs/functionality as a legit copy. as for the error, that's all it said? exactly: &gt;Caught MathWorks::System::FatalException Have you tried googling that? [Second response](http://www.mathworks.com/matlabcentral/answers/33507-simulink-and-linux) says you need to instal the OpenGL libraries (not sure what that means, and I think this answer was to the error in question running on Linux).
&gt; I'm not quite sure what you meant by: &gt; if no, then F must be a value st xj=X(F,zk) so basically this is for melting. if the bulk hydration (x) is &gt; saturation hydration (X) then the excess becomes vapor and leaves the system and doesnt affect the melt fraction (F). so the bulk hydration for a stable system of conditions (F,T,P) (or in our case (F_ijk,yj,zk)) cannot be &gt;X, as xi&gt;X would not be possible, and thus then the melt fraction F_ijk calculated for (xi,yj,zk) isnt possible or correct in the real world. as we are determining the value of F_ijk at chosen values (xi,yk,zk), F must be larger, and at a bare minimum xi=X(F,zk) thanks for the reply, does the below statement: &gt; Fout( x &lt;= X(Fout,zgrid) ) = X(Fout,zgrid); % Apply the x condition mean on the condition that xi&lt;=X, then we compute F(xi,yj,zk) ? also xi would refer to the ith value on the 1D vector x again, thanks for the reply
There are many ways to skin a cat. However, my absolute favorite for this is to use [`mlf2pdf`](http://www.mathworks.com/matlabcentral/fileexchange/28545-matlabfrag-to-pdf) which uses [`matlabfrag`](http://www.mathworks.com/matlabcentral/fileexchange/21286-matlabfrag). I also edit `matlabfrag`to always call [`fix_lines`](http://www.mathworks.com/matlabcentral/fileexchange/23604-fix-lines) and, when necessary, [`fix_pcolor_eps`](http://www.mathworks.com/matlabcentral/fileexchange/43271-pcolor-eps-fix). Finally, not in Matlab (though called from it), I use `pdfcrop`. The end result is a very nice PDF for use in LaTeX with LaTeX writing and very nice plot lines. Plus, it removes some artifacts in PDF export of `pcolor` plots. Note that all of these require certain LaTeX packages. I have had an issue on a few Unix boxes I didn't set up but my mac, with TeXLive always seems to work. You also may want to add a bit of a margin in the PDF but I'd rather it crop as close as possible. Anyway, [here](http://i.imgur.com/2CQ2ALR.png) is an example but note that imgur converted it to png. The PDF is zoomable and fully vector I am not comfortable publicly distributing my versions of these with my changes but if you PM me with your email, I'll put my copies, including my script that handles all of the calls, into a nice zip file and send it to you.
Ah ok, I think I'm starting to understand what you're trying to do. This line: Fout = F(xgrid,ygrid,zgrid); % Evaluate your main function Returns a 3D array with all the values of F. The next couple of lines: Fout( ygrid&gt;= Y(xgrid,zgrid ) = 0; % Apply the y condition Fout( x &lt;= X(Fout,zgrid) ) = X(Fout,zgrid); % Apply the x condition Just replaces the parts of the 3D array that satisfy the logical statement (e.g. ygrid&gt;= Y(xgrid,zgrid) ). I think the code as posted should do what you want since if the x-value calculated is less than X(F,z) it replaces it with X(F,z). By the way, the code I posted earlier has a couple of typos here's how it should be: [xgrid ygrid zgrid] = meshgrid(xi,yj,zk); % Make your vectors a 3D grid Fout = F(xgrid,ygrid,zgrid); % Evaluate your main function Fout( ygrid&gt;= Y(xgrid,zgrid) ) = 0; % Apply the y condition Fout( xgrid &lt;= X(Fout,zgrid) ) = X(Fout,zgrid); % Apply the x condition Just to be clear too, this is doing the calculations all at once for the entire 3D grid.
Sorry, so it is. Try [this](https://www.dropbox.com/s/z8sfi3q5f0y37u6/csv2struct.m) version, which I hacked a while back to work on Mac OS (rough, but functional). I doubt it will make any difference, but worth a shot! EDIT: oops, i see that it was solved already using load(!)
I can't remember why I did this, but I inserted a call to "fix_pcolor_eps" in my version of "export_fig", just before the call to "eps2pdf" (should be somewhere around line 387). Thus: &gt; fix_pcolor_eps(tmp_nam); % TMP: PJ &gt; eps2pdf(tmp_nam, pdf_nam, 1, options.append, options.colourspace==2, options.quality); Might help - probably won't! If you're using pdflatex then the simplest answer might just be to use the png(!)
This is true!!! I've had the same problem. And yes, anovan should be used.
Note that the syntax of anovan can be a bit bewildering at first. For example, in this case one might use: dat = [ 0.2647 1 0.2573 1 0.203 1 0.246 2 0.1748 2 0.3275 2 0.2136 2 0.2257 3 0.2992 3 0.3306 3 0.2327 3 0.2699 3 ]; X = dat(:,1); G = dat(:,2); [p,table,stats,terms] = anovan(X, G, 'model','interaction', 'display','on')
Dude/tte, thank you so much! I will have to give this a try. In my recent pubs I have tried to get rid of the white lines and my only solution is print to pdf and then screen grab the image and shrink it down, which causes the lines to be eliminated 95% of the time. For how powerful matlab is with figure design this one is a huge pain. Can you PM me the zip file? Thanks!
&gt;Can you PM me the zip file? Nope. You can't PM a file. *But* if you PM me your email, I'll email you the files.
Have you found an answer yet? Does your data have any missing/NaN values itself? I've found on several occasions that MATLAB doesn't like to do functions on NaN values. My work around is: gooddata = ~isnan(orig_data) where isnan() outputs a flag where there are NaN's or not, ~ negates this so ~isnan() finds real values of your data. coef = polyfit(time(gooddata),orig_data(gooddata),1); %coefs of polynomial of degree 1 (aka a line) fit fit_data = (coef,time); %the actual linear fit If you're still having problems with the exponential fit, you could try and take the log of your data, fit a linear fit to it, then calculate your coefficents as they would be for the exponential fit.
Do the white lines show up when you print the image? From memory, this may just be an artifact by the PDF renderer. You could also try opening the PDF in Illustrator or something similar and seeing if you can edit it there to remove the lines. 
 x = [1 1 2 3 1]; numberone = find(x==1); sumones = sum(numberone); The output you'll see is: numberone = 1 1 0 0 1 sumones = 3 You can also use numberone to call the indices of a certain variable. For example: x(numberone) = 1 1 1 It may not appear it, but because numberone itself is 1s and 0s it can be treated as flags for calling certain indicies of a vector/matrix. There are just three # 1s shown because there are three #1s in x and they are the only indecies being displayed when called using numberone. **EDIT**: I had the right idea, I just wasn't able to debug it in front of a computer. goodone = x==1 provides you with the 1 1 0 0 1 flags that you can add. Alternatively sum(x(numberone)) will give you the correct answer from above. Sorry I was going quickly and not at a computer. Looks like you've got other answers, I just wanted to edit and correct mine.
I think you're wrong about the output of the find function. find produces a vector of indices where the argument is true. In this case find would ouput [1,2,5], and then sumones would be 8. I think you should just do sumones = sum(x==1)
I very well could be. I always try a function or set of instructions on the command line prior to using them in functions or scripts.
I guess, for his specific purpose, length(x(x==1))/length(x)
Yup. This is the best/simplest correct answer.
That will work, but I think /u/identicalParticle's answer below is simpler and I'm 99% sure it would run faster for large matrices... that's the one I would advocate for.
Thank you! I won't be able to test it until tomorrow morning, I appreciate your help! 
Ok thanks! 
mean(x==1)
Then again, SPSS is even worse! Wide format for repeated measures and long format for standard ANOVA.. And at least in MATLAB transforming data is relatively straightforward! Anywho, whatever gets the job done I guess
Thanks anyway - I'm sure this will come in useful sometime regardless
&gt;I cannot lose a point diff() loses a point anyway, just fyi.. If you don't want to lose a point you could try something like: deriv = diff(z); deriv(end+1) = deriv(end); and it will put the last derivitave value twice. Alternatively you could double count the first index in deriv. But beware: you're still losing the ability to have the derivative throughout your domain by 1 index each time because if you diff() the derivative, you'll get 0 at the beginning/end (depending on what method you used). Another way around that would be to calculate the first and last index derivative by using z(1) and z(2) (or z(end-1) and z(end)) and for all the middle derivatives you could a) use index +/- a point or b) take the mean of two differences for index and +1 and index and -1. x = 0:0.1:2; n = [1.2 1.3 1.35 1.4 1.45 1.5 1.6]; A = 3.5; z = ones(size(x),size(n))*NaN; deriv1 = z; for in = 1:length(n) z(:,in) = A * (x-1) ^ (n(in)); deriv1(1:end-1,in) = diff(squeeze(z(:,in))); deriv1(end,in) = deriv1(end-1,in); end Should give you the first derivative (approximately) for a range of n values. If you wanted I'm sure you could make a 3-d matrix for both z and deriv1 and do another loop over a range of A values. Also, there may be a way to shorten all this up without loops altogether. The problem there is that deriv1 would still be one index short of x or z so you could simply just append the last value again.
This was my first answer, too. But then I did a time comparison with sum(x==1) and it turns out that using **sum** is a bit faster than **numel** (on my machine);
Can't you just evaluate the derivative analytically and hard-code that in as the value? My calculus is old and dusty, but isn't dz(x)/dx = A*n*(x-1)^n-1
Okay. I didn't know that.
This is the "correct" way to do what the OP is asking.
The language sounds sort of vague to me, but "evenly distributed random numbers" sounds equivalent to "uniformly distributed random numbers." "Normally distributed" means the same thing as "Gaussian distributed" -- it is common to refer to a Gaussian distribution as a normal distribution.
Thanks! That definitely some stuff to try at work tomorrow. The thing is though, there are so many variables that it's not possible to check where the ones with numbers are and where they are not. Plus, it'll probably change in the near future. Is there a way to scan a excel document and only choose the rows which has strictly numbers? 
Check the documentation. I think there was an example there where you could input 3 arrays from xlsread: numerical, text, unspecefied (a.k.a. all data). As to scan randomly for data, what kind of file/data are you using that the data wasn't written in a uniform way?
Yes I will. Thx 
No problem.
'Evenly distributed random numbers' (also referred to as a uniform distribution) means that every number within a certain interval has the same chance of being drawn. A six-sided die has an equal probability of rolling a 1, 2, 3, 4, 5, or 6. In Matlab the default is a [uniform distribution](http://en.wikipedia.org/wiki/Continuous_uniform_distribution) from 0 to 1. 'Normally distributed random numbers' draws numbers from a [Gaussian distribution](http://en.wikipedia.org/wiki/Gaussian_distribution) (also referred to as a 'normal distribution' or colloquially as a '(bell-curve'). In Matlab, 'randn' draws from a gaussian distribution with mean 0 and standard deviation of 1. You can check out what these distributions look like by plotting a histogram: subplot(1,2,1);hist(randn(1000,1)); title('Normally Distributed'); subplot(1,2,2);hist(rand(1000,1); title('Evenly Distributed'); How to choose between a 'normal' random numbers and 'evenly distributed' random numbers depends very much on the application. Using the example from above, if you were trying to simulate a card game, you'd want to use uniformly distributed numbers. Hope that helps!
The fastest way that I know how to do this if you know the size of the output matrix; nrows = 3; ncols =5; % Set the size of the output array out = zeros(nrows,ncols); % Initialize the output array out( sub2ind([nrows,ncols], test(:,1), test(:,2) ) = test(:,3); % Use sub2ind to come up with the equivalent 'vector' index based on the subindices in column 1 and 2 of test.txt Hope that helps 
It's in chronological order in columns but the columns are not split up as numerical and non numerical, so it's hard to take it apart 
Don't use level 1 S-Functions, they are deprecated and will likely be removed in a future version. Also, their API is terrible and the level 2 ones are better in every way. C can be faster or slower than matlab s-functions depending on the compiler you use and exactly what you're doing. Use the one that fits your workflow better, but be aware that the full Matlab function set is not available for s-functions running in external mode. 
Missed a parenthesis... (Otherwise great example!) Correct Code follows: subplot(1,2,1);hist(randn(1000,1)); title('Normally Distributed'); subplot(1,2,2);hist(rand(1000,1)); title('Evenly Distributed'); 
 [data(x(:,1),1), data(x(:,2),2), data(x(:,3),3) ] should work if that is what you are looking for
have updated my request.. please have a look
Try shiftMat = ones(size(x,1),1)*(0:(x(data,2)-1))*size(data,1); xShifted = x + shiftMat; desiredResult = data(shiftMat); This is a very compact version, even more compact would be desiredResult = data(ones(size(x,1),1)*(0:(size(x,2)-1))*size(data,1)+x) What it basically does is create a matrix that shifts the indices in x to fit to the column they are in; the first column is left unchanged, the number of rows times 1 is added to the second column of x, the number of rows times 2 is added to the third column and so on. Edit: Fixed the mistake found by /u/IAmBabau
That's the best you're going to get. You can't get much faster than column based indexing. Even with 180,000 elements, access should still be fairly quick. I would look at other parts of your program for runtime improvements.
Also, if you want people to help you on something that has the difficulty of a homework problem, wording it a bit nicer and showing us that you have taken your time to actually try something - *I have tried .... but I don't know what to do here ...* - would be welcomed in my opinion. Edit - format
Ah yes the Rogue Parenthesis the bane of programmers everywhere. Thanks! 
I think you mean `shiftMat = ones(size(x,1),1)*(0:(size(x,2)-1))*size(data,1);`, otherwise its dimension doesn't agree with `x` dimension.
Yes you are right. Props for actually going through the somewhat ugly code and finding it ;-)
One suggestion might be so that it could accept actual data (x and y) for the function to integrate instead of just a function handle. It would make your function more robust and you could always define your function's x and y outside and just before you call myintegral(). If you go this route, will you only accept evenly spaced (x,y) pairs or can you accept any that describes the data? As far as actually improving the speed (what I interpret "more elegant" as being), I'm not terriblly sure at the moment. Also, I'm sure you're already aware of the [trapz()](http://www.mathworks.com/help/matlab/ref/trapz.html) built-in function. Since this was for a class I bet it wasn't acceptable to use trapz() as the exercise was to build your own.
I smell an active homework assignment, but went for it anyway.... You're going to notice that I cheated. I assumed that the function can handle vectors, which isn't presented in the requirements. If it has to allow for functions that do not allow for vectors, then I have included the call to arrayfun (commented out), but not nearly as elegant. (I include the initializing of the variables of the arguments in the function, for testing purposes so others can play along.) f = @(x) x.^2; %Note the cheat here that the function has to be able to take vectors as an argument. a = 1; b = 10.3; tol = 0.001; n=0; boolSolved = false; boolFirstRun = true; while ~boolSolved n = n+1; vecX = linspace(a, b, n+1); %Note that n in this problem is intervals, while the argument in %linspace refers to the count of values, hence the "+1" vecF = f(vecX); % vecF = arrayfun(@(x) f(x), vecX); valTrap = (sum(2*vecF)-vecF(1)-vecF(end))*(b-a)/(2*n); if boolFirstRun || abs(valTrap-valOld) &gt; tol valOld = valTrap; boolFirstRun = false; else boolSolved = true; end end g = valTrap; % disp(g); [edit: Placed the arrayfun modification inside the function] 
I wrote a very similar function to you function g = myintegral2(f,a,b,tol) n = 0; t = nan(1,2); while ~(abs(diff(t)) &lt; tol) n = n + 1; fx = arrayfun(f,linspace(a,b,n+1)); t(mod(n,2)+1) = (b-a)/(2*n)*sum([fx(1) 2*fx(2:end-1) fx(end)]); end g = t(mod(n,2)+1); The main difference is the condition "~(abs(diff(t)) &lt; tol)" is specially chosen so that the loop will continue if either element of t is NaN, so there is no need to handle the first iteration separately
Nah, like I said, this was a question I was helping a friend with, and the course is over as of this afternoon. The post was to satisfy my own curiosity. Bringing vectors into this is outside of my MATLAB wheelhouse, but this is pretty cool. I'll try to read up on what you've done here to understand it better. Thanks
Nice touch!
Amusingly enough, it's vectorization that makes MATLAB so powerful - eliminating inefficient for loops!
Sweet, I'll have to learn more about it.
Nice! I'm quite fond of NaNs, they can be very handy.
Set mymax equal to a very small number. Then compare the first index to it. If the first index is greater than mymax (which it will given you choose -inf) then set mymax equal to this number. You might need to have this loop for every index. Hope that helped!
The way I was trying to go about it was by subdividing the vector. So if it was a list of four numbers. It would be subdivided then compared. And subdivided and compared until the largest number was determined. I am just having trouble initializing this. 
You can also set it to the first element and then loop starting from the second. OP, remember that if `size(X, 1) == 1` (so if `X = [1 2 3 ...]` for example) then `X` is treated as `X'`.
So you are finding the largest number in each set? Then comparing them in the end? Also, think of the case if it is a odd number for a list.
Yes thats my goal. And I am going to put an assert that there must be an even number of numbers in the list
You can do it recursively. Start with the first value, then through the rest of the list, break it into a head and a tail and keep the comparisons going. If you save the following in your current working directory, it should run by calling maximum(X), where X is any array. function [max] = maximum(X) if isempty(X) max = []; message = 'Error: empty array.' elseif numel(X) == 1 max = X; else head = X(1); tail = X(2:end); if head &gt;= maximum(tail) max = head; else max = maximum(tail); end end 
 function mymax = max_s(list) mymax = max(list); return (kidding)
I had to do something similar for a class - it was some formula involving vectors to get another vector or distance. I just said fuck it and used a built-in function. Not sure they were too happy.
OK this is what you do. Start off by converting your vector of numbers to their binary equivalent. Now, look at the most significant bit. If this bit discriminates any entries in your vector, remove those that have this bit equal to zero. Otherwise, do nothing. Now, look at the next most significant bit, and repeat. The algorithm should stop when any of the following conditions are met: 1) There is only one number remaining, or 2) The least significant bit is evaluated and there are &gt; 1 remaining elements, indicating a tie. Thereyago. This should be easy to modify for accommodating negative numbers and non integers. testvec = randi(10000,[500 1]); %this is our test vector binTestVec = dec2bin(testvec); %this is its binary representation vecIndices = ones(size(binTestVec,1),1); %we start out counting each element as possible maxes for i = 1:size(binTestVec,2) %loop over all the bits %only if the current bit discriminates items in the list do we eliminate %options. Otherwise, move to the next bit if length(unique(binTestVec(logical(vecIndices),i))) &gt; 1 vecIndices(strfind(binTestVec(:,i)','0')) = 0; end %if we only have one remaining entry, then we've found our value. If %we're at the least significant bit, then we have a tie. if sum(vecIndices) == 1 maxindex = find(vecIndices == 1); break elseif sum(vecIndices) &gt; 1 &amp;&amp; i == size(binTestVec,2) maxindex = find(vecIndices == 1); end end maxval = unique(testvec(maxindex)); 
Isn't this cheating? You're using a max function to write a max function. 
The number of operations here scales linearly with the number of elements in the input. Because the number of elements is more likely to be &gt;&gt; than the number of bits used to represent a number, the loop should be done over bits, instead of elements. 
No. http://en.wikipedia.org/wiki/Recursion_%28computer_science%29
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Recursion (computer science)**](https://en.wikipedia.org/wiki/Recursion%20%28computer%20science%29): [](#sfw) --- &gt; &gt;__Recursion__ in [computer science](https://en.wikipedia.org/wiki/Computer_science) is a method where the solution to a problem depends on solutions to smaller instances of the same problem (as opposed to [iteration](https://en.wikipedia.org/wiki/Iteration#Computing)). The approach can be applied to many types of problems, and [recursion](https://en.wikipedia.org/wiki/Recursion) is one of the central ideas of computer science. &gt;&gt; &gt;"The power of recursion evidently lies in the possibility of defining an infinite set of objects by a finite statement. In the same manner, an infinite number of computations can be described by a finite recursive program, even if this program contains no explicit repetitions." &gt;Most computer programming languages support recursion by allowing a [function](https://en.wikipedia.org/wiki/Function_(computer_science\)) to call itself within the program text. Some [functional programming languages](https://en.wikipedia.org/wiki/Functional_languages) do not define any looping constructs but rely solely on recursion to repeatedly call code. [Computability theory](https://en.wikipedia.org/wiki/Computability_theory_(computer_science\)) has proven [*[attribution needed](https://en.wikipedia.org/wiki/Wikipedia:Attribution_needed)*] that these recursive-only languages are [Turing complete](https://en.wikipedia.org/wiki/Turing_completeness); they are as computationally powerful as Turing complete imperative languages, meaning they can solve the same kinds of problems as imperative languages even without iterative control structures such as “while” and “for”. &gt;==== &gt;[**Image**](https://i.imgur.com/H9vsnV5.jpg) [^(i)](https://commons.wikimedia.org/wiki/File:RecursiveTree.JPG) - *Tree created using the Logo programming language and relying heavily on recursion.* --- ^Interesting: [^Recursion](https://en.wikipedia.org/wiki/Recursion) ^| [^Mutual ^recursion](https://en.wikipedia.org/wiki/Mutual_recursion) ^| [^Anonymous ^recursion](https://en.wikipedia.org/wiki/Anonymous_recursion) ^| [^Recurrence ^relation](https://en.wikipedia.org/wiki/Recurrence_relation) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cjsm5eh) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cjsm5eh)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I really like this style, but I am trying to create a max function without using the max function. Something I noticed that could be done with your version is in the else statement put a for loop and let 2 numbers be compared until the greatest number is determined. How would you go about doing that?
&gt;but I am trying to create a max function without using the max function /u/ice_wendell didn't use the `max` function. I do not see the problem with his/her solution. The `maximum` function is the custom function with a recursive call.
quicksort is order nlogn while all a for-loop or recursive call would require is order n. 
The linux command *screen* is your friend. Some links: [1](http://www.mattcutts.com/blog/a-quick-tutorial-on-screen/) [2](http://www.computerhope.com/unix/screen.htm) [3](http://www.tecmint.com/screen-command-examples-to-manage-linux-terminals/) If you want a remote desktop persistant connection, then either [NX no machine](https://www.nomachine.com/download) or [XMING](http://sourceforge.net/projects/xming/)+putty is the way.
I use something like: nohup matlab -nodisplay -nosplash -r matlab_command &gt; outfile.txt &amp; And don't forget to include exit; at the end of matlab_command script. This will allow the program to continue running even after the connection is lost. If, however, you require graphical output or interactive prompts, then you'll have to find a different solution. One option is to talk to your sysadmin about extending the lifetime of your connection or modifying your ssh client settings to send keep-alive signals to the server. 
I usually just run it in the background. The command is something like nohup matlab -nodisplay &lt; code.m &gt; output.log &amp; or something like that. The downside is you have to make sure your code can run from startup (for me that means adding things to the path, setting up `parpool` and a few things like that). Also. **make sure you have a `save` in there before exit**
Thanks for the response. So is the nohup command: nohup &lt;call matlab here and the script i want to run&gt; &gt; outfile.txt What is the output of nohup that goes into outfile.txt? What does the "-r" do when called with matlab? I know the other two -noXX commands..
The "-r" tells it to read the input from the script (.m file, typically). The outfile.txt is whatever output that would have been printed to standard output. You can use tail -f outfile.txt to follow any output that's being generated -- so if you're generating diagnostics or other text output, this is a convenient way to monitor that. All of this assumes, of course, that you're running on some form of *NIX environment that supports these commands. In windows / mac you'd have to do something entirely different. 
&gt;You can use &gt; &gt; tail -f outfile.txt &gt; &gt;to follow any output that's being generated -- so if you're generating diagnostics or other text output, this is a convenient way to monitor that. phew- so any disp() commands would show in the outfile.txt while MATLAB is invisibly and continuously running (assuming that the programming side (me) doesn't have any errors)? I just got done modifying my scripts to write to their own output file.. If I want nothing at all from the matlab environ to be "displayed" (even put through to a txt file), I can just call: nohup matlab -nodisplay -nosplash -r script.m &amp; ? And to "save" those disp commands I add "&gt; out.txt" to that line before the &amp;, and everything that I *would* see show on the command line would be saved in that out.txt file?
&gt; nohup matlab -nodisplay -nosplash -r script.m &amp; after calling this to see if it worked before I left the office today... I pushed enter and got things running. I could see that SSH window went back to the command line. I pushed enter again and got tht error: [1] + Susbended (tyy output) matlab -no -no -r script.m Something I coded wrong or once you hit enter after the nohup.....&amp; line you can't do anything else in that specific SSH window?
I've used `tmux` (or GNU `screen`) to accomplish something like this, but they aren't part of most Linux distributions by default and you may not have permission to install these on the server if they aren't there already. Basically, you just SSH into the server, start a `tmux` session, and launch MATLAB from there. Then you can detach from that session and let it run in the background on the server. As long as you don't get automatically logged out from the server, your shell and all processes you've launched from it should keep running even if your SSH session ends. Then later you can SSH back in, attach the existing `tmux` session, and check to see if MATLAB is still crunching along. If that's something that's helpful but isn't available, maybe you can open a help ticket with IT to ask them to install it? Not sure if that's feasible, but it's a thought. EDIT: I don't know what distro you're using but, `tmux` and `screen` are both part of Debian wheezy, so maybe you will have access to them without installing anything.
I could. That wouldn't solve my problem.
Ya, others mentioned using "screen". I'm not so much trying to perserve my MATLAB session across access from my various home/office computer and SSH into the dept. servers that the process will run on. I just want to be able to start a process and have it run until 1) it ends normally 2) I've made an error in the script and it ends 3) server goes down. I don't want the execution of the process on the dept. server to be affected by my loss of VPN and/or SSH connection to the server.
I see.. does the first entry being fixed to 1 explain why the other two signs from "a_filter" produced by the butter function are reversed as well? i.e. -1.98 and 0.98 compared to my calculated coefficients which were 1.98 and -0.98 Thanks for your reply as well!
i do it in a very simlar way, i just dont remember what's the difference as it works fine (i dont use nohup and i add this '&amp;' as well; and i can exit the connection it will still run...): matlab -nodisplay &lt; code.m &amp;&gt; output.log &amp;
Thank you for the response. I'll try to clarify. Tank 2 is venting to vacuum at a fixed rate and it's much larger than tank 1 so we can just take Tank 2's pressure as a function of time. Initial pressure - vent rate * time. The problem I was having is the mass flow from tank 1 to tank 2 is either choked or non-choked. These are two different equations. To figure out which you use you compare P2/P1 to a fixed number. How would that be implemented?
In this case it's not actually doing anything. The `for` loop is already stepping through `i` from 1 to the length of `n`.
The other guys are right. i=i+1 doesn't work here. But I assume you are learning how to program so i'll give an example of when you do need it: It would be necessary if you used a while loop so: k=0; %k has to be defined before your loop while k&lt;=length(n) if x(k)&lt;0 x(k)=-x(k); else x(k)=x(k); end k=k+1; %this has to be done else the loop will never stop! end As FrickinLazerBeams mentions, try to avoid i as an index (as well as j) since those are the imaginary numbers. You could also use x=abs(x) in this case. As an example for indexing in Matlab you could use: index=x&lt;0; %make an index for all negative numbers x(index)=-x(index) ; % replace all negative numbers with the positive counterpart. This is not that interesting yet since Matlab has a built in function to do this in 1 line (abs() ) but it becomes very usefull when you want to do slightly more difficult/less usual operations (for example: devide every negative number by 2). Here indexing becomes a very powerfull tool and should be used instead of for-loops. tldr: Matlab hates loops and has nifty built-in stuff.
This is the function that produced the plot. Can you spot a problem? function PlottingTheTrendLines(n) matrix = load('YearlyAverageTempData.txt'); [a, b] = size(matrix); Xdata = 1:1:a; Xdata = rot90(rot90(rot90((Xdata)))); for i = 1:5 Ydata = matrix(:, i); f = fit(Xdata, Ydata, 'a * exp(x / 59) + c', 'StartPoint', [.07, -0.5]); p(:, i) = f(Xdata); end plot(p(:, n), 'r'); hold on plot(Ydata, 'b'); xlabel('Years Since 1849'); ylabel('Difference in Temperature in C from 1979 to 2008 Average'); Edit: I've found the source of the error, plot(Ydata, 'b'); is calling the most recent value of Ydata, rather than the 'n' value. Thanks.
This really may be the single worst example of Matlab code I have ever seen. I especially love the totally needless else clause in the if-else.
Use screen or nohup.
Also, a couple other questions. 1) Is manual control point based registration an option? How many images do you need to register? 2) do the results of one registration tell you anything about the tform you expect for the next pair of images?
There is a technical support article on it on MATLAB Answers [here](http://www.mathworks.com/matlabcentral/answers/101771-where-can-i-get-more-information-on-link-between-aspendynamics-and-simulink). The article has a PPT discussing basic functionality.
1) Sadly not, I have several hundreds of batches (which each consist of about 6 to 8 Images) which need to be processed 2) Yes, kind of, the images are (mostly, ~95% of the cases) differing in about &lt;10 pixels around the master-image. I also played around with the function, and now I managed to get a good result with imregister(), but only if I use 'translation', if I use 'rigid' I get shitty results again, but I can't really rely on that, because some of the images are also a bit rotated and translated. I sent you a PM with the Rawimages and two of the results.
Maybe he's a Nigerian prince
Matlabs strength is not producing high quality plots, consider exporting your Matlab data and then making the plots using pgfplots Link: http://pgfplots.sourceforge.net/
Perhaps try: set(gcf, 'PaperPositionMode', 'auto');
Hey Matty, I have a couple thoughts. 1) Are these hyper-spectral images of stars? I think these might be. If so, you might want to try the 'multi-modal' option with imregister. This option is appropriate when the two images being compared were not collected with the same sensor. 2) In any case, these images are quite large. A trick you can use, particularly with imregcorr is to downsample your data by some reasonable amount such that you don't degrade the image quality so much that you throw off the registration (trial and error). You can then perform registration on the downsampled images, then account for the downsampling by adjusting the transformation estimate. For example: fixed = fitsread('1H0323_2013-07-12_23-31-48_Luminance.fits'); moving = fitsread('1H0323_2013-07-12_23-39-54_R.fits'); moving = uint16(moving); fixed = uint16(fixed); scaleFactorDown = 1/4; moving = imresize(moving,scaleFactorDown); fixed = imresize(fixed,scaleFactorDown); tform = imregcorr(moving,fixed); % Adjust translation estimate to account for the downsampling we applied to % the input images. The upper 2x2 estimate is invariant to scale. tform.T(3,1:2) = tform.T(3,1:2) .* 1/scaleFactorDown; Note that we only have to adjust the translation estimate, because this is the only aspect of the affine matrix that is affected by scale differences. The functions imregtform/imregister already use a multi-resolution scheme when solving the registration, so you won't want to be as aggressive in using this downsampling approach with these functions as you would with imregcorr, which operates purely on the resolution of data that you pass in. Another observation: these images have very few features in them. There is a lot of homogeneous black, with a few stars. I'm not sure if this is true for all of your datasets. This looks like a prime candidate for feature based registration. Do you have the Computer Vision System Toolbox. If so, I'd check out: http://www.mathworks.com/help/vision/examples/find-image-rotation-and-scale-using-automated-feature-matching.html Even if you don't have CVST, you might be about do pull out star "features" simply by using something like imregionalmax, and then passing these locations to fitgeotrans to find the least squares fit of the regional maxima that would correspond to star locations. Last observation. I used cpselect to do control point based registration with the two images shown in the example code above. In this particular case, it seems like the two images are related by almost pure translation with a VERY slight rotation that may in fact be an artifact. Do you have a sense of what types of misalignment you expect to be present in terms of rotation/translation/scale? If only translation is likely to be present, you will see a performance improvement in imregtform and imregcorr by using the more simple transformation model: 'translation'. 
What version of Matlab are you using. They are moving to `parpool` from `matlabpool` (not sure why) but it may be worth trying that. This is going to sound stupid, but have you tried restarting the computer/matlab. It has fixed a few issues where there was some internal connectivity issue. Also, try specifying the size. Does `matlabpool 1` or `matlabpool 2` work? 
I would take a look at your local profile settings. How many workers are there? try this command parpool('local')
There is a rand() function that would be the main data needed by your function. doc rand For the rest of the stuff, what have you tried out and where are you currently facing a problem? -or- If you have n random numbers in front of you on a sheet of paper, what steps would you take?
What would the return of the function be after the n random numbers? And on that paper the threshold would be from the number I choose up to n? Im not completely sure 
&gt; What would the return of the function be after the n random numbers? &gt; And on that paper the threshold would be from the number I choose up to n? You should be able to answer these questions since the problem statement is posed by you. rand(1, 5) gives one row having five random numbers. This program can take upwards of a minute to write, depending on how clear the program's logic is in the programmer's head and how familiar he is with Matlab. If you're looking for a quick answer with the finished code, this is not the proper sub for it. This tries to follow the "teach a man to fish..." philosophy. Perhaps you should read up on some simple matlab tutorials. Starting from loops and functions. 
Sounds like a homework problem you haven't put any effort into.
Summer break is over, we should all prepare for the HW and *helpimdoingmyprojectlastminuteandhaventattendedclass* term projects
&gt; If you're looking for a quick answer with the finished code, this is not the proper sub for it. This tries to follow the "teach a man to fish..." philosophy. Thank you for this.
What have you started with and/or tried? Can you list the steps that you want to code in "pseudocode" ? As others have mentioned, [rand()](http://www.mathworks.com/help/matlab/ref/rand.html) is already a built-in MATLAB function you can use to get your random numbers.. Do you know the structure of how to construct a function in MATLAB? If not, check the sidebar for some tips (they're really easy to write). Also, as the sidebar says: &gt;we don't do your homework! and as worded, your OP looks a little suspect to a few of us.
Have you tried Google-fu? "matlab hatch" returns this as its first result.. http://blogs.mathworks.com/pick/2011/07/15/creating-hatched-patches/
Thanks. I actually did a bunch of google searches for different permutation of "texture". The most promising was the actual code linked in that article. But, alas, it does a pretty poor job so I figured I would post and see if there was another way. Perhaps my downfall was not searching for "hatch" but rather "texture". I will have to play with that other code in that article. I hand't tried that one yet.
What have you tried so far? Code? (4 spaces starting a line formats it nicely)
They both seem to have the same issue which is noted in one of the documentations: &gt; Note this function makes a bitmap image of H and so is limited to bitmap output. I have modified my post to reflect that I am looking for a way around this.
Gotcha. What type of figure do you want to save it as? *Edit: Can you execute your code to get the bitmap output and then convert/save it as what you want?
No idea where the starting points come from. Does your dataset just look like kernel or probability distribution (looks like one hill). If so you could fit it to a gamma or lognormal distribution. 
&gt;Gotcha. What type of figure do you want to save it as? It is a bit complex but I can give you an example based on the one in the Matlab docs:essentially a `pcolor` plot with only two or three different "colors" but them as hatches (I would have said textures but as you pointed out, "hatches" is a better term. For example: pcolor(randi(3,5,5)) but again, instead of the colors, they are different hatches. &gt;Can you execute your code to get the bitmap output and then convert/save it as what you want? No. Once you have a bitmap image, you cannot go to a vector-based image. And, I have a bunch of other fancy export scripts so it really needs to be a regular matlab figure at the end. It isn't looking too promising. The best thing I could think of would be to export with colors as an `eps` and then, change the actual eps file to use some type of hatch pattern but this is extremely non-trivial and way beyond my abilities (and/or not worth the month or so it would take me to do it right). Thanks anyway
Ahh, thanks
I downloaded bullzip pdf printer (it is free), do limited formatting in MATLAB (axis labels, xticks and yticks, legends, fontweight, fontsize, linewidth, markersize, marker edge/face color, etc), and print as a high quality pdf. From there, I resize and edit in adobe illustrator. The only trick is changing export settings to 'substitute with device font' instead of 'download as soft font', otherwise text comes out as images/lines and not characters. 
1) Same sensor, but different filter. I tried 'multimodal', but then it takes even longer to register. 2) THANK YOU! That did it, I played around with the scaling, and found that I get the best results with about 1/7 to 1/8. It also greatly reduced the registation time, now the imwarp()-way is even faster than the imregister()-way. Currently I'm using 'rigid' as transformation-model. I'll try the link out, too, thanks!
1) start each line with 4 spaces and your code is much more legible. 2) You are getting your error because you aren't calling [quad()](http://www.mathworks.com/help/matlab/ref/quad.html) correctly. &gt;the function y = fun(x) should accept a vector argument x and return a vector result y, the integrand evaluated at each element of x. I don't go about defining functions like this, but could your problem be because you have those spaces in your function definition? Have you tried: fun = @(ll)cpn(1)+....
Thanks for the gold! Happy to hear the feedback helped.
The error message pretty much tells you exactly what the problem is. I tried your function with a vector of inputs and it still gave me a scalar output.
Thanks. It seems that polyval is only for polyomials in one variable. Do you know if there is a function for working with polynomials in several variables? I need 2D and 3D mappings.
Interesting idea. I'll have to think about this for a bit to figure out how to use it here.
Did you ever figure it out?
a hint to help read your OP: put your equations on their own lines, and start those lines with 4 spaces. code looks a lot nicer, and a*b*c looks like a*b*c and not a*b*c
What do you mean, model them? Do you want to plot your output Q for some range of inputs y and P1? Do you know how to set up a vector? Can you construct a for loop? Do you know the basic plot commands?
Yes. I didn't realize what can be put into the ODE code. I was able to if statements to check for no flow, choked or non choked flow and set dx(1) to the correct one. I could do the same for the tank 2 pressure. Check the current pressure and if it was 0 or negative set dx(2) to zero else set it to the depressurization rate. For some reason that ability doesn't show up often in documention.
Gotcha. I've never played with Simulink modeling so I can't be of further help, sorry.
You should wrap these calls in tic...toc and time each part of the code, and work on the lines that have the longest execution time. I suspect your timesink is probably the cellfun call or the makeBinIndicies call. Also, without seeing some test data and trying the code myself, I can't see very much that can be optimized by vectorizing stuff. Sometimes (and in fact quite a bit of the time) for loops are faster than vectorizing code.
Yes I've been doing that, all of the lines in there are essentially 0.01 seconds, it seems to be the combination that does it. I did go in and simplify makeBinIncies a bit and it helped by maybe ~10%. I didn't know that, but it would explain one instance where tic toc indicated that the loop was actually faster.
I actually just found a more efficient version of corr performed manually with a few lines of code. This sped things up a further 30%. It's really elegant code. function F = CorrH(A,B) An=bsxfun(@minus,A,mean(A,1)); Bn=bsxfun(@minus,B,mean(B,1)); An=bsxfun(@times,An,1./sqrt(nansum(An.^2,1))); Bn=bsxfun(@times,Bn,1./sqrt(nansum(Bn.^2,1))); F=nansum(An.*Bn,1)'; end
There are blocks for all of those operations. The tricky part is the conditional. That can be handled with an if -else block and a merge or a switch block. What have you tried so far?
So, I guess I have to know more about your data and what exactly you are trying to do to figure out a more efficient implementation. Because, as it stands just by looking at what you've posted, you might not be able to do any better, unless maybe you parallelize everything. If I know more about the structure of your data arrays and the kind of analysis you are trying to do, I might be able to code a more efficient solution though.
I've never heard of a "closure" before. Can you explain the idea?
When you create a anonymous function in Matlab using that `@()` notation, it keeps track of the environment that existed when that function was created. It can continue access variables even after their scope has ended. For example, I'll define a function `makemult`. This is what is called a *higher order function* because it's a function that returns a function. function f = makemult(x) f = @(y) x * y; end It remembers the value `x` that was passed to it, so two different functions returned by `makemult` would have different answers if called with different `x`. &gt;&gt; times2 = makemult(2) times2 = @(y) x * y &gt;&gt; times10 = makemult(10) times10 = @(y) x * y &gt;&gt; times2(30) ans = 60 &gt;&gt; times10(30) ans = 300 So even though `times2` and `times10` were assigned to values created by the same anonymous function expression, they give different answers because they have unique environments (with the variable `x`) attached. It *closed over* that variable and captured it. Matlab has what is called *first class functions*: its functions are first-class citizens with all the same properties as other values. This could be used in conjuction with other higher order functions like `arrayfun()`, whose first argument is a function. &gt;&gt; arrayfun(makemult(3), 1:4) ans = 3 6 9 12 Here's one more example. This one mutates its environment to return a new value on each call. function f = makeadder() x = 0; f = @() x = x + 1; end And to try it out: &gt;&gt; a = makeadder() a = @() x = x + 1 &gt;&gt; a() ans = 1 &gt;&gt; a() ans = 2 &gt;&gt; a() ans = 3 &gt;&gt; a() ans = 4 &gt;&gt; a() ans = 5 Each call to `makeadder()` creates a fresh, independent closure: &gt;&gt; b = makeadder() b = @() x = x + 1 &gt;&gt; b() ans = 1 &gt;&gt; b() ans = 2 &gt;&gt; b() ans = 3 
These look like some equations I have modeled for a hydraulic actuator. If you find the right text book, you might even find a complete Simulink diagram and Matlab code for the valve ;) A couple options: 1) Make an s-function with your equations. Function output is Q, inputs are contained in a single vector, u. You'll have to use the mux block to combine the inputs into one vector, u. 2) You can use Simulink blocks to explicitly map out the logic and equations, possibly including custom function blocks. This is probably more time consuming to develop, but is less likely to cause any hiccups if you use the rapid accelerator for solving; in option 1), you might code something in an s-function that doesn't compile.
Based on your answer to the college_pastime re. using tic...toc, it sounds like you *haven't* been using the profiler! This is the single best way to analyze your code performance. It's tic...toc on steroids. Type profile viewer and then enter your matlab command (for your entire program i.e. the main script) into the box in the window and click 'Start profiling'. You will then get a line-by-line performance report showing how long each line took to execute, as well as how many times it ran. Makes it very, very easy to identify which parts of the code need the most work
I didn't try it but it just needs one *MATLAB embedded function* block. Add it to your model, then put this in it: function Q = fcn(y) if y &gt;= 0 Q = y * sqrt(abs(Ps-P1))*sign(Ps-P1); elseif y &lt; 0 Q = y * sqrt(abs(P1-Pa))*sign(P1-Pa); end Then add your input, a constant block??, and a sink, a Scope?, and it's done. You could create a scipt file, and initialize your constants and inputs there. Then use the command *sim("NameOfYourSimulinkModel")* and it will run the simulation for you and you don't even have to open the simulink file.
Merge isn't right for what OP wants, and if-else is overly complicated. This seems like a homework question. OP, use a [switch block](http://www.mathworks.com/help/simulink/slref/switch.html) like /u/Pugnare said. The middle input to the block is the condition (ie. y), and controls what gets assigned to the output (Q in your case). So you need to "model" the two equations above and connect them to the first and third input of the switch block while connecting y to the second input. There are some examples at the bottom of that link. Other than that, your constant values should be put into [constant blocks](http://www.mathworks.com/help/simulink/slref/constant.html?searchHighlight=constant), all of the inputs will come into the system via [inport blocks](http://www.mathworks.com/help/simulink/slref/inport.html?searchHighlight=inport) and creating the equations is only a matter of connecting the dots. [Sqrt](http://www.mathworks.com/help/simulink/slref/reciprocalsqrt.html), [abs](http://www.mathworks.com/help/simulink/slref/abs.html) and [sign](http://www.mathworks.com/help/simulink/slref/sign.html?searchHighlight=sign) are all blocks in the math library. Connect the final output Q to an [outport block](http://www.mathworks.com/help/simulink/slref/outport.html?searchHighlight=outport) and you'll have a complete system. When modeling in simulink you kind of have to think backwards. If you give some examples of what you've tried I can point out where you're going wrong.
Wow, this is really cool. This is like the time I learned about cellfun. Thanks.
Yup you are right. I have to model electrohydraulic system that is consisted of hydraulic actuator and hydraulic motor and is used for rotating weight that is connected on motor. Can you tell me where can I find some of these text books? English is not my mother language so sorry for any mistakes. 
Your solution seems pretty easy, I'll give it a try !
I'll give it a try. Thank you mate :) 
Check your parallel configuration to make sure you have a local profile set up. Then, try matlabpool local n where n is the desired number of workers. 
If you want LaTeX, use `latex()`. `pretty()` was probably great in the 90s or something, when it wasn't so easy to put pictures everywhere. 
You could do something like: reshape((diag([1 2 3])*ones(3,3))',1,9)
&gt; reshape((diag([1 2 3])*ones(3,3))',1,9) Nope, I'm afraid. For my data A can be any length and so can B, so it must be an algorithm that works for everything. 
Ah, I was unaware of that command, thanks. When I ran that function it output LaTeX code, just curious if there is a way to display the result directly in matlab?
I don't think a standard compiler exists in Matlab. There is a limited interpreter if you put the code into figure labels etc. 
I think it comes down to the fact that one of the nice things about Matlab is you can run it in a text-only console e.g. over SSH, which makes it great for working in cluster/supercomputer environments, as well as for remote work. Of course, this means the interpreter and command output is limited to plain text. That said, if you're doing symbolic math in Matlab and you care about seeing it typeset more properly, chances are you would prefer using the Mupad interface anyway
Well I'm a little late to this one, but in case anyone is interested in a more general solution for counting unique elements in an integer array a = [1 1 1 2 2 4 4 4 6 3 5 5].'; b = unique(a); c = [b histc(a,b)]; c now contains each unique element of a in the first column, and the number of times it appeared in the second column
I will go from your example. You need to create a new array which has length of the first array's length times second array's length, in this case 3*10=30. This new array's first 10 elements must be 1, second 10 elements must be 2 and last 10 elements must be 3. Which would look like: [111111111122222222223333333333] (insert spaces) And you should do the same to the second array. You need to put second arrays first element into a new array, which has a length 30, 3 times. Then do this to second element of the second array again. then 3rd element of 2nd array... And it would look like in our example [000 000 000 000 000 000 000 000 000 000] (please insert spaces again). i hope it helps to your question. good luck.
Why not the exact same approach but more generalized. Reshape((diag(A)*ones(length(A))',1,length(A)^2) 
Read your comment and kept thinking "why is the pretty function a method of the latex class?" Then I realized the period was meant to be a sentence stop haha.
You really need to think about your rule how you want to expand the smaller matrix. Right now your idea looks like this: sizeA=length(A) sizeB=length(B) x=floor(sizeB/sizeA) for i=1:sizeA-1 for j=1:x newMatrix((i-1)*x+j)=A(i) end end newMatrix(sizeA*x:sizeB)=A(sizeA) I haven't tested this code though and you still can speed up things using matrix operations. However, the algorithm would produce some 'odd' results, e.g. you have a vector A of length A and a vector B of length 20 the first 10 numbers would be repeated once whereas the last number would be repeated 10 times.
I have a really stupid question about this. How do you run matlab from the command line on a cluster?
Last time I used a Linux shell version of matlab, I just ran "matlab" and it comes up with a prompt. Sort of like Octave does since it doesn't have a GUI.
 &gt;matlab -nosplash -nodisplay Note: this is command line only so you'll either have to quit out of MATLAB each time or open another shell window to edit your text files via vi, emacs, kate, whatever (you can't use the MATLAB editor). Also note graphics won't be displayed either (figures/plots that you make).
I *always* run matlab from the command line since I do not really like the GUI. To launch it, I type maltlab -nodesktop It will still open plots, etc (even over SSH/X11) but I do not have to use the desktop. I am not advocating this for anyone else, but it is what I prefer. Part of the reason I like it is the desktop is slow over SSH/X11 but this is fast. And, this way I have the same experience on both local machines and remote. Plus, there really ins't too much I need inside the desktop anyway. 
I thought Matlab now used MuPad (since purchased by Matlab's parent company) instead of Maple for the symbolic toolbox? It is possible that they did but wrote some functions like `pretty` to maintain compatability.
This is true.
B. T. Kulakowski, J. F. Gardner, and J. L. Shearer, Dynamic modeling and control of engineering systems. Cambridge University Press, 2007.
## Code completion, syntax highlighting maybe? They're the things that nobody really cares about until one day you have to just do a quick change and only have Notepad. For Excel, they probably have introduced more people to programming than Matlab and Simulink have, albeit it was probably due to it's inability to do things people naiively assumed was easy peasy. They both lose when it comes to running cross platform. How is Excel so bad on Mac when at some point Apple was employing them to get excel ported for them. Matlab ha no excuse because it's written in Java and is crap on Windows albeit it's literally the only platform that people use it on.
Do you have to do the whole cylinder at once? Can you cut it into 5 smaller cylinders that you then re-stack on eachother to get your final plot?
The / before sinh and cosh need to be ./ You also need dots before the ^ This works for me: fun = @(ll) cpn(1)+cpn(2)*((cpn(3)./ll)./sinh(cpn(3)./ll)).^(2+cpn(4)).*((cpn(5)./ll)./cosh(cpn(5)./ll)).^2
There is some code inside CFTOOL that makes a decent initial guess at the coefficients in the model. Hence the good fit. You can use the function [fit](http://www.mathworks.co.uk/help/curvefit/fit.html) rather than lsqcurvefit. That function has the same logic as CFTOOL for guessing start points. If you want to use fit to get the coefficients try something like this f = fit( xdata, ydata, 'exp2' ) f.a f.b % etc., or coeffvalues( f ) 
Awesome! I'll give it a try. I'm also curious about how to guess those coefficients but there is probably something about that in the documentation.
Oh God! Excel on Mac is atrocious. It's like a cheap knock-off that is also a few years behind.
You can compute point density using a combination of histc and [accumarray]( http://blogs.mathworks.com/loren/2008/02/20/under-appreciated-accumarray/). The secondary output of histc is the bin number that each point belongs to. If you get this mapping along each dimension of interest, accumarray can be used to count the number of points that exist in all the permutations (e.g. bin (1,1), (1,2), (1,3), (2,1), etc). 
As already mentioned, max will return the index, however you will have to do some easy math to get the i,j values. I use [max2](http://www.mathworks.com/matlabcentral/fileexchange/22995-min2--max2) from the file exchange. 
&gt; some easy math to get the i,j values Or use [ind2sub](http://www.mathworks.com/help/matlab/ref/ind2sub.html)
Matlab R2013b (8.2.0.701) August 13, 2013. 64 bit version. I tried both parpool and matlabpool, they give the same error message. For "matlabpool local n" as neurone suggested below: &gt;&gt; matlabpool local 4 Starting matlabpool using the 'local' profile ... Error using matlabpool (line 148) Failed to start a parallel pool. (For information in addition to the causing error, validate the profile 'local' in the Cluster Profile Manager.) Caused by: Error using parallel.internal.pool.InteractiveClient/start (line 326) Failed to start pool. Error using parallel.Job/submit (line 304) All dimension arguments must be greater than zero For parpool: &gt;&gt; parpool('local') Starting parallel pool (parpool) using the 'local' profile ... Error using parpool (line 111) Failed to start a parallel pool. (For information in addition to the causing error, validate the profile 'local' in the Cluster Profile Manager.) Caused by: Error using parallel.internal.pool.InteractiveClient/start (line 326) Failed to start pool. Error using parallel.Job/submit (line 304) All dimension arguments must be greater than zero As for the settings: http://imgur.com/KkiusTy http://imgur.com/7iem3Mr The validation fails with the same error. 
Please see my reply to jwink3101 further above.
Several ways: IndLogical=matrix==max(matrix(:)); returns the index of your maximum value in the form of an logical matrix, the row and column value can be found with: [row,col]=find(IndLogical); An other way would be (as mentioned): [~,I]=max(matrix(:)); which returns a completely valid index that can be used in matrices of the same size. But if you still want your row and column index you can use: [row,col]=ind2sub(size(matrix),I); I don't know what you exactly want to do with your indices but if its possible I would go for option 1 (just using the logical array without find). My gut feeling says it's faster (though you could easily try it out and measure the time yourself). As a general rule of thumb for Matlab: * Never use a loop (99 out of 100 times it can be done with a built in function or using vectors). * Check the documentation of functions, most of the time they can return extra values that are handy to have (such as the index). 
Have you tried your code? I think as you have it structured with matrix being 2D, max() will return either a row/column (can't remember) of the max values that were in that corresponding column/row. max(max()) will find the singular max value in the (2d) matrix. But, as others have said, there is a much better way at doing this than with for loops. To add my own: [max1 ind1] = max(matrix); [max2 ind2] = max(max1); ind1 and ind2 will give you the two indecies of the i and j location in matrix of its maximum value. I'm not sure what order they will return them in (if ind1 is the row and ind2 is the col or vice versa) but you'll have the two indecies.
Thanks to everybody! :)
What about when there are equal maxima? max only returns the first.
What is the sample program? .. and did it write any output? If you don't need to process inline with obtaining images you could have that prog save the video and then open and process it in MATLAB. It's dirty and easy, but it should get the job done.
My guess is there should be some trick you can play with the URL to make it load more than X comments. Kind of how if you want to start at 35s into a video you can add &amp;t=35s to the end of the URL.
I've tried that already. Youtube has this page where it supposedly loads all the comments, but it only loads a couple hundred. I'm looking to load thousands.
For my own curiosity, what do you do to the URL to make it load comments? 
Thanks for your reply. The "sample programmes" are included in the CL Eye Driver (I think) package to quickly test if the camera drivers are installed correctly. Unfortunately I want to do real time image processing with the cameras so I'm afraid I need MATLAB to recognise my Eyes. :\
Do you have access to any of the CL driver supported software? My suggestion if you can't interface with MATLAB directly would be to find software that you can save the video as a video file in the interim and then import that to MATLAB. Do you have access to Linux? I am fairly confident in saying that someone already has hacked through some software to save PS Eye video, if not even gone so far as to try some application similar to what you're wanting in Octave (open-source MATLAB).
It says in its webpage that Skype video is supported, but Skype couldn't detect my cameras neither. I don't have access to Linux but I can always download and use it I suppose. edit 1: now got it working for skype, matlab still couldn't detect the camera though
Is there a way you can just sequence pages? It's not all the comments on one page, but that's how I've done a lot of stock stuff; Load one page, grab the data, increment pages, grab more, repeat.
Looks great. On a side note: one of the examples I got seemed to be at Nyquist frequency. However its interpolated FT had a lot of spectral leakage - sidelobes. Why would that happen? I thought you would not get spectral leakage with wavelength that are and integer divisor of signal length.
You could also try using the [Youtube API](https://developers.google.com/youtube/)
In Matlab, you can also use `1i` as sqrt(-1). I know it is probably against "Best Practices" but using `i` is just so intuitive that I tend to do it often (though, I try to avoid the loops anyway)
This code really doesn't do much. I know it is not what you're asking, but just for edification, you can replace this with x(x&lt;0) = -x(x&lt;0); Or, really x = abs(x);
It's funny you mention this use of `while` so you can control the increment. I actually ran into this yesterday. I am processing input which comes from `varargin` as a param/value pair. Except, there is a single flag with no value I needed to keep around for compatibility sake. I tried to do the `for` loop with an additional increment but it didn't work so I had to move to the `while` loop. I know. Good story... 
eh? So if I understand you correctly you just want to check your flag? For that you can simply use a for loop and add an if statment at the end. if flag==1 break; end no while loops needed :)
1i makes it unmistakable that you're using the imaginary number. It's not bad at all. Using i as a loop index isn't intuitive, it's a learned behavior from other languages. In Matlab it's just wrong. 
No. It's more complicated because i do not want to enforce the order beyond the required arguments. I want to check for the single-worded flag *or* the param/value pair. If I just had the pairs, I would do for ii = 1:2:length(varargin) param = varargin{ii}; val = varagin{ii+1}; ... but since I also want to be able to see if it is the flag and then continue to the next, I use the `while` loop. It makes sense and isn't really hackey at all (something I can't always say for my codes as I maintain backwards compatibility. This is actually why whenever I write things now, I basically always the the param/value pair paradigm. It is unnecessary for a lot of uses but it gives me near-infinite freedom to expand functionality) 
That should work. Are you (or your enemy) calling `restoredefaultpath` somehow? Or, are you sure you have write permissions to `fullfile(matlabroot,'toolbox','local')`?
I definitely have write permissions, and am not calling restoredefaultpath unless I can do so accidentally somehow. 
I've been using links like 'https://gdata.youtube.com/feeds/api/videos/xyNV99Ah5zI/comments/' and 'https://www.youtube.com/all_comments?v=XfJZ8dCyegk'. The latter is okay, it's just that I don't know how to get matlab to use the "load more" button for the other comments in more popular videos.
Given the responses I've seen for similar questions on StackOverflow (like [this one](http://stackoverflow.com/questions/12826680/how-to-get-all-youtube-comments-with-pythons-gdata-module) for Python) I think the likely solution is going to involve stepping through the pages if you want to utilize the API.
I do not think I have anything else with this name. Plus, the `which` command pointed to the proper one. And if I did have something else with it, it would not have any of the code at all (sometimes when I constant mistype it, I'll make the function be like `[varargout{1:nargout}]=correct_name(varargin{1:nargin});` but even then it would point to the proper one)
are you changing directories any where that might put you in a different folder that might have a copy of the older file
Since you mentioned debugging, while you are in the debugger, functions may not get reloaded automatically, so the old version will continue to run. You can force it to be reloaded by typing 'clear function_name' - even though the function name doesn't appear in the list of variables or anything, this will force Matlab to reload the function from the file, rather than the cache. In general, if you are editing the same m file that you are debugging, exit the debugger before re-running it 
Thank you for the reply, I know that A(:,1) will select the entire first row of A but why does adding the :2:end select the remaining odd rows? Is this just selecting every 2 rows starting at row 1 until the end of the matrix?
Yes, you got it. 1:3:end would select every third row, etc. P.s. A(:,1) selects first column, A(1,:) selects first row.
No. MATLAB is proprietary. Check with your professor and campus help desk. Many universities have licenses that allow you to install MATLAB on your personal machine for free. Otherwise you can buy the student version for about the cost of a text book. http://www.mathworks.com/academia/student_version/
Nobody uses Matlab for work anyway. Unless you're a research scientist or market analyst. Which is unfortunate, I really liked Matlab.
I'm going into research! It's why this irks me so very very much. It's like the TI-83 for college.
Nope. I, as a rule, always run Matlab from the same directory and have scripts to add my codes to the path. As I said, I used `which` and saw that it was in fact looking at the proper code. I am nearly 99% sure this must be an edge-case bug. It is the first time it has happened and I do not imagine it will happen often. I was just curious if other have had it too
If you notice, everyone is suggesting a shadowed version of your code. You should run a "whos" and a "which" on your m-file. I would suggest that restart worked because the second file hadn't yet been added to your path or your current working directory. I bet that you have multiple versions of your file knocking around. Do tell what your result is; if it really is an edge case I'd like to know.
I definitely don't have multiple versions of the file around. I try very hard not to for this reason. And, as I said, I used `which` to confirm I was editing the proper file. I had been running matlab pretty hard for most of the day including having to terminate some jobs while they are in a `parfor`. That shouldn't cause an issue, but I am grasping at straws. If it does happen again, is there an action I could/should take to log the exact state of Matlab before I restart? I am really not too worried. I just wanted to see if others have experienced this.
its essentially calculating the remainder of each element when you divide by 2. so 4/2 = 0 3/2 = 1 5/2 = 1 6/2 = 0
Oh, right. Thank you!
2nd the recommendation for octave. I have written many m files that work in both software. As long as you are not making guis, you should be fine with compatibility.
You should check out the documentation before you post. You can try "doc mod" or "help mod" for information on the "mod" function
Try something like this: spy(test==1,'b+') hold on spy(test==0,'b*') where test is your matrix name
I had done this before, but I couldn't for the life of me remember this. No searching gave me any answers either. I forgot all about "spy." You are awesome! Thanks for the help!
No problem. Glad I could jog your memory.
So you want `format +`? 
I actually got it. Not necessarily. I actually needed open and closed circles, but for simplicity I typed those symbols. The Hamburgler answered it. Thanks for the help, though!
A really dumb question: Did you save the changes to your file? Occasionally I'll make changes to a function only to have MATLAB not honor those changes. Then I realize that I hadn't saved the file with the changes I just made. Also, is your file named something that MATLAB also has in one or more toolboxes? Sometimes MATLAB has multiple versions of the same filename defined for different class/data type inputs. For example: &gt;&gt; which -all max.m
**This is untrue.** A [large number of companies](http://www.mathworks.com/company/user_stories/industry.html) use MATLAB for their research, development, and analysis. And this is only the list of companies who allowed themselves to be featured on the user stories page.
They have a [home license](http://www.mathworks.com/products/matlab-home/) now. It's much cheaper than the commercial license.
What are you actually computing within the for() loop? Usually it is easier to vectorize the code and it typically runs much faster. Also, your nested while() loop never terminates because it never exits itself. The for() loop increments n only once it reaches the top of it's loop again. Since you never leave the while() loop, the for() loop never has a chance to loop itself.
Yeah, just figured out a way to execute this actually! Yhanks for your reply. The while loop was repeating itself for the reason you gave. I'm using a if elseif else type scenario instead. I'm generally interested in the tiered approach for executing loops, but at the moment I'm using it for image processing, essentially a type of edge detection, wherein I'm changing the constraint parameters after a certain number of loops (essentially my region of interest). Later on, I will use some kind of self-regulatory system, where the type of constraint automatically changes on que from some kind of result.
And my lab has called Matlab obsolete, and replaced it with scientific Python packages. Not to cause a tussle, but I'm curious. Is there really a reason to use Matlab when we have other options?
I did save the file. Maybe, just maybe, the very first try I didn't (yeah, we all make that mistake) but it doesn't matter since when I realized what was happening, I kept trying to get it to work so I would definitely have saved it again. 
As others have mentioned `spy` is the command you are looking for. For an added bonus, type it in with not argument. Anyway, another tool that is useful for these things is `imagesc`. It is like `pcolor` but plots the face values. Actually, for my own uses, I created a function that prints the matrix graphically the same way it would show on screen and does some nice formatting. I can share if you're interested
What is your gripe with MATLAB being proprietary? Or is that just it: it's proprietary.
Everything your saying is also true about Python?
Well, my gripe was mainly that it costed $2,000. I didn't know about the home edition, although I think that's pretty new. I still don't quite understand what open source is responsible for. Python is my only language so far, so apologies for using it for every example. Are imports normal for MATLAB as well? Essentially every program I've written in Python is actually just using Python as a means to access other libraries. Eg NumPy for C-like vectors, Cython for C-like speeds, etc... Python is built around versatility, and falls back on imports for specific tasks. MATLAB is built around vectors, and is difficult to adapt? Is this a fair assessment?
I agree that most of the basic stuff can be done in Python or other languages. The specialized toolboxes Matlab has are harder to find other places. It has plugins (that I've used) for VHDL coding, DO-178 compliance, measurement instrument control protocols, and electrical circuit simulations. [Here's the full list if you are interested.](http://www.mathworks.com/products/?s_tid=gn_ps)
The bar command is telling MATLAB: "at x(1), put a bar the height of y(1), at x(2), put a bar at height of y(2), etc." So say you have: x = [1 2 3 1]; y = [2 5 8 9]; you're telling MATLAB to put TWO bars at x=0, one bar being height 2 and one being height 9. This is illegal. The values in your x vector must be unique to use bar(). Otherwise use stem() or something.
I watched the image processing tutorial video from that link, since I'm somewhat familiar with how it works in Python. I admit, it looks insanely helpful. It even has shortcuts to enable GPU processing-- a whole extra chore in Python. However, everything and more also exists in a Python import (OpenCV is the biggest, but there are options). When using Python, we have all the extra features that come with a modern language. Learning MATLAB for this purpose instead seems like an enormous crutch. Anyway, I've been shown that MATLAB is at a reasonable cost now, so I might as well jump on the bandwagon and learn it too.
Do you have a masters?
It doesn't have to be but it will usually be significantly faster if it is. 
Hi, Which version of matlab are you using? if its a class file try using clear classes
It was r2014a. While I am a pretty advanced matlab user, I sadly do not yet have experience writing class files. Maybe some day...
I really like Matlab...as a scientist, not as a programmer. Lots of the scientific work I do is very fast and clean to implement in Matlab. But it's quite true that Matlab is not a very good general programming language, and the moment you start wanting to do more than just numerical computing and data visualisation, you run into all sorts of problems. So quite fair that Matlab doesn't provide a good skill set for general programming
*..if you teach a man to fish..*
People in industry despise Matlab because of it's huge price tag. Exactly like he described in the article they give it cheaply to schools so all these new graduates get used to it, then they charge crazy amounts to industry.
Yeah. It is a scripting tool that is great at what it does. It even can control lab equipment through GPIB. So can Microsoft XL, but with Matlab the data is already there for post processing 
I like Matlab for quick and easy implementation if I want to test some new algorithm (for example image processing). I may not care that it is slow, but I am more interested in proof of concept. I do agree with the authors in some regards, because even after knowing Matlab for 10 years and having informal C/C++ experience, I still struggle with libraries and type definitions in C/C++ code.
I used to use matlab a lot for data visualization and analysis, but that is definitely unnecessary with how great python (with matplotlib and numpy) is..
Does Google even have a demand for Matlab people? What would typical jobs be where you need Matlab (or any equivalent language)?
It is a HUGE amount of code. And there wasn't a problematic code per se. I would run the code and see no change. (It kept throwing a warning I wrote into it). So I added some diagnostic output to display before the warning. Nope, just the warning w/o output. Then I realized it was being strange so I tried adding all kinds of statements and nothing. It isn't about the specific piece of code. And, since a restart, it has run perfectly fine (and I fixed the unrelated bug that was giving me the warning). Again, the warning was not a Matlab one but my own.
Well MATLAB can be used for a lot of different things. It has loads of engineering applications in general (simulink) and I can see where MATLAB background could be used. Given Google's breadth of projects they have, it would be no surprise that people tend to apply with a MATLAB background for some projects.
I thought it's mainly used in the research division of Google, for example in Computer Vision or Machine Learning.
R and Python are free but don't you pretty much have to buy a 3rd party IDE? The default editors and debuggers are terrible. 
In fairness, if you don't know what modulus means already, the `mod` documentation isn't really going to explain it to you. Here's the docstring: &gt; M = mod(X,Y) returns the modulus after division of X by Y. In general, if Y does not equal 0, M = mod(X,Y) returns X - n.*Y, where n = floor(X./Y). If Y is not an integer and the quotient X./Y is within roundoff error of an integer, then n is that integer. Inputs X and Y must have the same dimensions unless one is a scalar double. If one input has an integer data type, then the other input must be of the same integer data type or be a scalar double. &gt; &gt; The following are true by convention: &gt; &gt; mod(X,0) is X. &gt; &gt; mod(X,X) is 0. &gt; &gt; mod(X,Y) for X~=Y and Y~=0 has the same sign as Y. 
The thing that really irks me about R is the inability to do runtime inputs. It is heaps better at handling big data matrices than other languages, though.
I started using Scilab a while back because I couldn't get anyone at to buy me MATLAB (though we do have it on a shared server I can rent time on). They're reasonable facsimiles but not as easy or capable as actual MATLAB. It all makes me think I should really learn python.
I am still in Academia, so I get the free Matlab. What I use it for does not require a faster language, by far the most important thing is that i can get my ideas working fast. And Matlab is excellent for this, it has great interface and debugging facilities. And a clear syntax with loads of help. Generally in my field (finance) Matlab is used to develop ideas, which are then implemented using C++ for speed.
Recent PhD graduate here who has used Matlab, R, and many other languages extensively in my research as well as side projects. I used to be a huge Matlab advocate. I have written code that is on FileExchange, answered matlab questions on stack overflow, and published papers with results generated by Matlab. I completely agree with the message. Matlab should be dropped. "But why?!" you say. There are a many reasons from many different angles. Let me describe a few. From a scientific angle: Matlab is a mostly closed source, proprietary language for doing and communicating science. If the code and algorithms you generate are relevant to a broader audience, you should be writing and packaging your work in a language that doesn't require a high purchase cost (especially outside of academia). Scientists and academics especially need to recognize Mathworks for what is is doing, getting students hooked on their platform by offering it up for cheap to universities. It's a way to get young minds stuck in this walled garden of a platform. R is where it's at now. Free to use. Massive ecosystem of add-on packages. Powerful, flexible. I will absolutely agree that the same complaints about the language apply to R as well. Bad, poorly designed language. But it is open and free and you don't incur the onerous cost of the platform. From a programmer angle: The OP gets that right on several levels. Matlab is a mediocre language from a CS perspective. You are far better off learning something with more potential (C for example) or something under heavy development that the CS community buys into (python for example). Matlab is also not very portable. What you can compile and share incurs awkward runtime overhead (for most of it). From a business perspective: I don't know this angle well, but this may be the only place that makes sense. If you want a walled garden to live in and don't mind the cost, then go for it. But know that you're hitching your code and tools to a single company. You consider first one of the many rapidly improving alternatives out there, especially if you don't have much legacy code and are building something new. For myself: Through the work I've done and work I've collaborated on, Mathworks has proven to be unwilling to change or be helpful. I got burned a few times and decided to give the alternatives a real try. After a bit of a learning cure, I became quickly impressed by the diverse toolsets and ecosystems available out there. For scientific computing and visualization, I am 100% R now. It's a phenomenal world. Great tools to do almost everything. Easy to build and contribute new libraries to CRAN and other repos. If you aren't happy with the performance, it is easy to write small snippets of C code to accelerate computing. (Octave angle): Octave struggles to get critical mass. It isn't compatible enough with matlab code out of the box. They don't have enough help to keep up with Mathworks changes to Matlab syntax, so they are falling behind, making them increasingly irrelevant. I've tried the Octave thing and it wasn't even remotely worth it. If you want open source, just make the switch to R IMHO.
I always say that I hate how proficient (and dependent) I am on Matlab. I have about 8 months left until I defend my PhD thesis and I have *way* too much code and functionality in Matlab to rewrite without setting myself back a very long time. However, I am *starting* to play with Python/NumPy/SciPy so that I can honestly claim I have some experience in it. And maybe I'll start moving things over (so much of my tools are inter-dependent though so in some ways it is all or nothing)
This is almost exactly my situation, but I'm ~15 weeks til my defense... I will definitely NOT change, but as soon as I'm a PhD with a bunch of "free time" on my hands, I will learn a better software language. I work government though, and I was a little shocked to see they think government uses it - maybe the research labs, but generally, all the analysis done for the government uses excel - laughable really.
&gt;I should really learn python Yeah. I haven't delved *too* deeply into python's mathematical capabilities (although I'm a scientist I tend to use it for driving hardware and for basic simulation rather than sophisticated numerical analyses) but I have to say it is really rather flexible. Scipy and numpy cover an awful lot of the same ground as Octave/Matlab and mostly use very similar syntax too.
I'll just leave this here: https://www.google.com/about/careers/search#t=sq&amp;q=j&amp;d=matlab&amp;li=10&amp;j=matlab
Does this guy even Simulink? Does he have any idea how many of the world's controllers are written in Simulink? Hell, they even advertise for positions: https://www.google.com/about/careers/search#!t=jo&amp;jid=15085001&amp; http://www.linkedin.com/jobs2/view/10632716 There is a world that exists outside of software engineers.
&gt; People in industry despise Matlab because of it's huge price tag No we don't. It's worth it for what it does. It's like balking at the official price of Fluke meters or Yokogowa scopes. It's a tool. It does what we pay it for. I'm not replacing my Fluke with some hacked together Ardunio and python script. 
Ugh. I hate when I look at a real scientific paper and see excel plots. Yes that makes me a snob and I do recognize that matlab plots are often viewed the same way (though I generate mine through a LaTeX interface and with different colors giving a very different look).
Personally, I do not use the IDE parts of Matlab (I run with `-nodesktop` and use a different text editor). I wonder if that makes me an even better candidate to try to switch.
True, companies want someone to call if shit doesn't work. Matlab support has always been really helpful. It's really not that expensive for software. I usually get 4 or 5 toolboxes too.
No, not really. I work in a shop with a few people doing data science in python (myself included.) Some people use the community edition of PyCharm (free) and some use their favorite text editor (often free) along with ipython notebooks (free). A lot of the work that we're doing is stuff that could be done in MATLAB and a lot of the people come from physics backgrounds and have strong MATLAB experience. It's true that nobody is using any editors that are packaged with python, but there's also no one using a paid IDE, I believe (even though our company would pay for it.)
I've spoken to a PhD with research in the field of the toolbox I was having issues with. Supposedly they make a lot of new programmers deal with end customers, though that may just be a rumor we heard.
It worked. Thanks for the help!!!!
I switch between python and matlab to stay fresh in both
I was just about to write this exact same thing. It's brilliant for prototyping but beyond that it's very long in the tooth. 
If this is for a class, have your teacher PM me. Otherwise these are getting deleted.
If this is for a class, have the professor PM me and we can have him set up a thread for it. Otherwise these are getting removed as spam.
&gt;R and Python are free but don't you pretty much have to buy a 3rd party IDE? wut Neither of those has a "default editor", or indeed any editors at all. You have to use your own editor, which means the editor is as good or as bad as you want. As for 3rd party IDEs, R has R Studio (free, but AGPL'd, which has some restrictions to be careful of). Not sure if that's first-party of third-party but it seems to be the de facto standard for R. Python has Eclipse. I mean...who _buys_ IDEs any more? What year is it? Personally I don't bother with an IDE unless I'm doing C++ on Windows (VS) or Java (Eclipse); otherwise, it's not worth my time.
Yes. What do you use to edit python code? PyCharm (and pretty much every decent IDE, including the free ones) lets you debug with the usual features (including stepping through code while monitoring the value of variables) right in the IDE. I'm not an R guy so I don't know what tools are available there.
For me personally, I just had to send him a screenshot of the post. I'll remove it now. 
RStudio has made excellent strides in this realm. Debugging in R isn't debugging in Matlab yet, but it is close. 
Yes. It would make the switch to a language with a command-line interpreter far easier. 
Is Python not a scripting language? In my mind, anything that's interpreted and not compiled is a scripting language
Exactly. I can't imagine Matlab without Simulink. 
I always thought Matlab was used as a prototyping tool. I never thought anyone would attempt to build any large production-level code using it especially if they are shooting to maximize efficiency.
You're just about there. You've got the upper part of the circle, which you can plot how you need, and you just need to find the equation for the lower part of the circle. Turns out that's the upper part, but reflected over the x-axis (aka, negative). 
 &gt;&gt; why
and as a tip for next time, if you enter 4 spaces before your code you get nice formatting :). like this! x^2=magic!
R Studio is really what I'm thinking about. I found the debugger to be far below what I'm used to with MATLAB. 
Are you a statistician? I do a lot of math in MATLAB. And I find the statistics to be lacking for sure. But for solving differential equations I can't imagine R competing with MATLAB. 
Strictly speaking Python is a language specification that does not require a particular implementation. The major implementations of Python (C-Python and pypy) utilize just-in-time compilation similar to modern Matlab. None of the three of them are really interpreted in the way that, say, BASIC is. I would consider things like bash or Windows batch scripting languages. Python, like Matlab, supports fully object oriented design, asynchronous file access, sockets, UI callback functions, etc. -- features not typically found in what I would consider a scripting language.
Welcome to UNIX. It looks like you have permission problems with the files, i.e. the permission settings are not allowing you to execute the files. To modify the permission settings of files, open a terminal and use the [chmod](http://en.wikipedia.org/wiki/Chmod) command. This could be fixed by moving to the directory that contains myTest.app running the following commands in the terminal: sudo chmod -R a+x myTest.app The -R means change the permissions recursively, the a+x mean make the files executable for all users. Depending on who the owner of the file is, the sudo may not be necessary. Hope that helps. You can always see the permissions of a file by running: ls -l
I was totally about to downvote you for answering someone HW question then saw it was you. Glad you're figuring it out. Also, for code blocks, if you indent 4 spaces, it will format as code. Or, if you want it inline like `this`, use the...(no idea what it's called)...symbol under the ~ **EDIT to add:** You will also likely be needing to do `.^` instead of just `^`
To be fair, I made that title when I started this sub-reddit so long ago when I was a baby grad student and was just desperate for a title. I guess I could change it.
I like it because octave really doesn't cut it once you include toolboxes. 
No, I work in the geosciences and use stats all the time. Stats are definitely tougher in Matlab. Matlab definitely has better diff eq support than R, though I don't know the state of available packages anymore. I would have said the same thing about wavelet analysis, except there have been a few packages that have come out recently for R that have really upped the game. 
&gt; &gt; &gt; That said, the "Matlab's an outdated language" was absolutely true ten years ago, but not anymore. In some aspects, Matlab is in fact broken and stays broken. The lack of proper data structures is one of those problems, Matlab's support for OO programming leaves much to be desired (see handle vs value classes), the official hack to preallocate vectors is pathetic... It leaves much to be desired. If you ever have the chance to compare Python to Matlab, you'll see that there's a world of difference in terms of elegance and polish. And Python isn't even that great.
&gt; For sure matlab isn't for software engineers since it's not meant for software development There are quite a few commercial software companies out there who would claim otherwise. In fact, Matlab offers support for exception handling, unit testing, package modules, object oriented programming, etc etc etc... 
&gt; Does Google even have a demand for Matlab people? If you rephrase your question and instead ask if Google has a demand for people doing signal analysis, statistical analysis, data analysis, optimization and exploratory programming then I believe you have your answer.
&gt; Is Octave a dirty word on this sub or what? No, but Octave doesn't provide a workbench like Matlab does. In my experience, Matlab's workbench is the main reason people are sucked into Matlab. After we get the hang of it, it makes doing everything a breeze. Things like the ability to define code sections in a script and run them arbitrarily really help with exploratory programming.
&gt; No, not really. I'm afraid it is. If you compare IDEs like ipython or spyder with Matlab's workbench you'll notice that Python's IDEs are still awful and not user-friendly.
&gt; I wonder if that makes me an even better candidate to try to switch. It certainly would help you move to Octave.
Ah. Well that's probably why I never noticed the difference then, because by the time I needed to learn how to use the workbench (i.e. use Matlab *properly*) I had already started learning Python to do stuff instead.
I've spent more time with matlab than any python ide, but I guess our experiences just differ. I don't miss the matlab IDE at all while using any of the free IDEs I use regularly. Edit: And I can honestly say I never had any issues with user-friendliness picking up any IDE. So I may not be the best person for comparing user friendliness between IDEs.
I don't like you.
http://i.imgur.com/QkPSlQk.jpg
$100 for the pro version of pycharm and it's much better than the Matlab IDE. This becomes very obvious if you start trying to use matlab's package management and classes.
This comment has been removed. We love class projects, but not 30 threads on them. Next time have the teacher create one thread and everyone reply to it. If it's of broad interest, we can even sticky it.
Maybe you should ask Dr Mattner ;) Edit: This is an assignment due tomorrow for a class I have :P After you've divided the first and last elements by two, you can add the rest of them using the "sum" command, summing the elements 2:end-1
* Create a vector *x* that contains the nodes at which you want to evaluate the function, *x_1* and *x_n* being equivalent to *a* and *b*. * Evaluate the function at *x* (the result will be a vector *y = f(x)*) * Notice that the trapezoidal rule sums the first *n-1* values of *y* and the last *n-1* values of *y* and multiplies this sum with *h/2* to get the result Edit: Format
Did your brain completely skip the word vectorized in the title?!?
This is *the* way to do it in Matlab unless this is some homework problem where you need to do something that would be a waste of time in any other context.
Ty, this works
I need one more thing. Now i need to calculate integration of the same data. Pls help. Im searching and still nothing usefull ...
I know, I was being intentionally flippant. =P
 help cumtrapz
You can do an integral by summing over your derivatives =) just set up a loop and sum up each of the derivatives!
num2str is your friend! it changes a number to the same number but now as a string value. So how do you use it? well like this: for k=1:5 filename=['subsection', num2str(k),'.png'] disp(filename); end and voila.
I agree with this--use num2str and concatenate (strcat) the strings needed for the filename. Also, I would favor using underscores rather than parentheses in filenames.
Thanks so much! I knew it was easy but it wasn't coming me... Wasn't expecting a reply so quick either haha
&gt;don't use string cat, just use [ ] Out of curiosity, why not? 
It's just not necessary. Think of it like using c = plus(a,b), when all you need is c=a+b . Using [ ] is easier to read in code as well.
You can't declare functions like that. It must be defined as a function handle to use it in this way. These are called anonymous functions in matlab.Use the @ symbol to make it so: G = @(x,y) x*y % declaring the function G(1,2) % using the function G = 2 % output
It worked! Thank you so much.
Everything is a vector (or, more generally, an array) in Matlab. Do you need to turn it into a vector of doubles? 
You mean you want their input to become id = [1 2 3 4 5 6 7 8]; type of a thing?
If so, this is what I quickly found... on my mobile though. Good luck: http://stackoverflow.com/questions/8360462/convert-decimal-number-to-vector
This is a very unclear explanation, I honestly have no idea what you are trying to do.
Sorry I was unclear, I will edit it. I have a program that calculates area. The program should allow the user to enter the dimensions in standard or metric units , and give the results in both systems as well.
Well, do area formulas change depending on units of measurement?
no. but if I use "feet" for example the answer will be in "feet^2" or "square feet" 
So you need to conceptually break this program into two chunks calculating area, and then dealing with units. You just said yourself, you can calculate area without any knowledge of units. Similarly, given any number and knowing it's in square meters or whatever, you can convert it to square feet without knowing what it's an area of.
As a side note, why do homework problems never actually teach you to write useful code?
I believe this I what I am trying to do but that is where my matlab knowledge is limiting me. For example I tried doing this. All though I does not work I thought I might give you an idea of what I am trying to do. x=5; %x is the height of the square y=8 %y is the length of the square D= feet; %user defines dimensions used fprintf('the area is %d \n', x*y) fprintf('square %d \n' ,D) Yeah I know you are probably laughing at this because it does not work....obviously... and there is probably a better way to do it.
Yea. One of /u/Cayleface's links that he posted was what I was looking for. This is what i used: x = input('enter your id: ') v = sscanf(strrep(num2str(x,8),'.',''),'%1d')' I used that from the link provided to turn the user input into a vector (kind of like what you wrote above). If you know of a different way to to this I certainly wouldn't mind learning another method :)
This is exactly what I was looking for. Many thanks :)
There's no laughing, everyone starts somewhere :) Check out [this page](http://www.mathworks.com/help/matlab/ref/input.html) to take user input. As for converting, this isn't a matlab thing. You just need to store the value in one measurement system in a variable. Then use the correct conversion when outputting.
http://www.mathworks.com/help/matlab/ref/function.html how you make a function. here, i'll save it as "example.m" function [ouput1 .. outputN] = example(input1,input2,inputN); output1 = input1+input2; outputN = input2*inputN; end and you can call this from the command line as such: [out1 ... outN] = example(in1,in2,inN); Now in the example, you can have any number of input/outputs to define your function, but it HAS to be called using them (unless you want to start writing functions for variable input/output arguments, you don't here. keep it simple.). If you just wanted to sum two numbers: function [added2g] = math_sum(num1,num2) added2g = num1+num2; end save this file as "math_sum.m" in your working directory, and call it as: mysum = math_sum(3,5); % will return mysum == 8 Hope you get the idea of writing a function and interacting with it via it's input/outputs(s). *Edit: also, in terms of calculating, I would calculate the area in metric units, so after asking the user their input i would convert prior to calculation from US to metric, calculate area, then output in both as you originally intend. I say metric because its base-10 and easily calculatable.
Now that you say that, yeh maybe its just im viewing it in program, so if i view the compiled product using standard viewer it might correct itself. Is it possible to set the resolution on the png file?
You might want to try changing the font that MATLAB is using to export the figure. There may be an issue where MATLAB is embedding a font that the LaTEX interpreter doesn't know or like. 
Just do some ASCII math. numstr = '12345'; elements = numstr - '0'; 
Thanks for the help with the functions. Can you help me with one more thing? If I wanted to do this &gt; where unit can equal 1 if feet, 2 if meters, and so on. what would be the syntax?
To call your function: myfun(length_in,unit_flag) where inside of myfun (remember to save it as "myfun.m") unit_flag (or whatever it's internal name is) will be able to be used as 1 or 2 and intepreted as feet or meters. You can do some error catching if you want to get technical/robust about it, i.e. make sure unit_flag is of a numeric data type (double, single), what to do if its value isn't the integers 1 or 2 (input of 184 for example). I do function flags in this manner myself.
wait you have to code this? This is a very bad idea... Use maths instead. 
mmm how did you export the plot to pdf? I've been using export_fig and it has worked like a charm. (simply search and download export_fig and use it as in `export_fig FigureTest.pdf`
no don't use loops for this, use `diff`, `trapz` and `cumtrapz`
I have the math done already in paper. But the professor only wants it in Matlab. This code generates an array with repeatable numbers, i just cant find a command to check if 4 numbers repeat to simulate 4 of a kind.
^ this. Much elegant! Thank you for it! Clearer to read than scanning the string! So his code could be: x = input('enter your id: ','s'); v = x - '0'; where the `'s'` parameter forces `x` (the input) into a string. And then if you need a diagonal matrix of `v`, use `diag(v)`...
mmm there is no such command, you have to test the entries with if then else statements 
does the "isequal" command limit the "search" to the first 4 values of the array? or any 4 values on the array?
`isequal` tests the full vector it is given. But for example if you want to test if the three first values of `x` are zeros, you can do `isequal(x(1:3),[0 0 0])`
sure! And full disclosure, this may not be the quickest or most sophisticated way to do it, but I would do a "switch" statement switch unit case 1 area = areafunctiongivenfeet case 2 area = areafunctiongivenmeters case 3 ... end 
Does this happen always at 50% or is it only for some specific programs? It seems that your GPU has to wait very long to read out some data. It could be possible that your iterations don't fit into cache anymore. A possible solution could be to access your data in of blocks that fit into cache. I couldn't find a matlab-source but this [article](https://software.intel.com/en-us/articles/cache-blocking-techniques) from intel shows the basic idea. 
just popped in today and compiled my thesis. its fine, its exactly as you said, the in-program viewer messes it up, but viewing the actual compiled pdf using adobe is ok. so no issue really.
Great. Good luck with the write up!
 values = repmat( 1 : 13 , [ 1 4 ] ) ; % This is the deck num_trials = 1000000 ; % however many trials successes = 0 ; % initialize successes parfor i_trials = 1 : num_trials cards = randperm( 52 , 5 ) ; % five unique cards this_draw = values( cards ) ; % values of those cards if sum( this_draw == mode( this_draw ) ) == 4 , successes = successes + 1 end end empirical = successes / num_trials expected_prob = ( 13 * 12 * 4 ) / nchoosek( 52 , 5 ) So I don't feel like a piece of crap, explain my 'if' statement to me.
Omg, you sir are a genious. I am not very good at programing but here is what i think the "if" statement does after 1 hour of debugging. So "values" generates a matrix of equal numbers in each column 1-13. "Cards" generates a random permutation of 5 numbers picked out of 52 numbers total. "This_draw" picks numbers out of "values" corresponding to the position numbered from the numbers in "cards". In your "if" statement, if the numbers picked out of "this_draw" eqaute to the number of most "mode" frequent numbers in "this_draw" and equal to four (4 of a kind) then +1 to " successes. Edit: a word. 
Question though, why is the emprical value no where close to the expected outcome? 
Does your system have weird requirements about where GPU accessible RAM lives? Like a GPU that can only do 32 bit physical addressing?
How many trials did you do? Think about it: There are nchoosek( 52 , 5 ) = 2598960 ways to select a deck of cards. If you're not on that order of trials, you probably won't get a very representative sample. Here's a neat trick, though: run the code fifty times, and average those results; tell me what you get. Then tell me why the central limit theorem suggests that result.
Correct! Lesson to be learned: MATLAB is a weakly-typed language. This means that mode( this_draw ) will return just a number; in this case an integer, representing the mode of the vector. Then this_draw == mode( this_draw ) returns (and this is crucial), a logical vector of how many values in this_draw equal the mode of this_draw; that's zeros and ones. The weakly-typed nature of MATLAB makes it so you sum up that logical vector (which is really just trues and falses) as though the "true"s were ones, and check if that sum is equal to four, indicating four of a kind. That would have involved a manual re-casting in C, and an extra 'for' loop to check each value and sum. 
Adding zeros at the end of a data series that doesn't repeat and zeros out at the end doesn't introduce error to the signal. You effectively ran for a longer time. Taking a cosine wave that starts at 1.0, runs for 1000 steps (ending at 0.5) and forcing it to zero for 24 steps and then setting it back to 1.0 introduces error into your signal and thus your frequency content. If you don't zero pad, you can actually capture the proper frequency content. Unless you're working with huge data sets (probably in real time), there really isn't a good reason to zero pad in today's world of super fast computers. This problem is compounded when using a pwelch type method since multiple DFTs are taken.
Do you have to save the entire workspace? Are you loading in data? I load in 150 files at the start of my work, then go about my business for the day. I don't load them up each time I run my code. If you've got huge files (could be large number or large size), try and save your workspace for everything you've done/modified to your data AFTER you've input'ed it. In otherwords, take a close look at your workspace and see if there are some large blocks that you don't *really* need to save. If you do indeed need to save all 14g, I don't know what else to tell ya. I don't typically save my workspace.
 Your second coded line wont return anything, it'll just check for equivilence (you've used == ). It also won't do what you're expecting it to. If you want the mode and mydata is a vector, datamode = mode(mydata); returns that singular value where as [datamode freq] = mode(mydata); will return what you're wanting, the frequency also. But it's not a logical vector. That only has 0 and 1. freq will be a vector same size as mydata that has integer values of the number of times the mode showed up. [mode()](http://www.mathworks.com/help/matlab/ref/mode.html) can work on both vectors and arrays.
Sorry duder, that's not right: &gt;&gt; this_draw == mode( this_draw ) ans = 0 1 0 0 0 That's why I said &gt; returns (and this is crucial), a logical vector of how many values in this_draw equal the mode of this_draw; that's zeros and ones. Try running my overall code, it works. Kindly rescind yo downvote dawg.
I came up with checking how many values in the draw are equal to the mode of the draw. i.e. if the draw is [ 3 10 2 3 3 ] the mode is 3. If we call the draw d, d = [ 3 10 2 3 3 ] then d == mode( d ) gives you [ 1 0 0 1 1 ]. Then, if you want to see how many values are equal to that, you just sum it up: s = sum( d == mode( d ) ) And if that sum, s, is equal to 4, you have four of a kind. Inlining the code, you can check four-of-a-kind-ness with is_four_of_a_kind = ( sum( d == mode( d ) ) == 4 ) Just a thought! 
Multiply your matrix of points by a [rotation matrix](http://en.wikipedia.org/wiki/Rotation_matrix).
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Rotation matrix**](https://en.wikipedia.org/wiki/Rotation%20matrix): [](#sfw) --- &gt; &gt;In [linear algebra](https://en.wikipedia.org/wiki/Linear_algebra), a __rotation matrix__ is a [matrix](https://en.wikipedia.org/wiki/Matrix_(mathematics\)) that is used to perform a [rotation](https://en.wikipedia.org/wiki/Rotation_(mathematics\)) in [Euclidean space](https://en.wikipedia.org/wiki/Euclidean_space). For example the matrix &gt;&gt; &gt;rotates __points__ in the *xy*-[Cartesian plane](https://en.wikipedia.org/wiki/Cartesian_coordinate_system) counter-clockwise through an angle θ about the origin of the [Cartesian coordinate system](https://en.wikipedia.org/wiki/Cartesian_coordinate_system). To perform the rotation using a rotation matrix R, the position of each point must be represented by a [column vector](https://en.wikipedia.org/wiki/Column_vector) ___v___, containing the coordinates of the point. A rotated vector is obtained by using the [matrix multiplication](https://en.wikipedia.org/wiki/Matrix_multiplication) R___v___. &gt;==== &gt;[**Image**](https://i.imgur.com/d1zLVFb.png) [^(i)](https://commons.wikimedia.org/wiki/File:Counterclockwise_rotation.png) --- ^Interesting: [^Euler ^angles](https://en.wikipedia.org/wiki/Euler_angles) ^| [^Orthogonal ^matrix](https://en.wikipedia.org/wiki/Orthogonal_matrix) ^| [^Matrix ^\(mathematics)](https://en.wikipedia.org/wiki/Matrix_\(mathematics\)) ^| [^Rotation ^formalisms ^in ^three ^dimensions](https://en.wikipedia.org/wiki/Rotation_formalisms_in_three_dimensions) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ck7e672) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ck7e672)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Does "determine the probability" in this context mean by Monte Carlo? I would think an explicit solution would be much easier.
Ok so I know what the empirical was not close to the theoretical. I copied "values = repmat( 1 : 13 , [ 1 4 ] )" incorrectly. It works fine now. I can see that every time it runs its slightly off compared to the theoretical results. But over all the average is what you said. Thanks u/halleberrytosis I wouldn't have done this without you. 
His whole code works, just make sure to copy it correctly because a single space messed it up for me. AHaha
Happy to help. Did you think at all about the Central Limit Theorem's implication here?
I looked it up and read the definition. I understand it a bit, but I just started my probability class so I am still learning. 
thanks! I'm saving sparse probability transition matrices for 14k states, each with 60+ actions per state. Has to be double which hurts. Typical curse of dimensionality for dynamic programming... something blows up - either storage or computation time.
Hopefully a real math person will chime in and clarify any mistakes I might make, but basically it's this: the Central Limit Theorem says that the mean of the means always has a gaussian distribution; thus, if you run enough trials and average them, the means will converge to the true value. Neat stuff!
Aaaaahhhh "a convergent average". I get it. Math is so lovely! 
I think I might know where the problem is... Are you sure you're plotting what you think you are plotting? Try adding this line to your code following the calculation of y: disp(y(:,1)) This will display (in the command window) the values contained within the matrix y(:,1), which is the set of y-values you're plotting. Is this what you're intending to plot?
This is what I'm wondering. I am a huge fan of the [matfile](http://www.mathworks.com/help/matlab/ref/matfile.html) command/functionality, which allows variables to be only partially loaded into the workspace or saved one index (or one row, or whatever) at a time. It reduces memory demands substantially for what I do.
Why is the teacher/professor assuming you're familiar with Matlab? Open the editor in Matlab. You can type "edit" in the command line. Copy and paste that code, save it. Now you have the beginning of a function. Now you have to learn how to use variables and make arrays and play sound. Use the help function. Lots of examples. 
Do you understand the problem? Can you do it by hand? ..or write some pseudocode? Have you programmed at all or is this your first experience coding? While the syntax may be different to what youre used to the theory is pretty much the same. You'll ultimately need the [plot()](http://www.mathworks.com/help/matlab/ref/plot.html) function; the first example there shows a quick and easy way of how to define a vector, us it as the x-values for a mathematical function, and plot it. Granted for your assignment you'll need to do a bit more work to get your equation coded in the correct manner, but it should be straight forward.
There are many places on the internet that offer the "proper introduction to matlab" that your instructor has neglected to provide. There are several links in the sidebar. I'll also recommend the recorded webinars that can be accessed after making a free account. There are literally hundreds of these on a variety of topics. Here's an [introductory one](http://www.mathworks.com/videos/introduction-to-matlab-81592.html).
Yes. It is possible. http://www.mathworks.com/discovery/matlab-gpu.html You'll need a GPU device that is compatible with CUDA/Matlab and the parallel computing toolbox. Here's a list of compatible devices: https://developer.nvidia.com/cuda-gpus
Thanks, my lab has a computer with the proper GPU but it is shared between 7 of us, so I want to make sure I'm not wasting time on it by having my code ready to run on it
It's not a 3D plot you are looking for. Essentially, you are just plotting a circle. You might try: t=linspace(0,0.1,2*pi) x=cos(t)./2; y=sin(t)./2; plot(x,y, 'o-') If not sure how I got that, consider converting to polar coordinates, but first taking everything to the 1/2. Then divide thru with your radius (was r^2 =4.). 
No these aren't the values I want to plot, but they should be within that matrix. Looking at the values it seems my numbers aren't coming out right to form a waveform, does that mean my equations or calculations are off? Any ideas?
Get real crazy, and start changing transparency with alphaface. 
Can you provide a minimum example of what you're trying to do that gets the error. Will Matlab run at all? What else fails? 
I am not a Windows user, but on my mac and linux machines, I use the `system` command with `mv filename...` or something. I assume there is a similar windows command. I just `sprintf` to generate the command and then call it.
Hmm. Good idea. I now get an error "access is denied" but that gives me a place to start.
Thanks for this, I have been trying to practice ahead of time for an Image Processing lab I'm going to take and was struggling with the basics. This works great.
Did you make the files, and can you access the path you're trying to save to? Seems like it might be an access/permissions issue?
I made some of the files - I first copy a generic version of the model to a temporary location, make some changes to the generic input files, then run the model (creating new files in the process) and copy the entire resultant directory to its final destination which is dynamically named based on what changes were made to the basic model. I'm having decent luck using copyfile; had to change the syntax a bit since its behavior was neither what I expected nor exactly what I believe the documentation is saying it should be, but it works now. It's all a bit mysterious. I'll have to double-check after everything runs to make sure it's really doing what I think it is, but I think it is. 
&gt; it works now. It's all a bit mysterious. I'll have to double-check after everything runs to make sure it's really doing what I think it is, *but I think it is.* my attitude as well
Your question isn't clear. give a couple lines of the text file in full. I don't know what imSWIRTA is--is that the name of your array? Some user-defined function? Whatever it is, it seems to be giving you a vector response. That's why there is only one number when you call pixval(:,:,1). That should return all the of the 2 dimensional data in the first layer of the third dimension.
I agree it's not very clear
Due time just passed. I'll take the incomplete as I couldn't get a waveform, but I won't be able to sleep until I figure this out. Won't even go over the answer in class. Oh well, thanks anyway I guess
Or even crazier and Monte Carlo it: x = 10*rand(1,100000)-5; y = 10*rand(1,100000)-5; f = x.^2 + y.^2 &lt;= 4; plot(x(f), y(f), 'k.'); 
since you haven't posted any code, it's difficult for me to understand exactly what you want. But how about just loading the image with the sub folder included in the path? Im = imread('nameofsubfolder/nameofimage.jpg');
sum?
Exactly. ans = sum(matrix_name) if you want to "count up" (sum) a matrix you can use sum(sum(matrix_name)) to count every value
Sorry, thats not what I meant. I meant how can I tell that there are three 0s, four 1s, etc.
run a loop through all the elements. in the loop use an if statement for each unique element and a count that keeps track of how many times the if statement is true.
Try the help documentation for imread.
This is what hist (which internally uses histc) is for: counts = histc(v,unique(v)); To display: [unique(v);counts] ans = 0 1 3 5 3 4 4 2 
Your first port of call with MATLAB should never be to use a loop, MATLAB is made for vector based computations.
Screw that. sum( Myvector == 4) logical returns 1 for every true, sum those.
this won't work great for large vectors with many unique elements (due to memory constraints) but you could do something like this. A = [0 0 0 1 1 1 1 3 3 3...]; B= unique(A); %or B = [0 1 2 3 4 ...]; eqMat = bsxfun(@eq,A,B); %note that A should be vertical and B horizontal counts = sum(eqMat) the first element in counts will give you the number of 0's, second 1's, etc. This also assumes you're dealing with integers and you don't anticipate roundoff error. 
Thanks for the help. I ended up right a program that will calculate the area a several shapes and will go between several units. I feel like I learned a TON about matlab in the last couple days. Thankyou so much. 
Thanks for the help. I ended up right a program that will calculate the area a several shapes and will go between several units. I feel like I learned a TON about matlab in the last couple days. 
Thanks for the help. I ended up right a program that will calculate the area a several shapes and will go between several units. I feel like I learned a TON about matlab in the last couple days. Thankyou so much. 
Is making fun of the OS someone uses still cool in 2014?
My implementation: x = [0 0 0 1 1 1 1 3 3 3 3 5 5 5] i = 0:9 out = sum(x == i',2)
Agree with the others--some code would be useful. But this should work: addpath(genpath()); % this adds all subdirectories to the path (may or may not be a good idea) x = imfinfo('imagefile.tif'); % generates info on the image file x.width, x.height
This is what I noticed. I may hate Matlab but I know enough that the code itself looks good but the value of Mu and the new initial conditions I've set [5; 1/2] have been giving me weird results. Whats so frustrating is that this is a simple edit off a direct example from Matlab where you take their code and alter it by just a smudge: http://www.mathworks.com/help/matlab/examples/differential-equations.html?prodcode=ML and again it prolly wouldn't have been as frustrating if we were to go over this in class, cause I know my error is by some simple stupid mistake
I second the use of imfinfo(). Also look up the command fullfile() for concatenating path locations and file names.
Did I hurt your feelings? I'm sorry. 
thanks a lot. I know where to look at now
Thanks for the help, but I'm a little confused on the syntax to use. If I fill a vector of N elements with random numbers with and then I sort it into a vector call B, how would I use the hist function on B?
Alright, so I used the following commands x = -2:0.1:2; y = -2:0.1:2; z = -2:0.1:2; u = x./( (x.^2+y.^2+z.^2).^(3./2) ); v = y./( (x.^2+y.^2+z.^2).^(3./2) ); w = z./( (x.^2+y.^2+z.^2).^(3./2) ); figure quiver3(x,y,z,u,v,w) And my result was [this](https://i.imgur.com/EI2657F.png). I am supposed to obtain arrows going out from the origin and decreasing in length as they are further apart from the origin. How can I improve my results?
Unique will sort for you so no need to pre-sort. If your vector is B, then: U = unique(B); Gives you the unique integers and: counts = histc( B, U ); Will give you the counts. Just try it out on some simple examples, e.g. B = [0 0 0 1 1 1 1 3 3 3 3 5 5];
[Check here](http://www.mathworks.com/help/matlab/ref/quiver3.html), browse through the examples and how to use it (specify different features).
Wow. I cannot believe I missed that. Implemented it and it worked perfectly. I should have paid more attention in freshman year. Thanks!
You can't copy the data over to your univ. acct? Or do you/univ. not have individual accts and each access to a univ. comp. starts fresh (ie. can't save data). There certainly should be a way (I'm unfamiliar with) that you can point to URLs and either get whatever's there via reading the html or ftp. That would be my guesses. Google is your friend.
haha no personal accounts unfortunately that can store any data i'll keep looking!
Are you allowed to attach a USB drive? If so (and it's accessible) I would just save all my data to a path on the drive and point to that rather than mess with the web.
Total, 320 observations, but it is broken down into several subsets. We are testing a soap formulation (antimicrobial soap vs plain soap). We tested Lather time ( 4 unique times), Temperature (3 unique Temp), and Volume (3 unique volumes). There were 20 volunteers, each did one hand wash for each unique set of conditions. We did not do a full-factorial design (time and funding restrictions). A set of conditions (lather, water temperature, and product volume) were used as the baseline. For example, when testing the four lather time variables, we would keep temp and volume constant (the baseline). We repeated this for both soap sets. I’m a little restricted with what information I can give out, if I am not clear enough please let me know. (AMS=antimicrobial soap, PS=plain soap) Baseline Condition= Lather time A, Temp A, Volume A Each condition has 20 replicates The data for each condition was normally distributed (used a histogram), and the SEM was good compared to previous studies’. - A=AMS, Baseline - B=AMS, Lather time B, Temp A, Volume A - C= AMS, Lather time C, Temp A, Volume A - D= AMS, Lather time D, Temp A, Volume A - E= AMS, Lather time A, Temp B, Volume A - F= AMS, Lather time A, Temp C, Volume A - H= AMS, Lather time A, Temp A, Volume B - I= AMS, Lather time A, Temp A, Volume C - - J=PS, Baseline - K=PS, Lather time B, Temp A, Volume A - L= PS, Lather time C, Temp A, Volume A - M= PS, Lather time D, Temp A, Volume A - N= PS, Lather time A, Temp B, Volume A - O= PS, Lather time A, Temp C, Volume A - P= PS, Lather time A, Temp A, Volume B - Q= PS, Lather time A, Temp A, Volume C 
If I'm unable to work this, i'll be doing that (I like avoiding that cause I loose USB drives more than any person should)
Could it be that you don't have enough degrees of freedom for the full model? Do the NaNs go away if you remove some of the higher-order interactions?
Right now you're not plotting on a 3D grid of points like I assume you want to be doing. Rather, you're plotting at (-2, -2, -2), (-1.9, -1.9, -1.9), etc., 41 points in total. The [meshgrid](http://www.mathworks.com/help/matlab/ref/meshgrid.html) command is what you need to be using to create your 3D lattice of points at which to plot the value of the function. 
Look at the documentation for regexp -- it can return both the start and end indices in a single call, or you can have it return the matches directly. 
It doesn't look like he knows how to solder either.
I was thinking along the long and cumbersome lines too. /u/phogan1 gave a good answer, it turns out I was being dumb, the regexp documentation shows that regexp can do exactly what I want, but I was looking at a matlab sort of 'general regular expressions' page which I thought was the documentation, but didn't give the full functionality. Thanks for answering!
I don't think it's a stupid mistake. We've all made errors like these I suppose. Besides the most frustrating problems are sometimes solved by very simple solutions... Which frankly makes it even more frustrating. I don't know the type of lecture you have, but even if you don't go over it in class you can always ask the teacher directly at the beginning or end of the lecture right? I know most teachers appreciate that kind of initiative :p
try something like this, it works w/ a txt file... infileFull='https://dl.dropboxusercontent.com/blahblahblah.txt'; tmp=urlread(infileFull); infileFull = 'tmpFileSafeToDelete.txt'; fid = fopen(infileFull, 'wt'); fprintf(fid, '%s\n', tmp); fclose(fid); tmp will hold the char matrix, after that it will write the file out. I am not sure if that is allowed on the local machine. for mat files this seems to work tmp=urlwrite('https://dl.dropboxusercontent.com/u/62711308/test.mat','temp.mat'); once again write permissions may apply.
See the code below, optimize for your units, plotting visualization, etc. **close all; T=[0:0.2:100]; R=1000*exp(-0.04*(T-25)); V=R./(R+1000)*10; plot(T,V,'linewidth',2); hold on; xlabel('Temperature'); ylabel('Voltage'); V2 = abs(V-2); V2i = find(V2 == min(V2)); V4 = abs(V-4); V4i = find(V4 == min(V4)); V6 = abs(V-6); V6i = find(V6 == min(V6)); plot(T(V2i),V(V2i),'ro','markersize',10,'linewidth',3); plot(T(V4i),V(V4i),'go','markersize',10,'linewidth',3); plot(T(V6i),V(V6i),'ko','markersize',10,'linewidth',3); legend('VxT',sprintf('T = %0.2f at 2 V',T(V2i)),sprintf('T = %0.2f at 4 V',T(V4i)),sprintf('T = %0.2f at 6 V',T(V6i)));**
I actually recommend using **interp1**. The reason is that if he needs to find some other value like 2.000123, using **interp1** will work. Here is my modified version of what the previous person posted: close all; T = [0:0.2:100]; R = 1000*exp(-0.04*(T - 25)); V = R./(R + 1000)*10; figure hold on; plot(T,V,'linewidth',2); xlabel('Temperature'); ylabel('Voltage'); V2 = 2; T2 = interp1(V,T,V2); V4 = 4; T4 = interp1(V,T,V4); V6 = 6; T6 = interp1(V,T,V6); plot(T2,V2,'ro','markersize',10,'linewidth',3); plot(T4,V4,'go','markersize',10,'linewidth',3); plot(T6,V6,'ko','markersize',10,'linewidth',3); legend('VxT', sprintf('T = %0.2f at 2 V',T2), sprintf('T = %0.2f at 4 V',T4), sprintf('T = %0.2f at 6 V',T6)); I just made a number of edits to make everything look right
Man, you post is quite confusing. It would help readability if you could put 4 spaces to start your lines of code. As for how functions interact: unless you declare a global variable, the only interactions/knowledge functions have of eachother are through their input and outputs.
So you can't run an embedded function without the parent function having all the inputs required for the embedded function as well?
Yes, everything is matrix based. What do your variables look like now? Just a bunch of 1x3's or 1x1x3?
The post is confusing since it can't run. Every function is independently developed. You can have an output of one function feed another functions inputs, but they need no knowledge of each other's inputs.
Actually, you can do this. Try it and you'll see that it works. Ie: function mainFunction () A =1; disp(subFunction); function D = subFunction () D = A; End End
Use cell2mat. I = imread('board.tif'); data = cell(6,5); for rr = 1:6 for cc = 1:5 data{rr,cc} = I; end end % Convert from a cell array to a matrix. data_m = cell2mat(data);
This is not entirely true. Nested functions can access and modify variables in their parent function's workspace. See: http://www.mathworks.com/help/matlab/matlab_prog/nested-functions.html It is also possible to view and modify a function's workspace using functions such as assignin and evalin. 
Print the result of the expression `(t^-1)*i+1`, you'll see the 6 is not an integer but a floating point number (probably because of some rounding problem). I don't think you need the loop anyway, so vectorise `i` and get rid of it.
Thank you! I didn't think to try that... Learn something new every day!
Debugging 101- print everything.
http://i.imgur.com/o7gHrPJ.png?1 I am extremely new to matlab and am unsure how to format this code correctly 
You guys are both amazing. I really appreciated this as a new matlab user, if I wasn't a broke college kid I'd give you both gold.
Modify your [startup.m](http://www.mathworks.com/help/matlab/ref/startup.html) file or create one if it doesn't exist. The command you'd want to use is [`cd`](http://www.mathworks.com/help/matlab/ref/cd.html).
To slice the datacube for a specific 'pixel', you're looking for p = img(y, x, :); In your example, it would be p = img(75, 104, :); The colon in the 3rd dimension basically says - get everything in that dimension. With regards to your txt file (assuming it's comma delimited), just use pts = csvread('listp.txt'); To store the data in each point using a loop (although this could probably be vectorised), I think you're looking for something along the lines of arr = nan([size(pts,1), size(img,3)]); for ii = 1:size(pts,1) arr(ii,:) = img(pts(ii, 2), pts(ii, 1), :); end 
If you don't mind manually adding new lines, you can simply use "\n" in your string to move the following text to the next line. I'm not sure how to automatically wrap the text.
It is a bit hacky, but you can write a script to automatically add a new line based on either the page width (from `wd = get(0,'CommandWindowSize')`) or based on a fixed size. Alternatively, you can just use `disp` but that will happily break at a word.
Couldn't you write a sub-function with var inputs and output a function handle? 
You don't need to interleave the matrices. "bar" already provides a means of comparing data by drawing side by side bars for each column of data. Try: bar([a b]) See "bar graph of 2-D array" on [the bar documentation page](http://www.mathworks.com/help/matlab-web/matlab/ref/bar.html) for a more in depth example.
I don't see why you need to use a global. Why can't these functions take an avl_input struct and return an updated avl_input? It's tough to guess why the global variable isn't being updated without actually seeing the code. Have you declared the variable as global in each function that uses it? Otherwise there will just be a local variable of the same name in the function workspace that is destroyed when the function returns.
Oh my goodness, thank you!!!! 
&gt; I don't see why you need to use a global. Why can't these functions take an avl_input struct and return an updated avl_input? I tried that initially but it wasn't recognizing the nested structures and that was my rationale for using the global. I though that because it was declared as a global variable, it wouldn't have trouble finding them. &gt; It's tough to guess why the global variable isn't being updated without actually seeing the code. &gt; Have you declared the variable as global in each function that uses it? Otherwise there will just be a local variable of the same name in the function workspace that is destroyed when the function returns. You know what... I don't think I have. You may have just hit the jackpot. Thank you very much! 
Technically this is combinations, not permutations. (Permutations are ordered and here you don't care about order.) You could do something like: a = [7 8 6 9 1 4]; b = nchoosek( a, 4 ); %gets all combinations of the elements in a taken 4 at a time c = sum(b,2); %sums across the rows of b
Wait, sorry, I screwed that up -- didn't read closely enough. What I wrote there will just give you the sums of all 4-element combinations -- I skipped over the bit about wanting pairs that sum to 15. Anyway, `nchoosek` should give you the first thing you need -- all the combinations of your matrix taken 4 at a time. From there, what you'll need to do is loop through the combinations and do `nchoosek` again, taking the 4 items 2 at a time, and sum up THOSE combinations. I will leave that as an exercise to the reader but let me know if you get stuck and I can give more hints.
Something like this could start you off cards = [7 8 6 9 1 4]; pairs = nchoosek(cards, 2); s = sum(pairs , 2); pairs(s==15,:) Obviously, you have to do more based on the other conditions of the game
Generally speaking, Matlab uses copy-on-write; that is, if you assign some value to "a", then assign "b=a", the variable "b" is a reference to a until/unless you change some part of it. I don't recall precisely how it works when changing structures within functions while using write-in-place (i.e., S=myFunction(S)), but I would hope that it effectively passes the structure by reference. That said, it seems very odd that OP can't access the nested structure within the function -- I have some code (though I generally try to avoid this) that passes nested structures between various functions and accesses the nested structs without any problem; I'd almost bet that there was a name or scope issue (passing the nested struct but trying to access it as if it were in the original structure, or field name discrepancies), but it's hard to guess without seeing the code (or at least the error message) OP saw when trying to pass the strict as an arg.
A fun way to demo copy-on-write: A=zeros (10e3); memory B=A; memory B(1)=1; memory If you watch in the workspace gui and have the "bytes" colum set to visible, you'll see that Matlab considers A and B to be the same size as soon as B is set to A; however, the "Memory used by Matlab" doesn't go up much on line 3 but does on line 5. It should be possible to use a similar series of memory checks to test if Matlab is smart about memory usage when writing in place and passing a nested struct to a function to be modified; I'll try to remember to check tomorrow if I get the opportunity. Edit: formating. 
Come on man, at least try to hide the fact that you're asking us to do your homework. 
Thanks for the help. I have stated in my comment that Fs is 51200 and N is 524288, if that was what you were looking for. Removing the spaces didn't work either. I have tested the code a few weeks ago with made-up values and everything worked fine. Now I'm trying to put in my lab results and it doesn't work at all. Could it be possible that I messed up the number types? Investigating my code tells me that Fs is a double and N is a Int32. Probably the cause of my problem? 
Because N is int32, your center term of Fs/N is being performed as integer division. This yields zero since Fs/double(N) is 0.097656250000000. With integer division, this goes to zero. So what you're telling MATLAB is: F = 0:0:4096; This returns [] because your step size is 0.
Did you test them? All three of those array definitions work fine.
I had problems with Unix/Mac using the vi shortcuts by default. I'm a Windows shortcut kinda person...
I don't know if you remember the Octave rep that posted something on here but that dude was definitely cranky. 
I don't have this problem but I switched the defaults to windows style (in linux). 
Let's see if I understand this correctly. Here's basically what you want to do, but your vector "k" changes size: anonfun = @(x,k) ( ((x-k(1)) / (k(end)-k(1))) * ... ((x-k(2)) / (k(end)-k(2))) * ... ((x-k(3)) / (k(end)-k(3))) ) x=6; k=1:4; answer = anonfun(x,k) Here's a way to perform this task on any size k (as long as k has numel&gt;1) without invoking an anon function: ke = k(end) ks = k(1:end-1) xks = x-ks kse = ke - ks xk = xks ./ kse answer = prod(xk') Here's the same thing in a one-liner: answer = prod([(x-k(1:end-1)) ./ (k(end) - k(1:end-1))]')
My guess is that there are a lot of homework help questions where people haven't explained what they've tried thus far. Here are recipes for succes, IMO 1. Put something descriptive in the title. "Reduce vector to elements in the bottom quartile" = Great. "Help with this MATLAB problem" = ***Horrific***. Unforgiveable. 2. State what you did to try and solve the problem. State what you think the problem is. 3. Include code. Format the code so that it displays properly. Super simple stuff.
/u/neurone214 and /u/Whitt83 Do you guys remember getting prompted during install whether you wanted unicode or local encodings? I vaguely remember something like this, and I think I selected unicode. I wonder if that had anything to do with my issue. edit: ok, I figured it out. Previous versions of ML, for whatever reason, allows alt+&lt;anykey&gt; combos. In ML 2014 only the *control* and *command* keys can be used as modifiers for keyboard shortcuts. 
I gave a few good answers and simply couldn't do a google search or read the MATLAB documentation for them anymore.
And you can use `colormap` to change the colors 
If you want to see real down votes try asking questions on stack overflow. Basically down votes are for people who clearly did zero research on their own. 
This is exactly it. I'm kind of sick of seeing homework questions or things easily googled. Simple things like 2 and 3 on this list will get me to spend 5-10 minutes to help. 
I sometimes have applications get into that mode on my mac. It's not just Matlab. Keynote is a big culprit too. Restarting the application seems to solve it, but I'm not sure what the real fix is.
As a general rule, I downvote all "do my homework"-type posts, posts with useless titles (I don't even open them), and anything that can be answered in less than a minute with a cursory look at the documentation. This constitutes a surprisingly high fraction of all new posts on this sub.
See "Changing the Startup Folder Using Shortcut": http://www.mathworks.com/help/matlab/matlab_env/changing-the-startup-folder.html When you create a shortcut for MATLAB in Windows the default "Start in" location is "C:\Program Files\MATLAB\R2014a\bin". This value will override the userpath. If you want the userpath to be your default starting location clear the "Start in" field of the shortcut.
Might be a good place to plug /r/homeworkhelp as well
I don't have it. It was months back. The person wanted to know what octave needed to have for our institutions to adopt it over matlab and took issue (with a shitty attitude) about why the reasons weren't important and to defend why octave didn't have the feature being discussed. It was very unprofessional. 
It's totally to do with the start of semester, with a flood of easy homework questions that would be best addressed by following basic introductory tutorials. Unusual problems, or specific technical questions are much more liked here
I can understand what he was trying to accomplish but the tone of his responses (to /u/Mimshot and myself at least) was very off-putting.
And include the error message. The *whole* error message, with the stack trace. While MATLAB error messages can be cryptic, 95% of the time they tell you exactly what the problem is.
If people here would feel obligated to provide a [minimal, complete, and verifiable](http://stackoverflow.com/help/mcve) problem statement I'd be in heaven.
I have no idea what a Michaelis-Menten reaction is. Are you sure the equations are correct? Is [this](http://ocw.mit.edu/courses/physics/8-591j-systems-biology-fall-2004/readings/l2_syllabus.pdf) what you're trying to do?
I can't agree more. "It gives an error" is not at all helpful. Perhaps also the sidebar should include a link to ["How to debug MATLAB files"](http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#brqxeeu-177).
Yea, that is it. Im sure my equations are correct, I copied them right from the text.
Agreed. He knew it too -- many of his posts are deleted. 
It worked! Thanks both!
Put four spaces before each line (on reddit) to get code formatting. Use a semicolon at the end of any line you don't want to echo to the screen. Use a separate line to display the data you want to see. Edit: words
Seems to me it does not. Watch out for semicolons in your code: anything producing output and not ending in a semicolon will echo on command line, this includes assignments. Your output is simply the echo of 'r' assignment, 'theta' assignment and finally the function output, which as you defined it is 'r' again. Calling the function *exactly* as you've done so far but with an ending semicolon will prevent the "ans=*something*" output.
See, you're kinder than me; I didn't bother trying to parse the code. One thing I note: as written this will only return r, not theta. The first line should read function [r theta] = rtheta(x,y); It'll then return both values.
These links will help: 1. [Running external commands](http://www.mathworks.com/help/matlab/matlab_env/run-external-commands-scripts-and-programs.html) 2. [Dos function](http://www.mathworks.com/help/matlab/ref/dos.html) Once you've got these, call your exe like you would through dos/system. The fixed part of the command will be fixedPart = 'ProgramName InputFile OutputFile '; tolerances = 0:10; Then loop over these tolerances, use num2str() to convert tolerance numbers to string and make your command and use either ! or dos()... commandStr = [fixedPart, num2str(tolerances(counter))]; 
look into the "system" and "dos" commands
This actually helped a lot! Thanks so much.
Assuming you want something [like this](http://i.imgur.com/N1a1oAv.png), I believe if you set the "renderer" to "zbuffer" instead of the default "painters" it will emphasize the [perspective effect](http://i.imgur.com/rfzPJSl.png). Perhaps putting some some artificial data-points behind the camera (that are very wide and tall) will further increase the viewing angle. You can also stretch the outer-position of the figure itself. 
Hi excaza, thanks! This is really close, but the underlying image doesn't show up (http://i.imgur.com/apa0UME.png). I'm going to try combining what you have here with the suggestions from Peter Yu's blog post.
Sorry, I forgot to include `hold`, now it should work.
Can I see what you have so far? On second thought, you could set the [data aspect ratio](http://www.mathworks.com/help/matlab/ref/axes_props.html#DataAspectRatio) to lengthen your z-axis, which I assume would increase the perspective effect: DataAspectRatio [dx dy dz] Relative scaling of data units. Controls the relative scaling of data units in the x, y, and z directions. For example, setting this property to [1 2 1] causes the length of one unit of data in the x-direction to be the same length as two units of data in the y-direction and one unit of data in the z-direction. What do you think?
&gt; See, you're kinder than me; I didn't bother trying to parse the code. Click the "source" button at the bottom of the comment. It will show you the raw input. [Source button and output](http://i.imgur.com/qM3B54B.png)
Hey excaza-I'd updated the original post to show what I ended up doing. Thanks for your help!
Tough to say without seeing your code. The error indicates that you are trying to pass a double to "hpfilter". The input to "hpfilter" should be a timeseries object. See the doc: http://www.mathworks.com/help/econ/hpfilter.html 
This sounds like a homework problem. What have you tried already? These documentation pages should help you get started. [Indexed reference and assignment](http://www.mathworks.com/help/matlab/matlab_oop/indexed-reference-and-assignment.html#br1caxw-1) [Loop control statements](http://www.mathworks.com/help/matlab/matlab_prog/loop-control-statements.html)
New_var1 = function_name(4,1); New_var2 = function_name(8,2); ...and so on "New_var =" is only needed if your function returns a value that you'll need to run later. I hope I understood your question right. Also, I have been out of touch with matlab for 2 years now and have just begun using it again, so I hope I remember correctly!
Matlab has some extra toolboxes that you can buy for extra, but are not required to do the basics. 
Sorry for the bad quality: I'm on my phone, the pic is taken from my lab pc. http://i.imgur.com/bnr2PkI.jpg The graph is obtained with *MeshStyle* set to *row* in order to emphasise the spectra over time. You can see the features in the spectra but overall it's just a mess: especially on particularly noisy data set. Everything would appear clearer if the plot lines were a bit more spaced and offset. &gt;Can I see what you have so far? On second thought, you could set the [data aspect ratio](http://www.mathworks.com/help/matlab/ref/axes_props.html#DataAspectRatio) to lengthen your z-axis, which I assume would increase the perspective effect: I had tried to set the DataAspectRatio already but to no good honestly. What it gives me is a oblong version of the same diagram, however the normal angle between axes remain and the perspective doesn't change much. My last resort would be to actually manipulate data themselves. It's a shame, because it'd be more processing for no real purpose (speaking of data analysis) but you know...sometimes the way you present your result it's what makes the difference for the future of a project ;) Thanks again for your help.
One solution is to save the h1 function together with the f1, f2 functions below it as h1.m and also save the f1, f2 functions seperately. Or you can make the your main script the main function and the rest as nested functions: function main %do stuff function[h]=h1(X,lim) for i=1:lim x1=i; pag(i)=f1(X-x1)+f22(x1); end h=min(pag); end function[f]=f1(x) f=2*x+3*x^2; end function[f]=f2(x) f=4*x+5*x^2; end end See http://www.mathworks.nl/help/matlab/matlab_prog/local-functions.html and http://www.mathworks.nl/help/matlab/matlab_prog/nested-functions.html
Thanks! I'll look into this.
If you want to call them independently from a script or elsewhere, you'll need to put each function in its own file (f1.m, f2.m, h1.m). If the only entity calling f1 and f2 is h1, then you can put f1 and f2 inside h1.m as either subfunctions (apparently now called local functions) or nested functions, as /u/bobinpants said.
FYI there is a blog entry on how to extract the data from an image of a plot [here](http://blogs.mathworks.com/steve/2013/12/31/automating-data-extraction-1/).
It's easy to download a user-written hpfilter. In fact, you can probably just use [this](http://ideas.repec.org/c/dge/qmrbcd/1.html). function [s]=hpfilter(y,w) %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % Author: Ivailo Izvorski, % Department of Economics % Yale University. % izvorski@econ.yale.edu % This code has been used and seems to be free of error. % However, it carries no explicit or implicit guarantee. % % function [s]=hpfilter(y,w) % Hondrick Prescott filter where: % w - smoothing parameter; w=1600 for quarterly data % y - the original series that has to be smoothed % s - the filtered series %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% if size(y,1)&lt;size(y,2) y=y'; end t=size(y,1); a=6*w+1; b=-4*w; c=w; d=[c,b,a]; d=ones(t,1)*d; m=diag(d(:,3))+diag(d(1:t-1,2),1)+diag(d(1:t-1,2),-1); m=m+diag(d(1:t-2,1),2)+diag(d(1:t-2,1),-2); % m(1,1)=1+w; m(1,2)=-2*w; m(2,1)=-2*w; m(2,2)=5*w+1; m(t-1,t-1)=5*w+1; m(t-1,t)=-2*w; m(t,t-1)=-2*w; m(t,t)=1+w; % s=inv(m)*y;
To take each digit out of an integer (assuming your binary number is an integer): out = sprintf('%d', num) - '0'; This produces an array of the digits of num. If your binary number is a string, then you can do: out = num - '0';
Cool thanks. How can I then use it as an index?
Err, you can't use print screen or file -&gt; save as to share the image? One of the things that makes it hard to visualize those data is you have one datapoint that lies well outside the range of the rest. Replot it without that datapoint (or set your y-axis manually) and some of these other techniques might work better.
`int` is part of the symbolic math toolbox. If you [read the documentation](http://www.mathworks.com/help/symbolic/int.html), you'll see that `int` integrates your expression with respect to a symbolic scalar variable. Since you're not doing that, it's throwing the error you are receiving. See MATLAB's documentation for [numeric integration and differentiation](http://www.mathworks.com/help/matlab/numerical-integration-and-differentiation.html). That seems like what you're looking to do.
The people who need to won't read it. It's hard enough to get people to format their posts correctly when there's bolded instructions directly above the submission box.
So I tried both, and Im getting an error saying "undefined operation for given operands. check or define function %c_s_c for overloading"
Is there any way I can make the min and max a variable? I tried using the integral function but it won't let me integrate from 0 to t?
Googling this gave me only results about scilab and not matlab. I don't know anything about scilab and how similar it is to matlab so I can't help you with that. Also you should explain better (with example etc) what exactly you are trying to do, because it is not clear (at least for me).
I am using scilab, but I figured it would be similar enough. Ill keep trying to figure it out. I'm trying to use the integers from 0 to (2^n )-1 as indices for n matrices. To be exact, I need to write a function that produces decoherence in a quantum circuit. This is done by multiplying a density matrix by all possible combinations of a tensor product of n "kraus matrices." There are 2 types of kraus matrices. In other words, counting to (2^n )-1 in binary is the same thing as saying I have n objects that can be one of two things, and I need to arrange n of them in every possible way. 
Sorry I'll try to extract a snapshot. The peak in the graph however is not a problem. It's just a spike of noise. Removing it doesn't change the fact that the plot is still on orthogonal axes: sure the graph looks much better without but it only changes the scale, not the fact that each spectrum line hides the next one too much. I'm working on different approaches, maybe the 3D plot is not the best way to go :)
Depends how many time points you have, if it is several hundred then no perspective will allow you to see them. If the number is a problem you could try every nth or something. I would also retry the previous suggestions, of zbuffer and the axis scales, with the rogue point removed if you haven't already. Their benefits might be hard to see with the scale set so poorly.
 &gt;I would also retry the previous suggestions, of zbuffer and the axis scales, with the rogue point removed if you haven't already. Their benefits might be hard to see with the scale set so poorly. I did already, I forgot to mention that. My bad. As far as feasibility goes, I know for sure it's possible to arrange the data in such a way that the spectral lines only partially hide each other. I can't find a suitable picture, but the Winspec32 software is capable of that and really it all comes down to modifying the z axis orientation wrt to x-y. Thanks for your time though: I reckon my request is kinda weird :) that's why I'm investigating other solutions. 
Thanks. Looks interesting. Bookmarked for another time.
 t = 0:.05:.25 ; q = cumtrapz(t,5*sin(4*pi*t)) ; `cumtrapz` is the cumulative integral using the trapezoidal method Note, having only five `0.05` intervals is probably not good for the integration (around 3% error), so I'd rather do a finer integration using a `t1` with smaller increments and then interpolate to get the values of `q` t = 0:.05:.25 ; t1 = 0:.0025:.25 ; q1 = cumtrapz(t1,5*sin(4*pi*t1)) ; q = interp1(t1,q1,t) ; final note, it is pretty easy to integrate a simple function like this using maths rather than computing. 
What don't you understand about it? There is a description of the function, what it's input/output is, what to save it as, some pseudocode (well commented to add) to get you started, which, judging by a LACK of code here leads me to believe you've yet to try anything.
Sorry, but this forum isn't for homework help. Go to your professor's office hours or go to /r/homeworkhelp. Also, matlab has a pretty decent tutorial/help. In the command line type doc doc or help help. It starts out really basic about what functions are and what they do and don't do. There are plenty of examples. But seriously talk to your professors/TAs that's why you're paying big bucks to go to college. Good luck.
My title is terrible I apologize, I am trying to use a series to approximate the value of cos(pi/4)
put [figure](http://www.mathworks.com/help/matlab/ref/figure.html) before the plot command.
Use figure; before each plot, like so: figure; plot(t,y,'k') figure; plot(t,y,'ko'); figure; plot(t,y,'ko-')
For the love of Hilbert, use some goddamn semicolons. 
In addition to what the others said, and I completely second that (use semicolons and DO NOT use reserved keywords/built-in function for your variables), you should probably also look at the way you expressed the factorial in your series expansion: 2*factorial(i-1) is not equal to factorial(2*(i-1)) Free protip if you intend to keep on using matlab: lose the habit of using "i" as a counter variable. In matlab "i" is the imaginary unit.
Why did ppl downvote this post? EDIT: When I cam across this post, it was at -2.
Your problem statement barely makes sense. See SO's guidance on creating a [minimal, complete, and verifiable example](http://stackoverflow.com/help/mcve) so others will be able to have a clue about what you're trying to do. I think I might have an idea of what you want and it seems like you're vastly over-complicating it. 
I didn't but if I had to guess, it is because this is a beginner question that probably could have been easily figured out with a little bit of Google searching. And it is an obvious solution *to those who use Matlab regularly*. Again, I am not saying anyone is right to downvote it, but that is likely why. Any other rhetorical questions you want answered today?
It wasn't rhetorical. I'm all for homework questions with zero effort being downvoted. This is clearly a beginner's question. Doesn't need to be downvoted.
Also, if you want to put the three graphs in one "figure", you can use subplot: figure; subplot(131); plot(t,y,'k'); subplot(132); plot(t,y,'ko'); subplot(133); plot(t,y,'ko-'); You can also look into using "hold on", if you want the graphs to appear on top of one another in the same plot.
I edited the problem statement to include a sample piece of code. This is about as short a piece of code as I can get. I've heavily commented it for clarity. 
That's kinda what I figured. It's probably not the best way to accomplish the task but this is how I would do it. For the sake of time I'm going to start with pseudocode and expand later if you'd like me too. * Since your directory levels are all their own arrays, just look at the number of fieldnames in the structure to get the number of levels and cut out a big chunk of your code. For example, with your given example structure, `length(fieldnames(userinputs))` returns 3 because you have 3 levels. This is assuming those are the only parts of your `userinputs` structure. If there are other inputs, put the directory structure in its own field (e.g. `userinputs.directories.L1 = blah` and then use `length(fieldnames(userinputs.directories))`) * You can preallocate your main list of paths. You already told me the math and you can get the lengths of each of your level arrays to calculate it. * You have the right idea breaking your functions apart. Make a generic function solely to create folders. Have the input be a parent folder and a list of subfolder names to create (just one level). Check to see if the subfolder exists, if it doesn't, create it. Make the output an array of the full path strings to those subfolders that you can add to your overall list of paths. Call it for one level of directories, then the next, then the next, and so on (basically `for idx = 1:numberoflevels`). This should get you where you need to be without having to use `eval` at all. It's nasty and there's almost always a better alternative.
Thanks for the input. * I like the idea of constraining the user to just putting the directory levels into its own structure within the main input struct as I will have other flags necessary in my code not shown. * I removed the preallocation code but that's common practice for me. * Your third comment jogged something in my memory about possibly a recursive function to generate the directory tree. This morning after posting the code, I had another thought of just writing these loops to an m file and then executing that. That would get around the eval error I've been getting. Thanks for the help. I'm not a beginner coder by any means, but I do get into that trap of not thinking outside the box of what I already know. 
It's worth explaining what this does: As OP wrote the code, MATLAB plots each plot onto the same figure, overwriting the existing plot. So k and ko do get plotted, but are immediately overwritten by the plot of ko-. 'figure' tells MATLAB to create a new figure and to make it the active figure, so the next plot command goes on that new figure and doesn't overwrite the old one. I prefer to define a figure handle in the call: 'figure(1)', 'figure(2)' and so forth. That way of you need to refer back to one later the handles are clearly defined. To plot on the same axes, use 'hold on' after the first plot call (or just 'hold' but that can cause unexpected behavior if you're not careful). Or the subplot routine shown elsewhere in these comments can make things really pretty.
If its working as expected on 1 machine. I would guess the MATLAB automation server is not set up on the others. Google "creating the MATLAB server" for the help page.
Looking at my third comment I'm thinking I like more the idea of generating the tree first and just passing that through a loop of `mkdir`. Poking around the pseudocode I was writing up for my original idea seems to add unnecessary hassle.
I was able to solve this issue recursively using a significantly less complicated function without pre-generating the directory tree and in significantly fewer lines of code. Thanks again for the help.
To add to this, can also plot on the same axis by just using the one plot command. e.g. plot(x1,y1,'relevant things',x2,y2,'more parameters...') can specify colours, type, etc or let matlab choose default different colours for each line.
Try the suggestions in this thread? http://www.mathworks.com/matlabcentral/newsreader/view_thread/336387
Mental note made, thanks. Mac OSX seems to be becoming more and more close ended since 10.4.
Install a GNU/Linux partition (Ubuntu with KDE is pretty nice, I personally prefer OpenSuse though) and install Matlab (it's the same installer as for osx). It'll work flawlessly. 
 putting 4 spaces before lines of code will make your post MUCH more readable 
So how about sharing your solution?
So I googled the command and one of the first links gave me [this](http://mathforum.org/kb/message.jspa?messageID=6090341) - Explained at the bottom
When I get back to my computer I'll edit the post. It's basically a recursive function with arguments being the parent directory and a cell array of the child directories to be created in the parent directory. Its also passed the directory level of the children and the original input data structure. It loops through each child and mkdirs it and then calls itself again using the children cell array for the next level of directories. If it detects that its the bottom level then there is no recursive call.
Thanks, easy fix 
`(0.7698-0.7702)/0.7698 =-5.1962e-04` (it is off of your likely due to rounding). Either way, `5.1962e-04&gt;0.001` but that is not your issue I think the problem is your denominator. It SHOULD be`factorial(2 .* (i-1))` and NOT what you have. Also, if you want to include code in a post, please do so inline but with four spaces like this instead of images. Also, just to play, I did this without loops but you preset how far to go. It is below: clear err = Inf; n = 1:100; x = pi/4; contrib_at_n = (-1).^(n+1) .* x.^(2 .* (n-1)) ./ factorial(2 .* (n-1)); cos_apprx = cumsum(contrib_at_n); rel_err = [Inf abs( ... (cos_apprx(2:end) - cos_apprx(1:end-1))./cos_apprx(2:end)) ]; % Make the first one infinity iter_cut = find(rel_err&lt;1e-3); iter_cut = iter_cut(1); 
Not really sure what you're trying to accomplish but if you need to save everything in a mat file, my choice would be to use a structure with varnames as fields and then save it after the loop.
Thank you, that will work! ;)
The workaround I'm currently using is writing if (i-j&gt;=0)&amp;&amp;(i-j&lt;lim1+step^2) where step is the increment of *i* and *j* (always &lt;0), but that doesn't look very nice.
Use the absolute difference with a threshold like /r/fishsticks40 suggests. Much more elegant.
Thanks! Ashamed I didn't think of this myself. This is really neat.
Indeed it is, thanks.
Use cell arrays instead. http://matlab.wikia.com/wiki/FAQ#How_can_I_create_variables_A1.2C_A2.2C....2CA10_in_a_loop.3F
[What Every Programmer Should Know About Floating-Point Arithmetic](http://floating-point-gui.de/)
To scale the inequality correctly, you might want to use the eps function -- eps(b) returns the difference between b and the next possible floating point number. If performance is a concern, keep in mind that both eps and the inequality can be vectorized. As a side note: if you're reading in data generated by another function, eps may not be appropriate -- either check the other program to see what precision is output, or determine how much slop you can tolerate (I've run into programs that only output a certain number of decimal places, regardless of allowable floating point precision or sigfigs). 
Yeah, I guess I figured you could dynamically scale threshold on the line before, but I should have said that. Point being that you can choose the level of precision, whether fixed or dynamic.
Thanks! It can also work!
Upvote for reporting the solution!
What do you mean by "resize"?
Right now, I have a window that only shows one of the data points, but there are more outside the range of the window that pops up just from my loglog(x, y, '-s')
Have a look at [axis()](http://www.mathworks.com/help/matlab/ref/axis.html)
try help with xlim or ylim e.g. **help xlim**
Which line is line 21?
This does sound like a homework problem, but the *right* way to do it is with `bsxfun`. I recommend you do a `help bsxfun`. Also: &gt;&gt; bsxfun(@plus, 1:4, [2 3 5]') ans = 3 4 5 6 4 5 6 7 6 7 8 9 
rhof = U*rho2*(U')
Basic question: Are any of your x- or y-values zero or negative? If so, that could be your issue (can't take the log of a nonpositive number).
This? rhof = U*rho2*(U') Use 4 blank spaces at the beginning of a line to format correctly. That's very odd behavior. It's possible you've got some scope shadowing going on. Can you set a breakpoint on that line and see what `rho2` is set to?
Yes that's right. Sorry about the formatting. I'll try that when I get out of class. 
WARNING: Pedantic and likely unhelpful response to follow (hey, it *is* the Internet after all) &gt;can't take the log of a nonpositive number You *can* take a log of a non-positive number, but it is imaginary and won’t be plotted. See, wasn't that super helpful? ... I'll show myself out now
Good point about scailing. Another option is to also use eps(max(abs([a(:);b(:)]))) which will essentially give you machine precision values. This whole issue is a very real one and also a PITA. Since so much in matlab is about using built-in functions and vector operations, I have had lots of precision issues. (for example `unique` doubles).
So i tried that, and its giving me the same error 
What do you mean it's giving you the same error? The break point should stop execution *before* the error, so you can inspect the contents of `rho2`.
So I assume that your matrix pixswir correctly contains the z-values belonging to your x and y coordinates and that you want to split it up in 2 matrices, where the first 124 z-values go in one matrix and the rest in the other, correct? To do this you can simply use pixVnir=pixwir(130:end,:); pixwir=pixwir(1:124,:); This way of using indexing could probably also be used in your provided script so you don't need the for-loop: pixswir = img(VarName2(1:12),VarName1(1:12),:); But that's assuming that I understood your problem correctly.
"as you can see there is clearly a second order polynomail fit of the data for each temperature as a function of logs and X" eh? it's not that clear to me... It's hard to judge by eye if it's a 2nd order polynomial or not. As far as least square fitting concerns: To do this you need to know the function you want to fit. When you know this function you can probably use a least square fit on it. So: do you know what process this graph is describing? And do you know how it should behave in an ideal situation?
That's why I think scilab is just installed incorrectly. I ended up commenting every instance of rho2 and it still returned the same error haha. I'm getting student authentication for matlab soon and the guy I do research for knows that so im not too worried about it. Thanks though
Sorry I didnt comment back earlier. Im not supposed to us the filters we are supposed to find a way to do it without one. Thanks for the help. I posted my code here http://www.reddit.com/r/matlab/comments/2gii5d/hodrick_prescott_growth/ 
We get that - it's just MILES easier to read once formated correctly - 4 spaces to start all lines makes it pretty like that. In the MATLAB editor, you can even highlight all your script, press tab once (inserting 4 spaces everywhere), copy, shift+tab to undo your last tab, and your back at square one! Not trying to be critical here, to you, but I know myself and many others here will just breeze past a post that has jumbled code like your OP - If you (not you personally, but any OP) want help, help *us* out with good readability and you'll likely get a lot more help, more helpful help, and likely quicker help. ... I'll take a look through your OP and the formated code, hopefully I can understand the problem and provide some help.
Do you have an image of your current (incorrect you say) plot and one of what you are expecting? Or an example of what you're expecting? I'm not familiar with HP growth and what you're expecting.
My first guess is that your plot command is only plotting a single (or three single) points at a time. Even through you've got the hold on command, I don't think the command has any knowledge of any other points (i.e. the prior point plotted) that it can connect to. How I would go forward: to get around this, save your plotting until the very end. Make k, q, qi, and qo vectors - that way you've got 2+ points which a line can be drawn inbetween. Alternatively, there may be a way to continue how you've got it using a "draw" command (something or other). Or perhaps save the k-1^th point each iteration so that you've got two points to plot each plot() command in your loop so that you have end points to draw your line. Edit: Also, why do you have code like: plot(), ... xlabel(), ... ylabel(), ... That may be throwing a hitch as well, none of those commands need to be suppressed, and even if you want to for the sake of doing so, comma isn't going to do it, use semi-colon. Those can all be separate commands: plot([0:0.1:10],([0:0.1:10])^2,'-*r') xlabel('x-values 0 to 10, dx=0.1') ylabel('y=x^2') is going to make a red lined plot of y=x^2 with stars at your x-values (0, 0.1, 0.2, ...) with nothing showing in the command window. BUT.... the bottom line, I think it's because you're only having a singular point plot each time - you don't have two endpoints to make a line between.
[This] (http://3.bp.blogspot.com/_0B5jYI_TxmQ/TO2rxuTB2dI/AAAAAAAAARk/vozl71IlOT8/s1600/Hodrick-Prescott+Filtered+U.S.+GDP+and+GDP+1947Q1+to+2010Q3.jpg) is what its supposed to look like,and [this](http://imgur.com/wJPUsN1) is what mine looks like
Sorry - I don't have much more to offer other than to say "go back and make sure you understand the theorem correctly and that you've coded it correctly". I don't know HP growth, nor am I an economist. You aren't getting runtime errors, which means everything works fine and you aren't breaking any MATLAB rules, just everything isn't what you want/expect (as reflected by your two plots). Good luck!
MATLAB has pretty good documentation and examples. It almost makes up for poor or missing instruction. The [for loop](http://www.mathworks.com/help/matlab/ref/for.html) documentation page has a couple examples of indexed assignment that you will need to create the vectors. 
It's been awhile since I've thought about coding up an HP filter but [this code](http://dge.repec.org/codes/izvorski/hpfilter.m) to me looks more on the money (I think as others have said that this is an economics problem not a matlab one and your code looks close but not quite the same as this). Perhaps run that function on your data and see if you get better results and then figure out what you're missing.
heres a better version with the polynomial fits: http://i.imgur.com/1HKBBYh.png you could argue that fig 1 should have been a cubic fit (3rd order) as i did, but the simpler function the better. as for your second point, thats just the problem. There is no function that relates all three, thats what im attempting to create. evidently the 4 polynomial fits displayed are functions of T, with a large effect at 0 wt% Co2, approaching 0 effect at higher values of T. i just cant figure out how to adjust the polynomials to accout for that effect. ie for difference of dT between 2 polynomials, there is a shift of d(Logs) which is inversely proportional to CO2 wt% (also i should have written that X is sometimes used as the the notation for CO2 wt%)
&gt;Ultimately though, I'm still getting the dots instead of the lines Did you read through my first reply? You are still just plotting a singular point (multiple singular points) with each of your plot() commands... You need to plot AT LEAST two points for a line to be formed. That's not MATLAB, that's geometry. /u/Pugnare above provided the [MATLAB docu on for loops](http://www.mathworks.com/help/matlab/ref/for.html), [here's more examples as well](http://www.cyclismo.org/tutorial/matlab/control.html). Seem's like you need to go to class, pay attention, do your HW ... basically *engage* in your course. For-loops and plotting are VERY basic things and are a part of EVERY intro MATLAB course. /r/matlab is here to help, of course, but we operate under the "teach a man to fish" philosophy - we're not going to jump right to the answer, and that's why I've tiptoed around it here.
Plotting mid-script can also be crazy slow. It's always a good idea to save it until the end. 
You're ultimately going to need to manually specify either your variable names or the strings you want. [Here](http://www.mathworks.com/help/matlab/ref/genvarname.html) is a way to generate variable names from strings. I've never tried this but it seems straight forward enough.
excuse my ignorance but do you mean that if i assign a name to a variable i would still need to write the name of it in the legend code? if that is there's not point in not just writing the name manually is there?
Ah ok, that changes the matters a bit. Finding out a function corresponding to a bunch of points is often a lot more difficult than finding the coefficients of a known function. I don't know if you have the curve fitting toolbox but you could try that out (type: cftool in the console the rest should be easy enough to understand). cftool includes different types of polynomials that you can fit (also 3d ones) as well as a bunch of other functions. If you don't have the curve fitting toolbox you'd have to write your own curve fitting stuff with the least square fit as mentioned. I can write a short example code using that later in the day (have to go to work now :) ). 
of course but can't say I get most of it
Sorry for being a bit rude - I wasn't able to sleep much last night. It appears to me that this is along the lines of what you're asking for: x = 0:(pi/16):(4*pi); y = cos(x); plot(x,y); legend('y') %where you get that name from the variable name itself? Obviously your application must be more complex than this, as the above would be much easier/quicker to code than trying to convert y (the variable) to 'y' (the string). Here's another example, lets say you want contourf plots of a surface temperature field for 12 months of the year. You can try something like: tempdata = %input temp data, it will be a nlon x nlat x 12 matrix plottitles = {'January','Feburary','March'....'December'}; for imo = 1:12 subplot(3,4,imo) contourf(tempdata(:,:,imo)) title(['Temperature field for ' plottitles{imo}]) end Granted, that's not a simple line plot nor is it using the legend command as you're wanting. But can you see the similarity to how you might use something similar for your application?
No problem. I'm very new to matlab and just using code my supervisor wrote. The whole coding thing is definitely out of my comfort zone, but i'm sure i can get reasonably good at this. Having said that to be honest i do not get the similarity, I will ask my supervisor to explain stuff i think i need someone to explain in person but thanks for trying!
For starters you're trying to plot 3001 x-values but only one y-value..
*facedesk Thank you! I meant to plot the 4th row. Now it works!
Can you translate it for an ignorant American?
Google translate yields: &gt;the system can not find the path specified for a translation for that error message from Dutch. Check the paths involved are actually there if they need to be, or that you have the relevant permissions.
Is the embedded matlab function in the path? Are all the parts of it correct? Add it to a standalone m-file and see what errors you get. I bet there is a function that isn't in the path.
Hi, thanks for the feedback. I should have included this code in example above. I have used this format with the same result however: d=fread(fid,[100,32],'1600*bit24=&gt;int32',24); Also, I think that it is implicit that the data will be read into doubles if the output is not defined.
Okay so as a short example on how to use the least square method in Matlab: Lets say we have some datapoints x and y and corresponding z: x=rand(500,1); y=rand(500,1); a=5;b=2;c=-2; z=a+b*x+c*y+rand(500,1); %in your case you do not know this function but we need some data for the example to work. now we'd like to fit some 3d polynomial to these datapoints for sake of simplicity we'll do a 1st degree polynomial so: D+E*x+F*y=z Our goal is to find the coëfficients D,E and F. To do this we first rewrite the polynomial in matrix/vector form (Ax=B) where D, E and F are our unknowns: [1,x,y]*[D;E;F]=z or written in a different way: A*x=B; where: A=[1,x,y]; x=[D;E;F]; B=z; We can find our unknown vector x with the least square function of matlab as described in the documentation. So your final function will be: % generate dataset x=(rand(500,1)-0.5)*5; y=(rand(500,1)-0.5)*5; a=5;b=2;c=-2; z=(a+b*x+c*y).*(1+rand(500,1)*0.1); % prepare data for 1st degree polynomial least square fit A=[ones(size(x(:))),x(:),y(:)]; B=z(:); % perform least square fit; X=A\B; %show data [Xcoord,Ycoord]=meshgrid([-5:5],[-5:5]); %x and y coordinates Z=X(1)+X(2)*Xcoord+X(3)*Ycoord; %get z coordinates using your freshly calculated coëfficients! hold on; plot3(x,y,z,'.'); %your dataset surf(Xcoord,Ycoord,Z); % your 3d fit X is now a vector of size [3,1] corresponding to the coëfficients that ensure a least squares fit with our dataset. You can expand this to fit any n'th degree polynomial. Let me know if something is not clear!
Based on /u/el_matt's translation I googled and found this, which might be relevant: http://www.mathworks.com/matlabcentral/answers/98850-why-do-i-get-a-system-path-error-when-simulating-a-model-with-embedded-matlab-blocks-in-simulink-6-5
As a Dutch person I can confirm that your translation is correct :). 
Ah, I was mis-interpreting the documentation as saying precision types of 'bitN' are interpreted as doubles instead of just stored in doubles (but interpreted as n-bit integers).
&gt;Is there a way I can do this by setting some sort of tolerance? That is the *exact* method to use here. Unless your numbers are integers, it's very unlikely you'll find exact matches.
Assuming the vectors are not ridiculously large, I would just use a brute force method: loop through vector 1; for each element of vector 1 go through each element of vector 2 and check what the absolute difference is against some tolerance; store value if absolute difference is less than the tolerance. You may want to use a more efficient algorithm for larger vectors. 
 a = rand(1e3,1); % input data b = rand(2e3,1); tol = 0.001; % find nearest match within this tolerance dist_mat = pdist2(a,b); % requires statistics toolbox % dist_mat = abs(bsxfun(@minus,a.',b)) % if you don't have it. [min_dist , idx ] = min( dist_mat ); matches_in_a = a( idx( min_dist &lt; tol ) ); unique_matches_in_a = unique(matches_in_a);
Good answer, but probably cleaner to build all your logic into an anonymous function. f = @(x,y) abs(x-y)&lt;tol; matches = a(bsxfun(f, a, b)); 
&gt;Good answer, but probably cleaner to build all your logic into an anonymous function. &gt; f = @(x,y) abs(x-y)&lt;tol; &gt; matches = a(bsxfun(f, a, b)); Anonymous functions can make the code look cleaner, but you have to be careful when using them, especially with bsxfun. The anonymous function above is actually equivalent to: a( abs(a-b) &lt; tol). Scalar expansion is not performed because both vectors are column vectors. This function call will also error out if both vectors are not of the same length. Taking the transpose of "a" will result in the intended scalar expansion... matches = a(bsxfun(f, a.', b)); however it will the fail with an index exceeds matrix dimensions error. The resulting logical matrix produced by bsxfun is larger than the array "a" that it is attempting to index into. Additionally, this bsxfun call will return a logical matrix indicating all "a","b" pairs are within specified tolerance, not the nearest pairs that are within tolerance. 
good lord, I'm doing basically this exact assignment. Estimate ln(x) using Taylor series to within a tolerance specified by the user....Oh, and I cant make it work either.
And [polyval()](http://www.mathworks.com/help/matlab/ref/polyval.html) will accept the coefficents just found along with an x-vector, and evaluate the polynomial for y-values at those x-values.
I agree. This is a matlab bug. I have a query into Mathworks now and they are taking some time to respond to it. 
Interestingly, I have used this same syntax on other files with much larger repetition factors (&gt;6000) that have worked out ok. 
interesting i'll try this out, cannot really change the whole structure of the code since it is not mine. but thanks
There is probably a better way than this, but a quick solution is: If the first part of the file name is the same for all files and the date is always in the same place, loop through all of the file names and extract the dates into a new cell array. Then use strcmp or strfind on the new array to search for the desired date. 
You can't treat cell arrays this way. Each cell is an independent array, and not necessarily the same type, so you can't use the colon operator in this way. Can you build fnmYYYY and fnmMM while you do the looping before?
Use [cellfun](http://www.mathworks.com/help/matlab/ref/cellfun.html): fnmYYY = cellfun(@(x) x(7:10), fname, 'UniformOutput', false); fnmMM = cellfun(@(x) x(11:12), fname, 'UniformOutput', false); edit: lol, go ahead and downvote a functioning reply, gf
You can't have a {:}(7:10) operation on a cell array. Try using cellfun instead. Also, in case you're not doing this already, remove "." and ".." from flist after calling dir. 
&gt; Also, in case you're not doing this already, remove "." and ".." from flist after calling dir. They're not present if you're searching for filenames.
&gt; cannot really change the whole structure of the code since it is not mine Sure you can. You're not changing how it functions and you're creating a more efficient way to accomplish your task. If you're really super concerned about it, [`save`](http://www.mathworks.com/help/matlab/ref/save.html) the workspace and [`load`](http://www.mathworks.com/help/matlab/ref/load.html) it into your own function.
Not sure who downvoted you but this is exactly what I was looking for. Thank you. *Edit: Maybe this isn't what others had thought I had intended (extract them into a N x 4 YYYY string array and N X 2 MM string array), but it does exactly what I needed: to separate out the YYYY and MM. They are cell arrays of strings. Works just fine for this application, thanks again.
Thanks for the help; But im still not sure how to put it all in a table
if you want them on the same plot, just put this command at the top of your code. hold on 
That's what the square brackets he mentioned near the end do.
I can't as the loop over files for input is going in chronological order of which the listing of files from the dir() call are not necessarily in chronological order.
can you try explaining to me what num2ster is for?
It converts a number to a string (datatype that can include letters). In the case of the previous example, he was using the disp command to display the combined table and wanted everything to be a string.
I get that. I acknowledge that this is a way, and it's also one that I can code up. That doesn't answer the question, which was my OP, about getting the YYYYMM *without* using a loop, no matter how small the temporal cost. *Edit: sorry, I come off a bit harsh towards you. No malice meant.
Could you comment further on how useful it is a scientist? I don't really know the scope of matlab uses
Try typing &gt;help num2str at the command line, or opening the help documents. One of the benefits of MATLAB is the large amount of documentation.
There's a table() command that would probably be better than formatting it yourself
To be fair, though it's certainly cleaner, `cellfun` in many cases is *much* slower than a simple loop. This can have a lot to do with MATLAB's compiler and will likely improve over time but it's still worth considering if you're looking at improving code efficiency. I haven't tested it for this specific problem. http://stackoverflow.com/questions/12522888/arrayfun-can-be-significantly-slower-than-an-explicit-loop-in-matlab-why http://stackoverflow.com/questions/18284027/cellfun-versus-simple-matlab-loop-performance
While I love Matlab, it seems every institution has a different preference to scientific languages. I would look into institutions that you're interested in working with in the future, and see what they are currently using.
Fair enough, thanks for the heads up. I'll do some testing..
Oh thank god, it works! How would i go about plotting the second interval at the same time?
Whoops, totally forgot to ask, sorry. 1) What should the ode45 function should be? (Is it just a matter of plugging those variables into the equations?) 2) Also, because there is two differential equations, do I need two functions or can I combine them into one function?
&gt; What should the ode45 function should be? I don't understand this question 
The function should be: function dx=func1(t,x, A, B, C, D, E, F, G, H, I, J, K) c=?; dx=zeros(2,1); dx(1) = (dp/dt); dx(2) = (dq/dt); end
Thanks! This worked perfectly.
Matlab has a lot of built in functions for common data analysis methods and numerical techniques etc. that many general programming languages don't have, and also has truly excellent documentation. The way it handles matrices is *very* useful for mathematicians and engineers because matrix operations very frequently come up in the theory
Can you edit your OP and put 4 spaces before lines that may have formulas/code in them, it will help format it nicely and improve readibility To start with, though, you can't name a variable with a " ' " character, so naming things like: f'(4) = .... doesn't work, nor does it evaluate the function at x = 4; it assigns some value (from the RHS) to the 4th index in your vector/matrix (but, again, f' isn't a valid name).
Am I correct, you want a 1 x 24 vector of the average wind speed at that hour during the day, and you've got 365 days worth of 1x24 wind speeds? Also, just fyi, your last two lines are redundant and can be made as one.
That 1x24 vector contains the avg wind speeds of each hour during that day, and I would like to have 365 days worth of these vectors consolidated into one vector...I'll note though that the length of my text doc is only 50454 rows, so i'm not sure what's going on there...
How about for someone who is neither a mathematician nor an engineer? My math level is average, would matlab still be worth it? 
Our current systems use matlab (operated by our technicians). The graduate students are not obliged to learn the language, only to operate the machine. I was wondering if I should just learn the language altogether.
I'd have to see the actual code to see where it is happening. First of all, for future problem solving you can type "dbstop error" and the debugger will stop at the error, but likely won't help in this case. This works for me: x = -15:0.1:15; y = sin(x) + cos(x.*2); figure plot(x, y) To me it sounds like you are adding something on the line that shouldn't be there, or you have something up further in a script that isn't a complete statement. Like a missing paren, comment, etc.
also get in the habit of putting periods before all multiplication and division symbols. It's not always necessary, but if you don't have it when you need it, the code won't run. for example f(x)=(cos(x).*sin(x))./3 also it looks like you might be missing other operators like ^ for show something to the power of something else. Although you might have placed those in there and they cause an automatic raising 
Well it really depends on what you are doing. If you are working with matrix operations, or methods like numerical optimisation, statistical analysis, or data visualisation, then sure. Otherwise it probably wouldn't be my first choice. 
umeanhr_set will be a 24x1 vector and anytime the inner loop is run the old values will be overwritten with the new values. I doubt this is the way you want it. What you could do is to create a 24x365 vector at the beginning and store a value for each hour of each day in this vector. Your code should look now like this: uhr_vec=zeros(24,365); ii=0; for i=1:12 mn=find(mnthex==month(i)); wndmn=wndspd80(mn); daymn=dayex(mn); hourmn=hourex(mn); minmn=minex(mn); for j=1:max(daymn) dy=find(daymn==j); wnddy=wndmn(dy); daydy=daymn(dy); hourdy=hourmn(dy); mindy=minmn(dy); ii=ii+1; for k=1:max(hourdy) hr=find(hourdy==k); wndhr=wnddy(hr); dayhr=daydy(hr); hourhr=hourdy(hr); minhr=mindy(hr); umeanhr=sum(wndhr/length(wndhr)); uhr_vec(k,ii)=umeanhr; end end end 
You can see from his code that he is effectively trying to square the x vector (which he can't because dimensions) when he means to be doing an elementwise operation (I.e, the .*)
Do you have image proc. toolbox? Check out nlfilter and colfilt. There may also be some entropy functionality in there. But at least ditch the double for loop. Very inefficient.
I don't know much about image processing but I don't think you have to crop every image. You can just provide the corresponding pixel values like this: Ent(j,i)=EntropyFunction(img([i-2:i+2],[j-2:j+2])). I don't know what entropy means for images and without the code of EntropyFunction I can't tell you how efficient that is. There is also a command entropy built in in matlab, maybe you can try that. You could probably try getting rid of the inner loops, can't think of a way myself though. Also run profile viewer to see which commands use the most processing time. 
http://www.mathworks.com/help/images/ref/entropyfilt.html?refresh=true Also, my preference is always odd neighborhood sizes because I like well defined centers, but that's just me.
Before you start thinking about the differentiation it might be better for you to get an idea how matlab works. If I asked you to plot the given function on an interval 0 to 2pi using the various spacings you have been given, could you do it? Hint: you can generate a x vector with interval 0.1 by using x=0:0.1:2pi It's easier to steer you in the right direction if we know how much matlab you already know.
Thank you so much, I cannot believe I didn't find this. That has taken it down from 10 mins to 2.5 secs and got rid of the nasty double loops. I can now run the code in a reasonable and actually start generating data.
Compiled? Looks just like a listing of your assignment. What have you tried so far? 4 spaces before lines formats code nice so we can read it Do you get any errors? What are they? 
Use an ode solver, first choice should be ode45. See the examples of the end of the page: http://www.mathworks.nl/help/matlab/ref/ode45.html It should be pretty straightforward. More info on solving odes: http://www.mathworks.nl/help/matlab/math/ordinary-differential-equations.html
&gt; i dont get the 'game' part of it, is this an assignment? from the sound of it and "account is 47min old", i would say yep
Well showing us your model, especially the switch part would help... Normally an algebraic loop means that you are using an output of a block and at the same time you use that output also as an input for the same block. This can be typically solved by a memory block. But like I said show us your model first. 
Try it, see what happens.
Thanks for your reply. The global model is shown below. http://imgur.com/ejEPygL Of which the subsystem 'Plunjer + seal' is shown below. http://imgur.com/pxd0CPw Of which the subsystem 'Veerabsorptie' is shown below. http://imgur.com/P60vHGi As you can see, you are right in saying that the output is eventually used as an input, as the global model contains a negative feedback loop.
I knew there had to be a better way!
sounds about right, now you only need to build an assignment from that, throw it into a loop and you are golden. Don't forget to check for empty fields.
Yup, put a memory block after the gain A in your feedback loop. This will fix the algebraic loop. If your model is discrete, this will mean that the Ft signal is delayed one sample (Δt). You basically use the output at the previous time step, which is known, so there is no need for simulink to try to solve the feedback loop algebraically. If your system is continuous then this delay will be depend on the model (or you can specify this delay yourself (not recommended)).
haha cool. gl with your meeting.
Hi man it worked but now my results are messed up :p
make the maximum time step size very small. This can be done in the configuration paramters window (gear icon).
Since csvread only wants numeric values, I think you're better off reading line by line and tokenizing the data. Search for messages like LOG START and LOG STOP to indicate when to start adding data to a vector. I've made a reader that uses a number of builtin functions like **dlmread** (which **csvread** uses) and **fgetl** or **importdata** but alas, that's now proprietary. I'll write something really quick to show you how to do this.
I took a maximum step size of 0.000001 but the results are still as messed up :p FUCKING MATLAB
Well, then your system may become unstable (if that's u mean with messed up results). Try reducing the gain A. Also you can upload the model somewhere, so i can take a look at it.
Thanks for the help! I actually remembered how to store the values without overwriting after banging my head against the desk for another hour, but your assistance is greatly appreciated!
So... what's your question, did you have an error message?
You may want to play around with different solvers. Go to the configuration parameters of your model (Ctrl-E) and switch to a stiff variable-step solver like `ode15s` or `ode23t`. These sometimes help if you're finding that you have to really crank down the maximum step size in order to simulate your model.
Also, are you sure you implemented the switch the right way? The way it works is that initially the third input (ramp in your model) to it is passed until the second input (ramp2 in your model) is larger than a certain value you provide, then the first input is passed (Fr in your model). So what is 'ramp' and 'ramp2' supposed to be, are those the y=5.2x and y=2x of your original post, because this would be wrong. I'd say the second input should be the time (clock block). Also with the way it is now, it will switch to the signal Fr which is Fr=Fa-Ft which depends on the output. So to me that doesn't make sense if you say that the input switches to 5.2x. Also what is the Fa ramp then?
Thank you, you lost me at tokenizing the data. 
Yeah the "Temp" variable does not work in this case. Error saying that it "may" be changing within the loop. It is, but it's supposed to. That's why it's a temporary variable... Once again, this exact same operation works perfectly when only filling out a class 2 array.
Sorry about that. Im using it as a way to efficiently come up with and store the possible combinations of n matrices where each matrix can be 1 of 3 matrices. Then I want to kronecker them all together. So not only do I have to count in ternary and have each digit be n digits long, but I then have to extract each digit and use it to reference an index of a cell array. Thanks for the advice though. 
try octave
3 Apple Hill Drive, Natick, MA, but you'll need to get a job there first.
Or SciLab.
&gt;the exponential coefficient values are showing up as NaN Correct, three things can lead to this: division by zero, using a missing value (NaN) as the input to a function (sin()), or using missing values to calculate your fit (can also fall under the last thing). From your phrasing, it seems you were able to get the linear fit to work? If it came to it you could transform your exponential fit to a linear fit in log-space by taking the logarithm, finding the coefficents for the linear fit, and then transform them back to exponential.
This is a pretty vague statement, and almost seems like "debug this for me". Do you have any more specifics as to what you think is wrong? Any errors? What are you expecting?
So you want an N x 3 matrix of ### numbers, 3 for certain, that may look like "001", which MATLAB would store as "1" ? So one row of your matrix may look like: 001 010 011 and you want those padded 0s? Maybe try using a cell array to make the N x 3 entries of your ternary, each entry is a 1 x 3 matrix where the entries are either 1s or 0s and together form your ternary entry. One drawback is it seems this method may be more cumbersome than needed, but it's what I've got for now.
that's exactly what I've done in my code. I've done a natural log on the y values then plotted it again a "new x values" set to get a linear plot. Then used the correlation coefficient function inbuilt to get the A and B values. Yet I still get a NaN output.
So what I do to get my linear fits is use [polyfit()](http://www.mathworks.com/help/matlab/ref/polyfit.html) and [polyval()](http://www.mathworks.com/help/matlab/ref/polyval.html). polyfit() takes x- and y- values and a degree as input, so: linecoef = polyfit(xvect,yvect,1); makes the coefficients (I believe in decending order in the polynomial). If that's all you want, you've got a and b in: y = a + b*x = linecoef(2) + linecoef(1)*x and can convert back to exponential space. **BUT** this only works when you've got real-valued ordered pairs; i.e. if you've got an x-value (say you've got a time series, so at some time interval you take an observation) but a y-value of NaN (your instrument failed and the observation at that time was filled with Not-a-Number), the coefficents that polyfit() returns will both be NaN, as would their conversions to exponential space. What I do is *check* for those NaNs first and only pass good data to polyfit(): good = ~isnan(yvect); coefs = polyfit(xvect(good),yvect(good),1); In the above, good is a vector same size as yvect that contains 1s where yvals are real and 0s where they are NaN. Finally, polyval() will evaluate an n-order polynomial at given x-values for n-coefficents with: yintp = polyval(coef,xintp);
You could create the indices directly. Something like this might work: n = 4; indexMat = zeros(3^n , n); indexMat(:,1) = [ones(3^(n-1),1);2*ones(3^(n-1),1);3*ones(3^(n-1),1)]; for c = 2 : n indexMat(:,c) = repmat( indexMat(1:3^(c-1):end,1) , 3^(c-1) , 1); end C = {'a','b','c'} D = C( indexMat )
Depending on what you're doing in the field of NMR, [Spinach](http://spindynamics.org/Spinach.php) may be of interest.
WOW, holy shit thanks a bunch. This is alot of work, I appreciate you taking the time to write this. I'll try it out soon, and get back to you. 
Unfortunately, I can't really help you beyond what you already know. I can say that I regularly compile matlab code for running on a cluster computing system, and it's pretty easy. Perhaps this [tutorial](http://www.mathworks.com/help/javabuilder/examples/) will help. Do you mind if I ask where you're doing your PhD? I did my MASc (bio med) at McMaster in Canada some years ago, where I did a great deal with Matlab and image analysis (a few programs, including ImageJ). I wish you all the best!!
There are many ways and it really comes down to what your signal looks like and what you need to do afterwards and so on. Here are some ideas to get you started: - moving averages mitigates the noise at the expense of local values; - thresholding the signal will get you a high low waveform from which you can extract info like rise/fall times, frequency, duty ratio and so on (basically anything you can calculate without the actual signal value); - filtering the signal with a narrow band filter centered around your fundamental harmonic will cut off the outband noise - take more samples/acquisition of the same event and average them together to improve the SNR Those are commonly used noise rejection methods we implemented. But I'm sure you can find more.
thanks - that is interesting! while looking around, I saw that Matlab offers a signal processing toolbox, which seems to take the threshold approach: http://www.mathworks.de/de/help/daq/examples/acquire-and-analyze-noisy-clock-signals.html - it is similar to what I was exeperimenting with.
True, the signal processing toolbox is a powerful tool. As I said it depends on what you need to to. Using the toolbox for just rise and fall times can be an overkill (also given it's cost) but yes, it's there and it's up to you what to do with it. Can't say more with the info you provided. 
x = (-1)*(s)*(log((1./u)-1))+m
Your response is nice but you just did OPs homework! Teach a man to fish...
There's a function you're calling in there "myfpi." One possibility is that you don't have the main and function in the same directory. Other than that, you're going to have to give us some more details like what isn't working, errors, what you've tried, etc. 
`*` is matrix multiply while .* is element-by-element. Similarly for `/` and `./`. Try replacing all of your operations with . then the opperator 
Matlab is a great tool and worth knowing but if you had to pick a language to master for scientific work, I would try python first. I wish I had. I am only using Matlab now because I am really good at it and do not want to delay my PhD by trying to switch now...
I *did* get a bit carried away. OP never responded though, so either didn't see it or is an ungrateful prick...
[Google result 1](http://imagej.net/Frequently_Asked_Questions#How_can_I_call_ImageJ_from_MATLAB.2C_or_vice_versa.3F) [Google result 2](http://bigwww.epfl.ch/sage/soft/mij/) [also this](http://www.mathworks.com/products/javabuilder/index.html)
This is AWESOME. Thanks for this. I'm going to try it now. edit: Or, at least this afternoon. I used to set matlab up to send myself e-mails when things finished. This seems like it will be FAR more convenient. 
First: could you put 4 spaces in front of your code? It makes it a lot more readable: like this! Second: Could you add comments to your code? This makes it easier for us to check if you understand everything and where you make mistakes as well as making it clear for you what your code does when you look back in a couple of weeks. Third: Why are you calling an infinite while loop with a if--&gt; break statement in the middle instead of just a while loop with the right conditions? 
Owyea, when looking at this I notice one thing: Have you even tried to run this function yourself? What happens? What have you tried to solve it?
I will fix it and put in comments. I am away from my laptop for the night though. I am a total noob when it comes to any programming. It is for a numerical methods class. Thanks for the response I will make those changes first thing in the morning. 
Putting “homework“ in the title is a kiss of death in this sub 
I had thought about that, I think ill give it ago, maybe I'll finally get around to learning python as well haha. 
I already use MIJ for myself (probably should have put that in the OP since it is the first thing in a Google search) unfortunately it's the opposite of what we want to do, we want to be able to run it in imageJ without needing matlab. There is a few reasons why, but a lot of it has to do with removing any cmd interaction to make it easier to run. As I said in the OP I think JA builder is the way to go but I didn't want to make my lab fork out money for it then find out there is free way to do it.
Maybe you're looking for [this](http://vision.ucsd.edu/~pdollar/toolbox/doc/) toolbox?
I got it figured out. I was asking for too many inputs. Thanks for your reply nonetheless.
`parfor` can't do that. Each iteration of the the loop must be independent of every other iteration in order for it to be run distributed. There's no guarantee even what order they are executed in.
I don't see how they aren't. It's an algorithm meant to work in an embarrassingly parallel fashion. I'll post my working single dof time marcher when I get home.
You can't have values that are mutable and persist between iterations. `Temp` is mutable and persists between iterations.
it looks like that is how many iterations it takes for matlab to consider p == 0 since you assign b = 1 + p
Floating point numbers have finite precision. The smallest number number that a double precision floating point number can represent that is greater than 1 is 1+2^(-52). At k = 52, b = 2^(-53). In floating point arithmetic 1 + 2^(-53) = 1.
Gotcha. I seriously doubt there is a free way to do it and still have it actually running MATLAB (as opposed to, say, scilab or octave under the hood). MATLAB Compiler + Builder JA is the cheapest deployment option allowing you to deploy MATLAB to a Java class for inclusion in a Java application. The next step up is MATLAB Production Server, but that's about 5X the price of the other option.
What makes you think it's not the exact same thing? That's a valid MATLAB statement. Octave purports to be a functionally equivalent clone of MATLAB, though I've never used it. 
X is a matrix. It's a variable to be defined by you. 
Yes I set x as the vector of audio samples (a vector is still a matrix..right?) by [x, xfs, xbits] = wavread('track.wav') //5 windows xp intro track and Matlab tells me I am out of memory. (I have a 4gb ram).
haha, the former!! I ended up curling up in tears and frustration and fell asleep, and I found out my partner didn't do any of his share of the work neither &gt;_&lt; I see it now though!! Sorry Matlab made me emotional and rage quit, but I literately did nothing but eat and fail-code for 10 hours. So I really appreciate the concrete example. I'm sick and tired of seeing ambiguous examples of things that make no sense to me without context. I'm in a class where Matlab wasn't a requirement, but everything is done in Matlab... 1/3 of the class knows it and 2/3 have no experience in it whatsoever, so I'm trying to learn it as fast/proficient as possible. I feel like running a programming gauntlet isn't the healthiest way to learn, though.
Good luck with the research!! This stuff can be daunting at times - just keep at it!! Cheers!
You didn't post the data set and the sources are behind a pay wall so it is hard to say for sure, but to start: if rn&lt;1 || rn&gt;t_c disp('r is below 1 or &gt; t_c'); rn=1; else Mp(j,i)=imageData(j,rn); % Test Code %disp('Rows are running'); end This seems very wrong to me. You're discarding all the columns that do not fit within the initial image. Looking at the author's results, M_m is a constructed image whose number of columns is much larger than the original image. Also, rounding r is a bit strange. Is this what the author did? I would personally project the entire image and then interpolate the intensities at each column index within the bounds of the projected image. 
How big is x? Execute: whos x Are there any other variables in the workspace? To list all the variables and the amount of memory they are taking up execute: whos You could try clearing the whole workspace before loading the WAV file: clear all
No, it takes way more iterations to take p to zero. In fact, around 1023. 
Hey so did this work for you?
The size of x is not the problem here. It is less than 2MB.
You mean a for-loop? (You can check the documentation for an explanation)
One trick is to reshape your vector into a matrix and use the fact that mean() works column-wise on matrices to return a 1x5 row vector of the means. mean(reshape(x, 20, 5)) 
Nice! Explains the tag you've got going for yourself. Cheers Agent q..512.
Excellent point! Exactly what I was thinking about myself. This is probably one of the best ways to do it. Another way is to exploit the fact that the mean operation is a linear operation, and build it using matrices. This is done quite quickly using the Kronecker product. kron(eye(5), ones(1,20)/20)*x; 
It is an assignment - but i've solved it in a cumbersome manner, i.e. individual means. I was just wondering if there was a more - sophisticated way to do it is all. Let me clarify though, are we not allowed to ask for help with homework on here?
&gt; MATLAB code tricks, discussion, and questions; but we don't do your homework! Please do not ask us to help you pirate anything. You can ask homework questions, but should do so in a manner that demonstrates that you have thought about the problem and explains what you have already tried to solve it. Asking a question that looks like it was copied and pasted from an assignment sheet will earn downvotes really quickly. See: http://stackoverflow.com/help/how-to-ask
Refresh my memory quick, your expression reads Not(A or B &amp;&amp; C) right?, I'm unsure where you're getting the extra *not A not* in the text. 
There's not a lot you can do to simply something like this. Like /u/TheDefinition said, you can change it around some with some boolean algebra. ~(A &amp;&amp; B) is the same as (~A || ~B). To negate an or statement, you just do the same basic thing. The negation of (A or B) is ~A &amp;&amp; ~B. So ~(A || B &amp;&amp; C) can be read as the negation of (A or (B and C)) which is Not A and (not B or not C). So the entire expression is true if A is false and either B or C is false. For more information, you can read up on [De Morgan's laws.](http://en.wikipedia.org/wiki/De_Morgan's_laws)
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**De Morgan's laws**](https://en.wikipedia.org/wiki/De%20Morgan's%20laws): [](#sfw) --- &gt; &gt;In [propositional logic](https://en.wikipedia.org/wiki/Propositional_calculus) and [boolean algebra](https://en.wikipedia.org/wiki/Boolean_algebra), __De Morgan's laws__ are a pair of transformation rules that are both [valid](https://en.wikipedia.org/wiki/Validity) [rules of inference](https://en.wikipedia.org/wiki/Rule_of_inference). The rules allow the expression of [conjunctions](https://en.wikipedia.org/wiki/Logical_conjunction) and [disjunctions](https://en.wikipedia.org/wiki/Logical_disjunction) purely in terms of each other via [negation](https://en.wikipedia.org/wiki/Logical_negation). &gt;The rules can be expressed in English as: &gt;&gt; &gt;The negation of a conjunction is the disjunction of the negations. The negation of a disjunction is the conjunction of the negations. &gt;or informally as: &gt;&gt; &gt;"___not (A and B)___" is the same as "___(not A) or (not B)___" &gt; and also, &gt;The rules can be expressed in [formal language](https://en.wikipedia.org/wiki/Formal_language) with two propositions *P* and *Q* as: &gt;&gt; &gt;and &gt;&gt; &gt;where: &gt; &gt;* ¬ is the negation operator (NOT) &gt;* is the conjunction operator (AND) &gt;* is the disjunction operator (OR) &gt;* ⇔ is a [metalogical](https://en.wikipedia.org/wiki/Metalogic) symbol meaning "can be replaced in a [logical proof](https://en.wikipedia.org/wiki/Formal_proof) with" &gt;Applications of the rules include simplification of logical [expressions](https://en.wikipedia.org/wiki/Expression_(computer_science\)) in [computer programs](https://en.wikipedia.org/wiki/Computer_program) and digital circuit designs. De Morgan's laws are an example of a more general concept of [mathematical duality](https://en.wikipedia.org/wiki/Duality_(mathematics\)). &gt;==== &gt;[**Image**](https://i.imgur.com/90Fo7mQ.png) [^(i)](https://commons.wikimedia.org/wiki/File:Venn_A_intersect_B.svg) --- ^Interesting: [^Disjunctive ^normal ^form](https://en.wikipedia.org/wiki/Disjunctive_normal_form) ^| [^Augustus ^De ^Morgan](https://en.wikipedia.org/wiki/Augustus_De_Morgan) ^| [^Logical ^disjunction](https://en.wikipedia.org/wiki/Logical_disjunction) ^| [^Boolean ^algebra](https://en.wikipedia.org/wiki/Boolean_algebra) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+ckon4zx) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+ckon4zx)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
thanks mate. I had all of this code and figured out that because some of my data set had zeroes so by taking the log I was producing infinite values which was then giving me an NaN error. Many thanks for your assistance. 
I feel like most people that would ask for help on an assignment by posting to reddit would already be at the point where they've stared at the problem for hours, are just plain stuck, and staring at it longer just becomes a waste of time. I'm disappointed to hear that asking for homework help is frowned upon here. I'm a physics major, and I've never been given a homework problem to do in Matlab (except for extra credit), but I do sometimes like to use Matlab to do problems that would be much more tedious without it and it would be nice to. know I could ask for help here without getting downvoted or questioned about why I'm asking. Edit: pugnare's response to this issue makes sense, but as a beginning user I feel like no matter how much I've thought about a problem, it would appear to more seasoned users that I haven't. Also, is it wrong to not have the time to figure out a clever way to attack a certain problem but still be genuinely curious to how the pros would do it? 
not exactly sure what you want to do here, but you know that infinity's not really a number, right? http://www.mathworks.se/help/matlab/ref/realmax.html could be of interest to you
This graph won't look good; it'll just look like a wedge in the corner. One way to accomplish it, though, is figure( 'Renderer' , 'ZBuffer' ) x = linspace( 0 , realmax , 1000 ) ; plot( x , log( x ) ) Though plotting on a log scale will give you better results: figure( 'Renderer' , 'ZBuffer' ) x = linspace( 0 , realmax , 1000 ) ; semilogy( x , log( x ) ) edit: submitted that on intuition, without testing. At that high of a value, the log plot looks sneakingly similar to the linear plot. My mistake.
I thought that the not applies to all statements in parenthesis including the ands and ors.
Oh, then that totally agrees with the first two comments. ~A, ~||, (goes to And) ~B, ~&amp;&amp; (goes to or), ~C. Cool, thanks for the info. 
 fplot(@log ,[0 realmax])
lol indeed, inf is not a real number. A poor choice of word on my part. I just used it to describe seeing the graph continue on and on... :) Thanks for your help I got it working now. As for why, because I just want to... no particular reason... actually was reading my DSP text book and it had some equations that I wanted to punch into matlab but then got side tracked...
The call to `bis` on line 28 never satisfies the condition on line 57 because `x=NaN`. On the first iteration of line 25, `x_bis=NaN`, so `b=NaN`. Then everything breaks. The first iteration returns a NaN because line 48 is satisfied. ('Root may not exist' block.) Now, I don't exactly remember the bisection method, but I think you're supposed to just return one of the values rather than returning NaN if `z1*z2&gt;0`.
I see what you're saying. I didn't realize it was doing that, I was just listening to what my teacher said. I'll try to change what x is and see what happens. Thank you for your advice!
Nobody can read your code; put 4 spaces in front of every line of code to fix it.
I have a tip: do your own homework 
take a look at the `combnk` and `mean` functions
Thank you for pointing me towards struct2cell(), that lead me to my eventual solution. Here is what I ended up doing: data_cell = struct2cell(my_struct); data_struct_array = [data_cell{:}]; array_a_concat = vertcat(data_struct_array.array_a); Changing it to a cell allowed me to then convert it to an array of structs, rather than nested structs, essentially eliminating the run_a, run_b, ..., layer of my original data. My data set has 1047 runs, and the array size once concatenated is 2.63 million points, which I was doing for ~10 parameters. My original code, which looped through the individual runs in the structure and concatenated manually, took on the order of 45 seconds to run. The new format above takes less than a second!
I would use [the recatangular pulse function](http://www.mathworks.com/help/symbolic/mupad_ref/rectangularpulse.html) and multiply them by your fuction over each step. ex plot(rectangularPulse(-2,-1, x)(x))+(rectangularPulse(-1,0 x)(1))+(rectangularPulse(0, 1, x)(2))+plot(rectangularPulse(1, 2, x)(-1*x))
This is easier than you might think. Have a look at *getrect* or, if you have the image processing toolbox, *imrect*. Google and matlab help are your best friends for code examples 
No, I was told to use matlab last week
Make sure that Symbolic Math Toolbox is installed. &gt;What can I do to include it in my toolbox? You don't have to. Either the toolbox is installed or not. If it is, verify that the path to the toolbox is correct.
Have You checked the matlab documentation ? ( fft is the function You need).
for k=1:refinements %refinement stages %compute coarse solution in serial and add in corrections once loop comes back for j=1:N; SlopeEu=ODE(t(1,j),y(1,j)); yEu=y(1,j)+SlopeEu*dt; SlopeEndEstimate=ODE(t(1,j+1),yEu); y(1,j+1)=y(1,j)+ (SlopeEu+SlopeEndEstimate)*dt/2+correction(j+1); end %compute fine corrections from each coarse step endpoint as initial %condition in parallel parfor j=k:N; Temp=y(:,j); for i=1:Nf; K1=ODE(t(i,j),Temp(i)); thalf=t(i,j)+dtf/2; TempK1=Temp(i)+K1*dtf/2; K2=ODE(thalf,TempK1); TempK2=Temp(i)+K2*dtf/2; K3=ODE(thalf,TempK2); TempK3=Temp(i)+K3*dtf; K4=ODE(t(i+1,j),TempK3); Temp(i+1)=Temp(i)+(K1+2*K2+2*K3+K4)*dtf/6; end y(:,j)=Temp; end parfor j=1:N; correction(j+1)=correction(j+1)+y(end,j)-y(1,j+1); end %Stop operation if change in correction is less than a certain %tolerance % if max(abs(y(end,[1:end-1])-y(1,[2:end])))&lt;.0000001 % break % else % end end Can you see why this 1D code of mine works, it seems like the same type of operation that I'm trying to do up top.
Will look into it. Thanks
if you're doing numerics, use the boolean operator (x&gt;0). So if you wanted sin(x)H(x), you'd use f(x) =sin(x).*(x&gt;0).
I'm completely unable to help you, but I applaud this post. Good title, background, assumptions, your thoughts so far, etc. This is an exemplary "help please" post. Bravo. 
 &gt;&gt; syms x y &gt;&gt; f1 = x - x^2 - y^2; &gt;&gt; f2 = y - x^2 + y^2; &gt;&gt; J = jacobian([f1; f2]) J = [ 1 - 2*x, -2*y] [ -2*x, 2*y + 1] Jacobian matrices are your friend :) 
Use the 'exclude' name value pair argument: http://www.mathworks.com/help/releases/R2014b/curvefit/fit.html#inputarg_fitOptions curvefit=fit((1:x)',z','poly3','exclude',z==10); 
That's perfect! And so simple! Thank you!
What do you know about MATLAB? Have you tried anything? Any errors? To start, maybe look at the [plot()](http://www.mathworks.com/help/matlab/ref/plot.html) command. Also, 4 spaces to start lines will format that line nicely so we can see exactly what you coded and not reddit's formatting
Ok, so lets step through this. If I asked you to create a vector with the numbers (in this order): 1, 4, 3, 9, 3, 1 - how would you do that? Now, pretend the vector you just made were the x-values of a set of ordered pairs: how can you make the y-vector (if you already knew the (x, y) and you were plotting some data)? How would you use the plot() command to make a plot of your data?
Look into the repmat function. 
Looks good to me. The second algorithm is definitely more complicated, but could probably also be done. However, it depends on the project whether it is worthwhile to spend the time to figure it out. If the code runs quickly as is, then it may not be worth the effort.
It looks nice. Probably better than some of the built-in ones. However, I do question some of its utility. If I am ever running something on matlab that will take more than, say, 20 minutes, I almost always run it in the background to make sure that I do not have to worry about things getting messed up. I also often execute on a remote server so the background makes it so I do not have to keep the SSH connection live. I am better off outputting to the terminal as thinsg are progressing. Then, I can peak with `tail` or such. Even in parfor, I will often output the index counter. It isn't in order but I can use `cat ___ |grep text_or_something |ws -l` (or something like that) to get a count and an idea of where it is happening. Still, thanks for sharing.
I tried that and it got an error. I tried it again so I could tell you the error and now it isn't giving me the integral or an error. Just nothing. Is there an extra line I need to put to tell it to output a certain answer?
Without posting a short example of code that gives you trouble, it's going to be hard to provide any help.
You need to use ./ instead of just /, same problem as with the exponent w.r.t. matrix math vs. element-wise operation.
Worked fine for me in real matlab, don't know what to tell you. Try removing the cumtrapz function, and most of the definition of y, and just add terms until you get an error. 
What are the sizes of your vectors? Do a "whos". Also what are the values going into your integral variable? I'm thinking that you're performing maths at such small levels (I saw a 10^-34 in there?) that you're beyond the precision of the computer.
When storing the values to the vector introduce another variable or just use something like v(n-3) = n;
So you're doing, e.g., x=[]; for n=4:8 x(n) = n^2; end You're putting stuff at indices 4 to 8. That means something has to go in indices 1 to 3. That is zeros by Matlab convention. Just restructure the indices to start at 1 instead. x=[]; for n=4:8 x(n-3) = n^2; end 
Not entirely sure what you're doing that ends up with that result, but I have a guess. If you do something like this: for n = 4:8 a(n) = n; end you'll end up with [0 0 0 4 5 6 7 8] because you start by indexing a(4), so it populates the first three entries. If you are trying to iterate over a specific range but want to index something based on which iteration you're in, use a separate variable for that. for example: m = 0; for n = 4:8 m = m + 1; a(m) = n; end That would end up with a = [4 5 6 7 8] as you'd expect. If this is somehow different from what you're doing, post some problem code and I can better answer your question. edit: if somehow you actually wanted to just end up with a vector [4 5 6 7 8] you can avoid iteration entirely and just do n = 4:8
I don't have the specific code on this computer, but I know what I have to do now. Like /u/grnspn and /u/TheDefinition said, I have to restructure the indices by x(n-3). Thank you anway!
Although I usually write it such as follows: x=[]; n=4:8; for ii = 1:length(n) x(ii) = n(ii)^2; end
Not sure why you don't want zeros there. If the indices are important, you can also say: n(1:3)=nan "nan" means not a number.
[This worked for me](http://i.imgur.com/P1HkCzc.png) Copy/pastable: &gt;&gt; x=4*10^(-7):10^(-9):7*10^(-7); &gt;&gt; y=1./((x.^3).*exp((6.626e-34)*(3e8)./(x.*((1.38e-23)*5800)))-1); &gt;&gt; integral=cumtrapz(x,y); &gt;&gt; integral(end)
If you're having trouble prompting the user to give you the whole matrix in one go, have you considered asking them for a row at a time and constructing the matrix that way? As for your error: what are you trying (code-wise) and what is the explicit error? 4 spaces starting a line formats code nicely, see: *no italics*
Can you simply use a previous version? I've got multiple versions installed for this reason.
Yes, the previous version (R2013b) still works. However, since this is a new system they are implementing (they said from R2014a onward hardware/adapter packages to use the actual toolboxes will only be available through an online installation), it would be good to know how to manually add them/bypass this annoying system. Also, R2014a has some new webcam/image processing features I really wanted to implement into my current work pipeline. I would still greatly appreciate any help getting the R2014a USB Webcam hardware package working with the Image Acquisition Toolbox.
Could you not just recursively call the function?
"This is my homework problem and I tried for 30 minutes and can't figure it out."
I just did it and it worked for me. Could you try doing "Download from Internet" instead of "Install from Internet"? Are you logged into your MathWorks account? Do you have write permissions to the install directory. 
Could load a spreadsheet file
As someone who was somewhat in your situation before, try to figure out exactly what you want to do and then figure out how to do it in MATLAB. Just search for "how do I do this + matlab" with "this" being a generic form of what you are trying to do. Once you see how to implement whatever you need to do in MATLAB you can modify it for your exact purpose. 
matlab tech support is excellent. just call them and ask.
Guess that is the case. http://lmgtfy.com/?q=infinite+loop+matlab 
KeepGoing = 1; while (KeepGoing) instring = input('Input the next item, or n to quit --&gt; ','s'); if (strcmp(instring,'n')) KeepGoing = 0; else CurrWeight = str2num(instring); % Insert code where you do other stuff with the inputted value here end end Of course, this will fuck up if you enter a non 'n', non numerical string, but that's the gist. 
are your image sets in DICOM format right now? We can easily work our way through this, but you need to give us a bit first. The other thing is you will need to think about how you want to transition "vertically on your beach" as we go from slice to slice in your data set. Do you see how you could get a sawtooth edge? Are you able to post a slice for me to look at? The segmentation may not be trivial Source: Imaging guy 
**BAD BAD BAD!!!** While I get that OP *asked* for an infinite loop, you should **never** assume that someone actually wants an infinite loop - OP likely meant "input things over and over until I tell it to stop (3 weights, 40 weights, 50423 weights, ...)". You should perform some check inside your while loop to update the while condition to break the loop if that condition is met. Conditions could be n-iterations, until some value is calculated from the input (i.e. enter yr and mo, break out of loop if you get a leap year's feb), or some condition based on the user input (as /u/ViciousCycle has). Also, judging by the looks that this is an assignment, I would guess the prof. would take points off if you actually had an infinite loop as you structured and is looking for *precisely* this methodology where your code runs indefinitely until the user tells it to stop via. the input() prompt. Granted - you just might have simply been exposing OP to while loops and showing him how to tack on 3 easy lines outside his code body. Also, you were on mobile and tired, and might not want to type a longer response.
I'm more interested in what you're imaging with microCT -- what are you working on? 
Thx for providing more information. I agree with you, but after two cancelled flight on one day, my response were destined to be short. I also think a better code could be made with a simple UI box. Thereby a "calculate" and a "exit" button could be implemented. But it is to long ago I tried that, so I am not able to give any hints (still on mobile). 
Yep, you have it exactly right. Each worker has it's own memory space. I've talked with their devs multiple times in the past about this and the possibility of getting it added as a feature, and they said no way. If you need this kind of low level control, unless you are relying on some very special toolboxes, I would seriously consider investigating porting the code over to C/C++. 
Give this a shot: http://www.mathworks.com/matlabcentral/fileexchange/28572-sharedmatrix I tried this out a few years back but dropped it because something wasn't working quite right for my application, but I forget what it was. Good luck! Edit: just remembered -- this only works (or used to only work) for regular matrices and not structures. 
It's up. FIOS connection near Boston. 
www.downforeveryoneorjustme.com
The majority of my work involves Matlab and I rarely use anything outside of three sources: [Mathworks Documentation Center](http://www.mathworks.com/help/matlab/), [Matlab Central](http://www.mathworks.com/matlabcentral/answers/) and/or [StackExchange](http://stackexchange.com/). That being said, any Google search with the word Matlab in it should cover all three of these. 
It looks like you're letting some values pass under the radar without being detected. For example, you eliminate a number with y(4)=[], and then a new number takes its place, so y(4)=10^-13. But then you don't ever check if 10^-13 qualifies as one to be deleted, since you move on to y(5) instead of rechecking. I'd recommend adding a qualifier that will recheck the cell if it got removed once. Also, is there a reson why you are checking for signs and all that? It looks like you only have one thing to check for, and thats if abs(x)&lt;10^-12. It should make your script very small if you're only checking that. Give it a shot and let me know if you got it.
 function x = shrink( x ) x( abs( x ) &lt; 10^(-12) ) = [] end would do it in one line. If I get a second later I'll troubleshoot what you have though. 
Like /u/modernworfhair said, you are making it way too complicated. You only need one if check. But the reason the values are not being detected is that this: if(0&lt; y(n) &lt;u) does not do what what you think it does. The way matlab reads that: If 0&lt; y(n) returns 0 or 1 (false or true), then it checks if that (0 or 1) is smaller than u, which is not what you want. Therefore the code inside those if statements is not reached. So remove 0&lt; from those checks and then it will work. 
I ended up figuring it out: function shrink2(x) m=length(x); n=1; w=1; u=10^-12; y=[]; while (n&lt;=m) if (x(n)&lt;=0 &amp;&amp; x(n)&gt;-u) n=n+1; continue end if (x(n)&gt;=0 &amp;&amp; x(n)&lt;u) n=n+1; continue end y(w)=x(n); n=n+1; w=w+1; end disp(y) end Thanks for your help though. 
It seems like you aren't familiar with how abs() works, specifically that it operates on vectors. So you're splitting this thing into three cases for positive, negative, or zero, testing for sign, re-assigning, and looping through, rather than checking all and operating on all at once. If this is for a grade in a course, you might get a really bad one because it seems you've missed the boat on vectorization. Not doing it the way you did is like, the main point of Matlab. 
Just assign it to a variable. The variables that functions use are local, which means they wont be saved in the workspace. So in your main script where you call the F_drive function use: Fd = F_drive(omega,rover); 
So basically yes, I have to call the function each time? Although I guess that's no more work than just running the function and then using that variable. Ok yeah that'll work, thanks!
GO fuck yourself piece of shit. are you even serious dude you ar3 so out of line..this guy can do whatever he wants alright if it works then it fuckin works. like do you even computer bro? ##
Wait, did you make an account just to troll the Matlab subreddit? Bravo on having oodles of spare time.
Yes. I did. #WhoEvenUsesTheWordOodles
The issue is that whenever I download and install from the download, it still installs via the internet (you need to login to your MathWorks account and it does something there). I feel like this is where the error is occurring - during the online portion of the installation. I am looking for a way to completely bypass the online part.
1.) I tried Downlaod from the Internet instead, still didn't work. 2.) I am indeed logged in 3.) I have full write permissions 
You can also use "assignin('base', 'Fd', Fd);" to adding the output, but it is far better practice to simply assign the variable at the first function call as bobinpants says. You don't have to call the function again each time -- using the syntax as specified by bob, it stays in the workspace as Fd until you call "clear" or exit and restart MATLAB. 
What are you talking about buddy are you trying to say people who say 'oodles' are not comfortable with their masculinity? Think of all the people who use the word oodles and how they feel because you just said that. I'm going to report you and your stupid, idiotic, bitch made comment. #OODLES
Got it, that's what I was looking for. But I agree that his method is simple enough, so problem solved. Thanks!
Alternatively, he can keep the existing frame work but just loop through backwards from the end, so deleted values don't change the order of new ones. Regardless the code can be written much more condensed with a bit of indexing...
&gt; #WhoEvenUsesTheWordOodles and &gt; Think of all the people who use the word oodles I'm sensing some cognitive dissonance. Do you need to talk? 
That is on matlab central? 
http://www.mathworks.com/help/pdf_doc/matlab/getstart.pdf It is very light, won't take you more than 3-4 Hours to get through.
Well, from your error you're obviously trying to access the 175th row but you've only got 174. Have you tried printing the values for X and Y as your prog executes? Do they incriment as expected (obviously not because of the nature of your error)? When do they not work as expected? What are their values? How many iterations prior was the prog still executing as expected? If you find the solution to this error (with the X value), could you expect a *very* similar one when you get to the Y value: will you error out trying to access the 231st element (not there as it exceeds the arrays size) of your array? These are the types of questions to ask yourself when debugging an error. Also, out of curiousity, why "while" loops? You know exactly how many times your going to loop (as read from the dimensions).. Also, size(a,dim) returns the size of the #dim dimension, and you can use the MATLAB mean() function for your mean as well. But here's my tip: if you read closely enough the documentation on [mean()](http://www.mathworks.com/help/matlab/ref/mean.html) and played around with a small test vector you could completely do away with your loops all together... just something to think over.
The "while" loops are just because I spent a long time trying to play around with this code. Originally, I used two "for" loops and I just had the line a(X, Y, :) = mean(a(X, Y, :)); but that gave me a much less specific "Index exceeds matrix dimensions" error. Not knowing what to do, I just tinkered around with different stuff ("while" loops as opposed to "for" loops, etc) until I arrived where I am now. I also tried X = 1:dimensions(2); Y = 1:dimensions(1); for I = 1:dimensions(1) for i = 1:dimensions(2) a(X(i), Y(I), :) = mean(a(X(i), Y(I), :)); end end but that also gave me a simple "index exceeds matrix dimensions" error.
 ans = 0.33469373426873468 ans = floor(ans*100)/100 You could also use ceil() and round() in this method, depending on how you wanted to truncate.
*hmmm... is there a way that mean() can take the mean of an n-dimensional array along dimension x?* Again, take a look at the mean() documentation, *specifically (hint hint)* at the examples near the bottom..
Looks like you two are on the right track but I just wanted to mention that the grayscale of an image is typically not just the mean the 3 color channels - a weighted average with R G B weights of 0.2989, 0.5870, 0.1140 are typically applied.
Thanks, I hope your time on Reach wasn't too glassy. So if my function returns a root, I want to truncate after six decimal places, instead of inputting root_z = floor(z_mid*1000000) / 1000000 to get my six, is there a more compact way? I don't think ceil() or round() are what I want (maybe ceil(), but I'm not sure).
OP: if you read this, these weights are very easy to add on and you can still look to use that mean() of a 3-d array on x-dimension I was pointing you towards discovering. Modern: TIL, thanks. I'm not an image processor, interesting to know the "conversion" btwn RGB-greyscale isn't a straight mean but is a weight mean.
Awesome! Thank you! I am terrible so might take me all day...
Wish I could help you there - I debug 100% on my own from MATLAB error messages so I don't make use of any debugger the editor may come with, let alone turn it on/off.
I'm a little new to matlab, how do I start the debugger working again?
http://www.mathworks.com/help/matlab/matlab_prog/debugging-process-and-features.html#brqxeeu-177
I assume you mean you want to print out the value to exactly 6 decimal places? Matlab will always store your results to a finer precision internally (unless you specifically round as suggested above, but that still won't make it actually SHOW you that many decimal places). What you probably want is something like this (using pi as an example): &gt;&gt; disp(sprintf('%.6f',pi)) 3.141593
As MattTheGr8 says below, using sprintf (or fprintf or num2str) would work if you're taking only about the number of displayed digits. If you want the numbers themselves to be truncated, use "roundn(A,-6)", where A is your numeric array (roundn rounds to the specified power of 10).
You never reset X to X = 1 after each Y iteration
Your link is broken: http://imgur.com/BgOKV12
Two ways that are useful to your situation. 1. Type "dbstop if error" in the command window. This will make MATLAB halt at the offending instruction and let you look at the state of the system prior to it's call. So you can check the state of all the variables and see why the next call is failing. You can then control the execution with the step, step into and continue buttons at the top of the editor window. To exit, hit "shift+f5". To stop this from happening, do " dbclear if error". 2. Write the code as part of a function and click next to the line number of the problematic line. You should get a little ball icon. That is a breakpoint. Execution will halt there and leave you in the and m same state as before. Since this is a loop, it would be worthwhile to right click to the left of the line number and select "conditional breakpoint". This will open a box and let you enter in an expression, such as " i == 125". Now when the loop runs, the breakpoint will only halt execution when that statement becomes true, letting you not have to step through the loop manually 125 times before getting to the one you care about. The first way is how I would do it. It is the preferred way to debug runtime errors, as it takes away the guesswork about where and why the error happens. Use option two if you need to debug how an algorithm is working (watching the intermediate steps) or hit a situation where the runtime error is a few functions deep but is ultimately caused by improper data being passed into the function. If you hit the later case, use dbstop to stop the execution at the error, then run "dbstack" to get the call stack. This will tell you the chain of function calls used to get to where you are now. Set breakpoints at those functions and start working backward until you find the issue. Give the [documentation] ( http://www.mathworks.com/help/matlab/debugging-code.html) a read and Google for YouTube videos about it. If you plan on using MATLAB even semi-seriously, it is well worth getting very familiar with the debugger **BUT** MATLAB is a vectorized language. Any time you go to write a loop, seriously consider if there is a better way to do it using a vector friendly function. Almost 100% of the time, there is. 
Do you want the actual number to change or do you only want to display out to 6 digits?
THIS was the problem. I found that if I initialized X = 1; *inside the first while loop* that it would work properly. Thank you so much!
Use *sprintf* to create a string variable, just the way you'd do with *fprintf*. You can insert *sprintf* directly into the *xlabel* statement. For hints on how to use *sprintf* check the documentation.
you can merge strings by putting them in a vector so: variable = 5; varStr=num2str(variable); axisname= ['my variable is: ', variable]; axis(axisname); does that help?
[Imgur](http://i.imgur.com/q0TykUv.png) Here it is let me know if you anything else
What have you tried yourself? Could you give your (formatted) code so we can see where you went wrong?
Heres what i have i stopped at x1 in order to test it out clear all; clc; duration=4; %time range fs=44100; %samples/secs T=1/fs; %sample time increment t=0: 1/fs: duration; x1=cos(120*pi*t*60); x2=cos(4000*pi*t); x3=x1*x2; soundsc(x1,fs); plot(1000,x1)
Well to start: it give an error. Have you tried to solve it yourself? (when I solve the error your code gives a nice tone (which hurts like hell when you play on your earbuds on full volume btw...)
there was no error for me 
creating x3 gives an error since you cannot multiply 2 vectors (x1 and x2) you should use .* instead of just * there. 
Isnt that the frequency?
This was simple and it works for my purpose! thanks 
Checked this out too, I understand it's use thanks
num2str needs to die a horrible painful death and never be spoken of again. ``sprintf(``
Just for sake of curiosity I have to ask: Why?
You need to put hold on; Between the plot calls
Thank you. I think I asked the wrong question. How do I get two separate graphs to print? Right now both graphs are printing on top of one another. 
That was exactly it. You're awesome. 
Style preference. sprintf makes for much more readable code as it's also used in C.
Works fine for me &gt;&gt; roots(fun2) ans = -0.69691741829476156808497146180316 0.11120389670891486447303151291595 0.67968541210581450069427842080154 - 0.0081799751107301671978856538676132 + 0.75274402764684858810291246172268*i - 0.0081799751107301671978856538676132 - 0.75274402764684858810291246172268*i Is the symbolic version of isfinite on the path? Execute: which -all isfinite There should be an entry of the form: $MATLABROOT/toolbox/symbolic/symbolic/@sym/isfinite.m % sym method
Thanks for the quick response! No, the symbolic version of isfinite does not appear on that path
 export_fig plotdir/filename -png and export_fig plotdir/filename -eps -transparent Using this notation every argument is assumed to be a string so no '' are needed. You can also use export_fig(plotdir/filename, '-eps','-transparent'). Note that borders are cropped at default so use an optional -nocrop argument if you dont want that. Type help export_fig for more info on other options. If you mean btw that you have plotdir and filename as string variables, use: export_fig([plotdir,filename],'-eps', '-transparent') % plotdir should end with a / [plotdir,filename] concatenates the two strings into one. EDIT: fixed the last part. 
&gt; export_fig plotdir/filename -png Kept it with filename to see if that works but i get teh following error get the following error: Error using imwrite (line 454) Unable to open file "plotdir/filename.png" for writing. You may not have write permission. Error in export_fig (line 365) imwrite(A, [options.name '.png'], 'ResolutionUnit', 'meter', 'XResolution', res, 'YResolution', res);
Well plotdir has to be a valid directory. If you have defined it in a variable called plotdir, then read the last part of my first comment. 
My bad, using the first notation wont work if you use predefined variables, Use export_fig([plotdir,filename],'-eps', '-transparent') 
Type whos filename in the command window, what does it say? Also post the code where you define filename. 
Since solving Ax=b is one of the most basic matlab functions I can't shake the feeling you haven't been doing your diligent research. Hint: have a look at the (edit:) backslash operator.
That's the problem. Try restoring the default path restoredefaultpath If that doesn't work reinstall and make sure to install the Symbolic Math Toolbox.
Back*slash*
For higher resolution: &gt; -m&lt;val&gt; - option where val indicates the factor to magnify the on-screen figure pixel dimensions by when generating bitmap outputs. Default: '-m1'. &gt; -r&lt;val&gt; - option val indicates the resolution (in pixels per inch) to export bitmap and vector outputs at, keeping the dimensions of the on-screen figure. Default: '-r864' (for vector output only). Note that the -m option overides the -r option for bitmap outputs only. Type help export_fig to read more info about all the options. 
Whoops
Ah, so it's not **that** bad (pfew!). I was starting to think that it would fit in the catagory of using "eval" or "global". I've never really used C (I'm trying to learn though!) so I don't know which functions do and don't exist there. I do agree with you that you should use common functions between languages when possible. Sadly enough thats only works when you are aware of it.
I found it!! wow I set pix2(130:end) which gave me 232x12 when my dimensions should be 231. sorry about the noob mistake
What's the hyperspectrograph you're using? Is it a push broom type?
Well I didn't really consider running Matlab from R, does that only work on Linux or on Unix in general(like Mac)
For more robust code, joining a filename and path with fullfile() is a good method; then you don't have to worry about what the file separator is on the given computer, or where to put it. So for example, path_name = matlabroot ; fn = 'test_file.png' ; save_filename = fullfile( path_name , fn ) gives save_filename = C:\Program Files\MATLAB\R2014a\test_file.png Also, I use export_fig quite a bit, and something I find helpful is the -m2 modifier to magnify twice. Also, I often make series of graphs for powerpoint, and my advisor likes to flip through quickly, so they need to be positioned the same; for that I turn off cropping with -nocrop. If you were to utilize all of that together, your code would be export_fig([plotdir,figexptfilename],'-png', '-transparent' , '-m2' , '-nocrop' ) And not that you asked about it, but when I plot a lot of similar figures, I like to define the windows to be identical, so I add the following to my code at the beginning set( 0 , 'DefaultFigureUnits' , 'Normalized' , 'DefaultFigurePosition' , [ 0.1 0.1 0.8 0.8 ] ) Have fun!
Alright, thanks!
I doubt you are going to get any meaningful responses for the following reasons: -The comments in your code are in French -Your primary questions are more related to Computational Science than they are specific to implementation in Matlab -You provide very little in the way of context for your question. Do you assume everyone in /r/matlab is familiar with magnetostatics? -You use a special toolbox that most people aren't familiar with and don't have that costs $1000 -Your code looks like all it does is setup the problem posed, and doesn't actually solve anything.
And the code is not well indented to show up like code as is seen here including the next line Still, to OP, if you want help here, it would be good to show a bit more than the set up. Sure, it's better than showing no effort put into it, but what exactly are you having problems with? Where exactly are you asking for help? What, more than just coding the setup, have you tried
I am glad to see you got the help you needed. In the future, the best practice to include code is to indent four spaces like this Personally, I do it by writing my code in my editor of choice (textwrangler), then I use its features to indent everything (with a tab by default). I then `detab` with 1tab==4 spaces. Simply copy/paste from there. It is much easier to read for others to help
Are you not allowed to use the sum() function? It will probably be faster than your for loop. Also, what kind of problem are you talking about? Does it throw an error? Does it disagree without the output of std()? Should you be taking the sample or population std? 
You've given us virtually nothing to help you with. This (and asking for help with homework) is why you're being downvoted. 
We were told to try and use as few built in functions as possible, so I assumed we were not allowed to use the sum() function. Here is the error I get when trying to run the code, the .txt file I'm trying to read in is named "TempF.txt" and is a bunch of different body temperature recordings. &gt;&gt; load TempF.txt &gt;&gt; StDev (TempF) x_L = 63 Undefined function or variable 'SumInex'. Error in StDev (line 6) Summing = Summing + (x(SumInex)-AvX)^2; Edit: Also I believe I am supposed to take the sample std.
1. Don't skip class 2. Double click the MATLAB icon. 3. Type "help lsim" 4. Press enter
You made a typo: SumInex
Check and make sure you're using the correct flag for the MATLAB version of STD. std(X) or std(X,0) uses N-1 in the final, std(X,1) uses N in the final division. I doubt that's the case because if you weren't aware of the flag, your code looks like it should match, but figure someone ought to mention it.
Without being able to run it since I don't have all the variables, it looks like it's due to the part you have commented out. If I read this right you should be able to replace it with: if randcolumn(ind,jnd)&lt;=6 truMask(ind,jnd,:) = 1; end Which should look at that randcolumn variable and check if it's less than 6, then turn the mask to 1 if it is. No need to turn things in to zero as truMask starts as zero. You can probably also vectorize this code and use boolean logic exclusively, just too lazy right now :) 
The equation of a [2D Gaussian with arbitrary standard deviation](http://en.wikipedia.org/wiki/Gaussian_function#Two-dimensional_Gaussian_function) via wiki.
You can use polar coordinates? That's why they were invented...
What are your key and value data types. If it is strings and arrays (or could be tweaked to that) then I would save a v7.3 file with each key a top level variable. Then you can load the file with matfile which memory maps and is very convenient (only loads from disk when you access, can slice specific regions etc.). You can save your variables programatically by using struct string indexing and `-struct` option for save. 
Yeah, of course, but that's not the problem.
thanks i'll check it out soon when i'll go back to this
&gt; help export_fig very useful thanks
One option: Use polar coordinates to define points on the two circles (the higher the number of points the smoother the circles will be). Transform them using pol2cart(). Then use patch() to color the segments using a loop for example to define the connected points of each segment. Another option is to use rectangle() which can also plot circles. help functionname and doc functionname are your friends. 
Okey, I will try this out. I also got another tip, which involved similar things. Thank you.
I came to suggest this as well, but it looks like containers.Map cannot be accessed (via the matfile class) without loading it completely into memory. maybe there's some way to restructure your data into many smaller hash tables and then some logic you can use to only load the one you need? ie find some way to group your key/value pairs into groups.
Thanks for pointing out the matfile command. As I mentioned to /u/thrope the problem is that the data I am storing involves structures with VPA numbers, arrays, etc. Also converting my variable precision numbers to doubles will not work (hence why I use them in the first place). Therefore I do not think matfile will support my data. I am not familiar with fread, would this be able to handle structs with variable precision numbers?
Thanks for the good suggestion. I actually do this to the greatest extent possible; i.e., I have grouped my hashtables into about 200 different hashtables, but these groupings still result in gigabyte sized tables (yes, I am dealing with "big data" here)...there is no finer structure to these keys that I can envision, which is why a hash table works so well. 
In that case I would stick to v7 format (v7.3 is really slow for nested/complex data types) and just forget containers.Map instead saving each keys value in a separate file (named with the key I guess). I would put the files in a directory then it would be simple to write a full load function that loads all the mat files in a given directory as keys to a containers.Map (for when you want the whole thing) or load just one file if you want to. Ie replace containers.Map with a directory of files. 
The fact that you linked to UnDocumented means it was Un. Documented. Probably for a good reason. Maybe they want to replace Java with C++ or C or Python.
I know it is undocumented. However, the uicontrollers wrap only a subset of the underlying Java object public events as callbacks. To access all of them requires working directly with these objects. I am simply asking why Matlab has made this more complicated. In a similar vein, imbedding html code into uicontroller text greatly expands the versatility in how text appears in a gui. This is also undocumented, but works great, except for (of all things) static text...... I just do not understand the logic behind not making an effort to incorporate this under the existing umbrella of gui development within MatLab. I thought that in time there would be a push in this direction, so I was a bit surprised when the new release actually appears to move in the opposite direction. Why...?
No prob, Bob!
I'm assuming you mean 1 column by 20 *rows* long. *dlmread* is for reading delimited **numeric** data; since you only have one column your delimiter should be blank, ''. It looks for line returns and counts them as new rows. If you want to read from a specific row and column to the end, put the row and column numbers after your delimiter. Something like this: *A = dlmread('C:\test.txt','',5,0);* Or, read all the data and then choose the index of the data you want: *A = dlmread('C:\test.txt','');* *B = A(5,1);* If you want to read strings, or a mixture of strings, use *textscan*. You'll need to use *fid = fopen('FileName');* and *textscan(fid,...* to read from a file. If you know the data is comma spaced, use *csvread*. If you have questions about the usage of any of these functions, use *doc FunctionName* to get the full documentation.
&gt; 1 column wide and 20 columns long Usually this would be stated as '20 rows x 1 column'. &gt;number 15 on the list. Assuming each row contains just the number and each row has only one number... fname = '...\test.txt'; % Filepath to your file fid = fopen(fname, 'r'); % Open it for reading data = textscan(fid, '%d'); % Read one number per line fclose(fid); % Close the file disp(data{1}(15)) % Display the 15th value in the first (only) column will show you the 15th number in your file. 
I agree with your complaint. Using Java is often 10x better than using matlab's higher level gui tools. Perhaps it's simply not "safe" enough for users to support it.
There is a [findpeaks](http://www.mathworks.com/help/signal/ref/findpeaks.html) function that might be useful. Personally, I would just use [diff](http://www.mathworks.com/help/matlab/ref/diff.html) to take the first difference and look for large values in the difference. Large positive values will correspond to the rising edges and large negative values will correspond to the falling edges.
Finding the rising and/or falling edges might be helpful. Once you know where these points are in time, you can find the difference in time of all the curves to give you latency. Depending on how "clean" your data is, you should be able to do this with the derivative (using either the diff command or creating a function for finite difference). Here's quick sample: %% Generate Some Data t = 0:pi/180:2*pi; y = 3.25e5*(square(10*t)+1)/2; %% Differences dy = diff(y); % Cheap derivative estimate ind_r = 1*(dy&gt;0); % index of rising edge, 1* converts from logical to numeric ind_r(ind_r==0)=NaN; % replace 0s with NaN elements dy_r = y(2:end).*(ind_r); % turn the 1s into the actual signal values ind_f = 1*(dy&lt;0); % index of falling edge ind_f(ind_f==0)=NaN; dy_f = y(2:end).*(ind_f); %% Plot plot(t,y,'-k',... t(2:end),dy_r,'og',... t(2:end),dy_f,'or'); [Plot](http://i.imgur.com/VA6PnSq.png)
&gt; new release actually appears to move in the opposite direction. Why...? Maybe they're moving away from Java? There are dozens of crossplatform UI kits. I would love to see a C/C++ so it didn't suck so hard on non Windows. Or Perhaps heading straight into the storm and embracing Python and moving to WxPython. Maybe they want you to buy their Java link toolkit. &gt; This is also undocumented, As far as why it's undocumented: I don't get paid to document undocumented stuff at my job. I imagine mathworks has a similar policy. They sell their toolboxes not their UI bits. It's no "value added" and it allows them to change direction without disrupting your work. It's why they make an announcement when something will deprecated at least 2-3 versions in advance, but only if it's supported.
You could use the input function and instruct the user to enter input as an array: myArray = input('Enter 9 values in between [] '); Then the user would input something like [1 2 3 4 5 6 7 8 9] which would be stored in myArray Alternatively, can use inputdlg and can create nine fields to fill in, but the values will be stored as strings in a cell array. 
Hi, I'm not quite sure what you want, but here are solutions to both ways. If you're just looking for location of the initial rise, this will suffice: &gt;&gt; onset = find(diff(X&gt;5e4),1,'first'); If you want to compare the different curves, you're going to have to do it pairwise. If you take two pairs of curves, you can use the cross-correlation function: &gt;&gt; [z,lags]=xcorr(x1,x2); % assume x1 and x2 are two of the curves. This will produce a plot that looks something like this: http://i.imgur.com/ds2AYBN.png. 
Change their orientation with '. 
Tackle this in two parts. In the first part, come up a way to specify the number of colors/segments you want. In the second, come up with the locations. Let's say you want 12 equal segments, like in the picture. You probably want something along the [HSV colormap](http://www.mathworks.com/help/matlab/ref/colormap.html). Unfortunately, the colormap only gives you a set number values. So--if you want some really good, equally-spaced colors, you can use the INTERP function here. Let's begin with making our figure, and not the crappy default way (to mimic your picture). &gt;&gt; figure('units','normalized','outerposition',[.15 .1 .7 .8],'menubar','none','toolbar','none'); &gt;&gt; axes('position',[0 0 1 1],'color','k'); hold on; axis equal; Now let's create some colors: &gt;&gt; cmap=colormap('HSV'); &gt;&gt; x=linspace(0,1,size(cmap,1)); &gt;&gt; colors=interp1(x,cmap,linspace(0,1,13)); % grab 13 equally spaced colors along the same spectrum &gt;&gt; colors(end,:)=[]; % 13th color was same as 1st; get rid of 13th to leave us with 12 Ok, now we have a basic figure. With nothing in it. Next stop: let's define our patches. We want two circles, of radius r1 and r2. Imagine a radar signal going in a circle; we want it to sweep out one section at a time. We want 12 equally spaced segments. That means we need 12 partitions of the unit circle. If you remember your basic trigonometry, a circle is made up of 2*pi radians. So, let's set our "spacer" points along the unit circle as a function of the angle, theta. &gt;&gt; d_theta=2*pi/12; &gt;&gt; edges=0:d_theta:2*pi; &gt;&gt; rad1 = 1; rad2=2; Now we can make a loop with 12 iterations, and create a PATCH at each one by connecting the inner circle to the outer circle. We'll make 100 points along each segment, although it really doesn't matter how many we do. &gt;&gt; for i = 1:12 &gt;&gt; lim1=edges(i); lim2=edges(i+1); &gt;&gt; t=linspace(lim1,lim2,1e2); &gt;&gt; x1 = cos(t)*rad1; x2=cos(t)*rad2; &gt;&gt; y1 = sin(t)*rad1; y2=sin(t)*rad2; &gt;&gt; patch([x1 x2(end:-1:1)],[y1 y2(end:-1:1)],colors(i,:),'edgecolor','none'); &gt;&gt; end Here's the result: http://i.imgur.com/VWw0Kdb.png. The colors aren't lined up quite the same, but it's a pretty good approximation. Let me know if you want more assistance. **Edit**: if you want the circle to appear in the top left of the screen, the easiest way is to just change the axes. Our circle spans from X=+/- 2 and Y=+/-2, so throw in this command: &gt;&gt; axis([-3 10 -5 3]);
In addition to what other have written, you are asking for trouble by naming variables the same name as the function. So you should use something like function [Average_out] = Average ( x ) Also, maybe it is just that I am self-taught in matlab so I do not know what is the regular pedagogical approach but &gt;We were told to try and use as few built in functions as possible, so I assumed we were not allowed to use the sum() function seems like a load of bullshit. Ok, I can understand the teacher saying not to use `std` but to not be allowed to use `sum` seems like it would teach bad behavior. But I digress....
Another option is using a `for` loop around the `input` function to grab all of the values individually: myArray = zeros(9,1); for ii = 1:9, myArray(ii) = input(['Enter array index ', num2str(ii), ': ']); end disp(myArray); Depends on OP's preference regarding user input, I guess.
Look into the table() data type (R2013b and later, I believe). You can use the function readtable() to import data from a file into a table. This is the best way to store and work with tabular data.
Please reformat it using 4 spaces for code (and new lines in between) and no spaces infront of your normal text. Also, state what the problem is. By looking at it, I thing making quizgrades a vector to begin with using quizgrades = zeros(9,1); and filling it up via quizgrades(n) = input(...); where *n* is the number of the quiz would be usefull. When defining *s* and *quizgrades* in your code, the variables *quiz1* ... *quiz9* are not defined. You might want to shuffle the order here.
I tried implementing that but it still removes the lowest value from each variable. quizgrades(1) = input('Enter quiz grade'); quizgrades(2) = input('Enter quiz grade'); quizgrades(3) = input('Enter quiz grade'); quizgrades(4) = input('Enter quiz grade'); quizgrades(5) = input('Enter quiz grade'); quizgrades(6) = input('Enter quiz grade'); quizgrades(7) = input('Enter quiz grade'); quizgrades(8) = input('Enter quiz grade'); quizgrades(9) = input('Enter quiz grade'); quizgrades = zeros(9,1); avg= mean (quizgrades); s = quizgrades; [~,idx] = min(quizgrades); s(idx) = []; avg2 = mean(n); disp(avg) disp(avg2); 
Change avg2 = mean(n); to avg2 = mean(s);
why do you need to loop? this is just math.
Aw come on, Where is the learning experience in that. That was probably an assignment :) 
Just as a general tip: Try to clear all your variables once in a while if you don't need them anymore. For example in this case it looks like you had used a variable called n earlier. If you had cleared all then that would have raised an error and thus have been easier to spot
y0=5m; theta=20; v0=300; a=9.8; t=2*v0*sin(theta) / g; x=cos(theta)v0*t; sprintf( 'Time to return (s) = ' t ' Horizontal distance traveled = ' x " meters'); 
Being required to use Matlab to solve this, here's how I would approach the problem: Build a time-series vector for t and plug in all known constants. Use find(y&lt;0, 1, 'first') to get the index where the rocket hits the ground. Grab the corresponding value at that index in the time vector and x vector. Then fprintf the answers
You could make this simpler with very few lines of code using varargin (variable arguments in ) function quizgrades=(varargin) quizgrades=mean(varargin) &lt;-- Might need {} instead of () newgrade=( sum(varargin)-min(varargin) ) / 8 Don't know if this works but something like this
Try this: quizgrades=zeros(1,9); for i = 1:9 quizgrades(i)=input(sprintf('Enter quiz grade #%g: ',i)); end quizgrades=sort(quizgrades); fprintf('Average of all quiz grades: %g.\n',mean(quizgrades)); fprintf('Average of 8 highest quiz grades: %g.\n',mean(quizgrades(2:end)));
Try using xlsread with 3 outputs.
Vectors (i.e. matrices) can't contain strings in the way you're trying. Look at cell arrays instead. As an alternative to if/elseif consider a switch/case structure.
Sorry for being a noob, but could you explain in more detail?
Matlab will continue to cycle through the fprintf() string until it's used up all of the arguments. If it runs out of input arguments, it cleanly aborts, but you lose the rest of your string. It doesn't matter if you comma-separate them. In addition, all arguments are treated as column vectors. So the following calls produce the same result: fprintf('Hi %g, this is %g.\n',[1:3],[4:6]); fprintf('Hi %g, this is %g.\n',1:6); fprintf('Hi %g, this is %g.\n',[1 3 5; 2 4 6]); 
This is the answer I needed. Thanks!!