Yes, you’re along the right lines with this. Don’t listen to the other responses saying that you need to put more thought into the pattern or architecture than this. If you’re still learning there is no point in that and it’ll probably (no offence) go over your head until you’ve had enough experience to see *why* the pattern makes sense. Just start programming it and see how far you get. Take this as a learning experience and know that you will make mistakes with your design. That’s fine. You can always modify it later, or even start again with your newfound knowledge 😊 Once again, it is much more important for you to get the experience in actually programming something by yourself than getting the perfect textbook architecture at this point. 
It looks like [Dive into SpriteKit](https://www.hackingwithswift.com/store/dive-into-spritekit) from /u/twostraws might be the thing you’re looking for. :) 
How do I get set up with XCode? What is swift and what is it used primarily on? Are there alternatives to Xcode? What do some of the keywords mean? What are some of the more basic functions in swift? Those are just a few questions I thought I could ask while watching! Great video, good quality audio, though a couple of dry spots throughout but that will get better with experience. Very good!
It hasn't shown to be particularly viable, or received enthusiastically elsewhere. That could change. Chris Lattner is using Swift within Google. But I'm not holding my breath. Doesn't matter to me, though. Happily developing apps on IOS. 
I’m a fan of Python also but Swift has so much potential with being interpreted or compiled. Add in a few modern programming features and you can hope for wider adoption. As for Linux, Swift does run there; further Apple is releasing supporting software as we speak. In this case a language server for IDE’s. Of course running there doesn’t mean it is 100% yet. There is a lot of integration that has to take place such as support for the various GUI’s. It is important to realize just how new Swift is as it has gone through major revisions and has not hit binary stability yet. It is a very good time to get started with Swift on Linux though. 
It most likely won't be adopted outside iOS/MacOS. But considering being an iOS developer is one of the highest paying jobs out there I don't see this as a problem.
Which languages are you comparing it to when you say it's verbose? 
Thanks dude, I've responded to you in email.
I would like to see swift used more on other platforms and in other domains - I love swift and I think it's awesome!!! &amp;#x200B; But judging from the fact that most tutorials, questions and even this subreddit are often rather iOS questions/tutorials than swift in general... Let's say I don't see that happening any time soon... &amp;#x200B; I'm still a novice at programming (little over a year), and it was a little bit confusing for the first few months to listen to some "swift" podcasts that were actually iOS development podcasts - and the same with other resources. (like written tutorials, videos etc.) &amp;#x200B; (of course except the Swift Unwrapped podcast, which I'd say is strictly language oriented) &amp;#x200B; Does anyone know about some interesting swift projects that don't involve apple's ecosystem at all? And is there some not overly complicated &amp; hacky way to make for example linux apps with swift?
Wouldn't say it's verbose, but there's definitely a LOT of stuff built into the language/standart library itself... Even after a year of learning to code it's still a bit confusing sometimes... :D
Starting to think about my first big project - open source notation iPad app. Hope I don't fail horribly :D
Now out on Apple Podcasts: https://itunes.apple.com/us/podcast/the-swift-community-podcast/id1449664346?mt=2.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Swift Community Podcast by The Swift Community](https://www.reddit.com/r/iOSProgramming/comments/ahmjf3/swift_community_podcast_by_the_swift_community/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I'd guess something dynamically typed, like Python or JavaScript. My bet is Python, where there are no (required) types, no curly braces, no semicolons, no protocols, no access modifiers... etc. Compared to other imperative statically typed languages, I think Swift is actually remarkably concise. The type inference is relatively good and I don't feel like I'm constantly writing bunches of boilerplate code. That said, Haskell is still more concise, but at a cost haha. Reading other people's Haskell is always an exercise in patience, I feel. They leave out comments and use single-letter variable names all over the place. It's also possible OP is talking about Swift's penchant for using sentences as function names (eg, `createFooFromBar(_ bar: Bar, withBaz baz: Baz)`), but personally that's one of my favorite features of the language (which it inherited from Objective-C, I think).
I doubt that's what they meant, because that's really only a good thing. Using a language with a poor standard library is a very frustrating experience. Yes, you have to look things up in the documentation all the time, but I pretty much always know I'll be able to find an existing implementation of some function or capability I want. I love that about Swift.
Hey thats pretty cool! Apple wont complain though if this SDK is installed? Lets say I user your SDK for a future app, do you see ME having any problems getting through app Review with your SDK installed. Are you 100% sure Apple will allow your SDK to be installed? Really cool idea though. I hope it works out!
Thank You so much m\_irizarry. I will actually work on those questions. And yes there are some spots where I am working on. I look forward to correct them :) Thanks
Hey thanks for feedback!. App with our SDK will 100% pass Apple review, but in current version we disable data collection in AppStore automatically. Just to protect users. Current version is designed to be used during app development by developers, testers and other team members for QA and beta builds. &amp;#x200B; We are working on AppStore version what will have almost same features, but with additional protections measures. Just image if developer will connect to some random user's device and corrupt user's database by executing SQL query or something like it. AppStore version will be more read-only. We are going to release AppStore version in the middle of this year. &amp;#x200B; Try to use AppSpector during development in your team. It's a real time saver! &amp;#x200B;
Yes
Your post has a lot of implicit comparisons. Verbose compared to what? Relatively unpopular compared to what? Chances are that you’re comparing against encroached languages that have had public releases for 20 years or more, like Python. It’s normal that a popular language that’s been around for this long has more use than one that’s been around for 5 years.
If you see this then it’s most certainly something that was badly converted from Objective-C: createFooFromBar(_ bar: Bar, withBaz baz: Baz) -&gt; Foo That should be: Foo.init(from: Bar, with: Baz) Or similar. It can be pretty consise compare to Objective-C and other languages out there. 
Now I love that as well, only felt overwhelmed by it at the beggining :-)
Do you have stats to back that up? Genuinely curious.
I was just going off of functions I've seen in the standard library and stuff from when I first started learning Swift (back when it was released). Didn't realize the style was meant to be more like the second example. Good to know!
More like createFoo(from bar: Bar, with baz: Baz) -&gt; Foo functions still exist. 
Thanks for recommending my book!
Yes they do but the standard practice for this type of function is to make it an `init` method on `Foo`. Nearly all of these type of functions in the frameworks have been moved to `init` methods.
A lot of companies will pay top dollar for iOS devs -- especially if they know Swift -- because there is a lot of demand and not enough supply. You have people who know Objective-C but their main area of employment is something else (backend, frontend, etc). Those who bothered to learn Swift are either new (and thus probably don't know Obj-C which companies need bexause a lot of their projects will likely still use that), or iOS devs with almost a decade of experience. 
Thanks for the advice. Programming can be a little intimidating at a lower level and looks super confusing when reading completed code. But what I like to tell myself is that the basics of Swift (or programming in general) looked like a giant wall of nonsensical text until I delved into it and learned what each thing did one by one. Now I can read code and write it to some degree in a surprisingly short amount of time, which is really cool to me.
Thanks for the explanation! I actually just accepted an offer as an Software Engineer - iOS in NYC (second job out of school, graduated '17). 
I build my own config files and use build environment variables. I trust that you're making individual test targets?
If you have a transcript I'll read it and review it. I don't follow videos on coding because it's much more difficult to follow than text.
Yeah, multiple targets, each one testing a different component, and using the "Target Membership" pane to indicate which files should be included with each test. Works great, but I thought I read that it's not a good idea to do it this way. So you're using xcconfigs build settings, does that mean you have `#if BUILD_SETTING_FOO` and `#if BUILD_SETTING_BAR` in a few (or a lot of) places in your code, to avoid pulling unwanted dependencies into your test builds? 
Hey, u/amitkania. As u/marxy mentions, you need to wait for the CoreLocation to get the location of the device, which might take a while. I made a GitHub gist with some sample code here: [here](https://gist.github.com/GoranLilja/685934c265088d38dc59e74993b49466). Another thing worth mentioning is that the user can, at any given time, change his/her privacy settings in the Settings app, which might mean that the app no longer receives location updates. This means that you have to implement the delegate method locationManager(\_:didChangeAuthorization:). I'm happy to help out more if needed. Feel free to send a PM if you want.
Fuck if/then/elses. Just have a config file set to the named build configuration, set the configuration file name based on the app's target name and $configuration and make sure that is loaded and parsed when the app starts up. All builds become automatic and dynamic. You just change what you want in the config file. It's a game changer. $CONFIGURATION
Is there no auto fix from xcode itself ? And also did you use the update helper from xcode itself ?
Yeah I did
+1
Python code always looks so vertically short to me (and I used to do Python exclusively).
Yeah it’s definitely intimidating to start with. The hardest part of all of this is genuinely to push through the “i don‘t know what I’m doing“ feeling at the start. The thing to be wary of is that on the internet you can find an infinite amount of very academically-minded programmers who will argue that you must always program in some ideal way. Learning programming patterns and methodologies are genuinely a very useful skill as you become a better developer and architecture becomes more important but I think a lot of people forget how it feels to just be starting out. I remember when I was at university and first learning to program, how I kept understanding how things worked in tutorials but struggling to figure out how to apply it for myself. The answer was just to pick a simple project that interested me and actually make it without a specific tutorial. I’m sure if I looked back on it now, that code would be horrible compared to how I’d write it now but that’s not the point. I left it fully understanding my own system for it and along the way, I fixed a lot of mistakes that I’d made. That was the point where I really started to improve. Ps. If you’re interested, my problem was to program a version of space invaders in Python. It was a simple game and I already knew exactly how it was supposed to work, but I also genuinely wanted to finish it and get a working product. Pps. I think I actually started that project from a tutorial, but it didn’t get close to finishing the game and I didn‘t really like the tutorial. So I started again and did it by myself 😊
Currently going through a 45 hour Udemy course on Swift and actually it’s more like triple that because I have to rewind all the time. Once finished I’ll probably do text only from now on. 
How do you tell Xcode to use only "A" files when using build configuration "A"? I tried xcconfig files, but couldn't figure out how to tell Xcode not to build my entire project with each config. And thanks for the $CONFIGURATION tip. Sadly enough, I couldn't find anything in there about selecting files. Do you build within xcode, or on the cmdline? Cheers
Yeah, photos and video make no sense with programming. With text you can copy-paste stuff to try it out and go at your own pace. Not to mention code in a video is nearly always fuzzy, small, and off the screen at the worst moment. Then you have to deal with the audio…
Dude, the own pace thing is so important. The course I’m doing right now is really basic but I don’t want to skip to much because there is actually some information in there that i’d like to absorb. The analogies about variables and little boxes are driving me crazy though. 
great feedback. 
Great way to ask for help. &gt; "I got 100 errors" &gt; "It's on my github" Doesn't even bother to link said github...
I feel as a beginner you nailed it right on the head. Actually this issue is shared with a lot of subjects even aside from programming. People forget what it's like starting out. I've looked over a number of "beginner" tutorials for swift and it seems like they don't understand how to bridge their more advanced knowledge of the subject to someone who is completely new and really has no idea about it. I started learning Swift from an mobile app called SoloLearn, and it did teach me some of the basics like variables, constants, strings, ints, ect., but the curriculum further into it seemed to lose me and presumably their lower level programming novices too by using terminology completely foreign to people just beginning to program. They began explaining subjects too early on in the course as if they were teaching someone with a decent grasp on programming already and I ended up becoming disinterested and lost because I had no idea what they were talking about and I spent a great deal of time trying to dissect what in the world they were supposed to be teaching. I came across twostraws's HackingWithSwift tutorial and it felt like a breath of fresh air because it seemed like he knew how to convey information in a simplified and clear way to a beginner. With that I just blew through the basics recently and it now feels like I have an understanding of how programming works. &amp;#x200B; My post is about a simple game I wanting to do and I know exactly how the end product will be. This problem is the hump to get over and learning how to program it into existence. The few comments painted a slightly clearer picture of how it's to be done, fortunately. &amp;#x200B; I'll just keep programming with your advice in mind and ignore the people who say it needs to done a certain way. Like you said, as I time goes on and as I gain experience, discipline and better techniques will come more naturally. Sorry for the length!
Well because I’m looking for someone who’d be interested in helping cause there is so many errors I can’t explain everyone and I don’t want to link people to github if they don’t care. So if your interested I can send you the link and we can talk over the app and u can teach what I did wrong so I can fix the errors 
If you already did the auto syntax update you’re going to need to do them manually. They’re probably still syntax errors that Xcode can’t figure out (get used to that). If you get stuck just google “Swift 4 (func name)”. That’ll probably cover 99% of your problems. Be lucky you’re too new to have experienced the joy of updating from Swift 2 to Swift 3
why don't you just work through the errors one at a time? It'll put hair on your chest.
Yeah you definitely sound like you’re going at this with the right attitude 😊 As a little further motivation (if you need any), it sounds like this is the last major hurdle you’re going to have to cross in terms of learning how to program. There’s certainly more to learn (there always is), but the last big thing you need is the confidence to be able to start programming whatever idea that you have, and then everything else just kind of falls into place over time. I wish you the best of luck with it and if you ever need any help with it, please feel free to get in touch 🙂
&gt; it's kinda verbose Compared to? &gt; Not much use outside of Apple ecosystem Of course. It's developed by Apple, for Apple. Yes, I know the Swift community isn't *just* Apple, but let's be real here. Plus, Swift is still a moving target. Swift 3 was very different to Swift 2. Swift 4 was very different to Swift 3. Swift 4.2 has enough major new things in it to make it difficult to go back to Swift 4.1 and prior. Swift 5 will bring even more. More importantly, Swift 5 will bring a stable ABI. This will make Swift less of a moving target, helping non-Apple platform development drum up a bit. I know plenty of projects that have been waiting for ABI stability as a sign of Swift becoming stable, and therefore reliable, overall. &gt; Its package manager sucks It does not. It's just not the same sort of package manager as people are used to. People want ``pip`` or ``npm``; I hope SPM never becomes like that. The only packages anybody ever needs to know about are the ones specific to the current project. If you have your dependencies set up properly in ``Package.swift``, there's no issue. As opposed to the others, littering the place with outdated copies of this or that; packages I don't use anymore remaining in place because I haven't remembered to get rid of them. &gt; I think the community is not really active Then you're not hanging out *in* the community. The official Swift forums; ``#swift-lang``, ``#macdev``, ``#iphonedev``, etc. on Freenode; the numerous Swift servers on Discord, Slack, and so on; not to mention all the websites &gt; 99% of Swift developer employments are iOS/macOS related Is that a surprise? That doesn't stop you starting your own business or creating your own solutions with Swift, though. That's exactly what not only big businesses like IBM and Google have been doing, but also the many smaller developers who come up with fantastic libraries such as Alamofire, PromiseKit, and so on — to bring to Swift what they see as lacking. &gt; Do you guys think Swift has bright future outside of apple ecosystem? I do. Once Swift becomes a bit more stable, and especially once Windows becomes a major supported platform (which I doubt will happen until after more of the Swift reimplementation of Foundation is finished), Swift will take off. We're seeing an appetite for languages with the features that Swift has, and once Swift becomes available on more platforms, we may see more success with it.
I recommend you watch [this video](https://www.youtube.com/watch?v=53zkBvL4ZB4)
So with MVC all you have to do is move anything that is Data or functions that retrieve data to its own file. This would be anything like class/struct definitions, protocols, or any code that is used to make connections to grab data. the view controller’s responsibility is merely to be an intermediary between the UI and the data files you have. So it accesses the functions required to pull the data, but it doesn’t create the functions or contain the data at rest.
ok *now* the optimizer can do that: https://github.com/apple/swift/pull/21933
I'll do my best to work hard and reach my goal. I really appreciate the advice and encouragement. Your offer to help further is very kind of you and I just might if I run into another hurdle. Thanks again and take care! 
Here you go - https://developer.apple.com/programs/whats-included/
Thank you for saying this! I pretty much never want to watch a video unless it for entertainment purposes! 
Honest feedback: video is not the appropriate media for teaching software development.
So those advanced app capabilities are off-limits in Xcode until you pay? Or they just won't function without the account. Thanks for the link though, it's exactly what I was looking for, if only I looked in the most obvious place for it ¯\\\_(ツ)\_/¯
As far as i know the only thing paying gets you is submitting to app store/test flight. Otherwise documentation is free. Http://swift.org its open source software. 
So for functions that come with picker views (like above) or other view protocols, would I move that to a controller file? Would I move my arrays to a model or the controller? That’s the part I’m really confused on
So right now everything is in the controller. The picker code is fine to stay here because it references functionality in your UI. The stuff that you would move to a different file would be the data structures like your ages and genders. Easiest way to think about it would be if you had another screen in your app, what would you still need in the other screen. Ages and Genders are constant across your application im assuming so you want to abstract that away from being confined to a specific screen in your app. 
I have app ideas but don’t have the skills to implement them, instead I am working on “simpler” projects that help me to develop skills. My current projects are focused on REST API, JSON parsing, and Apple Maps and fortunately are applicable to my day job.
I am a computational physicist. We use swift in our lab thanks to the linux port.
Oh no this code 
Name the file the name of the product and the configuration you are using. Set the build configuration to use a particular file based on those variables, and add that file to the app in a build phase. Then when the app runs, it selects the file based on the app name and build configuration. Something like… $(BUNDLE_DISPLAY_NAME) - $(CONFIGURATION).plist You can do the same for your entitlements files like so… $(SRCROOT)/../$(PRODUCT_NAME)/$(PRODUCT_NAME)-$(CONFIGURATION).entitlements In your Build Phases, make sure to have a copy phase to copy the proper file based on the config to the app. In the app, define a macro based on the $(CONFIGURATION) setting to load the proper file, or change the name of the file when copied into the bundle to a standard file name in the copy build phase. 
I know...currently a victim of the "massive view controller" which I'm trying to remedy. 
I kinda see what you're saying. Would the arrays be put into a struct then? And then in the view controller modify the code so that it will display the arrays from the other file? 
You can move your navbar code into a separate viewcontroller for your window. Your window view controller will handle all toolbar actions. I have a repo you can look at if you want
I would love to see that! Send me a PM
Those are only available to paid developers because they require use of Apple’s servers to function, which costs them money. Without a paid account, you can’t enable the entitlements in Xcode. I don’t know off the top of my head whether you can compile code that uses them, but you definitely cannot push a build using them to a device. 
Imagine you were writing this same application for some other type of device that doesn't use UIKit. What code would you need in both applications? In this particular case, that other program would need to know what the allowed ages, genders and countries are as well as what the default age and country should be. So all of that is your Model. Note that you might have multiple model objects for a particular screen just like you have multiple views for a particular screen. So we see that `countries`, `genders` and `ages` are all your "model" as well as the integers that represent the default country and age. You mentioned in a follow-on comment that you are trying to avoid massive view controller. IMHO, the way you do that is by noticing that one screen can contain multiple views and multiple models, but most developers are in the habit of only having one Controller for that screen. Then they wonder why the controller is so big. To avoid massive controllers, I suggest you consider breaking the `Page1VC` up into multiple controllers. Notice how your `Page1VC` is managing all three picker views? You have three views and there different models, yet only one controller managing them all. If you want to get rid of the massive controller problem, write more controllers. This article might help you: http://khanlou.com/2016/02/many-controllers/
Yes. I would use a Struct for the Ages and an enumeration for Genders
US/EU iOS and Android are pretty much the same: https://www.glassdoor.com/Salaries/ios-developer-salary-SRCH_KO0,13.htm https://www.glassdoor.com/Salaries/us-android-developer-salary-SRCH_IL.0,2_IN1_KO3,20.htm https://www.glassdoor.co.uk/Salaries/ios-developer-salary-SRCH_KO0,13.htm https://www.glassdoor.co.uk/Salaries/london-android-developer-salary-SRCH_IL.0,6_IM1035_KO7,24.htm So yeah if you are a fan of Android more then you can go for that, but I'm still feeling that there are a lot more iOS jobs available.
That’s a great explanation. Thinking about what another device might need. And also pointing out there are multiple views in the Page1VC
Change `switch (key, value)` to `switch key`. You're giving the switch statement a tuple... a composite value that includes both `key` and `value`, but your case statements are trying to match it against a single string value. I'm happy to say more if you'd like.
 var ages = ["1 month old", "2 months old", "3 months old", "4 months old", "5 months old", Oh god make it stop.
&gt; Compared to other imperative statically typed languages, I think Swift is actually remarkably concise. Depends on your selection. Compared to anything in the ML family, Swift looks pretty verbose to me.
While cleaning up the data sources themselves is a good idea (especially with the gender; that can be an enum to easily tell selection), I'd personally go the route of a different class managing each picker. So, for instance, a `HospitalCountryPickerDelegate`, which just handles that picker. In its init, it'd build the data source and store it locally. Then each picker is managed in one class, and your view controller just has to deal with selections (which you can send back by making delegates for your classes). For the country, it could be `HospitalCountryPickerSelectionDelegate`, which requires a function `didSelectCountry(_ country: CountryTypeHere)`, and your view controller would conform to that. It would clean up picker management and then your view controller is just responding to picker selections, and it'd be more explicit in the view controller class itself what it's getting as opposed to determining picker selections in a single delegate file.
It's not just that. The problems are too many to list but start with that array. Why hand code that when you can generate it? 
The other option is fetching a word from a json api everyday.
Yes, which is why I specified *imperative* statically typed languages. The functional languages are all pretty concise in comparison, I think. :)
Google the rest of the error, ignoring Apollo
``` let ages = Array(1...24) var ageString { return "\(ages[agePicker.selectedRow(inComponent: 0)]) months old" } ```
What about it ? I’m learning Swift and this is how I’d do it. Is it the way ? var ages: [String] { var returnedArray = [String]() for âge in 1...24 { returnedArray.append(‘’\(âge) month old’’) } return returnedArray } 
Take my upvote 
Why would you do this? Because of the amount of data? (Serious question. Newbie here)
Did you try [https://github.com/apollographql/apollo-ios/issues/412](https://github.com/apollographql/apollo-ios/issues/412) ??
yea no luck
I installed it and build successfully now. Can you try to remove it completely, from Podfile, then from Pod folder, Target Support Files. Add again in Podfile: pod 'Apollo', '\~&gt; 0.9' &amp;#x200B;
I have also made reactive UIKit extensions based on it: https://github.com/kaqu/coconut
&gt; âge Bonjour l'ami !
Héhé saleté d’autocorrect
You stop. People have to start somewhere. OP: This could be an array of integers and where you use ages you could change it to use string interpolation to take a value out of the array and fill it in something like: "\(String(ages[i])) months old" It's been a while since I've written Swift so the syntax might be off but that's the general idea. This method is also better because you could then use NSLocalizedString for multi language support whereas with your current implementation you would not be able to. Lmk if you have any questions! :)
What you might be missing out are push notifications. 
Why not? Handling pluralization right is probably more than one line of code. Not handling it right provides a subpar user experience. This code is trivial to understand and highly unlikely to contain bugs.
Don’t worry! I’m a bit of a beginner myself. Well an enumeration would be safer than using strings to pattern match. The compiler can also be exhaustive if you are using a Switch statement to ensure that all values are accounted for. As far as the struct, it just helps keep things organized. You could also potentially add functionality down the road that would make the code more flexible. For example the ages array could be an array of Int, but you could have a function that returns the specified value plus the “months old” as a string. You could also potentially initialize the value with a smaller or longer set of values instead of the hard coded 1-24. What if you wanted to go from 1-36? You could potentially have an initializer that takes the starting and ending value and adds all values in between to that array
With protocol you can adopt to specific Protocol like ActivityPresentable, in this case you will get bugs only from ActivityPresentable. But in case of base class you will get all of them from BaseViewController. &amp;#x200B; Why protocols are better than inheritance? Assume that you have base class A, next you have B and C which inherit from A, and you have D which need functionality from B and C? we don't have multiple class inheritance in Swift, so in this case you have to create class A' and put inside logic from B and C. &amp;#x200B; With protocols you can compose them in small pieces and add as needed, like this: extension D: B, C { }
It doesn't scale. It's a pain to write. It's a translator nightmare. It takes up unnecessary amount of memory and binary size. Pluralization requires only a single special case, which can be handled solo. 
Point taken. How about using just a var Int for months?
I have also made reactive UIKit extensions based on it: https://github.com/kaqu/coconut how this looks?
Seriously I hate so much developers can't count to 10 in Software development (By that I mean creating easily testable and scalable applications with SOLID principle) I know as Junior you have no idea what I am talking about but seriously it's good to know about this thingy exists. Your question is obviously wrong from the start. What you want to do is to separate the managers/modules/APIs/Components/BlackBoxes/whatever to separate files so you can reuse them somewhere else. It's not about MVC/MVVM/MVP/VIPER whatever. It's about how you approach the app to use the components elsewhere. I will take some functions as an example. Perfect example goes in `func addLogoTitle() {...}` Not that only you would be creating NavigationController in every single ViewController, which super sucks but you will have to copy over and over this function again. Unless you create extension to ViewController with this function, so now every UIViewController subclass will have this function. You can for example create some protocol `CompanyNavigationTitled` or something like that and add default implementation into that. Now you have one less problem to solve. &amp;#x200B; So what goes on? Create separate object for `datePickerDataSource` to ask data for. You can create object called `AgesDataSource` and inside add the protocol implementation, initialise it inside this viewController and then call it from within. Now it's awesomely reusable and you can use it somewhere else for example even if you would add some WatchKit Extension etc. This would be a bit complicated but doesn't matter. &amp;#x200B; I get the thing that you probably don't know how to ask but this question isn't about MVC but about building better reusable components... It's good to think better... &amp;#x200B; As what I did when I realised it's good thing to have reusable components in app is that whenever you write some function ask yourself if you will need it somewhere else and is not specific for the given UI. (Don't overdo it though...) &amp;#x200B;
I highly suggest watching this [https://youtu.be/ujOc3a7Hav0](https://youtu.be/ujOc3a7Hav0)
`(1...10).map { "\($0) months old"}`
&gt;(1...10).map { "\\($0) months old"} :P 
Try it out and see if that fits your needs. You could have an int for the actual month and have a computed property to get you the formatted string
What, exactly, are you trying to do here? I know this is a code example but it doesn't make much sense. Are you just trying to convert a single `Dictionary` into several `Array`? There might be easier methods to do this.
What?
UIKit?
It doesn't work like that, thank heavens :) Apple provides all that for you, as the other posted said: UIKit. It's all quite configurable as well, so no need to keep using the stock look and feel. 
+1 I like when so much of the screen has a video of THEM telling us what to type. What part of programming is helped by looking at the person that telling you what to type? We don't need to see them and we don't need to be told what to type or see all over the Xcode screen.
`import UIKit` is all you need. &gt; buttons, text boxes `UIButton`, `UITextField`? What is so difficult about it?
You want a `Model` struct. As another post said: &gt; we see that countries, genders and ages are all your "model" as well as the integers that represent the default country and age ``` struct Model { let countries: [String] = // values let genders: [String] = // values let ages: [String] = // values let defaultAge: Int = // value let defaultCountry: Int = // value } ``` Then, in your vc, replace all of the original data code with this: ``` let model = Model() ``` The you can access the data using your model.
&gt; (1...10).map { "\($0) months old"} You mean `["1 month old"] + (2...10).map { "\($0) months old"}`
oh shit, Swift got fancy since I last wrote it! This is so cool!
No, I meant `(1...10).map { "\($0) " + ($0 == 1 ? "month" : "months") + " old" }`
You probably want a struct wrapping an enum. ``` struct Configuration { var position: CGPoint = .zero var handler: (CGPoint, Mode) -&gt; () enum Mode: Int { case one = 1, two, ... var vector: (speedX: Int, speedY: Int) { switch self { case .one: return (1, 1) case .two: return (2, 2) case .three: return (3, 3) } } } func move(mode: Mode) { position.x += mode.vector.speedX position.y += mode.vector.speedY handler(position, mode) } } var config = Configuration() { (position: CGPoint, mode: Mode) in // do something } ```
I am working on reactive extensions for UIKit based on Futura and Futura itself (wondering about making Swift NoSQL database 😇) https://github.com/miquido/futura https://github.com/kaqu/coconut
Didn't you make this same post yesterday? If UIKit is not the answer you're looking for you might want to elaborate more. It's a bit of an odd question. 
When they first started automatically bringing in stuff from Objective-C they didn't have the tools to make great translations. Now they can map them fairly well in a way that's both concise and clear. It's certainly an evolution of the language, the philosophy, and the tools. Also, more and more of it is native Swift behind those signatures.
Ah sorry, I realized my mistake. I didn't mean to literally make a Foo; obviously that would use an init. What I was more referring to was the sentence-style function signatures. Maybe a better example would have been: func doThingWithFoo(_ foo: Foo, andBar bar: Bar, inWindow window: Window) {} I just picked a poor example. What I was really talking about was this style of function signatures that have both internal and external parameter names, which allow very descriptive function calls at the call sites.
&gt; func doThingWithFoo(_ foo: Foo, andBar bar: Bar, inWindow window: Window) {} Even that would be a bit simpler: func doThing(with foo: Foo, and bar: Bar, in window: Window) {} However, the use of "with" and "and" is pretty much implied so I wouldn't put it in a signature. I'd rather do: func doThing(foo: Foo, bar: Bar, in window: Window) {} I like the use of "in" because it's descriptive of the purpose of that parameter.
That is unnecessarily complex and verbose. It works, but is hard for a beginner to read.
It burns us! https://www.youtube.com/watch?v=Bjywd6ZTMUQ
You can still do them
You can download the Swift compiler on windows though.
Maybe using `NSScrollView.layer?.borderWidth`?
Well said.
OP asked for honest feedback and my honest feedback is that I'm not going to watch a video to learn programming. If you can't write you can't teach (at least not software development).
Xcode won't let you build with that type of code without the proper entitlements.
&gt; 1 Hmmm, "1 months old"?
I’m trying to dig deeper into Vapor in my free time. I’d love to be able to point my company towards Vapor as an option for building new microservices. I did a small tutorial based on one of my recent projects using Vapor, Docker, Redis, Nguni, and Postgres https://link.medium.com/VP98ntZHDT 
Yes
1. Do not use so many nested `if`s. ``` if (wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &gt; 0.0 { print(wheelScene.wheel.physicsBody?.angularVelocity) if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &lt; 1.0 { wheelScene.wheel.physicsBody?.angularVelocity = 0.0 ``` Just no. You check if the `angularVelocity` is greater than 0. Then you check if it is less then 1. You keep unwrapping optionals. You can look at other responses for how to solve the problem, but I hope to improve your code readability. ``` guard let wheelScene = scene as? WheelScene else { return } let physicsBody = wheelScene.wheel.physicsBody? ?? 0 switch physicsBody.angularVelocity { case 0.0.nextUp ..&lt; 1.0: physicsBody.angularVelocity = 0 case 0: otherVC.callMethod() } ```
Just a note, protocols, classes, enums and structs should all began with a capital letter:, i.e `MethodCaller`
You want: `["1 month old"] + (2...24).map { "\($0) months old"}`
Please comment this to my other posts as well
pod install?
Great read, but how does this scale out? looking at the docker file it looks like the Postgress and Redis instance are unique across all API instances. Shouldn't at the very least, the Redis instance be shared? Am I missing something in the docker config? &amp;#x200B;
The truth about ANY programming language is that it's not so much how great the design is that determines how popular it becomes. It's really an issue of timing. iOS went ObjC because that's what was there and it worked. It's all about the investment in knowledge and code base. I worked at a company that was fully invested in an xBase product back in the DotCom era. Their entire business was built on it and it wasn't supported anymore, so they had to hire a TON of programmers to write everything from scratch. It had nothing to do with how great or bad the language was, it's that it got the job done and they were invested in it. You can call it code lock. When Uber did their conversion to Swift a while back, huge investment, risk, everything, they had the money to do that, not all companies have that money to spend just to switch to another language. Servers, PC's and others have no reason to switch to Swift. Think about all the programs already written in Java, C#, C++, JS, etc... Why switch now? Over the years, it might, but the deeper the code base, the harder it is to get people to switch. This is the same problem sales people have that try to sell software that competes against main stream. Products like MS Office, MS SQL, Oracle, Facebook, Instagram, etc... hard to get a lot of people to drop what they have and jump onto a new product.
Ah good point, I should update the article with those options. Essentially you would just add —scale api=N where N is the number of vapor nodes you want running.
I've played around with Swift and can't seem to figure out how to do layouts with child view controllers on MacOS. It always devolves into me locking down the interface to one size. Is it because I heavly used table views or is is something different when using child view controllers? Do I have to connect something up so layouts feel natural?
Then you're unnecessarily storing " months old" 24 times rather than once.
Maybe you could mention lazy initialisation to improve your answer :) 
I'm trying to learn Swift from scratch (not having done any dev for the past 10 years) and trying to do it geared toward MacOS and NOT toward iOS. It would seem most if to the vast majority of articles just assume Swift == iOS. It's kind of a pain.
Fixed 
This just goes from a Massive View Controller to a Massive Struct. ``Country``, ``Gender``, and ``Ages`` could be separate enums and/or structs.
I need a little more information. Do you just need to check the adjacent square? Or would you also need to check the adjacent square of an adjacent square? Either way, you’ll need an array of arrays as your backing data structure. Then you iterate through each item and check the top left right and bottom values by incrementing or decrementing each the respective row and column (be sure to check for accidentally doing an index out of bounds). 
Thats what I just started programming -- or attempting. Multidimensional arrays. I need to check the adjacent square of an adjacent square as well.... This is going to be tricky. Its so weird. I was able to quickly randomly generate the entire board but have no way to capture what I generated. So I have to basically look at the output and try to figure out what I created. Man never did a multi - array for a personal project. And always avoided them when I used to work. Ok thanks! Well at least I know this is the correct path. 
Ah okay so it will be a harder implementation because you’ll have to use recursion to solve it. Either way though it’s an interesting problem and you should definitely give it a shot! Spend some time going through that link I sent — the way they traverse through the array is exactly how you should be doing it. It will just take some time to get comfortable but try writing out step by step what’s happening in their solution
I'm not familiar with the Mac OS side of things, but I'm not even talking about "view" controllers necessarily. A controller is any object who's primary responsibility is to coordinate between view(s) and model(s). An object doesn't have to derive from NS or UI ViewController in order to be a controller.
It is actually to generate a Ken Ken / Calcudoku board randomly. I figured it wasn't going to be easy. But once this step is complete. The rest is busy work. Pretty cool that you can randomly generate these Japanese Puzzle games. Basically complete sites like Brain Bashers and Conceptis Logic puzzles can all be generated programatically. Its just not easy. Fun challenge! Thanks again! 
thanks so much!!
it was for a coding exercise. The goal was to take the values from the `Dictionary` , using a switch statement, and add them to their corresponding arrays based on capital location. &amp;#x200B;
Look man I have no idea what a wheel scene really is. Try the code in the repl and it demonstrates delegation. ‘A way for one view controller to talk to another’. What more do you want me to do for you? Do all the work for you? Your setup is all kinds of strange and fundamentally broken. Dont look for a free education on reddit. And dont be an asshole to people trying to help you.
You can apply optimizations such as map, but this way you at least have a separate entity for data. 
Yes! This is the kind of thing I was talking about when I mentioned to make more controllers. This object that you are calling a Delegate is actually a Controller because it is connecting the model (the countries array) with the view (the picker controller.) 
As someone who has localized a lot of apps to a lot of different languages. You are making some dangerous assumptions here. There are languages that require several different plural forms depending on the count value, it's not just 1 or not 1. For e.g. * Arabic &amp; Breton have one, two, few, many and other forms * Belarusian has one, few, many and other * Bosnian &amp; Croatian have one, few and other * Cornish has one, two and other Language has a nasty habit of not following rules that are easy for a computer algorithm to deal with. :-) A translator would much rather see whole sentences written out than some programmers guess at what the translator doesn't need to know. :-)
So if it goes to 1000 lines do you write an array of 1000 choices? How about 100k? 1m? 
This is a good article since it does some server side examples besides the basic hello world tutorial found everywhere. Also the docker part is highly valuable to try it out with personal projects. I will definitely try this.
Cool thanks for answering that
Ahh that explains it. It didn't look like anything I'd do in the real world, I thought it might be a learning exercise.
Just finished making a static-site generator that is now powering my blog &amp; site: [http://sakunlabs.com/blog/making\_the\_blog](http://sakunlabs.com/blog/making_the_blog)
:-) If you're showing the user a picker with a million choices, you have far worse problems than optimizing an array of strings will fix.
What a load of bs. Different mediums provide different insight.
So… where exactly *do* you see that claim on swift.org? And where are they blaming the language?
What's something you're passionate about or love doing? Maybe jewelry, playing games, football, etc. Break that down into what you think can make people's lives easier but in app form. Like if you're really into downloading and trying out new calendar apps, why not sit down and think of ways you can make it better? Could be better features, better color schemes, very simplified version calendar. After sketching out each screen (ie sign in, onboarding, different features, settings), start coding it in Xcode. The best way to learn is through passion projects. They are what will shine in your portfolio.
Thanks a bunch for the response. This should be good for reference.
I think you want I look into `inputAccessoryView`: https://developer.apple.com/library/archive/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/InputViews/InputViews.html
You need an audio tap to get an array of buffers of samples. [This tutorial](https://www.raywenderlich.com/5154-avaudioengine-tutorial-for-ios-getting-started) is a good start, have a look at the bit where he measures volume level.
This pod will do the job [IQKeyboardManager](https://github.com/hackiftekhar/IQKeyboardManager) 
You can also check this [demo project](https://github.com/GoogleCloudPlatform/ios-docs-samples/tree/master/speech/Objective-C) which uses audio recording.
&gt; iOS and Mac OS are no longer a big concern ?
I really like [this](https://i.imgur.com/7QA9FV7.jpg) implementation for setting numerical values within a table view of settings. I’ve not yet figured out how to it’s been done, any ideas?
I edited the response, hopefully this makes it more useful and easier to understand.
Wow. This was really difficult (at least for me) By far the most difficult thing I ever programmed. I had to hand write out the entire 2 dimensional array on a whiteboard. Then hand write it out on the computer. Then put it into a loop. And then I was only able to capture the number of islands. And then with the number of islands I was able to extrapolate the actual islands through some computer shenanigans. Apparently, this is a similar question they ask top level coders at Google (I came across that in my research) Which the applicants are expected to be able to solve while sitting in a room at a desk! No way.... Well, anyway, I got it. I am proud. But these 2 dimensional arrays are are akin to a level of hell in Dantes Inferno, I am just unsure which level.
What's the best paid or free guide/book/resource for learning Swift and macOS development? I've only found iOS ones... not against iOS but I want to build macOS apps for myself and maybe in the future for the public - that's my motivation. I'm an engineer and already know programming by the way.
Sounds like great news. What are the potential uses for Watson in an iOS app?
https://github.com/watson-developer-cloud/swift-sdk/blob/master/README.md Has all the uses. The personality stuff is fascinating, would like to see it applied!
&gt; Is it an alternative to MLKit? If you mean Google’s MLKit then yeah
Just started to learn Swift this month and whole iOS development.
Sorry meant Core ML
Like /u/michael-g-miles mentioned, the [README](https://github.com/watson-developer-cloud/swift-sdk) has a ton of information about the SDK, including what services it supports and how to use it. There's no specific machine learning service that the SDK supports, although Visual Recognition can be used in conjunction with your CoreML models. If you want to really see what Watson is capable of, check out the [developer website](https://www.ibm.com/watson/developer/). That site has tons of information on what products are available and some of their popular use cases. For a concrete example, I recently started working on a translator app. It uses Speech to Text to record the user speaking, Language Translator to translate that speech to another language, and then Text to Speech to read aloud the translation. 
Like /u/michael-g-miles mentioned, the README has a ton of information about the SDK, including what services it supports and how to use it. There's no specific machine learning service that the SDK supports, although Visual Recognition can be used in conjunction with your CoreML models. If you want to really see what Watson is capable of, check out the [developer website](https://www.ibm.com/watson/developer/). That site has tons of information on what products are available and some of their popular use cases. For a concrete example, I recently started working on a translator app. It uses Speech to Text to record the user speaking, Language Translator to translate that speech to another language, and then Text to Speech to read aloud the translation. 
I just go out of my way now to scour any Medium links that are posted on reddit 😂
In that case based on a quick skim, no, this is cloud based stuff and CoreML is on device.
Fuck it
Lmao
You want scale aspect fit, not scale aspect fill. You can just create an equal height constraint with a 0.6 multiplier for the views above/blow.
Thanks again, but can I ask why there's no use of SpriteKit and only Core Graphics? I thought SK was widely used among these types of projects.
You *do* realize that this is r/swift, right?
 UserDefaults.standard.synchronize() Really? That was deprecated back in iOS 8.
Yep. You're point?
You can use SpriteKit instead. That was just for an example.
Thank you! I finally figured out how to get separate points on the map for the business plus user location. My biggest issue now is trying to figure out how to add in callouts (popup bubbles) for each location as well. Being new to this is difficult. Im sure my code isn't the best at this point either.
Oh okay. If I could get your opinion, would 
This subreddit is more geared towards questions about programming in Swift, not toward whether or not your app is going to get banned. You'd be better off asking on some kind of copyright/game legal advice subreddit, or perhaps /r/iOSProgramming.
If I recall correctly, the callout view is set on the annotation view via the `detailCalloutAccessoryView` property. So you probably would set the view in the `mapView(_:viewFor:)` delegate method. As I said, I'm happy to help however I can. I just don't usually check Reddit during business hours. (It can be too distracting sometimes).
This post has everything except the video.
This video describes how to represent neural networks with matrices and you can use Apple's Metal Performance Shaders framework to create matrices in Swift to perform the computations.
Thanks for letting me know!
Not according to the docs: https://developer.apple.com/documentation/foundation/userdefaults/1414005-synchronize
Thanks :) However, it does not make image width to fill all spaces, it does leave white space... I need image background to fill all width of screen. Image is in pdf, so it should scale well... How to do that with aspect fit?
Lets say you are looking at cell (x/y). It has four adjacent cells (if you don't consider diagonal to be adjacent) at these coordinates: (x-1/y), (x+1/y), (x, y-1), (x, y+1). So now just check those coordinates. Eg. `if grid[x][y] == grid[x-1][y] { // the value to the left is the same! }` Of course, no need to take care to not access values that don't exist in the grid, i.e. are out of bounds. If you need to find whole areas of adjacent values, that's a little more tricky. The flood fill algorithm (https://en.wikipedia.org/wiki/Flood_fill) seems to be what you need.
**Flood fill** Flood fill, also called seed fill, is an algorithm that determines the area connected to a given node in a multi-dimensional array. It is used in the "bucket" fill tool of paint programs to fill connected, similarly-colored areas with a different color, and in games such as Go and Minesweeper for determining which pieces are cleared. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Flood fill, also called seed fill, is an algorithm that determines the area connected to a given node in a multi-dimensional array. It is used in the "bucket" fill tool of paint programs to fill connected, similarly-colored areas with a different color, and in games such as Go and Minesweeper for determining which pieces are cleared.
The app delegate is extremely common so, yes, you'll remember it after a few apps. Also, if you type a dot and pause, Xcode will pop up a list of suggestions so in practice you'll be reminded and just type a few characters and tab to complete. There is a learning curve with all frameworks but in time you'll find that the same things are used over and over and will sink in. There's nothing wrong with looking at other projects to figure out the boiler plate code.
Thanks for the feedback. So how do you deal with more exotic code? Boiler plates, Stack Overflow? I took a peek at the Apple docs but they tend to confuse me even more. 
Hey fellow. I am doing this course too. It is not my first language and yes, i feel the same: overwhelmed with all features and how they can be used. What i've learned before is that you don't have to remember all the syntax details of the particular language, that what would IDE should do for you. But you have to: 1. Understand features\\modules\\libraries (know they exist, know what they can do), like UIKit, SpriteKit, ARKit, whatever you need. 2. Learn to code idiomatically (in the pythonic way, in the swifty way, using special features of the language.) I wish you best of luck. 
it is called experience. You will get some and things will come naturally. Unless you give up before. 
First browse through the documentation https://developer.apple.com/documentation/ I then search for things like "dismiss modal view controller swift 4" and yes you'll typically find an answer on: * Stack Overflow * https://www.raywenderlich.com * https://www.hackingwithswift.com/example-code Apple has some good sample code https://developer.apple.com/download/more/ but the problem right now is there's a lot of old swift code out there and you need to find the swift 4.2 stuff. Sample apps at the most recent WWDCs is always a gold mine for new APIs. Don't forget the Apple books, "The swift programming language" and "Using swift with cocoa and Objective C". 
Stumbled upon hackingwithswift (obviously from this sub ;). Sounds like a great resource. Will check it out once I finally get through the course. 
I’m subscribed to your channel and amazed by how short and concise your explanations are. Thanks for your work!
No intention of giving up, that’s why I’m asking. 
Hey! At the moment im working on some code for a company I work with doing a quiz game and I was wondering if anyone knew the sort of command I need to use to make my array shuffle and then pick out questions at random with out repeating???? If anyone can help thank you 
At the start you're gonna be doing a lot of Googling. Then you'll remember it as time goes on. And you'll still be Googling all day.
CocoaPods is not relevant since iOS8, only Carthage. For anything asynchronous, use RxSwift. Like [https://github.com/Polidea/RxBluetoothKit](https://github.com/Polidea/RxBluetoothKit), RxDataSources for tables etc. Possibly Swinject for DI. &amp;#x200B;
If you just want to draw sprites use SpriteKit. If you want to do regular ui stuff study up on interface builder and the view lifecycle. Conceptually, the os is doing a lot and asking you for things when it needs which felt backwards after doing windows development, but it makes more sense once you get it.
I need to check this!!
Sorry, I was exaggerating for humorous effect in my title. As I explained in the body of my post, I'm trying to do some things with the window and the view that I can't figure out. Thanks, peace.
SpriteKit view can be implemented in a uiviewcontroller. You can probably google it.
UIViewController requires a storyboard. I'm trying to figure out how to do it with those trappings. Thanks, peace
Why isn’t CocoaPods relevant? I’ve heard of Carthage but never really looked into it since CocoaPods did the job I wanted and it’s what I started using first.
I’ve learned to like the storyboard, at first I was annoyed but now I feel it’s neater. I’m pretty sure everything can be done without it though.
Hey, I have to thank you: you pushed me in the right direction. UIviewController was the key: it needs a storyboard. So now I know what to google for: a window without a storyboard. In five seconds, I found articles on how to do it. Thanks much!
You do it in the view(s) of a window. The window gets created first. Look for sample code on Apple's dev site.
It doesn't need a storyboard, but it's easier with one.
Carthage is almost zero configuration, and framework is linked dynamically, i.e. if you have several apps using it installed, they share the framework. CocoaPods is too much overkill both in config and in static linking.
Damn, that stuff is only for iOS. Anyway, I could live with the storyboard if I could just figure out how to do all those other things programmatically. Cheers
The problem is that I don't know what to look for. Do what in the views of a window? I know how to draw sprites. My total was intended to be humor. I am trying to figure out how to control the window's size and position on the screen, and to know where the scene should look to get usable information about the size of the parent window. Thanks, peace
I wasn’t aware of the dynamic linking feature, but it sounds interesting. I’m guessing that would result in smaller app sizes?
Storyboards are not required. They are good for beginners though 
Nop, they are copied into bundle anyway
Lol me too :) Which API are you using? The official one? Also quick question: how do you parse html to NSAttributedString? I'm having trouble with performance and I am looking around for 3rd party libraries to be able to do it on a background thread.
Sure? I had the idea (which I did not verify for a while) that if multiple apps use the same version of framework, it will be shared. At least that was advertised back in the day when Carthage was introduced.
It's basic programming, once you get used to it you'll remember how to do this and do best practices (accessing variables directly from the delegate for example is not a good idea) but good enough if you're learning.
\`CoreGraphics\` is not for gaming, but rendering images and pdfs. The only reason I put it there was so that I could use \`CGFloat\` in a playground. \`SpriteKit\` imports \`CoreGraphics\` for you. &amp;#x200B; \&gt; very simple iOS game \`SpriteKit\` is a little overkill for a simple game. You might want to look at \`UIDynamicAnimator\`.
You can usually find these classes for $10 from time to time. I took this MacOS class and it was pretty good. I'd stop trying to piece together knowledge from reddit/stack. https://www.udemy.com/macbookapps/learn/v4/overview 
Thanks for your suggestion! Going to look into that as well. 
All one would have to do is add the libraries in the build settings, create a wrapper in Objective c, and make calls to C++ from Swift. 
Thanks, I was hoping not to have to take a class just to figure out how to position a window on the screen. Is it really that hard? Anyway, thanks for the input, cheers
Absolutely, in fact even Swift libraries are copied, since it’s not ABI stable yet and system can’t provide one for arbitrary build configuration/system version pair.
You can control window position/size via NSWindow's \`frame\` property. \`myWindow.frame = CGRect(....)\` If you have access to the view programmatically, you can reach its window by calling \`myView.window\`. For example, if you are in a view controller, it would be \`self.view.window\` Application's key window can always be queried anywhere from the code by calling \`'NSApplication.shared.keyWindow\` and the list of windows would be \`NSApplication.shared.windows\` None of this requires storyboards and can be called from code. &amp;#x200B; You can read more about NSWindow and NSApplication and much more here. Apple's docs are pretty good. [https://developer.apple.com/documentation/appkit/nswindow](https://developer.apple.com/documentation/appkit/nswindow) [https://developer.apple.com/documentation/appkit/nsapplication](https://developer.apple.com/documentation/appkit/nsapplication)
Damn man, this is a super simple but impressive video. No "Hey ... Ramble for 15 minutes" Subbed instantly. This is what Youtube is for.
You should add Carthage support. It requires you to have a project file with a shared framework scheme.
&gt; What is the difference between swift-sh and Command Line Tool? It appears that swift-sh is just a tool that creates a package file for you and builds the executable so you don't have to. It doesn't appear to be anything particularly special, just a nice bit of automation, though I'm not sure how often this use case actually comes up. &gt; And is this significant in the evolution of Swift? Doubtful. Unless the swift team decide to add this functionality to the swift command-line tool, but I think they're more concerned with ironing out issues with the package system right now. But even there, it wouldn't affect the language, just a slight bump in tooling.
Of course it's normal, the view is inside the window, so it has to finish loading before the window. It's not much more complicated than iOS,: ``` let vc = MyViewController() let window = NSWindow(contentViewController: vc) let wc = NSWindowController(window: window) window.makeKeyAndOrderFront(nil) ``` The main difference is that the window will allow resizing based on your layout constraints. (So having equal constraint for height and width means no resizing)
Storyboards are bad practice though. They combine views with navigation and make you use more string based APIs with the prepareForSeque and instantiateViewControllerWithIdentifier methods and don't allow for custom initializers. If you want to use interface builder, I'd recommend using xib files as you can write custom initializers for your VCs and then call super.init(nibName: nil, bundle: nil) (assming your xib file has the same name as the class, otherwise you have to specify it instead of passing nil for the name)
Using the "official" one [https://github.com/HackerNews/API](https://github.com/HackerNews/API). I found a snippet of this, which seemed to work for exactly your problem: [https://gist.github.com/rhlsthrm/bcf464dd473fe6fa203f275af721e5e6](https://gist.github.com/rhlsthrm/bcf464dd473fe6fa203f275af721e5e6)
&gt;Storyboards are bad practice though No they aren't. They are different practice. If you don't like them, that's fine. But to say that something you don't like is bad practice is quite rude. 
Could you please elaborate why the reasons I specified don't make them bad practice?
Me too!
Using your AppDelegate as a storage for global variables is a bad practice. I know that a lot of tutorials don't want to talk about architecture and just want to show 1 specific use case for 1 specific framework but don't let that confuse you.
Nothing.
i know what that does but i don't know it by heart. meaning i use the references and autocomplete. i learn concepts and features, not specific names of methods. methods i use often get ingrained in my memory but i can't remember almost everything. i just know there is a way to do X and i know how to look for it when i need it.
Where do you live? What kind of dollars are we talking about?
Bitter truth, but thanks for the info.
Sounds like a good way. This object oriented stuff is new to me so I was thinking it was just out of my league. Good to know there are others out there that don’t know everything by heart. 
You should be aware of CF_SWIFT_NAME which let’s you skip objective c altogether. https://developer.apple.com/documentation/swift/objective-c_and_c_code_customization/customizing_your_c_code_for_swift
It's like learning a human language – at first you struggle with the basics of letters and words, but as you get more experience, those things become easy and sentences and paragraphs become the next challenge. Then as you get even more experience, you can do those things without thinking. You just need to keep going, you'll be doing things like that without much effort pretty quickly. 
Thanks! Appreciate the motivational words!
I believe 90% of companies I've dealt with use Docusign.
no offense, but I really don't understand the point of these 'frameworks'.
That looks cool. Does that work for c++ though? It looks to me like only c
You wrap your CPP in a C API. I know, not great but a nice alternative to objective-c. I kinda like it.
Why would I chose this over another more mature pattern like MVVM?
Fair enough. I ended up essentially wrapping the cpp in objective-c &gt; As of now, Swift has no way to directly interface with C++. Therefore, we need an intermediary and those intermediaries can either be code in C or Objective-C. While C has some simplicity to it, in this case, I went with Objective-C. You can read about it in [the other blog post](https://learningswift.brightdigit.com/objective-c-and-swift-being-friendly/). Maybe next time I’ll look into wrapping the cpp in c instead.
You'll never remember it all, that's why we have documentation. 
These things are mostly for people coming from other stacks where they may not be used to Apple's own implementation. I agree that going with Apple's approach is the way to go, but at the same time, I feel this sub has a strong gatekeeping vibe to it.
Okay, thanks for the info!
&gt; Recently my computer has gotten to the point where Xcode freezes constantly so I have to get something new. Maybe this is a silly question, but when's the last time you fully wiped the drive and installed macOS fresh (no "upgrade in place")? I wipe my laptop once a year, and my 2012 MBP was able to run everything great until I replaced it last year (due to a good deal — not because I felt like I needed to). I'd try that before you skip straight to buying a whole new device.
Would you consider a used/refurbished 2016-2018 macbook pro? I use my 2016 Macbook Pro 13inch for everything (xCode, VS Code, Steam, Chrome, iTunes, Postman, etc), and they go used for \~$900-$1200. And then you can use a keyboard/mouse/monitor for home/desk use if you desire too. 
Any good source to deep into MVVM for iOS development? Thanks.
[removed]
I know you might think “that’s iOS not Mac OS”, but if you check out some videos on YouTube about “building your first iOS app in swift” I promise you will then understand what the UI jargon is all about. The thing is that there is a serious lack of counterparts to these tutorial videos for Mac OS development 
Use `CoreGraphics`. Look into the apple documentation and blog post for `UIBexierPath`. Override the `touchesBegan`, `touchesMoved` and the like on a `UIGestureRecognizerSubclass`. Then, add the recognizer to the view. There are plenty of tutorials on each of these, but I hope to tell you how it all fits together.
I felt this way once. I just kept moving, hit at least 100 blocks. I can now write Swift code that I would not even recognize 1 year ago when I started learning). If I looked back on code from then, it would be so messy. The point being: you will learn this. Not from stack overflow, not from google, but from your brain. You have to figure out new ways to solve a problem, and the. you can move on to the next problem. Sometimes you have to resort to trial and error. That is ok. Just keep persevering. This as a pointer, you shouldn't store variables in the app's delegate unless you are using `CoreData`. 
Do you want your image to be stretched? Is that ok? Then you can just use fill. Otherwise, attach the xml version of the storyboard to the post.
1. Make a matrix. The Swift Programing Guide provides an example implementation. 2. Just check if the surrounding squares match. (x,y == x-1,y-1 == x+1,y-1, ...)
I have a challenge for you: Write an algorithm that converts this: ``` 5*2^(3+4) ``` into: ``` 43+2^5* ``` And then write another program that uses a stack to evaluate. If you are unfamiliar and really need help, search up `Reverse Polish Notation`, `Shunting Yards` and/or `Stack Operations`. Don't cheat, though.
I do not think so. Look into `NotificationCenter` and you might have your answer.
This is the first time I literally “liked and subscribed” after watching a C.S. video 👍
This was incredibly confusing. I also need to grab the location of the squares , so just getting the number of islands isn't good enough. And these algorithms, need additional steps to capture the squares. So you have to run the algorithm and then do another whole set of stuff to get the actual squares. I am still working on it, but am now confident I can solve it. I took a chance, programming a solution hoping I could get the data needed. Somehow I was able to generate something where I could find the specific location of all islands with exactly three or more units. And another set for all islands with exactly two units. It is a lot of string manipulation and arrays but it works consistently. The other thing I had to realize. It is better to NOT generate a perfect puzzle, but rather generate a near perfect puzzle, and if it is a bad puzzle just keep generating until a good one appears. Best of luck! This is really testing my abilities and I am liking it. Challenges are good for the mind. 
You can build your own budget hackintosh for half the price, the only downside is sometimes os upgrades break stuff and you have to spend sometime to investigate but otherwise it’s infinitely better than the alternative 
canadian probably
Thanks for the guide - it would be more efficient to use a CABasicAnimation for the image rotation rather than having multiple images. 
&gt; Do what in the views of a window? Everything view and draw related. If you want to move or reposition the window, look into the window classes, NSWindow and NSWindowDelegate in particular. iOS is different than MacOS in this respect. https://developer.apple.com/documentation/appkit/windows_panels_and_screens?language=objc https://developer.apple.com/documentation/appkit/nswindow https://developer.apple.com/documentation/appkit/nswindow/1419658-setframetopleftpoint?language=objc Does that help? 
That's great, what resources are you using or courses? :D
It’s just a simple way I separate and organize. Thought I would share.
Good call, thanks for suggesting!
It’s still MVC just help organize a bit
I have been an Apple dev for a while, and I try not to fight the frameworks, more augment them to help me keep things tidy
Chris Lattner was talking to the author on Twitter about ways to integrate this functionality more correctly into Swift itself. I would expect to see a proposal at some point. Many people want the ability for the interpreter to support a global package repository for quick scripting a la python's \`/usr/local/lib/python3.7/site-packages/somelib\` and \`import somelib\`. 
Apple official document
Apple docs should be your first reference when you want to know how something works. Stack Overflow is where you go when the docs can’t help. https://www.raywenderlich.com is where you go for tutorials.
I know you want to make a game but are you married to learn swift? Might I suggested using Unity, which can build games pretty nicely and you get to learn C# (which is a pretty common for Microsoft stack companies).
Have you even looked at the faq here or on /r/iOSProgramming 
Well for some odd reason I understood Swift would be the way to go. I just want to build something basic like snake, Tetris, nothing like Asphalt 8 or Clash of clans haha.
Just please don’t let it turn into a giant clusterfuck like python’s packages…
I will check them out, Appreciate it!
All? Good luck. Do the exercises over and over. Then do it again. Do more. Make it part of what you do. It'll stick after time.
&gt; this method is unnecessary and shouldn't be used Do these words have some other meaning I'm not aware of? This sounds pretty darned deprecated to me.
If you are not attached to swift and just want to play around with with sprites you might want to look at unity. It’s much better for learning, is cross platform and is used more for games than swift. It has a GUI that you can get a lot done with as well.
Is your goal to write a tool for your research, or to use Swift? Swift can be powerful but it doesn't sound like that's a useful kind of power for your work. How about some JavaScript in an HTML file with Canvas or SVG? That might be a lot easier for the things you're doing. Not every program has to be written in Swift.
Swift is extremely useful for what I'm doing. My research is already going really well. The only problem is I can't find my way through the forest of windows and views to do simple things like positioning the app window.
Yeah, the problem is its too slow. And even worse, you can’t do the html parsing on a background thread as per the Apple documentation. I’m looking at some 3rd party libraries now: DTCoreText and Texture. 
Thanks for the feedback!
Will do, cheers!
Because it suits you better than MVVM? Not everyone sees the need for a view model layer... but subdividing the "View" layer into more defined roles (navigation, presentation, business logic) is definitely not a bad idea. Not saying you should pick this over MVVM... but there are dozens of architectures out there, this is just one more proposition; find one that works for you and go with it ¯\_(ツ)\_/¯
Someone thought they had a neat way of organizing their codebase, by sticking mostly to the MVC pattern but by further dividing the View layer into more defined roles (kinda like MVC + Coordinator pattern is doing). That person apparently thought that this template could help others and decided to share it. My guess is that, that's the entire point of this 'framework'... 
Why don’t you upgrade to ssd and add ram? My brother just did this on a 2011 for the same reason as you. Spent less than $200 and he’s good to go. Only con is the last supported os is high Sierra, but still runs latest Xcode. Will probably last him at least another year. 
Thanks for subscribing to the channel and I’m glad you like the content.
Thanks, I appreciate that.
Thanks for this great feedback. And thanks for supporting the channel!
They're just opinions about how to make software. Apple has had a lot of them over the years, like HIToolbox, Carbon, Cocoa, and Cocoa Touch. No harm in thinking about new ways!
The new MB Air 8/256 is performing surprisingly well for iOS development, and its keyboard is far superior to that of MB Pro 2016/2017 (I am using both now) and USB-C cables click in place and do not fall out as they do on MBP. For design, the new iPad with Pencil support works just fine, I could not find any single reason to pay for an iPad Pro. If desktop is an option, then Mac Mini 2012 (with Mojave support) or later is also perfect.
Are you doing this on main thread? Make drawings on a background thread instead and then just update UI on main thread. I use these helper methods in my apps. static func runAsyncMain(_ block: @escaping () -&gt; Void) { DispatchQueue.main.async { block() } } static func runAsyncBackAndAsyncMain(background: @escaping () -&gt; Void, main: @escaping () -&gt; Void) { DispatchQueue.global().async { // Background thread background() // And on main runAsyncMain(main) } } &amp;#x200B;
Yes I am. It says for updating my UIImage I need to run on the main thread. I will note this. After the app is running for say 10 seconds, it runs very fast. So I'm not sure what is being cached in memory for the app to run fast like that. I know users will want amazing speed up front though, which is what I'm trying to solve.
1) Modify your drawing function with new input parameter `func addFaceLandmarksToImage(_ face: VNFaceObservation, inputImage: UIImage) -&gt; UIImage` 2) Then make something like this (I'll use above helper methods) private func updateFacesDrawing() { var toUpdateImage = YourImageView.image! Helper.runAsyncBackAndAsyncMain(background: { // This will be run on background thread // addFaceLandmarksToImage must return updated/drawn UIImage toUpdateImage = addFaceLandmarksToImage(yourFaceData, inputImage: toUpdateImage) }) { // This will be run on main/UI thread self.YourImageView.image = toUpdateImage } } 3) Do NOT forget **to release** graphics context inside `addFaceLandmarksToImage` method &amp;#x200B;
YouTube, stackoverflow, cs139p, Apple official book and basic knowledge of C++
Thanks! I looked over the other posts in your blog and they're great! Simple and straight to the point. Awesome!
let appearance = UILabel.appearance() appearance.font = UIFont.preferredFont(forTextStyle: .body) appearance.adjustsFontForContentSizeCategory = true &amp;#x200B; Add these lines to your AppDelegate.
just use `lbl.font = UIFont.preferredFont(forTextStyle: .body)` if you go to settings and change the font size, the labels with adjust automatically.
It will apply font changes only after app restart.
&gt;adjustsFontForContentSizeCategory You are right! 👍🏻 You need: `lbl.font = UIFont.preferredFont(forTextStyle: .body)` `lbl.adjustsFontForContentSizeCategory = true` &amp;#x200B; I always have the adjustForContentSizeCategory part in a UILabel-Extension `extension UILabel {` `open override func awakeFromNib() {` `super.awakeFromNib()` `adjustsFontForContentSizeCategory = true` `}` `}`
I'm working through this right now, and it is by far the best tutorial series I've read on any topic: https://www.hackingwithswift.com/read (I am a software engineer already, but this is also aimed at beginners)
I agree - but you don't even need `CABasicAnimation`, just do `imageView.transform = CGAffineTransform(rotationAngle: someAngle)` - it's animatable, too.
That sounds interesting, do you happened to have a link to this conversation because I cannot find it?
Important bit that the blog post should probably mention: `UIRefreshControl` is a thing. If you don't want to customise the look of your loading indicator, you get the iOS default pull to refresh animation almost for free using that.
Is there some reason you must draw your lines into the original image? I guess you need this if you want to export the face with the landmarks as an image, but if you just want to display the landmarks in your app, I'd suggest just adding a separate view that displays the landmarks on top of the image view. (Hint: Look into `CAShapeLayer`, you can directly display a path in a similar way to what you already do, and it's super fast and even animatable).
You need to let auto layout compute the height of the image view based on the image it displays. So you just give it constraints for top, left, right, but not height. If you set the image in code, interface builder will display an error that you're lacking constraints, but that sorts itself out once an image is set. To get rid of the error, add a placeholder intrinsic content size in interface builder. Autolayout will compute the height of the image view based on the image it displays, such that the aspect ratio will match. Now, the content mode won't matter much, aspect fit, aspect fill and fill will all do the same thing. For the second view with 60% height, /u/Cyberbeni is correct. 
Thanks I'll try it out
At one point we’ll have more Swift books than Swift apps
u/twostraws
I did it with image successfully. However my top layout keeps failing. I need to increase its size dynamically, but I need to set some height in order to create constraints successfully. I tried setting height &gt;=100 but it creates ambiguity..
I read it and liked it. I've found writing tests in iOS/Swift much harder than it was when I was a Ruby developer but the book helped overcome some of those hurdles.
&gt; I need to increase its size dynamically How? Usually, you let auto layout do the job for you. Eg., if it's a label with variable text: just don't set a height constraint on the label, and let it compute the height based on the contents. If you really need to compute the height in code, I'd add a height constraint with some default constant (eg. 100), then add an outlet for the constraint in your controller (like you do for views), and then set it's value in code (e.g. `thatConstraint.constant = 123`).
It’s ok, 90% are outdated with every new update, and the remaining 10% are shit if they’re not outdated after each new release. 
I am using alura's course. https://cursos.alura.com.br/formacao-ios Its only in portuguese.
I got a refurbished mid 2012 15in MBPro with 16gb ram and 128gb SSD for 1000$. I haven’t tested it on anything too intense/demanding but it seems more than adequate so far. I find it hard to believe that a 3000$+ machine is really necessary for Xcode development in any capacity
I’m just going through this book now as I’ve never done TDD. About 1/4 of the way through. So far it’s been helpful and clear for the most part, but the most important thing is to actually sit down and write tests for your own stuff, make mistakes and then fix.
Solution: seek another career if you want to write bug free code. 
I hope this counts. I'm still learning finished Project 1 (Storm Viewer) in "Hacking With Swift" and am currently working on Project 2 (Guess The Flag). Excited to learn the ins-and-outs of Swift and iOS programming with the hopes of landing a job as an iOS developer.
The concern I have is that this is a $40 book for testing Swift. I'm not saying that testing Swift is a bad thing, but I question if it really justifies a $40 book. You can take any part of iOS programming and make it into a book, like mastering Xcode, mastering Core Data, Table Views, debugging etc... But I'd question if each of these should be their own book or should they be part of one book. Back in the day, BNR had one size able book that covered quite a bit all in one book. If testing is one book alone, how many books would you need to cover all the stuff you can do in iOS programming?
Without having read the book, I presume his book goes into deeper detail than say a chapter in a overall iOS development book would? Some people like to focus on one subject and go in depth. But like I said, I haven’t read the book so I probably shouldn’t comment. 
Well it is on of those "advanced" topics that tends to get on one of those brief overview chapters in many books, if its included at all. And it is something that many iOS teams seem to be particularly bad at, though that seems to be improving some in recent years fortunately.
True. I was imagining that UX might provide something more complex than a spinner where all you need is to rotate it. With the image approach it can be ANYTHING they give you.
Thank you so much!
Bought it when it came out, it is a really nice book for testing beginners. Good luck for the giveaway.
Ah, I see - yeah, that would make sense for custom loading animations. Thanks for clarifying!
I would recommend [Hacking with macOS](https://www.hackingwithswift.com/store/hacking-with-macos) for learning the macOS specifics and the [Swift documentation](https://swift.org/documentation/) for learning swift since you already have a programming background.
I'm still using a 2012 MBP and Xcode works just fine. 
Just to be sure, are you on Mojave with the most recent Xcode? (I figure the answer is "yes" but I wanna double-check for OP.)
Mojave 10.14.2 Macbook Pro Mid-2012 (w/ 16GB Ram) Xcode 10.1
still no success. I was wrong... your solution also did not worked. image does not fill whole space. I tried this solution, but no help... Copied exactly as stated, but on Ipad and some phones it does not work [https://stackoverflow.com/a/50997110/9163128](https://stackoverflow.com/a/50997110/9163128) &amp;#x200B;
There's a speed control on the player, I think 1.5X is about right. This is one of the biggest problems with video based tutorials, damn hard to skip ahead because you don't have good markers. The other question about how do you know these things... it's more about knowing HOW to solve a problem. Example: if someone gave you an job to grab frames from a video and alter those frames, where would you look and what API would you need to look into. It's not that you've memorized all the methods of the video API, it's that you know that's a good place to look.
You would have to be right for this to justify a book. IDK if it justifies a book, but generally, what I've found is that what you need to know about many subjects in iOS programming, can be covered in much less than a book. Maybe Core Data is one that a book would be justified for, but testing seems like a verbose example and how to covers quite a bit. I bought a tutorial that covered testing in iOS and it was just a part of the whole tutorial. Patterns would be another that probably justify a full book and I've bought those specialized tutorials, but I just don't know that testing would be past a few chapters.
Yeah, I figured it ought to run fine still. OP should have no problems. Unless maybe they're just looking for an excuse for a new machine haha.
Everything counts. Progress on you learning Swift and building yourself professionally is definitely something you're working on, and that's great!
Thanks for putting the time into building this - probably many people will benefit from it. However anyone that intends to use such a design pattern on iOS should be strongly recommended to not go forward with it. This is because Android apps and iOS should follow their own design patterns and guidelines, and should not promote bad UX. 
If the Android App exists first, the client almost always wants the iOS app to look the same. So even with guidance from Apple design patterns this is a reality of App development: if the client wants it we build it.
Have fun with those users not understand here they are in the app because it's not contextual.
You can always try and politely but firmly make the client change their mind. My client did.
&gt;robbroadwell.com/blog/d... Yeah... no... lol
Next guide is going to be about putting a FAB in iOS... lol
I think hamburger menus are a prolific enough paradigm that basically all users understand them.
That doesn’t make it a good design principle. 
You'd probably know better than Google's Material Design team.
If it’s just Swift conversion issues, it shouldn’t be too difficult to go through them. Did the converter not catch a lot of these?
I know what does and doesn't work for users on iOS, and the hamburger menu falls in the doesn't category. Google's material team can do whatever they want.
Clicked this link on mobile, and they use a hamburger menu on the top of the page... Is there a difference in the design principal for web vs. mobile?
Holy hell youre right. Haha. My understanding is related to mobile not web. But this is hilarious 
This is a *really* nice improvement. Previously, getting good performance from code that made heavy use of closures required all uses to be inlined, which is of course problematic for anything across a module boundary (and often not so great for code size).
I’m a bit new to swift but I used the swift converter and when it was done it gave me over 100 errors all basically saying that things in the game can’t be called cause they weren’t issued if I can recall but not 100% sure
That's odd. I'd be happy to have a look and try and provide some guidance (if possible). 
Had the same problems when converting. Those shouldn’t be huge problems, you will find some of the red signs with a dot inside where you can easily convert the error. Nonetheless in some cases you have to rewrite a bit of your code sich shouldn’t be a big problem. 
The principle is there, companies can choose to use them or not, is it allowed? Yes, is it recommended from a UX point of view? No... iOS users don't have an innate finger system that drags them to click the top left corner. TL;DR - Don't use hamburger menus for iOS APPS.
Yeah the issue is that it’s over 40 lines of code. And none of the red dots have a fix it just explains what the issue is but can’t seem to find out what I’m suppose to do as it’s saying things aren’t being called but they were in swift 3. Easier if you take a look at my github https://github.com/Djwilso22/Spaceman
I don't think most clients are good at ui/ux design or know what they actually want. Sure you can make money by doing what they say they want but you can also make money by knowing better and being able to convince them and then feel good about yourself because you didn't just do your job, you did it well.
We do. Just like we know better than Apple where to put buttons like back or add because the default positions only work on an iPhone SE or smaller. The back and action buttons on Android are on the right place, but they're always full of surprises. Sometimes the + adds a document, sometimes it unexpectedly shows a list of options. Sometimes the back button takes you back, the next time you just scroll up and before you know it it entirely boots you out of the application. At least the default back button tells you where you are going and the regular menu items are not nested.
Very nice!
This is really cool. Looking forward to the see the code! &amp;#x200B;
Aspiring Swift dev here, don’t know where to get started. 
If all fails use Objective C because it's the core foundation of iOS development. This code can be used in every Xcode project despite what others say because without Objective C Swift wont bridge between the native api for the Cocoa Touch a framework and Core Runtime. 
As the author of the book in question, I thought I'd reply to your concerns. I don't think $40 is a bad price for this book. If you read this book and it helped you write better tests – even a little – would that be worth $40 to you? Most iOS developers earn $200 to $400 a day. Some of the best are on $400 an *hour*. If I can help them write better tests, they make their money back in no time at all. The problem is that testing is a complicated topic. We have unit tests, UI tests, performance tests, and integration tests; we have mocking and dependency injection; we have code coverage and continuous integration; and then there's TDD. The latest edition of this book is 286 pages, and it covers a huge range of testing. If what you want is really a sampler of testing – just an introduction – then yes, that can be covered in a small part of a larger book, and in fact that's exactly what I did because project 39 of Hacking with Swift is about testing: https://www.hackingwithswift.com/read/39/overview I hope that helps clarify things!
I started with Swift and iOS two days ago, my friend recommended me courses on raywenderlich.com and I’m very satisfied with them so far. :)
Put a teeny tiny voyager out beyond everything.
Looks great! Although a bit weird that the Earth is as large as Jupiter.
Pretty good article and well explained. I personally like my view controllers not to store state and render view state from an immutable view model passed down to it when required. 
Thanks it worked!
I have never done that so I’ll give that a shot before I get something new. Quick question but what do you recommend to back up my data? 
Personally, I use a Western Digital MyPassport as an external hard drive. Just make sure it's larger than your onboard drive, and when you plug it in macOS will automatically ask to use it as a Time Machine backup. That's the easiest way, so just go with that. It'll take a while to make the first full backup, but then you can use it to restore data afterwards. (Don't do a full restore though; only bring back the specific things you need. Otherwise you'd just be undoing the efforts of the full reinstallation.)
Thank you very much, good article
cool thing... double click 666
Thanks for the response. I didn't think it was a 286 page topic, but I haven't dug that deep into it. I can see your point, not much purpose in going that deep without having an end product that people can use. Having bought many books over the years, I can say that advanced books are a much smaller market and usually command higher dollar. So I do see the point and I do enjoy knowing that more in depth book on Swift dev are out there. While I have you here, I was watching a presentation I think you were a part of. I found a part that didn't include example code and was wondering how they would do what they said they were able to do. @ 24:00 he's talking about seamlessly swapping out the data source. I've tried to find any example projects, but haven't been able to find anything or any connections to ask anyone, and I noticed you were at the same conference. https://www.youtube.com/watch?v=ujOc3a7Hav0 Thanks.
&gt; quote this tweet and answer a question: what's your #1 tip to create a bug-free app? So the qualification is to do a retweet? Or do you quote and post somewhere? Sounds like you're supposed to retweet and add to it and he'd confirm by tracking the retweets.
Perfect thank you! 
I will look into used thanks! 
Good luck! Hopefully it works out for you! Always nice to save money where you can. :)
**AspectFit** content mode can fill all the space (ImageView's) only if parent frame width/height **ratio is the same** as image width/height ratio. Quick solution (it depends what you want) is to set ImageView's content mode to **AspectFill**.
Aspect fill expands image height and other view above overlaps it. It looks ugly. It does not stick to the bounds
Check if the imageView frame you use for calculating height is of expected size. If you do this in viewDidLoad() your layout may not be laid out yet.
Try to use the clip to bounds feature of the imageView
Yes yes that's why I said "it depends what you need" :)
It might be a problem. Where should I do that?
Tried. It crops important layout. It should be available with aspectFit.. I have read it I just can't make it work
I said what I need :) to scale image height dinamically and don't leave spaces and don't crop image. It should be available. Otherwise it sounds really ridiculous in 2019
To check just print the frame to console. To solve the problem you can add a ratio constraint at run time. Look at https://stackoverflow.com/questions/26180822/how-to-add-constraints-programmatically-using-swift
I run a weekly livestream on YouTube where we build apps from scratch. In the first week, we created an app with a table view, and towards the end we looked at rewriting the code to make it better – I covered separate data sources there. So, you might find this helpful: https://youtu.be/CpvC7bojHTE?t=3184
Your calculation for ratio is wrong, it only works for portrait images, you need to, when calculating the new height, ifPortrait then / ratio if landscape * ratio
I only need portrait mode... 
I’m guessing this is in tablewview cells, it sounds like your issue is there? Are you loading the images async ?
No it is not hahaha ... my son stepped forward in the ARView. The planets rotate in AR so Jupiter will go in the distance when the earth comes to you and they seem the same size... It is like you see the moon and the earth in reality ...they almost look the same size but they are of course not. You really need to experience it on you phone or ipad. Because you can walk through the solarsystem and Jupiter is of course much larger ;-) I still need to put some things in perspective, because it is a work in progress but I will post again during my development!. 
No. It is just a simple background which should be loaded one time and don't change..
Hey pretty cool... congrats
 Yep. This is most likely the issue. Relying on frame values really depend on where you use them. This should be done inside viewWillAppear. Frames are not correctly set until layout is complete. Layout happens after view did load and before view will appear. Another place you can do this is viewDidLayoutSubviews. If the view can adjust size dynamically after view appears (due to rotation or something else) you should use viewDidLayoutSubviews instead of view will appear. However never rely on correct frames inside viewdidload. 
It has nothing to do with content mode, content mode only changes how the content “image” appears in a view that has a different size then the image. (Ie does it stretch to fill, if it needs to stretch should it stretch with same aspect ratio, center content and don’t stretch,etc). But this all doesn’t apply to you since you are making the imageview the same exact size as image. If you do this correctly, all content modes will look the same. It’s about when you are running the height setting code. Should be where layout is already performed: viewWillAppear or viewDidLayoutsubviews. (NOT viewDidLoad). 
I like this write up, but could you go more into detail with your dislike of swift arrays being backed by reference types, and maybe provide a situation where memory wouldn’t be deallocated?
For toString use `String(describing: yourObject)` For code templates, are you referring to [snippets](https://medium.com/@sagarmore62/creating-custom-code-snippets-with-xcode-10-made-even-more-easy-c7801f5b8c00)?
Hi, You can create custom Xcode templates https://robots.thoughtbot.com/creating-custom-xcode-templates Instead of toString you can use https://developer.apple.com/documentation/swift/customstringconvertible or https://developer.apple.com/documentation/swift/customdebugstringconvertible
The `toString` equivalent is just to use string interpolation. So just do `“\(someValue)”`. Have your custom types conform to `CustomStringConvertible` to implement your own string representation. 
Thanks for your feedback. Your solution is also good, if you stick with MVVM. I am basically use VM as pure structs for data formatting, for example in cells.
Thanks, articles will come every week )
Yes. thanks it worked!!! Just one question, which constraints should I add to keep bottom height of view at least 50, but it could scale to 75. And top layout height at least 125, but it could scale to 150. I though about adding fixed constraints and =&gt; constraints together :)
Yes. thanks it worked!!! Just one question, which constraints should I add to keep bottom height of view at least 50, but it could scale to 75. And top layout height at least 125, but it could scale to 150. I though about adding fixed constraints and =&gt; constraints together :)
XCode is faraway the most behind of the "major" IDEs. It's so much better than it was before, but yeah still behind. Once the Swift LSP is done, I suspect we'll be seeing more Swift IDE competition. I'm not sure I follow your comment about the arrays. Are you saying when you're in a situation involving an array of reference types? Generally, because the arrays themselves are structs, they are passed by value, which helps with immutable style programming. I say generally because that protection can disappear when you involve closures. 
Wow cool! I am definitely trying this out this weekend!
&gt; Swift arrays are structs, backed by reference types. This is bad. Its a source of bugs when you are used of reference array in other languages and does not bring any of the advantages of the pure data types. What do you mean by this exactly? What bugs would be introduced? Also if you declare an array of structs, it will be represented as a contiguous series of values in memory, much like a C array.
You're still point and clicking for autocomplete????
Interesting! I just started using Android Studio and I bet I could make a similar comparison in a few months.
\&gt; There are not default for IBAction method names.. It's a waste of time to always write the same method names. buttonATouchedUpInside, buttonBTouchedUpInside. Method name should be implied from sender field name and event type Of course there aren't, since you aren't supposed to name your actions like that. You're supposed to name them after the action performed (e.g. \`navigateToPreferencesScreen()\`), not the UI interaction that triggered them
Personally, I wouldn't want default method names for IBActions. What's more useful to a developer: `buttonATouchedUpInside`, or `didSelectPasswordReset`? Plus, IBActions are more than just button actions. They might be segment selection, switch changes, or other actions that have various meanings. 
“I couldn’t understand why the frisbee kept getting bigger and bigger - then it hit me”
Why are you using Xcode? If you come from IntelliJ, use AppCode. 
This seems to be mainly feedback related to Xcode and not Swift. While I don't agree with all of your points, I agree that Xcode could use some work. It will be interesting to see what happens when LSP is ready. 
These are almost all (valid) criticisms of Xcode, which most debs will agree. Xcode is far from a tip tier IDE, so I couldn’t agree more with most of your criticisms on it. I do not agree with your criticisms of Swift, at least pertaining to Array. &gt; Swift arrays are structs, backed by reference types. This is bad. Its a source of bugs when you are used of reference array in other languages and does not bring any of the advantages of the pure data types. I’m not sure what ”backed by reference types” means. Swift arrays are fantastic. You get to leverage optimizations such as stack allocation and copy-on-write. Being used to a particular style does not imply a different implementation is bad. 
I’m not sure OP is on the mark on his points on Array. I think the criticism comes from a lack of understanding on value vs reference typing. The concerns just don’t make sense
Oh man. Xcode might be bad, but Android Studio and all its tools are WAY, WAY worse. Just never accept anything the IDE offers you. Updates are gonna break your build, refactoring can change Android system files (yeah, that happened). Simply don’t trust it. I won’t even start talking on the Android SDK and APIs, because that’s another mess entirely.
I like the improvement of a post on r/swift actually being about Swift for a change!
AFAIK, there is no built-in Swift equivalent to `itertools.product`. The docs for that method say "equivalent to a nested for-loop", so start writing some loops...
&gt; Swift arrays are structs, backed by reference types. This is bad. Its a source of bugs when you are used of reference array in other languages and does not bring any of the advantages of the pure data types. Can you explain what you mean by this? Persistent data types for collections are one of the biggest wins for functional languages, and Swift managed to transplant them into a mainstream (and only quasi-functional) ecosystem. What kind of bugs are you seeing because of this?
Very interesting but largely XCode related! I’ve never liked XCode nor the way GUI apps are developed for Apples products so I would likely be agreeing with you if I ever had to use XCode. As for Swift you might want to develop on your comment about arrays as structs I n another post. I’m not sure how the lack of experience with a language feature should result in blaming the language. Maybe I’m misunderstand something here. 
I use IntelliJ at work for back end development, as an actual code editor, it is far more powerful than Xcode. Especially when it comes to refactoring, code completion and git integration (especially git integration). Xcode storyboard is second to none. I find myself using jetbrains appcode ide for writing my swift, and then use Xcode for editing the UI.
Swift is actually designed around autocomplete. You're supposed to use it, and the language is designed so that if you know 50% of what you need to type out, autocorrect can give you the other 50%
The reason there are few CLI tools being built in Swift is pretty simple the language is ready yet. When we have systems shipping with a frozen api and the resultant stability we will start to see Wider use of Swift. 
If you haven't already looked at what's new in Swift 5, you might want to read my article [What's New in Swift 5.0?](https://www.hackingwithswift.com/articles/126/whats-new-in-swift-5-0), or check out my [Xcode playground](https://github.com/twostraws/whats-new-in-swift-5-0).
Swift 5 in Xcode 10.2 release notes: https://developer.apple.com/documentation/xcode_release_notes/xcode_10_2_beta_release_notes/swift_5_release_notes_for_xcode_10_2_beta
If you want to create your own code templates you use “code snippets” in Xcode. Search the help in Xcode for them.
``` Swift apps no longer include dynamically linked libraries for the Swift standard library and Swift SDK overlays in build variants for devices running iOS 12.2, watchOS 5.2, and tvOS 12.2. As a result, Swift apps can be smaller when deployed for testing using TestFlight, or when thinning an app archive for local development distribution. ``` nice!
How does AppCode fare with provisioning profiles?
Can you please explain why? Then how do you know what the action was that caused it? I think it’s helpful to know that information. Thanks 
So AppCode works mostly like an editor replacement. Anything that Apple hasn’t opened up is delegates through Xcode. So things like building and provisioning is still done in Xcode. But in my opinion the trade off of having two IDEs in this case is worth it. You get: - built in cocoapods support - a git GUI that rivals/beats sourcetree - some of the best code refactoring/auto completion tools - a massive library of plugins for supporting basically anything you could imagine
A method name should describe what it's going to do, not where it's coming from. It's like the difference between telling someone to call 911, or just yelling at them that someone's had a heart attack. The sender argument, if given, is what tells you that the guy's had a heart attack. func callEmergencyServices(forEmergency emergency: Emergency) { // Call 911 here } vs. func someoneHadAHeartAttack() { // What do you expect me to do? } and now you can use the same method for any number of emergencies, versus having to write a new method for every emergency under the sun.
You can play around with NumberFormatter to get what you want. E.g. let formatter = NumberFormatter() formatter.alwaysShowsDecimalSeparator = false formatter.minimumFractionDigits = 0 formatter.maximumFractionDigits = 8 formatter.string(from: 12345.6789) //returns "12345.6789" formatter.string(from: 12345) // returns "12345" 
A new version of the worst IDE ever, launched. 
&gt;let formatter = NumberFormatter() formatter.alwaysShowsDecimalSeparator = false formatter.minimumFractionDigits = 0 formatter.maximumFractionDigits = 8 formatter.string(from: 12345.6789) // returns "12345.6789" formatter.string(from: 12345) // returns "12345" Thank you for your help, but it continues to show the decimal. I tried your code in my viewDidLoad() function, is that the right place?
The grade system needs to be replaced with something smarter, better, and, of course, faster. I hate Android Studio. I love Eclipse better because it loads faster and simple to use without a built ch of shit in the way. Android Studio should not be used in a development environment. If it was up to me, I'll just stay with Eclipse before I'll use Android Studio again. 
For clarity, I mean that with JSON APIs, I'd just make a struct like: struct Post: Decodable { var title: String var username: String var imageUrl: String var url: String } But it looks like I won't be able to do that with Reddit's API, or any API that doesn't have it's data as JSON?
And it requires Mojave. Awesome! So now you have to have Mojave to use it, making all iMacs from 2012 no good.
This fix makes me happy: &gt;Double-clicking in a storyboard no longer zooms. Instead, zoom using a pinch gesture on the trackpad or hold Option and scroll. (29139870) &amp;#x200B;
Clearly you've never used Eclipse or Android Studio. 
I’ll just drop [this](http://dosdude1.com/mojave/) here. I’ve got a 2008 MacBook Pro running Mojave using this method. 
The point is valid, but the criteria is not. A Mac Mini 2012 runs Mojave just fine without any unsupported methods being employed.
Ok thanks. I will try that on the day I am 100% forced to upgrade. Its not just Mojave. Photoshop CS6 - which I own outright apparently doesn't work either. Forcing me go to that BS subscription model. 
Codable isn't JSON-specific, no. You can use that with any serialization format. But I searched for "imageUrl" in the docs you linked to, and it's in a section called "json data". Why do you think this isn't JSON?
That seems to be under "widgets", and I think my confusion is because some of the sections on there, like widgets, appear as JSON but others are not. Like I said in my post, the other APIs I used provided a single URL that I could paste in my browser where I can see all of the data as JSON, like [this](https://pastebin.com/UEWg8LH3). And I'd use that url to point my Structs to, and grab the pieces of data that I need. Is there no way to get that for the Reddit API?
What issues do you have with it?
&gt; The String structure’s native encoding switched from UTF-16 to UTF-8 FINALLY! &gt; Default arguments are now printed in SourceKit-generated interfaces for Swift modules, instead of just using a placeholder default FINALLY! &gt; Playgrounds. Known Issues: Playgrounds might not execute. Yeah, that's been my experience with them over the past several years, too. &gt; Project Editor. Known Issues: Expanding a Shell Script Build Phase might crash Xcode. Workaround: Edit the Shell Script Build Phase in Xcode 10.1. Allllrighty then. &gt; Xcode 10.2 requires a Mac running macOS 10.14 or later. So, it finally happened: my GPU isn't powerful enough to run the new compiler, even though the new version is more efficient than ever. I look forward to using these hot new features in a few years when I can afford a new Mac.
What luck! I work in a software office. We have a lot of employees at desks. Finding space to work is tough. I intend on making a new wing of the building so that one of the people can just take their laptops over there. I'm picturing a work room sorta thing. It will be awesome. 1. So I think I need some sort of walls and ceiling. Got a suggestion? 2. I could use carpet on the floors but would need to be cleaned over time. So steam cleaner? We could go without to get started. 3. Does lumber make sense? 4. I'm thinking tile roof. I'd love love love some basic key words, or a link to an appropriate tutorial or github. Thanks for helping this newbie out. I really appreciate it! 
I hate the upgrades too. I don't like losing days of productivity to upgrade issues.
Yep. You’ll either need to wait until the tread completes via some synchronization method before returning `closes`, or you’ll want to pass in a completion handler to `smaWorks` that you feed `closes` into. Or use a third party async/await or futures library.
Yep. You’ll either need to wait until the tread completes via some synchronization method before returning `closes`, or you’ll want to pass in a completion handler to `smaWorks` that you feed `closes` into. Or use a third party async/await or futures library.
Tell me about. Ok SORRY MODS. I just realized this was a mod post. And somehow I became 'that' guy. Of course the newest version of Swift is going to be met with excitement. And SWIFT is AWESOME. The forced upgrade blows meat chunks. LOL. OK best of luck.
Happy cake day.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [few errors I can't seem to solve (screenshot inside) \[xpost: r\/swift\]](https://www.reddit.com/r/iOSProgramming/comments/ajhunx/few_errors_i_cant_seem_to_solve_screenshot_inside/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
It looks like pdfkit will do most of what I'd like. Now I just need to figure out what sorta database I should be using.
What did I just read 
Remove line 45 and delete a `}` after `saveContext.` Always start fixing errors from the top down as one error can cause additional errors in the following code.
Line 49 under AppDelegate? I'll give that a try when Im back at my desk.
&gt; The String structure’s native encoding switched from UTF-16 to UTF-8 The new strings are insanely fast too. The team put in a lot of optimization work.
Just curious - what are your gripes with Android Studio?
Horrible UI for starters, not that Xcode is wonderful. So messy and haphazard. Just yesterday I modified a file and built and it didn’t work. Why? Needed to sync with gradle. WTF? Since when does building a project not just build it? Updating only updates some things, not everything. The editor annoys me too. 
&gt; Can you explain what you mean by this? Persistent data types for collections are one of the biggest wins for functional languages, and Swift managed to transplant them into a mainstream (and only quasi-functional) ecosystem. They're not always as efficient or convenient as in some purer functional languages but they work well enough most of the time. &gt; Yeah, Gradle is the worst. That thing is SO SLOW and uses so much ram. 1GB+ for a software whose purpose is to launch the compiler!!!!!! The CMake run is so much faster for the entire project which includes a ton of dependencies and about 500 source files (including dependencies) and Gradle can't load faster a project with 10-20 Java files. What a joke. The funny thing is I kind of like IDEA-based IDEs. Most of our core code is in C++ which we develop using CLion and it works wonders (a bit slow sometimes -- but it solid). But building the Android UI (code and layout) is a nightmare. I am pretty sure I have spent 3-4x more time developing the Android app and it still sucks and is full of bugs compared to iOS, OS X or Windows versions. Half of this time was either finding what stupid thing the IDE did for me and fixing it or trying to guess why something was not working properly on a Samsung/whatever manufacturer phone but worked in the simulator. Just last week I updated NDK and boom. The build broke. AGAIN. To start things off really well, the update broke CMake, it could not detect the compiler somehow. Then some weird bug caused some completely valid C++, which even MSVC accepts, to start failing. Tired of fixing things for Android, I just ignored the entire elaborate reconnect timer calculations to only trigger if required and exponentially considering a bunch of factors and now I just trigger it every 15 seconds (whether its needed or not). Battery life will suck on Android, but if not even Google takes their own platform seriously, why should I?
Oh man I spent a solid half of my day trying to figure out why android studio couldn’t find the SDK. Ended up having to build from command line lmao after syncing gradle like 12 thousand times. And I agree, the UI is pretty terrible. I never know how to find any setting when I open it up. 
I wrote a ["short" overview](http://127.0.0.1:4000/xcode/macos/ios/beta/2019/01/24/new_apple_betas.html#apple-clang-compiler) of all recent betas if you're lazy but curious. But, in general, all these changes are very promising. There is a hope for Swift Package Manager integration to Xcode, also I really like these improvements to validate modules.
I'm new to the ARView functions, but would it be hard to add an option to split the screen for a stereo view on a Google cardboard? That would really be amazing!
Anyone with problems downloading Xcode 10.2? The button seems broken. 
I can’t wait for apps to update with *smaller* app sizes
My biggest problem is you can’t turn off *all* the whiz-bang blinking lights. Stop telling me my code is invalid while I’m still thinking! Stop with the lightbulbs!! Visual Studio does this too, but at least tolerably so. At some point, someone thought “wouldn’t it be cool if IDEs did that annoying thing that MSWord does?” Xcode is designed perfectly for people with attention problems or who need to concentrate on difficult problems: one tab unless I say so, no warnings/errors/alerts until compile.
Eh, Xcode is the odd man out here. Every IDE follows common patterns. Xcode doesn't. There's a reason IntelliJ is the most popular IDE (AS is built on top of it)
Blech. Bad design is bad design. I miss CodeWarrior. 
It's Intellij. CMD+SHFT+A. Type any command the IDE can do. Enter. Done. Shift-Shift - find any file or class or variable. 10x easier than xcode garbage. &amp;#x200B; Xcode - 10 tiny little panels on the left that do something and settings pages that look like they were designed by a blind person. &amp;#x200B; 
Wow this makes me so happy! I swear I could use the trackpad but it's been inconsistent. 
Finding anything in AS is 10x easier. shift-shift = find anything, not just filenames. CMD-SHIFT-A = find any command or settings. Real refactoring. Custom color schemes that don't suck. &amp;#x200B; Navigation xcode feels like I'm playing with a children's toy even with 'open quickly'
I mean I disagree, but the each their own I suppose haha
Did that now I'm just getting Value of type 'UIApplicationDelegate?' has no member 'persistentContainer'
It's not the features I don't like. It's the design. Big difference. The control placement is mostly nonsensical. It's way too busy. Too many tiny icons all over the place. It's very un-Mac-like, especially the key combinations. Too many options needed to build apps - Xcode has this issue as well. It's ridiculously cumbersome to use multiple monitors - there's no quick way that I can find to open a text file in a separate window even. It does do some things much better than Xcode, like link xml files to code so you can't mistype resource names. And I went to paste some Java code in a Kotlin app and it offered to convert it for me, which was unexpected and very cool. 
The simplest way to delete data is to call removeValue on a reference to the location of that data. ref.child(“message key”).removeValue()
Ray Weinerlich
What error message are you getting? Also, format your code with 4 indents or `\`\`\``s
`Firebase`, or if your up to it: the monster that is `CoreData`. 
You want this function: ``` extension Double { func truncatingDecimalPoint() -&gt; String { return Int(self).description } } label.text = value.truncatingDecimalPoint() ```
&gt; I tried your code in my viewDidLoad() function, is that the right place? It does not matter where you put the code; it will do the same thing anywhere. 
/Users/ethanuppal/Desktop/Screen Shot 2019-01-24 at 11.33.29 PM.png
Why does this only apply to local development and TestFlight, but not production apps?
I’m guessing this wording is awkward because you can’t submit production apps with Xcode 10.2 yet
You're right for the most part but you're missing the \`public\` keyword next to the function. Essentially you're trying to create an \`internal\` function called the exact same thing as the \`public\` function that already exists in the \`AVCaptureDepthDataOutputDelegate\`. 
Just finished fully understanding universal links, so now I have to turn that into a tutorial. Also working on a map app that uses Firebase technologies to show realtime data like Uber so I can make a course on it.
You have to be real careful for String(describing:). It’ll give you the type as a string but it gives you the exact type and it doesn’t warn you of it either. So let’s say you have an optional integer. Your string value will be “Optional(x)” where x is the number you want. This seems very obvious, because it is, but I mention it because you don’t have to unpack the optional integer before using it in String(describing:) so this means you **have** to be aware of the exact type of the value before you describe it into a string. 
Ray wenderlich and the hacking with swift books are the best resources out there. 
You mean you want to make an app that can search and filter through the stack of PDF files? You can include the PDF files into the app bundle (just drag them into Xcode), and then open it using PDFKit (A library by Apple to handle PDF stuff), and search and match the text accordingly. Gonna be a problem to search through all PDF though.. 
This is a fantastic analogy, thank you. I'll be sure to use it myself in future. Where do I send the royalties?
&gt; You get: - built in cocoapods support I know far too many people who would consider this a bug, not a feature. They complain that cocoapods itself is too fragile and breaks a lot, and the broken versions get pushed out to people. I'm not sure, I haven't used it. I'm sticking with SPM since I'm trying to go pure Swift. Hopefully AppCode does some SPM integration, would be nice to see *anybody* get a one-up over Xcode on this because it's taking Apple long enough...
Same with Objective-C. That's why Swift and ObjC have wordy function and variable names, compared to other languages; so you and the computer can share the guessing 50/50.
Hey, you’re the author of hackingwithswift! Great site. I’m working through your beginners course right now. Love it!
&gt; This is bad. Its a source of bugs **when you are used of reference array in other languages** Emphasis added to show that this is *your* problem, *not* Swift's.
I mainly think Swift just needs a better distribution story. Static linking for binaries on platforms that don’t ship a Swift, dynamic linking on OSes that ship Swift. What’s really missing is a way to look at a project and say “I’d like to install this so I can use it now, and have it continue to work in the future” that abstracts away all the platform-specific installation garbage.
Jetbrains seems to just build everything they possibly can into their IDEs/Kotlin. It’s got SPM support as well from what I can tell. I’ve never actually used SPM as I’m still quite new to iOS/swift development. I’m not as well versed in all the dependency tools as I am with kotlin/java. Cocoapods just happened to be the one everyone seems to use with their tutorials so it’s the one I picked up on. I’m definitely going to look into SPM though as cocoapods doesn’t come close to filling the void Gradle has left.
I'm planning on creating a database to filter from not text search. 
SPM is still early, especially with no stable ABU yet there are things like no binary frameworks to download; but it’s the officially-supported package management system, so might as well get on board sooner rather than later I say!
Good point! I sold myself short for a while by blowing past the doc for `Collection.map`, because I wasn't doing anything with "maps" -- in my native C++, "map" is the word for "dictionary". D'oh!
There's a high likelihood that you can download a nightly toolchain from swift.org and run it with Xcode 10.1.
You might want to fix that link…
Oooh, try looking up **core data** for creating a local database, and **NSPredicate** to construct the filter query. I have made a reference site for getting started with core data/ nspredicate a while ago : https://nspredicate.xyz/coredata , hope this helps!
&gt;label.text = value.truncatingDecimalPoint() Thanks a lot, I put the extension Double just up the `ViewController()` class and the `label.text = value.truncatingDecimalPoint()` where it does the calcul and show it in the result Label but it's still doesn't work. It says : "Ambiguous reference to member 'value(forKey:)'" Will try to figure out what's the matter 
I tried to put it where my variables declarations are but at the line `formatter.alwaysShowsDecimalSeparator = false` it says "Expected declaration", will try to know what the matter is 
* It is slow as hell, specially opening xibs and storyboards * it crashes and freezes constantly * error messages are obnoxious and vague and never tell you the exact problem * interface builder is a joke * it shows false error messages of files not found that are found after compiling * if you use Finder to remove some file it is using it crashes * Autocompletion doesn't work frequently Not to mention a whole book I have written about how to solve dozens of Xcode problems. I have filled more than 50 bug reports with Apple during the last 10 years, but they don't care. Bugs are just there, piling. They should buy AppCode and the team behind it and never let anyone that today develops Xcode touch AppCode. Then we would be at the right track.
Xcode is written by satan. Are Eclipse and Android Studio that bad?
i disagree. I like seeing in the code where it comes from. Inside buttonATouchedUpInside method i call cmdNavigateToPreferenceScreen() Code is cleaner like this.
Swift arrays are not true structs. They are backed by reference types.. so in effect they are not immutable and not thread safe. see this for more details https://medium.com/commencis/stop-using-structs-e1be9a86376f
Thx. Interesting perspective. 
Yeah, that link doesn't particularly go anywhere yet — your info would be appreciated, though.
Please read this article and we might reach a common understanding. https://medium.com/commencis/stop-using-structs-e1be9a86376f The crust of the matter is that Swift arrays are backed by reference types. So therefore they are not true structs and make people think they provide the advantages of structs... while failing to do so. If a struct contains reference types.. it is not a true struct and it is a source of bugs.
XCode Storyboarding is pretty good. XCode auto complete works BETTER than IntelliJ.. Yes you heard that. IntelliJ auto complete actually sucks when dealing with Swift methods named parameters.
What do you think about the points raised by this article? https://medium.com/commencis/stop-using-structs-e1be9a86376f Is a struct containing reference types immutable and thread safe?
I’m a complete beginner and “Hacking With Swift” by Paul Hudson breaks things down very well plus his YouTube channel is fantastic as well. And I enjoy the podcast he does with Sean Allen! 
[objc.io](https://objc.io) books, blog and videos are all very good &amp;#x200B;
&gt; snippets Do code snippets allow me to call functions such as moveToEndOfLine:, insert insertNewline: ? I wanted to create an action that automatically creates { } after I finished declaring the last parameter of a new Swift func. In IntelliJ i got addicted to *cmd+enter* which does exactly that. Its really a pity the *insertText* function does not work. I read on stack that it used to work on XCode 6. I will investigate snippets. I didn't know about them. Thank you. 
Don't know if you can do that with snippets, don't really use xcode for anything besides debugging &amp; archiving :)
I actually consider Swift 5 to be the first truly stable version of Swift. That is when all of the issues with how and where to link will be resolved. 
whoa! that’s awesome
lol. laughingly snorted reading that line
How it is gonna save our lives?
Haha, that title was just for fun dude!
Did they add anything else since your article?
there is some irony but XCode is better for Swift IOS programming. The auto complete works so much better for parameters name. And as someone below commented.. you are supposed to use auto complete with Swift. Language was designed around that idea. 
Also, if you need `toString` for debugging, consider `String(reflecting: yourObject)`.
&gt; Swift arrays are structs, backed by reference types. This is bad. Why? The fact that the arrays are backed by reference types is an implementation detail - you do not need to know about this (except maybe if you want to understand performance characteristics). Just treat arrays as value types.
I suggest to use a completion handler (another closure) to pass the data response from the API. The completion handler will only be called once the data response has been retrieved so you won't need to worry about nil value. I have wrote a tutorial explaining this concept here : https://fluffy.es/return-value-from-a-closure , hope this helps!
I recommend checking out the Swift books on Manning.com. Ranging from beginner to advanced level
It looks like firebase is exactly that keyword that I was looking for. It appears that it can do the PDFs as well(?). It sure would be easier to update them if they weren't embedded in the app. Do you see any issue with doing that? I'm assuming it could be locally cached for performance. Thanks!
Thanks I'll take a peek at it. Any comments on coredata vs firebase? 
Same
As an iOS dev, I highly prefer Sketch document. Photoshop is ok, Sketch is _highly_ better.
Good to know Sketch is well received, will do that with future projects. I could rebuild the whole thing in Sketch, but as its been built in HTML and CSS it seems like annotating screenshots is the best way to go at this stage. Anything in my annotations that doesn't work?
To be honest, next time I'd just make a Sketch/PSD/whatever on iPhone and iPad format. However the combination of that HTML demo and that redline document would seem decent for me as well. But I don't have real experience with that.
Thanks)
Thanks. Yeah, originally it was made in Illustrator on iPhone format, but my clients wanted to see the interactivity in action, so I coded it. Then edits were requested to the coded version, and we ended up where we are.
This looks good and doesn't look far off of what you'd get from Sketch (content-wise, at least). Honestly, I've never gotten anything like what you described from a designer on a project, even ones that were being built for iOS. Android, and web and it would be very difficult to hunt for, say, margin widths in a CSS file. &amp;#x200B; The only change I would request if I got this would be to ask for the rgb for the colors instead of the hex codes. 
Why not use Zeplin, as professionals do?
I could work with this, but web browser and iOS layout concepts do not map one-to-one so it would be preferable to design specifically for the platform. This design seems simple enough and it will probably be appreciated that you took the time to specify all font sizes, colours, and spacings. In general however it can be frustrating to implement a design that wasn't created while keeping [Auto Layout](https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/AutolayoutPG/index.html) in mind. Mobile apps and web browsers in general are different environments with different rules for what makes for good UI design, and different technical details for how things respond to size changes of content and screen size. For example it's generally preferred to size components based on spacings between their contents and their siblings rather than fixed percentages, because the user might have increased their text size in their phone settings, or because localization will change the size of various text.
I'm so nervous and excited; a stable ABI means smaller apps and a more mature ecosystem... But it also means they're locking in the language and can't really make changes anymore. Here's hoping for a bright, Swifty future! 🙏🏽🤞🏽
Ah ok, I didn't know RGB was better than Sketch - will do.
Unless I'm wrong, Zeplin doesn't import web pages.
Core data is for local use, which the data is stored on the phone, once user delete the app, the data is gone. Firebase allows you to sync the app data to Google's server, after the app is deleted and reinstalled, as long as the user login to the same account it will still be there. Both depends on your use case. I would suggest going for CoreData if you don't need online sync capability.
&gt;If you really want to accommodate the developer, making the design in Sketch and sharing it with something like Zeplin or Invision is probably ideal. Yeah, I was going to share using Avocode or Invision, but then the clients needed to see the interactivity and we ended up doing this. Thanks for the pointers regarding spacing rather than percentages.
Seems alright AFAICT
Thank you! I'm glad you're enjoying my books and podcast – it's a lot of fun to record 😊
I'm glad to hear it! I hope to be unveiling some big improvements in the next couple of weeks 😎
Love their "Functional Swift" and "Advanced Swift" books.
Does it run for any of you? I just get this on launch: "ASSERTION FAILURE in /Library/Caches/com.apple.xbs/Sources/DVTFrameworks/DVTFrameworks-14490.68.3/DVTFoundation/DeveloperStructure/DVTPlatform.m:502"
Hoping it's because I wasn't fully updated on MacOS. So much for that "keep the computer updated" option... ;-)
Am I the only one disappointed that co-routines was not in the feature-list of swift5?
I was definitely looking at couple of his books; Especially the more advanced ones.
It looks like all the info is there, but personally, I'd like to see thin pointing lines and blurred out graphics. The lines that point to things are pretty thick and if you were to have the graphics dimmed or blurred, you'd see the into you're looking for quicker. You can think of it like a popup that blurs the background so that you focus on the popup or buttons. Making the part you're actually talking about a different and uniform color is a great idea, but reducing the line size and focus would be a less cluttered look. Imagine those blurred/focused live pictures, you can do the same thing with thin lines and grey instead of black. The next thing that might help is to have the side instructions all start at the same point. Right now, they start all over the place and they are all block, bold, upper case. Look at "PADDING HEIGHT MARGIN" from the 1st one in the upper right. Three labels, all bold block and upper case and starting at different points with thick line pointers. Make them "Padding Height Margin", all start at the same point and thin pointer lines. The example text like "People with read-only access" should be less "eye catching" or loud as with all the other example text/graphics. The marking pink should be thinner. Basically it's just "loud" as if a bunch of things are yelling at you at the same time. The problem is that you only one certain info and picking the info out is too much work because there's too much shouting from things that don't matter. IDK if the items displayed are fixed labels, text boxes, fixed graphics or what, maybe there's a key for that.
I wish they would fix randomly having to build for autocomplete to work. And just... improve autocomplete in general, it’s not good in XCode.
Your "Hacking With Swift" book has really pushed me to keep going and has been a great guide and learning tool. I was having an issue where I kept jumping to new tutorials or languages or platforms. But since finding Sean's YouTube, your books and YouTube and Swift Over Coffee; I'm all in on iOS/Swift and am learning and retaining so much! &amp;#x200B; Thanks for everything you do!
Cannot subscript à value if your ‘string’ with an index of type ‘string’
Nothing wrong about having one VC. But it has to be correctly separated. Depending on amount of logic you may need to have one child VC for each step.
Cannot convert a value of type ‘int’ to expected argument type ‘string.index’
That article is pretty misleading. The issue is when you use the internal storage of a struct for other purposes. So if you create a struct with a reference type then share that reference type OUTSIDE of the struct you can run into issues if you aren't careful. The example they give: class Account { var alias: String } struct User { var isActive: Bool var account: Account } var depositAccount = Account(alias: "USD Deposit") var user = User(isActive: true, account: depositAccount) var secondUser = user print(user.account.alias) /// USD Deposit secondUser.account.alias = "GBP Deposit" print(user.account.alias) /// GBP Deposit Yes, this is a break in the value type since you are sharing state between the value types. However, it doesn't have to be this way. Behind the scenes `Array` uses a technique known as copy-on-write. The reference is only good while nothing is changed, this saves us making copies of large amounts of data. When we change something the reference is broken and set to a new object. Thus no bugs. The old object has the old data and the new object has the new data. Effectively, the fact that `Array` uses a reference internally becomes an implementation detail that you don't have to worry about. It does the right thing and keeps your data separate, fulfilling the contract of a value type. Use `struct`, it's a valuable tool. Just know when you need a `class` and use that appropriately too.
**Weiner** 😆
Working on a [small book about explaining Optionals / Delegate to beginner](https://optionals.fluffy.es), its kinda tricky to explain it as simple as possible.
The file will be something you created or a known file type? And the person will be able to export too or only import?
I might be able to help, but I’m not familiar with kotlin so it’s not clear to me what you’re trying to achieve. If you don’t get an answer then if you clarify further on what you want I’ll give it a shot. 
I'll need to update the database and PDFs on ~80 iPads. That's making me lean towards firebase. Thanks for the help.
Couldn't you just answer? lol
Yeah, correct me if I’m wrong but op was deleting the local reference as opposed to fire bases db 
``` protocol Serializable { associatedtype T } class Implem: Serializable { typealias T = String } ```
thanks! Feel free to share your results!
But with ref.child(“message”).removeValue() It will remove the value of the child “message “ without taking in consideration the index of the cell . Should child and cell index should have a reference ? Sorry if my understanding may be wrong ?
If you have to snapshot of array take the snapshot get the ref and remove the value snapshot.ref().removeValue()
Import only, known file type
I think the author has a lot of valuable knowledge and I find myself agree with all of his points (except when it comes to the “backed by reference stuff). I don’t agree with the assertion we should avoid structs, I just thing embedding reference types in value types should be avoided or used with care. The way I think of this is close to his concept of live vs dead data. Is there a bunch of business logic that can cause changes in state? Use a class. If it’s simple data being thrown into a “data holder”? Use a struct. Pulling data from an API call and storing it in a struct is a perfect use case for a struct. I learned that by “backed by reference types” you probably mean heap allocation. Strings etc. do not need to be handled as reference types despite their storage mechanism. They still have value semantics and can freely be used in a struct. You are getting a copy of the string when you use it in a function or copy a struct with a string in it, NOT a reference to the original string you can mutate. This is what I don’t really agree with the author on. 
I used to be an iOS dev back in 2015 and now I work in another company with more of a manager job. My question is, someone suggested I gave a short introduction to iOS, maybe two days of classes (time frame tbd), and I thought it was a great idea. I'm not sure how to structure this class though. What do you think is relevant to explain, what topics would you teach? I wanted maybe to create a small app, talk about the architecture, how to connect views and controllers, maybe explain the process to publishing apps. What do you suggest? My "students" are developers who work with ionic and other hybrid frameworks, and are currently working on an app already on the store. 
The problem is with line 49. The explicit type annotation is formatted incorrectly. You're initializing container using a closure, so you shouldn't need an explicit type annotation anyway. Let Swift so it's thing with type inference whenever possible. So line 49 should be: let container = { ... // Closure body }() 
“Why can’t with use protocols with associated types as concrete types like kotlin” - because in swift, the actual type to use for that associated type isn’t specified until the protocol is adopted. If you want it to be concrete type, why not just define a concrete type instead of an associated type? “Are generic types fundamentally different from interface genetics in kotlin” - maybe? Like I said, not familiar with kotlin so I can’t speak much on this one “Why is there generics variance for array and dictionary but not user defined types?” Because arrays and dictionaries have built in ways to infer the type of their elements. Why don’t user defined types have this? User defined types can be pretty much anything, so making this functionality built in is a whole new problem. “Are there some features or language patterns to express the same thing?” - see this [see this stack overflow post](https://stackoverflow.com/a/35865954/9835699) 
Hijacking this thread, recommendation on Swift books solely about Mac development released 2018+? I already now about "Hacking with MacOS".
Its not giving the intended result. Can anyone check it too ?
with multiple for loops (maps) its giving the result, but its a horrible code. SO i was wondering if there is a better way &amp;#x200B; `let rows = ["A", "T", "C", "G"]` `let arr = rows.map {` `i in` `rows.map {` `j in` `rows.map {` `k in` `rows.map {` `l in` `rows.map {` `m in` `rows.map {` `n in` `rows.map {` `o in` `rows.map {` `p in` `i+j+k+l+m+n+o+p` `}` `}` `}` `}` `}` `}` `}` `}` `print(arr)`
You want to use FileManager. There are many great tutorials on how to do this. If you want your app to open when you click a file, lookup "Custom docuemnt Tupes in Xcode" and the like 
&gt; But it also means they're locking in the language and can't really make changes anymore. This is mostly not true. There is a lot you can add without impacting ABI at all, or even more you can add while evolving the ABI in a backward-compatible manner.
&gt; First why can't we use protocols with associated type as concrete types like we can do in Kotlin ? The feature has not been implemented yet (search the forums for "generalized existentials"). &gt; And second why is there generics variance for Array and Dictionary but not for user defined types ? The type checker hardcodes subtyping rules for Optional, Array, Dictionary and Set. There's no mechanism to define your own subtyping rules.
Is the point even valid? It sucks, but if you have an 8 year old Mac I think it's reasonable to expect that Apple will begin dropping support for you. It doesn't make it less annoying, but you can't very well expect them to support old Macs indefinitely.
CMD+Shift+O can find any symbol in Xcode. I think the primary difference is that Xcode is built as a Mac app, without paying attention to the trends happening in other IDEs/editors (like searchable settings and actions). For good or bad, it's built by Apple as a ground-up vision for an IDE based on traditional Mac interface design. Personally, I don't think it's better or worse than other IDEs, but it's undoubtedly pretty idiosyncratic if you're used to Sublime or JetBrains.
On the video she never went over this portion of code, did I miss checking use CoreData when setting up the project?
Apps using earlier Swift versions will still use the packaged swift libraries.
&gt;The type checker hardcodes subtyping rules for Optional, Array, Dictionary and Set. There's no mechanism to define your own subtyping rules. Do we know if it is a technical challenge yet to be resolved or is it just a design decision ?
In that case is pretty simple https://www.infragistics.com/community/blogs/b/stevez/posts/associate-a-file-type-with-your-ios-application
It’s not an iOS thing as much as it is an Xcode/Swift 5 thing. Because Swift was so unstable, apps were packaged with their version of Swift (or whatever portions they needed). Now that Swift 5 is stable, new apps will just rely on iOS to provide the entire runtime environment. Old apps will still be fine.
I’d definitely swap out buttons before changing the view controller 
True! As we've seen with Objective-C. But there's also a lot that can't change, and it'll be interesting to see what happens going forward
It looks like it’s expecting an array of classes, not just one. Try also replacing SCNVector3.Type with [SCNVector3.Type]
Hey Paul, have you had any trouble with using `Result`? I’m getting `Use of undeclared type ‘Result’`all over the place - both in your playground and other projects. Xcode 10.2, and it’s definitely running Swift 5.
It's still beta. The common frameworks aren't included in any macOS release yet.
[There you go, have fun :)](https://github.com/twostraws/unwrap)
Repl.it has Swift.
&gt; that puzzle me coming from Kotlin. Despite the superficial similarities, it's best not to try to think of Swift as Kotlin (or Obj-C, or C++, or ...). It's its own language.
It's just too bad that I can't take advantage of that on my existing hardware.
Apple's own book is still the best I've seen.
Everyone has different tastes and preferences, but I think the introduction from HWS works well. In the infancy stage of programming, Swift is a great beginner language and allows for a lot of concepts easy to pick up. Some of the more intricate details are complex though (Protocols, Closures within Closures, some Attributes, etc.) and will take more time and it's what makes Swift a difficult language down the road. That being said, there are many resources to learn from and I think it is best to explore more than just one option to learn. So in this case, use RayWenderlich, HackingWithSwift, [objc.io](https://objc.io), [flawlessapp.io](https://flawlessapp.io) (Blog posts contain many interesting Swift topics, SwiftBySundell, BigNerdRanch, and many more resources at your disposal to dive deep and learn the ins and outs of the language. In fact, HWS has a Pro Swift book that really dives deep and I think it's great. Basically just go for it like you're a newbie in a videogame. You'll lose a lot, but eventually things will click.
First, SCNVector3 is the name of the class, but not its type value. To refer to its type, you need to say `SCNVector3.self`. Second, as per [the documentation](https://developer.apple.com/documentation/foundation/nskeyedunarchiver/2983380-unarchivedobject), the generic type must be `NSObject` &amp; `NSCoding`. You're using SCNVector3, which is neither. If you use a type which is, then your code works: if let float = try! NSKeyedUnarchiver.unarchivedObject(ofClass: NSView.self, from: data) { } I have no idea why the compiler is sending you down that rabbit hole. Swift error messages are still not great.
Ah I see... Seriously, I think you did pretty great work. It wouldn't surprise me if that dev was making excuses of some kind. I'd put aside any comments from her to the client. Plus it's hearsay as well. Best to ignore it.
Not sure u understood my question. 
Yes i did. You can TestFlight this app on iPhone to practice Swift 
Frames will update on the next layout pass.
How do I do that lol 
Oh never mind okay thanks I’ll do that when I get home thank you
Why not just: view.subviews = [stackView, button, secondaryButton, cardView] instead? No need to write crazy extensions to emulate the built-in behavior.
Most of the time, it's not useful information. For the few times it is, you do get the sender of the event. 
And I disagree with that. Especially because multiple things can raise the same action. And you get the sender argument, if you need to see who sent the action. 
Oh no. Eclipse is a thousand times worse. It was slow to start up, and the whole workspace thing was just stupid.
What is the type of `messageArray`? (Xcode will show you if you start typing it)
Oops
Because there is no `formatter` in the scope you are in.
Where are you using `value(forKey:)`?
For very basics, TapCoding is a good app. You can also download Udemy and get a swift course and save the lessons for offline viewing so you don’t drain your data.
The Gradle build system sucks to build the damn workspace and supporting files, takes more time indexing than doing anything good. Each version of Android Studio is broken with each update that I hate using it, dreading to use Eclipse. Better off using some other IDEs. Well Java will always be slow due to Bytecode conversion to JVM and Dalvik Cache. Bytecode optimization is a waste of time. Class loaders are slow, everything about Java is slow unless put into C or C++ with JNI for the NDK. It's hard to fix everything in every build version that requires C code. IOs dev is even worse with each atrocious version of Xcode. I've been messing with Xcode since Xcode 2. The older versions are better, but obsolete in development. The best of xcode version I think are xcode 4 until 7 and then it all went to shit. 
I could have mentioned other statically typed OO languages which have these features like C#. I just find it weird from Swift because it looks like a pragmatic language with a lot of good design decisions (optionals, pattern matching, value types, ...) and I'm just a little surprised it left out generics and "generalized existentials" which I find really useful features to have.
Yeah but I can’t really practice the code on my phone and that’s really what I’m trying to do practice on my phone 
messageArray is an object created from my model class “message” which include two empty string (messageBody and sender ) 
Thank you! So Is there a way I could unarchive a scnvector3? 
Can you share your code on GitHub. I am am having some trouble understanding what is going on. If `messageArray` is a `var messageArray: [T]`, `remove(at:)` should work.
You’re correct in theory, and if you’re certain you’re dealing with a completely empty view, this would work. But if you’re adding views to a system view, like an image view, or a label, or a button, or a scroll view, can you be sure you’re not going to completely wipe out any system-provided subviews? It’s much safer to use the provided addSubview method. Then you’re leaving existing subviews in tact. You’re also certain that any side effects of the addSubview method still occur. Also, assigning directly to the subviews property like you suggest doesn’t allow you to chain different hierarchies together, nor does it allow you to construct UIView and UIStackView hierarchies at the same time.
You can achieve that using composition I guess. Create a custom class inheriting NSObject and NSCoding, with a SCNVector3 variable, then you'll have to implement the coding and decoding methods to serialize your object. It all depends on the SCNVector complexity (I'm not familiar with it), and what you want to be saved, but it should be feasible. You can find an example of creating a custom "archievable" object [here](https://stackoverflow.com/questions/37980432/swift-3-saving-and-retrieving-custom-object-from-userdefaults). 
That article has a number of statements which are highly misleading, or outright false. It seems to conflate "value/reference" with "stack/heap", but only in places where he finds it convenient for his argument. Twice he says "This statement has some exceptions" but then neglects to address most of the exceptions to the supposed rule he just invented. What's the point of a rule where half the cases are exceptions? Where did these even come from? Nowhere in the Swift Language documentation does Apple even use the word "stack" or "heap". "Value type backed by ___" is just a long-winded and suggestive way to say "value type". &gt; Swift’s collection types (Dictionary, Array, String, Set etc.) are value types that are backed by reference types. [struct Array](https://github.com/apple/swift/blob/master/stdlib/public/core/Array.swift) is backed by [struct _ArrayBuffer](https://github.com/apple/swift/blob/1673c12d7822b32e5d02a32e9c7b66f7f7c3263d/stdlib/public/core/ArrayBuffer.swift) on Darwin, and [struct _ContiguousArrayBuffer](https://github.com/apple/swift/blob/1673c12d7822b32e5d02a32e9c7b66f7f7c3263d/stdlib/public/core/ContiguousArrayBuffer.swift) on other platforms. Their implementations reference external memory, but then, so do lots of other structs, like String and URL and Date. Some of that memory may be shared with other instances, but then, that's true of other structs, too. We don't know, and we don't care. That is why they are value types. &gt; If a struct contains reference types.. it is not a true struct I guess every true Scotsman knows that! Does that mean String is not a "true struct"? Is there any *true struct* at all on my system? There's no way for me to be sure. These gosh darned abstractions that make our lives so convenient are making it impossible for me to ascertain whether the internals of these data structures match our made-up definitions! &gt; and it is a source of bugs. Every line of code is a *potential* source of bugs, if you don't use it in accordance with its interface, but I don't see how this is any worse than any other. Like the basketball player who turned his back on the ball, if you simply ignore what's going on, you might get burned. The solution is to pay attention, not to blame the ball. There's two value/reference distinctions that I see discussed here: - Collections are *backed* by referenced memory - Collections can *contain* instances of Swift reference types These are completely orthogonal. You can be #2 without #1 (like his User/Account example), or #1 without #2 (like many Strings). Or both, or neither. His headline says "Stop Using Structs!", but is he seriously suggesting that Swift programmers shouldn't use Array, Dictionary, String, Int, or Bool? It's mostly possible, but if you want Objective-C, you'll have a much easier time using Objective-C than trying to write Objective-C-in-Swift. The only bug I see here is that he created a struct with a terrible interface: it looks like one thing, but acts like another. If there's a programming language out there that doesn't *allow* a programmer to create a misleading interface, I'd like to see it. 
Ok this seems to be a solution thank you! 
How is it "cleaner"? You're not adding any expressive value. You're just adding redundant indirection. If you changed what action your control was wired to, you'd need to rename the method, too (no longer OAOO). Plus, you need a whole set of 1-line methods for your IBActions. 
The answer to "Is X immutable and threadsafe?", in almost every programming language in the world, is "read the docs and see, for that particular data structure you're interested in". Your complaint amounts to observing that Swift isn't a functional programming language. True. Sorry. If you want Erlang, you know where to find it.
&gt; can you be sure you’re not going to completely wipe out any system-provided subviews? Here, I will solve your issue with one character: view.subviews += [stackView, button, secondaryButton, cardView] &gt; You’re also certain that any side effects of the addSubview method still occur. What side effects? Callbacks like didAddSubview() are still called when you edit the subviews array. It's a public interface that's there for you to use. This is exactly why it exists. You gain nothing by avoiding it and re-implementing it by hand.
Which deployment target do you use for your apps? Will you switch to iOS 12 this spring? On this sub people would probably not complain about Mojave not running on their old Mac if Xcode would run on High Sierra. 
Hi vocalizedpanda! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/ajuobn/released_my_first_app_and_im_really_proud_of_it/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Ah ok, I hadn't considered child VCs, but I think that would work nicely. Thanks!
Alright, I see your points. I did have a read through the docs after your initial comment, but evidently missed the paragraph that answered my uncertainties about setting subviews directly! And googling setting subviews versus using addSubview also yielded no immediate results. I guess it’s just personal preference then. I like to see it all laid out in one sequence, rather than having the repeated calls for each view. But I completely agree with you that it yields no actual benefits in terms of performance or number of lines.
Had to delete it, redownload, and then that one worked. Strange.
In order to use Testflight you would need to load the app into app store connect first. I don’t think you can do that with a free dev account. You can however load the app on your phone using xcode with a free dev account. 
My **first** few months? Absolutely confused. No idea what I was doing. Data types were so confusing for me.
I take comfort in this. I‘m giving it hell but feel like I’m making pretty slow progress.
not quite confused but frustrated. when watching an instructional video i felt i understood the concepts, but when trying to implement anything i didn't know how to do anything. &amp;#x200B; it got better after just attempting to make something even if it had no purpose, and learning go to navigate documentation. i stopped worrying about understanding everything and only think about a single task i want to do.
In my experience, most people take around a year to stop feeling super wobbly. 
Swift also isn't the easiest language to start with I'd say. If you don't **need** to do iOS apps immediately, maybe play around with a language that is better for beginners to pick up like Python? A **lot** of the skills will transfer over. But yeah, your first months are definitely going to be the most frustrating.
Use the `Blank` playground template. I actually built a Planets app only in Playgrounds
On your phone, see [this site](online.swiftplayground.run). I use it to test `CoreFoundation` performance.
Lots of confusion, not fully grasping concepts for a lot of it. Repetition is your friend. Build an app and then build it again and again trying different ways of going about it. Code that doesn’t work is a learning experience. Learning to debug and isolate issues is huge.
I learned python first and didn’t feel too confused. For the most part I was able to hack up things by following tutorials and docs. I also had no idea about all of things happening under the surface. The first time I got really frustrated with coding is when I tried to port one of my python programs over to swift. Man I hated the whole premise of static types and pretty much any design pattern that didn’t have a direct effect on the end result. I wrote bad code and got mad when it was hard to make changes. Then at some point I realized that my highly regarded python code often suffered from the same issues, only silently. Debugging was impossible and I eventually humbled myself into a great appreciation for the underlying concepts. I read like crazy and eventually built my first app in swift. The code was still not great, but the project was enough to help land me an iOS internship where I learned more from mentors. I think the best advice I could give my former self would be to not give so much weight to what I think “makes sense” and just continually learn and experiment with different approaches to the same problem. If I can’t tell the pros/cons of each one, it’s a sign I need to experiment with each approach further. Then light bulbs start to go off..
You'd have to check the Swift Evolution forums to see if the idea has been proposed and rejected before. If it hasn't, then it's not a design decision. (It wouldn't necessarily mean that someone else is coming up with it either, just that it hasn't been decisively rejected.)
`10 print "Hello"` `20 goto 10` Holy shit it worked! This is awesome! Ok, how do I stop it now? No, really stop printing "Hello" Fuck, I think I broke the machine. Guess I better turn it off. `10 print "Hello";` `20 goto 10` Awesome it fills the entire screen not just vertical! &amp;#x200B; Life has never been the same.
Haaaaaaaa! Fucking hilarious. Yes.
I think I was super stoned when I started programming, so everything was super confusing. Now if you can figure out how to program while stoned, imagine how much easier it got when I stopped smoking pot.
It’s been this way for years. Xcode versions push devs to upgrade their OS, which pushes them to drop support for older macOS versions, which pushes customers to upgrade. 
you could use delegation. create a protocol called GameDelegate or something similar and declare a function named gameDidEnd or something. it could take a Game as an argument. Game has a property named delegate, of type GameDelegate. when a game ends, the game can call its delegate’s gameDidEnd method, passing itself as an arg. the Set can conform to GameDelegate and implement that method, and set itself as the game’s delegate. this way it knows when a game is over. 
So if you hit the Pause Button(Debug &gt; Pause), and then switch to the Debug Navigator on the left frame, then in the Upper right hand corner of the Debug navigator is a dropdown button that allows you to View Processes in a different way. Select "View UI Hierarchy". This should pop up a screen that allows you to 3D rotate your 2D view allowing you to select Views that may be hidden by other views, and get information about those views. Is your view hidden or obstructed, did it jump underneath the keyboard?
Decoder or quick edit text editor to write the code. 
By the way, Your code is WAY too clean &amp; organized.
Yes or angela yu
It really depends if you've ever programmed before or not and how much programming you've done. Maybe the type of programming as well, not to mention what kind of iOS programming you trying to do. I spent quite a bit of time learning some things in great depth. I started out with SQLite and some other base things that I would likely use in most apps. I started with ObjC and it was different from other languages and I wasn't that big on it at the start. I had trouble with some of the stuff in Xcode like "files owner" and some of the ways of connecting things. I never found them to be intuitive, so I just wrote notes showing "step by step". I also didn't care about how clean the code was, I focused on understanding what does what. That was a favor because MVC and others can really add a layer to someone just starting out. IMO, it's important to do some of the standard demos and have some fun with them. Back in the day, it was the "floating teapot" and the voice visualizer demos. For the most part, the early code isn't very brave, it's mainly what you learn from various tutorials.
Is that a complement or a complaint lol
I'll check it out thank you! It jumps underneath the keyboard. No idea why
My first 5 years? Didn’t quite know what I was doing, but every day I understood a bit more than the day before.
I was 7, so it's hard to remember :) I am serious, but having said that, I think it's very typical to be highly confused in the beginning. You are learning a very new way of thinking and approaching problems, particularly if you don't have a background in logic or discrete mathematics. 
Yup.
That’s why -= is an issue while dealing with keyboards. Use absolute = for when keyboard appears and 0 or bottom safe margin in case keyboard disappears if your button is supposed to stick to bottom 
"Im" Take the time to spell your request so that it looks like you've passed 4th grade. If you're this sloppy with your text, the last thing I want to do is start to look at your code.
It is hard for everyone in the beginning. Don’t let it stress you out. Coding isn’t a test of your intelligence, but a test of your resolve to solve problems. I learned in a boot camp with no prior coding experience around people who I felt like picked it up quicker than me . I remember worrying that I wasn’t “smart” enough or that it wouldn’t work out. It honestly just takes time and patience. The truth is that you need to code every day and keep going even if you feel lost. If you’re looking for stuff to do daily, I would recommend hacking with swift: daily coding challenges. You should buy it, but if you’re in a tight spot financially, you could probably find a pdf online. They are daily coding challenges that really helped me in the beginning. Plus they get you ready for potential whiteboard problems that employers might throw at you. 
Attaching the crash log will likely help more than the code.
Absolutely. He takes you through a few good examples and you get a lot for the money. 
Heaps of frustration. I went to an iOS coding bootcamp. Core Data in week 5 nearly killed me.
'Result' is not included in beta 1.
Any idea why it won’t let me put it on my phone thru Xcode it’s trying to import swftentrykey but it won’t build cause it says no such module as swiftentrykey 
Never mind I got it thanks 
&gt;But there's also a lot that can't change, Are you concerned about anything specific?
It's not at all clear what you're really trying to accomplish. You say you want to adjust timezones without changing the time value? To me that means that you want to use a different timezone but still represent the same actual time. And in this case, the time portion that precedes the MUST change; otherwise, they don't represent the same time. IOW, "2019-01-25T11:55:00+00:00" and "2019-01-25T11:55:00-08:00" are NOT the same time. They are 8 hours apart.
Agree, but the problem is timestamp that I am getting from backend already representing different timezone not: +00:00, that's why I need just replace 00:00 with what ever timezone I am getting separately from backend
Nooice. 
Thank you
Wait a minute... so the server is giving you timestamps like "2019-01-25T11:55:00+00:00" when it really means "2019-01-25T11:55:00-08:00"? If so, that's really broken. If it's a in-house server, I'd lobby to get them to fix that, because that's a bug. If you can't get them to fix it, and they are actually giving you timestamp strings with +00:00 when it's actually -08:00, then I guess I'd just do a straight string replacement on it before turning it into a date object. With a nice comment on the code explaining why you're doing something that looks wrong.
I know, weird. But I will probably try string replacement before creating Date object, thanks for that.
My first infinite loop was such a proud moment. Until I couldn’t figure out how to make it stop and my computer stopped.
You could just replace it in the string via regex before parsing it as a date/time
....?
Have you got a crash log? Are using a service like Firebase/Crashlytics?
gameDidEnd boolean property in the game struct, then for loop through the array and check the value for each object.
Thank you for the response. Thing Is I decided I don't need to grab the return value from my function and would rather just pass it into a function where I could do what I want with it, since I need to do quite a bit with the data after that and this way it would just streamline everything. But thanks anyways!
Thanks for the response too!
A little bit of both... Everything is compartmentalized, so it makes it a bit harder to debug.
Never thought someone could prefer the JavaScript experience to Swift. Has this been added to DSM-5 yet?
Perhaps you should make less rambling and more coherent posts instead of just frustrated brain dumps :p.
Ha, i know the answer to the 2nd question (noob here). It’s a ternary operator. Essentially a replacement for an if else statement. 
C# doesn’t have generalized existential either, but they have simpler generic interfaces. For example in Swift, “Collection” is parametrized on more than just the element type in order for the compiler to generate efficient code. In C# foreach-ing a collection involves interface calls that can’t in all cases be devirtualized, which is also why C# actually uses duck typing in this scenario. They also rely on JIT devirtualization which can’t be done ahead of time. Swift can’t use JIT tricks and, thanks to the way protocols are parametrized, doesn’t need duck typing tricks to generate efficient code. It does come with the drawback you mention. There are type erased wrappers for collections and similar built in, but you have to write them yourself for custom protocols (you can look up how this is done; it’s not too complicated). Generalized existentials is essentially about having the compiler automatically create those, or that’s one implementation of it. 
The code posted on SO is meant to be inside a custom UIButton subclass. To change button background when highlighted you can just use setBackgroundImage (https://developer.apple.com/documentation/uikit/uibutton/1624016-setbackgroundimage?language=swift). Use code from https://stackoverflow.com/a/33675160 to create an image with solid color.
I learned to code on a Commodore Vic-20, in the early 1980s. I didn't know that computers were a thing. I thought of it as a toy. The user's manual showed a sample program you could write on it, in a language called BASIC. The program was just an animated ASCII-art, as I recall. I fell in love with it. I wanted to make it do other things. But the user's manual didn't explain the language--there were no tutorials, and worse, no language reference. There was no Google, no YouTube. And because I didn't know computers were a thing, I didn't know you could go to the library and check out a book about a programming language. I read the user's manual over and over, trying to squeeze something useful out of it. It described two BASIC commands, PEEK and POKE, that would let you view and change the guts of the OS. There was a lot to discover. I found the language reference I was looking for with PEEK, and a lot of trial and error as to how to use the commands. With such power in my hands, I had no choice but to go back to the store and hack all the Vic-20s they had on display in their electronics department. A Vic-20's standard command prompt is "READY." I went and changed them all to say "IDIOT." My early days as a programmer were a riot. I was 19 when I met a guy who told me I could get paid for what I was doing on my computer. I told him he was full of shit. I sense that you're having a really hard time with programming. Maybe I'm way off, so maybe ignore me. But I feel really bad for you, especially when I compare my experience to yours. I wonder, why do you want to learn to write code? Is it because you have an idea for an app? Or is it because you find programming interesting, and you want to explore it? Are you seeking a Comp Sci degree because your parents are demanding it of you? Have you fallen under the spell of the superstar programmer who graduates one day and has a $200k/yr job the next? If you're feeling frustrated and confused, it seems to me that programming isn't your ultimate goal, but rather, an obstacle between you and your goal. I don't know anything about anything, and you didn't ask for advice anyway, but I'm old, so I can't help myself. Sit and have a think about why you're doing it. Or, ignore me. Peace and luck
That's awesome! Finding something that suits your style of learning, then sticking with it over a good few months, is pretty much guaranteed to get you where you want to be. Let me know if you have any questions!
It's hard to tell for sure, but I'm guessing the Swift version in Xcode gets branched significantly before the release date. `Release` is present in the Swift 5.0 development builds but not in Xcode 10.2 beta 1, so I'm guessing it will appear in the next beta.
Good news but nobody died by embedding stdlib inside the apps ...
That’s really nice
I really don’t get people like you, if you don’t want to help me with my code that’s ok, but really your going to correct my smallest grammar mistakes, like do you not have some thing better to do with your life? 
Yeah man, just interested in folks experiences. Thanks for the share.
How does the coordinator make sure that it only instantiates a controller once? Does it check its child controllers to make sure it doesn’t exist in there? 
Obviously haven't tried it...it requires a ridiculous amount of COMPLETELY UNNECESSARY spaces...another problem that "optionals" caused. 
And perhaps cryo should stfu. 
If adding numerous unnecessary spaces to a ternary (which is SUPPOSED TO BE SHORT AND ELEGANT WITH MINIMAL KEY PRESSES) was ok, then lattner would have stayed at apple...but he left...because swift was a mess and he ran away. 
That’s clearly not what he’s saying. He wants to represent the same *local* time. 
There is no requirement for single instance of ViewController, it can be more than one.
solid advice. I am going to start Hacking with Swift right now. I have read a bit about it but have been doing some udemy classes and working on various beginner problems. I'm excited to check it out. Thank You!
So damn funny. Yeah, I freaked. &amp;#x200B;
Solid advice. Thank you. I feel as if I am drinking from a firehose but if I continue and then come back later, it all makes a little more sense. I appreciate the reply. &amp;#x200B;
Also, yes. "Not smart enough" is always where I go first when I am frustrated
Here is github.com/Emprors/Flash-Chat
Not what I meant. I meant what if you want to prevent the same vc from being instantiated twice. Say there are two async calls that can both call the instantiate method.
finished the Angela Yu course . Decided to start with Stanford video , i am lost (Lecture 2) . Only thing i am sure about, is i dont know anything . just want to cry :(
Well... depending if this is the type of learning that would suit you, I would recommend pen and paper 😉 (or whiteboard) I find it useful sometimes to try to write some algorithm down - even in pseudocode - and "walk" thru it step by step... Of course if you're trying to learn some UIKit code or working with some other frameworks etc., this is not the way to go. But for me it was good way to learn how to think like a programmer.
I feel like I'm just hitting that moment - after a year, just like you say 😀
Yes, stuffing a few 35mb gifs into an app bundle sounds like a waste. Make them as small as you can while maintaining the quality you want. Consider mp4s unless you need gifs explicitly 
Confused, frustrated, everything 😂 My biggest mistake was trying to start with the Swift Programming Language book - which is horrible idea if you don't understand programming at all 😀 Now I am re-reading it after a year of learning, and everything makes sense now - almost 😀 I'd recommend going back to videos/books/articles/problems that you previously did not understand after some time - you'll probably get them by then. In my opinion, programming is about constant learning and constant "not-understanding". &amp;#x200B; Just keep on going, don't be afraid to ask questions and don't give up. It's an awesome feeling when you get something after weeks of struggle!
Why would you use gifs? Gifs are horrible for compression. Use an actual video format like an h264 encoded MP4 or something like that. You'll get better quality at a much lower file size. Think of it this way, the app size limit for non wifi download is 150mb. You'd hit that after 4 of your gifs. That's the size of some pretty big games on the app store. If you're not providing something of value to explain that size, your app will likely not pass review or even be downloaded 
Is there any info on how I can make an mp4 autoplay and loop just like a gif?
Is there any info on how I can make an mp4 autoplay and loop just like a gif?
It's a pretty common scenario so a quick Google search should return something for you Here's one of the first results https://gist.github.com/michaelevensen/9fe5e9e985846dff3196a73e0556970c
You should credit the maker of this video /u/twostraws 
Great advice! That is the direction that things seem to be heading. I am glad to hear you say that because the book has done nothing but confuse me. I seem to get more from coding challenges. &amp;#x200B;
It is up to you, there is no logic for that. You can use atomic counter for that.
Is this a case of not putting “@objc” in front of functions that get called in ways that refer to objective-c? Swift 3 inferred this but 4 makes you specify. And I don’t remember the warning being useful.
Hey after trying for the past hour I can't seem to get this code to work. The video never shows. Is there a way I could possibly show you my code?
I notice that in the other comment you mention not getting the video view. Can you share some code so we can help debug? You’ll definitely want to look at https://developer.apple.com/documentation/avfoundation/avplayerlooper I’d suggest searching the net for avplayerlooper swift example and see if you could get the sample code working. 
I guess you also thought it was a "tutorial" book, like me? In fact it's just a "manual"... If you wanna do iOS development (which is likely, I guess), I'd recommend Apple's "App development with Swift" - I learned a great deal from that book! &amp;#x200B; Also, if you wanna practice some algorithmic thinking, try [projecteuler.net](https://projecteuler.net) \- it's not something you do usually during app development, but I think it is useful to sharpen our problem solving swords from time to time 😉 &amp;#x200B; Cheers!
I had duplicate code figured it out thanks to someone from reddit thanks though lol 
The trick here is properly defining the scope of the functionality of the view controllers that you use. Otherwise, for a flow of 4-5 screens, the size of your coordinators blow up as it micro-manages the controllers in the flow. I’ve worked on a large application that used this pattern (almost exactly as he’s described it) and it’s amazing how easy it is to swap order of things, or add special case screens to the flow under certain circumstances. As an alternative, I’d highly recommend reading and considering some of the points that Ben Sandofsky makes in his article, replacing “Coordinators” with simple View Controllers. https://sandofsky.com/blog/controller-hierarchies.html Still, great thanks to Paul Hudson and Soroush Khanlou for introducing the Coordinator pattern and all of the talks/videos/literature and resulting discussion on the topic!
Hey here is the stackoverflow post I made: https://stackoverflow.com/questions/54380925/autoplaying-an-mp4-video-in-a-uiview-that-is-on-loop-like-a-gif So it looks like it works, but once I first land on the page it shows a white box for a brief second and then makes the entire video full screen and off the display. I want it to immediately start playing in the white box once you land on the page.
These are UI operations, hence they should be on the main thread, preventing concurrent calls to the same function. 
Post your code here and other people may be able to help you as well.
Sorry, but that’s not the case if you read his response. He needs to adjust an incorrectly provided time (which shouldn’t happen; he’s dealing with a buggy server).
Looks good to me. Just take @Salmon544 s suggestion and you are good. 
Maybe it's because I'm a Mac developer and not an iOS developer but I'm not getting it. What's the duplication that he claims to be removing here, exactly? I only see a little duplication being added: the Storyboard ID must always equal the class name. Also, I suppose, the protocol implementation essentially duplicates the protocol definition. (Nit: why use a forced cast for the storyboard, and assume the ID was always set correctly, but not a force dereference in the controller? If for some reason the coordinator was released, all of the IBActions would silently become NOPs.) The sample is a trivial app which would have been even simpler with ordinary segues. What's the case where you'd want the ability to easily re-wire the flow of your app? What would the "Buy" button ever do, if not present the BuyViewController? As a user, it seems to me that encouraging a simple top-to-bottom flow is a great *benefit*: apps are simple enough that I can understand them. This strategy adds code and indirection, and makes the flow less visible. These have real costs, and while I'll grant that these are often worthwhile, I don't see what he's getting out of it. Is he just concerned that the controller was becoming too "massive", and he needed to move some of that code elsewhere?
Right perhaps, but his post indicated that since the times were the same. Oh well :)
Took about 10 min to transform a small project over to use this. Love the organization of this, and it also pointed out some stuff I should probably refactor properly
 The Storyboarded protocol is not related to the Coordinator pattern at all. You can use Coordinators without it. &gt;The sample is a trivial app which would have been even simpler with ordinary segues. What's the case where you'd want the ability to easily re-wire the flow of your app? If your app is trivial you don’t need any design patterns. The whole point of design patterns is to handle complexity. The more complex the app the more you gain from good design. You’d want to easily re-wire your app if your customer doesn’t know exactly what he wants from the very start which is 90% of the time in my experience. The requirements change all the time during development. Being able to easily rewire the app makes your life easier. Another case would be a redesign of the app or part of the app. It happens if you work on an app that is maintained for long periods of time. &gt;What would the "Buy" button ever do, if not present the BuyViewController? As a user, it seems to me that encouraging a simple top-to-bottom flow is a great *benefit*: apps are simple enough that I can understand them. As a user, it seems to me that encouraging a simple top-to-bottom flow is a great *benefit*: apps are simple enough that I can understand them. &gt; &gt;This strategy adds code and indirection, and makes the flow less visible. These have real costs, and while I'll grant that these are often worthwhile, I don't see what he's getting out of it. „Buy” button can present BuyViewController on iPhone, it can present an alternative VC on iPad, it can present LoginViewController if user is not logged in. This logic needs to be somewhere and VC is not a good place for that (Single Responsibility Principle). For me the main benefits of using Coordinator pattern are: 1. VCs are isolated. They don’t know about each other which makes them reusable and easier to reason about. 2. It’s easy to grasp the navigation flow of the app. If you’re using Coordinators you only need to look there and you know that all pushing, popping and presenting is there. So just by looking at Coordinators you can quickly understand the navigation flow of the whole app. You don’t need to look into tens of View Controllers which all push, pop and present view controllers. This is especially important when introducing new team members. 3. Testability. In tests you just inject mock Coordinator that does nothing and you don’t need to worry about presenting view controllers in tests. &amp;#x200B;
Perhaps the reason it's trying to force you into `ofClasses:` is because that method only requires `AnyClass`. I don't think Swift generics are powerful enough to say "make this function generic across types T1, T2, ..., TN where each Ti is `NSObject &amp; NSCoding`".
Dig into the playerlayer 
&gt; Will you switch your deployment target to iOS 12 or macOS 10.14 this spring? I doubt it. This decision is only based on adoption rates though. I would support iOS 12 or macOS 10.14 this spring if adoption was high enough. And I have to imagine the scale tips in favor of forcing an upgrade considering: * developer adoption is probably naturally higher than average users, since developers tend to be nerds and want the cool new OS. For the same reason, and because development is resource-intesnvie, devs probably have newer or more powerful hardware capable of upgrading to 10.14. * forcing developers to upgrade comes with hardly any negative publicity, since the minority of devs that aren't already on 10.14 are used to these kinds of forced upgrades, and the number that are on unsupported hardware is probably very very small.
The nice thing is that as you learn, the hard parts get a lot more rewarding, so motivating yourself to keep learning gets easier :) For me at least there was this dawning realization of “oh... it’s ALL just code, and I can do that. It may take a lot of time and effort, but I can build almost anything”. Since then I’ve jumped head first into everything from chat programs, to web browser engines, to web sites, to operating systems, and it’s still true.
My unstructured BASIC on a Commodore 64 at age nine? Pretty dire, yeah.
Here is a playground showing how the code you got from SO works. As others mentioned it's supposed to be used in a UIButton subclass. import UIKit import PlaygroundSupport class MYButton: UIButton { override open var isHighlighted: Bool { didSet { backgroundColor = isHighlighted ? UIColor.blue : UIColor.cyan } } } PlaygroundPage.current.needsIndefiniteExecution = true let view = UIView(frame: CGRect(x: 0, y: 0, width: 500, height: 500)) view.backgroundColor = .white let button = MYButton(frame: CGRect(x: 250, y: 250, width: 150, height: 30)) button.setTitle("Color Change", for: .normal) button.backgroundColor = UIColor.cyan view.addSubview(button) PlaygroundPage.current.liveView = view
Had to play around, since the code you found on SO isn't really reusable. I came up with this: import UIKit import PlaygroundSupport class MYBetterButton: UIButton { var backgroundColorsByState: [UInt : UIColor] = [:] override open var isHighlighted: Bool { didSet { guard isHighlighted else { backgroundColor = backgroundColorsByState[UIControl.State.normal.rawValue] return } guard let colorTuple = backgroundColorsByState.first(where: { $0.key == UIControl.State.highlighted.rawValue }) else { return } backgroundColor = colorTuple.value } } func setBackground(_ color: UIColor, for state: UIControl.State) { backgroundColorsByState[state.rawValue] = color if state == .normal { backgroundColor = color } } } PlaygroundPage.current.needsIndefiniteExecution = true let view = UIView(frame: CGRect(x: 0, y: 0, width: 500, height: 500)) view.backgroundColor = .white let button = MYBetterButton(frame: CGRect(x: 250, y: 250, width: 150, height: 30)) button.setTitle("Color Change", for: .normal) // Background color setting that matches setTitle function call button.setBackground(.cyan, for: .normal) button.setBackground(.blue, for: .highlighted) view.addSubview(button) PlaygroundPage.current.liveView = view It's at least reusable and lets you set the highlight color from the outside. I just did this quickly so it's by no means perfect.
you’ve used upper case ViewController here, did you mean to use self rather than the class name? other than that maybe show how you’ve setup the array
[Big Nerd Ranch's Swift Programming (free)](https://www.bignerdranch.com/documents/swift-prereading-assignment.pdf). This is their pre-reading assignment for their iOS programming course. 
`currentLocation` is nil. You need to use the async (callback) variant as it takes a moment to get the location. Also it's best to avoid implicitly unwrapped optionals (`!`) for this exact reason.
Newbie here trying to help out (may be wrong). It looks like you used action as a variable but also in the closure. Think you have to change one of them. 
At least in mobile, the code samples have &amp;gt; instead of &gt; Otherwise this looks interesting and I’m excited to give it a read
The issue is the try Item(...) part. UiAlertAction expects a closure that does not throw, yours can throw and therefore does not match the required signature. Wrap it in a do catch block yourself, handle the error accordingly and you‘ll be fine. On another note: I see you using wuite a lot of ! For force unwrapping or force downcasting. While not knowing the context or your application, I‘d still suggest you work with guard statements and as? instead to avoid cryptic crashes and being able to recover from such an error. Good luck with your project!
Oh sorry, I fixed it.
Sweet! Great article! Do you have to use the .enunerate notation for the for-in loop, or would it suffice to do for fib in FibonacciSequence(upto: 10){ print(fin) }
I used .enumerated() to have the indices, otherwise for (index, fib) in FibsSequence(upTo: 15).enumerated() { print("fib: \\(fib), index: \\(index + 1)") }
Sweet. Are there any other nice things that you get for free once you make a sequence type?
Your closure throws. Handle the exception handling and you are Gucci.
like what?
Idk I guess like does map/filter/reduce/etc come for free once you conform to the Sequence protocol? Or are those specific to arrays?
Of course, once your type conformed to SequenceProtocol you get all those builtin functions for free
You can create a free developer account, without paying $99 per year. You'll have to pay if you are publishing your app to the App Store.
You can get a developer account for free. While learning that’s all you will need. The main things a paid account gives you is the ability to submit apps to the app store and gain access to beta software. 
Ok, thanks. I’m happy I don’t have to dish out $99 bucks just yet.
Thanks, I plan on publishing an app in the future, gives me time to save up.
Can also second this. I found “iOS development with Swift” to be helpful and I’m now on “Swift in Depth.” I can’t attest to the other books yet 
Definitely lots of confusion and frustration simultaneously. Many times I felt as if I was sort of running in place as it was hard to see measurable progress. But as I kept chipping away at it, things definitely “clicked” more. Though I did have some (not a lot of) prior experience using Python so it wasn’t as daunting as starting from absolute scratch 
I think it's not necessary at all to have an Apple Developer account to create Swift applications since it's open source and is not reliant on anything Apple. [https://nshipster.com/vscode/](https://nshipster.com/vscode/) for example. You could write a back-end API in Swift on a Linux machine if you wanted, no account needed. Distribution through Apple's platforms and tools is a whole other story. Like the other commenters already said you can get an account for free.
Totally!!! What really helped me realize this, was watching Stanford "programming paradigms" lectures (taught by amazing teacher, Jerry Cain - here's a link, for anyone interested: [https://www.youtube.com/playlist?list=PL9D558D49CA734A02](https://www.youtube.com/playlist?list=PL9D558D49CA734A02) ), where he talks a lot about very low level stuff. Once I grasped that it's all basically just data &amp; some actions being performed on that data (or really all just electricity passed thru gates etc.), everything went "Oh, I could totally do anything, given enough time to learn and then make it happen!" &amp;#x200B; Couldn't agree with you more! Cheers! 😉
I will fully confess that it has been a while since I’ve written anything in Swift, and that even when I was it was mostly pet projects/personal implementations. The short of it is, I am definitely a novice in the language, so understand there is absolutely no judgement in this question. That said, just out of curiosity what sort of performance gains are you seeing? And at what scale of data would you recommend your library?
Note: These results are on release compilation, whole module optimization. I did one test where I decoded all data. 100_000 times parsing a username and an id field (both strings) from Foundation Data. Both my codable and the Foundation JSONDecoder. The JSON was 30 bytes long. After 100k runs the difference was 400ms (Ikiga) to 700ms (Foundation). 70ms went to the lightweight scan. The difference in performance will definitely vary per contents of the JSON. Mainly whether there are escaped characters and the length of the string. Both implementations have a different solution to parsing strings, so I didn’t test each use case extensively yet. I have more results on my laptop at home, so I can’t share those right now. But as you may imagine, parsing 30 bytes for an average of 3 microseconds in difference is insignificant st small scale. However, if you do parse large amounts of JSON like an API or larger datasets you’ll find the accumulative difference quickly. I averaged about 100ms performance gain per parsed Megabyte of JSON data. This is assuming all JSON is consumed. If 200’000 key-value pairs make up 70ms and reading their values makes up 630ms, the gains are projectedly quite big if you end up not needing data. And that’s where the lib banks upon. About 30% of the JSON my iOS apps receive is not parsed. These numbers largely align.
That’s pretty slick. I have a few larger dataset projects coming up and have been debating on giving Swift a crack again (I don’t think I’ve done anything since the language launched). I’ll have to give your lib a try, see if it helps get in front of some potential performance issue. Thanks!
But with free developer account, your apps on your device will work only for 7 days, then you have to build them again. So don’t be suprised when they will suddenly stop working.
You can build around 95% of any app with a free developer account. The two big things you NEED a paid account for are setting up in-app purchases and sending push-notifications. Build your app up until everything is done except those two or when you’re ready to launch to the store. 
Replace TRY with DO on let newItem = TRY item(
What does "Ikiga" mean?
I've been wanting to write a streaming JSON parser for a long time, but never seem to have time. By "streaming" I mean that it parses the JSON as it arrives rather than waiting for the last byte. On slow networks this could make the parsing overhead almost irrelevant. Something to consider for future updates maybe?
It comes from Ikigai in japanese. A reason go be, a layout of doing what makes you happy. For me, that is opensource software in Swift. Nothing gets me excited more than sharing what I love to create with others. Be it through presentatioms, meetups, forums, articles or code.
This has been on my mind, too. And it’s doable as long as the top level object is an array. Add an issue and I’ll see if I can have it added as a feature. Otherwise I’m positive I’ll forget
I see. FYI, I'm a Japanese and I read "Ikiga" as "息が" (means "(my/your) breath is ...") rather than "Ikigai". So I thought "Hm? Your breath is JSON"? This is like a rock band's song title.".
Thanks :) maybe I should try to rename it :)
That is true, sorry!
Edit: All credits to [/u/twostraws](https://www.reddit.com/u/twostraws)
Try this: do { let newItem = try Item(...) } catch { print(„Error creating item \(error)“) return }
That is awesome!
I really wouldn't worry – I think it's pretty clear from the opening seconds who made the video :)
Just to answer, the Apple documentation is great, and there are also guides from RayWenderlich, HackingWithSwift, and many others. I would suggest starting with the guide from Apple on how to write basic Swift code, then to jump into some projects, try out HackingWithSwift and see how that fares for you. There are a ton of resources and I think it's important to just jump in to get your feet wet.
I was going to do a mixture of all three, I really like HWS/Wenderlich.
No luck.
I don't know why you would need to set a hard limit on the number numbers the sequence can produce when you can already call `prefix(x)` to get the first `x` elements of a sequence. I'd just use the wrapping addition operator and check for overflow. This would also let you make `FibSequence` it's own `Iterator` which saves a bit of code. public struct FibSequence: Sequence, IteratorProtocol { private var state: (UInt, UInt) = (0, 1) public init() { } public mutating func next() -&gt; UInt? { guard state.1 &gt;= state.0 else { return nil } defer { state = (state.1, state.0 &amp;+ state.1) return state.0 } } for (i, fib) in zip(0..., FibSequence().prefix(15)) { print("fib(\(i)) = \(fib)") } 
`let alertAction = UIAlertAction(title: "Add Item", style: .default) { (action) in` `let item: Item` `do {` `item = try Item(from: JSONDecoder() as! Decoder)` `} catch {` `print("Error while creating item: \(error)")` `return` `}` `print(item.id)` `// append and save item here` `}` &amp;#x200B; Hope this helps
Replace TRY with DO. Do that. What's not to understand? 
Hey guys. &amp;#x200B; So I've been working on the most recent Intro to App Development with Swift and going through the exercises provided. I am currently on exercise 16. ChatBot proj. &amp;#x200B; Within this exercise there is a bunch of stuff they have us do but we never touch on the ConversationViewController.swift file. Even though I haven't altered this part of the project an error pops up: **let** message = conversationSource.messageAt (index: indexPath.row) error : Value of type 'ConversationDataSource' has no member 'messageAt'; did you mean 'messages'? Replace 'messageAt' with 'messages' &amp;#x200B; I am just starting with Swift and don't really know what this means or how to fix it? thanks for your help!
I’m working on two iOS Apps, a Diary and an app that use ARKit (sneak peak: Street ARt app), yes, with this my app, everyone can be a very Street ARter, thanks to this app, less dirty walls, more clean walls, thanks to this project, If you want more news about my ARApp, visit NicoDevItalia web site (Italian web site) to get more news (nicodevitalia.com).
Great video 😉
Is this an animated pop up tab? Are you asking how to do that or create the table view to look like this?
Can you elaborate what aspect of the tableview you have questions about? It's difficult to tell from the picture.
Do you mean the floating/overlay/pulling view like Maps or Stocks? If so... There's no native component for it (although it appears in more and more stock apps, so maybe it will be for iOS 13), but you can use any of these libraries if you don't want to do it yourself: * [https://github.com/applidium/ADOverlayContainer](https://github.com/applidium/ADOverlayContainer) * [https://github.com/52inc/Pulley](https://github.com/52inc/Pulley) * [https://github.com/SCENEE/FloatingPanel](https://github.com/SCENEE/FloatingPanel)
Definitely the best way to go about it in my opinion! Hope it continues to keep you interested, it’s a great language and I can’t wait what Swift 5 will bring soon.
How frustrated will you let yourself get before accepting that programming isn't about just mindlesy pasting crap together from stackoverflow? You really need some structured learning (online course, book, etc.) to learn the basics and understand what you're actually doing. That will lead to a much more pleasant and successful experience.
Thank you
Might be a good way to practice my Italian.
You may be interested in the podcast Under the Radar on [Relay.fm](https://Relay.fm) ( [https://www.relay.fm/radar](https://www.relay.fm/radar) ). David Smith has many apps that seem to support a successful indie lifestyle. Marco Arment is also successful (built Overcast and Instapaper from scratch mostly by himself (minus some things like parts of the design) among other business ventures; but, in short, he supposedly made enough money to retire because he was the second employee at Tumblr, so he does have some financial freedom that allows him to take more risks). Under the Radar talks about developing apps and issues as well as some fun and not so fun aspects of it as an indie. Marco is also on Accidental Tech Podcast [https://atp.fm](http://atp.fm) which is probably one of the most famous Apple podcasts (but not about app development). &amp;#x200B; While not too many iOS developers are on there, [https://www.indiehackers.com](https://www.indiehackers.com) also has many stories from small startups. Some of the stories are interesting because they document the struggles and how much hard work it takes to launch something.
I work from my college dorm and make enough to buy coffee and pizza. It’s honestly perfect:) nothing makes me happier than seeing someone left a review thanking me for doing what I do.
[Interactive Card View Tutorial](https://youtu.be/L-f1KSPKm4I)
Thanks I will look into those. I love reading about the struggles cause it gives you motivation to keep going 
Currently in the same boat, happy to bounce ideas/help with problems from time to time if your interested.
+1 for Under the Radar. It’s a really good and insightful show. 
I’m working remote for a company writing Swift all day. But not as a indie dev. 
Wouldn’t this be better suited for iOS subreddit?
People are not very creative with names I guess...
Thats exactly what i was searching, thank you!!
Thank you, thats what i meant!:)
Actually i just wanted to know how this thing is called and how to do it.
I was asking about the animated view that is in the foreground on the picture.
[removed]
I'm learning swift and when it comes to books I've noticed development with Swift and Xcode goes very fast compare to other languages and that's both good and bad thing. Most resources I find with actual books is that even tho they may not be that old, one to three years, it's already something that may be outdated or may not work (first book I read had old tutorials for that didn't work because it used a old xcode version etc) . So I'm kinda all into video tutorials, blog posts, apple's own stuff, etc. &amp;#x200B; I like how Ray Wenderlich has made their stuff updated and even with video tutorials you can pick depending on say, what Xcode version. Something that you can't do with a book.
You should read “App Development with Swift” is a free eBook from apple that will teach you the basics of Swift and iOS Development. It’s on iBooks Store.
Downloading right now! Thanks for the suggestion. 
https://learn.markwahlbeck.com/join-waitlist
So now he teaches people to get rich fast. Maybe it is a better way than becoming a coder. 
Can confirm. He changed his name on LinkedIn too. Now he’s writing fiction and teaching get-rich-quick schemes. Devslopes was dead as soon as he brought in people to start teaching for him. They weren’t all bad, but they definitely didn’t have the skill for teaching like he did. After that, he made his own platform to sell his videos which seemed over-ambitious. Anyway, good luck to him. Based on his LinkedIn, people have been asking for this course for a long time
It's cool to have your own app up there but honestly it's really hard to, on your own, create something that will bring a genuine profit.
It’s most likely a UITableView with a custom headerView. The cells look like a standard cells without any customization. UITableView cells have an imageView by default 
Felt like I didn’t learn anything from his course. 
I m halfway through his course. I think it’s not bad. I am complementing it with Angela yu course. 
Are they hiring? 🙂
What app have you made? 
Sounds like a decent job still any job where u can work in your boxers while watching the punisher is good to me lol plus our city just got 6 inches of snow and -10 degrees out and walking to work just doesn’t sound fun today lol 
6.0 inches ≈ 15.2 centimetres ^(1 inch = 2.54cm) ^(I'm a bot. Downvote to remove.) _____ ^| ^[Info](https://www.reddit.com/user/Bot_Metric/comments/8lt7af/i_am_a_bot/) ^| ^[PM](https://www.reddit.com/message/compose?to=Ttime5) ^| ^[Stats](http://botmetric.pythonanywhere.com) ^| ^[Opt-out](https://www.reddit.com/message/compose?to=Bot_Metric&amp;subject=Don't%20reply%20to%20me&amp;message=If%20you%20send%20this%20message,%20I%20will%20no%20longer%20reply%20to%20your%20comments%20and%20posts.) ^| ^[v.4.4.7](https://www.reddit.com/user/Bot_Metric/comments/8o9vgz/updates/) ^|
Anyone sign up for his new stuff, if so, how was it?
It sounds like https://www.hackingwithswift.com/read by /u/twostraws would be a good fit for you. Each chapter is making an app
We have a 3-2 2-3 policy at our company. 5 days from home every two weeks. We have to reserve desks when we work in office and we have mandatory (/anchor) days to make sure we meet everyone each week.
His course was one of the worst I tried on my companies udemy subscription. Angela's is okay, not great. Best I found was Ray Wenderlicks Udemy course. 
It’s a music stat app called snd.wave! Here is the link: https://itunes.apple.com/us/app/snd-wave/id1326673854?mt=8
Would you mind take a screenshot and show us? My guess is that there's some grey tab you didn't fill in the code.
Ah FYI the markdown code for the code example you submitted is not rendering correctly
My code is quite long but I can take a screenshot of a specific section. Which part of the code do you mean. There is no grey tab (although I've seen this with others that have had with the same error)
ah I see, did Xcode highlight any line that caused the error? Try removing the brackets for randomWrongClause : answer1.text = randomWrongClause 
Placeholders in Xcode are the small gray fill-in-the-blank rectangles that it puts in when you use autocomplete. If you type ‘&lt;#placeholder#&gt;’ in Xcode, that will show you what one looks like. Because these are generally added by Xcode as a placeholder for actually code for you to fill in later, the compiler will tell you to get rid of the placeholders first as this generally means you forgot to fill out some part. 
Alright, I took a screenshot. How should I send it? Btw, it still gives me an error even if I remove the parentheses/brackets.
I just launched [Emporter.app](https://emporter.app) for macOS this week. It creates a URL to your Mac to help web developers and designers work. It's pretty nifty for mobile app developers, too. There's still a lot to do. I'm pretty excited to share some engineering posts with the community :)
[Screenshot](https://drive.google.com/file/d/1eslkfhCISE7Q-h0lcD5SiFpkByGV4zEZ/view?usp=sharing)
The weird thing is that I have to &lt;#placeholder#&gt; greyed out areas anywhere in my code.
Hmm, probably Xcode glitched out (this is kinda common sadly). Try pressing Command + Shift + K to clean build folder and see if the error still there. Or try restarting Xcode if the above doesn't work.
Weird. Looking at your screenshot, that line seems normal. I might try cleaning the project and building again, or maybe even deleting derived data since it might just be Xcode goofing. 
Intersting. I commented the lines to test something out and when I uncommented them, it didn't give me an error. Wow... 
I believe that the path argument is expected to be absolute, so you need to convert the argument to an absolute path yourself. You should be able to do this pretty easily using `FileManager.currentDirectoryPath` and `URL(fileURLWithPath:relativeTo:)`. And, since you may be using URLs now, you can just call `InputStream(url:)` instead. All together, it might look something like this: ``` let currentDirectory = URL(fileURLAtPath: FileManager.currentDirectoryPath) let absouteURL = URL(fileURLAtPath: path, relativeTo: currentDirectory) let stream = InputStream(url: absoluteURL) ``` I didn't actually compile the code myself, but it _looks_ about right :)
&gt; companies udemy subscription. company's* Udemy* subscription companies = more than one company Possessive nouns! How do they work?!
ok. thank you for your clear and detailed explanation. It might indeed allievate my concerns.
But you can just use Xcode to create a command line app. How is this better?
We all knew what he was saying, Mr Smartypants
One of the reasons he did this was because his cryptocurrency cache coin failed due to the crypto market. They probably ran out of what they initially raised so couldn’t continue. I am sure this was his way of trying to disassociate himself from that. I think he should have stuck to Udemy instead of making his own platform. There are plenty of resources out there. Like checkout hackingwithswift or if you have Lynda membership then go watch videos there. 
Imo Once you learn it is pretty easy to switch over to kotlin pr even java for Android.
i have a Lynda membership. Do you have any recommendations on what teachers/courses to watch? 
Yep. German time Zone 
I only do it on fridays, otherwise you are losing the connection to real life 
Very nice, though your code doesn't generate \`fib(93)\` even though it still fits in a \`UInt\`. This seems to be the easiest way to fix it: public struct FibSequence: Sequence, IteratorProtocol { private var state: (UInt, UInt) = (1, 0) public init() { } public mutating func next() -&gt; UInt? { guard state == (1, 0) || state.1 &gt;= state.0 else { return nil } defer { state = (state.1, state.0 &amp;+ state.1) } return state.1 } }
I have so far done the rxswift course by Scott Gardner. I believe their courses are a bit more refined compared to udemy. Also you can search for specific things like let’s say you want to learn autolayout or core data or animations or design patterns. Courses are shorter and on point, usually 2-3 hrs per subject. 
Awesome thanks for the reply. I'll check it out tonight
the ol' comment-out and uncomment trick is something you'll use pretty often with xcode
Thanks for taking the time to write out an answer. Unfortunately I think you missed the point of my question. &gt; You’d want to easily re-wire your app if your customer doesn’t know exactly what he wants from the very start which is 90% of the time in my experience. The requirements change all the time during development. Being able to easily rewire the app makes your life easier. Another case would be a redesign of the app or part of the app. It happens if you work on an app that is maintained for long periods of time. I asked why you'd want this particular kind of flexibility, and you essentially answered that you'd want it for the flexibility. I completely understand that requirements change all the time. I'm looking for some specific example of a requirements change for which *this type of flexibility* would be beneficial. I've been writing software professionally for decades and I can't say I've ever seen "rewire a flow" as something that's either very common, or very difficult. In a typical project, I see a minor adjustment to the user's workflow every year at most. That's not nearly enough to justify a significant architecture change. &gt; „Buy” button can present BuyViewController on iPhone, it can present an alternative VC on iPad, it can present LoginViewController if user is not logged in. But what "alternative VC" would it be, on iPad only, other than a BuyViewController? Would clicking "Buy" do something different on a different platform? Wouldn't that just confuse users, who expect the app to act the same as they're used to? You're just tossing around vague what-ifs. Granted, it could present LoginViewController if you're not logged in, but that seems like an isolated case, an easy "forward to LoginVC" call to add in a few places, and something that everyone knows about at the start of the project. Is there any other situation in which a control would point to two completely different VCs? And/or, one in which you wouldn't know about it well in advance of writing any code? &gt; This logic needs to be somewhere and VC is not a good place for that (Single Responsibility Principle). This seems a little weak to me. SRP is a good guideline, but no class is truly single responsibility, and this particular item takes very little (or no) code. What exactly *is* a VC for, if not (as the video says) UI design, or navigation? &gt; For me the main benefits of using Coordinator pattern are: VCs are isolated. ... It's easy to grasp the navigation flow ... Testability OK, but if these are your priorities, why use VCs at all? A functional approach (like React) is far better at all of these. Stateful objects are ultimately a hot mess to reason about, on a sufficiently large and complex application, no matter how you split them up. On the one hand, I'm hearing: "We've got a big complex application that changes significantly all the time. We use Swift, which has good support for value types and immutable objects, to make the model easier to reason about." But on the other hand: "Our user workflows change every day, too, but we're going to keep using mutable interconnected objects (with weak backrefs and force casts and ...) for the UI layer." That sounds a little nuts to me.
Wow... this is quite shocking to me. I didn't follow him too closely but he shared his team video calls on YouTube and it seemed like they had a lot brewing.
A good framework for building command line programs would be nifty, but this is not that. It offers almost no new functionality, and the functionality it does offer is not good. The main feature seems to be a new serialization method which works by dumping a class's memory straight into UserDefaults. I'm honestly shocked that this would ever work at all. It's certainly not safe or reliable.
This looks fantastic. I'm starting it right now. Thanks for the tip!
What's your working directory?
Former Devslopes “student”. I’ve been wondering what the heck happened to the company. I almost bought their Swift/iOS course after they upgraded the platform to Devslopes 2.0 but decided not to because it was so much more expensive. Wow, that’s crazy. I thought they were legit. They seemed to have a solid team. 
Well, is it an introduction to iOS using Swift? Is it an introduction to iOS as in overall? I think that really matters because it will form the basis for your introduction talk. If they're already building iOS apps with hybrids, chances are they understand the basics in how some things work and are looking for a deeper dive on these topics and want something more thorough on the entirety of say, what a UIView is.
I’m actually working on one right now, let’s see what income it brings in. 🤞🏼
What kinda app feel free to message me we can talk over ideas if you’d like 
I could not understand what is Delegate and protocol is if somebody can explain it to me in an easy way ?:
I do!! But I have literally hundreds of apps, not just one. But I make them all for 100% free in 100% swift. They are all free with Admob Interstitial. With this income (which is 100% profit) I am able to pay my bills and live comfortably (however I own a home and car that are paid for)
Hmm so you make money from ads?
Yep and then selling the code. (It splits up about 50 - 50) Fliptopia or Flippa. Many times also when you sell the code, the buyer doesn't transfer over the Ad revenue, because they don't know how. So oddly I have apps that I have sold that I still get ad revenue from. But remember I have made literally over 100 apps. I am no longer selling my code now though. My apps are getting good enough where I want to keep them. I literally just had one approved 15 minutes ago. It is Ken Ken but all the puzzles are computer generated. Really cool algorithm and my best programming yet! But you CAN make a living doing it. 
there are multiple posts a day/week that ask somewhat the same thing click on em
He's point is that he's wondering what your post has to do with the Swift programming language. I think you typed in the wrong subreddit by mistake.
You're not screwing yourself with regard to the Android version, but it'll need to be rebuilt in Kotlin/Java when it comes time. Kotlin is similar to Swift, so you should be fine. 
Lots of places to start. Search for Stanford CS193P on YouTube. Paul Hagerty’s iOS development class is an excellent resource. Got an iPad? Download Swift Playgrounds. My nine year old daughter is currently learning the basic concepts (in addition to Swift syntax) from Playgrounds right now. 
Swift is a powerful and interesting language that can be effective for building many types of software, but I would not recommend it as anyone's first language. It's big and complex and has lots of features that only make sense in light of decades of history and backwards compatibility and external interface requirements. Do yourself a favor and start with Python or Ruby or Pascal or Scheme or even Java. Once you know how to program, then learn Swift.
_ = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true, block: { (_) in //code }) If you are using self, make sure to use weak self or else ARC won’t kill it and you’ll get a memory leak
Thx I’ll try that tomorrow and should I put it in the update function?
Don’t know what your “update function” means
Like the prebuilt function that updates every frame
No bc then you’ll get a new timer every frame, each one repeating every second
Thx for the help :)
That's very clever. I had to print out state every iteration to see why it works. I would never have thought of that one.
I generally don't really like "clever" solutions, but unfortunately there's no easy way to first generate 0 and then what we were already generating. `yield` will make this a lot easier in some future Swift version!
I taught two Swift classes at my previous company, one for developers and one for non-developers. Developers want to know how to do stuff they already know how to do, but in Swift. Non-developers think of an app as a UI; create a storyboard with a button, a text box, and a UI label, and show them how to use the three together. They’ll think you’re a magician. 
Download Intro to App Development with Swift from the Books app store (it's free). 
@maustinv is right but also note that you need to store the timer in a var so that it doesn't go out of scope at the end of the function where you create it. [Here](https://www.hackingwithswift.com/example-code/system/how-to-make-an-action-repeat-using-timer) is an example which makes a timer which calls a function each time.
You don’t need to store it. It will still execute 
Using a **Timer** as suggested in the comments isn't really what you are looking for. Since you already have an **update()** function that is called on every frame, all you really need to do is store the value of the last time you fired and if that + the update functions current time are over a set threshold (1sec / 1000ms) then store the current time and call your **fire()** method. Something like this: let lastFireInterval: TimeInterval = 0 func update(_ currentTime: TimeInterval) { if lastFireInterval == nil { lastFireInterval = interval } var delta: CFTimeInterval = interval - lastFireInterval! if delta &gt;= 1000 { fire() } lastFireInterval = interval } Since your **update()** will be called way more than once a second you'll need to keep track of the last time you fired, and use that to determine if enough time has passed for you to fire again.
Didn’t this happen to Bitfointain too? Published some cool mobile development videos like 4 years ago and now the dude is using the mailing list to shill cryptocurrency trading get rich quick schemes. 
perhaps you'd like to hear some reasons from the guy that inspired this guy's video: http://khanlou.com/2015/10/coordinators-redux/
Good question. I got one course free to sign up and a few months later it was gone. I hope Mark isn’t going that route. I really enjoyed his old courses. 
My recommendation is take a look at the books Apple have published for Schools (Intro to App development in Swift and App Development in Swift) great examples and structure
I would do a simple app that is in line with the kind of work they do now. So if they make games or new feed readers or utilities, I'd make a simple one and DON'T get deep into complex parts of Swift. Use the basics of the language and then if you have time after showing how to build the app, get into the benefits of Swift without losing them in complex concepts. Have the app ready made, but also show the step by step. One thing I hate is the "watch me type" tutorials... they suck, nobody needs to watch anybody else type. Enlarge the text and maybe have several ready made projects so that you don't repeat the same process over and over again.
I assume /Users/myusername/ProjectDirectory/ since I have only been running the application from xcode directly. I will try later to print the working directory when I'm at my laptop and report back.
I will try this later when I'm at my laptop and report back.
idk why this is downvoted, this is the right idea. i would make the timer dynamic with the fps, so like fire it every fps frames. sounds like op is using spritekit and from experience there's some kind of frame rate function.
That's what I thought. Maybe downvoted cause I said that the Timer solutions weren't the right way to go. Maybe could have been a bit more diplomatic in how I said that. 
Congratulations choosing for Swift which is an excellent choice of first language. I have experience in many programming languages (Java, Python, C, Javascript, C++, Pascal, Haskell) and Swift is my favourite. There will be more concepts to learn than for a scripting language like Python but it is overall a much more powerful language. If you can learn Swift thoroughly then you will have encountered all of the concepts that crop up in other languages (apart from Rust and Haskell). The Stanford iOS course on YouTube is where I started learning Swift but I already had a couple years Java experience. I think this is too advanced for a beginner. Raywenderlich.com is an excellent source of info. I think they have books aimed at beginners. The playgrounds app would be ideal if you have an iPad.
Thanks, I stand corrected.
i mean tying it to fps isn’t the best because if you’re phone is getting hot due to background processes spritekit/scenekit are known to throttle to 30fps, but to tie it to the main game clock is a good idea. making an async call every second probably has some kind of overhead, might be fine for one but if it becomes practice it won’t scale well.
I disagree, Swift was my first language and the only one I’ve been able to stick with after struggling with both python and ruby for various reasons. I think it’s a perfectly easy first language.
One thing that really rubbed me the wrong way was the advice regarding UI design, which basically boiled down to "just copy some existing app's interface, maybe change a few colors".
If devs code like they spell...
So should I specify a file locations in which to save the state?
That better?
Hmmmm
This is a way to simplify the process. You still have to use Xcode. This is a framework for building apps, not a whole new IDE.
But OP said that this was for building command line apps. The process is simple enough already. I don't get what the big deal is.
I printed the current directory with `FileManager.default.currentDirectoryPath` and it gives me something like the following: `/Users/myusername/Library/Developer/Xcode/DerivedData/ProjectDirectory-hifobettaxyeohgetuwjesqsoqxk/Build/Products/Debug` Inside that directory is the compiled binary, but not the file `file.extension` that I put inside ProjectDirectory next to the .xcodeproj file. I guess in that case it makes sense that I need to work with absolute paths as described by u/youngdynastynet
So I tried it out, and unfortunately `FileManager.currentDirectoryPath` returns the location of the built binary, which, by default is not the same as the source directory. Following [this](https://stackoverflow.com/questions/26143930/xcode-how-to-set-current-working-directory-to-a-relative-path-for-an-executable) stackoverflow question, the project build directory can be changed.
Need a little help; my daughter is creating a little program that has two sprites having a conversation and wants the next text to display when the screen is touched (not anywhere specifically, just a screen touch). We have tried working with touchesbegan but is there a simpler way to indicate the screen has been touched to trigger a text change? Hopefully this is clear enough, thank you!
I’m learning too and recommend starting with the app swift playground on iOS.
People in this sub seem to love timers. I see questions like this asked fairly often and the more junior devs always advise people to use timers, while downvoting other suggestions. In most games, you almost always want to tie events to the frame rate. If your game slows down for any reason, you don’t want baddies being able to move when you can’t see what’s going on. Sure, this can also cause games to run faster at higher fps, but there are ways around that. NStimer is also a bad choice if you need accuracy in your app. For things like that I generally use something like CADisplayLink which will tie events to the screens refresh rate. Then there’s also setting alarms, or timing something based on the actual time. This requires another solution like using the calendar APIs. In other words use the best tool for the job.
Been a while since I’ve made a game in pure iOS, but I still remember that tying things to FPS was a horrible idea lol. These days we are using Unity3d, and its always tied to some sort of Time.Delta variation. I can’t claim to be an expert but I do hope those guys at Unity know what they are doing..
Why the app "Requires iOS 12.1 or later"?
As far as i know Caleb &amp; Jonathan left Devslopes and they started doing Udemy courses together this is their iOS 12 course didn’t watch it btw so i can’t say if its good or not https://www.udemy.com/ios-12-learn-to-code/?couponCode=BF_IOS
DeltaTime is based on frame rates.
This entirely depends on what you’re using it for. Animations? Fix it to the frame rate. Enemy movement? Depends. Events in idle games? A timer could be used here. 
Not sure how that link shows that? I'm not disputing, just don't see it. With Unity your frame rate will not go higher then the nominated rate, so you can kind of count on that, but no one can guarantee it won't go lower. The point of deltaTime (as I understand it) is to be non-FPS dependant, so that you base you logic on real-life elapsed time since X rather than number of FPS since X. Going back to issue at hand, I would recommend u/Seb-fern to try things out in dedicated game dev framework/IDE just to get an idea of how things tie up together in a game loop. There's plenty of free tools to try out, and it will give you great insights imho.
Yeah you’re correct there, DeltaTime is based on time since last frame update. This is what the update function in the iOS game frameworks can give you. DeltaTime is used to smooth things out when the frame rate is all over the place. Such as calculating how far something should have moved between updates. It still uses the frame rate to calculate this (+ elapsed time). This is very different to using a Timer. Sorry if I wasn’t clear on what I meant. The main takeaway here is that we shouldn’t just default to Timers when there are several other tools we can use that may be more suited to the job. They’re very popular, but I see them being used incorrectly all the time. I just want to make sure any newcomers are made aware of this.
How do you know it’s not getting called? Also, where is `self.mobile` set? It’s used in the Firebase call in `getData()` but I don’t see where that’s being set. If that’s `nil`, or your comparison returns no results, then from what you’ve shown of the `getData()` function, no `print` statements will get called.
Recommending Scheme as a first language but not Swift seems crazy to me. Swift is a fine first language, and I'm not sure exactly what it makes it worse than Python or Java for a newcomer.
Yeah, I did read that wrong, sorry. You are right, any timer that exists outside the game loop (which is FPS based of course) should not be used.
Thx for the help :)
Ok thx
that's very weird.
If your audience are developers, don't spoon-feed them, pretty sure by connecting controllers to views you'll lose their attention quite fast. Think on why that want it. Do they want to know the benefits of going native? Do they need better understanding of native to make hybrid work? Are there specific issues they face with hybrid on iOS?
Hmm I liked Angela's better I got through a bit of Rey wenderlich and it was taught by so many people 
I've yet to find a person or company which sells anything relating to learning anything related to code, which I found worth paying for. There are just so many free and easy-to-use resources out there!
 I get error msgs about the interval variable could you tell me what I should set it to? 
The only server side swift framework I’ve heard of with consistency is Vapor. They seem to be miles ahead of the rest. 
love kitura.
Because the print statement (Assigning Data) is not displayed on the console. The [self.mobile](https://self.mobile) variable is set at the beginning of the code under the declaration of the ViewController.
That print statement is only going to print for each document *if* there are any \`documents\` in \`QuerySnapshot\`. If you want to see if \`getData()\` actually gets called, put a print statement just underneath the function declaration. My guessing is it is called, but there's something wrong with what you're receiving back from Firebase (\`QuerySnapshot\` is actually \`nil\` or \`QuerySnapshot.documents\` is empty). I would add a print statement above the \`for\` loop to see if any documents are returned (something like \`print(QuerySnapshot?.documents.count ?? -1)\` would do - that way, if you see how many documents are in \`QuerySnapshot\` and if you see \`-1\` you'll know that \`QuerySnapshot\` is nil as well). FWIW, you shouldn't force unwrap (\`!\`) an optional value; it's bad practice. And try not to name variables with capitals; use \`camelCase\` instead.
Without knowing what errors you are getting there isn't much I can do. But I want to clarify that my response is predicated on you already using something like scenekit. That's what I assumed you were using from your other comments. As scenekit already provides this update call with interval time. 
He posted a video about this a couple of weeks ago. Looks like he just burned out. [https://www.youtube.com/watch?v=0PQX6q8LSK4](https://www.youtube.com/watch?v=0PQX6q8LSK4)
Yea the only error I’m getting is that it doesn’t know what interval is since I haven’t done anything with it. What should I assign it to?
Oh I see. Thats a typo in my example. That is supposed to be the current time that's passed in. Sorry I didn't write working code, just something to show the concept. 
Thx np:)
Vapor 3
I like working with UI/UX designers that use an iPhone as their daily driver.
Are you using a sample of size N=1 to draw this conclusion? I never said Swift is impossible for anyone to learn.
If you're running from Xcode then the working directory is set in the project Scheme.
&gt; I believe that the path argument is expected to be absolute This is easy to check. No, it's not required to be absolute.
Vapor. Consistent and constantly updating. The community is also alive and well. Can't wait to see how it improves with Swift 5!
Scheme's entire spec is about 50 pages, it rarely changes (we're on version 7 since 1975), and it has basically no special cases to speak of. It's garbage collected, and has a simple (and powerful) numeric tower, and the syntax is simple enough that it's easy to see concepts like functions, recursion, and environments. There's no syntax to get bogged down in. Swift doesn't have a real specification or standard yet, the published language reference is over 500 pages long, and it changes every year (so far). It's got more reserved words than even C++ -- I don't know of any language which is more complex. Several parts are undocumented, and there's only one implementation so far, and so the answer to what the language does in many cases is "whatever the compiler happens to do now" (though there's a big stream of SEs to try to nail down its behavior). It's young enough and complex enough that there's still a decent chance you'll run into compiler bugs, or at the very least, [lousy and misleading error messages](https://old.reddit.com/r/swift/comments/ajqt6l/problem_with_nskeyedunarchiver/). Its memory model is *almost* unique in the world of computing (shared only with later versions of Objective-C), and neither as straightforward to describe as manual allocation nor as easy to use as garbage collection. Its error reporting model is definitely unique in the world of computing, and is designed for performance, not usability. Java isn't nearly as pretty but its syntax is simpler (only about half the number of reserved words, with almost no compiler-inferred behavior), and there's a real spec, and we're pretty sure everything is documented because there's multiple independent implementations. It has a GC and exceptions, both of which are common features in most other modern languages, and which make life easier for programmers. It runs in a VM, and the entire stack is open-source, so when something goes wrong you can see everything it's trying to do. The process never just dies with SIGABRT, which is a godsend when you're learning. Why do you say starting with Scheme is "crazy"? How many people have you taught Scheme to, and how many had a problem with it? I see questions on r/swift all the time which simply never happen in Scheme because Scheme's syntax simply isn't that complex. You never see new Scheme programmers struggling to get the syntax correct for a *function call*, but I see it with new Swift programmers. You can't even begin to learn concepts like recursion if you're getting hung up on function call syntax.
Didn't you [already post this](https://old.reddit.com/r/swift/comments/ae5o6r/difference_between_convenience_and_designated/)?
I believe this would fall into the category of "questions which are way too vague to answer".
Why make your VC the delegate for CLLocationManager instead of making a separate controller class for it with a public interface that suits your specific needs?
It depend on the Flash Drive. If you use something old, especially something that uses USB 2, then expect it to be painfully slow. (From personal experience). But if you have something newer, then sure, go ahead.
I have no idea how to do it, sorry. But I know one developer who [did it](https://twitter.com/_inside/status/1089945981985214467?s=21) 
Get an iPad and download the Swift Playgrounds app from Apple through the App store. Go through books 1,2, and 3. There are add-ons too, but start there. 
You will also want to set the derived data folder in Xcode to also point to your drive. That is the bulk of the space that Xcode takes outside of itself
udemy angela yu and sololearn app
Thank you!
I have the app, but I only used it for playgrounds. I definitely have to try out the books. Thank you!
I found a really Easy way to Do it with SKActions. You just make a variabel of a duration with SKAction and then make a SKSequenze where you First Call the shoot funktion and then the duration variable. Sry if the text is hard to understand cuz I’m writing on a Swedish keyboard on my phone so it autocorrects.
Depends on if the creators of the coding tutorial licensed the code they wrote for reuse (which often they do). Generally, coding tutorials like that put their code examples up on GitHub with a LICENSE file that makes what you can and can't do with the code explicit.
bullshit!
I second using Angela Yu's Udemy course. I went through the first 13 lessons and that was enough for me to have enough confidence on tackling my first app, which I just started a few days ago and have full intentions of publishing onto the App Store. She's very clear and thorough in her lessons. Also active in answering questions people post in each lesson. There are over 50 lessons, but you don't need all of them to start your own project. The rest after the first 18 are specifics, such as how to use machine learning, how to build an AR app, design lessons, how to submit to the App Store, how to use Github. I find that I've learned more by creating my own app because it's more interesting and motivating than doing tutorial after tutorial.
With minimal experience in Kitura and Vapor, I'll just say, some languages have more than one solution.
Just went to a vapor meetup in Berlin and it looks like they will continue to commit to the project. Pun intended 
I tried out Perfect and Vapor a couple months ago, and quickly found I prefer Vapor by far. The documentation leaves something to be desired but the community is super helpful so it's not too much of an issue.
It would help if you posted the code you have, how you expect it to work and why it doesn’t work.
If you’re interested in building apps then I highly recommend the free iTunesU course Developing iOS Apps with Swift by Paul Hegarty at Stanford. The latest course is on iOS 11, however it is taught using Swift 4 so should still be very relevant. https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316
He did so I'll repost my response: I think the [Swift book](https://docs.swift.org/swift-book/LanguageGuide/Initialization.html#ID217) is pretty clear on this: &gt; ###Designated Initializers and Convenience Initializers Designated initializers are the primary initializers for a class. A designated initializer fully initializes all properties introduced by that class and calls an appropriate superclass initializer to continue the initialization process up the superclass chain. &gt; &gt; Classes tend to have very few designated initializers, and it is quite common for a class to have only one. Designated initializers are “funnel” points through which initialization takes place, and through which the initialization process continues up the superclass chain. &gt; &gt; Every class must have at least one designated initializer. In some cases, this requirement is satisfied by inheriting one or more designated initializers from a superclass, as described in Automatic Initializer Inheritance below. &gt; &gt; Convenience initializers are secondary, supporting initializers for a class. You can define a convenience initializer to call a designated initializer from the same class as the convenience initializer with some of the designated initializer’s parameters set to default values. You can also define a convenience initializer to create an instance of that class for a specific use case or input value type. &gt; &gt; You do not have to provide convenience initializers if your class does not require them. Create convenience initializers whenever a shortcut to a common initialization pattern will save time or make initialization of the class clearer in intent. 30 second read vs 6+ minute video…
They updated the “Learn To Code” books in the app and made them much better! I knew nothing about coding when I started and I’m now working on my very first (basic) app. I do have some help from a friend which is nice, but the books in the app have been really great. 
Yeah! I reposted this video because I uploaded again with decent sound. Last time few people asked to upload with better sound.
Since everyone’s recommending Angela Yu’s course, it’s worth noting that Udemy has it for sale for $10 until January 31, rather than the usual $200. I don’t know if sales like that are common for the platform—and I haven’t taken the course myself—but figured I’d point it out. I’m in the very beginning of learning this stuff too. So far I’ve been enjoying Swift Playgrounds on the iPad, though I’ve hit some weird bugs and think some of the accepted solutions are a bit off. (Both in that some things have worked and I don’t think they should have and some things haven’t worked that I thought should.) But it’s handy because it’s free, mobile, and features QuickType entry so you can learn Swift even if you can’t type at that particular moment.
If you look at the docs for SKShapeNode you’ll see it inherits from SKNode which has a name property: https://developer.apple.com/documentation/spritekit/sknode/1483136-name
Is it just me or does that orange shade looks like a plus sized woman in a swimsuit.
Probably web scraping. 
Create a middleware backend to do all the heavy lifting and then your app only needs to communicate with your backend. And then you make some nice UI to display that data.
How much of the code did you use in your game? IMO you can’t really call it “your game” unless you created the most.
As long as you do not redistribute it a source code or tutorial under your name, it should be fine. That's what tutorials are for, after all. As for 3rd-party libs, indeed they all have licences, mostly MIT or Apache that allow virtually everything except holding the authors responsible for damages. One notable exception is GPL license which demands that your code using it must also be free and open-source. Disclaimer: it is not a legal statement, just my impression.
Sometimes the websites have an api but that’s usually not the case 
Thanks to everyone for the tip on the Angela Yu course! I figured it's worth giving a go for $10.
I've seen mention on this subreddit of a website that gives out programming challenges, and has leaderboards to allow you to compare your results to other people's, encouraging you to push for better efficiency to get a higher placement. Does anyone happen to know which website I'm talking about? I sat down to write a linked list in Swift yesterday, and realised that I need more practice at these mini programming challenges!
Which one of her courses would you recommend, there are few different swift ones from her.