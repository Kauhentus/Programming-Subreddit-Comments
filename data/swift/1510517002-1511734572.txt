Just work with reusable dynamic cells and and design all of your interface elements in interface Builder ( your storyboard ) Then you can work with the hidden-property for ui-elements to hide or show your Textfield and whatever u want to show. Use the UITableViewDelegate for the deleting process. There are several methods coming from the delegate to handle all tasks like adding - deleting - changing your UITableViewCell. Also set the UITableViewDataSource to your ViewController to handle data in the correct way while deleting items and doing stuff. 
The majority of Swift software seems to be dependent on the proprietary Foundation library. The free-software replacements of Foundation are slow to catch up; they're not up to par. I was hoping people would suggest alternatives (eg. some of the libs IBM is developing for networking). I reckon Swift programmers are overwhelmingly Apple users and don't care that much about freedom. Dejavu: You now downvote my comment, and the discussion ends.
I used this method but I'm still getting something like () when i put a print statement in front of that. How do I get the date value and be able to use it? 
when you put a print statement in front of what?
There’s two methods that would work best for this. If you prefer to keep all of that functionality within the single table view cell, you should add the text field and button views inside of a UIStackView. That will deal with spacing constraints and such for you, and make it simple to add new intra-cell textfield rows. Implementing stack views in cells can be a bit tricky, you may have to set on of the top/bottom constraints on the stack view to a priority of 999. However another approach is to separate your three cells into three sections. The section header can contain the add button. And adding more textfields can be add new cells within that section. This may make deleting rows a bit easier because you have the table view’s delegate methods. The only downside now if a bit more of this logic is in your controller than just the cell view. As for minimizing down to just the header, you would have to find a good solution for that. Perhaps removing all cells but keeping the textfields’ data in memory to repopulate. 
Where is your out of bounds exception happening?
Is this line it? ``` for index in 0...ChartDatlineChartEntry.count { let insetLine = ChartDatlineChartEntry[index] } ``` If so, you just need to replace the ... with ..&lt;
Raywenderlinch (I think is lile that) and mostly searching for everything I was needing when doing my first app
I️lil look into that thanks
Rockstar! Love your work
https://teamtreehouse.com/home
On the first line you initialize `ChartDatlineChartEntry` to an empty array. The next time you use it, you try to access `ChartDatlineChartEntry[i]`, but there's nothing at that index; *any* value of `i` will result in an out-of-bounds error.
Random koans and solving simple problems inside playgrounds. Know enough to have a job writing in swift, but not enough to develop an application. 
I'm working on a podcast app can save your time and 10x your productivity: ⚡️No more those repetitive Ads⚡️ ⚡️Annotate the episodes you love and listen it later⚡️ https://www.producthunt.com/upcoming/deepr-1 
Honest question, does anyone really see Swift catching on as a server side language? It’s been out a few years now and I rarely see anyone other than iOS devs even mentioning server side swift. 
Server side Swift is still in its infancy, for a variety of reasons. But I think IBM's involvement in pushing Swift on the server bodes well, it may just take a bit longer to catch on.
Sure, it's a matter of time. Go has been around since '09 and only in the last two years has it picked up steam on the server side. JavaScript was a toy language for the first 13 years of its life. Swift is a beautiful language with a lot to offer server-side developers. It's fast, safe, legible, portable and easy to refactor. As a developer, to achieve similar benefits on the server side, you can learn Go, or learn a language that expands your abilities to the mobile and desktop spheres.
Teamtreehouse and ray wenderlich is a great resource for learning Swift
Devslopes! To me it was a lot better than team tree house because it was more specific with so many projects with practical skills. They also have a discord with a lot of developers to help out with any questions or to just discuss iOS Development. 
I am learning on Udemy, the instructors name is Angela Yu. So far I really like working with Swift. 
I certainly hope that Swift on the server picks up steam. I agree with the part about it being beautiful and having a lot to offer. I'd love to use it on the server. At the moment the similar benefits with Go simply aren't there, though. With Go you get better portability (more supported platforms, no divide between Darwin and others as in Swift with Foundation vs swift-corelibs-foundation), far more mature 3rd party libraries and a runtime that really shines in enabling you to write asynchronous servers without worrying about blocking. With Swift you have a much more advanced language but the library situation isn't great yet and the story for writing non-blocking server code is pretty much non-existent: you can juggle GCD queues or hope that Zewo is mature enough. 
 print( getTime(id: "whatever") { date in guard let date = date else { return } }) I'm assuming I'm using completion handlers wrong because all it prints out is ().
That's not how you would do a print statement. You would do: getTime(id: "whatever") { date in guard let date = date else { return } print(date) }
I come from an Objective-C background and used Apple's [Swift Programming Guide](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html).
RayW, but I have to say that I've done others for ObjC like Lynda.com and Stanford 193, let's build that app (YT) and others. IMO if anyone is jumping in now, go straight to Swift 4.
For the sake of future similar questions. I found that apple has a set of teaching materials that include a timer app. It can be found here: https://swifteducation.github.io/teaching_app_development_with_swift/stopwatch.html
isLoggedIn = false
So, not actually "more stable"?
If I understand your goal correctly, I would be inclined to have a single text view, and parse the text when it changes. You’re effectively creating a mini programming language, so this will be a very challenging first project. Good luck!
For example: Google place picker will fail with some crazy error if built with the new system. It happens on the old system but a clean build "fixes" it. The new build system for whatever reason causes it to always crash. 
I don't agree that on the server there are not many tools. Most of them are there for your standard web API (REST, ORM, Redis, etc) Just look at the packages that come with Perfect: http://perfect.org/docs/ You shouldn't worry about Swift's runtime/blocking either. Although some of the frameworks run as threads, you can still build the application logic using coroutines. In fact, as you alluded to, that's what the Zewo's Venice project does: https://github.com/Zewo/Venice The reason Swift is not being used much on the Server-side is that no one has committed to using it. It's that simple. There is no reason not to, it's a question of who will be the first. I'm hoping to do my part and bring more people to use Swift on the server-side. Every little step helps. I hope you enjoy the post and join us on the adventure :)
Another upvote for https://www.raywenderlich.com nothing else comes close to the learning experience I got from them.
I am putting the finishing touches on an alpha for a new version of [Speculid](https://github.com/brightdigit/speculid) a Mac App which takes one single source graphics file (svg, etc…) and builds an entire ImageSet or AppIcon Set (pngs, pdfs, etc…). It reduces the need to include multiple sizes of the same graphic (just have one _source_ image) in your repository (saving download time), no longer dependent on the graphic designer to export multiple files of particular sizes, and you can include building the graphics as part of your build. I'd love to get some feedback of version 2.0, which removes the dependency on brew and inkscape. This will make the application easier to install and use. Thanks, Leo
Be careful with perfect. They just spammed a lot of libraries, some heavily bugged, and are not heavily maintained. If you run into an issue you're pretty much fucked Go has a much much more mature ecosystem
Why type them in and interpret them? Do the calculations change that much that they need to be text? What are the calculations, simple area calculations that are combined to get an overall area?
A "renaming pass" is problematic if you're saying what I think you're saying. You mean to scan through the JSON and replace certain text with other text in an effort to rename the keys? You'll have to do a lot of parsing and guarding against renaming actual data. The simplest and most sure way to handle this is to [properly name the keys](https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types#2904057) using `CodingKeys`, as u/krilnon/ said in [another comment](https://www.reddit.com/r/swift/comments/7c63iu/decoding_a_json_key_that_has_spaces/dpnitbc/)
If naming the keys properly was an option then this question wouldn’t have been asked in the first place I think. I’m not talking about doing a search/replace on the text, but on a dictionary representation of the json data. 
The BNR book on Swift (their 2nd edition) is pretty good. I'm at the prototype chapter now. I want to get their iOS book next but I think there's an update around the corner.
Maybe give an example scenario so we can really understand what you are trying to do.
You have to be careful how you structure the data depending on how you want to query it. They released a new thing called firestore recently, it's closer to the typical NoSQL formats you see that are document-based (rather than one giant json tree like the old firebase db). If you go with firebase I would recommend firestore, since there are a lot of tutorials about structuring your data in document-based NoSQL since it's more common. After figuring out the cloud db schema you'll want to recreate your data model in native swift classes. When you get the data from firebase you can convert (serialize) it into your swift classes, and the reverse for sending it to firebase. Firebase is a great option, but if you're not sold on it check out my project, Stackberry. It's a swifty alternative. It works with realm for the local db (which I prefer over firebase's caching methods), and it uses your native swift classes to automatically structure your backend database so you can avoid this process altogether. Plus no converting to JSON and back. Would love some feedback. Either way, best of luck on your project! Feel free to message me in the Stackberry slack for more specific help with your project, even if you go with firebase :)
I used Apple Swift Book and www.hackingwithswift.com
What's your hurry? - Python was around for 8 years before anyone really started using it on the server (Zope), and it was another 6 years after that when people really started to take it seriously (TurboGears, Django). - The first public release of Ruby on Rails was 10 years (almost to the day) of the first public release of Ruby. Did you go around asking "Does anyone really see Ruby catching on as a server side language? It's been out for almost a decade now and I rarely see anyone outside of Japan even mentioning it." What's your barometer here? Can you name any programming language that's had faster growth on the server? Java had huge commercial backing in its day, and yet when it was as old as Swift is today, Java Enterprise Edition still didn't exist yet. 
I learned on Treehouse. Liked it a lot.
Maybe use the Set class. Create a material class with type identifier and count. If count = 0 remove from set. To craft something create a set with needed materials and check if inventory set contains receipt set. 
I've been going through this course on udemy from devslopes and it's been really good. Plus it was only $10. https://www.udemy.com/devslopes-ios11/
Thank you for your response, I had to dig into Set classes and they are quite interesting. I will leave here the solution that I found for someone that might have the same issue: for (key1,value1) in dic1{ for (key2, value2) in dic2{ if key1 == key2 { dic1[key1]=value1-value2 } } }
I’d also recommend just setting the deployment target of your app to 10.12 if your basic serialization won’t work on &lt;10.12. That way you can avoid this #available check.
Same. I skimmed through the guide without reading everything. Then, I started writing some code myself. I had a lot of wtf moments along the way, but I googled as I went and it worked out for me.
You need to set the delegate of the text field to your controller. I’m not sure it will pick up the handler of that delegate method in the set up either. 
There is a faster solution to this, as it is O(n^2). Make two sets, each with the keys of dic1 and dic2. Using the set functions you can intersect them, to get all keys that are shared between the dictionaries. Then you can loop through the intersect to get and set the values. 
Thank you, will try it!
Swiftris (Tetris): https://www.bloc.io/swiftris-build-your-first-ios-game-with-swift
Is this using the iOS keychain support or the 1Password/LastPass extension?
Sorry, should have clarified. Password manager extension. 
https://www.hackingwithswift.com/store/dive-into-spritekit
Upvote for Dive into SpriteKit and Hacking with Swift. (Spoiler alert: I'm the author, so I'm a bit biased!)
I recently did this for work, I ended up using, https://github.com/agilebits/onepassword-app-extension
Okay, thank you!
Congrats on getting started! Don't give up, it's definitely tough but there are a lot of resources to help you out. The more info you give us, the more we can help. Is there an error code or message that you're getting? Or is there a concept that's confusing? Swift 3 and 4 are very similar, I would be surprised if that was the issue. Might be worth making sure you're using the latest version of Firebase though.
Here I thought I was super clever when I named my falling-block repo. Anyways, I've open-sourced it. Builds on macOS, but could be built on iOS with some modification (I leave that as an exercise for the reader). https://github.com/KevinVitale/swiftris
I enjoyed Ray Wenderlich's [2D Apple Games by Tutorials](https://store.raywenderlich.com/products/2d-apple-games-by-tutorials). It teaches how to use SpriteKit and covers sprites, physics, particles, tile maps, all the bases. Seems like a good place to start. They also have a book for 3D games with SceneKit once you're looking to move beyond 2D.
I'm using a different cocoapod that is just that same thing re-written in swift. And it works great fro password retrieval. But I can't seem to get it to work well during signup. Are you using on signup in your app? What app is it? I would like to see what you got it to do.
Can you give more detail on what problems your having?
Support for Korean ? I am in Korea right now and would love to put my hand on this application. Will try it out if there is a Korean option,
I'm fairly new to Swift but I'd love to join your server!
I found deleting the app works. I️ agree it is a weird bug but have seen that XCode feels a little snappier. May be just a placebo. 
Yes, I support Korean! Some improvements are still needed for it, however. What I've got so far: * **Tap-to-speak:** fully working. * **Roman character transcriptions over text:** fully working (can be turned off if you've already mastered the alphabet). * **Tap-to-define:** will work if the word is not followed immediately by a particle, and is already in dictionary-form. As long as the word is not followed by a particle, it *might* still work if you have the system dictionary installed (some system dictionaries can cope with words that aren't in dictionary-form – thanks, Oxford Dictionaries!); I'd have to get a Korean-learner with me and double-check. Basically, Apple's Core Foundation tokenisers (text processing tools) for Korean have a bad (utterly incorrect, really...) idea of what constitutes a word boundary, and offer no way to lemmatise words to dictionary-form. I'll need to set up a backend service with a custom tokeniser to get proper lemmatisation, and get HTTPS certification for it. I plan to do this within the next two months if I get a spare weekend. The main annoyance (apart from me having to pay a subscription for a monthly backend service) is that LinguaBrowse would then need to connect to the internet to do something it should really be able to do internally – in fact, I've tried to get in contact with Apple offering to improve their tokenisers, but they won't pass me on to an engineer. ... However, if I do set up a back-end service, I can deliver a lot of other exciting features in future :)
I have some experience but I’m not sure I could be a helper. I would like to join though.
Hi, I am looking for any Junior iOS developer positions, in London, please. My email is a.adegoke@students.rave.ac.uk
Im kinda confused by this as it kinda implies these are the only ios jobs out, where as theres a ton in London, UK, like on just CWJobs with a simple search i get 78 roles... [CWJobs](https://www.cwjobs.co.uk/jobs/ios-developer/in-london?radius=30&amp;s=recentsearch)
CWJobs I have found to be the best place for tech jobs, and also make a linkedIn and mark your self as actively looking for a role
/u/dinorinodino /u/grokjtrip feel free to join https://discord.gg/GbGXHx
Why not just refer people to an already-mature community with tons of experts and a lot of posts on Swift programming instead? I’m referring mainly to [Stack Overflow](https://stackoverflow.com/questions/tagged/swift). Discord is a great service and very helpful for many things but to duplicate efforts doesn’t seem to be the best. You may get a couple of experts to answer questions but on Stack Overflow there are hundreds doing the same, along with a great moderation system that works very well at pulling out the best answers. 
If you need help with something, a quick google will often result in a Stack Overflow question with an answer to your question. For the scenarios where you can't find an answer, or don't know exactly what question to ask, this server is a great place. We're also working on a website with things like challenges and a blog with articles written by the people. I see a lot of positive communication happening, and a lot of people like it so far :)
There’s no doubt that a positive and helpful community is a great thing. Helping people to understand answers and ask questions on Stack Overflow might be a good use of a helper’s time. The code challenges you have planned sound fun and engaging, as are other ideas to mentioned. All I’m saying is that by linking to another community with a slightly different focus you can help build up a better shared community. One where people might log onto your server to chat in real-time about issues and projects and then go over to Stack Overflow to get the highly-technical information they need. You may even get people to come over to chat from there, the chat feature on Stack is very solely lacking in features and usability 
I think I'm taking for granted that people search on Stack Overflow first. We'll make sure to mention that to people in the server! It's a good skill to learn how to ask answers on Stack Overflow. Making a note to self to do a small write up of that soon! :)
Sorry it hasn’t been released yet, we just used it for retrieval. But it looks like you pass the values in the login detail dictionary. AppExtensionTitleKey: @"ACME", AppExtensionUsernameKey: self.usernameTextField.text ? : @"", AppExtensionPasswordKey: self.passwordTextField.text ? : @"", AppExtensionNotesKey: @"Saved with the ACME app", AppExtensionSectionTitleKey: @"ACME Browser", AppExtensionFieldsKey: @{ @"firstname" : self.firstnameTextField.text ? : @"", @"lastname" : self.lastnameTextField.text ? : @"" // Add as many string fields as you please. }
Does SO have a chat system now?
It’s had it for a while now. Not really their focus, it’s used mostly for extended discussions and as a hangout area. You get there through [chat.stackoverflow.com](https://chat.stackoverflow.com) and can set up some rooms with rudimentary filtering and moderation. Very basic and not used a ton. 
Oh good to know, I would really hope they work on that more. It seems like people really like chat, and want nice features. It is also probably convenient if a lot of people already use it for other things. 
Yeah people tend to use comments as a rudimentary chat system on SO but that’s nightly discouraged and after a while it will be suggested that they move to chat. That’s one reason it was created. Honestly SO would have great synergy with a better chat service, that’s the first thing I thought of when I saw this post. 
Yeah helping people to ask SO questions is huge. Without a good question you’re going to get downvoted and dismissed. Also helpful is teaching people how to search for answers. So many questions duplicate ones that already have solid answers. 
Another thing to think about: from what I understand, discord's main target are gamers. Slack seems to be it's professional counterpart. I use slack at work, and have joined a couple groups dedicated to programmers, with a few help-me channels. I would join your group, but I don't use discord...
I believe slack has server costs though :/ I use it for work too, but discord works in this scenario and is free :) It is indeed something to think about, installing an application for the purpose of joining one group isn't going to happen. For now this works, and with the relatively small memory footprint I just always leave it open. I'll remember this though, if at some point a lot of people request a different platform, we might consider a change :)
Ok I’ll look into that that thanks
I've been working through this one: https://www.safaribooksonline.com/library/view/swift-3-game/9781787127753/ The site itself is a subscription-based service for accessing lots of different tech books, but you could get the book anywhere I imagine. Very concise and broken down into easy-to-understand steps. Rather than many little app examples you make one game start to finish, including pretty much every step that I'm planning to take with my own game. This one is a Swift 3 edition. I don't know if there is a Swift 4 update yet but this one I've found is still relevant.
I️ put the details in the other comment thank you
Do you mind providing the source code for the logout button and also the sign in VC
You can extend your class with a computed property with an enum as the type like so: enum TypeEnum /*&lt;- something more descriptive here */ : String { case text case memo // ... } extension Item { var typeAsEnum /*maybe think of another name here, too...*/: TypeEnum { get { return TypeEnum(rawValue: type) ?? SomeDefault /* If type has a value that is not in your enum, you need to handle this here in some way */ } set { type = newValue.rawValue } } } 
Not at all I’ll message you it
Been working on my app called [Seamless.Cash](https://seamless-cash.app.link/reddit) which is a card-linked rewards program giving our user 5%-30% cashback at thousands of local merchants the second they swipe their credit or debit cards. Written entirely in Swift..! Would love some feedback!
This is a great solution, but to make it a little better you could mark the obj-c property like so @property (nonatomic, strong) NSString *type NS_SWIFT_NAME("typeRaw") Then have the variable in swift just be named type with the same solution above
Is that a question? Lol.
Firebase
One way of doing this is to use `NS_STRING_ENUM`: ```` typedef NSString * ItemTypeKey NS_STRING_ENUM; extern ItemTypeKey const ItemTypeKeyText; extern ItemTypeKey const ItemTypeKeyMemo; extern ItemTypeKey const ItemTypeKeyInteger; extern ItemTypeKey const ItemTypeKeyDouble; extern ItemTypeKey const ItemTypeKeySample; ```` And change `Item` to take advantage of the `ItemTypeKey`: ```` @interface Item: NSObject @property NSString *Id; @property NSString *title; @property ItemTypeKey *type; @end ```` Make sure you put `ItemTypeKey`'s typedef *before* `Item`'s interface. And have the keys put in a `.m` file: ```` ItemTypeKey const ItemTypeKeyText = @"text"; ItemTypeKey const ItemTypeKeyMemo = @"memo"; ItemTypeKey const ItemTypeKeyInteger = @"integer"; ItemTypeKey const ItemTypeKeyDouble = @"double"; ItemTypeKey const ItemTypeKeySample = @"sample"; ````
There's also an iOS developers slack group thats got 18k+ users in it. It's got a bunch of focused channels like swift, testing, design, etc. The swift channel itself has ~7k users in it with lots of experienced devs willing to help. https://ios-developers.io
This is generally called pattern matching, and it is widely adopted feature among (mostly, functional) programming languages. Speaking of Android ecosystem, you might be interested in [scala's approach to pattern matching](https://docs.scala-lang.org/tour/pattern-matching.html).
This is a great suggestion!
It looks like you need, before anything else, a proper modelling. Storing everything as one big collection of primitive types is most likely a bad idea. I would suggest you to go forward and build a class hierarchy representing entities you are working with. Like, inventory class that would manage resource counters opaquely, probably resources enum and base class for recipes or some sort.
Can you be more specific as to what is not working?
In a book? Probably more things around architectural patterns, how to execute them well, and the pitfalls of each. While server-side swift has book adaptations, there aren't many that at the very least mention it (I could be mistaken here on more recent texts). With its recent updates, it's becoming more stable and think it deserves a mention. Given that this would be 'new' and for Swift 4, there are a lot of topics that are already covered pretty well by authors such as HackingWithSwift (/u/twostraws), Big Nerd Ranch, and the Ray Wenderlich books, so you may have to get creative to engage the reader to keep going in comparison to the other great material already.
Heroku is not the same thing as Firebase or Parse.
High-performance Swift for use in resource-limited applications like servers or embedded systems.
Advanced topics. We're flooded with entry level stuff, don't need more of the same. Advanced isn't just digging deeper into things that re-define the language, we have tons of protocol programming and overriding operators. There was a "pushing the limits" book years ago... make one like that. https://www.amazon.com/iOS-Programming-Pushing-Limits-Applications/dp/1118818342 Stopped at iOS 7, make a new version that covers modern things.
[**This book**](https://www.amazon.com/Cocoa-Design-Patterns-Erik-Buck/dp/0321535022), updated for Swift. 
https://stackoverflow.com/questions/47121660/xcode-9-1-playgrounds-broken
File a bug report and reference rdar://35516287. Multiple radars should raise some attention (hopefully).
It's also good as a backup in-case Slack servers go down, which iirc that happened fairly recently for a little bit.
I'd love to help if I could, but I don't understand it. I've been a developer for 20+ years and some of these phrases are so vague I really have no clue what they mean. I'd just skip half of them, but there's no "N/A" choices, and the survey won't let me continue until I fill out every box. It's forcing me to make up results and precision where none exists. I'd paste some examples here, but it doesn't even let me select the text of choices. But for example, in terms of Reddit's requirements, how would you break those down into "Input data", "Output data", "User interface", "Data structures", "Feature scope", etc? These categories sound like they were conceived for a 1965 time-sharing system.
How exactly are you using swift on the pi? Also i've been wanting to do a similar project and im curious about what kind of sensors you have hooked up :)
servers are the opposite from resource limited. Your iOS Device is resource limited…
Probably not a whole book but, but at least a chapter or two on working with C libraries. I don't mean Objective-C, but plain, flat out, normal, everyday C. When I first started dipping my toes into Swift, one of the first things I wanted to do was work with C libraries, and there are a lot of pitfalls. For example: - What to do with C enums when you can't use NS_ENUM in a third-party library. - Dealing with pointers to types. - Dealing with void* pointers. - Dealing with `const sometype* var` vs `sometype* var`. - `UnsafeMutableRawBufferPointer` and friends. - Storing references to Swift types in C pointers. - Things like `takeUnretainedValue()` and its friends, and when you need them. - How to to use C callbacks. Actually, this probably could fill a whole book. Maybe a Swift for C Programmers that covers this stuff (how get to running fast), with chapters on Swifty conventions. A C programmer doesn't need a whole chapter on how and why to build a loop, but a chapter how I might use `map` would be enlightening. Armed with this knowledge, we might eventually find a lot of developers writing Swift wrappers for all the popular C libraries, saving others from having to know how to work with C! 
I am using [Umberto Raimondi's build](https://www.uraimo.com/2017/09/06/A-small-update-on-Swift-for-raspberry-pi-zero-1-2-3/). It works as well as you'd expect at this stage. The [SwiftyGPIO package](https://github.com/uraimo/SwiftyGPIO) is neat to get started but a bit rough around the edges. I've contributed a few patches for serial IO but it's still not straightforward, in particular on the Pi 3 with its twin serial ports &amp; bluetooth. Sensor wise, I have four 20mA industrial pressure transducers connected to I2C current sensors that I am reading out synchronously. On the actuator side, it's six solenoid valves (one for each tire, one inflate, one deflate). All of this sits in the trunk area to keep noise away from the passengers and is directly controlled by an ATMega which in turns communicates via serial with the Pi (it's a simple binary protocol with a few extras to detect bit errors and dropped frames). So the Pi is just a remote head unit, but I plan to also hook it up to the ECU (my jeep is an older Nissan Patrol so sadly it is the semi-proprietary CONSULT prototcol, not the modern OBD-II), the GPS I have installed, and we'll see what else comes to mind. Hope that quick brain dump kinda makes sense ;)
That - including quite a bit about architecture- is about half way done. I am not yet sure what pricing the market will support though, which is preventing it from being completed. A book like this is most useful if it gets updated as the language changes and evolves and there are costs associated with that.
Sure, if you want to spend millions on your servers you can go to town with memory allocations. If, on the other hand, you want a fast and responsive server without blowing the bank you might want to consider efficient code.
+1 The market is over saturated with quality “Introduction to Swift.” There’s a serious lack of deeper understanding. And an absolute absence of lower level/implementation details. 
[removed]
Does he even know Parse died like 2? years ago 
I'm the author of MarkupKit. I created it because I also prefer building UIs in markup. Please feel free to contact me if you have any questions. Contact info is in the project wiki.
You're thinking about this all wrong. What people are clamoring for most is the stuff that *doesn't* change with every single language update! The only reason "Cocoa Design Patterns" is out of date is because significant portions revolve around the dynamic features of Objective C which Swift tends to discourage, such as selectors. The fundamentals of what makes a cocoa library work haven't changed *that* much, and a good grounding in those concepts would make it much easier to orient and adapt to future changes and frameworks. There's very little competition above the "this is a class" and "this is a view controller" level of sophistication, and I think you could charge a pretty penny. I would fork over $40-50, and I'm a poor destitute college student. "Cocoa Design Patterns" is the best I have been able to find in that category, but if you are aware of competitors, I'm all ears!
&gt; What people are clamoring for most is the stuff that doesn't change with every single language update! As the language changes the implementation choices for design patterns change. Protocols, generics, type erasure, associated types - all important for implementing core design patterns, and all changing with each release. Cocoa's core patterns however have not changed in a very long time. The Cocoa API were designed with Objective-C in mind and are often cumbersome in Swift. Perhaps this is what you meant? A guide for understanding the patterns implemented by the Cocoa/Cocoa Touch APIs, in Swift?
Any tips for learning those sorts of things? I imported a C library into Swift just to experiment, and all the arguments are either `OpaquePointer` or `UnsafeMutablePointer&lt;Int8&gt;`, when they should be `char` pointers or pointers that must point to a specific type of struct, or similar sorts of issues.
Anything that helps me get started with Swift when literally every tutorial I've seen is already outdated. I tried to start 3 times, but every time I tried something trivial none of the code from tutorials worked as the APIs change so often that it feels like they changed between you writing the line and hitting the build button.
Years ago there was a book for a specific platform. This book was about as thick as the "thicker" books and it went deep, very deep into things. Today, what we need is for a book to go deep into multi threading, data caching, audio/video compression, full stack, auth, security, scrambling your app, all kinds of stuff to dig into. I'm not sure that more "how to do cute tricks with Swift" is a great idea. IMO, we have MORE than enough over engineered code. We have 'Swift' code that most Swift programmers can't read. We looked at the KickStarter code when it was released, I asked what parts of it did, nobody knew. It didn't look anything like Swift. What we do need is things that can help us make amazing apps.
Thats pretty awesome. I plan on creating a "tesla" like dash / center console for my car. Been looking at different implementations of people using piOBD to read gauges and also control pretty much everything else in the car with just the can bus. That sucks your car doesnt have it! Then i wanted to make custom fitted 3D printed parts to hold the screen in to make it look more flush with the rest of the interior.
&gt; We have 'Swift' code that most Swift programmers can't read. Maybe if we had a good book...
I haven't seen much on server-side Swift, and I'm particularly interested in having a resource that covers working server-side from scratch rather than using a framework. 
Architecture of the compiler. Swift is young so there's a million little bugs and annoyances I run into every day, and they get filed on bugs.swift.org and that's it. I'd be happy to help but I don't have a couple months to get up to speed. I've worked on compilers before, but Swift doesn't look at all like any of them.
I'm working on an open source server-based game development platform, with both client and server-side (Linux-based) components. Both local and Internet-based multiplayer functionality is supported. The framework is far along but has quite a way to go. If anyone is planning a game that might utilize these capabilities, would love to hear about your requirements. 
Regex
This is because your Command is an object and the array holds references, not the Command objects themselves. When you are modifying your objects, the references don’t change, but the objects pointed by those references do. From the array point of view, the value semantic is still respected because the references it holds are not changing when you update the Command objects. Make your Command a struct if you want the behavior you are describing.
Ok! I will read up on structs versus objects in Swift. Meanwhile, you've unblocked me. Thanks so much :)
Thats because Command is a class. If you want value semantics for your command object, you‘ll need to declare it as struct. Essentially, unlike C, you have to define whether your object should default to pointer semantics or value semantics when using/mutating it (class vs struct). You can NOT have both (there‘s ‚inout‘ but thats another story).
Generics, and generic protocols, and their limits and broken functionality.
Two sections on that are already written, with example code. Generics are extremely important for applying software engineering best practices to Swift - and for that use case they are effectively broken.
Yes. I would love for someone to explain asynchronous closures and how to use them intelligently in a real iOS app. I still can’t wrap my head around them
I would love some advice on how to effectively freelance. As an iOS dev that has yet to land their first programming gig I feel like this would be really helpful.
Years ago there were quite a few sources for ObjC/iOS runtime for things like Swizzle, and other things. Before that, there were function points/ code blocks/ blocks etc... I can remember doing some pretty advanced tricks with older languages. At this point, I have to say, I'm not sure is Swift can even do these kinds of things. I guess it still runs over the ObjC runtime and so these things I guess are still there.
Hmmm....
This is being used as a staging place for putting patches so they can be turned into pull requests to the apple/swift main repo, nothing more. (I'm one of the engineers involved in the fork)
You just gotta pick a single version to learn from. You don’t need the latest and greatest to learn how to program. All you need to do is make sure the version you have is the same as the course. 
Does Google use Swift for anything other than iOS apps? How involved are they in maintaining or updating Swift?
We are using it for iOS apps. We are also working on a variety of support libraries such as [protocol buffers](https://github.com/apple/swift-protobuf), [grpc](https://github.com/grpc/grpc-swift) and have been involved in the [Swift cloud workshop](https://www.swiftcloudwork.shop/).
Oh.. and I almost forgot about some [swift-evolution proposals](https://github.com/apple/swift-evolution/commits?author=allevato)
servers are pretty cheap in the comparison of power. Don't premature optimazation on server side most time it's not worth it.
I’m a developer at Apple working on the Apple News team. We are looking for candidates for positions based in Cupertino working on Apple News. I have been working with the team for 3 years now, and feel quite lucky every day I go to work. The people are kind and smart, the work is challenging and exciting; Apple’s a fantastic place to work. If you’re interested PM me!
That's awesome. Y'all have some solid teams over there. The quality of Google's apps on iOS is what made me want to switch to Android back when the Nexus 4 launched. I wanted every app I used to be as good as Google Maps and Gmail was. Ironically, the iOS apps were better than the Android counterparts... 🤣
Unit testing
Generics already confuse the hell out of me when learning about Swift
Balls, I got excited. Apple would throw a shitfit if Google took Swift and forked it hard. Props to doing the right thing.
You probably want to use `NS_TYPED_EXTENSIBLE_ENUM` over `NS_STRING_ENUM` (as per [Apple's documentation](https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps/InteractingWithCAPIs.html#//apple_ref/doc/uid/TP40014216-CH8-NoLink_24)).
Swift doesn't have any built-in regex support. Foundation uses ICU regular expressions, and there's a bunch of documentation for them already. It's probably not a great idea to put any Swift-specific regex knowledge in a book right now, anyway, since they're planning to improve the interface, e.g., a year ago SE-0086 said it's "planned to have a value-type equivalent in the near future". There's several different wrappers to make NSRegularExpression less painful in Swift, and maybe the future official Swift interface will look like one of them, but it's anyone's guess which one.
Especially protocols with associated types!
Can’t imagine why they would. They’re the ones that open-sourced it. 
The problem you're facing is the chicken and the egg problem. Non-tech friends and acquaintances of mine usually push me the idea of buying no name products from China in bulk (like protein powder for instance) and setting up a e-commerce store for iOS, Android and Web. They usually have a friend that's "awesome" at Photoshop but that has not worked professionally as a designer. Putting the Photoshop friend aside, the chicken and the egg problem you have here is that: * End users going to the gym won't buy "Andy's Xtreme Protein" because it's not a familiar brand * Gyms won't buy it either because you have no sales figures and it's not a familiar brand So without even starting you have eliminated B2C and B2B sales without throwing a lot of dollars at marketing to establish a brand. ---- Your problem is that without any clients that can vouch that you did a good job for them, how will new clients know that you can do a good job for them? My recommendation for you is to either throw up a couple of "easy", good UX and UI apps on the App Store. Could be: * A Wish list app * A notes/reminders app Then you have a portfolio of X things you've done. The other way is to do pro bono or free consulting work to build up your portfolio. However my personal opinion is that spending at least 2-4 years working day to day together with others will be invaluable for you as a programmer before jumping on the freelance consultancy hype train.
But my XCode will always shit on me and refuse to compile it because of 1000 errors. :(
Yeah I also need to make a neat bezel.. mine sits on top of the dash in an extra enclosure because that’s basically the best space that was left. Not the most beautiful solution but it works. Not having direct OBD support doesn’t _really_ bug me; it’s actually nice that I can work on the tire inflation as an isolated system that is guaranteed not to interfere with the other vehicle functions, and CONSULT is reasonably well documented if i ever wanted to hook it up. 
A crash course on the Swift compiler would be sweet 
Hi u/applishish, thanks for your feedback. Appreciate it! I will consider your suggestion of adding an N/A option when I build a new set of questionnaire. I will also look into adding description for items raised. Thanks
Thanks for your comments, u/dmaclach. Good to know.
I'm an early reviewer for the [Swift in Depth](https://www.manning.com/books/swift-in-depth) book. It covers the more advanced topics, such as generics, of which I had the opportunity to proofread. Not all chapters are final yet, but it already helped me a lot in understanding tricky subjects.
Sorry for the messy post, I'm also still trying to figure out reddit :D
How long did it take to learn through teamtreehouse? I ask because there is a monthly fee for access to their content.
I just converted my app to Firestore from their older database solution. I second it. 
&gt; NS_STRING_ENUM Thanks, this is how I did it!
Great answer. I was in the same boat once and because a freelance hire for dirt cheap. It worked, but there was a LOT of learning. If you stand in the shoes of the businesses, you're asking them to trust you to do a good job for them. Depending on the job, it might be critical to their business. I got a lot of my jobs, simply because people felt they could trust me. People just getting started in this need to realize that most businesses have been around a bit. If you've been around a bit, you've been taken a few times. You learn to protect yourself and screen out problems. When things don't go well, it can be expensive to fix them.
It's just so much more difficult than in Java
Kludge your way through it, just like I had to. Any comprehensive amount of tips would require my writing a book! Okay, a few: Swift _does_ try to preserve types, even when doing things with C. Untyped (unknown) things have to be coerced. Things that return pointers to void give you an `UnsafeMutableRawPointer`, and you can do something like this: let ptrStorage = myModule.getApplicationData( tdoc ) let storage: ApplicationData = Unmanaged&lt;ApplicationData&gt; .fromOpaque(ptrStorage) .takeUnretainedValue() Where the first `let` is getting an `UnsafeMutableRawPointer` from the library (perhaps you’ve stored a reference to a class here previously). Swift can’t/won’t do anything for this, even though *we* know what we stored there, Swift doesn’t, unless we force it to. The first line of the next `let` is starting to tell Swift to give us a _typed_ version of `ptrStorage`, and in this case, it’s going to be an unmanaged reference of my Swift type `ApplicationData` (defined as a type alias to a Swift method of some sort, in this example). The next line indicates which variable we’re coercing. Per the docs, `fromOpaque()` “Unsafely turns an opaque C pointer into an unmanaged class reference. This operation does not change reference counts.” We can’t stop at this point, though, because we’ve only got an instance of `Unmanaged&lt;ApplicationData&gt;`, and we want `ApplicationData`, so we have to continue to the third line… The third line does (per the docs), “Gets the value of this unmanaged reference as a managed reference without consuming an unbalanced retain of it.” It’s actually delivering the pointer as the final `ApplicationData` type, and telling Swift not to mess with the ARC reference counts, i.e., your `storage` variable is now a weak reference to whatever was stored in the C library’s `getApplicationData` pointer. ***** Now that I know it, it's perfectly reasonable and makes sense, but as a newbie to Swift trying to jump in **fast**, it was tough to figure out. The neat thing is, figuring it out made me appreciate things in Swift a bit more. For example, most of the tutorials and books focus on creating a UI and using Cocoa/CocoaTouch, and don't bother explaining `&lt;type&gt;` stuff beyond the basics. 
A friendly reminder: do a small write up of that soon!
The only thing I dislike about android apps is that they don’t follow the same patterns other iOS apps do. They would rather have that option menu too right like their android counterpart instead of exploring iOSer ways of doing it.
Those are good proposals. Really excited about the auto generated Hashable/Equatable.
What...? You’re unhappy with one platform because they don’t adhere to guidelines set forth by another? That makes no sense...
Interesting, thanks for the info.
Can you see a day where Android apps can be developed in Swift? It would make cross platform dev so much easier.
I started freelancing over a decade ago, and so I’ve built up relationships and a network of people of who know (of) me. I got started by luck more than anything else, through friends. All of which is to say, that unfortunately I can’t help you. I understand that it’s a very different environment to get started in today, so I don’t have any relevant experience. Have you been a freelancer (or self employed) before? It’s more running a business than it is programming. Working from home / coffee shops is not all it’s cracked up to be. You’re going to spend a great deal of time negotiating contracts, convincing clients of your ideas, pushing for different strategies, etc. Not to mention the paperwork and admin. Also, some people think it means you don’t have a boss. You do. And he’s a prick. He’s you. It also has an affect on your personal life, as money will come in here and there, so you’ll have to get damn good at budgeting and time management. Balancing your work and home life is harder when you don’t have office hours. I’m not trying to put you off, but you should know the reality before you get started. Freelancing is absolutely not for everyone.
nice! I wish you the best! Education and learning is sure the best way to improve at career.
Another WebKit/Blink move...
I think he meant Google iOS apps
Have you tried Xamarin? I see that getting to a point where developing natively is unnecessary, before I see Swift taking over. Without a massive investment into swift as a cross platform tool, that is. Another possibility could be WebAssembly emerging as a viable solution for cross platform. It's still far too young to tell, but the performance is there, and has potential in this space.
I meant apps made by google on iOS, my bad
:Thumbs Up. I can't wait. I agree that it would be so nice.
I feel that native app development will always have a place. I have tried to develop hybrid apps that are code one deploy everywhere, and they still are lacking
Good luck! I am on the same journey so also a "welcome to the club!"
Good Luck. I am there with you. I am learning. I find tutorials only take you so far. Always check the dates on tutorial as they can be outdated quickly. Right now I am working on re-doing some older projects to give them new live on the iOS Device. I feel that I get more from real world applications than I did from doing tutorials. Tutorials did teach me the basics, and I still have a ways to go, but I like the idea of real world projects to dive into. I am actually on my second Swift project right now and it is building on the things I learned from my first project.
I start with the idea of what the end product does. I look for other apps that do the same thing and try to design a better way of doing it. An example would be to turn a 5 step process into a 4 step process. UI and UX are key and should always be included in the initial design of any app. As for staying on track, I give myself small weekly goals with an overall monthly goal. If I can accomplish this week's goal early, I will start on next weeks goal. If I find myself not finishing my weekly goals on time, I try to take smaller chunks for my next goal until I can find a balance. Once I meet a few weekly goals, I try to push myself. I find answers to my problems from Google. One thing to keep in mind is the age of the article that offers the help as Swift is growing many tutorials are outdated.
I wish you great fortune. I did something similar way back in the days of Microsoft.NET 3.0 when I switched over to iPhone SDK and Objective-C. I have never looked back. Swift should be an even smoother transition as you should no longer have to deal with retain/release for the most part. I would learn all I can about Apple Design Patterns such as the datasource and Delegate protocols. I am also a big advocate about the use of NotificationCenter and the Apple Notification pattern.
Good luck. Stay focussed and I'm sure in a year you'll look back with huge pride.
Persistence is the key to success here. Stick with it!
Thanks a ton... always tried to continue learning, even after college. I know so many people who just hit a wall and quit being curious after that!
Ray actually is the creator of one of the Udemy courses I was looking into... https://www.udemy.com/ios-and-swift-for-beginners-200-hands-on-tutorials/ I ended up going with this course instead (https://www.udemy.com/ios-11-app-development-bootcamp/learn/v4/overview). Maybe I should re-consider?
Thank you!!!
Woo!
I found this at one point and it helped me out: [iOS Unit Testing - RW](https://www.raywenderlich.com/150073/ios-unit-testing-and-ui-testing-tutorial) It is Swift 3, but there shouldn't be too much of a difference to absorb the content written.
For the time being, I completely agree. I experimented with Xamarin a year or two ago, and it was still lacking for my needs. But, the longer these technologies are around, the better they're going to get.
Sprite
Try this one: https://itunes.apple.com/nl/course/developing-ios-11-apps-with-swift/id1309275316?l=en Its free and absolutely awesome. Paul Hegarty is an ex Apple engineer which now teaches at stanford
Exciting switch, good luck!
Heroku is a platform as a service. You can use it to host any type of server pretty easily. Firebase is basically a pre built server that you can work with out of the box. Parse used to be like Firebase but got discontinued. Now you have to manually fork it and upload it to Heroku or another hosting platform yourself. 
McDonald's
My advice speaking as an iOS engineer: once you’ve got just a few basics then get into making an app. For one thing it’s easier to stay motivated if you’re actually building something, and also it leads you naturally to the areas you don’t know yet. 
Thank you for your advice! Much appreciated.
[removed]
Nothing to see here, folks. "Forking" means something different to the older crowd so they got too excited.
I am surprised nobody has posted this yet: https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316 This is the absolute best way to learn. It is the Fall 17 version of the Stanford iOS - Swift course. 
Thanks! I was the original Tech Lead On Google Maps iOS so always happy to hear from a happy user :)
We really "cloned" swift so we could commit PRs. Why the github UX decided to call "cloning" "forking" is a bit of a mystery.
Someone replied with it in a higher up comment actually. I may abandon my Udemy course I bought and go this route instead!
My best advice — try to build an app sooner than later. *Having to make something* helps you guide yourself through the topics you feel you should learn and say no to others that you don’t need at that moment to accomplish the goal you are going for. Rinse, repeat, rinse, repeat, and you’ll have quite a few great skills. 
It makes sense to me. The way I see it, a fork is something that diverges, like a fork in a road. When you clone a repo to do your own work on it, such as contributing to the original repo via PRs or making something entirely new, your branch diverges from the original repo. There's a fork in the tree. GitHub may have made an odd choice in naming it fork, but as a result that's now how the younger demographic thinks of "forking"
Register for a developer account with Apple if you haven't done so. I believe it's free now until you want to upload to the App Store. You might want to find a device to develop on as well. (You need a developer account to do this.). I used to use iPods but at this point I have older phones. It's not a good idea, in general, to test apps on your daily device! You might also want a dev device so you can play around with the iOS betas that come out in the summers for WWDC. Those you definitely don't want to run on your carry device! Good luck!
Good luck to you, too!
Just don’t do what I did, December 2016 got a brand new Mac, practiced for 9 days, finished an app and didn’t open it for months. The toughest part of learning is pushing through and fighting pessimism, keep going. I retook it 15 days ago and so far so good. Not a day missed.
Luckily I have all the devices I think I'll need! iPhone 7 Plus, iPad Pro 9.7, Apple Watch 3, and an Apple TV 4K. I've actually always jumped into the betas early anyway, despite all the bugs haha.
Hi europeanwizard! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7d763p/mike_ashs_new_podcast_friday_qa_live_episode_3/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
An in-depth explanation of the design patterns used to interact with Cocoa would be a huge help. What’s also difficult to come by is guidance for making all the different Cocoa libraries work together in unison: how do you implement MVC in non-trivial cases, which functionality belongs where, etc.
Q. why does your site have a link to a Wiki NDA and what are we supposed to do with a link to Apple.com when you list that you've worked for them? I'm not sure if this is a joke or not, you have a link to a site that says it's all made up and fake in order to impress people. If it's a joke, I really don't get it. You're asking people for $25/hr and you have links to Wiki NDA, apple.com and a site that says it's a fake site to impress people in the about. Ok, I really don't see much humor in it.
Good luck! And don't give up :)
Congrats, friend! 🍾🎊🎉 Make sure to share your progress, projects and troubles here with us. We’re here to help. 
Congratulations you're going to love it. There are certainly some irritations to be found in Xcode and Swift but to me it is clearly the nicest stack to be involved in. Even doing stuff like server-side Swift with Kitura in Linux is fun. I learned iOS development with Stanford CS193P when Evan Doll led the course, I would definitely recommend it! (About paying for Apple Developer status - if you are not a member when WWDC tickets are announced you could be shut out of registering to join the lottery. Apart from that I don't know if it provides a lot of value before you have apps ready for the store.)
yeah, seriously, Google apps work much better on iOS than on my previous Android smartphones. Thanks for that :) 
The idea is that the closure should weakly reference self (so that self is allowed to go away even if the closure is still around), but once the closure is running, you want to make sure that self doesn’t go away *in the middle of it*. If you don’t do this, then you have to assume that the weak reference could suddenly become nil anywhere it’s used, and check everywhere it’s used, even if you just checked on the previous line.
Glibc and Foundation still have some issues on Linux, but it mostly works out of the box.
Third-party libraries and performance will generally be the same anywhere. GCD doesn't have kernel support outside of the Darwin world, so performance using that might not be quite as good. However, many [features of the stdlib don't yet work in the same way across platforms](https://bugs.swift.org/browse/SR-530). Depending on your timeline, that may or may not be an issue for you.
I'm a little staggered, man. I don't know where to start... &gt; Q. why does your site have a link to a Wiki NDA and what are we supposed to do with a link to Apple.com when you list that you've worked for them? I linked out to all the organizations / people that I've worked with. I suppose I thought the link to the NDA article was a nice, light-hearted little touch. I didn't imagine it would upset anyone. In almost all cases I can't link out directly to the projects I've worked on, for various reasons, like the project was under NDA (but the relationship wasn't), or the project was not publicly available, or there was no end product per se to link to. For instance, the work I did with Apple was on the Cocoa front-end for an internal HR tool, when I was working with an agency. Or the work I did with Elvie which was product research and prototyping. &gt; I'm not sure if this is a joke or not, **you have a link to a site that says it's all made up and fake** in order to impress people. &gt; If it's a joke, I really don't get it. You're asking people for $25/hr and you have links to Wiki NDA, apple.com and a **site that says it's a fake site** to impress people in the about. I really, genuinely have no idea what you're referring to here. What site says it's fake? Where is the link? &gt; Ok, I really don't see much humor in it. I didn't intend this as a joke. And, the half a dozen people who emailed me after reading this didn't either. I'm happy to answer any questions you might have, but I fear you've simply made a few incorrect assumptions.
Well I'm not exactly sure what to think. I'm not trying to rain on someone's deal, but I don't get the purpose of linking an NDA description under a link of "many others". I'm confused, not upset. I click on a link expecting to see some project that you've worked on and I see a Wiki about NDAs. What am I supposed to do or think about that? The person you linked to states in the about that the site was a fake site to impress someone. Why would you link to a site that claims it's only reason was to deceive people? What exactly would a person do with a link to Apple.com? How do we confirm your background? Apple.com is a retail site, are you saying you built or help build the site? We have no way of knowing what you did for Apple. Ok, so you've worked for Apple, most know who Apple is, we'd probably be more interested in what work you did or what knowledge you can share. I'm not seeing that link to that page, but it was someone I've never heard of before and I clicked on the "about" part of the site where he say the only purpose was to pretend he was working on something. You could have great skills, but we won't find it on a Wiki or Apple.com website, we'd find it on Github or blogs or LinkedIn or something. Not trying to bash, not upset, just don't get the links that don't show any work you've actually done.
Came here to also say "Advanced Topics" like many others have. Something dealing with encryption would be huge. There are very little resources using the SecKeyEncrypt functions and many places (my workplace included) don't let you use 3rd party libraries for encryption so Apples libraries are a must. Also advanced network handling would be another big one. It's something I personally don't get a lot of experience on and would love to dive deeper into it. 
Not sure if this will help you but here's what I did for RegEx in a recent project of mine for field validations. Its a string extension, that uses a "ValidationType" enum (which is just a String with a regular expression associated value) in order to check if its a valid type. It'll run in a playground. import UIKit //Extend this to any additional regular expressions you may want enum ValidationType: String { case ssn = "^[0-9]{9}$" //9 digit number case firstName = "^[a-zA-z]{1,32}$" //up to 32 characters a - z and A-Z case testName = "^[a-z]{5}\\.[a-z]{6}$" //first.last (note the period needs an extra \ } extension String { //Pass a validation type to check the string func isValid(fieldType:ValidationType) -&gt; Bool { guard self.range(of: fieldType.rawValue, options: .regularExpression) != nil else { return false } return true } } let myString = "Jake" myString.isValid(fieldType: .firstName) 
Chris Lattner works at Google. And Lattner and Apple Swift team people have been having a bit of a spat on the swift-evolution list about Lattner's proposal to add Python interop. Presumably Lattner is trying to get Googlers to use Swift but they need to be able to access their services via existing Python libraries.
Yes. I'm currently taking this course. I've watched one lecture. So far he seems nice. Give it a shot. 
Specifically, `NS_TYPED_ENUM` if there's only a few valid constants.
&gt; Well I'm not exactly sure what to think. I'm not trying to rain on someone's deal, but I don't get the purpose of linking an NDA description under a link of "many others". &gt; I'm confused, not upset. I click on a link expecting to see some project that you've worked on and I see a Wiki about NDAs. What am I supposed to do or think about that? It was a light-hearted way of saying that I've worked on more projects than simply those listed, but I can't talk about it because those projects are under an NDA. I've had dozens of people mention that they really liked that touch. So, I've never really considered that it could be misinterpreted. &gt; The person you linked to states in the about that the site was a fake site to impress someone. Why would you link to a site that claims it's only reason was to deceive people? I've finally worked out what you're referring to. My friend Will, on his site [will.global](http://will.global/), wrote: &gt; Will Global is a one person company that isn’t that legitimate, it’s more so William’s friends and family think he has a real job. &gt; I'm not seeing that link to that page, but it was someone I've never heard of before and I clicked on the "about" part of the site where he say the only purpose was to pretend he was working on something. Will has a sense of humour like mine. He's not saying that the work is fake, but the company isn't really a company, it's just so his friends and family think "he has a real job". Something that happens to people who are self-employed is that sometimes your job doesn't look like a real job. If you read the whole about page (on Will's site), you'll find links to actual apps on the App Store and genuine articles reviewing his work, on CNN etc. &gt; What exactly would a person do with a link to Apple.com? How do we confirm your background? Apple.com is a retail site, are you saying you built or help build the site? We have no way of knowing what you did for Apple. &gt; Ok, so you've worked for Apple, most know who Apple is, we'd probably be more interested in what work you did or what knowledge you can share. Apple.com is not just a retail site, it is the website for all of Apple's work. There is no other way to link to Apple. You cannot confirm anything about my background. You have to take me on my word. And people do. Just as I do, when I take you on as a client. I'm saying that I'm a competent, experienced engineer who can deliver your product, and you're saying that you're a solvent, honest company who can and will pay their invoices. It's a mutual trust situation. Every client I've ever worked with has understood this. It's never been a problem. To be completely honest, you're the first person in over a decade to ever have a problem with this. &gt; You could have great skills, but we won't find it on a Wiki or Apple.com website, we'd find it on Github or blogs or LinkedIn or something. Which are linked to on the page you've read all the other information. &gt; Not trying to bash, not upset, just don't get the links that don't show any work you've actually done. I don't know how experienced you are, but it's not really the done thing. You usually have to explicitly negotiate with a client to be able to feature the work you've done with them. And, most companies want to maintain an illusion that they did the work themselves. Did you know, for instance, that almost all of Google's iOS apps are not built in-house? It's not just Software, most industries are this way. Also, most clients aren't interested in your list of past clients, anyway. It's like references on a CV. It's not a guarantee of anything. So they talk to you and feel you out and decide if you're the right fit (and you do they same with them).
`selectorFromString` doesn't fit in well with Swift's static nature. And while Swift does have access to Obj-C's dynamic dispatch, it's mostly limited to Objective-C classes and Swift classes that are subclasses of Obj-C classes.
First of all, don’t use basic authentication; it’s terrible. Or go ahead and use it, it’s stuff like that that keeps me employed in a computer security role. Second, here’s [a good tutorial on using OAUTH 2.0 with Swift](https://www.raywenderlich.com/99431/OAuth-2-with-swift-tutorial), and [here’s one that builds on it using AlamoFire](https://grokswift.com/alamofire-OAuth2).
Good luck man been working on swift for awhile 
I mean I’ve been learning swift for 2 weeks and I’m just practicing but does that mean I shouldn’t use firebase?
Well, if you’re just learning and this is just a throwaway project junk lik basic auth is OK. Just keep it out of real products. In the meantime, do some searching and reading about using keychain to store sensitive data like keys and sensitive tokens so you can retrieve them and send them to your server when you need to.
Sounds good. Thanks man
Can you explain how the AV programming environment is immature?
Ok, there's no real point it discussing different approaches, if it works it works. I didn't get it at first, maybe I wasn't looking for humor so I didn't see it. No problem, best of luck.
That's what I thought, I was under the impression that the runtime hasn't changed which I don't really understand. If the runtime hasn't changed since ObjC, then wouldn't there have to be some layer between Swift and the ObjC runtime? I know many languages have undocumented things, I thought maybe there was something to access this thru Swift.
Thanks for discussing this with me. It’s always a learning experience to understand a different perspective. Best of luck to you too.
Do some research on retain cycles, that’s what they are looking to prevent.
Index out of range means you are asking for the and item in a collection at an index that is greater than the number of objects in the collection. 
Didn't know the the latest Fall version was out, thanks!
Except that a clone isn't all that different from a fork on GitHub anyways. "Fork" performs a git clone, clone provides a URL to clone 
Stanford's CS193 lectures are up on YouTube for free, Paul Hagerty teaches the class and he is absolutely wonderful to learn from.
To be honest. Those aren’t real details. Need actual details. Firebase auth is very simple and Google even has an iOS tutorial on how to do it. 
+1 definitely.
Ray Wenderlich. (Raywenderlich.com) Seriously. Don’t even question it. It’s a sensational resource for Swift and beyond. Also, if you have an iPad, Swift Playgrounds is really nice. 
The only thing that makes a fork a fork on GitHub is that it creates a new remote repository on your account. Cloning a repo leaves it up to you to create a new remote host. 
I made my first ever app after watching youtube tutorials. I wanted an app on my phone that would show me how much money I made at work after tax. I just put in my clock in hours and clock out hours and it shows me how much I made that day after state and federal income tax. It was really exciting to have my first bit of code turn into something I can use.
So you would prefer to make an app than to read a huge book and go through it chapter by chapter? 
Hacking with Swift: begginner to intermediate is free https://www.hackingwithswift.com/ Apple Swift book: https://itunes.apple.com/us/book/the-swift-programming-language-swift-4/id881256329?mt=11
You might appreciate this post I made a while ago: [iOS Resources](https://www.reddit.com/r/learnprogramming/comments/6dz1pi/do_you_want_to_be_an_ios_developer_maybe_even/?st=JA26KHBC&amp;sh=338f91a7) I got hired as an iOS engineer about 2 months ago. 
Yup, look things up in the book as you need them. 
Every now and then, Mike Ash writes [on his blog](https://mikeash.com/pyblog/) about pretty in-depth Swift and Objective-C stuff, like thread safety, weak references, Swift error handling, et cetera. He now also has a podcast for the stuff that doesn't merit a blog post, and I really appreciate the episodes so far.
This would be more suited to Stack overflow. However this is your fix: values.count - 1 / 2 needs brackets around values.count - 1
Well, that sucks.
One frustrating thing I've encountered is that a binary stops working after swift apt package is updated. Even when going from Swift 4 to 4.0.1 recently. I have to recompile the project. Statically linking Swift libraries should help, but I could not do this on Linux.
Which udemy course?
Flutter is interesting option for ios and android app from google, it using their dart lang, which gave them the hot reload feature. The only other place Flutter is used is google's fuchsia os, for it sysui. Fuchsia does have some open code review for swift. https://fuchsia-review.googlesource.com/#/q/status:open+swift
So I managed to sell myself more than I should have, and have started working on my fitness app. It’ll contain three main parts: a journal to track my exercises, a plate calculator to show what weights go in the bar, and a stopwatch to track my rest times. My goal is to have everything on one platform so I don’t have to switch between multiple apps. This was supposed to be a laid back project to get myself familiar with Swift but now my uncle who does IT work for a major company in my area wants me to interview for a full stack web developer position there and he train me. To get the interview, I need a completed app. It’s been a hectic month to say the least. 
That design is horrible.
I also agree with that. A thousand times. 
You can do swift development on non-Mac systems too. And for other things than Mac/iOS/etc apps. 
You'd have to ask the authors of "Elevate".
I agree that they will get better, but I feel native apps will always have that edge and hybrid apps will always be a step or two behind. Native apps will be first to adapt to new technologies like the new Face Recognition features of the new iPhone.
Yay, thank you for this. Now I can counter when I hear idiots repeat the standard "Apple doesn't even use Swift."
Hey, I did this over the past few years. Some tips: a. I don't think 1-2 hours per day will cut it. TBH, getting a job in the most prosperous field requires a bit more of a risk than that. I don't it's doable without quitting your job and living off savings/your parents for multiple months. b. Make apps. Make good apps. Chose an app that you're passionate about and want to be a part of your routine work flow. Make it beautiful and performant with good features. This is how you get a job. I thought being a knowledgeable and capable programmer was more important. I blew away the technical interviews with CTOs and Senior engineers interrupting my interview half way through with "when can you start?"s. But then get to interviews with other teams and having them easily reject me. I once got rejected from a company where the CTO LOVED me but the designers stated that I "lacked empathy for the user." c. That being said, do learn the technical stuff, too. I got my current job by some deep technical knowledge about the objc runtime and the performance of some of the algorithms involved with it and UIKit. 
The formatting is broken these days, but [Make your own App Store](http://writing.markchristian.org/2012/03/30/make-your-own-app-store.html) is a good overview of how to replace the Mac App Store with your own infrastructure.
Quitting my current job is not an option and won't be an option anytime soon, so 1-2 hours (average) per day is going to have to cut it! I'll definitely binge work a lot more on weekends and certain days off. I have quite a bit of graphic design experience, as well as non-swift Programming experience so I'm excited to be able to integrate that into my apps! I'm not really a total "beginner" in this kind of stuff, so I think I'm already quite a bit prepared to move forward with learning what I need to learn and applying it to a new job in the next 1-2 years.
It's easy to see they're using it for anything new, but as a lot of people said before it wouldn't make sense for apple to go and rewrite all their apps in swift. I never understood the Apple doesn't use Swift camp
This is really interesting. Also helps explain why some things that should be relatively stable have gone a little wonky recently - likely issues with the porting.
They think a company can only have and use one language, and that Swift existing means Objective-C must die. It's absurd, ignorant, factually incorrect, and stupid to six decimal places, but there it is.
You want to be looking at the draw(in:) and draw(at:) UIImage instance methods. 
I think swift 5 is when the company makes a complete switch.
Thanks for posting. I really like his blog. Now will listen to his podcast. Good thing you provide iTunes link. I tried search “Mike Ash” in the podcast app and got nothing. 
Not sure why this is being down voted. The Swift ABI has to be locked for Swift 5, making it available for system usage by Apple.
If it ain’t broke, don’t rewrite just to get it into the new language. I’m glad to see Apple moving to use Swift more, it’s a heckuva lot nicer to program in than Obj-C, and the more they use it the more pain points they will find and fix for the rest of us. But definitely not worth re-writing your entire codebase!
This is correct. ABI stability is the beginning of the end for Objective C.
&gt; Make your own App Store thanks!
Of course, they won't say it. Deh
I wonder when/if Apple will start to use Swift on their backend services. 
There are a number of different [window levels](https://developer.apple.com/documentation/appkit/nswindow.level) - just pick one that will place your window above all others. I imagine screensaver window level would do the trick. 
I'm curious would I be able to do this without an actual window?
You can achieve what you describe by setting properties of your `NSWindow`. 1) Make window float above all others: `window.level = .floating` 2) Prevent window from blocking clicks to elements below: `window.ignoresMouseEvents = true` I also assume you want to make the window transparent without any titlebar, which you can do by setting a few more properties: ``` window.backgroundColor = .clear window.hasShadow = false window.isOpaque = false window.titlebarAppearsTransparent = true window.titleVisibility = .hidden // Hide traffic light buttons. let windowButtons: [NSWindow.ButtonType] = [.closeButton, .miniaturizeButton, .zoomButton] windowButtons.forEach { window.standardWindowButton($0)?.isHidden = true } ``` You can also set many of these properties in interface builder, if that's what you prefer. Putting it all together: ``` import Cocoa class WindowController: NSWindowController { override func windowDidLoad() { super.windowDidLoad() guard let window = window else { fatalError("`window` is expected to be non nil by this time.") } window.backgroundColor = .clear window.hasShadow = false window.ignoresMouseEvents = true window.isOpaque = false window.level = .floating window.titlebarAppearsTransparent = true window.titleVisibility = .hidden // Hide traffic light buttons. let windowButtons: [NSWindow.ButtonType] = [.closeButton, .miniaturizeButton, .zoomButton] windowButtons.forEach { window.standardWindowButton($0)?.isHidden = true } } } ```
this is awesome, i'll give it a try thanks!!
A window is just chrome around a view. There’s likely an nswindow style without it.
There really isn't a "without an actual window" - whatever you present has to be in a window. You can remove the standard window titlebar UI and even have custom nonrectangular window shapes (search for the NSWindow docs), but you still need a window to put your content in.
No.
It's being downvoted because it's wrong. There will be no complete switch. They are not rewriting everything in Swift, there would be no benefit.
I just got a MacBook Pro last week and have started on this journey too! Been loving it but I’m not a total beginner to programming. With that said, I’m starting to get a bit overwhelmed with ALL THE INFO being thrown at me (Udemy courses, hackingwithswift, ray wenderlich..) So I might start working on my own app while learning (as per some of the advice on here!). Good luck to both of us!!
where are you located?
I wouldn't say the upgrades are necessary but if you plan on keeping the MacBook for a while, I would say the upgrades are worth it. Plus, at that price point with all those upgrades is a pretty solid deal.
Ohio?
nvm
If you're using Swift on an Apple platform, you *can* use the ObjC runtime for Swift objects, including selectors. There are limitations, of course: - you can end up losing some of Swift's type &amp; memory safety - only the portion of Swift which Objective-C understands will work (basically NSObject subclasses with dynamic methods/properties, no generics, etc.) - it is (in all likelihood) going to be much slower than a more idiomatic Swift approach - it only works on Apple platforms If this *didn't* work, then you couldn't use Core Data from Swift, or target/action pairs on controls, for example. Examples you can run: - [Dynamic selector creation](https://pastebin.com/FwaLwUGm) - [Other runtime manipulation](https://pastebin.com/5mwWAwX0)
I can second this. Even as I become more and more comfortable, when I'm looking for documentation in a new domain I've never tried, raywenderlich always helps 
Ram is worth it, hard drive space is optional. If all you're doing is swift, 256gb is going to last a while. You can store additional projects on an external drive at a much lower price point.
Yes! Long story short — Figure out what you want to save to "mark" that somebody was signed in, check for that and read that value every time the app opens. More in-depth, often you just need to save a long String that's a token, or maybe an integer that's their ID, etc etc. Check out [UserDefaults](https://swift3tutorials.com/swift-3-user-defaults/). Think of it as basically a Dictionary that gets saved on the phone in a way that doesn't get deleted if somebody exits the app! In most apps that I make I end up saving a couple important details about a user when they sign in, and if there's nobody signed in, then those values are null. When the app launches, the very very first thing that happens in AppDelegate is to check if those values are there! If they are —&gt; go to the main screen. If they are not —&gt; go to the login screen. But def UserDefaults. Skip Core Data, Realm, etc for this kind of thing. You just need something light to "persist" the info between app runs. 
16 GB of RAM is required. The 13" screen is pain. I am using my 15" Retina (damn you, Apple make the 17" again) and 2 Thunderbolt displays now. 
Are you telling us or asking us? 
256 GB is doable, if you strictly reserve the machine for Xcode development, IMHO. So that means, stream your music, and put big stuff like put pictures/videos elsewhere. Then it may work. However, you will need to keep an eye on it. Personally I think it's a big hassle. It's probably a much better idea to set up a company, with the express idea of developing this app. Then you can get a laptop with 16 gigs of RAM and 512 GB storage, which is in my opinion the most comfortable way of running Xcode nowadays. In my opinion, I'd rather get the 2015 model with 16 gigs and 512 GB storage than a newer 2016/2017 one with less than those specs.
Thanks! That looks like what I'm looking for.
I got a 2015 model with 8 gig ram and 512gb ssd, 2nd hand for £1000. It works like a beaut.
Have you thought about just installing an upgraded hard drive and ram manually? I know next to nothing about computers, but for extra 200 bucks I was able to upgrade to a 525gb hard drive and 16gb of ram for MacBook Pro. I had my uncle who does this kind of work guide me a bit, but he said he learned everything from YouTube videos. 
UserDefaults is great for app preferences or flags like `firstTimeRunningApp` but you should be using Keychain for tokens and other auth credentials.
You would certainly want to have the images on a server and download locally when needed. Tens of thousands of images sitting in resources would tank app download size to save a fraction of a second.
Check this simple snippet: static func mergeImages(_ images: [UIImage]) -&gt; UIImage { if images.isEmpty { return UIImage() } let first = images.first! let r = CGRect(x: 0, y: 0, width: first.size.width, height: first.size.height) UIGraphicsBeginImageContextWithOptions(size, false, 1) first.draw(at: CGPoint.zero) for i in 1 ..&lt; images.count { images[i].draw(in: r) } let image = UIGraphicsGetImageFromCurrentImageContext() UIGraphicsEndImageContext() return image! }
I was telling I don’t remember how to edit the comment
That’s the model I wanted but my discount only applies to the newest machines. I think I’m gonna go for the 512 and 16. Do you think I would need the upgraded processor?
The new MacBook pros don’t allow for users to upgrade ram and storage any longer. I was using a 2010 with an SSD and 8gb of ram. But it is no longer viable
If you still have the 2010, it’s worth it as that’s what I’m running right now. It’s a shame that the new ones aren’t bad easy to upgrade. 
These languages look superficially similar but the semantics and APIs are very different so a complete converter would be no easier than any other language. Your best bet might be something like [this](https://stackoverflow.com/questions/4934707/is-it-possible-to-transform-llvm-bytecode-into-java-bytecode), though they all appear to be abandoned.
No, in my opinion you do not need the upgraded processor. Of the three developers here, only one has upgraded the CPU. Everybody else has the 512/16 base model. The Swift compiler is getting pretty good nowadays!
There is probably some kind of API out there that would fetch you these kinds of images, but be warned... You're likely not necessarily guaranteed that these images would be accurate or safe for work images, and you probably wouldn't be guaranteed that an image would be returned meaning you'll need a dummy image for those kinds of cases. 
Ah, that’s interesting. You’re totally right. I have, over my last few projects, forgotten to use Keychain. Is Keychain essentially the same as UserDefaults, but encrypted? It’s also synchronous, on disk, key/value, etc?
Thanks for posting this, I’ll give a look at it later
I am a casual programmer and I bought a 2015 12" MacBook with 8gb ram and 256 drive space. The only time I find this MacBook a little lacking is when starting up a new emulator. I'm not saying you should buy a 12" MacBook, I'm just saying if you are a casual programmer like I am, anything more than the base MacBook should work just fine.
Welcome Friend !
I'll second this - HDD and RAM are the most important parts. You won't notice a huge difference in processor speeds.
I know Yahoo did this in their weather-app. Think they used flicker as their database. https://www.flickr.com/services/api/ I would begin to search in the photos.geo section :) good luck!
&gt; GCD doesn't have kernel support outside of the Darwin world, so performance using that might not be quite as good. Future concurrency work in Swift may help here, or it might not. Do you even know what you're writing about? GCD is a library that runs on top of pthreads, so performance is the same.
I've developed a suite of micro services for Linux in 2016 and it worked perfectly with Foundation and IBM Kitura frameworks. In 2017 we deployed the micro services and the performance has been great specially at the level of RAM, which is very important for us as we need it to run on expensive ECC RAM servers. So yes, you can use Swift as a general purpose programming language on Linux as you can on macOS, and I recommend it.
This belongs on /r/AppleWhatShouldIBuy.
Swift UIKit for Linux and Mac based on SDL2 and Cairo https://github.com/PureSwift/Cacao
There will be no "complete" switch, not now, not ever. Give up the notion, it's just wrong. Oh, they'll use Swift more than they do, and they should do, but multibillion dollar companies do not throw out working systems just because a few programmers have a hate-on for a language they don't have to use.
I'm basing my understanding on [Apple's own documentation](https://github.com/apple/swift-corelibs-libdispatch): &gt; libdispatch on Darwin is a combination of logic in the xnu kernel alongside the user-space Library. The kernel has the most information available to balance workload across the entire system. As a first step, however, we believe it is useful to bring up the basic functionality of the library using user-space pthread primitives on Linux. Eventually, a Linux kernel module could be developed to support more informed thread scheduling. What is the source for your claim?
Not free. This post is an advertisement. 
Why UIKit instead of AppKit?
We mean any new software coming out from then on, and some system level work.
Also not going to happen, in the sense you mean it. As long as there is a Darwin-based platform at Apple, there will be new code written in Objective-C. Accept it, there is no other way it can go. Swift will likely dominate, yes, but Objective-C isn't dead, no matter how raw the Swift language fanboys rub themselves thinking about Obj-C devs committing seppuku. 
At a guess: more devs are currently actively using UIKit than are using AppKit (and I'm using AppKit on a daily basis, for the record).
Objective-C is dying, accept it dumby.
Languages don't die. COBOL is still going. I know three different guys who primarily code in FORTRAN for a living. Just because you're too inexperienced in real software development to know this doesn't mean it's not true. Also, you misspelled "dummy".
well they're morons and most likely stuck maintaining code from 1995. Dont be a demmy.
Obviously you're not a real developer, you're just a child playing with things you can't understand.
I'm sorry real developer, I have forsaken you. Only FORTRAN devs are real devs. PS. I said stop being a dumby.
I wonder how practical it would be to share the view code between a desktop app and mobile app, given how different those platforms are. UIKit components are designed for mobile, don’t have the concept of menu bar, right click menu, no window controller etc... I see obvious benefits writing cross platform desktop apps using AppKit though, which is a framework that was designed for multi windows desktop app.
Your opinions don't count. You can't even spell.
Lol rkt
It worked for the Twitterrific team http://chameleonproject.org
AppKit has a horrible API design (e.g. NSCell, CocoaBindings). Also, the views are not necessary backed be a CALayer. UIKit is more more popular and modern, and the idea is to port iOS app to macOS, Linux and Android.
You should get it from your data model. You have a data source delegate for your table view that is populating data by implementing the delegate methods right? You are probably accessing your data model in the cellForRow method so that you can setup your cell's UI right? When didSelectItem is called you get an index path, so you should use that index path to access the data model just ass you did in cellForRow. Feel free to hit me up on Slack, I can give you a little more hands on help there: https://stackberry.io/slack/
I'm curious how well it worked in the end since their chamelion project hasn't been updated in 4 years
If only /r/swift had some active mods – this "user" literally just posts Udemy links with affiliate codes for the same gainfromhere.com site, and weirdly gets a big number of upvotes almost immediately. Come on, /u/lyinsteve and /u/wuddersup!
Post removed as spam. Sorry for not catching this earlier — maybe we should beef up Automoderator with some rules about Udemy courses and the like.
I’ve removed this post because it really doesn’t have much to do with Swift. Maybe you can check /r/iOSProgramming for iOS development resources.
What do you think about the Darling project? https://www.darlinghq.org
They dropped it for the twiterrific rewrite.
UIKit also has the minor benefit of also having a [Windows implementation](https://github.com/Microsoft/WinObjC/wiki), albeit it's basically UIKit circa iOS 7. Now if Apple would just implement UIKit for OS X.
Thank you!
The main target is to port iOS apps to Android. The Linux and MacOS are plus, but iOS -&gt; Android is what we really want.
Its never gonna work unless the implement at least CoreGraphics and CoreAnimation in C, in which case why bother? 
That's what I meant, it didn't work. ColemanCDA's comment made it sound like it was successful 
Here is full code: var appleCount = 0; var mangoCount = 0; var orangeCount = 0; var bananaCount = 0; var pearCount = 0; var grapeCount = 0; var fruits = ["Apple","Apple","Apple","Mango","Pear","Grape"]; var counts: [String: Int] = [:] for item in fruits { counts[item] = (counts[item] ?? 0) + 1 } for (key, value) in counts { print("\(key) occurs \(value) time(s)") } print(appleCount) print(mangoCount) print(orangeCount) print(bananaCount) print(pearCount) print(grapeCount)
Thanks Again. mmm, I thought I had to create a new instance of MatchVC() and set my data inside DidSelectItem? [Screen of my Storyboard](https://imgur.com/a/s42sb) I fetch all the /matches from my DB and count it in an array to have the number in numberOfItems. I know now that my matchesArray IndexPath and my cells have the same number, but I can't just figure it out in code how should I do it. ...I wanted to click into a cell and just pass that data to the Match VC, is it me or am I missing something? 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/kiUZbLZ.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dpz5dih) 
Right now, there’s no code that ever updates the `appleCount`, etc variables. As far as Swift is concerned, they’re just 5 different names for 0. If you want to get the value out of the counter, use the `subscript` of the dictionary after your loop, like so: ``` let appleCount = counts[“Apple”] ?? 0 ``` And so on, for the rest of the variables.
You never increment the counts in your for loop. You print the number but you need to add a conditional statement to determine what count you want to increment based on the fruit it sees. For example using sudo code If (item) == “Apple” { AppleCount =+ 1 } That way you are actually changing those counts. Then when you exit the for loop you will print the correct counts.
Actually, do what the mod that commented said. My example is for someone that is just starting to program and learning the basics. His example is a lot cleaner.
Buddy, if you think AppKit's API is horrible, you should try writing code for Classic Mac OS.
Didn’t know that was a subreddit. I wanted the opinion of programmers instead of consumers my apologies. 
Thank you this helps 
True, I don't know Swift nor Kotlin deep enough to understand the fundamental blockers. The naive me however still wants to believe that certain subsets of the language (basic stuff such as arithmetic, data structures, OO) can be mapped whereas the remainder can be written individually for each platform. 
Just saw your message in Slack, online now and can help. But you're right, you probably want to get the data from your model in didSelectItem and then instantiate your MatchVC with that data and present it
Thank you so much. It worked.
Thanks a lot for your help, I tried your code and it worked perfect. Now, I got 2 solution for 1 problem :)
Even if Objective-C goes away completely (it won't), don't forget, parts of macOS are written in other languages. One that comes to mind: C++. See Safari &gt; webkit. 
Kotlin characters are codepoints, rather than grapheme clusters. Kotlin strings are always immutable. Kotlin doesn't have (as many kinds of) property observers. Kotlin doesn't have value types, or copy-on-write collections. There are some pretty fundamental differences here -- and Swift-to-Kotlin is probably the *easy* direction!
it might have not worked for the desktop UI, but they launched a production, award winning app with it. Again, the idea for this is to port, if you have the resources just write C#, Java, C++ for Windows, Android and Linux. But if you are an indie dev and have a great iOS app, this might make all the difference in the world for you. And again, Im not expected this to be successful on desktop platforms, the main target is iOS -&gt; Android ports. This project was inspired by http://www.apportable.com (which Google acquired (hired) and shut down. You can see the number of successful iOS apps natively ported to Android with high success rates (and great performance). I never had the $$$ to get a license, and how they abandoned it, so I'm writing my own implementation in Swift. http://www.apportable.com/customers 
Or win32
I did some time in Carbon. HIViewRef and the like. Pointeree!
Neat! I wish I had a linux env set up to tinker with it. Is this how I am going to spend my Friday night?
This Stack Overflow solution details how you can use CommonCrypto in a Swift project: https://stackoverflow.com/a/29189873 Admittedly it doesn't look like a particularly pleasant process. Instead you might consider using [CryptoSwift](https://github.com/krzyzanowskim/CryptoSwift) which includes Blowfish encryption and is almost certainly easier to incorporate into your project (Carthage being my preference for macOS and iOS apps).
This is a bit out of date and hasn't been updated recently, but try having a look at this repo I found: https://github.com/ISBX/apprtc-ios It is using Google's WebRTC framework https://webrtc.org/native-code/ios/
As someone who’s used apportable I’ll have to strongly disagree. It only worked 100% with tailored examples, it didn’t support a lot of common things. The company I was working for ended up getting a refund on the liscence after their support said they couldn’t help us and they said a fix wasn’t on the roadmap. I tried it with different projects I had and one of them were close to working
Depends what you mean by Win32, though :) 
Let's not forget the amount of C++ in LLVM, which is crucial to all of Apple's platforms.
[removed]
What is carthage?
Xcode lacks an official way to manage dependencies, so several third-party solutions have been developed and widely adopted by iOS and macOS developers. [CocoaPods](https://cocoapods.org) is probably the most popular. [Carthage](https://github.com/Carthage/Carthage) is an alternative. They both basically do the same thing but take slightly different approaches. They're analogous to npm or pip or RubyGems, if you're familiar with any of those. A full-blown dependency manager might be overkill if you just want to quickly pull CryptoSwift into your project, but if you're doing a lot of development, spending the time to set one up is worthwhile.
No it doesn’t. All versions are much worse than cocoa. 
I'm just getting started in swift programming. Xcode is pretty weird to me. I'm at that point where I know enough to make little projects, and how to plan bigger ones, but nothing else. Ultimately, I ned to learn how to do the swift equivalent of curl and use blowfish for encryption. I'm trying to write an app that calls up nissan and checks the status of the charge on my electric car. I know there are already apps that can do that. Now, I want to try making my own.
XAML is pretty easy and good to work though... 
Did you buy his book? Or where did you start learning from him?
From the free stuff from his site
k
First of all this subreddit will indeed be quite biased as it is catered to Swift / iOS development. I think this question is best asked in r/LearnProgramming, but it has already been asked a ton so you can just browse/search that subreddit and you'll find plenty of information. I think the answer really depends on what you want to do and what type of programs you want to build for your job. I think in terms of being wide-spread, JavaScript, Java or C++ could be the biggest ones in terms of how many jobs are in them globally. That said, especially markets for JavaScript are quite saturated already (tons of people know JS right?). Swift is quite new obviously so the need for them might exceed the supply of Swift developers depending on your market. What most people in r/LearnProgramming will tell you (I think) is that it doesn't matter that much. I actually agree with that because really, even IF you pick the language that's the most hire-able and widespread, you might be out of luck finding a job for whatever reason. Whereas learning something that you would think doesn't have many practical implications could get you a job on your first application. You're just maximizing your chances to the best of your ability, but the insecurity of a hiring process is maybe a bigger determinant whether you land a job you like. Whatever you do, do NOT learn none because you can't find the best answer through your search. I see many people take this route. I would say pick one and stick with it. Sorry if this went off topic a bit! Good luck.
It’s a part of WPF, not win32. And it’s worse than interface builder from several years ago anyway. 
That's why I said depends what you call as Win32, as anything that is not UWP is considered Win32. Anyway, is not worse. You can prefer UiKit or AppKit just fine, but XAML is not bad at all. 
I'd also recommend JavaScript because it's essentially the only truly platform independent language as it's the only language available in web browsers. It's also pretty easy to start with as you don't need anything but a text editor and a browser. In addition to that, sharing your creations is trivial as anyone can just go to a website and see what you did.
But WPF isn’t Win32, it’s a framework that ultimately sits on top of it. 
That's why they don't call win32 anymore, because UWP don't sit on top of Win32 :)
JS, Python, Swift, Kotlin and C. With JS you can do it all in the web arena. With Python you can do it all, easily. With Swift you can do it all in the Apple ecosystem. With Kotlin you can do it all in the Android ecosystem. With C you can do it all, period.
&gt; well they're morons and most likely stuck maintaining code from 1995. Dont be a demmy. The COBOL devs probably work on code that's at least a decade older than that. And since there are so few that are able to maintain such code, they get paid a lot more than the average iOS developer. 
European here... What is a coloured science degree?
Munger() for the win! I do miss trap patching though. 
From the USA and I have no idea either. 
Check out VirtualBox or if you feel like throwing down a few bucks Parallels isn’t bad and you can virtualize a Linux env.
Never seen webpages in C
``` import UIKit extension Array { func duplicate(with array: Array) -&gt; Array { var result = Array() for (key, value) in array.enumerated() { result.append(self[key]) result.append(value) } return result } func duplicateBySelf() -&gt; Array { return duplicate(with: self) } } let p = [ [ 1, 0 ], [ 2, 2 ], [3, 4] ] let q = [ 1, 2, 3, 4 ] p.duplicateBySelf() // -&gt; [ [1, 0], [1, 0], [2, 2], [2, 2], [3, 4], [3, 4] ] q.duplicateBySelf() // -&gt; [ 1, 1, 2, 2, 3, 3, 4, 4 ] ```
Hey mate, I've created a Playground to solve your problem. https://pastebin.com/FTG9GyX9 Hope that was what you were looking for?
Maybe a typo of ‘computer science’?
Thx. I've already got VB installed, just dont' have any OSs setup ATM. I ran out of HDD space and they had to be tossed for the greater good. 
Ok. I see Rudy69 and KyleCardoza are very pessimist about this. I don't get what your point is? "Your library is stupid and a waste of time?" Im writing a clone of UIKit, yeah, its gonna be a subset of the API and is probably never gonna be as good as the real deal, and as far as Apportable goes, thats closed source, so there is no ability to expand it and solve those issues. If PhoneGap and Xamarin (which I dislike) have been so successful (a ton of production apps in the App Store and Google Play), this project can too as it aims to be a cross-platform mobile UI framework, to write code once and compile for iOS and Android apps. I'm kinda disgusted at your guys reaction to this software. I could understand if you had some constructive criticism, to make this better, or strategies to make this successful. But I can see the spite and pessimism in your comments.
Checkout [Blocket (Swedish craigslist)](https://www.blocket.se). They've been around since the late 90's and have their backend and templating system based on C. They are however migrating to Python or Java I think.
Even if a production app is never written with this, is still extremely interesting to reverse engineer UIKit (like I did with SwiftFoundation https://github.com/PureSwift/SwiftFoundation , which allowed for Foundation Value types in Swift 2 for Swift on ARM Linux, back in 2015, way before the Apple Foundation proposed values types and when Foundation C dependencies weren't compiling properly). I would expect as a programmer anyone would be curious about writing a clone of a popular proprietary API and how it works behind the scenes, so you don't think it will be practical thats fine, I would expect any Apple developer would at least be interested in the technical details of how these Closed API millions use work. So again, kinda disappointed you two don't seem to have anything positive to comment. I don't like C# and I still think the Mono project is an extremely impressive feat of engineering and its interesting how they reverse engineered a decade ago the C# compiler without specs.
Even if a production app is never written with this, is still extremely interesting to reverse engineer UIKit (like I did with SwiftFoundation https://github.com/PureSwift/SwiftFoundation , which allowed for Foundation Value types in Swift 2 for Swift on ARM Linux, back in 2015, way before the Apple Foundation proposed values types and when Foundation C dependencies weren't compiling properly). I would expect as a programmer anyone would be curious about writing a clone of a popular proprietary API and how it works behind the scenes, so you don't think it will be practical thats fine, I would expect any Apple developer would at least be interested in the technical details of how these Closed API millions use work. So again, kinda disappointed you two don't seem to have anything positive to comment. I don't like C# and I still think the Mono project is an extremely impressive feat of engineering and its interesting how they reverse engineered a decade ago the C# compiler without specs.
Yes, that's it exactly! Thank you very much!
Maybe simply “let results = yourArray.flatMap { [$0, $0] }”
What if I would like to modify the function so it has a signature like this: duplicate(with array: Array, inverse: Bool = false) -&gt; Array Inside the function, it checks each element of the array (or element within array of array) and negates it. My naive attempt at doing this threw an error when I attempted to append the result, I'm guessing because the result array has no explicit type. There would probably have to be some type of check that the array is numeric, but I am not knowledgeable enough in swift to do that. Anyway, I gave you gold for your help. If you know how to do this, I'd greatly appreciate it.
Xcode certainly takes some getting used to, but you get the hang of its quirks before long. Regarding the Swift equivalent of curl, consider using [Alamofire](https://github.com/Alamofire/Alamofire) for your HTTP requests. It saves you from writing a lot of `URLSession` boilerplate and makes debugging requests easier (helpful feature: you can see the curl equivalent of a request using `debugPrint(request)`). Part of my job involves building a macOS app that makes tons of requests and Alamofire is a massive time-saver.
Of course backend can be in whatever, front end can't be in nothing
Love it.
Here's a quick example of in-place and out-of-place solutions, with **O(2n)** and **O(n)** complexity, respectively. But personally I like /u/-rFlex-'s `flatMap` solution the best, which is also **O(2n)** complexity. extension Array { // In-place mutating func duplicateElements() { for index in 0..&lt;(self.count * 2) { if index % 2 == 0 { self.insert(self[index], at: index + 1) } } } // Out-of-place func byDuplicatingElements() -&gt; Array { var newArray = Array() for element in self { newArray.append(element) newArray.append(element) } return newArray } }
Obtaining the degree requires a lot of crayons 
Not sure why ABI stability matters to Apple. They ship the whole OS, anyway, and each application bundle includes its dependencies. It will be more space-efficient if they don't need multiple copies of the runtime, but as you can see from this article, it's no problem for them to ship Swift programs today.
I can’t find it now and it’s from the early days of Swift, but there was some four hour YouTube video that got me started. I already knew objective-c though. But it was a somewhat larger guy with a mustache that had an annoying habit of saying “Sidebar” before going on some related matter. Fairly good instructor though. Covered all the basics. 
With emscripten, you can compile almost anything to JS to run in browsers. There's also compilers for Java-to-JS, and many other HLLs. At this point, most web developers I know are not actually writing JS. It's true JS is the only native language in all web browsers, but that's like saying ARM machine code is the only native language in all smartphones. It's technically true but that doesn't mean you have to write for that -- or would want to.
&gt; What I’m asking is what languages do you think are the most hire-able and widespread? I have been dabbling with Swift but I know it’s quite limited by being Apple only. Why? How many jobs do you need? Is 1 billion potential users not enough?
Do you want to get a job or do you want to be happy? Learn the programming language you like most and become an specialist. You will always find someone who want to hire you 😉 Trust me I have been doing backend with ruby for the past 8 years and even tho the ruby scene is limited I always land in ruby jobs, however that does not limítate you to learn other technologies like swift.
but the job is crap. boring
Python is a great first language: easy to learn, but very powerful and versatile. It’s become a favorite in the scientific fields because of its abundant ecosystem of scientific computing packages. It’s also great for server-side web development. 
Stop using single letters to represent something. Use a word that tells you what the variable represents.
Your mutating func is not O(n). Hint: consider what needs to happen when you insert an element in front of the array.
Oh duh...you’re right
I wonder what the true time complexity is. I was tempted to say `O(n^2)`, but the cost of shifting the elements decreases as the insertion index approaches `endIndex`. Would you say it's `O(n^2)`? 
1. Communicating with your teammates. 2. Planning future work. 3. Lobbying higher-ups. 4. Politely saying NO to requests from other teams. 5. Anything actually involving coding.
Maybe I should have clarified, I meant technical skills. I have the social ones down 
Thank you, glad I could help! So to make things clear, what you want to get is, in case of "p", [ -1, -1, -2, -2, -3, -3, -4, -4 ]?
That depends on if you're writing a single page application using JavaScript and Ajax. Lot's of sites still uses server side rendering of HTML pages. 
Yes, That’s correct.
&gt; Do you want to get a job or do you want to be happy? Why not both?
Probably these for technical skills: &gt; Communicating with your teammates. &gt; Planning future work. &gt; Lobbying higher-ups. &gt; Politely saying NO to requests from other teams. &gt; Anything actually involving coding.
Also interested in this -- have read a bit about WebRTC, but wondering if there is anything newer out there.
You can constrain extension to specific conditions, like in this case `extension Array where Element == Int`. With this change, the extension is only available to Arrays of type Int, plus your Array Element has no generic type, but Int instead. Then you could reverse each element as you wish. 
Yes absolutely. You just need to reference the containerView in the viewController.
Oh, boo freaking hoo, not everything in your life is meant to be entertaining, you child. Go away until you've actually lived a life worth talking about.
* how to make http requests, including authentication * how to query a database (sql) * a backend language were you can also do the above * view navigation * basic understanding of design patterns (gang of 4)
Typo! Computer science degree 
[removed]
[removed]
Thank you for replying. I do have a follow up question 1. Are you self taught or did you go through a code camp/school 2. Could you elaborate on "basic understanding of design patterns? 3. What languages do you recommend or rather you come across frequently ?? Thank you in advance 
1. For mobile, self taught, read a lot of books. Stanford has a bunch of iOS classes online as well via iTunesU. 2. Eek...find a design patterns book, start reading. 3. I’m a .net developer, so C# is my go to language. But I’m also comfortable in Java, Node, and Python. Doesn’t really matter too much, as there is no “best”. It is just to show some versatility and willingness to learn.
Great. Great. Thanks. One more question, if you have it in you. What are some some of the current trends and future things to look out for?
Great. Great. Thanks. One more question, if you have it in you. What are some some of the current trends and future things to look out for?
To ambiguous of a question 
Is it really?
Alright. Thank you!!
Black science. It's like black magic, but science.
According to Apple’s documentation, their insert(_:at:) method is O(n), so yeah looks like it would be O(n^2) to do it once for each element of the array
No, technical skills vary drastically from job to job. That's why every job listing includes them. I could tell you "learn Git really well", but I think 4 of the 5 biggest tech companies in my state each use a different VCS. Learn to touch type. That's pretty universal.
Why learn what everyone else is learning? Learn Ada, Haskell, Common Lisp, Erlang, Ocaml, etc 
Best way to achieve is with segue injection. Because I guess you want to manage what is inside the container aswell.
Well, I'm not sure if I'm asking the question the right way then. Take a look at this repo: [here](https://github.com/jakespracher/Snapchat-Swipe-View) ...I'm still fairly new to swift and, to an extent, I'm understanding what's going on in this code a little bit, but my current project uses a modified TabBarController that has some references and functions. I was thinking the same as both your and [/u/yreaction](/u/yreaction)'s suggestions when trying to switch from TabBarController to this repo's version, but I'm just not sure how to get to the "SnapContainerViewController". Would it be the parent of the other controllers? 
- making good coffee ☕️ - remember names of your boss or n+1 kids could always be useful - mastering Nerfs - read the fucking official Apple doc !!! 😋 
Version control, especially git is always important and should be on any serious résumé.
I don’t think this is too vague really. React is up and coming big time. Is in android iOS and JavaScript which covers really any front and backend possibility. AWS (Amazon web Services) is also a pretty big trend right now. Look at using/understanding S3, lambdas, api gateway. Angular is also another big big one for web development.
How to use git or a similar source control tool. Learn the command line tools too not just how to use those gross (don’t hate on me) GUIs. Should be able to know how to checkout new code, create branches, general branching infrastructure, rebase branches, and commit code. General understanding of frameworks such as MVC or MVVM (googling those should bring them up pretty quick)
Should probably be a weak reference too
I found [this](https://github.com/shogo4405/HaishinKit.swift) a while ago. It's a start
I'm going with: Debugging code. Estimating time to get a project done. Testing/changing a project that wasn't spec'd right and needs to be changed. Coordinating with other workers about what needs to be done and how it should be done. Arguing over the best approach to doing a given job. Others, getting data where it needs to be.
Native will allways be the best. If you need help writing it, or need someone to write it for you - give me a shout at GJ at clearprop.software
If you have a good architecture which separates business logic from user interface, you could directly reuse the bottom part of the stack and just write a new UI. 
1) won't work, because the Mac uses AppKit and iOS uses UIKit. For example, there is no UIView on the Mac. It is called NSView and although the principles are the same, it behaves different. 2) could work but the amount of glue code will be horrible and difficult to write. The result will be subpar. 3) is the way to go. Divide the iOS app in one or more modules, and separate out the UI. Then these modules can be reused in both the desktop and mobile app. But really, only really well earning apps can justify a native Mac client. Make a very careful calculation here. It could be a unique selling point that differentiates your app from others, though. 
Swift isn’t just for Apple. Take that idea out of your mind first and foremost. Languages are pretty irrelevant to getting a job anyway. You can be productive in a code base with a new language only marginally slower than a code base with a language you know. The vast majority of the problem getting productive in an existing code base is specific to the code base itself, not the language. 
As already pointed out, straight up (1) isn’t possible because UIKit used on iOS is not the same as AppKit on macOS. However, unlike (3), you don’t have to start from scratch at all. You can take your existing codebase and create a new native macOS application with new views and view controllers. If your current app is architected right, or with some refactoring, you can re-use a lot of code (and hence, work). Please don’t do (2).
If you want to get a serious job with potential you need to get an education. In my mind there is no other way to be successful in a career.
Learn to touch type. Your comment inspired me to write a post on medium with [my advice for new programmers](https://medium.com/@neoneye/recommendations-for-new-programmers-fe02991af830). I didn't mention swift at all.
Adding to what others have already said. You won’t be able to use the views of your iOS view controllers in the macOS version. However you can move business logic out to their own classes (if not already) and re use that. If you follow a strong MVC where the view controller is the view then maintaining both applications would be very scalable
I've rewatched the whole talk and there's absolutely no mention of this. In the first part the speaker makes it clear again and again that value types are all stored on the stack. Additionally, value members of that type are just inlined. The second part is all about protocol types. Swift has a concept named "existential containers". When you declare a variable or an array of a protocol type Swift needs to box these values because value types have an arbitrary size. ``` protocol Shape {} struct Point { let x: Int let y: Int } struct Rect { let point: Point let width: Int let height: Int } func printShape(s: Shape) { ... } ``` Because it is not known what you will pass to `printShape` until runtime Swift has to use heap allocation to make this kind of code possible. This step has unnecessary overhead that CAN be avoided if you accept a fixed-sized value type like either `Point` or `Rect`. You can also use generics so that the compiler will create a specialized version of `printShape` for both `Point` and `Rect`, provided whole-module optimization enabled. Existential containers also contain two additional words to store small values to further avoid heap allocation. So unless you linked the wrong video your statement is wrong.
Yes ! I guess our architecture has been very much planned to have business logic and UI different, so i guess i will try to give MacOS native application dev a try. Though it might take some time to develop and as i always think there is no easy way to go, I will start of with the native thing and i hope it would be all worth it :) Thanks for the input.
Thanks a lot for the input, I will start working on the (3) and as I have Models and classes set up in my iOS application, i will try to get in as much of code a possible to Mac app and then see what i require. :)
Thanks a lot for the input, I am giving it a go working with first MacOS application first time, Hopefully it turns out good :)
Cool ! Will definitely PM you if we need any help, thanks !
[removed]
Thanks for the input, will see how we can start off developing a native application. :D
Good luck! Don't be discouraged when AppKit, which is superficially very similar to UIKit, forces you to do a bit new reading and learning. In my opinion the best desktop app framework out there.
': A' wont be true if you don't initialize it
So it's automatically initializes A, but then what's the point of overriding init in B?
The `override` keyword is required whenever a subclass initializer matches one from its parent… to make it explicit. It could be useful to customize what happens in `B`'s initializer, though, if `B` had an extra stored property or needed custom logic inside. 
Just to make sure I understand. The override of init calls `super.init()` by itself, but it only happen for override of init. If I `override func foo()` it will replace the whole method without calling `super.foo()`, correct?
Yep. Initializers are a bit special because of the need to make various guarantees for memory safety. 
[removed]
Thank you.
Certain class have pretty the same API, like UIImage and NSImage, or OpenGL stacks (not all but some). So you can make reusable code in law level like other user said but also some UI Stacks. Alamofire manage this well for exemple. 
&gt; aim to get more than 50 words per minute That's a pretty low threshold. I would aim for at least 80. Typing slowly means you're not writing everything down that you should (documentation, comments, descriptive identifiers, etc). &gt; Every day I write a lot of text and use several keyboard shortcuts. I would expand on this to: you need to learn your text editor really well. If you ever repeat yourself (doing the same thing more than a couple times), you're wasting time, and thrashing your short-term memory. &gt; You can store your own private repositories at Bitbucket for free. You can create your own private repositories at localhost for free, too, and it won't even require signing up. You don't need a centralized server for a distributed version control system. &gt; Install SourceTree. SourceTree has gotten progressively slower and more complex over time, and I no longer recommend it. Git itself has gotten faster and easier to use, and is no longer the UI catastrophe it once was. &gt; Learn about git-flow. These days it has as many detractors as proponents, and I don't actually know anyone who uses git-flow. If you learn git, you'll be prepared for whatever branching model you need to use.
Is the tableView pinned to the entire view? I had an issue with jitteriness whenever I only had it pinned to the bottom of the navigationController
its a web view thats added to the default view in the view controller. The ones with tableviews work fine.
I narrowed it down to this line in viewDidLoad(){} self.webView.load(URLRequest(url: URL(fileURLWithPath: Bundle.main.path(forResource: "info", ofType: "html")!))) I assume I need to have the web view loaded before displaying it, so I added it as a var in the tabViewController and loaded the page in the viewDidLoad of that and it seems to have cleared up.
NSCell is being deprecated, and there's only a couple places where it's still needed. Unless you are aiming for binary compatibility with legacy apps, that shouldn't be a concern. Bindings are tremendously useful, and while they're not used often, I don't see them as some kind of litmus test of terribleness. Again, it's not an inherent part of AppKit, and unless you're aiming for 100% legacy compatibility I don't see why it's relevant. The part that baffles me is how you plan to adapt UIKit to a mouse-and-windows environment. There's no real documentation or roadmap that I can find. Your demo is a single-window application that doesn't touch the responder chain, but that's not at all a representative desktop application. You may not like some parts of AppKit but it provides a ton of services that are absolutely necessary on the desktop.
That's rather fatalistic. They've already written and/or collected hundreds of thousands of lines of other frameworks in C. There's nothing revolutionary in CoreGraphics that couldn't be implemented with a wrapper over other common open-source graphics libraries. Every project ever undertaken could be described as "It's going to fail, unless they do more work in the future". That's practically the definition of an unfinished project.
Relax you’re not supposed to pick this stuff up that quick. Programming in general requires a different mindset and takes a lot of time to develop. Sometimes its better to tinker with the concepts you’ve learned in a video so create a separate app you can work on. Start small such as creating a view and getting it on screen and then go from there. It’s going to take time so don’t be to hard on yourself. 
I’m in the same position. I’m taking Angela Yu’s course on Udemy and although it went well to begin with I seemed to hit a bit of a brick wall. So I’ve just gone for Ray Wanderlich’s course which seems much more basic. Got think you won’t just pick it up, it’ll take time. Just invest the time. 
Thank you, I’ll definitely start on a small app and implementing what I do know on it. Definitely helps thank you, have a burrito! 🌯
Rome wasn’t built in a day, my friend. Keep at it, better your problem solving skills, and keep trying to implement what you learned each time you learn it. The best way for something to stick in your head is by doing it. Don’t just read and watch. Remembering exact syntax will come. I always kept a swift cheat sheet as a reference when i would forget the syntax to something i wanted to do, but the most important thing was knowing how to do it. 
Thank you! I haven’t started Ray’s course yet but it was next on my list. Will look into it, thanks and good luck to the both of us!
I've had some experience in sharing code, except I did it between iOS apps. If your code is relatively stable, check out Carthage. If it still changes, simply use git submodules. Works like a charm!
That sounds pretty cool, can you point me to the C frameworks they have reverse engineered? Im only pessimistic about it because I was excited about it a couple of years ago and I don't see them going anywhere and making significant progress. I Last I saw, it can only executable open source command line tools (like from MacPorts or HomeBrew), nothing that depends on MacOS API. 
Your suggestions are now integrated with the document. I have raised the threshold from 50 to 80 wpm, written about text editors, updated the git section. Thank you for valuable feedback. I use git-flow for team collaboration and for most of my solo projects.
Thanks! I guess I was starting to get a little demotivated and just needed a little push. Keeping a cheat sheet myself too! Definitely helpful.
&gt; News an updates? What?
I've been in your place. I started in August with Angela Yu's course on Udemy and did like half the course. I started to get bored to follow her and I said "I want to create something." so I started creating a spending tracker for students. (I needed a spending tracker with a simple UI but didn't find one.) so on October 3rd I started working on it. As I started working on the code I realised I don't remember almost anything so what I've done was to think about what I need and search on Stackoverflow how can I make that thing. One month later I learned A LOT of things. Pretty much you pick them up on the way, you need to build something but you don't know how, you search it, you learn it, you build it. This is the process that had success to me with learning stuff. It is normal to feel like you can't write useful code because you're like a baby taking his first steps. The courses are the parents who hold their baby so he can walk but as the baby grows (as you code more by yourself), it will learn to walk alone.
You seem to have a negative attitude here. You can write a Mac app that basically does whatever your programming skills allow. It is worth it for a number of reasons even if the app isnt extremely successful. 
My favourite Swift newsletters are the [Swift Weekly Brief](https://swiftweekly.github.io) from Jessie Squires and [This Week in Swift](https://swiftnews.curated.co) by Natasha the Robot. There's also the [Swift Unwrapped](https://itunes.apple.com/us/podcast/swift-unwrapped/id1209817203?mt=2) podcast you might like.
Good Luck! Think positive and be open to doing things different, especially when it comes to the user interface. 
That's what I'm talking about... Thank you, Sir. I'm all ears... any other recommendations will be welcome! 
The value in a native Mac app is hard to judge. However if the possibility is considered at the start of development for iOS much of the app can be made common between the two platforms. If the number of UI views is kept manageable the overhead to do a Mac app can be very low. Obviouy this is very app dependent but it can be relatively easy to support your Mac using customers with a native app. Some of us actually prefer to use the Mac over the iOS platform. Even with some of Apples native apps the Mac can be preferrable. Say you have a business card with data you want to enter into Contacts, the Mac is the place to do that. The thing here is that i may very well use Contacts or Notes far more on my iPhone but will highly prefer bulk data entry on the Mac. So even though the Mac app is used 10% of the time it can be significant in acceptance of an iOS app. 
Thank you. This really helps a lot. I do have an app idea in my head that I’m passionate about making but I always thought I needed to know EVERYTHING before I started working on it but that makes no sense So thanks for the advice. And good luck to the both of us! Let us know if you publish that app soon! 
I will let you know when I will publish it. Nooo, just start working on your app man, it's more fun this way than watching videos on Udemy. What you said translates into my head like you're trying to cook spaghetti but you won't cook spaghetti until you learn to cook all type of pastas which is wrong. The more you will code and the more ideas pop in your head you will learn a lot more, you won't even realize on what level you reached until you look back into your first codes and you'll be like "wtf, did I really just struggle on this shit it's ez as fuck". Just keep in mind that when it comes to programming, only sky is the limit so if the "I can't do this" idea pops in your head, no buddy, you can do it, you just don't know how, YET so better go and learn how to do that.
What does this mean?? I know that Fuchsia OS is an experimental Google OS, potentially an upgrade for Android. Does this mean that we would be able to use Swift to write Fuchsia OS apps??
The Swift Github repo is a pretty good spot too
It means that the team is at least interested in the idea of using Swift. 
Can’t wait until I write my Android apps in Swift and iOS apps in Kotlin
context is basically what your app is currently discussing with it's Coredata. Found this vid the other day which is helpful and does things a little differently than I have done in the past. But was spinning tires trying to get out of an issue and ran across it. [YouTube Link](https://www.youtube.com/watch?v=tP4OGvIRUC4)
If you have an iPad you can download Playgrounds.
Even if you don't end up using Swift, it is quite a good learning language. Certainly much better than Java, C# and C++ among the statically typed mainstream languages. Swift does work on multiple platforms however so it is useable many places. Of course the frequency of language use varies a lot with particular domains. My personal experience is that with Swift experience you are highly sought after in the job market because demand for iOS apps is quite high, but Universities don't teach it to the extent they teach Java. Hence getting Android developers is easy. Tactically speaking Swift might thus be better than Java, as the demand and supply curve is more in your favor. However if you intend to work more on server side software I'd recommend Go or Python. Not because Swift is unsuited for it, but because not as many companies use it for that purpose now.
I don't get what is horrible about it. If you are going to talk about horrible it ought to be compared to something. I'd claim AppKit is much better than Win32 and Java Swing. I use C++ with Qt at work and I'd much prefer AppKit over Qt, even if it is a pretty good GUI toolkit for C++. The problem is that doing a GUI toolkit in a non-dynamic language such as C++ doesn't work well. Which is why Qt essentially solved it by bolting on dynamic features through a moc compiler. A problem that had already been solved ages ago in Objective-C on NeXT.
Great, thanks!
He came out with iOS 11
Hi jwi46! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7e514d/looking_for_feedback_on_my_app/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Google adds* Fuchia support Google is a company. A company is an it, not a they. It adds. When it is worded the way you have it, it's like you are yelling at Google and telling them to add Fuchia support for Swift.
Thanks for that, I have started looking into the documentation, I am motivated than ever to start working on this :)
Thanks a ton :D, Yep I am ready to face these hiccups but would want to complete the development as we do believe a native Mac application can do pretty good for our business.
Wow, thanks for adding to the conversation!!!!!!!!!!!!!!!!!!!!!!
Literally what this dude does. I have him tagged as "Grammar Nazi". If you look at his history, it's how he spends a lot of time.
The initializer of `B` must initialize `B`-specific member variables, and not member variables `A`. But since an instance of `B` is an instance of `A`, it needs its inherited (from `A`) members to be initalized. This must be done through a call to an initializer of `A`. If `A` didn't define an initializer, and all of its members have static initializers (e.g. a member is defines as `let foo = "some staticially initialized value") the compiler will implicitly synthesize a paremeterless initializer. Otherwise, you would need to manually provide a parameterless initializer, which is what you have done. Now, Since `A` has a paremeterless initializer (whether its your explicit one, or a compiler-synthesized implicit one), `B.init()` will implicitly call `super.init()` (where super is `A`). Now, if you defined any initializers with parameters, didn't define a parameterless initializer, then the compiler won't synthesize one implicitly. As a result, `B.init()` will be unable to call `super.init()`, and you would have to manually make a call to one of the initializers of `A`, and provide the appropriate arguements to the parameters. For example: class A { let s: String init(s: String) { self.s = s } } class B: A { let i: Int init() { // super.init() not available because of the existence of A.init(s:) super.init(s: "A string I must explicitly provide") self.i = 123; } } 
And don't forget Flutter, it has been getting better and better over the past few months
Semantic nazi? Maybe? Idk. Just arguing semantics. Lol. 
Look at all these down votes. He's pointing out an error in order to improve OP's English in a polite and constructive way. He didn't call OP names or said anything remotely offensive. But obviously I'm wrong: I just don't understand how Reddit works
Your best bet might be to just download a macOS app written in the same lang (ObjC or Swift) and then use that as a guide. Desktop and mobile isn't going to be the same, but it's the same language and many APIs will probably be the same. https://www.raywenderlich.com/category/macos
Use a programming text editor. There are plenty of free ones depending on your computer’s operating system. 
Another beginner here. I started learning web dev in February and iOS dev in August (got too bored of web). Its been three months and I still can't really do or make much with iOS dev at all. However, I have started to adopt the "programmer's mindset," and it definitely takes a while to sink in. Repetition is key and be ready to learn by doing. Don't be afraid to use as many resources as you can, too. I've used Udacity, Treehouse, Angela Yu's course, Mark Price's course, and now I'm currently using Hacking with Swift (my favorite so far) and a little bit of Ray Wanderlich.
What does artwork refer to? Try to be specific when you post and use Apple's official terms. Are you talking about the App's icon? If so, yes they have to different sizes. You can download a mac app from the App Store that does it all for you. All you have to do is drop one image in and it formats them all to different sizes for you... but again, I don't know exactly what you're talking about. 
I assume you’re American. The rest of the world is perfectly fine with [treating collective nouns as plural](https://blog.oxforddictionaries.com/2011/09/05/agreement-over-collective-nouns/). If you’re unable to contribute positively to the conversation, the least you can do is not fuck up being a grammar Nazi. 
I support this content.
&gt; When it is worded the way you have it, it's like you are yelling at Google and telling them to add Fuchia support for Swift. No, a noun of direct address requires a comma.
Except it's not even an error.
Tokbox looks promising, but it’s a service with full backend and analytics. Free for the first 2000 minutes of video between users per month.
If you have access to a PC download Visual Studios. It now includes Swift and coding similar to Xcode. 
I’m in a similar boat. Bought Angela Yu’ course in Udemy and about 127 lectures in I’m finding some of the first things I’ve learned are hard to remember. But I can say that StackOverflow and GitHub will be invaluable to you. Sometimes when wanting to implement something in your app it’s handy to look on GitHub and see if someone’s already done it. You can import their code into your project and see how it works, then alter for your purpose. 
You might want to find a ready to go package or tutorial on graphic. There can be quite a bit involved to get everything right. You also might want to check into programs that automatically generate all the sizes you need. Depending on the application, some use graphic sheets to store all the sub graphics.
Working my on my app! This app helps you stay on the [Whole30 diet](https://whole30.com/whole30-program-rules/). I released it last month and have been fixing bugs and adding features since then. This is my first released iOS app after working on it for the better part of this year. You can download it [here](https://itunes.apple.com/us/app/tiger-blood-a-whole-30-app/id1275399940?mt=8).
I would strongly suggest going for 15" screen and 16GB RAM even if it means going for an older 2016 model.
Save the constraints you want to change at a later point somewhere. When you want to change it, do something like `yourHeightConstraint.constant = someNewValue`. You can do this for multiple constraints, of course. When you've updated all constraints that you want to change, call `yourView. layoutIfNeeded()`. This applies the changed constraints. If you want to animate the change, do the layout in an animation block: `UIView.animate(withDuration: 0.5, animations: { yourView.layoutIfNeeded() })`.
Have you read Apple's Core Data Programming Guide? It explains the whole framework. Core Data is one of those things where if you learn it in a half-assed way it will come back to bite you or whoever has to maintain the code you have written. It's one of those technologies where you have to swallow the elephant whole. Read the docs. Watch the WWDC videos. And remember to think in terms of object graphs not in terms of relational databases - even though you are probably going to be using SQLite as the storage mechanism... ¯\_(ツ)_/¯
I guess they want developer support for the new os. Hope we can get kotlin support as well (kotlin/native probably)
If you are looking to change global settings on the device, then you are in the wrong walled garden. I do not think what you are asking is possible using public APIs. 
The funniest thing about him being a grammar nazi is that he’s actually wrong, at least in this case. Using plural pronouns to refer to corporations and other groups is perfectly valid grammar. But going through his post history, it looks like he’s just generally a dick. 
I don't know if it's allowed, but you may want to [message the moderators](https://www.reddit.com/message/compose?to=%2Fr%2Fswift) to ask. It's a more direct route to the people who make those decisions.
If they do count me in, I was exactly looking for this type of course last week !
Thanks, that's a good idea!
It's an algorithms and data structures in Swift course.
Cool! I just sent you a message.
+1; it's valid (and perfectly good) British English.
I would look into profiles. I’m not sure if they can did exactly what you’re trying to do, but I think they are your best bet. If that doesn’t work, then maybe you could have a VPN that auto connects? VPNs let you configure DNS. 
I’d love to see one of these Apps that are *really* changing the DNS.
&gt; Fuchia Fuchsia*
Lemme translate. "Where can I get some of that juicy swift news and updates?"
&gt; But obviously I'm wrong: I just don't understand how Reddit works Or you don't understand how grammar works, perhaps both. aazav made an incorrect, off topic comment that added nothing to the discussion. That is precisely the kind of comment that downvotes were put into reddit for, even back in the early days before downvotes were used to signal disagreement.
OP, what are the apps you're referring to? If they're free I'll give them a try and confirm if they work (strongly suspect apps don't have the ability to change DNS though)
It's fairly easy to implement on your own server with a scripting language, but there's a bit more to it than just sending the push. You'll want server-side code to track push tokens linked to user accounts. This way you can send a push to a single user (or specific group of users). You'll also want to track errors returned if a push failed. This could be because the app has been reinstalled, the OS has been reinstalled, the phone is out of range, or something as simple as turning notifications off then on again (which invalidates the old push token). Even if sending blanket messages to all users you'll want to have the ability to take a token off the list so it doesn't get a notification the next time around. If it all looks like too much work there's always Amazon's Simple Notification Service (https://aws.amazon.com/sns/).
Thanks ! I will check out Amazon SNS.
Do you want the product to check with a server if the key is valid, or should it be entirely local?
Sorry, yes. Firebase back end. They will be using app to upload things from within store (pictures, etc.) possibly even replace point of sale. We're still in the idea phase at the moment, this being one of them. 
You could use public-key crypto to ensure that the data is coming from a registered copy.
You use iCloud key-value data for this. I have an app I locked to specific locations. Like a geofence. Not the same thing but I think I understand what you are after. If it’s for a small group of users, there are a few Apple sanctioned alternatives to putting it on iTunes for just anyone. 
Yeah. Even just being able to say, specifically, what each major git command actually does would be a good wisdom to demonstrate. A desktop git interface helps makes things clearer. I like Source Tree. Try making a git repository for a current project on Source Tree. Then make a public repository on Git Hub and connect it to the one on your computer. Play around with branches and commits on your local project, then see what it means to push those changes to the GitHub version. I dunno... this helped me when.
Interesting, thank you. I'll look into this. 
If nothing else, you benefit from knowing more about cryptography just on general principle.
Thanks so much! That did it
Last week: [Any good resources/tutorials on license generation/verification?](https://www.reddit.com/r/swift/comments/7d5e76/any_good_resourcestutorials_on_license/)
At least use Notepad++. Notepad can't be configured to produce Unix newline conventions, nor does it support UTF-8.
Visual stupid does swift?? Nice I didn’t know thanks
Haha of course. Thank you. 
Yeah I saw that too I also found ibm swift sandbox 
Never hurts to try and learn more. I'm game.
Thanks so much!
You're welcome!
Well, you have to call into JS to manipulate the DOM (for now), [but...](https://github.com/WebAssembly/binaryen)
Well, there's also Webassembly.
I’d love to read it! I’m a semi-beginner and the comp sci aspect is always my weak spot, despite being so important.
Cool, check your inbox.
None of them are free, but they seem to work based on the reviews. -Open DNS -DNs Override And they seem to create a VPN tunnel for only the DNS traffic.. ?
I think a VPN would be the direction based on some to the research. But I can't find any documentation on how to setup a DNS-only VPN.
I don't think you can do that. All the traffic that you want to use the DNS server would have to be routed through your VPN. It's not ideal, but...
Great, thanks!!
You're welcome! Hope you'll find the course useful.
Hmm sound's interesting feel free to send one here too :) 
Love to join, please send to me. Thanks!
That’s sounds great could I have a coupon thanks
I'd love a coupon. This is something I've been trying to work on currently!
Context is like your scratchpad - you can fetch or create objects inside, edit them, connect them and if you are happy with results you can save this scratchpad - then it goes into your persistent store (memory or sqlite database). 
I'd be interested, only just starting out in swift but this sounds good to me 👍🏼
Sounds interesting. I'm always down to expand my knowledge. Would love a coupon if one's still available. Thanks. 
Would love it. Thanks!
I too would like to get in on this! Thank you very much!
Would love a coupon. Thanks!
Would love to take the course and have a new take on algorithms
I’d like to check it out too! 
I would like to take advantage of this too, thanks!
Me too please! 
Why so complicated :( A simple thing like changing the DNS should not be that hard. &lt;/rant&gt; 
Yes please, if there’s any left 
Would appreciate one!
Please message me if you'd like a coupon.
There is talk of google forking swift tho. In ads for swift developers they specifically ask for people who are willing to learn a new language. Thought it was an interesting request.
Would appreciate one, if there are any left. 
I’m interested as well
An `Array&lt;T&gt;` holds instances if `T` is a value type (`enum`, `tuple`, `struct`), and holds references to instances of reference types (`class`). This is consistent with how variables would behave, for example. So if `Command` is a `class`, and you want to store all intermediate steps in a series of mutations, redux style, you will need to implement a way of cloning a `Command` object, C++-copy-constructor style, and do the duplication manually. As an alternative, you might be able to change `Command` to a `struct`, which has value semantics, and will be copied on assignment (allowing mutation of a copy).
That's it for now! Thanks for your interest!
I'll take one!
I try to post articles to https://www.hackingwithswift.com/articles once or twice a week. There's an RSS feed if you prefer that sort of thing: https://www.hackingwithswift.com/articles/rss
Programming is a lot like a muscle, the more you use it, the stronger it gets. I've been programming since 1986 and I've just recently started exploring Swift and iOS development. I get stuck a LOT. While the language is easy to use, there is just so much to learn about iOS, the libraries, etc
NEHotspotHelper is about as close as you’re going to get, it’s to manage captive WiFi networks.
Have created [stylesync](github.com/dylanslewis/stylesync) which exports Sketch styles to native code using templates. It takes advantage of Sketch’s incredible open file format, and it was my first Swift Package Manager project, which is great
Notepad can be used for anything I tell you.
Thank you very much! I heard good things about this website. I appreciate it!
Am I too late for the coupon yumminess?
Replying to myself. It seems the new DNSProxy: NEDNSProxyProvider Would do what I am looking for. Have anyone used it before?
At this point how comfortable were you with programming? While I do agree your approach I find it very difficult to understand what I even has to search for? It's the case of not knowing what you don't know. 
Well I already had the basics of programming. I am 19 but I started getting involved into Java since I was 16, worked with frameworks and JSON, API already when I worked with Java but since 16-17 I barely programmed anything, I was only programming in high-school classes with Pascal which does nothing practical but keeps the basics fresh, like if else statements, repetitive structures etc. What I will tell you now, I don’t know if it applies to other programmers, good programmers or it’s just me. Programming to me feels like building Lego. You want to build a house, right? This is the final product you’re aiming at. But a house it’s made off different things. You have walls, windows, doors, roof. So instead of searching “How can I build a lego house”, which will give you thousands of already built lego houses which do not match your idea of house, you can search: How can I build a lego wall? How can I build a lego window? How can I build a lego roof? You adapt those to your idea of walls,windows, roofs and you assemble pieces together, resulting in the lego house that you were aiming for. What I am trying to say is that if you have a large problem, try and break it into multiple smaller problems, thus solving the larger problem. This concept helped me a lot. 
Just look at things around you and you will notice that they are made from multiple smaller things, like I have a bottle of water in front of me. But a bottle of water is the product of combining - plastic bottle - the label - the cap - the actual water —- To find out what you dont know you need to practice a lot, if you dont have any ideas of apps just clone the already existing ones for practical purposes, clone the whatsapp, the snapchat, make a pedometer, clone the instagram (the creation of the original instagram took like 1 month), make a tic tac toe, just code, and this is how you will meet up with things on the way like networking, coredata etc I didnt know about the existance of CoreData until I wanted to save the expenses in the database (about the spending tracker ive spoken earlier), i just searched “how can I save data when user quits the app” and i found out about CoreData and I started to practice with it too, so the answer is to code as much as possible
Do the notification times vary depending on anything, or would it be the same time for all users? If the latter, definitely try out SNS but also check out setting up a [CloudWatch Event](http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/WhatIsCloudWatchEvents.html) which lets you schedule an action, such as triggering an SNS notification, at certain intervals. Also, just a heads up that silent notification deliveries are not always guaranteed and may be throttled in certain conditions [per the documentation here](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CreatingtheNotificationPayload.html#//apple_ref/doc/uid/TP40008194-CH10-SW8).
Yeah, they are called trait variations. This probably isn't the answer you want, however you might find it easier to setup constraints in your Swift code, and check if the width and height of the screen are compact / regular, effectively doing the same thing as what size classes did. However, if storyboards work best for you, this tutorial is great: [https://www.raywenderlich.com/162311/adaptive-layout-tutorial-ios-11-getting-started](https://www.raywenderlich.com/162311/adaptive-layout-tutorial-ios-11-getting-started)
I’d be interested!
Dont use user defaults heavily! Few months ago our app freezed iphones and make it unusable till restart
Swift 2?
Thank you for a detailed explanation on how you got to piece your app together. More importantly the mindset around being a developer. I'm a Product Designer so at the moment I'm trying to understand Swift so that I can put together the little lego blocks you were talking about. Very inspiring. Thanks again! 
The notifications time differ. The app is an clock alarm that triggers an alarm when the user desires. The app works with a ble device that should turn on at the time of the event. I'm using silent notifications to wake up the app in order to wake up the ble device :)
Always looking to learn, count me in.
This would be fantastic, thank you!
If there aren't imported definitions, did you actually make headers public in your module?
How does that work with system modules? Where/how would I be making the headers public?
Last couple of coupons! PM me only if you're really interested in Swift algorithms and data structures.
[removed]
I'm not using Swift Package Manager yet, but managing through Xcode, so let me try to understand what you're doing. - You have ncurses installed through homebrew, for which you've written a map.modulemap file, which you can them import. - Your library, then imports Cncurses? And this library is where you write your wrapper? Is everything good at this point? You are able to use Cncurses symbols in _this_ library, or not? Or... - Your library is working, but your application cannot access symbols in your wrapper library? Can it access some or all of the symbols? If you're only missing some of the symbols, are they ncurses symbols, or your Cncurses symbols? You may have to import _both_ libraries if you're not re-exported symbols in Cncurses. Make sure that your map.modulemap files are exporting all of the correct headers. Your wrapper doesn't share Cncurses symbols to your program automatically; you could create another modulemap with just the headers you need (and import that into your command line tool), or you can typealias the Cncurses symbols in your wrapper library to make them available to your program, e.g., `public typealias MySymbol = Cncurses.MySymbol`; if you have a lot of symbols, that can be a PITA, though. 
That was very helpful. Thank you.
At the moment I have Cncurses which I am importing into my wrapper library (I don’t have an application package yet, just trying to refer to ncurses types inside that wrapper library). Cncurses is successfully imported but if I try to use any symbols I get an error saying they are undefined.
At the moment I have Cncurses which I am importing into my wrapper library (I don’t have an application package yet, just trying to refer to ncurses types inside that wrapper library). Cncurses is successfully imported but if I try to use any symbols I get an error saying they are undefined.
2 weeks is nothing, learning to code is a marathon not a sprint. Here's what will happen: -You'll start remembering more and more of the language, meaning you can write code faster. -You'll start to see repeating patterns of things and realize "Hey, I've done this before..." -You'll be able to look at problems and break them down into chunks. You may not know all the chunks, but you'll know some of them and how to solve them. Step two and three will occur over and over and each time you'll realize you know how to solve for more chunks. You WILL get overwhelmed going the straight tutorial route. You need to take a break to reinforce what you learned. You also have to practice being resourceful. No one remembers everything in software development, its impossible, but once you know the basics you'll have an easier time being resourceful. Since you said you have hacking with Swift I assume you displayed a UIImage before. As an exercise, see if you can write a program just to display a UIImage on your own without looking. Have you forgotten how to do that? If so, don't fret, you know UIImage exists so you can google the Apple docs for [UIImage](https://developer.apple.com/documentation/uikit/uiimage). Scrolling through that document shows you this [method](https://developer.apple.com/documentation/uikit/uiimage/1624112-init). You can then put that method in your application to display your image. Now, you may mentally consider that "cheating" but it's not so, its exactly how real world development works. You know things exist, or think they may exist, so you scour the docs and internet to see if they do and implement them in your code. 
&gt; thought I needed to know EVERYTHING before I started working on it Nooooo don't fall into that trap! Break your app into small chunks, solve for each chunk, even put them in their own app. If your app loads images and then uploads them to a server, try breaking it into two apps. Make an app that loads images, then make an app that uploads data to a server. Make a third app to combine the two. You will learn so much more from breaking your projects down into little chunks and have the added benefit of referencing those little independent chunks for future projects. 
This is how I currently am with C++. I haven't used it heavily in a long time and now I discovered that the Boost libraries are apparently part of the core language now, this.delete is a horrid thing to do and we should all use "smart pointers" now, and all kinds of other craziness! I swear I've been googling after every 40 lines of code. 
`var` creates a variable, `let` creates a constant. The array must be `var` because you are attempting to mutate it.
So it doesn't recreate the array each time a cell changes, and it's O(n)?
I believe they did away with the general square layout for storyboards starting with Xcode 8 (in fact i think it only ever existed in Xcode 7)
Correct. You may be thinking of copy on write, but that’s not the case here.
what's copy on right?
For third-party apps, it should be. 99.999% of the time, it's not what the user wants, and provides a really easy way to break everything. I don't want to let Facebook intercept all my DNS requests, just because I've installed their app. 
If you added: var listB = list and then went through your loop, listB would contain a copy of the original list.
What does your `module.modulemap` look like for Cncurses? It should have a `header "blahblahblah.h"` for every curses public header that has the symbols you need to access. Or, it might refer to a single umbrella header that `#import "blah.h"` the curses headers. Both work. Did you create the module in Xcode (I can help) or using Swift Package Manager (I have no experience, but maybe can help)? 
Theres not a lot of code/details to go on so here's a guess. `self.imageLayer.frame` is being implicitly animated `self.maskLayer.path` [does not support implicit animations](https://developer.apple.com/documentation/quartzcore/cashapelayer/1521904-path) The split second you're seeing is when the frame is animating the update but the mask is already the new size. You'll either need to disable the animation on the frame or create an animation on the mask that matches.
Agree with this. From my limited experience with Swift, an array - being of type ‘Struct’ - would be duplicated when assigning to another variable or when passed through as a parameter (argument). But, when modifying an existing array, you are simply doing just that - modifying the array. No duplication should occur.
Perfect! Thank you. Disabling works.
You think? A lot of people tries to change their DNS to Google (8.8.8.8), Open DNS and others (including our service) for better performance or security. I agree that we don't want any apps hijacking the DNS, but we don't want to make it impossible for the user to change as well. 
Merely modifying the array's content does *not* trigger a copy, *in this instance*, because the array is uniquely referenced. I.e. There is no `list2` which shares the same memory containing `[1, 2, 3, 4, 5]`. In this case, a mutation to `list` would necessarily require a copy, so that its changes don't also effect `list2`. This code has `O(list.count)` time and space complexity. However, it would be better written using `list.indicies`, to avoid the *really* common typo `0...list.count` (which causes an index-out-of-range crash): for i in list.indices { list[i] += 1 } or better yet: list = list.map{ $0 + 1 }
This is what my Cncurses package looks like: Package.swift: import PackageDescription let package = Package( name: "Cncurses", pkgConfig: "ncurses" ) module.modulemap: module Cncurses [system] { link "ncurses" export * }
&gt; what’s copy on right? Did you mean left? Or write?
Conceptually it’s duplicated when passing it as an argument. It actuality, it isn’t, unless the called function modifies it. 
I hesitated because there are many right answers. You’re not going to build anything close to “real” system with what I’m about to suggest but it will fit your current needs and most importantly be simple. Since you’re all iOS, I’d use CloudKit. A full fledged backend is going to be orders of magnitude more work. You get most of that work plus iOS bindings for free with CloudKit. This is going to be fine for what you described, it certainly wouldn’t work for a Walmart. You’re probably good for 5 or less stores depending on how often you update. https://developer.apple.com/documentation/cloudkit
Swiftly Curated https://swiftly.curated.co
Thank you!! This looks like it will be very helpful 
Thanks for the clarification, cryo!
This is great, thank you! I'm just starting to learn swift and am nowhere near ready to get a job as an iOS Developer, but once that day comes, something like this would be very helpful!
This article makes me want to stop developing right now. 
Why
Break down the problem into independent decoupled questions. You’ll probably have more luck getting a hand. 
Was reminded of how many undocumented nightmares I’ve had to overcome. And this one gave me PTSD
[removed]
All right. I'll put a little summary with specific questions.
I would recommend using a REST API. If you don’t want to learn how to configure a web server I would recommend Firebase. If you have nothing against Java I would start with Spring.io and learn about JSON objects. Swift has a Codeable protocol for structs and classes which makes converting from JSON to swift objects seemless. [Alamofire](https://github.com/Alamofire/Alamofire) can connect to your REST API to get back JSON.
Link to doc that describes this?
Right so I have seen a lot of stuff saying that a REST API is the easiest and safest way to connect to a MySQL database. The problem is I don't know how to do this. I have the database configured and everything, but I know nothing about a REST API or any PHP. I also came across this [Siesta](https://github.com/bustoutsolutions/siesta) framework and it seems promising but I don't know where to start with it. I have the database hosted locally using XAMPP and I have it set up the way I want it and it is accessible remotely through my phone, but just not without going through phpmyadmin. Anyway, what exactly would I need to do to just get what I have already available for an app to communicate with?
Hey! Just wanted to let you know about this udemy course that may (or may not) be useful/interesting to you? https://www.udemy.com/swift-php-mysql-html/ Here are some other information that may help you get started as well: http://mrgott.com/swift-programing/33-rest-api-in-swift-4-using-urlsession-and-jsondecode https://devdactic.com/rest-api-parse-json-swift/ https://grokswift.com/simple-rest-with-swift/ Fyi I'm not the instructor for that udemy course, nor am I related to these websites I just linked. Just found them via google.
Hey thanks. I had actually come across that Udemy course a couple times, but decided against it because it doesn't say it's been updated for Swift 4 and I'm not so sure I need to spend money for learning this very common part. The other links seem very interesting and I will definitely give them a read after dinner!
I went through most of the same crap a few weeks ago. It's horrible. And testing is hard because force quitting an app will sometimes halt notifications from being received. 
Okay, I'm not familiar with Swift Package Manager, but if I were creating a module manually, then the `link "ncurses"` would look suspicious to me. Clang's [documentation](https://clang.llvm.org/docs/Modules.html#link-declaration) says, "A link-declaration specifies a library or framework against which a program should be linked if the enclosing module is imported in any translation unit in that program." I would expect instead to see something like this `header "some-header.h"` in place of the `link` directive. Let me do a quick ncurses install via brew… Okay, the first thing I see is LDFLAGS: -L/usr/local/opt/ncurses/lib CPPFLAGS: -I/usr/local/opt/ncurses/include Good, you'll need the first one in Xcode (LD_RUNPATH_SEARCH_PATHS) so it knows where the library is, assuming dynamic linking, or you can drag a dylib into your bundle and dynamic link there (or static link) -- but those are next steps to tackle, _after_ your symbols are recognized. But importantly, we know the headers are in `/usr/local/opt/ncurses/include/`, which is what I would expect your module.modulemap to reference (generally in the top level of that directory, but not the files in the `ncursesw` subdirectory. So because there's no macOS library or framework for `link` to work to, I would try to use `header` instead on the six headers that are in the `include` directory. You might have to specify the full path to them, or not. If I have some time tomorrow, I might try to experiment, but I think I'm giving you something to start experimenting with. Good luck! 
I am totally interested in remote jobs but be warned that I'm over 50s and living in Venezuela, so if that's not a barrier then let's talk.
1. The best way is by using an API since the DB is remote I guess and consume JSON on the client. 2. You don't. You just talk to and endpoint (url) and the server does the processing for you in any language you wish, like php, python, even swift, returnning JSON (or yaml, protobuff, etc). 3. Nothing, the less frameworks the better, just do the basic php pdo dance to get mysql data and the URLSession dance in Swift for request/response. 4. TableView is unavoidable if you're going to deal with data, specially for showing lists of items from where the user will select/update/create/delete (crud). HTH.
https://medium.com/tag/swift/latest
"The requirements in a generic where clause specify that a type parameter inherits from a class or conforms to a protocol or protocol composition. Although the generic where clause provides syntactic sugar for expressing simple constraints on type parameters (for instance, &lt;T: Comparable&gt; is equivalent to &lt;T&gt; where T: Comparable and so on), you can use it to provide more complex constraints on type parameters and their associated types. For instance, you can constrain the associated types of type parameters to conform to protocols. For example, &lt;S: Sequence&gt; where S.Iterator.Element: Equatable specifies that S conforms to the Sequence protocol and that the associated type S.Iterator.Element conforms to the Equatable protocol. This constraint ensures that each element of the sequence is equatable." - https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GenericParametersAndArguments.html#//apple_ref/doc/uid/TP40014097-CH37-ID407
So for your example, I would stick with struct Bag&lt;Element: Hashable&gt; -- Since your not really using the where clause to its full potential. 
So as for sending the requests to the server, should I allow raw SQL statements or just code each individual command using a button? (Such as INSERT INTO, UPDATE, DROP, etc.)
Me and a number of others are doing the RayW udemy course and it's fully updated to iOS 11 and Swift 4. It also comes a huge bonus package. I also bought 3 others at the same time..
I saw in the source of Swift Collection, it uniformly uses the “where” style. This makes me wonder if this is Apple’s preferences?
Which course is it?
https://www.udemy.com/ios-and-swift-for-beginners-200-hands-on-tutorials/learn/v4/overview I think that link will get you there, otherwise search for "udemy ios and swift for beginners" Here's another of the 4 I got... 1 was on sale if you bought a 2pack. https://www.udemy.com/devslopes-ios11/learn/v4/overview I posted a few hints on things that tripped me up. We should have an iOS tutorial subreddit to share our work.
Never send SQL commands to the server, just actions and data, and the server process your requests and sends you data back. So, lets do a quick overview: GET example.com/api/customers will get you a list of customers POST example.com/api/customer/ {name: 'Taylor Swift'} will add a new customer to your DB DELETE example.com/api/customer/12345 will remove that customer based on the ID provided GET example.com/api/get-latest-invoices will return a list of invoices And so on. So design you API to handle all requests/responses by executing actions on the server and returning data on demand, occasionally posting data to the server in order to update records.
Okay, cool. So it looks like I'll have to learn how to make my own REST API. Thanks!
On the client: Button 'List Customers' onClick: URLSession.data('example.com/api/customers'){ //you get JSON here, parse it and show items in TableView } On the server programs are small, just connection, query, json serialization and output. &lt;?php $conn = PDO-&gt;Connect($db,$user,$pass); $result = $conn-&gt;query('select * from customers'); $json = JSON-&gt;serialize($result); echo $json; ?&gt; This isn't working code just a quick prototype so check the docs.
Ah ok, yeah it sounds making a small API would be a good way to achieve what you want. No idea what languages or technologies you're familiar with, but you could easily get started with a Rails API and host it on either Heroku or AWS. For my app, I use Rails for the API, AWS ElasticBeanstalk for hosting, and the [Houston gem](https://github.com/nomad/houston) for sending push notifications. Off the top of my head, a general overview of what you could do is: * Create an endpoint that your app will talk to which would store the desired push time * Use a scheduled cron job or background worker that would run at a certain interval to check stored times and see what needs to pushed * If any matches are found, send the push notification You'll also need to store your users' device tokens to know which device to send the notifications to. You could have your app trigger a call to another API endpoint to save the token when the user enables push notifications in your app. Hope that help!
Awesome -- congratulations!
Working on a trucking app for a client that's partially in Swift but mostly in Objective-C.
I still have no idea how you write and do so much. Seriously great work, Paul.
I hope "stupid" was an autocorrect error, but either way this is funny. :)
The more I thought about it, if i were to have lots of Wheres everywhere else, that were complex, with one or two simple ones, I would keep them all the same in that case. 
Lmao yeah it is
From the sound of I️t, you’re just grabbing PHP scripts from online to connect street to the DB. If you know JS, you could easily find a node MySQL driver and build a REST API somewhat quickly. 
If you are looking for an opinion, I favour clarity of intent over most other concerns. `struct Bag&lt;Element: Hashable&gt;` is less visual noise to process than `struct Bag&lt;Element&gt; where Element: Hashable`, so your intent is clearer. I'd stick to the `where` clause only when its use clarifies intent over the compact form.
I was trying to first just see if they would work since many of them have a demo or sample. I would try to set it up on my computer to see if it was really that easy. I also don’t know JS, so I’m out of luck on that. Tomorrow I will start learning, I guess.
Okay great! Thanks again
so like a staging before you commit your actions?
Xcode is big, and complicated, and old, and it creaks in places, and it's got a major case of creeping featuritis, but I just flat don't like C# as a language. 
I’d stick to Xcode. Directly supported by Apple, fewer layers of possible bugs, and Swift is a better language IMO. You’ll find a lot more support from question sites and apples documentation by sticking first party.
I think most people on this Swift subreddit are going to be in favor of Swift &amp; Xcode
There's no reason to use Xamarin unless you already have a significant investment in C# code you're looking to reuse or are otherwise looking to create a C# codebase to share across platforms. 
Look into `convert(CGPoint, to: UIView?)`.
No one has really stated the reason Xamarin exists and that is you can create cross platform apps I.e. deploy to iOS and Android at the same time 
Swift and Xcode will have a lot more resources to refer to when you run into an issue. Start with Swift, and if you feel comfortable enough you could try dealing with Xamarin. Expect it to be a little behind Xcode on up to date releases, and bugs are bound to be Xamarin specific, especially with their Storyboards.
Xamarin is owned by Microsoft and is a cross platform tool. I installed it and read about it last year. What I understand is that you have one common set of code and then two branches of code for each platform. You might want to look at Swift and Kotlin. There's all kinds of options out there for mobile dev. Some are big on HTML5 "web apps" others want native, others want cross platform, others are scripting RN/JS.... I didn't like what little I saw of Xamarin, it doesn't seem to be popular and I didn't see a big need for it.
Published: https://itunes.apple.com/ro/app/studget/id1311592581?mt=8 It's not a very complex app but it's my work for 1 month and half as a total noob.
It’s a good strategy to use the proposed lazy collections if you are combining map, filter functions a couple of times. Maybe it’s too much for small data sets, but if you’re trying to get better performance on bigger data sets, you should consider reading this
Xcode is Objective-C and Swift.
It's in the AVFoundation documentation.
I think Xamarin is great, its aim (not including Xamarin Forms, which sucks). Is to be able to share business logic across both platforms , but have to have two different projects for UI. All written in c#, which is a great lang. But it's important to have a strong background in the Native platform before using it or you're just going to end up lost.
Use func location(in view: UIView?) -&gt; CGPoint Pass nil to get the touch location in the window’s coordinates. See https://developer.apple.com/documentation/uikit/uitouch/1618116-location
...in theory Source: we have xamarin projects, those people are devastated.
I only use the where clause if I want to constrain the &lt;T: SomeType&gt; further ex: where T.SomeTypeAlias: SomeOtherType
Good stuff, I didn’t even know `.lazy` was a thing
&gt; NOTE: The description above refers to the “copying” of strings, arrays, and dictionaries. The behavior you see in your code will always be as if a copy took place. However, Swift only performs an actual copy behind the scenes when it is absolutely necessary to do so. Swift manages all value copying to ensure optimal performance, and you should not avoid assignment to try to preempt this optimization. - [The Swift Programming Language: Classes and Structures](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html)
Awesome, great advice! I’m still pushing through. Loving hackingwithswift and Ray’s course together. Still got a long way to go but I’ll keep pushing through. Thank you for the help!
So true about repetition 👍🏻 keep going! I’ve realized that I love Ray’s course the most as well as hacking with swift. I might go back to Mark Price’s course eventually but it got the point where I was being taught things that I didn’t want to learn at the moment (terminal on macOS, github, etc.) Heard a lot of good things about Angela Yu’s course. Will have to check it out thank you!
You havent stated your location...
I didn’t put it in because I didn’t want to limit myself to just face to face mentor, I’m open to a virtual one as well. I’m based in Dallas though.
Nice!!!
I think you'll have more luck starting a beginner's group and helping each other. I have tons of junior devs I have to mentor at my full time job. It's one of the most challenging responsibilities of being a senior dev. Unless you were a close friend or relative I can't imagine anyone wants to do that on the side for free. 
I prefer Xcode and Swift but if you do want to look at something cross platform, take a look at React Native. It allows you to write apps in Javascript/React concepts for both iOS and Android with minimal interaction with native code. Also, Facebook has essentially written Javascript wrappers around the iOS SDK so even though you are writing Javascript, you are still using TextViews, UIViews, etc. to display things on the screen.
Great, thank you!
Exactly! 😁
“At the same time” is what had been the crux. Nothing beats native. Things take time because it takes time to make good software. If you don’t really care then just make a website.
And C and C++ and...
The thing is if uou’re writing the Ui’s natively you’re going to have to know everything about both platforms and if you do then it will just be easier to do 2 apps. If you have important shared business logic then write it in c or c++.
Please read Clean Code. At least the first chapter until error management. This by itself will improve your code quality by a lot. Trust me on this. Or trust the whole programming community for which this book is considered the Bible of coding
I could be open to doing some virtual mentoring depending on the frequency and what that would entail. Shoot me a DM and we can talk more 
Great advice, thanks!
Considering they have not entirely migrated to Swift for client-side apps, I wouldn't be expecting this any time soon.
I'm so used to being advertised a bunch of cocoapods here that I was looking for a "LazyCollection" pod to check how it was implemented. I didn't know about lazy, but I'll definitely look for places I could use it in my code.
Thanks, Josh! Just wait until I announce my new products and Black Friday sales in about… ooh… seven hours ;)
Yeah, but more than that. You have to tie context into a thread - be it main thread (where UI stuff must be happening) or background threads (were you can do something which needs some time or be asynchronous - like downloading data from the internet). You should check NSPersistentContainer from Apple docs - it's a "new approach" for managing core data, where you have read-only main thread context (UI stuff) and background contexts for saving stuff (e.g. from the internet). It simplifies a lot of things and is easy to learn.
Pretty cool. Was unaware of .lazy, but after I look over it some, I'll definitely consider using this for operations similar.
Hey. Maybe you'll be interested in some kind of collaboration? I'm a beginner/inermediate and when I'm creating apps what I think is missing in my learning process is other people. We could help each other and stuff.
That sounds great. I’ll DM you
I didn't really appreciate associated types until I tried to learn C#. The only thing worse than their lack is the inability to add static requirements to interfaces.
The language being open source. The implementation should be on Github, I imagine in stdlib 
Right. I meant I wanted to see if it was a terrible looking hack some something worth while to include (I've been trying to keep the number of pods as low as possible).
It really depends on what your position is. For instance, when I was working for large companies, a 9-5 or 10-6 schedule was pretty normal. Now, I'm the sole tech guy at a startup, so 12-16 hour days aren't uncommon. I tend to work way less the day after a long day like that though, so maybe it balances out?
I'll second this, definitely depends on the company culture. As a young person who despises the thought of spending 12+ hours at my desk you'll have no problem finding "9-5" app development roles out there. Obviously you'll have the occasional crunch time, but what field doesn't?
I code for my own amusement and education, and for the esteem of the users of my app, so I just sort of code when I feel like it, which is usually one to three hours in any given day.
I am at the office between 40-50 hours a week, but that’s not the whole picture. Most devs tend to log in from home and put in a few late night hours here and there. There’s also a constant need to stay on top of the changes in technology. All in all, encompassing everything rated to work and skills development, I’d say I devote 60+ hours a week to it. That’s pretty typical in my circles. It’s rarely 12 hours in a row sitting at a desk but during crunch times those do happen, weekend work too. I even worked Christmas day once, good times.
Assembler, don’t forget Assembler!
thats interesting, do you work a non tech job then? how are your skills coming along?
I'm between tech gigs at the moment, but I code to keep my skills up. I just rewrote the graphics rendering code in my app from scratch because I learned a better way, for example.
9.1.0 is actually pretty good. It’s been a hit or miss shit storm ever since Xcode 4, but 9.1 is the first one in a long time I’ve considered good. That said, most IDEs are horrific. The only other current IDE I like is Visual Code, which amazes me because everything else MS puts out is a complete UX hell hole.
Yeap, same here. Lazy collections are really cool and it’s kinda hidden gem
If you're making corporate apps,xamarin all the way. One codebase is easier to manage than trying to recreate iOS on Android or vice versa. React native is supposedly the new hotness but I really don't like JavaScript so haven't tried it out yet Actual Native Swift is still the king for iOS if you're a small team &lt;15 people ie
Hey! I'm not sure if i'm understanding your problem completely, but here are a few tips. 1) Don't bang things with (!) in swift. This is a bad paradigm to follow, they are optional, which means the result can be nil (empty/not defined). Use this to your advantage. 2) Be more expressive with your function naming, the function named "textField" doesn't do anything with textfields. 3) Your textfield code as written will only work for two cases, unless this is what you hoped for, you'll need to write cases for the rest of the infinite number of options you user could insert. Other than that you are doing really well. There are a number of ways to solve this tricky problem. Perhaps this might help: https://i.imgur.com/5ZNYwNb.png 
Thank you! I know it may look rough, I'm just trying to get the functionality going and I'll clean it up in the long run. English version of my problem: user inputs a string, if the number is not a fraction, store as a decimal. if the input is a fraction, do maths, store as decimal. 
I'm actually going to play around with your suggested code, see if I can make it work! thanks for a reference!
40 Hours a week mostly. But less in Office, because of the possibility to work in the train commuting or working from home. Real work time 6 hours a day the rest are meetings, getting coffee, surfing reddit, playing table tennis. Yeah it’s pretty cool. 
Typically ~40 hour weeks unless I screw up pretty badly or get distracted by a really interesting problem. I have repetitive stress injuries though, so not over-working is really not optional if I want to continue being able to use my arms.
SHE LIVES! /dance
Yea I'm glad you posted it! :)
hmm so split at "/" in the input string. everything before "/" is the numerator, everything after is the denominator (if there's no "/", set the denominator to 1). convert either from string to double, divide, done. something like: import Foundation func convertFractionString(_ string:String) -&gt; Double? { // split string into components by "/" let components = string.components(separatedBy:["/"]) // sanity check if (components.count == 0) || (components.count &gt; 2) { return nil } // convert to optional doubles let numerator = Double(components[0].trimmingCharacters(in: .whitespaces)) let denominator = (components.count &gt; 1) ? Double(components[1].trimmingCharacters(in: .whitespaces)) : 1.0 // make sure the conversion was successful if (numerator == nil) || (denominator == nil) { return nil } // do the math return numerator! / denominator! } Caution: didn't actually run this through a compiler, but it should do the right thing.
Fuck yeah, x86 AND ppc!
40h/week is the usual in a established company that works in its own product. Some intensive projects, then some time to recover and/or refactor. Then, in my case I have a couple of apps. The usual would be to have periods of couple of weeks, up to a month, where I would spend 2-3 extra hours, and a lot more over the weekend, to get some new features, then disconnect for a month. Feels good to have something of your own on the store. 
For sure. Just curious if one day they’ll start investing in that. 
Thanks, I was playing with it but still without success. This is the sort of errors I get: #import "/usr/local/opt/ncurses/include/ncurses.h" ^ /usr/local/opt/ncurses/include/ncurses.h:60:10: error: 'ncursesw/ncurses_dll.h' file not found with &lt;angled&gt; include; use "quotes" instead #include &lt;ncursesw/ncurses_dll.h&gt; ^ &lt;module-includes&gt;:1:9: note: in file included from &lt;module-includes&gt;:1: #import "/usr/local/opt/ncurses/include/ncurses.h" ^ /usr/local/opt/ncurses/include/ncurses.h:674:45: error: conflicting types for 'keyname' extern NCURSES_EXPORT(NCURSES_CONST char *) keyname (int); /* implemented */ ^ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/curses.h:598:45: note: previous declaration is here extern NCURSES_EXPORT(NCURSES_CONST char *) keyname (int); /* implemented */ ^ &lt;module-includes&gt;:1:9: note: in file included from &lt;module-includes&gt;:1: #import "/usr/local/opt/ncurses/include/ncurses.h" ^ /usr/local/opt/ncurses/include/ncurses.h:704:28: error: conflicting types for 'mvscanw' extern NCURSES_EXPORT(int) mvscanw (int,int, NCURSES_CONST char *,...) /* implemented */ ^ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/curses.h:628:28: note: previous declaration is here extern NCURSES_EXPORT(int) mvscanw (int,int, NCURSES_CONST char *,...) /* implemented */ ^ &lt;module-includes&gt;:1:9: note: in file included from &lt;module-includes&gt;:1: #import "/usr/local/opt/ncurses/include/ncurses.h" ^ /usr/local/opt/ncurses/include/ncurses.h:729:28: error: conflicting types for 'mvwscanw' extern NCURSES_EXPORT(int) mvwscanw (WINDOW *,int,int, NCURSES_CONST char *,...) /* implemented */ ^ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/curses.h:653:28: note: previous declaration is here extern NCURSES_EXPORT(int) mvwscanw (WINDOW *,int,int, NCURSES_CONST char *,...) /* implemented */ ^ &lt;module-includes&gt;:1:9: note: in file included from &lt;module-includes&gt;:1: #import "/usr/local/opt/ncurses/include/ncurses.h" ^ /usr/local/opt/ncurses/include/ncurses.h:734:33: error: conflicting types for 'newterm' extern NCURSES_EXPORT(SCREEN *) newterm (NCURSES_CONST char *,FILE *,FILE *); /* implemented */ (...)
Which language you learn doesn't matter much. Learn a common language and learn it very well. Choose a language that is common for whatever interests you most: 1. Android: Java or Kotlin 2. iOS: Swift 3. Front-end development: TypeScript or JavaScript 4. Servers: NodeJS, Python, Go, PHP, Kotlin, C# 5. Data: Python 6. Windows: C# If your goal is to be hireable, learn ONE of these languages as well as you can. Many concepts are transferable across languages. Good luck! :)
In general, the bigger the company the closer to 9-5 you will work. The smaller the company the closer to 9-9 you will work. 
Thank you! Great help! 
Make it so I can just stand on my dumb scale and point my camera down to detect my weight. So I don’t have to buy a smart scale
I work in an insurance company (iOS dev) 35 hours a week. I end up working 40 and taking the extra time in flex days. That’s for work.
Sorry, I can’t help you, I only came here for the large titties. Then I realized my mistake :(
DM yourself?
I can confirm, having interacted with her, that Erica Sadun knows what she's talking about.
Yeah! Erica is a real star.
[removed]
Sorry I couldn't look into it myself... keep playing with it. I won't be able to help until the end of my holiday weekend (happy Thanksgiving, whereever you happen to be!). Try to import only the header that has the symbols you need. You'll get to it. You'll be frustrated! (I'm constantly frustrated, Obj-C is perfect, but whatever). 
This is completely the wrong way to do this. Rethink your approach. Hint: get the text content of the field (why not a label?), check for a "/" character. In that case, trim all the spaces in it. Convert your resulting string to an array using "/" as the delimiter. There is a method for this. Check the length of your array. If it is &gt; 2, you have an issue. What you are left with are 2 elements, the numerator and denominator as strings in the array. Get the numerical value of each and you know what to do. If you EVER see yourself resorting to massive if or switch/case statements to handle a problem, take a hard look at how you are solving the problem, because you are most certainly doing it wrong. FYI, I just outlined everything you need to do to address your problem.
Another approach you could experiment with: let expressionString = "5/5" let exp = NSExpression(format: expressionString) print(exp.expressionValue(with: nil, context: nil) as? Double) With whatever route you decide to go, make sure you are checking for zero in the denominator!
Make a UITableHeaderFooterView subclass and put the buttons there. Then use that in your `override func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -&gt; UIView` method. 
This was deprecated in Swift 3.
Variable++ or ++variable don’t work anymore you have to do variable += 1 exactly like that. Swift really wants your code to follow a standard so even just doing “ variable +=1” will throw an error. Same thing with if statements 
Does anyone have experiences with the Hacking with Swift books/videos or the Swift Kickstart book?
To answer your actual question, ++x and x++ are essentially the same, and this harkens back to C, probably earlier? Both add 1 to the variable x. The caveat is as follows if you have the following: var x = 0 var y = ++x y will be 1, because putting the ++ on the front increments the variable before finishing the rest of the statement. Instead: var x = 0 var y = x++ y will be equal to 0 because it processes the full statement before incrementing the variable. This is generally true in most any main language I can think of right now.
Doesn’t need to be a subclass. Just a UIView will work. 
Wouldn’t that just create a new UIView every time?
Nope. Create a UIView as a member variable. And have that method return the UIView for a header. I do it right now and place buttons in the header just like the OP wants. 
Think of it in a team sense, you have two developers one who knows Android and one who knows iOS. Having one member of the team who can write the shared code that will end up getting used by both Apps is very powerful and time-saving. Instead of two developers writing and trying to understand the same business cases and API's. If you know c++ or c well it would be better to use them for shared code. But if your not great at them then c sharp is easier to write well then c++ if you just come from a java or swift background. Also, I guess its worth noting instead of everything being written in one lang for 2 apps you know have 3.
Yes, great guy and great books, I have two bundle packs, can't go wrong with HWS :) And you get free updates, discounts...I just saw that will get free Vapor Server Side for free..who else gives books for free :). I'm currently learning python, so I do not have time for Swift, but when I get back to Swift, I know that all my books are up to date. Full support for /u/twostraws
[removed]
I notice other Swift books are also having a sale period. Would it be good to also post this in here?
/u/twostraws Would you like to add this to the original post? Thanks!
[removed]
Have you used the Udemy courses before? If so, how are they? Also, any one of the 3 books you'd recommend in particular? 
I just want to say that Should you be looking for a great resource to learn Swift, iOS, macOS, watchOS, tvOS and ALL that involves Swift programming, look no further than Hacking With Swift!!! I'm learning programming in general, with Swift in particular with these books and I can guarantee they are amazing. The author is über alles and the lifetime update policy is unbeatable too!! Not to mention this is the only always up to speed with Swift and all the frameworks (and more, like "Server Side Swift" with cutting edge technologies) I found on the interwebs. Disclaimer: I'm in no way affiliated with this, nor I'm getting anything out of it. I'm just glad I finally found a great learning resource for all my Apple development (and beyond) needs.
Hi /u/super_corndog, The big difference is that Udemy offers video courses and Manning offers books (e/paper). Personally I don't like video courses because I want to follow and read and learn it with my own speed. Also, I experienced that I learn the most from a paper book instead of a video, so I would prefer a book over a course. The added benefit using a book is that you can always grab it from the bookshelf and keep it as a reference. To answer your question, I haven't used the Udemy course. :-) If you're a iOS developer with a beginner level or want to get comfortable with all iOS basics I would prefer (iOS development with Swift)[https://www.manning.com/books/ios-development-with-swift] If you're a iOS develop who knows all the basics and want to master the advances topics (in depth), I would highly recommend (Swift in Depth)[https://www.manning.com/books/swift-in-depth]. It's full of best-practices and will guide you in when to choose solution A over solution B and vice-versa. You'll become a more productive, mature and convinced developer. 
Thanks for the tip. Though I do have to mention that the Swift's world isn't just Hacking With Swift. There are more valuable resources if you'll look outside of this bubble. Some sources what I find valuable (free): Paul Hegarty with his yearly iOS developing class. Stanford University. [Developing iOS 11 Apps with Swift](https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316) Subscribe to the Swift Weekly mailing list to get all valuable news/books/articles (for free). [Swift Weekly](http://digest.swiftweekly.com).
[removed]
thanks /u/bartoss, at some point I'll be checking those out too :) I must admit that I'm kind of fixated on "single sources", be it for learning or else like (e.g:) making music. I always tend to stick with the most resourceful "bundle" at least at the beginning. This is because I like "complete" courses with the advantage that the author outlines a specific path and the guides have a consistency across all my formation too. When I'm more confident, then I'll go out and expand (for example with the great Erica Sadun resources/blog). Particularly for new technologies like Swift, which is still evolving and changing very much with every release. I hope this makes sense to you.
I completely agree with that. It gives you confidence in the beginning when you follow one source and stick to this. I would advice to follow multiple sources to have a descent beginner level. One could be the course of [Stanford University with Paul Hegarty with his yearly iOS developing class](https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316). Happy learning :)
cheers drive :)
I own both Hacking with Swift and Pro Swift, superb resources for learning the language (helped me a lot because I like learning by example!). Practical iOS 11 is really great as well, haven’t yet finished reading it actually. 
Wow, thanks for the thorough reply! Hm yeah, in the past I've had good experiences with video courses in other subjects but not yet for Swift hence why I was curious. Swift in Depth seems great but not yet *quite* for the level I'm at right now, but soon. I'll definitely be bookmarking it for the future though. Thanks again!
In the past I noticed some issues with standard UIView a that did not occur with uitablefooter or header view. Just saying.
You need to subclass `UITableHeaderFooterView` if you want to do things the modern way, i.e. automatic reuse where you simply dequeue a headerView. 
If you are using one section, and one header why would you want to dequeue and reuse? You know what the content will always be. 
I just released a new iOS client for Bittrex. Do try it out and provide feedback. Download from here: https://itunes.apple.com/us/app/bitmob-bittrex-client/id1314235918?ls=1&amp;mt=8 Features: * View all markets available in Bittrex. * Sort by market name, volume, price or percentage changes * Monitor gainers and losers of the past 24 hours * View details of each market including asks and bids and current value * View the latest market history * View charts of each market directly from the app * My wallet shows your market, estimated BTC and USD value * Buy/Sell quickly directly from BitMob * View your order history, both completed and pending * Cancel your orders Note: BitMob is a third party application and it is not affiliated with Bittrex
The guys from objc.io also have a sale with 25% off: https://www.objc.io/books/ 
I’ve gone through Hacking With Swift, Pro Swift, and most of Swift Coding Challenges. There is a HUGE amount of value in Paul’s packages that you would have a hard time getting cobbled together from random blog posts on the web. You also don’t have to worry about obsolescence of your investment. Paul updates his books EXTREMELY fast (his server-side swift book was updated for Kitura 2.0 two days after it was announced) so if you hear about a new change to something, you’ll be sure that Paul will have something to say about it in his books without having to pay for a new edition.
&gt; because it processes the full statement before incrementing the variable That happens to be true in this case, but it's not the general rule. You can't properly discuss order of `++` evaluation in C without sequence points. &gt; This is generally true in most any main language I can think of right now. Most programming languages are stricter than C, and often have different orders of operations. The common toy example `i=i++` is undefined in C, for example, but well-defined in Java and C#.
Which one covers the most advanced topics?
What do you want to hear? You are obviously not using it correct, either installarion, target, build settings whatever
Okay I’ve used some libraries with no issues but some have lots of errors. So maybe I wanna hear what other people are doing to make these work because they are not working on my Mac. It’s pretty straightforward. I explained how I install them so if I missed a step then please inform me, but I don’t believe I did. So if you can get these pods to work then great, inform me how, because it does not work for me. Have you tried installing the Charts pod? Does it produce any errors?
You're not even telling us the error message. How is anyone supposed to help? Why do you think you installed it properly, if it doesn't even compile?
Hi guys, I reported the bug and have been told that 1) it was a duplicate [ok], 2) the duplicate bug has been dealt with [ok], but that 3) I'm not allowed to see the resolution [not ok]. So that's great... Just something until the bug is officially fixed, in case it will help others.. I've created a couple of keyboard shortcuts using the native System Preferences&gt;Keyboard&gt;Shortcuts&gt;App Shortcuts # Click the + sign below the main box # Select Xcode in the Application drop-down menu # Type 'Show Raw Markup' for the Menu Title # Click in the Keyboard Shortcut box and press cmd+R Repeat this process, but instead write 'Show Rendered Markup' in the Menu Title (use same shortcut). This should allow you to use cmd+R to quickly toggle between the two modes without having to go into the menu every time :) 
Is your UICollectionViewLayout of type UICollectionViewFlowLayout ? If so, it has properties that control the inter-item spacing horizontally and vertically, and the insets for the sections. All of these properties can be set either in code or in InterfaceBuilder in the layout's 'ruler' panel.
I'll be glad when deprecation is deprecated. 
In the Interface Builder its a UICollectionView but Ive implemented the collection flow layout delegate for my class. I've tried this code to get it going, it works but the spacing issue remains func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -&gt; CGFloat { return 4 } 
After 1 years of development in JavaScript, React-Native and NodeJS, I started developing Swift and iOS development from Udacity. Can’t wait to release my first truly native app to iOS 😁
I’m talking about various errors in the code. 
I use Charts with Swift 4, Xcode 9.1, works fine, no errors. I don't use Cocopods however. Try Carthage, or no dependency manager. Beyond that, without knowing what errors you're getting there's no much more to say....
That's exactly what I would expect. FlowLayout only knows a minimumSpacing. This guarantees that two cells aren't more apart than that, but they can and will be further apart. So why does this happen? Because the layout can't fit more cells into one row. And for some reason Apple decided that FlowLayout should space out rows when that happens. I am not aware that you can change that without involving complex trickery like using invisible cells at each graphical row. Your best bet is to look for a UICollectionViewLayout that fits your needs, or roll your own. 
Probably need more info to help you. I had a problem with xcode not seeing something I added to cocoa pods this morning. Problem was that I had to build the project after adding it in order for xcode to see it. 
&gt; to make these work Again, we don't know your specific problems and can't provide specific answers... I'd start with googling the error? 
I'd start with a single error the first one to occur. Google the package name and the error. What did you find? It's a methodical approach and when asking for help, the more specifics you can provide the better. Usually, what did you expect to happen, what actually happened, what error messages occurred, Google the problem , try solutions and if those don't help ask for help but provide all the details. 
Please don't take this as a person slight, it is in no way meant to be that at all. But. The docs are really difficult to parse for a beginner. The WWDC videos are also often far too high level. "Just go to the docs" is a really poor piece of advice IMHO. I know the docs are there, but they could be in Greek for all I would understand. Perhaps I will get to the point someday where the docs are a resource that I can go to unreservedly, but since that is not where I am right now, I posed the question above. Again, not a slight. I appreciate the fact that you took the time to initially respond.
/r/fluchtpunkt has the right answer
From the Charts GitHub [README](https://github.com/danielgindi/Charts/blob/master/README.md) &gt; Just a heads up: Charts 3.0 has some breaking changes. Please read [the release/migration notes](https://github.com/danielgindi/Charts/releases/tag/v3.0.0). Perhaps the answer to whatever error you're receiving is answered in there?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [danielgindi/Charts/.../**README.md** (master → bc40b16)](https://github.com/danielgindi/Charts/blob/bc40b1608598215ba1af4c0703a7950b450f725f/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dq92ali.)^.
The Apple code is safe to use. You will eventually set things up differently, but you'll notice when that need arises. The code in the documentation is a bit more detailed because it explicitly does things that the code in the app template does implicitly. It also uses background queues, which is a good thing to keep your app responsive. &gt; Also, does anyone know in what form the managed object context stores the information about the managed objects? The context itself doesn't store anything on disk. The context manages so called persistent store coordinators. A context can have multiple persistent store coordinators, but you probably don't need that anytime soon. Each persistent store coordinator manages a persistent store. In most cases that store is backed by a sqlite file on the storage of your device. The context also has your data models, which contain information how the NSManagedObjects can be saved to disk, and how they can be recreated from disk. CoreData is not a database, but it's often backed by one, so there's obviously some magic involved to turn the data into an object graph that you can use in your app. The context does that magic. It for example loads objects on-demand when you access them (the faults you may have heard about already). How that works under the hood is an implementation detail you shouldn't care about. But if you are interested in it you can infer some of its working by looking at the backing sqlite file. &gt; If you tell me that the managed object context "manages" objects and then don't really go in to any depth about what that means, then I am back to copy and paste mode again. It creates, reads, updates and deletes your objects. Everything you do with CoreData involves the context, either explicitly or implicitly because aeach NSManagedObject has a reference to the context it resides in. Any specific questions? CoreData is an enormous topic. I would recommend to experiment. Open Xcode, try things. Use the Master-Detail app template and you get a functioning CoreData app. If you are interested in the underlying data structures, open the corresponding sqlite file in a sqlite browser and look at it. Check the documentation browser and look at the API of NSManagedObjectContext, NSManagedObject, NSPersistentStoreCoordinator, NSPersistentStore etc. 
&gt; I explained how I install them Beyond saying that you "use CocoaPods and install it properly" [sic], no, you haven't.
&gt; Do you want me to write out the 10+ errors in the code? Not necessarily. Only the errors you want people to help you with.
Thanks for the links. Have been debating to buy the hacking with swift books and think this may just sway me!
Thanks 
Thanks
Looking I see that the online version of Hacking with Swift, and the latest downloads from Gumroad, are updated to Swift 4. You might want to consider updating your pdf/ePub files to the latest and you shouldn’t see this anymore. 
How do I do that? I’m just using the free tutorials on the hackingwithswift website and YouTube. Thanks 
The website is showing the use of FileManager and Bundle on my end, you may somehow have an old cached version of the site. 
Perfect, thank you. I’ve got it updated now!
Happy to hear it!
The important code to post would be class where your trying to call `simpleDescription`. The following works fine in a playground. class Shape { var numberOfSides = 0 func simpleDescription() -&gt; String { return "A shape with \(numberOfSides) sides." } } var test = Shape() test.simpleDescription() 
i created a new project with just the default viewController class( didn't touch that), the shape class(same as what i posted before) and another class called TestShapes class TestShapes { let test = Shape() test. } nothing comes up after typing the "." operator after creating a new shape object. 
"I installed it properly" is not what I call "I explained how I installed them". I have not installed Charts with pods, however I've installed some other pods which worked, a buddy of mine used Charts without pods and got it to work as well. You basically said 'my car is broken, how can I fix it'. Well you should be more extensive in explaining what went wrong.
It's cause you can't just run code in a class. You would need to put the code you want to run into a function then call that function. class TestShapes { let test = Shape() func runTest() { print(test.simpleDescription()) } } TestShapes().runTest() 
test.simpleDescription() 
Oh I guess I’ll have to put it inside viewdidload in my real project 
My whole point is that why would popular libraries have broken code? It literally makes no sense. I shouldn’t be getting these random errors in the code. I can tell you the errors when I get back home and can check it. 
I’ll check it again when I get back home. I just figured that a popular library would not have errors in the code, and this happens with multiple libraries. I can use Alamofire no problem, but something like Charts, or today I tried Elegant, they have errors in the code.
I just figured a popular library would not have a bunch of errors. I can tell you more specifically when I get back home.
Maybe I need Xcode 9.1
Wow, that looks really good! Installed, was planning on another round of whole 30 after the holidays :)
They don’t, you’re just doing something wrong
Okay I use other libraries no problem, and some have code errors. I don’t know what else to say.
Mostly when you see the `:` (and always near a `var` or `let`) that represents a type definition. var x: [String] This defines a variable named `x` with no value. There is no equal sign here, so nothing is being assigned to `x` var x = [String]() This defines a variable named `x`, and (because of the equals sign) is _assigning_ the right hand side to the value of `x`. Now let’s look at the right hand side: `[String]()` is constructing a new array of Strings. So the difference is basically “do I actually _assign_ a value? Or just _declare_ a variable of a certain type and leave it nil?”
I agree with everything except that last part. This variable wouldn’t be nil. As it is not optional. It would need to be initialized with a value. 
Right, I didn’t really want to confuse the issue too much with edge-cases but Swift allows this sort of non-optional declaration as long as assignment happens in all code-branches prior to access, I think.
Well done.
I want multiple sections / multiple headers
So you're saying to place them as a prototype cell / header in the nib and connect them? 
I created a UIView then I programmatically add my buttons to the view and lay them out inside of it using constraints. I don’t use storyboards. 
Sometimes these errors look like coding errors but often its due to misconfigured frameworks or other nasty settings. Youve said before that very often frameworks dont work for you, maybe its not the frameworks but some configuration youve fcked up?
Thanks! If you find like it I would appreciate a review!
Okay well some work fine, not all of them have this issue. I might just have to try Carthage or something. For Cocoapods I just do ‘pod init’ then open podfile and add the pod I want, and then run ‘pod install’ and it installs. I open up the xcworkspace and compile and receive the errors.
Coincidentally I just needed to create a CollectionViewLayout where I can adjust the alignment of individual items. When I cut out everything that doesn't have to do anything with left alignment I end up like this: class LeftAlignedCollectionViewFlowLayout: UICollectionViewFlowLayout { var cache: [IndexPath : UICollectionViewLayoutAttributes] = [:] override func prepare() { cache = [:] super.prepare() } override func layoutAttributesForElements(in rect: CGRect) -&gt; [UICollectionViewLayoutAttributes]? { guard let attributes = super.layoutAttributesForElements(in: rect) else { return nil } var attributesByGraphicalRow: [[UICollectionViewLayoutAttributes]] = [] var y: CGFloat = 0 var currentRow: [UICollectionViewLayoutAttributes] = [] func changeAttributesOfRow(_ row: [UICollectionViewLayoutAttributes]) { var minX: CGFloat = 0 for rowAttribute in currentRow { let oldFrame = rowAttribute.frame let newOrigin = CGPoint(x: minX, y: oldFrame.origin.y) let newFrame = CGRect(origin: newOrigin, size: oldFrame.size) rowAttribute.frame = newFrame minX += (newFrame.size.width + self.minimumInteritemSpacing) } } for attribute in attributes { if attribute.frame.origin.y &gt; y { // new row starts changeAttributesOfRow(currentRow) attributesByGraphicalRow.append(currentRow) currentRow = [] y = attribute.frame.origin.y } currentRow.append(attribute) } if currentRow.count &gt; 0 { // last row isn't appended in for loop changeAttributesOfRow(currentRow) attributesByGraphicalRow.append(currentRow) } for attribute in attributes { cache[attribute.indexPath] = attribute } return attributes } override func layoutAttributesForItem(at indexPath: IndexPath) -&gt; UICollectionViewLayoutAttributes? { if let attribute = cache[indexPath] { return attribute } // now what?? return super.layoutAttributesForItem(at: indexPath) } } Disclaimer: don't blame me if it doesn't work. You should probably figure out if and when `layoutAttributesForItem(at:)` is called. ---- And for what it's worth, you should not do that: `flowLayout.estimatedItemSize = CGSize(width:1, height:1)`. The estimate are used so the collectionView knows how much views it has to request to calculate the layout for one screen full of cells. You are basically telling the collectionView to request thousands of cells to figure out the layout, because it would need thousands of 1x1 cells to fill the screen. Try to find proper estimates, maybe 80 x 40 will do in your case. 
sorry, wrong place for that reply
do you have any resources for doing it programmatically? I'm fallowing Neuberg's "programming iOS 10" and the rules behind "https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/TableView_iPhone/AboutTableViewsiPhone/AboutTableViewsiPhone.html#//apple_ref/doc/uid/TP40007451-CH1-SW1" , which is all in obj C which I barely understand 
The other comment answered pretty well, but this might also help: `[String]` is a type, just like `Int` for example. Adding `()` to the end is an initializer, which means you're creating a new instance of that type. So for your question: Your second example is the exact same as this: `var x: [String] = [String]()`. You might notice that it resembles your first example a lot. This is because it is a combination of two separate things. Your first example declares the type of your variable, the second assigns a value. My example explicitly declares both the type and value, but in Swift if you do the latter, the former is implied (i.e. when you assign a value to a variable, the variable's type is implied based on the value you are assigning to it). Since Swift has good type checking, you could also use this in your second example: `var x: [String] = []`. The `[]` creates an empty array, and it can tell based on the type of `x` what type of array it should be (in this case `[String]`). 
Great answer. One more thing. CoreData is not something you should just copy and paste. Even the old tutorials are useful, though with iOS10 a lot of things exist to make it easier.
Purchased the courses from Udemy! Thanks for the heads up
In the Objective-C era I used to buy the books from the Big Nerd Ranch, once the gold standard of Cocoa(Touch) programming books. Having similarly been through most of the Hacking with Swift books I must say that from both a learning and content perspective there is a new gold standard. I've gotten so many "Eureka" moments and so much joy from these books that I can nothing but recommend them. And yes, the value you get is EPIC! Black Friday or not: https://vimeo.com/244133240
No slight taken, and thanks for giving me your perspective on this. I'd love to know what aspects of the docs you find difficult to parse, and what kind of resources you prefer learning from. What points are you getting stuck at with the docs and other resources? 
If you declare it the way you have without a ? Then you will need to assign it before the end of Init. Otherwise Xcode will yell at you.
No, just use this php script which magically creates one for you: https://github.com/mevdschee/php-crud-api Use structs in swift and have the api return formatted responses and you can easily convert the JSON to your swift data structures. 
Do you have an instance of that class as an object which contains the method that you can call? 
Take a look at https://developer.apple.com/documentation/coredata/nspersistentcontainer - it simplifies a lot of things that you have to manage in Core Data.
Apple makes an iPad app called Swift Playgrounds that uses games to teach you how to code in Swift. There's also an app called Mimo that has lesson modules on Swift. 
I’m working on a Mac app to help me win HQ Trivia. It takes a screenshot of my phone, uses OCR to find the question and three options, and gets me the correct answer. It doesn’t get 100% Of the questions right, but it’s getting there
Udemy has great classes for real beginners. From there you can move onto the free intro to swift programming class on iTunes U offered by Stanford. The second one will teach you better modularization and coding habits. I would recommend doing those and just starting your dating app and learning as you go. I find that I learned better when I was designing an app I was passionate about and stayed motivated. I used apples swift documentation and found any other answers I needed online with a little googling.
There's two basic possibilities, as you've mentioned. One, they're full of bugs, in which case you should file bug reports with those projects. Two, you're not installing it correctly, in which case you need to describe exactly what you're doing and exactly what you're seeing in order for anyone to help you. You seem strongly opposed to doing anything but vague whining about how nothing works for you. You've had half a dozen people offer to help, if you provide more information, but each time you simply repeat that you're getting "various errors in the code".
[SE-0086](https://github.com/apple/swift-evolution/blob/9cf2685293108ea3efcbebb7ee6a8618b83d4a90/proposals/0086-drop-foundation-ns.md), "Drop NS Prefix in Swift Foundation".
Thanks so much!! I’ll definitely look into it. 
Wow, okay thanks! I hope I have fun making the app. I really want to put my energy into something productive and needed in the dating world. I was scared to start creating the app so soon, because I am not sure what creating a dating entails. 
 var x = [String]() Can also written as: var x: [String] = [] It’s easier to read for me this way. 
I picked up the Hacking with Swift power pack + the iOS 11 book earlier this year. Really good stuff. Not... super beginner friendly (it doesn't hold your hand as much as some other books... there's a lot of text without pictures). It's fine for me, but just a bit of a note for people who haven't done much development. Other than that, they might be the best books out there, mixing some good advanced topics into each project. I used this sale to grab Swift Algorithms (Been on my wishlist for a while), and Swift Style, which sounds like an interesting read. Also picked up Design + Code, since I've been interested in it for a few years, and never grabbed it. Our office has started doing more and more work in Sketch, and it would be good for me to learn it. Basically, I have a lot of reading to do now. 
I need better friends.
I'm a beginner, about halfway through a Udemy course learning swift. I am also about 1/3 the way through the Apple's book on Swift. I haven't started working on my own app but I am planning on doing so once I finish this Udemy course (in the end you make a instagram and snapchat clone). I came across the Swift books from HwS. I'm totally down to pick up a copy. I work in finance actually so i'm not looking to make this a rapid career change, but Im interested in doing a few side projects, hopefully to generate some cash off some ideas. I was thinking of getting the basic book, but saw the bundle is also half off. What do you recommend? I don't want to spend $75 rather than $20 if I'm only going to go through the first book. 
Awesome. Thanks for this.
No problem! If you have any feedback let me know, so we can try to improve it :)
No surprises here. [We peephole this](https://github.com/apple/swift/pull/8464).
I looked in your linked page. I don’t really understand. Is it when optimized, under the hood, `[] += [e]` is the same as `[].append(e)`? My benchmark show when un-optimized, `+=` is ten times slower, but when optimized, `+=` is tiny bit faster. 
You should try to separate your two benchmarks from one another and run them quite a few times to average out any anomalies that can occur while performing them. The generated SIL for both, while interestingly different (former seems to much more aggressively inline stdlib array manipulation primitives) should not cause a noticeable difference between the two. If there is, I would ask you to please file a bug report over at bugs.swift.org over it.
As a professional iOS developer, this is very well written. Tell your friend well done. I update after reading a more with some better feedback.
Good read. In addition to his write, making a sub category dedicated to what companies look for in a modern day native Apple developers would be beneficiary. I’d say the 5 or 6 main things they need a Jr/mid lever developer to know would be; Deep understanding in core Apple frameworks such as Foundation and UIKit, also make sure you know how to navigate apples documentation really well. Learn how to set up a tableViewController/ collectionViewController with custom cells and views. How to use url sessions and requests to talk to the internet, as well as how to parse JSON into models for your app. Understand when to create and implement custom delegates and protocols for your classes. Learn when and how to use a cocoa pod in your app. And lastly familiarize yourself with the different methods of data persistence on Apple devices. Your buddy already did a pretty good sub section on it already. 
Apple publishes 'App Development with Swift' available through iBooks for free. It introduces Swift and shows how it's applied to app development. It also has 'labs' with set tasks, and guides you through them. It's a very good way to learn if you are new to programming imo.
You can enjoy the first book for free as well, online (minus some bonuses you get by buying): https://www.hackingwithswift.com/read Afterwards, you can decide for yourself if to buy a book, a bundle or nothing. Of course, the offers may be over by then.
To be honest, I don’t remember reading one specific book. I saw some tutorials and read some articles. Swift is pretty damm easy to learn. The main stumbling block will be optionals but they sound a lot worse on paper than real life. The reality is that Xcode autocomplete takes most of the tedium out of them and reading almost any article introducing them will make them pretty easy to understand. I cannot even imagine going back to obj-c
I’m experiencing all these issues as well. I was developing in Objective-C on AppCode before I switched over to Swift/Xcode and I’m very tempted to switch back. 
cmd + click to go to the function definition has been changed to cmd + ctrl + click in Xcode 9, I believe.
Honestly, xcode is a broken mess. Especially all the refactoring stuff and whatnot. For codig I prefer to use Jetbrains' AppCode. Far better.
just read apple's swift programming language book on iBooks.
&gt; on it’s own. On it is own? Your friend needs to learn the difference between it's and its. it's = it is or it has its = the next word or phrase belongs to it
Does anyone else have any good examples of improving local reasoning in Swift?
That's what he said he did.
Try the new build system.
Check out objc.io. Since you have experience in obj-c I think you will find their books more up to your speed. [Their site](https://www.objc.io/) is really good too, they offer videos on useful topics with real world situations
Apple's ebook, and a LaserWriter II?
I am curious, how well do you speak Hungarian?
Did You Get In?
How would that affect autocomplete?
If you have any cool iOS resources feel free to message me or post in r/NoviceDock and I'll add them to they syllabus :)
May be placebo, but I get a feeling it is a bit snappier and accurate. Maby better indexing?
Autocomplete is spotty. When it starts acting up do a full clean CMD-Shift-&gt;Clean. If that doesn't help try clearing the Xcode cache. And of course file bug reports with Apple. Include that demo video with your bug report. I've filed several about carious autocomplete failures, the more filed the better. https://bugreport.apple.com/
Agreed, optionals are the biggest change, especially because there is a whole new set of “try / catch / ternary” type operations in let / guard / ??.Strings are the second biggest change.
I know, but you can change this to the old behavior, which I did, to no avail. Nonetheless, alt + click didn't change but still doesn't work.
What is the new build system?
Thank you so much for the feedback. I’ll forward it to the writer Laszlo. Definitely considering adding a section on all the syllabi on the site for what employers are looking for!
Really awesome! I went through the Intro to marketing topic and it has great stuff. Suggestions - Your friend could grow the site by writing on more topics like design (app design, web design, design softwares, etc), cryptocurrencies, etc I signed up to get notified for the Intro to entrepreneurship topic! 
Four years in, and Apple still hasn't gotten it's shit together with Swift in Xcode (or the debugger, printing vars takes forever). Maybe they are waiting for the language to stop changing so drastically every release before putting any actual effort into this stuff?
Thanks a lot for the detailed answer! In the end I opted for a library which achieves this for me.
This. I have a paper copy of Advanced Swift on my desk. It's very useful for experienced programmers. 
Start commenting out code until the problem goes away. Why are you building the list on the VDL? Pre-create it so you have a known data set to start with. Start with the sizetoFit. &gt; Im unsure as to whats I'm* unsure as to what's* Come on. Spell the words. You're not typing for your own convenience, you're typing for others to read. Use correct English. This is a basic rule when communicating to other people. 
I changed my benchmark to this: import QuartzCore func runner(_ op: (Int, inout [Int]) -&gt; Void) -&gt; Double { var array: [Int] = [] let startTime = CACurrentMediaTime() for i in 1...100_000_000 { op(i, &amp;array) } return CACurrentMediaTime() - startTime } var appendTime = 0.0 var plusEqualTime = 0.0 for _ in 1...20 { print("-*", terminator: ""); fflush(__stdoutp) appendTime += runner() { $1.append($0) } plusEqualTime += runner() { $1 += [$0] } plusEqualTime += runner() { $1 += [$0] } appendTime += runner() { $1.append($0) } } print() print("appendTime = \(appendTime) seconds") print("plusEqualTime = \(plusEqualTime) seconds") print("appendTime - plusEqualTime = \(appendTime - plusEqualTime) second") print("plusEqualTime / appendTime = \(plusEqualTime / appendTime)") Benchmark optimized run output: &gt;appendTime = 26.0474421270192 seconds &gt;plusEqualTime = 30.1654161218321 seconds &gt;appendTime - plusEqualTime = -4.11797399481293 second &gt;plusEqualTime / appendTime = 1.15809513942796 compile **un**optimized with `swiftc benchmark.swift`, `+=` is 48 times slower than `append` compile optimized with `swiftc -O benchmark`, `+=` is about %15 slower than `append` Should the two run at the same speed when optimized? Does this look right? The lesson learned is prefer `append` over `+=`
Remember to smack the cartridge on the side to free up the ink particles.
Turn off auto layout in WordCell
Sounds like you've got a breakpoint set somewhere. Find and delete it.
Sadly my cells rely on Auto Layout so they can resize according to my UILabels width. 
My problem is that the app won't get approved during Apple Beta Review even if I remove the breakpoint.
Tableview get tricky when you have a lot of cells to display. May have a look at some explanations on how to get smooth scrolling. https://medium.com/capital-one-developers/smooth-scrolling-in-uitableview-and-uicollectionview-a012045d77f 
Hostel idea is there due to less of a deposit requirement. Co-working space would be preferable so as to delineate work and recreation - working in the living room could be difficult.
You need to learn what a breakpoint is, because what you’re saying doesn’t make a lot of sense. Short version: it’s a way for you, the developer, to freeze an app at a specific place so you can inspect it when it’s running. It’s a debugging tool, and should have no bearing on app review and approval.
Stop using corner radius in the cellForRow and move it to the cells init or awakeFromNib... its super expensive once you move it, it will be performed on the first 4 cells only
Awesome! Thanks for the PSA! Baugh the a few from hackingwithswift. 
To be fair to the guy, Xcode makes it *way* too easy to accidentally insert a breakpoint and be totally unaware of it.
Xcode also makes it easy to find and delete them in one overview. (Breakpoint tab) but indeed, many times I accidently added a breakpoint via de line number column.
True. But really OP needs to learn about them because they can be a fabulous tool. 
Thanks! Given your method a try and no improvment sadly. Unless I'm doing it wrong ofc, but when I try setting the text in `willDisplayCell:forRowAtIndexPath` it lags even more. Interestingly, the lag goes away completely if I set it to a specific value in `cellForItemAt` like so: `cell.myLabel.text = "Testing"` If I do that, it performs fine, although there is an initial high CPU usage as you scroll down for the first time, but after its completely fine. Thanks again for the input so far. 
Tried removing cornerRadius and turns out its actually the UILabel.text thats causing the issue. For some reason if I set it equal to a value in an array, it lags, but if I set it to a static value its fine... 
Did you have a bad day?
&gt; Come on. Spell the words. You're not typing for your own convenience, you're typing for others to read. In the same post where you wrote VDL instead of viewDidLoad
Just curious why you have width and height set to 1. Thats a lot of cells on the screen.
Additionally, I'm seeing the 50% you mentioned, but its not lagging at all when scrolling.
I like it, but where are you? Also is remote an option? Pull requests and Skype and such?
Would that be a normal amount of CPU utilisation for a list though? Im a little out of touch with good numbers on resource consumption 
Sending a PM - remote is definitely a viable option :P
Oh that was a mistake, forgot to up the size lol
This sort of problem is exactly what the profiler is built to answer. Run your poorly performing code under the CPU profiler tool and it will show you exactly how much time is spent in every method. No need for guesswork or commenting out random stuff until you find the culprit.
This. Measure it with instruments and see what’s causing it.
I've found IB to be pretty alright for quick prototypes. With the caveat that I only prototype parts of the app: a certain feature, a certain flow, something of that sort. And even those parts usually focus on a specific thing – some transition timing or animation, sequence of screens, feedback display, etc; foregoing most any styling. There was a cool WWDC session in, I think, 2016, about using Keynote for prototyping. You could look that up. I never tried it, but it looked interesting. Tangential to your actual question, for strictly personal things with no release or end-user incentive, I find I work best with getting something usable going as soon as possible and putting it to work. Then ironing out the quirks I find and smoothing the rough edges. It might seem obvious in retrospect, but I only realized it after David Smith pointed it out on his Developing Perspective podcast. A cool upside I've found is that it's ingrained a certain focus on keeping the code *easy to modify*. As if a sort of liberation from "I need to get this absolutely right" to "I just need this to work and not be dead-locked to how it works down the line". Granted, it's just a generally good practice, and I'm sure there is a fancy name for it that is eluding me right now, but nothing like practical experience to make a thing stick. 🤷‍♂️ A cute fringe benefit to how I work on my own stuff – I use Day One for journaling, and when I realize what is off with the app or what I want to change, I make a new entry in Day One. Years later, it's amusing to see how the app grew and changed over time, as I'd have several of these references stashed in Day One. 
Like anything it depends on type of and purpose of app... If you are prototyping functionality of your app, then Xcode storyboards is fairly easy to use... add generic buttons, labels. Etc to lay out how your app will be arranged. There are still folks that fight it, but most GUI design should be built in a visual editor rather than code... If you need something super quick, I would go with a graphic design tool like adobe Illustrator or Inkscape... 
Ultimately, it’s whatever flow works best for you. My normal workflow is: - **Brainstorm Requirements:** Just think of what the view is supposed to do. A Login view needs to allow the user to login. It will need a username field and a password field and a log in button. -**Wireframe:** For views that are a little less obvious that a Login view, I like to use pen and paper to dream up some potential designs. I find this particular helpful when designing UITableViewCells. I like the pen and paper approach because I don’t have to fight with AutoLayout, it’s easy to compare and contrast designs, and it’s easy to modify and trash if need be. -**Storyboard:** Next, I move to actually building the view in my Storyboard (Interface Builder). And fighting with AutoLayout. Sometimes at this stage I’ll realize the view doesn’t look as good as I imagined or is just particularly difficult to do with AutoLayout and I’ll bounce back to the previous step and repeat. -**Controller:** Once I’m happy with my view, I implement the controller. 
Discord? 😎
 The content doesn’t change, so it doesn’t need to redraw. Try to enable rasterisation on the layer.
[removed]
Got caught up in automoderator. I've approved it. Good work!
There are goods reasons to fight it. Storyboards is kind of a nightmare for teams. Each XIB file is a human un-readable file, and each change made basically can't be read by a code reviewer, so it's impossible to get an understanding of what UI changes were made by looking at commits. And don't get me started on the "edits" made to a storyboard file just by opening it in Xcode...
The only thing I can see is that you are setting a corner radius on a layer without asking it to rasterize. This is going to cause a re-draw of the layer any time it moves. use `layer.shouldRasterize = true` 
Everyone keeps mentioning Discord but I'm embarrassed to say I've never bothered to look up what it is; I'll get on that tonight lol.
You definitely should! It would be so good for something like OP is suggesting. 
For a solo dev, you don't have to build something for other people to approve of, it's all you. You can look at other apps and say "I like that" or you can look at modifying some UI you like to suit your needs. IMO, drawing it out as a solo dev would just be for you to visualize what you want. That's great, but you can also look at all the examples out there. You can browse apps, download what you like, grab a screenshot and edit it or use that as your example. I'm one of the "in code" devs. I've done full, complex apps without touching any visual tools like IB... everything can be done in code. There's actually quite a few tools to help the "in code" people. So I don't use IB or any prototype tools, I find what I like or imagine what I like and run with that.
IB.
All this time and I never knew that site had a paid option.
Hey, if you need some help just pm me :) I‘m working with Swift since 1,5 years in a company in Germany. So my englisch skills are not the best, but I think it is enough to communicate ✌🏻
I tend to: Sketch some UI ideas out. Used to do this on paper but use my iPad Pro now. You can get basic wireframe templates quite easilly Depending on: - Is it a complex UI/screen that I am not 100% sure about and may change - How complex and much time will it take in IB I’ll either do it straight in IB and tweak on the fly, or for the ones I am less sure about (more complicated flows, experimental UI, brand new App idea) I’ve been using Sketch + InVision (craft plugin) . This allows you to take it straight from Sketch and run it on a device in a limited but good-enough-to-test kind of way This link shows a short video of how easy it is to use Sketch + InVision https://www.invisionapp.com/blog/build-interactive-prototype-sketch/
Prototype and build using IB. It's the perfect tool for the job.
How about adding a bunch of NSLog statements and find the line where it crashes?
What's nice about Sketch, is that you can run a script to export all assets to Xcode in the various @2x, @3x etc. This script can be called in the Xcode build process.
For that aspect, it sounds like there are some challenges. I guess we aren’t quite there when it comes to fully adopting a visual editor for GUI design... We will get there one day. But hopefully the ability to drag and drop, make adjustments on the spot makes up for these challenges...
https://blog.twitch.tv/native-chat-on-twitch-ios-79c1492eca06
49.999999999999999
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [SwiftNotes: A super simple wrapper around NotificationCenter](https://www.reddit.com/r/iOSProgramming/comments/7fn3pb/swiftnotes_a_super_simple_wrapper_around/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Makes sense, so then I see fewer arguments of getting started with it yet, despite what some people say.
Oh thanks, appreciate it. Thread has gotten a lot of interest so hopefully there will be a team :)
I swear that improved performance! Scrolling felt smoother (not completely perfect though) although CPU usage was still higher but that doesn't matter if the scrolling is smooth. Only drawback is that they looked blurry so I had to use something to multiply the resolution (forgot what it was called, IL take a look when I get back!) 
Thanks bot :) I think that was me. 
Cute, but won't this leak the observers? This really just changes `NotificationCenter.default.addObserver` to `when`, and discards the return value.
&gt; This really just changes ... Yep, it's purely just a bit of syntactical sugar, and doesn't add any new functionality. &gt; won't this leak the observers? I typically only ever observe things that I'm intending to continue observing forever, so I haven't cared about the return value. But it'd be easy enough to add that to the wrapper, for cases where you might want to stop observing. I might add that tomorrow :)
I like it. I've become more fond of wrappers recently. It really speeds up the coding and makes it cleaner.
Yeah, I think Apple are gradually moving in the same direction too. They've been gradually wrapping up old APIs with more concise ones in Swift. They're just a lot more conservative about how they do it. Although I don't think Apple will ever get this concise. They kind of need to remain at least somewhat verbose, because their audience is their entire developer community. But for my personal uses, if I can boil something down to a really simple sentence (eg in this case `when [thing] does [event] do [response]`) that just makes life easier. Less typing, and easier to read.
Dual screens. One with Xcode and one with SO, r/Swift, or PDFs. It’s the fastest way regardless of age. My first swift tutorial was paper and already obsolete before it arrived.
than you! that's useful!
nice! thank you
makes a lot of sense, thank you!
It's almost SQL-like!
Oh cool! Thanks a lot for the tip... Very very helpful. I've fonud out that **layoutSublayersOfLayer** (1.07s) &gt; **layoutSubViews** (959ms) &gt; **updateVisibleCellsNow** (916ms) In light of this, I have performed the following on my layous: 1. Made sure the cell and its subview UILabel was opaque 2. Removed unnecessary constaints 3. Unchecked autoresize subviews Sadly, despite of these optimisations, while the performance has improved, it definitely isnt silky smooth and still jitters a lot. 
Let us know :) 
I think `rasterizationScale` is what you are looking for.
Yeah used that and everything looks nice and crisp now. Hopefully I can get rid of this lag all together... Thatd be amazing! Is it just me or does it seem to be rather difficult to get smooth scroll views working on iOS? Under Android it feels so much easier and reliable. Maybe its just because Im used to Android, just curious!
I haven't done any Android dev, but it's probably just a different set of assumptions that's implicit in the programming model. if you have a smaller/fixed set of items to show in the table, you might consider not using the cell reuse stuff and create all your cells the first time on demand (or even before hand). You should definitely check that memory pressure won't be a problem before taking this approach. I suspect it's the layout of the text views that's causing problems, specifically the background layer calculation with the corners and creating the clip paths. One thing that's faster still is if instead of using the background layer corners, you use a resizable image for the background.
I’m guessing the variable contents can’t be inlined — so a function call must occur. Meanwhile the closure will be inlined and the function call eliminated.
IDK how swift is implemented but ObjC blocks are stack based when they have a reference count of one and are copied to the heap when they have a reference count of more than one. 
While I'm sure it's a great book, the sale sadly [does NOT apply to paper version](https://i.imgur.com/omjnCgj.png) of Erica Sadun's book. 
Your logic is a tad silly. Anything administered in person is more expensive.. lol.
I figured out why... The variable case is slower because it's defined in the global context. When I move `let compareGreater: (Int, Int) -&gt; Bool = { $0 &gt; $1 }` inside the function, it runs at same speed as the literal case. I thought this must be because closure capture? So I moved `let compareGreater: (Int, Int) -&gt; Bool = { $0 &gt; $1 }` back out to global scope, and changed the two closures to have explicit empty capture list as: `let compareGreater: (Int, Int) -&gt; Bool = { [] in $0 &gt; $1 }` `_ = array.sorted(by: { [] in $0 &gt; $1 })` the variable case is back to three time slower. So, closure defined in global context is doing something else extra, something other than capturing. What is this extra thing? Is there anyway to explicitly turn that off to make globally defined closure run at maximum speed?
See my reply below...
Is this optimized build or debug build? I think whole module optimization would take this into account.
[removed]