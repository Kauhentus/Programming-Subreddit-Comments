No such thing on iOS, unfortunately.
joined. but my issue with any discord server is that it's hard to follow any particular topic/question/discussion 
you need to define constraints and row estimate size 
üëÜüèºThis and various other reasons without seeing the code. Other things could include: Not setting numberOfRowsInSection, not setting the view controller as the delegate, etc. It‚Äôs really hard to say without looking at the code. I hope you figure it out though!
If apple ends up giving you an "external" tester's link, go ahead and throw it up here. I'll give it a look!
I totally understand that which is why you will love a smaller server (Totally Swift oriented of course!)
Well, it‚Äôs static. Probably just ViewController is not attached or data source is not set
Im gonna forgo treehouse for now and stick with things like udemy. No knock on treehouse, but with such a saturated market and no guarantees, I really cant justify spending 200 a month for some "degree". Just bought Angela's course so diving into that for now. 
I remember WebObjects had Java bindings but I don't remember Cocoa Java... Looks like I blocked it out of my memory. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Trying to add refresh control to all tableview using extension. Having problems, please help](https://www.reddit.com/r/iOSProgramming/comments/a7u7cm/trying_to_add_refresh_control_to_all_tableview/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I‚Äôm just starting out here, do constraints get easier? I seem to just be inventing new and exciting ways of not displaying text
Read the same article today üòÄ - looks right. I wonder if you could also have extended String with a validate() method that takes a strategy; allowing you to remove the need for the Validation struct... 
It is correct. But I would use a function instead of a struct to define the validation strategy. This would save you some lines of code.
Thanks for the explanation!
Hey, here's a link you can use: https://testflight.apple.com/join/5torSni2
That's true. But discord still better than irc xD
where does one define that? Here is what I currently have: [https://imgur.com/a/6m0T6Is](https://imgur.com/a/6m0T6Is)
Read again: nameInDb renames the database field, but leaves your property with its old name (my web peeps hate camelCase names in their SNAKE\_CASE DBs). Uid renames your struct and the database but migrates the data.
Once you use those "migrations" you get used to it really quickly. It's just one boring thing that does not matter anymore. Btw, it's not really migrations, as there is nothing like a SQL DB in the background. So it's not even magic.
No, you're not doing it right. You want two ways of validating a string: if it's an email || if it has at least _count_ characters. The only thing in common for them is that they operate on a string, and that's it. You shouldn't make the _count parameter that is specific only for length validation as part of the protocol that must be implemented by all validators, because it's specific __only__ for the length case. You can even see this yourself, _count_ is not even used inside the email validator. The correct way of doing it is: 1. Make the validation protocol accept just the string parameter 2. Create a struct or a class "LengthValidation" which implements the validation protocol and defines a property __count__ which you can set via its constructor. 3. Use that property inside the "validate()" function. I'm really curious which article you read. 
As it happens, I just went through it last week. A few lines of code where technically outdated (some UIKit-method call names), but nothing that Xcode could not solve on its own. The general principles obviously still apply, and its an overall short and well written piece. Not the best, but far from the worst.
A lot of it is still relevant, maybe some of the screenshots are outdated but not by much. I think it's worth doing and it's not that long. 
&gt;Thanks for the feedback. Ya i implemented it wrong. I posted the same question in r/iOSProgramming and got the answer which was similar to your feedback. 
Here's a sneak peek of /r/iOSProgramming using the [top posts](https://np.reddit.com/r/iOSProgramming/top/?sort=top&amp;t=year) of the year! \#1: [2018 Roadmap to iOS Development](https://i.redd.it/ix44k24k9ik01.png) | [55 comments](https://np.reddit.com/r/iOSProgramming/comments/82w6qa/2018_roadmap_to_ios_development/) \#2: [Petition: Change the official name of "Xcode" to "Xcode (not responding)"](https://www.change.org/p/tim-cook-change-xcode-s-official-name-to-xcode-not-responding) | [53 comments](https://np.reddit.com/r/iOSProgramming/comments/8lc6vz/petition_change_the_official_name_of_xcode_to/) \#3: [After i got my first app in the app store, my grandma wanted to savor the moment, so she printed my Apps App Store screen and put it on display in her living room.](https://i.redd.it/frzssbtsi2g11.jpg) | [23 comments](https://np.reddit.com/r/iOSProgramming/comments/978rj0/after_i_got_my_first_app_in_the_app_store_my/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
Refer this stackoverflow question - [https://stackoverflow.com/questions/24494784/get-class-name-of-object-as-string-in-swift/34878224](https://stackoverflow.com/questions/24494784/get-class-name-of-object-as-string-in-swift/34878224) But i don't think that this is a good idea. Can't even imagine the situation when someone wants to send to analytics superclass of self
If you define a computed property or method in the superclass that returns the name. And then override it in the subclass to return a different name. Calling .name or .name() from the superclass will call the subclasses implementation, assuming that it‚Äôs an instance of the subclass.
`class A {` `override func viewDidLoad() {` `super.viewDidLoad()` `self.name` `// will be "Subclass" if instance of B, or A for instance of A` `}` `var name: String {` `return "Superclass"` `}` `}` `class B: A {` `override var name: String {` `return "Subclass"` `}` `}`
u/8412risk class A{ init() { nameOfClass = String(describing: A.self); } var nameOfClass : String } class B : A{ override init() { self.nameOfBaseClass = "" super.init() self.nameOfBaseClass = self.nameOfClass self.nameOfClass = String(describing: B.self); } var nameOfBaseClass : String } var objOfA = A() print(objOfA.nameOfClass) var objOfB : B = B() print(objOfB.nameOfBaseClass) print(objOfB.nameOfClass) &amp;#x200B; `Output:` `A` `A` `B` &amp;#x200B;
Try String(reflecting: super)
Always wanted to do something like this!
If you want to get the class name of the view controller, you can add an extension to `UIViewController`: var className: String { return classForCoder.description() } then in your view controller, you can access the class name via the `className` property.
pushing your barely successful startup app via blogspam?
Looks like enums cases cannot be reflected too (children array is empty)
Hey I have another question, is 'list' kind of like an array? and also what is the point of using LinkingObject if you can't change the code in it? Is it just a 'get' where you only receive info from the Linking Object?
Another one? We have Xcode, we have CodeRunner, and now we have this? Not to mention VSCode and every editor that supports LSP (e.g. emacs).
You are just returning 1 in numberOfRowsInSection it should be equals to the number you are displaying in the storyboard 
you could make reflect-able enums like this [https://ijoshsmith.com/2017/04/08/reflectable-enums-in-swift-3/](https://ijoshsmith.com/2017/04/08/reflectable-enums-in-swift-3/) &amp;#x200B;
There's multiple big Slack groups like CoreIntuition, with a few thousand members. Slack supports threads, so new questions are posed as messages to a channel, but all subsequent responses form an out-of-band thread
Do you want to display them on the iPhone? Normal popovers are not supported there. Having said that you can create your own quite easily. You can create a custom UIPresentationController add a background view, define the frame of your view to display and add a view to indicate your pivot where it's from (if you want that). Then just set the presentationstyle to custom and you're ready to go.
I changed it to 5, still not showing.
It is not really reflectable enums. It is a workaround to resolve one of use cases. You still cannot access case names. For example, to reflect @objc compatible enum.
Ok, comment your methods numberOfSections and numberOfRows it will take the default conf, then on the storyboard select your table view and in the inspector select Tableview/content and set it to static cells 
Compare with the images to see what‚Äôs different [demo project conf](https://imgur.com/a/JuEFYZX) 
i see. i'm not very good with reflection. i used it for midi file parsing and didn't know what i was doing. maybe i'll go back and try again. 
https://developer.apple.com/documentation/appkit/nstableview https://developer.apple.com/documentation/appkit/nstableviewdatasource https://developer.apple.com/documentation/appkit/nstableviewdelegate
Thanks. I turned those to comments. It helped in the sense that I can now 'see' that 5 sections are created - when I double click on them they go grey, but still the placeholders are not there. I think it mau have something to do with the storyboard setting here https://imgur.com/a/3DQv7Wo
[https://imgur.com/a/gyLTBCY](https://imgur.com/a/gyLTBCY)
Check my comment with the demo project confit below [demo](https://imgur.com/a/JuEFYZX) 
I turned the remainder of that part into comment and it worked. I had made this code a year ago and can't remember why I added all of this. I hope turning it into comments won't make problems later on. Thanks again.
Yes, that‚Äôs a given. I was talking about the cells, and how to transfer the data over to the other view 
What‚Äôs the performance like? How large of a world can you create with this? 
You can definitely display a popover on iPhone. I don't have the codebase where I did this on me right now, but I think you just have to implement a delegate method and return \`.popover\`, or something similarly easy.
So, is there a reason you chose to use `insert(value, at: 0)` and `removeFirst()` which potentially have to shift every element of the array instead of simply `append(value)` and `popLast()` which only ever have to move the value and change the count?
Okay let's say it in a different way. Popovers are not supported by default. Of course you can modify UIPopoverPresentationController's default behavior.
I ended up positioning it using CGRect by getting the maxY then subtracting keyboard height and the toolbar height. Seems to work on every device size. 
I enjoyed reading this! That said, I have a strong distaste for applications that customize controls beyond the look and feel of the iOS platform‚Äîyes, even when Google uses Material controls. IMO, it takes away from the clean iOS experience which is a large reason people love these devices. What gave your switch away for me was its lack of a shadow on the inner circle / thumb. However, from your approach, it seems like that would be a trivial addition. 
Ya I didn't dive too deep to get the exact shadow values since they documented anywhere. That could probably be improved by sifting through the sublayers of the UISwitch, unless their hidden somehow. I agree that too much customization from native can be distracting to users. While I wouldn't use a material style switch in an iOS app, I would go for a fancy day/night toggle and so I needed this to lay the foundation. 
You've got it backwards. He wants to print B *from A.*
The animation gave it away for me 
Wow long week. Set each XIB to their own variable (i.e. cardOne = cardView, cardTwo = cardView ...etc) and reference that variable in the viewController.
This is an anti-pattern. Subclass/superclass is a one way relationship and you are going in the wrong direction. Why do you want to do this? 
More like the site updates timeline is like the Mac Pros 5-6 years!
Oh, I thought it to be the other way around. He could have a static array ( or set) of names of all derived classes declared in the base class, whenever a derived class is created and derived, that class's name is added to that set. 
Nice just downloaded it. One tip, If you wanted bottom view/button to stretch to bottom of phone on X series you can pin it to the safe area bottom. Example of this is on the stats screen although there are many screens like that. Just a tip. Otherwise looks good to me. 
&gt; Code will fail gracefully when try to access optional variable with nil value, no runtime error will be trigger. There's no "fail", it's just another code path.
For NSTableView, if you want it to mostly behave like UITableView, you just need to make sure the following is set: intercellSpacing = NSMakeSize(0, 0); columnAutoresizingStyle = NSTableViewUniformColumnAutoresizingStyle; headerView = nil; allowsMultipleSelection = NO; allowsEmptySelection = YES; usesAlternatingRowBackgroundColors = NO; Regarding making it one column, you need to... well, set it to have just one column. // Just assign a random column for now, yolo NSUUID *uuid = [NSUUID UUID]; NSTableColumn *column = [[NSTableColumn alloc] initWithIdentifier:]; column.resizingMask = NSTableColumnAutoresizingMask; [self addTableColumn:column]; Samples are in a pseudocode of ObjC/Swift as I'm on mobile, so you'll need to forgive me. Wonder if this kind of thing is worth writing a blog post about, given the lack of documentation/tutorials...
Thank you for a great point, I've updated the article. I didn't even think about that, thank you.
All my VCs inherit a base VC. I need to track how much time user spends on each screen for analytics.
&gt;It's easier to write (or "borrow") high-performance code in C or C++ and just wrap it an Objective-C function than to write C-level performance code in Swift. you can just call c methods in swift, no wrapper needed (just #include what you need in a bridging header) &gt;You're not required to check the shit out of everything ... you should check the same things in objc
Since Night Shift tints the whole screen, you really don‚Äôt need to change the colors of the game. The colors that are blue will be tinted slightly but the variation will keep them close enough together that you don‚Äôt really need to do anything. If you really, really wanted to, you could just add a customization option for the colors in the settings.
The problem is that some colors may become difficult to tell apart with night shift activated.
Possibly, but the user can always disable Night Shift or, if you include a color setting, switch the colors around. Otherwise I can‚Äôt think of anyway to do what you‚Äôre thinking of, sorry.
There's no way to tell if users have crazy color settings on their monitors or if they're using their device/computer in glare, either.
You simply need enough difference in the colors that when the colorspace gets "squished" through the shifting you can still tell the difference between the colors. Think of it this way, you have colors A, B, C, and D. They are so many units "difference" apart from each other. When the color is shifted some of those differences are closer than they used to be. You need to compensate by increasing the differences, otherwise your game difficulty will change based on the shifting of the screen. Remember, the colors can be shifted in other ways too. You can [choose a tint for your screen](https://support.apple.com/en-us/HT207025), have different levels of brightness, use True Tone to change the color based on the surroundings, and so on. If you're doing a color match game that relies on minute differences in colors then there are times your game difficulty is going to change due to factors external to your game. You'll have to compensate either actively or passively ‚Äì or just accept that the difficulty of most games will change based on environmental factors.
Consider adding a ‚Äúcolour blind‚Äù mode that adds symbols to each colour that the user can enable if they need help. Can help deal with a whole load of colour recognition issues. E.g. personally I find colours hardest to discern in full sunlight on a bright screen. 
i've been using swift pm for builds instead of xcode, works great
&gt; you can just call c methods in swift, no wrapper needed (just #include what you need in a bridging header) You cannot write C in Swift. You can write Swift that has C performance but it's not very pretty. Yes you can call C from Swift because Swift supports Objective-C and Objective-C has C. &gt; ... you should check the same things in objc Not per s√©. They're different languages. Calling a method on nil is fine and could be part of your programming style.
It's possible to call JavaScript code from Swift thanks to [JavaAcriptCore](https://developer.apple.com/documentation/javascriptcore). After quick googling I found [this](https://www.thesmythgroup.com/in-development/how-to-use-npm-packages-in-native-ios-apps/) and [this](https://stackoverflow.com/a/48439499) answers. Haven't tried them by myself though. Let me know if you try it works for you, please.
I agree, this does seem possible.
* Trying to learn coordinator pattern * Customizing UISegmentedControl - I wasted too much time at work trying to customize it, finally ended up writing my own. I couldn't accept defeat, so I'm trying to do it during holiday time :)
Does someone knows specific date of release? We have build custom framework and we can't use compiled version of it because of no binary support. We definitely won't go to objective c because of lack of new features 
Isn‚Äôt it typically released at wwdc? 
Are you using storyboards or xib files? Are you using bindings? The answers to those questions are going to dictate how you deal with updating the detail view when the selection changes in the master view. The easiest way to do the master-detail interface is to use a xib file and bindings. You can create an array controller that manages the notes and bind the detail view to the array controller's selection. Working with storyboards is going to be more difficult because the master and detail view controllers are separate entities. Assuming you have a split view controller with a table view for the master view and a text view for the detail view, you will have to implement the delegate method `tableViewSelectionDidChange`. You can use the `parent` property for the table view controller to get the split view controller. With access to the split view controller, you can get the text view's view controller. You'll have to write a function in the detail view controller to update its contents.
It was stated to be released in late 2018 and not it is postponed to early 2019. But what early means?
No, that's why it says "early next year".
The main thing I'm waiting for is async await. 
I hope they finally fix issues in MPMediaPlayer
Won‚Äôt have to wait that long, the goal is early 2019
that would be an iOS SDK release and not a Swift release
Can you explain the difference? 
Swift is a language. It defines HOW to do things. SDK is a library that uses a language. It‚Äôs a shortcut of doing something. Usually used when you don‚Äôt wanna code the thing yourself. SDK‚Äôs from Apple are also close to the metal than 3rd party. 
swift, the programming language, is different from the frameworks you use for the different operating systems it's compatible with. For example Apple will release iOS SDKs along side new iOS versions - so iOS 12.1.2 is the latest version of that. That's where MPMediaPlayer would be updated. Swift 5.0 is just going to be changes to the programming language and has no impact on what the various platform SDKs might provide.
Thanks for the suggestions! I've actually updated all my back buttons in my latest build which is just currently in the review stage, so I should be pushing an update out within the next 24 hours all with new back buttons (based on a suggestion from another Redditor). 
Thank you 
Thank you 
Create an array, in viewDidLoad append the two sound files to that array. Create a method that generates a random number between 0 and 1. Call the method when you click the button, use the number generated to access the element in array. One you get the element from your array, play it. &amp;#x200B;
Can anyone explain what he means by ABI stability?
That's definitely not in Swift 5, and even unlikely to be in Swift 6. &amp;#x200B; [https://forums.swift.org/t/concurrency-async-await-actors/6516/68](https://forums.swift.org/t/concurrency-async-await-actors/6516/68)
Yeah, I know. I just see so many places where it would make my code cleaner.
I think [this](https://github.com/apple/swift/blob/master/docs/ABIStabilityManifesto.md) provides a good explanation.
If you write a library in Swift 5, then when Swift 6 comes out people can use your library without you having to migrate your library to Swift 6. 
Sounds great, but how does that even work?
I‚Äôm not too versed on the subject, but [here‚Äôs more information](https://www.reddit.com/r/swift/comments/67z7dy/what_is_abi_stability_and_why_does_it_matter/). 
What do you mean by ‚Äúbuilt a custom framework‚Äù? If it‚Äôs your own internal framework, used by your own internal clients, you don‚Äôt need a binary framework. If it‚Äôs your own framework you want to ship to external clients as a binary framework, ABI stability is not what you need, you need module stability, which is a stretch goal for Swift 5.
What do you mean? You want to know what framework to use to code server side in Swift?
Thanks for your help. I actually got it work. The trick was putting a UIView animation in the didlayoutsubview method in the popup VC https://imgur.com/a/AVqppXh
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/KyyBUTx.mp4** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20ecafb7l) 
This is what‚Äôs needed: `func adaptivePresentationStyle(for controller: UIPresentationController) -&gt; UIModalPresentationStyle {` `return UIModalPresentationStyle.none` `}` 
It's hundreds of things working together. Here's two concrete examples: * If you have a subclass of a class in a library, the compiler-generated code in the subclass that accesses stored properties will have to call a function from the library to get the size of the superclass, since a new version of the library might add properties to it * Many functions that used to be @inlineable in the standard library no longer are in Swift 5, which allows their implementation to change in the future (since their implementation is entirely in the library, rather than getting splatted into each app that uses it). In some cases this required rewriting pieces of the standard library that were relying on inlining for good performance. Similarly, anything marked @usableFromInline as of Swift 5 is now effectively required to be there forever, since Swift 5 apps will continue to call it. Some of these things are in Swift 4.x, or even earlier versions, since it's a massive project that's been in the works for a while.
Or just use `randomElement()`: print([1,2,3].randomElement() ?? 0) 
Your question isn't asking something that makes sense. Try explaining what you're trying to figure out so maybe we can get a better idea what you're looking for.
Tl;dr is that it means Apple can ship the Swift library with iOS instead of having to bundle it with the app that was compiled before being submitted to the App Store. Once the ABI is stable, then the app can use what‚Äôs on disk instead, which makes launching faster and the binary size much smaller. 
Any chance? @MeanGreenBeanOnBar ?
My interpretation is to provide easier bridging with more dynamic languages like python and JavaScript. I don‚Äôt have the impression that you‚Äôd typically use this for general swift coding. 
Oh ok. 
save it as data via archiving
Oh I thought it would ensure that I could compile framework and they use it in with every swift version. I mean I compile project with swift 5 and if they use swift 3 they could use my compiled framework.
It doesn‚Äôt matter if it‚Äôs in php or not. If they don‚Äôt have an api that provides you with json, xml or something similar you‚Äôll just have to parse the DOM.
You definitely need an online presence, so a website to share with people is a great idea. Since you programmed your app, I‚Äôd say build it yourself. A nice and simple one shouldn‚Äôt take you longer than a few days if you‚Äôre just starting out with html, css and js :)
https://github.com/apple/swift/blob/master/stdlib/public/Darwin/Foundation/JSONEncoder.swift#L1188
Is it maybe only internal to Swift? https://i.imgur.com/EkLLpub.jpg
but if I created library with swift 5, will it support swift 3 or swift 4.2?
&gt;print(\[1,2,3\].randomElement()!) Yes that is correct, I was merely describing the logic. Syntax-wise there can be different ways to achieve it.
What does the fixit say? That should be your first port of call.
Fixit suggests inserting a force cast, but that shouldn't be necessary if a type conforms to a protocol. 
what do you mean?
I mean, you could google your problem :) https://developer.apple.com/documentation/photokit/phasset/1624732-fetchassetswithlocalidentifiers save your ids as strings to core data instead then get you phassets via that fetch by ids function
JSONDecoder is a wrapper around _JSONDecoder which conforms to Decoder.
Unfortunately, that won‚Äôt be the case until module stability. ABI stability means object files compiled with older versions of Swift (starting with 5) can be linked with object files produced by newer versions of Swift, and vice versa. What that doesn‚Äôt give you is a stable format for describing the interface of your library ‚Äî the stuff that‚Äôs normally in the `.swiftmodule` file. A ‚Äúframework‚Äù can be thought of as the combination of the `.dylib`, which contains the compiled code, and the `.swiftmodule`, which contains a full description of the public API. That module format will still not be stable in Swift 5. There‚Äôs work being done (I‚Äôm actually working on it) to stabilize the module format.
Well, you need a privacy policy online somewhere so you're going to need some sort of web presence anyway.
So I should rewrite everything in objective c? It is strange to be honest. Swift considered primary language but it has less usage than objective c. 
Rest assured, we‚Äôre putting a ton of work into module stability.
So does JSONDecoder conform to Decoder?
No. You can see the full source code in Apple's github that I linked.
These types intentionally don‚Äôt conform to the protocols because they offer a different API surface than `Encoder` and `Decoder` themselves. It wouldn‚Äôt make for great API to have both a top-level `encode(_:) -&gt; Data` method *and* give access to containers, for instance ‚Äî what would it mean to mix and match calls that way? So the top-level types offer configuration options and a top-level `encode`/`decode` method, and internally, contain `_JSONEncoder` and `_JSONDecoder` types which *do* conform and offer access to those APIs.
No, but that's not too much of a problem since it's easier to migrate your app to a newer version due to dependencies, than to push out an update of your library for newer versions
[removed]
Maybe you can send me some examples of this kind of stuff. Because I'm new to swift.
maybe google around buddy :) I gave you a good lead...
Can‚Äôt sign up for corporate apple membership without a website (domain owned by your company). Not sure what content is required on that site, though. 
I have five+ years of experience developing. I have recently been tasked with something that I‚Äôm not familiar with and am also completely lost. Lucky for me, I have lots of practice being in this situation. I am getting better and better at finding my way, so much so, that I am fairly comfortable feeling lost becauseI know that I‚Äôll eventually figure it out. I believe that there is no single aha moment for programming in general. This field is far too vast for one person to fully understand . Instead, there are thousands of little aha moments, where you understand enough of a particular domain to accomplish a task. If you are feeling overwhelmed, you may just be advancing too quickly. Try just working through different tutorials until you can find ones that you can complete. Smaller tasks offer more little aha moments, and people learn through repetition. Once you get practiced at some of the basic tasks, you‚Äôll start to notice patterns in the code, and be able to understand it more intuitively. Most importantly, remember that it takes time, practice, and patience. There are a handful of super genius coders out there, but most professionals are just people who have enough patience to keep working at understanding new things until they know enough to get the job done.
I don't think that this answer is worth to be given an award now
That makes sense. Thanks for the explanation!
Outstanding answer! Thank you for taking the time to create such a thoughtful response.
https://github.com/devxoul/Then if you need postinit customization and want clearer code.
Hello everyone. Is there any pod / library i can use for KYC UI/UX ? Thanks.
&gt; but feel completely lost a lot of the time That is the way it is. &gt; Im I'm*
Thank you! *If you‚Äôre policing grammar, you didn‚Äôt do a very thorough job.
I remember an ‚Äúaha‚Äù moment years ago when struggling to understand nested data. I was working with the Mac UI control NSOutlineView (a tree view) which expects your model to have a parent-children relationship and I wanted to delete a child. Finally that ‚Äúaha‚Äù moment hit and it all made sense. It was like a background worker thread in my brain that finally joined on main :) Also obligatory Breath of the Wild reference: https://youtu.be/XMgK_E6_GAE
Build your own, a simple landing page is easy to make
One aha for me, that the map functions on sequences replace this pattern: var thing2Accumulator = [thing2]() for i in 0..&lt;thing1.count { newItem = transformIntoThing2(i) thing2Accumulator.append(newItem) } 
Been developing for a _long_ time, and frequently have a-ha moments, usually in the mode of "oh, so that's how it works under the hood". I find that if I can understand what's going on at a lower level (this is how variables work, or this is how method dispatch works), then I can use the higher-level features with a lot more confidence.
I am developing my first own app. In the beginning I watched a lot of tutorial videos and copied the projects, but got bored and lost my motivation pretty soon, because on the one side the material was so overwhelming and on the other side I didn‚Äôt have the feeling getting closer to be developer. One day (after a long time doing nothing) I said fuck it and started working on my app. Now I spend a lot of time searching solutions for the daily problems I encounter, what leads to a lot of ‚Äûaha!‚Äú moments, what motivates me a lot. Even if a lot of this moments are, ‚Äûaha! I fucked hp completely yesterday.‚Äú I like this moments, because here I have the biggest feeling of making progression. 
I think that the question has been answered on the technical grounds, but reading the comments, I'm not entirely sure that the full implications have been explained. The next iOS and macOS release will be the first ones in which Apple can ship Swift-native frameworks. This has huge implications, the biggest one being that new platform features might not be available to Objective-C code bases.
It‚Äôs pretty easy to do on your own and I feel it helps a lot. I built an API for my app and then just made a simple landing page with raw HTML/CSS and serve that through the home route of the API.
What exactly is the question here? 
Hi anybody listening, when first starting this level of Learn to Code 2, I used this: var gemCounter = 0 for i in 1 ... 5 { moveForward() collectGem() } gemCounter = +1 However, being the 2nd level of Learn to Code 2, I feel like I need to set my gem counter to 1,2,3,etc every time I collect a gem as I move through the level. Reason why I am confused is because from my understanding, shouldn‚Äôt I state the actual amount of gems on the gem counter after every time I collect the gem? Then at the end must I have the total number of gems collected stated? OR is this correctly done? I‚Äôm very new to variables and coding so please don‚Äôt hit me with the most technical jargon. But I would really appreciate the help. Thank you 
Man, it‚Äôs crazy that you say this. I have been reading literature, watching videos and walking through Udemy courses and feeling totally overwhelmed. Today, I said ‚Äúfuck it‚Äù and started making my app as if I know what Im doing. I seem to retain more if the solution pertains to me. I love this answer and Im glad to hear someone say it.
I don‚Äôt really know anything about playgrounds or this particular challenge, but to fix the syntax you‚Äôd have to write: var gemCounter = 0 for _ in 1...5 { moveForward() collectGem() gemCounter += 1 }
If you are going from 1 to 5 just set gemCounter = i
All solutions are available in the Learn To Code Teacher's Guide availble on Apple Books.
Yeah that‚Äôs also possible 
You can directly assign a value to a variable like this: `var gemCounter = 0` or you can change the current value of it: // Increase by one gemCounter +=1 // Multiply by two gemCounter *= 2 // Divide by three gemCounter /= 3 // Subtract four gemCounter -= 4 This is identical to the following: // Increase by one gemCounter = gemCounter + 1 // Multiply by two gemCounter = gemCounter * 2 // Divide by three gemCounter /= gemCounter / 3 // Subtract four gemCounter = gemCounter - 4
Nice to hear, that I am not the only one. It feels so much like a waste of time, even when I know it‚Äôs not. Learned a lot, but forgot most of it because a lack of practice. Now I dedicate a part of my programming time to reading some theory stuff or watching a video not directly related to my project. But most of the time I search for solutions for the the problems I am directly facing. 
You could even pass i into moveForward, and remove that property. 
I have never seen anyone pass the new instance into an initialization closure like that before - it's pretty clever.
I'm not sure how you think that adding ABI stability in Swift 5 will impact Swift 3 users at all. 3 is still less than 5, right? This isn't a minor feature that you can just backport to an earlier major version.
I think this is wrong, because you have to collect the gem at each step. 
Or just use gemCounter as the iterator. 
I like Xserve, myself! Probably not too popular these days, though.
I always forget that it's possible. Incredibly handy with date formatters. 
Still no generic interfaces :(
I don't know. Do you want help or not?
This is super informative! I was just confused as I I‚Äôm realising there is never just one way to do things. So with the way these variables can accumulate, I was wondering which way they can be displayed. Everybody has been so helpful with answers and insight here! Thank you! 
Checking out as far as going the mobile route. I was watching a youtube chat and the guy made it very clear that without any college degree, my chances for being an ios developer will be very, very slim. Most jobs will go to college grads. He made it clear though that with web it's a lot different. Unfortunately I'm not at that age where I can take my chances. So it's back to being between web or ux/ui.
What is this app or website?
It's Apple's Swift Playgrounds, an iPad app. https://developer.apple.com/swift-playgrounds/
Cool thx!!
The question should be phrased "What are the pros and cons of TDD?" Unit Testing as a development approach is unrelated to using Swift. I'll talk about some Pros. 1. Unit Testing is built-in to Xcode. You have to choose to ignore it. 2. Code that has a strong unit test suite can be fearlessly refactored. 3. A good unit test is a great way for a fellow programmer to learn how a Class is supposed to work. 4. The habit of writing unit tests tends to encourage better designs because of pushing behavior into testable modules of code. 5. Unit tests capture the requirements better than any documentation. 6. When you find a bug, the first thing you should do is create a failing unit test that demonstrates the bug -- leads to better understanding.
Take a look at the App Development with Swift in the Everyone Can Code series by Apple. It's pretty good.
Right, gemCounter would be equal to 1 at the end
+= 1 not = +1
I did this but I like these others too. Var gemCounter = 0 while gemCounter != 5 { moveForward() if isOnGem { collectGem() gemCounter = gemCounter + 1 } }
Great list. Here are my cons: 1. Takes more time to develop / maintain an application. 2. Increases complexity of the project. I used to work for consulting agencies. We didn't write tests. &amp;#x200B; &amp;#x200B;
+ for all of that, but don‚Äôt forget that tests are also the code, so they also can contain bugs, require time to write it etc. Also, your project and architecture should be ready for unit testing. If your codebase is a mess, then you won‚Äôt be able to write any tests that make anything useful. As a rule of thumb consider the following: - never believe a user, always check user input - each function must check its input parameters by itself - always consider that any call to external API may fail (network request, query to a database, method call to a third-party library) and be ready to catch an error These simple rules will help you avoid sooo many bugs and live happy live without unit tests for quite a long time. 
What is the font Playground uses ? I'm curious.
Fix the spacing between your iteration `1...5` instead of `1 ... 5`
I would suggest using wordpress if you're new to building sites - it does most of the work for you. If you are familiar with the AWS platform - you can use RDS and EC2 to host a wordpress site - its cheap and effective. (tons of articles on how to do it)
I agree with 1, 2, 3, and 6. In the case of 4 the opposite might be true. I‚Äôve seen code bases where really stupid things have been done by not very good programmers for the purposes of making the code more ‚Äútestable‚Äù. 5 might be the case in many situations, but unit tests cannot necessarily express context on requirements, and in some instances documentation might be a better source of information.
You can get the keyboards height from the keyboard info dictionary, simply set your textFields height anchor or y position equal to the negative value of the keyboards height. `yourTextFieldHeightAnchor.constant = -keyboardFrame.height` Call this inside a UIView.animate {} and call layoutIfNeeded() to get an animation.
Here is an doc about this topic. As it is the official Apple documentation I would prefer that way to handle the keyboard. https://developer.apple.com/library/archive/documentation/StringsTextFonts/Conceptual/TextAndWebiPhoneOS/KeyboardManagement/KeyboardManagement.html#//apple_ref/doc/uid/TP40009542-CH5-SW7
I don't find both of you approaches very good practice or safe at all... You don't need to put everything inside scrollView to scroll the content... What about moving just the window/ViewController view when the keyboard appears? &amp;#x200B; I will start by criticizing the solutions: &amp;#x200B; 1st one looks cool... But it's hell to count all the constraints and you can easily cause some unsatisfied constraints warnings and make contrainting subviews hell... And from UI/UX perspective it's strange to move just some labels (If I got this right) &amp;#x200B; 2nd is super complicated for such a case.... You don't need to add the whole viewController view to scrollview just because of this one simple thing &amp;#x200B; Now the proposed solution: 1. On ViewDidLoad start observing the notification of keyboard hide/show 2. Create the methods which will observe the notifications and get the userInfo from inside 3. When the notification tells the keyboard will show set y of view frame origin to - keyboardHeight 4. When the notification tells keyboard will hide, set origin back to 0 &amp;#x200B; &amp;#x200B;
Both ways work, but adjusting the constraints can get extremely messy in complex situations. @dogeamazed is right. One point to note, is UITableViewController does this automatically for you if your textfields are inline in a cell. Pretty sure UICollectionView does too.
UITableViewController manages this automatically.
&gt;Both ways work, but adjusting the constraints can get extremely messy in complex situations. Interesting, thanks! I didn't realize those views had that functionality built in. So is building out a form via a TableView not uncommon/the desired way? Right now I'm building mine out by programmatically adding each input. Thanks!
Thanks! Similar to my response to @pete-morris, are TableViews a common way to build out a form? I didn't think of that route, but it does seem nice - especially with scrolling functionality built in &amp; adjusting content when the keyboard is visible. Thinking of it now - currently I am adding my inputs programmatically, but it may be easier to just build cells as opposed to having to worry about height/spacing between each element. Thanks!
Thank you! I briefly saw a similar solution on StackOverflow but steered clear since I saw it was using notifications. I haven't worked with them before but I had one doubt/question - will I need to prompt the user on app startup with permission to allow/deny notifications, or are these separate of Push Notifications? Thanks!
Check out https://github.com/hackiftekhar/IQKeyboardManager
If you look at any of Apple‚Äôs apps, it‚Äôs clear that they use UITableViewController with a grouped style. See Settings, Health, new calendar event, etc. Is it common? Not as much as it should be, because either developers don‚Äôt know about the functionality or they‚Äôre trying to build some UI that violates Apple‚Äôs [HIG](https://developer.apple.com/design/human-interface-guidelines/).
I‚Äôve not looked at the code but I assume it‚Äôs using NotificationCenter to assign an action on a keyboard shown notification. Those aren‚Äôt the same notifications that users have to allow; they‚Äôre used like JavaScript events to allow communication between different parts of your app amongst themselves or with system components like the keyboard. I‚Äôve actually used them heavily in my apps for more than just keyboard notifications.
It depends on the situation (and the reason one approach would be desired over another isn't really because of the keyboard). If you look at the iOS Settings or Contacts app, they both use tableviews with inline controls (including textfields). Both of those apps involve long lists of settings and information, and therefore benefit from having cell reuse (the keyboard functionality is a nice bonus, but not the reason for choosing this approach). But, if in your situation you've got a couple of textfields and using a tableview feels like overkill, then it probably is. If you find yourself adding a lot of controls into a scrollview, then a tableview (which recycles its cells) would be the more efficient approach.
Notification is the word used for responding to changes in device state, not Notification Center notifications.
You could easily use this library iqkeyboardmanagerswift, two lines of code and it helps through out the project. [iqkeyboardswift](https://github.com/hackiftekhar/IQKeyboardManager) 
people's* days peoples = more than one group of people, generally of a country.
Autocomplete is wonderful until it isn't. The same goes for autocorrect while typing. Always check to make sure your computer is correctly guessing what you meant!
I'm so sorry for that
I don't agree that this should be the correct way to implement this behavior, and my reasoning is that there are completely valid use-cases for adjusting content WITHOUT being in a `UIScrollView`, which Apple's approach takes as an assumption If this is your situation then it absolutely should be the way to handle managing content, but it's specific and **will not work** unless you are using a` UIScrollView` OP's first idea is generally the way I've seen this implemented in views that do not have the luxury of leveraging a scrollview. If you have structured your constraints properly (and barring some specialized UI) there should be only one constraint you would have to change to achieve the desired effect, then all views with dependencies will adjust automatically 
Blame the Xcode team for prioritizing **de**select over select in their autocomplete code.
*This developer pressed Tab, you won't believe what happened next...*
This guy sucks
I have never made this mistake so a good lesson learnt for me as well.
The /r/Swift grammar nazi
Or use less confusing names, like didFocus, didBlur. 
Agree with all the above points. However, they don‚Äôt specifically relate to test driven dev or write tests first. 
It‚Äôs sorted alphabetically. A smarter algorithm might be more useful in theory but would be much less predictable for users. It wouldn‚Äôt be crazy for Apple to make this a special case in their autocomplete code though.
Happened to me once. Then I started typing ‚Äúdids‚Äù to get the right function to autocomplete.
Going from autosuggest in Visual Studio to XCode is a pretty big dick punch.
I could probably have stated #4 with better clarity. As a person that has worked in a TDD environment for 15+ years (Smalltalk, Objective-C, and Squeak) I say confidently that tangled code is hard to test; untangled code is easier to test. The goal is not simply to have a test but to have a design that is factored well with out "action at a distance". That code, at least for me, comes naturally by needing to write good unit tests.
Strictly speaking that is true. I tend to write my test first as a way of understanding the requirements. But none of the reasons I gave explain the benefits of writing tests first.
I have a lot to say about that, having worked as a team lead on many large scale mission critical applications for over 30 years. 1. I don't get religious about it and do not believe that one size fits all. 2. It depends on the application. For something that has little expected sustainability, I can see that writing unit tests will add to the overall development costs with likely little cost benefit. Large scale projects however, that depends where you are coming into it. If it is a new project there's no good reason to ignore writing unit tests to clarify all the requirements and designs. For long term sustainability a strong suite of unit tests makes for a software product that costs less to support. 3. I also used to be both a consultant and consulting manager for many financial and insurance companies developing complex crucial software. Teams that developed with unit tests were more likely to be successful for longer term life of the software. 4. In a nutshell, consulting teams that don't take long term costs to maintain a product into account are doing the client a disservice. The problem is that some clients don't want to pay the up from costs and are generally backing into unmanaged software debt with short term management choices. &amp;#x200B;
I was expecting someone to push back on this! I totally agree with your points. However, like you said, there is no "one size fits all". I believe that any practice that has advantages must come with disadvantages. I think my two points on time and effort is fair. &amp;#x200B; Don't take this the wrong way, but perhaps working on "large scale mission critical applications" is giving you bias towards TDD. By definition, mission critical work is unforgiving towards bugs and regressions. Anything that gets shipped can have drastic business implications and may affect hundreds of thousands of users. In scenarios like that, the upfront cost of TDD is well worth the security that it provides. However, this upfront cost is real and should not be taken lightly. &amp;#x200B; Startups start small. They have small budgets and they need to stay flexible. Subscribing to TDD is a process that no only elongates their feature work but also bolts down their application. It takes more time to make changes. Sure, you'll get an application that is more resilient to bugs, but perhaps the 30% overhead of TDD may have lost the company valuable opportunities. &amp;#x200B; I take pride in my work and I do not want to think that I did my clients a disservice. All things come with advantages and disadvantages. &amp;#x200B; &amp;#x200B;
Also a small thing related to this I experienced today. Make sure you include tableviewdelagate in the viewcontroller. Took me a while to figure that one out lol
How do I know if a URL is structured with any of the mark up languages you mentioned? &amp;#x200B;
A little late to the game but - I'll put my backing behind @mversteeg3 suggesting IQKeyboardManager. Used it in a project of mine and it works flawlessly in nearly every use case we have, and if it doesn't, it can be easily disabled for individual view controllers. Dead simple. 
Markup language? What do you mean? A website is built on HTML with a ton of other technologies thrown in nowadays. How do you want to parse that page?
How are didSelect and didDeSelect confusing? The names tell you *exactly* what they‚Äôre intended to do. On the other hand, didFocus may mean something different depending on the control type, and it isn‚Äôt clear what focus actually means. While didBlur means absolutely nothing to me; what does blur even mean for a control? Are its visuals blurry?
Confusing by misreading. Proof is in he link that it does happen. 
For me it makes sense, but probably because I come from webdev ;)
FWIW, my comment on didFocus is influenced by Windows development, where controls can have focus but not be selected (I guess it‚Äôs the difference between being explicitly clicked on and being the control that will respond to keyboard input), you see that commonly on table views where a cell that is selected doesn‚Äôt necessarily have focus, while a cell that has focus isn‚Äôt necessarily selected, but you can of course have a cell that is both selected and has focus. Now that I think about it, I‚Äôm not sure that‚Äôs even relevant for macOS, and certainly not iOS. Though I‚Äôll clarify my original point by saying that I think didSelect and didDeSelect are pretty explicit and a good compromise for a range of developer backgrounds. 
Could be a cunt punch too!
You look at the output and the headers
One click away from that web page: http://www.events.msu.edu/main.php?view=subscribe They list several ways to get calendar information in structured and easily readable formats rather than trying to parse HTML. 
In particular, I strongly encourage OP to use the JSON link at the bottom of the page. You can use the JSONSerialization class built into Swift to parse it.
It does not seem that way at all... Kotlin and other languages improve much faster, have more features. Already regret not using Objective C
Do people not review their code before going to Stack Overflow?? This is super easy to catch simply by reading the method signature. 
Until you start developing for tvOS which does have a focus engine and APIs containing the word focus üòÇ
Finalizing my first application without a storyboard; an easy water guide to track your daily water intake. 
Great to hear! How‚Äôs that going? 
*In general* you want to use a `UINavigationController` whenever you‚Äôre navigating from one screen to another. When one screen comes in from the right, and you can swipe it back away from the left side of the phone - that‚Äôs `UINavigationController`
Sometimes when you fix on some idea it‚Äôs hard to see what‚Äôs wrong. Sometimes some pilots try to land on the parking lots at night . Even though all instruments tell the landing place is next to it, human brain is fixed on what it thinks is right, which in this case is the brightest place down there. 
In cae anybody is worrying , I got the job folks.
So suggest it. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Apple should put the Swift style guide in Xcode's documentation window](https://www.reddit.com/r/iOSProgramming/comments/a95hfw/apple_should_put_the_swift_style_guide_in_xcodes/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Have you tried Dash? It has a dark mode.
Done, #46933917.
Very good, hopefully they make the improvement.
Navigation controller is meant for ‚Äúpushing‚Äù view controllers in from the right. Opposed to ‚Äúpresenting‚Äù them from the bottom. Also the navigation controller is used to create a navigation bar that works perfectly with pushes (ie. Updating the nav bar title during transition, updating the nav bar buttons, etc) You should use the navigation controller for the cases above cause its so well implemented on ios that makes no sense to reinvent the wheel. To be honest, its pretty much always lol. Because u always need a nav bar to add a title to the vc, or to add a top right/left button. And except for game apps, 99% of the apps out there need a way to ‚Äúpush‚Äù a screen in for ‚Äúnavigating‚Äù. Its like you are on a web browser, u click on a link and takes you to the next page. Thats pretty much a push without animation. From user perspective, the nav controller gives them the ability to literally navigate the app Pushing vcs in the navigation controller is so essential and basic that later you ll ask ‚Äúwhen should it NOT be used‚Äù lol.
The Vapor discord is also very active.
What app is that in the image?
Imgur
Sorry I explained myself badly, I meant the app shown in the image not the imgur the image host
Oh that‚Äôs xcode
When your app has a natural back/forward hierarchy where forward is pushing a new view on top of old content and back is discarding the current view to reveal what‚Äôs behind.
When you have a series of screens where that represent a general/detailed design or sometimes steps in a process if they are allowed to back up and edit. I have seen UINavigationController being used way too much. Some seem to automatically throw it in every app they write no matter what the design.
You need `func`: func didSimulatePhysics(for scene: SKScene)
Setting aside that VSCode is Electron and runs very well... The documentation for this is still annoyingly thin (read: nonexistent), like so much of Cocoa/AppKit these days for some reason, but it boils down to this: NSWindow's automatically support tabbing, you just have to do some work to enable it. window.allowsAutomaticWindowTabbing = true window.addTabbedWindow(_:ordered:) If memory serves correct (it's been awhile since I bothered with this), tabs should by default appear under a toolbar, so you should be fine. If they don't, well, I'd need to crack open Xcode... Happy holidays (or whatever you celebrate~)
The hard part about learning to program is, you don't learn it by reading books or learning stuff by heart. Instead you have to actually do a project. Just something simple, to understand all the concepts. When I started programming (in Turbo Pascal) my teacher started out with a calculator. Stuff like create a function, which returns for a given year wether it is a leap year or not. or How many days passed since the Gregorian Calendar was instituted? And the other way. This many days passed, which date is it. Or when is Easer? &amp;#x200B; It's all quite simple, but doing this exercises he will start to understand the concepts and it's the only real way to remember the fundamentals.. We all have to walk through this pain ;)
I got it working, thanks for the help man. Haha yeah Electron doesn't run too well when you have a million files open xd. Happy holidays to you too dude :)
This is good advice. Programming is all about solving problems, so create a problem to solve and just work through it. One of my first ideas was to just create a deck of 52 cards and have it deal two hands of Twenty One. This is a simple program that can grow with your skills as you learn.
specifically, it's Xcode's developer documentation, open Xcode then press &amp;#8679;&amp;#8984;0.
I totally agree. He should practice as much as possible, even if it is really simple stuff. It‚Äôs like learning a new language, you just have to revise and repeat until you get an intuition for it. I really don‚Äôt know what level your boyfriend is on and what exactly he‚Äôs doing, but a few places to start and I could recommend are: * the Swift playgrounds app on iPad for introducing swift if he‚Äôs doing some sort of iOS development boot camp * the p5.js Web editor in conjunction with the coding train YouTube channel for a simple intro to web development * [Project Euler](projecteuler.net) for some mathematical/logical challenges, which you can often only solve with the help of a computer, so it‚Äôs good practice to try and solve some of these using the programming language is question (the questions get harder sequentially) * i often find it useful to also search for videos about the topics in question and follow along by writing the code as well (even if it‚Äôs just copying the video) this is obviously going to depend on what your boyfriend is doing but a few great channels I like include Brian Will, Ben Eater, Computerphile, Lets Build that app, Live Overflow, Michael Reeves, Tom Scott... I wish you guys the best of luck and I hope I could help a bit
I am working on a programming language called [Swizzle](https://safelyswift.github.io/Swizzle/). It is inspired by Swift's syntax. Although it is interpreted, Swift is so \_\_\_\_\_\_\_ fast that most programs execute in under a second. Here is the common program to showcase Swizzle: objc Person { decl name; decl age; } func eat(person) { print("Eating", person.name, "cause why not?"); } var p = Person("Tim", 99); eat(p); As always, if you want to contribute or submit code, my GitHub is attached to the [website above](https://safelyswift.github.io/Swizzle/).
I would recommend using two books for someone getting into iOS, Introduction to Swift and App development with swift books which are available in Apple‚Äôs Book app , these are developed by Apple and self guided study material which does have lot of hands on examples for understanding basic concepts and as you continue to learn you will find smaller projects in the book to learn more concepts and improve skills further. Good luck and happy learning.
You cloud have a class called "Transfer" with a static var called "switch". Set an IBAction so that updating the switch updates the \`Transfer.switch\` property. Then the you open a new tab access \`Transfer.switch\`
Using CoreLocation and CoreMotion will give you ultra good results
Break problems down into smaller ones. Try to solve one thing at a time. Program one simple thing and build on that. The simplest solution is often the best one. I suggest he check out www.hackingwithswift.com. Paul, (the guy who runs Hacking With Swift) is pretty good at making things simple. Take it nice and slow. Learning to program takes some effort, but in the end it‚Äôs usually worth it. 
It‚Äôs just like learning how to play a video game or sport, the only way to get better is by doing it all the time. Reading about it won‚Äôt really help unless your applying that information.
Thanks for asking. it's going well.
I apologize, what link are you referring to?
To quote my professor when I asked why it seems like CS seems to be much harder than other majors and requires us to do tons of self learning and personal projects: ‚ÄúCoding is hard AF, that‚Äôs why it pays the big bucks.‚Äù Just reassure him that none of us knew wtf we were doing in the beginning, 4 years of experience + a bachelors in CS and I‚Äôm still struggling and guessing on a daily basis. My company‚Äôs senior engineers with 15 years still are too. If he likes it then he needs to keep pushing forward, if he doesn‚Äôt like it then quit, cause it‚Äôs always gonna be like that. But don‚Äôt quit just cause it seems impossible. 
So, unless I'm wrong, this gets into some ancient and weird territory. Those menus are some of the last vestiges of Carbon... which sounds insane to say in 2018. I read some StackOverflow post awhile back (I'd link it, but I'm on mobile and shitty signal for the holidays) that basically backtraced it all to determine that they don't actually go through the Cocoa event system, they're still Carbon events - just privatized. No idea if this has changed, so take it all with a grain of salt, but the transition to 64-bit stopped anything Carbon from being free use. So you're probably SOL here. ...build your own menu, maybe?
I spent a good several hours trying and failing to get this to work on Saturday. Eventually resorted to building my own :/
Pardon my ignorance, built your own what? I was thinking I could try creating my own NSmenuIten sub type?
Oh dear. Would sub classing NSMenuItem get around this?
My own entire menu XD
Checkbox????
Theres not really enough context to see whats going on but as a guess did you actually set the uibutton for the checkbox anywhere in the storyboard?
That's a lot of work! I may just add buttons for the features I wanted instead.
Hey there. It is often the case that when you create a custom .xib you add some arguments to the init call. The call a setup function from inside the init, this is where your actual setup happens and you do your magic. Just keep in mind when things are loaded vs. when they‚Äôre drawn etc. ```init(arg: String) { doSetup(arg: arg) }```
Implement didReceiveMemoryWarning: in your high memory VCs to release memory intensive objects. Also pause video capture/session on viewDidDisappear. This should get you a long way. Don‚Äôt worry about using NavC. It‚Äôs probably the right tool for the job.
Thanks! Not sure I totally follow the doSetup w/ args - is that called from an init or UINib(...)instantiate(...)? Thanks!
That might be quicker haha. I didn't want my UI to clutter but sometimes simple really is better. Buttons are popular for a reason.
Note that a replay may be a video or something encoded in a more efficient format specific to the game (and thus requiring a special player to view).
You are only using six VCs, so it's really not a big deal. Your previous solution was fine
https://developer.apple.com/documentation/replaykit
You will need to change your shared Singleton into a computer property that vends a private backing object. That backing object will need to be optional. Unfortunately you will lose the instantiated once benefit of static lets so you will need to protect that.
Had once used a db a few years ago and used SQLite but don‚Äòt know 
What's the purpose of setting the singleton to nil? To me, using the singleton pattern means it is _always_ safe to call `Singleton.shared.callMethod()`, but your description suggests this would cause an error once `closeFrameworkMethod()` has been called. There is more than one way of approaching this problem, but I can't recommend a solution besides [crywalker6's solution](https://www.reddit.com/r/swift/comments/a9fql4/remove_singleton_instance_in_swift/eciyfc5/) without knowing more.
If you don't want to hardcore the values in Swift code, you could probably store the data you want to populate in a plist or JSON file and extract it from there on first run. 
https://developer.apple.com/documentation/uikit/uiviewcontroller/1621359-init Your class can have an init with it's own parameters and then call super.init(nibName:bundle:)
I want to release any memory associated with singleton and deal locate it after library was closed. Which details do you want know also?
Yea you should be able to. I managed to do it years ago (~iOS 6) but can‚Äôt remember now off the top of my head. Have a google for ‚Äúseeding database‚Äù and you should be able to yield some results.
This should be marked as answer
The singleton shouldn‚Äôt ever be deallocated once it‚Äôs in use. If you want to be able to startup and shutdown your library then make it a non Singleton that can be held by the caller until they‚Äôre done with it.
You will not run into memory problems. Let iOS handle the memory for you. 
You don‚Äôt need to worry about that with iOS as much. Even with ObjectiveC that isn‚Äôt an issue. Notably, application life cycles are different here, you don‚Äôt really ‚Äúclose‚Äù apps. They aren‚Äôt completely running in the background either. Also, the iOS framework itself is littered top to bottom with Singleton. A singleton isn‚Äôt a big deal compared to possibly having multiple instances of the same class live (really, really, really bad in some cases). Things you should be concerned about: how much data you are keeping in memory. A singleton instance is extremely cheap, other data takes space. When to be slightly concerned: you really want to use a DI pattern or change up your unit testing patterns (by creating mocks). In those cases, create wrapper classes with protocols.
I'd go for a Singleton that should be the responsible to create the connection and evaluate if the DB exists and create it with default data in the case it is the first startup of the app, otherwise it just creates the connection when starting the app. Now for the default data, I'd create this functionality in another separate class/module/package you call it, to follow the single responsibility principle.
[How do I initialize a store with default data?](https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreData/FrequentlyAskedQuestions.html)
Yes I also thought about it. By creating a Singleton but with all optionals values and initialize it with specific method like initialize Singleton() and declare all inicialization and provide initial values inside of this method which gets called from first view controller. Am I right? :) Thanks for quick response! 
I'm trying to make an app for our church youth so we don't have to rely on texts/viber/social media to share events. I am a computer science students(junior) with Java expierence and just a little bit of swift from the tutorials I've followed before. Can someone point me in the right direction how to go about creating a data base so when the app starts it populates the table with the rows of the data base. Bonus question: is it possible to also edit the database straight from the app in a hidden menu?
If we're talking about an [iOS](/r/iOSProgramming) app, then you can include a database in your application bundle but it will be read-only so you will need to copy it to a writable location when your app starts up for the first time. Take care how big the default data is because your app could be rejected for using up too much disk space at launch (this happened to me once).
&gt; Should I better create a single instance of class That is what a singleton is. 
You might have a retain cycle problem. Try to add a breakpoint on the deinit method in your UIViewController subclass and see if it stops after you dismissed the VC. If it doesn't then some objects might be creating a circular reference to your VC.
with its* own parameters it's = it is or it has : /
A couple of months ago, I created an example Xcode project with a detailed readme to do exactly that. If you follow the steps, you create an SQLite database from a comma-separated (CSV) file. And with plain SQLite calls, you retrieve the data and put it in a table view: https://github.com/bvankuik/SQLiteExampleCityDatabase
You can use Realm with pre-populated data and then configure app with it on the first launch.
I do this for my app. I copy pre-populated SQLite database file and then zip it to reduce file size of the bundle and then unzip on launch if there is no existing database file. Migration code may get a little bit complicated, though.
You should plan your navigation around usability not memory usage. If your app consists of multiple flows then a TabBar is pretty useful/common for switching between them. Assuming you are using AVCaptureSession for the camera views, just don't forget to stop the session on viewDidDisappear, so you don't keep using the camera when you don't need it.
Unfortunately, no, not to my knowledge.
It looks like you defined the class inside of a function. The class needs to be public for the system to be able to find it.
We do this with SQLite databases. You have to open them readonly if they're within your bundle. Otherwise you can copy them to a writeable location and open them normally. 
I don't see a checkbox anywhere on the storyboard, maybe I'm missing it? There's been some Irish in this coffee. But, one problem that is apparent--you are defining the checkbox class within the FeedVC class. Extract it out and put it in its own file. 
Perfect resource, nice find!
I think you‚Äôre right. Stacktraces of any Cocoa app while working in menus will show calls into HI* functions and references to Carbon. Probably because menus needed to operate the same for Carbon and Cocoa, so Apple probably used the least common denominator. Therefor yes, that code is ancient but doubtful Apple will change it (and why would they if it‚Äôs working). The UIKit Marzipan project will probably just add UIMenu wrappers over the existing AppKit classes.
Hey, \_IPA\_, just a quick heads-up: **therefor** is actually spelled **therefore**. You can remember it by **ends with -fore**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". You're useless. Have a nice day! [^Save ^your ^breath, ^I'm ^a ^bot.](https://www.reddit.com/user/BooCMB/comments/9vnzpd/faq/)
hEy, \_IpA\_, jUsT A QuIcK HeAdS-Up: **ThErEfOr** iS AcTuAlLy sPeLlEd **tHeReFoRe**. YoU CaN ReMeMbEr iT By **eNdS WiTh -FoRe**. HaVe a nIcE DaY! ^^^^ThE ^^^^PaReNt ^^^^cOmMeNtEr ^^^^cAn ^^^^rEpLy ^^^^wItH ^^^^'dElEtE' ^^^^tO ^^^^DeLeTe ^^^^tHiS ^^^^CoMmEnT.
Don't even think about it.
This. Don‚Äôt stress about memory management until you run into problems. 
Index out of range is just another way of saying you‚Äôre trying to access an out of bounds index of a collection. What arrays are there around that line?
Woah I wasn't expecting this fast of a response. The line in question is `self.connectedDevice = self.devices[self.devicesComboBox.integerValue]` self.devices leads to the class `RFDevice` (In a seperate file of the same name) which contains functions for HID communication self.devicesComboBox leads to a var in ViewController.swift with NSComboBox, which is used to show USB-HID devices with the same HID values Hopefully I got that all correct, Here is an imgur album with code snippets. https://imgur.com/a/QB1Ofbl
You should check if the combo box integer value is less than the count of self.devices, and then continue the logic. It seems in this case it is greater (which means you are accessing an element of the array that doesnt exist).
So evidently the error pertains to the right side of the assignment. Whatever value ``self.devicesComboBox.integerValue`` contains is outside the size of the bounds of ``self.devices``. You should check that ``self.devicesComboBox.integerValue`` is not greater or less than the range of ``0...self.devices.count``. You might just need to subtract 1 from ``self.devicesComboBox.integerValue``.
So if I add a .json file in my project, how can I access it programmatically ? I currently access the json file through my website but I‚Äôd like to make it accessible offline.
I would make `self.connectedDevice` an optional and then put a `guard` check before you subscript. So something like: `guard self.devices.count &gt; self.devicesComboBox.integerValue else { /* some reasonable default or error handling here*/ }` integerValue can also be negative so you'll want to check for that too. 
You can get file path from bundle using following code: let url = Bundle.main.url(forResource: "filename", withExtension: "json") Then use this url to [get file data](https://developer.apple.com/documentation/foundation/data/1779617-init) and do whatever you want (e.g. deserialize using Decodable).
The best way to share anything is almost always [UIActivityViewCobtroller](https://developer.apple.com/documentation/uikit/uiactivityviewcontroller). It allows the user to share anything with other apps on the user‚Äôs device (eg iMessage, Files, social media, image/video editing apps where appropriate) or with another person via airdrop. It‚Äôs also nice because it‚Äôs familiar to users, so they don‚Äôt have to relearn how to share stuff. 
The combo box is pulling the value of what‚Äôs being selected. The index of said thing ends up out of bounds of your array. 
Click and hold the button, you should see the option to make it autoplay as you type
Thanks mill try that in the morning :-)
You can place a breakpoint right on that line and check all the values of your variables. That way you will know for sure what is crashing your code. You will probably notice that your .count is going further than what you want therefore getting the out Of index.
Although Apple mentions this as one possible solution in their documentation, they also discourage it: &gt; Do not use this technique in iOS, and only if absolutely necessary in OS X. Parsing a file to create a store incurs unnecessary overhead. It is much better to create a Core Data store yourself offline and use it directly in your application.
Hello there! Do you use any framework for DI, such as Swinject? For example, if you are using Swinject, you can create a DI container, which will hold all dependencies and then use this container in different factories, e.g. modules factory (where all your VCs are built). You can then inject all dependencies to each controller right within the factory. I'd recommend not to register dependencies in controllers, because at some point you may want to change controllers' order or whatever. When you push new controller, it can already has it's own dependencies injected from factory. P.S.: Sorry for language, not native.
Thanks for informative response! I don't use any framework had considered using one, but the framework(more like an SDK) is not that huge by itself. Only 6 VCs. I am not native, too ;)
Sounds like a singleton isn‚Äôt what you need. Create an instance of the class and inject it where you need it. When you no longer need it, throw it away. If you need another one, create a new instance. 
Yes this what I need! However then I building a framework I don't have appDelegate so should I create instance of the class in the initial VC? How should I pass that instance into other VCs if I don't override prepareSegue and add new VCs by calling pushViewController()
Hard to know because I don‚Äôt know what your framework is. But you can pass the instance via custom initialisers on the view controllers or by setting instances of implicitly unwrapped optionals on the view controllers. If the class is exposed outside of the SDK, the user can inject it themselves. There are so many options just hard to pin down without more information.
Hard to know because I don‚Äôt know what your framework is. But you can pass the instance via custom initialisers on the view controllers or by setting instances of implicitly unwrapped optionals on the view controllers. If the class is exposed outside of the SDK, the user can inject it themselves. There are so many options just hard to pin down without more information.
You should use JSONDecoder rather than JSONSerialization since your structs conform to Decodable. Here is one example on how to use it https://swiftunboxed.com/stdlib/json-decoder-decodable/
depending on your framework structure you might have a method .start() or .initialize(). That would be one place to setup your classes you will inject. You don't want to create them within your initial VC as that would make the VC dependent on all your dependencies. An alternative would be to provide a factory method which will setup your VC with the dependencies. I would highly discourage using a DI framework within your framework as you will force your users to include it in that precise version, which will often prevent them from using your framework.
Nice find! I think for this simple use-case, and given that it sounds like from the OP that the code to do so will only be run once in the lifetime of the install, the overhead incurred is pretty negligible. That said, this is about the only use case this would be viable for. 
I won't use DI framework. I do have initialize method in my framework, but it is from singleton, which has few stored values(replace it in the future). Right now I provided dependencies in the initial VC, like this: var repository : Repository init() { repository = Repository() super.init(nibName: nil, bundle: nil) } required init?(coder aDecoder: NSCoder) { repository = Repository() super.init(coder: aDecoder) } then I have custom second VC initialization(depending on user's provided setup). if user uses own storyboard, I use Bundle.main if it uses our storyboard I call "framework.identifier" vc = UIStoryboard.init(name:"Storyboard", bundle:Bundle.main).instantiateViewController(withIdentifier: "DocumentsSelectionViewController") as? MenuViewController if let unwrappedCustomVC = vc { unwrappedCustomVC.setupDependencies(repository: self.repository) self.navigationController?.pushViewController(unwrappedCustomVC, animated: true) } else { vc = UIStoryboard.init(name:"Idenfy", bundle: Bundle(identifier: "framework.identifier" )).instantiateViewController(withIdentifier: "DocumentsSelectionViewController") as! MenuViewController vc!.setupDependencies(repository: self.repository) self.navigationController?.pushViewController(vc!, animated: true) } Then the method setupDependencies(repository: self.repository) provides dependencies in the second VC as this: var repository:Repository? public func setupDependencies(repository: Repository) { self.repository = repository } However, I force unwrap repository. I Would like to create **custom init instead of using optional,** however I am not sure how to do that if I use pushViewController with VC, which was created from Storyboard. &amp;#x200B;
It seems I was right! You need to create custom method to provide dependencies and then it works well! [https://stackoverflow.com/questions/51988061/using-storyboard-and-custom-view-controller-init](https://stackoverflow.com/questions/51988061/using-storyboard-and-custom-view-controller-init)
Are you sure the json you posted is the one you‚Äôre receiving? The error says the start of your json is neither an object ‚Äú{}‚Äù or an array ‚Äú[]‚Äù. I‚Äôm guessing the json you are receiving is just a big string. Make sure there are no ‚Äú at the start and end of your json.
The most common way is in the Stackoverflow link you provided: overriding `prepare(for:sender:)` in the source view controller, then identifying the segue (either by destination class like in the answer or by an identifier you can set in the storyboard for the segue) and setting the properties on the target view controller. One point of storyboard segues is that navigational transitions are represented in segue objects so that your app's navigation can be defined in the storyboard rather than having to write it in your code. Your implementation places the assumption that your view controller is always embedded in a navigation controller, which is fine but not the most future proof way of doing things.
I would like to use segues, however I could not find a way of providing custom bundle with segues. In our case user of the library determines if he wants to use **custom Storyboard or the one from the library** and this is why I use code below to assign proper Storyboard: if(isCustomFramework){ //custom storyboard vc = UIStoryboard.init(name:"Storyboard", bundle:Bundle.main).instantiateViewController(withIdentifier: "DocumentsSelectionViewController") as? MenuViewController if let unwrappedCustomVC = vc { //checking if it was assigned correctly unwrappedCustomVC.setupDependencies(repository: self.repository) self.navigationController?.pushViewController(unwrappedCustomVC, animated: true) } else { vc = UIStoryboard.init(name:"Storyboard", bundle: Bundle(identifier: "framework.identifier" )).instantiateViewController(withIdentifier: "DocumentsSelectionViewController") as! MenuViewController vc!.setupDependencies(repository: self.repository) self.navigationController?.pushViewController(vc!, animated: true) } } //the storyboard from the framework else { vc = UIStoryboard.init(name:"Storyboard", bundle: Bundle(identifier: "framework.identifier" )).instantiateViewController(withIdentifier: "DocumentsSelectionViewController") as! MenuViewController vc!.setupDependencies(repository: self.repository) self.navigationController?.pushViewController(vc!, animated: true) } } **How can I override storyboard segues to provide custom referencing Bundle?**
You should give this website a try: https://app.quicktype.io It turns your JSON into the proper structs with `Codable` support.
If you are ok using a third party dependency and the idea of method swizzling, [check out SwinjectStoryboard](https://github.com/swinject/swinjectstoryboard)
Having a class method which takes the dependency as input and provides the VC as output is probably the best way in this case. Unfortunately, this is one of the main drawbacks with using storyboards. 
I can't this time... The requirements were to not use any dependencies
[Here](https://i.imgur.com/ueDWEJu.png) is how I am doing it. In a storyboard in my app, I use a storyboard reference. I give it the storyboard name (like normal) and since the destination storyboard is in a framework I give it the framework bundle ID (the same one you are typing manually) If I were to need to pass extra param to this VC, I would override prepareForSegue in my app side VC, get the destination VC from the segue object, and then set params there. Internally to my framework, I use storyboard references to segue there too. 
If you're referring to what I think you're referring to, this is a new feature for playgrounds in the latest Xcode. Once you run some code, if the you don't enter new code, or if the new code you enter doesn't alter what was already run, then the Play button displays a "stop" square and you have to click on that to turn it back into a play button to replay the code you previously executed. However, if you add new code that doesn't change what you already ran, then you can execute just the new code you entered by clicking on the play button that is now in the ribbon on the side of the code (where the line numbers are displayed) or by hitting Shift-Enter. You can also use this ribbon to replay code only up to a certsain point, rather than the full code. From the Xcode 10 release notes: &gt; Playgrounds in Xcode now execute code incrementally, compiling new lines of code when you type Shift-Return or press the Run button next to the new line of code. This is especially useful for long tasks that you don't want to run repeatedly, like training a machine learning model or setting up your live view's state, and allows you to progressively iterate on your ideas without restarting the playground. (34313149)
It will definitely crash when numOfTags is zero.
My guess is that you're trying to access an object or index that doesn't exist. Also, your code isn't very Swift-like, so it's difficult to reason about. I'm not sure I entirely understand the way you have this built, but something like the following is probably what you're looking for: for num in 0..&lt;course.tags.count { tagAC.append(course.tags\[num\]) }
numOfTags is never fewer than 3.
Not a good assumption to make. Your code should be written with as few assumptions as possible. 
Wow really informative! Is Logger.LogListItems refers to a dependency?
That's right. It's the data that I am injecting. It's analogous to your `repository`. 
However, where do you specify correct bundle? Users can set default boolean isCustomFramework and in this case I should set Bundle to bundle.main (it uses same identifier of storyboard). Where should I set that bundle? :)
Yup, fast enumeration is typically the safest loop structure to take when iterating through arrays.
What I am suggesting is that you delete all of the code you originally posted and just use storyboards/prepareForSegue. 
Yes I do get that and your solution is indeed clean! I almost figured it out just not sure how to provide bundle when performing segue because user gets storyboard file and can edit it whenever he wants and I somehow need to reference it's storyboard and not the one in the framework
Swift Collections have a ton of helper functions to avoid manually referencing indexes. In this case you should be able to call: ‚ÄòtagAC += course.tags‚Äô Under the hood the + operator is calling ‚ÄòtagAC.append(contentsOf: course.tags)‚Äô
I found that you can't differentiate storyboard by just using segue... there is no way to code the desired Bundle using segues :( I really liked your clean solution, sadly can't use that
I could be wrong but in swift don‚Äôt they expect you to address JSON with square brackets? So: course[‚Äútags‚Äù][i] Would be the reference.
What is tagAC? 
I copied and pasted it from postman, i dont know how its working fine in postman
There‚Äôs also the possibility to embrace Storyboards completely and use associated objects instead. You can add any type of object as an item to your Storyboard scene and connect it through IBAction and IBOutlet. Used it for UITableViewDelegate and related stuff but also things like form validators, never for Model layer stuff but that‚Äôs an equally valid strategy. Stuff like a data object, id or other variable stuff you pass in can be dealt with through simple vars with didset. Not using it as much as I am not building less screens with lots of logic in storyboards but it used to work really well, especially in the Objective-C era.
already used `[CouponCheck].self` , was giving the same error, and jsonlint is showing me that it is a valid json. 
still getting same error, thanks for the website though, it will be helpful for me in future
You are right, and the CouponCheck structure matches 100% the root json so you should not need the array, my bad. Are you 100% sure that all the types are correct for all the properties in the structs? I still don't have my computer to check it I'm afraid. 
The most evident pro for me is the ability to have a complete lack of data if you have nothing to enter for a specific field. For instance, any optional field that is not populated can be left out of a data packet and storage. Additionally, if I have a default value for a field and a user selects that default value, I just don‚Äôt write that value to the database. If I read from the database and the field doesn‚Äôt have that value, my program automatically assigns the default value for that field. On the ‚Äúcon‚Äù side, the uses of a NoSQL database in rather limited. 
Can CoreData not handle nulls?
It is not an assumption if the JSON files I use are provided by me to the app, not another source.
One of the strongest pros for me is how simple Firebase is to implement. It makes connecting to a database, using cloud functions, and adding ads ridiculously easy. A con I've considered however is that you are essentially locked into using it as you scale since it would be hard to transition to a different solution once your app goes live. I've never had to deal with this however, so if anyone with experience cares to weigh in it would be cool to get some insight!
A null value still takes up data space. A lack of data and lack of field for that data doesn‚Äôt.
You extra Method is One way. In alternative way would be to do property based injection. There is also a nice way to use an extension which overrides the load method. Then you can use custom properties in storyboards. Currently on the phone so can‚Äòt go into Detail. Write me if you need more details but ist will take a few hours.
If this is a safe assumption, then the code should have a guard clause at the top with a fatal error explaining why it is a safe assumption. Don't make somebody reading the code dig through other files and reason about what's going on just to determine your code is safe. Make it obvious; make the implicit assumption in your code explicit. And even if it's a safe assumption today, it may not be in the future. Requirements change. let minimumTagCount = 3 guard course.tags.count &gt;= minimumTagCount else { fatalError("\(#function) should only be used with data containing at least \(minimumTagCount) tags.") } 
Thank you! I was not familiar with the guard clause at all. I will be implementing it!
Pro: easy and quick, not a lot of ‚Äúrealtime‚Äù solutions out there Con: completely coupled and dependent on Google
Dump it out as a string to the console. There are all sorts of things that could result in your application getting a different response to Postman.
As others have already pointed out the con is that if you aren't careful you get locked in and will find it very difficult to switch to a different/cheeper solution if the need arises. To avoid this con, make sure there is only one file that actually imports firebase and keep that file as small as possible. This means, among other things, that you map your firebase objects to a different set of objects that aren't tied to firebase to use elsewhere in your app. Yes it's more work, but it allows you a lot of flexibility on how to handle the storage of your data. 
Another negative is the fact that Google generally has no regard for privacy or ethics. If you inject their code into your project, they're probably getting more out of it than we'd expect.
This is a really fantastic tip. Thanks for this! The way I‚Äôm imagining it, you would have a firebase handler class that essentially acts as a pointer to all of the firebase calls and requests, so if you need to switch databases you can just swap out all of the firebase function calls with AWS or Azure for example... is that more or less what you‚Äôre suggesting?
Thank you ü§ù
I like what you said. In those methods, just map the response to the necessary keys/objects. 
What you can do is create a gateway that houses all your methods for interacting with say a database. If you‚Äôre working with a user data store, you can define a protocol that contains methods like `getUsers` or `storeUsers` etc and have multiple implementations. One implementation could be a firebase one that has methods for storing/fetching users to/from firebase. Another for AWS, etc. This way, you interact with the protocol type and not have to worry about the implementation details. Essentially abstracting away the implementation details from the client. 
Your question was, "How to provide dependencies while using storyboards? (DI)" 
I agree with most of the other comments made so far. In addition, as a con, I'd also add that you're vulnerable to their downtime. Some may take this for granted thinking "it's Google, there won't be downtime!", but I've experienced unexplained downtime in both Firebase auth and database that left my app pretty much unusable for a few hours. It once impacted on my app store approval too as logon was required. Downtime is a part of any solution but it sucks when it's out of your control.
So many people have tried to get a discord thing working on these subs, so many have failed. People just don't want it.
I have recently developed 3 iOS Game using SpriteKit &amp; GameplayKit In Swift 4.0 &amp; It's now available on the App Store. Hope you'll like It. Year 2018 was the productive year for me i have learnt a lot. \- [Fit Beats](https://itunes.apple.com/us/app/fit-beats/id1388914760?mt=8) \[App Store\] \- [Color Twin](https://itunes.apple.com/in/app/color-twin/id1120207199?mt=8) \[App Store\] \- [Spinny Monster](https://itunes.apple.com/us/app/spinny-monster/id1176540699?mt=8) \[App Store\] **Features:** \- Random themes \- Game Center integration \- Awesome Gameplay music \- Better sound effects \- Adorable , fun, and thoughtful design \- Social sharing of your score.
Yeeees! :)
Thanks so much!
i added `dump(receivedData)` in catch block this is what i get 
MY PROGRESS SO FAR :- i tried the below code to check whether the json is valid or not and it said "**InValid Json**". if JSONSerialization.isValidJSONObject(receivedData) { print("Valid Json") } else { print("InValid Json") } I have also tried it with swifty json and its also printing the same error. But in android (java) its working, i dont know much about it
You need to dump it out as a string, not data. dump(String(data: receivedData, encoding: .utf8)) 
I know this isn‚Äôt helpful to your problem, but I would gradually move away from storyboards. Especially if you‚Äôre starting managing things like dependency injection. A single initializer with your repository is a lot easier to follow 
You can introduce the guard with &gt;= 3 invariant and with some comments (3-5 lines) or you can handle the case (&lt; 3) without any overhead and without any additional lines of code, I even think that it will be easier than code with the invariant.
Swift has mixin.
Thanks. Still having some issues with it. Before I go further with the wheel, I decided i need to work on the rest of the UI first. From a design standpoint, would you use a container view to display in the main view, or build the main view around the wheel? The background of the wheel scene is white, but when I run it, there are two black bars, one above and one below the wheel. How would I get rid of those?
Thanks. Still having some issues with it. Before I go further with the wheel, I decided i need to work on the rest of the UI first. From a design standpoint, would you use a UIViewController embedded in a container view to display the wheel in the main view, or build the main view around the wheel? The background of the wheel scene is white, but when I run it, there are two black bars, one above and one below the wheel. How would I get rid of those?
It's pretty useless to keep pushing Fluffer on people, most of us use Swift and it works very well for what we do. There's no need to learn a little-used framework on top of a little-used language just to make apps that don't pay for your efforts on the Android platform.
How do I get the local identifier of the video? Is it the url of the video?
Check out www.hackingwithswift.com. There‚Äôs a book on macOS development that you can purchase there.
You're almost certainly going to need to write one. Start with building a CRUD API with Python or Postgres or something. 
UINavigationController
Okay so I am new completely been coding for 5 months I was able to build a social media app with instant messaging and a profile and timeline to post on. So right now I have no clue about what you stated above would u be able to link me or give more info please 
Sure! Try this one out to start: http://flask.pocoo.org/docs/1.0/tutorial/
It works much the same way to be honest. You have different views with different code attached to them and a Heirarchy. You basically just wanna start with making a one window app that displays text. Then try to add buttons that connect to functions and keep going from there exploring the various UI elements and methods. You‚Äôll be on your way in no time. Have you checked YouTube for resources? 
Will do thanks 
Man, somebody needs to take Paul clothes shopping before he takes his next full body picture.
I‚Äôm impressed that you put so much time in effort, and am extremely happy that you did. I‚Äôve always fought with UIController, hopefully this will solve it. üòä
You could also try Vapor or Kitura. Check out the u/twostraws HackingWithSwift Server books. I worked through the Vapor one and I am currently using it to build a App / Website.
I wouldn't call 60 members in one day a fail but ok ü§î
Facebook uses PHP, so obviously that's the best. Performance isn't going to be so great so you're going to need to write your own custom VM for it sooner or later.
REST API using Node.js, Express and a database like Mongo.
-1 for suggesting OP uses PHP. PHP is an awful language, and iirc Facebook invented Hack to fix the issues with using PHP
Just the usual syntax-level comparison. Not much depth.
&gt; CS seems to be much harder than other majors Yeah, keep telling yourself that. All us programmers could choose to go be top physicists but we choose to make iPhone apps because it's so much more challenging!
Which would u suggest for a beginner? I was doing some research and yeah I basically need the backend for making accounts, instant messaging and having a wall to post to. Videos audio and text 
Hey, if it worked for you then cool. I'm just going by the large number of posts on this topic in this sub. It seems like every week someone is asking for people to join a new discord.
Firebase has some very useful tools and allows custom node.js backend if you need it. Real-time database Authentication tools Etc. It‚Äôs also free / cheap with quite a high threshold for usage before you need to pay. https://firebase.google.com/products/#develop-features 
Agree php is heavy in infrastructure needs and with the rise of JSON completely redundant compared to node.js
Oh really? I was told it wouldn‚Äôt be good for what I need. Hmm so should I just start with firebase then once I get a good following build my own backend I assume it‚Äôll be a while before I need my own backend plenty of time to build one 
Firebase is well integrated with both swift and android for most social apps there is plug and play code supported by common modern standards, like noSQL , oAuth ( allows users to login via common with like google / Facebook ) and serverless functions ( supported by customized express service ) I just completed a project using firebase to support around 4 million users , so scalability is easy too.
Ok, well not harder than ALL other majors, but a lot of them. Mostly with the exception of several other STEM majors. 
Worked with a well scaling API called Stream and if you don‚Äôt use their service I would definitely recommend trying to understand how they do it. It‚Äôs basically a really ‚Äúdumb‚Äù database of streams like your posts, notifications, topics etcetera. I have no proof but it all strongly points to a NoSQL backend. The language that drives it is less important. I would opt for Elixir / Phoenix but Node or other popular stacks are probably good choices as well.
It's similar to UIKit (iOS), yet different (older) in many respects. The most frustrating thing about it is that so much of the documentation is old, invalid, buried or otherwise tough to break down, and some of the components aren't quite 1:1 with their UIKit counterparts (e.g, UILabel vs NSTextField customization, UITableView vs NSTableView data sources). My number one recommendation would be that past a certain point, you probably wanna be asking questions rather than trying to put a puzzle together. Also: - On top of that, keep in mind from the get-go that Cocoa apps have different UI expectations than what you see over in UIKit-land. It helps to understand that and think through design up front if you can. - If you find yourself missing certain components from UIKit (e.g, UISwitch, UINavigationController), I've found Julien Sagot's standins to be pretty decent: [JSSwitch](https://github.com/juliensagot/JSSwitch), [JSNavigationController](https://github.com/juliensagot/JSNavigationController) If you're the type who wants something to deconstruct, I have the following on GitHub that might be helpful: - [HolidayCalendar, a nibless app that shows setting up windows, menus, and an NSCollectionViewController in the _new_ API](https://github.com/ryanmcgrath/holidaycalendar) - [1.1.1.1-macOS, a nibless status-bar app that handles building popovers and such](https://github.com/ryanmcgrath/1.1.1.1-macOS) I'm generally available for questions re: Cocoa/AppKit on [Twitter](https://twitter.com/ryanmcgrath) (or here, if I see them). 
About 8 years ago I worked on a social media dashboard app called HootSuite. I was brought on-board to modernize the app. I rewrote it and upgraded everything so it could connect to multiple social networks. Fun fact: As I learned on the first day of work... apparently I is possible to create an application that relies on memory leaks... and no... that same app did not work with automatic reference counting when it came out. What type of social media app are you planning on creating?
I‚Äôm one of the (unofficial) cofounders of happn.
My only concern would the formatting. I‚Äôm not familiar with AWS or Azure but if they don‚Äôt support the same NoSQL/JSON setup that firebase uses, you‚Äôd essentially have to convert the database, remap the database calls, AND writing new methods to parse the responses... which is essentially starting from square one. But from an app development point of view, I guess all you can do is try and futureproof as much as possible and cross your fingers
Honestly I have only used Kitura in production. I would say that since you are new to programming then at least you only have to manage one language. I think most people are using Vapor now.
can you point me at the website for this Stream back end service
Hey, &amp;#x200B; so I try to make the answer as short as possible, cause DI is a huge topic. &amp;#x200B; Let's start with methods of DI: &amp;#x200B; 1. constructor injection - This is basically everywhere used. It's passing the dependency via the constructor e.g. init(viewModel: ..) &amp;#x200B; 2. method injection - As the name suggests you use an extra method to inject your dependencies. It's the option you suggested in your post e.g. setDependencies(viewModel:... foo:...) &amp;#x200B; 3. property injection - As the name suggests you have public properies, which can be set from outside the class: e.g. vc1.viewModel = singleton() &amp;#x200B; This is nearly everything you need to know about the types ;) &amp;#x200B; Next topic: where do I create the injected property? The short answer is always outside of the class, which uses it. Sounds kinda obvious doesn't it, but most often people create it within the same class and forget about DI. Another problem is even if they inject it, they often create it at the wrong either. Imagine having MVVM as a design pattern and pushing onto a different constructor. Where are the ViewModels generated? The first one is quite easy. As the VC1 is instantiated within the AppDelegate, the ViewModel1 needs to be instantiated there too. Then you will inject it into VC1 &amp;#x200B; \`\`\` class AppDelegate { func didFinishLaunching(withOptions:) { let vc1 = VC1() // any way you instantiate it.. if you use xibs and override nibname this is the way to go. In storyboards you'd use UIStoryboard(name:..).instantiate.... let vm1 = ViewModel1() // in case ViewModel1 has dependencies, they need to be created first and then injected into the ViewModel1 vc1.viewModel = vm1 //this is property injection. Most of the time this and constructer injection is all you need window.rootViewController = vc1 } \`\`\` &amp;#x200B; Since we've clarified where dependencies for VC1 are created, where do we create them for VC2 which will be pushed onto from VC1? &amp;#x200B; In my opinion this is the hard part to understand. There are multiple places to do this, but it will never be within the VC1 (or any other VC). &amp;#x200B; So if I'm using MVVM (without the Coordinator) AND storyboard segues I add a method to my ViewModel which will return the ViewModel for the next ViewController. In prepare() I use property based injection and inject the VM into the VC. &amp;#x200B; If I'm using MVVM (without the coordinator) and no segues (doesn't matter wether xibs or storyboards) I push from the ViewModel. so the VM has a method which is being called from the VC and it then pushes the VC2. Within this method it's using property based injection. &amp;#x200B; Now we clarified how the VC is being pushed and how we inject the dependencies, but are nowhere near, where they are being created. &amp;#x200B; Truthfully this is now something I have to say it depends. If it's the viewModel I most often create it as a dependency for the ViewModel of the prior VC. So in our example VM1 has a dependency on VM2. So I have to create the VM2 and inject it into VM1 within the AppDelegate: &amp;#x200B; \`\`\` class AppDelegate { func didFinishLaunching(withOptions:) { let vc1 = VC1() // any way you instantiate it.. if you use xibs and override nibname this is the way to go. In storyboards you'd use UIStoryboard(name:..).instantiate.... let vm2 = ViewModel2() let vm1 = ViewModel1(viewModel2: vm2) //In this case we have a needed dependency to I use constructor injection. I would prefer this over dependency injection, but with storyboards this sadly isn't really possible vc1.viewModel = vm1 //this is property injection. Most of the time this and constructer injection is all you need window.rootViewController = vc1 } \`\`\` &amp;#x200B; In case the VM2 is only a runtime dependency you could also create it within VM1. &amp;#x200B; \`\`\` class ViewModel1 { func viewModel2(for: cell) -&gt; ViewModel 2{ return ViewModel2(cell) } \`\`\` &amp;#x200B; Though often times I then tend to inject the class into the ViewModel. But this is probably a step too far at the moment. &amp;#x200B; Now all of this sounds like quite a hassle. There are DI frameworks, but as I mentioned I wouldn't use them within in a framework. If you want to use a DI container, you should write your own (which is quite some work). The simple form is they create a container, which contains all the dependencies and provides them when requested (meaning also the dependencies of dependencies are within this container). &amp;#x200B; Don't fall into the trap of just passing such a container everywhere. This is an anti-pattern. Instead just use the container within your rootClass (normal apps AppDelegate, framework wherever your framework is being initialized). &amp;#x200B; Now if you have such a container, you could write a simple extension, contains a variable which has a property observer. If you use identifiers within the container, you could create a property id. Set this within the custom options of the viewcontroller in IB. As soon as the VC is then instantiated, it will set this property and you could act on it: &amp;#x200B; \`\`\` extension UIViewController { var dependencyID: String { get { return "" } set { vm = container.tag(value) } } } \`\`\` &amp;#x200B; The code above is only a rough concept, so there might be a few tweaks to be done. &amp;#x200B; &amp;#x200B;
&amp;#x200B; Okay now we come to one more topic :) If you use Storyboards and don't use segues (as you've mentioned) I would do the following: &amp;#x200B; \- Create an extension to Storyboard \- add a method which creates the instance of your VC \- within this method inject the dependencies &amp;#x200B; \`\`\` extension UIStoryboard { func instantiateVC1(withViewModel viewModel: ViewModel1) -&gt; ViewController1 { let vc1 = UIStoryboard(name:...).instantiate(name:...) vc1.viewModel = viewModel return vc1 } } \`\`\` &amp;#x200B; This way you've kinda created constructor injection for users of your VC1 :) &amp;#x200B; The last part which we need to talk about is where you instantiate your first VC. Well it kinda all depends on your frameworks architecture. You said you have an init method which creates your singleton. This would be a good place to start. &amp;#x200B; This is now a guess from my side: You create an instance of your framework and pass it to the user. The user than uses methods on that instance to do stuff (e.g. show viewControllers). &amp;#x200B; If the above assumption is correct I'd suggest to consider the instance Class passed to your user to be the place to instantiate it. In this case you could create the dependencies as soon as the user calls a method on this instance. &amp;#x200B; If the above is not correct and the user is always calling class-methods which will then be forwarded, I expect you to hold internally an object which can be compared to the above way. &amp;#x200B; kinda like this: \`\`\` class Framework { private static var instance: Blub &amp;#x200B; class func showVC() { instance.showVC() } } \`\`\` &amp;#x200B; &amp;#x200B; P.S. stupid 10k character limit
Why not use a headless CMS? Scalable and customizable
Wow looks great! We have been using MVVM-C with RxSwift in our project and it has worked wonders for us. Our app is entirely data driven. Our coordinators are a slightly simpler blend. Thankyou for the docs. I will try it out. 
Honestly stick with Firebase until you actually have a need to scale up. If you‚Äôre building a social media app you‚Äôre going to have an uphill battle acquiring users and the time it would take to implement the same feature set using a mix of technologies on your own servers would be better spent on marketing and feature development to help acquire and retain users.
More or less every webspace for a few bucks does provide PHP support and no node.js . What do you mean with heavy infrastructure? 
This is actually exactly the type of thing I was looking for for a project I‚Äôm working on. 
XCODE10 - didSet function disappeared ? How to use didChange?
Well if your driving a webpage sure you can plop it on top of Apache ( or maybe symphony ) but if you just want to run some data with JSON, AWS lambda, or gcp function (firebase) is loads lighter and easier to deliver. For apps I would use node.js , on one of those services, if your looking at webpage based then sure php has it strengths but where the backend payload is just data , services like AWS or GCP ( firebase) give you far faster turn around with modem features.
Totally agree if you start to pay for firebase you have already won, then you can afford to spin up other cloud services to replace it or look to monetization as you have meaningful user counts.
Agree and those services are all available via firebase for free until you have meaningful user counts.
https://github.com/firebase/firebase-ios-sdk There is multiple no lines of code examples ( you just download ) for auth / chat and user databases all in swift.
Awesome!! Please reach out if you find any areas that could be improved
What is happn never heard of it unfortunately 
Lol well I don‚Äôt want to give to much of my idea away but it‚Äôs a basic app with instant messaging, wall post and stuff Facebook I guess but for one group of people 
Yeah thanks guys I‚Äôll stick with firebase for now I appreciate it 
I published emojimap, pretty much exactly as it sounds. It was fun, have a couple things to fix as iOS 12 broke some things related to MKAnnotations.
Thanks I appreciate it 
The easiest way might be adding a space or two to the text you asign to the label on either side. (if you don't want to subclass). On another note, it your making some kind of tagging view you might want to consider using a bunch of CATextLayers rather than UILabel. Would be mot efficient. 
Meeting app. You can search for it in the App Store.
I have a static tableview embedded in a View Controller. It displays fine on larger devices. When I run it on an iPhone 5s, the bottom two cells do not show. They are cut off. What am I missing? 
You have a constant aspect ratio constraint. I would expect instead containerView.bottom constrained to the bottom of safe area
I've seen textfields used to display info before. Mainly on websites. I'm not a designer or anything, but I didn't see anything wrong with it.
No, what's a social media app?
That‚Äôs crazy I love the app I honestly had a idea similar to this for making friends a few years back was I was stupid back then and didn‚Äôt have motivation to work on things lol. I like it a lot. What do you use for backend. Would u mind if I sent you a message? 
Sure go ahead! I‚Äôd be happy to chat :)
Hmm seems pretty cool I‚Äôll test it out in the next fews going to work I‚Äôll make sure to put a sad emoji lol. 
Done thanks 
Would a category/extension on UILabel work for you?
Use a UIButton. It gives you the hooks you need to control the test insets.
Connect the button to the viewcontroller as IBoutlet using storyboard. Then I THINK IT WAS ```iboutletnameyougaveit.layer.cornerradius = 10``` Otherwise you could possibly use it on the UIView doing something similar. https://stackoverflow.com/questions/1509547/giving-uiview-rounded-corners then uiview background color to green like in the example, and I think either textcolor or tintcolor to white
Use a UIButton instead. Set the contentInset for padding. Set isUserInteractionEnabled = false. Enjoy your UIBulabel.
Shoot me a message and we could work something out, I'm always down to team up and learn more.
You could use an AttributedString with paragraph properties. But the other suggestion of using a UIButton will almost certainly be easier to manage. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [How do I add padding to a label without subclassing UILabel?](https://www.reddit.com/r/iOSProgramming/comments/aa6mju/how_do_i_add_padding_to_a_label_without/) - [/r/testslideforreddit] [Renders strangely](https://www.reddit.com/r/testslideforreddit/comments/aa7qlu/renders_strangely/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
So I got the code working. Is there a way to execute to make that class a method/function that only executes when the spin button is pressed? As of now, that code constantly runs and is not useful to me in its current form. `if (wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &gt; 0.0` This works, but I need it to execute exactly at 0.0 after the button is pressed. Once it hits 0.0, I need a function to execute 1 time.
I think the solution is to subclass it. Why are you so set on avoiding that?
GraphQL and Prisma
Did I offend some crybabies or something? At least tell me why the downvotes. The instructions literally will build the green tags he's talking about.
Thanks! I'll check it out. 
Yeah couldn't seem to find much on YouTube for Mac OSX, unless I probably searched the wrong thing? Haha I did find really good videos on the Swift language.
Thanks a lot!! This is the answer I was hoping for haha I'm trying to get familiar with the overall design architecture of a Mac OSX app just to understand what it is I am doing. I will for sure reach out if I have any questions.
Aspect ratio is incorrect to use here. Just pin the bottom of the container view to the bottom of the safe area/superview depending on what you what. 
Oh hai fellow introvert
Me too
Stop trying to make Flutter happen. It's not going to happen.
Not an iOS dev, just kinda sub here, isn't this relying on the OS not to change the appearance of buttons in the future a little too much? I suppose when that happens you have time to fix it, but it's a delayed issue.
You really should consider subclassing UILabel. You can achieve the same effect by setting the font size small and setting the label‚Äôs size to large but as you want a reusable component then a nice little *TagLabel* subclass would be the way the make sure you can easily make changes to the style and functionality in the future. You can add padding to a UILabel by overriding [drawText(in:)](https://developer.apple.com/documentation/uikit/uilabel/1620527-drawtext). I don‚Äôt have an example to hand but can get it later if needed. 
send me a message too:)
Same
[https://github.com/apple/sourcekit-lsp](https://github.com/apple/sourcekit-lsp)
Can I get in on this? I‚Äôd say my skills are beginner but I‚Äôm picking up quick
I think the downvotes are because your answer related to the corner radius and not the question at hand. 
Sent a pm
Me too!
Thanks! That's kind of my mentality, too - it may not be the absolute greatest solution but I don't see why you couldn't do it, especially if it'll save a lot of time
Do a stackview of uilabels. Then you can add padding easily without having to subclass anything.
Though many people here suggest to subclass UILabel, I would go with creating a custom UIView. It'll be easier to deal with in the end, and you'll be able to easily change your margins and corner radii to get the look you want, no matter the font or size you choose. If you go down this route, just make sure to override intrinsicContentSize and the AL engine should take care of sizing the rest correctly.
I‚Äôm interested! I‚Äôm an experienced programmer but new to Swift/Xcode and looking for exactly this üòÑ
I recently starting walking through a Udemy class to teach myself Xcode/Swift. I‚Äôd be happy to jump on board üëçüèº
Sent a pm 
Cool. Let me know what you‚Äôre thinking and how I can help!
The stack view will add padding *between* the labels, but what about inserting the label against the background?
On the same boat, at beginner level and learning Swift, I would love to learn more. 
 cell.checkLabel.isHidden = !task.done Why use prepareForReuse at all in this scenario?
I am new to swift and iOS too and looking for company to make it more fun and easier. Send me a message.
I'm on my 3rd or 4th start on swift. I'd love to work on a project as a team. I think a team would motivate me to keep up with it enough to advance a bit more.
Nothing wrong with it, this also happens a lot when you‚Äôre building viewcontroller for example user account info that have edit and read-only states and you switch between them 
Yeah you guys are definitely retarded. It was the question at hand, he doesn't have to subclass anything.
&gt; Is there a simple way to accomplish this? Yes. There are two simple ways to accomplish this. One is to subclass UILabel (because you want something that functions exactly like UILabel but with a slight difference) and the other is adding a new view as the superview that is providing the padding. In fact, the reason those methods were suggested to you is because they are not only correct ways of doing this - they are also the simplest. &gt; But how do I add padding to a label easily without subclassing or adding the label to a UIView? Ignoring an airplane - what's the easiest way to get 15,000 feet in the air and hanging out with a pilot, some stewards, and a bunch of angry airplane passengers?
Exactly.
Makes sense that‚Äôs what I‚Äôm looking for to I sent you a pm 
Something like that? ``` button.alpha = 0 DispatchQueue.main.asyncAfter(deadline: .now() + .milliseconds(150), execute: { self.button.alpha = 1 }) ```
I can't help but if you're gonna give a chipotle gift card, you should also send a roll of toilet paper. &amp;#x200B; have you tried a different duration?
I‚Äôm a professional dev for a top tech company. I‚Äôve seen this done in the field dozens of times. There is ‚Äúcorrect‚Äù and ‚Äúworks‚Äù. Yes, you can subclass UILabel and override drawText, and there are also other ways to do what OP is asking, but for the level that it seems that OP is at, a UIButton with some properties set to mimic the look of a UIButton would work just fine. Especially if the buttonType is set to custom, as that specific type is made to create a custom looking buttons. If custom UIButton was changed in UIKit to look different, it would mess up a lot more than just OPs fake ‚Äúlabel‚Äù. Downvote if you wish, but I‚Äôll be making fake labels with buttons while he‚Äôs fiddling with drawing text manually. Not to mention, the tags like this are usually tappable in apps. It would be ridiculous to add tap gestures to them. None of the tags look like they should be multi-line, so tappable or not, a UIButton would do the trick just fine.
I've fiddled with it, it either spazzes out like crazy or just fades in and out slowly/quickly. I will personally wipe the ass of whoever helps me. Or put water in my mouth and pretend to be a bidet.
Right, there aren't many up-to-date tuts that focus only on macOS. Harry Ng has some that are good. Funny, I thought of recording a few tutorials myself but didn't think there would be much interest. Agree with [Satanshmaten](https://www.reddit.com/user/Satanshmaten), Hacking with macOS by Paul Hudson is excellent.
Yes. (You'll create the triangle and then the circle, either as one continuous bezier path or as two separate ones that you then draw or join - as pretty much anytime you're not drawing a rectangle you'll be doing bezier paths)
I'm a web developer who started to learn swift a week ago. This sounds interesting.
I found this [https://www.youtube.com/watch?v=ox2MieJzcRQ](https://www.youtube.com/watch?v=ox2MieJzcRQ) and I using this way: extension UIButton { func pulse(repeatCount: Float) { let pulse = CASpringAnimation(keyPath: "transform.scale") pulse.duration = 0.6 pulse.fromValue = 0.95 pulse.toValue = 1 pulse.autoreverses = true pulse.repeatCount = repeatCount pulse.initialVelocity = 0.5 pulse.damping = 1.0 layer.add(pulse, forKey: nil) } func shake() { let shake = CASpringAnimation(keyPath: "position") shake.duration = 0.1 shake.repeatCount = 2 shake.autoreverses = true let fromPoint = CGPoint(x: center.x - 5, y: center.y) let fromValue = NSValue(cgPoint: fromPoint) let toPoint = CGPoint(x: center.x + 5, y: center.y) let toValue = NSValue(cgPoint: toPoint) shake.fromValue = fromValue shake.toValue = toValue layer.add(shake, forKey: nil) } } Works like a charm and hope it can help you. The video also shows a third animation. Leading that, sorry OP :), I tried to keep a button blinks while the user did not reach a special condition, keeping it in background. The background routine works but the effect itself only works once. If someone could help with I would appreciate, my code: let dispatchQueue = DispatchQueue(label: "pulse", qos: .background) dispatchQueue.async{ while self.waitingForUserCondition == false { self.btConfigurar.pulse(repeatCount: 1) sleep(3) } } Again, :) sorry for hijack your post (:
Same here.
Same here
Lol whatever u do, dont look for shortcuts. If u gotta subclass it, do it. Doing it the right way is so much better always. You get practice on subclassing and you ll appreciate your code so much more. Anyways for this one i would subclass uiview and add a label inside of it. Using uibutton sounds easy too but u ll end up with annoying random issues, like text getting truncated. 
Not sure why people decided to downvote you. The solution looks good to me if you want something that generally looks like a button and especially acts like one too.
IF IM NOT WRONG, it means you passed it as ‚Äúreference or pointer‚Äù to the function because normally its pass by ‚Äúvalue‚Äù, its a must to add it with the inout so you can change its value
1 (partial circle + 2 sides of triangle) or 2 paths (full circle + triangle). The advantage of 1 path is if you ever want an outline (stroke) only. With 2 paths you'd have an extra line on the bottom size of the triangle. Your geometry is simple enough for 1 path.
If you want it to flash, like a hard flash, I'd imagine you don't want to animate. Animating the opacity will cause a fade no matter how you do it. If you want it flashing like a street light, you're gonna want to just turn it on and off. So replace your animation function with just toggling the alpha between 0.0 and 1.0.
When you pass in a parameter into a function by default it is a constant. When you mark it as &amp;, you are telling the compiler that you are passing it in as a reference type and it the value of the reference may be changed later, instead of a value type.
So some pseudo code. Start at tip of triangle Draw line with angle of 45 degrees a certain length Then draw a circle from end of angle line to beginning of angle line Then close path by drawing line at angle to complete the shape ?
What‚Äôs wrong in your life where you feel like you have to talk to people that way?
Have you tried shortening the duration?
I‚Äôm interested as well. New to programming and I‚Äôve been trying to learn swift. I‚Äôm 40 years old and feel like it would‚Äôve been a lot easier to learn at 15. I think learning with others is the way to go. It would be helpful to talk each other through issues and ideas. 
I checked that video out already, thanks though. That's more of a fade in/out rather than just blinking on and off.
Ah okay that's probably the issue im running into. I guess I'll read into Timer then
This is a very good list actually, and let's face it, "Clean Code" by Uncle Bob is a must.
Yes, and just started. 
You might find these sections interesting as followup reading: [In-Out Parameters](https://docs.swift.org/swift-book/LanguageGuide/Functions.html#ID173) (guide) [In-Out Parameters](https://docs.swift.org/swift-book/ReferenceManual/Declarations.html#ID545) (reference) &gt; Then I was forced to place an &amp; before the passed variable. &gt; but what does the &amp; do? I believe it was designed into the language as a way to make it [clear, at the point of use](https://swift.org/documentation/api-design-guidelines/#fundamentals), that the `whatColor` function's `numberSquare` parameter is an in-out parameter. Or, maybe another way to say it is that the `&amp;` itself does nothing except help you pass an artificial compiler check; it's almost like an intentional roadblock that might help you or other readers understand your code later. The syntax does mirror the `&amp;` reference operator from some C-family languages, but it's meant to be a way to familiarize yourself with what's going on if you come from one of those languages. The semantics don't correspond directly. (See the second link on "copy-in copy-out" vs "call by reference.")
Thanks everyone for the help! Yeah the 'artificial compiler check' kind of struck a note I don't know why. Now it makes sense. Wow, there is just so much to learn it never ends.
Bribes! Totally not necessary but it does show a touch of class.
I resolve to avoid medium posts. It's a lot better that way.
In top developer news: medium articles tend to be self-serving fluff pieces that are best avoided. Occasionally there will be a good one but they're usually not worth the time to check. In fact, most of them are pretty misleading for new programmers as they are written by people who don't have much experience themselves but they can present themselves as an expert without any kind of professional filter. Stick to the tried-and-true professional publications folks!
No. Swift is still a moving target, and while I might write new stuff in Swift, there aren't any overwhelming reasons for re-writing working, well-documented code.
Looks like a good solution but the formatting went wonky. Just preface each line of code with 4 spaces and it will show up properly formatted.
I honestly think cocoa pods is dying. To me Carthage (and SPM) are far superior.
I often use cocoapods.org to check if something interesting exists. Stats I don't care about, as most often I use it as an inspiration to solve something. If I end up using the pod, I check for number of contributors, stars and response time on issues on github itself. But truth be told I'm a carthage guy ;)
We use a bunch of Pods in our app and the system works great. I've always found them through Github or articles though.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Updating UI when music playback is interrupted in Swift](https://www.reddit.com/r/iOSProgramming/comments/aadvln/updating_ui_when_music_playback_is_interrupted_in/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I'm not entirely sure what you are trying to achieve. Segues are ViewController (the one presentING) specific, so if you have multiple VC's with the same identifier it doesn't matter. Having one VC with multiple segues (with the same identifier) on the other hand makes it a little bit more problematic. But you can use the source or destination property (depending on what you are trying to achieve) of the [Segue](https://developer.apple.com/documentation/uikit/uistoryboardsegue), then check the classtype and continue accordingly.
No no, you got the name wrong. It's called "Fluffer".
What I meant is the following: There is Storyboard.storyboard file, which is located in the framework module and also Storyboard.storyboard which is located in the **app module folder**. The one in the app module has different UI but **same** **segues**, however I would like to **distinguish which segue was referred to**: the one from **app module** or the **one from the framework**. That way I could check with specific code, which UIViewController should I present(the one from framework, or the one form app module (**if it was customized**))
Maybe have a look at [collectionBehavior](https://developer.apple.com/documentation/appkit/nswindow/1419471-collectionbehavior). And you might want to override [canBecomeKey](https://developer.apple.com/documentation/appkit/nswindow/1419543-canbecomekey) for your presentation window. Also: When creating your presentation window, you may want to experiment with the [style mask](https://developer.apple.com/documentation/appkit/nswindow/stylemask) you pass in. In particular with `hudWindow`, `docModalWindow` and `utilityWindow`. I dunno which of these can go fullscreen though ... Let us know how it goes.
Your method is called when the app becomes active, you are aware of that yes? The notification you are subscribing to is didBecomeActive, nothing to do with the media player lifecycle, for that I think you would need to use KVO
I was having the same issue in 2 places. **Issue 1** was if the music app was in the background and an interruption happened and the music app was brought to the foreground. **Issue 2** was while music app was still in foreground. I will close this post and reword it for clarity 
When in the background you shouldn‚Äôt need anything just check on viewwillappear and update UI accordingly, when in foreground KVO on the media player status, update accordingly
Have you read all of these books?
Is the button on your storyboard connected to the IBAction?
That‚Äôs where you hold command and drag the button over to the code right? (So noob) 
Yup, that's it :) Click to the left of your TestLabel.text line to put a debug there so you can see if the program gets there when you press the button. If it doesn't stop there then there's something wrong between your storyboard and the button.
SPM doesn't work on iOS, which isn't great. &amp;#x200B; Carthage is nice, but discoverability sucks.
ctrl but yes
I don‚Äôt discover dependencies via cocoa pods anyway ü§∑‚Äç‚ôÇÔ∏è I agree about SPM. I think eventually Apple will integrate it in Xcode, but until then we‚Äôre f**d.
Consider a rewrite if it's an option.
I work on a project which started few years ago and for that reason was entirely written in Objective-C. We've had a lot of discussions about whether to move to Swift or not over the past two years and decided to adopt a conservative approach a about year ago. We write all new code (new classes) in Swift and we try to rewrite Objective-C to Swift if there is a large refactoring that would rewrite the classes nonetheless. We've run into many interoperability issues/setbacks (sometimes you have to drop some of the Swift features if you want to call something from Obj-C and vice-versa) but we still think this is the right approach and we're happy we've started. So overall I would say it goes well and the pros outweigh the cons. It's just not as smooth as it could be.
It's also a code style but the t's in \`TestLabel\` and \`TestButton\` should be lower case so it looks like \`testLabel\` and \`testButton\`. &amp;#x200B; Just a good a thing to get in the habit of early on is camel case for vars, lets, method names, ect. 
At an internship last summer I rewrote code as needed. I would say about 60% of things were simple translations, 35% required minor refactoring, mainly due to framework changes, and 5% required major refactoring/rewriting. A lot of the major parts could have been simply translated, but there were better ways to do it in Swift (i.e. avoiding unsafe pointers).
So for clarification. You've provided a VC to the user, and the user does some interaction on your VC and then you want to present either the custom VC or the default? In the meanwhile, let's see if I can provide some useful insight. Basically if you use a segue and use a user interaction (not calling perform in your code) to segue to a different VC, UIKit will create a segue which your presenting VC responds to. It will also add the destination (presented VC) to the segue and the source (presenting VC). Segues are VC specific. They belong to the presenting VC. So you can have multiple VC's using segues with the same identifier and it would still refer to the correct target. I don't know the conditions when to present the customized VC and when not, but maybe a different solution would help. Create a container and always segue to that container. Using your conditions you could either load the customized or the default segue and add it to the container.
Yeah I start to feel centralization is ultimately breaking the neck of cocoapods.
Seems most people don't care about the stats on cocoapods.org anymore, which is great news for me: one less thing to worry about :D
Oh, much easier, thank you
I have an open source audiobook player [Bookplayer](https://github.com/TortugaPower/BookPlayer) , and what you're looking for is NSNotification.Name.AVAudioSessionInterruption and NSNotification.Name.AVAudioSessionRouteChange You can check up the AppDelegate on my project
Note that if you pass a variable into a function with `inout` it doesn't make much sense to also return it from the function as well. As you have your function written it's like wearing a belt and suspenders. Simplified example: ```swift func square(_ number: inout Int) { number = number * number } var x = 3 square(&amp;x) print(x) // prints '9' ``` Also, I'm sure there are legit uses for `inout`, but for everyday stuff it's not used. At least I haven't had the need for it in the last 2 years. YMMV
well, he definitely ref linked them ;)
I have never needed inout either. Never even heard of it. But in this rare case it reduces a lot of code. But it is probably a bad idea in general to use it, since you really don't want passed variables to be changing. And yeah returning the variable function is absolutely redundant and unnecessary, I just did it so I was 100% clear on what was happening. Thanks! And Don't use reddit on the phone it is torture especially answering a programming question! LOL. That might be one of the stages of hell in Dantes inferno.
I‚Äôm an iOS developer with around 3 years of experience. If any of you need help with something you can send me a PM :) 
Can you try using setText instead of label.text?
JetBrains Appcode, but didn‚Äôt try it before
You can either use the alpha or the hidden value but they both yield the same flashy behavior. I have to ask though why? You are going to cause people seizures if you have too many of them. import UIKit class ViewController: UIViewController { @IBOutlet weak var flashingButton: FlashButton! override func viewDidLoad() { super.viewDidLoad() flashingButton.makeItFlash() } } protocol Flashable { var flashTimer: Timer? { get set } var flashTimeInterval: TimeInterval { get set } mutating func makeItFlash() mutating func stopFlashing() } extension Flashable where Self: UIView { mutating func makeItFlash() { if self.flashTimer == nil { self.flashTimer = Timer.scheduledTimer(withTimeInterval: flashTimeInterval, repeats: true, block: { [weak self] (_) in DispatchQueue.main.async { self?.alpha = self?.alpha == 1 ? 0 : 1 // self?.isHidden = !(self?.isHidden ?? false) } }) } } mutating func stopFlashing() { self.flashTimer?.invalidate() self.flashTimer = nil } } class FlashButton: UIButton, Flashable { var flashTimer: Timer? var flashTimeInterval: TimeInterval = 0.01 } 
I‚Äôll take a look at this in a bit. But I don‚Äôt understand what you mean about seizures, I just want one button flashing once a second. 
UI is exclusive to Apple Macs 
oh nvm lol, I went to the extreme and did 0.1 seconds. That makes more sense.
It‚Äôs giving season my man. I feel bad asking for help for such a simple thing too...
This is pretty shortsighted. I have a fairly massive (100k+ lines) Swift 4.2 codebase and upgrades have been super easy, with the big exception being 2.0 -&gt; 3.0. Everything else was easy to handle renames. 
This. You‚Äôll need macOS for access to the UIKit library. I‚Äôve had some success on my current project using VS Code. My biggest gripe is how long it takes for auto complete to finish.
No. No, you're not.
Nope. Much prefer open source. iOS is over saturated now anyway
Yeah, that autocomplete speed is a bit painful. Why is it so slow? Is it an implementation issue or is there just a weird delay set? I've never bothered in investigate. 
Is that 100K lines of Swift or ObjC? You‚Äôve had to migrate your code by your own example, but OP hasn‚Äôt, so why do it now and again later?
In terms of the industry? If you‚Äôre an iOS Developer and have a couple years experience, there‚Äôs an absolute shitton of jobs out there right now. 
It‚Äôs probably an implementation issue. Perhaps there could be a better algorithm for them to use. I never bothered to look into it. ¬Ø\_(„ÉÑ)_/¬Ø 
Where the fuck do u live with shit ton of jobs ?
Seattle 
There‚Äôs always content here that‚Äôs not strictly iOS programming. I open an article to medium or someone‚Äôs website weekly about shit that has nothing to do with actual programming. It‚Äôs generally things that apply to any language: monetization, more downloads, developer resources, navigating the App Store, etc. Spend more time here. 
Portland. And in the last 2 months I‚Äôve had recruiters ping me from Austin, Bay Area, Seattle, LA, San Diego, Atlanta, Boston, NY... and that‚Äôs with my LinkedIn set to ‚Äúnot interested‚Äù or whatever. Now if you‚Äôre a junior dev with nothing on your resume, yeah, it‚Äôs tough, but I have yet to actually apply for a single job on my own (meaning I initiate contact) and there‚Äôs no shortage of interest.
Can confirm, in Seattle. 
Your linkedin profile probably has a lot of experience. I get a lot of spam recruiters too until I deleted my intern and work history.
Ughh interop 
I have just short of 3 years in iOS with 3 total positions (internship, full time and full time.) My most recent is a large (Fortune 100) company. That‚Äôs why I originally said that *if you have experience* there are tons of jobs. For juniors it‚Äôs tough.
I'm not saying it's all iOS but i sub here for Swift specific content. 
There's very little difference between programming on macOS vs iOS et al. The language is agnostic, of course, so it comes down to a couple of frameworks. Mostly stuff like UIKit and a few hardware-related frameworks. If it was Swift-only you would cut out all frameworks and that's clearly not a good thing since they greatly help in some areas. But there has been plenty of talk about non-iOS things. People ask about using Swift on Linux, Windows, and macOS all the time. It's just that iOS generates more interest so it gets the lion's share of the posts.
Only runs on macOS
The recruiters ping everyone a ton but if you ever contact them they'll promise you the moon and hardly ever deliver. They're a bad indicator of real jobs out there. In their world they send out a lot of feelers and if they get 1 out of 1000 a job they're happy.
The only way you're going to realistically develop an iPhone app all the way is through macOS. However, there are a number of solutions out there that will run macOS in a virtual machine to do the compilation, linking, signing, and such. I don't use them but I've seen them mentioned.
No. Do. Not. Rewrite. Objective-C and Swift interop fantastically well, except for some rare situations, which won't cause you major problems. Keep the Obj-C code as it is, and don't do wasteful rewrites. Write new code in Swift, as a appropriate. Let the two live together happily. Eventually you'll end u with more Swift code than Obj-C code, but without having wasted pointless hours doing rewrites that were never needed. 
You got it! Use the ‚Äúarc‚Äù methods to build the circle part of your path. You‚Äôll need to do some math to figure out where the triangle line points are relative to the centre of your arc but that‚Äôs pretty much it. 
When you do that, it gives you two options: to make an outlet or an action. The outlet makes a reference to the object in your code, like you have. The action is something that happens when an event is triggered on your object. Two powerful things with the same click and drag. 
Same here. I‚Äôve been a professional iOS dev for almost 3 years and am happy to answer questions. 
Just getting going. About 2 months in. Would be interested in a group project!
Hello, might you still need assistance?
Are the colors of the text and background set? You might just be looking at white text.
To develop for iOS you need a Mac. Period. Full stop.
I have thought of writing this code in the article, I was too focused on explaining how reusable cell works in the article, will add in this later. Thanks for the suggestion! 
My current project is an older app, originally ObjC. All new code is being written in Swift. Old code that works is left ObjC, but if it needs any major changes we move it to Swift. Honestly it doesn‚Äôt take long to do a straight port to Swift. A fairly large class can usually be done in an afternoon. What takes more time is when newer features of Swift present opportunities for refining and refactoring.
I got it. This isn't pretty, but it will work. Thanks for the help man. class WheelDelegate: NSObject, SKSceneDelegate { func didSimulatePhysics(for scene: SKScene) { guard let wheelScene = scene as? WheelScene else { return } if (wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &gt; 0.0 { print(wheelScene.wheel.physicsBody?.angularVelocity) if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &lt; 0.1 { wheelScene.wheel.physicsBody?.angularVelocity = 0.0 if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) == 0.0 { // print(wheelScene.wheel.physicsBody?.angularVelocity) print("I HATE SWIFT") } // do wheel stopped stuff here } } } }
What kind of ads are you looking for? Interstitial, banner, native, video?
At the moment, banner and interstitial.
A bit more concise and easy to read: class WheelDelegate: NSObject, SKSceneDelegate { func didSimulatePhysics(for scene: SKScene) { guard let wheelScene = scene as? WheelScene, let body = wheelScene.wheel.physicsBody // unwrap the physics body else { return } switch body.angularVelocity { case 0 : print("I HATE SWIFT") // stopped case ...0.1: body.angularVelocity = 0.0 // close enough to stop default : // still moving print(body.angularVelocity) return } // do wheel stopped stuff here } }
I don‚Äôt have a solution for you, as I haven‚Äôt worked with popovers before, but why do you want to present a table view with only one cell? What about putting whatever you would have in the cell in a stack view instead, along with the three buttons?
Unfortunately this solution only displayed the first section. Do I have to add specific constraints to the individual elements with the tableview cells?
Stack view? Just to clarify, I want to present a pop up the covers the top third of the screen. The pop up would contain an image, several lines of text adjacent to the image, and then the buttons below. [Something like this](https://i.pinimg.com/236x/66/ba/ab/66baab76eff821e701f0af7a4340924d--design-ui-visual-design.jpg)
Why does swift create a local scope for if statements? Bit new to programming but this seems really annoying? I've done some Java, Python, Javascript and C++ and this is the first time I've seen local scoping for if statements. What's the purpose of this? Doesn't it make more sense to just have local scoping for functions? Thanks.
Modal Presentation over current context is the best way.
https://www.youtube.com/watch?v=NBCped0ZcWE You ca do it like this.
i don't fully understand the question
Create a view controller. Set the background to either clear or any color with low alpha. - Create a view controller - Set background to clear or any color with low alpha. - Set the presentation style to overFullScreen. - Create a UIView within the view controller. - Put whatever you want in the UIView. - Position it on top of the screen. - Done. Maybe create an animated slide in and slide out. Maybe a tap gesture to go back if you want. 
Agreed but it seems to be a bit of a bun fight. There's sooooo many apps and very few of them offer any real value
A massive thank you to @flowtoolz the solution was in fact subclassing NSWindow and overriding it's canBecomeKey. At least in the deployment target of 10.12 this works!
Thank you a bunch for the idea! subclassing NSWindow worked like a charm! 
These aren‚Äôt random third party recruiting agencies, they‚Äôre direct recruiters employed by the companies they recruit for (think Facebook, Snap, Amazon, MS, etc.) I‚Äôm not bothering to reply to agencies.
There are a ton of apps that offer real value. Virtually every relevant company has an app now and the larger ones have multiple apps.
Update: [Apparently](https://github.com/CocoaPods/metrics.cocoapods.org/issues/46#issuecomment-450461996), all cp stats have been or will be sunsetted. For cocoapod publishers this should mean, they don't have to worry about CP stats anymore at all.
Appodeal mediates between all advertisers, showing the most paying one, and also includes admob. So i guess that "should" beat it. I'm about to test it soon.
Have you tried to set up a remote onto your home Mac, or are you not given local admin on your work computer? 
I‚Äôm not sure about the course type you bought. You learn only Swift or iOS programming? If you learn only Swift: http://online.swiftplayground.run/ You cannot do iOS programming but it is enough for learning Swift. If your course is based don iOS programming, my suggestion is to read the official Swift book when you are at work, together with the online playground: https://itunes.apple.com/ro/book/the-swift-programming-language-swift-4-2/id881256329?mt=11
As always instead of Udemy courses I suggest using CS193p. You can listen to it in your spare time and do the exercises at home ;)
You want to present a view controller using another view controller‚Äôs transitioningDelegate. In that delegate you can present a view controller with an inset, but it is quite fiddly - and more than just a few lines of code
CS193P is fantastic if you have some knowledge of object-oriented programming. Might be tough for a beginner though...
You probably want to use a UIPresenationController.
I like repl.it for an online Swift editor. 
Can you read books? Then get Modern Auto Layout by Keith Harrison. It's one of the more recent iOS books.
CS193P?
Swift Playgrounds for iPad. Start with a ‚Äòblank‚Äò template and do everything programmatically.
The Swift Programming book. And it‚Äôs free on the Book Store.
Swift is pretty stable the last two years
Can you listen to podcasts? If so, check out SwiftCoders, any of Sean Allen‚Äôs material, Fireside Swift....and there‚Äôs many great others. Although you‚Äôre listening and not looking at code, I find continuing to be in the mindset of Swift during my commute and times I can podcast at work help me process the concepts. Also, as a beginner, hearing that many of the seasoned pro‚Äôs are down-to-earth and don‚Äôt know everything was really encouraging for me as well. Good luck! 
The String Manifesto was a massive part of the Swift 4 release so this definitely should be the case! 
I can‚Äôt stand CocoaPods. It mucks with your project too much. Was the cause of many build issues with Xcode 10 upgrades. Trying to get rid of it for all projects. Simple bulls scripts for compiling frameworks is not hard...
Anyone ever tried running Xcode via a VNC like Screens on an iPad? I hate lugging my MBP around and would love to just remote into it from my iPad Pro and code from there, but I don't want to waste money on Screens if it just isn't going to work...
If you‚Äôre making custom cells, yes each type of cell must have its constraints. The constraints you have here are only for your table view and not cell. Additionally if you‚Äôre only being shown one cell make sure your table view delegates are configured correctly including number of rows and sections, cell for row at index path and will display cell. More screen shots will help debugging further. 
Yes. Swift 4 is a fantastic release and I can't wait to see what 5 has in store next year. 
How long has Swift 4.x been out now? 
No, mainly because working code is fine and doesn‚Äôt need rewriting. I don‚Äôt have time for that anyways.
I don't know if this comment is being facetious or not, but it appears the last update 4.x added even more functionality.
Its called "type casting", segue.destination typically returns a type of "UIViewController", as the destinationVC in this case is a subclass of UIViewController (SecondViewController: UIViewController), we can treat it as a SecondViewController. We then cast it to SecondViewController so that we can access the properties of SecondViewController like destinationVC.data = "something something".
https://docs.swift.org/swift-book/LanguageGuide/TypeCasting.html
oh alright, thanks!
thanks for linking!
Strings are hard. I‚Äôm glad they took their time to get them right
not facetious. i really don't know
ABI stability is the goal. This should be huge actually as it will allow people to start moving forward with implementations outside of Apple. Inside Apple it should mean that the next release of Mac OS and iOS should include libraries, thus meaning less of a need to bundle a bunch of code with every app. Actually I‚Äôm not too sure about the value of other Swift 5 features compared to a stable ABI. Certainly all of the new features are important but a stable ABI is huge. 
When doing type casting, it's best to do conditional casts with ``as?`` as GP stated. This is best combined with a ``guard`` statement. For instance: ``` guard let destinationVC = segue.destination as? SecondViewController else { // handle error here } // continue using destinationVC here ```
It was released alongside xcode 9. September 2017 IIRC
I have had to create so many string extensions to efficiently do string related coding challenges in swift. Don't get me wrong I like swift 4 string, but please lets us subscript with integers... myClearlyNamedString[myClearlyNamedString.index(myClearlyNamedString.startIndex, offsetBy: i)] s[s.index(s.startIndex, offsetBy: i)]
Why do you personally care about ABI stability? I'm more excited about raw strings and `count(where:)`.
The final branching of Swift 5 happened mid November. Now only select changes get included, mainly fixes. Personally, I'm more excited for Async-Await, hopefully we get it in Swift 6.
People seem to forget that there is /r/iOSProgramming as well. Or even worse they post in both places.
If I may ask, I'm 44 and in the same boat you are. How are you holding up? I wish I were much younger then a lot of this would make more sense. My head is swimming...
Why was it removed? What is the problem with the API if now made so awkward?
Why was it removed? What is the problem with the API if now made so awkward? 
ABI stability will make every Swift app use less memory and disk space. Plus it will allow 3rd parties to use Swift in closed source frameworks and libraries. 
Third time is the charm!
I‚Äôm plugging along. Finding a goal and working towards it is definitely the best way to get going. I like the idea of working with other people, it gives you the ability to bounce things off each other. I made an app for my place of employment that uses Firebase as the backend but it‚Äôs ugly and kind of incomplete due to a lack of understanding lol. 
I transitioned from mostly hardware support role to more of a mix of hardware and software development. It was a pain just to learn PowerShell and Swift is 10x harder to me. 
Raw strings are a very good thing don‚Äôt get me wrong. However a stable ABI has bigger benefits in my mind. Possibly the biggest one best by the ability to be taken seriously on other platforms. It also tells the world that Swift is a mature language worthy of consideration. That might also influence Mac and iOS developers still sitting by on the fence with respect to using Swift. To put it another way Swift has been in Beta way though a stable ABI. Thus Swift 5 will be saying to the world I‚Äôm mature come use me. 
As I understand using integers, and integer ranges is not allowed because it is inefficient. Because swift strings are unicode it's hart to tell what's a character (something about multiple Unicode characters can make up one onscreen character). Also in ‚Äùreal world‚Äù scenarios, why would you ever want to access the 3rd character in a string? My alternative would be to create a separate collection: `ASCIIString`.
I don't see why ABI stability is such a big deal. Sure, without ABI stability every program need a runtime for its swift version. Bundling the runtime with an app adds what 5-10mb? If we (Apple) care about app bundle size on the iPhone, why bundle the runtime with the app, surely there should be some way for apps of the same swift version to share runtime? &gt; Plus it will allow 3rd parties to use Swift in closed source frameworks and libraries. Do you have more information on this? Why is it not possible for 3rd parties to use swift in closed source libraries without ABI Stability? ABI would allow a binary to be used with any version of swift, eliminating the need to distribute a separate binary per swift version. In the end, I don't see why ABI stability is such a huge deal. And why we as developers should care so much. Why not wait until the language is more mature before locking everything down?
Yeah, my Large Company has held off on using Swift in most of our existing Objective-C apps for binary size reasons, but post ABI-stability, it‚Äôll be open season.
You can compile and run Swift programs on [Linux](https://swift.org/download/) and [Windows](https://github.com/apple/swift/blob/master/docs/Windows.md) too.
You can send me a PM if you have any specific questions. Just try and start to work on it, you‚Äôll make mistakes but you will learn from them.
If I build a library with Xcode 10.1 it will only work in projects using Xcode 10.1. What are my customers using Xcode 9, 9.1, and 9.4 supposed to do? Am I supposed to release 5-10 binaries for every version of Xcode someone might use? What if they‚Äôre using Swift 5 betas? What if some random compiler option they‚Äôre using is incompatible with my builds? That‚Äôs what a stable binary fixes. Obj-C never really had this problem. C++ still has it and why you can‚Äôt build plugins in C++ unless you only use a subset. 
&gt; I don't see why ABI stability is such a big deal. Sure, without ABI stability every program need a runtime for its swift version. Bundling the runtime with an app adds what 5-10mb? I've got 12.5 MB of libswift dylibs in my app's bundle. That's more than my code. Don't you think that more than doubling the code size is significant? It's basically a free RAM and bandwidth upgrade. &gt; If we (Apple) care about app bundle size on the iPhone, why bundle the runtime with the app, surely there should be some way for apps of the same swift version to share runtime? ABI stability is the way it was solved for C. This *is* that "some way". Why are you eager for them to invent a new and different way? How would it be better than this solution? &gt; Why is it not possible for 3rd parties to use swift in closed source libraries without ABI Stability? It's technically possible, but they'd need to distribute a separate version for each ABI version. In practice, nobody does this. It's too much of a pain. Imagine if upgrading from macOS 10.13 to 10.14 meant that every single one of your applications refused to launch. &gt; Why not wait until the language is more mature before locking everything down? What aspect of the ABI do you think is not sufficiently mature to justify this, at major version 5?
Jeremy Howard of Fast.AI shared this project of his.
I wish r/swift were for the Swift programming language, but that ship has sailed. Clearly most people here want it to be just another r/iOSProgramming.
How are you counting? This is way more than the third time. Just on the Macintosh, Apple went through at least 5 or 6 different string interfaces from System 1 (Pascal strings!) up through `Foundation.NSString`. `Swift.String` has gone through 4 major versions so far. Eleventh time is the charm? I've lived through enough string interfaces, on lots of different platforms, that I know there's no such thing as an ideal string interface. All of them suck, in some way or other. You can't make every case easy. I really just wish Apple would stop changing it. I don't even care what they pick. Rewriting my text-handling code every year is getting tiring. Apparently the changes in Swift 4 make it easier for "puzzle games", but I don't recall anything getting any simpler in any of *my* applications. All I remember is that a bunch of interfaces changed, again, so I had to go manually fix a lot of code. 
Swift subscripts are supposed to be constant time. Strings are made of elements which are variable size. They decided predictable performance was more important than saving a little space in your source code. Why are you subscripting by integer, anyway? I have a text-heavy application and I use `index(:_,offsetBy:)` less than 1 time per 10 KLOC. It's something that you almost never need to do.
Yep, I expect an uptick in users post Swift 5. Frankly formany developers it is just as well because all the changes to Swift forced a lot of code adjustments. 
Very nice! One suggestion for the beginners out there, installations on could be explained a bit better. Think about someone absolutely new to VIM. 
I appreciate that! I'm going to read through the Swift Tour first. It's helping explain a lot of the things that weren't explained in the tutorial book I was following.
Thanks for using your own time to teach me :) but i am sorry, what i am trying to know are the functions of ‚Äúas‚Äù, not the optional bindings. But thanks! :-)
Look into paintcode. Join dribbble, behance for inspiration and other than that be honest with yourself if you're artistically inclined or not. Some developers are just awful at ui/ux and realize it so end up hiring designers. No shame in that. Everyone has their own strengths.
The conditional casts and optional binding are important parts of the correct and Swifty usage of ``as``, so please, ungratefully dismiss what I was helping you to understand in more detail.
It‚Äôs a Stanford U course. You can find it in the iTunes U app
I am sorry if i offended you... that was not my intention, however what i was trying to say is - I want to understand what can ‚Äúas‚Äù operator be used as, for example segue.destination, the one i was confused on was not the ‚Äú?‚Äù or ‚Äú!‚Äù, it was superclassing something with ‚Äúas‚Äù. I appreciated your explaination as I see that you have took a really really long time writing the pararagh so i am really sorry for wasting your time.
Ahh... i am sorry, i just realized why it was my fault. Your comment was posted as a reply under my reply which was to thank the person who gave me the info. Sorry, i didnt know that you were trying to give me additional information and instead i though you misunderstood me for what i am trying to learn.
Cool. I read your courses online. Can you make fastai to work on swift?
All good.
What database do you recommend for this kind of project?
Good luck! My advice would be to also just create a test project and mess around with it, you will learn more than just reading through books.
Yes, you should use weak to avoid retain cycles.. **private** **func** dispatchtask(**\_** seconds: Int) { **let** work = DispatchWorkItem { \[weak **self**\] **in** **\_** = executeTask() } **self**.workitem = work DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(seconds), execute: work) }
You should definitely use weak to avoid retaining cycles. Also, dismiss applies to presentedViewController whereas viewControllers.removeAll will affect child VCs in the navcontroller stack. The most generic way to dismiss the view controller that is being presented is to call self?.presentingViewController.dismiss(...) You do not need to removeAll manually afaik; what do you want to achieve with this? Also, use: guard let `self` = self else { return } 
This is a pretty neat achievement Unfortunately [Swift‚Äôs performance](https://github.com/ixy-languages/ixy.swift/blob/master/performance/README.md) is really disappointing compared to the other languages this group wrote PCIe drivers with (Rust, Go, C#). I‚Äôm wondering if anybody knows why Swift is being so handily beaten in performance metrics like this. The Swift web frameworks are also much slower than Go or Rust counterparts. 
I‚Äôm on my phone but it looks like you didn‚Äôt assign a handler to the uialertaction - which would be a handler to present the second VC... This may help point in right direction from what I see. https://stackoverflow.com/questions/24190277/writing-handler-for-uialertaction
First thanks for setting people straight, to many have said that Swift can‚Äôt be used for low level programming. As for performance well a code review and then some profiling would be needed, something I can‚Äôt help with. Your linked article though indicates a lot of time spent in retain/release cycles, generally thaT is a bad sign for software that needs to act fast. In any event I‚Äôm sure fixing one or two bottle necks are will have a big impact. 
Pure Swift. As I said, it's been fairly easy. Anyone complaining about keeping swift current being difficult doesn't know what they're talking about. 
You're having a different conversation. The fact that Swift written today will have to be rewritten tomorrow, no matter how easy or not, makes it a moving target still, which was the original point. Also the original point, since the OP hasn't moved from ObjC yet, any move to Swift will most definitely not be the last, so why do it at all until that's the case? It may be easy, sure, but it's still work that will have to be done. 
‚ÄúAlthough three different developers with Swift experience reviewed the code, no one found bottlenecks introduced by bad programming patterns. There is nearly no dynamic dispatch in critical sections and object allocations/copies are rarely created. It might be possible that there are ways to improve the performance, but as the current code is quite standard Swift code, some solutions might offer better performance with the cost of having more C-like code without object-orientation.‚Äù
tl;dr: it's the same meaning as the Open/Closed Principle. What I don't understand: &gt; There‚Äôs a reason that open is not the default - it should only be used when you‚Äôre sure that you want your users to be able to do what it allows. ... Basically, unless if there is a good, concrete reason for users to subclass your class, don‚Äôt allow it! Why not? That's what subclassing is for. You can't guess how users will use your classes. In what case could subclassing a (properly designed) class cause problems? 
&gt; The fact that Swift written today will have to be rewritten tomorrow, no matter how easy or not, makes it a moving target still Have you ever actually done a swift migration? Because you sound like you haven't. 99% of it is automated shit like &gt;SomethingShared.thing has been renamed to Something.shared.thing, make change? auto-fixes. It's not even remotely hard or time consuming. You can even batch convert the entire project. Popular Cocoapods libraries change much more than swift itself at this point. &gt;Also the original point, since the OP hasn't moved from ObjC yet, any move to Swift will most definitely not be the last Again, it's trivial at this point. &gt;so why do it at all until that's the case because it's fucking easy, Swift is a great language, and obj-c is syntactically terrible. &gt;It may be easy, sure, but it's still work that will have to be done. Oh no, a small amount of work to move to a vastly superior language with easy to read syntax and built in safety features! How terrible! Objective-C is practically deprecated at this point, nobody in our area is even hiring Obj-C only devs. Swift 4.2 is incredible and 5.0 is basically identical + ABI stability. 4.2 -&gt; 5.0 will be yet another "click to update" and I'll probably have us on it within a few days of it's release. Stop making excuses for lazy devs. 
&gt; Why was it removed? It was never there. 
DispatchQue does cause permanent retain cycles. Reference - https://stackoverflow.com/questions/41991467/where-does-the-weak-self-go. Here is some code to go along with it. You can run it on playgrounds. So if you remove the weak self it allows for the closure to be executed, but if you put in the weak self it will not execute the closure. Hope that helps: class Device { let model: String var manufacturer: String func doSomething() { DispatchQueue.main.asyncAfter(deadline: .now() + 10, execute: { //[weak self] in //guard let `self` = self else { return } self.manufacturer = "hello world" print(self.manufacturer) }) } init(model: String, manufacturer: String) { self.model = model self.manufacturer = manufacturer } deinit { print("Deallocated Device") } } var device: Device? = Device(model: "iPhone 7", manufacturer: "Apple") device?.doSomething() device = nil 
Thanks for response, I added weak self and no retained cycles remained in the framework. I have created a framework, which has one navigation Vc, which gets **presented** when an app calls method **from the framework:** storyboard.instantiateViewController(withIdentifier: "NavigationController") After that, I need to remove navigation Controller and successfully return to the **app's last VC :) Is my provided solution correct?** It does work well, but I am not sure...
\&gt;The Swift web frameworks are also much slower than Go or Rust counterparts. Do you have a benchmark supporting this? Vapor claims to be much faster than most frameworks, and marginally faster than the single Go framework that was measured. [https://medium.com/@codevapor/vapor-3-0-0-released-8356fa619a5d](https://medium.com/@codevapor/vapor-3-0-0-released-8356fa619a5d)
If you look at tech empower framework benchmarks (the nightlies have more benchmarks run than the last official run), you will see that Vapor doesn‚Äôt do very well. There has been nothing obviously wrong I‚Äôve seen to explain this and the vapor team doesn‚Äôt seem too concerned with figuring it out at the moment. Benchmarks never tell the full story, but it‚Äôs probably the best you have to go off of, and I would pay more attention to techempower than I would something the vapor team set up (Not because I think they‚Äôd purposefully give inaccurate results, but they don‚Äôt have motivation to optimize the code for other frameworks). 
The fact that they don‚Äôt appear to have profiling tools that work properly with optimizations turned on is probably not helping... it‚Äôs almost impossible to investigate refcounting perf issues in a debug build, since the ARC optimizer is so critical.
Following 
Yes it is correct, but if you dismiss the navcontroller then all its children VCs *should* be freed from memory too automatically. 
/u/ssrobbi is correct, I‚Äôm referring to the latest TechEmpower benchmarks. This is the latest full nightly: https://www.techempower.com/benchmarks/#section=test&amp;runid=ad7a361c-c4b7-4942-92f5-d9602804c96d&amp;hw=ph&amp;test=query Vapor, Kitura, and Perfect are all around the 200-300s in the list (of ~500). The developers of Vapor are contributing to this benchmark to make sure the implementation is good, so this is a pretty representative benchmark. I‚Äôm developing in Vapor regardless, but it would be nice to be able to say that Swift is outperforming at least the Javascript and Python server frameworks (Express and Flask mostly).
I think the [Swift evolution proposal](https://github.com/apple/swift-evolution/blob/master/proposals/0117-non-public-subclassable-by-default.md) (see the ["Motivation"](https://github.com/apple/swift-evolution/blob/master/proposals/0117-non-public-subclassable-by-default.md#motivation) section) that introduced `open` does a good job laying out why it can be problematic for library developers. As a library developer, you can and should be thinking about all the ways your types are used. IMO, making a class non-subclassable is a similar decision to keeping a class or a method `internal`. Making your API as small as possible makes it far easier to reason about everything users could do with it, and it makes your library more maintainable. You can always make something `open` or `public` in a later release if it's requested by users without breaking backwards compatibility, but you can't go in the reverse direction. 
I'm not sure I'd bother, It seems abandoned: &gt; Supported versions: Kotlin 1.0.1, Swift 2.2
I made a Swift playground book (i.e., for Swift Playgrounds on iPad) that included all the text and videos from my [Swift in Sixty Seconds series](https://www.hackingwithswift.com/sixty), but I'm afraid I never released it ‚Äì there was a small formatting quirk that annoyed me. If you think it would be useful I could look into it again.
This. I don't think ABI stability will change too much of my workflow, but it's become my internal landmark to transition all of my older projects over to Swift.
Why didn‚Äôt you released it? I think the book can be useful, it‚Äôs a lot easier to read than to watch some videos imo.
My goal is to scream less when I try to multiply CGFloat by Int. Generally, I'd like to make my code much swiftier, using all the perks and shortcuts Swift has introduced in the last couple of versions. Generics should also take a bigger part in our life. We've managed to use them a couple of times this year. They require a different, more abstract mindset though. We're migrating our flagship product from 3.2 to 4.2 once we get back to work, we'll see how it goes. Would love to see that stable abi drop finally. Maybe we should wait for 5.0, but I also want to add ui testing and it shits the bed with webviews under 3.2. One of the external frameworks we are using got abandoned so we'll have to migrate that ourselves too, it's a small one though. A lot to look forward to, I wonder if the 5.0 release will bring the devs who were holding off on board.
&gt; My goal is to scream less when I try to multiply CGFloat by Int. See if you can sneak this one past code review‚Ä¶ üòÖ extension Int { static func *(lhs: Int, rhs: CGFloat) -&gt; CGFloat { return CGFloat(lhs) * rhs } static func *(lhs: CGFloat, rhs: Int) -&gt; CGFloat { return lhs * CGFloat(rhs) } }
It was a really minor thing: Swift Playgrounds enforces formatting around code segments, and when text finished without code it ended with a horizontal line that looked strange. I'd be happy to polish it up for release if folks thought it would be useful ‚Äì I already made a Core Graphics playground at https://www.hackingwithswift.com/playgrounds
Sure we can hack all the quirks of Swift, but what's a man without principles...
He's growing up so fast: https://twitter.com/jordanbpeterson/status/1079534451078713344
Nintinder. &amp;#x200B; An app for finding local people to game with on the switch, basically "swipe right if you want to ask to trade friend codes". &amp;#x200B; Something similar likely exists but I think it would be good practice to make a prototype of it, something for the portfolio if nothing else.
Always wanted to release a library for Swift/iOS on Github. Now if I could just think of something whose library doesn‚Äôt already exist...üòÖ
Learning Swift! I just graduated and am working as an associate Java dev right now, but I want to learn Swift sometime this coming year after going through some Spring stuff. 
1. [Books are definitely on the list.](https://imgur.com/GwSEppl) I've already started Advanced Swift. 2. Gainful remote employment. 3. Keeping a weekly blog. 4. Open source. Research and find a project I would like to work on. 5. Twitch live coding. Still knocking this idea around but I want to do something with it. 
* I might have to relearn Core Data...not looking forward to that. * person to person video ( working actually) * view animation (I‚Äôm just weak here) * start playing with the machine learning stuff
Something I am missing is when image classifier - of the main object in foreground of an uncluttered scene - crosses into objects recognition. WWDC presentation [slide 23](https://devstreaming-cdn.apple.com/videos/wwdc/2018/717nagdm5s7ynqf/717/717_vision_with_core_ml.pdf?dl=1) states Feature Extractor is pre-trained with millions of pre-classified images. How to recognize when the object I am trying to classify was not included into Feature Extractor pre-training? Has this problem anything to do with the 1,000x objects (slide 31) Vision FeaturePrint.Scene is capable to recognize off the shelf? And then I have to cross into object recognition described in slide 75 of same presentation - and feed Turi Create with millions of images?
Ahhhhhhhhh gross gross gross But clever. :P
1. Release an(first app) app on the App Store. 2. Hopefully land a job as an iOS developer. 3. Continue learning Swift. Maybe beyond just iOS. 
https://i.imgur.com/w6kL8VA.jpg It‚Äôs even somewhat done in Apollo 
A few, in no particular order: - Create a framework for an API I want to use in an app later this year - Learn SpriteKit - Write more Swift related content on my blog - Help friends learn more Swift
Ah I see. So it would look like word.asciiString[3] ?
&gt; it's a sign that there's a better way to accomplish Except incase you do lots of code challenges, I agree.
Might have been another language I confused it with. Thanks for pointing it out!
[https://github.com/raspu/Highlightr](https://github.com/raspu/Highlightr)
https://github.com/JohnSundell/Splash
Same, I‚Äôm in a coding bootcamp for it
Cool, thanks for the link, hadn't heard of this project before. Makes the Vapor article I posted earlier feel dishonest, I was under the impression that server-side Swift is supposed to be very fast (haven't tried it myself).
Next in line! 
You only need one right?
[removed]
My goal is to read fewer development books and blogs. I've wasted far too much time with mediocre writers.
No, you need both: one for when the integer is on the left, and one when it's on the right.
Nice! Good luck üëç
Starting my youtube channel :) 
WoW I wasn't aware of that! Thanks.
I really want to learn it, I‚Äôve been trying to for a really long time but I just can‚Äôt get through the basics, it‚Äôs not that I don‚Äôt understand, it‚Äôs just that I can‚Äôt keep practicing and my enthusiasm fades quickly. 
Nice article üëç I don't remember last time I had to use `open` in Swift. This is a good refresh!
If you're away from Xcode, and you don't have an iPad, you can watch the videos from Udemy or others. Basically you have a few main things to do, learn new things by running them on Xcode, memorize things like syntax, re-enforce things you already read/watched by going over them again so that they get into long term memory. So I'd suggest making notes on something you can take with you. I'm sure there's plenty of note taking apps out there, so you can take notes and review over and over and over until it sinks into long term memory. Maybe quizzes about iOS. Some audio things like podcasts are hard to follow and convert into visualizations of how it actually works in code. Video, reading and audio are probably better. You can get ALL of those without Xcode. You don't have to type in everything in order to get it. One other thing is WWDC. I'm downloading the videos now, you can put them on a Google drive and access them whenever you want. I've done TONS of that with Lynda.com, Udemy and others. Watching the same video several times, really does help getting it to sink in.
After you call dismiss, your loginVC could get deallocated before being able to present UIAlert. You can try with getting a reference to your StartVC by using let startVC = self.presentingViewController before calling self.dismiss. Then present your alert using startVC.present(alert) in dismiss completion
Pretty sure that for Apollo code blocks like that are just markdown. For actual syntax highlighting, check out [](https://github.com/apple/swift-syntax/blob/master/README.md)
Sorry for off topic; Do you use Trello for all of your todos? Why do you use it instead of Things, or some other specialised app?
Learn Swift, keep trying but don‚Äôt stick at it.
Is this the new discord server of the week? I was afraid we wouldn‚Äôt continue the trend and get a new one this week! /s
Are you using UIKit or AppKit (iOS or macOS)?
UIKit iOS
ContentOffset.y is the current y pos at the top of the scroll view, then you could for loop the views to see which is next or something, maybe use an intersect text method or something
do you mean present secondVC with segue or with popToViewController method? 
thank you!
I would be glad to read your book, as you described, the line shouldn‚Äôt be a problem. I like to read a book instead of watching some videos because I can go through the book more easily. It would be a waste to keep the book unrealeased. If you have time to polish it I think it would be awesome. 
That‚Äôs up to you - I assumed you were going to the second after login somehow - just move that code up into the completion of the action.
I get it, thank you!
Wait a sec so if i were to sum it up, the ‚Äúsegue.destination‚Äù is a UIViewController.., so it can stores data of type SecondViewController, but here‚Äôs my question. Is segue.destination a singleton? If not, how does it transfer its data to SecondViewController?
You'd be surprised how many Swift devs are on here. We've been going strong for a while now. Sorry to hear that other servers died on ya!
"segue.destination" is not a singleton. In your case, it is actually a SecondViewController type, but it return a UIViewController because when the "prepareForSegue" function is called, the app doesn't know what is the exact type of the destination view controller until the segue is performed, it could be a segue to ThirdViewController, or it could be a segue to FourthViewController (there can be many segue in the storyboard). To be safe, Apple set that segue.destination to be the superclass UIViewController. You then treat it as SecondViewController (that have certain custom properties you have defined), then you modify those properties accordingly.
Thanks and what i got from your explaination is that, SecondViewController is not a singleton, it returns type of UIViewController to be safe and also that the segue.destination takes care of all the transportation from (class 1 -&gt; class 2)? Correct me if i am wrong, please!
Yes you understood it correctly üëå
Thank you :)
Good to hear that you've gotten some interest. Unfortunately we get a ton of people posting about their personal discord servers here so it often becomes a flavor-of-the-week kinda thing.
It was basically one of those situations where "if all you have is a hammer everything looks like a nail". I was just putting down what I would like to read and keeping links to everything. I will use GoodRead to track everything once I start them. 
You really will have to give a better example of what you're trying to do, post the interview question example or similar. 
Basically just subscripting a string. In Python, you would just do "hello"[1] to access the second index ("e"). Here's an example interview question: reversing a string without using a library function I would currently do this: func reverseString(_ input: String) -&gt; String { var reversed = Array(input) var start = 0 var end = input.count - 1 while start &lt; end { (reversed[start], reversed[end]) = (reversed[end], reversed[start]) start += 1 end -= 1 } return String(reversed) } I'd like to know what the conventional way of doing in-place string manipulation is, in comparison with converting to an array and then converting it back.
You could use `replaceSubrange` for in-place mutation.
I mean, ignoring the internals of `String` and any issues with creating new ones multiple times: func reverseString(_ input: String) -&gt; String { return input.reduce(into: "") { $0.insert($1, at: $0.startIndex)} } 
Awh, I'm sorry about that. Single-day joiners aren't too welcome in our community as well. Gets a little annoying, being treated like tech support every so often! You have a good day now!
Swift is like a closed "open-source" programming language. There's not much significant use of it outside of iOS. Linux and MacOS seem like an afterthough.
Creating new strings multiple times is definitely an issue. I want to know what you would use as a default when time and space are issues that you need to be mindful of, in the context of an interview.
view.origin.y - scrollView.contentOffset.y
I find it annoying too. The reason it's not allowed is because `string[n]` is a fairly slow operation that may require stepping through all of the previous bytes in the string, so a simple 0..n-1 loop could have n\^2 slowness. I would add one of the Extensions shown here: [https://stackoverflow.com/questions/24092884/get-nth-character-of-a-string-in-swift-programming-language](https://stackoverflow.com/questions/24092884/get-nth-character-of-a-string-in-swift-programming-language)
Just released my POD : SpeechInjector With it you can easily add voice-commands in your app... Enjoy and have a great 2019 [https://cocoapods.org/pods/SpeechInjector](https://cocoapods.org/pods/SpeechInjector) &amp;#x200B; Demo app : &amp;#x200B; [https://github.com/revsimpson/SpeechInjector-Demo](https://github.com/revsimpson/SpeechInjector-Demo) 
Without dropping down into raw C-strings you can do: func reverseString(_ input: String) -&gt; String { var reversed = Array(input) var current = reversed.startIndex var last = reversed.index(before: reversed.endIndex) while current &lt; last { reversed.swapAt(current, last) current = reversed.index(after: current) last = reversed.index(before: last) } return String(reversed) } 
As a swift noob, why would you have to sneak this past code review? Seems like one of the points of extensions. 
Maybe try assigning your data to a variable and just pass along the reference to it? ``` let dict = ["Square": "Red"] let aTrackingArea = NSTrackingArea(rect: NSRect(x: 100, y: 100, width: 200, height: 200), options: [.mouseEnteredAndExited, .activeAlways], owner: window.contentView!, userInfo: &amp;dict) window.contentView?.addTrackingArea(aTrackingArea) ```
Figure out why I only get a photo every other time I press the shutter button in my app Release said app maybe Would like to build a swift interpreter like REPL or playgrounds in Python to make it more cross platform, but that feels pretty pie in the sky. 
Soooooo .. after spending an hour scratching my head BEFORE posting, I solved the problem 5 minutes after posting. I need to get my user data from event.trackingArea?.userInfo. Aye Carumba. Although - I don't totally blame myself. Here is right from the Apple docs userInfo: A dictionary containing arbitrary data for each mouse-entered, mouse-exited, and cursor-update event. When handling such an event you can obtain the dictionary by sending userData to the NSEvent object. (The dictionary is not available for mouse-moved events.) This parameter may be nil." So I read and obeyed. I send the NSEvent object a "userData" request expecting to get my userInfo back. No such luck. This might bring about a ranting post that I have been debating: The documentation for Cocoa/AppKit - especially on the Mac side - is really starting to crumble. For crying out loud, the apple View Guide, a document that is the foundation to understanding all on-screen visual elements, is no longer being maintained. WTF. Or even when I found the correct documentation on how to accomplish this - the SWIFT language page still has objective C code. You can obtain this dictionary per event in each mouseEntered(with:) and mouseExited(with:) method by querying the passed-in NSEvent object with [[event trackingArea] userData].
In the context of an interview, it seems it would be useful to point out that String.reversed() returns a simple wrapper around the string in constant time without allocating new space and that writing a potentially buggy and/or less efficient reverse function is probably a poor choice. 
Thanks for the idea; however, I did try that! See my other comment - I did eventually find the solution.
This is far too vague to answer in any meaningful way. What Swift features does it use? Are they features which changed from 3 to 4 to 4.2? How big are these classes/structs/enums? Do they use features not available in Obj-C? Most **importantly**, is the **source code** just plain text or **is** it **sometimes** in **bold**?
&gt; in comparison with converting a string to an array, mutating it, and then converting it back The other thing to realize is that you will be creating at least one new mutable object, either a `String` or an `Array` because `input` is immutable. Even if it's `inout` a copy may be made, you can't depend on the internals of `String` to avoid copying when you mutate it. However, we can make it a mutable `String` and avoid using `Array` if we add a `swapAt` implementation to `String`: extension String { mutating func swapAt(_ front: String.Index, _ back: String.Index) { let frontRange = front..&lt;(self.index(after: front)) let backRange = back..&lt;(self.index(after: back)) let old = self[frontRange] self.replaceSubrange(frontRange, with: self[backRange]) self.replaceSubrange(backRange, with: old) } } func reverseString2(_ input: String) -&gt; String { var reversed = input var front = input.startIndex var back = input.index(before: input.endIndex) while front &lt; back { print(reversed,input) reversed.swapAt(front, back) front = input.index(after: front) back = input.index(before: back) } return reversed } 
&gt; Basically just subscripting a string. That's not an interview question. That's one tiny piece of how you used to solve that problem, in a low-level language like C. &gt; In Python, you would just do "hello"[1] to access the second index ("e"). That's indexed on codepoint, which is usually not what you want in 2018. It's not what your Swift program is doing, either. &gt; Here's an example interview question: reversing a string without using a library function That's a terrible interview question, because it's something that you never have to do in real life, and is not well-defined for (Unicode) strings. What assumptions are you making? How exactly is "reverse" defined here? 
Here's a better example: https://leetcode.com/problems/longest-valid-parentheses/ My solution to this would start off by converting the input to an array of characters with Array(str). Is there a better approach than that?
to your* iOS* app : /
You don't need random access indices into the string for this problem either. One solution to this using _O(n)_ time and _O(n)_ space is as follows (translated from a solution I found elsewhere): func longestValidParens(ps: String) -&gt; Int { var maxLen = 0, start = 0, stack = [Int]() for (i,c) in ps.enumerated() { if c == "(" { stack.append(i) } else { if let startIndex = stack.popLast() { maxLen = max(maxLen,i - startIndex + 1) if stack.isEmpty { maxLen = max(maxLen,i - start + 1) } } else { start = i + 1 } } } return maxLen } But you can get away from even needing the enumeration of the characters and drop to _O(1)_ space with a tweak: func longestParens(ps: String) -&gt; Int { var count = 0, maxLenF = 0, maxLenR = 0, curLen = 0 for c in ps { if c == "(" { count += 1 } else { if count &lt;= 0 { curLen = 0 } else { count -= 1 curLen += 2 if count == 0 { maxLenF = max(maxLenF,curLen) } } } } count = 0 curLen = 0 for c in ps.reversed() { if c == ")" { count += 1 } else { if count &lt;= 0 { curLen = 0 } else { count -= 1 curLen += 2 if count == 0 { maxLenR = max(maxLenR,curLen) } } } } return max(maxLenF, maxLenR) } If you're willing to add an extra _O(n)_ space, you can avoid the repeated loop and just run the first loop on a reversed copy of the string (or I'm sure someone Swiftier-than-I can figure out the type magic needed to eliminate the second loop and keep from instantiating the reversal.
&gt; This might bring about a ranting post that I have been debating: The documentation for Cocoa/AppKit - especially on the Mac side - is really starting to crumble. Yuuuup. Every time someone asks about how to learn Cocoa/AppKit, I point this out. I also point this out every time any macOS/Cocoa dev goes off on Twitter about how it should be easy to port iOS apps without Marzipan. It's as if people are totally willing to overlook the death of a pretty good platform. 
Exactly my point earlier. Use your standard functions and only optimize when you absolutely can prove that you need to do it. You should definitely express yourself in an interview and take a position rather than following instructions that are counter to good practices. Believe me, most software development employers look for that kind of developer.
Depending on how you learn it may be easier/better to find a simple open source app and go through the code. Look up what each line does. Figure it out line by line. That‚Äôs how I did it back in the day, anyway :)
Let's start from scratch. First, with no coding experience, don't expect to be making an app you can sell on the App Store by even the end of this year. You have a lot to learn. Start by learning the basics of coding. If you want to learn Swift, you could try the Swift Playgrounds app on iOS, and there are a few other apps like Py. Otherwise if you're not fussed what language you use as a learning tool (and you shouldn't, the concepts translate very easily between most languages), you might want to look into something like Code Academy or Udemy courses, and there are plenty on iTunes U as well. After you've *completed* a coding course, then you'll have a better idea of what the video tutorials are talking about. That said, video tutorials **are the absolutely worst way to learn programming and app development**. Prefer books or online courses over videos, and make sure that they're up to date. If, after your coding course is done, you still want to use Swift, there are a plethora of good Swift-based websites that teach iOS app development from the very basics. If you get into Javascript, you might look into React. You need to make sure you can walk before you can run, and starting with video tutorial is like learning to crawl by reference to watching Usain Bolt at the Olympic games. Because none of us can there to guide you every step of the way, I thoroughly recommend online courses. Get involved in those courses' online communities or find people doing the same courses (maybe Discord servers, forums, etc.) so that you don't feel too discouaged when the course gets a bit trickier than you anticipated. Learning coding on your own can be a bit soul-destroying, but sharing the experience with someone, even a new online friend, can make your successes seem that much bigger and provide more motivation. After you've done the initial coding course and followed a few written tutorials, I highly recommend getting a good (and recent-to-the-time and relevant-to-the-latest-iOS-version) printed book to help you as you develop the app itself. Trust me, there's nothing like a good hunk of dead trees to provide a good reference when your screen is already full of as much Xcode as you can cram in it. Well, I say nothing better‚Ä¶ there's always Aunty Google, once you begin to understand the best terms for which to search. ;-) That's my advice. I'm sure others will say different things. Good luck!
The j you. I don‚Äôt have an idea for any specific app. Just want to learn. The areas the appeal to me the most are iOS app development Front and backend web development No so interested in core operating system apps or android. .... some code blending into hardware might be cool like audrino or pi 
Either way, all of that is still a little ways in the future for you right now. Start with the basics, but keep those as your goals!
Udemy and college courses and random projects. Find an app on the app store and try recreating it and it's features start simple and keep improving. Get the basic down. I remember when I was in your shoes. Barnes and noble for books or online. Stack overflow when your stuck. My first two years sucked the most now just music and creating. 
Honestly for an interview question I‚Äôd treat it as an array of characters and *tell your interviewer* you are assuming ascii, noting the difficulty of a proper utf solution. Unfortunately, despite knowing how to handle utf-8 properly being a much more useful thing to know, most interviewers only care about basic algorithms. 
Why are you like this
You can just do this with 2 subscript with keywords, rather than needing such a wrapper enum. But really, if you find yourself needing this (programming challenges are the only justifyable purpose I can think of), just convert your string to an array of characters (which does all the grapheme breaking in one shot), operate on it (with `O(1)` character indexing and slicing), then glue it back together into a string at the very end.
Pretty much been in the same place, so decided to mess around in Swift Playgrounds (the tutorials are quite fun) then just started to try and do some basic things like simple maths problems, eventually you'll start to pick things up :) My only real advice would be don't jump into the more complicated stuff too quickly, as I found myself getting lost. It's also fun to grab some code snippets off StackOverflow and paste these into Swift Playgrounds, you can start changing things and seeing where you get to. Good luck :)
This is really cool, thanks for sharing!
I landed an iOS dev job 2018. Goals for 2019 are Get better at Swift and iOS Build and publish my first app Learn Node.js
No prob... Will make some more pods and hope you all enjoy it. ü§ó
Brian Voong is pretty decent to learn from: [https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA](https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA) But it looks like you're wanting to learn more about the details of the language - have you tried to read the language reference: [https://docs.swift.org/swift-book/ReferenceManual/AboutTheLanguageReference.html](https://docs.swift.org/swift-book/ReferenceManual/AboutTheLanguageReference.html) ? &amp;#x200B; could be useful to go through it and use playgrounds to experiment.
getstream.io
Apple has a lot of documentation in header files. If you command right click on `UILabel()` in Xcode it will open the header file and will have code comments for the different parameters.
also I debated about whether I should post this here or r/devops. If not appropriate I'll switch boards.
Happy New Year! I think treating Swift likePowerShell may mislead you, just a thought. The parameters you're talking about sound like properties not parameters. You can command click on on a class in xCode and select 'Jump to Definition' to see the code for it. 
I think it is a very good platform. I first started to learn programming in the early 80's and did a lot of programming for my thesis work in the early 90's. Over my career I always had a need to write some code to solve some problems. I have also found Cocoa/Foundation/AppKit fast, easy and fun. Enjoying Swift now too. I was recently learning Python and Django to solve a task - while great - I just didn't have the time to really dive into it so I though I would jump back in to Mac OS. While I get the app I need running quickly, I was never too knowledgable about all the in's and outs of the environment - so rely heavily on the documentation. Imagine my surprise to find out that the Coca Drawing Guide, View Programming Guide, Concurrency Programming Guide, and the Mac App Programming Guide are ALL no longer being maintained. This makes ZERO sense as these documents give the background understanding on how the API works - without these documents you really can't learn from the current documentation. Of course, there are many on-line sources and maybe Apple has just decided to cheap-out and rely on the community. It's a shame. Also, I'm not saying these documents are great (for crying out loud, I don't think it is until after page 100 in the Cocoa Drawing guide that you actually learn code to draw a rectangle!!). But they should be maintained - and maintained in a more simplified, useful form would be great. I believe the change is slowing down with Swift, but they really need to lock down how Swift and Cocoa work together. It seems like they keep renaming stuff - all the time! My recommendation would be to slow down - take a year - get stuff nailed down, get caught up on all the documentation and guidance documents. Also, Xcode seems to be getting worse and worse as well. Maybe its just me but so many times the code completion just seems NOT to work. I has recently used PyCharm and was surprised how much better it was. 
Oh I know they are totally different animals. Properties is the term I should have used. I‚Äôm going to do the control-click thing to see if that helps.
What will you do in your everyday life at this job? Regardless, this seems to be better suited for r/devops as you mentioned ;)
https://boards.greenhouse.io/circleci/jobs/4120052002 This is the job description. I'm pivoting from working as a front end engineer and scaling back a little for a variety of reasons but primarily I think this suites my skills better. newb question: does tagging devops allow them to see this post?
ive tried to do some research into typical concerns at least for security ie OWASP10
Depends on which database technology you use. If you used SQLite (plain or with Core Data) you could ship a pre-populated DB that you create on a Mac or elsewhere. This would go in your main bundle. If you need it to be editable you would copy it to, say, the Documents directory of the app on launch, and use it from there.
Sorry it separated the code, I try to make my code easy to read by adding spacing between different sections. 
I recommend Realm or Core Data if you aren‚Äôt going to use this data on multiple platforms (web, iOS, Android). However, Firebase is easy to implement in all of those platforms. 
I personally was the lead iOS dev and decided to pivot to Junior Ops to see what the world was at here. It‚Äôs interesting! As far as security and networking, I don‚Äôt have many resources to give you to learn much sadly. Security is most of the time common sense. You can follow @SwiftOnSecurity on Twitter (he posts _a lot_, much of it is jokes, but some of it is interesting, most of the times it boils down to ‚Äúuse your common sense‚Äù). Networking, I think if you know the basics (firewall, TCP/IP, the layers of a network, etc.) you should be good. Good luck!
ThanksüòÄ this gives me an idea
Go to the help menu -&gt; Developer documentation. In the search filed of the window that opens, type "UIButton". Select the first item in the table that comes up. The page that displays will contain an overview of the class, some best practices, and a complete listing of all properties and methods that it contains.
If you add 4 spaces in front of each line then it will format it correctly, that means just indent all of the code 4 extra spaces.
Wait, this is the answer to why my code isn‚Äôt running? Or is this a suggestion for all of my code to be in the same box on Reddit?
Thank you for posting this. I purchased the book with the discount. Hands down Screen layouts consume the majority of my time and it can get so frustrating. A mistake in your table layout crashes an app. I am going to consume this book. 
the latter
Oh okay. Thanks!
Does your playground initialize ThingViewController? Was that just left out of your snippets?
No, this is the full code. How would I initialize ThingViewController? I‚Äôm new to Swift by the way. That‚Äôs why this probably sounds like a stupid question.
Nothing is left out. This is the full code. How would I initialize ThingViewController? I‚Äôm new to Swift by the way. That‚Äôs why this probably sounds like a stupid question.
You need some code like this at the bottom: PlaygroundPage.current.liveView = ThingViewController(style: .plain) Some more info is on the [`PlaygroundPage`](https://developer.apple.com/documentation/playgroundsupport/playgroundpage) or [`PlaygroundLiveViewable`](https://developer.apple.com/documentation/playgroundsupport/playgroundliveviewable) docs.
Thanks so much!
so the reason nothing is rendering on the screen is because you're not telling the screen what to render. I haven't used the playgrounds app much. but to get something to render in an Xcode playground you need some code like this: /***************** Playground Render Stuff ****************/ let tableVC = TestTableViewController() let nav = UINavigationController(rootViewController: tableVC) PlaygroundPage.current.liveView = nav PlaygroundPage.current.needsIndefiniteExecution = true where TestTableViewController would be your ThingViewController. The open and closed parenthesis are shorthand for calling ThingViewController.init()
thanks
I see that your performSegue after the image is captured. I'm wondering if your AVCapturePhotoSettings are getting messed up. It's hard to say, nothing else is jumping out with the limited code provided.
Cycles, yes, permanent no; any cycles created should be resolved when the enqueued closure is executed.
Yes I am. But notice I'm generating a new AVCapturePhotoSettings every time (in fact you have to because according to Apple, `It is illegal to reuse a AVCapturePhotoSettings instance for multiple captures.`) Also, it's really interesting that it works exactly every other time. So success, fail, success, fail...
Yeah, you're not the only one frustrated. I searched Reddit to see what people posted on the term "Auto Layout" and all sorts of fun pops up, like this one: https://www.reddit.com/r/iOSProgramming/comments/2g27nh/how_in_the_fuck_is_auto_layout_easier_than/ 
Wow, that's fantastic. I feel increasingly like I have all the comfort of python in compiled swift. Great work.
Wow this is 10 steps back imho. Why not use a codable type to lift this. And you get code completion and types for free. 
Codable has definitely been my go to for JSON parsing too, I actually made a framework called [Disk](https://github.com/saoudrizwan/Disk) that makes working with JSONEncoder/Decoder easier with the filesystem. But there have been plenty of times when I‚Äôm dealing with JSON that isn‚Äôt worth creating dedicated models for, or when I need to create JSON structures for posting to APIs. I found myself using that boilerplate in my example a lot. There is room for both parsers, at least in my projects.
When was this released? It was in September right?
Yep! It's been a few months now. I put this together a while ago, but finally had some time to open source it :^)
Thank you! Lattner talks about how dynamic typing is arguably what makes languages like JavaScript and Python so popular. I feel like this addition to the languages is the first step towards making Swift more accessible to all those typless barbarians out there :)
I just can't wait for swift_msgSend to be introduced, we're going full circle
I think what you meant to ask was, a framework that allowed offline speech to text ?
Yes, thats exactly what i mean
Doesn‚Äôt this require some IDE support? 
I think there‚Äôs only one available which last time I checked was ‚Äòsphinx‚Äô if it doesn‚Äôt have to be offline you‚Äôll have a bunch more choices
SwiftyJSON?
Thanks, this solved my problem.
Hey, I‚Äôve been using Disk for a while now. Highly recommend it. Great job mate
Thank you! :)
Yep SwiftyJSON was part of the inspiration to make this - I've used it in almost every one of my projects up until now.
Except it‚Äôll be worse because it‚Äôll be a C# inspired implementation.
Yeah an IDE that supports LSP, that‚Äôs all.
It's gonna sound fairly silly but does ML even for iOS require a strong background in math as well?
To implement the vision and createML frameworks mentioned here, no. Maybe just some basic geometry. 
Oh cool, thanks!
I was under the impression that the editor needed a bit more than Simple LSP support. I doubt I will ever find what I was reading at the time but they might have been referring to the rest of LLVM and the associated tools. 
Just found their stack in one of their job openings: ```Technology that powers Stream At Stream we use a wide collection of technologies to offer highly optimized and available features to our customers. Over the years we have experimented with different programming languages, frameworks, databases and libraries. Here's a short list of the technology that we currently use. - Go, Python, NodeJS - Django, Celery - Cassandra, Postgresql, RabbitMQ - AWS, Puppet, CloudFormation, Vagrant - Grafana, Graphite, ELK - Redis, Memcached - RocksDB ``` interesting stack
Why do I hear the Westworld theme when I look at this picture?
It has some use cases. For example if you want to only change 1 or 2 specific fields in a response and then use that as a request while keeping all the other fields and those fields could be extended any time. With this you don't have to update your logic every time there is a server side change.
Use `UITextView` &amp; `NSAttributedString` / `NSTextStorage` for coloring, font's, etc.
Nice job fully implementing this for JSON. I notice it's very similar to Chris Lattners proposal example when it was introduced to Swift, while taking other parts from SwiftyJSON. https://github.com/apple/swift-evolution/blob/master/proposals/0195-dynamic-member-lookup.md
Exactly! SwiftyJSON gave me a template for what exactly all the edge cases are for working with JSON data (i.e. `debugPrint` and `ExpressByLiteral`) and Lattner's proposal + some literature from /u/twostraw gave me a solid understanding of @dynamicMemberLookup.
Nice, if that's the case I would encourage you to add a references section in your readme
Nice, if that's the case I would encourage you to add references in your readme where credit is due. 
Great suggestion! https://github.com/saoudrizwan/DynamicJSON/commit/a2f8a7aa42329396c504f5b08189c090a0e83530
Mmmh maybe you need LLVM and stuff to have Swift‚Äôs LSP working, I don‚Äôt know ü§∑‚Äç‚ôÇÔ∏è Good luck, keep me posted if you find something ;)
In case you're still looking, there's an easy way to do this without bindings or delegates. All NSTableViews post a notification to the whole app every time their selection changes. In your other view's viewDidLoad you can add an observer like this: `NotificationCenter.default.addObserver(forName: NSTableView.selectionDidChangeNotification, object: nil, queue: nil) { note in` `guard let table = note.object as? NSTableView else { return }` `// table.selectedRow is the new selection (-1 is empty selection)` `}` Every table in your app will post here but if your master is the only one it should work fine. &amp;#x200B;
In case you're still looking, there's an easy way to do this without bindings or delegates. All NSTableViews post a notification to the whole app every time their selection changes. In your other view's viewDidLoad you can add observer like this: NotificationCenter.default.addObserver(forName: NSTableView.selectionDidChangeNotification, object: nil, queue: nil) { note in guard let table = note.object as? NSTableView else { return } // new selection is table.selectedRow (-1 is empty selection) } Every table in your app will post here but if your master is the only one it should work fine. &amp;#x200B;
In case you're still looking, there's an easy way to do this without bindings or delegates. All NSTableViews post a notification to the whole app every time their selection changes. In your other view's viewDidLoad you can add observer like this: `NotificationCenter.default.addObserver(forName: NSTableView.selectionDidChangeNotification, object: nil, queue: nil) { note in` `guard let table = note.object as? NSTableView else { return }` `// new selection is table.selectedRow (-1 is empty selection)` `}` Every table in your app will post here but if your master is the only one it should work fine. &amp;#x200B;
Aha! Thank you :)
SPM actually doesn't have Xcode integration, and there is no published plan for it (because Xcode isn't part of the Swift open source project). It seems like a reasonable assumption that there will be some sort of integration eventually, but for now there is no change in the status quo.
&gt; You should definitely use weak to avoid retaining cycles. This is kind of an oversimplification ‚Äì not all reference cycles are equal. Temporary cycles like this don't cause memory leaks. `asyncAfter` only retains the closure until it executes. After that, the closure is released and the cycle is broken. So if you `asyncAfter(deadline: .now() + 2)`, you only have a cycle for 2 seconds. After that, the closure is released, the reference to `self` is dropped, and the cycle is broken.
SPM can generate Xcode project files
Yes, but it rebuilds the entire project file when a dependency changes. At which point you lose any configuration you have about iOS targets, team configuration, signing, entitlements, etc. SPM is great at managing project files for frameworks or utilities, but if you're doing an app (especially iOS) it's probably not the best option right now.
So this new thing or is swiftyJson still safer and better? 
Nice! Guides like these are also helpful to beginners : [https://github.com/linkedin/swift-style-guide](https://github.com/linkedin/swift-style-guide), Swiftlint as well if you're just starting out!
Why does iOS have a 1000 ‚Äòbeginner guides‚Äô? Apple‚Äôs own guides are more than sufficient.
And me too
Illl keep that in mind, and will add a link to the guide you suggested!
Xcode now has a feature that syncs your certs and it works most of the time. I‚Äôve found [match](https://docs.fastlane.tools/codesigning/getting-started/) to be more reliable and deterministic. 
Do you know if all the courses/tutorials linked work with latest Xcode/Swift ? Nothing worse than something not working that your trying to learn and it‚Äôs because the author hasn‚Äôt updated it recently.
!RemindMe 30 days
I will be messaging you on [**2019-02-02 12:28:46 UTC**](http://www.wolframalpha.com/input/?i=2019-02-02 12:28:46 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/ac0ph7/a_short_guide_i_wrote_on_learning_ios_development/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/ac0ph7/a_short_guide_i_wrote_on_learning_ios_development/]%0A%0ARemindMe! 30 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ed58wy3) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
The paid course by Angela Yu is in Swift 4, which is the latest version. Most of the tutorials are as well, but some of Brian Advent's and CodeWithChris' videos do use older versions of Swift. However, most of the time the updates aren't very significant - also, if you write a line of code in an older version of Swift, XCode usually provides a suggestion to update it to Swift 4.
Just started to do the basics in Swift Playground on my iPad Air. It's really fun to learn. However I feel like it's really slow to load the code while compiling. I know it's 6 years old but just wonder if there is something I can do about it? 
Just a heads up this is more of a question for /r/iOSProgramming Take a look at UIViewControllerTransitioningDelegate ([here](https://www.raywenderlich.com/359-ios-animation-tutorial-custom-view-controller-presentation-transitions) is a link to a tutorial)
None? I think it‚Äôs just a regular custom view. 
This.
Or a stack view. 
If I were to make this, it would be a stack view. 
Cheers, purchased the Udemy course, looks good.
I'm reading through google and SO and I simply see quotes from this famous guy saying " "You can solve every problem with another level of indirection, except for the problem of too many levels of indirection" Anyone can ELI5? I'd also like to know this.
I have an auto-vibrate function which I want to cancel when turned off. As I have it right now, the function calls itself at the end which makes it call itself 1 last time after turned off. Is there any way of canceling dispatch queue items? I use this code to delay the call: `DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(secondsDelay)) { // Your code }`
Enums store there data inline by default. This means that in the case of a recursive definition, they would be infinite in size. The indirect keyword changes this so that instead of storing the data directly, a reference to the data is stored instead. This makes the enum finite in size. The reason that you don‚Äôt need the indirect keyword here is because the array struct already stores its data through a reference so it‚Äôs already finite in size. Swift allows you to add the indirect key word even if it‚Äôs not needed so it never breaks anything, but the extra indirection makes the enum slightly less efficient.
That looks like Yelp. You can swipe left and right to see more restaurants, right? If so, it‚Äôs probably cells within a horizontally scrolling collection view. Within each cell, as others have said, it‚Äôs likely to be laid out using a stack view.
Solving problems with indirection is how you organize the logic of larger libraries. For instance back in the day graphics programming was pretty hard and programmers were required to draw each pixel to the screen manually. We then fixed this problem with a layer of indirection like Metal where I can create triangles between 3 points and let Metal figure out how those triangles translate to pixels on the screen. The exact same work is being done, Metal just abstracts away the physical screen we have on a computer to a 3D space we can put triangles in. It makes 3D graphics programming much much easier. For some people, programming Metal is too involved, so we‚Äôve added more abstraction layers on top of that. For example SceneKit in iOS abstracts away the hard parts of implementing Metal rendering to the point I can say load ‚Äúmodels/my3dModel.obj‚Äù and put it at position (2, 0, 1) and my model is rendered. Without these layers of indirection and abstraction, those 2 lines of code in SceneKit would be thousands and thousands of lines of code manually. The best programmers create these layers of indirection with flexible but easy to use APIs so the next person that comes along doesn‚Äôt need to learn how it works, they just need to know what it does. I can make a triple A game in Unity with absolutely no knowledge of how my objects get rendered to the screen. I just know Unity‚Äôs API and the layers of indirection handle the hard part. Too much abstraction occurs when you‚Äôre API can‚Äôt can‚Äôt handle something you want to do. Like making a 2d game in SceneKit could be seen as too much abstraction because you could probably work faster with your own very small library to just draw images to the screen and not worry about their coordinates in 3D space. 
Here's a good answer: https://stackoverflow.com/questions/37533006/indirect-enums-and-structs &gt; The first piece of code makes BinaryTree&lt;T&gt; stored by a reference everywhere it's used. &gt; &gt; The second piece of code makes BinaryTree&lt;T&gt; stored by a reference only in the case of node. I.e. BinaryTree&lt;T&gt; generally has its value stored directly, except for this explicitly indirect node case.&gt; 
This does everything SwiftyJSON does except migration. It has way less code thanks to some of Swift‚Äôs newest features, and it lets you write less code as well. Instead of using brackets and quotes to drill into JSON, just type the names of the properites you‚Äôre looking for like theyre part of the type system.
Thank you for the explanation. That makes a lot of sense. As associated values are immutable (well, copy on write), I assume that the only reason associated value arrays are not stored inline is that they can be too big for the stack, right?
Well, it‚Äôs really because they allocate memory at run time as needed. Memory stored inline on the stack must have a static size. 
- CocoaPods: if you want the code within Xcode available and don't care that it modifies your config (binaries can be done) - Carthage: if you want full control over your config, and just include frameworks (for swift binaries you could use Mint) - SPM: has no Xcode integration - Conan: if you have other libs (e.g. C++) you want to use and have a clue about different build systems. It all depends on what you are using in the end. Swift only and require Xcode support? use CocoaPods or Carthage. I'm a Carthage guy, but requirements are everywhere different and change.
Perhaps use the delegate pattern? In the other class create an optional variable that holds a delegate then use didSet to call a method on the delegate. Then make your view controller conform to that delegate protocol you made and set it as the delegate of the other class.
Thank you, I try that. Still pretty new to Swift and xcode so I'm not quite sure how to use it, but I'm sure I'll find out soon :)
You could also use [Key-Value Observing](https://developer.apple.com/documentation/swift/cocoa_design_patterns/using_key-value_observing_in_swift) to accomplish this. But @LukeK-Dev is right, a delegate pattern is probably the best choice.
In addition to delegation and KVO, you can also use NotificationCenter. They all have situations where they are the best: &gt; Use a delegate when there is a "master/slave" relationship (delegate knows about the class and class knows about the delegate), with one class higher up the control hierarchy, and when it is clear that there won't be situations where other elements (mostly UI) will be interested in knowing what the class has to say. Use notifications when the class is not interested in knowing who listens and how many they are, anybody and any number can register for the notifications. KVO is useful to listen "without the class knowing", although of course that's not the case, the class on which KVO is applied does not need to be changed. https://stackoverflow.com/a/7865246
If you have transparent background and height based top content inset then you can have your collectionView start at only 75%. CollectionViews are also scrollViews, so you can just subscribe to scrollViewDidScroll and call dismiss when the contentOffset is above a certain threshold.
Carthage is basically like using submodules (It also has an option to do that instead of just checking out the code) and including them in your workspace but it also prebuilds the frameworks, so it's the purest while also providing short build times.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Learn iOS development in Swift by contributing to an open source Reddit client](https://www.reddit.com/r/iOSProgramming/comments/ac8z0d/learn_ios_development_in_swift_by_contributing_to/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Will do. I think I enjoy enjoy working on this üòâ
The swiping aspect? Probably a custom view or a collection view. The content itself is just some custom view. I doubt Yelp is using a stack view, probably some internal stack like thing. 
The array *is* stored inline, but the array itself is a struct which points to some memory elsewhere. This is for efficiency reasons (copy-on-write) and so that it can be resized.
You can add the database as a file to your project, and when starting up you check if you have the database in your Documents folder where you can actually write files on the device, and if you don't, you copy the default one there. I did this with a SQLite DB, it worked flawless. Basically like this: https://stackoverflow.com/questions/6545180/ios-copy-a-file-in-documents-folder 
This seems awesome!
Is reloading the cell at that index path not efficient? You could use something like this: `func contentDidChange(cell: Cell) { self.tableView.beginUpdates() // reload the cell with the updated label value... self.tableView.endUpdates() }`
Noob here, why do we need to run 'make generate' to compile? Thanks for doing this :)
Great question! Most iOS projects, including this one, use some add-ons to make development easier. One popular add-on is Cocoapods which some projects use for managing their 3rd party libraries. Such projects require additional setup / configuration which can be a manual process and take time to setup on a new clone of the project. The "make generate" command will setup the project automatically so you do not have to do the individual steps of setting it up. In the case of Area51, I am using XcodeGen to generate the xcodeproj file so there are no merge conflicts when multiple developers are adding files. I am also using SwiftLint to enforce a code style which is standard across many companies. To make setting up these tools easier, I created a make command which will fetch a specific version of these tools and install them local to the project instead of globally to the machine. It will also generate the project once the tools are downloaded locally. It does not download the tools every time if they already exist. [Here](https://github.com/kgellci/Area51/blob/b6d9ed9bd5b7cd8b746dff7653bd1216a976de1f/Makefile#L1) you can see the generate command which downloads a specific version of XcodeGen via this [script](https://github.com/kgellci/Area51/blob/master/scripts/ensure-xcodegen.sh) and then generates the project by using XcodeGen. So this is basically all extra sugar to make setup easier instead of giving the instructions to fetch a specific version of each tool and have them installed locally. You can read more about the [setup of Area51 here](https://github.com/kgellci/Area51/blob/master/docs/project.md). 
&gt;I am also using SwiftLint to enforce a code style which is standard across many companies. &amp;#x200B; what if i already have Swiftlint on my system, should i re install it ?
The project will automatically fetch the correct version of SwiftLint local to Area51 when you run "make generate". It will not interfere or interact with your global version of SwiftLint. The reason it was done this way is to be able to lock Area51 to a specific version of Swiftlint which will be consistent to the project instead of relying on the developer to have the right version.
thanks for the comprehensive answer!
yes but that's not how its suppose to work, imagine having 20 Swiftlint on my system on for every project i'm on ? shouldn't the script check if swiftlint is available on the system otherwise install it ? and the reason of having a consistent version should be just using a .swiftlint.yml for the project ??
It‚Äôs very similar to SwiftyJSON, but requires you write less code thanks to new Swift features!
I saw this notification this morning. Did you write one this morning? It‚Äôs either that or I‚Äôm going crazy
If this is using Apple‚Äôs MapKit this is most likely a custom MKAnnotationView that would hold any views you need. Stack views would work best here like others have said, but probably not collection views or table views. 
If you have 20 different projects on the system, it would be difficult to ensure that they are all on the same version of SwiftLint. It may be easier if you are the owner of all projects and you can update them all to the latest version all the time but when working with multiple open source projects, you are relying on all projects using the same version at all times. It is similar to how cocoapods work. If you have 20 projects which all depend on AFNetworking, you will end up with 20 copies of AFNetworking because having one global copy shared between 20 projects is difficult to manage. We could of course tell the developer that their version of SwiftLint is not supported and they need to upgrade or downgrade but this is a PITA for the developer who needs to change their global version of SwiftLint depending on which project they are using. In terms of resources on the machine, Swiftlint is not running so having 10, 100, or 1000 copies of it only makes a difference in terms of hard drive space. 
i'm not sure about your argument as you should never use an old version / asking the team to downgrade (and isn't the upgrading major version only if it's going to break backwards compatibility ? &amp;#x200B; anyway that's not my point but if we are going to learn developing we should use best practice (so is forcing to install local version for a tool that's suppose to stick with the developer/be part of his toolchain a best practice ? ) limiting to a version without upgrade to be sure the config file will work ? 
&gt; i'm not sure about your argument as you should never use an old version SwiftLint introduces new default linters which may or may not pass on older projects. Having a single global version of SwiftLint would force you to either change version or update all projects on your machine to pass the lint. Additionally, Swift itself changes so if you have a project on your machine which is Swift 3.0, you would need to switch your global version of Swiftlint https://github.com/realm/SwiftLint#swift-version-support Additionally, if Swiftlint releases a non backwards compatible version tomorrow, I can update and increment A51 to be on that version and it would have 0 impact on anyone contributing to A51. They would not have to decide if they need to update all of the projects on their machine or manually manage multiple version of SwiftLint. I think for the most part, best practice is to have a development environment which just works so the developer does not need to worry about versioning of tools or setup. The developer wants to focus on building and shipping features, a properly setup project should allow them to focus on that. &gt; forcing to install local version for a tool that's suppose to stick with the developer/be part of his toolchain I do not agree that tools need to be considered global (stick with the developer). The habits of setting up tools specific to the project is a practice which larger development teams use and is a good practice to adopt. It allows you to maintain many projects on a single machine and not worry about the versioning of tools conflicting. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/firebase] [\[Cloud Functions\]\[iOS\]\[Swift\] Using a static var in my AppDelegate instead of a lazy var in each View Controller](https://www.reddit.com/r/Firebase/comments/acbp1q/cloud_functionsiosswift_using_a_static_var_in_my/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
i get your point so thx for taking time to reply :) and hopefully i can help with the project 
No prob! If there is anything which is not clear, feel free to comment or create an issue on the project in GitHub and I can update the docs.
No problem at all! It is a good practice to question decisions which are made. Someone suggested implementing coddle for some JSON parsing in the project: https://github.com/kgellci/Area51/issues/10#issuecomment-451298963 This would be an awesome thing to start on if you have time. I can make a new issue about it.
Such a cool idea. Will do this if time allows 
Cant wait to contribute!
FWIW what he‚Äôs doing in this project is what I would consider best practice. I work in a large digital company (one of the big ones) and its what we do to ensure old and new projects are always ready to build.
&gt; The advantage of Swift is that its syntax is trivially easy - it shouldn't take more than a day of exploring to get familiar with it. Swift probably has a simpler syntax than any of the major languages out there (bar Python, maybe). Haha! Seriously, what metric are you using for this claim? I don't know of any language with *more* reserved words than Swift -- even C++, these days. Swift syntax is incredibly complex.
That would be awesome, hopefully will be available next week to look into it (i'm sooooo fkn noob btw :D )
Don't put your static variables in the AppDelegate. Also I'm pretty sure that function will return a pointer to a singleton, so that's like 64 bits per pointer.
Mind explaining why I shouldn't put static vars in the AppDelegate? Apple's own Core Data implementation puts the \`persistentContainer\` and \`viewContext\` as static vars in the AppDelegate, and I was recommended to make my \`CLLocationManager\` a static var in the AppDelegate. Certainly I'm not trying to litter the AppDelegate class with unnecessary variables, but it seems logical to me for those commonly used framework handles to be there.
Because that would require me to define 3 new structs, which would take at least 3 lines of code, which defeats the whole purpose. This way takes only 3 words. Code completion and compile time type checking are handy when I have to write several new data structures, but when it's just 3 words, I can just type the word, and look at it to see that it's correct.
Conceptually, cell does not update itself, you do it through your table view‚Äôs delegate/datasource (most likely your UIController. If you do need to have a separate stopwatch on each cell (although I‚Äôd suggest one on controller instead) make a custom callback from cell to controller to force controller to update your cell (s)
This seems like the sort of thing that would take less time to experimentally check than to write this post.
I've already been, and will continue to experiment. &amp;#x200B; I just haven't noticed a difference so I was asking more from a "best practice" perspective. It seems easier to me to use the static var in the AppDelegate but there may be legitimate reasons not to that I'm not currently aware of.
There are 1000 times more tutorials about architecture than core data and they didn't want to explain all the possible good/acceptable ways to group your functions/variables into different classes and instead made the tutorial only about the core data API without caring about architecture. There is this thing called single responsibility principle that says if you want to dump all your singleton static variables into one namespace (class/struct/enum) then that class shouldn't have other responsibilities. CLLocationManager requires an active delegate. And it's also frequently smart to have 1 more layer just for managing the data that your cllocationmanager uses to decide when to request location from the cllocationmanager.
I would love itÔºÅBut I‚Äôm such a noob,both English and programming......
Right, okay that does make sense. While it seems *cleaner* to me to use several static variables in AppDelegate, I was looking for a good counter-argument and you've provided one. Would you recommend that I go ahead and create a class dedicated to these singletons? All told, I have 6 of them. 3 for Firebase, 2 for Core Data, and the 1 CLLocationManager. Re-declaring every Firebase handle in each VC seems unnecessarily redundant, but if it's objectively the best way to do it then who am I to argue. Right now I have them in the AppDelegate as: ``` static let firestore = Firestore.firestore() static let functions = Functions.functions() static let remoteConfig = RemoteConfig.remoteConfig() ``` which lets me access them easily in whichever VC I need. For the CLLocationManager, I store the reference statically in AppDelegate but the view controllers that use it make themselves the delegate and handle all of its responsibilities. That way, when switching VCs, I can just say \`AppDelegate.locationManager.delegate = self\` and implement the delegate functionality as needed for that VC. Any thoughts? Thanks again.
No problem! You can just clone on your machine and play with the code on your own! Try hacking something in, changing colors, etc.
Thanks for your recommendation, appreciate it.I will start with it. ps. My English is poor, hope I actually write what I mean...lol
404 page not found üòü 
That‚Äôs odd, working for me ü§ûüèª
Yeah, they need to be able to run concurrently, it would be more straightforward with just one. What I am struggling with is, when the timer is running and my counter is growing, I would normally do a scheduledTimer w/ a target function that updates the label. But I can't put an objectiveC function in the tableViewCell class and I don't see how to put in the VC because the outlets for the clock label are in the cell class, which needs to be updated in the tableView function. Am I even making sense to you, maybe I should post some code?
No, that is not the issue. I don't think that I have to consider performance. I am just struggling with how it should work. Like the relationship between everything. I don't see how to get the updating of the label to work correctly.
Don't have XCode with me now so it's more of a pseudocode In cell (`YourCell`): `var delegate: YouControllerClass! //property on cell` `func updateTimer()` `{` `delegate.updateCell(self)` `}` &amp;#x200B; In delegate (`YouControllerClass`) `func updateCell(YourCell)` `{` `// find cell id` `let indexPath = tableView.indexForCell(cell)` `// update cell` `tableView.updateCellAtIndexPath(indexPath)` `}` &amp;#x200B; `func tableView(cellForRowAtIndexPath:indexPath)` `{` `let cell = //get reusable cell as? YourCell` `cell.delegate = self` `//configure cell including timer label` `}`
Very cool, thanks. I was missing / unaware of the tableView.indexForCell and tableView.updateCellAtIndexPath Im going to write out some pseudo code, step back, and get a little more organized. Thanks so much!
Haven‚Äôt used Firebase, but if the recommended way to use it is through lazy var on a controller I‚Äôd probably stick with that. The general rule of thumb re AppDelegate is to stay away from it. Don‚Äôt put anything in it as long as there is no alternative. Reason is very simple - Single Responsibility Principle. AppDelegates tend to get so over bloated it gets quite ugly. To avoid retyping things over and over again, I‚Äôd the lazy var in a BaseController. There‚Äôs no downside to subclassing in this case as the var is and not going to be executed unless your controller actually needs it. 
Generally, if the relationship between ViewController and other class is long-lived and rather complex, a delegate is used. But if it's just one method, often you use a callback. Example follows. In the class where the variable will change, also add a variable with a closure: class ClassThatUpdates { var variableThatChanges: String { didSet { self.onChange?() } } var onChange: (() -&gt; Void)? } Then from the ViewController, configure that block: class ViewController: UIViewController { private let classThatUpdates = ClassThatUpdates() override func viewDidLoad() { self.classThatUpdates.onChange = { print("Variable was updated to: " + self.classThatUpdates.variableThatChanges) } } } 
Thank you for sharing! One question to developers. How many of you are using these in production apps? In my experience, I‚Äôve never seen them used in the field.
Duly noted. Thanks for the tip.
This is pretty awesome. I‚Äôll dig into this over the weekend and see how I can help. 
It‚Äôs actually good practice, I‚Äôve seen this few months ago, and now I‚Äôm using it every time. For example : you have a lot of buttons, let‚Äôs assume you want each of them to be rounded. Following IBDesignable/IBInspectable tactic, things will go much easier - instead of implementing button.layer.cornerRadius = 7 in viewDidLoad for each button, you can just assign those buttons to particular UIView. 
works for me too
Thanks! In the end I did use a delegate (turned out it was useful for a couple other reasons too), but that's really great to know!
Me, at least.
Yea I have one simple tutorial for @IBDesignable as well: Don't ever use it until Apple fixed the compilation time for that or you have your app divided into separate modules with your UI elements. Or you live in other dimension where time goes by literally countlessly slower. @IBDesignables are designed in a horrible way and everytime you open interfacebuilder they need to recompile again and again. Best practice is to ignore them because when your codebase starts to get bigger you will start make optimisations and one of them is to delete this mark from your View files.
Where I work we use SwiftLint. Some of our guidelines include max Method length for lines of code, no force unwrapping or implicitly unwrapped optionals. Open bracket on the same line as the method name and if condition. Spacing is a big one too. We try not to have double spaces between lines. 
I disagree on this. No function returns nothing as a function that seems to return nothing actually returns Void.
Good to hear that these are being used in production apps. Thanks for the replies 
I would like to contribute too
No. Returning a nil value is a valid operation.
Well, that worked like a charm! Thank you so much!
i am also learning swift right now hoping for a career change within the year. the angela yu course is really good, i have that one as well. there's also another udemy course by mark price(i think thats his name) and its really extensive. it's over 70gb of stuff! id also recommend ray wenderlichs website, he has a bunch of free tutorials and books you can buy that get updated w/ each xcode/swift major update. good luck
Thanks for the info. Did you base these on some best practices document? Or just decided by your team?
Seems like this goes against pretty much every programming language that support functions, no?
I really like [Google‚Äôs Swift style guide](google.github.io/swift). They follow a style that‚Äôs very close to the Swift standard library.
I suppose that makes sense, if you don‚Äôt view Void as a type in and of itself, but Void is just a type. A function that ‚Äúdoesn‚Äôt return anything‚Äù _does_ in fact return Void, a type which has only one member.
Thank you! This is what I was looking for
Just because the implementation allows this doesn't mean the language should.
They only cover some things, and are mostly aimed at library developers, but Swift.org has a useful set of guidelines: https://swift.org/documentation/api-design-guidelines
Yes, definitely. It would still be inconsistent with the type system. Do you have any specific reason for this or is it 'just' about readibility for you?
It's about readability, which is very important actually.
The keyword `return` doesn't mean that it's returning a value, just that the expression is returning to the point at which it was entered. If there is a result then that is also carried to the point of execution. So: func doSomething() { return } Works like: // enter function doSomething() // function returned to point of entry
Yes, readability is one of the most important characteristics of a programming language imo. But how does adding this constraint improve the readability?
I think you're confusing (pointer) indirection and abstraction
Functions that don't explicitly declare a return type implicitly return `Void() ` (a.k.a. The empty ttuple `() `, a.k.a. "Unit" in type theory) of type `Void`. They don't return `nil`, that's different, it's an alias for `Optional&lt;T&gt;.none`.
I much prefer it. If an API changes to add a return value where there previously wasn't one, then any wrappers you right in this way will automatically error out (because you would now be trying to return a non-Void value from a Void returning function), prompting you to respond. Plus, it gets rid of an edge case in the language, that's the whole point of `Void`. We can model the idea of functions that don't return values in a way that keeps them uniform with other functions.
Hi, Thanks, went for the Angela course. Only 9.99 in the UK. Cheers
I love to stick with Google Guideline because the documentation which they provide is much more clearer to other equivalent docs and helps you to declare your intentions very clearly.
Pretty much every App I build has a border-with-radius UIView like the one in the tutorial. To make "cards" or anything like that (which pretty much every App has) it's extremely helpful to see the borders in Interface Builder.
To disable the churn on the CPU you can disable "Automatically Refresh Views" and then whenever you make a change to the IBDesignable elements select "Refresh All Views" I know exactly what you mean. My Macbook Pro was working WAY too hard one day and it was because the ViewController I was working in had IBDesignable elements in it and was recompiling with every keystroke, even though I wasn't working on those IBDesignable elements. I suggest only turning on "Automatically Refresh Views" when you are working on the IBDesignable elements themselves. Otherwise compiling the interface file once (when you open it) is enough.
Coding user interface + Playground ftw. Much faster than doing those funny things in interface builder
No, your best bet would be to develop some sort of in house url shortening or use a url shortening service.
This actually sounds awesome! Please send me a link when it‚Äôs done
I mean, just doing this would work fine: function1() function2() But it sounds like some async code exists, and function1 is running of a separate thread. The easiest way to address that is to add a completion closure to function1. So... function1(completion: { function2() }) //or function1() { function2() } func function1(_ completion: () -&gt; Void) { //... completion() } 
Check github. 
I really like [raywenderlich.com](https://raywenderlich.com) guidelines: [https://github.com/raywenderlich/swift-style-guide](https://github.com/raywenderlich/swift-style-guide)
Swiftlint is a good start
So shit. You also comment on Stackoverflow questions: ‚Äúgoogle it‚Äù
GitHub Repo](https://github.com/nathantannar4/InputBarAccessoryView) 
 if cell.textLabel?.font.pointSize &gt; 100 &amp;&amp; indexPath.section == 0 { cell.textLabel?.text = "Random Text" } I'm having this issue where if I force unwrap cell.textLabel for the pointSize it'll work but keeping it unwrapped produces the following error: Expression type 'CGFloat' is ambiguous without more context 