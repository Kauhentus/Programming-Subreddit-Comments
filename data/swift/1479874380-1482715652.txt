&gt; I'm just about to start the Udemy course The Complete iOS 10 Developer Course I started this course a couple weeks ago and have found it to be really excellent. The best part about the course is Rob provides you pieces but then asks you to go out and form those pieces into a complete app on your own, which solidifies the learning. In the other courses I tried (which I will go back to once I learn more) I just felt like I was typing code but not really putting anything to memory.
Anyone? 
You should check out Hacking With Swift. https://www.hackingwithswift.com/ It's free to read online. I've recommended it to three people with no prior Swift experience who were interested in learning, and they loved it. When you finish it, go through Pro Swift and Swift Coding Challenges (from the same author).
&gt; Wright brothers Before them, Pearse invented it months before Wright brothers. http://www.ctie.monash.edu.au/hargrave/pearse1.html
Thankx!
If you want to just code in swift, try the IBM Sandbox website: https://swiftlang.ng.bluemix.net/#/repl. 
You should include the error, so we can help diagnose the actual problem. Also how are you setting the variables "username" and "password"?
I do the swift package init stuff. Then the swift generate xcode project in command line. From this the only thing I can do is build within xcode. Nothing else works. I wanted to press run or run the tests from in xcode but nothing works. Everything will only run a swift build. I am sure I could spend 20 minutes and set up an project entirely for xcode, but then I need to save template projects and stuff so that I don't have to do that every time. Just kind of annoying. 
Depending on the kind of project you've created, it's possible Xcode selected the wrong scheme. Look to the right of the play and pause button ‚Äì if you see a yellow toolbox there it means Xcode is building a framework rather than an executable. If you have an executable, click that toolbox and select the scheme with the black terminal icon instead. That should allow you to build and run.
Put it on GitHub and set tags. This lets other developers use the Swift package manager to pull in your library at a specific version, or allowing updates, depending on their needs. Make sure you use [semantic versioning](http://semver.org/) though!
I'm surprised the SO has anything to do with this, I found SO to be a kinda rough place if you ask a question people don't like, they slam you for it. I could see where Upwork would be hard to get started, do they have a way to link prior work that doesn't come from Upwork? What about past jobs and references? Some of us are newer to mobile but not new to programming.
For battery and Touch ID, no. For the Touch Bar, [yes](https://help.apple.com/xcode/mac/8.1/#/dev7a8cb8a8c). Note that you have to have build 16B2657 of 10.12.1 installed. More info available [here](https://developer.apple.com/macos/touch-bar/) (also in case the other link goes bad).
username and password are always empty strings
That makes sense because the people on Upwork would be right there to verify. Do they verify ID or what country your in? I would guess they would have something that would stop people from pulling a scam where they setup different accounts and upvote themselves. In other words, what's to stop someone from setting up several accounts, giving themselves jobs, saying they are in Silicon Valley and do great work, then scam people and be in North Korea? Just like buying fake Twitter followers or paying for app reviews.
500 fairly condensed pages aimed at programmers. You could easy get 1000 in a beginner book to teach the same content. Easily. 
I come from a strong Java and light C background. Going through the apple swift book. What is with all the fricken syntax sugar? In some cases it isn't even shorter, it is just another way to write the same thing "just cause" . It isn't overwhelming to me as a fairly seasoned programmer, but for a new person coming in? This is definitely a very difficult language with lots of "gotcha" moments. Like the implications if ARC and a closure that closes over self as an instance variable resulting in a memory leak if not appropriately handled. 
It looks (to me) like Swift Package Manager is where the puck is heading. I bet even if you just dump a single source file on Github, you can get people to help you SPM-ize it. Alternatively, there are some one-file projects where "just copy the file" is a supported installation method, like SwiftyJSON.
you can schedule tasks with this little extension below. not sure if this is the best for animating the point counter but that can also be done with it. closure is the function pointer for the task you want to schedule. OFC if you want to cancel the automatic running when you get user input then you either have to remove the task from DispatchQueue (not sure if/how can be done) or set a flag when you get user interaction and only execute the code in your task if that flag isn't set. you always update the screen in real time extension Double { private func delay(delay:Double, closure:@escaping ()-&gt;()) { DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + delay, execute: closure) } public func waitSecondsAndDo (closure:@escaping ()-&gt;()) { delay (delay: self, closure: closure) } }
I think the point of his question was how to schedule tasks.
Just a few days ago [SwiftPlate](https://github.com/JohnSundell/SwiftPlate) got released which generated a project for use with the three main package managers CocoaPods, Carthage and SPM. I haven't tried it myself but probably will be with my next project. See other comments for how to use git to distribute versions.
Yes. Let's get more people on LinkedIn that say they're an iOS Developer when they can't even make a to-do list app. üôÑ
I still have slow auto completes, but it works and swift compiles fine. 
maybe delete derived data caches and reinstall xcode, no problems here
Ha, I like this analogy a lot.
"Tutorial" okay. More like compiled list of links from searching "how to ios dev"
 let intLinkedList = 1 ~&gt; 2 ~&gt; 1 intLinkedList?.length // 3 - Why does `intLinkedList` end up being an optional? That makes no sense. - In which way is this better than an array literal `[1, 2, 1]`?
I am coming from Java straight to swift. So I really can't. The solution for "the xcode swift integration is pretty bad" is not "use objective-c" 
[removed]
But it is currently the only solution it's just more work than most people want to put in.
On that note, does anybody use AppCode from JetBrains? How is it, if you do use it?
Cute! I don't know if it has any practical use, but it's clever. I agree with teddim that I don't see why there's so many optionals. Remove all the `?`s and `guard`s below the line `//MARK: operator` and it gets simpler. It looks like `3 ~&gt; nil` wants to return `Node(3)`, but there's so much type ambiguity it takes an extra line of declarations to make that work right, and I don't think I'd want that as a user, anyway. You don't need Foundation, either. EDIT: I'd flip `~&gt;(T,T)` around to return `l ~&gt; Node(r)`, and then delete the first func entirely. In fact, if you let `init` take both slots: init(data: T, next: Node&lt;T&gt;? = nil) { self.data = data self.next = next } then the implementation is simply: func ~&gt; &lt;T&gt;(l: T, r: Node&lt;T&gt;) -&gt; Node&lt;T&gt; { return Node(data: l, next: r) } func ~&gt; &lt;T&gt;(l: T, r: T) -&gt; Node&lt;T&gt; { return l ~&gt; Node(data: r) } 
No. Complaining on Tesla's battery and offering switch to diesel BMW won't help the driver.
forgot the real fix: delete xcode preferences
Quit yer griping whippersnappers. At my day job our debugger is... printk. Yes, indeed, in the 21st century.
Well, it slowly gets better and better. The migration to XCode 8 was a horror, but it was the major improvement. I'd like them to implement something like cocoapods, because this thing is a comedy and was a huge source of memes in my work. But then again, so is XCode.
Ah. I misunderstood the question, plus didn't know about the protocol. Looks like an easy to implement protocol. I'll need to test, but does type inference pick the Array type over your own when conforming? 
Yeah, `Array` is its default type (similar to how `Int` is the default type of integer literals). Adding `: MyOwnType` easily fixes that, though.
Thanks you for suggestions! EDIT: I've updated my code with your suggestions ‚ù§Ô∏è
By watching videos you get additional indormation, workflow action and other stuff. MSFT's tools and videos can't be matched by Apple or Google. Sorry.
Aw, thanks! But you left in one `?` which, interestingly, crashes the Swift compiler. :-)
Nice to hear.
 private var _date: Double! private var _temp: String! private var _location: String! private var _weather: String! Why are people upvoting this? :/
Ofcourse im always open for suggestions on improvement. Can you please guide me how i csn improve the tutorial? Thanks!
Implicitly Unwrapped Optionals should be used as a last resort - i.e. when something can't be instantiated in init (i.e. @IBOutlets in VCs must be optionals because binding happens after VC initialization). If you have some fields in your model which might not be available in all cases, then make them regular Optionals. If model is invalid without some fields, make them regular properties and fail early by using failable initialiser. Moreover, IMHO, model should be very stupid - just a container for properties. All kind of formatting should be done by some specialised class. Same with downloading data from API / any other source - model shouldn't be responsible for getting its data from some source, the source should return model and it's shouldn be none of models business to know anything about its source. Also, nowhere in my and my colleagues code I have ever seen using private properties with `_` as a prefix, but maybe it's just our coding style.
Pretty sure this belongs to someone else, give proper credit.
So does explicitly declaring types whenever you make a var or let decrease compile time?
But how do you handle the lack of IB? Do you do everything in code or do you use Xcode for IB specifically? I'm new to iOS development and xcode is missing so many editor features compared to JetBrains IDEs :/
I am that someone. Should i give proper credit to myself now?
updated the code thanks alot!! Although I still need to make the DataModel as dumb as possible private var _date: Double? private var _temp: String? private var _location: String? private var _weather: String? typealias JSONStandard = Dictionary&lt;String, AnyObject&gt; 
Would be nice if it conformed to Collection/MutableCollection (on top of ExpressibleByArrayLiteral)
I'll send a couple up votes your way since youre really just offering what you believe to be help in this case. I just wanted to point out that it is really a non solution. Yeah, some people can back down to cocoa pods and objective c. Some people can't or won't.
Horrific. And having done a [thousand-page book for beginners myself](http://www.apress.com/gb/book/9781430223610), I wouldn't wish such a monstrous weight on either authors or readers. Heck, back when I was in educational publishing, we considered it a failing not to give readers everything they needed to know in *fifty*. Want to know how to make a language that can be taught in 50? [Read Papert's Mindstorms](http://www.amazon.com/Mindstorms-Children-Computers-Powerful-Ideas/dp/0465046746). And his Logo language was a stealth Forth/Lisp too, which is a whole new level of power (metaprogramming) available for exploring if/when/should users wish to go further, while Swift can't even _imagine_ providing such capability without crashing to a stop.
I hope so, but SPM only has macOS support currently. I dug into this hoping to get away from cocoapods, but it looks like it's going to be awhile.
Using value analyses like constant propagation the compiler determine most 'var' variables that remain constant... using let just helps/simplifies this process. The more important purpose of let is to stop the developer before changes a value he has no business in changing. This is especially important for concurrency.
Thanks for your explanation. It seems pretty straightforward for values, but what about for objects? 
Yeah The Boys
Never used it so can't comment, but Apple is pretty firm in saying you shouldn't use side menus. 
In a local scope: it makes no difference. When the compiler can see the whole data path, the compiler doesn't rely on `let`/`var` to determine if code changes... it works that out for itself and makes optimizations accordingly. LLVM, used as the back end of Swift, has very sophisticated "code motion", "dead code" and "data flow" analysis for working out the actual mutable/immutable status of different variables (or even fields *within* variables). The reason the compiler suggests that you should change declarations to `let` instead of `var` in local scopes is so that you're not lying to yourself. But if you ignore the suggestion, it won't affect performance. There are some cases for class fields or globals where the compiler won't be able to work it out for itself and `let`/`var` does make a difference. In any case, if you declare `let` or the compiler works out that something doesn't change, then the compiler can do constant propagation, [as /u/twostraws explains](https://www.reddit.com/r/swift/comments/5ewh2c/what_kind_of_compiler_optimizations_are_made/dafoj5f/).
You need to figure out what _is_ showing up. For example, perhaps the UIImageView is there, but the image isn't. Or maybe the UIImageView isn't, self (the collection view cell) is, or maybe the cell isn't. You can do this by setting breakpoints in the debugger and printing out the values of various variables. For example, if you were to set a break on the line ` self.addSubview(imageView)`, then, when it breaks, do a step and try commands like: po self po imageView po imageView.image po self.subviews you would see what self's frame is and the same for imageView, see if imageView's image is non-nil, and you could see all the subviews of self. You would be on the lookout for things which you expect to have values or things which are in the wrong x,y location. You could also use the menu: Debug&gt;View Debugging&gt;Capture View Hierarchy to get a graphical representation of you simulator screen, and you can click on the objects there and use the inspector to see values of attributes and constraints. There are a lot of debugging tools available; this is a relatively small problem and I suggest you use it as a kind of 'practice' to learn about all the debugging tools. As always DuckDuckGo (or Google if you must!) is your friend. Just a couple of pointers: it is difficult enough to look at code formatted well, but it is really impossible to read it unformatted. For some reason, the first part of your code is unformatted, maybe try in future to get the whole lot formatted. Second, this subreddit is for Swift problems, yours is an iOS programming problem, it would be better to use r/iOSProgramming (which is in the sidebar) for these kinds of questions, and use r/Swift for swift language questions (like how do I define a function, or how do I make a custom Collection, etc)
I would say it's just sloppy on the part of the author, if/let is always good practice. There's literally no harm in doing it and showing the other way is a bad example. 
Sure, you can run the Swift compiler (swiftc) without Xcode, or Swift directly (/usr/bin/swift).
Alright! send me a message of your contact info so that we can discuss this futher
I've recently compiled swift on fedora, without the need of Xcode.
Even if libraries like [Sigma](https://github.com/evgenyneu/SigmaSwiftStatistics) aren't enough, Swift can use C libraries more easily than almost any other language. Apple even publishes documentation of Swift interfaces for [Accelerate](https://developer.apple.com/reference/accelerate). I'm not sure what the hammer is in your analogy. I'd say you need a screwdriver, and you have a power drill, and fortunately there are adapters that make it easy to use a power drill as a screwdriver. I wouldn't tell somebody to go buy a plain screwdriver (older and slower) when they've already got a power drill in their hand.
I mean you're asking a bunch of iOS developers if they like swift lol. As a self taught dev I've found Coursera's swift courses to be central in my education. There's also a fantastic full course from Stanford free on YouTube: http://www.youtube.com/playlist?list=PLy7oRd3ashWodnpf8rjfYEkTgwbOEsKfU Otherwise if you go through the whole big nerd ranch guide for swift and understand it you'd be hirable as a junior dev in most cities. 
You aren't suggesting that Accelerate is as easy to use as Python or R's Linear Algebra packages are you? Trying to interact with C libraries from Swift is a beast even for experienced programmers, and OP is a self proclaimed beginner. R and SciPy/NumPy are **made** for data analysis and will be a much easier way for OP to get the job done. If you can't admit that, you're just being a cheerleader, not giving OP good guidance. EDIT: I just looked at Sigma. It's written in pure Swift. R and NumPy both use BLAS and LAPACK. They'll outperform native libraries in almost any language, Swift included.
Yeah I've used scipy and numpy for similar things, but mostly just following tutorials. My actual intent is to use tensorflow, or maybe sklearn, eventually, with this data, for a regression problem to try and predict a continuous variable. I will likely use python. I ask about Swift because I know this would be much faster if I could define a struct to hold my matrix, and then iterate over my time series data placing the previous values into a struct, ie a moving window. I'm sure you can do this stuff in Python, I'm just not used to it. This is the first time I've tried to work out building a neural network without having previous code as a guide. I think I need to add a convolutional layer to it too. To summarize, I'm in way over my head, hah. Theres two weeks left in the semester, and I'm trying to invent an input vector modelled after tapped delay lines, with four different data types, so probably a 4 row * N time segments matrix., taken from a time series over which i pull from a moving window, a possible convolution layer to combine those data types with the time series data on the variable to be predicted, run a multilayer neural network with the results of the convolution and try to predict the continuous variable at the next time period. And I know how to do like 10% of this. Haha, what the hell was I thinking proposing this. But wheres the fun in just copying some project you found online. I prefer to figure it out on my own. I'll probably stick with Python. Which I think was the power drill in the metaphor. Thank you, definitely appreciate the replies.
Thanks, I'll look into it. Sorry about the code, I don't know why it wasn't formatted that time.
The slow autocomplete and faulty syntax highlighting are due to bugs with SourceKit and/or long compile times due to Swift type inference. While letting the compiler infer the type keeps code shorter, sometimes giving it hints on type will speed up indexing and compile times. Also, if you let Xcode fully index your project, syntax highlighting and autocomplete should return to normal. I used this guide to improve indexing, autocomplete, and build time performance: https://thatthinginswift.com/debug-long-compile-times-swift/ Extensions/plugins were supported in previous versions of Xcode, but Apple added some special gatekeeper or code signing protection to block arbitrary addons. You can unsign the Xcode 8 binary to plugins work again: https://github.com/steakknife/unsign
&gt;you're a dying breed. Hopefully not too soon. :) I think it's really about people being excited about their new favorite tool and wanting everyone else to love it too. We fall into the trap of assuming that there can't be more than one good think in a specific space. Passion is good! Zealotry is bad. :)
I hope this kind of post is okay. I don't want to break any self promotion rules. This podcast is just a hobby. We don't make any money on it. My friend and I started a podcast a little over a year ago and put out an episode about once a month. The hosts are BJ Miller and Hank Turowski (me!). BJ is the author of [Sams Teach Yourself Swift in 24 Hours](http://a.co/37a2yI5) and I was the technical editor for the first edition. BJ is now a full time iOS developer in Cleveland, Ohio. Hank is a senior engineer with IBM Watson Health, also in Cleveland, and works mostly in Java (with some Scala mixed in) these days. Your feedback and comments are welcome! EDIT: You can follow us on twitter too: [@conceptsincode](https://twitter.com/conceptsincode) and here's the iTunes link: https://itun.es/i67X2W6
accelerate and friends are faster and much more robust than what python and R offer
You are on the right track by using failable initialisers for numbers from strings, but by force unwrapping them you will just crash if the inputs are not valid numbers There are a few things you need to check for: missing input (text can be nil), invalid input (non integer text), and poor quality input (min &gt; max, negative numbers since you are using unsigned types etc) You can exit the scope early for some of these using guards, and some make more sense to have a conditional (though this could be done as a guard as well), heres an example re-write of this function func generateNum() { //check that we have input for max and min guard let minNumText = minNum.text, let maxNumText = maxNum.text else { displayNum.text = "missing input"; return } //check that both inputs can be converted to UInt32 values guard let minNum = UInt32(minNumText), let maxNum = UInt32(maxNumText) else { displayNum.text = "input is not a valid number"; return } //make sure the input makes sense if (maxNum &gt;= minNum) { let randNum = arc4random_uniform(maxNum - minNum + 1) + minNum displayNum.text = String(randNum) } else { displayNum.text = "max &lt; min" } } 
It looks like Accelerate uses BLAS and LAPACK under the covers, just like NumPy and R. I'd be willing to accept that Accelerate is as robust, but not that it's more robust or faster than the others. They're all relying on the same engine. But there's just no way you'll convince me that Accelerate via Swift is currently more user friendly than NumPy or R.
[removed]
it has their own implementation of BLAS and stuff edit: ofc not as user friendly but for absolute user friendliness you'd use matlab or something that you can only really use to prototype ;-p
No let me run the app
Yeah, well, we need a little more information here, cause your screenshot doesn‚Äôt show the cause of the issue. Maybe you can check the call tree? Or just manually stop through your code?
These are mostly Swift issues you are experiencing through Xcode. This is why I cannot take Swift evangelists seriously, it's like they are spending their time praising it instead of writing a single codebase in production. Oops, didn't check I'm in r/swift... god have mercy on my soul.
Newish to programming, a year of Swift, a bit of ruby, python, R. I just much prefer Swift, how I can create my own structs, extend their language to specify how I want certain operations done, define how I subscript things etc. I'm certain there are ways to do it all in other languages, but then someone else wrote it, and I have to dig through their documentation to figure out how to use their thing. I prefer to know whats under the hood, which just feels easier with Swift at my current level.
What is so different about Accelerate or Numpy that makes doing these specific operations so much faster? Is there like a tangible, easily explained major change in how operations are done that makes these frameworks so much better? 
The classic textbook is https://en.wikipedia.org/wiki/Compilers:_Principles,_Techniques,_and_Tools Chris Lattner's original thesis on LLVM is here: http://llvm.org/pubs/2002-12-LattnerMSThesis.html A high level summary of LLVM optimization passes is here: http://llvm.org/docs/Passes.html
I wish Accelerate was portable to Linux.
XCode/Swift support, for various reasons, is honestly incredibly bad right now and such a huge hinderance to my work I'm considering going back to Objective-C. I am not saying this lightly since I have written thousands and thousands of lines of Swift and released a Swift app, I like the language a lot, but I also got work to do... Just on the subject of autocomplete, yea the thing takes forever... In fact, it takes so long I'm thinking about disabling it altogether... and that's when autocomplete works at all, half the time I'm just waiting on sourcekit to reboot or having to rebuild my project because XCode often fails to pick up live changes to your code, especially frustrating when your just fixing some random synthax error and it wont go away until you rebuild. I don't want to be rude, I know very top tier people are working on this, but really, Apple should get it together... Put more paid people on the project if thats a viable option, or increase the salary of the current programmers and make them work harder, put a new manager, whatever it is you think you can do to accelerate stabilization of Swift do it asap.
I finished the big nerd ranch iOS book - kind of felt the same about just repeating code and not taking it all in. Now that I've started the Udemy course I've realised I do remember quite a bit from the big nerd ranch book, but repeating it in the videos and then making the small sample apps is really solidifying it for me.
I enjoyed 1-12, but had figured you guys were too busy to make more. Good to hear that's not the case. 
My theory would be that this is a timing problem: the need to use the calendar causes the request for calendar access. When access is granted, it is recorded somewhere so it won't need to ask the user again. Meanwhile, even though access is granted, because of the timing, the code that asked to use the calendar somehow fails to be informed that the access was granted and fails eventually causing the app to crash because you have failed to handle that situation in your code. Next time you run the app, because permission was requested and received, it needn't ask the user and the code which wants to use the calendar receives permission to do so. To test my theory, what I would do, STRICTLY AS A TEST, THIS IS NOT A 'SHIP IT' IDEA, is to place a big ugly button on the UI and the action for that button will ask for and receive permission to access the calendar. So at runtime I would press the ugly button, thereby receiving permission to access the calendar. Then I would do whatever causes this picker to function. If that works, then I'd figure out a non-ugly way to get permission for the calendar _before_ I start the whole fetch-calendar-data-for-picker process. 
Swift is still young, if you can overlook its issues it got pretty advanced pretty quickly. It will get better soon (I'm talking years), meanwhile we can cope with its issues or use obj-c. Swift code can be way cleaner, but I still don't mind writing obj-c. I don't really feel any force to go with Swift and Swift only. I use it for most of my pet project just for kicks and to get used to it, but I'm happy we have to maintain an obj-c legacy codebase at work.
What's the error? All I see is a breakpoint.
The main picture with the large video camera suggests this is some kind of pro video tool. But is this actually for phone videos? I can't tell.
It seems incredible that there could be so many crashes in a syntax highlighter. Software is hard.
I find it best to package a model stack in its own framework so I can easily share my model, but I only ship a truncated set of records to the watch on a need to know basis or if requested on the watch's end. Even though I share the entire model stack with my watch app, I'll only use a subset of it to keep things small and quick because I manage the synchronization of data by hand by serializing it, then translating it on the opposites end. 
Forget Obj-C and focus your efforts on Swift, I guarantee you in less than a year you'd be employable. If you have skills as Graphic Designer focus on front end development and impress your future employer with a beautiful portfolio. Every piece of software needs beauty on the inside and on the outside, you provide the latter. Not every programmer can provide both.
I studied computer science and got a Masters at uni. I went into a ¬£21k job with a decent understanding of iOS and proven programming skills. This was 7 years ago, but I don't think entry level jobs will have jumped that much. Design skills help, but you'd be better off building something yourself rather than just studying. Then you might be able to get some entry/junior level work. Edit: Yes, I love what I do. Mental challenges and the market is in my favour at the moment, so there's a wide variety of jobs so I can travel if I want or stay at home.
ahh. How do you do this: "I find it best to package a model stack in its own framework so I can easily share my model, but I only ship a truncated set of records to the watch on a need to know basis or if requested on the watch's end." I'm not understanding the process here. By package, are you saying recreate the model? Then manually sync it with the iOS model? Thanks.
What salary are you on now out of interest?
PM'd
Thank you, very helpful answer
I took a junior iOS job 6 years ago for 27k + 10% bonus. I had a background in programming but no commercial experience with iOS (though as this was 6 years ago, not many people did :) ) Importantly this was in London but 30k would be very do-able for a junior position I would think with 2 years of learning (just make sure you build something to show during that time)
Yeah definitely send your curriculum over. That will be a massive help. Ive pre-ordered the big nerd guide to swift (the updated version is for swift 3). So thats where I'm going to start, but it would be great to have an idea of great resources. What is your story, did you do the same thing? home study and they get a job?
A CS degree tells an employer that you have an understanding of a lot of common software concepts, it doesn't say anything about if you are a good developer. Learning those concepts is important and you will need to work harder to prove to people that you understand CS but having no CS / a different degree is not a complete barrier Its a regular discussion at places like /r/cscareerquestions btw, should be lots of good advice there 
I know, I apologize if my last comment seemed confusing. What I'm trying to say is that you should check where clang-3.6 installs, then ensure that location is in the path that toolchain searches
I would be very careful about ignoring ObjC. Look at the job postings, even in Silicon Valley which is a very fast to move on things, hasn't dropped ObjC. Depending on your local job market, you could see anything from a job designing UX only vs dual platform full stack. Example: look at jobs being offered. Some are offering a full time job doing only UX or UI or Graphics. Others are offering full time jobs that require BOTH iOS and Android and full stack back end database. Imagine if you studied only graphics for mobile enterprise thinking you'll get a full time job doing non-game graphics. Then you find that only 10% of the companies are looking for full time people to do this. Not because graphics isn't important, but because they find they can use sub contractor that makes standardized things for them. The point I'm trying to make is that you should ask: "What's the least I need to do to get a job doing _____ ?" ObjC has been used for iOS since the start, there's a lot of companies that a ton of stable code already done in ObjC. Swift is a great language, but it's not ready for prime time. The changes from 2 to 3 are huge. I've heard so many projects that were &lt; 3 broke when upgrading to 3. There's issues concerning the runtime being ObjC, Core Data, etc... Here's my take: focus on a certain area of mobile dev. Games, business apps, utility, etc... Game programming is very different from client/server. start with a little about a lot. Meaning, focus on getting an app done properly. Learn all the things like Core Data, auto layout, IB, threading, etc... Then go back and dig deeper after you've done X projects. it's not the "number of years" that matter. They ask for X years and it always goes up, but I've see people with many years not knowing what they are doing.
[removed]
That's plenty of time to learn enough of the language and tool set to get a job. However, for those without prior web development experience, one of the hardest parts of building apps is effectively coordinating with other services. Make sure to spend time learning about common web topics like: - http requests/methods - authentication models - restful api design - server-side state vs client-side - offline synchronization Not to mention that things go wrong and you need to also be able to gracefully handle errors in those cases and possibly retry a few times. It can get messy. But almost all hiring managers are going to look for 3 core things. The rest can be taught on the job: - Competency with either Obj-C or Swift - A reasonable awareness of Foundation and UIKit - The web literacy I mentioned above. Don't let that one sneak by and bite you later.
[removed]
&gt; Really there is no connection between the two other than the array of calendars. Where in `checkStatus` (or anything it calls) is this array touched? I don't see it in the code you pasted.
Does that mean half an hour after work every day while you're doing something else, or 10 hours a day of full study? A "year" is meaningless unless we know what's going into that year.
I can probably commit 30min per day during the week and the whole weekend 
Depends on what the "external files" are. If they're static content, put them in the app bundle. Otherwise, `~/Library/Application\ Support`
Not sure what you need but that doesn't sound like Firebase and more like APIs
Click the very first link in the link you posted.
Finally a swift only podcast
Could you assume the I am a dullard and show how those 2 instances might be made into systems?
At one point I had the calendars "load into the array" after the permissions were granted using this function from another UITableViewController class: func loadCalendars(){ calendars = eventInstance.calendars(for: EKEntityType.event) print("Calendars Loaded") } But it didn't change anything. No matter what I do, after the user gives calendar access to the application I still get that null error, until the app crashes and is reopened. Also, thanks for helping, and going through this with me I appreciate it! 
&gt;I'm skilled as a Graphic Designer and I'm wondering if this would help also. If you're a front end dev it would absolutely help you. Not in a "Oh he/she has graphic design experience too" kinda way, but in the 'it will help you build better looking projects and these should in turn be more positively received by those who see them' kinda way. As was mentioned, Obj-C is out and Swift is in. If you're learning now, learn the skill that will be in demand, not the one that was. Paul Hudson has (Imo) an incredibly good project-based 40 lesson set that gets you going quickly :https://www.hackingwithswift.com/#pricing It's free, but he has ones you can pay for if you like what you see at the free tier.
This seems like a good thing, but could do with some sample snippets in the readme. Thank for posting it! Edit: didn't realise it was such a small lib. Doesn't really need snippets then.
Fair enough if but it'll almost certainly never happen now due to the abortive first attempt at developing an AppCode-native IB (agree about open sourcing it though). Honestly, once you get used to switching and using Xcode soley for IB, it just becomes a natural part of your workflow.
Good suggestion, added a Usage section to the Readme :)
My bad, I realized after posting my comment you meant macOS. That's really dumb, I agree with you.
in-app iPhone Console for enhanced debugging (demo --&gt; [Github](https://github.com/eebean2/DTConsoleDemo)) Working on releasing the full version it as a pod.
Say I have a bunch of users in firebase ex. Jake123, Carl123, Matt987 if in my application in the search bar I type 123 how would I get firebase to only give me the results for jake123 and carl123 instead of the whole array of users
Also curious.
pxctest - a tool to execute tests in parallel on multiple iOS Simulators: https://github.com/plu/pxctest
So i simply sent a mail to swift-evolution@swift.org, without needing to register or something? Do i understand that correctly?
I'm still new to xcode and swift, but xcode was unusable (xcode would literally crash every 5 seconds) on my old mac (4gb ram, 2-core cpu, El Capitan). I recently upgraded (16gb ram, 6-core cpu, SSD, Sierra) and xcode hasn't crashed yet or been sluggish. I haven't needed to turn off auto compiling on my new machine, but when I did on my old machine, I couldn't get xcode to run at all. So if you can turn off auto compiling, that might help.
Usually I'd set up a completion handler from the network function like: func networking(completionHandler: @escaping (JSON?, Error?)) { But why not just call dealWithJSONData(data: data) after this bit? guard let todo = try JSONSerialization.jsonObject(with: responseData, options: []) as? [String: Any] else { print("error trying to convert data to JSON") return } You can also set the property before making that call, so you don't need to pass it: guard let todo = try JSONSerialization.jsonObject(with: responseData, options: []) as? [String: Any] else { print("error trying to convert data to JSON") return } self.property = todo self.dealWithJSONData() return The catch is that *dealWithJSONData()* won't get called if you don't get JSON in the response (e.g., no network connection). So you probably also want to call *self.dealWithJSONData()* before each *return* due to an error so you can tell the user there's a problem getting the data. Or you could set up another function to call in those case like: guard let url = URL(string: todoEndpoint) else { print("Error: cannot create URL") self.dealWithNoJSONData() return }
Awesome! But just one thing [from Apple's documentation on NSLayoutConstraint](https://developer.apple.com/reference/uikit/nslayoutconstraint/1527000-isactive) : don't use addConstraint. Instead set the "active" property of the constraint to true. It's a more hierarchically safe way of doing it. You can also use the NSLayoutConstraint.activate() helper class function.
One other note. People will give you a long list of all the different things to know, but what they might be leaving out is that you need to go far past the tutorial in order to prove that you are more than a "cut-n-paste" programmer. A "cut-n-paste" programmer can find a tutorial, paste in the code and tell you what it does. What they can't do or haven't proven, is to create something original or debug something original. If there's a bug in the program, they look at the tutorial to see where they mis-typed something. A real programmer will look at the code and see what they are trying to do. A company doesn't need someone that's really good at cutting-n-pasting stuff, they could write a bot to do that. They need someone that can figure out how to do something that hasn't been done before and/or make different 3rd party tools work together. There's a balance between finding 3rd party tools that answer problems and solving problems yourself. I wanted an RSS newsfeed reader. I could have spent quite a bit of time learning all the RSS parsing stuff, but I downloaded one from GitHub and made it work the way I wanted it to work. I had to re-work it so that it had off-line caching and feed to a custom bucket. This is real-world. They don't need to pay you to re-invent the wheel, they probably need you to create a great product that the customers will love to use. In order to do that, you need to go way past the tutorial. You need a LARGE project that does complex things where you make different 3rd party tools work together. One that I did probably used some 6 different 3rd party tools. One important skill set is to take a 3rd party tool that is too heavy, look at what it does, and make it work differently. Example. I had a slide out hidden menu, it was heavy and didn't work the way I wanted it to work. I pounded on it until it did what I wanted it to do. Understand, it's not that any given tool needed that, it's that you've proven you have to skills to get inside someone else's head and change their code. Getting inside someone else's head, might be the hardest and most important skill you'll gain as a programmer.
OK, so what causes this to happen before the PickerView is first called? (Think UML sequence diagram.) Is there a notification, or is the PickerView not created until the completion handler, or something? I'm still not seeing the connection from one to the other.
As far as the project goes, you can do a few small ones to prove you have knowledge about a certain thing, but the one thing that would be best if at least one large project that proves you know more than tutorial code. Imagine you were showing me the project and I asked you: "what was the biggest problem you solved with this program" We need a problem solver, show me a complex problem that you solved. IMO, most companies will fit into a number of categories: 1. making quick apps where they shotgun the AppStore hoping to get something to go viral 2. making apps for customers based on the customers specs 3. a big complex app that addresses a specific business need. I'm shooting for a #2 or 3 because that's where my skills are. #1 would be a gamble and will get harder and harder to try and keep up. Here's a few lists of questions, it's always good to have a solid understanding. One thing I've learned is that you have to be honest, if you don't know, explain what you do know and show that you are willing to learn. Nothing worse than some bull headed fool that won't learn and screws things up. https://www.codementor.io/ios/tutorial/ios-interview-tips-questions-answers-objective-c https://www.toptal.com/ios/interview-questions https://www.raywenderlich.com/53962/ios-interview-questions
Thanks for the advice! will do! I'm trying to learn them all, and id really appreciate if you have links for all of them like SK GK NS and stufffs, cuz those 3 are the only ones im currently aware of and seen more. And correct me if im wrong, but is NSUser used for accounts? So like if i wanna create in game money and want it saved/sync to their icloud or facebook, NS is what i need to extensively learn as well??
I think you might be a bit confused about the landscape here. The "primary" libraries for iOS apps are (note that the NS prefixes disappear in Swift code): * UIKit (UI prefix, in Objective-C) * Foundation (NS prefix, in Objective-C) * Swift standard library * Often CoreData SceneKit, GameKit, MapKit, etc... are all "specialty" libraries for particular tasks. Syncing stuff to Facebook is not handled by any of the built in libraries, you'd need to use something from Facebook for that. I've never written an app that had "difficulties", but that seems like a reasonable thing to store in UserDefaults. (edit) Sensitive account data like passwords should go in the keychain, rather than user defaults
We're building material motion in Swift as an open source project. Our goal is to create highly polished, production-ready interactions while using the latest versions of Swift. We welcome contributions! If you're interested in interaction and motion design we'd love to geek out about it with you. For the polyglots out there: we're also building the tech out on web and Android. Our engineering spec: https://material-motion.github.io/material-motion/ Chat with us on discord: https://discord.gg/ZJyGXza
Swift's dictionary really is lacking some initialisers. One I like to add through an extension, is `init(pairs: [(Key, Value)])`. When you want to convert an array to a dict, you'd do `Dictionary(pairs: array.map { ($0.key.identifier, $0.value) })`. I also really like to add a `group(by:)` method to `Sequence`, it's signature is `func group&lt;K: Hashable&gt;(by: ((Iterator.Element) -&gt; K)) -&gt; [K: [Iterator.Element]]`. With it, you can write `array.group(by: { $0.key.identifier })`, which creates a dictionary groups the elements in the array by the key (i.e., if an the key occurs multiple times, all of the corresponding values will be in the array for that key). Both of these you need to implement with iterative code. For example, `group(by:)` looks like this: extension Sequence { func group&lt;K: Hashable&gt;(by keySelector: ((Iterator.Element) -&gt; K)) -&gt; [K: [Iterator.Element]] { var result: [K: [Iterator.Element]] = [:] for element in self { let key = keySelector(element) let currentElements = result[key] ?? [] result[key] = currentElements + [element] } return result } }
You learned all this and never picked up architecture? MVC is a very common one and I assume the easiest to learn, you can go ahead and use that one. Basically you divide all your files into Model / View / Controller folders. More information in : https://www.raywenderlich.com/132662/mvc-in-ios-a-modern-approach
And never be afraid to do something wrong and correcting it later. Even architectural changes are allowed. Refactoring is not a penalty but a valid tool. You have to start somewhere, so just start and you will learn a lot on the way.
Checkout full step-vise guide here to install swift on Windows 10 Anniversary Update http://www.developerinsider.in/install-apple-swift-3-0-on-windows-10-anniversary-update/
Best advice I can give is pick smal things you want to do in the app. And just do them. Today or this week I want to get my menus and navigation into games working Once I'm done there I want to get game enter and matchmaking Game Center code working Now I'll work on objects. Etc etc. Think of the dependencies of each piece you need. Start with small objectives. Just make sure you finish them. Once you're "done". You'll probably want to rebuild it all. But you'll have learned a ton. I would just recommend you do everything you can to finish. 
Sooooo you know Swift, but you don't know how to make an app is what you're saying? Look into tutorial books like Ray Wenderlich.
I've been planning on doing the same thing, so I just found this: https://github.com/devcarlos/ActionLabel let me know if it works out for you
does it work with swift 3? 
I haven't looked at it so I wouldn't know
Make it work. Just fire it up in Xcode, most conversion will be handled by Xcode itself, should not be that hard to convert it.
Look into Ray's Wenderlich iOS Apprentice book. Chapter 2 has a To-do list app and they do a great job at working with the UIViews, MVC, etc. You build the entire app from the ground up. I highly recommend it.And all their books are 50% off now today.
oh so facebook log in is a completely separate thing i have to learn? can u please give me examples where i would use UserDefaults then? here are some i could think of on the top of my head -screen names -in game money -stats and record
oh agreed... I love working through books and doing a tutorial and thinking OMG this will allow me to make this... then spending time trying to make it happen. This is good advice, I just hope I can learn enough building blocks to start to be creative on my own
I'm using this and it works great. My only problem: I don't know if it's something I'm doing, or if it's ActiveLabel's fault, but when I put an ActiveLabel in a table cell, it doesn't scroll smoothly. Is still usable but it could be smoother.
ActiveLabel or ActionLabel?
Go for it. Swift 4 isn't expected until [late 2017](https://github.com/apple/swift-evolution). It's supposed to be more source compatible with Swift 3 but we'll see how that really plays out. Plus Ray Wenderlich gave all their existing customers [free updates for Swift 3](https://www.raywenderlich.com/137688/will-raywenderlich-books-be-updated-for-swift-3) for books they'd bought. They haven't committed to a free update for Swift 4 but many Swift book authors have been doing free updates for new version of the language so it's become pretty standard (though not universal).
An example from an app I used to work on, Adium: it has a setting for how to show usernames (first only, first and last, different sort orders, and so on). That's stored in user defaults. Remember that *most* apps aren't games.
When someone says "All the other members are terrible coders" :V
Hey Karl, Yes id love to hear some of your insight into the market. Im brand new to swift, and brand new to programming in general. I tried to learn Python about 10 years ago but gave up(mainly because I found girls). Yep I live in the UK, i'm from London. But am very open to working anywhere.
Okay im sold.. My big nerd book... Stanford iTunes U course and this course will be my start
They are both pretty good. I started with a big nerd objective c book. But I think I learned more about how IOS actually works from the standford course - UITableView, callbacks, delegates, protocols, etc.. Swift 3 is a bit different from Swift 2 (migration is a major pain) - but it's better than not learning Swift.
The ones with throw err
Read the app and try to replicate it. If you get stuck consult it. Rinse, repeat.
If money is not an issue for you can you send me a set of books on Swift 3? Santa is not coming for me this Christmas. On a serious note, I think you would be good until next iPhone release, even if there are some variations on code they are not major and XCode does a pretty good job updating code to new standards.
Yes... especially ebooks with free updates.
A backend is its own project, as big as the projects that uses them. If you want to dedicate some time to learning how to build backends, look into Python Djnago, Ruby on Rails, or Go servers. If you don't want to build one yourself, use Firebase.
There are a lot of approaches. One that may work well for you, not knowing how to do a server yet, is CloudKit: https://developer.apple.com/icloud/
If this is the same Swagger code gen I'm familiar with, the Swift code it generates on top of Alamofire is really terrible. 
In my experience it could be improved but it mostly gets the job done. No major issues. They are open for PRs though: https://github.com/swagger-api/swagger-codegen
Great tutorial! IMHO it's more clear if you hold the reference to UITextFields outside creation blocks like this: var fNameField: UITextField! var lNameField: UITextField! alertController.addTextField(configurationHandler: { (textField) -&gt; Void in fNameField = textField fNameField.placeholder = "First Name" fNameField.textAlignment = .center }) alertController.addTextField(configurationHandler: { (textField) -&gt; Void in lNameField = textField lNameField.placeholder = "Last Name" lNameField.textAlignment = .center }) alertController.addAction(UIAlertAction(title: "Save", style: .default, handler: { alert -&gt; Void in if fNameField.text != "", lNameField.text != "" { self.newUser = User(fn: fNameField.text!, ln: lNameField.text!) //TODO: Save user data in persistent storage - a tutorial for another time } else { let errorAlert = UIAlertController(title: "Error", message: "Please input both a first AND last name", preferredStyle: .alert) errorAlert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: { alert -&gt; Void in self.present(alertController, animated: true, completion: nil) })) self.present(errorAlert, animated: true, completion: nil) } })) It makes sure you don't try to reference nonexisting object in textFields array in alertController.
Good point! Thank you!
The Swift Programming Language (Swift 3.0.1) by Apple Inc. https://itun.es/ca/jEUH0.l
Just use Vapor on Heroku and you're ready to go. Easy. https://videos.raywenderlich.com/screencasts/server-side-swift-with-vapor-deploying-to-heroku-with-postgresql https://www.twilio.com/blog/2016/11/how-to-deploy-vapor-apps-to-heroku.html
yeah sure, please share 
This is awesome! Thanks man!
I'm working on an app which would help with project organization, make pretty development graphs and tell you what to do now, so you don't start working on some part of the project which would depend on something that isn't done yet. I'll probably be useful for all the forgetful, myself included, and beginning programmers. Problem is that in last couple of years I've been working mainly with c#, unity, wpf, and so on. Which makes the development kind of slow, because I'm learning how to do stuff in ios and swift in general as I go.
Still learning, so this is something I did not know and will use if needed now :D
I'm currently reading this and I really like it. Way better than the java books I was reading 8 years ago lol
This is the whole purpose of the post! Thank you so much~ ^The ^secret ^is ^never ^stop ^learning ^;)
http://pastebin.com/kYy8T8vU
True, and also the still widely used PHP servers 
It lets you not include the parameter label when passing in an argument. If your function looks like this: func myFunction(label: Int) Then to call it you need to include the label: myFunction(label: 3) If you include an underscore before the label then you don't need to include the label when you call the function: func myFunction(_ label: Int) Call it like: myFunction(3) You can also use labels to specify a different label than the name of the argument within the function: func myFunction(with intToProcess: Int) { print(\(intToProcess)) Which you'd call like: myFunction(with: 3) Check out the docs on [Function Argument Labels and Parameter Names](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID166) for some more examples, especially the Specifying Argument Labels and Omitting Argument Labels sections. ETF: Fixed "Call it like:" format 
Too late, I already bought the potatoes. üò≠ QUESTIONS: - Did you make this app on your own or with a team? - Why is it free? - How long did it take you to make it? - Have you ever considered making a game? IDEAS for your app - Allow users to reposition the visible preview image. - Title and description could be over the photo. - App Icon needs help. - Allow 1 min sound clips to be saved. 
where can I find in pdf?
Ok, I understand, thanks. It's not part of a class in my case (as a beginner I tend to think of classes as the .swift files in the project navigator). So I'll remove self, but productController (the table view controller I'd like to be taken to upon tapping on a cell) is still an unresolved identifier, even though I have var productController: ProductController? in the file.
7 cities in the world? Not a very complete list...
I don't know. I can only recommend you concentrate on more basic stuff first, so you can get a firm grasp on the syntax, structures and classes, etc. Maybe stick to text-only programs for a few weeks.
It often reminds me of The C Programming Language.
http://www.hackingwithswift.com/read seems to be a pretty good tutorial series. I've went through it to shore up my knowledge of certain things.
Swift is hard for us professionals as it keeps changing... Also.. Apple has really forced to me to move to Swift 3 - the migration process was absolutely horrible.. and as my app uses remote notifications.. I can only support IOS 10+.. Not a pleasant experience, but that is the Apple way. No such thing as nostalgia in the Apple world. Still learning swift is much better than not learning swift.
Hey, I think you're not setting username and password with the values in the textfield. At the top of didTapSignIn put: username = usernameTextField.text password = passwordTextField.text To figure stuff like this out, you'll want to learn about breakpoints, or use `print(username)` to look into the values.
+1. I really like this book. I'm not finished with it yet though. 
Files are objects on disk that consist (mainly) of a sequence of bytes. Classes are Swift language constructs. You can put 1 class in 1 file, or 10 classes in 1 file, or 1 class spread across 10 files. Or you can have a Swift file with no classes in it -- which sounds like what you have here. `self` is a feature of classes (as are protocols and delegation), and if you're trying to use that without any classes, you're kind of missing a fundamental piece.
Thanks so much, juicy info
Because I love printed book.
Just finished it. Not a great book for people who don't have prior programming experience in my opinion. Good book for the most part otherwise. The explanations in access levels for certain parts could maybe use slightly different wording. 
Eh? I'm not saying to not use constraints... just that this is very useful in itself to help achieve this.
I don't think `.components(separatedBy: ".").last` is going to be reliable. Why not use NSURL/URL? It has properties for exactly this purpose.
The standard libraries don't have zip support, so if you don't want to use a 3rd party library, you'll have to implement zip functionality yourself.
**You are now my Swift mentor.**
There's a little screenshot on your homepage, and usually clicking a little screenshot shows a bigger screenshot, but in this case it starts downloading something. I'm doing 10 other things right now so I don't have a lot of attention, but I had 2 minutes to try to glance at this. I see under "See what you can do with the Perfect Assistant" a bunch of text, and it's not even clear what the text means. - "Set up new projects easily or download existing project templates" -- isn't this what Xcode does? - "Manage dependencies" -- I've got Carthage, CocoaPods, and Swift Package Manager. Do I need a 4th way? - "Create simultaneous macOS and Ubuntu builds on your local machine", "Configure Amazon deployment information", "Push projects up to EC2 servers" -- these sound great but they don't sound Swift-specific. I've already got 7 other tools for doing these things. What's the advantage to this? So I'm sure there's something great here, but the homepage isn't so great. Maybe later when I have more time to look at it, I'll give it another go.
Whoops. Fixed the errors. 
Obviously, we're talking about compromises here: we want to use the latest tools while still supporting "old" iOSs. If all we want is one extra/optional new functionality, like the example in the article, it's a matter of one *if statement* and a *@available* for the extension. (previous iOSs won't have this functionality, but we don't mind that). As you can imagine, this is not always true: One example is using the new *CSSearchQuery* when implementing a within-the-app-search: it's a matter of a few lines of code in iOS 10, but for previous iOSs you must implement the search engine (and its handling) by yourself (and this means a bit more *if statements*). Anyway, thank you for reading! :)
The standard libraries **do** have partial zlib support - see &lt;zlib.h&gt; and libzlib.a - the interface is in C, though, but you can use it from swift. It's actually for gzipped files, but it's similar enough to .zip that you may be able to use it.
To be blunt, Swift jobs aren't even plentiful in the first place. At least, that's where I'm at.
How can I use it?
If you want to use it exactly like you described, you won't get around writing the view in code. (I.e. subclass UIView, add the subviews manually). If you want to use interface builder, you can't construct the view like this; you'll have load the view from the xib (e.g. using `NSBundle.mainBundle.loadNibNamed("xibsName", owner: self, options: nil).first`), and then setting the properties after initialisation (e.g. `loadedView.setup(image: image, text1: "text1", text2: "text2")`. However, if you want to create TableView cells, there is yet another approach; in that case you'd create cell prototypes in interface builder and dequeue them from the table view.
This is super nice, I did not know about this! I use it for something very basic usually: instead of selecting a view and then clicking those tiny constraint lines to see the constraints value (which is borderline impossible sometimes), I just use this shortcut. (Does only work for fixed-distance constraints obviously, but those are the most commonly used ones anyway). But in general it's very handy to quickly verify that the UI matches the specifications/mockups.
I use it in a lot of places ( not necessarily in only tables. ) So i would like it to be as easy to add as a UILabel or some other view.
The SSS race is heating up. Moar toys for da coders!
I think it would be helpful if you provided the errors and warnings you're receiving. Nevertheless, I can take a guess at some: - 1) is Swift 2.2 code ‚Äì you should use `IndexPath` rather than `NSIndexPath`, the first parameter needs an underscore, etc. - 2) appears to blend Swift 2.2 and Swift 3.0. You're using `NSURL` when you should be using `URL`. I suspect `addAttachmentAtURL()` might have been renamed. - 5) is also Swift 2.2 code; it's probably telling you that `CGRectDivide()` has been replaced by the `divided()` method on `CGRect`.
You can make an attributed string from the HTML, make a `CGContext`, make a new `NSGraphicsContext` and set it current, call `beginPDFPage` on your context, draw your attributed strings in that context, `endPDFPage` on the context, `closePDF` on the context, and now you've got a PDF with your strings rendered in it. You can get much more fancy and use some of the new stuff they've added recently for PDFs. Check out apple's ResearchKit for some nice inspiration https://github.com/ResearchKit/ResearchKit/blob/master/ResearchKit/Common/ORKHTMLPDFWriter.m
[removed]
An attributedString might be the solution I am looking for. Found out that WebView has a writePDF to Pasteboard which can be read as data into a PDFDocument, but still uses the webview. Another option I found was to use a NSPrintOperation and save directly to PDF but still uses a NSView or Webview. So the only option left is to use an attributed String from HTML to bypass all views. Let's see where that rabbit hole takes me.
mapkit. I saw a delegate method func mapView(MKMapView, regionDidChangeAnimated: Bool). so, everytime the mapview is moved, this method is called and I can implement the code inside this method to download the locations from the server. Am I right? I also found a property in MKMapView that the property is region. and this "region" property is a struct "MKCoordinateRegion", this "MKCoordinateRegion" struct has a property "span" is "MKCoordinateSpan" struct. and this "MKCoordinateSpan" struct has two properties, var latitudeDelta: CLLocationDegrees and var longitudeDelta: CLLocationDegrees. the direction that i am focusing, am I right? if yes, how can I can the 4 corners' latitude and longitude by latitudeDelta and longitudeDelta? thanks.
Did you read the documentation?
Lots of code you have there, I would refactor it slightly for easier reading but to the point. I would add a isRequesting Bool to prevent calling the API more than once at a time and a page Int pass the int into the API request method and then on success if the call parse the page requested on the request.url to make sure they match and if so parse results and add them to array then perform batch updates on the CV to insert them. The page you would on successfully matching them, increment by 1.
actually, i have already found it. thanks. but i have one more question. if i draw a bunch of locations according to the map i am showing. using latitude and longitude from 4 corners, how can i filter out the locations from server that i want? because i don't understand how latitude and longitude work. thanks.
The documentation from Apple? Yes. But I didn't understand how to use it. 
because it doesn't feel like x and y. feel like that other thing.
I could see a use for that, there's a number of companies that are looking for skills that are hard to find.
Well, what he stated is common knowledge if you've at least attempted to make an app or learn how to; and also if you've been using Swift since 2 to 3. `IndexPath` is used to represent the index/position of a row of a table and is found in the protocol functions of table views. As for the names, Swift 3 cut off a lot of words from their functions and moved them into the parameter names. For example, instead of `NSKeyedArchiver.archivedDataWithRootObject(something)` is now `NSKeyedArchiver.archivedData(withRootObject: something)`. Also, from Swift 2 to Swift 3, a lot of the library prefixes were renamed and a lot of functions were turned into computed variables (`NSBundle.mainResource()` became `Bundle.main`, `NSUserDefaults.standardUserDefaults()` became `UserDefaults.standard`, etc.) but not all of them. `NSKeyedArchiver` and `NSKeyedUnarchiver` still have the prefix of "NS" which actually stands for "neXTSTEP," which was the temporary company founded by Steve Jobs when he was ousted from Apple. I'm not sure why they didn't take them off for those but they did for some.
&gt; A bit of both. This project among a few other small things are my way of learning as I go. That's not working out well. You need to learn the basics of Swift first. ESPECIALLY classes. You are hurting yourself from learning Swift and iOS if you keep doing what you're doing.
If you don't know what `self` is, then it's clear you don't know how a class works, and you seriously need to know what a class is when making apps. `self` refers to the object itself. An object is a instance of a class. So when an object accesses code inside it that has `self`, it's talking about... itself. Also, you mentioned view controllers. Those are class objects. Are you declaring that protocol function inside a class after inheriting the protocol UITableViewDelegate? Also, that's some bad repetitive `if` statements. Use a switch statement instead. switch indexPath.row { case 0: self.productController.navigationItem.title = "Apple mobile devices" case 1: self.productController.title = "Samsung mobile devices" case 2: self.productController.title = "Google products" case 3: self.productController.title = "Twitter products" Default: self.productController.title = "Tesla products" } Also, you're coding in Swift; Swift does not need semicolons at the end of a line.
well I've been copying and pasting stuff for years and most of them worked fine after debugging the errors
&gt; just need to make a new framework that contains your model and import it into your app and watch app (and set your app and watch app to compile the data model). This way, your model layer can be shared across targets. I hate to be a pain, but could you give some more info on how I can make my newly created framework contain my model, and then import it into my project? I've basically gone to File &gt; New Target &gt; Cocoa Touch Framework, adding a new framework to my project. How do I import my data model, then set both apps to compile the model? EDIT: So I've dragged my Core Data model down into the new framework project. I've set the "Target Memebership" to my iOS app, Watch app, and Framework. I've done the same for the various class extensions for each entity. It all compiles fine. I haven't touched my Core Data stack. Core Data in my iOS app does not appear to have any problems. In my Watch app I've added, and assigned my managedObjectContext variable. When I attempt to use Core Data like so: self.managedObjectContext.performAndWait { let notificationEntry = NSEntityDescription.insertNewObject(forEntityName: "NotificationEntry", into: self.managedObjectContext) as! NotificationEntry //then i assign data to the properties and do a try catch with save() I get this error: WatchKit App Extension[24911:6366320] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: '+entityForName: could not locate an entity named 'NotificationEntry' in this model. Where have I gone wrong? Thanks.
No need to set your model subclasses' target memberships to both, just the data model. With swift, a quick solution to your problem instead is to place: `@objc(ClassName)` At the beginning of your model classes, swapping "ClassName" for each. Core Data still relies heavily on the objective-C runtime, and objective-C in general and it's too stoopid to look outside of the current target. Sorry it took me awhile to see this! Nice job so far, that's how I do it
Love the design how did you come up with it?
For a list of companies using Swagger Codegen in production, please refer to https://github.com/swagger-api/swagger-codegen#companiesprojects-using-swagger-codegen You will more easily realize the benefits of using Swagger Codegen when your RESTful backend grows bigger and bigger, say 50 endpoints. Disclaimer: I'm a top contributor to Swagger Codegen
Unless you've completely revamped your generated architecture, it's likely just as terrible as before. I'm only familiar with the Swift 2 version used with the CocoaPod, but quite frankly, it looked like Swift code written by a JavaEE developer. Some of the issues are limitations in Swagger itself, like the inability to define custom types, not just JSON types, but I'd want a lot more before I'd use it. I look forward to the day when I can write a definition that generates backend and frontend code in Swift, but Swagger is not yet there. It works, but that's about the best I can say about it.
I'ma check it out. So u fully understand it all now? Like I wana get to a point where it's just like second nature 
Do you want to make apps, or do you want to be a programmer? It's not a trick question, the skills to make a few little mobile apps are much narrower than the skills you need if you want to be a programmer as a profession. 
Are you sure you're not accidentally adjusting your `LaunchScreen.xib`file or similar in error, instead of your Storyboard or main view controller layout? The `LaunchScreen.xib` file specifies the layout that appears before the application is completed its launching, versus the Storyboard or main view controller layout file which controls the layout of the application itself.
True, attention to detail, consistency in style, and adherence to standards are all required for programming.
Stanislav aka Guildworks?
You most likely wrote your code on the launch screen 
I will greatly appreciate that üôåüèæ and I can give u my contact info and u can let me know when we can get started 
Well, it depends what you're trying to do. I don't even know why you're putting the return of a function in it's call. That makes no sense. Your piece of code is confusing and not even Swift syntax.
Oh, I have read that at Apple Documentation https://developer.apple.com/reference/coregraphics/cgrect/2299988-divided And I thought that if I put entireImageRect. it would be right. 
Thanks, took the advice!
That's a function made by Apple. And because you didn't know how a function works, I'm going to assume you are not experienced in Swift if at all. What you did like I said, is use the function declaration as a call. Do you even know what "-&gt;" means? Do you know what calling a function means? Do you know what a function declaration means? That's a method function of the CGRect class that returns a tuple, which means you must have the function equal to a tuple like this: var dividedRect: (slice: CGRect, remainder: CGRect) = entireImageRect.divided(atDistance: entireImageRect.size.height / 2.0, fromEdge: CGRectEdge.minYEdge) Or a shorter way. And because you're declaring a tuple, you can name the parameters whatever you want. var dividedRect: (slice, remainder) = entireImageRect.divided(atDistance: entireImageRect.size.height / 2.0, fromEdge: CGRectEdge.minYEdge) You need to read up on how tuples work and how a function works.
Simplicity, I like.
Its a strange one, the function isn't officially marked as deprecated so it doesn't show up in the docs, but if you check the header for UserDefaults it says it is deprecated, and will be marked as such in the near future 
Yes, I am new to Swift, I am following a tutorial which unfortunately is based on Swift 2.2 and uses CGRectDivide which is unavailable in Swift 3. So what about &amp;firstHalf and &amp;secondHalf? I don't know where to put them in Swift 3. 
Oh that would be awesome, thanks :)
 CGRectDivide(entireImageRect, &amp;firstHalf, &amp;secondHalf, entireImageRect.size.height / 2.0, CGRectEdge.MinYEdge)
Used it. had to write my own database connector because the one provided doesn't even support SSL. made a pull request, the guy in charge of project says hes too busy to merge it. nice framework, but lack of plugins and slow updates made me revert back to hapi.js.
Yes, I know. Even the Docker solution is using the virtualization, and a linux inside, but it is only available for the latest version of Windows 10. You might have environment, where it is not an option (for example, you don't have administrative rights for the Windows machine, or you still have Windows 7, or 8). The article says: "on a Windows machine you can not use the Swift language to build iOS or macOS applications". I think it is still true. 
But do the website or the docker mention in the article have the ability to build iOS or macOS applications? no, absolutely not. So, I think the article is just misleading.
It's a rather unique situation, it's a bit like a side project for the company. The objective for now is to make the app as compelling as possible, and think about monetising strategies in the future.
On mobile right now so this is just off the top of my head, but you can base-64 encode the image and send it as a json string to your server. Your server can then take that base 64 encoding and save an actual file from it on the server.
Sent you a message with mine
The issue isn't with how to send the image itself, but how to send the image with the required key attached for the form dictionary 
Have you taken a look at NSURLSession? It's the basis for most network tasks like this. Something like [this perhaps.](http://stackoverflow.com/questions/37333452/uploading-an-image-to-a-flask-server-using-swifts-nsurlsession) 
Which database connector?
Hello there, as someone looking to get into the industry I gained a lot of insight from reading your comments. If you don't mind, could I send you a PM with a few questions that I have? Thank you.
You are right, I just found it. Do you know if the tvOS sleeps like iOS does to save battery? Or does it stay active since it's not powered the same way? So you can have an app open in iOS, but if the screen goes to sleep, roughly 30 seconds later, iOS stops that apps activity. Just wondering if tvOS works the same way.
I don't know what this means. Neither protocol is new in 8.1 / 3.0.1. What's your class definition look like? Is it even possible to use NSURLSessionDataDelegate from Swift 3? I just get an error.
I'm trying to convert that Swift 2.2 function into a Swift 3 one. 
Most people use MySQL with Vapor so Postgres has not gotten all of the love it deserves. I'll make sure it starts getting more. :) 
We don't even know what operating system you're talking about. Is "launches" referring to something specific? I know Apple's API use words like "presents" and "contains" in very specific ways for view controllers, but I've not heard "launches".
Not that you'll be able to get on the store with it, but there's likely a private framework for responding to RF. The Siri Remote is Bluetooth but the new 4th generation Apple TV has IR input too for universal &amp; old school Apple TV remotes!
The primary model is enterprise installations, bypassing the App Store. A second model we are considering is subscription based in the App Store. At WWDC'16 Apple mentioned a subscription model similar to magazines but for apps. I haven't had time yet to look into it.
http://stackoverflow.com/questions/24581517/read-a-file-url-line-by-line-in-swift That might get you started. It's not swift 3 though, so you'll have to do a touch of work. If you're interested, I used it in my project https://github.com/mld2443/SurfaceManipulation where you can see me used it in conjunction with NSDocument.
I've already told you that it returns a tuple and you have to set the function equal to a tuple. (firstHalf , secondHalf) = entireImageRect.divided(atDistance: entireImageRect.size.height / 2.0, fromEdge: CGRectEdge.minYEdge) [Stack Overflow Question](http://stackoverflow.com/questions/39565760/cgrectdivide-is-deprecated-in-swift-3) If you have made no attempt to understand what a tuple is, calling a function means, declaring a function means, what "-&gt;" means, or what returns means, I'm done trying because I've given you enough answers and comments regarding this, and if you are not doing your part to understand it and all you want to do is copy and paste code, then good luck.
I understood now. Thank you so much!
No idea yet guys?
Thank you so much!
http://stackoverflow.com/questions/24040141/how-do-i-load-a-text-file-into-an-array-with-swift
can u please explain to me how, or show me a link and/or video to how to do that? Thank you!!
Oh geez. I knew it was something silly like that. So that kind of fixed it... for some reason, I'm seeing the first two products show up (iPad and iPod) in the first two cells, and the third cell shows "nope" (the else instruction) EDIT: Nevermind. I took out the indexPath conditional since I don't really need it now that I fixed my mistake, and everything shows up correctly
Yea thanks man!! I got it! Thank you!! I just had to change the GameScene to MenuScene class GameViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() if let view = self.view as! SKView? { // Load the SKScene from 'GameScene.sks' if let scene = SKScene(fileNamed: "GameScene") { // Set the scale mode to scale to fit the window scene.scaleMode = .aspectFill // Present the scene view.presentScene(scene) } 
Ok, I got you, it's the +1 that's causing problem. But now it also seems to break my swipe to delete function, it doesn't delete when I tap delete, just snaps back into place: //Swipe to delete override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -&gt; Bool { return true } override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) { if editingStyle == .delete { products.remove(at: indexPath.row) self.tableView.reloadData() } } 
That turned out to be it, really silly mistake on my part. I fixed that, and now my swipe to delete function seems to not be working properly, when I tap delete it doesn't delete: //Swipe to delete override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -&gt; Bool { return true } override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) { if editingStyle == .delete { products.remove(at: indexPath.row) self.tableView.reloadData() } } // Height of the cells override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -&gt; CGFloat { return 72 }
Try the following code to test if it works. override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) { if editingStyle == .delete { products.remove(at: indexPath.row) tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade) } } 
Ok, tried that with swift 3 syntax tableView.deleteRows(at: [indexPath], with: .fade) And I got a crash, error is Invalid update: invalid number of rows in section 0. The number of rows contained in an existing section after the update (3) must be equal to the number of rows contained in that section before the update (3), plus or minus the number of rows inserted or deleted from that section (0 inserted, 1 deleted) and plus or minus the number of rows moved into or out of that section (0 moved in, 0 moved out).' I'm not sure if it has something to do with the fact that in numberOfRowsInSection, I did return 3 instead of return products.count (if I do products.count, nothing shows up in the cells, and also shows the default cell layout instead of my custom cell layout)
&gt; Change the tableView(_:numberOfRowsInSection:) data source method to return &gt;the appropriate number of rows I'm not sure I understand here... I tried return products.count but as I said, it give me an empty default table view with none of my products and none of my custom cell UI. In my other table view controller, return companies.count works perfectly because the companies array is initialized with 5 objects, as opposed to this table view controller, where the products array is an empty string which I give data depending on which cell I tap on.
I believe you must use a multipart POST request and then set the "name" of the form field to "image_data" just before the image content. Content-Disposition: form-data; name=\"image_data\"; filename=\"\(filename)\"\r\n http://www.kaleidosblog.com/how-to-upload-images-using-swift-2-send-multipart-post-request http://stackoverflow.com/questions/31198035/multipart-file-upload-in-swift http://swiftdeveloperblog.com/image-upload-example/
Shot in the dark... self.presentingViewController?.dismiss(true, nil) Note: That was not typed in Xcode, and is probably not the correct syntax, but hopefully it's close enough to get you on the right page!
You can disable sleep. We built a little app for our office that runs 24/7. 
excuse my ignorance but what of the meaning of "line gap baked in" for the font? 
You‚Äôd better remove this repo pronto.
You should just be able to create a variable before your loop and grab "kinds" at the same point you get the largest number let interestingNumbers = [ "prime": [2,3,5,7,11,13], "fibonacci": [1,1,2,3,5,8], "Square": [1,4,9,16, 25] ] var largest = 0 var kind = "" for (kinds, numbers) in interestingNumbers { for number in numbers { if number &gt; largest{ largest = number kind = kinds } } } print(largest) print(kind)
Pusher.com will do push notifications but I think you're missing the fact that push notifications have to be sent from somewhere. Like my web server notifies Pusher and Pusher then sends the notification. You're not going to have an app send push notifications to itself. You might be looking for Local Notifications, which the app can schedule in advance and then display to the user later when the app is closed. 
thank you!
Parse used to be able to do this right? Can i use pusher without server code? Im looking for a services that integrates with firebase, im trying to avoid deploying a server because i have no idea how to program server side. 
You can run Swift applications on all the platforms you mentioned. On AWS, for example, you'd just spin up an Ubuntu EC2 instance and install Swift. Clone your project, build and you're ready to go!
My pleasure!
A table view is just a subclass of scroll view so you can just set the content offset to (0,0). You can either just set the property or call the setContentOffset method to animate the change. I'm on mobile so I can't easily check the docs to verify. 
As others have said, you can run Swift apps on all of those providers listed. I would like to add that another good strategy is Docker, which would make your app pretty much universally deployable. You can find a bunch of Swift docker files on github and docker hub.
First, I apologize for plugging in my own company. But I'll be more than welcome to give you free credit for a free VPS. Got plenty of room on our hw in the datacenter. Disclosure: The company is [datamantle](https://datamantle.com) PM me.
Are your changes being done on the main thread? Only UI updates made in the main thread will update the screen immediately.
Here is an example of Local Notifications using a button that triggers a notification at 10 seconds after pressing it: https://www.makeapppie.com/2016/08/08/how-to-make-local-notifications-in-ios-10/ You just have to adapt it to your code. If you have any questions, just leave a comment. 
I tried to put it in the main thread and it said not allowed. but this is where I have it... http://imgur.com/a/IImHj
Put those two lines in the viewDidLoad bro...
When do you think the dateWheel.backgroundColor = .blue is going to be executed?
No problem, I was just hoping to help you see why it was working how it was working :)
Honestly it's a step back, RxSwift to me is an unfavorable set of tradeoffs, it's certainly not a milestone. If I was hiring and found someone liked it I'd keep an open mind, but they'd need to be able to defend it's abstractions thoroughly. RxSwift wires your application together with invisible (to the call stack/function signatures) mutable wires. This worsens control/orchestration/timing/simplicity (over just calling functions with arguments) for minor gains. The mutable soup stream style abstraction RxSwift provides is essential for one main case, that of a refreshing result set (e.g. a database query that needs to refresh when things change). Everything else is too small/better handled differently (either a future, or just regular old code). You can create this refreshing result set abstraction with approx 60-80 simple lines of code all up (happy to provide this if it helps). If you want to use RxSwift just for this, then that's an ok choice, but it's a behemoth of a dependency for little value delivered. 
It's not superior. It's just a way of thinking about asynchronous programming as streams of data and how to compose them. I'd say it's worthwhile to learn it. You gain some knowledge in functional programming and stream. I do consider a senior level has to have a good knowledge of concepts in functional knowledge. A lot of them are very useful. RxSwift could be a stepping stone into functional world if you are not already in it. Not every piece of code needs to be RxSwift. It excels at very complicated interaction and streaming of changing underlying data (tablview for example), but too big of an abstraction for simple cases. That being said in a team environment you might not be able to use it as it does have a bit of learning curve. Your teammates may reject the idea. 
You can write a simple web server using Vapor. You'll likely have to be on the same network though, unless you do some tom foolery with your router and static IPs. 
You can extend the Dictionary type and do it that way http://stackoverflow.com/a/29460871 a bit cleaner 
Waiting for App Store approval on an iMessage game (a free, silly little dice game), and starting another iMessage game using what I learned from working on THAT little devil. 
I started learning Swift in May and landed a full-time job for a startup by October. YMMV, but it's definitely possible. 
How big is the file?
Well, looking at this, your states are never both true or both false, so you could definitely replace that with an enum like: enum UnderlineState { case left case right } Although, I'm not entirely sure that this needs to be so complicated. You could just have: func leftButtonTapped() { textLeftButtonUnderline.isHidden = false shapeRightButtonUnderline.isHidden = true } and do the opposite for the right buttton. No point adding additonal functions to make it so complicated. 
The UITableView class has [a method to scroll to a specific row](https://developer.apple.com/reference/uikit/uitableview/1614997-scrolltorow). Documentation is a developer's best friend.
Rather unhelpful comment. OP: ReactiveX is a paradigm for how to write certain tricky parts of code. It's not really a drop in replacement or enhancement for swift. It's well worth learning because it can solve some problems in a cleaner and more sturdy way. As with any tool, there is a time to use it -- it's not meant to solve every problem. I really enjoyed learning ReactiveX because it opens up a new way of writing code. It's not a prerequisite to being a senior engineer but it is a nice tool to have in the belt. Try checking out ReactiveCocoa as well. 
wow thats inspirational... did you have a programming background? or any prior experience? What were you doing before? What path learning path did you follow. Sorry for the questions, but this is a nice hopeful story and id like to understand your experiences
Check out https://github.com/swisspol/GCDWebServer
No, functional styles are usually quite slow so if you do high performance computing you'd never use it ;-p. Every style has it's area of application. edit: to clarify swift is not optimized for functional style programming, e.g. things like tail call optimization are not guaranteed, and things can easily lead to a stack overflow, and the performance tradeoff is something people need to be aware off.
You can hide the tableview using tableView.hidden = true And you can use this function to scroll in a tableview: https://developer.apple.com/reference/uikit/uitableview/1614997-scrolltorow 
Click the [Server-Side Swift](https://www.hackingwithswift.com/store/server-side-swift) link and look for the "Now for the answer to a question you've probably been asking" section towards the end ‚Äì I believe you'll find it relevant to your interests :) One thing I didn't mention on the product page is that server-side Swift is quite different to client-side Swift. You mix and match components easily and freely rather than mostly staying inside UIKit or AppKit, so some of the projects in my book use code from Vapor. Heck, some of IBM's own examples use code from Vapor. It's not quite the black and white choice it can appear from afar, and it's certainly not a zero sum game.
You'll probably have to recheck your PATH and swift download location.
Learning to develop for macOS so I can build a Picasa like fluid image viewer with minimal features!
This is what I got so far: http://stackoverflow.com/questions/28112787/create-a-custom-cell-in-a-nstableview http://www.appcoda.com/customize-table-view-cells-for-uitableview/ 
Also, don't compare the expression in an if statement if it's true. It's assumed to check if it's true unless specified otherwise. Meaning that this will only execute if the boolean value is true. You do not need to compare it to true. if leftButtonUnderlineState { ... } Also, "dry"? Don't you mean more "clean"? Also, some things to make your future code more clean will be to learn how to use `guard`, ternary operator (statement ? ifTrueDoThis : ifFalseDoThis), and `enum`s.
Awesome!!! I really appreciate the help! :) :) :)
I think it's Xcode 8 and Swift 3 together. With Xcode 7, my game sounds worked always. But then when I converted to Swift 3, I had the same problem as you. Sounds would randomly cut off and stop working and giving me errors about the files not being able to load. I submitted a bug report and they marked it as a duplicate so I wasn't the only one with the issue. Switching sound file types didn't make a difference. To avoid it, I ended up not using SKActions for my sounds anymore at all. I created an entire class that manages my audio; both the music and sound. [Here](http://stackoverflow.com/questions/40642526/sprite-kit-no-longer-play-sounds-with-ios10/40669349#40669349) is a link to my answer and the class and how to use it. Basically, I create 2 AVAudioPlayer objects. 1 for music and 1 for sound. I make all sounds be played through the 2nd object. 
Are you serious? lol You put those 2 lines of code in the function that gets called when the button is tapped. Of course it will only switch color after the button is tapped.
Which ubuntu version are you using
What happen when u echo path
Any help would be appreciated! 
Calm your tits
Ubuntu 14.04.5
Ive navigated into the bin file and used the pwd command to make sure that the address is correct 
Swift is based on LLVM, which breaks the compile phase into lex, parse, syntax check, optimize, and object-code generate phases. This lets tools like Xcode do syntax highlighting and code suggestion fairly quickly (when it works, that-is). Once all the files have compiled into object files the linker kicks in and does the normal linking, merging, cross-referencing, optimization, and binary code generation. The binaries are then assembled along with the media and resources (themselves compiled and/or optimized) into an application bundle. The whole thing is then sent to another tool that codesigns it for either testing or deployment. Swift is only involved in the first part (compiling, etc). There are other language front-ends, like C or Objective-C, that go through a similar sequence, which is why you can mix and match the code from those files with Swift. There are different back-end binary generators for different ARM processors as well as Intel. This is why you can use Swift to create both iOS and Mac apps. The LLDB debugger can debug all these languages at runtime and let you examine variables and set breakpoints because it operates with consistent debug information embedded in the binaries by LLVM all along the way. LLVM also implements each of its phases as a library so it can be embedded inside other apps. The swift command line tool is just a simple wrapper around a number of llvm libraries that each imolement a different phase. The command line tool processes the command line arguments, sets up the paths, and spits out log messages but the LLVM libraries do all the work. Xcode is a standalone app that does the same by linking against the same libraries as the command-line tool. The Playground also calls onto the same library code to generate output on-the-fly. The other part is the runtime library that lets the app talk to the OS and hardware and implement things like UI, threading, and networking. Technically those aren't part of the language but are provided by the system as separate libraries every app links against. In the early stages of Swift these libraries were named the same as their Objective-C and C counterparts. But in Swift 3 they are 'bridged' with shorter more Swift-like names (for example NSData became Data).
Put at the end of the `~/.bashrc` file the export line. `export PATH=/the_path/swift/usr/bin:$PATH`
Yes I noticed that course before actually. I may invest into it.. Currently its 90% off and I'm wondering if it ever goes any cheaper
Your book looks awesome! Wish you luck with it, just wish I had the money to buy it. I've been wanting to look into server side swift myself now that I just finished my recent project.
If you sign up to [my Swift newsletter](https://gumroad.com/twostraws) you should get discount codes for my books emailed to you. Server-side Swift isn't as easy as iOS or even macOS, but I think it's quite rewarding!
I really don't understand your logic. If you thought all the code executed at once, then what would be the point of making buttons do things when touched? Sounds like you might need to look up the basics of making an app. You can hold down the Option key on your Mac and click a function/keyword in Xcode and see more relevant things about it. For example, the viewDidLoad is called when the view tells the receiver that the view is about to load, the viewWillLoad (self explanatory), etc. You put things in the viewDidLoad whenever you want to prepare the view right before it's presented to the user.
I believe `.profile` simply loads `.bashrc`, so you only really need to add it to `.bashrc`.
thanks, it's working now
That's a terrible approach but it sounds like you've done it then okay, but just know I regularly browse this sub so I'll see what other ridiculous questions you'll have.
Thanks, glad we're friends now. üòä
Reactive styles (including the far simpler ReSwift and React.js) as well as the more formal and complex Rx extensions such as RxSwift and Reactive Cocoa) are all useful paradigms to learn. While not panaceas, they are incredibly useful for programs where state transitions aren't orderly. So yes, they are great for your career to learn, just like it's great to learn new styles of anything. Are they essential? Not unless the codebase you are in is already like that. Much of the complexity of FRP/Rx libs comes from the functional part and people not understanding that. Signal producers, consumers and more are even more complexity on that. And time is yet another layer of complexity. Mind you, that can have a pay off, but it isn't for everything
I'm also using Kitura for my [new Server-Side Swift book](https://gumroad.com/l/server-side-swift) so I can't comment on Vapor deployment. However, I can help answer your second question: it's perfectly acceptable to have your database and app on the same instance when you're just starting out. It's something you can change very easily at a later date if you find you need it, and it costs less in the meantime. If you find your app is growing in popularity, you'll probably find that splitting your solution into multiple parts helps you scale easily ‚Äì you could have multiple database instances, or perhaps add some Redis into the mix for cacheing, for example.
Hello! Can you explain. Swift app who was compile require some environment for be started? I need install swift compiler on deployment server?
Yes, you need Swift on your server. You can get that using Docker with something like [this](https://github.com/IBM-Swift/swift-ubuntu-docker). There are alternatives such as installing [Swift by hand](https://swift.org/download/) but I find Docker easier.
Wow. This is my first post ever on Reddit and I really appreciate your response. This was very helpful! 
All add that Kitura and Vapor are quite comparable. Between releases they trade places for performance. Features are decent if a little lacking from server side swift in general. Kitura has a more identifiable naming though, which is big for me. I hate seeing things like "droplet" and whatever else. I think both teams have a representative in the definition of the swift server API as well. I know Kitura does. 
I'm currently trying to figure out what more useful breaking changes I can make to [RandomKit](https://github.com/nvzqz/RandomKit) before creating a 3.0.0 release.
Code folding is entirely local to your computer and is fine to do irrespective of company policy Yes people group things in modules, and within those modules group them by kind, in this manner
Definitely doable programmatically. Heres an example first we create the UserCell class: import UIKit class UserCell: UITableViewCell { private let textField1 = UITextField() private let textField2 = UITextField() override init(style: UITableViewCellStyle, reuseIdentifier: String?) { super.init(style: style, reuseIdentifier: reuseIdentifier) addSubview(textField1) addSubview(textField2) textField1.frame = CGRect(x: 0, y: 0, width: self.frame.width, height: 25) textField1.backgroundColor = UIColor.gray textField1.textColor = UIColor.white textField2.frame = CGRect(x: 0, y: 25, width: self.frame.width, height: 25) selectionStyle = .none } required init?(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } } And now within our ViewController: import UIKit class ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource { private let tableView = UITableView() override func viewDidLoad() { super.viewDidLoad() self.view.addSubview(tableView) tableView.frame = CGRect(x: 0, y: 40, width: self.view.frame.width, height: self.view.frame.height) tableView.delegate = self tableView.dataSource = self tableView.register(UserCell.self, forCellReuseIdentifier: "UserCell") } func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { return 1 } func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { return UserCell(style: .default, reuseIdentifier: "UserCell") } func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -&gt; CGFloat { return 50 } } Let me know if you have any more questions. Cheers! 
Awesome I was kind of suspecting this. I pushed it to Github and when I viewed it in the browser it was unfolded. Thanks!
Yes, typically you want to join things together and use a // Mark for easy code navigation. So, for example you could group all of your UITableView protocol methods (numberOfRowsInSection, cellForRowAt, etc.) together and Mark them as TableView, then group your UIViewController (viewDidLoad, viewDidAppear) and do the same. That way it's very easy for someone reading your code to find where your table view behavior is defined. I try to maintain the same style across all of my files, so I always have initialization at the top, then UIViewController methods after, followed by other protocol methods and finally any private methods.
You could send a POST to the firebase server and that would in turn result in a push notification to the device. But it seems like a roundabout way of doing things. You probably want to look into local notifications instead.
How?
Thanks for the information, that's exactly the sort of answer that I was hoping for. I hadn't thought about it previously but given that the backend is intended for caching and mild data transformation I would even be able to migrate to a discrete database instance without the need to migrate the existing data; makes opting for a shared instance at the beginning a less frightening option. I've gone ahead and pre-ordered your book, it looks like it's exactly what I need to continue building my skills in backend development and its contributed to my decision to switch from Vapor to Kitura. :D
Playgrounds should definitely be working more or less for you. Perhaps look up some tutorials on youtube and see what you might be missing.
https://gist.github.com/chris-hatton/bad4493cec094f918572bc656693a7ed
Not yet in the App Store, will publish it on Github but need a little code cleansing, probably this week. 
When I installed XCode a couple of months ago the first thing I tried was Playground but it gave me a huge middle finger with a weird error. So I went right into coding apps and forgot about it. About a week later I tried again to run a Playground and it worked this time, but too late, now I don't need it.
In general, you don't. 1. Different classes should go in different files, unless it is some very little auxiliary class, that is only used in the main one. 2. There are very few reasons to access a VC's views directly from external code and it breaks encapsulation and the whole reason of having a view**Controller*. You can actually go ahead and make them private, nothing breaks: @IBOutlet private var stack: StackView! (weak is not necessary in Swift - both views and VCs deallocate nicely) If you really want to, you could access a view as if it is a normal property (which it is). One of the VCs will have to have a reference to the other - instance variable, function parameter, etc. 
Thanks for you help! 
One way to group code inside of classes and structs is to put related code inside extensions. Apple even recommends this in the Swift manual and I have seen many developers do this. This allows to group code by concepts even inside the same class and use code folding. For example, this is how I organize my classes, in order: * Put public properties and methods in the main section of the class/struct (and private properties too, because you cannot put stored properties in extensions) * Put convenience initializers in a separate extension. For structs this also has the advantage of retaining the automatically synthesised memberwise initializer that would be lost otherwise * Put class overrides in a separate extension * Put protocol conformance in separate extensions (one for each protocol) * Put private methods and computed properties in a private extension You can see a small example [in this article on table views I wrote](http://matteomanferdini.com/the-correct-way-to-display-lists-in-ios-and-what-many-developers-do-wrong/), where I put the data source methods in a separate extension (towards the bottom of the article)
I do this sometimes, but most of the cells that I deal with are simple and setting views via properties would introduce only boilerplate.
Indeed this is the right approach in my opinion. But don't access the outlets directly when setting the content of a cell. You can avoid this in three ways: * create a setter method that takes the values and sets the outlets * create separate properties that take the values and set the outlets through a setter or a property observer I wrote an example of the latter [in this article](http://matteomanferdini.com/the-correct-way-to-display-lists-in-ios-and-what-many-developers-do-wrong/). In either of the two cases you can also create a struct that contains all the data to pass to the cell through a single method or property.
Have to say swift is pretty weak in this area. There's no language level equivalent to Scala' future. And there doesn't appear to be a good equivalent to scalaz or monix Task. Promise kit is ok.
How are these two view controllers related in the app? Which ones is presenting the other one?
It's a tabbed application, the first tab is a view controller and the second one is a table view controller. 
Oh, I see: You certainly *could* get the variables by referencing the tabviewcontroller and looking at it's view controllers field and casting the things you got out of it But that's the wrong way to go about it You need to make a third class, called a "model" and store the result of the variable (whenever it's changed) in the class that takes input, and put it there, in the model. Then, the other class should read out of the model.
What are you doing?
Since you gave absolutely no background to anything you're trying to do, your post is pretty much useless. However that error might be from an outlet that you disconnected, erased, and then remade and reconnected. You may have an outlet that is connected to nothing but it would still Show as connected 
All I've made was a very simple app featuring one text field, one label, and one button. I input a value in the text field and click on the "submit" button," and the value gets multiplied by an int and shown on the label. It's quite straightforward, and all of these UI elements are definitely connected so I don't really know what the problem is. What could "thread 1: signal SIGABRT" possibly mean? 
Sorry, Genericguy25. I was pretty much preoccupied with this problem over thirty mins that it never occurred to me that I haven't explained what I was trying to do. In short, "All I've made was a very simple app featuring one text field, one label, and one button. I input a value in the text field and click on the "submit" button," and the value gets multiplied by an int and shown on the label. It's quite straightforward, and all of these UI elements are definitely connected so I don't really know what the problem is. What could "thread 1: signal SIGABRT" possibly mean?"
Thanks don! I'll see if it works. :) 
Did you right click on view controller in the documents list and verify everything is connected to outlets that still exist though? That sigbart thing isn't a specific error unfortunately. 
Can you write an example code, please?
The property itself is optional ('String?') and you're calling it on an optional, so an optional of an optional String is 'String??'. This lets you tell the difference between "self.annotation exists, but it doesn't have a title" and "self.annotation is nil".
I just finished writing a file downloading library for Swift 3 [VeloxDownloader](https://cocoapods.org/pods/VeloxDownloader) 
When the tableView loads it will present whatever data is in your dataModel. So if cellForRowAtIndexPath returns a cell, it will appear. Chances are that, when you return to the tableView, your entire datamodel is static and intact and re-presents itself. In order to retain the changes, you either the datamodel persisted to disk, or you need to maintain the datamodel in a space that doesn't go out of scope and get deallocated, such as a static var or something in the global space. While we're at it, you don't want to manipulate your data model then just reloadData(). You should do tableView.beginUpdates() and tableView.endUpdates(), and between those call tableView.deleteRowsAtIndexPaths(...). This will give you control over the animation.
Looks great! Are you talking about how to develop serverside swift apps on Linux and Windows? We are thinking of moving stuff to swift but lots of our devs don't like osx. I'm talking about stuff like IDE support, how to debug and profile apps on these OSes.
Yes. The type of the expression "self.annotation?" is an optional.
Okay so if you create an initializer for wheels to be 4 then that means it can still be change but by default whenever you call numberOfWheels then it'll be 4? If so can't you set default values like var numberOfWheels: Int = 4 Or is that different?
No. you are wrong. It should not work like that. Please make test for yourself. So, if a expression like that: x?.xx?.xxx?.xxxx As you said, That turns out make a return type so many ???
You probably have your data being initialized on view will/did appear... this gets called everytime you go to that screen wether you go backwards forwards or dismiss back to it..
Here's that code: override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { return labels.count } override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: cellId, for: indexPath) as! CustomCell cell.textLabel?.text = self.labels[indexPath.row] cell.cellImageView.image = UIImage(named: self.images[indexPath.row])! return cell } I think you're right about the data persistence but I'm not sure how to address that, as a beginner this is my first time dealing with the issue. 
That doesn't make any sense. `self.annotation?` is an optional, because `self.annotation` is optional. (If `self.annotation` weren't optional, then `self.annotation?` would not be allowed.) Optional chaining doesn't add an Optional wrapper around its contents. It only causes the parent postfix expression to be ignored, if the inner optional is nil. It's easy to check this, for example with a `String` property like `removingPercentEncoding` which returns a `String?`: 1&gt; import Foundation 2&gt; let a: String? = "a" a: String? = "a" 3&gt; type(of: a) $R0: String?.Type = String? 4&gt; type(of: a?.removingPercentEncoding) $R1: String?.Type = String? 5&gt; type(of: a?.removingPercentEncoding?.removingPercentEncoding?.removingPercentEncoding) $R2: String?.Type = String? 
Swift itself and Xcode are so buggy.
Not a bug, but admittedly a somewhat obscure case. In MKAnnotation.h, it's declared as: @optional @property (nonatomic, readonly, copy, nullable) NSString *title; which generates this Swift declaration: optional public var title: String? { get } [Says the Swift book:](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID284) &gt; Optional requirements [from an Objective-C protocol] are prefixed by the `optional` modifier as part of the protocol‚Äôs [Swift] definition. and: &gt; When you use a method or property in an optional requirement, its type automatically becomes an optional. The old Objective-C protocol says "Classes can choose to implement this or not -- and if they do implement it, it can return nil". Swift has a native way (Optional) to describe the second half of that, and it covers the first half by just wrapping it in another level of Optional. It's confusing that Swift uses the word "optional" to mean these two rather different concepts, and it doesn't help that this is a part of Swift that only exists (so far) for Objective-C interoperability.
its an optional string wrapped in an optional. MKAnnotationView has an optional property annotation (MKAnnotation) the annotation property has an optional property String. So title is an optional string wrapped in an optional MKAnnotation
I don't know how to upload pictures on reddit. If I comment out adding the slider code. What I get is a uiview that is constrained nicely. Inside is a row of Labels. RGB. Below each Label is a textfield centered to the its label. The text field below the G is centered horizontally to the view and the flanking textfields are 65 away from it. All the labels are vertically centered to each other and all the text fields are vertically centered to each other. 
https://marketplace.eclipse.org/content/liclipse
Ok it seems to be working now after making labels and images static var instead of var, thanks for suggesting the use of static var. Is the long term solution much more complicated?
Have you tried it? What are your experiences? I'm especially interested in profiling, debugging and autocomplete support. Thanks
Yeah, you don't want static members long term because that memory is allocated immediately and remains allocated. If you need to persist data, you should eventually investigate solutions such as CoreData or UserDefaults, or leverage a 3rd party library. From the tone of the conversation, I think you should just put a TODO here and continue learning about tableviews.
Mostly did Linux kernel driver programming with Eclipse(different plugin though, liclipse might be better). Sometimes it doesn't recognize some linux kernel macros and marks them as error but compiles fine. And debugging for Linux kernel drivers are done by just inserting them into your virtual machine or your microcontroller to see if they crash and also logging what they do, so can't say much about that. Also if you have some inexplicable errors in Eclipse, just close and reopen it. (even clean solution doesn't always work) Still: Eclipse might have got better since then and don't know much about this plugin other than it supports swift, so the best is to try and see for yourself. ps: tbh, there are a lot of inexplicable errors with Visual Studio and XCode too. Like this other day it took me and my colleague 40 minutes to figure out how to get app groups to work with the today extension.
Thanks, I fear that this plugin will not do, as I see it doesn't support debugging or autocomplete. It just colorizes syntax.
ELI5: You own a bakery and have 2 bakers. Initializers are like "recipes" -- they define the entire recipe or can define a base of a recipe. You ask a baker to make an apple pie. They'll go in their recipe book and find what makes an apple pie. 1/2 cup of sugar, 2 apples, 1/2 a stick of butter, etc. Once they've actually baked and made that apple pie from that recipe, it's now a living object (instance). A customer comes in and says, "I really love your Apple pie... but I want a bit more apples please!" You ask the other baker please make an apple pie... but I want maybe 3 apples instead of 2. They'll go back to the recipe book and find everything the same except now instead of 2 apples, they'll use 3. You're now passing information and modifying the "apple pie" by changing a part of the recipe. Sometimes you don't want anything changed so you don't ask. Sometimes you want everything changed... so you can take those requests all in. The point is that this all happens at that first step of making the pie. Possibly the customer will say half-way through the baking process, "I want a crispy crust!" Then you'll access some function that does something to make the pie crispy like sprinkling sugar on it. Though you may not have this "crispy crust" variable setup in the initial step... because it may be an *unusual* request. You can go as crazy or as non-crazy as you want with your initializers. Remember, you're the owner and defining the "recipes." ---- An example of this code would be: // Way #1 bossy owner who doesn't want the recipe changed class ApplePie { var cups_of_sugar: Double var number_of_apples: Int init() { self.cups_of_sugar = 0.5 self.number_of_apples = 2 } } // Way #2 bossy owner who doesn't want the recipe changed class ApplePie { var cups_of_sugar: Double = 0.5 var number_of_apples: Int = 2 init() { } } // semi-nicer owner who allows some changes on his recipe class ApplePie { var cups_of_sugar: Double var number_of_apples: Int init(number_of_apples_requested:Int ) { self.cups_of_sugar = 0.5 // half cup of sugar self.number_of_apples = number_of_apples_requested } } // wild owner who allows the changing of everything in his recipe class ApplePie { var cups_of_sugar: Double var number_of_apples: Int init(cups_of_sugar_requested: Double, number_of_apples_requested: Int) { self.cups_of_sugar = cups_of_sugar_requested ... } } ---- Technically, you'd want to use LET for variables you never want changed, and VAR for variables you want to be changed at any point. I just kept it all as VAR to make it easier. If you have questions feel free to ask :).
My guess is you're probably not going to get great IDE support on those platforms any time soon, but if you're using Swift on a Mac now, you can try just using lldb for a few days and see if it's tolerable for you. Personally, I think the Xcode debugger is decent, but nothing special. I use lldb about half the time anyway (when I get frustrated with Xcode's variable inspector) and it's fine.
Bug
Wow thanks for the detailed response. So is the only purpose of initializers is to set a default value if no other value for a property is declared in an instance? 
Can this be accomplished programmatically? Is there anyway for me to write a single function that iterates through all of my UIbuttons, extracts the .title property from each, and creates a link to the correct sound file? Right now, my UIbuttons have "plain" as their title type. Should I switch these to "attributed"? The name of the sound file for each symbol is the symbol itself + "Sound". e.g., p = pSound.mp3, …Æ = …ÆSound.mp3 
Not exactly. You can have variables that aren't defined within that initializer and may be defined later in a function. For example, you can have a "var temperature_in_oven: Int?" that question mark denotes it may or may not ever be defined, while an exclamation point shows that later down the line it will be defined in the Swift file you're working in. Later you **may or may not** have a function called, "func setTemperature(newTemp: Int)" where you define that temperature_in_oven variable. If you have a "var temperature_in_oven: Int!" then you *need* that setTemperature function later on. An initializer sets up what you *feel* is appropriate for that object. There may be 1 thing you have to have, or 100 :). It's all *design choices* when you're programming.
 @IBAction func playSoundPress(sender: UIButton) { if let title = sender.titleLabel?.text { switch title { case "a": // a code case "…Æ": // …Æ code ... default: // default action } } Then assign all the buttons to that function (ctrl+click to the viewcontroller in Storyboard).
Thanks! AFAIK Windows IDEs for Swift don't exist. And after doing some research the situation on Linux is not the best either :/ https://www.reddit.com/r/swift/comments/5gokhr/developing_on_windowslinux/dau0q3z/ So it looks to me sadly that Swift is not ready for serious server development yet :(
You could try writing your debugging info to a file instead of NSLog.
`title` both returns an optional and is marked optional as an Obj-C protocol method. That's why it's doubly optional.
I have redone it using all code. I have provided screen shots
I have redone it using all code. I have provided screen shots
I have redone it using all code. I have provided screen shots
I have redone it using all code. I have provided screen shots
I mean its not only breaking its own container but a separate container too
Well, it turns out that the problem was actually quite easy to solve from the beginning. I only overlooked it because of being intimidated by the vertical UISlider. Since I did not give the above container a fixed height when I added the container below it and ran the app, the containers equally filled the space and the contents inside messed up accordingly. I simply gave the top container with just the labels and textfield a fixed height of 61 and its now much closer to being done. Sorry
collectionView(_: cellForItemAt:) is called once for each cell constructed (visible or prefetch). The loop you have just repeats 18 times and repeatedly sets the label text and backgroundColor. func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell { let cell = collectionView.dequeueReusableCell(withReuseIdentifier: reuseIdentifier, for: indexPath as IndexPath) as! MyCollectionViewCell let rnd1 = Double.random(min: 0.1, max: 1.0) let rnd2 = Double.random(min: 0.1, max: 1.0) let rnd3 = Double.random(min: 0.1, max: 1.0) cell.myLabel.text = self.items[indexPath.item] cell.backgroundColor = UIColor(red: CGFloat(rnd1), green: CGFloat(rnd2), blue: CGFloat(rnd3), alpha: CGFloat(1.0)) if indexPath.row &gt;= 8 &amp;&amp; indexPath.row &lt;= 11 { // or using .items value // make it a circle } return cell } Note: that since you are choosing the cell backgroundColor in the data source, the color will randomly change if the cell is reconstructed, moved offscreen, etc. Also, while many people do it, **cellForItemAt** is technically part of the Data Source protocol and should only be used to move data from the datasource into the cell. Instead, the appearance of the cell should be realized in **willDisplayCell**.
wut? 0_o are you talking about Xcode?
I think there is a Swift debugger, autocomplete, and syntax highlighting in Atom as well, but not sure if it's good. 
You're most likely talking about persisting data which involves using Core Data which is a monster to learn for most beginners. Apple has a [great tutorial on persisting data with NSCoding](https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/Lesson10.html) that might be of interest to you. NSHipster also has an [article discussing the differences between Core Data and NSCoding](http://nshipster.com/nscoding/).
I would argue that it's a bug in the bridging between Obj-C and Swift. It should be `String?` or `optional` but not both. 
There's definitely nothing for windows; the compiler doesn't even run unless you use the ubuntu/bash subsystem, which is for the command line only. For Linux, there should be a lot more stuff popping up soon since SourceKit (Swift's autocomplete framework) [now builds on linux](https://github.com/apple/swift/pull/3594#issuecomment-234169759), and some frameworks/editors are beginning to take advantage of that ([here](https://github.com/jpsim/SourceKitten/issues/179), [here](https://github.com/realm/SwiftLint/issues/732), and [here](https://github.com/facebook/nuclide/issues/678) to list a few). Once the backbone is there, writing the plugins is just glue between the existing tools (debugging via lldb, autocomplete via sourcekit/sourcekitten, etc.). I believe there is already a plugin for Atom, for example. Check back again in 3-6 months and you should see a much prettier picture :)
Not exactly how I was thinking it looked, but the problem is still the same. The sliders bottom constraint is pulling all of the other controls down. If you look at the console logs you'll probably see breaking constraint warnings. And the constraints that are breaking are the ones holding your controls to the top. If you remove your sliders bottom constraint and just set a height I think you'll find your stretching problem fixed. When I do constraints I typically start with one control, or set of controls that I pin to a side, top, or bottom. Then I pin all my other controls in a chain never having a control in that chain pined to the opposite side of my starting control. 
Just no
I'm not currently at my laptop, but if I don't give it a bottom constraint it won't know how far down to go ..right? That containers height varies depending on device screen size so I can't give the sliders a fixed height
thanks !
No; optional chaining don't return anything. The expression of xxx?.xxxx?.xxxxx just means that it will continue to access the properties if the value is not nil.
An initializer is to give default values or specific values that you want the object to have when you create it. They are used to create objects (also known as an instance). 
In Obj-C title is an nullable string so the during the swift conversion step1 : Nullable string becomes an optional String now the title is an optional property in the Obj-C protocol do during the next step of conversion title becomes double wrapped in optional
sooo cool O:
SAME! yes, it would be cool If the borders changed too. /:
Nice one. I like that color palette .
If your back end is being written in Java EE, I am failing to see the problem. Edit: missed what you're saving. You might need a more custom binary format. Still not too much of a problem to move it though. I think you'll find once you just do it, it will make sense.
I like quick (BDD), but most of the reasons don't show why you think it's better than XCTest
So I have the name and ID and some description of the levels in one table. I would always get that table when looking at downloadable levels. And I would have other tables that would store the data for those levels. When the user decides to download a level, he would save the correct row from the level list and all the corresponding rows from other tables to his phone. In Java I can have a many to many connection and it would be handled like I have a list of other class in my own class and all I have to do is use the correct annotations when declaring the classes that I store in my database.
There are also unowned references. Like weak except it is not optional. Another way to create a strong reference cycle is a closure that captures self. Resolve with a capture list. 
Or am I better off getting the data in json and convert it once to my class and store an array of it in userdefaults as anyobject instead of having a local database too and managing the mobile related sql queries in my mobile app? If I want to port it to Android or PC then I can reuse the entity classes from my server and manage the database queries there, so having an endpoint on my backend just to convert my databases to json would be suboptimal.
Wow double optional all the way!
Sorry if this is repeated but if your example #1 and example #2 do the same thing why would we wouldn't we always do it like example #2 since I seems like example 1 is just more syntax also why is there still the init statement in example #2 if it's empty.
Just design choices. It's up to you what you want to put in there, or not :). The best way to find what *style* and *design choices* you'd like to go with is through trial and error on tons of programs. Definitely do lots of practice problems :D.
Use web endpoints and json. Store locally using dictionary/plist to/from string.
Use sqlite on the iPhone, then porting the queries over to android would be a breeze.
Nope. var fileName: String = "" switch ... { case "a": fileName = "a" ... } // do - catch code after and use forResource: fileName
I'm really not sure where you got that I was suggesting converting anybody to a Mac.
The only porting that Android needs is to use a different JPA implementation than on PC/server. Java can translate databases into classes(either automatically from the database into your project or it creates the database based on the classes in your program) to make them easier to work with: https://en.wikipedia.org/wiki/Java_Persistence_API#Entities &gt; **Entities** &gt; A persistence entity is a lightweight Java class whose state is typically persisted to a table in a relational database. Instances of such an entity correspond to individual rows in the table. Entities typically have relationships with other entities, and these relationships are expressed through object/relational metadata. Object/relational metadata can be specified directly in the entity class file by using annotations, or in a separate XML descriptor file distributed with the application. &gt; **The Java Persistence Query Language** &gt; The Java Persistence Query Language (JPQL) makes queries against entities stored in a relational database. Queries resemble SQL queries in syntax, but operate against entity objects rather than directly with database tables. So it's basically like shoving an array of your class into UserDefaults as AnyObject but more optimized because it's an actual database in the background.
Por que no?
First point is false - reusing cells doesn't mean there is only one instance of cell - there are so many instances to fit tableView + additional one (because you can scroll in such way that first cell is partially visible and new cell is shown). Of course it applies for simplest case of table view with only one type of cell, each one with the same height.
Strong reference cycles with closures will be the topic for an upcoming video. (Edit: I removed the comment about unowned class properties.)
You should look into Firebase by Google, which uses JSON files to manage databases.
The section title _"Reference Type Matters"_ is confusing, huh, considering the section is about protocol extension methods on protocol existentials (that are not requirements) not being dynamically dispatched. Perhaps saying "Static Type Matters" would be better.
If they don't like MacOS or Xcode, what makes you think they'll want to use Swift?
That's not an article, it's a listicle. And it doesn't show anything. No pros/cons, no examples, nothing. Just "testing is good" (no shit, captain Obvious?) 
Have you actually asked them? Swift's main dev platform is always going to be Mac. It may work on other platforms, but they're always going to be 3rd party setups of varying quality. Honestly, if your people are that against using Macs, you might want to look at something else. Go or Rust would fill your requirements quite nicely, and have mature development environments on Linux.
//MARK: Properties, , Lifecycle , Navigation , Actions , Public , Data sources/Delegates ...etc etc...( I rather use these as extensions and give them corresponding Pragma as well ) I use this personally :)
Because it's cute. It's called monofur
No it's not, and don't think that way. An init is the method used to initialize a new object. **If there is no init, you can't create a new object at all.** And in programming, you will be working with objects forever. And there are many problems with your line of code. It's hardcoded as a 4. What if the class is more complex and needs to get it's data from somewhere else that you don't know the values to? You can't put all the possible values that could exist because you don't know what they are. What if you need to create several instance of an object at once like in a loop? Here's a better example of what I mean. In this [link](https://github.com/fictorial/JKButtonNode/blob/master/Project/JKButtonNode/JKButtonNode.swift), I have created a class called `JKButtonNode` where you can create buttons into a SpriteKit game (SpriteKit does not have native buttons). Notice all of the inits I have. Each init is specific to different situations because everybody who used my class will be creating their own specific buttons with specific properties. Notice also how the buttons do not have background images because I don't know what the user will be using as a background, so I can't set it specific to anything. Those things have to be assigned when created (or initialized). If I didn't have ANY of those inits, then there would be no possible way to create a button at all. In fact, I would get an error saying that the class has no initializers. Here are 4 buttons that use an initializer to give them a certain name and certain state. What's easier: making 4 classes and giving them each specific titles or just make a single class that can be used infinitely many times and just assign their titles at initialization? private var button1 = JKButtonNode(title: "Button 1", state: .normal) private var button2 = JKButtonNode(title: "Button 2", state: .normal) private var button3 = JKButtonNode(title: "Button 3", state: .normal) private var button4 = JKButtonNode(title: "Button 4", state: .normal) But, what if I want to create many buttons? Do I have to make a class with each one having specific information for each one? No, just use an init. for i in 1...60 { var button = JKButtonNode(title: "Button \(i)", state: .normal) } Here's another example. This line of code creates 45 buttons that are levels, so the user can select what level to go to. What's easier: creating 45 different classes each having specific information hard coded like your example (tag = 1, tag = 2, etc.) for each button, or create a single class that can be used infinitely many times and just assign it it's tag (level data) at initialization? var tag = 1 for minorViewIndex in 0..&lt;views { for row in 1...dimensions.rows { for column in 1...dimensions.columns { //Create an instance of JKLevelCollectionCell and assign it it's level tag. let cell = JKLevelCollectionCell(didUnlock: false, tag: tag) //the init //Assign specific properties to the object created cell.setBackgroundsForState(normal: "LevelButtonN", highlighted: "LevelButtonH", disabled: "LevelButtonD") cell.setProperties(enabled: false, canPlaySound: true, canChangeState: true, withSounds: (active: buttonPushedSound, inactive: "")) cell.setPropertiesForTitle(fontName: "TimesNewRomanPS-BoldMT", size: 100, color: SKColor(red: 1.0, green: 1.0, blue: 1.0, alpha: 0.3)) cell.position = CGPoint(x: edgeOffsets.left * Double(column), y: edgeOffsets.bottom - (edgeOffsets.left * Double(row))) cell.name = "Cell: \(tag)" tag += 1 levels[minorViewIndex].append(cell) self.views[minorViewIndex].addChild(cell) } } } Technically, I could make it less useful and could've done an empty init and assign the tag after. let cell = JKLevelCollectionCell() cell.tag = tag But why would I make my code less useful and convenient when I could just assign it at initialization? 
Are you talking about the one I just bought for Swift 3 and iOS 10? Well the good thing that I bought the entire bundle is that they get updated for free. This is why I don't buy the physical copies of books. All the ones I bought are PDFs.
No, different book, same dilemma 
I just started recently and it seems best to focus on the latest version, using the latest tools. There is plenty of material out there including guides like this: https://www.hackingwithswift.com/
No. Get the latest.
I can see how the title can be confusing - let me see if I can think of anything better. I wanted to say "The type of the pointer matters", but that's not the correct language for swift. "The type of the variable matters" is a bit closer, but it could be a constant!
The differences are fairly major and minor; I'd say do two things. 1. Follow the principles and ideas of the courses (not exactly the syntax aka the code). 2. Have the [Apple's Swift Standard Library Reference Document](https://developer.apple.com/reference/swift) open.
A wrapper around CloudKit that makes it easier to keep track of the current user sign in status. Helps out a lot when implementing an app that needs to react to when the user either signs in or out of iCloud. Available here: https://github.com/jagcesar/cloudkitcurrentuser
Great job, can I include it in my next top5 iOS libs on medium?
Thank you, great example, subbed :D
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/macprogramming] [EXC\_BAD\_ACCESS error for invoking method ‚Ä¢ \/r\/swift](https://np.reddit.com/r/macprogramming/comments/5gzbzu/exc_bad_access_error_for_invoking_method_rswift/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Clicking the button works fine. You need to look at the error: an EXC_BAD_ACCESS. This occurs when an invalid pointer is deferenced. In Swift, this only occurs if you're using "unsafe" or if the compiler has messed up. The simple fact that you can't clean the build folder says to me that something is messed up in Xcode. Maybe try rebooting.
Ok, will try that. BTW, does this reveal anything to you? InheritProgram`@objc AppDelegate.changeBtn(NSButton) -&gt; (): 0x100001f10 &lt;+0&gt;: pushq %rbp 0x100001f11 &lt;+1&gt;: movq %rsp, %rbp 0x100001f14 &lt;+4&gt;: subq $0x30, %rsp 0x100001f18 &lt;+8&gt;: movq %rdi, -0x8(%rbp) 0x100001f1c &lt;+12&gt;: movq %rdx, %rdi 0x100001f1f &lt;+15&gt;: movq %rsi, -0x10(%rbp) 0x100001f23 &lt;+19&gt;: movq %rdx, -0x18(%rbp) 0x100001f27 &lt;+23&gt;: callq 0x100002bd8 ; symbol stub for: objc_retain 0x100001f2c &lt;+28&gt;: movq -0x8(%rbp), %rdi 0x100001f30 &lt;+32&gt;: movq %rax, -0x20(%rbp) 0x100001f34 &lt;+36&gt;: callq 0x100002bd8 ; symbol stub for: objc_retain 0x100001f39 &lt;+41&gt;: movq -0x18(%rbp), %rdi 0x100001f3d &lt;+45&gt;: movq -0x8(%rbp), %rsi 0x100001f41 &lt;+49&gt;: movq %rax, -0x28(%rbp) 0x100001f45 &lt;+53&gt;: callq 0x100001bd0 ; InheritProgram.AppDelegate.changeBtn (__ObjC.NSButton) -&gt; () at AppDelegate.swift:16 0x100001f4a &lt;+58&gt;: movq -0x8(%rbp), %rdi 0x100001f4e &lt;+62&gt;: callq 0x100002bd2 ; symbol stub for: objc_release 0x100001f53 &lt;+67&gt;: addq $0x30, %rsp 0x100001f57 &lt;+71&gt;: popq %rbp 0x100001f58 &lt;+72&gt;: retq 
Hi, sorry about the delay. I've just extracted the naive case from my libraries (many obvious improvements can be made). I've added a tiny example and some comments to help. If you have any questions I'm happy to elaborate. https://gist.github.com/MichaelShaw/ec1a071950916e8dc23336e6b73f37dc
It's a crash in the thunking layer (the layer between the Objective-C call and your Swift code which usually gets optimized away in Release build). Your *executable* is corrupt. It has been built wrong. Clean it out. Build fresh.
Check what error Alamofire is returning: print("\(response.result.error)") I'm getting this: Alamofire.AFError.responseSerializationFailed( Alamofire.AFError.ResponseSerializationFailureReason .jsonSerializationFailed( Error Domain=NSCocoaErrorDomain Code=3840 "Invalid value around character 1." UserInfo={NSDebugDescription=Invalid value around character 1.} ) ) Which says that there was an issue with serializing the JSON around character 1. So yes, those leading characters are your problem. Aside: let result = response.result.value as! JSONEncoding You don't want to use `JSONEncoding` there. That's for encoding parameters when you send them in a request. Also, don't use `as!` or your app will crash if you don't get the type you expect. JSON will either be a dictionary or an array at the top level, so you'll either want this: let json = response.result.value as? [String: Any] // dictionary Or this: let json = response.result.value as? [Any] // array If you know it's an array of dictionaries (which is pretty common), you can make that explicit. That's what you have, even though there's only 1 element in the array: let json = response.result.value as? [[String: Any]] // array of dictionaries So, how can you handle your problem? You won't be able to use `.responseJSON` since your response isn't valid JSON. You can use `.responseString`, remove those leading characters (I'm getting a linebreak then the "//" so I'm trimming off both plus any leading spaces), then turn the string into JSON: Alamofire.request("https://www.google.com/finance/info?q=NSE:RELIANCE") .responseString { response in guard let responseString = response.result.value else { print("ERROR: didn't get a string in the response") return } // get rid of leading characters "\n// " let leadingCharactersToTrim = CharacterSet(charactersIn: "/").union(.whitespacesAndNewlines) let trimmedString = responseString.trimmingCharacters(in: leadingCharactersToTrim) // turn the string into a JSON dictionary var json: [[String: Any]]? if let data = trimmedString.data(using: .utf8) { do { json = try JSONSerialization.jsonObject(with: data, options: []) as? [[String: Any]] } catch { print(error.localizedDescription) return } } // do whatever with your json now print("\(json)") if let stockInfo = json?[0] { if let name = stockInfo["t"] as? String { print(name) } } }
Finally updating a [bunch of tutorials to Swift 3](https://grokswift.com/tag/swift-3-dot-0/). I still have a [few](https://grokswift.com/tag/swift-2-dot-2/) [to go](https://grokswift.com/tag/swift-2-dot-0/) but it feels good to be over the hump.
Great. I am liking your short and sweet tips for the most part. Thanks for the work. 
I am confused. With a quick read through the swift book, it should obviously not because both structs and strings are value types. There's no sense in marking them as weak or unowned, unless I've missed something. 
A great introduction to protocol oriented programming in Swift. The interesting thing about protocols is how they let you take desparate entities (unrelated structs, enums, and class) and build a common point that you can access. This tutorial walks through an example of how it's done.
Okay, The first video I watched was by teamtreehouse, he used it in a struct. I know that stricter automatically initialize and classes doesn't so you have to create an init statement in a class. So onto your example where is your init statement?
Hi, thank you very much for feedback! We started with not so popular libraries but as our community expand and more beginners started to read our articles it's a good idea to include popular ones too, so we will include very popular SwiftyJSON (that we use in most projects :D) in future lists.
I have a tabbed application with two table view controllers. In the first table view controller is a segue to a view controller with a button. I want this button to enable a label located in the second table view controller.
Thanks a lot, worked perfectly. Thanks a lot again :)
Andyy Hope, who are organiser of Swift dev Conf in Australia, has a good Medium blog with practical write ups. In this post he proposed a better way to animate :)
That would be very much appreciated. Thank you. Also, what is your medium link?
Thank you so much!
I'm not sure if this is what you're asking because I'm pretty new to programming but I use Alamofire with SwiftyJSON for parsing to pull data from YQL (Yahoo!'s finance API).
It looks like your width and height are swapped. UIScreen bounds used to be fixed to portrait orientation in iOS 7, then changed to current-orientation-dependent in iOS 8. Based on just the snippets you're showing, things should probably be working if you're targeting and deploying on a recent version of iOS, but maybe you've got a rotation transform somewhere in your other code that's causing problems. https://developer.apple.com/reference/uikit/uiscreen
For personal use, I've used Yahoo and CNBC. But for commercial use, you'll have to pay up, something like $2k/mo for a legitimate provider.
Thanks for this.
Thousands of developers would beg to differ with you... Have you tried just for giggles to run xcode under a different user or your project on a different Mac?
As a relatively new swifter and programmer in general, I was really happy to read through your tutorial. Even though I struggled with some of the concepts, I learned a lot, and now feel like I have another tool set to explore to improve my coding. 
I'm still a beginner but try changing let gameOver to GameOverScene(size: self.size) so your code should look like this... let transition = SKTransition.flipHorizontal(withDuration: 0.5) let gameOver = GameOverScene(size: self.size) self.view?.presentScene(gameOver, transition: transition) 
I forgot to put it in the description, but I would only assume it was on the same network. Vapor doesn't seem to support iOS. How would I go about making it work on iOS?
I get errors when compiling it with Swift 3...
What do you consider a large project?
/u/twostraws This guy just sold your book to me. Thanks /u/AlgorithmicAmnesia!
That's my problem, I don't think there is anything special about the code compared to the average app. It's standard Swift following the raywenderlich style guide. I do have a bunch of carthage libraries, notably RxSwift, that are probably not helping things, but even before using the libraries I was having the same issues. 
It's absolutely ready. I'm tech lead of a mobile team that just shipped its second app in swift. They are fairly large projects and are under constant maintenance and feature work. Swift has been a breeze to work with especially after transitioning over to Swift 3. Having said that, Xcode absolutely sucks and that is where your problem is. I get the same error message you see on a daily basis. I've narrowed it down to something to do with how XCode interprets Generics especially when dealing with Generics that maintain/call closures.
I work on one of the largest Swift code bases I'm aware of, and I see this once every couple of days at most. Usually after switching to a branch that has quite a few changes. Am I just lucky? ü§î
Just another 2c, we just shipped our fourth app in Swift. The first one was started 2 years ago and is now converted to Swift 3, and still being worked on. I agree with you that Source Kit issues are pretty common, and our build times are a bit longer, but I'd still take Swift over any programming language.
Largest Swift code base? How large are we talking?
He balances being instructive and allowing for exploration quite well. The decisions he makes in structuring his content aren't hasty despite the speed at which he releases these.
https://medium.cobeisfresh.com/. We write a lot's of stuffs and we are trying each month to make a list of top5 libs that we find :)
I am working fifteen hours a day on three different apps in Swift and have never seen that error. My pain point is the measly 2GB ram that I have in my old mac mini that doesn't even let me open a browser on the side to lookup for help. When the indexer starts doing its stuff the whole interface freezes for a while. XCode has never crashed on me, and I am beating the shit out of it.
What I mean by that sentence is: For particular cell type there must be one reuse identifier so all cells fall on that category can be reused, of course it will going to have multiple copy of that instances depending on height of tableview but to optimise performance we have to make sure that we don't make unnecessary new cells where it can be reused. If tableview has multiple type cell with respective reuse identifier, we can condition it likewise but making sure that we reuse every instance where it is applicable. Thanks for your comment, Please let me know if you have other doubt.
Cannot confirm here, I'm working only a few hours a day with Swift recently. I see this error a few times an hour and Xcode crashes probably once every week.
Xcode went down in quality in my opinion with 8.0. Everything just seems clunkier, slower, or just plain broken half the time.... Especially with larger projects that we have at work. It can be a real pain sometimes, but after working with Titanium for a few months everything else seems amazing.
So Apple has the Swift Programming Language book, it's 500 pages and free *gasp*. Everything you need to know about the language to get started is there and from what I've seen seems to be up-to-date with every change. https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11 /u/swissrandy I also agree with doing the Stanford iTunes swift course as it teaches you how to apply the concepts from the Swift Programming Language book, but I suggest Hacking With Swift over it as Hacking With Swift is done with Swift 3. Again, I also agree with raywenderlich tutorials as they go into amazing detail and depth about a subject, you may have to update the code he provides as you're following/coding a long, but the thought process and execution of the code style is amazing.
I'd start with Apple's Swift Programming Language book. It has everything you need to get started with Swift 3 and more. https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11
Even JTCalendar( https://github.com/jonathantribouharet/JTCalendar ) is amazing, the difference between the two is that JTCalendar is Obj-c based, but if you had it via CocoaPods you will be fine. They both allow customizable calendars, but in my opinion JTCalendar is less customizable causing it to be a bit more simple to use and implement. I think using either one is a good start and challenge! If you have any questions when using JTCalendar please let me know, I've used it quite a bit. Edit: I'm not sure how connected the two libraries are, if they are connected at all, sorry.
Please file a bug report with all the info you've gathered, if you haven't yet. I'd love this to be fixed in a future release.
I am working on rewriting an app I made for a class, but this time I'm going write the backend system myself using node,js, express.js, and socket.io. Yes, it's a game and no, I have no clue what i'm doing, haha. 
It just so happens I was looking for a Swift-specific illustration of design patterns, just so I could see them in practical situations. 
Size doesn't automatically make things crash. You're probably not stressing the language as much.
I mention size only because OP did. I doubt it matters much. 
Different people have different standards for "ready", and different requirements from a language. The original Mac software was written in 68k assembly on a Lisa. Just because it's possible doesn't mean it's ideal. This isn't (just) about Xcode. I've run into cases in Swift 3 where code compiles successfully but I get *over-release* crashes from ARC at runtime. That shouldn't be possible, and the Swift folks confirmed it's a compiler bug. Their solution: don't do that. Apple is presenting Swift as the answer for everything, from wristwatches to workstations, from kernels to GUIs. That means there's a huge target, and there's going to be lots of people who say "it's perfectly fine" while there's lots of others who say "it doesn't work at all". They're both right. They're writing completely different kinds of programs. I bet there's huge areas of the language that you're not using, and there's huge areas of the language that I'm not using. I just happen to be using buggier areas than you. I wish I could say Swift worked perfectly for me, and I never saw this SourceKit error, or ran into compiler crashes, or runtime crashes created by compiler bugs. Someday that might be true.
I wonder if we could enumerate all features of Swift, and then write a static analyzer to determine which features a particular program uses.
It's generics. Use them less until the compiler is ready. They are nice, but they aren't necessary. 
&gt; Why not start with a nice simple base class (easier to understand), and then extract the relevant parts into a protocol if and when that becomes beneficial? That's like asking, "Why not just program everything in the ViewController class? Then later move all that into it's own class?" It's the wrong approach and habit to get into... it works for small projects, but not so well with larger projects. Something like a simple calculator or a tipping calculator is fine.
Thanks, i will try this out.
Also thanks for your answers. 1. As told in my other reply above, i use xib's. Is there any way to drag delegates in xib's? Don't see any... 2. I have created an extra function for that now, as the other guy proposed. I will need that code anyway in other places as well. 3. Yeah, but that always leaves the stupid default, which doesn't make sense to me. I KNOW there are only those 3 pickers, so i only need to distinguish between those 3, not care for some extra case which will never happen. To me my return nil or your default is some syntactic thing needed because the compiler can't figure it out on itself. Which is really a shame.
1. Would only work in a storyboard. Not in a xib. 
Well if you don't want to deal with the default case in a switch, then just create an enum assigned to each value of 0, 1, or 2. That way, when you have made all cases for each enum case, you don't need a default, and it won't even ask you to put it.
Just started messing around with Vapor today! Your site looks great!
Excited to see the next one in the series! Thanks again!
I'm amazed by such reports. On bugs.swift.org right now, there's 205 open issues tagged "CompilerCrash", plus 153 resolved CompilerCrashes that existed in previous versions of Swift. Have you simply never tried to do *any* of these things? What do your apps do? Do you avoid parts of the language?
Vapor's validation, while useful, was a little too simplistic for my purposes so I made a web-forms validation framework that plugs in to Vapor. https://github.com/bygri/vapor-forms
Wow I think I have been using extensions wrong....I use them when I have say like 10 UITextFields and I want them to have identical look...so I do extension UITextField{ func nameHere{ ......} } anywho...you say, "I usually use Swift extensions to adopt protocols in my classes, since this makes them more well organized and readable" does doing this make the app run smoother in any way? or is it just for organization sake? THX!
Random question, are you the same `Catfish_Man` as on Twitter?
awesome. yes, i checked it out. Looks really cool. I looked you up yesterday. :] good job guys.
Try using an else statement.
How about If ! isBlocked { switch gemCounter { case 1: turnLeft() case 3: turnRight() .... default: } }
If I resize Xcode 8 2 times in a session it does crash. Luckily nothing is lost but this just sucks. 
RealmSwift is pretty great
it i'm running the fetch on a background thread, how do i update my view controllers and views with the new data that i just received? 
You can use this keychain library which makes it all a breeze https://github.com/jrendel/SwiftKeychainWrapper
Keychain is the right place for passwords and sensitive data. Nothing wrong with NSUserDefaults for non-sensitive uses. edited: clarity
the "while switchCounter != 6" block doesn't sit well with me. Since if you're incrementing the counter, if somehow it went over 6 that while block would still run. Not saying it could happen, but you should probably make it "while switchCounter &lt; 6"
Sorry. I misread your question. The answer is yes! :] video link: https://developer.apple.com/videos/play/wwdc2016/419/ 
I not a big fan of the dismiss keyboard when user taps outside of the first responder for this reason. It causes weird interactions. Better solutions in my opinion: * Use return button on keyboard to dismiss keyboard * build a dedicated "done" button into your control. This is sometimes implemented as a input accessory toolbar above the keyboard. You could also put it locally. I don't know your exact use case. Images would help, but detecting taps outside of text fields is a bit hairy.
Realm Swift itself is not the answer to this question. Asynchronous programming is. If you want to avoid the main thread being blocked by your fetching, you would have to put that work in the background like others said, and callback the UI on the main thread with the data when it is ready. Any ways that would run your work in background would work. For example, you may run the fetching in a block submitted to a global DispatchQueue. Then the block would post a `UserDataFetched` notification back on the UI thread using `NotificationCenter`. But you should be aware that the fetching would race with the readiness of the UI. That means you should store the data in a place that the UI has access to, so that if the notification is delivered before the UI is ready, it can still see the fetched results. (Also note that there are for sure many of async primitives that are designed exactly for these kinds of scenarios... promise and future is the simplest one that suits this scenario)
The use case you're describing is one that I come up on often in apps. Is the user logged in? Great. If they are, show this. If not, show that. What I do now is simply save the user ID in user defaults. In the app delegate, I check for the user ID. If there is one, great! If not, not logged in yet. Reading a single string/Int from user defaults is a synchronous operation and takes no time at all when it comes down to it, so if the rest of your code is fine and fast it's totally good. You don't need to worry about that one defaults check slowing down your launch. 
Also, the fact that it's synchronous is important because you want to get up and moving and displaying the right page for the user ASAP. If the app is waiting for an async call to come back and you're waiting for that, it will likely be more working doing something in UIKit with views to manage that in between still waiting/loading state than to just do one sync check right away and then go!
This is really high quality content. I am sort of sitting back and waiting for server side swift and RxSwift to really mature into great parts of the language. I am also waiting for someone to develop the OCR libraries for Swift. 
You have to create a X-Bridging-Header.h file. More under https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html
Why does it look like Ray has teeth made of marble?
I've not looked into sticker yet, but do they require any actual swift code? I was under the impression they were just images. 
I needed to make a TableView with expanding cells for a project and I liked this solution so I decided to make a tutorial for it. The title is a bit misleading as you're really adding/deleting cells to make it look like the cells are expanding. I tried that method previously but it got a bit messy trying to design the cell and make sure it expanded right. This is the first tutorial i've made so any feedback would be appreciated :)
What were the constraints? We can't debug it without knowing what you're doing.
Yeah I should probably sort the semicolons for the videos (Java dev as well so its a tough habit to break). And is there something else for M_PI in Swift? As for the images: "Here is one I made earlier!" EDIT: For anyone else curious, Swift 3 now allows you to use: CGFloat.pi Nice!
It's the same compiler, unless you specify otherwise, but you're right objc compiles faster.
You can just do `.pi` there, since the `CGFloat` part can be inferred from the context.
Nice, but in the future can you use YouTube's captions feature for the captions, so those of us who don't want them don't see them?
I also post on Twitter, where the captions perhaps make more sense. Ill export two versions in the future. Thanks for the feedback :) 
Even better!
I'm working on a Fishing app. Started learning Swift last March and loving it so far!
Yeah, but I'm asking how to set that up. The bridging header section is very vague, just an empty space for debug and release. 
To learn the language, use Ô£ø's free iBook, also available [online](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309). Then from there you have a lot of sources to go with. Devslopes, Ray Wenderlich Books (they go in order from Easy to difficult), Udemy, Hacking with Swift (as a reference guide), YouTube, etc. I'm going through the Devslopes Udemy course for iOS 10 right now. Shows how to access APIs, connect apps with Firebase, and a lot more. 
The less inferring the compiler has to do the better, no?
By that logic, we shouldn't be using type inference at all. It can be helpful to help the type checker in some specific cases, but generally type inference is fine.
It can slow down the compiler, but in simple cases like this I don't think it really matters
They can if you want more control over it such as the one he built which has an option for different colors.
Added email and website censorship to a github project called goshdarnit. I had created this earlier but it wan't compatible with objective c. Now I have made it so it's compatible with objective c as well. 
give you a bit more detail: https://github.com/apple/swift-evolution/blob/master/proposals/0043-declare-variables-in-case-labels-with-multiple-patterns.md
This is neat, but constraining your models to classes is not very idiomatic. Have you seen [Zewo/Reflection](https://github.com/zewo/reflection)? Maybe you could use it to make the models more "swifty".
Wow, I‚Ä¶ didn't even know that was possible üôÉ I have no idea how they're getting struct property offsets. I'll have to look into that over winter break. Thanks!
I spoke to the author about it a while back... he figured out how to get the memory layout by reverse-engineering the ABI. It's basically black magic following the (incomplete) abi documentation in the Swift source repository. Really cool stuff if you ask me! If you wanted to talk to him yourself, he's @bradhilton on the [Zewo slack](slack.zewo.io).
Don't use playgrounds. Apple stopped caring about testing and only cares about releasing new features. Bugs are a feature nowadays. 
login page should be the initial view and then the stuff you access after logging in should be organized in a tab bar
I just started to learn Swift in July so I am still learning a lot about it. At the moment though I am making a simple game where objects will spawn in no the right side of the screen, and move towards the left. Your character is on the left side and has to shoot it before it gets there. I plan to add a score system, a money type thing, and different stages where things will spawn more frequently and move faster and more dynamic. 
Not if the app just goes to the background.. as in they just press the home button. If you want to swap the root view controller prior to instantiating any view controller, it has to be done in the app delegate. 
LLVM isn't a compiler. It's mostly a code generator, but the code generator isn't the bottleneck in any compiler I've ever seen. Apple's two compilers are both use it, but so does their Javascript engine, and their OpenGL implementation. Nobody would claim that this means that C, Swift, Javascript, and OpenGL have the same performance characteristics.
Working on a new app in Swift 3 to aid gardeners. Hoping to have it out in time for spring. 
Don't put it in a viewcontroller extension. You'd be bloating the class out of pure laziness. It'd be cleaner to create a custom view for it
There's no simple way to do this as it's not a typical interaction pattern for phones. You will likely need to use a scroll view and adjust the scroll position based on the number of lines of text in the textview and the metrics of a line height dependent on the current font.
Total agreement, put it in a proper View subclass and have fun forever instead of misery with bloated VCs. If possible, always separate the view from the controller, imagine you need the view in a different project, do you think you will need the VC code there too? Own class and file it should be.
What about if it's a game, and it should have a creative animation for the start up?
What's not working? Or, what do you expect to happen? And what's actually happening?
Just as an FYI, it would be best to post just the lines of code that are broken, and an explanation of what's actually broken (the IDE error message), rather than the entire functions and no real explanation. I ran through that same tutorial recently to get up to speed on Swift, so I have the project handy. The two changes are: presentViewController(......) is now present(....) and dismissViewControllerAnimated(......) is now dismiss(....) You should be able to rework them by looking at the required values, and the values provided in the tutorial. I also personally find that copying and pasting the code doesn't help nearly as much as actually typing along with tutorials like this. What you'll find is that the suggested code will either line up with the tutorial, or it won't and you'll find the subtle changes that have been introduced between Swift versions. 
Just gonna throw out some random things: Did you make sure your outlets are actually hooked up in IB? If not then you're gonna run into problems. Did you import the right frameworks to use the UIImagePickerController? If not, you're gonna run into problems Did you add the protocol to your UIViewController so that you can assign the delegate to your current controller? 
I was researching fire base for the back end and it looked like a good fit. I also forget to mention that I'm doing the deliveries, so I don't need to make user profiles or worry about compensating drivers. I was wondering what would be a good resource to learn how to set variables to all the menu items and save them to firebase.
What is your question?
Changing the value of filename does not change the file that the AVAudioPlayer is playing. You would need to create a new AVAudioPlayer with the correct filename to play the sound.
That seems like extremely redundant code. This means that I will need 86 audio players, one for each sound. Is there no way to code this dynamically? EDIT: More clarification: the code I have above is intended to dynamically update the sound file to be played, depending on the button press. E.g., when the button ''p'' is pressed, the audio player will try to play the sound file called "p", when "b" is pressed, "b" plays, and so on. 
It may be helpful to post more information here because I doubt many of us have purchased Hacking with MacOS (I assume you're talking about[ this course](https://www.hackingwithswift.com/store/hacking-with-macos), right)? The most beneficial thing you can do is post the relevant section of your code and what, specifically, you are trying to accomplish with it. Otherwise we would probably just be taking shots in the dark on what could be wrong.
**Edit:** [Link to the book for the curious.](https://www.hackingwithswift.com/store/hacking-with-macos) Hello! Thanks for reading my book; sorry to hear you're having trouble! Without more information it's difficult for us to help you diagnose and fix the issue. The chapter outlines two common issues and their fixes. If you got to this part it means you're on the first issue: &gt; However, things aren‚Äôt quite right. In fact, arguably these two small changes have made things worse! Try pressing Cmd+R and you‚Äôll see what I mean ‚Äì the split view divider has disappeared! &gt;What‚Äôs happening is that Auto Layout is now in control of our layout. It looks at the image view we placed in the right-hand pane, sees that it contains nothing, and so figures it doesn‚Äôt need any space. The rest of the space ‚Äì i.e. the whole rest of the window ‚Äì is therefore given up to the table view. The split view‚Äôs divider is still there, but it‚Äôs right up against the right edge of the window; you‚Äôll need to click carefully if you want to grab it. That's manifests itself as the table view taking up all the space in the view controller and the image view getting none. If you're up to this part it means you're on the second issue: &gt; What you‚Äôll see is that clicking a row in the table does indeed show an image in the image view, but it also causes the image view to jump up in size ‚Äì probably even shrinking the left-hand pane down to nothing. That manifests itself as the image view taking up far too much space when an image is selected. Anyway, if you can provide a little detail as to what "not formatting as expected means", we can try to help.
how do I remove this code and put it into a separate file and still be able to use that code in the VC(s) I want
I understand your reasoning, but why not mention Perfect in that context? It has a larger following on GitHub and seems to outperform Kitura at the moment based on benchmarks ran in Linux.
I'm not trying to write a review of various Swift frameworks for the server; if you want to try using Perfect that's awesome ‚Äì go for it!
Break it down: the `sorted` function takes one parameter, which is a closure or function; that closure or function must take two parameters, each a tuple consisting of a `String` and an `Int16`, and returns a `Bool` value. This seems to me to be the signature of a sort function for a dictionary which I'm guessing in your case is of type `[String:Int16]`.
I'm confused as to what your question is? do you want to know if Apple did change their policy? Do you want to know how to get the phone number of a call? Do you want to know how to query a private db? Do you want to know how to display info on the screen? Or do you just want to let us know what you are working on? Maybe no answer is required. If that is the case, then, good on you! Let us know how it turns out.
Please give the exact and full error message, tell us if it is at compile or run time, and the line that is causing the error. Also, it is best if you try to distil your problem to the fewest possible lines to demonstrate it. There are two reasons for this: 1. frequently when trying to create the smallest possible example, you discover what the problem is 2. a random person on the internet (such as myself or other readers of this post) may not have the time or desire to read and understand a vast amount of code well enough to be able to figure out something which is clearly difficult to figure out because the author of the code is requesting help in figuring it out. 
How dare you not add filler!!!!
I suspect the dialog is owned by the app and offers a UI to edit the event fields from EventKit's API. It makes sense that some apps know these values ahead of time (like dates or location) and might only offer a partial UI or not need one. My advice is to clone the calendar app's controller the best you can... then make the addEvent call.
Are you using modal present or navigation controller push ?
Yes, that's correct. I dabbled with Amazon in the early days of Hacking with Swift, but their policy on book updates is useless. So, all my books are sold through Gumroad, but if you really want you can also get them from iBooks. 
Can I join?
&gt; do you want to know if Apple did change their policy? Do you want to know how to get the phone number of a call? Do you want to know how to query a private db? Do you want to know how to display info on the screen? You got it! It's a yes to all these things. But mostly the getting the phone number of an incomimg call. I want to make an app which serves as a Michael Scott rolodex. So when a client calls I get a popup on the screen that says: "Nick: Big Bobby. Bought: Fax machine. Likes: fishing. Important: Wife died last year" And then I can pick up and go like: "Hey, Big Bobby! Cathing any fish with that fax machine I sold you?" And not: "Hello mr Robert. How is the wife?" The app would havd to be able to fetch this data in real time if possible or update the locally stored information. The app would be used by a handful of simularly socially clumsy people that talk to the same clients.
Holy Jesus. There has never been a less useful library. 
And there has never been a less useful comment. This library was obviously just written for fun, not to change the world or anything.
Literally lol'd
Thanks for the comments! And glad you understand that this library was made just for fun üôÇ Yeah `rawValue` may be more appropriate. I just conveniently use `hashValue` since that seems to consistently be in increasing sequential order from 0. I didn't realize that `IntegerArithmetic` enforces `Comparable`. I'll remove the `Comparable` part because of redundancy. I didn't want to use `Integer` because it has more restrictions than what I need. For example, with this you can use the method on a [`BigInt`](https://github.com/lorentey/BigInt) which doesn't conform to `Integer` but does conform to the other protocols. I'll probably just make it a computed property instead of a method. I forgot about this feature in `for` loops. I'll check the performance of both and go with whichever is faster under optimizations. With regard to the last part, it used to be a `reduce` until [this commit](https://github.com/nvzqz/XO/commit/1bad8a45c9ce0701288d8db86c04e525630c9137).
You don't use these "Make" initializers in swift, we have real initializers for this. Your sample code would be: background.position = CGPoint(x: CGFloat(i) * frame.width, y: 0) edit: I don't know how to words.
I read the paragraphs but some of the things you have to do are in the middle and when I go to the project to add the changes and then back to the book, many times many readers like me do not remember where we left off, especially when it's big long paragraphs. They either start a few sentences later or think we left off at another spot. And sometimes it's harder to do a lot of the things being told when there is nothing that make the steps stand out; they are not bolded or underlined, so going back and forth switching between a pdf book and Xcode can sometimes make it easy to miss information, especially if you don't have 2 screens.
Yes, although the error message is a little confusing. Constraints are judged relative to one another and there are a minimum set required to give autolayout enough information to display a given view. Usually the minimum required number is four - two to imply position (x, y) and two to imply size (w, h).
It doesn't conform to `BitwiseOperations` and then `BigUInt` doesn't conform to `_ExpressibleByBuiltinIntegerLiteral`. For the benchmark, you can compile [this](https://gist.github.com/nvzqz/1e34eb3c8b644de13bdc68ae422323fb) by itself with optimizations. Edit: This is what I get when I run the benchmark: Results of 100000000 times each: Iterative: 0.72596001625061 Reduce: 0.881842017173767 
I'm trying to get [this](https://drive.google.com/file/d/0B1W1HDXz5bIrd3hEWUgySHBLWnc/view?usp=sharing) behavior, which actually works. I set in the video the background color of Checkbox to yellow. I constrain the width of Checkbox to 0 at init and then change the constant of it when dragging the text bubble. each text bubble is a UITableViewCell and this error actually happen only some of the times, which i can't tell when and i do not use custom compression resistance, actually i don't know what it is
 It depends a lot on your game, but many mobile games are launched dozen of times a day, and the play time per session is measured in minutes. Showing videos that the user has seen a dozen times already gets annoying pretty fast. Does the animation provide something useful for the user? Will it make their experience better? Or will you include it for your marketing department which wants to show off your fancy logo? 
I just published a new open source library for Animations in Swift https://github.com/rchatham/SwiftyAnimate and started a blog which I have mostly talked about tech and Swift https://medium.com/reid-chatham/animation-and-data-structures-in-ios-49cc69b8020c#.wu3o0kst1 Any feedback would be hugely appreciated!!!!!!!!
(An image of a laptop, displaying an image of a webpage? Is this content?) If you google the name in the picture, it's a system that claims to convert ObjC source code to Swift. It looks like a simple textual find-replace, though, that has no knowledge of these languages. I tried the simplest thing I could think of: if (1) { } and it gave me if 1 { } which isn't even valid Swift. Save your money.
I want it! 
&gt; "Just run this curl command..." [No. Don't.](https://www.seancassidy.me/dont-pipe-to-your-shell.html) &gt; "Once you have Swift 3, go to the Install Toolbox, and run this curl command in your terminal..." This is really not inspiring confidence in a web framework. You can't even download the shell script and run it yourself, because the [toolbox install script](http://toolbox.vapor.sh) does `curl|sh` itself! It also runs without error checking enabled, and sends all errors to /dev/null. This is about 5 kinds of sketchy. It's probably not malicious, but did they audit all the possible failure modes? This could run git or Swift or Vapor with truncated arguments, or create files in unexpected places, or build an incomplete working copy. If an intermediate step failed, you would have no way of knowing. I would urge people to use Vapor's "Manual" (SPM) install method, or if they must use this "super simple" way, make a VM for playing around with Vapor, and don't use it for anything else.
Looking for someone interested in an internship 
Looks pretty good. One nit: the blog post says: &gt; Writing a non-mutating method? It should end with -ed or -ing. which sounds crazy (`myList.firsted()`? `myList.firsting()`?), but if you read the actual guide it says non-mutating version *of a mutating verb method*, which is entirely reasonable. It's only referring to *pairs* of methods, like `sort()` / `sorted()`.
Clearly you have not had to spend much time working with [Javascript](https://github.com/mde/false).
I am Ray Fix, the Swift team lead at Ray Wenderlich. :] So yes I am `Ray` but in backticks.
Hah, nice catch. I think you don't necessarily need a pair. Any method that is going to return a mutated version of the current model should probably use the -ed -ing rule. BTW, `first` is usually a property not a method. 
Hah. Yes. I am Ray Fix, author of the post, and maintainer of the style guide. Although Ray did a final pass edit of the post. :] This guy: https://www.raywenderlich.com/u/rayfix
Sorry, a test case? How does one come up with a test case? I'm thinking right now I should of added more comments to my code. I didn't know the best way to address the issues in the project. Edit: I just realised, I meant line 142 rather than line 143.
I see. Gotcha. there is a first(where:). I was thinking of the property. https://developer.apple.com/reference/swift/array/1689165-first 
[Welcome aboard!](https://www.youtube.com/watch?v=6GMkuPiIZ2k)
Strings are value types, which means that their value is copied when you assign a variable/constant to them. At the time that you create the companies in companyList, the value of applePrice, etc, is nil, so the stockPrice value in the Company objects is getting set to nil. You seem to be wanting the strings to be reference types, such that if you assign the stockPrice in a Company object to applePrice (for example), then whoever applePrice gets assigned a new value, then stockPrice will also reflect the change in that value. If you must have this arrangement, then you need to create an object (say, StockPrice) that contains a string, and have stockPrice be a StockPrice object. Objects are reference types. I would suggest that you do away with the globals applePrice, etc., and in stockFetcher, use companies[0].stockPrice = appleStockPrice as a first step. Your code is not very maintainable because you have a lot of explicit assumptions about which company is companies[0], for example, and if you change the list of stocks you want to look up you have to edit a lot of code to change everything.
And I'm the other Ray. Yes we know it's confusing! :]
Haven't looked Ike's at the project but note that when using autolayout within a UIScrollView, you need to constrain the views such that the scroll view can determine the contentSize. Usually this means giving your views an explicit width and height (or relying on intrinsicContentSize), and constraining a view to the bottom and sides. Or at least some views.
func application(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject) -&gt; Bool { let fb = FBSDKApplicationDelegate.sharedInstance().application(application, openURL: url, sourceApplication: sourceApplication, annotation: annotation) let aws = AmazonClientManager.sharedInstance.application(application, openURL: url, sourceApplication: sourceApplication, annotation: annotation) return fb || aws }
Look up websockets. With websockets you can stream data between client and server. Instead of sending only one http request. In your server and client you will have an event that gets triggered every time it receives a message or data. So when the backend receives a message with coordinates from client X it can then broadcast it to client Y and Z In your case you want to send the lat and long to the backend and let the backend broadcast those lat and long to the other clients. When the client receives this message you can use those coordinates in the client. I currently dont have time to give you some code. But I can give you some frameworks to look into. Backend with websockets: Node.js with socket.io library (javascript), Tornado (python) which has built in socket support. Swift websocket libraries: Starscream, socket.io swift library.
Step 1: format the data into exactly how you need it. Likely an array of CGPoints. Step 2: subclass uiview Step 3 give your chart view a variable, chart transform: CGAffineTramsform and a method like set transform. That takes the max and min y and x you want in your chart. Set transform determines the affine transform you'll use. It can also draw the axes properly. Make sure you views are laid out before calling it. Theres a good blog about 'demystifying' affine transforms but this is the gist. It takes six values. You need the four of em, set the other two to zero. First: this scales x so it would be chart.width/(Xmax - xmin) Fourth scales y. Set it to chart.height / (ymin - YMax). You have to invert the scale so min and max are reversed Five and six translate the chart, so if you want room for axis labels, translate it slightly right + and slightly up - But also you have to translate down the entire height of the chart because of the y scale inversion. So that sixth argument should be + chart.height Now you add two shape layers to your Lin chart. One for line and one for circles. Instantiate two mutable cg paths, iterate over points drawing a circle at each and connecting the line path. Whenever you add a point, make sure to use the cg path method that lets you apply your transform first. Set colors, fills, etc. You can draw the axes in draw rect and set the values for the axis ticks afterward. Overall it's probably 100 lines of code. 
I simply searched for [charts](https://cocoapods.org/?q=on%3Aosx%20charts) on [CocoaPods](https://cocoapods.org/). The [Charts](https://github.com/danielgindi/Charts) framework by Daniel Cohen Gindi seems to be very popular (stars, issues, pull request, forks). You could take a look at it and see if it fills your needs. In the [README](https://github.com/danielgindi/Charts/blob/master/README.md) they state that they support iOS, tvOS and macOS.
Usually a code signing issue these days. Change the bundleID. 
Where and how can I do it?
That's the case by default, but the [Opting in to type argument discovery](https://github.com/apple/swift-evolution/blob/master/proposals/0057-importing-objc-generics.md#opting-in-to-type-argument-discovery) section literally states &gt; Some Objective-C parameterized classes do carry information about their type arguments. When this is the case, it is possible to lift some of the restrictions described in the above section. There are two distinct cases with an example code very much like mine. Then later it states &gt;If the parameterized class provides an instance method classForGenericArgumentAtIndex:, the extension can use the type arguments in its instance methods, including accessors for instance properties and subscripts. and again, a very similar example. So according to that document, this should work (as long as you have that method).
Nothing in tree references `classForGenericArgumentAtIndex` so it looks like it was left out. The CHANGELOG mentions the same restriction I referenced above.
Do you mean hybrid apps that leverage WKWebView? I am working on one at the moment (using XWebView.org) but I would love to see examples of good hybrid apps myself. Personally I do not believe in quality hybrid apps and that it speeds up development.
I highly recommend watching [Practical Drawing for iOS Developers](https://developer.apple.com/videos/play/wwdc2011/129/). They go through the process of building a line chart with Core Graphics. It is in Obj-C, but very easy to port.
Yes, I did according the instruction, no errors. Just message Build Succeeded. Stop Button still inactive. 
This is exactly how I started with swift :). I wanted to use this same library for a chart, but I couldn't figure out how to make the line three different colors. So I went and read his source code, found where the lines were drawn and changed it a bit. Eventually, the chart I wanted was so unique, I gave up on the library and wrote my own charting classes. I've since figured out a way easier way to draw these things quite a bit easier than I remember, making use of things like CAShapelayers Ya I can maybe share my line chart code. I would need to clean it up a bit, so might be a few days. It's a bit messy and since learning even more Swift I always think back to how I could have done something way better/more extensible. Spikey line or curvey? Animated drawing? Have an image of the chart you want? Also, is it static( ie drawn only when the view controller loads) or will it change dynamically while the person is looking at it
Also, I have noticed in menu -&gt; Product -&gt;Run isn't active! Only Build. In my app, which works normally, Run Button is active.
I'm sorry I'm not going to be able to help any further, this seems like being one of those kinds of problems which has to be experienced first-hand in order to understand it. I believe trading symptoms and diagnoses in a reddit thread will not be a productive way to solve the problem. If there is anyone at your work/school/pub (but no drunks!)/whatever who knows Xcode and can give you a hand, this is the point I would recommend you ask for their help.
Look for stuff with Swift and Vapor. I just saw a Udemy course launch on this very topic and framework for server side Swift. 
I just realized you need this for OSX, I've only coded for iOS, and so am unfamiliar with AppKit. I honestly don't know what would change between the two. I see NSView doesn't by default come with a backing layer by default. That actually complicates matters. The steps I layout there will still work. If I have some time in the next few days I'll give it a shot. I've been meaning to turn all this charting code into something more extensible and generalizable. I'll start with a line chart. Given that I can finish this fucking paper in the next five hours. Maybe I'll write a blog about how I would do this up. You could then go and imitate it using the same classes in Cocoa.
Click on the project on the left. Then the target to its right. Then the Summary tab. Change the bundleID. See https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/ConfiguringYourApp/ConfiguringYourApp.html
I am interested in an internship. What are the details?
 class DataModel { private var numberDict = [Int:[Int]]() You might want to work on your naming skills. questionIndex.stringValue = String(Int(String(s.characters.dropLast()))! + 1) + ":" Ouch.
I understand you want `numberDictionary`, fair enough. What's your suggestion for the second point then?
You can make web apps with Swift?
&gt; I understand you want `numberDictionary` Huh?
Did you Google the problem. There are hundreds and hundreds of tutorials for this exact thing. 
Where is the segue called? What's in the `prepareForSegue()` method? Could you post the code for these?
Yes, swift was ported to Linux and someone made a library, I think called vapor 
While personally I prefer vapor over the rest, I believe others are worth mentioning at the least! I listed the ones I am aware of: - [Vapor](http://vapor.codes) - [Perfect](http://perfect.org) - [Kitura](http://www.kitura.io) - [Zewo](http://www.zewo.io) - If I remember correctly I believe Zewo isn't strictly a web framework but more of a set of libraries which help you build all kinds of server side apps. 
It makes me so happy that Swift is being ported to other platforms :)
You should sack storyboards because they suck. Go with manual pop and push of VCs. 
Thank you everyone for help! I have done it with https://github.com/danielgindi/Charts
Yeah, it would be nice if there was at least a warning about this, because the changelog, the release announcement and a few other "official" documents link directly to the proposals.
I concur. After being an avid Parse user, then developing my own backend for my recent project, please do yourself a favor and check out CloudKit.
Is there a question here?
 var forexRate = 0.0 @IBAction func run(sender: AnyObject) { if(localCurrency != "" &amp;&amp; homeCurrency != "") { //right condition if(localCurrency != homeCurrency) { //allowed to proceed to next screen errorMsg.text = "" getRate() //finds rate and changes forexRate by self.forexRate = method performSegueWithIdentifier("self", sender: self) } else { errorMsg.text = "local and home cannot be the same" } } else if(localCurrency == "" &amp;&amp; homeCurrency != "" ) { errorMsg.text = "please select local" } else if(localCurrency != "" &amp;&amp; homeCurrency == "") { errorMsg.text = "please select home" } else { errorMsg.text = "please select local &amp; home" } } override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { if(localCurrency != "" &amp;&amp; homeCurrency != "") { if(localCurrency != homeCurrency) { let destination = segue.destinationViewController as? SecondViewController destination!.forexRate = forexRate print(self.forexRate) //to debug print(destination!.forexRate) //to debug } } } Thanks!!
And they all have me use the google maps API, which gives me hundreds of errors
from [Apple's SKPhysicsBody Documentation](https://developer.apple.com/reference/spritekit/skphysicsbody): &gt; An impulse makes an instantaneous change to the body‚Äôs velocity that is independent of the amount of simulation time that has passed. Impulses are usually used for immediate changes to a body‚Äôs velocity. An impulse is a force applied at an exact instant, so it WILL change the velocity just as a force will. To get what you want, you might be able to simply set the velocity to 0 in both directions. Otherwise, if you can't directly change velocity, you'd want to get the current velocity and mass of your object, and apply an impulse in the opposite direction of the CURRENT velocity with the correct value to make the velocity 0. Then you'd want to make sure that the magnitude of the vector you are creating for the new random direction is the same as the old velocity.
I know what an API is, dude. What you mentioned about not being able to include the results of an API is what I meant.
newStruct = oldStruct newStruct.field = oldStruct.field
Just finished a **Data Browser for SQLite**: https://github.com/kuyawa/DataBrowser [Screenshot](https://raw.githubusercontent.com/kuyawa/DataBrowser/master/Screenshots/DataBrowser.jpg) \* Version 2 will allow editing records and schema info.
And finally finished the **Invoices App**: https://github.com/kuyawa/Invoices [Screenshot1](https://raw.githubusercontent.com/kuyawa/Invoices/master/Screenshots/screenshot1.jpg) [Screenshot2](https://raw.githubusercontent.com/kuyawa/Invoices/master/Screenshots/screenshot2.jpg) With this app I learned all there was to learn in Swift, a huge monster with a thousand heads. Feel free to send all suggestions for improvement.
Did you look at the documentation for `Process`? This should not be difficult to figure out.
Thanks so much! Really glad to hear the book was helpful, and thanks for supporting our site :]
This has quite a few links: https://www.reddit.com/r/swift/wiki/index Luckily there are a lot of beginner books, I'd find one that's updated for Swift 3 and use that since you're new to programming. The Apple documentation/books are meant more as a reference. However, some of the WWDC videos on Swift would be good too. Also, a couple general tips: * Stick with Swift. As you learn about programming you're probably going to be tempted to jump into another language/specific subject (algorithms, etc). Ignore the temptation and stick with learning the basics of Swift/programming to start, you'll learn more. * Finish a book completely. You'll be tempted to stop learning and start working on whatever problem brought you to programming. It'll set you back and slow you down in the long run - finish a book completely. (Don't take this as don't practice though). * Half of the code you're going to find/read is complete shit. As you learn you'll start to pick up on it, and should avoid learning from shitty code. If they aren't doing the basics right (good variable names, enum usage in proper style `.someEnumCase`, etc) - they're probably doing a lot of the harder stuff wrong. 
If you are relatively new to programming, I recommend you to start from easy programming languages to have a taste of what programming is about. iOS development includes many aspects of programming, from Cocoa-Touch frameworks to MVC design pattern. And also Swift is a new language for iOS development, which mean it is not mature yet and there is less tutorials available for you as new programmer. You may start iOS development later after you are exposed to **basic programming**. Or if you are eager to learn about iOS development, you could start from **Swift Playground** which is accompanied by official stater's guide in both App Store and iBooks/
Thank you so much for the great advice. I appreciate the knowledge and tips you have provided me. Can you reference a great book to start off with?
Wow, did not know that
Okay Great I'll start with that ! I am downloading it as we speak. Thanks for your help and suggestions ! 
I definitely want to cast in the direction I'm going. I have a class that takes a closure that takes Any? and under certain circumstances it will be given [Any?]?, but it won't accept the closure. I thought it would since [Any?]? is convertible to Any?. üôÅ
As someone else stated, don't quit and start learning something else in the middle, because then you will be all over the place. That was one of my mistakes. When I started making 2D games using Ray Wenderlich's book, I ended up creating a game in the middle of the book (before finishing it), and before finishing the Swift 3 book (I ignored protocols, typealiases, and extensions at the time too). I wasted so much time making the game through trial and error that I finally finished the book almost a year later since I wasted time making my own game. But when I finished the book, I finally learned new ways that would've really helped me out on my game. I should've started making my game at the end of the book. And now that I'm more familiar with Swift, I ended up taking the Devslopes course on iOS 10 from Udemy (I'm about 60% complete). What I did with the Swift book, I would create a playground for each section and write out and test examples, etc. and I would have all of those playgrounds saved in a folder. Really helped me learning Swift.
I will give CloudKit another I suppose...I just remember when I first started to try it...it just seemed so overwhelmingly hard. Im still pretty new to iOS dev and firebase just seems so much easier compared. But it is good to know that the app info is auto backed up. 
For those random people who found this through a google search, here is the link to the game on the app store. The github repository has been removed. https://itunes.apple.com/us/app/id1179173523
This will help a lot I appreciate the time you took to help me!
I just started not long ago, I started by watching some tutorials... reading into Apple's documentation, using Xcode, putting piece by piece together... I don't completely understand everything, but it has helped start my learning of Swift 3. 
You do know that the Google finance API's are deprecated don't you? The JSON supplied is perfectly valid other than the // at the beginning. If this is the data that you get back, I'd just strip the // and then parse the JSON with NSJSONSerialization.
That's Devslopes for you. I'm currently learning and their style suits me so well. 
[SwiftyJSON is also a great alternative](https://github.com/SwiftyJSON/SwiftyJSON)
While Swifty JSON may be easier to use, it used a ton more resources in my experience. I was pulling new data every 5 seconds and swifty JSON killed the iPhone CPU
Hi thanks for the reply. I'm not understanding what you're suggesting. I was hoping to error check first and perform a function before segue. Essentially a run button that does an action and then proceeds to the next screen. If I were to unlink the segue from the action button (run) where would I link segue to?
I did not know this. Thanks!
Thanks I thought I was going crazy. I like swift don't get me wrong I'd just like things like this to be easier. In the much loathed perl all you have to do is: my $dict = json_decode($json_string);
Ehh, those aren't really equivalent. - Swift version checks for nil. Python version assumes it's not None, and will raise if not. - Swift version catches bad JSON syntax, and prints an error. Python version will raise in that case, too, but it's not caught here. - Swift puts `blogs` in a temp var. Python version does it inline. - Swift version only collects toplevel "blogs" records if they exist, and silently does nothing if they don't. Python version raises if this record is absent. - Swift version only collects names of type String. Python version collects elements of any type. You could add lots of error-checking to the Python side, and skip it in Swift, and get the opposite result. I'm not sure what behavior we want here, so let's split the difference. (Filter by type, raise on any error, don't catch locally.) Here's a Python version: blogs = json.loads(data) names = [] for blog in blogs["blogs"]: if isinstance(blog["name"], str): names.append(blog["name"]) print(names) And I'd say the equivalent Swift version is more like this: var names: [String] = [] let json = JSONSerialization.jsonObject(with: data) as? [String: Any] for blog in json!["blogs"] as? [[String: Any]] { if let name = blog["name"] as? String { names.append(name) } } print(names) It's more verbose, but not obscenely so. If you skip the lines which are just "}", it's the same length, and only slightly wider. 
Yes the problem really is paying the price for type safety. But golang is typed and has an easier pattern so I guess it could be better. 
Sidebar you smartiepants
That's a great library, thanks! One suggestion, I think a delegate could be useful, something like: (scrachEnded , scrachBegan) So therefore it could be used to check if the user scratched a give percentage of the image. That's just a suggestion, I don't have an idea with this lib right now, but this is how I can imagine using it.
Thanks for reply~ Nice suggestion, i will implement scratchBegan, scratchMoved, and scratchEnded function.
I've seen similar issues, and have since switched to https://github.com/utahiosmac/Marshal.
Loop tableView.TableColumns and set the identifier to each column.
C# is strongly typed, and dealing with JSON is decidedly more straightforward using json.net
If there weren't some many of you, I might consider making one. 
Agreed; the article is intended to help beginners get started, but I would generally take this a step further and use either `map` or `flatMap`.
I'd love to see what it looks like.
"Yes the problem really is paying the price for type safety." Yes. I'd love to see what it looks like to parse this JSON in golang.
Why are you downloading in the main queue o.O
You can use images without having to do any code...its as simple as drag and drop. But if you want to do extend functionality and start doing other interesting things (like customization) then you do need to code.
https://play.golang.org/p/FKoDA6rqMy
You're correct; I dragged the run button from view controller one to the second view controller. The problem is that only the initialized value is sent to the secondVC despite having the performSegueWithIdentifier() called after getRate() which should have changed the value of forexRate = 0.0 to its intended value. I've tried simply declaring the variable without giving it a value but then prepareForSegue() doesn't like nil, which also proves it runs before anything else. Idk why it's set up to run without being called yet.
Okay, then that's definitely the issue. Doing that + using an IBAction means you're doing the same thing twice, but it seems `prepareForSegue` is called first and executes before you're forexRate has a chance to update. There are 2 ways to resolve this: Keep on with how your code, except you now need to move all your Boolean logic to the `shouldPerformSegue` method. There you can return true if you want the segue to proceed, or false if not. With that done, you don't need the Boolean check in your segue, or the IBAction (storyboard segues + `prepareForSegue`+ maybe `shouldPerformSegue`means you don't need an IBAction). The second way would be to remove the segue from your storyboard and instead make a manual segue (i.e. drag from the first VC to the second). You can then keep your code as it is, and you won't need `shouldPerformSegue`. A few other things: - because you've performed the relevant Boolean checks in your IBAction (or `shouldPerformSegue` if you choose to use it), there's no need to do it again in `prepareForSegue`. - in general it's a good idea to check for the relevant identifier (i.e. `if segue.identifier == self { // do things }`) in your `prepareForSegue` method. 
You can drag a segue from the viewcontroller object (white square in yellow circle) at top of IB view just like you would from a button. But those segues won't automatically trigger so you have to programmaticallyfire them. On my phone so I can't add images/code. But I'll try to put something together when I get to my computer. **Edit** Ok here is what it looks like to create a ViewController to ViewController segue: [http://i.imgur.com/eTn1d13.png](http://i.imgur.com/eTn1d13.png) And here is how you identify the Segue: [http://i.imgur.com/p0l9Te1.png](http://i.imgur.com/p0l9Te1.png) Finally here is the code that would do stuff @IBAction func doStuff(sender: UIButton) { // do button stuff here // all done, call segue performSegue(withIdentifier: "ShowVC2", sender: self) } override func prepare(for segue: UIStoryboardSegue, sender: Any?) { if (segue.identifier == "ShowVC2") { // grab destination viewcontroller and do stuff here } } I hope this helps, and if this was your problem make sure you remove the original segue from the button. The problem I think you are having stems from having multiple outlets on your button, and upon clicking the button the outlets get called. I don't know if those outlets are called asynchronously, or if it's just an array and they are called in order. But either way it's unknown behavior to you so you should avoid attaching multiple actions to a button and instead programmatically do the work inside the single @IBAction so you have full control and know what is going on. 
Personally. It's the optional chaining that I dislike. As well as handling nested JSON
No it's for a graph
Is that recent? There's a [bug report](https://github.com/SwiftyJSON/SwiftyJSON/issues/241) from last year but nobody seems to have a problem with it any more. All the old NS-* casts are [pretty much gone](https://github.com/SwiftyJSON/SwiftyJSON/issues/408).
In C#, deserializing json into an object is as simple as Movie m = JsonConvert.DeserializeObject&lt;Movie&gt;(json); It could absolutely be far, far, far better, and still keep your type safety. 
In C# there is a library json.net that makes deserializing JSON strings into objects as simple as Movie m = JsonConvert.DeserializeObject&lt;Movie&gt;(json); I don't see why it wouldn't be possible to get all the same functionality in Swift as in JSON.NET. 
Great work. Still, see some repetition in color view as others have mentioned. Generation of buttons in MenuButton.swift has some repetitive code. 
This comes from the Swift Algorithm Club, an open-source community project to implement various data structures &amp; algorithms in Swift.
I have plenty of other projects to work on, so I don't really need another. If anything, I will continue working on the game I started building a while back. 
Well, that uses reflection which swift barely has support for. It's error-prone and bugs will be discovered at runtime or not at all. I'm not personally against it, but this is why the Swift team is. 
Wow this looks dreamy. How does this compare to default swift JSON serialization and object mapping? 
What makes reflection prone to bugs? 
Hah :) This was just a proof of concept, really. Wasn't planning on releasing on the app store. I just wanted to familiarise myself a bit with Swift before tackling a larger project.
Thank you! Would you like to elaborate on what I could do to improve it, since you said "start"? :)
set forexRate = 99.0 but it only replaces the data from the server, the initialized value is still being passed. **read that wrong and have now** replaced the getRate() call with forexRate = 99.0 and now it is passing the 99.0 over. that's so weird. I guess within getRate(), the self.forexRate = whatever hardcoded or from server doesn't get called until after performSegueWithID runs? even though it's placed at the same level and before it. getRate() pulls data from a website and sets self.forexRate to it. self.forexRate = //double. It prints correctly so I know it's there. I guess it's some kind of stack, but I haven't any recursive calls the print(self.forexRate) from getRate() is definitely secondary to print(forexRate) called immediately after getRate()
Thanks :) &gt; The giant "H:|-[gradientColorButton1]-[gradientColorButton2(==gradientColorButton1)]-[gradientColorButton3(==gradientColorButton1)]-... might be simpler as a StackView Oh, shit. I actually forgot to improve that. I had plans.... :) Didn't know about StackView, though. I'll look into it! &gt; For that matter, all of ColorRowView looks repetitive. Why not use an array, and loop? Good question, I'll check it out :) &gt; You have an addSubviews() extension, but both places it's called, there don't seem to be any existing subviews. I think you can just assign them like foo.subviews = [bar, baz]. Didn't know I could do that. I'll give it a whirl :) &gt; For overall structure, I'd say the model generally shouldn't have a ref to its view. I'm not an expert on the data structures involved here (and I know nothing about "Magic"), so I can't really make a more concrete suggestion. Yes, that one I was a bit iffy about, too. I was hoping for some clear guidance on that. &gt; I'd also say that Apple seems to suggest, to me, that we shouldn't subclass View unless we need custom drawing, and instead should subclass ViewController. But for a small single-purpose app like this, it doesn't really make any difference. That just seems wrong to me. You could be right about Apple suggesting it, but the suggestion itself seems wrong. Thank you for your comments :) I really appreciate it!
Thanks :) I'll look into it!
I called it 'start' cause you said it's your first swift app :) it's pretty sofisticated for a first app! I'm on mobile right now so I can't really look at the code but the UI seems to be well thought trough
That is fair. 
Very favorably, IMO. The code is more concise, and performance is much better.
You guys should do Vornoi next. It can be a great CoreGraphics exercise too!
Store the passcode in the keychain. That persists between app installs and is secure. If you don't want to have a username, just don't write any code that asks for a username. 
You're thinking of lenses. Here's a good talk about it: https://www.youtube.com/watch?v=ofjehH9f-CU
You're giving control to the language implicitly. It guesses at the keys and values rather than having you specify them. Safe in most cases, but necessarily more error prone. 
You can add decorators to the class to state the types explicitly if needed, or map keys to values when the class property doesn't have the same name as the JSON key. 
you're absolutely right that it was the asynchronous call to web delay. Thank you so very much for your help! func getRate() -&gt; Void { let url = NSURL(string: "https://www.google.com/finance/converter?a=1&amp;from=\(localCurrency)&amp;to=\(homeCurrency)") if url != nil { let task = NSURLSession.sharedSession().dataTaskWithURL(url!, completionHandler: { (data, response, error) -&gt; Void in if error == nil { let urlContent = NSString(data: data!, encoding: NSASCIIStringEncoding) as NSString! var lengthOfRate = 0 lengthOfRate = urlContent.rangeOfString(" \(self.homeCurrency)&lt;/span&gt;").location-urlContent.rangeOfString("\(self.localCurrency) = &lt;span class=bld&gt;").location-urlContent.rangeOfString("\(self.localCurrency) = &lt;span class=bld&gt;").length //we did not know the range of whatever exchange scenario thus had to calculate by take the difference between home and local currency location then subtracting the length of the home currency length to find the length of the rate that is inside self.forexRate = Double(urlContent.substringWithRange(NSRange.init(location: (urlContent.rangeOfString("\(self.localCurrency) = &lt;span class=bld&gt;").location+urlContent.rangeOfString("\(self.localCurrency) = &lt;span class=bld&gt;").length), length: lengthOfRate)))! //the rate substring is found by starting at the location of local currency plus its own length, which is the rate's initial location. the range of the substring would then be the lengthOfRate self.performSegueWithIdentifier("FirstTransition", sender: self) } }) task.resume() } } This code manages to work except it is extremely slow for some reason to show in the second VC var forexRate = 0.0 The following is the receiving end in SVC @IBOutlet var rateOutlet: UILabel! override func viewDidLoad() { super.viewDidLoad() print(forexRate) rateOutlet.text = "\(forexRate)" // Do any additional setup after loading the view. }
I've also used Marshal in a couple projects. I'm glad I'm not the only one who likes the way it works more than SwiftyJSON. It's a little disappointing that everyone uses SwiftyJSON and doesn't check out the alternatives. I think Marshal deserves a lot more attention.
Let the client call your server api: now = Date() if now - lastUpdated &gt; 12 hours: checkForUpdates() // save lastUpdated serveInfo()
The same but mostly using their respective documentation and reading sources. 
Ease of deployment is fundamental for spreading like wildfire and right now Vapor is winning. Just started playing with both and only needed "Vapor heroku push" to have my app running in no time. Vapor won. http://swiftforums.herokuapp.com/ Now, I rather see Vapor drop Leaf and use Stencil as default template engine (broader user base with Django and Jinja), the less things I have to configure the better. Still, if I worked for an enterprise I'd pick Kitura. So, Kitura for the enterprise, vapor for the hobbyists, and we all know hobbyists are the ones who push the world forward while enterprises reap the rewards. Oh, and that 404, the touch of beauty, signature of excellence.
That's also what I'd think right now: Kitura for corporate stuff. I fear it will go the way of insane complexity to do simple things just because well... corporate developers and overpaid consultants. The ease of deployment can be a thing, but I don't see Heroku as a viable solution. It's overly expensive. I have a long experience with that on a large scale Rails app and having your own servers is good. I wouldn't peg either Vapor as hobbyist material only. My gut feeling would be to say that Kitura will go the way of Spring and Vapor will be more akin to Rails. EDIT: the spread like wildfire thing is also due to the amount of good quality 3rd party packages. What's the current situation?
I'd bet on Vapor. There's a talk by the developer's and my takeaway was that they have used a lot of different web frameworks in the past. They're trying to use that experience, and the niceties in Swift, to fix all the typical annoyances. So far it looks awesome, and I'm hoping it'll be a faster alternative to Django, Rails, etc. The docs reveal a lot: * http://ibm-swift.github.io/Kitura/index.html#summary * https://vapor.github.io/documentation/
That way of declaration is the same way as when you're making a new object. The parenthesis are if you want to call any parameters when creating a new array. Usually you don't use any of the Array initializers, so you end up using the default one with just `()`. //An array of zeros let allZeros = [Int](repeating: 0, count: 5) //Same thing let allZerosInferred = Array(repeating: 0, count: 5)
Can you help me out a little bit? I: * installed cocoapods * did pod init in my project folder * pasted the single line from the alamofire website into the Podfile * did pod install in my project folder And now my project does not build.
Does your Podfile now contain _only_ that one line? That could be it, most Podfiles have additional info, and I imagine projects like Alamofire just assume that has already been setup. It might be something like: use_frameworks! platform :ios, '9.0' target '&lt;&lt;YOUR TARGET HERE&gt;&gt;' do pod 'Alamofire', '~&gt; 4.0' end However, I'd look at some other projects which use Podfiles or the Cocoapods docs to find out exactly what. Do you now have a &lt;&lt;PROJECT_NAME&gt;&gt;.xcworkspace? If not, then the pods aren't working - seek help in the docs. If so,ensure that is the file you are opening in xcode and using to edit/build/run etc. In other words, you won't be using your project anymore. And, last but not least, there's gotta be some errors somewhere, like in the terminal or in xcodes console etc, to understand why it isn't working you have to find, read and understand (and fix!) those errors. 
I think it probably doesn't matter at this point. The eventual winner probably hasn't been created yet. (I remember when TurboGears was going like gangbusters in the Python community, and today I don't know a single person who's using it.) So either one is fine for now, as long as you don't build your whole business to depend on it staying around forever. Heck, 2 years ago most of us were writing Objective-C, and lots of those codebases have been ported to an entirely new language already! So adopting a new web framework next year shouldn't be such a shock. I don't think it's fair to say that what IBM touches turns to shit. I think it's more than IBM is a giant company with giant company inertia, and so they like to bet on conservative things. That can be good and bad. It's how you end up in 2016 with mainframes, and Java. Uninspired, perhaps, but IBM is not looking to inspire you with their technology choices. Longevity-to-a-business is not the same as quality-to-a-programmer.
I certainly understand all of the varied perspectives and opinions. I just wanted to share a little perspective from where we are coming at this from at IBM. We are encouraged by the interest and variety of alternatives already available within 1 year of open source and especially considering Swift has just really been officially supported on the server since Sept. We started out from the beginning that we wanted to invest in a strong server-side foundation and have been striving towards a consistent dev experience across the platforms. Towards that end we have been investing our Research team in things like porting libdispatch to Linux, landing those changes so that our run times teams can help land more foundation support such as ongoing updates to APIs such as URLSession and more. And we have taken an opinion from the beginning that Kitura will be built upon and help us motivate improvements to this foundation. And we are also working to mature the ecosystem with needed libraries, tools and apps. We are also excited to collaborate with all of the framework developers to drive towards as much of a common server base as possible while still enabling and encouraging exploration. We are thrilled to be a part of this early community and we love to hear these types of discussions. Please keep feedback like this coming. We are all listening and striving and competing to make Swift on the server great. 
As an aspiring iOS Developer, this made me quite happy! Much excited to keep learning!
&gt; You need to write comments in your code so others can understand it and so you know what's going on if you were to look at this project a year from now. What's poison mean in the Player class? We don't all play MTG. You need comments. In fact, I think I saw comments in only 1 file and nowhere else. Comments is good programming practice. I agree that commenting your code is good practice, but not commenting for the sake of commenting. I try to keep my code as clear and concise as possible so that comments are not needed for most of it. If I were to do anything that would require comments, I would comment. As it stands in this project, I don't think there's much (if anything) that would really require further explanation from me. &gt; 1) Alternatively as many people do (at least in tutorials), is declare an empty array like this. Your way works too, it's just not common from my experience to see. &gt; var players = [Player]() Agreed. I think I ventured into that syntax on that particular line once, but I probably fumbled something and ended up with what I have now. &gt; 2) A better way to write this is to use a ternary operator. Also, in Swift syntax, the else should be in the same line as the curly brace (`} else {`). &gt; if startLife == 60 { startLife = 20 } else { startLife += 20 } &gt; ... &gt; startLife == 60 ? (startLife = 20) : (startLife += 20) Yes and no. In this case I would say yes, but I try to limit my use of the ternary operator just because it isn't as readable as the full version. &gt; 3) Swift will automatically infer that player is of type Player, so you don't need to tell it. Or was it giving your errors? &gt; for player: Player in players { player.life = startLife } I know, but this way is cleaner, in my opinion. Consider that a comment :) (Because it sort of is) &gt; 4) You don't need to declare the type in loops if they can be inferred by Xcode. &gt; for view: UIView in views //Will work just fine; this is from your UIView class for view in views Same as 3. &gt; 5) Regarding the switch statement in your CompanionViewController class in the toggleColor fucntion, you do not need to put break after every case. Swift will not fallthrough to the next case like C++. Regarding this also: &gt; case 5: color = Theme.Colors.Mana.green break default: return &gt; You can change it to this to decrease the number of lines. Usually in the default case if there is nothing significant going on, many people will put the last case as the default case. &gt; default: color = Theme.Colors.Mana.green Ah, I thought it did. Very well :) I do like to reserve the default for a default behaviour, though. &gt; 6) Regarding the performAction function in your ALRadialMenuButton file, variables should have signification names. What is a??? I Know you're just unwrapping action but using single letter variables isn't good practice. &gt; if let a = action { a() } I replied to the chain here, but in short, it's not my code that particular library (ALRadialMenu). I would never have a nondescript variable like that. &gt; I do give your props for separating them and using the MVC model. But damn man you need comments. Thank you for your comment :) Really appreciated!
Glad it could serve some use for you :)
Competition is a really good thing first of all. But something else to consider is the longevity of proper backing due to funding. Vapor received a little injection of funds, but my mind feels that IBM probably has Kitura's back quite well. I really *really* like the direction they are taking Kitura personally. To me it feels like a really nice mix of Express and Koa. &gt; I feel that much of what IBM touches turns to shit. Are you referencing the Express transition? Because yes... I agree that was stupid. Hopefully, IBM learned from that. Any thoughts on that whole debacle /u/patbohrer? Besides that though, I'm not aware of anything else they "Autodesk'd up".
Side note: Rust doesn't have a behemoth like Apple behind it. It's also not a requirement to use it for developing for a popular platform. I do Rails since a while, been doing .NET before that. Swift on the server brings one thing: static typing. Not to start a holy war between static vs dynamic but based on decades of personal experience, teams of a certain size using a statically typed language tend to fare better. That would be a huge factor for me in the balance when deciding to implement server side Swift in my organization. 
I nominate /u/sanjeetsuhag to write Vornoi for the club :]
It's of benefit to everyone that there is more than one such project, coming from NodeJS w/express; I vote for kitura.
The problem you're having is that swift gives so much syntax sugar. There is literally 10 perfectly valid ways to write that exact same piece of code. You're looking at the most sugar rich version of it. 
I just did them and they were compiling fine until you need database support. Databases are in a sore spot in swift right now though. That isn't the fault of Kitura. Edit To be clear database support is a sore spot mostly on Mac where developer libraries are lacking without installing the full database. On Linux, building database wrapper libraries in swift usually just requires the dev libraries as well. 
If I could test Kitura online without IBM/BlueMix asking for my credit card I'd definitely use it more, but right now the easiest way is 'Vapor heroku push', for free. Ouf of the big four, I like Kitura for its modularity and for having Stencil as the default template engine, that's practically all I need right now for my toy apps, no charges, no credit cards, only fun.
I like Kitura and the blue community, just let me sign up in BlueMix without asking for a credit card and I'm sold, that's all stopping me right now from playing more with it.
[removed]
Ah, there's the issue. This function is asynchronous, meaning it finishes a bit slower than synchronous (such as UI) operations are going on. In summary, it's the actual reason your `forexRate` property was still the initial value, as `prepareForSegue` had already finished by the time `forexRate` was updated. Seeing as you depend on an asynchronous function to move forward, it will always be slow (because it's also using the network, which just adds to the time spent). The best thing to do will be to add a UI indicator (such as `UIActivityIndicatorView`) when the button is tapped and remove it when `forexRate` has been updated. The `getRate()`function would be a good place to place both ‚Äî adding the indicator can be placed at the start of the function and removing the indicator can be placed after `performSegue`. 
IBM has been an extremely active member of a number of open communities (Apache, Linux, Eclipse, CF, OpenStack, Node, Docker, Hyperledger and more). We are certainly doing our best to contribute and participate with the broader Swift community through seeding over 100 repositories as well as finding ways to contribute back to Swift.org along with the rest of this growing community. If you see us misbehaving or doing anything that inhibits the growth of this effort, please let me know. 
Yeah, but most don't have the skills/experience to back it up. All I'm saying is I was impressed by the developer's background, and I think they understand what I want in a Web Framework: https://youtu.be/G_dUwkhZst0?list=PL3sFvSv2hAMWefzUzOBfZm02p1mkED_BL I'd invest in an IBM project about as quickly as I would an Oracle one - which is to say **never**.
Kitura can be run across a number of deployment alternatives (local, PaaS, Docker, etc). Bluemix is our key Cloud platform and has a free option for some of the simplest deployments. IBM Cloud/Bluemix supports compute options for CF, containers, VMs and even bare metal servers as well as a number of key services around data, Watson/cognitive, integration and more. We are building out the surrounding Swift ecosystem with tooling, SDKs, monitoring/logging, autoscaling, code generation, etc. While you will see additional/advanced capabilities if you choose to use Bluemix, Kitura will always also be supported to be run generically on any platform of your choosing. 
Er, can't all platforms use CloudKit?
&gt; Yes, it's for exceptions. It's indicating that the closure can throw an exception. No, in Swift it's for Errors. Swift basically can't deal with exceptions at all. There's not even any syntax for throwing or catching them.
I don't have a VPS, right now I'm testing it on my localhost but I'd like to have a free/cheap online version before getting any traction, if ever, which means less than $10 a month.
This is a great explanation of how closures work. Kudos for taking the time to write this. 
I am not in a disinformation campaign, ~~watch your mouth young boy~~, if I wrongly believed a credit card was needed all you have to say was to try again and let you know of any problems. I am trying all server packages and all hosts available and probably I mixed information. I love Kitura and I for sure will use it in the near future, ~~if you work for IBM you are a disgrace~~. ~~Learn to engage with future customers with silk gloves~~.
Even if you think that a statically typed language works better in some cases (and my own decades of personal experience says otherwise, but reasonable people can disagree), there are mature statically typed languages that have good web frameworks. As you point out, .NET has been on the server for a while. It has a 10+ year head start on Swift, is statically typed, has the behemoth Microsoft behind it, and is the primary language for developing on another popular platform. It's also got an open-source implementation (two, now?), and a good open-source web framework (also developed by said behemoth). It checks all the boxes except "is named Swift". :-)
This strikes me as one of those cases of premature optimisation. Why not wait until you have a performance problem then take measurements, find the problem and fix it? I think that is better than inventing a monster in the closet which causes you to be afraid to go to sleep at night. Also, my guess is that many other things are likely to have bigger efficiency impacts than a few unused methods. For example, doing hefty date calculations is known to be pretty slow because of the inherent complexity of dates.
I assume you are using segue to get to view controller from your cell. After instantiating the destination view controller in prepareForSegue, you can set the desired parameters in dst view example text or image 
Deployment to a PaaS is very easy. Just to be clear. Kitura can be deployed to any PaaS and Bluemix also supports PaaS deployments just like Heroku and you can even get auto provisioning things like Watson services. If that is not clear, we will do a better job of making that more apparent. Thanks for the feedback. 
Seeing this: http://stackoverflow.com/questions/34363924/webview-vs-wkwebview-on-osx I see it's better to use the WebKit API and WKWebKit for the view - and it looks like I can drive functionality via JS and WKUserScript... 
Prototype cells require UITableViewCell subclasses (and you need to set each subclass to the corresponding cell in your storyboard). You can then drag the buttons to those subclasses to create outlets. Do you actually have 5 very different cells that somehow have a button that does the same thing in each?
they have a UITableViewCell subclass. They already share some labels, but with the Button Actions it won't work. Yeah unfortunately i have the same button 4 times there.. app consists of 5 different post types which have special designs. so thats why i came up with special cell for each one. 
Oh no, you have not been using them wrong. Your use is what they are meant for. Mine is just a side effect I use to organize my code. But I didn't invent this. As I said, Apple even shows this use in the Swift manual. It does not make any difference in speed though. It's just a way to organize code better for readability.
This is commonly referred to as OCR. ...Optical Character Recognition I think? Anyway try searching on cocoapods for "OCR". Surely there's a straightforward framework available that can do this. There might a web API that does it as well, however someone is usually paying to host that, so they'll charge you for API usage. I.e. It's less likely to be free. Try looking on cocoapods!
Thank Seb, you helped me a lot with this. Now I have something new where I would like to ask for some input/further thoughts. How do you handle the Firebase listeners (e.g. .childChanged, .childRemoved) in your setup? I would like to update an UITableView based on the listeners, so I do not need to reload the entire table every time. Any ideas? Thanks!
This is executing correctly; it is the result I would expect to see given the code. direction is a computed variable and when you access self.direction it just recurses into the get which accesses self.direction which recurses into the get which accesses self.direction which recurses into the get which accesses self.direction..... (at this point I feel the urge to say, "aren't you glad I didn't say banana?"). And similar for the set. If you want direction to be computed then instead of accessing _itself_ on the get and set, it should access some other _real_ variable. But, you aren't allowed to define real variables in extensions, are you? I'm pretty sure not. So, you can either do as u/barakrl suggested and do something with associated objects, or you could create a custom subclass of JKButtonNode instead of an extension. Or if the definition of JKButtonNode is something you have access to and can change, then stick the definition in there. But don't use this definition of direction, no matter _where_ you put it, it will recurse forever and crash.
I do that, but the issue is: how do I get the text / image into the scroll view (which is a XIB)? I can move data in prepareForSegue, as you suggested, but when I try to put it into a XIB+ViewController class, it gives me an error, like the key values aren't matching. ???
You new to use SpriteKit and use Tiles to create a sequence of image that simulate a man walking, and create and SKNode with an animation sequence of the images in the tile while you move the SKNode.
There ya go! Nice.
I know why it calls itself over and over but I just figured that Swift would be smart enough to execute it only once but that's because I didn't know extensions couldn't have variables. I wish Xcode would just give an error saying computer property in extension not allowed, etc. 
Why? Infinite loops are a valid thing programmers do on purpose. 
You could try writing those "built in APIs" some other way, and see how it's less convenient. Is there some API use of closures in particular which you find unnecessary?
I'm not sure if you're being condescending or not, but I'm not a programmer. I'm trying to learn. I have some ancient experience from school with C++ and Java and I'm just curious.
Well, if you're writing programs, I'd call you a programmer. You said "besides using built in APIs", but those APIs weren't written just to be confusing. Is there some API you're thinking of?
I do not have many friends to give the codes in English speaking countries. So I want you guys use the codes and happy. Please reply what code you used for others. https://itunes.apple.com/app/id
I would export your data as a TSV and [use d3](https://bl.ocks.org/mbostock/3883245) to generate the plot, put it into an HTML file and render using [WKWebKit](http://nshipster.com/wkwebkit/).
Tiles map is the best way to organize a set of images that will be use in a game because increase the performance cause you online have to load just one image o a few of images (multiple tiles maps) instead of load every image that is use in your game. Tiles maps can be use for the map of your game world but also to group all your games images in one file. 
The short of it is that closures are very useful when you want to specify some sort of custom behavior in a big general-purpose behavior. The two most common APIs you'll see that use them are animations and network requests, which do a whole lot work behind the scenes, then you frequently want to do something after the animation completes or do something with the results of the network request. A closure lets you specify what you want to happen in a single chunk of inline code, to be executed at some point later when it's appropriate.
Any chance there is a link to the talk video somewhere?
Tell me when you know the answer ;-).
There's an online coursera course that covers the basics and then neural networks. There are tons of resources on the internet though
What's the approach for making a suggestion that then becomes a proposal? Also is the onus on the person raising the proposal to make it? I have a suggestion that I'd like to voice and discuss but not sure of the approach - or my technical capability of being able to implement it...
Is there no way to have 1 cell that switches its views depending on the post type? If not, and you've made sure that you've properly set the custom subclass of each cell in your storyboard, then I don't really know what's cause it not to create outlets. Anyway, you'd need 5 separate actions for the buttons if you can't combine them all. 
This should get you started. https://www.raywenderlich.com/98178/os-x-tutorial-menus-popovers-menu-bar-apps
when are you guys planning to release drivers for Oracle and MSSQL SERVER ? I want to use it in my new project. 
It looks like a nice UI, but it seems odd that you've chosen to use a screenshots with what looks like a partially naked couple on a bed in an app that has a primary focus on weather. What are you using for the image feed in the app, because I'm not sure why that image should ever be presented.
I'd go with UITableView approach to keep it MVC: controller updates the model and tells the view that caused the event to refresh itself. The view asks it's delegate to update it.
By having A LOT of people downloading it. Hundreds a day with a lot of good reviews.
Agreed, should have mentioned that as well
Let's just say I was working with a lot of Python code before working on this project. :) 
I wish there was a was a quick tool in xCode for converting from hex/rgb to decimal values for defining UIColors.
&gt;What's the approach for making a suggestion that then becomes a proposal? You're going to want to raise this on the [Swift Evolution](https://lists.swift.org/mailman/listinfo/swift-evolution) mailing list. At this early stage, most authors like to tag the subject lines of their ideas with [Pitch] or [Idea]. If you get a warm enough reaction from the community you can draft the proposal and submit it to [Swift Evolution](https://github.com/apple/swift-evolution) on GitHub. It's usually courteous to send another message to the list notifying them that you've done so so they can read your proposal and comment on it. If Lattner agrees that your proposal is in-scope for Swift 4 phase 1 (or phase 2 soon enough), it will be scheduled for formal review by the community and core team. &gt;I have a suggestion that I'd like to voice and discuss but not sure of the approach - or my technical capability of being able to implement it... By far the majority of voices in Swift Evolution have never contributed to the Swift compiler. There is zero expectation that you have to! If the community likes your proposal, and the core team agrees it's important, the engineering team will make the time to implement it. (That said, if you want to take a crack at it yourself, more power to you!) Swift Evolution is a place to discuss ideas with other people interested in Swift's future. Implementation details are tertiary.
There are plenty of simple UIColor extensions that take hex/rgb values, so you could just use those instead. It's also easy enough to write your own, I've probably done it a few times myself.
How so (a sore spot). They're in a great place in the Perfect landscape :)
To answer your question, underscores are necessary when they're in the method declaration. i.e `func add1(_ number: Int) -&gt; Int { ... }` is not the same as `func add1(number: Int) -&gt; Int { ... }` One first one is called as `add1(3)` the other is called as `add1(number: 3)`. For your underlying problem, have you made sure that your `ViewController` is the datasource of your collection view?
Could have used color literals!
I think I may be confused about data sources, I thought the data source for my collection view was "messages", which is an array populated by messages sent by users (using Firebase). When I setup the class I have class ChatLogController: UICollectionViewController, UITextFieldDelegate, UICollectionViewDelegateFlowLayout if that's what you mean? Sorry I'm still learning the ropes. And like I said, every bit of code in the entire project is identical to the tutorial project except for the underscores, and the tutorial project works fine! This is what's confusing me so much.
I don't understand your question. The little bit of code you showed seems to be you doing just that. What comes to mind with that error is you giving it a XIB which does not have it's outlets properly connected.
No worries. When I asked if it was the datasource, `TableView` and `CollectionView`s require a datasource from which it grabs it's data. Now, `CollectionView` has an instance variable called `dataSource` that is of type `UICollectionViewController?`. So somewhere in the `CollectionView` code, when it goes to populate itself, it calls something like `dataSource.collectionView(_ collectionView: ...)` which then runs that function that the `dataSource` implemented. However, if `dataSource = nil` (i.e the data source isn't set) that function doesn't really do anything. So in your code, try adding `collectionView.dataSource = self`. You're letting the collectionView object know that that `ViewController` is going to be its dataSource. This is possible to do in Storyboard but it isn't obvious. So you might have missed that step in the tutorial. The way you would do that is `control-drag` from the collectionView to the `ViewController` itself (that little yellow circle on the top of the `ViewController`) and select `dataSource`. All this goes for `delegate` as well. Does that make sense?
Hmm so you're doing this by code... Are you by any chance forgetting to call `self.view.addSubview(collectionView)`? Funnily enough I'm having a hard time the 4 space type code haha. You put them between "`" (whatever they're called). 
I fixed English based on your advise. And the background photos are based on selected categories by user. But the sequence is random. Thank you for feedback. It was really helpful. You are nice person. :)
Definitely! And I am looking for advertisement platforms. 
Unfortunately, there could be a multitude of reasons for, 'collection view cells...aren't loading.' It may be best if you learn a bit about the debugger and narrow down the problem. Actually, the first thing is to see if there's any errors being printed in the console. If so, it is best to hunt the cause of those down and fix them first. Then, try setting a breakpoint on the methods the collection view should be calling in your code (such as the ones which return the number of sections, the number of rows, and a cell) and make sure you actually arrive there. Once you do arrive, check that those methods are returning what you think they should be returning. 
Nicely done, I created something like this before but it was hacked together and once I got it working I never went back to it. It would be nice to see how you did it.
Something really important that every dev should learn early on. This is something that I wish I had known beforehand, it would have been so helpful - http://jeffreysambells.com/2014/01/14/using-breakpoints-in-xcode. Anyways enjoy. 
This is standard stuff that you do all the time with any connected app. I like to use Alamofire and SwiftyJSON. Get them on https://cocoapods.org/ 
more of a remote database that everyone who uses the app can interact with. I want it to be a relational db. Reading perfects about me, they specifically mention using it for mobile development. But I cant find anything about vapor
why do you prefer dynamoDB vs say CloudKit? the relational aspect?
This is most likely it. Try right clicking on your view controller in storyboard and look for any warning signs. 
Take a look to realm. 
Nevermind, following you comment I read a few articles and websites and I decided to switch to MIT License, repository updated aswell. Thank you :-)
Are you sure you need a table view for this? The example you give doesn't seem to be a table, just three items that need to be laid out vertically. I've seen a lot of developers default to using table views for every single thing that needs to be laid out vertically, and all it does is overcomplicate and obscure things. &gt; Each table cell will have different JSON This is another clue that this doesn't seem to need a table view. If each table cell is different, you're not presenting a table of information or options, you're just using it for vertical layout. That's not what table views are for, and they aren't a good fit if that's all you're doing. &gt; I can't design them in Storyboard. Yes you can. Drag multiple cells into your table view, one for each cell type, and give each of them a different identifier / class. Then when your data source is asked for a cell, retrieve the cell with the appropriate identifier from the table view and update it with your content. 
I'm not following you. How do you make the leap from "I have a mixture of static and dynamic views" to "This needs a table view"? The two are unrelated. There's lots of different ways to mix static and dynamic views, a table view doesn't seem at all relevant here.
Hmm let me put it this way. Let's say we are building facebook. There are card layouted items in home page right? Each item have like buttons comment buttons a title and an image of whoever posted that post. **And they also have content which may be an image, a video or a text or whatever combination of those.** So it have a static part (like buttons) and dynamic part (content) just like my case. I realized the static part by using a tableview. Now every item have like buttons. But I also need a way to generate the dynamic part in a view. Thats why I concluded that I needed a table view. However, it didnt quite work as I wanted. So I am asking how would you do it? 
Pet peeve but I'd replace 'rgba' for 'hex', it takes an hex argument and it is clearer for the user. let color = UIColor(hex: "0048BA")
Exactly. if you modularize it, you can collate them programmatically ad infinitum 
I've seen instances where performance reduces with tighter accuracies. You can get around that, but if you don't need it, don't use it.
Thats good. I honestly have never felt this helpless. Normally I download the docs and away I go, but with swift I am finding myself to need stackoverflow. That's very unusual for me. I hope these get fixed up. I know a lot of programmers just stackoverflow everything they do anyway, but not all of us are like that. 
It comes down to what your app really needs. Imagine that you have an app that suggests cool sights in city where the user currently is, it is enough to know his location with kilometer accuracy. This way you save battery life on the device since location services can drain battery quite quickly.
 They seem to be over-reliant on a generation tool, and people writing doc were not double-checked that they used the tool in a clear way
I knew it was going to be Devslopes. I am currently taking that course.
I think you may be confused. A `UIImage` is the representation of an image where as a `UIImageView` is a subclass of `UIView` which displays a `UIImage`. So what I think you are wanting to do is place a `UIImageView` in your view controller somewhere. Then when you have your `UIImage`, you can just set the `image` property of the `UIImageView`. It would look something like this: let myImage = UIImage(name: "myImageName") myImageView.image = myImage
[removed]
Perhaps you can clear up some of the reviews. I was going to get it but the bad reviews gave me pause. Though it is marketed as "Taught by Mark Price", people are saying that he does not do a lot of the videos and that the instructors who do them are hard to understand. They also say there are a lot of old videos mixed in with the new ones and that they are made for ios 9 not ios 10. Have these problems been fixed? Or is this the reason for the discount? Thanks for any info.
What actually doesn't work? Describe the code events. Does it go into the function? If yes, then check if ot goes into proper "if". Are there any errors thrown? In general, viewDidLoad has access to the same UI things as viewDidAppear. I'd recommend checking other lifecycle functions, especially viewDidLayoutSubviews, maybe you, or the controller you inherit from (if there's something besides UIViewController) changes, or resets the views.
Use dash or xcode to browse the docs
I'll take a shot. I wouldn't doubt if there is an easier way with some API I have overlooked. I wanted to make it safe so it doesn't crash if you specify off the end of the string. let str = "Practice Keyword: xxxxxxx" extension String { func extract(after key: String, maxCount: Int) -&gt; String? { if let foundRange = self.localizedStandardRange(of: key) { let found = self.substring(from: foundRange.upperBound) let count = min(found.characters.count, maxCount+1) let end = self.index(self.startIndex, offsetBy: count) return found.substring(with: Range(uncheckedBounds: (lower: found.startIndex, upper:end))) } return nil } } str.extract(after: "Keyword:", maxCount: 20)?.trimmingCharacters(in: .whitespaces) **Update:** Just realized there was an off by one error. :] Fixed.
No, but you can place the image in an image view. Just as you can't easily convert a picture to a frame, but you can frame a picture.
You wouldn't ~~convert~~ a UIImage to a UIImageView. You would set the UIImage let myImage = UIImage(name: "imageFileName") Then set the image property of the UIImageView to the UIImage object. myImageView.image = myImage Just like /u/SlayterDevAgain said.
This was my final project for my comparative programming class, if you note any errors or misconceptions or just have any general feedback, I would much appreciate it. Additionally feel free to make PRs: https://github.com/jakerockland/go-vs-swift
I had been referencing [this example](https://gobyexample.com/hello-world) and also had read [this SO post](http://stackoverflow.com/questions/14680255/whats-the-difference-between-fmt-println-and-println-in-go) and erred on the side of completeness rather than to minimize for LOC.
How do you load the data? What do you do with the data once it is loaded? What format is the data you are downloading in?
This is the perfect time to take a look at analytics and let that dictate how you proceed. How many of those older devices actually use your app? Is it even cost effective to maintain them? It doesn't matter if this is a personal app or you are working for a Fortune 500 company, don't waste your time on devices that are a very small percentage of your user base.
Your example in chapter 7 won't run. 1) import to os is missing 2) var doesn't go with :=
&gt; am I just at the mercy of the device and internet connection? Yes. But do you need all the info at the same time? Can you get your data in chunks? (The more important ones first)
I agree, you ought to use one View and simply modify the context to reflect the situation. If the behavior of the View Controller is going to need to need to change significantly between rooms/situations, I'd recommend using something like a state machine. Regarding your actual question, do you mean the actual mechanics of it? If so, you should be able to set up an IBOutlet for the buttons and, in the function that gets called, using ... label.text = "Something new"
Actually it can be a one liner: var world string = " world!"
That's actually not true. In go var world string is assigned (initialized with) a value, its zero value: &gt; https://golang.org/ref/spec#The_zero_value Accessing it is no problem. In Swift, however, it is not initialized. Accessing it will result in an error: &gt; error: variable 'world' used before being initialized 
Id really appreciate it if you could u please send me an example of how i can apply tiles for my animation. Thank you!
It's done on Firebase's API. Basically the app reads a noSQL list, and stores the data (Strings) in an array locally. It just takes a long time to read and save 7,200 objects. 
I do need it for a graph. 
Maybe you can do the processing it server side and just download the results to plot the graph. Or do you need to process and plot all that data in the device?
Thanks! Yea I'll use tonight to simply it down to one view. And thanks for the help, I knew changing the text was really simple, just forgot exactly what the commands were. Cheers.
Ah, my mistake--good point! Tried to make this a bit clearer [with this addition](https://github.com/jakerockland/go-vs-swift/commit/adbcac67cc98d08090575759669c28e900a3586f), thoughts?
&gt; I think this makes it sound like Apple and Google are even bigger than they are. Alphabet has only been #2 for, what, 3 months? And that was the first time they ever broke into the top 3. Microsoft is a close #3, and prior to that held the #2 spot for over a year, and have been #1 many times in the recent past. That is certainly a fair criticism of the juxtaposition I was trying to make. I definitely wasn't meaning to discredit Microsoft in any way. Will think about potentially re-wording/re-framing that. Would appreciate any suggestions! üòÑ &gt; Well, I'd say the approach to memory management is their biggest difference, but I'm kind of a weirdo. Another fair point, Go is still a relatively new language for me that I haven't used much outside of toying with it some for the scope of this research project and memory management is something that I didn't get a chance to really explore much. &gt; What does this mean? If it means GCD, that's open-source. If it means an API that was merely designed by Apple initially, that's true, but so were all of Swift's APIs (and all of Go's APIs by Google). I was mostly just trying to re-emphasize the point that concurrent programming is baked into the language with Go, whereas in Swift it requires including an external framework--albeit one that was developed by Apple. I wanted to make the fact that it required Apple's APIs explicit because it something that is readily available when doing Apple development (iOS, macOS, etc.) but not necessarily available when doing other development with the language (for example on a Linux server). However, I may be missing the mark here in the way I'm making the distinction. What're your thoughts?
Are your datasource methods being called for sure? (Try adding a bunch of `print()` messages)
Note this apparently has nothing to do with the Swift language. You might get better answers in more specific forums. If we consider what differences between the iPhone 5 (I presume you meant iPhone 5, not iPod 5) and the iPhone 6 could cause performance to be fast on one and remarkably slow on the other, it is not something like processor speed, because that would generally cause a proportional difference. It is more likely you are crossing some resource threshold, such as exceeding the size of cache or of main memory, which causes data to be evicted and later reloaded, possibly repeatedly. Performance that ‚Äúfalls over a cliff‚Äù is a common result of exceeding a cache threshold. Operating system versions can also affect performance. If possible, you should ensure the devices you are comparing are running the same OS version. From your words ‚Äú7,200 objects,‚Äù we cannot judge memory use. You might consider how much memory your data uses. Also, you might experiment with 3,600 objects, 5,400, et cetera. If performance is good up to some number and then reduces greatly, this supports the cache/memory threshold idea. If exceeding cache or memory is the issue, then some approaches to mitigating the problem include: * Seek to reduce how much memory each object takes. Eliminate unneeded data or reduce the sizes of the elements within the data structures. Consolidate redundant data. If necessary, consider compressing or tokenizing data. (E.g., if each object has a string describing it, but you only need the strings for occasional reports to the user, not for computation, then compress them and only expand them when reporting.) * Change the way you work with objects to be more cache friendly. Avoid algorithms that iterate (or otherwise traverse) through the objects repeatedly. Prefer algorithms that do a lot of work with groups of objects before moving on to other groups. As long as an object is in cache (has been used recently), do whatever processing you can on it before you move on to work on many other objects. * Rearrange the data to be more cache friendly. If the objects have various parts, some of which you work with at some times and other parts you work with at other times, you might split the object data into multiple parts. E.g., one array of object data with their positions and another array of object data with their colors (just hypothetical, assuming you rarely work with both positions and colors at the same time). This results in each array being smaller, meaning more of it can fit in cache at one time. * In certain cases, unfortunate memory layouts can trigger cache evictions before cache is completely used. This is due to how memory addresses map to cache lines. The technical details depend on specific processor models. It typically happens when working with large regular arrays with a row length that is a multiple of a considerable power-of-two bytes (e.g., 1024 bytes). If this is happening, padding each row with a few unused bytes can alleviate the problem, because it causes the array to be nicely staggered relative to cache line positions. One thing to be concerned about is that, if the resource-threshold hypothesis is correct, then your newer devices may be approaching their thresholds too. That is, when you increase the number of objects a little more, the newer devices may experience slower performance as well.
Go with Swift + Vapor + Postgres + Heroku. For free.
You do realize that microsoft is nowhere near Apple and Google. The only reason Microsoft didnt go under is because there are so many people and companies that use old technologies they had a monopoly on. As those enterprises slowly migrate to newer technologies, microsoft will keep going down hill. There are millions of people still using Windows XP ffs.
I thought Java was still the language of modern tech giants. Since they all use it. Every single major tech corp uses Java.
Very clear answer, I will test it and let you know if you are correct. 
I'll second / third / fourth this one. I find the official docs are only my go-to for things I already know, and only require confirmation of. For everything that I need to get a grasp of for the first time, I tend to fire off a google search and see if someone's written it up somewhere else. 
I'm pretty great.
Just finished a scientific calculator app (with a bunch more functionality), with Swift 3 (I'm 15). 
You should run the profiler during a download of your info and see where the time is being taken up. It's likely you will have fairly obvious places to target. If you need some help deciding how to optimize, post your profiler results. 
What would be a couple of key differences between the Swift we have right now and the 'dynamic Swift by Apple' which you propose?
This tutorial from Ray Wenderlich could help you https://www.raywenderlich.com/89222/sprite-kit-animations-texture-atlases-swift
Pulled the following from [StackOverflow](http://stackoverflow.com/questions/34588837/uitableview-load-more-when-scrolling-to-bottom), which might be a fair starting point to achieve what you're looking for - If I'm understanding your question correctly. override func tableView(tableView: UITableView, willDisplayCell cell: UITableViewCell, forRowAtIndexPath indexPath: NSIndexPath) { let lastElement = dataSource.count - 1 if indexPath.row == lastElement { // handle your logic here to get more items, add it to dataSource and reload tableview } }
Beautiful. Now it's perfect.
[I agree.](https://i.imgur.com/hkcVlh9.gif)
My pleasure, feel free to post with further questions if you have them.
Thanks for the information. Did you forget to add a question? I assume you tried the suggestions mentioned in Cocoapods message already.
Look into A library called Moya for srtructuring alamofire code. Look into domain driven design for organizing business logic and separating business logic with persistence/network logic.
Not sure I understand what you mean. If you have an app in the App Store and you use firebase as the backend. Since the public api of Firebase iOS sdk is known, I can create a library with a class that swizzles the public api of firebase and inject it into your app. When you call Firebase(myAuthKey), it will instead call my function which can in turn just send me the auth key.
thanks!! 
Yah, the idea is just do it on your own device to steal api secret keys and tokens. If your app implements some version of the twitter api and I get ahold of your tokens, I can start making requests to the Twitter Api as though I am your application. This seems like a huge security flaw to me.
This is really cool. Looking forward to learning how to use this with other apps. 
There are many ways to do this. One way might be something like this: enum Location { case city(String) case county(String) case militaryBase(String) case noFixedLocation struct UnitedStates { struct California { static let LosAngeles = Location.city("Los Angeles") static let Sacramento = Location.city("Sacramento") } struct Texas { static let Houston = Location.city("Houston") } } } let loc = Location.UnitedStates.California.Sacramento let loc2 = Location.UnitedStates.Texas.Houston // loc and loc2 are both of type Location.
Never tried cloudkit! But dynamo was SO easy. I think it was just the first thing i tried
&gt; a dynamic sister for playing that never crashes on you and never breaks. That's not possible. When code does something wrong, your program can either crash, or it can break. If it continues running, it is broken. You no longer know what state you're in, and errors will accumulate. This is acceptable for something like a web page, where the outcome is a wonky-looking page with no long-term consequences. This is a terrible idea for a programming language, where you keep trying things with known bad state and can cause permanent damage to user data. When things go wrong, you want to fail-safe, not continue careening drunkenly into who-knows-what.
That doesn't have anything to do with this. IPA files are signed, not encrypted. You could always just open the IPA file and read it directly.
I guess [everybody](http://stackoverflow.com/questions/5525305/how-to-store-a-secret-api-key-in-an-applications-binary) is doing it wrong, then.
You don't have to store them there but they are passed to the libraries you are initializing at some point...
The sidebar in FAQs has a list. YouTube and google are good places to start also. 
Thank you.
You're welcome. I had started with YouTube tutorials and then branched off from there. 
Can you give an example of an app which is *not* "implemented poorly", then? How are these secrets getting passed to a library if they're not on the device? This is exactly the same reason that DRM systems like [CSS](https://en.wikipedia.org/wiki/Content_Scramble_System) were doomed from the start: normal usage dictated that they distribute both the lock and the key to all users.
Not parent, but answering anyway. "Poor" in this case could mean that API keys are just stored as a compile time string in the app, which means they are easily accessible by just looking at the binary of the app. "Not poor" here could mean these apps get their API keys from a server or something when running the app. This just means that the API keys is not available by just looking at the IPA itself. Also, by getting them from the server, you can revoke compromised keys in case somebody finds them, rendering the found ones useless. Yes, obviously they have a full string at some point during runtime in memory, but not during rest.
I was curious about data, actually. The with unsafe methods have been quite useful. Easy enough to work without too, but they've just been handy for protocols that can basically be slapped straight in to a structure. The swift data class does deprecate and add things overtop of NSData as well. The main reason I went with Data, though, is I have been using blue socket which uses Data. 
I'm the biggest advocate in the world for [Treehouse](http://teamtreehouse.com) - I actually spent 3-5 months working through their Objective-C course back in 2014, migrated to Swift and landed a job off the back of it. I owe those guys so much. It's a subscription model, but that and the quality of the tutorials kept me coming back for more.
This. You can't assume anything within your code that lives on the device is hidden, API keys and all. API keys are still helpful in case that you do get wind of the keys being exposed, hacked, or misused you can revoke the keys and give new ones.
IPAs aren't encrypted, but the executables inside them are. Have a look at the LC_ENCRYPTION_INFO load command in any of the MachO binaries in there. 
I've been coding for about 6months now. I feel I can do anything I'd like to do. I went through a course on udemy after doing YouTube stuff and other websites. It helped me the most to understand I feel. It does but it becomes stressful still at times because every app is different and you always are looking on ways to improve it. Also want to add is I had the hardest time in the world applying the knowledge I knew about swift into making my own apps. I knew the stuff but couldn't apply it. I could follow a tutorial easily but just going off on my own was hard. Then it just clicked one day. So yeah just power through all the frustration. Also it could be because I never had any coding background. And now after 6 months I'm finishing my own second game and starting a third game all on my own. Good luck! 
I have been struggling to find a good explanation for how cocoa "works". Plenty of tutorials show you how to hook up a button in IB, but none of them explain how the bazillions of classes in Appkit actually "fit" together. 
Can you do a video that is super basic? I have no idea how to do anything. 
Hi thanks for raising this issue. Here are some tips - do not put keys or sensitive information inside your app's info.plist. Its not even secured. This plist is meant for the iOS system to process . - consider having a separate physical configuration file eg. json, ymp or separate plist. This file can store your api keys as well as your environment and even feature toggle configs. Just make sure the file is encrypted before you package your ipa file. Based on the hacking research i have done. it is not impossible for a determined hacker to - reverse engineer the app and print out all the classes, methods, libraries used in the app or - using jailbroken device to read memory values
how to implement more than one url to an avplayerviewcontroller! I need help lol 
Effective Protocol Oriented Programming. Code that actually works and isn't just designed to make the point for a talk at a Swift conference. Good God I hate these fucking POP hipsters.
https://www.youtube.com/playlist?list=PLsJq-VuSo2k26duIWzNjXztkZ7VrbppkT
Advice: Watch YouTube videos. One thing I've learned while trying to learn swift is that you need the terminology, which just comes in time. Looking up a problem or how to is a lot easier with better understanding of swift. Watch lots and lots of YouTube videos and follow lots of tutorials. Also StackOverflow is your new BFF
Yeah there are lots in older swift languages. But when swift got an update to swift 3 the firebase swift library was also updated. It got a little too complicated for me. I could probably go back and figure it out now but I was way over my head.
Do you have a function that will describe the peaks and nadirs of the curve? edit: nevermind, found it. you want it in a CAShapeLayer? To smooth it, you'll have to do something called spline interpolation. I have some methods for this. 
Apple has a pretty good starter tutorial: https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/ I'd recommend you start from there if you have no idea where to begin.
Started as a school project, but I'm pushing to really finish my brewery app called Beer Belly. It uses the BreweryDB to pull brewery and beer data. So far the brewery/beer functionality is there but I want a social media feature to it so working on that at the moment as well as polishing the app and adding extra features etc.
Yeah I really want my code to be clean and efficient since I'm still learning Swift/iOS and finding Swift 3 tutorials that aren't direct translations from Obj-C or Swift 2 have been a bit difficult, but I think I've been making pretty good progress
SpriteKit / GameplayKit would be good - not many of those around for Swift 3
Take a simple app idea and realise it with different patterns in swift. Personally I'd be interested in MVVM without 3rd party frameworks. 
Here's a useful link for this sort of stuff. http://www.lmgtfy.com/?q=swift+slide+up+menu
I have two thoughts: 1. In this case, you are deleting _everything_ from your old data source and then adding the new stuff. So, why bother with all the fancy footwork of loops and removing and adding indexes and so on? Why not just obliterate your old items, slap the new items in and reload the entire collection view? 2. If you want to proceed with the batch update, you need to do what you should do to solve any problem: **simplify**. Try just deleting one item and check that that works. Then try inserting one item, check that that works. Then maybe work up to deleting 1 and inserting 1, check that. Then delete multiple and insert multiple, and so on. I think "Rome wasn't built in a day," is the hoary old chestnut we drag out in situations like this. ps: might be best to do this experimentation in a completely different project or even a playground. It can be fun. If you don't get good results with the simplest possible attempt, then google around for collection view batch updating, I'm sure someone somewhere has made it work and blogged about it. 
&gt; Once Google drops Java and start using Go everywhere in all their products (they also have tvs, tablets, watches, etc) then it can become a language for everything. Do you think this could happen? I believe Go is not good with tvs, tablets, watches because Go has garbage collector. 
Just reached the turning-point in my app where nearly all features are implemented. Now I just need to fix bugs and polish for release. It's my first iOS app based on an app I released for Android earlier this year. I'm still unsure how to monetise it. The Android version worked fairly well as a free app with advertising, but I was planning to sell this app with no advertising.
When I started learning Swift I frequently thought 'that's neat'. Swift has a nice way of doing things. I hate going back to Android and Java. I feel like they've made the most of Java for mobile development, but a bespoke solution would fit much nicer.
I just helped in the building of an app where we were saving files on a server and getting the fold/file structure back. We used QuickLook to preview supported files by Apple. We allow users to download the files within our app and save them using the FileManager. You'll just have to have a UX that allows the user to see what files are downloaded locally.
You can store any file so long as you have space to the docs folder. As for uploading... I use AlamoFire to POST files via http to my server, but most of my uploads go to an Amazon S3 bucket, which is pretty cheap. For a new project I'm thinking of I might even use github for storing text files (cause version control would be helpful)
I have googled around, but all the slide menus are hamburger. There has to be a specific name or something for the persistent bar on the bottom like in the music app
There was a Medium post here recently on POOP: Protocol Oriented Obsessed Programming I think. I felt the same way after watching all these nice snippets that look good on a keynote but not much substance.
I finally got it to show but converting the markdown in code then sending the md to the template, couldn't use a template tag :( #raw(post.markdown) &lt;-- works #markdown(post.content) &lt;-- does not work
Vapor has a very active Slack group!
Right now I'm learning Quartz Core and making a free silly coloring/drawing app that I had an idea for when I was first learning mobile development two years ago with Titanium. Now that I feel comfortable with my skills and have free time since I graduated college, woooooooo.
**Mark as solved ‚àö** Ok, finally got a better implementation using a Leaf tag copying the base Raw tag: class LeafMarkdown: BasicTag { let name = "markdown" func run(arguments: [Argument]) throws -&gt; Node? { guard let text = arguments.first?.value?.string else { return nil } var markdown = Markdown() let html: String = markdown.transform(text) let unescaped = html.bytes return .bytes(unescaped) } } Add to the template renderer as: leaf.stem.register(LeafMarkdown()) Then just call in the template like: #markdown(post.content) Beautiful markdown for the win!
To latecomers, It works now.
URLSessionUploadTask is what you need, it will do everything for you: https://developer.apple.com/reference/foundation/urlsessionuploadtask The docs are not very helpful so google is your best friend.
Slave I mean delegate. So inside a view, you first get an instance of button and then within viewDidLoad() you can go buttonInstance.delegate = self, what if I don't have an instance of that button, and just want to implement the method as required by the delegating class? 
What I meant is , class A declares the delegate protocol variable. Within class A, on an event I have the delegate call a method aDelegateVariable.delegateMethod() Within Class B, I want to be able to implement Delegate, and specify delegateMethod. However the chain is broken, delegateMethod in class B won't be called automatically just because this line aDelegateVariable.delegateMethod() ran in class A. Normally I've seen people do classAInstance.delegate = self within the body of Class B. Can it be done without that Instance? 
No. In order to call a method of an instance you must know both the method (which you know) and the instance (which you apparently don't know). But please don't give up. It is very likely that what you want to do can be done, it is just that there is likely to be a multiple step thought process which has led you to this point and it seems like it is just this last step which is impossible. But it is very likely that some previous step in the process has gone wrong and if it were fixed, then this thought process, or a similar process, could be made to work. The main suggestion I would have is to study closely plenty of designs (I don't mean UI designs, I mean object interaction designs) particularly where objects need to work together. Obviously, Apple's frameworks have plenty of examples, but also the tried-and-true GoF's Design Patterns, https://en.wikipedia.org/wiki/Design_Patterns have many as well. Perhaps reading about different patterns which others have used can lead you to one which will work for you.
The article may, or may not, be outdated; but it should still give you a starting point. https://code.tutsplus.com/tutorials/ios-from-scratch-with-swift-exploring-tab-bar-controller--cms-25470
Stack stack stack stack stack.... views. 
Most of the methods have very similar names, the biggest differences I noticed are with dispatch queues and core graphics. Most of the changes will be picked up by the compiler helper to attempt to migrate the old code. Most of the practices and ideas will be similar. I would look up some migration posts from around the time of the updates to get more specifics. 
Personally, I would create an enum called RoomState with all of the different cases, and hold an instance of it in your view controller. Then you can put a didset observer and switch statement to manage the changes. 
Without intentionally throwing any shade, I feel like the presumption that the author is a Swift "expert" could be a bit of a reach. From my perspective, at this stage of the language's age, about 3 years, I would reserve "Expert" for those individuals that had a hand in crafting the language and the underlying toolkit. "Tips" from those individuals would, for an example, offer deeper insight into why a specific approach is better than another, or in which cases an approach should be favored over another. This comes from strong knowledge of the different features built into the language, and the motivations for their inclusion into the feature set. This list is a great summary of some of swifts major features, but to title the post as "from Swift expert" goes a bit close to click bait territory. 
It was helpful for you the tutorial from Ray Wenderlich blog?
Only critiquing because of your extremely clickbait-y title. (1) for and while loops have different purposes entirely. (2) you can also do this: if let something = firstOptional, let somethingElse = secondOptional {...} (5) Does simply using an array filter make it functional programming? (7) You could actually attach that Pay string to the enum in a function instead of recoding a switch every time. (10) That's not called conditional coalescing, its called a [ternary conditional operator](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID71). 
It depends on how many calls you expect.. if it's just for a few people I think this might work. Not for a production app 
Thanks for the reply, but you answered my question via email (note to others he was very responsive). I have found some other typos and possible errors, and am taking notes to send you an email when done with the book. Obviously you are writing about a moving target, and this is the first edition. So I hope I can help you a bit by sharing my experience as someone with limited coding experience. Overall I really like the approach of building apps to learn instead of chapter after chapter of theory or isolated examples. There are few resources for specifically macOS programming in Swift, so this is a great start for people still focusing on the Mac. 
Yes I would. I am about a 1/3 of the way into it, and am enjoying the learning process. Be prepared for a little confusion as it is basically a v1 book, and things don't always work exactly like you expect. But so far I've managed to figure out the workaround. Side note, once purchased you can download the book in multiple formats including epub and PDF. These are updated by the author from time to time with fixes, so watch your email.
Typo reports are always welcome ‚Äì thank you! Make sure you download the latest edition of the book from Gumroad ‚Äì I updated it a few days ago to include a [Frequent Flyer Club](https://www.hackingwithswift.com/frequent-flyer) code, and fixed some typos at the same time.
Awesome ‚Äì thanks for your support!
The first snippet of 2. contains `print("Welcome, \(uName)"!)` while the second contains `print("Welcome, \(uName)!")`, so it was probably just a typo rather than an attempt at force unwrapping. &gt;`radius` and `diameter` should be members of an aggregate that encapsulates the state transformation and indicates that these variables are bound together. Could you elaborate on this?
you are a funny beginner
[UIPageViewController](https://developer.apple.com/reference/uikit/uipageviewcontroller) gives you most of what you need. A UITextView initialized with a NSAttributedString gives you a page of content. You can use the UITextView's NSLayoutManager to determine which word was tapped on, then add a UIView with a clear background on which you draw the decorations, finally use UIMenuManager for the pop up menu with cut/copy/paste/define, etc.
I wonder if it is coming from an NSArray. It would be useful to know how the internalProgram type is being initialized. do { var internalProgram: [AnyObject] = [] internalProgram.removeAll() } do { var internalProgram = NSMutableArray() internalProgram.removeAllObjects() } 
This is impossible to answer without knowing the software you intend to run with this framework, the amount of data you'll have, and the expected load. 
It's hard to answer your question because you don't describe what your app will do. You only provide a layout. You can create the layout without any Swift using Interface Builder in Xcode. Based off the layout, I think what you want is to have a 'grid' op players, then when you tap on a player it takes you to a view for that player? If that's true, here's what you'll need to learn: Structs: You'll want to store information about each player. Create a struct to store name, image etc. Arrays: A struct will model a player, so you'll need to create a collection of players in an array (The array of structs is your model) UICollectionViewController: this will allow you to make your grid based on your array of players UINavigationController: you'll want to embed the individual player page in a navigation controller so you can navigate back to the grid UIViewController: you'll want to create a viewcontroller for the player page. Learn auto layout in interface builder to lay out your pictures and buttons Segues: this is how you transition from the grid to the individual player screens
I frequently find myself working on math-related programming problems. When testing algorithms, I often want examples with random data. I've decided to create an app that generates random numbers to solve that problem as well as introduce me to Swift/iOS development. Currently implemented features are 1. Random numbers in a given range (integer or float) 2. Random colors (also showing hex and RGB values) 3. Dice rolls (any number of dice, also able to select dice to "hold" them) 4. Random playing cards from a deck (with replacement) 
I'm not sure there's a mature Swift *anything* yet. It's a super young language. Half the time I'm not sure I'd even call the compiler "mature". 
OK - So the struct you create to model your players should include properties for the snapchat codes and media profiles too. Start off basic and get the app working for a couple of players using a simple array to hold the player structs. Once that is working, you'll probably want to find a better way to manage the data for all the players. If the data isn't changing, storing it all in a `plist` file might be the simplest way to go. You'll need to write a helper class to parse your file and convert it into structs. If your database is very large, you'll probably need to look into something more substantial like CoreData 
That is a question for those have used Vapor/Perfect/Kitura with MySQL have you use them in your production?
I'm still thinking Heroku performance in Asia isn't great. Bluemix hit some issue with compilation error. Linux is easiest.
&gt;for example, set diameter, then accidentally set radius somewhere and suddenly everything is out-of-whack. But it wouldn't be since `diameter` is a (non-lazy) computer property. Mutating `radius` will influence subsequent accesses of `diameter` as expected.
&gt; In the Computed Properties example they give, is the get and set using closures syntax? No, computed properties have their own syntax. There are no closures here. &gt; But I can't really tell if it's also an instance in this case since I don't see an "=" like the previous variables origin and size. I think it would help to read the Properties chapter again. In the second sentence of that chapter, it says that computed properties don't store a value.
[removed]
Thank you so much for taking the time to respond. I will check out the link on closures. I read the link on structures you shared but unfortunately it seems to spend a lot of time on initializers which I don't think I've gotten to yet. It's about 4 chapters away. But let me ask you some follow up questions if you don't mind because I think your explanation has helped me a bit. ~~1. When you define a computed property, does it always have to have a `get` and a `set`? Or is it OK to only have one? I've seen in some documentation that certain properties only have a get according to Apple. Not sure I've run into a property that's only got a `set` so far. The second line in that chapter seems to indicate "setters" are optional, but just want to be clear that is the case.~~Clarified and answered in the following section in read-only computed properties. ~~2. Assuming it's ok to only "get" from a computed property, would it be correct to do `let center : Point { get {} }` since the assumption here is that the property is already set so why not make it a constant? If so, I'm guessing that if a property has a setter then that would be the situation in which you would use `var` instead.~~Answered in the following section in read-only computed properties.&gt;You must declare computed properties‚Äîincluding read-only computed properties‚Äîas variable properties with the var keyword, because their value is not fixed. The let keyword is only used for constant properties, to indicate that their values cannot be changed once they are set as part of instance initialization. 3. For the setter, does the syntax always follow `set(variable) { }`? Can there be more than one variable such as `set(var1,var2) {}`? 4. What is the reason for line 24? Isn't the variable square (declared in line 22) already of type Rect which would hold values for center and can alternatively have new values set? 5. Follow up to q4, wouldn't the value for initialSquareCenter.center (line 24) be (x: 5.0, y: 5.0) meaning that the new values being set in line 25 would have no effect on line 24? Or put another way, wouldn't line 25 actually be setting the center property for the variable square (line 22)? 6. This might be elementary, but why is the arithmetic that occurs within the structure Rect (particularly where you've got variables of different types being added / divided) allowed? For example in line 12, `let centerX = origin.x + (size.width / 2)`, origin is of type Point whereas size is of type Size. Those structures have their variables x,y (for Point) and width,height (for Size) each of which I presume are of type Double. Would it be correct to say that square.origin.x is of type Double, square.origin is of type Point, and square is of type Rect? I ask this because on an exercise I was working on last night, Xcode was yelling at me when I tried to concatenate one variable of type String and another of type NSString which meant I had to do a little bit of type casting. But maybe concatenation has different limitations than arithmetic. I know you can add an Int + Double/Float. With each chapter, I'm getting more familiar with the concept of "type".
I initially struggled with them, but once I understood them, I really enjoy using them. Just keep at it. 
Stanford CS193P. I found swift difficult, you just have to grind it.
What have you tried?
You have correctly pinpointed the problem that the data are loading on a background thread. But you have written the code as though everything happens on the main thread, and it won't work correctly. You should use the debugger to step through and see what happens. I am having problems believing this compiles because the function getPDFFromOnline() concludes with `return pdf` where pdf is an optional PDFDocument. But the function is marked as returning a PDFDocument (_not_ optional). I believe that it will always be returning nil, because at the time the return has executed, the pdf document has not yet been fetched. Everybody has this problem when first dealing with code with callbacks and multi-threading: it requires kind of rotating your thinking 180 degrees: instead of you being in charge and telling the framework/library when to do stuff, you must instead let the framework/library tell you when it is ready for you to react to what it has done as a result of your previous commands. So in this case, you must do everything in the callback after the data are loaded; not just converting it from data to pdf, but also any further processing of that pdf such as turning it into an image and loading a view controller to display it and whatever. Naturally this can be as straightforward or sophisticated as you please: you can just write the code, you could trigger other background or foreground tasks, you could use mutexes to synchronise, you could post a notification, the sky's the limit. 
Not that i know of but honestly it is pretty early. Things are changing rapidly, IBM has a site someplace that list a whole bunch of packages for Swift. Unfortunately i don't have the URL. 
What's the closet? Anything in puberty yet?
Ray and Paul are the best: https://www.raywenderlich.com/ https://www.hackingwithswift.com/ Go slowly, Swift is not hard but it is huuuuge.
Kitura should work fine on bluemix, it's an ibm framework on ibm infrastructure. Btw Linux prob is the best way to deal with even using docker you can have the same env locally and remote
Thanks for the guidance. Much appreciated.
You could add the view as a subview to UIWindow and it would stay on top in most cases.
There is basically nothing built in swift. . The majority of the lower level implementations needed to even build a CMS are all just wrappers for C or objective C. You're not going to see what you're asking for for some time. 
I have been testing Kitura since pre-Swift 3.0, still thinking docker is good with bare metal, not much difference in performance with VPS vs Docker on VPS.
So you program yours instead of doing it in the storyboard? I might try that! Thanks!
Just updated and released. Takes you from total beginner. (Updated with better link) Swift Programming: The Big Nerd Ranch Guide (2nd Edition) (Big Nerd Ranch Guides) https://www.amazon.com/dp/013461061X/ref=cm_sw_r_cp_api_NwPxybFV60FA9
They're great, as long as you remember to turn off `translatesAutoresizingMaskIntoConstraints`. I *really* wish there were a way to just disable that for my entire application. 98% of my problems with layout constraints have been because of autoresizing masks.
&gt; Why is get written as get { } where as set is written as set(variable) { }? I'm really not sure how to answer that. That's just what [accessors](https://en.wikipedia.org/wiki/Accessor) do. &gt; Is it possible to write get as get(variable) { }? No. What would that even mean? &gt; And is it possible to write set as set { }? Yes. Re-read the section "Shorthand Setter Declaration".
Yeah but.... did you try them?
Raspbian is a derivate of Debian. Ubuntu is also one. This is why the instructions might work
Exactly, and if is doesn't, there is also Ubuntu IoT which I wouldn't imagine is too slow, but I haven't tried it. 
Cocoa is a library. There is an open source version that is a bit dated called Gnustep. Also ObjFW might be a choice since it is less dependent. https://webkeks.org/objfw/ Or https://github.com/Midar/objfw
Something I've been playing with in my free time to gain a better understanding of some of the nuances of Swift--very much a work in progress, very much open to contributions as well! If anyone has any idea what is causing [this issue](http://stackoverflow.com/questions/41316937/swift-test-produces-symbols-not-found-for-architecture-x86-64-linker-error) I would much appreciate it üòÖ.
Lol, best advice I can give is get the basics down, then just start making an idea you have. You'll break down way more walls when you have an idea in mind and a rough idea on how to do it. Also, it's alot more interesting! The Stanford lectures get alot better after the 3rd one I think (whenever they finish the calculator). Good luck!
Its like OP is looking to be spoon fed.. in which case Linux might not be the best choice
Different languages order their alphabets differently. Therefore, when sorting text by alphabetic order, you use different rules depending on what language you're working in. For example, in Turkish, "kƒ±zƒ±l" would sort before the (imaginary) word "kizil." A user's "locale" contains information about how alphabetization works, as well as various other text formatting rules (like how to print dates and numbers) that differ from country to country. So when they say that Swift's character comparisons are not locale-sensitive, they mean that Swift's default comparison operators ignore language-specific alphabetization rules.
String comparisons may be different based on the input and how that input should be interpreted based on each language's rules. [MSDN](https://msdn.microsoft.com/en-us/library/dd465121.aspx) has a pretty good explanation of locale sensitive operations and their use cases as it pertains to the C# string apis. I think it's a reasonably concise article that covers the basics.
Thanks!! :)
[removed]
have you looked into UIStackViews? They are great and once you put objects in a stack view, you can put a constraint on the whole thing.
and our response was to raise our umbrellas, 'Hi!'
Some languages that are based on the Latin alphabet also have multi-grapheme letters. For example, in German, "oe" is the same as "√∂", and in Spanish, "ll" (two lowercase Ls) is considered a single letter. How these are compared is complicated.
Anyone could help me ?
If, by "cross platform" you mean in the sense of "write once, run anywhere" then no. Swift is not that type of language. If by that you mean "the compiler and its standard library will be available on multiple platforms", then it already is.
I guess I should have been more specific. I'm looking at native Android.
There has been work done to make the Swift compiler target Android, but that's not nearly the same thing as being able, for example, to develop an Android app in Swift with Xcode, which you will definitely not be able to do.
https://github.com/apple/swift/blob/master/docs/Android.md The Swift compiler builds for Android and the Swift standard library runs on Android. The problem is you can't use Android APIs. 
In theory, you could make a module map for the C binding and use it from Swift, yes. I don't know if that's been done yet or not.
Sorry for the late reply, yeah I changed the code so that i could post it here. the function does work. I used callbacks methods in the past but I have been using table view controllers so when I get the data back I just refresh the table but I wasn't sure on how to do that with an image. 
I wonder if it'll work with the NDK isn't that all C and/or C++ stuff? The Android APIs could be replaced I guess, but wouldn't that be the same challenge that NDK developers face? Either way, IMO, it's in Android's best interest to have a cross platform tool.
I wouldn't want them to go that path. Swift and ObjC are native compiled. IMO, Android should have had a true native code compiler already. Java itself is a good lang, but they really should have made a native compiled version. I've done bytecode before and really don't see any advantage to it. If Apple can force a language change this deep into the ball game, so can Android.
This is just my personal opinion so take it with a grain of salt (is that the right phrase?). iOS can run natively because the OS, the CPU, GPU are all compatible together. Android on the other hand, runs in almost all devices that are not Apple's. That's why it is easier to use a managed environment like Hotspot on top of Linux. If they went native, it would be a hell for developers because developers would need to optimize their code for various CPUs, devices etc. But now Android does most of the work and of course developers optimize it but they wouldn't need to optimize it as if they are building a C/C++ app.
&gt; Raspberry Pi Which runs linux. &gt; macOS, iOS, tvOS, watchOS Is basically the same? Just different apis What do you mean cross platform? With cross platform he/we mean cross platform. No #ifdef linux because api calls are named differently on different os. It means being able to use source code written for mac os to compile it on a windows/linux/(OpenBSD) machine and experience the same program behaviour as if it would have been compiled on mac os. That being said it doesn't seem like apple really cares that much. It seems like the impelementation of cross platform functionality is delegated to the community. For comparison: * Go's development started in 2007 and 1.0 was stable (+cross platform) in 2012. * Swift's development started in 2010 and the first version was released in 2014 although the more "usable" version 2.0 was released in 2015 Just like Go, Swift took 5 years to develop into a nice language. The main difference is the Go (and most other languages) are developed with cross platform in mind from the beginning. Apple instead focused on cross language interoperability (ObjectiveC - and C which most other languages also do). This is totally fine because as Apple, being the inventor, profits from interoperability between languages more than from cross platform. 
&gt; different CPU architectures. Two (+ 32/64 bit differences)? iOS, tvOS, watchOS are all ARM based, which is/was already supported by llvm.
Me and probably many others here have learned many comp langs. They've tried for many years to make the 'best' lang. easy, powerful, etc... Swift has some cool things. I can see getting very used to some of these things. There's parts of programming that you really can't avoid. There's a balance between making things easy and keeping the system powerful. There's something about programming that most people don't see right away. It always does exactly what you tell it to do. The 'bug' in the program is some human that has screwed up somewhere. There's tons of stuff we're asking the system to do, it's not going to be 'easy' computer programming is a science. Swift with playgounds alone is a great way to learn. I was testing code as fast as I could type it (almost). This stuff is going to be good.
swift is a language, not an api. you need to learn the difference. apis are defined by imported frameworks. foundation, which *is* a framework, is open source and is API compatible on linux. same with libdispatch, etc. if you are looking for UI, UIKit is not open source and won't be anytime soon.
I'm not sure what you're talking about. Nobody runs Hotspot on mobile devices -- certainly not Android or iOS. Android developers build DEX files, which are compiled to native code at install-time. iOS developers build LLVM bitcode, which is compiled to native code at App Store submission time. Technically, they accomplish essentially the same thing, through different means. (Apple doesn't let users install apps from anywhere, so they don't need on-device compilation. Android doesn't have a centralized App Store, so they can't provide that as a universal service. Both are reasonable tradeoffs.) Android development *is* often hellish today, due to all the weird hardware differences, but that's not an area where JIT versus AOT matters. You can write a good or poor interface in either environment.
&gt; foundation, which is a framework, is open source and is API compatible on linux. Foundation is open-source, but lots of it just is a thin wrapper around CoreFoundation (which is not), and there's still lots of "// not implemented" methods in (non-CF) Foundation. 