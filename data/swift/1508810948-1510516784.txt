This
This is just a rebranded version of Dash.
Hmm, yep. Maybe when I made my earlier comment I was testing using the interpreter rather than the REPL.
I've released an animations library called [ViewAnimator](https://github.com/marcosgriselli/ViewAnimator) that was featured on [iOS Dev Weekly](http://iosdevweekly.com/issues/323#start) and [Natasha The Robot](https://swiftnews.curated.co/issues/147#start) newsletters. I'm on the works with [MengTo](https://twitter.com/mengto) to release the iOS app of his new book [Design+Code](https://designcode.io). Pretty exciting stuff! 
Yup. Most upvoted right now is way off. This is dead on
Read what the exception is telling you: &gt;Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'attempt to insert row 4 into section 0, but there are only 4 rows in section 0 after the update' I'll grant you it isn't particularly clearly written, but here's your problem: row indices are zero-based, so you have rows 0, 1, and 2, and you're trying to insert a new row at index 4. `meals.count + 1` is the root of your problem. 
Are you new to programming? The question is trying to probe how you think about the program/code. If the question leaves you stunned I will assume that you have no idea what you're doing. Please note that, in very small programs, there really is no architecture at all. In any case, the correct answer usually just names the major conceptual components of the application and talks about how data flow between them, or how changes in one component affect other components.
Very nice! Thank you.
I did the + 1 on purpose to cause a break. Just to see how to look at the call stack to find where the crash occurred. Swift stack trace doesn’t should corresponding source line. Names a mangled. I want to know if there is a way to find the source line where the crash occurred from the stack trace. 
Very interesting, bookmarked. Will definitely give it a read and try to follow along. Thanks for sharing!
[removed]
Sorry, it looked like your question was your standard "why this crash?" I might suggest not sticking the actual question deep in the midst of a stack trace next time. [The section about symbilicating crash logs](https://developer.apple.com/library/content/technotes/tn2151/_index.html#//apple_ref/doc/uid/DTS40008184-CH1-SYMBOLICATION) in this Apple technote might point you in the right direction. 
You're not wrong in general, and I agree that any abstraction can be broken through misuse, hacks and workarounds by devs who don't know any better. (And to be fair if you have devs that break abstractions like that, then better to make it harder than easier, no?) But in this particular case there's still better options than NotificationCenter. If a language gives you options that fit the use case, then use them. A delegate would be totally fine here, signify the intent of the abstraction, and be much harder to misuse.
Docsets that Dash shares with Zeal are the only connection. Zeal is an open source effort to provide Dash-like experience on Windows and Linux.
You could convert your App Store license for Dash into standalone one, maybe still can. Try contacting the Dash author.
Ahh, of course. Sorry, that should have been obvious. Thanks!
This is a solid point and I don’t disagree.
Possible solutions: 1. Run macOS in a VM. 2. Install macOS on your PC. -&gt; /r/hackintosh 3. Get a cheap, used, Macbook Pro or Mac Mini.
I'm actually installing MacOS in my CM right now:)
Sadly you are in the "tutorial limbo" that turns into a do it by yourself phobia and most important, sometimes it drains your creative . Advice: go to the app store rankings, choose the category you like and use with your phone the most (Tip: focus on the main feaure, not in extras or how cool looks). 1- Decompose the main feature (Even a messaging app you can use mock messages , also skip login, registration, etc -&gt; IT IS OUT of the main thing) in a pieze of paper, then clone it, DONT try to be smart using the latest fancy framework or arquitecture... do not follow step by step from your learning resources... just do it until it works, even if you have to run into a cyclomatic huge ship. Use source control to check back your progress later 2- Once it works, you are ready to apply what have you learn (better pattern, abstract parts into a different architecture, use another persistency method, etc) step by step. 3- Repeat 1-2 and suddenly you will discover what uikit, coreimage, etc can do for you, this will be the spark for your creativity. Hope it helps
I clicked download and it literally redirected me to Dash.
The main page has download buttons for windows and linux. Then it says "Get Dash for macOS". It's not rebranding anything, Zealdocs is not available for macs, so it gives you an alternative for your platform.
Play around with cocoa pods and find some pods online that can spark your imagination and get your creative juices going. I have added pods to an empty project in the past just to go through code and see how different people approach things in different ways. This can really spark that idea you need to get your first major project going. Once you have the project started your creativity and drive to make the app great will probably take over and carry it from there. Don’t be disappointed if your first major app looks ugly at a coding level. As long as it runs the way you want it to you have conquered that goal of creating your first “thing” on your own. Your second project you can learn from your first and better organize your code and use better practices. Or you can redo your app with that in mind.
The pasted stack trace is already symbolicated. 
AWS Free Tier?
It's a little unclear - but just call your function inside the completion handler? Otherwise we'll need a bit of code to understand better
Inital View controller: func disaster(completeion: ()){ let jsonURL = NSURL(string:"https://api.reliefweb.int/v1/disasters?appname=TRI&amp;limit=30&amp;preset=latest") let request = NSMutableURLRequest(url: jsonURL! as URL) request.httpMethod = "GET" let config = URLSessionConfiguration.default let session = URLSession(configuration: config) let group = DispatchGroup() group.enter() let task = session.dataTask(with: request as URLRequest) { (data, response, error) in guard let data = data else {return} do { guard let json = try JSONSerialization.jsonObject(with: data, options: .mutableContainers) as? [String:Any] else {return} guard let ListofThings = json["data"] as? [[String: Any]] else {return} for i in 0..&lt;ListofThings.count { guard let fields = (ListofThings[i]["fields"] as? [String : Any]) else {return} name.append(fields["name"]! as! String) self.reportlink.append(ListofThings[i]["href"] as! String) } for i in 0..&lt;ListofThings.count{ let jsonURL = NSURL(string:self.reportlink[i]) let request = NSMutableURLRequest(url: jsonURL! as URL) request.httpMethod = "GET" let config = URLSessionConfiguration.default let session = URLSession(configuration: config) let task = session.dataTask(with: request as URLRequest) { (data, response, error) in guard let data = data else {return} do { guard let json = try JSONSerialization.jsonObject(with: data, options: .mutableContainers) as? [String:Any] else {return} guard let ListofThings = json["data"] as? [[String: Any]], let fields = (ListofThings[0]["fields"] as? [String : Any]), let country = (fields["primary_country"] as? [String:Any]), let location = (country["location"] as? [String: Double]), let ListofCountries = (fields["country"] as? [[String:Any]]) else {return} if ListofCountries.count &gt; 1 { var Countries = [String]() for p in 0..&lt;ListofCountries.count{ Countries.append(ListofCountries[p]["name"]! as! String) } AffCountry["\(i)"] = Countries } lat.append(location["lat"]!) lon.append(location["lon"]!) descrip.append(fields["description-html"]! as! String) if i == ListofThings.count{ print(AffCountry) group.leave() } } catch let jsonErr { print("Error", jsonErr) } } task.resume() } } catch let jsonErr{ print("Error", jsonErr) } } task.resume() group.wait() } func SwitchViews() { let storyboard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil) let vc: UIViewController = storyboard.instantiateViewController(withIdentifier: "Tab") as! UITabBarController vc.transitioningDelegate = self present(vc, animated: true, completion: nil) } First View controller - override func viewDidLoad() { super.viewDidLoad() var substr = String.SubSequence() for i in 0..&lt;name.count{ if name[i].rangeOfCharacter(from: CharacterSet(charactersIn: ":")) != nil{ let index = name[i].index(of: "-") ?? name[i].endIndex substr = name[i][..&lt;index] let name1 = substr.characters.split(separator: ":") print(String(name1[0]) + String(name1[1])) }else{ let test = AffCountry["\(i)"]! for element in test { if element == test.last{ print(element) }else{ print(element + ", " , terminator: " ") } } } } } I start by calling disaster(switchviews). When I edit my phones wifi or cellular strength so it won't be able to download JSON data as fast, I crash on let test = AffCountry["\(i)"]! in the view controller I just presented
Or one could use a #colorLiteral
https://pastebin.com/ZrmXwv6i There is the code. I start by calling disaster(switchViews) which switches the view and everything there works, But in the view did load of the view it presents is where I'm getting the problem. Most times it will crash at let test = AffCountry["\(i)"]! but only if I slow down my cellular or wireless signal so it takes a long time to download the JSON data. I need to make disaster wait until all of the data is downloaded until it calls switch views
Full Disclosure: I work at Heroku Heroku is a really common choice for hosting the server-side of a ton of iOS apps, especially our free tier. Definitely check it out. 
Take a look at DispatchGroup. Call .enter() when making the GET requests, call leave() in each completion block, and do a .notify() to continue when the group is empty.
The Swift docset in Dash (which is also used by Zeal) is deprecated. This is because SwiftDoc.org hasn't been updated in a long time and I've decided to remove the docset from Dash as it became outdated.
It's not fully symbolicated. It's missing the source file names and line numbers for his code. 
Then it's basically irrelevant in /r/Swift, I guess...
I wrap my calls in an nsoperation and add them to an nsoperationqueue then I wait for them to all finish
I read the news at the time. But for some reason I lost my license (I think I deleted Dash or something, I can't remember), so I couldn't transfer over...
The easy dumb way to do it would to be to use NSData(contentsOfURL:) instead of the more 'proper' classes. It blocks.
Since Xcode 9 you can define you’re application colors inside the assets. Then you can them in the infterface builder and code. You can also write a extension to acces them and use them like UIColor.applicationRed. 
Welcome to XCode swift crashes. I guarantee this output was from Xcode in debug mode. Source File: FoodTrackerMealTableViewController, if this wasn't symbolicated you would see memory locations instead. XCode 9.1 is suppose to improve these outputs if I recall correctly. 
Normally you can demangle Swift global symbols (`_T`) with `xcrun swift-demangle`, but the 011 syntax looks funny, and my version can't handle it. Is that something new in Swift 4? Or did they get extra-mangled by Reddit because you didn't quote it?
I assumed this was a crash log, but I downloaded the demo and made the same error and you're right - this happens right in Xcode. God bless Xcode.
I didn't know that, thanks.
So... now we don’t have to /255 ? That’s cool I guess. 
Thanks! Sorry I didn’t made clear this is a learning exercise to understand how to read Xcode/Swift call stack trace, to learn how to debug this kind of runtime crash. I am reading the “symbolicate” technote. Does it apply here? My call stack is from Xcode. It should already be symbolicated, right? What location info is in the call stack output? Machine code? SIL? I want to get Swift source line number. Possible? Can Xcode/Swift call stack be like Java stack trace: show source line? If not now, eventually soon? 
You are right. The call stack is copied out of Xcode debug console from debug run. Do you see source line from the call stack? This is what I want to learn how to do: demangle call stack to get back to the swift source line where the crash took place. 
“God bless Xcode”? Can you get back to the Swift source line from this Xcode/Swift call stack? I keep hoping this is possible. Just that I don’t know how. 
That’s a sarcastic comment on how the tools should be more capable now that Swift is 3+ years old. When you’re debugging in Xcode, it should be showing the line numbers in the call stack, and the editor should be highlighting the relevant line of code. That it frequently fails is unfortunate. 
UIColor's what? /pedantic
Most of Foundation has been reimplemented. To check if certain things aren't, search for NSUnimplemented in the sources. You'll be fine if you do regular testing along your app development.
I see. Thanks! Will Swift crash call stack ever be like Java stack trace: showing source line number? Or this is not possible? A new language like Swift should be able to do so by design. 
https://medium.com/ios-os-x-development/be-literal-76e9b4389eda
Two additional ideas (which work in any language): 1. Use a state machine, where "entering" a new state, you do a new request, and when your request finishes, you "transition" to a new state (either the next "request next JSON piece" or "request failed / error" state) 2. Use a "futures / promises" concept / framework; what you do here is chain all of your calls ahead of time, and when the "future" happens, the "promise" executes on the "yes, this worked" path, and an "error promise" executes on a "no, this failed" path Personally I use State Machines for this kind of thing in Objective-C, C++, and Java and it works quite well for me. The learning curve for either option I've presented might be a little high, but ultimately you'll save yourself some headaches in the long run. For Swift, there are two frameworks that might suit you: * [SwiftyStateMachine](https://github.com/narfdotpl/SwiftyStateMachine) - State machine framework for Swift * [FutureKit](https://github.com/FutureKit/FutureKit) - Futures / Promises framework for Swift Now that said, *I've used neither framework*, however based on looking at their READMEs, I've confidence that they'll help you with this issue.
Not sure what you mean by underlying mechanics, but Paul Hudson's books (@twostraws) are good bet, even after you move away from beginner level stuff
It does already, just not 100% of the time. For example, I went into MealTableViewController and altered `let meal = meals[indexPath.row]` to `let meal = meals[indexPath.row + 300]` to get an out of bounds exception, and [here's what happens](https://imgur.com/a/tBgrW).
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/GQXKed4.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
I am writing [Swift in Depth](https://www.manning.com/books/swift-in-depth) , At least the title seems to match! :-). I also have a 39% discount code: 39veen 
'Swift Fundamentals' was a good one (Matt Neuburg)
I looked over your pasted code and have a few notes for you. 1. You completion handler in `disaster()` is wrong and actually runs before any of the code in that function, replace it like this: `func disaster(completeion: @escaping () -&gt; Void) {` 1. Add an explicit call to `completeion()` in your disaster function once you know you've gotten all of your data 1. Call `disaster` like this now `disaster{ print("disaster done") }` 1. In your completion function enable whatever button/control/function you have that allows transitioning to the second ViewController that will use your data retrieved in the `disaster` call 1. Don't forget to disable whatever button/control/function that allows transitioning to the second ViewController when your first ViewController appears The problem you have is one you will face many times in your career as a developer, it's called a race condition. Basically what this means is that you have 2 different pieces of code attempting to use the same resource but you have no way of knowing which piece will access it first. The notes I've given you solve the problem in on way (prevent the second access from happening until the first one is done). One last note. Slowdown, pay attention to the code you are writing, there are many typos in your code that will only hurt you in the future. Also taking a little time to work with formatting and spacing to make your code more readable will save your sanity in the long run. :) Just remember in a programming career you will read way more code than you will ever write, so make it easier on your future self and others to be able to read your code easily.
Check books at objc.io
I use them to define safe constants for the keypath string used in key-value-observing (KVO). The #keyPath contents are checked by the compiler for correctness so I know whether it’s got a typo or not. 
Thanks! In this case I think my book [Pro Swift](https://www.hackingwithswift.com/store/pro-swift) is as close as I have – it goes into detail on how to use features like operator overloading, generics, functional programming, and more.
Wow this subreddit is the most helpful tool I’ve found. I’m a new programmer and taught myself swift and so a lot of this is trial and error and stack overflow lol. But thanks everyone.
Thanks man that was all very helpful. What tips do you have to be a better developer I’m new. Also what kinds of typos do you see? I just want to know to fix them and get better. Thanks 
I couldn't agree with this more. I'm working through the first Hacking With Swift book now and love it but, once I'm done I'm jumping into my own projects in fear of sticking with step by step tutorials. Use tutorials as a resource if you really get stuck but try your best to work through it on your own using resources like Stack Overflow and Google.
Its more!
iOS 11+, unfortunately :(
I was proficient enough to start my own projects once I finished the Hacking With Swift book. Started as a total beginner with no programming knowledge. My app is still a work in progress but it's so much fun trying to debug and problem solve little bits of my app each time. It also becomes exponentially harder when you have to solve a problem that has no direct correct answer to.
Just things like completion, you wrote completeion, so if I wasn't using autocomplete or if it was broken I would have wrtiien broken code and not known why. Basically when writing code you want to pay attention to all of the details (spelling, consistent formatting, erc.). It's the littlest things that can be the biggest problems. When it comes to whitespace and formatting I like to place code that is doing the same stuff together with whitespace before and after, like your block of code that is pulling data from the JSON into local variables. Another formatting thing is to try and avoid highly nested/indented code, sometimes this can't be avoided but if you are thinking about it it should make your code more readable. 
Thanks! You must be using Xcode 9.1? I tried the same on my 9.01, the crash message points to the exact line on the code editor. But have no call stack. It only show &gt;fatal error: Index out of range &gt;2017-10-24 17:44:09 738930-0700 FoosTracker[38560:1522069] fatal error: Index out of range Good to know things will get better soon. Surprise they have to work on this case by case. That’s tough going . 
No, I’m using 9. Did Xcode not jump to the offending line? Does the stack trace in the debug navigator on the right not show the appropriate information? If you want to print a textual stack trace in the debut console you need to use the command `bt`. Xcode won’t print it by default if it was able to identify the issue properly in the editor. 
A very useful hint indeed.
So much truth. The book has been really great, I’m almost done with it and excited to start my own project. 
Okay I got it. It work the same here. I did not see the `bt`. In my original case, the detail call stack is printed in the debug console without needing to issue `bt` Thanks again!
It’s compile-time checking of key paths. If you input an incorrect string then app functionality won’t work. #keyPath can also check if a property is observable to begin with too, making it even safer. Always use #keyPath where you can.
I use 'em when I have several similar properties: func getValue&lt;T: SomeProtocol&gt;(writePath: WritableKeyPath&lt;SomeViewModel, T?&gt;) { Storage.request(T.query) { [weak self] value in self?[keyPath: writePath] = value as? T } } getValue(writePath: \SomeViewModel.someProperty)
UIColor's what? It's UIColors, not UIColor's. Why are you trying to make a plural by using an apostrophe? English doesn't work that way. Don't do that.
&gt; define you’re application colors your* application colors you're = you are This is grade school English. 
It's* more.
It's not being pedantic. It's simply the right word. 
I just wrote my category on UIColor with UIColor extensions to make this easy. 
Hello! I'm glad you both are working / have worked through my book – it was designed specifically to make you learn by doing, so my hope certainly is that you can tackle real apps by the end. If you follow the guidebook it sets regular challenges to help you create your own apps from scratch, and hopefully you were able to try some of the homework too; another important way to get busy writing your own code. You've just got to dive in and try. If you fail, that's OK – we all have grand app ideas that go nowhere. There is no learning without struggle :)
I'd get a macbook - if you track one down for right price it should only cost you 150-$200 in depreciation over 18 months. Not bad.
No, I actually meant its more, as in "more belongs to UIColor", not as in "more is UIColor".
Architecture is strategy. Design patterns are tactics.
Writing math expression parser to build the expression tree. I am going to use the expression tree to able to analyze the players answer in my app called "math infinite problems". 
The book was great that there were set projects that taught different things. When I was a total novice nothing really made sense so it was useful to follow a step by step guide to build something that works, and then to be able to tweak it to see how changes the app behaviour. Personally I would have like a bit more MVC, explaining object lifecycles and what the app.delegate does, and a bit less SpriteKit. But overall it was a really useful book.
Everyone's different, and I tried to include a range of topics. SpriteKit is particularly tricky because some people just don't want to make games, so I made sure the SpriteKit tutorials taught other things too: timers, asyncAfter, AVAudioPlayer, shake gestures, Core Motion, randomization, etc. If you're looking for things like MVC, that's in the follow-up book [Pro Swift](https://www.hackingwithswift.com/files/pro-swift-toc.pdf), along with a lot of other more advanced material!
IIRC it is possible, but at this point I've forgotten how to do it. Piece of advice: skip array controllers and bindings magic and just set up the table view the old-fashioned way. Every time I used bindings, the magic seemed great and convenient in the simple case, and then a confusing mess as the app got more complex; it always ended in me tearing it out and redoing it properly so that I had full control over what was happening. 
I guess I imagined all the swift on linux folks then...
You should probably create a Launch Daemon and use [launchd scheduling](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/ScheduledJobs.html#//apple_ref/doc/uid/10000172i-CH1-SW2) instead. `cron` is a deprecated approach.
You're saying that an apostrophe doesn't mean, "An 's' is coming!"??
It mostly works. I'd try out the components you intend to use before relying on it though.
Yes create a launch daemon.
You could add all the values from the array into a [NSCountedSet!](https://developer.apple.com/documentation/foundation/nscountedset), then go through the set and check the count-variable to see if its bigger than 1. 
I don't know of any eBooks but I'm currently doing a course on Udemy which I got on sale for £29 (£200rrp) and he touches on so much swift content. its called The Complete iOS 10 &amp; Swift 3 Developer Course. by Rob Percival 
I've used them in this code block // When we have large navigation bars, observe the height of the searchBar (when present) to dynamically show and hide the custom shadow if #available(iOS 11.0, *) { if let searchController = navigationBar.topItem?.searchController { if searchController != observedSearchController { searchBarHeightObservation?.invalidate() searchBarHeightObservation = nil observedSearchController = searchController } searchBarHeightObservation = searchController.searchBar.observe(\.layer.bounds, options: [.initial, .new], changeHandler: { (searchBar, change) in if let newBounds = change.newValue { self.navigationBar.setCustomShadow(hidden: newBounds.height != 0) } }) } else { self.navigationBar.setCustomShadow(hidden: false) } }
[mp4 link](https://g.redditmedia.com/-fiKXopN9rgyZRsu-HuY8-4zs0rC6Jgx0OhUDEvnn9Q.gif?fm=mp4&amp;mp4-fragmented=false&amp;s=840de4f6436000411781060693eebd5f) --- This mp4 version is 96.96% smaller than the gif (1018.18 KB vs 32.66 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
for element in intArray{ let filteredArray = intArray.filter{$0 == element} if filteredArray.count &gt; 1 { filteredArray.forEach({print($0)}) print("There is more than one occurence of a value") break } }
Thanks - I'll keep that in mind. I have a basic understanding of creating tableviews programatically already. I thought bindings would help make the app less complex with less code. Will probably have to refactor at some stage, but will leave as it is now until I have the functionality part of the model working fully. Good to understand there may be minefields down the road though with bindings.
For items that are comparable, you can sort the array then just iterate, comparing the current value with an adjacent one. This doesn’t leverage anything in Swift in particular, but it’s a common technique that can leverage mutable arrays to prevent additional memory use and is often faster than other methods.
You heard about reusable from Ali... ?
I actually had this EXACT idea a couple years ago. Glad somebody made it!
https://www.udemy.com/dna-hacking-with-swift-4-xcode-9/?couponCode=SWIFTDNAFOR25 
Not at the moment, no. If you just care to do something during initialization, you shouldn’t need to override `encode(to:)` though. Do you have an example that you can show?
I found a workaround for now. It would be nice to be able to do this though.
[removed]
&gt; I've run across NSTask (now Process?), but that seems to only allow shell scripts to run. I'm not sure where you got this idea. There's nothing about NSTask/Process that's specific to shell scripts.
There's many such questions on StackOverflow, but none with a better answer than yours, in the general case.
Doesn't that run in quadratic time?
If you only care about finding whether or not there were duplicates, put the items in a set and compare the count of both collections. If they’re different, then there were duplicates. 
Guess it was just the Ray Wunderlich tutorial I found that made me think that 
I couldn't find anything on SO, perhaps due to the search terms I used. However it seems my initial find is perhaps not too bad. Measuring its performance, it's okay for "small" stuff; on my base model 2016 15" MBP it took 0.022071 seconds for an array with 1000 Int elements. 
haven't* It's tableViews*, not tableView's. In English, we do not make plural nouns by adding an apostrophe. --------- Now that that's done… Please post your code somewhere in a project so I can take a look at it. I have spare time for the next hour. This would be nice to experiment on, understand and fix. 
Awesome - thank you. Sorry I'm usually a grammar nazi too and busy at work so I typed this up quickly. :) . Will post it shortly for you
for the lazy https://github.com/AliSoftware/Reusable
it does a bit
Strings are Swift’s achilles heel. Implement a text viewer that tracks word and character frequencies for very large documents. Display the total and current figures as you scroll. Here’s a plain text version of war and peace that should make things interesting: https://archive.org/stream/warandpeace030164mbp/warandpeace030164mbp_djvu.txt
😂 i'll get started!
Obviously I had a recent painful Swift strings experience! It’s much better in 4, if you really want to feel the burn, do it in 3. Another nasty “test” is interfacing with any moderately complex C library, Calling SQLite APIs should be a challenging one. Do Strings first though, there are a bunch of tricks there to figure out.
Strings are every language's achilles heel. (What percentage of security issues in the past year are *not* related to strings, somehow?) Swift does better than most. At least its idea of a "character" bears some resemblance to what a person would call a character, unlike almost every other programming language in the world.
Does it have to be *in* Swift, or just *involve* Swift? If you picked an easy bug from the Swift bug tracker, and fixed it, that would be fantastic.
A bit? :-)
[Here](https://stackoverflow.com/questions/27624331/unique-values-of-array-in-swift), [here](https://stackoverflow.com/questions/41272542/find-unique-values-in-a-swift-array), [here](https://stackoverflow.com/questions/40579554/how-to-display-unique-elements-of-an-array-using-swift), etc. 
Well, it’s “better” now that they’re a collection again, but working between arrays and strings is still an ugly proposition. It may be mischaracterized (ha) in other langs, but string[i] is pretty standard stuff, it’s not a mystery what the dev is after.
Where do you see that ? Is swift implemented using swift ? 
I need a color picker for iOS, that I can embed in my apps. I’m currently using an outdated objc component. Would love a good swift impl.
DNA Hacking with Swift 4 | An Intro to Bioinformatics https://www.udemy.com/dna-hacking-with-swift-4-xcode-9/?couponCode=SWIFTDNAFOR25
https://www.udemy.com/dna-hacking-with-swift-4-xcode-9/?couponCode=SWIFTDNAFOR25
1) Make a function that accepts a string parameter and returns a Boolean 2) If the string is not a valid piece of swift code (doesn’t compile) then throw an error 3) If the program finishes, return “true” 4) If the program can’t finish (because of infinite loop) return “false” Challenge level: don’t cop out and just put a timer on it. Actually determine if the program halts or not.
No worries that was probably his highlight of the week. They’re called word thinkers. Unable to focus on bigger ideas. Will check it out when you post it as well
Make an XRP wallet, this challenge could also be quite profitable for you as well!
Where do I see what? The compiler is mostly C++, and the stdlib is mostly Swift, using a custom preprocessor.
self.tableView.estimatedRowHeight = 100? or whatever height your cell is. self.tableView.estimatedSectionHeaderHeight = 44 self.tableView.estimatedSectionFooterHeight = 1
First give it it's initial value (the one it should always be) and then also provide it automatic dimension in case it needs to grow or auto layout itself. example, for a cell I'm doing personally. tableView.estimatedRowHeight = 75 tableView.rowHeight = UITableViewAutomaticDimension
Test123
Didn’t realise that - I though most of It was built in lower level language. How do you see where there are easy bugs to squish ? Would be great to help out 
What's the license? Free isn't free. CC-BY has different implications than Public Domain or CC-BY-NC-ND-SA or GPL or MIT.
Thank you! Moving the sizing to viewWillAppear instead of viewDidLoad solved the issue. Most be some behind the scenes change in the lifecycle for iOS 11. Thanks!
That’s the one, I was the lazy one :)
I never feel the need to subscript a string with an integer. Do you have an example of why you'd want that?
When you say "achilles heel" what do you mean? Functionality or speed or memory use or complex syntax?
Any programming competition, anything dealing with a string on project Euler. Any highly optimized, time and memory sensitive string operation. See my parse War and Peace exercise above.
Anything more specific?
#keyPath is the old string-based Objective-C key path feature. The new "type safe" keypaths added in Swift 4 is \.foo.
You should file a bug report, the compiler should not crash.
Indexed access to sections of a String, exactly that. In terms of function, speed, memory use, it’s very good for 99.99% of use cases. It’s not so good for comparing sub strings by index to identify a difference at a given offset for example.
recreate windows 98 in swift. 
Not sure if you're trolling... Not only are you asking them to build a parser that parser the Swift language, which is insanely hard, but you also want them to determine if a program halts or not which the Halting Problem tells us is impossible?
Or you can use a regular `Set` and do the check each time you insert an element.
Go to the Euler project and start solving problems. https://projecteuler.net/archives
Thanks, especially for that last one which has a very interesting answer if you want to retain order (I don't, but nevertheless that answer is quite succinct).
Sounds like I had pretty much the same experience as everyone else. They contacted me unsolicited a few weeks ago, and I just had the phone interview today. I had the same reservations looking over the site and the fact the domain/company had just been set up. I also got the same odd call center vibe for the interview. Waiting for the test which I assume will be the same as has been mentioned here. I'm a contract developer anyway, so I'm not too worried if this opportunity flakes out since I'll just move on to the next thing. When I checked the company info for Beta Particle previously I believe it was classified as a foreign held corporation. Looking at the sample code I saw a reference to a StORM import which is seems to be based on the Perfect server side Swift project. I'm not really sure what their angle is here, I'm inclined to continue the process just out of sheer curiosity.
It’s also good practice to cache the height of a cell somewhere once you have it for each row that way it will be less jittery and you can use the height for an indexPath if you have it. 
Sort a list. Multithreaded. Verify and measure the performance of your results your results using xctest.
I challenge you not to shitpost the sub! :)
Just have a little way of getting t a credits section, and just have a link to the site you used there
Strings used to just be arrays of characters. Old habits die hard.
https://bugs.swift.org/
If you can’t find the license or get in touch with the creator/rights holder of the image AND you want to be 100% legal, the answer is simple: find and use another image. 
Good advice - thank you
Same here. With Swift I never needed subscript. Instead I use regex or hasprefix/hassuffix. If I need raw bytes then I use Data.
Check out EFColourPicker: https://www.google.ie/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwj_6NbVg5HXAhXmJ8AKHX8IC5IQFggoMAA&amp;url=https%3A%2F%2Fgithub.com%2FEyreFree%2FEFColorPicker&amp;usg=AOvVaw3xS-IyZiyrmu196ug60G1b
Yes, it's a new xCode 9 feature!
It was in Xcode 8
Following your excellent recommendation, I just now checked it out. It seems pretty much like what I'm looking for. Thank you Disregard my color picker challenge.
"array of Type" So `Type` is an array? You're trying to subscript it with a string `Types["\(i)"] ` That might compile(hopefully with a warning) but it won't work. Try `Types[i]`
&gt; Any programming competition, anything dealing with a string on project Euler. So basically non-real-world problems, using text that's a subset of ASCII. I don't see how this is a reasonable measure of a language. If you want Golfscript, you know where to find it. &gt; Any highly optimized, time and memory sensitive string operation. I'm curious what exact situation you have cannot be optimized using Swift's string design. It's Unicode-safe-by-default, rather than fast-for-ASCII-by-default, but IME that doesn't mean it's impossible to optimize.
Then Unicode happened, and the meaning of "character" changed. Bytes were once 7 bits wide, too.
&gt; working between arrays and strings is still an ugly proposition Yes, it is, and always has been, in every programming language I've ever seen. That's because written text is not fundamentally an array. Working between arrays and musical notes is ugly, too. Or arrays and calendar dates. These all happen to have been encoded in arrays in the early history of computers, but that implementation detail is not flexible or useful for how people actually want to use them in the 21st century. In languages where it seems easier to treat them as arrays, that's because they make false assumptions, either about encodings, or composition, or normalization, or object lifetimes, or plane usage patterns. I've never seen a language where treating strings as arrays actually worked correctly and efficiently in every case I've needed. You get either efficient storage, or efficient random access. Swift prioritizes efficient storage, because random access is not often needed, and you can always unpack it yourself if you really need it, in whatever format you want. &gt; string[i] is pretty standard stuff, it’s not a mystery what the dev is after. OK, I'll bite. What is "the dev" after? The toy problem mentioned above is about a novel called (in its modern spelling) "Война́ и мир". Is `string[2]` the third byte (which encoding?), the third codepoint (which normalization?), or the third glyph? Swift forces you to declare which one you want, so there's no surprises later. In a sense, it's not much different from static typing. It's quicker and easier to just declare every variable as `id`, too. Swift also stores it efficiently in memory, so while you can't just type `string[2]`, that's consistent with the rest of the language where subscripting is assumed to be O(1). It's a bit syntactically awkward, which matches how it's a bit computationally awkward. It should be a big red flag that you shouldn't be doing (the equivalent of) `string[i]` much.
Yes, image literals. I wish I could turn them off, as they pollute the autocomplete for every case.
How do you know it's free, if you don't know whose work it is?
IMHO: The code is a mess of async + json + ui in the same place. Proposal: Split it up, so that json parsing is in one file, the async network code in second file, the uikit code in a third file. Write some tests for the json parser to ensure that json parser really works. Max 3 nesting levels. I see a lot of dangerous `for i in 0..&lt;ListofThings.count` that assumes things are at the correct index. Perhaps change to something safer such as `for thing in things`
a pleasure!
I prefer `// MARK` over extension for pieces that are a part of the class. I prefer extensions when I'm adding methods for a protocol. So if I were to create an object that mainly conformed to a protocol and just held data then I'd build a class like the one you are describing, but if that class had any native functionality that wasn't protocol based it'd be `// MARK` separated.
Exactly, that makes total sense. 
But I think the Set() might actually work in the same way.
Last time I checked, programming competitions took place in the real world. What if I wanted to use Swift for high frequency trading where stock symbols are always ASCII and need to be triaged in real time from a high volume stream and via a series of prefix trees to determine a course of action.
I think you could try subclassing UITableViewCell and applying the same trick bur only for this class
No, but DAMN that sounds cool.
I mainly make extension with `// MARK: ` so I could code fold
Keep in same file but use extensions. I find it easier on the eyes than mark comments. It also helps a little with conceptualizing API design and keeping an eye on state changes, IMO. But for god sake don’t make a ton of files- “extensions” files are for classes you don’t own.
Thanks for your response! Can you give me some example code, please? I do not understand how I would use just the code that you provided to solve my issue. Thanks! 
I understand the problem, but cannot find a solution. Do you have any ideas?
I have not, but from one Google search, it seems a lot more complicated than a solution to this needs to be. Do you have any ideas for a simpler solution?
☝
Are the buttons &lt;a&gt; tags? Are the hrefs https: ? Do you know about [Apple Transport Security](https://developer.apple.com/news/?id=12212016b)? What about your navigation delegate?
Sorry I didn't mention it, but my cells are already subclassed. If i try CustomCell.appearance().backgroundColor = UIColor.clear there is still the white background flickers.
Hi ioslift! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/798z8k/my_very_first_swift_xcode_game_on_app_store/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
🤔, and you do that in the AppDelegate, right?
Yes in the didFinishLaunchingWithOptions, it only works if I use "UITableViewCell". It must be a bug, because everything was fine on previous OS. iOS 11 is a mess. At the end I decided to change manually every static cell background colour, but it is taking forever. I hope there is another better solution.
Just make them dynamic, it’s very easy; and you don’t need to add constraints to a switch or things like that, just use the accessoryView for that. Make some enums with the label names of the section and its size too, or something like that to help you.
Thanks for the suggestion, but I use the storyboard and changing every cell to dynamic would take even longer. Thanks anyway 
I ran into similar problem, spent countless time on it and in the end was about to say this “hey this is a bug in iOs” I went throw following things 1. Over ride setselected methods of cell and see who is calling. 2. Replace whole cell and see if it still flickers. 3. Over ride uitableview mthods and play with selectcell method In the end i found that i had a special class for tableview delegate/datasource which was causing this behaviour. 
Is there something in speedTextField? Change the ! To an ? 
Yeah, i type a number in the field then press enter. When I change the !-&gt;? it says " '?' must be followed by a call, member lookup, or subscript" 
@IBOutlet var speedTextField: UITextField! @IBAction func startWorkoutButton(_ sender: Any) { textInputTest() } func textInputTest() { print(self.speedTextField.text!) } There could be two problems here. 1) if your outlet is not connected properly then your textfield could be nil. I recommend making the textfield optional like this: @IBOutlet var speedTextField: UITextField? 2) speedTextField.text could also be nil, so you need to unwrap before you use. Try this: func textInputTest() { guard let text = self.speedTextField?.text else { print("text is nil") } print(text) } This will unwrap text to confirm that it is not nil. If the text is nil then it will print text is nil. As a general rule, I like to avoid using '!' at all times. You make sthink it's safe in some scenarios....but....it is until it isn't. Hope this helps!
Well, I’d say either `speedTextField`is nil or `speedTextField.text`is nil. The quickest way to print the text would be something like: `print(speedTextField.text ?? “None”)` where ‘None’ would be printed in the console if the either of the two things are nil. The long way to do it would be: func textInputTest() { guard let textField = speedTextField else { print(“TextField is nil”) return } guard let text = textField.text else { print(“TextField text is nil”) return } print(text) This would print out the text or one of the error messages. It’s pretty long winded though. You’re probably getting the error because you haven’t connected the textField outlet in interface builder (storyboard). 
You need to unwrap the optional properly. If speedTextField is empty, i.e. nil, at the wrong point of runtime it will cause this problem. Try this textInputTest method instead. func textInputTest() { if let text = self.speedTextField.text! { print(text) } } Basically this is saying, if I can set this temporary let "text" equal to the value of the optional, then the optional is not nil because "text" cannot be made nil, so it can proceed to carry out the code in the if block. Remember this trick. This one of the most common and safest ways to unwrap optionals. 
I double checked that that textField outlet is connected ( was the first thing i thought of). `print(speedTextField.text ?? “None”)` also didn't work :/
I changed it from UITextField! to UITextField? and func textInputTest() { print(speedTextField?.text ?? "None") } what its just printing out now it "None"
My advice then would to be to check that you don’t set the text field to nil in your code and then maybe redo the outlet connection. I find that if an object is nil for no reason and IB is involved then it’s something in IB. 
Ive removed the connection and reconnected it many times, and those functions are the only things that are called.
Your textfield's text property will be nil if you either have no text, or it is not connected properly from your storyboard to your view controller. Perhaps try reconnecting your outlet?
The books at objc.io are amazing. Highly recommended.
[Dive into Spritekit](https://www.hackingwithswift.com/store/dive-into-spritekit) It’s new so uses Swift 4
Hi r/swift I'm the author of this repo, which I have just published, feel free to roast me! https://github.com/neoneye/SwiftySchwartzianTransform Last night I wanted to sort items by their `creation date` (which can be nil or an invalid iso8601 string). If there is no `creation date`, then the `id` is supposed to be used. I worked on it until very late in the night. Today I have turned it into a SPM package, that I hope can prove useful to others. Feedback much appreciated. 
Thank you!
Try pixabay, they have public domain commercial use images. 
I'm working on a really fun arcade game, almost done it too!
I just finished the Big Nerd Ranch iOS Programming Book (and have previously finished their Swift book). I'm leaning towards picking some random ideas and just trying them but I'm not sure what to try to build. Maybe a calculator and some simple games.
I guess you probably just want to keep that single menu viewco troller en dismiss the gameviewcontroller when it is over by calling dismiss() on it
Yeah! I did this instead because 1. We have way too many pods already, I don't want another one 2. I don't like their syntax for dequeueing. IMO `let cell: MyCustomCell = tableView.dequeueReusableCell(for: indexPath)` is worse than `dequeue(CustomCell.self)` as the latter reads better and is "Swiftier" than forcing an implicit associated type. 
Do I put this in the prepare to segue function?
 Class menuVC: UIViewController { func startGame(){ let gamevc = storyboard.instantiatevcwithidentifier self.present(gamevc) } } Class gameVC: UIViewController { func endGame(){ self.dismiss() } } Its not literal code but it should give you enough hints to google the rest of the idea. I am on my phone so I hope the code is formatted well
I guess (by already seeing what youve tried) that you are trying to access your textfield before your view is initialized. Try to add this before you access the textfield: let _ = objectwithTextfield.view This will force the object to init the views and make the storyboardconnections.
There’s also `popToRootViewController(animated:)` if the menu VC is at the base of the stack. 
id put that in viewdidload? 
I am! :) is it open source? Id love to take a look at it
I'm afraid at the moment we are keeping it proprietary. If you want to see it in action check out "Sprocket" by Pixonite. Are you building a game with yours yet? Did you name your engine?
Since you have an active membership system, you can just enforce checking on your server and refuse service from cracked apps. There's no way to remove server side checks without hacking into your server.
If there is a will, there is a way. Try as much as you wish, but someone with more time on their hands, and a strong enough desire, will crack your code. Best way, to do this... server side protection. Require subscription/purchase to use it. The UI can be app side. Meat and potatoes, on the server side. But really, if someone wants it, they're going to get it.
If at all possible, put some/all logic in the cloud. Client side, it’s really not that hard to turn a ‘jump if equal’ instruction into a ‘jump if not equal’ instruction in the compiled code. But, if doing this sort of server side work causes performance degradation to your customers, you really have to weigh up how important copy protection is to you. Also, if you put logic server side, make sure that is secure too :)
If it's just a simple check server side response, change the function that's returning "false" when not authorized, to "true". done. cracked.
If you make your app online only, I’m deleting it. No matter how _good_ it is.
Swizzle that!
* Never, ever trust the client. Ever. Server side checking always. * Operate under the assumption that every client is compromised. * You better not be trusting the client. Sanitize all your inputs. You do not want to be [Little Bobby Tables](https://xkcd.com/327/). * You do have a server instance in front of the Database right? Publicly accessible databases are asking to be broken. * I see you wanting to trust the client. Don’t. That server better have a great API on it, one that doesn’t just dump out information. Unless you want to be the next Equifax. * Finally: **Do. Not. Trust. The. Client.** As soon as you start trusting the client, you will get hacked. 
Lolz to that comic strip
Just ignore it. Most macOS users aren't that poor.
&gt; The user also needs to be connected to internet for the app to work so they can't just turn off internet to avoid the checks Depending on the type of application, prohibiting offline use could be a good way of pissing of your userbase. I would tell you to strive to make your app as invaluable as possible, and the paying users will come.
I'm on your side of this. I work in remote areas and the network connectivity can be anywhere from bad to nonexistent. If i can't work without network, I can't work. More and more people are forgetting how much of their user base MAY not have internet 100% of the time.
Prohibiting offline use is the only way OP would get me to use a crack for his software if I need it...
I didn't see your code sample, don't know if I missed it or you just added it but this is what I meant: The code you posted is on some viewcontroller lets call that one vc. If you try something like this: let vc = ViewController() vc.textInputTest() This will crash your program because the view is not loaded when you are trying to access the IBOutlets in textInputTest(). (Its an explicitly unwrapped optional which means that it still can have no value but you agree to make sure it has a value yourself). What you can do is making the IBOutlet an UITextField? but that means you just wont set it at the time you want, (printed 'None' as I saw in other answers). What you can also do is force the view to load by accessing the view, you would get something like: let vc = ViewController() let _ = vc.view vc.testTextInput() This would not crash because by forcing the view to load the IBOutlets are all set before you call testTextInput(). I hope this is more clear.
Speaking of note apps... I wish there was one that looks exactly like the 2007 notepad on the first iPhone. 
Well the implementation is pretty straightforward. But one thing frustrates me hard: I was forced to read sorces/tests to get how to use it. 
I wish someone could create a yellow legal pad style note app :)
This is also a great book for Swift Interview Qs: 100 Questions and Answers to help you land your Dream iOS Job: or to hire the right candidate!
I think the easiest solution for someone to get your paid features for free isn't to crack your app or hack your database, but create their own database locally and have your app point to it. That way they can use it offline and you'll be none the wiser.
Not just that. I work in tech in Silicon Valley and our office WiFi goes out pretty frequently. That in itself sucks. But if whatever app I was using decides to stop working during that time then I’m completely out of luck. Not to mention that there are so many places with limited or no connection. 
That's kind of like asking if a V6 car is easy to steal. Your choice of high-level language is almost certainly irrelevant to the security of your app. If your app gets cracked it will be due to one of the many platform-agnostic issues listed in the other replies here, not because of anything specific to Swift. If you're really concerned about Swift itself I'd say probably no, Swift apps aren't comparatively easy to crack. I can't imagine that there are any really decent decompilers or other reverse-engineering tools for Swift yet - certainly not on the level of C++ or Java or whatever other language you're considering. If that's your worry, though, you could always write your app in Brainfuck and export it as a static library with a minimal ObjC wrapper around it.
I will try to remove that unnecessary nesting level. Thank you
https://www.xkcd.com/1053/
HQ for me is in mountain view. The Wi-Fi is absolutely atrocious. I've built largeish Wi-Fi networks before, and I know it's tough, but god is it irritating. I pretty much restrict myself to the wired network when I'm in the office. 
Probably one of the best explanations on why people should sanitize inputs. 
So the user cannot use the app if offline? I’m not buying that. 
Swift is just like every other language, and anyone who cares to read and understand the binary code contained inside your app, libraries and databases will eventually find the right bytes to edit in order to bypass your checks. Editing data in a database file is far easier than editing opcodes in an app or shared library. You can make it harder by avoiding a single Yes/No point in your code for turning on features, but people who crack software do it for fun and then give it to people who actually want to use your software. Your best hope lies in the idea that most people are still honest, or at least uninterested in hacking your app. Downloading cracked apps is also risky - it’s as easy to inject a malware hook as it is to simply disable a feature check.
It's easy...You really only need raywenderlich.com and hackingwithswift.com :)
If the checks with the server are just asking whether a client side feature should be enabled, the client app could be hacked to ignore those checks. If instead the server can refuse to provide data the client needs if the check fails, a hacked client isn't a problem. So if you can move the logic to the server, that can help protect your system from piracy. If that's not feasible, you can use obfuscation to help protect your app. Obfuscation is no guarantee that hacking is impossible, but it makes hacking much more difficult. Arxan is one of a handful of companies that offer obfuscation. If I remember correctly, it has to match the language of the app, and there may not be Swift obfuscators yet.
Some ideas: 3 months ago I was looking for a team whiteboard app, but was unable to find a really good one. The best one I found is [realtimeboard](https://realtimeboard.com). Making an app like this requires both server and client. It could be a good place to use websockets. Port [jsondiffpatch](https://github.com/benjamine/jsondiffpatch) from javascript to swift. This is a very handy framework when using websockets.
Don’t bother. It’s really not worth your time. The most effective ways to prevent cracking are downright user hostile and will either drive your users to alternatives or provide a huge incentive to crack or seek out cracked versions of your app. Instead of worrying about cracking spend your time making the paid features truly worth paying for and making the payment process as frictionless as possible. Every hour you work on your cracking prevention is an hour not working on a paid feature. Every “feature” in your code opens up the possibility of unexpected behavior. So the time you spend working on keeping people from cracking your app is taking away from actual money making features and potentially adding hard to find bugs. Don’t ever look at crackers as “stealing” from you. They’re not stealing. Pirates are potential customers displaying their price sensitivity. You charge $X for the paid version but they don’t value those features for that price. Your upgrade process may not be easy enough or even available in their jurisdiction. Run sales and make your upgrade process super smooth. Even in the best case people will pirate your app. People truly dedicating to pirating your app just aren’t customers and you lose nothing from them pirating your app. Every minute you spend trying to punish them is *you* stealing from your paying customers. They’re the ones you should be fixing bugs for and focusing on getting them to pay you for version 2.0. 
I know a few ways to make cracking harder but they are all tricks I use in C and rely to some extent on the C preprocessor. They don't translate that well to Swift. That said...first rookie mistake is making a single function that returns true or false to grant auth - that provides a single patch point to enable everything. Using a preprocessor macro that expands verification checking code inline in a lot of places will make hacking harder and raises the bar a bit....but there are still good tools that can find and patch all occurrences and the really pro crackers will only be slowed down marginally. Using web requests to grant auth is also trivial to defeat. If you are at al familiar with what Umbrella did for jail breakers - it basically puts an entry into /etc/hosts to route the web requests to a local process that handles the request and returns the expected request. Get familiar with a proxy tool like Charles and you'll see what I mean. The bottom line is you can hack pretty much anything. The best idea is to make it inconvenient enough to hack easily and MORE IMPORTANTLY - make paying convenient enough - that its easier to pay than hack. 
While I do agree with you, why do you assume OP is making a dick move by doing this and not OP is making a chat app or a remote network monitoring app where...you need internet for the app to work? 
Everyone who needs internet for their work, should use a wired connection IMHO. I know that not a lot of laptops have ethernet ports anymore, but a $10 dongle fixes that.
``` import PlaygroundSupport PlaygroundPage.current.needsIndefiniteExecution = true ```
I figured it out - just grep out the error lines, like so: swift build | grep error
I didn't give enough information before. I know the image is free and usable because I have the license, which includes these lines: You are free to use this image: - For both personal and commercial projects and to modify it. - In a website or presentation template or application or as part of your design. For a website, they simply say to include &lt;a href="http://www.freepik.com"&gt;Designed by vilmosvarga / Freepik&lt;/a&gt; that credits the author and the site I got it from. I'm just not sure what the convention is to use a free image legally in an iOS app. Would you just do the equivalent of having this link somewhere in your app or is there a way to embed the license in the app or image without having a link? 
good question. I'm not exactly sure. I just have a copy of their license as a bare bones text file
Then find out what license it is or read the legal text yourself.
At home I don't use wired connections. Period. Don't have too (can't, for all reasonable definitions of wired. It's a rental and they don't want cable run or holes drilled.). Density of devices isn't so high that it causes any problems. In the office, if you have many meetings, wired connections are a pain. Try not to presume that what works for you works for everyone. Unless you're taking this from a security angle, in which case everything should be encrypted before transmission anyhow, you never trust the network you're on.
Honestly, you should handle warnings as errors.
I agree. I should have made clear in my post that this is really just about prioritizing addressing the errors, so I can compile. Another option is swiftc -suppress-warnings Test.swift but the grep approach is preferred for my purpose since I only need to filter out the errors temporarily.
Cool, thanks.
Given the options that are cross platform, is there still a demand for Core Data? I've been using Core Data for a good while, I have no real problem with it, it works. However, over the years we've been given a number of new choices. Q. Is the demand for Cord Data still there in the job market, or is it obsolete? If it's being replaced, what's the replacement?
Well the next option I can think of is using CoreData to store the images. This is much more permanent than NSUserDefaults. To store the images you would need to convert them into something which CoreData can actually store, which for images is NSData. Then when you want to load them back you would just convert the returned NSData back into a UIImage. To get the NSData representation of the image you would do the following: let imageData = UIImagePNGRepresentation(yourImage) or let imageData = UIImageJPEGRepresentation(yourImage, 1.0) // Note that 1.0 is a compression value meaning lowest amount of compression/best quality image. To convert it back to an image your would do the following: let loadedImage = UIImage(data: imageData)
Write them to the documents directory. 
Even looking past the storage of dates as possibly-invalid strings, this seems overly complex. Why not something like this? input.sorted { (parse8601($0.creation_date) ?? Date.distantPast, $0.id) &lt; (parse8601($1.creation_date) ?? Date.distantPast, $1.id) } 
https://www.udemy.com/dna-hacking-with-swift-4-xcode-9/?couponCode=SWIFTDNAFOR50
thanks!
The hard drive and RAM are not user replaceable in OP’s computer. 
I guess this topic couldn't wait until a proper recording. Also udemy spam.
is it spam season already?
Thank you, thank you, thank you !
Elegant. Comparing tuples like this, I never thought of that. That is a great way to do it. Thank you. 
No Problem!
The text field outlet is connected to a view controller, right? If the outlet is nil in the view controller, then you’re calling that function before the controller’s view stack has loaded. You could try `print(self.view)` from the controller. But I would just consider when you’re calling the function that interacts with the text field. Assuming the text field is in that controller, and the controller’s view is visible, this shouldn’t be happening. So I suspect you’ve connected to the wrong view controller, or your controller’s subclass (`MyViewController`) doesn’t match the storyboard. 
Why would you want to do this? Just leave them in their 'photo roll' and reference the images ID, you are wasting space by taking original images, unless they have edited them there is no point, the 'photo roll' manages the images perfectly fine and also manages the cloud saving aspect of them saving device space.
[removed]
[removed]
printing (self.view) works, and i double checked that the controllers subclass matches the story board and it does. but i think Xcode is having problems. I had to restart the entire project before because i changed a file name, and it refused to update the changes. https://imgur.com/a/tbvdu 
You have a spelling mistake on the first line of shell code: &gt; brew uprade vapor Just an FYI :)
I wasn't trying to spam, I posted a question with this. Looks like the question didn't make it into the post.
Thanks! Good catch :)
No worries, I’d thought I’d jump on this and ask if you’ve had any experience with the DB wrappers? I’m slowly (and really should put up on git.) a wrapper for MySQL that in turn I slowly want to use as a building block to a general DB wrapper system. I haven’t used the vapor wrapper but to me it seems like an ORM, is this the case?
The special counsel’s office told Fox News that the counts against Manafort include **conspiracy against the United States**, conspiracy to launder money, unregistered agent of a foreign principal, false and misleading Foreign Agent Registration (FARA) statements, false statements and seven counts of failure to file reports of foreign banks and financial accounts. 
I don't have any experience about building an ORM, but Vapor is open source and uses an ORM called Fluent. You can check the source in here: https://github.com/vapor/fluent Hope that helps you :)
Of course, at home I also almost never use a wired cable. That's because it doesn't really matter if your connection drops. You reset the router, pick up a book, go do some housekeeping whatever. However, for work matters, it's simply very costly to to use an unreliable network. Think about it. Suppose your connection drops for 5 minutes. It's probably irritating enough that this causes you to be unproductive for 15 minutes. Assuming a very low rate of $150, that $37,50 lost right there. An ethernet dongle is $10. Getting an ethernet drop in a decently organized company is either already there or costs an initial investment in time to request that from the IT dept which will probably be thankful that you don't rely on wifi. Which they're sick and tired of debugging for users. Of course, I'm assuming one values one's time.
The video player IIna. I never looked through the source so I’m not too sure but the app is great. Might be worth a try? https://github.com/lhc70000/iina
Check out the Vapor organisation’s repositories. There is a low-level MySQL-Driver and a higher-level ORM (Fluent). The MySQL-Provider repo is the link between the two.
Yeah I was looking at that when I wondered if there are some other maybe more traditional apps. Thanks tho 
This seems to be pretty solid: https://github.com/PostgresApp/PostgresApp Not sure if this counts under your 'more traditional apps' category, though.
The Codable protocol is a great built in example of this in practice.
Nice eye.
I've got a lot of Swift buddies over in Africa where $7 dollars a month is a LOT. They are trying to bootstrap their own client server Swift projects. Are there options out there for them that can be run locally or on a local subnet? Thank you, Mr. Swifty Jimmy.
Are you adding an observer (which may eventually modify the array), and then immediately reading the array contents? How do you know if the closure has run?
If i print(mail) in the closure i do get the results. I just cant update my array. Could it be that the closure never really ends and keeps checking for nee data? If thats the case how do i then update my array?
Maybe put a print function inside that closure to confirm its been evaluated 
getData is asynchronous so it probably isn’t finished appending when you check it. You need to check it after getData has completed in a completion block. 
Is there an UnsafeMutablePointer available in the parameter list? Could allow you to punch out early.
Use kuler.com to come up with a color scheme. Pick a different background and make the buttons rounded. 
Is kinda amazing what little things like adding corner radius can do. But that 1970s carpet background needs to go.
Thanks for the feedback!
[removed]
You are welcome! :) Checkout AWS, you get 1 year free trial when you type in your credit card. You have a bit more configuration ahead to get the service up and running. I haven't tried yet it but I think I'll give it a try at some point.
And also Heroku! I've had the Friend service running there for about a year now and it is free. I don't think free version is big enough for any real service, but at least you can get started.
I suggest checking out Bootstrap to get a better understanding of what the baseline standard is for the component you are trying to make. Like what is a toggle? What is a button? What is an input field? And what do people expect them to look like? Once you have a better understanding of what they should look like, you can start to add your own personal flair to them. But as it stands right now, you aren’t even close. I have no idea what your UI is comprised of because nothing is matching my expectations. http://getbootstrap.com/ I mean, just look anywhere on the internet for inspiration. Find something you like and copy it. Keep doing that until you get better. This is also a great website: http://littlebigdetails.com Also The “I’m a better designer” checklist https://blog.skcript.com/the-i-m-a-better-designer-checklist-255fd984c68b 5 rules to better design https://medium.com/@stothelios/design-philosophy-at-reliefwatch-156aab951e18 60 essential resources for becoming a better Designer https://medium.com/red-academy/60-essential-resources-for-becoming-a-better-designer-e6a9d09392dc Design isn’t some veneer. It isn’t an afterthought. And it’s not easy. You really have to put in the time if you want to be good at it. Read books, do tutorials, and practice. Or just pay a real designer some money to do it all for you and just focus on programming 😉 
One of my colleagues, who is an iOS developer at Space-O Technologies, recently wrote the article on the same topic. Out of his development experience, he collected [top 9 iOS libraries](https://www.spaceotechnologies.com/top-open-source-ios-libraries/) that he uses while developing a mobile application. Check it out. It will definitely help you out. 
I should have clarified that I work from home. I completely agree with your working out dollars spent vs time lost. That and just the frustration factor are why I work wired when in the office. But with good quality hardware and a reasonable device to access point ratio, wireless is awfully damn good now. Trying to shove 150 users with one AP every 40 feet gets tricky to balance enough APs to cover the number of users, but not completely pollute the tiny RF range available to work with. As with most things, it's a tricky situation that's dependent on multiple variables in any given scenario. 
A totally valid point, but the number of apps which aren't network dependent, except for authentication purposes, is high enough that it hits a sore point with some folks, myself included. Definitely jumped to the conclusion though.
Does anyone here have experience using Kitura and other non-Swift backend development? How does it compare to things like Ruby on Rails, Go or Node.JS? Would love to hear the thoughts of an experienced back end developer on how well/complete these Swift frameworks are for server development. 
I was looking for something like this. A very simple good-read my friend, thank you. 
Retarded means slow, was it slow?
Very antecedotal, but I started as a web developer and over time have migrated to native app development. I experimented with Kitura and a few other Swift backend projects ( Vapor and Perfect). I really like the Swift Package Management and the language. I think IBM has done a good job a procuring a good framework. I found the whole ecosystem enjoyable. To me, the issue still comes down to IDE though. I use XCode everyday for iOS and it is still subpar to me. I used the Atom Swift plugin for awhile, but it is still impossible to compete with Jetbrains products IMO. PS I use Node backend for my own projects and Java backend at work.
RoR is a comparable framework, but Go and Node.js aren't comparable things.
Did you make your own ML model for this?
No, just used one of the sample models provided on Apple’s website. 
So they had one that was already trained to recognize dog breeds?
Not just dog breeds. I modified the output using if statements. 
Well give a look at applied examples. Sometimes working solutions are not that easy to implement. Coordinator removes controller logic from thee app delegate and facilitates deep linking inside the application. Also, it kinda replaces storyboard segues in itself as it replaces the « workflows » inside the application.
Just because it’s a pod does t mean it’s not a working solution. You can also do inferred casting. 
I’ll check this out but I’m still digging Vapor way more than Kitura. 
I have worked professionally as a full-stack Node.js developer, and I love Swift, so I have been watching this stuff closely. To make a wholistic comparison today, the factors that pop up from my brain are ease of use of the framework, packages available, ease of deployment, and community activity. Compared to Node.js, these factors are the reasons that I haven’t switched any production Node servers to Swift servers yet. (Which, by the way, the introduction of Codable as a built-in makes Swift so much better when it comes to doing server things, what with the high likelihood any modern server will be accepting, and returning, lots of JSON). **Ease of use of the framework** I have tried Kitura, Vapor, Perfect, and another called Blackfish that I really liked. All are pretty okay when it comes to ease of use. If you’re used to setting up route handlers and things like that, you’ll have no problem. Here, the hiccups are more around installing the framework, using Xcode, etc. Also, this Kitura 2.0 announcement mentions what sounds like a bold new way to do routes — haven’t tried that. I am a big fan of Express on the Node side so anything close to that I can get behind. That’s why I liked Blackfish. **Packages** This is my number one reason I haven’t switched. Most of my server apps include some combination of MySQL, Redis, etc and some vendors like AWS, Stripe, etc. There are NPM packages for these things that are either super-used and super-proven like [this MySQL one](https://github.com/mysqljs/mysql/blob/master/Readme.md) or created by these companies themselves like [this Stripe one](https://github.com/stripe/stripe-node/blob/master/README.md). The Swift ecosystem is younger, so it’s not surprising it doesn’t have the same yet. But these packages have a tangible, positive effect on the overall quality of my software and my experience. Not being able to lean on then for their benefits in Swift means extra work and uncertainty whereas in Node, for example, connecting to MySQL is never a concern. **Ease of Deployment** Same thing here. Node deployment is supported all over the place by AWS, Google Cloud Platform, Heroku, Digital Ocean, etc. Not yet with Swift, so if you want to take Swift out on EC2, for example, you’re way more on your own today than if you were to do Node. In a production environment, for work, this is part of why I’ve kept on with Node for now. I know and trust the tools and have the ongoing support of AWS in deploying every single time. **Community Activity** Kind of a combination of the last two. I feel confident right now throwing my self in the Node life-raft because there’s a bunch of people working on NPM, a bunch of companies running Node, a bunch of employees at AWS working on Node support, etc. I need that same feeling for Swift on the server before using it as the primary server for something. Node is “light” and I think a lot about it makes Node fun to use, but I would love so much to be using protocols and structs and to have some sweet, sweet compile-time safety that Swift is so good at. I love using Swift. But for actual server development where I need to know that this thing works and when I need help with something, I’ll find that help, I don’t think we’re there yet. I am trying to help us get there though! My small contribution so far has been a package called [Hypertext](https://github.com/sahandnayebaziz/Hypertext), a swifty, sexy, type-safe way to compose HTML in Swift :) edits: grammar
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [stripe/stripe-node/.../**README.md** (master → 9e1d36a)](https://github.com/stripe/stripe-node/blob/9e1d36a9f61d19a5b1c61eda85cc193e7877a091/README.md) * [mysqljs/mysql/.../**Readme.md** (master → e16c52d)](https://github.com/mysqljs/mysql/blob/e16c52da980e46012a391232be884b797b8af070/Readme.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dp57w71.)^.
Thanks for the links and tips! I will check them all out. 
I really like the codable routing.
Please search for NSFetchedResultsController. After you setup it correctly, it will just work. What you need to do is after you change your data, you will nill your controller and initialize again. I am on mobile sorry can't link but I am sure after you search little bit you will find. 
I checked out vapor and thought it looked weird and ugly (sometimes), is this more for me? 
I've been reading the apple documentation but still couldn't get it working. Feel like I'm going around in circles reading it... :/
Yup. That's the Apple documentation for you. Beyond useless. Spend the time to pay for a book on Core Data. 
IIRC, Master detail application of Xcode has NSFRC. Create master detail application by Xcode and look how it is setting up controller and how it reacts to changes. Otherwise, I am afraid you have to read little bit more or search GitHub for example code.
Right now you have your UITableView being populated by the placesList array, which is empty when your ViewController is instantiated and doesn't get populated until you press the button and then add a string. You need to change the code in your UITableViewDataSource to pull from the NSFetchedResultsController instead of your array. Something like extension ViewController: UITableViewDataSource { func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { guard let places = fetchedResultsController.fetchedObjects else { return 0 } return places.count } func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { guard let cell = UITableViewCell(style: UITableViewCellStyle.default, reuseIdentifier: "myCell") else { return UITableViewCell() } let place = fetchedResultsController.object(at: indexPath) cell.textLabel?.text = place.name return cell } } or just read this: https://cocoacasts.com/populate-a-table-view-with-nsfetchedresultscontroller-and-swift-3/
&gt; If i print(mail) in the closure i do get the results. I mean, how do you know it has run by the time your line `textView.text=String(myArray.count)` has run? &gt; I just cant update my array. Are you sure? What does the debugger say after the line where you update it? &gt; Could it be that the closure never really ends and keeps checking for new data? If thats the case how do i then update my array? I don't know what `DataService` class does, but your closure has a pretty definite beginning and end, with no loops. How would it "never really end"? You're asking the maître d' to let you know when there's a table available at the restaurant, and then immediately asking which table it is.
1. Hire a designer. 2. Please, no, for the love of all that is holy, you need *less* creativity here. 
&gt; but scrolling is very laggy this way It's almost impossible to guess where the performance bottlenecks are in a program. When you profiled it, what did you find?
you should use fetchResultControllers for more complex tables. if you just want to display something from core data you might as well just do a NSFetchRequest and load the data into an array that you use as datasource and reload the table
best option would be to have multiple custom cells that you'll dequeue as you wish. cellForRow is called every time a cell is reused . you don't want to add/remove subviews in that callback
Here's how I solved a complex (slow to scroll) UITableViewCell. It might be overkill and hackie, but it's silky smooth. NOTE: this only works if there's no user interaction with the cell. The trick is to create cached images of the cells (do this work asynchronously outside main thread). The actual cells will only show an image of your complex view. You can make the view as complex as you like, since you are only doing this once and storing a cached image of the complex view. Passing in only the cachedImage inside the cellForRowAtIndexPath method. This makes for very fast cellForRowAtIndexPath and fast rendering of the cell when scrolling. If the layout or a cell data changes, reset the cache. 
Vapor’s resolving many, but not yet all, of your concerns with server-side Swift. I haven’t been involved in Node’s community, but Vapor has a very active Slack team who are always happy to help. One thing is that if you encounter a problem it’s not guaranteed that someone else has already, like with another language, so StackOverflow is not as useful. Also, Vapor’s documentation is entirely rubbish, though that is apparently fixed with the forthcoming Vapor 3. To take the packages you mentioned: Vapor has a wrapper around the MySQL C library. I personally have been using it in production for a while now. Stripe is not something I use, but the Vapor library is often recommended by people in Vapor’s Slack. Mongo in particular is rock-solid and even faster than the same library in C. For ease of deployment, if you are willing to go the Docker route, there are development and production images ready to go so you can deploy anywhere. The team also provides ‘Vapor Cloud’ which is a one click installer on AWS. Or you can just install the Swift libs on a regular server and send up your binary. I think it’s ready for production use now, and has been since Vapor 2, and with Vapor 3 a couple months away the argument will only get stronger.
Good guess on Line 31. That is an optional closure that takes a bool parameter. The reason why you're getting the Expected Expression error is because that closure on Line 31 IS your completion closure, so you're repeating code there. Here's the animate method from the docs: class func animate(withDuration duration: TimeInterval, delay: TimeInterval, options: UIViewAnimationOptions = [], animations: @escaping () -&gt; Void, completion: ((Bool) -&gt; Void)? = nil) You'll see that there are two closures in this method, the animations closure and the optional completion closure, which passes in a bool parameter. There's a lot of ways you can write this method, depending on what you want to do. For example: /// No Completion Closure UIView.animate(withDuration: 6, delay: 1, options: [.repeat], animations: { // Animate things }) /// Completion Closure without using parameter UIView.animate(withDuration: 6, delay: 1, options: [.repeat], animations: { // Animate things }, completion: { _ in // Do something }) /// Completion Closure with parameter UIView.animate(withDuration: 6, delay: 1, options: [.repeat], animations: { // Animate things }, completion: { finished in if finished { // Do something } }) /// Full completion closure UIView.animate(withDuration: 6, delay: 1, options: [.repeat], animations: { // Animate things }, completion: { (finished: Bool) in if finished { // Do something } }) 
That's awesome. I would love to jump to Swift. I sleep easier at night thinking about my Swift code than I do about my Javascript code. Also glad to hear that there is a MySQL library you can vouch for. That was a bummer early on when I realized I'd have to give up the Node one for a new one. Has the "wrapping c" part ever been a problem, or no, not at all? I know some people on principle don't like wrappers but, then again, what isn't wrapped in our world anyway. Vapor cloud sounds cool. I'll check it out :) Happy to see the case for Swift getting better and better
Funny, I dislike the JetBrains look and feel so much that I find their products unusable. Xcode 9 is pretty good but I do find myself using VSCode often. It’s just clean with few buttons in sight yet has a solid plunging ecosystem. Just goes to prove you can never please everyone!
Swift wrapping of C libs is not a problem. Swift interacts with C natively, so the 'wrapper' is just a way of making the C function calls Swiftier. There's no loss of safety in doing so. What I did was start by building one short-term and inconsequential microsite in Vapor, to see how well it worked. Once that convinced me, I Dockerised all my existing services, so that any new ones I throw into the mix can be Swift without treading on the toes of what I've already got.
Seems like a creative idea, unfortunately my views have interactive stuff.
Any tutorials on how to profile such case? I have never done profiling before.
I thought the code already run before I set the text of the textview because I call getData() before I set the text. So i removed the getData() function en placed it contents in viewDidLoad, and now it works just as I wanted. So why does swift not carry out instructions from top to bottom? Or it does, and there is something else I am missing? Edit: so as michaeldwilliams said, my func is asynchronous, but using completionHandler with @escaping, i still couldnt make it work. Do any of you know what part of the swift documentation i should look into to understand this kinda thing a lot better. Thank you all for your help 
I love Kitura, been developing various apps in Vapor and Kitura and I've settled for Kitura. My latest endeavour is a Casino with Poker, BlackJack, Roulette and Slots, using Kitura Websockets and its been a breeze. Been using Heroku free dynos for development and haven't tested it on heavy load but will do soon. Will keep you posted. Kudos to the Kitura team.
I didn’t know that about C libs. That sounds great. Thank you for the insight :)
Vapor can be run locally on any old Ubuntu server 14.04 and above. Something like Docker helps but is not necessary. Vapor Cloud or any other cloud provider is helpful but not mandatory.
I don't know if you are mentioning this as a joke or sarcasm but I myself hate almost 129% of all documentation written by Apple. All docs they write with very few exceptions are written with disdain and lack of care. I am from the old school, used to state-of-the-art manuals that were written back in the day. These manuals were a joy to read, a real delicacy. Also, essentially a developer/book author, I prime my books for the best I can write. I am maniac for detail and perfection and seeing the stuff Apple write I feel like they hired satan to write their stuff. Everything is vague, incomplete, misleading... amateur hour or lack of love for developers.
Sarcastic, because this just takes the cake 
Perfect. 
You should also see google crap: Method name: sendRequest Description: sends request What type, what for.. nothing
CoolAppz, Out of curiosity can you list a couple of those docs/manuals which you're especially fond of?
No manual ever written by Apple matches the quality of those from the old school but the ones they wrote about Swift that are on iBooks are passable to good (this is me being fond of). All the rest should be set on fire, today, that is halloween and forgotten forever.
hahaha... (laughing uncontrollably)... You should read one of the old school manuals. You will cry for a month. Look [at this manual](http://www.decadecounter.com/vta/pdf/HP%2041C%20Operating%20Manual.pdf) created by HP for their amazing HP41C calculator in the eighties... at a time HP where in the business of creating computers and amazing calculators. Clear, concise, explained. Today HP and Epson for that matter, are ink sellers.
Not even the Inside the Macintosh manuals from the late 80s/early 90s?
I never had the chance to read those. 
The first one is great(ANGELA) not only she explains things very well, you will also get extra lectures regarding UI/UX design, color theory, landing page creation, validating your app ideas...etc.
Would love to see some of this. Maybe do a write up on how you worked the backend, there's a lot of use that have never done full stack. A nice tutorial, or maybe there's a link to the tutorials you used to get you going.
The fact you mentioned garbage collection is a bad start. iOS functions with arc. If you push another controller on your navigation controller, the navigation controller still holds a reference to the first one and for that reason, will get allocated. (In normal circumstances)... just learn about arc. There is also a déinit method called when the object is uninstanciated. You could put a print or breakpoint there for debugging purposes.
Thanks for the reply. I looked at arc and what I got was that as long as there are no ref’s to it, the object is freed. In the case of replacing the rootviewcontroller of the delegate rather pushing onto a nav, am I wrong to assume that there will be no longer references to the older root?
Embed your storyboard's first view controller within a navigation controller. If you're doing this all in code, your approach will make it confusing for you. Embed the storyboard's first view controller in a nav controller and learn how to display other view controllers and perform segues.
Regarding your second question: UIView.transition(with: window, duration: 0.2, options: .transitionCrossDissolve, animations: { self.window.rootViewController = self.newViewController }, completion: nil)
I am specifically looking for a segue like the modal present but that also unloads/frees the previous controller. With navVC, I would have to access the array or controllers, remove the loginVC, disable the back button on homeVC, and just seems unintuitive.
Here's a ton on Git pretty sure you can convert one of these to Swift 4 successfully: https://github.com/search?l=Swift&amp;q=timer+app&amp;ref=simplesearch&amp;type=Repositories&amp;utf8=✓
Thanks. I edited the post to be more precise. I did go through a few examples on github, but always got issues that I could not resolve because I am just beginning with swift. Typically, Xcode suggests a bunch of changes and when I do them all, the code does not compile.
Are you just trying to make a stopwatch? or something that actually counts down? Also, a trick I use is to just copy the files or code into my project and let Xcode tell me to make edits. Sometimes this gets the code to work when it won't compile straight from the Git project. 
Yup i have finish all those courses and i can say that Angela’s lessons are the best.
[removed]
Thanks for the advice. Went ahead and bought the Angela course. 
Awesome. I’m signed up. 
What's wrong with using a WKWebView? HTML is rather too big of a spec to expect that someone's made a native mapping for it (although I am all ears if somebody has). Maybe better for you to parse all your web pages into a more easily consumable JSON (or whatever) format and adapt them from there. Edit: React Native may be a little easier than Swift to bridge the gap.
I’m using WebKit at the moment but wondered if there was a more efficient way using Swift only instead of having the app load HTML files Edit: thanks for the react advice. I’ll check it out. It’s about time I started looking at it! 
You’re correct. Setting the window’s rootViewController property will remove the previous reference to the login view controller. As long as nothing else is holding onto the login view controller (and there are no previously created retain cycles) the login view controller will be freed automatically. As the comment above mentions, you can test this by placing a print statement “released logic vc” in your login view controller’s deinit method. After you set the root view controller to something else, you should see the print statement in your debug console. 
While I owed tend to suggest going with HTML simply due to it been a well defined way to format text and images you do have options. One would be to create a view for each page. So effectively you need. window and view controller for each page. That would be a lot of work. One thing to consider is to build a database of sorts that has page information and data that you then programmatically render to a view, either native or HTML. This saves managing 500 HTML pages and gives you one file to load for your base page data. If what you are developing is basically a book why not use IBooks Author or similar E-Book creation tools? I mean it sounds like your app is effectively a "Book", so why not approach it as a book. If this isn't a book one way to deal with all of these pages is to zero in on how many of them can be rendered into the same page template. You can greatly reduce efforts in creating all those view controllers and so forth if you can develop one controller capable of displaying many pages of your data. In the end this soundly you will be reinventing much of the capability that HTML gives you in the first place. If you can post some more information as to what you are trying to accomplish.
Wow! Thank you very much for your so detailed help! I got it to work now, but can you please explain me the difference of the 2. Method and the last one? I thought the completion closure is executed after the animation ended, wo why would I need the "finished" bool, and what exactly it the "@escaping" in the docs of the method for? I tried to research it but I didn't really understand ist fully :/ And how can I change the text of the label after every repeat? I repeat the animation 3 times, by using "UIView.setAnimationRepeatCount(3)" But where can i write: label.text? = 2/1 ? :) Thank you so much, I really appreciate your help! :)
You can still style things with HTML but render them more "natively" using NSAttributedString. You can initialize an NSAttributedString object from HTML data, this could allow for faster and more flexible usage of the rendered text.
Are those discounts sufficial or just a marketing feature? What are the real price?
I have not. That sounds odd. 
Are you aware of any examples where this is implemented. Something on GitHub. I’m not sure what I’m looking for, but this sounds like a solution. 
Not that I'm familiar with
You can have a vertical scrolling table view where each cell holds a collection view that scrolls horizontally. E.g. Netflix 
Paving? I have no idea what you mean.
Did you already try iTunesU Paul Hegarty's iOS Development course? https://itunes.apple.com/us/course/developing-ios-10-apps-with-swift/id1198467120 its free and awesome
It’s just marketing. There’s almost always a discount on the courses. I never actually see them priced above $20. 
The completion block is executed when the animation sequence ends, the boolean argument indicates whether or not the animations actually finished before the completion handler was called. If you are going to do something that is dependent on the animation finishing first, then you would want to use the bool to check that the animation is complete. If you're going to do something that isn't dependent on the animation completing but you want it to fire once the sequence is complete, then you can use the second method. In the second method, you don't care that the animations completed, so you're not going to use that bool parameter. To do this, you use the underscore to acknowledge that there is a parameter to be passed in the closure block but you're going to skip over it. You'll see the underscore in a lot of places where you want to run a block of code but don't necessarily need the value in the block. For instance: // Increment count to 3 var count = 0 for _ in 0...2 { count = count + 1 } print(count) // 3 **@escaping** This is a little more advanced for beginners but escaping closures are all about memory management. The @escaping keyword allows a closure to be called after the function it was passed to has returned. Since Swift 3, all closures that are passed as a function parameter are, by default, non-escaping (meaning the closure will run within the function itself). Now sometimes (probably most times) you don't want that closure to fire inside the function, you want to wait and then fire it. This is when you mark the closure as @escaping - as in, it escaped the scope of the function. When a closure has escaped its function, the complier has to store the closure somewhere in memory so that it can be called upon later. As far as your problem...you should probably store a count variable outside the animation and then in the completion block, decrease the value of that count and change the label text to that count. count = count - 1 DispatchQueue.main.async { label.text = "\(count)" }
If you're new, you'd probably be better after asking questions about why something is failing. Going through peoples old code, and just trying to hit run wont teach you anything. Id suggest Hacking With Swift. https://www.hackingwithswift.com
Rob Percivil? His course is great. Can't open the links so not sure which it is, if it's there, but would recommend his. 
No, the only way to display information on screen is by using HTML. (I really don't understand this question.)
&gt; déinit For your *sophisticated* deinitialization needs!
&gt; on Git ... github.com *cringe*
TL;DR: call `requestReview()` \#savedyouaclick
In short. I don’t want to use HMTL i want to use Swift and not have to load external files 
I've written a microservice with Kitura websockets and it works really nice and easy. The performance was beyond great, and all went well. Now where it starts to falls apart is when you want to connect to a database... if you need to connect to a database, start looking at that end first before this end.
&gt; I thought the code already run before I set the text of the textview because I call getData() before I set the text. It does. And your code adds an observer. When it completes, the observer has been added. &gt; So why does swift not carry out instructions from top to bottom? That's just how functions work, in any language. Programs don't execute "from top to bottom". When a function is defined, the body is not actually executed until something calls it. &gt; Do any of you know what part of the swift documentation i should look into to understand this kinda thing a lot better. ISTM that your issue is with the DataService class.
Hi, have you tried with Xcode 9? Makes a whole world of difference!!! You can generate the Xcode project and autocomplete works!
First, you'll want to make sure you're not re-creating things that *should* persist. Secondly, you should look at prepare(for segue: UIStoryboardSegue, Sender: Any?) and performeSegue(withIdentifier: "view controller identifier", sender: button or whatever).
Question: So if I put this in my code it will always pop up as it is shown every time a user gets to a certain view? So lets say I want this review to show up after the user spends X amount of time on my app, or after they get through a certain level. And lets say I want to ask for a review every 6 months. How would I do this? Or a more specific example: Lets say I have a flappy bird type of game where the user plays a session and then dies with a score. I want to ask the user to rate my application after playing 10 sessions. Once they rate it I dont want to ask them to rate it again for 6 months. How would I go about this? *I'm still new to iOS dev.
Rather than asking for a solution to the main problem, you should ask for help for your bug on stack overflow. Sounds like you're pretty close
https://medium.com/theappspace/swift-how-to-convert-html-using-nsattributedstring-8c6ffeb7046f
Git. 
Xcode 9.1 has not made this better, maybe worse...it still break at top of AppDelegate, but now it even harder to figure out with line in the app actually cause the crash `2017-10-31 17:37:29.053961-0700 FoodTracker[319:12081] *** Assertion failure in -[UITableView _endCellAnimationsWithContext:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit/UIKit-3698.21.8/UITableView.m:1770 ` ` `2017-10-31 17:37:29.061281-0700 FoodTracker[319:12081] *** Terminating app due to uncaught exception NSInternalInconsistencyException`, reason: `attempt to insert row 5 into section 0, but there are only 5 rows in section 0 after the update` ` `*** First throw call stack: ` `(0x182c59d04 0x181ea8528 0x182c59bd8 0x1835e9c24 0x18c254f78 0x18c3b82a0 0x18c29c15c 0x1a1a9fda8 0x10028445c 0x100284598 0x18cc3dec8 0x18cc3ddb8 0x18c9aeca8 0x18c0c5614 0x18ca6eea8 0x18ca6edd0 0x18c0c5614 0x18c0c5594 0x18c0b02fc 0x18c0c4e88 0x18c0c49a8 0x18c0bfe78 0x18c091384 0x1a1a8a2b4 0x18c9de85c 0x18c9e0de8 0x18c9d9d04 0x182c022e8 0x182c02268 0x182c01af0 0x182bff6c8 0x182b1ffb8 0x1849b7f84 0x18c0f42f4 0x100280e58 0x18264256c) ` `libc++abi.dylib: terminating with uncaught exception of type NSException No stact trace like in Xcode 9.01, `bt` commond output: `(lldb) bt `* thread #1, queue = `com.apple.main-thread`, stop reason = signal SIGABRT ` frame #0: 0x0000000182771348 libsystem_kernel.dylib`__pthread_kill + 8 ` frame #1: 0x0000000182885344 libsystem_pthread.dylib`pthread_kill$VARIANT$mp + 396 ` frame #2: 0x00000001826e0fb8 libsystem_c.dylib`abort + 140 ` frame #3: 0x0000000181e80068 libc++abi.dylib`abort_message + 132 ` frame #4: 0x0000000181e80210 libc++abi.dylib`default_terminate_handler() + 304 ` frame #5: 0x0000000181ea8810 libobjc.A.dylib`_objc_terminate() + 124 ` frame #6: 0x0000000181e9854c libc++abi.dylib`std::__terminate(void (*)()) + 16 ` frame #7: 0x0000000181e98158 libc++abi.dylib`__cxa_rethrow + 144 ` frame #8: 0x0000000181ea86e8 libobjc.A.dylib`objc_exception_rethrow + 44 ` frame #9: 0x0000000182b20024 CoreFoundation`CFRunLoopRunSpecific + 544 ` frame #10: 0x00000001849b7f84 GraphicsServices`GSEventRunModal + 100 ` frame #11: 0x000000018c0f42f4 UIKit`UIApplicationMain + 208 ` * frame #12: 0x0000000100280e58 FoodTracker`main at AppDelegate.swift:14 ` frame #13: 0x000000018264256c libdyld.dylib`start + 4 `(lldb) ?? stack trace has nothing pointing back to the actual line that crash. Maybe we are not in the right thread? 
I have. I like that the autocomplete and refactoring now function better. But I still have issues, and I find random crashes. And should we be pleased that autocomplete now works? Like how did it take Apple 9 XCode versions to figure that out? I am clearly biased haha, but I think for that for how Apple strives for the "perfect ecosystem", they should be able to produce a better product focused on development.
Autocomplete now works... for Swift projects built using Swift package manager (that's still not supported by Xcode). You didn't had to wait 9 versions for autocomplete. And I didn't experience frequent crashes, at least not more than other IDEs like VS or IntelliJ. There will always be complaints when it's an Apple product.
[removed]
[removed]
[removed]
I was confused too, but I think he meant paging.
Why? You're overthinking it. Apple doesn't want you to do it the way you are envisioning. The more you fight the way Apple wants you to do it, the more painful your life will become. 
No matter what you do, knowing only one language is not a good idea. If you’ve only ever programmed in JavaScript or Swift, you probably won’t be a very good programmer. Expose yourself to as much as you can. That being said web devs are probably more in demand. Especially since native apps are starting to replaced more and more with cross platform apps built on things like react native. It can be argued that despite this, having native knowledge is still somewhat necessary when working with these cross platform frameworks. 
My vote would be web development. The skill set is broader and could eventually lead to many different possible job opportunities. Swift is nice, but will soon be replaced. You could learn its replacement and stay in the App development arena but your skill set would be limited to that arena, even years down the road which could cause burn out. More companies are going with a code once, deploy type of workflow and that work flow is not in the swift arena. Web development is on both Android and iOS, and of course PC, etc. It really depends on your own goals as to how focused you want to be. Web development is broad, swift development is narrow. Web developers get paid less than an Swift developer. There are more jobs available in Web Development than in the Swift development. Coding is different than design. If you like design better, you could stick with that. Designers tell coders what to make. If you are in a small company, you may find yourself doing both design and coding (weather for web or iOS)
I have all 3 and Angela’s course is perfect to start getting the hang out of it. Devslopes is good to reinforce the knowledge obtained from Angela’s course and the last one is pending for me to try, but seems good as well.
This is great. It may be a solution, thanks! 
Swift. Go with Swift. Alone. You'll be employable for the next 10 years earning over 100k a year no sweat if you live in the US. More valuable? Kotlin. Android has 90% market share and growing. Everything will be developed in Kotlin for the next 10 years and you'll be riding the top of the wave. But since it is more common it will get saturated in no time so the sooner you start the better. The web is already hypersaturated so expect $5 an hour or less if you go that route. Boring. Swift and Kotlin are the surest bet.
Recently on a SO report they found that there is not enough developers to fill the jobs available for iOS Developers. Yet, many complain on the web dev subreddit that it’s hard to find a job as the market is saturated. This is due to boot camps and online programs and unless you specialize into a field you risk getting no where professionally. I know personally because I’m a web dev currently and I’m transitioning into an iOS dev. Like you I love making designs for apps and learning how to build them gives me a lot of satisfaction. I say swift is enough given that server-side frameworks are being built with swift. Especially Kitura since it’s backed by IBM. At the end of the day it’s your choice. I would agree that a server side language would help though. 
No problem! From what I've found, it works surprisingly well. Tables render perfectly, and images should work too (if not, use [NSTextAttachment](https://www.hackingwithswift.com/example-code/system/how-to-insert-images-into-an-attributed-string-with-nstextattachment)). It also supports some basic css. For anything that doesn't output quite like you want, you may need to pre-process the html beforehand (namely blockquote tags, from experience).
Swift will be replaced? Are you serious? With what exactly? C# or JavaScript? Tell me more about how well hybrid apps work. Again, Web development is a very broad term, all from NodeJS backend to frontend to Angular to PHP to Laravel, you cant (its hard) to master them all. 
This. Swift and Kotlin are the future of iOS and Android development. (And hopefully, Kotlin will be the future of most Java development :: Spring, etc)
[Here's some good resources](https://www.reddit.com/r/swift/search?q=resource&amp;include_over_18=on&amp;restrict_sr=on&amp;t=all&amp;sort=top)
I really like Cuckoo and have been using it for all of my mocks. I came from Java/Mockito, and even though Cuckoo isn't *quite* at the Mockito level, I like where it's headed. Pro-tip: if you want to generate mocks for ALL of your swift protocols/classes and not worry about listing each file one by one, you can do modify the script mentioned in the article from: &gt; ... &gt; --output "${OUTPUT_FILE}" \ &gt; "$INPUT_DIR/FileName1.swift" \ &gt; "$INPUT_DIR/FileName2.swift" &gt; ... to something like: &gt; ... &gt; --output "${OUTPUT_FILE}" \ &gt; `(find $INPUT_DIR -name *.swift)` &gt; ... Useful during development when you don't want to deal with listing every single file individually. 
uh oh, don't anger the teenagers! ;)
And how well do these hybrid apps work? Facebook has not even fully converted over and they invented react native. Source: Let’s build that app. 
The $5 an hour is no joke. Go look at freelancer sites like upwork 
There are teenagers on those sites designing full in depth websites for $100 or less. They are good too so there is no way they won’t undercut you.
I started off in college developing in C++ on Fedora Linux. It was a great starting point. We didn’t use an IDE or anything. Just a notepad app and terminal. If you really want to learn how to program I would recommend starting there. It helped me a lot to learn all the fundamentals so that picking up other languages was easier in the long run.
What's its replacement? I'm over here with full stack knowledge thinking I don't know enough because I don't know swift...
I did thank you!
Me! ME! I'm trying to work through the App Dev with Swift book and I just noticed it doing that today (was very, very confused). Glad to see it's not just me. I also just updated to Xcode 9.1. &amp;nbsp; **Edit:** I did notice that the menu open under Editor says "Show Raw Markup" while it's already displaying as raw. I have to click it and then click it again to get it to display the rendered text. And, as you said, it will switch back to raw once you go to the next page. &amp;nbsp; **Edit 2:** I submitted a bug to Apple through their bug reporter, sent screenshots as well. Hopefully that'll help.
Yep, Playground markup rendering toggle is broken. How can Apple QA miss such obvious bug?
Nope.
Click and drag the edge of the window. You can make it any size. 
Searching for things related to Swift requires more keywords. Such as adding a “3” or “4” or even “ios”. Else you learn there is a reddit dedicated to Taylor Swift’s legs. 
Thanks, I didn't even notice that because it only works on the diagonal.
Obviously still not as well as purely native apps, and there will likely always be native apps being developed, but the fact remains that more and more companies are going to hybrid approach. 
Nice. Thanks for sharing!
RemindMe!
Try the below links - I was literally looking for solutions to this just now. I'm still trying to 100% get my head around closures but think I'm 80% to understanding it now. https://stackoverflow.com/questions/31282569/make-instance-wait-until-called-functions-are-complete-swift https://stackoverflow.com/questions/42484281/waiting-until-the-task-finishes
for the lazy: /r/TaylorSwiftsLegs/
Yes.
It's quite cumbersome to do so and there's nowhere near a medium length answer. Make a macOS app in Xcode, build and run and then go to the "Report Navigator." Click on the most recent build entry and click "All" and "All Messages." Click on each entry and expand the entry with the little menu thingy on the right hand side. Xcode is doing all of those things for you when you click build &amp; run. 
Okay so I still need an info.plist for the apps metadata which I should be able to figure out; but as for everything else I should be able to replace the line "@NSApplicationMain" and write some sort of initialisation (I just don't know how). Any ideas?
You are right that it is doing quite a lot; but surely I would be able to achieve similar results with Swift's command line compiling, with less dependencies because of no .xib's or .nib's.
&gt; all the answers I find are over complicated. I don't even know what kind of answers you found but I'm pretty sure they're not over complicated. This is no easy task. Unless you use a framework that works on both iOS and Android that's what you're getting yourself into. You can't just hit a "convert" button and have everything work automagically on Android when writing an iOS app. Also, I feel like I should mention this, but this is probably more of a question for /r/iosprogramming than for /r/swift
Looks good not a lot of code needed either
Yeah this is probably a collectionView implemented inside of a tableView. It’s not that hard to implement a have a similar implementation inside of my app. Just google AppStore like app or collectionView inside of a tableView and theirs are some gitHub projects on tutorials on this topic 
I'd advice you to either focus on Web or iOS/Mobile development. Both have ha future. Do what you like and have fun with. Regarding the programming language for iOS.. Swift is pretty much the way to go.. but to really understand it, you'll need to learn Objective-C. Otherwise there are a lot of concepts which will confuse the heck out of you.
So none of you are spooked by swift dropping a few points every month in the TIOBE? Cross-platform development is said to be growing pretty fast. Java is dropping quite a bit faster supposedly.
You don't convert a native Swift iOS app to Android. About the closest you can come is Xamarin or react which is JS IIRC. You can do a "web app" in HTML5 and that'll run on both. What answers are you getting?
The truth is that things will change over time, right now Swift/Kotlin is a great choice. Keep your eye on the market and look for changes over the years. Be careful of things that come along and offer the world, look who's backing them and wait for them to pan out. Example is Server Side Swift compared to some of the other backends. Let things battle out for a while. Web is old, it's been done and over done, anyone/everyone has been doing it. Native mobile is much better.
To create a macOS (non-command line) app even without any Interface Builder requires you to create an application bundle, which as stated is a non-trivial task to do with xcodebuild/clang. Your best bet would be to create an empty macOS project in Xcode, delete any Interface Builder documents, and go from there. May I ask why you are hung up on the idea that xibs require a lot of overhead? Do you understand the complete build process of a macOS app including CompileStoryboard?
This [discussion](https://stackoverflow.com/questions/28792722/osx-application-without-storyboard-or-xib-files-using-swift) looks reasonable on the surface, and seems to be covering just about everything needed. 
I don't and I guess that's why I'm curious; the transition between command line applications to macOS apps is so obfuscated by Xcode that I really have no idea what is happening under-the-hood. It's like I'm missing a step (I crawled, didn't walk then ran). I'd like to know what Xcode is actually doing for me, so I better understand why to use it.
This explains how to build an app without Interface Builder, not how to compile one without Xcode.
Check out the comment above, access the build log so you can see all of the steps Xcode is taking to build an application.
I would advise you to use Sourcery instead of cuckoo
Cool thanks!
Try the one that I wrote: [Hacking with Swift](https://www.hackingwithswift.com). It’s free to read online (although I sell other books if you want to take your Swift further), and all content is updated for Swift 4.
Yeah, he said no nibs. How to use the build system was already addressed by /u/lanzaio, but didn't address how to programmatically make UI elements.
With your metaphor, what's "crawl"? Are you also trying to avoid xcodebuild? If so, then even looking at the build messages isn't going to be enough. You'll have to do all those pieces yourself too.
SlackTextViewController is a deprecated/unmaintained library at this point. Would not recommend it for further use, fyi. Last commit made was March, and Slack has moved on to a custom solution for their app now and is no longer using it.
You can remove the xibs from the project settings just fine so that Xcode doesn't have to import anything and just call the instantiation and display of the UI elements via code. TBH, I don't know how to do this off the top of my head because I'm not a GUI programmer anyways. But a quick Google for programmatic views in Cocoa should show you. From there, you can follow the same procedure to see the build commands.
Hilarious ones I’m sure
In the textFieldShouldReturn delegate function you want to resignFirstResponder() just before returning true/false.
TIOBE != # of jobs available. I can find hundreds of iOS developer jobs yet when I look for react native jobs there’s little to none?
There's two ways you can do this. One way is have them click on a text block (easy), the other is you have to create custom buttons using [CALayers](https://calayer.com/core-animation/2016/05/22/cashapelayer-in-depth.html) and use the protocol UIButton.
Interesting question. Don’t know about resources, but here’s an example that I just came up with as a challenge. import AppKit class AppDelegate: NSObject, NSApplicationDelegate { lazy var window = NSWindow(contentRect: NSMakeRect(100, 100, 200, 200), styleMask: .titled, backing: .buffered, defer: false, screen: nil) func applicationDidFinishLaunching(_ notification: Notification) { let button = NSButton(frame: NSMakeRect(20, 20, 100, 32)) button.title = "Click Me" button.target = self button.action = #selector(onClick) window.contentView?.addSubview(button) window.makeKeyAndOrderFront(nil) } @IBAction func onClick(_: Any) { NSSound.beep() NSLog("Clicked") } } let app = NSApplication.shared app.delegate = AppDelegate() app.run() That’s it. You can save this as test.swift file, compile and run without Xcode: swiftc -o test test.swift; ./test
 // For pressing return on the keyboard to dismiss keyboard func textFieldShouldReturn(textField: UITextField) -&gt; Bool { for textField in self.view.subviews where textField is UITextField { textField.resignFirstResponder() } return true }
Thanks for the pointer, good stuff. In essence, we need two files in a working folder, main.swift and info.plist Open terminal and type: &gt; swiftc main.swift then run it like: &gt; ./main And that's it, you'll see a very simple frameless window with a red-bordered view. Cool. \* main.swift and info.list anexed
 // main.swift import Cocoa // APP CLASS class AppDelegate: NSObject, NSApplicationDelegate { var newWindow: NSWindow? var controller: ViewController? override init() { print("APP INIT") super.init() mainView() } func mainView() { print("APP MAIN VIEW") newWindow = NSWindow(contentRect: NSMakeRect(10, 10, 300, 300), styleMask: .resizable, backing: .buffered, defer: false) let content = newWindow!.contentView! as NSView controller = ViewController() //controller?.loadView() let view = controller!.view content.addSubview(view) newWindow!.makeKeyAndOrderFront(nil) } func applicationDidFinishLaunching(aNotification: NSNotification) { print("APP DID FINISH LAUNCHING") // Not showing this? } } // MAIN VIEW CONTROLLER class ViewController : NSViewController { var name = "Main" override func loadView() { print("VC LOADVIEW") let view = NSView(frame: NSMakeRect(0,0,100,100)) view.wantsLayer = true view.layer?.borderWidth = 2 view.layer?.borderColor = NSColor.red.cgColor self.view = view } } // MAIN print("INIT") let delegate = AppDelegate() // alloc main app's delegate class NSApplication.shared().delegate = delegate // set as app's delegate let ret = NSApplicationMain(CommandLine.argc, CommandLine.unsafeArgv) //NSApplicationMain(Process.argc, Process.unsafeArgv) print("END") // END
Here is the info.plist &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt; &lt;key&gt;CFBundleDevelopmentRegion&lt;/key&gt; &lt;string&gt;en&lt;/string&gt; &lt;key&gt;CFBundleExecutable&lt;/key&gt; &lt;string&gt;main&lt;/string&gt; &lt;key&gt;CFBundleIconFile&lt;/key&gt; &lt;string&gt;&lt;/string&gt; &lt;key&gt;CFBundleIdentifier&lt;/key&gt; &lt;string&gt;COM.MYAPP.NOXCODE&lt;/string&gt; &lt;key&gt;CFBundleInfoDictionaryVersion&lt;/key&gt; &lt;string&gt;6.0&lt;/string&gt; &lt;key&gt;CFBundleName&lt;/key&gt; &lt;string&gt;NOXCODE&lt;/string&gt; &lt;key&gt;CFBundlePackageType&lt;/key&gt; &lt;string&gt;APPL&lt;/string&gt; &lt;key&gt;CFBundleShortVersionString&lt;/key&gt; &lt;string&gt;1.0&lt;/string&gt; &lt;key&gt;CFBundleVersion&lt;/key&gt; &lt;string&gt;1&lt;/string&gt; &lt;key&gt;LSMinimumSystemVersion&lt;/key&gt; &lt;string&gt;10.10&lt;/string&gt; &lt;key&gt;NSHumanReadableCopyright&lt;/key&gt; &lt;string&gt;Copyright © 2017 MYAPP. All rights reserved.&lt;/string&gt; &lt;!--key&gt;NSMainStoryboardFile&lt;/key&gt; &lt;string&gt;Main&lt;/string--&gt; &lt;key&gt;NSPrincipalClass&lt;/key&gt; &lt;string&gt;NSApplication&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; 
Very feasible! Scraping the web for data is probably one of the easiest ways to create an app (and often, doing just that is not enough to be accepted in the app store)! You could learn all the steps necessary to do this in a few weeks/months. I could send you a link to a discord server for Swift starters if you’d like :)
That would be amazing! I’m very very new but I want to learn. I have some ideas on what I want to make but I’m super new and don’t have a ton of time to develop.
If your zones are not rectangulaire with on UITapGesture and points to draw your zones you can find which part of the body the user tap.
A custom UIControl instead of UIButton could be more reusable and will depend less from the Button system, perhaps.
A new super-tiny Swift macOS and iOS library named: GLColor, a UIColor subclass/extension for device gamut-aware colors. Link: https://github.com/giulio92/GLColor
Damn thanks man 
Are you talking about this use case: *you get an email with an attachment on your iPhone. When you tap that attachment, you want to prompted to Open that attachment in your app* ? If so, start with [this tutorial from Ray Wenderlich](https://www.raywenderlich.com/1980/email-tutorial-for-ios-how-to-import-and-export-app-data-via-email-in-your-ios-app)
Crawl = learn Swift and Foundation; haha. Run = use Xcode to produce an app with a GUI. I'm not trying to avoid xcodebuild; just trying to avoid Swift code that I can't see.
That's a good idea too; another great idea (but more advanced) would be to create a custom class that takes in a BW image and creates the CAShapeLayer from it :).
This is pretty much what I'm after I think! Though probably without the IBAction which I'll replace with "@objc"; how did you learn this?
Did you just thank yourself?
This is exactly what I'm looking at doing! However as I've noticed the plist is not required because I'm guessing it's not run from an app bundle; I changed "@IBAction" to "@objc" just to remove connections to Interface Builder and NSApplication.shared() is now without the brackets at the end. How would I go about learning this stuff more in depth? What have you read or studied to get to this point? I guess this stuff is in the Documentation it just doesn't explicitly say how to layout the structure of your app though I may have missed it somewhere in there...
Turns out that all I need to do to make the executable into an app is place it and the plist into a folder and then change that folder name to "folderName.app".
I just followed the link to SO above and copied their code with some tweaks that were giving me errors until it ran. All I've done is to follow whatever Xcode does for us in the background, an AppDelegate with a bunch of useless methods that we may or may not need (removed in this simple example) then the app delegate is supposed to instantiate a main storyboard as defined (commented in our info.plist) in the info.plist file and that's it, a ViewController will be instantiated as all our Cocoa apps do. Everything else (controls on the VC, events, methods) can be easily added manually. Other VCs can be called/dismissed on demand as we already know.
SpriteKit custom shapes...
Haha yeah why? Should I not have?
where would you guys advertise for your newly made ios game?
&gt; Swift is nice, but will soon be replaced. You say that, but just yesterday you posted a question asking where to learn Swift. Why dig into something that will be soon be replaced? Obj-C hasn't gone anywhere, and that's sometimes thought of as replaced. C# and JS can compile apps, but they're usually bloated with runtimes. Xamarin is pretty notorious for this, especially on the Android side. While HackerNews Hiring Threads do see React Native as a hot term, there are definitely Obj-C/Swift jobs around, and you can bet devs still prefer native over hybrid for the most part. 
It seems as though this is growth hacking tactic. They try to reach out to developers via a recruitment process not with the intent to hire them but the intent to have them use their platform. Seems pretty obvious...
Hi David, would you mind sending that link also please ????
The weird stuff on Reddit never ceases to amaze me
There's a number of tutorials on YouTube for this. I did one an it came out pretty nice. It's actually a great project to learn from because you can add in Core Data cashing (that's what I did). I did mine a while back so it's ObjC, but there's tones of tutorials out there.
Hi actual programmer and iOS developer who uses swift here. You will get a job using swift, if you really want one. However it is not easy (but not hard either). Swift developers are not in demand... that is a lie that companies tell so that they can recruit people from other companies and start US sweatshops in the heart of cities. (you might not understand what I am saying, but literally companies say that canno find talent, then claim they have to hire more educated people off shore and pay them way less/ make them work way harder because they will lose their visa if they stop working for the company.) Don't focus on what you should or should learn specifically. Try to fall into something. Seriously. Start by learning some systems development (Computer Systems from a Programmers Perspective is a good book.) Learn patters (Google the gang of four). Then learn a language really well so that you can write an entire app (I love swift so I read the books on the Ray Wenderlich website, if you want to do that start with the swift book.. I forgot its name...) DO NOT WORRY ABOUT WHAT IS VALUABLE... Everything comes and goes. You just need to get programming and learning things about programming. Such as a callback vs a closure. Sync vs Async threads. Ect... If you are learning 99% of things in programming you are not waisting energy (as a beginner). However after 1 year start to focus and learn something really well. As for iOS or web, I cannot say this enough do what your heart desires. Just use common sense. However if you really want something to base it off of go on indeed and search iOS developer or Web developer. See how many jobs there are. Hi... I am an actual iOS developer and have worked with some pretty big companies. In general developers are split into different technologies. Mobile, web, systems, and ect... Just do what you want. The skill comes with patience and hard work. IF YOU WANT A QUICK READ JUST READ THIS part on. Ok so to get to the point if you are interested in Web Dev doing fullstack engineering is the way to go. Get an account on lynda.com and learn the MERN stack, Javascript, Node, React, and Mongo. If you want to learn iOS development make an account on RayWenderlich.com and get the books swift apprentice and iOS apprentice. If you are like me and cannot learn just from books, then go to a boot camp like I did. There is no shame and fuck anyone who says otherwise. Once you can make an app yourself and have read at least 5 basic books on computer programming AND have learned s particular skill (such as iOS). Then try to get a job. YOU CAN GET A GUARANTEED JOB STATISTICALLY (this is another learning route for web development) if you finish the courses on https://www.freecodecamp.org/. There is no one that has finished that website and not gotten a job. They require you to 'donate code' aka work for free. But it will get you a job. LAST REMARKS: To me you sound like an imperative person who just wants some god damn steps to get to a job. I would recommend that you go Web Dev and do the entire course on freecodecamp.com. They have meetups where you can hang out with other new developers I strongly suggest you go there and meet other programmers. IF YOU ARE AKING YOURSELF WHY I AM BEING NICE AND HELPING YOU: It is because I went through the same thing you did and it was pretty miserable. I tried asking people I knew and they gave me terrible advice. I finally got some decent advice on reddit. 
Ok so basically I have a business mindset, entrepreneurial type growth hacking etc. I’m trying to find the cross between growth hacking, marketing, software, design blah blah I feel my heart is towards iOS My worry isn’t to get a job but what I should develop a nice background on so in case my endeavors don’t go as planned, a nice company will hire me because I know how to make nice apps. 
Hacking With Swift is a popular free option.
Then you need to go on RayWenderlich.com and get the iOS aprentice book and the swift apprentice and go through them both two or three times. Then contribute on github towards someones project (I work on wikipedia, keep in mind that is in obj -c but youll need to know it nayways...). Then start studying for interviews and do about 5-50 interviews and you will get a job. Keep in mind that if you contribute to open source on github that counts as work experience. Just be honest about what you did and how many hours a week you worked. I got a job simply based off the fact that my employer could see everything I had done and he really just liked my positive attitude when people were correcting me. Keep in mind... It is good to have a skilled programmer, but they can very quickly turn into poisonous douchbags. IMO employeers want to see that you can work on a team, and manage yourself reasonably. Those are both way more important than skill, where technology is constantly changing. Stay away from companies that are super skill heavy and have you interview by answering programming questions on paper. For real, just don't do it. I have been there and done that...
So should I start learning coding now or wait till I graduate next May? I’m trying to just graduate but I have health priorities right now, aka I want to be in my best possible shape mentally and physically by the time I graduate. Should I focus on my health rn or also start learning iOS a little bit as well. I’d like to have tunnel vision.
Any chance to get an invite, too?
[This Post](https://www.reddit.com/r/learnprogramming/comments/6dz1pi/do_you_want_to_be_an_ios_developer_maybe_even/) I made. I recommend Apple's free iBook at first since I think learning the language is important before actually jumping into iOS.
I really like the Big Nerd Ranch book on iOS and Swift
Why do we need to go through all the views and call resignFirstResponder? Why not use the textField that in the function parameter?
What about the iOS playgrounds?
Big Nerd Ranch recently released a great beginners course (over 30 hours) on Udemy: https://www.udemy.com/ios-and-swift-for-beginners-200-hands-on-tutorials/ I am currently doing that one (also doing some of the iOS courses on Treehouse) and it has been really good so far.
Actually, you're probably right. I just copied this code from online but you probably could remove the for loop and have it do the same thing.
The first link is a course from Ray Wenderlich not BNR
Hey there, could I get that discord link? Would love to get some help if I run into issues.
CodeWithChris on YouTube
It sounds like you actually need to use UITableView which has this feature out of the box. Otherwise one will have to implement this from scratch updating/removing cells manually 
Visual effects displayed in the article are fascinating, but the code provided is particularly terrible, from simply codestyle to the way it's organized. I would suggest you to refrain from trying to build a snippet and concentrate more on animation parameters you found to be giving the most beautiful results.
Clean RxSwift on Github is pretty popular: https://github.com/sergdort/CleanArchitectureRxSwift Unfortunately i havan‘t come along a real introduction about clean code in Swift. I guess the struggle is to Watch Uncle Bob‘s Clean Architecture and adapt how it‘s being applied in Swift in Several example projects on GitHub.
Is the title a question? Clean as in not dirty, or clean as in Uncle Bob? What are you asking for??
Even More clean 
I’m sorry, but these 3 words don’t really clarify anything.
I know, you know what question is?, But if you dont, please dont reply 
This guy has attempted to adapt Uncle Bob’s clean architecture to iOS, but I can’t speak to the quality: https://clean-swift.com/clean-swift-ios-architecture/
thanks
I think that was true up until recently. Just yesterday in fact there was a new release (1.9.6: https://github.com/slackhq/SlackTextViewController/releases/tag/v1.9.6) which made a load of improvements around iOS 11 and iPhone X compatibility. It's still got some life left in it yet 👍
Ooops, true, fixed.
iBooks, developer.apple.com
You‘re looking for [Receipt Validation](https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Introduction.html). There are several ways to do this, though local validation is rather complicated.
Create a new navigation controller, set your settings VC as it's root VC, then present that nav controller modally instead of your settings VC.
Cool thanks! Just wondering how do I access the variables in the settings VC from my first VC through the Nav controlleR?
What courses have you bought already? I’m sure you don’t need more. Just a few courses would help you understand the gist and you can probably read documentation to expand your knowledge. Also you should really use coupons that are available online which make the courses $10. Udemy is known to lie about the value of their courses. They ALWAYS have $15-$10 dollar “sales”. 
Depends, at what point do you need to access the data? Did you have something implemented when the nav bar wasn’t showing?
Ive bought “the web developer bootcamp” and “iOS11 &amp; Swift 4 - The complete iOS app development bootcamp”. Im mainly looking for swift stuff with a bit of web page dev
Nice looking thumbnail indeed. 
I’m on the Bootcamp one now by Angela and love it. She’s a wonderful instructor. 
Ive bought “the web developer bootcamp” and “iOS11 &amp; Swift 4 - The complete iOS app development bootcamp”. Im mainly looking for swift stuff with a bit of web page dev. Thanks for the tip though
Thats actually the one i just bought now. I havent started but I hope youre right
She starts you out telling you what kind of system you need, how to get Xcode and then introduces you to the interface. Each lesson builds upon the previous. Ever so many lessons she gives a challenge. You’ll get a download with resources and she’ll want you to demonstrate what you’ve already learned. Very effective. 
Are we going to have this exact question every single day?
well sorry im trying to learn
I really enjoyed [this](https://www.udemy.com/complete-ios-11-developer-course/) one. Haven't bought any others, so I can't compare it.
Oh, and don't buy it for the full price. It's often on sale. 
Great work, this looks really nice. Love that it's done through a collection view layout
Probably some useful podcasts available. I could suggest some business podcasts, but I don’t know any that are code-centric. 
I'll give it a try. 
Some good Swift related podcasts: Fireside Swift The Learn Swift Podcast Swift Unwrapped SwiftCoders Those are the ones I generally listen to on my long commutes, always some good info in there. 
I'm getting desperate :( For something supposedly "everyone uses" vs storyboards, there sure seems to be absolutely no working tutorials for it. Even Apples docs aren't updated. 
Better than nothing at all really. But yeah podcasts would help, you'd get an inside look on certain topics. At some point you'll need to dive in though.
You mean video podcasts?
/u/miotke mentioned some. Inside look meant to what people are talking about in regards to Swift like updates, problems they've encountered, and so forth.
I use Firebase and give users a "verifiedstatus" and set it to "nil" upon account creation. Inside my app I have it set up so that it checks if the user's status is nil or not. If it's "nil", the image view is hidden; if it's "verified", the image view is not hidden. I manually change the user's verification status inside of my Firebase database. It works great.
Nvm figured it out just had to access child vcs of the next nav controller
Podcasts are good if you're stuck in the car but, like /u/deadshots said eventually you have to jump in and write some code.
Thank you. 
You’re gonna need to give more info than that tbh
Hey Adem87. Zack here from Fireside Swift. My cohost Steven and I created the podcast with people exactly like you in mind! We’d love to have you as a new listener! The other shows on our network (The Learn Swift Podcast and SwiftCoders) are great as well. As others have said, writing code *will* do the most for you. We can’t replace that, but hopefully we can be of some help in setting your foundation. If you need anything reach out to us on Twitter at @ZFalgout1, @SWBerard, or @fireside_swift. Thank you miotke for suggesting us. It means quite a bit! Y’all rock!
They also make laptop holding accessories to hold your laptop ‘safely’ on a swing arm. Nothing compares to actually coding. There are also some apps for your phone that you can learn to code with. You need to be actually solving problems. Whether it’s writing out the code problems by hand or by inputting on phone app or on laptop. Solve problems and build stuff. 
[removed]
[removed]
Database side it'll just be a value that you set
Sure, here you go. if isVerified { verifiedImage.isHidden = false }
I'm kind of confused as to what you're asking. I think you want to know if you can download the image but not save it to the device? Of course you can do that. Just don't save it. Whenever you see an image in a web browser you have "downloaded" it, but you don't save them all to your hard drive 
‪Yes! Firebase should pass you a URL string. From there: var localPic : String? { didSet { guard let bgImageURL = localPic else {return} guard let url = URL(string: bgImageURL) else {return} photoImageView.image = nil URLSession.shared.dataTask(with: url) { (data, response, error) in if let err = error { print("Failed to retrieve image: ", err) } guard let imageData = data else {return} let image = UIImage(data: imageData) DispatchQueue.main.async { self.photoImageView.image = image } }.resume() } } In this case localPic is string passed from Firebase And photoImageView is a UIImageView that I'm setting the image on. Hope that answers your question. 
Ah I see. So if I just retrieve an image from firebase and display it in the app, it won't download to the user's phone? I'm new to programming so this is all new to me. 
‪Yes! Firebase should pass you a URL string. From there... var localPic : String? { didSet { guard let bgImageURL = localPic else {return} guard let url = URL(string: bgImageURL) else {return} photoImageView.image = nil URLSession.shared.dataTask(with: url) { (data, response, error) in if let err = error { print("Failed to retrieve image: ", err) } guard let imageData = data else {return} let image = UIImage(data: imageData) DispatchQueue.main.async { self.photoImageView.image = image } }.resume() } } In this case localPic is string passed from Firebase And photoImageView is a UIImageView that I'm setting the image on. Hope that answers your question. 
This was my first reddit post...so I'm sorry about the format. Let me know if you have questions! Happy coding.
Download the WWDC videos! If you're beginning, they can be good.
I drive a lot for work as well (~3 hours per day, sometimes more). As others have mentioned already, SwiftCoders, Fireside Swift, Learn Swift Podcast are all good options. SwiftCoders' host Garric interviews established iOS developers. Fireside Swift dives into a different Swift topic each week (and the show is really fun because the hosts are funny and informative) Learn Swift's host Steven interviews newcomers to Swift, and you get to hear the stories from a very diverse panel of beginners. Definitely worth checking out!
You can get a reference and cast it as your class. It's then which init you'll use and you can add the view. I can dig up some code when I get to my computer. I'm actually putting together slides to do custom views in both iOS and Android. Make a xib and then make it freeform if you want just any size. Then make a class that inherits from UIView. In the xib make the main uiview object whatever you custom class is:m. Then you can throw some stuff on and connect outlets and actions for buttons. You can use autolayout as long as you know that once you instantiate that view it could be an arbitrary size. let hudView = Bundle.main.loadNibNamed("Hud", owner: self, options: nil)!.first as! HudView That will take your custom view and from there you can add it to another view. It's good to keep a reference or just add a tag and check if a view with that tag exists.
You might want to look at the usage before determining when to not store a file. If you have an app where the user can scroll thru pics and you're not caching those pics, you''ll have to re-download every time the user comes to that page. Example: if you have 100 pages and you download the pic for each page as the used moves around, you might be downloading the same image over and over again. If your concern is disk space, you can put the pic into a temp storage area for caching, then delete when done or if it's automatically deleted by the OS. One reason to be concerned over this is that the user might be on a limited data plan and also the speed of the app.
I had a two different jobs years ago, one I would read books and test myself on knowledge. It really helps because you can take one chapter and read it over and over again and quiz yourself. Another job, I bought a notebook and a power inverter. I would sit there and program a few hours a day while waiting for work to come in. This is ideal. I had a cable lock and underseat storage. It set in the steering wheel and put the seat back, have some coffee and wait for the jobs to come in. If you're driving at the time, I don't think there's a lot of benefit because you really need to concentrate on the details. General iOS/mobile topics and discussions about what's new... would be fine while you're driving. Digging into the code, really requires strong focus.
Yes. Also anything you see on your computer in a browser is on the computer. In a temporary storage. You can’t “look at” the internet. You always need to retrieve the data you want to look at. No matter where or how. 
I think you’ve got the right idea, but are somewhat confused with the terms. “Download” means exactly “transfer over the network”, or “retrieve” as you say. The question is an oxymoron. You can’t “retrieve” the image without “downloading” it simply because the two words mean the same. However you *can* download/retrieve the image without *storing* it on the user’s phone’s file system. You just download it into memory, display it on-screen. 
Also, not strictly Swift but check out the podcast Inside iOS Dev. 
[removed]
I’m kinda confused what you mean by a tutorial like you just new file and make one then assign it to the class of the view / view controller you want and then if it’s a vc you use unit with nib and the other comment here shows view init
Not really a cleanway but any good turorial series should cover the basics like messaging (Notification Center) and it is a part of how to architecure your app. So try to search that way: common ios design patterns without usong 3rd party libraries.
I feel your pain OP. Apple does actually have some good documentation you can read to get an overview of the capabilities iOS provides: - [iOS Technology Overview](https://developer.apple.com/library/content/documentation/Miscellaneous/Conceptual/iPhoneOSTechOverview/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007898-CH1-SW1) - [App Programming Guide for iOS](https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007072) Both these docs are essential reading imo. Why Apple has hidden these and other great docs away during a fairly recent update to the Developer Portal is beyond me. ¯\_(ツ)_/¯
When building the UI, do most devs use the interface builder in Xcode? I prefer using a markup language when creating a UI. From a quick google search I found this [MarkupKit](https://github.com/gk-brown/MarkupKit/blob/master/README.md) and on tvOS they have TVML but I didn’t see a equivalent for iOS. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [gk-brown/MarkupKit/.../**README.md** (master → aac479e)](https://github.com/gk-brown/MarkupKit/blob/aac479e3f44059f7875e1600084ef1d6e892abcf/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dpc3an8.)^.
Do you know any good alternative?
🙏 Thank you!!!
I'd consider downloading some videos to watch on your iPad if you have downtime in between fares. I do this on the train and find that taking notes/writing down code helps me retain the information (not ideal but better than nothing). You can then do the actual coding when you get home; make sure you don't skip this like many people have said already. In terms of material, maybe you can check out some of the stuff on Udemy as a starting point since it's pretty inexpensive right now with the sales they are running. You can supplement that with the Apple Swift documentation if you don't get something. This course looks like it's $10 right now. It's by Rey Wenderlich and it looks decent: https://www.udemy.com/ios-and-swift-for-beginners-200-hands-on-tutorials/ 
Ray Wenderlich and his team recently put out a udemy course, they're stuff is usually pretty good and in depth.
Holy shit thank you so much. I was getting incredibly frustrated yesterday. Every tutorial I found had tons of nested init helper methods, some used this UINib method that threw errors left and right despite doing it exactly how it was shown in the videos, and overall it was just incredibly frustrating and I knew it should be easy, I did it in the past years ago before storyboards were a thing. 
You can get a lot out of watching WWDC videos revealing new software (e.g. I watched the introduction to PDFKit one lunchtime).
I am working on a casino with poker, blackjack, bingo, roulette and slots using Kitura for real time playing. But lost all motivation so it's now abandoned. Now I started working on a Poloniex API in Swift just copying and improving the ones available in Python and Node.
eh, not free :/
Step 1 should be learning how to search.
You can try [hackr.io](hackr.io) which is a site where you can find the best courses on a certain programming subject. It’s pretty cool I use it whenever I want to find a good course 
Last month I released [Dive Into SpriteKit](https://www.hackingwithswift.com/store/dive-into-spritekit), which teaches SpriteKit in an entirely new way – if you ever read Choose Your Own Adventure books as a kid, you’ll feel right at home with it! Today I finished the last of my [Hacking with Swift Live workshops](https://www.hackingwithswift.com/live), so my plan now is to convert the sessions into HD videos that I can put on the store. Doing online workshops was a lot of fun, but the six or seven hours of non-stop speaking was intense; I think I deserve a short break :) Apart from that, I’m busy running the [Swift Community Awards](https://www.hackingwithswift.com/awards) – we’ve had about 3500 votes so far, and the winners will be announced on November 15th. I also just updated my [Server-Side Swift book](https://www.hackingwithswift.com/store/server-side-swift) for Swift 4 and Kitura 2, so if you bought that previously you should have received the free update already. Later in the month I’ll be announcing my latest book, so I’m busy putting together my final notes ready for the launch. So, November is a surprisingly quiet month for me: some updates and a new book, but also the chance to catch up after the hectic period of updating everything for Swift 4. I think I’ll spend the month wasting time with Animoji instead… ;)
Strings are notoriously much more complicated than most people understand, and most languages make it easy for you to do what you might think is the right thing while doing something completely wrong. (e.g. languages/libraries that expose strings as pure bytes; unless you know you’re working with ASCII, accessing byte by byte is almost always wrong) Swift addresses this by making strings a collection of graphemes clusters (AKA what a user might identify as a “character”), but indexing into a collection of graphemes clusters isn’t as simple an operation as it might seem — an innocuous `str[n]` can easily be an O(n) operation to calculate boundaries. Disallowing you from indexing with an `Int` (easy but wrong) ideally prevents you from too easily writing accidentally-quadratic iteration loops, or assuming that you’re doing the right thing when you’re not.
After 9 months of development, I have finished and released my first ever app, [LinguaBrowse](https://itunes.apple.com/gb/app/linguabrowse/id1281350165?mt=8): a free web browser for reading foreign-language websites on iPhone &amp; iPad. It allows you to immerse yourself in native texts in any of over 30 languages without having to constantly switch out to different apps for tools like dictionaries and alphabet charts; everything you need is inside, and accessible with a single tap. FEATURES: * Tap-to-define: defines a word with a popup dictionary. * Tap-to-speak: speaks the word aloud (via text-to-speech) * Add phonetic transcriptions: add phonetic transcriptive text like pīnyīn (for Chinese), hiragana (for Japanese), or Roman characters for any other language (e.g. Russian, Greek, etc.) * Universal: There's large support for different language pairs (because not everyone is a native English speaker!), so e.g. a Bulgarian can learn Croatian using Bulgarian&lt;-&gt;Croatian a bilingual dictionary. Really would be pleased if anyone could give feedback on it (here, or wherever). I haven't had any free time to do much on the subreddit yet so it's a bit bare at present, but you can subscribe to /r/LinguaBrowse for updates!
Does it really teach good software design? I’ve found in a lot of the udemy courses online they wrote very sloppy code.
I've found most Udemy courses are good for teaching the APIs, but fail when it comes to actual engineering. The iOS development class on iTunesU offers a great introduction to iOS development, with a heavy focus on designing things properly for MVC.
I did, but I don't like to watch it in regular speed. I downloaded them and watched them at higher speed with vlc, but this is impossible on the iPad or iPhone. Really sad. 
I’ll have to check it out. Thanks for the reply.
Yeah, I found this out as well. Basically what it comes down to, is that you first see if you can satisfy requirements by cobbling something together with existing UIKit stuff. For example, I once had to make a control where the user could select which bottles were filled, where the bottles would always be two dozen, in a case. So I just made a bunch of stackviews with a bunch of buttons, and combined these into one view. Other times, you have to create it yourself. I have once made a spinning wheel. It's basically a rotating view with some gestures tacked on, and a lot of custom drawing. My suggestion would be: - split up your custom control in parts - each part becomes a view, with custom drawing code - combine these into one main view class - add gestures to this main class, which then hands out the work to its subviews 
Using Swift on the Raspberry Pi to build a dashboard control unit for my jeep. Basically it's a PiTFT touch display for status display and a bunch of sensors &amp; relays on the other end. I ended up building a flexible widget / screen panel UI system for the sensor display / interaction. Overall it's mostly hardware though.
Hi, thanks for your reply. I am able of creating 'simple' UI elements that combine subviews into one functioning unit and have done so in the past. The problem is that I am not doing everything efficiently and neither are most tutorials. Also, I am not capable of creating complex UI elements and would love to learn more about it.
ok, how do I search? 
Here is a breakdown that I wrote up a while back for the different ways for objects to talk to each other in iOS. https://softwareengineering.stackexchange.com/questions/267729/ways-to-do-callback-when-and-where/290164#290164
I’ve finished 2 courses. First one from Rob Percival was more about basics and showing what all can Swift do and the second one was from DevSlopes (Mark Price), he went again through the basics but it became advanced pretty quickly and learning all good practices. I really recommend doing some basic course of programming and then giving shot to Mark, I have also already done some other courses from Mark like web and android and I don’t regret it!
You're looking for `myString.prefix(4)`.
I released an AI food diary app. You take a picture of your food and it tells you how many calories and macronutrients are in that meal, all from the pic. https://itunes.apple.com/gb/app/tasty-idea/id1292862167?mt=8
Link?
 &gt; Link? [Here you go!](https://upload.wikimedia.org/wikipedia/en/3/39/Wakerlink.jpg) --- ^(I am a bot. | )[^Creator](https://www.reddit.com/user/alienpirate5)^( | Unique string: 8188578c91119503)
https://itunes.apple.com/us/course/developing-ios-10-apps-with-swift/id1198467120
Angela Yu course is very good to start from zero, but it lacks of some software engineering principles. From my own experience, the Devslopes course give you some insight using these principles, such as code clean up, unit testing and project organization. Also, it gives more theoretical topics for Swift programming.
Where would you guys advertise a game that you made in Swift?
What's most useful means we have to know what you are trying to do. Notifications are great ways to send messages between objects.
I do, but I do it for a specific reason. I use the IB to make a storyboard that is a skeleton of the UI flow. It helps me (and the team) keep in mind the flow of the product. I then often remove the top level view of each of each scene. Now, this applied to Objective-C before, since it was in the ViewController.h header since at least 2009, but if the top level view is not found, the view controller will look for a .xib that is the same name as the view controller and load that automatically. This meant that everyone on the team could work on their own view controllers and have their own XIB and not worry about someone else editing it and getting merge conflicts in the storyboard or scenes. Also, you can make components of your product (I did for our onboarding and registration) and load or dismiss that whole part of the product with 1 line of code by presenting a view controller in a specific storyboard. The great thing is that all the memory is automatically managed for that whole section too. The storyboards became things that we only edited to adjust specifics or add new parts. Each view controller having its own XIB removed the problem of too many people working on a storyboard at once and creating conflicts or otherwise causing an activity that would waste time. 
While in concept I love KVO, if you don't remove them when no longer needed, it's really easy to cause a sigabort.
[removed]
[removed]
How can you display something if you do not have it to display? If you have the image URL, then get the image from the URL and display it.
An XIB is just a view.
Why the fuck don't they indicate that? Jesus Apple.
[removed]
[removed]
[removed]
Yes
Just public [Serrano](https://github.com/pcpLiu/Serrano), a graph computation library in written Swift. Currently, it is still in alpha development. Welcome contribution.
Wow congrats! I am going to look into these but i heard some iffy stuff about DevSlopes so id have to do my DD and research more. Will definitely look at rob though
Wow looks exactly like what i was looking for. Thank you for this
[removed]
Thanks for posting, I'll check it out. BTW, the link under "Docs" is a 404 error. 
Thanks! DevSlopes courses are different then other courses. For me, they feel more like real life programming, for example there was a 30 min video in Android development which was only about removing a single bug where Mark was trying all the layouts, layout settings etc. It was unnecessary video but it helped me a lot to understand all UI options. Also, Mark will tell you to read documentation and that he will teach you only some “good practicies”. They even sometimes don’t finish apps in the courses as they just want to show a few new features while Rob has always finished everything and it became boring pretty quickly as he was doing same thing over and over in all the apps. By the way, all courses can be bought for $10-$15 as there are sales on Udemy almost every month. If there is no sale try to Google [Udemy coupons]. Also, I think there are no bad courses but some of them will just teach you how to be more efficient programmer and/or some of the are more entertaining/easier to watch.
Emoji are just a common place that English speaking people encounter multibyte characters in UTF8. In languages that use a different alphabet than English, the “hard parts” of String handling apply to nearly everything.
So those who made this should live on love and air? 
Force unwrappings, force unwrappings everywhere!
Thanks, fixed.
Thanks for the comment. I hate these warning too. :) These 4 or 5 force unwrappings involving with symbols processing in graph. I'll see what I can do better.
Use optional binding (`if let...`, `guard let...`), lazy instantiation, optional operators (`map`, `flatMap`), optional chaining.
Thanks!
Looks great. I will definitely keep an eye on your project. Good luck with it. I did a [similar thing](http://graphicdesignertoolbox.com/) for macos a long time ago. 
Thanks neoneye. That work looks awesome! Looking forward your contribution.
Anybody interested in wrappers for other exchanges like Bitrex, Bitfinex, Kraken? Let me know. I'm available and always looking for the next shiny thing :)
Don’t know what the cost is now but I bought it for $15. Well worth it. Rarely anything good is free and $15 is well worth the time effort and skill the trainer provides.
Yes but its all about how to access it in Swift and iOS 11. Literally no single tutorial out there that I have found has working code in it for loading Xibs or accessing their properties. Even channels I've see on Youtube that talk about going "storyboard-less" have no tutorials on how to use Xibs. 
Are they different than xibs on a Mac, or with Obj-C? That's all the Mac had, for over a decade, so there's a million tutorials out there if you don't restrict yourself to "must use Swift on iOS 11".
The problem is I have to use them for Swift on iOS 11. I have plenty of my own code I've written using Xibs in the past. What I'm saying is there is literally nothing that works for Swift and iOS 11. Even in the tutorials I've found there are scores of people beneath stating that it isn't working in the latest OS. 
This is a very good question. I would love to know how to read the documentation. I would like to know how to apply code in the documentation. It is very confusing. 
I would use the Swift Playgrounds app for IOS
I read it swearing all the time, "this is not fucking useful". 
I would check out Apple’s resources they are really good: Intro to App Development with Swift by Apple Educationhttps://itunes.apple.com/us/book/intro-to-app-development-with-swift/id1118575552?mt=11 And this for the nitty gritty on Swift: The Swift Programming Language (Swift 4) by Apple Inc.https://itunes.apple.com/us/book/the-swift-programming-language-swift-4/id881256329?mt=11
One major shortcoming in Crapple's documentation is that they are frequently guilty of omission. They will specify the details about *this thing*, but not associated things such as delegates or other parts that you need TO USE IT. They don't explain "and this is how you use it in this case". They don't add, "if you're looking at this, these are the associated things that you may also be concerned about." It's "here's this thing, what it inherits from" and that's it. Nothing that PEOPLE WHO ARE LOOKING AT THE DOCUMENTATION TO TRY AND FIND A SOLUTION TO A PROBLEM are most likely trying to find.
&gt; I hate these warning too. these warning**s*** When you use 'these', you mean more than one. You use 'warning' if you only mean one. You use 'warning**s**' when you mean more than one. 
On API pages, I scroll to the bottom to see Relationships first, and then go back to the top. The Relationships used used to be at the top, and I have no idea why they made the idiotic idea to move it to the bottom. Knowing the superclass is a pretty bleeping fundamental piece of information to have when reading a class interface! On Guides, I read the parts for the relevant features I'm implementing. They're nicely sectioned out, for the most part. It's not the world's best documentation (and their CSS makes it harder to read than it should be), but it's not bad. For some reason it gets much more ire than it deserves. Videos always seem so slow to me, and just brush past so many parts that end up being important. I never got the hang of learning from tutorials. I'm not writing a program exactly like their sample problem, so I'm going to end up needing all the rest of the reference material in about 20 seconds, anyway. Just give me all the relevant information from the start.
&gt; They don't add, "if you're looking at this, these are the associated things that you may also be concerned about." There's a "See Also" section on the bottom of almost every page. Can you give an example of what you're talking about?
I don’t. I goto the real man pages stackoverflow 
I just wish they would add useful examples or common misconceptions/mistakes. Would save me a lot of time
I'm a noob but yeah the documentation isn't very helpful. Half the time StackOverflow has much better examples.
Yes! U caught me! ;) 
I just created a YouTube Channel [http://youtube.com/c/MentalCalendar](http://youtube.com/c/MentalCalendar) for my **Mental Calendar** app and wanted to work on some marketing aspects; however, now that the *iPhone X* and *iOS 11* is out, I'll probably spend a few days updating auto-layouts and App Store descriptions instead. App Store Link: [Mental Calendar - Learn The Weekday Algorithm](https://itunes.apple.com/app/id1225480327?l=fr&amp;mt=8)
You need to cast it to a dictionary before you can access it's values with brackets (aka subscripting). On mobile or I would send example code
Whoa sorry! Didn't realize this thread was still going. You should start now. IMO you should categorize your priorities as such, health (make sure you sleep!), then school, then iOS. One - two iOS books a year is fine if that is all you can do. Just reading through them, or studying in depth is up to you. Just keep in mind that at some point you have to learn the material before you start working in the field. So you can either do it now, or after you graduate. I decided to do it while in school and snagged a good job before I even got out of school. All I did was memorize about half of the [apple swift lanaguage](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309) and went through the swift apprentice and iOS apprentice book. Then everytime I failed interviews I would write down questions I knew I didn't know and study them. Honestly there is only about 100 questions that you will be asked in an interview. It seems like a lot but when you talk about them all the time, it becomes really easy. GL
Gamesthatimadeinswift.com/advertise
I read their guides to learn how to use a new framework or API, and then refer to documentation and examples after that. Sometimes I check out relevant WWDC videos. Apple has good documentation for the most part but you have to read their guides and watch videos, not just API docs.
Why name it OSet instead of OrderedSet?
Mostly because when first testing against other implementations, I had to avoid import name clashes somehow (AFAIK there's no real way to do it in Swift, at the moment). Then I decided to stick with it, for better or worse :-).
Left to right top to bottom. Sometimes more than once. Especially after googling an example on stack overflow.
Without the documentation pointing why the things in "See Also" are relevant, or what you could learn there, how are users to know they're relevant to what they need? Most of the time I just guess if the linked documentation contains the answer to a question I had about whatever I'm looking at.
You should really offer typed responses so users don't have to manually parse the responses every time. Also, looking into the router pattern (Alamofire has a good example in their README), it would make your requests far more generic without having to use a nasty request builder.
Excellent talk, but interestingly a little old. Will need to be updated when conformance access paths become witness-dependent for conditional conformances.
This summary is nice to see. 
Depends, but I do read it as an authoritative source. So, Stackoverflow, wwdc videos, Ray Wenderlich.
practice.
Thanks mate 😊
Just finished adding GeoPDF support to our Mobile GIS application, [Mappt Elements](https://itunes.apple.com/au/app/mappt-elements/id1241875400?mt=8). This was by far the most complex raster image format I've had to deal with (GeoTiff and ECW was a cake walk by comparison). I also tied directly into the USGS NationalMaps database so users are a few clicks away from access to over 330,000 topographicals of the US. It's a soft launch but still kinda depressing how little uptake I've seen.
I would suggest using [AsyncDisplayKit](https://github.com/facebookarchive/AsyncDisplayKit). It seems like the best option for you. 
Fairly clean model! Wondering how much a solution similar to that would aid in more reflection capabilities I'm the future.
Warning: this seems to simply be combining a set and an array (rather than use a linked list of set buckets or a [naturally ordered hash collection](https://mail.python.org/pipermail/python-dev/2012-December/123028.html)), which means: 1. structs will be duplicated, which may not be expected 2. mutations imply an array lookup &amp; alteration next to the set one, with the corresponding complexity implications (e.g. remove is `O(n)`)
Other than PDFs, I use Lottie a lot as well, for when animating vector images https://github.com/airbnb/lottie-ios
I always try and spend some time researching through apple's documentation, using Google's site specific search rather than apple's search function. I try and do this as much as I can before stepping over to stack overflow. Sometimes though it's hard to know even which technology is the one to use, let alone how to use it. BUT I always go back and review Apple docs afterwards so that I can get a feeling for how they write. I hope that this way, bit by bit, I'll get better at understanding the docs first time
That's a nice one! I'll give it a try, thanks for sharing mate! 👍
[removed]
This is also the approach I try to follow. In my opinion, Apple should provide easy to follow guides to master certain topics. Seeing that a large of the proportion of developers is not a native English speaker (myself included), people are having a hard time.
I've started learning swift from scratch for 5 months and just released this game last month. https://itunes.apple.com/vn/app/minoom/id1259135252?mt=8 It's basically a tapping game, where you tap on the buttons in particular order (or not) and compare your speed with other players in the world. Hope I can get some feedback. 
I just wish there included a way of implementing the code in the official Apple Documentation, like give an example 
You can create either by scratch or instant solution. The best and easy way is to prefer an instant method **Apphitect IM Solution**. Instant + Save the time &amp; process.
When you, for example, import `OrderedSet` from Library `Foo`, you can disambiguate your implementation from the other one by using `Foo.OrderedSet` or `YourModule.OrderedSet`.
There are multiple approaches, like setting the startdate and endate in the database. You can query than and take select everything &lt; 24 hours. Another approach and this will give you better performance is using a job that scans the database for obsolete entries.
bad bot
By reading StackOverflow.
This is my list of useful code snippets, tips &amp; tricks, shortcuts I found over the Twitter. I was collecting them for myself and then decided to organise in the article. Let me know if you think it's something useful for doing it regularly. 
Blame extended grapheme clusters, where a series of scalars equal a single letter.
* Converting my app (Math Problems)[https://itunes.apple.com/app/id1244547440] to Swift 4. * Implementing a parser that parses the player's answer and builds a math expression tree. 
1. [Calm down.](https://www.reddit.com/wiki/reddiquette) 2. In the last 3 programming languages I've used, the equivalent of `text[3...]` did 3 different things, and none of them what I (or the user) wanted. 3. Collection's `subscript` is expected to provide O(1) access, and random access to strings is not O(1), when using a format which is memory efficient. Are you proposing (a) that subscripts access the bytes, in whatever format they happen to be, (b) that strings are stored in a ridiculously inefficient format simply so subscripts are efficient to compute, or (c) that we relax all performance requirements on subscript()? 
Apple designs and tests their APIs for usability, so that's the first line of defense. They also do occasionally add other such notes, but the developer pool using these APIs has grown by several orders of magnitude in the past few years. You can file documentation bugs, when you run across something that needs it. It might not help but it's much more likely than complaining on the open internet.
Also translation formats. Even back in NSString's UTF-16 world, `\N{MUSICAL SYMBOL G CLEF}` is multiple code units even though it's a single code point. `NSString(string: "\u{1D11E}\u{1D11E}").substring(from: 3)` gives gibberish. Text -- in the abstract sense of any sort of thing that humans write -- is complicated. We can't just pretend it's 1963 and we're using telegraph codes forever.
See also the answers to https://reddit.com/r/swift/comments/7asm3l/reason_for_weird_stringindex_since_swift_3/, which was asked just a few days ago.
Could be that render markup bug. Toggle it in Editor\Show Rendered Markup
That's good to know, thanks. But anyway, what if `Foo == OrderedSet` as well? E.g. how to import both https://github.com/bradhilton/OrderedSet and https://github.com/Weebly/OrderedSet?
Which is fairly common way of obtaining an ordered set :-). I agree that this could be further improved, I've had some other ideas as well, but decided to keep the implementation simple instead, while still being reasonably fast (unlike existing alternatives that I've found). Still I'll possibly get back to it sometime later. Out of curiosity, what's the deal with this Python discussion? I mean it does not seem to end in conclusion, was it implemented in the end or not?
Everything's seems to be commented out... any reason why every single file opens and all lines are comments?
Awesome!
You could probably implement such access yourself, but the problem with that is that it will not be O(1) but O(N). The problem here is that Swift aims to be very safe. You should never end up pointing to an illegal character. In Go and Julia which also use UTF8 encoded strings as Swift, they solved this by simply allowing you to point to illegal characters. That given the option of O(1) access times to characters, because a Go or Julia index is an index to a byte and not a character. Personally I don't agree with the Swift choice. I would prefer less safe but more practical code. However I respect the choice. As you build larger programs you might end up appreciating it. Unfortunately I am afraid Apple has shot itself in the foot because people will likely end up implementing text[3...] access and shot themselves in the foot.
This isn't from Octoer, but I really like this one https://twitter.com/0xced/status/900692839557992449
Currently, I don't think you can disambiguate two modules with the same name. I think this problem doesn't occur too frequently though. In your specific case, if you use cocoa pods, you're in luck, because the one module is named `SwiftOrderedSet` while the other is named just `OrderedSet`.
&gt; Which is fairly common way of obtaining an ordered set :-). Debatable. It's a common way to retain an order next to a set, which is a slightly different thing as (as noted) it has performance impacts detracting from the original set. &gt; Out of curiosity, what's the deal with this Python discussion? I mean it does not seem to end in conclusion, was it implemented in the end or not? Yes, it was ultimately (a few years later) implemented in [Pypy](https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more.html) and [CPython](https://bugs.python.org/issue27350) and inspired [Rust's ordermap library](https://docs.rs/ordermap/0.3.0/ordermap/). A similar idea was also implemented [in PHP 7](https://nikic.github.io/2014/12/22/PHPs-new-hashtable-implementation.html) (PHP had previously relied on a doubly linked list for ordering).
Hey man I just downloaded your app to see ML on iOS since I have been trying to see how it works. One main thing that I see in your app is that when you go to put a title on the food (after selecting if its bfast,lunch,snack, treat) and you ask for the "dish name" I can't push enter to dismiss the keyboard (resignFirstResponder() right?) and the app becomes pretty much unusable after that point. Seems like an easy fix! (Also you can't leave the name as "dish name" a UIAlert pops us saying that you need to add a dish name).
Hi Winter_already_came! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7b85dk/where_to_go_after_stanford_ios_course/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
wow! I actually haven't seen this. Thanks!
I’ve been continuing work on my [FoodEase](https://foodease.xyz/download) and my open source library [PDColorPicker](https://github.com/pdil/PDColorPicker). FoodEase is an iPhone app that presents you with options on where to eat next. It takes into account your settings, location, and the time of day. Over time it will learn what types locations you prefer and tailor your results to your preferences. It’s especially great when you can’t decide what to eat or if you’re traveling to an unfamiliar area. I’m currently planning a big feature update for sometime this month. PDColorPicker is an open source library that allows you to very easily include a modal color picker in an app. It lets the user select a saturation, brightness, and hue value. It even supports iOS 11’s drag and drop API so you can drag the color outside the app on iPad. On the todo list for this is to add support for Smart Invert Colors and the ability to change transparency (alpha). 
Hey, nice work. I didn't know you wrote it. I did a sample project for my team a long time ago illustrating how useful the vectors are. Part of it was also creating Objective-C extension methods for UIColor to create custom shading of the colors, scaled bitmaps, scaled bitmaps with n pixel transparent border, desaturated images, disabled images. Lots of convenience methods to make creating the properly desired images easier and allowing color changes for branding. I remember that we had some problem with the custom coloring, and we wanted that as opposed to a tint since we wanted to have a graphic that was always the desired color, not the result of the graphic + a tint since that's another route to cause a problem. 
Hi mate, thanks for raising this! A couple others have as well. I've got a fix up in review at the moment so keep an eye out for the update. Thanks so much for your feedback! 
I released an app, [sculpty](https://itunes.apple.com/us/app/sculpty/id1305544913?mt=8), just today. It’s an ar drawing program. ARKit is very neat. 
Love the posts! Only way Server-Side Swift will grow is with its glowing community (:
witch is sadly very small
Maybe I'm missing something here, I found a compare here: https://swiftmodules.com/blog/json-parsing-in-swift-pt1 And it doesn't even mention ObjectMapper. Are they used for very different things?
Is there no just plain command line hello world?
I don't have the option to go to the next lesson (at the bottom it says page 1 of 8) Not sure whats going on or what setting I maybe need to change. Its happened after I updated Xcode
Don’t use any! Swift 4 can serialize and deserialize JSON natively, without third party libraries. Check out http://benscheirman.com/2017/06/ultimate-guide-to-json-parsing-with-swift-4/ for some good examples. 
We've recently added a feature to [quicktype](https://quicktype.io/) that generates Swift models from a directory of sample data or URLs. In this brief video, I show how to integrate quicktype within an Xcode project to seamlessly generate types for JSON data, allowing you to use code completion and work with JSON data without writing any additional code! I'd love to feedback on this feature–it's less than a week old and I don't believe anyone besides me has tried it yet! Thank you.
how about? infix operator &lt;&lt;: AdditionPrecedence func &lt;&lt; &lt;T&gt; (left: inout [T]?, right: T) -&gt; [T] { left = left ?? [] left!.append(right) return left! } var arr = ["a": [1]] arr["a"] &lt;&lt; 5 arr["b"] &lt;&lt; 10 print(arr) // ["b": [10], "a": [1, 5]]
Try this out (new in Swift 4): dict[object.string, default: []].append(object.number)
Render the markup: go to menu Editor\Show Rendered Markup Xcode 9.1 seems to have a bug here. You have to keep toggling this setting on each page change. 
LOL, I was just about to ask about that because I just found some Swift 4 tutorials.
Since you know for certain that title can never be null, you can force-unwrap the optional by adding a “!” after the variable name. So use “\(title!)”
Yeah let me know when you fix it
Thanks a lot!!
Doesn't Google support CalDAV?
Please check optional before if let name = optionalName { print("\(name)") }
While in this case it’s relatively safe to assume the value is never nil, force unwrapping is generally a bad practice. You should use optional binding like the other commenter suggested, or optional chaining if applicable. 
I hope this happens for me when it’s released. Autocomplete is one of Swift + Xcode pain points. 
Are CocoaPods an option? Is yes, check out SwiftyJSON. 
SourceKit is certainly behaving much more nicely compared to the first Xcode 9 GM. Probably latest compiler crasher fixes made it more stable. I still get the occasional random 10GB memory spike from SourceKit, but force-closing it puts things back on track almost instantly.
Your app will crash if there is no text. I advise you to use title ?? "placeholder" or if title != nil {/*only here should you use the power of ! */ }
you can run the project from the command line as well. just do `vapor build` and when the build is done, `vapor run`, if you prefer not to do it from Xcode.
yes, but growing by the day! :)
Maybe a retain cycle. It's really hard for us to guess at what your code is doing. It's possible your map view controller (mapVC) has a strong reference to something, like a delegate, that also has a strong reference back to the mapVC. Or maybe there's a more complicated retain cycle. Or maybe something that always stays in memory has a strong reference to the mapVC. If you run Instruments, there's a tool called Leaks. That might help you start digging into what jerk won't let go of your mapVC.
Any remote jobs website is cool to me! Keep it up!
Could you please add list : Visa Sponsorship jobs?
I mean- without any web server being involved. What's the swift equivalent of: main(){puts("sdfsdfsdf");} ? 
Thanks for your reply I found the problem using instruments. I didn't even know they existed before your reply.
This is great, Where are you actually storing the list?
can u include ios tester or ios mobile qa jobs to the list also. 
Update is now available mate. Let me know your thoughts! 
this thread is a web app hello world using a server-side swift framework. what you're referring to is only swift and can be found all over the internet, and the [Apple Documentation](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html): print("Hello, World!") You can type this in a Playgrounds or even IBM's browser solution [here](https://swift.sandbox.bluemix.net/#/repl). Have fun!
Thanks for your feedback. I'll add those.
I store them in the database.
Thanks for your feedback. I'll add those.
Yep Yep I'll add it. Thanks for your feedback
Where is the experience/justification?
The link to the post is in the title. Here it is again: https://www.reddit.com/r/swift/comments/7bewf9/why_were_writing_our_website_in_swift/
We appear to have made a mistake and not linked the post! I'll try and get the author to update but here is the link for the time being: https://medium.com/hackers-at-cambridge/why-were-writing-our-website-in-swift-2e620ae7b72b
This sounds like the perfect candidate for an enum set to Int to compare the rawValue of each TYPE. There's probably a better way of doing this, but here's something quick that made sense to me based on your values: struct Fruit { let TYPE: FruitType let color: FruitColor } enum FruitType: Int { case Apple = 0 case Orange case Banana } enum FruitColor { case red case green case yellow case orange } var fruitArray = [Fruit]() let redApple = Fruit(TYPE: .Apple, color: .red) let orangeOrange = Fruit(TYPE: .Orange, color: .orange) let greenApple = Fruit(TYPE: .Apple, color: .green) fruitArray.append(redApple) fruitArray.append(orangeOrange) fruitArray.append(greenApple) for fruit in fruitArray { // perform sort based on fruit.TYPE.rawValue print(fruit.TYPE.rawValue) // shows 0 1 0 } 
Thanks for catching this
Thanks! Already reading it
(:
Good read, quite interested in hearing more about the use of Stencil. Was there a particular reason you guys chose Kitura?
Love it, I’ll definitely be digging deeper tonight. 
I'll try that out, thanks. The last several times I looked, I ended up only finding vapor and perfect and I don't want to start out writing backends-- all the tutorials I found have me writing what amounts to web/rest servers. I'm looking at swift in a similar to Go.
CoreML can extract the locations of the major features of the face fairly accurately, though it had a fairly low frame rate when I tried it back in June
Stencil was good for prototyping but the lack of type safety made it feel a bit icky next to the rest of the backend so we switched it out for our alternative Swifty HTML builder. Kitura was chosen because of the investment it had from IBM. We wanted to have some confidence it would stick around for future years. It remains to be seen if this was a good choice but I think they're doing good work. Vapor would be our second choice for the work they've put into Swifty database interaction.
oh alright, thanks, I'll take a look into that!
Check out this project. Core ML will only give you 2D points on a plane that denote where the facial features are. https://github.com/DroidsOnRoids/VisionFaceDetection
These are awesome thank you! This should be stickied!
I️ can now put the name but when I️ press the check mark it doesn’t register the touch...
Hi WhizKidRichie! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7bgbj7/add_qr_code_to_sharing_options_for_ios_11_camera/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Hi WhizKidRichie! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7bgenc/add_qr_code_to_sharing_options_for_ios_11_scans/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Where is that?
Yes. Bluetooth is probably the easiest way to go with that. 
Not sure I understand the question. The database is in the server where the website is hosted
You don't need CocoaPods to use SwiftyJSON.
Thank you very much for your really really awesome help! I got everything to work and understand it as well. I am really glad that there are people like you helping us beginners out, it's really motivating! I wish you a nice day sir :)
Something like this for internships would be amazing!
You’re right. I’ve always used it through it, didn’t occur to me. 
which calculates* BMI I calculate you calculate they calculate he calculates she calculates it calculates That's how it works in English.
&gt; custom property's custom properties. Why are you trying to make a word a plural by putting an apostrophe on an s? That makes it a possessive noun. English doesn't work that way. Don't do that.
Not only are you not helpful but you come off as a jerk... 
So you’d need to read data from a digital scale to get weight. There are several models out there. They won’t let you query them directly but you can get at the Nokia/Withings or Fitbit scales via a data api. As far as getting someone’s height from a medical device, I’m. It aware of any measurement scales myself that are “connected”
Or entry level, or a junior iOS developer... Still pretty rad, though! 
alright, thanks for the share!
Technically all you have to do is this: enum FruitType: String { case apple, blueberry, banana } extension FruitType: Comparable { static func &lt;(lhs: FruitType, rhs: FruitType) -&gt; Bool { return lhs.hashValue &lt; rhs.hashValue } } let someFruit:[FruitType] = [.blueberry, .banana, .apple].sorted() print(someFruit.map {$0.rawValue}) &gt; `["apple", "blueberry", "banana"]` Although this depends on a bit of a trick: the `hashValue` of an `enum` is just the order each case was defined. Like this: print(someFruit.map {$0.hashValue}) &gt; `[0, 1, 2]` If you don't want to depend on tricks you may need something similar to: enum FruitType: String { case apple, blueberry, banana static let order:[FruitType] = [.apple, .blueberry, .banana] } extension FruitType: Comparable { static func &lt;(lhs: FruitType, rhs: FruitType) -&gt; Bool { return order.index { lhs == $0 } ?? order.count &lt; order.index { rhs == $0 } ?? order.count } } 
This is one way to go about it and it works well. One nitpick is that `enum` cases are usually lower-case, which would also match the case of the strings in the post. 
seem like i have the same experience!!!
nice thread op, I also have this problem. 
Awesome how you get punished for upgrading to latest version..
Yeah, when I originally wrote it, I planned to go lowercase, but during work writing something in C#, the Uppercase notation came out and I ended up just leaving it alone to focus on other things. Honestly, I am thankful for your approach too though! I was thinking of using .map at one point too, so this helps visualize things better. It also allowed me to pull up a playground to play around with your solution for another way of approaching things like this.
Very good idea... I like it very much but where i see your checklists regularly, do you have any website for this or i need to check here itself.
Can you be more specific? What are you really trying to do? What are the attempts? 
I use Pulley for that. Also on GitHub. 
I know Pulley, it looks good but I'm afraid it doesn't work in landscape and personally I was looking into something easier to integrate. Also If I recall correctly Pulley doesn't support multiple sticky points but just three: the first, the middle one and the last one.
...because you are masochists?
Good read, I’m going to test this out on my app too
Well it depends, in my app I use HealthKit to get the users data and calculate the BMI. I think you should not complicate the process by using chips or external hardware. But if you are interested in something like this your probably should build something like a smart watch (FitBit, Apple Watch, etc.) I would think it’s possible but you are going to need a good budget and also some time developing this idea. I would recommend you looking into arduino chips and also looking into compatibility with iOS devices before starting your project. Good luck 
Thank youuuuuuuuuuu!! I really need it!
Seems like a pointless uphill battle to me but it's always hard to judge from the outside. Maybe they could be on the ground floor of something that will gain momentum over the next couple of years. 
You’re welcome 
Great to hear you like it :) As always this is not a solution for all your problems, but it can help to reduce them.
Sorry I️m very new to this but I’m trying to create an app with a camera function however I’m using a navigation controller which then puts on all of my view controllers that nave bar on top of the view. Will that affect adding a camera to those view controllers?
This looks really cool! May I ask what resources you used to both learn Swift and also the ones used for building the app? Nice job and thanks! 
Alright, thanks for the insight! I will definitely look into this when I have some time again . Cheers.
Sorry, dropped the “s” at your mom’ last night ! 
I hope you were able to use [codable routing and KituraKit](https://www.hackingwithswift.com/articles/38/kitura-2-0-released-adds-codable-routing) – they can make life a lot easier!
That is startlingly useful, and I could see it as a workaround for a whole number of use cases to fix the lack of NFC syncing. Shame I don't have a good argument for using it in my app as my users are not likely to share things in person.
I haven't dug into 2.0 yet but am excited to have a play! 
It definitely reads like "It's fun, and we can afford to right now", rather than a decision based on engineering requirements. I am a little curious, given those criteria, and if lack of code sharing is the major issue, why they're not specifically attacking that problem.
"Your project doesn’t have to be completely MVC or completely MVVM. In other words, MVVM is not an architecture." I don't understand the connection between these sentences. Is software architecture somewhere defined as "that which your project completely is"? I've never heard of such a thing, and [wikipedia](https://en.wikipedia.org/wiki/Software_architecture) doesn't seem to have, either. It can be as broad as "That which is fundamental to understanding a system in its environment" -- which I think sounds like a perfectly fine description of what MVVM is. Everybody's so caught up on being a unique snowflake these days -- "My new special thing is not one of *those*!" -- that they treat every categorization as a dirty word. You'd save everyone a lot of time if you just admitted that MVVM was an architecture.
This is pretty cool! My only thing would be the forced unwraps, but this does get the message across on building the QR code for use in other parts of an app.
Read docu about local notifications and look out for the triggers part. You can define a trigger on a specific date. 
In this context, "architecture" is meant to contrast "pattern," which I feel is a more helpful term for describing MVVM. Sorry to have wasted your time, though.
Isn't this redundant with AirDrop being a thing?
I don't think I've seen AirDrop when using UIActivityViewController with popoverPresentationController before. Correct me if I'm wrong though, doesn't AirDrop have Off/Contacts/Public settings or something along those lines? So if I don't have it to public because I don't have that person in my contacts, I'd have to change settings first? In that sense the QR background image in a space that'd otherwise just be a dimmed app screen seems a little more convenient to me.
I think I see your point, but I think in this case it might come down to personal preference and "handwriting". I also use modulo to wrap arrays instead of if-statements to go back to zero. Same for ternary operators instead of if-statements if possible. Lastly, I do miss my ++I and I++ in swift. ;) But jokes aside... where do you see the problem with the forced unwraps here? The *CIQRCodeGenerator* can't really cause any issues (personal opinion of course). Am I missing something... curious to hear your opinion. thanks
hah, I must have missed the *automatically* part....
I totally get it, I have similar nitpicky semantics, especially where the braces are (silly in the grand scheme of things, but for me it helps me see the first line of a method easier!). Having looked at the documentation for it, the only time I'd see it being an issue is with this line: let filter = CIFilter(name: "CIQRCodeGenerator")! Considering maintaining something like this down the road, an update could change the name or place it somewhere and break it. An easy fix, but that would prevent a crash in this case.
ObjectMapper and Gloss are both JSON mapping libraries. Having used ObjectMapper in the past, I can recommend it and its AlamoFire extensions if you're on Swift 3 or below. Luckily, Swift 4 largely pacifies the need for these with its Codable, Encodable and Decodable protocols. Here are some blog posts I put together on the subject (.playgrounds included too) * [Swift 4: Parsing JSON with Decodable protocol](http://makeitmobile.co/decodable) * [Swift 4: Converting Swift types to JSON with Encodable protocol](http://makeitmobile.co/encodable) When consuming JSON from APIs, one common pattern: // this type handles the JSON -&gt; Swift conversion with Decodable protocol struct RawResponse: Decodable { var id: Int? var name: String } struct InternalModel { var id: Int? var name: String init( fromRaw: RawResponse) { self.id = fromRaw.id self.name = fromRaw.name } } This is a convoluted example, but the gist is to create: * one type to get raw JSON into a Swift type * second type, internal to your code, which instantiates itself from the first type The first type is *centered around parsing the JSON* and likely use Swift Foundation and standard types heavily. The second type is the **internal model.** This type can instantiate itself from a RawResponse and will be *used within the rest of your Swift 4 code.* The RawResponse type isn't referenced anywhere outside of an api client or the InternalModel type. It lives on the edge of the boundary between your code and the APIs you're consuming and is not present in the core Swift code for your mobile app, watch app, command line app, etc. 
Thanks, would like to contribute. Had a lot lf headches trying to write some of the cool stuff at shadertoy. So would be awesome to build a neat collection!
Fantastic! Please read the contributing notes at the end of the (very long) README file – I'm keen to see any new shaders be as thoroughly documented so that other folks can use them as learning material. For me the project is half about having instant shaders we can all use, and half a teaching platform to help folks try it for themselves!
You might want to check out r/iOSProgramming.
I had this formatted nicely in the window, oh well. All jacked up now, maybe cut and paste into Xcode? 
Took me 9 months of my spare time to cobble together [my first app](https://itunes.apple.com/us/app/linguabrowse/id1281350165?ls=1&amp;mt=8) and launch it on the App Store (although it is reasonably complex: uses adverts, large-scale JS&lt;-&gt;Swift communication, in-app purchases, and it even interfaces with a C++ static library). At this stage I feel confident to approach any task I'd like to, but I find it far harder than in JS/TypeScript (my weapons of choice). I still have a lot to learn about architecture and UI, too.
Thank you so much! :) I added your site in my bookmark
Preface each line with at least 4 spaces and it will format it as a code block. More spaces for indenting, of course. 
I’m on mobile but I can help a bit. So In isintarget = currentHR etc.. you can’t change isintarget by changing currentHR. You would have to re-set isintarget. 
Hey. I haven’t used the plugin yet. But if it functions like the websites converter then maybe this suggestion will help. When I generate from JSON the names inferred for “datums” don’t make sense. They seem auto generated. Which is fine since they kind need to be. But instead of FluffyDatum it should be &lt;name of the containing json entry&gt;datum. Excuse me for the sudo json. But -data -album -data (this gets named PurpleDatum) Instead it should be named albumData. After it’s parent. 
This should work: let hrRange = 120...150 let currentHR = 47 switch currentHR { case hrRange: print(“in range”) case ..&lt;hrRange.lowerBound: print(“below range”) default: print(“above range”) } I can’t test it because I’m not at a computer but I’m pretty sure it compiles and runs. This is Swift 4. 
You both rock, thanks. On page 42 of the manual and beginning a new journey. Seems very logical, but there is not "instructor" so when I get confused, I'm left trying to figure out why. Thanks for your help!!
 let hrRange = 120...150 let currentHR = 47 switch(currentHR){ case hrRange: print("in range") case currentHR..&lt;hrRange.lowerBound: print("below range") default: print("above range") } He forgot to add currentHR in front of the 2nd case. 
Have you heard of kitura.io ?
Definitely you can I learned Swift 2 when people were using swift 3 so no problem the only thing you must carefully is about the syntax because it changes 
In its viewWillAppear, a viewController can tell the navigation controller to hide its navigationBar. You'll need an exit button of your own, so you can pop that viewController. A cameraPreview viewController inherits all of that behavior.
I would add the blue layer as the superview, white layer as parent container, and add the image view on the parent container
Do you have plan for iOS app?
I just bought 4 different ones, most Swift 4. All were $10 each (one as a twin pack). Why would you consider Swift 3 at this point? You should at least take the time to find the difference between 3 &amp; 4. Look at JSON in 4, it might be a game changer in using different libs. Seems like it's a path to making things harder or more confusing. I skipped Swift 3, I'm coming from Swift 2 straight to 4 because I needed to update everything and because Swift was still changing quite a bit. IMO, everything &lt; 4 is a pass. Udemy has free course and their famous $10 sales. RayW had his stuff on sale there and I'm sure the YouTube people will be updating soon. Is it the costs of the course or will your machine/test device not do Swift 4?
Good call on the Swift 3, although it’s a little clearer to do `Int.min..&lt;hrRange.lowerBound` since that effectively duplicates a half range without a lower bound in Swift 4. 
Not that you mentioned, I think that would be a great idea 
You put a layer with a blue border inside of a layer with a white border. If you have a layer with a bunch of sublayers, and set it to show a border, I'd expect the parent layer to draw the border over the sublayers. So in your case, I'd expect the `imageView.layer` to draw it's border above it's sublayers, including `blueHighlightedLayer`. I it seems perfectly reasonable that you can't see the blue layer. I'm also not entirely sure what you mean with "blue layer around the white layer". If the blue layer is the exact same size as the white layer, the border will have the same size, so it obviously won't be "around" the white layer. You could increase the size of the blue layer, but it seems like a bad idea to have a sublayer that is bigger than it's parent, this can get confusing quickly. And you even use `clipsToBounds=true`, so it wouldn't work anyway. If you want to have a blue or white border (one at a time), and like to switch between those, I'd just change the borderColor of the imageView.layer. If you want to have a separate, second blue border around the image, I'd reverse the order: Have a blueBorderView, where you add the blue border to its layer, and add the image view to the blueBorderView with some insets (the imageView has to be a bit smaller, otherwise you won't see the white border below the blue border).
Ok thanks. I’m pretty new.
Using RayWenderlich.com tutorials? A week.
When it pops, the old, now revealed viewController will need to make the navigation controller unhide its navigationBar in its viewWillAppear so it it should just unconditionally set navigationBarIsHidden to false.
You seem to be reading a bit too much into it... I think he was just trying to say that it's easier to apply MVVM to components/subparts of your project. He's referring to "architecture" in the sense of "way to organize your project" (as is often the case); like VIPER or Clean, which works best if you apply them to the entire project...
You might want to look into grand central dispatch for this. It will let you make a new thread that can run whatever your for loop is doing while your main thread continues with your command line menu
I think this is definitely part of the answer; however I'm going to run into the issue on my main thread currently because of the use of readLine() which will pause a loop until it receives a returned response. Is there a way to listen for keypresses instead requesting them? This way I could have a readout from my 2nd loop whilst retaining menu functionality with hotkeys.
Some screenshots or gifs in the readme and usage description would be a big improvement. 
Your 2nd loop shouldn't have to worry about readLine() waiting for user input since it is on a different thread it can do whatever it needs to do including readout without the need to wait for the user to enter something into readline(). The only way that I can think of to get readLine() to not wait for user input is to turn off canonical mode.
Interesting! This is a naming strategy that we haven't considered (i.e. prepend the name of the containing type in the case of a collision.) Here is our name resolution code if you'd like to contribute: https://github.com/quicktype/quicktype/blob/master/src-ts/Naming.ts#L82
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [quicktype/quicktype/.../**Naming.ts#L82** (master → b79e315)](https://github.com/quicktype/quicktype/blob/b79e315980322ab8ae468a22babf78ccc02c773f/src-ts/Naming.ts#L82) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dpky6i9.)^.
I mean its hard to believe: i cant find a job for the life of me developing using swift even though i have a degree, 3 years experience in the language, and proven apps on the app store. Ended up taking a SE job having nothing to do with my background , want to move to a swift dev spot some day if its actually possible.
You can use NSKeyedUnarchiver to do this. This is however not documented.
Thanks!
Where are you located? Swift demand in the SF Bay Area is quite high, and I wouldn’t be surprised if that were also true for other “tech hub” cities like Seattle and Austin. In areas that aren’t as tech focused (and probably not as fast paced), Objective-C is likely to dominate the Apple platform job sphere.
Thats the problem, im on the east coast
His Swift 4 course is the same price. Why wouldn't you do that one instead with the updated material?
How would one turn off canonical mode? Just did some reading on that and that would be pretty much what I'm trying to achieve.
I didnt look hard enough lol. I ended up going with this one: https://www.udemy.com/ios-11-app-development-bootcamp/
I ended up going with this one https://www.udemy.com/ios-11-app-development-bootcamp/
I'm pretty sure I bought that one too, however, I'm currently working on the RayW one. One quick note about the RayW one is that he gave out a bonus. His whole 2017 dev pack and eBook are a bonus. It's tons and tons of advanced things in addition to all the starting stuff. I'm just now digging into it. Yea, there's no real reason to bother with anything lower than Swift 4, there's so many tutorials out there dirt cheap, it's really amazing. Keep in touch and report back on how well that tutorial did, everyone's always interested in how good they are. 
I have sorta done it before. The second part of [this tutorial](https://viewsourcecode.org/snaptoken/kilo/) explains it in c and [this](https://github.com/SirMrShyGuy/TextEditor) is my attempt at it in swift.
Im not sure who rayw is. could you link the course i'd like to check it out
I think he's the biggest mobile tutorial site around, quite a bit of good stuff and well respected in the industry. https://www.raywenderlich.com/173650/raywenderlich-com-ios-11-swift-4-beginners-course-now-udemy
I think this is exactly what I'm after but didn't expect it to be as complicated as it is; definitely got some reading to do; haha.
At a glance, that looks like it might not be an out-of-the-box component. In that case, it could just be a plain UIView with 5 UIImage components inside. The stock UITabViewNavigator can be a bit of a pain in the butt to customize.
Thanks for the speedy the reply! I've already done a bit of customizing and figured the same; it something I was dreading hearing. I was hoping I could just drop in a few lines but I probably won't bother with it anytime soon then. It was a nice to have but nothing major. :)
Try adding your foregroundColor attribute to the text field's existing attributed string. That will preserve all of the existing attributes that the text field is using (font, paragraph, etc.). let text = NSMutableAttributedString(attributedString:textField.attributedStringValue) text.addAttribute(NSAttributedStringKey.foregroundColor, value: NSColor.red, range: myRange) textField.attributedStringValue = text
I've never tried that one but every time someone asks about it here people reply very positive about it. 
Total noob question since I'm still pretty green to iOS, if the image you want to use is going to be a static image and not changed by the user could you somehow convert the image you want into whatever App uses as an icon? 
Great question!! 1. The image won't be static because I want it to be the user's profile image. 2. It doesn't matter that the image is static and I'm trying to do exactly what you suggested!! I just need to know how to set an image to an icon. If I can do that I can figure out how to set it to a user's profile image. :) 
This might lead you down a good path(I'm sure you've run across this). It's not exact but it might get you in the right direction. https://stackoverflow.com/questions/31117069/changing-tab-bar-item-image-and-text-color-ios
Can you explain what you mean by this, and what you would consider "unshackled"? Even [the GNU project considers](https://www.gnu.org/licenses/license-list.en.html#apache2) the [Apache license](https://github.com/apple/swift-corelibs-foundation/blob/master/LICENSE) to be free software.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-corelibs-foundation/.../**LICENSE** (master → d9a5cff)](https://github.com/apple/swift-corelibs-foundation/blob/d9a5cff1aed5e41755dc2c70ee2833cf5f97fc4c/LICENSE) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
I definitely have! I haven't seen this dinosaur since my early days 😅. Anyway, I just skimmed it and I think I just found my solution! (For those interested) I think playing with this will get something to work: var firstViewController:UIViewController = UIViewController() // The following statement is what you need var customTabBarItem:UITabBarItem = UITabBarItem(title: nil, image: UIImage(named: "YOUR_IMAGE_NAME")?.imageWithRenderingMode(UIImageRenderingMode.AlwaysOriginal), selectedImage: UIImage(named: "YOUR_IMAGE_NAME")) firstViewController.tabBarItem = customTabBarItem Thank you a lot my friend! I would've never given this the time of day taking in to account that I've seen it before! Best, 
They didn't say it was *big*. They only said it was *fastest growing*: 200% y/y. Considering it's only existed in public for 3 years, that's not surprising. When you start from 0, it's easy to show big growth percentages. Going from 5 open jobs to 15 open jobs is 200% y/y growth, but says nothing about whether you can get a Swift job in your hometown.
The sad thing is that while these are found in some "modern" languages, none of these is a modern feature. Most if not all of these are decades old. This is what Alan Kay means when he says computer science today is a pop culture. Nobody reads history. When you suggest that students should learn Scheme and Haskell in school, people complain that it's too difficult, and nobody uses those in the real world anyway. Then you turn around and see people rediscovering all of the features of those languages, in their spare time, because someone else had thought to put them in a "modern" language, and blog about it. *facepalm*
^this plus the fact of we don't know WHERE their stats are. Clearly there's two different worlds, tech hubs and everyone else.
I've found the same thing! So frustrating given how simple a fix it must be.. especially as Playground and the whole 'Swift for beginners' concept are meant to be an easy, completely non-scary start for newbies! :(
I was scared I did something wrong when I first opened up Xcode and everything was green lol
hahaha, I was literally the same!
You could mimic the behavior by having a UIViewController that mimics the UITabBarController. At the bottom of the view controller you could have a stack view with the different “tabs” and then container views for each of your separate flows. 
I love your works.. keep inspiring! :)
I've also officially submitted the bug :)
Definitely not enough. It takes a major life change man. Think back at high school or college. Was that one biology course enough to prepare you for a career in medicine? Was that one English or psychology class enough to prepare you for a career as a copyright or an author? No. They weren’t enough. Tutorials and classes obviously help, but don’t make the “magical pill” mistake. There’s no quick and easy cure to your “not knowing swift” ailment. It would better serve you to think of these classes and tutorials as fundamental elements of new habits. Small pieces of a much larger puzzle. Scenes in a movie. Kinda like exercise or saving money. If you do it for a few weeks, ehhh whatever. But if you do it for 5 years, habitually, then hell yah. So no, these courses aren’t enough. But these courses are great! Just keep doing stuff like it, perpetually, and you’ll wake up one day and laugh at the question you just posted. The hardest part is even starting. Keep it up!!
I jumped on these courses as well and I’m on the half of Angela and Mark’s courses and well, following the tutorials is fun and all, but today trying to use Mapbox SDK I felt underwhelmed. My point here is to practice a lot and try to go beyond the tutorial, for example, trying to apply some design patterns for the code. In my case, I need to practice a lot because I really want to dive in Swift.
I bought the same because I skipped Swift 3 and needed to jump into Swift 4, figured $10 a pop was hard to beat. I started with RayW, he had a HUGE bonus download. Tons of mid and advanced things. I think some said it was about 300 hours or something. I don't know everything that's covered, RayW is well respected and I've used his tutorials since about 2010. I haven't even inventoried the course, I just finished a number of other ones and working my way thru the RayW ones. It seems pretty slow and steady, it hasn't actually taught me anything yet, but I'm sure it will. A career in iOS right now, they are asking for a degree, 3~5 years and several published apps. If you have some/most of that, then this could be a "brush up". If you don't have the degree or have never had a professional programming job, then I don't see how this would do the whole thing. I have seen some that skip college and bust tail solo and really knock things out of the park, but you also have to remember that right now the gold rush from the App Store has move to the gold rush of getting a STEM job. There's a lot of people trying to get entry level jobs and the industry is looking for top end devs. Browse around DICE or other boards, look at what they're asking for. Most want the degree and 3~5. Some of the problems are that mobile is changing quickly, it has some very different paths (utility vs games) and the industry doesn't have much need for entry level devs. 7 years ago, and entry level dev was about all the market was going to get, but with all the money going into tech, it's moved very, very fast and they need people with advanced skills. The industry is really flooded with people from all over the world looking to cash in on the latest gold mine. You should do the courses and see how you like it, try to get a handle on how hard it is to understand. Try to make some of the more advanced apps you see in the App Store.
BTW, I'm noticing that Ray is using Storyboards, does Mark Price use them as well? I'm the "do everything in code" kinda guy and I really didn't want to learn Storyboards, no big deal either way.
Sometimes I get these "Expression was too complex to be solved in a reasonable time; consider breaking up the expression into distinct subexpressions" errors. Usually they're pretty reasonable, most of the time they're because there's a type error somewhere and it goes away once I fix the type error. But this case seems a little petty for the compiler, doesn't it?
Type inference requires exponential runtime. You can try to specify the type explicitly 
I'd start at least 4.... /s
Thank you! I’m glad they are useful :)
One option would be to use a UITabbarController in Code. Resize the image to an appropriate size and then set it when setting the viewControllers: tabbarController.viewcontrollers = [viewController1, viewController2, etc]. Now you just have to configure the viewController to use the resized image within its tabbaricon (https://developer.apple.com/documentation/uikit/uiviewcontroller/1621175-tabbaritem)
That's what I would do too, subclass the UITabBarController and set the resized image as the UITabBarItem image
You should use storyboard tho
He does use storyboards indeed.
Your blueHighlightedLayer is outside the bounds of your view. Instead you can try something like this: let blueHighlightedLayer = CALayer() let size = CGSize(width: self.imageView.frame.size.width + 6.0, height: self.test.frame.height + 6.0) blueHighlightedLayer.frame = CGRect(origin: CGPoint(x: -3.0,y:-3.0), size: size) blueHighlightedLayer.borderWidth = 3.0 blueHighlightedLayer.borderColor = UIColor.blue.cgColor self.imageView.layer.addSublayer(blueHighlightedLayer)
You are amazing! One bit of code, NSMutableAttributedString(attributedString: instead of NSMutableAttributedString(String fixed it all! Thank you VERY, VEY much!
What are the declarations for `h` and `c`? I'm trying to replicate the issue to see where the type inference algorithm chokes.
you kinda giving 0 code .... i expect your 'presenting' VC is setting stuff in viewWillAppear..
`h` and `c` are Floats. If you cast the argument to `abs` to `Float` it seems to work without choking. 
I'm still not able to reproduce it using Xcode 9.1 and a Swift playground. Would it be possible to provide a short, self-contained, and correct example that reproduces the problem?
Here's the relevant code: ```swift import simd func hsv(hue: Float, saturation: Float, value: Float, alpha: Float) -&gt; float4 { let c = value * saturation // chroma let h = hue * 6 let x = c * (1 - abs(fmod(h, 2) - 1)) let base = value - c if 0 &lt;= h &amp;&amp; h &lt;= 1 { return float4(base + c, base + x, base, alpha) } else if 1 &lt;= h &amp;&amp; h &lt;= 2 { return float4(base + x, base + c, base, alpha) } else if 2 &lt;= h &amp;&amp; h &lt;= 3 { return float4(base, base + c, base + x, alpha) } else if 3 &lt;= h &amp;&amp; h &lt;= 4 { return float4(base, base + x, base + c, alpha) } else if 4 &lt;= h &amp;&amp; h &lt;= 5 { return float4(base + x, base, base + c, alpha) } else if 5 &lt;= h &amp;&amp; h &lt;= 6 { return float4(base + c, base, base + x, alpha) } else { return float4(0, 0, 0, alpha) } } hsv(hue: 1.0, saturation: 0.0, value: 0.5, alpha: 1.5) ```
The ride never ends
Have you filed this example as a bug on bugs.swift.org? The team would appreciate it, even if it’s a dupe.
&gt; I was just wondering if you guys think those would be enough if I'm looking for a career in iOS development. 2? No. But just keep at it. Stop worrying. Just keep at it.
So learn them anyway.
I think there is a ton of type conversion happening here that might be better if it was made explicit. You say your variables are type `Float`. Ok but I think `fmod()` has two `Double` as it’s arguments. And then `abs()` comes around, which has an `Int` argument. So as you say, casting the return types seems to work as it gives the type checker some help with this. I might also try converting your internet literals into float literals. I’m assume that this code will not be used with UIKit on iOS, yeah? Otherwise all these values should probably be type `CGFloat`
Thanks for the reply guys! This is exactly how I got it to work. I do some things with tabbar.items[0] and it's working well. Thanks for the polite reply and your time! 
The best way to learn anything, especially when it comes to learning a new programming language is: *practice, practice, practice.* To get comfortable with XCode and Swift will take both time and experience. How fast you learn is entirely up to you and how much work you put in. My [first (and only) app](https://itunes.apple.com/us/app/can-you-color/id1179517013?mt=8) on the app store only utilizes the Swift UIKit. Although I didn't explore the vast selection of resources Apple provides developers, it was still a great project to get my feet wet. My recommendation would be to create sample apps that explore the technologies you're interested in creating. Learning Swift is going to take time, but through the practice you will get to where you want to be!
You're right about `fmod`, I should have used `fmodf` (and changing this does fix the error). I'm a little confused as to why I didn't get a type error though since `fmod` appears to return a `Double`? And [`abs`](https://developer.apple.com/documentation/swift/2885649-abs) is generic. The code is for some Metal stuff, I need to know the memory layout of my colors so I can send them to shaders and what-not. Otherwise I would have used UIColor. Btw, Swift is by far my favorite language to work with, I just get frustrated with this particular error when I encounter it because its not always clear what's causing it, and there are other languages that have more powerful type deduction (e.g. Haskell) without this hard limit on the cost of type deduction.
I suppose you're right, it's been years since I've done it thou, kinda awkward, but I guess it's best that I get thru it.
Ooo I know! React-native
Here’s my guess: *if* the compiler had managed to finish evaluating all the possibilities, it would indeed have given you a type error. Unfortunately, once it realized it couldn’t do the obvious thing, it started plugging in every possible number type for all the other variables, trying to find a combination that made everything work. Before it finished concluding there was no workable combination, it hit the “we’ve spent too long” threshold, and gave up.
Wait, the compiler doesn't infer the type? Maybe that's why my calculations are so slow..
Once you have added the files to your project you need to add any resources you want copied into your application bundle to the “Copy Bundle Resources” build phase. Then you can look inside your app’s main bundle for the resources at runtime. 
No, type inference happens at compile-time.
Is this just a big list of affiliate links? Despite the title, "iPhone X" doesn't appear on the page at all.
`NSKeyedArchiver` supports `Codable` types via the [`encodeEncodable`](https://developer.apple.com/documentation/foundation/nskeyedarchiver/2924373-encodeencodable). To use it, you'll need to do something like ```swift import Foundation struct Person : Codable { let name: String } let person = Person(name: "Paul") let archiver = NSKeyedArchiver() archiver.encodeEncodable(person, forKey: NSKeyedArchiveRootObjectKey) archiver.encodedData.write(to: ...) ```
I wish the mods were more active and would ban this kind of shit posts. But we get them all the time
Every other time I've gotten this error there was an underlying type error. I'm still confused about why the stupidSwiftExpression fix works though. Wouldn't the type of stupidSwiftExpression be Double, thus causing a type error when we multiply it by c? --- Actually, I just tried forcing `stupidSwiftExpression` to be `Double`, and it gives a type error. Thus `stupidSwiftExpression` must not be a `Double`. Which lead me to the generic version of `fmod` (Xcode's go to definition can be a little finicky sometimes, and it was taking me to the C version). So the original expression is not a type error, because the generic version of `fmod` returns a `Float` in my case. 
why? i dont use them and i feel my coding is much faster and i have a couple of big apps on the app store. everything is in one place, if you use snippets then you never need to retype generic code, good auto layout extensions i wrote makes my layout be extremely easy to be used and extremely dynamic and smart.
i've learned a lot through "lets build that app" youtube channel, if you follow through and really understand what he is trying to teach i believe you can do wonders. he has many ~20 episodes tutorials that each one teach to build a single app like youtube or the app store app from scratch. 
I would suggest filing this at https://bugs.swift.org. There are a few regressions I've found in the type inferencing engine, and more examples may help the team get them solved.
Actually, it can run out of time even if there isn't a type error. I've seen this come up in code that compiled in 3.1 but not 3.2. The inferencing engine searches too hard sometimes. It needs what would be a query optimizer in SQL: Something that guides it to a successful resolution.
&gt; Copy Bundle Resources That did the trick, thank you.
Breaking up the expression makes type inference faster for the same reason `(x+y)^z` is assymptoticallt less than `x^z + yz`. It gives the compiler a point (the evaluated first expression) that it can get to, and never need to look back on. Without it, any attempt at solving the second portion of the expression could lead to back tracking and numerous attempts at solving the first expression in other ways that can potentially work when plugged into the second portion of the expression.
Ofc nothing is for anyone, however I would say that storyboards get better evey year and in general you should just use them.
No, I meant that the type inference algorithm, which the compiler runs, takes exponential time to resolve the resulting type of an arithmetic operation, which is why there is a time limit implemented to stop the compiler from running forever. Your code is probably slow because you're doing debug builds. In Xcode you can enable the release build by editing your app's scheme. (Click on your app name on the top left in the Xcode window &gt; Edit scheme &gt; Run &gt; Info &gt; Build Configuration and choose release). When doing debug builds, the compiler will not perform any optimizations to reduce build times and to make debugging easier. Enabling release builds can do wonders for your app's performance (but especially whole module optimization increases build times). I have seen 100x performance improvements in some applications just by enabling release mode. Of course that doesn't mean you can just ignore performance but it's one thing to keep in mind. If performance is still not good enough, you should have a look at the Accelerate framework, which contains many highly optimized, vectorized versions of many common calculations.
you should only change the collection view's content inset (via notification center for keyboard will show/hide notifications, these notifications will provide you the height of the keyboard), you should not constrain to the input accessory view.
Not sure what your use case is, but perhaps Dispatch will help you: https://developer.apple.com/documentation/dispatch/dispatchqueue
Google is your friend and break the task up into small pieces. Good luck!
[removed]
Sure, the question here was “why didn’t I get a type error?”, so that’s what I was hypothesizing about.
Thank you very much for the info. In case someone needs, here is here is what I did for both archive and unarchive Codable: import Foundation struct Person: Codable { let name: String } let person = Person(name: "Paul") //NSKeyedArchiver.archiveRootObject(person, toFile: "Archiving File") if #available(macOS 10.12, *) { let archiver = NSKeyedArchiver() try archiver.encodeEncodable(person, forKey: NSKeyedArchiveRootObjectKey) let filePath = URL(fileURLWithPath: "Archiving File") try archiver.encodedData.write(to: filePath) archiver.finishEncoding() // is this necessary? // attempt to read the thing back let data = try Data(contentsOf: filePath) let unarchiver = NSKeyedUnarchiver(forReadingWith: data) //// decodeDecodable(...) works, too..., but it does not throw, //// so does not match up to encodeEncodable(...) ////if let someone = unarchiver.decodeDecodable(Person.self, forKey: NSKeyedArchiveRootObjectKey) { if let someone = try unarchiver.decodeTopLevelDecodable(Person.self, forKey: NSKeyedArchiveRootObjectKey) { print("Paul is resurrected...") dump(someone) } else { print("Unable to read person back, Paul is gone forever :(") } unarchiver.finishDecoding() // is this necessary? } else { print("Your macOS is too old to run this thing, must be at least ver. 10.12") } 
Just FYI, if you get the data from the archiver with `.encodedData`, calling `finishEncoding()` is unnecessary because accessing `.encodedData` does that for you. It's necessary instead when you create an `NSKeyedArchiver` for writing into an existing `NSMutableData` instance, in which case you need to call `finishEncoding()` to finalize the data. `NSKeyedUnarchiver.finishDecoding()` isn't _strictly_ necessary, but highly recommended because it notifies the keyed unarchiver's delegate that decoding has finished, and marks the unarchiver as done so you can't make further decode calls to it accidentally. And lastly, `decodeDecodable` doesn't throw because it instead calls `failWithError()`, which sets a `.error` on the unarchiver if its `.decodingFailurePolicy` is `.setErrorAndReturn`.
One reason I still use objective c
Log in and out of *what*? As written, your post makes no sense.
Thank you so much! It does make sense not to consider 2 classes "enough" to learn a language as huge as Swift and be able to start building apps on my own. But thanks for putting in a way that still sounds encouraging and pushes me to keep going!
Awesome, thank you for another great resource! I'll keep this one in mind!
Thank you for the advice. My story is that I do have a CS degree, but I got stuck in a tech support job since last year. I've always loved iOS more than any other OS so I figured I'd get into Swift and I love it so far. So I'm definitely looking to make that into a career (and get out of the soul-crushing job I'm in now).
Glad to hear that! I can't wait to start his course (heard so much about it already) but I guess I'll wait till I'm done with Mark Price's course first since I'm already about 15% in.
Will do, thank you! Loving the course so far. I'm surprisingly not as overwhelmed as I thought I'd be.
I am going through that course. He tells you the code and the website where to use it in one of the first videos.
Just a basic user account. Just like you would log out of a Facebook account 
You declare a nested enumeration that [conforms to CodingKeys](https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types#2904057): import Foundation struct ClassName: Decodable { let Something: String? let Something2: String? enum CodingKeys: String, CodingKey { case Something = "1. Something" case Something2 = "2. Something2" } } let json = """ { "1. Something": "hey", "2. Something2": "there" } """.data(using: .utf8)! print(try JSONDecoder().decode(ClassName.self, from: json)) 
When you get to the point where he uses the "html" file for the about screen, you'll find it doesn't work. I posted about that and found a fix. It wouldn't be a bad idea for some of us to group together on this. Sometimes that helps to get over some of the bugs.
Looks like there's a few of us that are doing the same thing. I suggested to the other that maybe getting together would be a good idea because we can help flush out the bugs. I'm already finding some in RayW's tutorial, in addition, I'm seeing a problem with getting answers that are Swift 4 specific. I just ran into this with the filemanager to array, found Swift 3 code that doesn't work because it's not supported any more. What I'm suggesting is that a few of us can group together on this and save some frustration. I think we're in the same kinda boat. If you want in, let me know.
I'm using: guard let data = data else { return } . To get data from the JSON and putting into the (...from: data) part of the JSONDecoder(). Because I don't know what the test is so can you explain why you put "hey" and '"there"?
I think he tells you were to get the bonus content before the BullsEye app. I personally had no issues with it, I went to the address he told me to in the video and entered the code he said and it worked. This was about a week or so ago. Not sure if the site changed after that. This is the link the video send you to: https://store.raywenderlich.com/products/udemy-bonus-content He tells you to sign in and then gives you the code.
&gt; Because I don't know what the test is so can you explain why you put "hey" and '"there"? Those are just placeholder values for whatever JSON values you're dealing with. You mentioned what the key names are, so I made up some fake data just to show a round-trip example of it working. 
Thanks, the problem with the bonus code was that I was already a member of Ray's site from long ago and Chrome auto-logged me in, so I saw a different screen :D I've got the bonus content and I'm enjoying the tutorials.
Good. Yeah the tutorials are really good. Been enjoying the course so far as well.
Thanks for the help, but I can't get this working. the let json function is filled with error. Sorry I'm still new to swift.
That's fine; maybe you can post what you've go so far here? I can help debug it.
[removed]
 struct StockStats: Decodable{ //let timeOfDay: String? let open: String? let close: String? let high: String? let low: String? let volume: Int? enum CodingKeys: String, CodingKey { //case timeOfDay = "" case open = "1. open" case close = "4. close" case high = "2. high" case low = "3. low" case volume = "5. volume" } } URLSession.shared.dataTask(with: url) { (data, response, err) in //Check err //check response 200 ok guard let data = data else { return } let json = "" { "1. open": "openStock", "4. close": "closeStock", "2. high": "highStock", "3. low": "lowStock", "5. volume": "volumeStock" } "".data(using: .utf8)! do { let mainDecoder = try JSONDecoder().decode(MainFunc.self, from: data) 
Looks like you're using 2 double quotes around your [multiline string literal](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html#//apple_ref/doc/uid/TP40014097-CH7-ID564) instead of the necessary 3 double quotes. If you want to test the decoding using the JSON in the `json` variable, you should swap out our decoding line with this line: let mainDecoder = try JSONDecoder().decode(StockStats.self, from: json) Because `volume` is declared as an `Int?`, your test data should be an number rather than a string. It's `"volumeStock"` right now, but it could be 100 or something, just for testing. 
What specifically are you having trouble with? How did you implement login? We need more information to help you effectively. 
Thanks! I misunderstood the point of the "let json..." part. I thought it was a function and the triple quotes were an accident. I also see my problem was that the sturct's are nested so I can't access the values in the decoder. For example, I can't use StockStats.self because that's inside TimeStats which is inside Main Stat. And using MainStat.TimeStat.StockStats.self prints out "openStock" and the other values that I put under "let json..."
Cool! Does that mean you have everything working now? If not, I think the next step is to remove the `let json` test data and start working with the data that comes from the `data` that you get back from your URLSession's `dataTask`.
Listen for interaction in the Tableview cell using the delegate method: func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) { // Handle interaction here by identifying cell using index path } And then handle the "button" click based on indexPath. 
Assuming your hope is to pass some cell-specific logic as a parameter in your function, use func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) { let cell = tableView.cellForRowAt(at: indexPath) as? YourCustomCell //Your function here } Obviously this is not really making the cell a button, but it will allow you to execute a function when the cell is pressed. That being said, unless it is quite clear to the user what your app will do when a tableView cell is pressed, it is probably inadvisable to do something drastic (like delete the cell) on a tap. Read more about this method in Swift's documentation here: [Swift Docs - didSelectRowAt](https://developer.apple.com/documentation/uikit/uitableviewdelegate/1614877-tableview?language=objc) Or look into UITableView tutorials here: [Ray Wenderlich UITableView Tutorials](https://www.raywenderlich.com/tag/uitableview) And StackOverflow has entertained every tableView question under the sun, so that's always a good place to look if you're stuck.
An alternate idea is to first run the json dict through a renaming pass then drop into normal swift coding. Seems simpler and more neat to me. 
What's the downside to this build system?
[”Quietly”](https://i.imgur.com/e08AGsZ.jpg)
It's a preview version and as such doesn't work reliably in all cases.
I've had the build service crash twice in a day, with the only recourse being to restart Xcode. Though, it seems like a sufficient improvement to not be that bad a trade-off *for a preview*. Debugging on device kept failing with "unable to write to device" until I switched to the old build system. Maybe it's just a correlation there, but I didn't do anything else; even tried restarting the device before switching back. When not debugging on device, I'm still switching to the new build system. 
For those of us who don't have a SpammedIn account, what is this?
Hi sorry for the late reply the power went out and I just went to bed. It's working, however, I can't seem to print the results. The StockStats is an array, but when I put brackets( [StockStats].self ) I get an error saying it was expecting an array and got a dictionary. 
"more stable Xcode" ... "preview build system"
aaa
What are you looking to do? `fork()` creates another copy of your process, executing in parallel from the point you call `fork()`, sharing the same state and memory (in a copy-on-write way). Unless you later `exec()` in that forked process (replacing it with a new process altogether), both processes are running from some shared state. Foundation is not fork-safe unless you `exec()` immediately afterwards, and I don't believe Swift is either. `posix_spawn` and `Process` exist to make the `fork`-`exec` combo easier, allowing you to spawn new processes. If you specifically want to `fork()` and _not_ execute a new process, then you're going to have to partially rethink your architecture. You can re-launch your current process as a new one using `Process` (set the launch path to the location of the executable that's currently running), but pass in command line or environment variables to instruct the copy what to do. The specifics are going to matter here though.
&gt; In the File menu, select Workspace Settings… If this is not a workspace, this will be Project Settings. This will display the Workspace Settings sheet where you can switch between build system. Select the New Build System (Preview) &gt; That’s it! Building your project should be faster now. An added benefit is that live editing and code completion should also be faster and more stable. 
I had a similar issue with expanding sections. When I called .reloadData() the data loaded fine but the tableView didn't look right until you scrolled around a little bit. Did you try using: tableView.didBeginUpdates() //code that runs in here updates your tableview's UI //xcode 9 might prompt you to use main thread here too tableView.didEndUpdates() That solved the issues I was having
Going off of what /u/attentionwandered said, replacing your `shouldAddCell(section:)` with this seems to work: func shouldAddCellInSection(section: Int) { // Update the data source if (section == 0) { ingredients.append("") } else { steps.append("") } let row = tableView.numberOfRows(inSection: section) print(row) print(section) let indexPath = IndexPath(row: row, section: section) tableView.reloadData() tableView.layoutIfNeeded() tableView.scrollToRow(at: indexPath, at: UITableViewScrollPosition.top, animated: true) } Calling `layoutIfNeeded` immediately stops any of the UITableView animations from happening.
I’ve pretty much been pouring all my free time, between juggling becoming a new dad and going to work, into writing the next chapter (Chapter 6) for [Swift in Depth](https://www.manning.com/books/swift-in-depth). This next chapter is all about understanding and applying generics and higher order functions to create highly flexible code. A draft of the first five chapters was just reviewed by members of the international iOS community and I was both extremely thankful and happy for the consistently positive feedback! This being my frist book, it’s exciting but likewise nerve-wracking wondering what to expect from the audience. But based on the feedback I’ve gotten thus far, reviewers have repeatedly mentioned they are “excited” by the book and “appreciate the use of real world examples to explain things.” Aside from that, other takeaways include, more or less, “*Finally* being able to make sense of complex problems” using Swift; This was one of the primary goals of my book. I’ve gotten a few requests to create more difficult exercises, so this will be something I’ll be focusing on this month!
Impressive, that's quite cool. Did you have iOS knowledge beforehand?
You can definitely build an app or two with those courses. You might not want to release them, but the experience will be useful. It all depends whether you want to go into business for yourself or work for someone else. 
The degree will definitely give you a slight advantage. Don’t forget apples e book on Swift too. 
[removed]
Learn both! Storyboards are a little contentious. A lot of folks seem to move away from them as they get better and sometimes there is a tendency to look down on storyboards but I think knowing both ways gives you the flexibility you need. 
Definitely in! This will just push me to keep going more!
Check out [Charts](https://github.com/danielgindi/Charts).
That worked but I was wondering if you could explain what was wrong with my approach? Based on all the examples I've seen I thought it was standard procedure to call beginUpdates(), insertRows(), then endUpdates()? I've only been developing iOS for ~4 months so I'm trying to get a better understanding of when I should use insertRow() or reloadData() when adding new cells. func shouldAddCellInSection(section: Int) { // Update the data source if (section == 0) { ingredients.append("") } else { steps.append("") } let row = tableView.numberOfRows(inSection: section) print(row) print(section) UIView.setAnimationsEnabled(false) let indexPath = IndexPath(row: row, section: section) tableView.beginUpdates() self.tableView.insertRows(at: [indexPath], with: .none) tableView.endUpdates() UIView.setAnimationsEnabled(true) tableView.scrollToRow(at: indexPath, at: UITableViewScrollPosition.top, animated: true) } 
Cool, we should setup a communication channel. I'll find out if the other guy wants in as well. One of the 1st things I noticed in RayW's tutorial was that I didn't know how to write the "load all files to an array" part in Swift 4. If you do Ray's BullsEye, you'll get to the part where he switches to .html for the about screen. It has an error. It doesn't find the file in either the Sim or the device. I fixed the device one, don't know the Sim one. It also doesn't give you any error clue. I fixed that as well. What I didn't fix was the "load all files" part. In ObjC and older Swift, you can find routines to load all the files to an array. This is handy to tell if a resource is there and for creating a unique file name. The problem is that Swift 4 changed and I can't find any Swift 4 code to do this. So two things at the start: 1. make the .html load in the Sim 2. load all the files from a dir to an array.
So, my Operating Systems module has us writing a web server (in C) for our big main coursework. I’m trying to do it in Swift as well. One of the things the spec says is that when our server receives a command, spin off another process (or thread, I think, is acceptable) to deal with it.
reloadData() tells the tableView to start over and draw all the visible cells without attempting to animate from the old to the new state. insertRows() animates the insertion. You use beginUpdate() ... endUpdate() when you are doing multiple changes, and you want them to be animated simultaneously.
Sorry, I should have been more clear. I know what each of those methods does by definition but I'm struggling to understand why in this situation calling beginUpdate() insertRows() endUpdates() doesn't produce the desired results. From my understanding which may or may not be correct, is you can achieve adding cells in 2 ways, by adding data to your data source and call reloadData() or by appending to your data source, call begin updates, insert a new row and finishing with end updates.Hoping someone can ELI5 when to use which.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [For some reason my icons are super bright when looked at from a actual phone?](https://www.reddit.com/r/iOSProgramming/comments/7cbqph/for_some_reason_my_icons_are_super_bright_when/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I don't think we can really say for sure what is going on. When I was testing the app in the simulator, I noticed a potential clue. Sometimes when creating a new item in the 1st section, an additional UITableView header would get created, but inserted in the same place as the one already there. Then, when creating a new item in the 0th section, the duplicated header wouldn't get it's position updated. That points me to thinking this is some kind of bug. For both UITableViews and UICollectionViews, there's an API that makes inserting much more simple. No more having to call `beginUpdates()` and `endUpdates()`. Check out the `performBatchUpdates(_:)` [documentation](https://developer.apple.com/documentation/uikit/uitableview/2887515-performbatchupdates). You would just put your data source changes in the first closure.
Follow the link in the other comment to go read about Grand Central Dispatch, which is an abstraction layer on top of threads where you dispatch operations onto queues, and GCD takes care of managing thread lifetimes and the mapping between queues and underlying threads.
Can you upload your icon file? Per https://developer.apple.com/library/content/qa/qa1686/_index.html you should check that they're valid PNGs that are using the correct colour model.
I have the same problem as you. Just like youngermann said, you have to click "Show Rendered Markup" for every single page that you go over. Or, you can make a keyboard shortcut like I did: Preferences - Key Binding - Type "show rendered markup" in filter box - assign button combination so it will be easier to go through lessons. I created it as Opt/Alt + R. It works well.
&gt; are third party packages ok to use in production level code, or do companies usually build the functionality from scratch? This +1
Thanks for your response. Checking out performBatchUpdates() right now. 
&gt; And out of curiosity, are third party packages ok to use in production level code, or do companies usually build the functionality from scratch? It absolutely depends on the third party library in question and the company that's using it. Most companies will be happy using something like PromiseKit or RxSwift in their codebase (provided they're licensed correctly!) because they're big projects that are well supported by a large community and are solving general problems that their own developers would like to solve too. But if it's another project like Charts then it's usually a harder question. Let's say I'm in a small company with a couple of developers building an app and on one screen the designer has added a nice little chart. The development team has a huge backlog of features and the chart isn't all that important to the overall app - adding an existing library and playing around with it to get the appearance correct is probably the right way to go. In another world I'm also a small company, but this time there's a chart front and centre on the first screen of the app - it's one of the main ways we'd like our users to interact with us. Does this pre-existing library allow us to do exactly what we'd like? Does most of the library just implement features we don't really care about? It could be _really_ hard to tweak Charts to make the perfect graph for our app, and this graph is _really_ important to the business. The charts library is also about 100,000 lines of code implementing all sorts of rubbish we don't care about - all of the stuff that puts up pie charts or 3D charts or animatable charts might just be technical debt to our project and will make future updates much harder. It's probably worth us spending 2-3 weeks making the perfect Chart component. In another world a huge company with 100 dedicated iOS developers is looking to add a graph to a small component of their important app. It's a finance app so everything is hilariously regulated. Any third party library that they included has to be thoroughly vetted and either have a commercial support license or support has to be taken entirely in house. For them it's definitely easier to build a graphing library in house than do a code review on the whole Charts library.
I don't know are they? Are you telling us something or asking a question?
If spawning a thread is acceptable, then as others mention, using a concurrent [`DispatchQueue`](https://developer.apple.com/documentation/dispatch/dispatchqueue) is one easy way to manage the lifetimes of the threads. Note that you are not guaranteed that a `DispatchQueue` will spawn threads in any controllable way, so if you _must_ have one thread per request, you'll need to spawn those off yourself using [`Thread`](https://developer.apple.com/documentation/foundation/thread). If you'd like to use processes, though, then you can use a scheme like the following: // main.swift let processInfo = ProcessInfo.processInfo var environment = processInfo.environment // MY_SPECIAL_ENVIRONMENT_VAR is a stand-in name for a marker environment var you set. // You can call it whatever you like as long as it's consistent. if environment["MY_SPECIAL_ENVIRONMENT_VAR"] != nil { // We're in the child. Handle the request by looking up further environment vars/command line arguments. } else { // We're in the parent. while (/* wait for requests */) { let requestInfo = ... /* whatever you need it to be */ // We'll pass the current environment to the child; the var is needed so it knows it's a child. environment["MY_SPECIAL_ENVIRONMENT_VAR"] = "1" let child = Process() child.launchPath = processInfo.arguments[0] /* the path to the current executable */ child.environment = environment child.arguments = ... /* pass in any arguments/data you need, or pass in via environment */ /* optionally set .terminationHandler or listen for Notification.Name.didTerminateNotification to tell once the child has terminated */ // Spawn the request child.launch() } }
shouldAddCellInSection() always appends an item to the end of the section. then you make an index path like so: let row = tableView.numberOfRows(inSection: section) let indexPath = IndexPath(row: row, section: section) That suppose that the section was previously empty and you add one cell, so the numberOfRows is now 1. The correct index path should be IndexPath(row: 0, section: section) but you are making IndexPath(row: 1, section: section) - the index path of the button at the end of the section. Since you are passing the wrong indexPath to the tableView, it's no wonder it doesn't behave correctly. 
The first cell in each section is a button, therefore the next available indexPath should be (row: 1, section: section) if that makes sense.
Thanks for correcting me.
[here](https://s7.postimg.org/6wcz6jjzv/App_Icon20x20_2x-1.png) is my 20x20 icon
wait a second.. 
i think it is the icon generator i was using.
Haha, I have no idea how to open that where it isn't washed out :D
That was an interesting and really logical way to frame the tradeoffs. With respect to 3rd party libraries, is Charts the gold standard? Is there anything else you'd recommend taking a look at?
Many of the 3rd party tools have their code out there. I used a number of them for a few packages and found many of them bloated and not so easy to follow. I like to use them for the "how to" part and try to make a simpler version of things. Others are well written and great to use. It's really a case-by-case bases. Many companies have rules about things they don't have direct control over. Usually the older companies do this because the don't want to be locked in.
I don’t think that Charts is any sort of Gold standard, buts it’s big and popular enough that we don’t need to worry so much about it being abandoned by all the maintainers.
In my opinion, for apps that above all else, must be build fast, use external packages. However I'm currently at a client which has apps that are used for years on end, and updated only very infrequently. I guarantee you that there are not a lot of Github projects that are supported three years later. Plus there are loads of projects that haven't made the move from Swift 2. 
I recommend Charts, we've used it and it's flexible enough. If needed, there are (slightly unofficial) ways you can hook into the rendering core parts to do custom stuff. We've done this in our project to do things like rendering differently the data points that are outside the range, a custom Time axis (since Charts out of the box does not handle this) and drawing reference ranges. 
I would guess that charts would have its own Apple library. I mean with Keynote and Numbers, one would think the library would be available. But who knows?!
fatalError("Log out user.")
Empty quotes perhaps? “”
Maybe the closure is running asynchronously.
I've tried that before and it's the same issue. The string keeps reverting back to what it was initialized to. If i don't initialize it, it crashes my app due to finding a nil string.
I''m not sure what that means. If it's doing that, how could I fix it?
This is how asynchronous code is usually done in Swift: func getTime(id: String, completion: ((String?) -&gt; Void)) { var date: String? self.ref.child("notebooks/\(id)").observeSingleEvent(of: .value) { (snapshot) in let notebooksChildren = snapshot.children while let ids = notebooksChildren.nextObject() as? DataSnapshot { if ids.key == "LastAccessed" { date = ids.value as? String completion(date) } } } } and then you call is like: getTime(id: "whatever") { date in guard let date = date else { return } } This will call the completion every time date is set inside the if ids.key == "LastAccessed" if statement. 