Oh, it all makes a lot of sense now haha. Great explanation. I was definitely thinking along those lines but wasn't able to research more about it. However..when I do var myArray:[(NSString, NSString)] = [] And then myArray.append(textField1.text, textField2.text) It gives an error saying "Accessing members of protocol type value 'String!' is not implemented" It works normally the other way around though, i.e. initiating as [(String, String)] and then doing string interpolation or calling String() on the textFields.text to convert the NSString to String when appending to the array. And this works too var myArray:[NSString] = [] myArray.append(newItemTitle.text) I would try look more into this stuff and that error but my Internet is very very slow right now it's frustrating. Also, do you know how to get the type of an object in Swift? Thanks for the help!
I had written a blog on the same http://shrikar.com/blog/2014/11/06/ios-app-development-upload-images-to-aws-s3/
Thank you, in a roundabout way that's precisely what I did. Since it's a 1-second clip and load time hasn't been an issue, I just have the sound allocate itself to the variable and play, all in the same function called when the button is pressed. Rinse-repeat every time, works great (for now). Now I'm running on iPhone 6, so for older devices I may need to re-factor this. But for now it's fine!
I knew nothing about iOS programming and ine one and a half days I have learnt alot about swift and it is very easy to remember things so I would say yes
Thanks!
Thanks a bunch!
You can do it in a storyboard or XIB. But programmatically you would to do something like hiding one view and showing the second view when the user chooses a different option on the segmented controller.
if i were to do it in storyboard how would i link each of my views to a segment?
Swift is closed source currently. No universities involved either. Just Apple. So if you want to contribute, apply to the open swift team positions at apple.
you wouldn't link them to a segment, you would link them to a property in your controller. [Something like this](http://i.imgur.com/XHgDkOV.png)
Thank you! I'll look into this. I'm assuming the same applies for all other images you want to use?
I think it will depend on your image. Maybe you can just scale the image in the image view and that will be fine for you in which case you'd just need the image, and @2x and @3x.
For starters you're using viewForKey but providing the key for ViewController not view. For example, you want to use UITransitionContextFromViewKey not UITransitionContextFromViewControllerKey.
Ok I see that now, but it does not fix my errors. I have absolutely no idea why this is occurring, could you explain with a bit more detail please?
Yeah, makes sense. Thanks for explaining. And yeah I did read about using a struct instead of a tuple sometime, after I submitted this post. Although (I'm assuming you know that) tuples can have description names as well, e.g. let Thing: (name: String, age: Int) = ("Doe", 1); println(Thing.name) //prints Doe And I meant to get the type of a variable programmatically, using Swift code, if that's possible (should be). Like in visual basic.net it's usually variable.getType . edit: googled type checking in swift and got what I needed 
Ok so I made images that are scalable and my background is solid and scalable, but for some reason it always chooses the smallest image. I tried the simulator for the iPad and it still chose the regular image, not its @2x or @3x...you know why?
looks good to me
Are you using [Asset Catalogs](https://developer.apple.com/library/ios/recipes/xcode_help-image_catalog-1.0/Recipe.html)?
I'm using an Atlas
They explain it in the text following that code section. Whoever instantiates the SnakesAndLadders class will assign a custom DiceGameDelegate, if they want. Otherwise, since the delegate is an optional, the calls to the delegate will fail "gracefully". 
Building applications is a skill that will take years to develop. Practice every day, work hard, and keep your head down. One day you'll look up and discover you're a master craftsman.
Thanks makes sense. Thanks! 
Cross platform non-game iOS apps are pretty horrible and unperformant
1&gt; If you don't know how to programming, swift won't be the blocker, programming will 2&gt; Well swift causes the editor to crash a lot at the moment (it's not the most stable beast for ObjC even). As a person who's been doing iOS for a very long time, simple *real* apps take 50-100 hours. Games more. 3&gt; OH GAMES. Games are interesting creatures on iOS. You will basically make 0 money if it's not F2P, so be doing it for the experience for sure. RPGs in particular are hard to make as games, as they 'don't show their fun till the end' unlike action games and things of that nature. Additionally, there are a lot more platforms you can make games in than Business apps in iOS, so you can get away from Swift and Xcode if you want (say, Unity3d, or Corona, etc). As a person who doesn't know programming a simple 1 stat RPG with a level will likely take you a 4 or so months to get releasable quality. You'll be able to show something off that's alright after a few weeks, but it won't be done really for far longer. I encourage you to make a "joke like minimalist interpretation of a rpg" rather than a full fledged RPG, then add to it from there. 4&gt; Doing iOS fulltime: Most people don't really care yet if you're using swift or ObjC, and the ones who do are all still choosing ObjC over it. I'm sure in a year or two, the opposite will be true, but it's still a "really young language" in the iOS space.
1. If you're already able to program then Swift is not too difficult, it's mainly the Cocoa framework that you have to use to build an application that you need to learn. If you're coming from *no* programming language then you're really asking "how long does it take to learn how to program". And that is a highly variable question that depends on your own capacity to learn this type of skill. Some people can pick it up quickly as they go along, and for others it's a years long slog. Personally I think the best way to learn is to jump into trying to accomplish a goal and you'll learn as you go along (even though by the time you're done you've realize you did some things terribly along the way), 2. Assuming you already have a Mac and not including setting up your development environment (getting XCode, basically), you can follow Apple's tutorial and have their simple iPhone application (to-do app I believe) running on the simulator within...maybe a couple hours? It depends on how well you understand it as you go along, but it should be pretty straightforward (although if you're a complete novice then I couldn't say for sure). Of course if you want to deploy to an actual device then you'll have to pony up for a developer account. 3. Even a small RPG that was of a decent quality with a reasonable number of features will likely take you a very long time. It depends on if you're working on it full time or as a hobby in the evenings and weekends, but probably at least a year or two if you're not working on it 8 hours a day. 4. I know the idea of getting a "hit" on the app store sounds super appealing, but my understanding is that the app store is no longer a super great income source for independent developers. You can certainly make something great and find an audience, but it's not a given. On the other hand if you have actual programming chops, you probably won't get rich, but we are very well compensated for our work. You always will have a job somewhere, and you will be paid really well for it.
Check out the CaptiveNetwork framework 
If you decide you want to try it out. Hit me up and I'll give you a coupon to get in my class for free https://www.udemy.com/ios-8-and-swift-how-to-make-a-freaking-iphone-app/#/
I wouldn't say it makes building apps *simple*
No, you're right. That was a typo on my part. Sorry.
Are you importing Foundation in the bridging header? If not, try that.
Putting #import &lt;Foundation/Foundation.h&gt; in the bridging header makes no difference unfortunately. When placed in the YLProgressBar.h file however it gets rid of those errors and makes a new batch of errors in the .m file. http://i.imgur.com/7jvxtEQ.png Edit: I added #import &lt;UIKit/UIKit.h&gt; to that YLProgressBar.h file and it fixed it! Thanks. : D
What have you tried? View Controllers have a performSegue method. That's how you can trigger a segue with code.
I had this problem where the .m was being sucked in along with the header. I got weird errors that vaguely look like this.
Have you tried CocoaPods? I use that for my library management and it helps a lot!
I'm fairly new to Swift, but the way I've been doing it is to add the segue through the Storyboard (don't know how to do this programatically yet), give it an identifier, then use the performSegueWithIdentifier("identifierName", sender: self) method through code to trigger it. Hope this helps!
Thanks for all the help! Turns out, it was a simple error I was making within the landing page after the segue. This subreddit is really helpful and the community here is great. Nice to know I'm not alone.
https://github.com/nettlep/learn-swift
Can anyone narrow the list? Are any of these used in commercial apps? Allowing users to point their camera at signs, for example, and reading the text is a useful feature in mobile apps. 
What you have to do to make a segue is simply right click drag from your done button or whatever button you want to go to the next page and release. It will show a pop up saying show click and then run. Tell me if it works I'll see if I can help you further
How and where do you assign the delegate?
The issue here is that you aren't assigning VCOne as the delegate, you are assigning a new *instance* of the OneViewController *class* as the delegate. You need to assign it to the VCOne instance created by the storyboard in order to get this to work. The easiest way to to do this is to iterate over the viewControllers property of VCOne's tabBarController until you find an instance of OneViewController. This entire thing doesn't really seem suited for the delegate pattern, though. I'd be willing to wager, for example, that once you get it to work, you'll be creating a cyclical reference which can result in objects that can't ever be released. Controllers keeping references to other controllers that aren't their children is generally a bad idea™. It seems like what you are missing here is a model layer, which is a critical component of the MVC (Model-View-Controller) pattern which is the foundation of Cocoa/CocoaTouch development. VCOne would make changes to the model while it is being interacted with, then when VCTwo appears it would check for changes on the model and display them.
You're right, and in hindsight it's obvious. I'll create a model to store the data and use the Tab Bar's array to ensure both VCs are accessing it. Thanks for taking the time for such a thoughtful answer. Merry Christmas!
And that's your problem. `OneViewController()` creates a *new* view controller that's not displayed anywhere; it does not refer to the view controller in your first tab; hence, the label outlet is never assigned and nil, leading to your error. You need to get a reference to the `OneViewController` that's shown in your first tab, something like `self.tabBarController.viewControllers[0] as OneViewController`. Edit: Additionally, this leads me to believe that you did not declare the delegate property correctly - delegate properties should always be weak (`weak var delegate: SomeDelegateProtocol?`). I don't think you declared yours as weak because if you did, you wouldn't have been able to call your delegate function successfully, because your new instance of `OneViewController` would have been deallocated. (Unless you have some other reference to it, of course).
I would search up the code I have and give it and explain it to you, but I really have no time these days. I just got on my computer and I want to do something productive in the time I have. So since no one has answered, I'm just going to point you in the right direction -&gt; search up some Swift flappy bird tutorials. What you want is just that, repeating ground, you might be trying to make flappy bird already is what I thought. Anyway, so just search it up and you'll learn how to do it.
Haha ya this guy again. Love you too!
Think it has anything to do with that -15 magic number?
That's right, the delegate was called incorrectly as well (in addition to the other issue you pointed out). Thank you. 
nvm, ty https://www.youtube.com/watch?v=K_UxdSSKoxg
&gt;[**XCode 6 Tutorial App Icons - IOS 8 Geeky Lemon Development [11:10]**](http://youtu.be/K_UxdSSKoxg) &gt; [*^GeekyLemon*](https://www.youtube.com/channel/UC6-UA1FoMnbO2LCLWPCM9aA) ^in ^Education &gt;*^543 ^views ^since ^Dec ^2014* [^bot ^info](http://www.reddit.com/r/youtubefactsbot/wiki/index)
Your best bet would be to use a UITextView for this. UITextView is a UIScrollView subclass, so you can always scroll it when you append new text.
Check this out it includes all the different type of ads that can be integrated. http://shrikar.com/blog/2014/12/06/ios-app-as-a-money-making-machine-using-iad-app-monetization-technique/
So, funny story, I actually tried this and now I've found the problem: I'm an idiot. I fixed it, thank you. 
Haha you're definitely not an idiot. Glad you fixed it!
Well, all of Grand Central Dispatch is very very cool. I mean, abstracting common, confusing threading and multiprocessing concepts to simple, fast, efficient task queues is amazing. Big props to Apple for GCD. If you're interested in cool things that Apple's APIs have that you might not have known about otherwise, I cannot possibly recommend [NSHipster](http://nshipster.com) enough!
Keychain is the only proper answer. Its job is to store login information. I am not familiar enough with the APIs to explain how to use it though.
Yeah it pretty much does whatever the fuck it wants. 
Better yet, don't store login information at all. Just store a revokable login token of some sort in the keychain. Require reauthorization for major account changes.
:(
 unsafeBitCast
Good point, agreed. Make an auth token, and store *that* in the keychain.
For all these steps, hold down control, click on the first view, then drag to the second view. You can use the menu on the left to do this, the actual views in the storyboard, or mix. 1. From yelp button to View: select "Center Horizontally in Container". 2. From yelp button to "Visit us on" label: select "Vertical Spacing" 3. From instagram and facebook buttons to yelp button: hold down shift, select "Center Y" and "Horizontal Spacing", hit return/enter on keyboard 4. From twitter button to yelp button: hold down shift, select "Center X" and "Vertical Spacing", hit return/enter on keyboard 5. From google and youtube buttons to twitter button: hold down shift, select "Center Y" and "Horizontal Spacing", hit return/enter on keyboard This assumes a fixed spacing between the buttons, if you need the spacing to change for different screen sizes then the answer becomes more complicated. Also assumes that the "visit us on" label already has constraints.
Try using [Snappy](https://github.com/Masonry/Snappy)?
The "all exceptions" breakpoint can get triggered for dumb reasons, the most common is with video or audio playback. Usually it's only in the simulator. If you really need breakpoints on, and can only test in the simulator, you can hit Continue over and over until it gets past the exception.
Excellent, thank you! Will check out
There's almost always a more canonical, safe, fast, supported, and efficient way to do something. It shouldn't be used even if you 'know how to leverage its power' unless it's the *only* option. Plus, the compiler has a much harder time optimizing something that's unsafeBitCasted.
I solved this issue using the CoreWLAN library. var ssid: String = "WLAN-ABC" var password : String = "TotalySecure" //First I initialized an CWinterface for Wireless LAN ("en0") var _interface : CWInterface = CWInterface(name: "en0") //Checking whether the connection can be established if let connectionPossible = _interface.associateToNetwork(ssid, password: password, error: nil){ //insert awesome code } 
I dont understand can you show me which x your talking about? 
I never use that. Always picks the wrong constraints.
Do you folks prefer to do constraints programmatically? The auto-constraints seem to work OK for simple layouts and I think I am figuring out how to debug them better but they can be really strange.
Swift-YouTube-Player *** Ooops :/
Be quicker about it. It only stretches after not dropping it for a while. 
This is much more obvious in objective-c: - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section { //code } - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath { // code } They only share the name of the first argument, but in swift it makes it look like they both have he same function name with different arguments internally. Read about more [Selectors](https://developer.apple.com/library/mac/#documentation/General/Conceptual/DevPedia-CocoaCore/Selector.html)
Functions can be overloaded in Swift which means there can be multiple with the same name that are not the same function. This world thanks to the fact that a function is not identified solely by its name, but, by its entire signature which includes return type and parameter types. 
&gt;Does Swift let you define one function multiple times? Yes. Although as /u/orta pointed out, that isn't what is happening here.
It's not crashing, it's hitting a break point. And yes, you should look into how breakpoints work, they are very useful.
Swift decides on what method to call based on different things (the function's signature). One of them is the name in front of the parameters obviously. The next one is the parameters types; you can have multiple methods with the same name that use different parameter types. Many programming languages allow this. For example: func f(a: Int) { print("a") } func f(a: Float) { print("b") } f(1) // Calls the first version of f and prints a f(1.0) // Calls the second version of f and prints b But Swift does one more thing that's more specific to it and Objective-C: you can specify parameter names that must be specified when calling the function, and are essentially part of the function name. This is what's happening in your code. func f(externalName internalParameterName: Int) { print("a") } func f(otherExternalName internalParameterName: Int) { print("b") } f(externalName: 1) // prints a f(otherExternalName: 1) // prints b In this example, you can't call `f(1)`, no such function exists - `externalName` is part of the function's name, you can't go without it. Essentially, the methods in your code aren't called just `tableView` - rather it's `tableView(_, numberOfRowsInSection)`, for example. You can't leave the `numberOfRowsInSection` part away; if you try to change it, the method won't be called any more by the table view (the compiler won't complain though, because it's not mandatory to implement it). TLDR: Yes, you're missing [external parameter names](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html). 
Grateful to be able to test this out at no cost. Is this a first draft of the book? Not to sound like a dick, but I'm only a couple pages in and the grammatical errors in the book are killing me. 
I have no idea what you mean by "adds in a new nav bar underneath the existing nav bar" but take a look at uiappearance. Lets you customize the color of all nav bars with one call.
5 months -&gt; 50 pages and 35 minutes of video content ... I don't care about any excuses! I started writing a [book](https://www.weheartswift.com/swift-programming-scratch-100-exercises/) that teaches programming in Swift two moths ago and the PDF version has more than 200 pages. The book is free and I even hired someone to learn Swift from it so I could make it better. If the internet would give me $20.000 I would be working day and night to make the best book possible. 
It will only do this if you have no other objects in your view controller. Try adding a couple of labels or so and then dragging in an image view/map view/etc. Won't resize to full screen.
You guys writing books!! why cant anyone explain Optionals right?? why do they become like "?????"
Oh my god. I appreciate it so much. Thank you. Actually, if that is possible through auto layout or constraints then I would very much like to learn how to do this as well. Also, if I could make icons (the social media image views) resize but keep ratios depending on screen size that would be awesome as well. Learning this would help me gain a much better understanding auto layout. I would also apply this to my splash screen so that the centered image view on it would resize depending on screen size. Bigger on on bigger screen. Smaller on small screens. I guess this means keeping margin ratios? But on the viewcontroller; how can margin ratio be applied to a neighboring image view? Is that possible? I am sorry. I feel like I'm not making sense in my final question. Thanks for all the great help.
Wow, that looks very interesting. I will definitely look into that sometime. To be honest, I would prefer to use something within storyboard. Code is not yet my strong hold. Thank you though for sure.
I did it pretty quick tbh
Damn. I wonder Android's Eclipse deals with auto layouts or constraints. I have no clue.
Word
I don't know. It's been pretty terrible or me with simple stuff. Like a few labels, views, and image views. I wish it would be smart enough to just make it like I have it on story board, but on all iPhones. It can't be that hard. Resize things in ratio to each other. I guess It's harder for a computer to calculate auto constraints than I think haha edit: i'm not saying manually you can't do great things with constraints. i just think the auto one does not pick up on what i want and that what i want really shouldn't be that hard to capture but o well
much fear I see in you young one. fear is the path to the dark side!
http://www.raywenderlich.com/store Tons of value in our books 😀. Especially when you consider cost per page of the iOS by tutorials series. Many of them use swift as well
This thread has been linked to from elsewhere on reddit. - [/r/mistyfront] [Want to Learn Swift? Try building this simple app. (/r/swift)](http://np.reddit.com/r/mistyfront/comments/2qmupu/want_to_learn_swift_try_building_this_simple_app/) *^If ^you ^follow ^any ^of ^the ^above ^links, ^respect ^the ^rules ^of ^reddit ^and ^don't ^vote ^or ^comment. ^Questions? ^Abuse? [^Message ^me ^here.](http://www.reddit.com/message/compose?to=%2Fr%2Fmeta_bot_mailbag)* 
I'm working on my first iOS app coming from Android and this is exactly what I'm looking for thank! Bookmarked to read later
Have you taken a look at [this](http://stackoverflow.com/questions/25291731/swift-integrate-gamecenter-to-use-leaderboards)?
Since I know a little bit of Objective-C, I have just been trying to connect the dots with the standard documentation. Also, GitHub has a few small examples. I haven't tested it, but this one looks like a good start: https://github.com/andrewcbancroft/GameKitDelegationExample Side note: one thing that bit me with Game Center integration was the 120-day grace period. If you set up iTunes Connect, but don't release an app in the grace period, you'll lose the SKU (namespace) forever. Apple is extremely stringent on this policy, since name squatting is a big thing. I haven't found a way around it other than adding a 1 or something to the namespace (or releasing an app without GameKit first, then develop Game Center integration later). Learn from my mistake!
For my first, and granted very simple, Swift game I had a similar issue and needed something quick/easily added into the game for it's initial launch...so I used and edited the code from [Jack Cook's GCHelper](https://github.com/jackcook/GCHelper). It works practically out of the box and has you use all of the aspects of GameCenter (LeaderBoards, Achievements and Challenges) Granted, I still need to fix my game's buggy reaction to Challenges, but it's very easy to use... The class makes a shared instance of itself via: class var sharedInstance: GCHelper { struct Static { static let instance = GCHelper() } return Static.instance } ..so implementing it's functions are implemented in easy, one line calls...again due to this neat use of Swift's class variables and structs. This is how I implement Leaderboards in the game's code: func saveLeaderBoardScore(leaderBoardID:String, recievedScore:Int){ GCHelper.sharedInstance.reportLeaderboardIdentifier(leaderBoardID, score: recievedScore) } Reason why I wrap it into that *saveLeaderBoardScore* function is so I can simply handle multiple Leaderboards, via the *leaderBoardID:String* and * recievedScore:Int* parameters I handle the recording of Achievements, which you more than likely will have more than one of, like this: func reportAchievement(achievementID:String, percent:Double){ GCHelper.sharedInstance.reportAchievementIdentifier(achievementID, percent: percent) } You can simply call GCHelper.sharedInstance.reportAchievementIdentifier(achievementID, percent: percent) ...explicitly and it'll work the same. That's the code to send info TO GameCenter. To just read GameCenter data via Jack Cook's GCHelper class, it's just: //load achievements GCHelper.sharedInstance.showGameCenter(vc_!, viewState: GKGameCenterViewControllerState.Leaderboards) //load leaderboards GCHelper.sharedInstance.showGameCenter(vc_!, viewState: GKGameCenterViewControllerState.Achievements) The variable *vc_!* is just an unwrapped optional representing the my viewController. Forgot why I had the viewController referenced like that (that aspect might just unique to my project) but that parameter is where you link the viewController. Those last two lines are used when [I let the player choose to either view their Achievements or Leaderboards](http://i.imgur.com/6djyCLn.png). GameCenter's screen does give the player a chance to do so via tabs once opened but those lines chose the tab seen once opened. Hope that helps :-)
aside from a spelling error, and the fact that it should be a CGFloat, there's nothing wrong with the posted code. If you are getting these errors there is something else very wrong. Try clearing out the derived data in your project in the Organizer window, and rebuilding from scratch.
Yeah - this. If it's your application on the server side then implement an OAuth 2 API that provides you with an auth token after a user has logged in. You can store that token in the keychain without being concerned about storing a user's username and password.
I use to dread auto constraints but since I forced myself to do it programmatically I actually prefer it that way now. It's actually not even that hard with the visual markup language or whatever they call it. And you can change it dynamically too which is great.
Try myView.layer.clipsToBounds = true. Produces the equivalent of checking "Clip Subviews" in IB. 
 Never use "reset to suggested constraints" or "add missing constraints". What I have noticed is that it attempts to add absolute constraints than relative ones. For eg instead of using vertical spacing or leading edges relative to the previous control in stack, it adds absolute top and leading (superview) constraints. This completely messes up on different devices, orientation etc. furthermore, it chooses an easy way out by adding width and height constraints when it is unable to figure out the control's position relative to others. This messes up controls that need to be sized by content. Instead, I do it manually (using IB ,not code) by starting with the first control that will have constraints (top, leading) to its superview. All other controls will have relative constraints to this control and are laid out vertically. You can then add width constraints by pinning leading and trailing to edges of the superview for each control. If you want height relative to screen size, then use ratio constraints that will size it by screen size. Hope that helps,
I looked at the souce code and it seems fairly simple to implement. But I wonder where will i put my leaderboard reference and leadrboard id?
Thanks! Ya sorry about that, it was late and I was too frustrated to double check my spelling (It was correct in my code). Not sure what went wrong, but I restarted from scratch (good thing this was one of the first thing I did) and everything works as it was supposed to! Thanks again!
Awesome, thanks for the help! I'll play around some more.
Congratulations, you figured out how monadic bind works.
Someting like this: save: [[NSUserDefaults standardDefaults] setObject:@[myString, [NSDate date]] forKey:@"timedString"]; load: NSArray *timedArray = [[NSUserDefaults standardDefaults] objectForKey:@"timedString"]; NSDate *then = [timedArray lastObject]; if (then &amp;&amp; [NSDate timeIntervalSinceReferenceDate] - [then timeIntervalSinceReferenceDate] &lt; 10*60) { myTExtField.text = [timedArray firstObject]; } 
Hey, so I tried your advice and it works fairly well. Definitely learned a lot from it. However, even though everything is nicely centered, all the icons seem to be going off screen as if there were no margins. I tried fixing it myself, but nothing I tried worked. I'll upload a screenshot if you need it. Any tips? :/ EDIT: I tried adding a smaller view for the icons to rest in, but then that view doesn't seem to want to work. It disappears off screen for some reason when I apply any constraints. So confused here.
Here's a pic so you can see what I mean http://i.imgur.com/NgDnLMW.png Like I said, I tried to fix it myself by adding a view, and moving all the icons within that small view. When I tried adding any constraints to that view it just completely disappears. Would reaaally appreciate some help man. So far you've really helped me out.
It would be helpful to see what the warnings you are getting are. Click on the yellow arrow next to "Home Scene".
Is this what you mean? http://i.imgur.com/kIa6kTf.png
Do you think my idea could work? Placing all the icons within a view and then making that view resize within the main view? 
I will try this. I'm not exactly sure what constraints to give the container tbh. I tried center horizontally and vertical spacing to the "Visit Us" label. It just disappears. I have no idea why! Will try your new advice and will update u. Thanks
I feel like it would be more intuitive if the top-most level still had the if-statement. That way, you know it's a conditional by looking at the first line. But you know what they say about opinions...
How can I edit the "Equal Width" constraint to have a multiplier of 1 and a constant on -20?
Nice! I feel like Swift encourages functional programming, but doesn't give all the niceties that other functional languages do. This is a step towards alleviating that.
I reverted to saved and redid it and it worked. This is what I got: http://i.imgur.com/HYhT7EY.png Then I decided to .... New Icon View to "Visit Us On" Label: •Same width It added space vertically to the 2 elements: http://i.imgur.com/M039Ygy.png Weird! Is there any way to edit the vertical spacing between items? For example, I'd like for there to be a bit more room between the top of the screen and the Andes Cafe logo. And between the Visit Us On Label to the Icon View Container. Also, please let me buy you a coffee or donate you some money for your help. My family has a restaurant in San Mateo if you'd like lunch or something sometime! I appreciate the help so much. 
You can use it like that! :) // assume imageURLString defined if let imageView = imageURLString --&gt; { NSURL(string: $0) } --&gt; { NSData(contentsOfURL: $0) } --&gt; { UIImage(data: $0) } --&gt; { UIImageView(image: $0) } { addSubview(imageView) }
This is fantastic thanks!
I have a presentation proposing syntax for pipelining where 'if any of the following tuple is NIL, just pass up the NIL". Unfortunately, it does not seem possible to write a template, because named tuples cannot be generically created.
have you included it in the [bridging headers](https://github.com/artsy/eidolon/blob/master/Kiosk/Supporting%20Files/PodsBridgingHeader.h)? ( Or are using beta CocoaPods with frameworks? ) 
Android Dev here, as bad as the interface builder is for Android Studio, at least it makes sense after some fiddling. I`ve been at this constraints thing for almost 2 weeks and after reading guide after guide I still have no clue how it works, I end up hittng add missing constraints and hope for the best. If not, I clear it, play around some more, hit "Add missing constraints" again this time I pray a bit harder. --- I might be biased but I can't find a guide to explain this properly for the life of me
Rubyist getting into iOS dev. I realised that Swift or Obj-C are just a small part of what it is to be an iOS dev, which is primarily understanding Cocoa Touch and its protocols. 
True - if I were gonna tell someone to learn something to prepare for ios development, I'd send them off to learn Smalltalk. Objective C is Smalltalk with performance compromises. Cocoa is based on Smalltalk design patterns. Smalltalk is a crazy powerful dynamic programming language that has yet to be equaled in expressiveness IMO. When I first started doing WebObjects (Objective C web framework - since killed by porting it to Java), I had just come off two years of doing Smalltalk enterprise apps. Objective C took me all of an hour to basically get going and I had it nailed pretty well in a week. I expect Swift will appeal to Javascript and Ruby developers because its syntax is familiar but I don't see Objective C people switching any time soon. Swift only works with Cocoa because it can call Objective C runtime. Cocoa only works because it is built on Objective C runtime. Swift without Objective C is a lot more like C++ than Ruby in terms of dynamic features. 
Welp, problem solved. Nice work.
I learned Obj-C and then swift. Helps to know obj-c for github frameworks and such. Not required, but I felt it was worth my time.
many thx! mirrored in a [Kifi Library](https://www.kifi.com/elkraneo/swift-learning-resources) and mentioned in [Catching insects in flight.](http://www.reddit.com/r/ciif/)
Thank you so much! Can I be a little bit more of a pain and asking (since this is [/r/swift](http://www.reddit.com/r/swift)) how you would write this in Swift? I tried converting it manually but I'm still having trouble, sorry....
I put the raw data (tsv) on Github in case people want to contribute or use it for other purposes. https://github.com/melling/SwiftResource
 import UIKit class ViewController: UIViewController, UITextFieldDelegate { @IBOutlet var textField : UITextField? override func viewDidLoad() { super.viewDidLoad() textField?.delegate = self // Do any additional setup after loading the view, typically from a nib. let userDefaults = NSUserDefaults.standardUserDefaults(); if let timedArray = userDefaults.objectForKey("timedString") as? NSArray { if let aThen = timedArray.lastObject as? NSDate { if NSDate.timeIntervalSinceReferenceDate() - aThen.timeIntervalSinceReferenceDate &lt; 10*60 { textField!.text = timedArray.firstObject as String } } } } func textFieldDidEndEditing(textField: UITextField) { let a = NSArray(arrayLiteral: textField.text, NSDate()) let userDefaults = NSUserDefaults.standardUserDefaults(); userDefaults.setObject(a, forKey:"timedString"); } func textFieldShouldReturn(textField: UITextField) -&gt; Bool { textField.resignFirstResponder() return true } } 
Same. Also I can't edit nibs after closing the app once anymore. I have to reboot or Xcode will crash when I try. The interface itself is clunky, the editing is horrible (I can't use the keyboard to navigate the code properly)... Ugh
Yeah, I figured the actual app building part was the important thing, which I actually did read! (Even though I have very little knowledge on Swift or coding in general).
Your operator exists in the form of `map`, assuming imageURLString is an optional: let imageView = imageURLString .map { NSURL(string: $0) } .map { NSData(contentsOfURL: $0) } .map { UIImage(data: $0) } .map { UIImageView(image: $0) } should dot the same thing. Otherwise (i.e. imageURLString not an optional) you can do `let imageView = NSURL(string: $0).map { ... } ...`.
Thank you SO much! One question, why does the stored date have to be an NSArray? Why not an NSDate?
Yes this is true, are there any alternatives we can use for now until Xcode has a working update? 
You think Xcode is bad now, you should have seen it a few years ago.... Believe it or not it made major improvements recently. Try AppCode by JetBrains. Its a great IDE by a team that really knows IDEs.
There are a lot of keyboard shortcuts which can be intimidating. I don't know how long you've been using Xcode, but it got easier for me after a while. I can navigate almost completely with the keyboard. http://nshipster.com/xcode-key-bindings-and-gestures/ http://spin.atomicobject.com/2014/03/23/xcode-keyboard-shortcuts/ 
Cute. I tried it out on a few heavily nested sections of code that I had. Ultimately, I found that out of about 8 different chunks of code, only one clearly benefited. To be clear: I think this approach works fantastic in the example you've shown (a series of functions taking one argument which is the output from the previous step). If you have blend of other use cases (requiring arguments from multiple steps or method invocations rather than free functions) or additional logic and steps involved at each level or error handling required at intermediate stages then it doesn't necessarily make the code cleaner. As [jasamer](http://www.reddit.com/r/swift/comments/2qqsi1/anyone_else_bothered_by_deeply_nested_optional/cn9qcmq) says, you can achieve basically the same thing with map() from the standard library so this is an easy approach to use in your stylistic toolkit as appropriate.
AppCode has its own version of IB... called UI Designer: http://blog.jetbrains.com/objc/2013/12/ui-designer-plugin-for-appcode-is-available-in-early-preview/
Thanks
Same, especially the last few days nothing really seems to smoothly
Nope, Xcode works fine for me. (I spend all day writing Objective-C. :) )
Xcode reflects the fact that Apple doesn't make any money off of its IDE. Compared to IDEs produced by companies whose IDEs generate revenue (or used to generate revenue), Xcode falls short. I was very happy when Jetbrains made AppCode, and used it whenever my tasks focused on writing code. However, since I switched to Swift as my primarily language, I had to go back to Xcode while AppCode catches up. Despite Xcode's limitations, AppCode still needs some time in the oven for use in Swift development. However, if you have some Objective C work, I highly recommend AppCode.
Downvotes without any responses? Can you at least explain why?
C++ is pretty good too, even w/ C++14 features.
Anyone who's using Swift right now is a guinea pig, myself included. It doesn't play well with XCode, and it's missing a number of important features. Expect this to be the case for a little while.
Xcode doesn't always work wonderfully with Objective-C...on top of that, Swift has had some pretty painful errors as well on top of the typical Xcode crashes, slow parses, and more. The cryptic error messages in particular are pretty infuriating. I do a lot of Objective-C dev, and Swift definitely has worse parse and compiler issues than it.
I think this point has been made a lot of times before, and I'll look for links and update my post later, but for Apple, apps are just a means to an end. Their profit comes from hardware sales. The 30% from apps contribute very little actual profit relative to what they make with hardware sales. In fact, they make so little from software that even iWork suite is now free - all in the name of selling more hardware. EDIT: Yeah okay, the 30% translates to over $5 Billion. I can't find any reports on what their actual *profit* is on the App Store. I imagine that having hundreds of people on payroll for review and editorial, hosting costs, worldwide operating costs, transaction fees, etc, cost a pretty penny. However, from Apple's perspective, Xcode is just one part of the "App Store" solution that contributes to the 30%. The development team working on the language, public API, iTunes Connect, review teams, developer portal, provisioning, acquisitions such as Test Flight, etc, all are part of the developer solution that Apple runs. Compare this with JetBrains who doesn't deal with *any* of that and focuses on the IDE and it's easy to understand how one can be a lot more dedicated to the intricacies of, say, autocorrect, compared to the other company.
OK... so the software makes people buy the hardware, which makes them money. Regardless of how you look at it, the dev tools lead to cash at the end of the trail.
Interesting. Thanks for sharing.
SourceKit crashing (usually due to partially written code in a malformed state) and corrupted source indexes cause almost all of the problems being described here. Both are due to Swift handling being immature. If you don't use these things heavily, you might not notice. If you rely on them, it's infuriating.
Thank you! For ages I seemed to be the only one that gets annoyed by that. How hard could it be to fix anyway? Some of my fellow developers argue that it is designed with prose text in mind and it is better to be consistent over the OS, but I disagree. A source code editor should be designed to edit source code. It already isn't consistent anyway, as ctrl+left/right moves between camel case in Xcode, unless you are in a text box or something, or a different app, then it doesn't work. Hardly consistent. That said, there are a good few hard to guess Xcode shortcuts that can be very useful if you look them up. Line up and down is ⌥⌘[ and ⌥⌘] for example. 
That's with shift instead of ⌥. Unless I'm *very* much mistaken in which case apologies! Anyway, I entirely agree with the rest of what you say. 
Of course, for your particular example, you can also create a failable convenience initializer for UIImageView: extension UIImageView { convenience init?(string URLString: String) { let optionalImage = NSURL(string: URLString) .flatMap { NSData(contentsOfURL: $0) } .flatMap { UIImage(data: $0) } if let image = optionalImage { self.init(image: image) } else { self.init() // Work around for compiler bug: https://devforums.apple.com/message/1062922#1062922 return nil } } } Then you can just do: if let imageView = UIImageView(string: imageURLString) { addSubview(imageView) }
This doesn't actually work. The `map` function runs the passed function on the value of the optional if that is not `nil`. The returned value is then encapsulated in an optional. This doesn't work well when the function returns an optional (as the failable initializers do). You get an optional of an optional, like `NSURL??`, instead of a single optional like `NSURL?`. You need `flatMap`, that expects the function to return an optional. That first maps, then "flattens" to remove the two layers of optionals.
Just the other day, Xcode crashed while I was working on my storyboard. When I opened Xcode again, the storyboard could not be opened. Tried restarting the computer and everything. Luckily I had just started a new project and it only took me 10-15 minutes to rebuild it, but now I make sure to commit to git very often.
I found this [post](http://www.bornsleepy.com/bornsleepy/point-optionals) And this comment: &gt; 'X' means an object exists and the compiler can confirm that fact. 'X!' means that the programmer knows an object exists, but the compiler can't confirm it. 'X?' means even the programmer isn't sure if the object exists and has to account for the possibility of a nil. 
I have been saying that and being down voted by that. People don't like someone criticizing stuff that Apple creates but the truth is that Xcode is a piece of shit. Beyond the issues you mention I can list the following: * pathetic vague error messages that don't say anything, for example: "property cannot be found on forward class" that should contain this information "don't forget to import the header file of the class you are trying to use" * error messages that means fuck you, like this: **Unable to simultaneously satisfy constraints. Probably at least one of the constraints in the following list is one you don't want. Try this: (1) look at each constraint and try to figure out which you don't expect;** -------- probably? try to figure out? forgot to say, fuck you. * lack of documentation or pathetic documentation, superficial, without any example * UISplitViewController as the rootViewController not working with storyboards (lack of proper test before release) * random crashes for the most ridiculous things: switching tabs, renaming files, etc. * Xcode deleting provisional profiles constantly * Xcode warning about provisional profiles of projects I am not using * Inability to finde the correct header for different classes with the same name on multiple targets * Plethora of autolayout limitations and errors that are not fixed by Xcode and for which Xcode doesn't provide a real reason or solution. * Fix this provisional profile button that rarely works and when it does, craps your system. * Project corruption from times to times that forces you to do a series of tricks to recover the project. * Project corruption induced by autolayout (just create a series of views inside views and it will eventually crash and corrupt the project) * Autocomplete fails constantly * pathetic implementation of interface builder for Cocoa and lack of properties. Want to color a view on Cocoa? you have to subclass the view. Want to color a table view and change the selection color in cocoa? you have to create a row subclass plus a cell subclass, plus a table subclass to do what you want. This is insane. The list can grow to infinity.
fyi, I'm a Bull's Eye master now. :D 
Good point, you're right.
I only recently started playing around with Swift and Xcode, and Xcode was a nightmare to work with. I was using it on an older MBP though, which then (coincidentally?) died. But Xcode is actually working really well on the new machine. Maybe the new release of Xcode is optimized for the newer systems and OS? 
Select the view whose constraints you want to modify, click view -&gt; utilities -&gt; show size inspector, scroll down to the constraint you want to modify and click 'edit'.
You're welcome!
thanks, i get the point uptill that. but in some cases i've seen compiler suggesting like "??" maybe it means that optionals can be wrapped in optionals?
If you need things to happen asynchronously but only after other things have finished you might want to look at NSOperarion and NSOperarionQueue. You can have operations that are dependent on one or multiple other operations that get executed in the same or different queues. Very flexible and much safer than trying to implement it yourself. If you already have the async code written and you just need to trigger the refresh when it's complete the convention is to create a protocol and effectively use the delegation pattern to notify you controller when the operation is complete. This is similar to the way you get notified of the view loading etc.
Just remember that any and all UIKit/AppKit updates *must* be done on the main thread. It's pretty easy to make this happen with GCD. In fact, I have a very basic example right here https://github.com/ztj/ColorShifting which I made for someone on this subreddit a while back.
Yes I refined the tutorial a bit more thats why the video is not in sink
 for (var i = 0; i &lt; 5; i++) { //do something with array[i] object. e.x. println(array[i]) }
When running your app and quitting the simulator or killing it in your phone there becomes a breakpoint, nothing major just the simulator is stopped and the breakpoint happens
PARSE! Use parse it is so easy to implement just use its SDK and make a PFUser Object and you're good!
That works. However, the more swifty way of doing it is: let arr = ["yeti", "snowman", "snowball", "ice", "popsicle"] for s: String in arr[0..&lt;3] { println(s) } So you've got that option now too, OP. (of course, the ": String" is optional.)
You can also use the range operators: let arr = ["Harry", "Hermione", "Ron", "Neville", "Luna", "Ginny"] let selectionA = arr[0..&lt;2] // ["Harry", "Hermione"] let selectionB = arr[2...4] // ["Ron", "Neville", "Luna"] Of course, if the range is out of array bounds, errors happen. 
You could also go to Targets &gt; General &gt; Device Orientation then disable everything you want but one has to be checked good luck! :)
It does the same thing but: Click on your project in the Navigator, then click on your project under Targets, then underneath Deployment Info there are checkboxes for Portrait, Landscape, etc.
You absolutely want to use the [Keychain](https://developer.apple.com/library/mac/documentation/Security/Conceptual/keychainServConcepts/01introduction/introduction.html). That's what it was designed for. You should use a keychain services wrapper for Swift, like this one: https://gist.github.com/s-aska/e7ad24175fb7b04f78e7
This is the correct answer. Canonically Swift, expressive, and takes advantage of immutable data structures.
Was the wrong link submitted? What does this have to do with generics?
Yea sorry wrong link 
You explain really well. Keep it coming! :)
You're not rotating the transform by an additional Pi radians, you're simply setting the matrix transform to exactly Pi radians every time. Once it is at Pi radians, it won't move. Try this instead: self.ImageView?.transform = CGAffineTransformRotate(self.ImageView?.transform ?? CGAffineTransformIdentity, CGFloat(M_PI)) This will apply an additional Pi radians rotation to the existing transform matrix each time.
Thank you! I swear, the hardest part of starting programming is not having the vocabulary to be able to ask the right questions on Google. Awesome
Relatively simple. Set the initial alpha value to 0, then set alpha to 1 when ad is ready. When there is no ad, set alpha to 0. This (I believe) requires the use of the iAd object in the storyboard. You can also change the position so that the ad is set up to be positioned off screen, then animate to move to on-screen when an ad is available. I find the alpha trick to be much simpler, but probably because I haven't taken the time to mess with the positioning option. 
Good to know, but fortunately no content is behind it :) I just went to my viweDidLoad() function and added the line: &gt; self.UIiAd.alpha = 0 Seems to be working fine now! I would like it to be positioned off screen but that's not exactly necessary. Thanks for the help!
OP here. This is my first Swift OSS project. Would love some feedback. I really wanted to try this out with some external projects like SwiftTask, but wanted to wait until Carthage/CocoaPods are up to the task. Wasted too many hours with the beta Cocoapods this week. 
No problem! I had to do some searching myself, I had seen the plugin before but couldn't remember what it's called. Glad I could help! Also, I found it from this reference page, you might find some more useful plugins here: https://github.com/vsouza/awesome-ios
Thanks!
FYI, this is effectively .flatMap in other functional programming languages. Unfortunately not available in swift but included as an extension in SwiftZ(https://github.com/typelift/swiftz).
In the same boat, quoting my genius coder brother, "keep learning from everywhere you can, you'll reach a point where everything will fall into place." ... and "don't give up". Best of luck fellow comrade! 
That is a part of the process. Whenever you get stuck, understand that someone else at some point was stuck at the same place and may have had a similar question. So start by googling around (very important part of learning programming); if you can't find a solution, then ask in the forums. 
http://shrikar.com/blog/2014/12/31/ios-app-design-using-xcode-6-and-interface-builder-yik-yak-clone-part-1/ found this last night. hope it helps!
Still learning, this is exactly how I learn, well, anything really. Studying one source over and over doesn't really do it for most people I think.
The only major difference between developer accounts in different regions is that you must have a bank account in the region and you will be paid in that currency. It is best to be paid in the currency that you use the most (anything else will require currency conversion which costs money). Where you pay tax varies on the laws in your home country. Usually, you pay tax based on where your money is but some countries require that you pay tax based on where *you* are.
I just copy pasted some of my own code that might be helpful. override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject!) { if segue.identifier == "toClientMenu" { let segueViewController = segue.destinationViewController as ClientMenuTableViewController segueViewController.client = client } The segue identifier I used for this was called "toClientMenu" The destination view controller is a ClientMenuTableViewController, which has an instance variable called client. Through this, I can access that client variable and pass to it whatever I want. In this case, I just passed a client that I had already been using. If, for example, client were an integer, you could just do segueViewController.client = someNum to pass that.
Teaching people to rely upon global variables to pass data is dangerous and could lead to side effects in code. Sorry, but that just isn't advisable at all. OP was on the right track with the segue idea. Edit: Alright, in a simple example like keeping track of an integer such as a high score, a global variable isn't that bad to use, and the convenience of a global variable could outweigh its risks. Still, it's important to learn other ways to pass data for future projects in which you may be dealing with more data and more complicated data, in which global variables that are being managed by multiple objects may be tougher to predict, debug, and manage than data that is passed in a more traditional manner.
No, it will not stay. Global variables just mean it's available everywhere, not that it's persisted anywhere. But globals are dangerous and a bad idea in general, so you should try to avoid using them. Someone else suggested the prepareForSegue method, which is the right one. You just pass it from one VC to the next. If you're not using segues, you can do the same kind of thing wherever you instantiate the next VC but before you push it on the view hierarchy. 
By the sound of your skill level you may want to look into saving the high score to the NSUserDefaults. This isn't meant to store data like a high score. It's more for preference selections and retaining settings and the like but it may be something to look at....
in order to save your high score between games or between closing/opening the app, an easy and sure fire way to do so would be the previously mentioned NSUserDefaults. Check the Apple Developer Docs on how to use it because it's very simple and will get you the definitive information over other sites like here or stack. 
Would I have to make a custom background (basically a line) to make it look like 2 cells when it is actually 1? Custom background for the first textfield that is.
Thanks man. I have no plans on working in a team of developers at all, just something I'm doing for myself personally. Seems like a good habit to get into though, so I'll stick with it!
Yes, you could use a UIView set to 1 pt high, with whatever background colour you want.
No worries! Thought I'd ask haha
For a simple game where the only thing you're trying to keep is the high score, user defaults is ok. But when you get into more complex things or more than just 1 int that need to be saved across many views you either need to make sure they are passed around correctly with segues or even stored with something like core data or a SQLite table. I think core data and SQLite are over kill for what it seems like your trying to accomplish. Example: high score for Tetris- user defaults not preferred but ok Saving current user level stats and inventory levels from an rpg style game- not user defaults Just make sure you don't get in the habit of storing data to user defaults that doesn't belong there. It's a bad practice to get into and I've seen people store entire JSON files there. That's not what it's for. Edit: grammar and example 
This thread has been linked to from elsewhere on reddit. - [/r/mistyfront] [Building an app every month in Swift ( January Edition) (/r/swift)](http://np.reddit.com/r/mistyfront/comments/2rawn0/building_an_app_every_month_in_swift_january/) *^If ^you ^follow ^any ^of ^the ^above ^links, ^respect ^the ^rules ^of ^reddit ^and ^don't ^vote ^or ^comment. ^Questions? ^Abuse? [^Message ^me ^here.](http://www.reddit.com/message/compose?to=%2Fr%2Fmeta_bot_mailbag)* 
Just for clarification, are you looking for something different than the default "slide gesture from the edge to go back" that comes free with nav controllers? Looking at the mail app on the iPhone, it looks like the default navigation behavior to me.
When I have the width of the line at a 10 or more it shows a border of red color but inside of it is just white. How do I fix that?
Actually, I just got this to work by deleting my custom back button in the storyboard!
For a calculator, you really want NSDecimal.
Figured baby steps first :-)
I would check the example code Apple has in their developer section. Many of the key things you're trying to do can be seen there, and even if it's in objective-c the APIs being used can easily be matched up with the swift versions in the developer docs.
Here you go http://shrikar.com/blog/2014/12/06/ios-app-as-a-money-making-machine-using-iad-app-monetization-technique/
AssetLibrary and CoreBluetooth come to mind... You know, [google searches](http://lmgtfy.com/?q=ipod+library+ios) are [pretty easy](http://lmgtfy.com/?q=bluetooth+framework+ios). 
Whats the difference between a Double and NSDecimal? The calculator doesn't do any math beyond addition, subtraction, multiplication and division. Is NSDecimal still necessary? 
I think its also important to know when you're doing something with swift or cocoa! I had a very tough time learning because I just thought that everything in xcode was swift, only to realize most of my problems were coming from not knowing how to use xcode and cocoa. That can definitely help when you're trying to find solutions in xcode!
About accuracy: that's not quite true. There are numbers you can't represent as a decimal number properly either, e.g. 1/3. The problem is just that some numbers that can be represented in decimal cannot be properly represented in binary (e.g. 0.2). As you might have guessed, Double uses binary to represent numbers, NSDecimal uses, uh, decimal numbers. However, NSDecimal isn't inherently better; if you'd, for example, write a calculator for binary or hexadecimal, a Double is better than a NSDecimal. PS. Of course, for a decimal calculator, NSDecimal is the way to go. Just wanted to make clear that NSDecimals aren't inherently "better", just different. Edit: NSDecimals use more bytes than a double so they can represent more digits than double...
Cocoa is the name of the library that implements all the things on the iPhone. CoreAnimation is one of the animation libraries. UIKit is the framework for doing UI stuff.
Jesus, thanks for the pointers! Looks like you know what your talking about. I am not 100% sure what I will be doing with Swift - all I know is that I want to be doing something useful. I may actually want to build my own app someday! The problem I have found is that most of the tutorials require you to use the storyboard - or know alot of Swift Objective-C already. There are no **So you started with PHP and now you fancy Swift - you fool** tutorials that I could find!
Thank you! This definitely streamlines BW and makes it easier for Noobs like me to understand :-)
I figured hand-wave a bit, before dropping [What Every Computer Scientist Should Know About Floating-Point Arithmetic](http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html) on their head :-)
Question: I noticed you used a IBOutlet to trigger the walkthrough, would you mind explaining how one might trigger the walkthrough on app load?
delegates was a major hurdle for me
Setting adsEnabled to false does that and only that. It doesn't remove the banner view or anything. `UIiAd.removeFromSuperview()` maybe? Also, your formatting is pretty terrible and you're not really following any naming conventions... I'd recommend doing that, it's easier for others and for yourself.
Very inspirational Shrikar. In fact your blog is pretty damn good!
Thanks a lot ! . I got hold of your blog I need to learn a lot about marketing from that :)
In the AppDelegate.swift set the rootVC = TutorialViewController()
NSFileManager can get you the contents of a directory. If you're planning on doing this as a GUI app, NSOpenPanel would be the right way to let the user select which directory to use.
`GameViewController` is a class that subclasses and thus inherits functionality from [`UIViewController`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html) This new class overrides, that is replaces, `UIViewController`'s method [`viewDidLoad`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/index.html#//apple_ref/occ/instm/UIViewController/viewDidLoad) to provide extra functionality. super.viewDidLoad() This calls the `UIViewController` version of this method. `GameViewController` inherits methods from `UIViewController`, any time you see `super` that means `UIViewController`'s stuff. let scene = GameScene(size: CGSize(width: 2048, height: 1536)) This line creates a new constant called scene which is of type `GameScene`, this type seems to require a [`GCSize`](https://developer.apple.com/library/mac/documentation/GraphicsImaging/Reference/CGGeometry/index.html#//apple_ref/c/tdef/CGSize) argument that probably tells the scene how bit to be, but I don't know for sure. This like a custom type I think. let skView = self.view as SKView This creates a new constant called `skView`. `self.view` is a property inherited from `UIViewController`. It's being type cased with [`as`](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html) to be a `SKView`. skView.ignoresSiblingOrder = true This sets a property on the view. scene.scaleMode = .AspectFill This uses [implicit member expression](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Expressions.html#//apple_ref/swift/grammar/implicit-member-expression) to refer to `AspectFill`. Context for `AspectFill` is inferred in this case. This can also be done for enums. skView.presentScene(scene) This is calling the `presentScene` method on `skView` and providing the `scene` an argument.
Indentation, mostly. For example, `func disableAds(){` isn't formatted as code, because the line isn't indented correctly. One important commonly used convention is that variables, properties and methods start with lower-case characters, while classes, structs, and some other things start with upper case letters. You didn't follow that with `UIiAD`, and you even used the `UI` prefix for some reason (that usually indicates that a class is part of some framework), which makes it look as if `UIiAD` were some class from UIKit, while it is just one of your properties. A better name might be `bannerView`, for example, even though you may be able to think of something more meaningful.
Yep, I fixed that thanks.
Awesome. I've been disappointed in the lack of buzz around playgrounds. Does anyone know where to go to browse some of the better playgrounds that have been created?
Thanks from both of us! Also, how did you manage to get the compiler to chuck out SIL?
We built Circle for Bitcoin ([app store link](https://itunes.apple.com/us/app/circle-for-bitcoin/id920164002?mt=8)) entirely using Swift. Over time we realized our build time got slower and slower - so we dedicated some time to investigate. Feel free to ask more questions!
You need to go back and practice making console based apps that help you learn language fundamentals before trying to make a game using SpriteKit.
Wow, amazing. Thank you.
The magic that's going on here is that you are using tuple unpacking to swap the values. I'm going to break the code out into separate statements to demonstrate what's happening here. You start by creating creating a tuple: var a = "Hello, " var b = "world!" let temp = (b,a) At this point `temp` is a tuple of type `(String, String)` that, because String is a value type, contains *copies* of `b` and `a` respectively. (a,b) = temp At this point you are *unpacking* the tuple `temp` into variables `a` and `b` - so you are effectively copying the first value (a copy of `b`) into `a`, and the second value (a copy of `a`), into `b`. Of course, since the tuple `temp` is never explicitly used in your code (and even if you did, assuming it was the only time you used the tuple) the compiler is smart enough to figure out that the tuple itself is temporary and optimize it away so that it simply uses temporary variables instead.
Uploaded!
How would I go about doing that? Where can I learn that
[UIImagePickerController](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIImagePickerController_Class/index.html) is the usual preferred way to do this, unless you need deeper access. Here's a [sample project from Apple.](https://developer.apple.com/library/ios/samplecode/PhotoPicker/Introduction/Intro.html) [Here's a basic tutorial](http://www.appcoda.com/ios-programming-camera-iphone-app/), when the buttons are pressed the camera interface will appear. The system provides a great stock camera interface, similar to the Camera app. The UI you see in the tutorial is just to open the Camera control and display the result. [If you need something more custom](http://jademind.com/blog/posts/ios-camera-overlay-view/), you can hide all the controls and use your own overlay view. Really fast and easy to implement, with full support for custom UI if you need it. 
This is how I did it: Declare: var imageData: NSData! Then add the following code to your shotpress: @IBAction func shotPress(sender: UIButton) { stillImageOutput.outputSettings = [AVVideoCodecKey: AVVideoCodecJPEG] if captureSession.canAddOutput(stillImageOutput) { captureSession.addOutput(stillImageOutput) } var videoConnection = stillImageOutput.connectionWithMediaType(AVMediaTypeVideo) if videoConnection != nil { stillImageOutput.captureStillImageAsynchronouslyFromConnection(stillImageOutput.connectionWithMediaType(AVMediaTypeVideo)) { (imageDataSampleBuffer, error) -&gt; Void in self.imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataSampleBuffer) }} }
i had to use self.imagedata because the variable is within a closure. You need to declare the imagedata variable in the class. Here is the complete code class ViewController: UIViewController { let captureSession = AVCaptureSession() var previewLayer : AVCaptureVideoPreviewLayer? var captureDevice : AVCaptureDevice? @IBOutlet weak var myButton: UIButton! var stillImageOutput = AVCaptureStillImageOutput() var imageData: NSData! @IBAction func shotPress(sender: UIButton) { stillImageOutput.outputSettings = [AVVideoCodecKey: AVVideoCodecJPEG] if captureSession.canAddOutput(stillImageOutput) { captureSession.addOutput(stillImageOutput) } var videoConnection = stillImageOutput.connectionWithMediaType(AVMediaTypeVideo) if videoConnection != nil { stillImageOutput.captureStillImageAsynchronouslyFromConnection(stillImageOutput.connectionWithMediaType(AVMediaTypeVideo)) { (imageDataSampleBuffer, error) -&gt; Void in self.imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataSampleBuffer) }} } override func viewDidLoad() { super.viewDidLoad() captureSession.sessionPreset = AVCaptureSessionPresetHigh let devices = AVCaptureDevice.devices() for device in devices { if (device.hasMediaType(AVMediaTypeVideo)) { if(device.position == AVCaptureDevicePosition.Back) { captureDevice = device as? AVCaptureDevice if captureDevice != nil { beginSession() } } } } } func updateDeviceSettings(focusValue : Float, isoValue : Float) { if let device = captureDevice { if(device.lockForConfiguration(nil)) { device.focusMode = AVCaptureFocusMode.ContinuousAutoFocus device.unlockForConfiguration() } } } func beginSession() { var err : NSError? = nil captureSession.addInput(AVCaptureDeviceInput(device: captureDevice, error: &amp;err)) if err != nil { println("error: \(err?.localizedDescription)") } previewLayer = AVCaptureVideoPreviewLayer(session: captureSession) self.view.layer.addSublayer(previewLayer) self.view.bringSubviewToFront(myButton) previewLayer?.frame = self.view.layer.frame captureSession.startRunning() } } 
Actually, that didn't work. ImageData is still nil.
It means the GameViewController instance itself.
logged in to upvote
What code do you already have? Maybe post it on github. Without knowing what you are already trying, it is going to be very hard to figure out what to recommend.
Thank you! Putting out the first edition of anything is always difficult, but I figured I had to ship the thing sooner or later otherwise Swift 2.0 would be out ;)
This is awesome! Checking it out now! 
I'm sure it will be! So, I'm realizing that the project files even for the first project are a premium feature. Have you considered making maybe the first project file free in order for potential users to sort-of 'test' your website out? I think it may be beneficial, seeing as how the videos are pretty much reliant on the project files and not having the project files makes it kind of difficult to see if you'll understand how all of this works. 
Well, "premium" feature as in it costs $3 to buy the book or video, both of which come with the complete source code :) The free project files are available, but they don't contain most of the source code – just the assets needed to follow along, so in project 1 that's the JPEGs.. You don't need the project source code to follow the videos, because it's in the video and I read out nearly all of it.
wow looks very impressive! 
Thank you! I just took a three-hour nap after getting home from work – I think I may need a week of naps like that to catch up from all the sleep deprivation to make this thing ship ;)
I've just started learning swift and I know exactly what you mean. It seems like most of the tutorials are written by seasoned programmers - many of whom have long forgotten how complicated the simplest concepts are to noobs (like me). I find the hardest part of learning swift is simply not having the vocabulary to be able to ask the correct questions. And without the right questions you simply can't find the right answers... and when you post on stackoverflow the experienced programmers make you feel stupid because they think you haven't been bothered to search google... without realizing that you simply can't! So I've got a solution: I've just started learning programming - and as i learn, I will write incredibly simple short tutorials on each thing I learn. Learn an idea/concept/skill -&gt; write a tutorial. Each tutorial will be modular, and focus on teaching ONE THING. I'd love it if others would too. I'll post links here as soon as I've got the first one finished. 
Actually, the probability seems to be very close to 0 that anything is deleted, if I'm not mistaken. `Math.random()` returns a double, so it is extremely unlikely that a random double between 0 and 10 modulo 6 is exactly zero. Almost all of the time, it's gonna be some floating point result. Even if you added a cast to int, i.e. `((int)Math.random()*10)%6 == 0`, the probability would be 1 in 10, not 1 in 6, because of the `*10`.
First: anyone besides OP, don't run this code, it's dangerous. I don't really care what OP does though, so here you go: Swift doesn't include any UI stuff by itself, so you need to specify whether you want to develop for iOS or OS X for the JOptionPane equivalent. On iOS, you might use UIActionSheet, on OS X, maybe NSAlert? File related operations can be done using NSFileManager as mentioned by other people.
Well, you're assigning a `Note`, which is a struct, to a field that is a `AnyObject`, i.e. a reference type - some instance of a class. You need to either change the type of the `detailItem` to `Any` or `Note`, or make `Note` a class. If your DetailViewController is a Objective-C class, the latter is pretty much your only option (and make Note subclass NSObject, too, otherwise you'll have a bad time).
1. submit for review 2. remove from review 3. delete https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/ChangingAppStatus.html#//apple_ref/doc/uid/TP40011225-CH30-SW34
The entire app in question is already developed by Parse as a sample project using the parse sdk. You can clone and modify it by adding your own social with (which parse does well) and other features as you see fit. https://parse.com/tutorials/anywall
Update: I made the book for the first project "pay what you want", with a minimum price of $0. So, you can download that for free and get the project files + HTML + mobi. Hope that helps you!
Post code first. Just at high level, you can add a delegate in child that the parent conforms. And listen to whatever event on parent and then call the delegate.
People may be more inclined to help if they have an idea of what you have tried before and what were the outcomes. Pictures or code snippets can also prove to be useful.
I'm reading "The swift programming language" atm, gonna save this for later. Nice work.
Great! The official Apple book is really well done, and pretty much as exhaustive as you could hope for. Hacking with Swift is quite different because it's all about making real projects while you learn. Hopefully you'll find them both useful!
Thank you – I'm glad it was useful!
yea, how awesome is that, right? :) They expect you to only create content ready for release. They want you to go serious about the system, probably.
That actually is what it is
Agreed with the don't run this code it's ridiculously dangerous. (I created it mainly because I was bored, nothing dangerous would come from it). Thanks for the help. And I am going to be doing this for OS X, what would the equivalent be?
That makes a lot of sense - and that's a fantastic idea!
This is great - thank you! Just started learning Swift in the last week and this is perfect for me. I have minimal to no programming experience and followed along pretty well. I watched the first video on youtube. Very tempted to buy the whole course! Thanks!
Because, init is a special concept in Swift, with rules that are slightly different from basic functions. I suggest reading the free iBooks book "The Swift Programming Language" published by Apple. It has really been fleshed out and covers all the basics, including this. 
Awesome! Your support is hugely appreciated.
since you don't need a full explanation don't google "uilabel typewriter swift". ;) there are many ways to do it, you can start a thread with a for loop and a sleep delay for example.
I've updated with a clarified question, and code - thank you!
You should have a var on your First VC that is called myResults; In your didSelect you should do something like this func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) { var category = contactCategorys[indexPath.row]; var query = PFQuery(category); query.findInBackground( //when the results are returned, call your performSegue after assigning the results to myResults myResults = //the results of the query self.performSegueWithIdentifier("PushToList", sender: self) ); } then in your prepareforsegue if (let destinationController = segue.destinationViewController as? ContactListTVC) { destinationController.contactList = myResults } Note: I have no idea on the syntax. I haven't used swift in a while and I am not checking this stuff. Also, I have no clue on the parse with swift. I have only done it in Obj-C. Also, this is just a way to get started
I've been waiting for the third part. Thank you for the tutorials!
Are you done with the first 2 parts?
Yes. I had a couple bugs I had to work through, but it's running. 
Xcode insists on being a big bully. You can't even turn off auto-indentation.
Best way to approach a project like this, is to figure out how build an API using any web language you are familiar and comfortable with, easiest IMO is Ruby. You want a web server doing most of the work and not having to tax the resources on the device.
Thanks very much, really helpful! 
there are multiple ways to store data in an app, the one you are looking for in this case is Core Data.here, i found a tutorial for swift: http://www.raywenderlich.com/85578/first-core-data-app-using-swift
I'm also interested in this as a learner
Thank you [/u/referas](http://www.reddit.com/u/referas)! Is there a way I can call these methods in a view controller through a delegate, or would I have to send the value to be save to the AppDelegate?
So can I do something like replace the statusItem variable I made with a timer once the timer is started? Thanks for the documentation, I'll do some reading.
Looks like the same issue as this SO, here is the answer: http://stackoverflow.com/a/24150813/1507905
OMG does this finally mean I could make a Yik Yak like app that actually works around middle, high, and elementary schools?!?
Thanks. I tried implementing that function before in the following way: func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -&gt; CGSize { return CGSize(width: collectionView.frame.size.width/3, height: 100) } The problem with this though is that the cells 'leaned' left. The margins between the edge of the screen on the first (left-most) cell is around 5px, while the margin on the 3rd (right-most) cell to the edge of the screen is around 40px. Is there a way to center them?
You could try adjusting the minimumInteritemSpacing
Core data is possibly overblown for your first app. Check out NSUserDefaults at first
Oh shit, nevermind. Didn't realise that autocorrect made it context.deletedObjects Instead of context.deleteObject Spent the last half an hour or so trying to solve nothing. Damn :!
About $6 per day.
I never use make any more, just Command + B
I assume that you're a beginner, in which case you should look into [NSUserDefaults](https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/nsuserdefaults_Class/index.html).
i will, thank you! 
Sell it for a dollar. You can check it out on the store. Bad Mouth. 
I'd just have one timer - then have something timerStatus as an enumerated variable with a some options (i.e.: status1, status2, status3). When the timer counts down, or the user taps something, take the appropriate action - stop the timer, restart the time with whatever count down you like.
90$ per month. I have four apps on the store 3 paid, one free with ads for one of my paid app. 
about $10k / month. Work about 2 months out of the year.
No probs. Here is a nice example of how to store a string in NSUserDefaults -- http://stackoverflow.com/questions/3074483/save-string-to-the-nsuserdefaults Now in your case you will need to implement the delegate protocol for your UITextField and persist the value in `shouldChangeCharactersInrange` method -- https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITextFieldDelegate_Protocol/index.html#//apple_ref/occ/intfm/UITextFieldDelegate/textField:shouldChangeCharactersInRange:replacementString: This way you won't have to depend if one closes or doesn't close the app.
Which app is it?
Are you asking how to save an object to a file? The three common approaches are either: * Core Data to save to an SQL database. Core Data requires that your objects descend from NSManagedObject, that your properties all be Core Data properties on your model and you create each object in an NSManagedObjectContext. Saving is as simple as a since "save" instruction and loading is fast and memory efficient. * NSKeyedArchiver. Requires that you implement encodeWithCoder: and initWithCoder: for your objects. * Copy your data into a Plist compliant dictionary or array of dictionaries and just save the dictionary to a file using writePropertyList:toStream:format:options:error: Each of these has advantages and disadvantages. You'll want to read about them all first (the first two are both big topics, the third is simple but manual and tiresome for diverse sets of data).
someone reddit request /r/codecritique and set this up for all programming languages where you need to put the language in brackets e.g.: &gt;[swift] can't figure out how to make this more efficient
Apps have become like web sites; people expect them to be free or with ads. Check out Panic.com's blog on their experience. They've been losing money on iOS and the Mac side of the business pays the bills. 
very good idea 
$70 per month. One free app with IAP.
If I understood your question right, Yes you can. You can use [[String:[String:AnyObject]] This will store a array of keys and for each key a dictionary. One suggestion is to use classes instead of dictionaries. It is much cleaner that way and you can create property descriptors to do conversions from strings to native. Also there is a open source swift Jason-&gt;object converter. I will paste a link later
May I ask what app?
I feel like he was more *defiant* to keep working on it for 10 years
Pretty cool looking app! I loved when Conan did something similar. What was revenue like before you switched to ad-free?
Unwrap the optional. You can use optional chaining. readText?.rangeOfString
I did a search of all three of these for "Swift" and no results showed up. This may be from the less than ideal search engine, but it appears no one is doing Swift on those subreddits. Doesn't mean we can't, just pointing it out. 
So I assume this was just made? I will start one in r/Swift, and if need be I can X post or delete and move. 
I am not sure about Swift, but if you're willing to try some C++, take a look at the OpenCV (-&gt; http://opencv.org) library. I've used it before to recognize car license plates. 
No, it was created long ago but never used to post anything. Since its inactive you can make a reddit request to take control of it
You can use the EventKit framework to create Tasks, Reminders, and Calendar Events that are visible in all apps that also use these frameworks, including Apple's Calendar and Reminders
To be honest, you're doing a weird mix of iterative and functional styles. Especially, you're abusing map, a for loop would be better in your code. The closure you pass to map should really return a value; what you're essentially doing here is that you're mapping the array x to an array of "void values", which you then don't use (map returns an array, you're not storing it anywhere). Instead, you use side effects to store your results; the biggest reason of using functional techniques is to avoid those very side effects, though. In a purely functional language your solution wouldn't even be possible. So, I recommend you either do it iteratively: func listReplicationIterative(s:Int, x: [Int]) -&gt; [Int] { var result: [Int] = [] for value in x { result += Array(count: s, repeatedValue: value) } return result } Or you do it functionally all the way. func listReplicationFunctional(s:Int, x: [Int]) -&gt; [Int] { return x.map { Array(count: s, repeatedValue: $0) }.reduce([], +) }
Here's a more compact version that avoids the 'var'. reduce() is really powerful :) func listReplication(s:Int, x:[Int]) -&gt; [Int] { return x.reduce([]) { $0 + [Int](count: s, repeatedValue: $1) } } (edit): Challenge 1 for anyone interested: make this work on arrays of any type, rather than just arrays of Int Challenge 2 (hard mode): make this work on Collections of any type, and return a Collection of the same type as the input (Edit) Challenge 2 was, as I half suspected, not possible currently. See replies for xnyhps' solution for ExtensibleCollectionType though
This works great! I am wondering, can you explain your thought process here? For instance I am not sure why you are using $1, for repeated value. Thanks! 
A found a site to host the code [SwiftStub](http://swiftstub.com/742875212/)
Exactly, because I would like to save some information in another class before the app closes 
Perhaps this will help, http://stackoverflow.com/questions/7818045/applicationwillterminate-when-is-it-called-and-when-not
Ahh I see ;) Thanks for all the help
And if you don't already know this - create an IB outlet for the textfield in it's view controller class. That's what dancemonkey has named someTextField.
In Challenge 2, I can't think of a way how the function could return a collection with the same type as the input collection. Are you sure this is possible? I'd be interested in how. I have no idea how this could work since you'd have to be able to construct an instance of an arbitrary collection type - that seems impossible.
Aha, critical step there! 
Is it... 64 bit only? That's the only idea I have. 
Ok this was very helpful because you presented me the syntax to convert the string to a numerical value. I have two text input boxes. At the bottom there is a Label. When the two text inputs are entered I want the label to say which number is bigger. The input boxes are set to value changed and editing did end. I set them different unknowingly when creating the text fields. I am working to change that. I pasted my code below which gives me an Expected Decleration error. any input is appreciated. I have a semesters worth of experience in Java which taught me basics. The syntax for swift is similar so I am confident I can figure it out. import UIKit class ViewController: UIViewController { @IBOutlet var resultOutput: UILabel! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } @IBAction func firstNumber(firstNum: UITextField) { var firstNum = firstNum.text.toInt() } @IBAction func secondNumber(secondNum: UITextField) { var secondNum = secondNum.text.toInt() } if firstNum &gt; secondNum{ resultOutput.text = "First number is greater than second" } else{ resultOutput.text = "Second number is greater than first" } } 
Honestly, I'm not sure it is possible :) "You need language feature xyz" is a valid answer. My suspicion (too tired to think about it right now) is that it requires higher-kinded types.
Yeah, it appears `CollectionType`, nor any of its super-protocols require any intializers, so it's impossible to write. With `ExtensibleCollectionType` it is possible, though. [Naive implementation](https://gist.github.com/xnyhps/0835e1b94b6021aa66fb).
Best advice I can give you (mainly because of the little info you've given on your problems and I've hardly ever used xib): Use storyboard.
Yes. It says standard architectures armv7 arm64. I'm looking up how to change this now. Thanks Edit: After messing around with that, it still did not work. The line of code it's blowing up on in execution is: alien.physicsBody = SKPhysicsBody(rectangleOfSize: alien.size) 
Can you post the error somewhere? 
Use the game template, GameScene = logic/data /////////// GameViewController = controller for touch, talking between views + gamescene ///////////////// Views = where your sprites are 
Don't use sleep(), blocking the main thread like that is not good and causes your app to seem locked up. Check out the docs for UIApplication; you can use the methods beginIgnoringInteractionEvents at the start of your animation, and endIgnoringInteractionEvents as part of the animation's completion handler. That'll cause your app to ignore touches during the animation.
 if (animationIsPlaying) { // do nothing }
Is the game template hard to understand? I've never tried the it because it seems very complicated having to deal with all the entry points and having the correct spawn points for nodes and what not
Depending on the type of animation you're doing, the animation should do "the right thing" when the user touches something. Eg., when you swipe the home screen and you have the "change page" animation, you can touch the screen at any point and nothing unexpected happens. If, for some reason, you really cannot allow any interaction during an animation, you can set "userInteractionEnabled" to false on the view that you don't want the user to interact with. You should pretty much never ever use sleep in an iOS application, just forget that that function exists.
Is it possible? Yup! There are a few different methods in the App Delegate that deal with an app becoming active and/or in the foreground. Put your alert there, and it comes up every time. Control it with a switch? Yup! Take the code you write previously that I just mentioned and wrap it in a big if statement. You're going to need a place to put the value that the switch controls, and I like NSUserDefaults for such a thing, but that's just me. Ninja-edit: Hopefully you're not just looking for code samples but I believe I gave you enough hints in there to go find what you need. And you'll feel great for learning it on your own, honest. 
Updated the post with my app delegate. The updateLabel method is where the NSMenu item in question gets updated.
Cool. Thanks :)
There's an active IRC channel on freenode, whose name I can't remember offhand. Google will find it.
How about self.wantsLayer = true self.layer.backgroundColor = NSColor.redColor().CGColor ?
teamtreehouse.com has a great intro to Swift course. Starts off mainly with Swift fundamentals in the playground environment and then progresses to a whole iOS application.
Is this what you're looking for? https://github.com/roikku/swift-explorer/blob/master/src/main/java/org/swiftexplorer/gui/settings/SwiftPanel.java All I had to do was google "Java JOptionPane for Swift"
Look into NSAlert, it might do what you need.
Maybe [this](http://stackoverflow.com/questions/14081880/xcode-custom-segue-opposite-of-cover-vertical-top-to-bottom-complete-newbi) helps?
\#swift-lang from the sidebar
Yeah I see. Didn't look into it, just saw swift written all over it, lol my bad.
Yeah I saw that. Although I'm not able to access the site (irc.freenode.net), just a blank page. I'm guessing there's more to do than that, but I don't have good Internet to look into IRC right now. If you don't mind briefly explaining, how would I access the chatroom?
I've stored them in variables so I can manipulate the numbers later and done as you've instructed. I get the error "libc++abi.dylib: terminating with uncaught exception of type NSException" and it goes into debug mode after a few seconds of iOS simulator. All of the elements I have in the UI are linked and I have no phantom buttons/labels/text fields etc. I initially had the function for the button in the ViewController class, but that gave the error above. I created the buttons class that extends ViewController, and I still get the same error. What do I need to understand to make the app work? import UIKit class ViewController: UIViewController { @IBOutlet var firstNumber: UITextField! @IBOutlet var secondNumber: UITextField! @IBOutlet var resultOutput: UILabel! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } } class buttons: ViewController{ @IBAction func compare(sender: AnyObject) { var numone = firstNumber.text.toInt() var numtwo = secondNumber.text.toInt() if numone &gt; numtwo { resultOutput.text = "First number is greater than second" } else{ resultOutput.text = "Second number is greater than first" } } }
I have no idea why you needed to create that second class called buttons. Everything should be in the same class. This is what your code should look like: import UIKit class ViewController: UIViewController { @IBOutlet var firstNumber: UITextField! @IBOutlet var secondNumber: UITextField! @IBOutlet var resultOutput: UILabel! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } @IBAction func compare(sender: AnyObject) { var numone = firstNumber.text.toInt() var numtwo = secondNumber.text.toInt() if numone &gt; numtwo { resultOutput.text = "First number is greater than second" } else{ resultOutput.text = "Second number is greater than first" } } } You really should look up some beginner Swift and Xcode tutorials before getting straight into coding apps. At least to learn the very basics and understand the concepts properly. Else you're going to struggle at each and every step. All you have to do is a simple google search of "Swift beginner tutorial" and you'll get loads of links, such as [this](http://blog.teamtreehouse.com/an-absolute-beginners-guide-to-swift), which are perfect for getting started. Edit: If that error still exists after you make the code look like what I have written above, make sure you have disconnected(deleted) all previous connections of the textfields you had. As I stated here: &gt;So, get rid of those two IBActions completely by deleting their code and then going to the Main Storyboard, selecting the textfield (do this step for each textfield separately), and go to Utilities (right) pane &gt; Connections Inspector (symbol with the arrow point right inside a circle), and in the Sent Events section, click x on any connection you see there. (By default the IB Action for a textfield will be connected to the Editing Did End event.) I know you deleted the connections' code, but you also must disconnect the textfields' connections from the storyboard. A connection leading to no code can be causing that error.
You have created two connections (firstNumber and numone) for the first textfield that is selected in that screenshot. You only need the firstNumber connection, the numone reference is useless and also non-existent in the code so it's crashing your code. I'm guessing you did the same for the second textfield too, so delete those references (to numone and numtwo). You do not create references to variables declared in the code, unless they're IB Outlet variables. You definitely need to learn the basics of swift and xcode before doing what you're doing, because this is probably the most basic app you've made, and you're still struggling. So yeah, plus the tutorials will usually teach you by guiding you to make apps.
Why do you have the function (touchesBegan) outside the class¿
How about using the system real-time clock instead of NSTimer? It will never stop. Then as long as you can prevent your process from sleeping, you shouldn't have any issues like you're having with NSTimer.
How would I implement something like that with the system clock? I'm very new to this. And that's my problem, I don't know how to keep my process from going to sleep. 
Uh no its not but thank you! 
Ok thank you!
There are no UITableViewCell s on Mac OS, only iOS. NSTableView is Mac, not iPhone.
Interesting, that is a very good point. I know there are some tricky ways to test speed of specific functions in Xcode. I am going to see if I can do a speed test on the various answers. 
Thanks for the help! I'll read that.
Why would you try to keep track of the time? The computer's clock already does this for you. Just record the start time and calculate remaining time based on the current time when your menu is displayed.
I've been having almost exactly the same problem - my messaging app is almost ready to go, but the UI won't do what it's told! As above, any advice would be massively appreciated!
You're not allowed to write in the main bundle, it just contains the files you deliver your App with. Store your data somewhere in your App's documents directory. More info here: https://developer.apple.com/library/mac/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html This method returns the path to the documents directory: func applicationDocumentsDirectory() -&gt; String { return NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true)[0] as String }
Thanks for the suggestion. My thoughts about this project are now to have a NSUserNotification with a delivery date of x minutes from the start time, and then like you said, to calculate the remaining time based on the current time when the menu is active. Do you have any tips on how I can do the subtracting the current time from the start time? It doesn't seem immediately intuitive.
I found a reasonable fix for my situation. I created a prototype cell that acts as the toolbar (text view, send button). Then, I set that prototype cell as the footer of my table view. Probably not the most optimal set up, but it works for my app.
http://www.hackingwithswift.com/ probably the best tutorials I've watched
Absolutely, I'll pm you
Cool, I'll give that a try - thanks!
I took this course aswell using the free trial. I thought it was great, got me up to speed pretty quick
Thank you for your responses! 
Yes I will be creating a seperate post on how I created that app. Regarding duplication yes I am still figuring out a automate the data of getting the data into the app.
Bookmark
very cool, some things that he infers regarding if else statements are good, but swift is smart enough to ignore (in his function for the operator, you can else if all day and never have a plain else to end the stack) should only take getting things into a Float() to implement a decimal place, right?
perfect this is exactly what i wanted thank you! 
try reseting the content and settings? Have you been messing with core data? What errors do you get?
Man poor guy, I would definitely kick in some money towards a kickstarter to raise money for a proper mac. That is real dedication there. 
lol it's fun listening to him. Even though I know everything he's instructing, it's still fun to watch the tutorial. Any other tutorial of a calculator I would skip in the first second, but this is like a break from all the serious working. He might be trying to be serious, but at 12 his tone could never be that serious. Makes it easier/more enjoyable and relaxing to watch compared to learning new stuff from any other tutorial (from teens or grown ups). Commented, and definitely subscribing. It's great to encourage this youth, and any other who has such dedication to do what he loves and even share his skills with others. He's truly lucky to be this knowledgable at just 12. Makes me proud that he's Indian :) And thank you for sharing it here!
Messy screenshots. Got spelling errors, and you should have the screenshot of the sharing features of the app last (or at least before the "Learning iOS can be fun" screenshot) and the main purpose of the app first. I hope the app itself isn't as messy.
It could be bad constraints possibly but its hard to say without looking at code, storyboard, or something. So is the app crashing in the simulator or just running but the screen is gray/not what you want. You got this on github?
Nice review! I'm about halfway through the course now and I've found it really well presented and easy to understand. I'm almost a complete beginner when it comes to programming so that's saying a lot :)
Well if listening to a 12 year old school you in Swift the isn't enough motivation to stop making excuses and just learn it...
I loved this video. As a professional developer, I would be proud if he was my son.
I've completed the Team Treehouse Swift course, and I'm currently doing [this course on Udemy](https://www.udemy.com/complete-ios-developer-course) (although i got it for $39 just before christmas). The Team Treehouse one is good, but it's very short. I don't think it took me more than a weekend. This Udemy one is a lot longer, but it's also a lot more expensive. Once I finish the Udemy course, I'm going to jump into the Big Nerd Ranch Guide books (ObjC and iOS dev), which are ubiquitously recommended and are relatively cheap. 
Yusss!! So much win. Thankś
Alright thanks, another thing that just started happening is if I switch airplane mode on and off a lot it sometimes crashes my app...not sure why on that one.
I ended up just putting this swft timer class I found into my project https://github.com/yuzixun/swift-timer
Thank you, I'll be using this to learn.
very good thanks
yes
No audio?
Ideally, create an entity for your (date, int) pair, and manage it "properly" via core data using a sorted relationship (there's this ordered set option in core data, not sure what the exact name was, but it causes to-n relationships to use a NSOrderedSet instead of a NSSet - this way you can store items with a specific order). Alternatively, neither a tuple nor an uint are objects that implement NSCoding, which is of course a requirement for using NSKeyedArchiver. What you can do if you really want to go this route (with NSKeyedArchiver), is create a class instead of using a tuple, and implement the NSCoding protocol. Store the int property yourself in the methods required by NSCoding. PS. If you really want to expose the property with the type [(NSDate, UInt16)], you can use either route I described before internally in your model, but expose a computed property with the Array-of-tuples type that you generate when it's accessed from whatever you use internally. Might be a performance issue to do this for every call though, depending on your use case.
I tried the BitFountain one and personally, I didn't like it, but it's because I'm already a mobile developer and the course is extremely basic - it'll probably be good for you! The teacher is patient and goes over all very basic topics and concepts, but doesn't dive too deep into Swift, but definitely bootstraps you into the programming world. I got this one during the Udemy christmas sales and am happy with the content and the teacher: https://www.udemy.com/ios8-and-swift-app-programming-crash-course/ However, I believe it's more focused on programmers coming from other languages such as C/Obj-C/C++/Java. He explains lots of Swift's concepts in an easy manner, but still, if you're not quite used to it, it could not be so easy to follow - but definitely not impossible. Depends on your dedication. :) Other than that, the internet has lots of amazing content for learning Swift. I advise you to google for specific topics you need help understanding or want to dive deeper into. You'll definitely find what you need online and for free. That's what I'm doing. Plus, while learning, another advice is to build as many apps as you can. Don't worry about releasing or making money or starting with your dream project. Just build one app to practice each concept you're learning (or maybe one for a few of them). And when you're confident enough, engage in your "real world" app. :) Hope it helps!
+1 for udemy. i've taken two of their swift based ios courses. great content and there always seems to be a sale. i think i paid $19 for one and $15 for another.
Thanks.
As /u/ehochx said, assigning to the property instead of the local will fix your issue. Because I also write code like this a lot, I wrote a little utility class so I use a closure to manipulate the destination view controller. This entirely eliminates the need for a property on your object: segueManager.performSegue("brandProductSegue") { segue in let productVC = segue.destinationViewController as ProductViewController productVC.brand = selectedBrand } Here's the code for SegueManager: https://gist.github.com/tomlokhorst/6ed40e0e00cd2989a282
It looks like T is the type of the *sequence* and T.Generator.Element is the type of the *elements* within that sequence. So, to make a temporary array of the elements you'll need the element type in the array declaration. If you wrote "var commonElements:[T]", that would specify an array of sequences.
Interesting thank you! - maybe you're right. So if the Element is the underlying type, what is the Generator?
Figured it out! So I just had to add these lines prior to writing and reading: NSKeyedUnarchiver.setClass(AccessToken.self, forClassName: "AccessToken") NSKeyedArchiver.setClassName("AccessToken", forClass: AccessToken.self) Also I had to remove my app from my device before testing again.
How much have you completed? Do you have artwork complete? I'm assuming you have been using spritekit? 
Thanks nickrz for uploading this video on Reddit. I'm sorry I couldn't post more tutorials since I have school and lots of work. I will try however this weekend. Thank you for your nice comments. I got a lot more views since this video was uploaded here. Thanks again!
nice thats super helpful thanks so much! 
 Here's a blog post from Duolingo who recently released a Swift app: http://making.duolingo.com/real-world-swift
One way I can think of is to generate a random string and save it to Core Data and to a Parse class, e.g. AnonymousUsers. I.e., every time the app is launched/restarted, check for this string in Core Data, if it exists, then check for a matching string in the Parse class, and then retrieve all the data for that string, e.g. the upvotes/downvotes/posts. If it doesn't exist (probably first launch) create it and store it in Core Data and the Parse class. Edit: I recommend that on the user's first launch of the app, when you generate the random string, loop through all the strings already in the Parse database and make sure the new string doesn't match any of the ones in the database. If it does then generate another one and check again, until it doesn't have any matches and then let the through. That's why Yik Yak has such a long wait on the launch screen sometimes. Doing all that stuff in the background and then once it's done then home screen can be shown. Edit 2: Also note that if a user deletes the app from their device and then later decides to download it again, they will be given a new string and therefore their old string will be completely useless, but it will still be there in the Parse database. And if a lot of users end up doing this (in the possibility that your app is downloaded thousands of times and then, for e.g. half of then delete the app at one point and then download it again later), then you can fix this extra string issue by sorting going online to the Parse Data Browser, sorting your class data by old-to-new "Updated At" order, and if you find string users that have an Updated At date older than one year from today, I think it'd be safe to say that string is inactive you can manually delete it. You can do this automatically with code too by having the app check every 3 or 6 or 9 months for string users older updated more than a year ago and delete them. Would be simpler and more efficient (since less wait for user using the app) to do it manually though.
This has helped me a lot with Swift blocks. www.fuckingclosuresyntax.com
Your sarcasm-o-meter seems to be pretty broken, pal. Also I wouldn't act that paranoid regarding such imaginary internet points. ;)
What sarcarm? (don't need to answer that, I don't care. Just know I wasn't trying to be sarcastic.) I didn't like that you downvoted my review of the courses because I wrote it to help OP, and if you downvote then he may think it's not a reliable review (which it is). But he replied and acknowledged my advice, so it's all good for me as I was able to get my message across (I didn't type all that for nothing). 
Omg, the paranoia is high in this one. Let's see. I not only downvoted your suggestion, but went full retard and downvoted every comment you've ever made on reddit, night well spent. From now on I also stalk your mom at her yoga class. Have a nice day! ;)
I think the best thing to do is just jump in. Preparation paralysis is real and an easy trap to fall into. I suggest you find a tutorial you like, Ray Wenderlich is fantastic, AppCoda is another one I recommend, and just start playing. Play, screw up, and play some more, and screw up again. It's the best way to get into development. I believe that which tutorial or class you decide on is arbitrary. How much you screw up and figuring out why you screwed up is more important. :-D edit: Can't forget Skip Wilson, his videos are top notch. http://www.youtube.com/user/SkipCasts
I only have a little bit of experience with HTML/CSS/Javascript and started doing Swift somewhere in early november. For me it was quite hard in the beginning, especially since I relied on free tutorials. Those are good, but they're not as extensive and long as most paid ones are. I decided to buy a few Udemy courses which helped me a lot, I haven't even finished most of the courses but I'm currently building my first app to re-use all my learnings. I definitely recommend buying a course, costs a few bucks but it definitely helps. Doesn't have to be a udemy one of course .
Oh yeah! Skip's tutorials were probably the very first ones I watched. He's definitely top notch. The last time I was on his channel was when he uploaded his Sentiment Analysis video. Bookmarked that video since I was too noob to understand everything properly then, but never got around to watching it. Might just do now. Thanks for reminding me of him
I'm currently working as a full time iOS developer from late last year and only started learning in July. I got started from a Harvard course which was absolutely fantastic because it goes at a fast pace but things are explained nice and concisely! It sets up a solid foundation for you to then go learning the APIs through your own projects when you need them. The course was [iTunesU](https://itunes.apple.com/us/course/developing-ios-7-apps-for/id733644550). Don't worry too hard about getting the projects rights, look up the answers if you're stuck and make sure you understand the way better programmers have done things. I have a solid background in programming and core OOP concepts which is most important when it comes to getting the hang of new languages so if that's new to you read a bit about [programming](http://en.wikipedia.org/wiki/Object-oriented_programming)/[pointer](http://en.wikipedia.org/wiki/Pointer_%28computer_programming%29) concepts; those are just a few compared to the other concepts you'll need to learn.
Yeah, I'm guilty of it too. And the rabbit hole goes very deep when you start talking about filter/map/reduce, especially within the context of functional programming. You end up 6 Wikipedia articles into Monad transforms and Functors. It all boils down to: If you have an array of data and you want to transform them to another type, use map() If you want to collect all the items in an array and update some state, like summing or concatenating, use reduce() If you want to remove items from an array that don't match a given criteria, use filter() And since they all act on collections, it's super easy to chain them! Like say for some reason you had a list of numbers and you wanted the product of the squares of the even numbers. numbers = [1, 3, 2, 5, 6, 8, 7, 20, 2, 4] productOfSquares = numbers.filter { number in number % 2 == 0 }.map { number in Int(pow(number, 2)) }.reduce(1, *) // since * is a function of type (Int, Int) -&gt; Int, it works as the argument of reduce, which expects (U, T) -&gt; U
I do 3~5 hours a day and it's still not enough. Coding takes time, learning takes even more and making sure what you learned is fixed in your brain... Well, a bit more. The only way to truly become good at coding is to dedicate yourself and dive deep into it. Of course it varies based on your background knowledge. I'm already an experienced developer in other languages, but just starting with Swift. Anyhow, dedication, repetition, fixing the mistakes you make and creating new dumb apps that use what you just learned or require you to learn new concepts are the best ways to learn a new programming language.
I signed up for the complete iOS dev course by Rob Percival (he's got the highest rated course on Udemy) and it is awesome!! I need to continue it this weekend, but I made it to the end of the Stopwatch app and it's been great so far. Have to continue learning how to create the interface and I have a feeling some time soon the course will get into multi-screen navigation (going from what I assume is one view controller to another). Not sure, but yea. Udemy is great!
I completely agree. A month ago I knew nothing about iOS development or swift, and I just finished my first app. 
Is it a video course or a written course? And how much does it cost? I think I have seen Udemy before but never really looked into it.
I changed MyCustomAPI from a struct to a class, made WebViewCleint a private instance variable and an empty initializer (is that a good practice?) and it worked! Thank you big time! :)
It's a long video course and was $10 the other day. It's now $199 again but it goes on sale all the time. 
don't focus on the raw number of hours. create a habit out of coding almost daily. keep it. and the most important thing **have fun**! you will definitely put in enough time then.
That's the same course I started with! I think it's definitely one of the best out there. He's constantly replying to comments when people get stuck as well. I'm currently somewhere at the maps parts, but doing other courses in between to see how other people develop/write Swift. 
sososwift.com is a good resource
Ok. Thank you. Ill look into that.
http://www.raywenderlich.com is pretty good. I started there. Also check out skip Wilson on YouTube.
You need to send the data along with the segue. Something like If segueIdentifier == "whatever" { let controller = segue.destinationViewController as CustomViewController controller.someVarInViewController = thingYouWantToSend } You will have to make sure types match and such. 
use prepareForSegue() method
Create an IBAction for your button (if you don't know that then you need to learn the basics of Xcode). Then you can put this inside that method: // Remember to change the className here let query = PFQuery(className: "YourClassNameGoesRightHere") // Remember to change the name key here query.whereKey("name", equalTo: "TheSpecificNameGoesHere!!") query.findObjectsInBackgroundWithBlock({ (names, error) -&gt; Void in if error == nil { for name in names { let TheCurrentScore = name["score"] as Int name.setValue(TheCurrentScore + 1, forKey: "score") name.save() } } else { NSLog("%@", error) } }) Check out this detailed and very helpful documentation on Parse by them: https://parse.com/docs/ios_guide For future reference.
Okay so I clicked on both links. The stack social link you posted is in fact the course i bought: [proof.](http://imgur.com/2IzL1pD,kU44NgU#0) And I checked the second link and apparently, that's the course that I've been taking for the past few weeks. I'm 49% done with it: [proof.](http://imgur.com/2IzL1pD,kU44NgU#1) So apparently, the two courses are the same. Now for the course itself, it's really excellent. This Eliot fellow seems to know what he's doing. If you've programmed before, the beginning is slow but otherwise he is very thorough and teaches everything you need to know to start building your own iOS apps. One great thing that he does is he responds very quickly to comments. Within a day or so. So when you have a question, just post it and Eliot or one of the others taking the course will come to your rescue. I definitely think the course is worth the money. If you consider that a private programming tutor will charge you about $100 - $150 for just an hour or two of tutoring, you're getting a good deal of learning for the same price. Definitely get it on stack social because it's cheaper and i'm damn near 100% positive they're the same course, based on the proof above. If you have any other (perhaps more specific) questions, feel free to let me know :)
No problem!
alright but what to I write in the receiving view controller so that it gets this data? I'm getting the error " Expression resolves to an unused I-value" so I'm assuming i need to put something in the other view controller. 
A fairly on point tutorial. http://jamesleist.com/ios-swift-passing-data-between-viewcontrollers/
I just finished a new course that teaches Swift with real-world projects, and I put 20+ hours of free video on YouTube. [See what you think](https://www.youtube.com/watch?v=08JnjnY5Lo0&amp;list=PLuoeXyslFTuas6GrfsUiFPShGXmaVDbgN) – if you choose to buy the complete series as books or videos, use the code "reddit" to get a 20% discount :)
Just for future reference on this question. I was getting the same thing as well as an error saying: ViewController has no initializers. This @IBOutlet var adBannerView: ADBannerView? Should look like this @IBOutlet var adBannerView: ADBannerView! Hope this helps someone in the future.
Depending on what kind of traffic you're looking at, the hosting will probably be pretty cheap. For example, if you go with Digital Ocean's 5 dollar a month plan you're looking at 300 bucks over the next five years (and you'd most likely have plenty of bandwidth to host other things on the server). You could also take a look at heroku, which offers a free tier: https://www.heroku.com/pricing I might be able to help a bit more if you can provide more details on what the app will be doing. 
You'll need the app to integrate with an API of some sort. Depending on the content of these user shared pages, you might be able to use CloudKit (though I admit I know little about it), otherwise you'll probably need to develop a web application of your own to serve up the web API. When users make pages on their phone to share, the phone would then make a call to your web API and your web app would store it in a database, and you'd have API endpoints for your phone to search other users' pages and fetch their metadata so the phone can display them.
Ah alright this really puts things in perspective. Thank you very much for the clarification!
What I did was follow along the first few tutorials on team tree house and then started doing my own project. You honestly can Google all of your problems from constraints to errors, part of being a programmer is being able to Google correctly. I consider myself an intermediate iOS developer as I do mostly freelance work but honestly the best way to learn is through a hands on approach. You won't learn anything if you just watch tutorials all day without any action. 
Oh I know, I agree with you 100%. Was merely making a general comment. My learning with iOS dev has been going quite well, there's just a slight learning curve because of xcode, storyboards, etc. I still haven't quite covered multiple view controllers and screen transitions, but I'd say I'm making good progress :]
maybe this will help... http://www.raywenderlich.com/89562/watchkit-tutorial-with-swift-getting-started
Forget about the term "pages". You're just talking about raw data here, you don't have to store or serve a page, just the data that the page contains. You'll want to store that data online so that it's accessible to everyone with a connection. For example, you could store the data in a sqlite database on a remote server, then parse the data as json or however you want really. Once you have the data you treat it like you treat any data in an app.
Start some kind of fund to buy this guy a mac mini, i'll contribute.
Your code gives me the same error message: &gt; Type NSSearchPathDirectory does not conform to protocol 'StringLiteralConvertible' I want the path to a regular directory: "wsrc/widgets/widget1" Any ideas? Thanks
Not having success with it. I tried this: &gt; var x = NSBundle.mainBundle().pathForResource("widget1", ofType: nil) The documentation says: &gt; name The name of the resource file. &gt; extension If extension is an empty string or nil, the extension is assumed not to exist and the file is the first file encountered that exactly matches name. But it doesn't say how to find a directory, instead of a file. Could you give me an usage example, please?
Where did you get the idea that you can pass a string to the directory parameter? You have to pass a NSSearchPathDirectory, as the method's signature says, which is an enum that has a few predefined values. How to get your path to your directory pretty much depends on where that directory is. Your user account's folder? App bundle? Documents or Library directory? 
Truly beautiful work (as usual). Thank you!
Why not use [Parse](http://parse.com)
Wow thanks.
Thank you. The videos look nice, I'm definitely going to check them later. Kudos!
Thank you!
wonderful, i'll look up the documentation now!
Can a NSViewController control part of a screen? I'm not sure how i use all three of these to combine what i want. I woul dneed a NSTabViewController correct, not a ViewController? 
name.incrementKey("score")
1: This sort of thing is a pretty significant privacy issue, so is only going to be possible if both people have the app running. With that limitation though, check out http://nshipster.com/multipeer-connectivity/ 2: You'll need to have a server somewhere (which is going to be an ongoing expense). Then you'll need to write a separate program that runs on that server and responds to connections appropriately. This is, separately from the iOS app, a large task. Storing user data and passwords securely is difficult and important. (edit: I forgot about CloudKit. That might make this part easier) 3: Search for in what sense? 4: If you mean that literally, that's not going to go over well with users. Same place and same size would mean you'd have to use the iPhone 4's screen size for every phone. If you're ok with spacing things out differently on different phones to take advantage of available space, you'd want to look into Autolayout and size classes. Unsolicited advice: start smaller than this. Linked web services and iOS apps like Instagram and Facebook have large teams, and years of work. If you can figure out some subset of your app that (for example) doesn't need a separate server, and get that working first, you'll be a lot happier.
Thanks! 
that helps partially, but on which page would I place the prepareForSegue? on the main tableView Controller or on the View Controller responsible for creating the data? I've attempted to place it in the view controller that creates the data but it doesn't display the data, it just shows a blank label. maybe I'm just passing the wrong data?
This can happen when you are just using a navigation bar and not a full on navigation controller.
Ok, so you suggest assigning a ViewController for each TabViewItem? Would you recommend putting a View on a scene, assign it a storyboard ID, and then whenever a user clicks on another tab, have the View display a different array using the ArrayController? Edit: or would you recommend systematically programming each UIView? And if I want to scroll horizontally I don't need a table view to control the items that go off screen(similar to a carousel), correct? 
I would like a table of contents for your tutorials if possible. Like the first video would tell me what you're going to cover and would provide links for the videos. But maybe that's too much fore planning, idk how much you're going to commit to this. 
Intermediate tutorial, I would like to figure out how to work with Core Foundation and creating sockets in swift. That's probably beyond intermediate though :/ but I would love to see someone create a listening socket in swift
If you haven't already stumbled across it, there's also Parse for cloud storage. CloudKit is cheaper and easier, but Parse has a superior documentation and supports a variety of OS, unlike CloudKit which only supports Apple services. So if you do plan on building for Android as well, you may have to think twice. You're an investor after all, should be easy to figure out the pros and cons and make a good decision. (I like how you brief your backstory in a lot of your posts. I'm 16 too but probably not as smart as you, only in programming haha.)
beginners tutorial. I would like to see some examples of successful apps transformed into swift. Or built from scratch in swift
Both plz? One suggestion if you're going the video route, please don't do what everyone else on Youtube does and start with like 20 minutes of explanation about yourself and how you got there or what your setup is. I just watched a video on installing wordpress via FTP (hadn't done it before) where the guy was like "here's linux, here's what's great about linux, I'm going to do parallels and open windows now, here's what's great about windows"... yeah, that's super unnecessary and not why I'm watching the video AT ALL. I'd rather watch 5-6 videos on EXACTLY what I want than 1 with everything about all of the crap. Anyway, do this and post links and I'll be forever grateful. 
I can sort of see it both ways. On the one hand, you want to be inclusive, but on the other hand, if feel like that sort of information would better off in a general programming for beginners guide. If you start getting into classes, objects, etc, its going to be a long time until you get to anything that's actually Swift related.
You could always use UIApplication.sharedApplication().setStatusBarHidden(false, withAnimation: UIStatusBarAnimation.Fade) and set the View controller-based status bar appearance to NO in your info.plist Here is some sample code that hides and shows the status bar when you click on a button: import UIKit class ViewController: UIViewController { @IBOutlet var test: UIButton! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. test.addTarget(self, action: "hideStatusBar:", forControlEvents: .TouchUpInside) } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } func hideStatusBar(sender: AnyObject!) { if UIApplication.sharedApplication().statusBarHidden == false { UIApplication.sharedApplication().setStatusBarHidden(true, withAnimation: UIStatusBarAnimation.Fade) } else { UIApplication.sharedApplication().setStatusBarHidden(false, withAnimation: UIStatusBarAnimation.Fade) } } }
I am a beginner at iOS programming and I would like to see a good tutorial that teaches you basically everything you need to know to start coding on your own. I have looked at several tutorials and followed them but I still don't seem to be able to go alone into a project.
Thanks! I'm gonna look into CloudKit. Thanks for your help!
Hmm. That may be simpler than what I ended up doing. Someone on another forum told me this: And once I put the viewDidLoad part into my handleTap function, and messed around a bit, it worked. private var _hideStatus = false override func prefersStatusBarHidden() -&gt; Bool { return _hideStatus } override func preferredStatusBarUpdateAnimation() -&gt; UIStatusBarAnimation { return .Fade } override func viewDidLoad() { super.viewDidLoad() _hideStatus = true UIView.animateWithDuration(2.3) { self.setNeedsStatusBarAppearanceUpdate() } }
$0 is a shorthand notation for "the first argument to this closure". Written out in entirely non-shorthand notation it would be something like let sortedNumbers = sorted(numbers) { (firstNumber, secondNumber)-&gt;Bool in return firstNumber &gt; secondNumber } 
I'm the exact type of person you should be targeting. I'm completely new and during the process of creating this tutorial, if you would like to ask me questions for feedback I would be more than willing to help you out.
Either way works...I'm just a fan of using a built in one line method :)
You don't. You add a UITextField to the contentView of UITableCellView of a UITableView. If this doesn't make sense, then please describe your problem more fully. 
Thanks, I've played around with that in a new project. Trying to implement it into a chess app is too difficult for me though. The chessboard in my app is an image of fixed size and I would need to determine the exact coordinate ranges in the screen that represent the two squares (one that a player starts from, one that they drag to) for multiple different puzzles and I don't know how I can easily get that. I also want it to draw a line between the two points the user starts and ends dragging.
I understand why Apple discourages this, but they use this exact menu style for the notification centre in OSX and similar concept for the notification menu on iOS. Personally I'd like an uncluttered view instead present all the buttons on the front page.
Not a ton of tutorials for Swift but at least what you do find will be up to date :) Swift will only get more popular from here so why not!
From my research, it doesn't seem like CoreBluetooth / BLE is suitable for streaming much of anything. If it could then it wouldn't be "Low Energy". See http://electronics.stackexchange.com/questions/100871/streaming-video-using-ble-or-classic-bluetooth-4-0 for a question similar to yours with a pretty great answer.
I will put it on the GitHub as well.
If you are a beginner, use Parse. It has a great documentation which will be a good place to start - https://www.parse.com/docs/ios_guide . Parse is very handy as it has a PFUser class which makes creating and editing users really easy. Here's what a basic login View Controller may look like: http://pastebin.com/K4AEB0eE Then to display this data after it's been created: Just transfer it to the next View Controller using the prepareForSegue method. So this one's done, and to get all the other user's data that's already on the Parse database, use a query. It would look something like: var userDataArray: [(username: String, email: String, phone: Int)] = [] var query = PFUser.query() var users = query.findObjects() for user in users { userDataArray.append(username: user.username as String, email: user.email as String, phone: user["phone"] as Int) } Although that's the most basic way of querying, you could do much more. Read through the Parse iOS docs linked above and learn about it. I'd recommended using findObjectsInBackground instead of findObjects whenever possible.
IDK. It seems to me that Swift is a "framework" for objective c. Is it more of a fork, or like an update to objective c? 
Not at all, it's an entirely separate and new language that has two-way interoperability with software written in Objective-C (in that Swift can call ObjC code, while ObjC can call Swift code which has been marked as ObjC-compatible). There's also bridging between the low-level types of each language during these cross-language calls to help accommodate this interoperability. The end result is that Swift has basically native access to the OS X/iOS APIs that are (currently) entirely written in Objective-C (and future Apple-created frameworks can be written in Swift, while still allowing client code written in either ObjC or Swift to call them)
I don't think people who are starting programming would want to look at a general programming guide and memorize all the different types of languages, they'll probably just pick one and go with it. I imagine most people who pick swift are specifically doing it so they can make apps for apple, too. And they won't care about other stuff, like general programming knowledge. 
I got a similar error once, and the solution here helped me get rid of it: http://stackoverflow.com/questions/9458739/ld-warning-directory-not-found-for-option Had it bookmarked for future probs. Maybe it'll help you. If not, try googling any specific warning/error shown in Issue Navigator. If that doesn't help then, since you haven't gone too deep into the app, creating a new project and pasting your code and UI from the storyboard there should be easy. Btw, you don't necessarily have to import any of the frameworks from Parse except for Parse.framework. I need Bolt.framework because it has a saveInBackground method that I dearly use, and some other stuff. The other three aren't necessary unless you want to implement Facebook into your app (so ParseFacebookUtils comes in), or you're serious about your app and would like ParseCrashReporting, or some UI stuff with ParseUI.
Thanks so much for the reply -- I can't figure out why I keep getting these 33 errors! I deleted my whole project and restarted it, I imported the parse framework, and i copy &amp; pasted the code you gave me, and it does not have any errors. When I run the project --&gt; boom, 33 mach-o link errors. It's so frustrating, what can I do?

I've been using iDraw (indeeo.com) and PIxelmator (pixelmator.com). I like them because they both have iPad and desktop versions. None of them (desktop or iPad) are free, but they're also not at all expensive. Coupled with a small Wacom tablet, making sprites for my new project has been very enjoyable so far.
Wacom tablet--Sweet!
Just curious... what sources did you use?
[Simple iOS app tutorial](http://www.raywenderlich.com/?p=74904)
 .setObject(object: AnyObject!, forKey: String!) Definition by Parse: Sets the object associated with the given key E.g. assuming you have defined user as a PFUser or PFUser.currentUser(), you can do user.setObject("Elon Musk", forKey: "name") Which will set the user's name key to Elon Musk. you could also simply do user["name"] = "Elon Musk" which will do the same thing. I showed you this when I wrote user["phone"] in my first reply on pastebin and the query code. Both are the same. Whatever floats you goat.
Are you learning swift because you want to read about it or because you want to make something? Just start making something.
Not everyone is writing iOS apps. I write OS X apps for example.
I think 4 years is barely enough to get a basic grasp of C++, so if you're interested in it, keep studying that. You should take a look at both. My recommendation would be to choose one and go as deep as you can with it. This isn't really the trend, though. Everyone seems to be looking for the "full stack".
I would google everything I needed to do. I most often used stack overflow, but also tutorials on random websites and a little of the Apple documentation.
Make an app
Awesome thanks.
Thanks
Thanks!
Cool, thanks! 
Sorry to hear you're having such a hard time. Try following [my Swift videos on YouTube](https://www.youtube.com/playlist?list=PLuoeXyslFTuas6GrfsUiFPShGXmaVDbgN) and see if they are any better. If they still suck for you, let me know and I'll try to do better!
Rob Percival on Udemy has a very comprehensive, all-in-one course for iPhone and Swift. Learn to make map app, weather app, Instagram and tinder clones. 52,000+ students with a very good discussion page for when your app doesn't build or run. to.i'm halfway through the course and find it so much better than book learning. Really enjoying the course. Also, check out youtube too for swift programming.
Thanks I'll check it out
Thank you so much for your help.
Regarding programs, I bought two online courses: 1) for app icon/maps/rpg graphics and 2) User interface/design. #1 recommends Flash Professional #2 recommend Sketch Flash is expensive! Can Sketch do all the same things as Flash or is there a cheaper app that does the same stuff as Flash for iPhone/iPad development with Swift?
I will definitely watch some of your videos. Thanks.
Ok thanks.
Yeah same with me. Its easier to pay attention to a video.
Awesome! I'll PM you my facebook 
Hey, I have had a read through it but I am confused as where it is saving and retreving data and how that will work in a game. Also how will the user get the data back? i was wondering too, Could I use that Obj-C code and use a bridging header to port it swift or will that not work?
What you're trying to do has multiple big parts to it, so I recommend breaking this task up into smaller tasks, doing them one at a time, and if need be, asking for help on them one at a time. It looks like Yahoo Finance data can be accessed [through a couple APIs](https://code.google.com/p/yahoo-finance-managed/wiki/YahooFinanceAPIs). One of them uses JSON. So your first task could be learning how to access the Yahoo API. Your second task could be how to access the right data. Then how to use Swift to access the API. Then how to store JSON data with Swift objects (how to convert it). Then how to create a graph and put the data on the graph.
I am just about to graduate, and most of what I learned in school was also C++. I have just started using Swift and learning iOS development, and I can tell you from experience that you should definitely choose Swift. All of Apple's documentation is shown in Swift and Objective C, but the trend is towards Swift. You can already find a lot of helpful tutorials and information on Swift, and being a CS major, I'm sure you know how to find solutions that will work
Short answer: - You need to set the Split View Controller to be the Split View delegate. (That this isn't set up automatically is probably a bug). Without this, the "Split View Item" objects in the storyboard won't be connected to anything. Split View Item allows you to control how the panes resize (holding priority) and whether a pane is collapsed or not. - Apply constraints to the *content* of the left view controller, not to the left view itself. For example, add a button to the left view controller, set the button's top and left space constraints to = 20 pts, and set the right and bottom space constraints to &gt;= 20 pts. That will enforce a minimum width for the left pane. 
Here is a popular swift tutorial on TextKit and Dynamic Type: http://www.raywenderlich.com/77092/text-kit-tutorial-swift You should pay attention to Dynamic Type as that will allow users to adjust the text size to suit their own needs. You give your title an appropriate style and let the OS (and autolayout) handle the rest.
https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/#//apple_ref/occ/clm/UIView/animateWithDuration:delay:options:animations:completion: with option AllowUserInteraction
Good stuff. I'm a big fan of the wenderlich tutorials. Thank you very much for pointing me in the right direction!
Hey guys!!! Rohit here. I made my second tutorial! Check it out here : https://www.youtube.com/watch?v=W76_RmJkOhM
This is the full app on the app store, although I need to update it there. https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=954688983&amp;mt=8
I've heard things about Parse as a backend service but I've never tried it myself. Or you can use Amazon Cloud Services, they let you host a variety of backend server related stuff~
Not the tab car controller.. the simulated metrics for whichever view this is that you're showing.
Well that was my only guess. Without seeing the attribute inspector options for that view, and the code for its view controller, my only other advice would be to 1) detach that view from the tab bar controller, 2) create a new, empty view controller, 3) attach the new view controller to the tab bar controller, 4) copy over the GUI elements and reconnect outlets, etc.
This is awesome. Thank you! :D
http://stackoverflow.com/a/18760973
The bottom bar is obviously a tab bar, but is the other bar a tab bar? Use Capture View Hierarchy under Debug &gt; View Debugging to see what it is – it may well be a toolbar, and indeed it's a different height to the bottom bar. Are you using a navigation controller inside those tab bars? They come with a toolbar built in.
Thank you Mr. Bear
This wont work for what I want. I currently have a "Present Modally" segue with the presentation set to "Over Full Screen". My second View controller has a semi transparent background so the bottom ViewController shows through. A push segue won't provide the total effect I want.
Of all the responses THIS one is the only one that's producing any result for me. Everything else produces either no result or the results are just bizarre. One thing to note, however, is that Autolayout needs to be on. I've read elsewhere that the Split View Delegate methods and auto layout are not compatible. Hopefully Apple fine-tunes this process as what I'm having to do is a bit of a hack if you ask me. Thanks
I am using a navigation controller, and the capture view hierarchy is grayed out. how do i disable the navigation bottom toolbar?
After setting up bridging header, you can do this: // setup Flurry Flurry.startSession("FlurryKey") // replace flurryKey with your own key Flurry.setCrashReportingEnabled(true) // records app crashing in Flurry Flurry.logEvent("Start Application", timed: true) // Example of even logging Flurry.endTimedEvent("Start Application", withParameters: nil) //End timed event How do you setup extended events?
Ah, Sweetness! Thanks!
&gt; I've written a summary of common patterns in both languages well have a look here - http://www.raywenderlich.com/63269/how-to-save-your-game-data-tutorial-part-2-of-2 and part 1 - http://www.raywenderlich.com/?p=63235
This, Sketch is the nicest graphics program I've ever used and works really well with Xcode.
https://www.google.com/ 9/10 times you find what you're looking for, especially in the case of images and icons. I just spent the last half hour finding and obtaining some good icons for my app with the help of google.
This pack is pretty solid for free UI content: http://www.invisionapp.com/tethr edit: This one is pretty good as well http://nathanbarry.com/25-free-ios-design-resources/
Ok, now I have UIView.animateWithDuration(5, delay: 5 , options: UIViewAnimationOptionAllowUserInteraction, animations: { self.bonusbutton.center = CGPointMake(self.bonusbutton.center.x + 1000, self.bonusbutton.center.y) }, completion: { (finished: Bool) in println("DONE") }) but I'm getting the error "use of unresolved identifier UIViewAnimationOptionAllowUserInteraction
Also, this is incorrect: &gt; you don't need the * because id is not a pointer type `id` _is_ a pointer (specifically, it's an `objc_object *`), which is why you don't need another `*`. Also: &gt; Extension methods defined in Objective-C are accessible if you import the extension header file They're accessible whether you import the extension header file or not, but the compiler will issue a warning if you don't import the header (the code will run fine, though).
I am absolutely taking suggestions! I'll make the changes you've suggested. Feel free to either make issues or pull requests on the repository.
+1 I would also love to get more info with patterns like this 
Assuming the tuple you want to return is just the title, artist, and album you passed in, it should be straightforward. The function: func myFunction(inputDict : [String:String]) -&gt; (title:String, artist:String, album:String) { let inputTitle = inputDict["title"]! let inputArtist = inputDict["artist"]! let inputAlbum = inputDict["album"]! return (inputTitle, inputArtist, inputAlbum) } And you don't even need the constants: func myFunction(inputDict : [String:String]) -&gt; (title:String, artist:String, album:String) { return (inputDict["title"]!, inputDict["artist"]!, inputDict["album"]!) } Calling the function: let myTuple = myFunction(["title":"Sleeping In", "artist":"The Postal Service", "album":"Give Up"]) Accessing named attributes of the tuple: myTuple.album myTuple.artist myTuple.title I'm doing a forced unwrapping of the dictionary by key, so it will give an error if one of the keys wasn't provided, but you can add in checks yourself to remedy that.
Read http://www.objc.io/issue-13/singletons.html which may help a little. (It's not Swift specific, but, any serious Swift developer can not get far without learning how to translate Objective-C to Swift, especially in the context of UIKit/AppKit framework development.) It's important to understand the types of criticisms against singletons. The elevation to outright "antipattern" is sourced primarily from the multi-user software development scope where it is far more likely over time that you will need two separately constructed and configured instances of a thing in the same process eventually. However, all of the singleton promotion you get from Apple is aimed at single user application development where it's far *less* likely that they will outright destroy your ability to properly architect your app structure for its purpose. That said, there are plenty of other pitfalls, not the least of which being just producing a singleton safely in the first place. This is covered by Apple, and referenced in the article I linked above. You can also see coverage of other pitfalls to avoid in that article. I think it's important to avoid overusing or abusing singletons whenever possible, but, you must consider the context of app development given the toolset. If you're working with UIKit, you are bound to singleton concepts anyway (such as the run loop) that you can't avoid. And the framework itself is designed with the use of singletons as an expectation. So your best bet from here is to get really well versed on using singletons rather than focusing on avoiding them entirely for this context.
Thank you! This worked like a charm!
try icons8.com really nice website!
search google for "ios adoption rates" http://david-smith.org/iosversionstats/
I just got my app up on the app store, a simple game and far less impressive, it took two tries because of section three of the app review guidelines (related to marketing worth taking a look at). However, after it was in review it took three business days. Now I am the proud owner of an app with over 100 downloads. Please take a look - Thanks for your support! https://itunes.apple.com/us/app/box-five/id928681673?ls=1&amp;mt=8
That app is awesome, congrats! If you aren't monetizing it, could you post the code for it? I wanna learn how to build something like that. Great job!
That was also part of the learning, it took 10 days! - This website helps: http://appreviewtimes.com Btw, updates are much faster 1 to 2 days. 
The rest service is here https://github.com/adaofeliz/ip-lookup and I'm planning to share the code both in github and my blog blog.adaofeliz.com for the iOS app. I just need to first clean it up, as it has some bad code from learning and is connected to my apple developer account and I don't want it to leak for the internet :P
But do you have to declare them? I know that's taken from the swift programming guide but I'm fairly sure you can just go: var airports = [6: "Toronto Pearson", "DUB": "Dublin"] and that works fine why do you have to have a constant key type?
Just remove it from the code? lol. Instead of having your actual account info, just put something like "xxxxx" or "YourDevInfoHere" with comments to guide.
Use QuickTime Player. Make sure your simulator is the top-most window, then open QuickTime and go to File &gt; New Screen Recording. Click record and it will show you a floating alert saying "click to record whole screen or drag to record part of the screen." So just drag around the Simulator's screen and record. Hit stop when done (don't go over 30 seconds as that's the App Store Preview time allowed, or you could always edit after recording) and then Boom! Finished. Super-easy
That is way too complicated. See my answer on how to do it using QuickTime Player.
When I checked it said 9 days, so I guess I have another 4-5 to go!
And another thing: I found submitting the most challenging part for some reason. Apple's documentation was really not especially helpful. Took me longer to learn how to submit the app properly than it took to learn how to do any single other aspect of my app! 
Seems like 8-10 is the current ballpark. 
I need to clean the code and disconnect my account, what I'm intended to do is to start a new project and put it in github. 
Can you suggest one? - I found swift really easy and fun to code... I always was a backend engineer without html and css skills, now I feel that at least for iOS I can create the Ui layer!
https://parse.com/docs/ios_guide#users/iOS you can find most of that information in the Parse Documentation. You can change the code snippets between Obj-C and Swift in the bottom right of each example.
Thats a very cool app idea. Nice job.
var randomNumber = arc4random_uniform(17) textfield.text = "\(randomNumber)" course the random number might be 0 from that so maybe if randomNumber &gt; 0 { textfield.text = "\(randomNumber)" } ^^ put a \ infront of (randomNumber), not sure why reddit deletes it. not sure of a way to set the minimum random rumber 
/u/veracitymilk, did you ever come up with any swift solutions for this?
Exactly! 
and enable it once you press an operator key .
Check out the [Ray Wenderlich](http://www.raywenderlich.com/tutorials) iPhone tutorials. They have checklists for the apps the tutorials have you make and you can just go through them and figure them out yourself.
Just change arc4random_uniform(17) to arc4random_uniform(16) + 1 And as far as the \, it's really better to post code more than a line or two in a gist or pastebin and link it.
Don't ignore Microsoft Azure Mobile Services. I've not heard a bad thing from any competent developer I know of who has used it. http://azure.microsoft.com/en-us/services/mobile-services/
I've resorted to it, but probably because I was missing some finer point of for-in or because I couldn't think of a more elegant solution at the time. I felt dirty using it though.
It's for when iterating over the collection in some predetermined order is not what you need to do.
Thank you so much!
There are lots of ways you can poll and notify without having to do it yourself. Here's one way: You could set up a cron job that polls the remote service (makes a harmless call) and reports an error when the check fails. You could send yourself a text: http://osxdaily.com/2014/03/12/send-sms-text-message-from-command-line/. EDIT to answer the second question...In terms of a unit test or integration test in Xcode, you should have a test that simulates the various failures the remote service could have: cannot connect to it, call fails and returns a failure code, call fails and does not return, etc. Your app should be designed to handle such failures and your test cases should check that your app handles them the way you want it to.
Yea I agree. Swift is pretty fun. Hmm, not sure if you'd be up to try a game? Check out the App Store and scroll through different categories to check out what might interest you. 
Sounds like a bug if that works. It will infer type though. Maybe it infers AnyObject? Strange... 
In 5-10 years, the answer will be no. Until then, you need to learn Objective-C basics unless you want to be a major burden to everyone around you willing to answer tedious questions you could answer yourself by referencing the decades of Objective-C content available "out there." If you are going to develop for Apple platforms, even if you plan to only produce Swift code, you should learn Objective C and C. It's not even very hard. Every time you learn a new programming language, the next one gets easier to learn. There are far fewer differences in concepts across languages than there are similarities. So go ahead, focus on Swift, but, take a couple weekends out of your schedule to pick up the basics of using Objective C for Mac/iOS development, and learn the basics of C as well. That way when you try to figure out how to do something in Swift and you see no examples, you can fall back on Obj-C that you know exists because others have done the thing before.
Um. I can't see that iterating over a collection in an indeterminate order would be very useful. 😄
Well played. +1
How about this: // iterating by 3s for index in 0 ..&lt; 10 { var step = index * 3 } 
Ok. Do you have an example?
Build a small app that uses the Mapkit and you can: - share your location using the iOS share ability and you have a deep link for your app where after clicking the shared link it will open your position in the app - save your position to Coredata and then list them with a table view with a custom table view cell I believe that a app like this will help you practice some of the basics in swift :)
https://parse.com/plans
parse because it is acquired by facebook.. its not going anywhere anytime soon... you dont want a backend server where the hosting company shut door due to lack of funding...
This. Azure mobile services has a learning curve but carries an awesome amount of power. If your wanting an easy turn key solution though parse is the way to go.
Yea or aws, Google app engine(probably the most powerful and cheapest), heroku
This has been my experience also, learning to develop for iOS and OS X you are going to be hip deep in Objective c example code. If you can't at least read those example, you aren't going to get far. Even though much of the documentation is in swift, there is still a fair amount in ObjC as well. 
uhm i dont think apple is going to shut down their servers due to lack of funding anytime soon...
Look into the `stride(from:to:by:)` function, it's a more concise way to do this than "traditional" for loops.
Here you go.. it includes how to setup Amazon Cognito and how to upload images to S3 : http://shrikar.com/blog/2014/11/06/ios-app-development-upload-images-to-aws-s3/
Looks interesting, thanks for sharing
.psd is a photoshop format. You downloaded a bunch of photoshop templates. You'll have to open the .psd in photoshop and export the images you want in order to use them with your projects. From UIDesign's own description: &gt;*Photoshop required &gt;These are UI Interface Templates You will Need a Image Editor Like Photoshop to Edit Your Design with your own Content &gt;You can also use Corel Painter, Pixelmator, GIMP, Your Result May Vary [sic on capitalization &amp; punctuation]
I'm struggling to see where they are bed for the examples you cite. I use a singleton for location services because I need access to location information in most every view on my app and I haven't seen a great way to do this without spreading delegates all over my code when i need the same basic info all the time (namely where am I and how far away from locations). I haven't implemented s singleton for core data yet, but I'm tempted.
Thank you so much! I did some research and figured out how to save data to CloudKit but I have no idea how to retrieve the information as an int, strng or bool. Do you have any way to do so?
This is not really a Swift question, but a UIKit question. In any case, yes, as the `override` keyword indicates, `drawRect:` is a method from UIView that will get called when appropriate so that the view can draw itself in the current graphics context (which some drawing functions require to draw anything). You must not change the signature of `drawRect:` (i.e. don't include extra parameters there). What you can do is pass them as initializer arguments (for example, this is simplest) to your view, store them in a property, and access them from drawRect. I think you might have copied that error message you got incorrectly. It should say "does NOT override". That's because you added a `thickness` parameter that no initializer in UIView (your class' superclass) specifies. So you end up with a new initializer, but you still have the `override` keyword in there, although it overrides nothing. So just remove `override`. HTH.
thanks, I took that approach and succeeded in adding a function to set the variables then call setNeedsDisplay() to redraw. It works just fine, but I'll guess I do need to dive in the documentation some more to get my head around it, as I don't really understand it yet. 
You could do it that when it is hit the health bar image changes. You can have a set of images and each time it is hit change the image to the correct one. Or you could create a create two rectangles one white and other red. The white one will be at the back and the red one at front and everytime it is hit make the red shape smaller by -5
If you're looking to learn more about UX in general this is a pretty good course [SlideRule – User Experience Design](https://www.mysliderule.com/learning-paths/user-experience-design)
I never have tried it, but I believe that you have a good use case for cloud kit from apple: https://developer.apple.com/icloud/documentation/cloudkit-storage/ The good part is that you don't really have to pay anything, it's nice to remove the servers costs from the equation! Give it a try! You will be able to find many tutorials in the web and from what I saw the integration is quite easy and similar to CoreData. Good luck!
For keeping the user logged in you can you Coredata, it's a local database very easy to use! You can store your login data there with a expire date that you check when you user opens the app!
The 'swipe left to continue' menu in particular. Each 'cell' (not sure if this is the correct terminology) reveals a different view.
That's odd, when I simulate my location as London on an iPhone 5 it seems to work correctly (even though this isn't a typical use case). 
Check this out - it describes how to do this type of interactive transitions between controllers: http://www.objc.io/issue-5/view-controller-transitions.html
Can't be `AnyObject`, as dictionary keys need to be `Hashable`. I just checked, in OP's case Swift infers the type of the dictionary to be `[NSObject: String]`.
It infers `NSObject`. Can't be `AnyObject`, because that doesn't conform to `Hashable`.
Ok cool. Ill definitely continue reading it.
[Here](http://www.codingexplorer.com/segue-swift-view-controllers/) is a link to help you out! 
Thank you so much, this is very helpful and a really good way of doing it. I can't believe I didn't think of it.
Ahh, I'm how to detect keypress would be helpful too
Check out the swift tutorials for "todo list apps" on youtube - they all have exactly the details you need
That makes sense. Thanks. 
When you remove the row from the table view make sure that you also remove the item from the underlying data source. 
So if I use and NSUserDefaults and an NSMutableArray to store the data, how would I go about removing the information? ive tried: itemArray.removeObjectAtIndex(indexPath.row) but that doesn't do anything except give me this error: &gt;'NSInternalInconsistencyException', reason: '-[__NSCFArray removeObjectAtIndex:]: mutating method sent to immutable object
Do the image names show up on the dashboard? Can I upload them directly to Parse or do I have to upload them via the app? Can you please describe the process to upload images using PFFile? Thanks. 
But if I want a database of around 400 images and text files how would I do that using Parse? It wouldn't make much sense to use my app to upload that much data. 
There are a few ways to handle this. You are basically moving you finger (or mouse in simulator) faster than the refresh of the screen (60 fps). I'm on phone so I'll only mention one. You could add a bool to the object you are dragging. Call it something like isDragging. Then on touchesBegan just set it to true. In the update method write some code that updates the position of the node if isDragging is set to true. This means the node will move anywhere once it catches up to your finger. Then simple set it to no on touchesEnded. Sorry for the rambling. I'll try and post some example code when I get home.
I am extremely new and would love to know how I can simply hook up the pre-roll video code you provided to initiate by pressing a button. It seems as though I have a SIG ABRT error which I know is caused by incorrect connections between buttons/view controllers. Thank you for any replies! 
Awesome, I think what you described would work perfectly. I'll Try implementing it when I get home and I'll update on whether it solves the issue or not. Thanks!
I'm looking for something like this too so hit me up if you find anything!
If you are storing an array in user defaults, it will be copied, which results in a mutable array becoming an array. If you want to modify the array you need to pull it from defaults, make a mutable copy, modify the array, and store back in defaults 
I'm also interested in this
Hopefully this helps. [Here]( https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;ei=Xg_HVPjVAs2hyATDioCoDQ&amp;url=http://www.raywenderlich.com/78568/create-slide-out-navigation-panel-swift&amp;ved=0CBwQFjAA&amp;usg=AFQjCNGKXHWkLQ8QpbDbLNuQ-acujifDFQ&amp;sig2=N72Ew8XqfEliyvZ1y5erUw)
Looks like you forgot to add iAd framework in the build settings
This isn't an answer to your question, and for that I apologize. But you should know that [Apple strongly recommends against the slide-out menu for navigation](http://blog.manbolo.com/2014/06/30/apple-on-hamburger-menus) Instead, use a tab bar and limit the complexity of each section.
There are two ways to accomplish something like this. Either you scrape the HTML of the website (roundabout, but might be the only option) or if the website has a publicly available web API, implement that.
But it shouldn't return 3.... Because when the app crashes and then opens again, it only shows 2, meaning that the data from the row I deleted was actually deleted.. 
Put a breakpoint or a println in the method that returns the number of rows, because it gets called, and it returns 3 even though it should be 2. There's something you're doing wrong. Maybe post the code of that method? Also, you may have to call synchronize on the NSUserDefaults, so the changed values actually get written to disk immediately. It seems a little bit like you're abusing NSUserDefauls anyway though, what exactly are you storing?
Here are two: http://www.h4labs.com/dev/ios/swift.html?q=slide&amp;age=10000
Ok, let's see what happens: In viewDidAppear you get a copy of of the "Payments" user default. You stop it in your property "paymentsList", which now contains three items. Then, in your "delete" method, you get the payments array from the user defaults a second time (why? you already have in in the paymentsList), and remove the item from that new copy, and store it back to the user defaults. Now, the user defaults stores 2 items, but your payments list still contains 3 items. When the table view asks for the number of rows, it of course returns 3, because paymentList.count is 3. You never removed an item from that list. Then you call deleteRowsAtIndexPaths with the comment "Delete the row from the data source". This does nothing like this. It deletes a row from the table view, not the data source. Your table view controller is the data source, you have to do that yourself, you can't ask the table view to do it. It doesn't know your implementation of tableView(:numberOfRowsInSection). Instead, you somehow have to make your controller return one less for the tableView(:numberOfRowsInSection:) method - maybe by removing the item from the paymentList array. In fact, that deleteRowAtIndexPath call will make the table view delete a second row (one was deleted because of some UI action, and now a second one because you tell it to). You don't want that. Then you call reload data, which doesn't do anything, because the data source of the table view didn't change in any way (also, your state is already inconsistent, so you don't get that far). Suggestion 1. Access NSUserDefaults only when your controller appears/disappears (i.e. viewDidAppear and viewDidDisappear). Store your items in the paymentsList, and modify that array when deleting items. When your controller is "done", write the array back to the user defaults. Suggestion 2. As I thought, you're abusing NSUserDefaults pretty hard here. NSUserDefaults are for "user defaults" primarily, not for payment information. I'd recommend you have a look into core data for storing data like that.
You can absolutely upload images to Parse. Alternatives: * is Google App Engine Cloud Service, you can implement your API very easy in python or java. They Image hosting API have neat way to resize images if you need in different sizes. * Amazon S3 service, they have iOS SDK, but I never work with it. * make your own. hehe. Image hosting is not hard. 
In all fairness, OP never said it was for navigation. I have an app that has a "hamburger menu" that comes in from the left side that will do certain things. Some show a different VC, some trigger an action sheet, etc. The reason that a hamburger menu makes sense in that context is that these items definitely should not be there all the time like a tab bar commonly is. There is simply no reason to take up that screen space with a tab bar for items that the user doesn't always need access to.
Sometimes with Swift, Xcode doesn't print a very nice description of things. The thing you call "error" might be what you want, it just isn't formatted very well. Have you tried printing it? Also, cast it to NSDictionary and try to access some values. Also, it might be a good idea to model your data a bit more explicitly, instead of just bunching it into a dictionary? But I guess you're not interested in that anymore; probably you see yourself that this isn't the greatest idea...
Ok thanks for the suggestions. I simply would like to go into Parse and upload a bunch of images without having to do it via the app. I am not sure if that's even possible because Parse only accepts JSON and CSV files. I will probably take a look at CloudKit first because they have a direct image upload feature on their dashboard by using assets. 
It isn't technically for navigation, it's to chose what list a user wants to view, any reply is appreciated though, so thank you!
Thank you!
Already watched the first lecture. So far I like it, thanks!
Change the segue type to Modal. Use a bar button and set it to Custom. Then you change adjust it as you like. To code it to work like a back button use this: dismissCurrentViewController(true, nil)
Ok Thanks a lot. Also found this in case anyone else is interested. http://mathewsanders.com/animated-transitions-in-swift/
I was so determined a few hours ago, then I noticed that there are prerequisites. Like programming, graphics, etc. Then I remembered how much of a failure I am in life. And ate some fried chicken. 
Here is a tutorial that shows the technique /u/hartt suggested. A boolean is set and if that boolean is true then the paddle always moves to the current finger position. Just thought you might want to see some sample code. http://www.raywenderlich.com/84341/create-breakout-game-sprite-kit-swift
You could also use some help with punctuation and sentence structure.
You can customize the back button by using the appearance proxy. For example to set a custom image: var myImage = UIImage(named: "back_button_image"); UIBarButtonItem.appearance().setBackButtonBackgroundImage(myImage, forState: .Normal, barMetrics: .Default); There are multiple other properties you can adjust using the appearance proxy as well. Look into [UIAppearance](http://nshipster.com/uiappearance/) to learn more. Also keep in mind this doesn't really have a lot to do with swift- it's a question about the iOS frameworks. So when you're searching for answers don't include "swift" in your query or look on swift boards and you'll find a lot more results.
what do you think is a better approach? create my own navigation bar? or customize the navigation controller? i have 4 views, an initial, then a detail, then one more detail. does it matter if you use present modally and create your own, or if you use a embedded navigation controller?
When you use the appearance proxy to customize something it will affect every instance of that item when it appears in the app. You could set a color / background image for the navigation bar and the navigation items and it'll "just work" all throughout the app. This is great for multiple themes / making changes all throughout the application from one bit of code. You can even add criteria for items to get a style only when contained in other items. Read up on the appearance proxy and it will make more sense! Sometimes combining the appearance proxy with subclasses can be helpful as well, but I don't think that will be needed in your case.
Make sure that the c files belong to a target so they get compiled. Beyond that, post actual linker errors.
I am having trouble with the CloudKit framework. I have these outlets: @IBOutlet weak var theText: UITextView! @IBOutlet weak var theImage: UIImageView! In my CloudKit record, I have two assets, a text file and an image. I want to be able to replace UITextView and UIImageView with the assets in my record. I am not sure how to do this. 
Only a few lectures are posted so far but this will be very solid course (probably the best iOS development course in the world). There are plenty of iOS development tutorials out there but they are often really fast and loose with fundamentals and they glaze over details to get you through building an app. If previous courses were any indication this is going to leave you with a very good foundational understanding of the language, patterns and philosophies behind the patterns in building these apps. 
This is the code for the managedObjectContext found in the AppDelegate. It is indeed a lazy var, like you thought, but since apple supplies the code for the AppDelegate, how is it that I still get an error? lazy var managedObjectContext: NSManagedObjectContext? = { // Returns the managed object context for the application (which is already bound to the persistent store coordinator for the application.) This property is optional since there are legitimate error conditions that could cause the creation of the context to fail. let coordinator = self.persistentStoreCoordinator if coordinator == nil { return nil } var managedObjectContext = NSManagedObjectContext() managedObjectContext.persistentStoreCoordinator = coordinator return managedObjectContext }() and this is the coordinator function that it refers too if that helps at all (also found in AppDelegate) lazy var persistentStoreCoordinator: NSPersistentStoreCoordinator? = { // The persistent store coordinator for the application. This implementation creates and return a coordinator, having added the store for the application to it. This property is optional since there are legitimate error conditions that could cause the creation of the store to fail. // Create the coordinator and store var coordinator: NSPersistentStoreCoordinator? = NSPersistentStoreCoordinator(managedObjectModel: self.managedObjectModel) let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent("Test.sqlite") var error: NSError? = nil var failureReason = "There was an error creating or loading the application's saved data." if coordinator!.addPersistentStoreWithType(NSSQLiteStoreType, configuration: nil, URL: url, options: nil, error: &amp;error) == nil { coordinator = nil // Report any error we got. var dict = [String: AnyObject]() dict[NSLocalizedDescriptionKey] = "Failed to initialize the application's saved data" dict[NSLocalizedFailureReasonErrorKey] = failureReason dict[NSUnderlyingErrorKey] = error error = NSError(domain: "YOUR_ERROR_DOMAIN", code: 9999, userInfo: dict) // Replace this with code to handle the error appropriately. // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development. NSLog("Unresolved error \(error), \(error!.userInfo)") abort() } return coordinator }()
Hire this person now.
Related: If someone could point me in a direction for calling all records from a CloudKit table, a la SELECT * FROM someTable, I think I could figure it out from there. 
At least you have chicken.
First of all, a post asking this much in such a vague manner is not going to be easy to answer and will probably not lead you to a lot of useful information. Try taking this project a little bit at a time and then post more specific questions about the chunk you're working on. A good place to start would be to layout the basic elements for your app. You'll probably run into some trouble there and realize that you have questions about how to best use storyboard. [This](http://www.raywenderlich.com/81879/storyboards-tutorial-swift-part-1) is a pretty solid tutorial to get started on. Next, since you'll be dealing with a user database, you're going to have to consider your options in terms of implementing that. As of now, some popular options include: Parse, Cloudkit, Azure Each of these have advantages and disadvantages that you can read about. Just these two aspects of your prospective app will lead to a lot of questions and when you reach those questions, research all you can in order to ask a specific, well-formulated question and you'll undoubtedly receive an answer here when you post it. Best of luck.
If you know absolutely nothing about programming and/or art/design - this course (online ebook with video tutorials) is the best resource I've found to get off the ground for iOS development with Swift. Currently on sale for $50 - https://designcode.io/
You're not printing out an error, you're printing a [NSEntityDescription](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/CoreDataFramework/Classes/NSEntityDescription_Class/). Try changing println(entity) to println(newPayment)
Unfortunately, that results in nothing being printed out. I guess the only reason for this would be to know if the textField data is being saved into the Core Data Object. Is there another way of seeing that without having to fetch the results?
We are releasing an alpha at the end of the month. Seems like the adoption rate isn't good enough yet. Would be really nice to take advantage of UIVisualEffectView and UIVibrancyEffect. oh well!
Let me preface this by saying that I loved the iOS7/Objective-C version of these videos, and I'm certain that the Swift update will be fantastic. But I want to let anyone new to Swift know that he's using an old notation to declare arrays, and probably dictionaries. Apple updated the specification and deprecated the old style around in late Beta. It could be that he already had slides and lecture notes ready to go and didn't have time to update after the change, but either way you should be aware. For arrays: var intArray = Array&lt;Int&gt;() // Old style var intArray = [Int]() // New style Likewise dictionaries should be: var someDict = Dictionary&lt;String: Int&gt;() // Old Style var someDict = [String : Int]() // New Style
[Image](http://imgs.xkcd.com/comics/wisdom_of_the_ancients.png) **Title:** Wisdom of the Ancients **Title-text:** All long help threads should have a sticky globally-editable post at the top saying 'DEAR PEOPLE FROM THE FUTURE: Here's what we've figured out so far ...' [Comic Explanation](http://www.explainxkcd.com/wiki/index.php/979#Explanation) **Stats:** This comic has been referenced 500 times, representing 1.0064% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_co44s0v)
I think that optional thing is very complicated but the instructor is very good at teaching. He explains that like we're five years old.
thanks, this really helped!
The problem with the AssetsLibrary framework is that not that many people need to access it. For many applications, UIImagePickerController is enough - maybe that suffices for your application, too? In general, the framework is not too difficult to grasp though, the only thing that might be tricky is all those closures that are used. Basically, you create a library, then you enumerate the groups in that library, then you enumerate the assets in the groups. Each asset represents a picture (or video). 
Thank you for the 'po 0x7f9d614a8460' suggestion. It seems I also needed to import XEP-85 into my project. The error wasn't initially showing up. It wasn't until I dug more into the debugger. Anyways, I do kind of wish there was more projects involving XMPPFramework and Swift. Well aside from the SwiftXMPP :P
My AppDelegate wasn't referring to the CoreData model in the following lines: let modelURL = NSBundle.mainBundle().URLForResource("Payments", withExtension: "momd")! and let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent("Payments.sqlite") instead of saying "Payments" and "Payments.sqlite" it said "Random" and "Random.sqlite" because I had made another project called "Random" and added the CoreData model halfway through the project. I was getting frustrated so I just started over making it so that the AppDelegate was created from the start with the right code instead of being copied over from another project.
JENNNNNNNNNNNNNNNNNNNNKINSSSSSSSSSSSSSSSSSSSSSSSS
Hey thanks for this. I still see the old style around every now and then and it always does confuse me.
I'm currently using Azure but I'm using it for a website I have as opposed to an app. I have yet to use any of these service but I asked about this a while ago in [this thread](http://www.reddit.com/r/swift/comments/2tfs9a/cloudkit_vs_parse/) if you want to take a look at what people said.
Sure thing! If you have questions as the course progresses, feel free to ask.
the link should work now. 
You want to set the barTintColor instead of the backgroundColor of the UINavigationBar self.navigationBar.barTintColor = UIColor.orangeColor() 
same thing that /u/CleverError said! Thanks for the tip!
Could you post the crash log? Those calls should be equivalent. Also why use openFile:withApplication: instead of just openFile:? I have Photoshop CC 2014 installed and this code wouldn't work for me. openFile: would work just fine.
Ahh, thank you. Like a lot of stuff I've read so far in the Swift manual, I forgot about that one. 
This doesn't really help me, but thanks for the input. I am trying to make the timer run without resetting the whole View.
Btw, here's how to do this "properly": lazy var numberFormatter: NSNumberFormatter = { let formatter = NSNumberFormatter() formatter.numberStyle = .DecimalStyle return formatter }() This makes sure that the number formatter is only generated when it's actually accessed (through the lazy keyword), and also ensures it's only created once by actually storing the value.
You could run it in a thread. It would be separate from the main loop and could be reset when necessary. 
Absolutely. Just as readable, uncountably better for your iPhone.
UIImageView has a property called `image` that's expecting a UIImage object, so assuming the outlets are connected in your IB/Storyboard, something like this is what you're after: @IBOutlet var imagEditView : UIImageView imagEditView.image = UIImage(named: "unPortrait@2x.png") // var portraitBg = "unPortrait@2x.png" //broken + override func viewDidLoad() { super.viewDidLoad() self.loadInterface() if self.interfaceOrientation.isLandscape { imagEditView.image = UIImage(named: "chuckN.png") } else if self.interfaceOrientation.isPortrait { imagEditView.image = UIImage(named: "bruceL.png") } ... }
It's good that people are giving the language a workout. But Swift is the bleeding edge of iOS development. You have to expect to bleed a little. Absent or incorrect documentation is par for the course in something this new. You could always stick with ObjC and wait for Swift to mature. 
I can agree with a lot of the sentiment expressed in this article. I also find myself in this strange love/hate vortex with Swift. There are many times when I am typing away in Obj-C, and nesting blocks into blocks that I consider using Swift. And then I create a new swift file, and SourceKit begins to lose it's mind. Or when I thought it would be fun to code a simple game in SpriteKit/Swift, and there's no vector SIMD support. I really want to be with Swift, but it just got out of a long term relationship and it's just not ready for me yet.
If you can afford the book, the [iOS 8 Swift Programming Cookbook](http://smile.amazon.com/gp/product/1491908696/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;psc=1) has an excellent section on this. It shows how to use NSURLSession as well as NSURLConnection.
let queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0) dispatch_async(queue) { useTimerforReset(timer); } I would read up on dispatch a bit to understand it better but it is pretty simple. 
The only thing that immediately worries me upon seeing this reference is that Swift is currently changing rapidly, and i'm curious as to whether or not the cookbook will survive those changes. Some of the reviews i'm seeing appear to support my fears.
Well I wouldn't expect any radical changes at this point. Plus, the underlying framework calls would still be the same. It depends on how much your time is worth. 
Take a look here: https://github.com/AlwaysRightInstitute/SwiftSockets This project is a socket library and it seems to be really easy to integrate!
After creating your User class, all you need to do is create a User property on each view controller in the create account flow. Right before you prepareForSegue or push to the next view controller, set the User property of the next view controller to be the same instance from the previous view controller. 
I was hoping to do it manually, as this is very easy in languages like Java and Python. However, after reading koalefant's reply I'll probably pursue a library like the one you linked. Thanks!
I was trying to use Bluetooth Low Energy, but after spending months on that I decided to switch to sockets. Hopefully this doesn't end up just being another time drain.
Great answer, I'll play around with this and if I can solve it I'll add the solution to my question above
They're definitely more mature then they were, but you have to remember that it is still a relatively new language. Raywenderlich is great, as are several udemy tutorials, sososwift and there is lots of help to be found on stackoverflow. Sure some of the content is outdated relative to the most recent version of xcode, but the underlying concepts are mostly sill the same. 
Look at line 32, and note how it's different from line 47. 
Have you already gone through Apple's two free books in the iBookstore? Those are both kept reasonably up-to-date. I also second the recommendation for Ray Wenderlich's tutorial books...they are also updated when changes are made (updates are free).
If you need any inspiration, check out [UX Archive](http://uxarchive.com/tasks/onboarding) to see how others apps handle that task.
I don't know of a way to do it locally but Embedly offers a service called [Extract](http://embed.ly/extract) that does this.
Don't be so dependant on that these resources, just build something and learn that way. That's always the best way
To be more direct than void, on line 47 you are trying to grab the name property on the table, rather than on a Pokemon object within the table.
do you know if OP is diong this on Xcode? if so, how did he get the black/night mode on it?
Preferences &gt; Fonts &amp; Colors &gt; Dusk
It would let me make my own operator
oh nice, what does each bit do?
i will thanks :)
collisionBitMask tells the engine that this physicsBody should be affected by collisions with whatever the mask is set to. If you don't want to be automatically affected by the collision then set that to 0. collisionTestBitMask tells the engine what collisions you want to be notified about. Then you can handle the collision any way you want and allow the entities to overlap as you see fit. If you already have tried collisionBitMask = 0 then please provide more information about what's happening, because I don't think they should bounce off each other if neither physicsBody has the other collider in its bitmask.
All you need to do is set the collisionBitMask to allZeroes, because collisions cause the bouncing behavior you're seeing.
That should work. I have a game where things fall due to physicsWorld gravity from the top of the screen. The player is in a ship with dynamic = false so it doesn't fall off the bottom of the screen. When the player's ship dies, I set dynamic = true on it so that it finally does fall down off the screen at which point I show "Game Over". It works fine. The same should work with just affectedByGravity or you could use dynamic depending on whether you want the boxes to experience other forces (for example if you want them to collide with each other when falling, you might set dynamic = true and set a collisionBitMask = Crate)
That would be nice. I'm so sick of seeing "should I start with swift or objective C??!" threads all the time 
Or how to use SpriteKit, or any framework really. Basically I want a place for discussion where people are already programmers and are interested in Swift news, advanced features, comparisons with other languages, third-party ports, performance, third-party libraries, etc. I suggest /r/swiftlang or /r/appleswift but I don't want to be a mod (did that for a large Mac forum and don't want to have that responsibility again).
I don't see anywhere near enough traffic in /r/swift to warrant making this distinction yet. There aren't quality advanced topics coming in daily. Good posts are not being buried beneath fluff. Experienced programmers aren't chatting about swift internals. Yes there are a lot of beginner questions, but I don't see them getting in the way of anything. If people want more quality content then they need to post it. I'm here daily upvoting anything of interest. This sub has only 8k subscribers right now. I only see 8 posts that have a submit time of less than "1 day ago". I am not opposed to your proposed direction for this sub, but it just feels a bit premature to be overmoderating.
I agree completely. Most of us at the office are constantly laughing at the "How do I make a table view __in swift__" posts on reddit / StackOverflow / etc. If you want to learn iOS programming, check out /r/iOSProgramming. This subreddit should be more geared towards learning swift, not Cocoa. I'd like to know more about functional programming, swift design patterns, etc. I can see things like "What's a good way to model your data for usage in a UITableView in swift?" or "What's a good way to make an API layer on NSURLSession using swift" being good /r/Swift posts. But general "How do I app in swift" questions shouldn't belong here. EDIT: I'm not trying to call out the poster of this thread but this is a perfect example: http://www.reddit.com/r/swift/comments/2ug4do/when_to_add_subviews_to_my_custom_table_view/ What does this have to do with swift at all? He'd see *tons* of answers on Stack'O / reddit / various blogs if he searched generically and didn't worry about swift. "Translating" ObjC to swift is cake.
Hi, SceneKit can be pretty hard if you haven't done anything like it before. I would start learning Spritekit. It is very similar to scene kit but just 2d instead of 3d. It will teach you the basics of nodes, physics, and actions. Scenekit will be so much easier once you have learned it. I know this from personal experience. This tutorial for Scnekit does not go over code but shows the basic fundamentals https://www.youtube.com/watch?v=PTYhGoYvwRQ&amp;spfreload=10
Or even findNeedle("test", inHayStack:objects) which I think is what Apple tends towards.
I agree, screwing up is the best way to learn. 
On /r/iosprogramming we saw something similar last year. My solution was to write a [massive FAQ](https://github.com/programmingthomas/faq) that includes a lot of standard questions (Should I learn Swift or Objective-C first? Do I need a Mac? Will Apple allow this app?). Having such an extensive FAQ (significantly larger than the [Swift one](http://www.reddit.com/r/swift/wiki/faqs)) does seem to have reduced the number of 'noob' questions. Another huge chunk of questions are in the form 'I've got this tutorial in Objective-C... how do I do this in Swift?' and to cover these I've written a bunch of [equivalent code snippets](https://github.com/programmingthomas/equivalent). This is linked to from the FAQ and I often link it in threads with similar titles. If anyone has additional contributions for the either the FAQ or equivalent code snippets please open an issue or a pull request; I'm always happy to receive new contributions.
&gt; However, it requires me to write ... Actually, strictly speaking, the thing you're expecting is the default for functions, but it's a method you're calling. Those follow a different naming scheme. Also, this is only the default, you can choose if you want to use parameter names or not yourself. IMHO, having parameter names is excellent for readability in many cases. You can see what a parameter is for without looking at the method declaration. For example `NSURL("somePath", true)` vs. `NSURL(fileURLWithPath: "somePath", isDirectory: true)` - the second one is just way clearer.
Because at init the delegate isn't set, and the delegate provides my views. I suppose I could do it on setting the delegate. I will try that and report back. EDIT: I feel like I need to clarify my exact issue. If I have a standard NSView with drawRect obviously it gets called as soon as the content is visible, and I know exactly where to draw from the dirtyRect. I'm looking for the equivalent for adding subviews, that's essentially what I'm asking for. I know that drawRect isn't the place for that. If I add them straight away I run into a problem which is, what if the scroll view has been programmatically set to be half way down or something like that, I won't know which rows or columns out of my 300 or so to add. I'm not going to add all of them because that's the entire reason behind this. Not only this but if I do start at the top, how many do I add? How do I know it will completely fill the vertical space? EDIT: I've solved it for the time being but it still doesn't seem totally clean. I'm looking at the scroll view clip view's bounds from the viewWillDraw and adding subviews depending on that. VisibleRect was always giving me {0, 0, 0, 0} which was my problem, I guess because it hadn't quite shown up yet? I have no idea. 
"t is a step by step tutorial for creating a hot &amp; happening app like Whatsapp. Executing the steps inside will instantly make you a PRO mobile app developer." Yeah, sure. 
You can have several methods or functions with the same type parameters inside of one class. To differentiate what exactly method should be called you need to use parameter with names. It can be changed by function definition, but only if own code, so not everywhere. To indicate that you don't want to force to use parameter name in function call use special # sign to enable shorthand call: func multiply(factor1:Int, #factor2:Int) -&gt; Int{ return factor1 * factor2 } More information is [available in this answer on SO](http://stackoverflow.com/q/24045890/85739). And full official documentation on [Apple Developer Library site](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID168)
If you don't mind dropping a few bucks, check out http://www.scenekitbook.com, I just got it today, so I've only had time to skim it, but it looks really useful so far.
I will watch them !
I implemented an accessory view for the search keyboard to add number keys and a few special characters. I could not figure out how to call inserttext() or get the cursor position. 
I used this library in a recent swift project, and I love it: https://github.com/0xced/XCDYouTubeKit It's not written in swift, but you can just use a bridging header. Find instructions on doing that here: https://www.firebase.com/docs/ios/quickstart.html Just search for the phrase "setup a bridging header". Then #import &lt;XCDYouTubeKit/XCDYouTubeKit.h&gt;
Swift is still evolving. I'm halfway through Udemy's: The Complete iOS8 and Swift Course: Learn by Building 15 Real World Apps While Swift has changed since the videos were done, the class discussion group has solutions for all the changes to get the code working. I'm finding too, that often your best bet is to follow Xcode's suggestions for functions, rather than typing the functions from the video.
New episode just went up: http://youtu.be/KKH0xWjw2ps
&gt;[**Making Hearthmate 0x02 - MVVM, CoreData and Arena List [37:31]**](http://youtu.be/KKH0xWjw2ps) &gt;&gt;In this video, we discuss MVVM, how it works with Core Data, and connect a table view properly with Core Data. &gt; [*^Hearthmate ^App*](https://www.youtube.com/channel/UC0dhjw0vLbyqxdnZjihVKwQ) ^in ^Science ^&amp; ^Technology &gt;*^0 ^views ^since ^Feb ^2015* [^bot ^info](http://www.reddit.com/r/youtubefactsbot/wiki/index)
What if someone doesn't have keychain set up?
It's entirely an API that your app uses. There's no UI, your app just uses it. There's no UI for the user to stop you. There's nothing for the user to set up.
I think in this case the "thunk" may refer to a delayed computation. It's basically wrapping a function in an empty function so that it can be evaluated lazily which does make sense given OP's context of threading. The fact that "partial application" is used in the trace snippet below is evidence of this. libswiftFoundation.dylib`partial apply forwarder for reabstraction thunk helper from @callee_owned (@unowned Swift.CVaListPointer) -&gt; (@unowned ()) to @callee_owned (@unowned Swift.CVaListPointer) -&gt; (@out ())
Particularly if it's an autoclosure, that would definitely qualify in the classic sense of a "thunk." That seems to be the primary use of autoclosures in the standard library, getting around the language limitation for things like optionally evaluated parameters in logging calls or some such thing.
Every value of function type (including functions, methods, closures, etc) has a canonical representation with a specific calling convention. Abstraction thunks are used when a caller needs a different representation or calling convention for that value. There are lots of things that can cause this. For example, Objective-C passes self as a +0 value, but swift currently passes it as +1 (something we intend to change at some point), so the abstraction thunk adjusts the refcount. In a generic context, the default compilation of an unoptimized generic can work with arbitrary types, and arbitrary types have multiple levels of abstraction possible. There are several other cases that can generate these as well in more or less obscure cases. That said, the most common reason you'd see them in a stack trace is the self adjustment. -Chris 
anybody have any thoughts?
Always nice to get an authoritative answer. Thanks for the clarification.
If you want one step of movement per tap, this should do what you're looking for. If you want to do continuous motion on hold, you'll need to look into Gesture Recognizers override func touchesBegan(touches: NSSet, withEvent event: UIEvent) { var speed:CGFloat = 10.0 for touch: AnyObject in touches { let location = touch.locationInNode(self) if location.x &lt; CGRectGetMidX(self.frame) { myNode.position.x -= speed } else { // location.x &gt;= X Midpoint myNode.position.x += speed } } } 
Thank you so much......Im going to look into Gesture Recognizer also. 
Graphics look really good! Nice job!
Shrikar is pretty much my own personal savior. Excellent stuff, as always
I don't what api you're accessing the web api with, but check the documentation on it. Usually there is some sort of callback that is called when a chunk of the data is received.
Sorry, I am using Alamofire. I will see what I can find. Edit: And thanks!
No open source? :)
I just voted this down, because I'm a cheeky sod :)
Thanks! Just got it working after rebuilding a big chunk of my project.
Congrats! Looks cool. Do you have a trailer or video? I can't download it to my phone right now.
This is really cool :) I want to make a neat little game like this one day!
Nice! How long have you been developing for iOS?
Yep subclassing UISearchBar to fudge the inputAccessoryView is what I'm doing. But setting the text is not good enough. Pretty much any keyboard button I wanna implement needs the cursor position or at least I can reassemble the string with the new character.
Thanks for helping though. The valueForKey() way is what I overlooked. Will try.
Thanks for the kind words, really appreciate that.. I would also be very grateful if you could also share the blog with your friends or on twitter
A physical one? [Apple has documentation](https://developer.apple.com/library/mac/documentation/ServicesDiscovery/Conceptual/GameControllerPG/Introduction/Introduction.html).
This thread has been linked to from elsewhere on reddit. - [/r/mistyfront] [Build an app every month february edition (/r/swift)](http://np.reddit.com/r/mistyfront/comments/2ut4c0/build_an_app_every_month_february_edition_rswift/) *^If ^you ^follow ^any ^of ^the ^above ^links, ^respect ^the ^rules ^of ^reddit ^and ^don't ^vote ^or ^comment. ^Questions? ^Abuse? [^Message ^me ^here.](http://www.reddit.com/message/compose?to=%2Fr%2Fmeta_bot_mailbag)* 
I don't sorry :(
Yeah the box for where you need to click isn't in the center of the X on the shop screen. It's more to the upper right. Couldn't get that to work properly.
That appears to be about collision dynamics. Wrong link?
Wrote one in Codea if you're interested. It's not Swift or Cocoa obviously but the language is similar and might give you a hint where to go with the logic and the trig. 
That interesting, because when I looked up on google "modify core data swift" most of the links talked about batch updates and how it was so much better than the old method and what not. The code you supplied works wonder! Thank you very much!
That sounds like exactly what you need to do. :) You can't hurry the network, but you can make the user wait on a loading spinner.
I've tried doing that, but it gives me the error UIStoryboard? does not have a member named 'instantiateViewControllerWithIdentifier' if I put that code within the function, or ViewController.Type does not have a member named 'storyboard' if I put it outside of the function.
Thanks, but I don't see how I can use that to load the view referenced in "YourViewControllerIdentifier" as a subview of the containerView, nor how to change the "YourViewControllerIdentifier" depending on which case calls it. (I'm new to Swift/iOS programming as a whole. I've tried looking at every option, plus Obj-C code online to try and translate into Swift, but I can't find anything relevant!)
I'll be sure to check that out. Is it safe to assume that using an skscene would be more resource intensive/battery draining than CAEmitterLayer?
OK, so that sleep stuff is a horrible idea, and doesn't work. What I've found that does work is this function (from stackoverflow: http://stackoverflow.com/questions/24034544/dispatch-after-gcd-in-swift/24318861#24318861) func delay(delay:Double, closure:()-&gt;()) { dispatch_after( dispatch_time( DISPATCH_TIME_NOW, Int64(delay * Double(NSEC_PER_SEC)) ), dispatch_get_main_queue(), closure) } and then I code my functions like this: delay(0.5) { doSomeAnimations() } delay(1.0) { doSomeMoreAnimations() } delay(1.5) { doEvenMoreAnimations() } It seems to work, but is hella lame. Is this the correct way to do this?
Same error :(
Yeah I thought it was funny but I think its more of a *programming* style calculator (something I'm not too familiar with). Also, out of curiosity, is anyone doing the homework assignments? I'm trying to implement the Pi operator/operand but I think I'm missing something. I'm also trying to join the irc channel but it never connects...
They're all using Core Animation underneath. There shouldn't be a difference, at least not more than a negligible one.
It would be a good idea to show some code.
You should look into recording a trailer. In iOS 8 with Yosemite you can record straight from your phone. The App Store will allow that to be the first thing that shows up before your screenshots when people pull up your app in the store.
I'm skeptical as well lol. I'm thinking that maybe we will integrate the **Enter** part into the **appendDigit** at a later time? Idk lol
Yeah... you aren't the first to "compliment" me on that. Thanks! I'm going to upload a license soon - it'll be MIT Edit: https://github.com/hawkfalcon/SpaceEvaders/blob/master/license.txt
I don't blame you. It's hard to test in mobile apps. I'm working on a Swift app right now and my tests are identical to yours. I hope to change that soon, it's just a whole other beast than web apps.
Have you tried runAction:completion? Then put another runAction:completion in the first one's completion block. Chain as far as you want. More generally it sounds like you want a class that implements a queue. Actions get appended to the end of the queue and when one finishes the next one is popped off and run with a completion block to notify the queue manager when to run the next one..
I'm enrolling this course too, but don't complete assignment yet :p
Why not something like this then? let actions : [SKAction] = [ SKAction.sequence([SKAction.waitForDuration(0.5), SKAction.runBlock(tutorial1)]), SKAction.sequence([SKAction.waitForDuration(1.5), SKAction.runBlock(tutorial2)]), SKAction.sequence([SKAction.waitForDuration(3.0), SKAction.runBlock(tutorial3)]), SKAction.sequence([SKAction.waitForDuration(1.5), SKAction.runBlock(tutorial4)]), SKAction.sequence([SKAction.waitForDuration(2.5), SKAction.runBlock(tutorial5)]), SKAction.sequence([SKAction.waitForDuration(0.5), SKAction.runBlock(tutorial6)]), ] self.runAction(SKAction.sequence(actions)) 
Let me know when you give it a try! I will try to help you as well.
was this your post? hopefully answered.. http://stackoverflow.com/questions/28012944/when-adding-a-search-bar-and-search-display-controller-to-a-complex-tableheaderv/28363557#28363557
I am doing the assignment too. I implemented a fourth enum value I called "Constant" (which is what I consider Pi to be). I'm on mobile right now, but I'll reply with code as soon as I'm back at my computer. 
I'm doing a similar challenge - started yesterday. I'd love to see you try custom segues, snapshots, UIAlertViews and PageViewControllers Can you give us a little background? I'm guessing you have prior programming experience if you're learning without using storyboards (I find it hella confusing) Any good resources to follow for a non-storyboard approach?
yes, it's iOS focussed. I do like the idea of using the same codebase for more targets. I'll make that a goal! :D (I suppose a simple proof of concept for this would take about a few hours right?)
Fair point, .xib is not useless at all to understand I suppose. I do feed that it makes things a lot more complicated sometimes and it can really get in your way I guess. I don't have lots of experience with them because I prefer to not use them. 
ah, THAT is something I didn't know existed. I'll have to read up on runBlock and see how it works. thanks!
It works when displaying the initial value. ~~Did you try the second scenario I mentioned?~~ Edit: /u/TheLocehiliosan explained it to me.
Yeah sorry. You're the second person to mention that. When I was writing the post I didn't know how to type ÷. But yes, I'm definitely seeing what you are describing . When I press **∏ Enter** I see this: [ ∏, 3.14... ] //opStack I'm trying to wrap my head around why it's added as both the symbol and double value when I press 'Enter'... 
0x04 and 0x05 is up :) http://youtu.be/RiqEJZe2nk4 http://youtu.be/8KFb43uu7NQ
No, it's just an example, you could implement a switch or something for those two view controllers
I think what you've done so far looks great. I would actually recommend learning Storyboards, too - from my experience, a good number of apps out there *do* use them (and good developers use them, too). I'd suggest trying the following: - showing modal views - handling user input from text views (and dismissing the keyboard programmatically) - paging scroll views - page view controllers And the list could go on forever. :) Tons of fun things to learn in iOS that you need for developing real-world apps - if you want more, I wrote a [big list](http://roadfiresoftware.com/2015/01/what-you-need-to-know-to-land-a-job-as-an-ios-developer/) on my blog. :)
Don't forget to assign the circle's categoryBitMask. That's the number you should be putting in the contactTestBitMask. So you would have something like: circle1.physicsBody?.categoryBitMask = 1 circle1.physicsBody?.contactTestBitMask = 2 circle2.physicsBody?.categoryBitMask = 2 circle2.physicsBody?.contactTestBitMask = 1
For starters just comment out the collisionBitMask settings. By default physicsNodes collide with everything. If you set two physicsNodes on a collision course and haven't set either collisionBitMask and they are dynamic then they will automatically collide and bounce off. The exception would be if they are moving so fast that they pass through each other. So start with large cirlces moving slowly and then experiment. 
Agreed, tools are there to be used. No point in arguing with that. I do, however, feel like Storyboard can get in the way. I have no good experience to back up that statement but it is what I hear from some iOS devs I know.. 
I think I'll wonder off into the Storyboard world at some point, it's part of iOS development so I can't ignore them. And thanks for the list! I'll make sure to check it out :D
I was going to try that, but the days aren't based on the letters, so if the first Friday of this month is day A, then the next Friday will be F, the day after will be E and so on.
I assume you don't skip days due to holidays. The "real" way to do this is to generate the entire school calendar, taking holidays into account then put that in the app. If things like snow days shift all the days, then you need to likely make the app live update from a sever that has all that stuff.
I think you are hindering your Swift* development by bypassing storyboards. *double entendres The veteran accomplished folks did it without storyboards because they had to and got used to it. You are the new generation. They will poo-poo it mainly because it's different. We all get that way with things. I can bang out a solid Free to $.99 app in a weekend (given I have a good idea to build upon) using storyboards. I'm talking solid code, API integration, testing, etc...
How are you switching? For instance, if they're in a navigation controller, the state of A will be maintained while B is active, and be there once b pops off
I've only just started with Swift, so not sure, but I'm doing a similar thing with tab controller with 2 views. In this case, I've put variables as globals outside the class - so perhaps this is a solution?
If you added a modal segue from controller A to B, and another modal segue from controller B to A, then it's not "going back" but actually just adding more copies of A and B on top of one another. Is this what's going on? If you're really returning to the same instance of controller A, then I don't see any reason why the variables would have cleared. I don't know of a mechanism by which that could happen.
Yeah, I think so. In real projects, the code that interacts with Core Data or OpenGL should work pretty well across platforms, though I guess I'd start smaller (not interacting with any other frameworks) if I wanted the amount of work to be comparable to the examples you gave. :)
Nice, maybe just start with a button that triggers an alert or whatever? Should enable me to learn how to have multiple UI tied to one logic 
Create the data and pass it in the prepare segue method from controller to controller?
I think this deserves mention: 'When global variables represent facilities that truly are available throughout the program, their use simplifies the code.' For instance, if your program relies on a User and everything is based on the manipulation of that particular user, you can justify making it global. Rather than making a global 'variable' make it a variable as part of a Singleton. That will help you avoid namespace clashes. I definitely think there is a time and place for globals. Whenever I see people trying to pass objects like a relay marathon, objects that are pervasive to the program, I immediately think of implementing a Singleton.
I've seen it done two ways: Either pass your data between your view controllers in the prepareforsegue method or create a singleton object to hold your data for the lifetime of the app. Good luck! 
As someone learning swift, I appreciate the code! Thank you very much.
How exactly do I create a singleton object in swift?
Give this a shot: http://thatthinginswift.com/singletons/
I got the collision to work for the circles but they overlap each other for some reason. I want it so that if they come in contact with each other they will bounce off each other instantly. Also I have four of these circles but one of them doesnt get affected by the physics body. There is no collision or any contact. How would I fix that? Thanks. 
Hi there, not sure if this will help, but Apple has this framework called TextKit, and this is an excellent Swift tutorial for that: http://www.raywenderlich.com/77092/text-kit-tutorial-swift
I just did my first Swift project, so hopefully I can answer this! &gt; an optional Person (which is different, somehow, from a Person that may or may not be nil) I'm pretty sure an optional Person is, by definition, a Person that may or may not be nil. &gt; My question is why use "jack!" instead of continuing to use jack? By using jack?, you're basically saying, "only do the rest of this statement if jack is not nil." jack?.setAge(10) This will only set jack's age to 10 if jack is not nil. If you do this: jack!.setAge(10) It'll crash at runtime if jack is nil. Maybe someone more knowledgable can correct me, though!
I may not have answered your question clearly enough. &gt; My question is why use "jack!" instead of continuing to use jack? Often you need a guaranteed non-nil value. You can't pass nil for the height of a frame, for example. Let's say for your Person class has the following property and constructor: var age : Int init(_ age: Int) { super.init() self.age = age } "age" has no question mark, so it is not optional and will never be nil. Now let's say you have: var jack : Person? = nil var jill : Person? = Person(age: 10) Both are optional Person objects. Now let's say you want to set jill's age to that of jack's. jill?.age = jack?.age The compiler won't allow this because age is not optional, so it cannot be nil, but if jack is nil, then the statement assigns nil to it. You'll need to use ! to specify jack won't be nil, and we already know age can't be nil by definition. jill?.age = jack!.age That'll work as long as jack isn't nil. If jack is nil (which we specified above), there will be a runtime error. I hope that helps. Probably someone else can explain better.
Thanks, good link.
I'd recommend this instead: If let csv = CSV(contentsOfURL: csvURL!, error: error) { let rows = csv.rows }
(Googles "enum") Thanks! That's a helpful way to think of it. Is there a situation where using "!" is a good idea?
This is darn helpful! Thank you. It sounds like using "!" would also help in readability, since jill?.age = jack?.age is less explicit than jill?.age = jack!.age I'm coming at swift from a javascript background, so actually getting precise errors at compile/runtime will be a useful thing for me.
It was the anchorPoint that caused the physicsbody to not wrap around the moving circles. The problem is that I need the anchorPoint for my circles.
Cool. Thanks.
This is still confusing me because I need a way to use the anchorPoint without it messing up the physicsBody for the circles. 
&gt; The API returns an optional, but the documentation clearly indicates that it will never return nil. There are still Cocoa APIs in Swift that do that. An API would never return an optional that stated it will never be nil (or at least shouldn't). If it needed to be an optional, it would be declared as an implicitly unwrapped optional which you would use as normal without the !. And often if this is the case, its better for the API to unwrap it for you and return the underlying value. You will see this behavior in a lot of the APIs that Apple is rewriting, which includes all the UITableView DataSource methods which went from passing a value of UITableView! to now just UITableView For example a method with the signature: func myCoolFunction(object: NSObject!) would be used like so: func myCoolFunction(object: NSObject!) { object.doSomething() } Note that you are not writing object!.doSomething(). 
OP needs to read this message most! :)
I've also used them for member variables that will have values for the entire lifetime of the object except for some short period at the beginning. For example, view controllers that are instantiated from a Storyboard but get data passed to them on transition. It occurs to me that it might be better to put all of that data in an enum with values `Uninitialized` and `Initialized(data1, data2, etc)`. Hmm.
Can we see some code? My first guess would be seeing if code is even working, is there anything that could be nil?
The nil coalescing operator is also very helpful. It's basically a ternary operator but for Optionals. Here's an example: `let nonOptionalAge = jack?.age ?? 20` Here, `nonOptionalAge` will be assigned to `jack?.age` only if `jack?.age` is not nil. Otherwise, it will be assigned 20. In this case, `nonOptionalAge` will never be an Optional.
This doesn't work though - the subview's pointInside method won't be called if the superview returns false for that method. Otherwise, performing hit tests would be quite inefficient... From Apple's docs about the hitTest:withEvent: method: &gt; This method traverses the view hierarchy by calling the pointInside:withEvent: method of each subview to determine which subview should receive a touch event. If pointInside:withEvent: returns YES, then the subview’s hierarchy is similarly traversed until the frontmost view containing the specified point is found. **If a view does not contain the point, its branch of the view hierarchy is ignored.** You rarely need to call this method yourself, but you might override it to hide touch events from subviews.
A view will only forward "touch down" events to subviews if they are within its bounds. You could hack around that in theory (by overriding the superview's pointInside method), but I wouldn't recommend it. I'd either change the superview's bounds and move subviews only within those bounds, or move the draggable views up a level (i.e. make them siblings of the superview, instead of children).
Good stuff, thanks for sharing!
Ever thought of creating a sub view instead of a whole new view controller? Maybe that would be more efficient, not too sure though, just some food for thought
Try converting a touch point from superview to your subview using **convertPoint:toView:** method and see if this works. 
If you remember that the anchorPoint is in the center of the circle (or square) and that you are setting the position of the center, then everything should be fine. So if you want the circle to be touching the bottom of the screen you can't set its Y to 0. That would put the center of the circle on the bottom of the screen. You would set the Y to circleRadius or circle.size / 2.0 or something.
The supposedly improved type errors should be a godsend. I can't count the number of times I have seen something like Cannot invoke '==' with arguments of type ($T0 -&gt; $T4), $T2 and then found that the problem was a missed parenthesis or something.
1.2 looks great, I've been hoping for chained if let since 1.0
&gt; “static” methods and properties are now allowed in classes (as an alias for “class final”). You are now allowed to declare static stored properties in classes, which have global storage and are lazily initialized on first access (like global variables). Protocols now declare type requirements as “static” requirements instead of declaring them as “class” requirements. (17198298) Class variables are here?!
One way to go from one view controller to the next is with segues! They are easy to call to. You can visualize them in Interface Builder, name them with an identifier, and call them in code like this: self.performSegueWithIdentifier("nameYouGaveTheSegue", sender: nil) Here are two tutorials to get you started :) [How to segue and send data between views](https://www.youtube.com/watch?v=Kpwrc1PRDsg) [How to pass data with an unwind segue](http://natashatherobot.com/ios-pass-data-unwind-segue/)
The problem is the buttons that are getting disabled are the ones that are enabled already. Here is the code for Here is the code: http://pastebin.com/RW4yzXhY When i scroll it starts adding the blue background and disables the button for more cells as i keep randomly scrolling up and down.
SO how can I make collision change to the new scene?
Every single thing about this sounds amazing, I hope it works as well as advertised. Aside from the tool changes, I'm really happy that there is now a standard Set data structure (it irked me quite a bit that there were versions of NSArray and NSDictionary, but not NSSet). The changes to let also sound great.
Take a look at [this](http://stackoverflow.com/questions/28184461/how-to-call-method-from-viewcontroller-in-gamescene) SO question :)
Yeah I noticed that too. I'm somewhat confused about the use of the non-failable cast in general. If Foo inherits from Bar, then any Foo *is* a bar, right? I might be missing something obvious, but I can't contrive a situation where an explicit upcast is actually necessary. In general, I think that Swift's 'no implicit conversions' philosophy is taken a bit too far. E.g. do I really have to explicitly convert a UInt8 to a UInt16? That's never going to cause issues, but I still have to do var x: UInt8 = 3 var y: UInt16 = 4 y = UInt16(x) which seems needlessly pedantic since the compiler should be able to figure out that it's never going to overflow. By and large, though, this is a fantastic update.
Hey everyone, I'm confused. Do I need to push an update of my app written in swift 1.2 when iOS 8.3 is released or any sooner? I'm unclear on the implications of this update for apps written in 1.0
From my experience with it so far, it's still possible to get Sourcekit crashes
Interesting. That actually seems classifiable as a bug in the type system/polymorphic behavior of tuple types (especially given that, unless I am mistaken, the single-type tuple type (T) is identical to the type T itself). I would expect that a tuple type of (B, B) could satisfy the is-a relationship for (A, A), (A, B), or (B, A). To me, that seems to be in the same boat as the issue that would cause let a: A = B() let b = B() a == b to invoke ==(A, A) instead of ==(B, B) (if the operator overload is defined for both, obviously), and Chris Lattner has explicitly stated that this is something that may change. Unfortunately, one of his suggested solutions was to make overloaded operators be methods of a class so that they can behave polymorphically, which in my mind makes less sense than having operators be global functions.
Solved my own problem for now. Not sure if it's the correct answer but in didupdateuserlocation I used dispatch_once to zoom in. I also extracted the zoom method so I could put in a 'zoom to user' button. 
No, you don't need to update. The Swift runtime isn't yet part of OS X or iOS (and it won't be until Apple is ready to commit to backward compatibility) Instead, your app always ships with its own copy of the Swift runtime libraries, and is not affected by any future Swift or OS updates.
Hitting the run button when full screen still closes the Xcode window.. 
From the release notes: - Unannotated single-expression closures with non-Void return types can now be used in Void contexts. Thank you! It's such a minor thing but needing to put a "return" after a single statement in a Void context because the compiler thought I was trying to return some non-Void was surprisingly irritating.
That was perfect thanks so much! :) 
At least I know I'm not insane, thanks. 
let's say I have several optionals — for whatever reason, I need to check that none of them are nil. Previously, I would need to do this: if let x1 = x2 { if let y1 = y2 { if let z1 = z2 { // do stuff with x1, y1 and z1 } } } Now I can just do this: if let x1 = x2, y1 = y2, z1 = z2 { // do stuff with x1, y1, z1 }
You could pay me, and I'll do it for you. 
A Big Deal^TM
It's still in beta, so I would expect that there may be some more changes.
happy cake day
Looks like introspection of the object type got better... no longer mangled.
It's about time.
For that scale of app I have no doubts that Swift/XCode is ready, even before Xcode 6.3 and Swift 1.2 drop. I have worked on side projects and paying work in Swift and it has been mostly good so far. The current state of the language (pre 1.2) and the tools (pre 6.3) is not fantastic and there are annoyances and you will experience setbacks. They just won't be game breaking, in my opinion. Even so, I enjoy working in Swift more than Objective C by a long shot. The bigger question is are YOU ready for Swift? It is a new language, and an opinionated one at that. You will need to commit time to learning it. You will spend time googling for obscure errors and reading stackoverflow posts. You don't want to just write Swift the way you wrote Objective C. If learning something new is fun and motivating and you have the time to commit to it, then I think Swift is the right choice for your project. If you don't have a lot of time to commit to this and just want to move quickly with the minimum of hassle, then you will almost certainly be less frustrated in ObjC. But if you pick ObjC now I think you will regret it 6 months down the line.
All of what you want to do is doable. Some of the conveniences in the new Swift 1.2 would make crossing that bridge between Obj-C and Swift even easier. The biggest problem I had in trying to do it was the frustration of feeling I knew how to do this in Objective-C and having things seem sub-optimal in Swift. Swift seems like a great language (and I kind of dread doing Obj-C work now), but the Cocoa libraries were written with Objective-C design patterns in mind and that creates the feeling of it being sub-optimal today. Directly translating code from Obj-C to Swift isn't *that* hard, but the intent in Swift is to often get advantages by changing some of those design patterns that pervade Obj-C. * Everything is an Object in Obj-C. Objects seem more like just another special form of collection in Swift. Classes in Objective-C that don't really need inheritance or identity seem to be replaced with enums, structs, collections, and simple values in Swift. * Obj-C's adage to Trust the Programmer gives serious leeway with casting, uninitialized variables, and data passing. Swift seems to insist on the programmer proving he can be trusted. * Obj-C's encouraging you to message nil isn't so welcome in Swift. This was a major frustration for me more than a few times. * If you remember the transition from Carbon to Cocoa, remember how everything in Carbon was done with handles (pointers to pointers) while in Cocoa most things were done with pointers (one less level of indirection). Swift's use of pointers feels mainly like it's satisfying compatibility with Cocoa rather than something you feel inspired to use in Swift-centric code. Pointers are there, but they seem rare that I use them other than when working with Objective-C libraries. I am not trying to discourage you from trying Swift, but if you are under a high stress project where you're still exploring how to even get it done in the environment you know well (Objective-C) you may want to work the bugs out that way. Maybe work on a 1.1 release when WWDC 2015 comes around and you know your Obj-C code base backwards and forward.
I just wish I knew enough about swift to get excited by this news... lol
Ah! So parsing JSON won't be so painful?
The improved optional binding syntax is huge. My code is littered with nested if-lets and it will go a long way to clean it up. I think it's a great sign that Apple is actually listening to swift developers. 
Have they fixed the bug where failable initializers in classes have to initialize everything before they can return nil? That problem kinda defeated the purpose a little bit.
I know this doesn't strictly answer your question, but I would definitely go for the iTunes U course by Paul Hegarty: https://itunes.apple.com/nl/course/developing-ios-8-apps-swift/id961180099?l=en It's free, and it's awesome! :) 
I haven't got experience but I'd like to share with you how I'm learning swift right now. I do have experience in other programming languages so that helps. My way of learning Swift is to build one thing every day. I try to look at what other apps are doing and figure out (with the help of google and tutorials) how I can do what the app is doing. This way I can take about 1-2 hours each day to learn something. [this site](http://www.raywenderlich.com) has tons of good content. My endgoal is to build an app that I prototyped two years ago with Javascript. Edit: link formatting
Udacity.com released their iOS w/Swift course. They have a pay option for people who need college credit, but you can access the course materials for free. 
*caneldar -&gt; calendar https://github.com/vandadnp/iOS-8-Swift-Programming-Cookbook/tree/master/chapter-datesCaneldarsEvents
Just posting to say that I enjoy your book. Keep up the good work.
Thank you for pointing this out. Fixed it [here](https://github.com/vandadnp/iOS-8-Swift-Programming-Cookbook/commit/35d71bd9cf5cc107d46680e617260a9384dc816f)
This should do the trick import Cocoa var characters = "0123456789abcdef" var characterSet = NSCharacterSet(charactersInString: characters) var stringOne = "123a" var stringTwo = "123n" var stringOneResult = stringOne.rangeOfCharacterFromSet(characterSet.invertedSet) != nil var stringTwoResult = stringTwo.rangeOfCharacterFromSet(characterSet.invertedSet) != nil println("stringOneResult: \(stringOneResult)") println("stringTwoResult: \(stringTwoResult)")
From the dev forums &gt; The policy is that apps can only be submitted to the store using tools labeled GM or GM Seed. We don't have any power over this policy, and cannot comment on the release schedule, sorry 
Is there any chance one could get a sample of this book to be able to see if it's up my alley or another set var catdog trip? I mean, the index looks neat 'n all, but it is an investment and a half. I mean, I'm almost certainly buying it, as I'm dead certain this'll be cooler than all those Swift courses on Udemy..
I think so — haven't used it since I only have one computer and don't wanna mess up my development flow. 
Very nice. Thank you for sharing.
The default `UITableView` has sections headers that scroll like that. Make sure the style of the table is `UITableViewStylePlain` and then implement both methods of `UITableViewDelegate`: optional func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -&gt; UIView? optional func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -&gt; UIView? 
Reading the error: "fatal error: cannot index empty buffer" It seems less likely that indexPath.section is null, and more likely that `self.feedReviewReuslts` is empty or `nil`. Make sure you're returning `self.feedReviewResults.count` in your `tableView:numberOfRowsInSection` method, and that `self.feedReviewResults` is non-`nil`. Also, what's the reason that `self.feedReviewResults` is optional?
Online book: [First Steps](https://www.weheartswift.com/variables-constants-basic-operations/) [Conditionals](https://www.weheartswift.com/conditionals/) [Types](https://www.weheartswift.com/types/) [Loops](https://www.weheartswift.com/loops/) [Strings](https://www.weheartswift.com/strings/) [Arrays](https://www.weheartswift.com/arrays/) [Functions](https://www.weheartswift.com/functions/) [Recursion](https://www.weheartswift.com/recursion/) [Closures](https://www.weheartswift.com/closures/) [Tuples &amp; Enums](https://www.weheartswift.com/tuples-enums/) [Dictionaries](https://www.weheartswift.com/dictionaries/) 
I think that's a nice and elegant solution. don't know why you are getting downvoted for.
Don't store the objects of the NSFetchedResultsController in an array. `fetchedResultsController.fetchedObjects` will return all fetched objects without sectioning. Use the fetchedResultsController directly. i.e.: override func numberOfSectionsInTableView(tableView: UITableView) -&gt; Int { return self.fetchedResultsController.sections?.count ?? 0 } override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { let sectionInfo = self.fetchedResultsController.sections![section] as NSFetchedResultsSectionInfo return sectionInfo.numberOfObjects } override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell { let entry = fetchedResultsController.objectAtIndexPath(indexPath) as FancyObject // ... return cell } 
&gt; I added this to my GameScene and the button works but it only flips horizontally and doesn't go to my game. I'm confused because you are creating a new StartMenuScene, so when you present it, you would end up in the menu again, not in the game. So if you want something like: StartMenuScene -&gt; GameScene -&gt; StartMenuScene Your files would be: Inside StartMenuScene: // on button press ... let scene = GameScene(size: self.size) ... // present scene Inside GameScene: // on button press ... let scene = StartMenuScene(size: self.size) ... // present scene
It's not really clear what kind of timing you're trying to record. Is it time spent in the app? You could definitely time how long a user is spending within the app. You wouldn't be "starting a timer", but storing simple *NSDate* timestamps at specific times and it's very cheap to do. You could track when the app is first opened, when the app is sent to the background, or whatever you want with something like `let firstStartTime = NSDate()` Then you can calculate the difference between various timestamps to calculate, for example, when the user started the app and when the user sent the app to the background. I would recommend you look at the [NSDate Reference](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSDate_Class/) and look at things you can do with timeIntervals. 
Thanks. I'm not sure what I'll cover in that chapter yet - it could easily turn into a book in itself! But some of the stuff I'm thinking about includes using map, reduce, filter to transform data instead of iterating over it, eliminating state where possible, using pure functions and immutable data structures, composing functions, currying, common FP patterns that can be used in Swift. Let me know if you have any suggestions.
Awesome tutorial! I definitely understand the painstaking effort that goes into manually creating animations like this. Have you heard of [QuartzCode](http://www.quartzcodeapp.com/)? It looks like PaintCode with animations. I haven't used it, but it looks like it could save time if you're doing simple animations. For more complicated ones that you want to be pixel perfect, you'll probably still have to do it by hand.
Nice!
I just want the StartMenuScene to go to my GameScene. So if I click the image startgame in the menu it should go to my game. 
Is there a way I could choose what scene comes first? 
It sounds like you are looking for NSDate. 
A free book with a pricetag. Nice. Why is the Swift subreddit filled with lies in the titles? Just to clarify, a website with articles is not a book.
One pdf link please, then! Also you might want to consider using words describing the format of the provided content better.
I'd stick to Objective C for serious work. Swift is missing too much, most notably class variables and initializers in Extensions. There are the other issues too, like the lack of maturity in Optionals leading to cumbersome code. You still can't implicitly unwrap multiple optionals in an if let scenario, among other things. I know the beta is out, so don't hate too hard, but its still a beta, which reinforces the idea that this language and runtime aren't ready for the big leagues yet.
I'm happy to hear that. This shouldn't mean that you shouldn't use the language for smaller things, though. If Apple is good at anything, it's making accessible developer tools. Experiment with Swift on your down and form your own opinions about how it works. Though realistically, it's not ready. It's just missing too much to make good architecture possible.
Yh one of my favourite things about Obj-C is that it's a superset of C, and how easy it is to interop with C++. Makes doing certain things a lot easier, but hell using POSIX sockets API sucks no matter what the language.
I mentioned that the beta is out, which is Swift 1.2. You can't submit apps compiled against this beta, and there's no public timeline for GM viability, so there's plenty of reason not to write production code in it yet. You are wrong about initializers in extensions. For example, if you'd like a convenience initializer for a managed object subclass but don't want to rewrite it every time Xcode regenerates your model, you'd put it in an extension. Additionally, initializers in extensions are bullet three in the documentation on extensions, so they're obviously an intended feature and they're also broken.
If you know C, are already familiar with Object Oriented programming, and are pretty good at teaching yourself massive libraries like Cocoa, then I'd say Objective-C is still the preferred option for a newbie. If you aren't already good with those three things, the learning curve to master Objective-C based Cocoa development will be much longer than the time it takes to get up to speed in Swift. Having developed in both, I prefer Swift today but still see some growing pains with the language and runtime deployment for the very short term. If you plan to be pushing yourself to release within 2 months, then push yourself to do so with Objective-C. Otherwise, I'd suggest Swift is going to be the better option even if it is still in a bit of flux.
~~There are no function pointers in swift because they bridge to actual functions. Just pass a function in.~~ Wow this is actually not true. Wow.
I've actually been looking at that parser, it looks very good. My issue is that I've never used another xcode project in mine (kind of a noob), and I'm not sure how to do it. I've googled but haven't found anything just yet
Yes. Source: I have a number of Swift-only apps currently in production.
Hey, that's my course! Thanks for being there - I'm glad to hear you liked it. EDIT: OP, if you want to give the course a shot feel free to use the coupon code "it's-a-me-coupon-code" for 50% off. Hope that helps. :)
Ye, it's hard to explain. - Ok. But the balls need to do that repeatably. So there are 3 positions, where balls falls down in 3 different colors on each position, repeatably. 
Congrats for shipping!! It's quite common for us programmers to get really excited about something and work for a while but end up quitting (especially if it's a side project), so you should feel proud of yourself!
Or the next best thing is that the same color ball drop the position it's positioned at, but then i need some sort of loop so it repeats, and a random function so the user never know which ball at x position drops down the next time. And the ability to control the amount of time before the next ball drops. Right now I have created all 3 SKSpriteNodes; 1 red ball at positions 1. 1 blue ball at positions 2, and 1 green ball at position 3. I have given them the physics charaterictis i want, but i dont know how to do the stuff i just wrote above. Right now, if i make them all dynamic - they fall down at the exact same time, once. And that's it. 
Congrats! I'd recommend adding more to the description or creating an App Preview since I still don't get how it works even though I read the description and went through the screenshots. 
 /* Set the scale mode to scale to fit the window */ scene.scaleMode = .AcspectFill Simple misspelling, it should be ".AspectFill". Remove that extra c and you should be good to go.
I'm glad that you found this. I like how the eBook has the syntax coloring. I submitted a plan to O'Reilly to update the whole book for Swift 1.2 so the eBook will get updated soon_ish_.
All the new code I write is in Swift. However, Swift is still very much based on Objective C. I think I would not have understood a lot of Swift's quirks if I didn't already know Obj C.
Just use actions for this. Something like this in your scene setup or init: let makeRedBalls : SKAction = SKAction.sequence([ SKAction.runBlock(addRedBall), SKAction.waitForDuration(0.20, withRange:0.15) ]) self.runAction(SKAction.repeatActionForever(makeRedBalls), withKey: "makeRedBallsAction") This in your scene class anywhere: func addRedBall() { let ball = RedBall() ball.position = CGPointMake(100, self.size.height - 50) self.addChild(ball) } RedBall would just be a SKSpriteNode subclass. You can inline it if you want. This creates them at random times, but you can easily adjust it to create a steady stream of them if you want. This is sample code. Ideally you wouldn't have a func specific to red balls...
So the RedBall() is what again? The redBall SKSpriteNode that i created? Or its subclass? How do i create one?
I would argue that Swift is absolutely production ready and this is coming from someone who has released a number of apps with Objective-C. A lot of arguments against Swift are very valid. There are still a lot of libraries that only support Objective-C, bridging makes everything messy, Xcode is sometimes buggy with Swift, the language needs some time to mature, etc. However, I'd have to argue that those things don't make it *not* production ready. You can definitely create all sorts of *serious* apps currently. I think right now a lot of people are simply trying to fit Swift into their Objective-C projects and these hybrids are a nightmare. There are a lot of great features in Swift not found in Objective-C. Things like generics, or the new power of enums and structs, optionals, inferred typing, etc. It really requires a new way of thinking and when you start to take all these aspects in mind when you architecture your apps, that's where you'll see benefits. I think in the future, when developers get more used to Swift, when the language matures even more, Swift will be amazing to work with. To me, the nature of the language makes it both safer and easier to collaborate with. In the end, it really depends on *YOU* as the developer because a crappy developer can ruin any language.
If you don't want the scene to zoom, you can use .AspectFit instead of .AspectFill
I tried AspectFit it still does the same thing.
Its still zoomed in my GameScene.swift when I run the simulator... I have no clue why its doing that. 
Ha ha why would you say that? Can you elaborate?
I just stumbled across the Cookbook the other day and I have to say: it is insanely useful. Exactly what I needed at this point in my Swift learning process — thanks so much. Is there any chance you'll put out an updated hardcover version of the book?
Awesome! I'll have a look at the Swift 1.2 version of the eBook, download the sampler, and really think about it, but I will probably be purchasing the book anyway. Thank you for all your help &amp; suggestions, btw! Such nice support is definitely worth investment.
I get a grey screen when I run the simulator.
Please can this be put as a future project to create it as a mac app not just an ios? 
I've been considering that. What sort of people do you think would want a Mac-based MarginCalc?
I would Imagine the same as those who currently use your mobile version, just on a much bigger scale, say a web developer for example bartering on a deal. You could implement the Mac app with some extra features such as cloud sync and back up.
Good looking app, congrats.
I second Lynda.com. Simon explains everything clearly and in full. As for bloc.io, you can still try their "Swiftris" tutorial for free I believe. I don't know if it's indicative of the quality of their courses but I really enjoyed it. Whichever option you choose, good luck!
Thanks for the reference to Swiftris! That looks really well done I'm excited to try it out.
I dont think 'findObjectsInBackgroundWithBlock' means what you think it means. It's an async function that you use to query off the main thread so the rest of your code still executes instead of waiting for the query to finish. It doesn't mean it's gonna run when the app is backgrounded.
Thank you very much. I appreciate your comment. Steve.
free: https://itunes.apple.com/us/course/developing-ios-8-apps-swift/id961180099
I'm two lectures into it. I wouldn't say I have a very strong grasp of OOP but I get the concept. It is pretty fast paced, but the only thing I'm having trouble understanding is closures. 
Awesome, will check this out also. Thanks so much for enlightening me on these tools.
Yeah I was using findObjectsinBackgroundWithBlock inside "func application(application: UIApplication, performFetchWithCompletionHandler completionHandler: (UIBackgroundFetchResult) -&gt; Void)" but that didn't work so I replaced it with just findObjects()
WOHAA this looks amazing, Thanks a lot 
but i need to read an integer
Look into [didSelectRowAtIndexPath](http://stackoverflow.com/questions/8404922/uitableview-didselectrowatindexpath) for doing stuff when a row is tapped. And [UIAlertView](http://stackoverflow.com/questions/24022479/how-would-i-create-a-uialertview-in-swift) for how to actually bring up the alertView.
No you are repeating a sequence forever. Put a breakpoint in the addRedBall function and debug it. It should be called every 1-3 seconds.
Not really an expert in debugging yet :/ But the code looks like this now: func addRedBall() { // RED BALL let redBall = SKSpriteNode(imageNamed: "RedBall.png") redBall.name = ballsCategeoryName redBall.position = CGPointMake(self.frame.size.width/5, self.frame.size.height + 200) redBall.physicsBody = SKPhysicsBody(circleOfRadius: redBall.size.height/2) redBall.physicsBody?.friction = 0 redBall.physicsBody?.velocity = CGVectorMake(0, 0) redBall.physicsBody?.allowsRotation = false redBall.physicsBody?.dynamic = true redBall.physicsBody?.applyImpulse(CGVectorMake(0, 0)) self.addChild(redBall) //let ball = redBall //ball.position = CGPointMake(100, self.size.height - 50) //self.addChild(ball) } let makeRedBalls : SKAction = SKAction.sequence([ SKAction.runBlock(addRedBall), SKAction.waitForDuration(2.0, withRange:1.0) ]) self.runAction(makeRedBalls, withKey: "makeRedBallsAction") 
I am taking bloc.io's iOS development course right now and am almost finished. I took it through my employer as well. As much as the free courses are helpful, there is a lot of value in having a mentor available. Swiftris is directly indicative of the quality of their content. Also, if you want to see more material, you can call them and they will set you up with a demo account. Then you can take a look at some of the checkpoints in the course. If you have any other questions, just let me know :) Edit: Since swift is still relatively new, most of their content is in objective-c. 
Solved it by making this instead var redBallEndlessAction:SKAction = SKAction.repeatActionForever(makeRedBalls) self.runAction(redBallEndlessAction)
But how do i access the redBall outside the function to apply the contact/collision masks to it? 
Welcome :) I think the previous one for iOS 7 just focused on objective C. I've seen folks mention there are teething issues with swift, so was considering just doing objective C as its applicable on OSX too.
A few things here. 1. `scale` is not a property on CALayer, you will want to use the `transform` property 2. There's really no need to use a CAShapeLayer, you can just set the corner radius on a plain layer to half it's height, and set the background color appropriately 3. Layer properties implicitly animate, so using CAAnimations is overdoing it (they are also a bit tricky as your property is going to reset when the animation is done. I have also noticed that adding and animating at the same time tends to skip the animation, so you might want to use a dispatch_async() to do the actual property change. var dot = CALayer() dot.opacity = 0 dot.frame = aCGRect dot.cornerRadius = aCGRect.size.height / 2 dot.color = UIColor.redColor dot.transform = CATransformMakeScale(0.1, 0.1) view.layer.addSublayer(dot) dispatch_async(dispatch_get_main_queue(), { dot.opacity = 1 dot.transform = CATransformIdentity } This is typed from memory, so it probably needs some syntax fixes. 
OP, try this with a dispatch_async() for the animateWithDuration. Probably better than straight my layer approach above.
Try removing all the derivated data contents. Not only your project's folder. DerivatedData/** while Xcode is closed. 
Indexing doesn't cause your code to fail. I'd check if the code still compiles and if there are warnings (maybe you mean that with "some of the code doesn't work"?). Indexing is a separate process from compiling; no matter whether your project hasn't been indexed yet, is currently indexing, or is done indexing, you should be able run the compiler no matter what. Code errors, however, can influence indexing - to index code successfully, Xcode needs to be able to parse it. In short, indexing enables Xcode to do code completion and to jump to definitions of classes/methods by locating all symbols in the source code. 
didHighlightRowAtIndexPath isn't want you should use. That method may trigger in cases in which you don't want to execute the action: for example, tap a cell, but don't release. Then start dragging. The cell will be highlighted for a bit before the dragging starts (and therefore the delegate method is called), but the user did not select it. /u/Socraz6's solution is the correct one.
Where do I find my project index? Can you give me exact locations which I have to delete? Beginner here
Are you not getting an Alert at all? Here's some code from a recent project that I had to use the new AlertViewController. func alertToSaveNote() { let alertController = UIAlertController( title: "Note not saved!", message: "Changes to the note were detected. Would you like to save before you exit?", preferredStyle: .Alert) let cancel = UIAlertAction(title: "Cancel", style: .Destructive, handler: nil) alertController.addAction(cancel) let save = UIAlertAction(title: "Save", style: .Default) { (action) in self.saveNote(alertController) } alertController.addAction(save) presentViewController(alertController, animated: true, completion: nil) } Since it looks like you're just getting some info from your model and displaying it, you probably just need one "OK" button or something.
you can disable indexing with `defaults write com.apple.dt.Xcode IDEIndexDisable 1` and see if it makes it more clear what's wrong with your code. enabled indexing with ` defaults delete com.apple.dt.Xcode IDEIndexDisable` 
It's shown in your Preferences. It's in whatever folder is set for your Derived Data (it defaults to ~/Library/Developer/Derived Data)
You beat me! This is what you want class ViewController: UIViewController, LFXNetworkContextObserver { var networkContext = LFXClient.sharedClient().localNetworkContext required init(coder aDecoder: NSCoder) { super.init(coder: aDecoder) self.networkContext.addNetworkContextObserver(self) } }
http://imgur.com/6CuYQ0O This is the 0 image I want to use for my score. How would I add it to my swift game and make it increment by 1 every couple seconds?
I've put it in but it doesn't work :(. [Imgur](http://i.imgur.com/mPNwx84.png). If I print an array of the file names after making it it doesn't show up, but it does when you reload the app.
I'm not sure what you mean by calling completion handler. Doesn't that get called "randomly" by iOS as long as I have this "UIApplication.sharedApplication().setMinimumBackgroundFetchInterval(UIApplicationBackgroundFetchIntervalMinimum)" ? This is what I have and it seems to work alright, I'm just not sure if there's a better way. func application(application: UIApplication, performFetchWithCompletionHandler completionHandler: (UIBackgroundFetchResult) -&gt; Void) { let priority = DISPATCH_QUEUE_PRIORITY_DEFAULT dispatch_async(dispatch_get_global_queue(priority, 0)) { var q = PFQuery(className: "Person") var array = q.findObjects() //test "array" UIApplication.sharedApplication().scheduleLocalNotification(notification) } dispatch_async(dispatch_get_main_queue()) {} } 
Now I'm stuck. I can't access the redBalls properties outside the function to give it masks. Any advice/help is greatly appreciated! 
So right now you're adding URL parameters, right? And you're serializing them into a string yourself. You also said you're using Alamofire. Alamofire will actually take those arguments in a Dictionary as a parameter to the request() function. You don't need to -- and shouldn't -- manually create those strings. Specifically just ?brand_id=\(id) Instead, pass the parameters into the Alamofire request() function. Alamofire.request( .GET, "/products", parameters: ["brand_id": id] )
Now it'd be interesting to know how you implemented the table view data source methods. It seems that it doesn't read the directory when the number of rows (and other stuff) is requested.
Hmm. I don't think SpriteKit has native support for bitmap fonts (which is what you are after). I know some have made it work, but I haven't tried yet. Just search "swift bitmap font." Or... Create a custom class with a number property that is a SKSpriteNode. Create a method to increment the number and swap the sprite texture accordingly. I'd write done sudo code but I'm in the car. 
Why is homeViewButton of type AnyObject instead of UIButton? UIButton derives from UIView which has a 'frame' and size. If your variable is AnyObject it behaves more like an Obj-c 'id' which has none of those. Either adjust the definition of homeViewButton or if absolutely certain it's a UIButton, cast it to UIButton before accessing its view properties.
I thought I might need a line to call the alertView, so I tried entering in "alert.showNotice(self)" but then I get the error "Missing argument for parameter 'subTitle' for call" Am I on the right track or no?
Don't confuse [UIAlertView](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAlertView_Class/index.html#//apple_ref/occ/cl/UIAlertView) from Obj-C with [UIAlertController](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAlertController_class/), which is the Swift implementation. UIAlertController is an actual UIViewController, where as UIAlertView is just a UIView. Therefore calling presentViewController(alertController, animated: true, completion: nil) is similar to calling alert.show() from before. But because they are full UIViewControllers, we can do more cool stuff with them. You can read up more [here](http://nshipster.com/uialertcontroller/), which is the article that I followed to implement the example above.
Yup. Thanks!
Can you post some of your code? Maybe make a bar minimum project that reproduces the issue and post that?
http://i.imgur.com/u9XGqj6.png
So I have to download the font I want and then put it in the game.atlas folder? I have this http://i.imgur.com/6CuYQ0O.png?1 that I made in Sketch 3. Could I put that in the folder and use it for my score? Thanks for the quick reply! 
Congratulations! The thrill of your first submission is incredible. You've got an interesting idea, great work!
Hello! I'm on the very early stages (only week #2!) of the iOS course also stipend through my employer. It's been very helpful so far. And having access to someone is great. I haven't needed him yet and I work with plenty of iOS devs and I'm dating a developer but... there's something better about having a dedicated person focused on teaching you. Oh also, you get to choose your mentor from a whole list of people which is a plus. I've glanced through the future parts of the roadmap and I'm fairly happy so far. I'm a complete newbie at coding too. I only know a bit of html/css. I am an iOS/Android Designer though. So I do work in the industry. If your employer is paying for it, honestly I'd do it. I did a bit of research on other dev bootcamps and it's one of the better online courses out there. Most online dev bootcamps focused on web anyway. Bloc is just expensive. If it's a choice between Thinkful and Bloc and your employer is willing to pay full on both, I think Bloc offers a bit more. At least you'd have to devote more time for Bloc. I ultimately chose Bloc because they seemed fairly flexible yet allowed me to learn a lot. I'm doing 12 hours per week for 35 weeks. I work full time at a fairly demanding job so having the ability to pause the course if I get busy or to catch up later was something I was looking for. Plus, unlike other courses it was still very intense. Thinkful seemed to be a bit more leisurely. And even though I don't want to become a developer, I didn't want to half-ass it. I figured if I was to learn how to code, might as well learn it right. I also needed a motivator and having to pay 5k and a 1-1 every week keeps be a lot more on track than teaching myself. In terms of swift vs. Objective-C Bloc teaches both. You can focus more on Swift when you work on the main projects. But I think it's helpful to at least get a brief intro into objective-c. Edit: If my employer wasn't paying for it I honestly don't know if Bloc would be worth the 5k. It's a lot of money to spend on something if I'm not switching jobs. For someone who is interested in becoming a developer, one of the in person bootcamps will probably work better. Bloc seems to be good at teaching you to make some stuff by making you make stuff. But it doesn't teach you enough foundation as a compsci student would have. This might be pretty worrisome for hiring mangers. Although I guess this could be said about all bootcamps. I know someone who went through a in person UX bootcamp and had similar feelings about her. She was good at making stuff pretty but she lost some of the foundations I had from my Design degree. She's still pretty successful though. Currently a product designer at a big tech firm. I also am good friends with someone who went through the 17k Hackreactor. In terms of ROI it's not bad. Their average graduate salary 105k seems to be pushing it... But my friend easily found a jobs ranging from 60-85k. I also worked next to a bunch of Hackreactor alums at a hackathon and they certainly seemed like they knew what they were doing!
Thanks, that looks good. But Xcode shows up an error message for the line let index = Int(arc4random_uniform(UInt32(idioms.count))) with 'Int' is not convertible to 'UInt32'?
I'm not sure if you're still working on your issue, but I randomly ran across this little convenience singleton cocoa control called EVCloudKitDao: https://www.cocoacontrols.com/controls/evcloudkitdao Seems to take commonly used ClouldKit functions and simplify them. It also includes a sample app showing how you might use it. 
Can you post when happens in randomizedText? 
Could re replace that line with the following? let uIntCount = UInt32(idioms.count) let randomUInt = arc4random_uniform(uIntCount) let index = Int(randomUInt) Which of the three lines gives an error?
I didn't get that recursion in the third video ("applying mvc") at all.
Is the button action and the TextView outlet connected to the storyboard? It's hard to know what the problem is without seeing your code.
Thanks a lot for your incredibly detailed response, I defiantly agree with you to learn a bit Objective-C while learning swift but I'm a bit anxious with this whole situation and didn't wanted to make it too complicated but I guess i'm just being silly and this is a good thing! I am defiantly considering bloc.io the best choice here, all an all I will try to get an intro meeting with student advisor and will update this post. 
Agreed! Simon did a really great job on the swift course, To be honest I started learning programming on Lynda "programming fundamentals" and "object oriented design" But things go a bit complicated when I started the swift course. I read the Apple swift ebook after the swift course on Lynda and then everything started to came back and i was able to figure out some of the point that I saw in Simon's course. 
Great to see that you're on the Swift course too. I am going to schedule introduction meeting next week and will keep you updated on the progress. Good luck with your iOS development carrier. 
Good luck to you as well! If you end up using Bloc, let me know. I can give you a referral code that will save you $300. Hope you find the course that you're looking for!