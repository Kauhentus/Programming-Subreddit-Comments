God I hope those are jokes LOL
You can create a CoreML regressor to do that, based on a json created by you. It will predict which feature does the user need based on your data, you can read more here: [Apple Refs](https://developer.apple.com/documentation/createml/mlregressor) . Which regressor? that depends on your needs, you can try them all and see which one is performing better. &amp;#x200B; [Paul Hudson Video CoreML and SleepApp Ref](https://www.youtube.com/watch?v=x9_BG2q7XYw) &lt;&lt;&lt; Similar to this
Must either be a very simple app (in which case go for it) or your VCs are extremely bloated and your project is poorly structured (in which case definitely go for it)
I don’t think you understand the difference in purpose/function/ability between a SwiftUI View token vs a traditional UIViewController. Love optimism, but hate ignorant cockiness.
I agree 100%. It should have been called Swift+++.
No. It should be called Objective Swift++
Calculate the distance using the [Great Circle Distance](https://en.wikipedia.org/wiki/Great-circle_distance) formula.
This seems like a nice writeup. Combine is the Holy Grail: \&gt; When to use Combine Combine fits most naturally when you want to set up a system that is "immediately" reactive to a variety of inputs. User interfaces fit very naturally into this pattern. [https://heckj.github.io/swiftui-notes/](https://heckj.github.io/swiftui-notes/)
Glad you are optimistic. In 2 years I hope we're not embroiled in WW3. :-)
Lol
Hello, I’m new to coding and I wanted to know how am I supposed to link other database and use them in my app. Like for exemple if I allow my users to link there Facebook account how can I display their friend list on my app ? Or show what’s left in your Uber balance ? Do I have to use the same kind of database that they use ? For exemple if the company is using Firebase I will have to use Firebase ? Do I have to contact them to access their database ? Pay them ? Thank you very much, I don’t know if that’s an easy question but even documentation about this would be amazing...
Yeah, if you’ll do SwiftUI and Combine, I’m going to say you’ll have to do a 99% rewrite.
Apple's AR glasses 4th 1/4. 2019. They're coming. :-) [https://www.youtube.com/watch?v=XYV3X3Z3SYw](https://www.youtube.com/watch?v=XYV3X3Z3SYw)
Did you try mutating variable or function in struct?
You guys have some great repos! Can't wait to get to try them out!!
Yes, didn't work. But it doesn't matter. I was able to achieve what I wanted to achieve in the end.
Hey I made it even a bit better now. And you can find it here: [https://gist.github.com/Evertt/55cac9cb73118f77b2bce768489e7dcd](https://gist.github.com/Evertt/55cac9cb73118f77b2bce768489e7dcd) The thing that's better is that now you can also call (mutating) methods on the struct from the view. You couldn't do that directly with my old method.
Ok, i enjoy coding, so welcome the new learning experiences. Everything really seems to be driven by the UI You can have the best code in the world, but if that UI does not look pretty, you are kind of sunk. No matter how good your code is. It's the UI that rules these days. It has to look pretty to the CEO (and his kids), or else it's going nowhere and no one gets paid.
Just taking a look at apple's documentation: https://developer.apple.com/documentation/uikit/uislider I'd say it is pretty customizable. The only problem I see is the color being different from the middle of the slider to the thumb. As for that and since the slider track is an image, you could generate a new image programmatically for each time the slider is updated. (Probably a performance bottleneck?) I've never done this before though so I hope someone else more experienced can help you with that :)
Think it's a lot of new learning from scratch. This world of ViewControllers is just going to fade away. It's Combine, state, and UI driven, that's the roadmap. In a few years, iOS coders will be saying, "What's a ViewController, we found it in some legacy code." SwiftUI will be how everyone will be introduced to iOS. Anything before, "well that's how my Dad did it." Times have changed. The human brain evolves. And code too. Always changing, else hey, should we all have stuck to ObjC? What's this new Swift thing? Still have friend that think, "Swift? That's never going to catch up, it's all going to be ObjC, just wait and see!" :-)
Try glassdoor for your area. In my region, BAs are paid substantially less then developers.
Care to share with the rest of the class?
https://reddit.com/r/swift/comments/c5pr0z/_/esh5boy/?context=1
I’ve been going through content found at raywenderlich.com. Lots of great swift info there and stuff to buy and work through if that’s your thing.
Thanks, dude! Feel free to share your feedback!
I’ll have whatever you’re having.
[Docs.swift.org](Docs.swift.org) Obviously, the documentation. [Hackingwithswift.com](Hackingwithswift.com) is the best imo. It is always up to date, free, and you can buy Books for Advanced Topics. So much to learn from /u/twostraws [Raywenderlich.com](Raywenderlich.com), in my Opinon not nearly as good as hackingwithswift, it is sometimes outdated and you have to pay. But still a great Place to learn. On iTunes U/Youtube the Stanford C193P course. But you will need to know about Programming to be able to follow, so if you start from 0, better start with one of the others.
You should also add SiriKit (and Spotlight) integration, so your users don't need to start your app to get suggested actions. SiriKit also works with miltiple triggers (like location) even if your app doesn't have access to that.
https://nshipster.com/vscode/
Original Writer of the Article here -- I don't make any money off this post. I write mostly for fun.
That's a good catch -- thanks for helping me improve the article -- fixed it.
I inherited a project that had a 2k line VC and though it was bad. 20k lines? That’s insane.
The easiest way is probably to subclass `UIControl` rather than trying to make `UISlider` do something so different. See below for an example implementation... I used [PaintCode](https://www.paintcodeapp.com) to draw the slider, then customized the generated code slightly. If you need to create custom controls, PaintCode will pay for itself the first time you use it. Not an ad, I'm just a longtime happy customer! ```swift // // CustomSlider.swift // Slider import UIKit @IBDesignable class CustomSlider: UIControl { @IBInspectable var value: CGFloat = 0.0 { didSet { setNeedsDisplay() } } @IBInspectable var thumbSize: CGFloat = 20.0 @IBInspectable var centerSize: CGFloat = 4.0 private var margin: CGFloat { return (thumbSize * 0.5) + 1.0 } private var touchStart: CGPoint = .zero override func draw(_ rect: CGRect) { //// General Declarations let context = UIGraphicsGetCurrentContext()! // This non-generic function dramatically improves compilation times of complex expressions. func fastFloor(_ x: CGFloat) -&gt; CGFloat { return floor(x) } //// Variable Declarations let circleOffset: CGFloat = value * (bounds.width - (margin * 2)) + 1 let bezierEndpoint: CGFloat = value * (bounds.width - (margin * 2)) + margin //// Background line Drawing let backgroundLinePath = UIBezierPath() backgroundLinePath.move(to: CGPoint(x: bounds.minX + margin, y: bounds.minY + 0.5 * bounds.height)) backgroundLinePath.addLine(to: CGPoint(x: bounds.maxX - margin, y: bounds.minY + 0.5 * bounds.height)) UIColor.darkGray.setStroke() backgroundLinePath.lineWidth = 1 backgroundLinePath.lineCapStyle = .round backgroundLinePath.stroke() //// Center mark Drawing let centerMarkPath = UIBezierPath(ovalIn: CGRect(x: bounds.minX + fastFloor((bounds.width - centerSize) * 0.5 + 0.5), y: bounds.minY + fastFloor((bounds.height - centerSize) * 0.5 + 0.5), width: centerSize, height: centerSize)) UIColor.white.setFill() centerMarkPath.fill() //// Line Drawing let linePath = UIBezierPath() linePath.move(to: CGPoint(x: bounds.width * 0.5, y: bounds.height * 0.5)) linePath.addLine(to: CGPoint(x: bezierEndpoint, y: bounds.height * 0.5)) UIColor.white.setStroke() linePath.lineWidth = 1 linePath.stroke() //// Thumb Drawing let thumbPath = UIBezierPath(ovalIn: CGRect(x: circleOffset, y: (bounds.height * 0.5) - (thumbSize * 0.5), width: thumbSize, height: thumbSize)) UIColor.black.setFill() thumbPath.fill() UIColor.white.setStroke() thumbPath.lineWidth = 1 thumbPath.stroke() } override func touchesBegan(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { guard let loc = touches.first?.location(in: self) else { return } touchStart = loc update(loc) } override func touchesEnded(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { guard let loc = touches.first?.location(in: self) else { return } update(loc) } override func touchesMoved(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { guard let loc = touches.first?.location(in: self) else { return } update(loc) } override func touchesCancelled(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { guard let loc = touches.first?.location(in: self) else { return } update(loc) } func update(_ location: CGPoint) { value = max(min((location.x - margin) / (bounds.width - (margin * 2.0)), 1.0), 0.0) sendActions(for: .valueChanged) } } ```
There are already solutions to provide maps/positioning inside a real-world envrionment. Most of them revolve around triangulation based on wifi access point signals' various signal strengths. An easier way would be to just spatter QR Codes all over the hospital at every intersection and have the camera scan it and point the way with some AR-kit style overlays. Sounds like an interesting project.
i've been doing wayfinding for over 15 years and have worked on several hospitals and 3d models have never been a good solution. there are a couple of companies that do interior wayfinding apps and they rely on wifi triangulation. they basically setup beacons through out the facility. but really, specially in a hospital where people really don't want to be, presenting them with a 3d model is not the simplest solution. also, getting people to get the app and then get acquainted to it to get around a building is not good user experience.
Thanks for recommending my site! 🙌
Certain big companies have legacy code that control almost every aspect of the app and since refactoring is less of a priority (or refactoring takes longer than new code so it can't keep up), new code usually takes a priority and there might not be a place where the code makes sense to add besides that controller
I remember playing around with bacon stuff around 3 years ago and it started to get iffy around 10-15m away. Granted depends on how many people are walking around, how many walls there are, what they're made of, etc.
I LOVE how easy coding with SwiftUI looks. I can't wait for another couple of years so I can start using it at my company. Thanks for the tutorial.
If you just want a global rank, you can pull the current estimated distance of the current phone to all nearby phones and upload the distance between the 2 phones (call it FIRPair) along with a timestamp. Then you could query firebase for all FIRPair that are newer than 30s (I don't know what your app does so 30s is a random number) sorted by oldest timestamp and create a pair object on your app. The nice part of having it sorted is that if the pair A/B (or B/A) exists already, it's overwritten by a newer distance. If it's distance of the logged in user (i.e I wanna see who's close to me) just save a user/distance/timestamp object and query them like explained previously
Can't agree more. In the company I work for, we're supposed to support the last 3 version of iOS. So I guess SwiftUI will have to wait for another 3 years T_T
Depends, what's your database? CoreData, firebase, SQL lite, etc
&gt;&gt; I don’t see any rational reason to call it Swift ++ when it is in actuality Smalltalk. &gt; It's targeting the Swift ABI. So? Should we call Python C— (C++ being taken). All sorts of languages and packages could potentially target the ABI, does that imply that they are derivatives of the language? &gt;&gt; Frankly I hope the project burns in hell. &gt; Do you also wish evil upon every Java project that has "J" in the name, or Javascript project that has "JS" in the name? That's not very nice. It isn’t dry nice to imply your language is something it isn’t. “Swift++” implies that it is a derivative of the Swift language when the documentation clearly makes the point that it isn’t. If this project had extended “Swift the language” in some manner it might be worth a discussion and the name Swift++. To look at this another way, let’s say they implemented a shell replacement for BASH. Mind you we are talking a look alike to BASH here. Should that implementation be called SwiftBASH, Swift—, Swift!&amp; or something else. I’d say no because it has nothing really to do with Swift but rather implements another language. As for wishing that this project ends up burning in hell, at least I’m taking a position here that addresses sleazy behavior.
Whats the criteria to be on that list? Ive got multiple Swift Open Source projects with many more stars than some of these.
NavM8 will be releasing this feature as an extension to their delivery driver app.
https://skafos.ai might fit your needs. I haven’t tried it yet, just have read about it and have checked out some demos.
Thanks for the suggestion, I'll look it over!
Guys - I have found a solution - although I do not think it is the best one. I am clearing the cache for SDWebImage every time I click on a project. I am worried that this solution is not the smartest, because cacheing has its obvious benefits.
A great substitute for the sparse documentation right now.
I’m optimistic it’s just because it’s optimistic, but most the errors right now are very ambiguous and often straight up misleading. For example, if you add something to a VStack as the third item and say you assign it a .foregroundColor when you were supposed to assign it just a .color .... you’ll get an error all the way up at your first item modifier in the first item. You have to realize the error could be *anywhere* in your vstack. Hoping the gold version of Xcode has this all fixed.
When you dont write an init inside your struct, swift makes a default one for you with all the members. So you have to provide a value for each one upon making an instance.
In the line \`let input = try AVCaptureInput(device: captureDevice!)\`, you are assigning the return value of a function called \`AVCaptureInput(device: )\` to the variable \`input\`. &amp;#x200B; Take a look at the function called \`AVCaptureInput()\`--the error you are getting is because you are passing an argument into that function. The part in the parenthesis is the argument (\`(device: captureDevice!)\`) . Does that function take an argument? From this error I would guess not. &amp;#x200B; Does that help?
Mmmm, bacon 🥓
This looks correct. I went to the [documentation](https://developer.apple.com/documentation/avfoundation/avcaptureinput) and saw that AVCaptureSession is a class with no initializers (which makes sense for that error). The documentation says: &gt; The abstract superclass for objects that provide input data to a capture session. So you shouldn’t really be creating one of these anyway
Thanks for taking time to respond :) Yeh I kind of agree with you (but I still think it would be fun to try build!). Would a 2D maps option be worthwhile? Apple in WWDC released Indoor Mapkit. Is this an option?
if you can search github for language:swift kitura and sortby 'recently indexed' - you can glean state of open source projects.
Find an interesting project and make it to the best of your current abilities and keep making it better as you learn things. Eg: made a calculator that was pretty basic and kept adding extra functionality as I kept learning.
Ye, the idea is cool but tooling around it not so much. Autocompletion and autoformatting are pretty important when doing code in UI.
Thanks for reply, then for better code clarity, It's better to write for team project :)
Try to recreate the todo app, but without the course telling you what to do. You'll realise that you forgot a lot of thinks and learning from mistakes is much better than following a course.
Excellent, I just posted a further comment.
I think this video from last month’s WWDC would be a good place to start. Check out Adding Indoor Maps to your App and Website from #WWDC19 https://developer.apple.com/wwdc19/241
Well, first it doesn't compile because your struct doesn't conform the Decodable protocol, you'd need to add this init `public init(from decoder: Decoder)`. After that you need to implement Waypoint and DriverProfile types. All of these I got them directly from Xcode errors. Am I missing something?
Great advice. Thank you.
Thank you for this advice
you probably wrote IndexPath, instead of indexPath
The initializer is synthesized, it worked when I had `RidesProtocol` as a concrete type. I only got the error when I replaced the type ( a struct) with the protocol
How would i use this? i made a new swift file, how am i going to use? i added this as a subview but nothing happen. Im new to custom UIControl and stuff
You can have a look at [Swift for Windows](https://swiftforwindows.github.io/). Or you can get Swift running in the Windows subsystem for Linux.
The RequestManager calls are very similar, I would extract the common code and just insert the url and completionhandlers.
Only \`struct\`s have synthesized inits, classes and protocols don't.
indexPath 👍🏻
For something to be a form of Codable, all its properties must also conform to Codable. Is that the case?
Compiler does not know how to instantiate RideProtocol, do you even have types that conform to it? You need to tell it which concrete types would be instantiated.
You just set the library type to `.dynamic` in the package manifest
The problem boils down to this: Lets say you have `struct Foo: RideProtocol { ... }` and `struct Bar: RideProtocol { ... }`. Now you get some JSON like `{ data: [{ plannedStartTime: ..., wayPoints: [...], ...}], ... }`. When you decode this, how is the JSON decoder supposed to know if the thing is `Foo` or `Bar`, or some other implementation of `RideProtocol`? How to solve this? Depends. But if `RideProtocol` really needs to be a protocol (maybe you could tell us why?), `RidesResponse` needs to know which concrete implementations exist. You can then implement `init(from:)` and `encode(to:)` yourself and store which concrete implementation is used - for example, by having an enum for each concrete class, and writing the corresponding enum value to the JSON. Then, you'd have JSON like `{ rideProtocolType: "Foo", data: [{ plannedStartTime: ..., wayPoints: [...], ...}], ... }`, and when you decode the JSON, you can use that value to figure out what implementation to use to create your `RideProtocol`.
But there is still an “Editor placeholder in source file” error there, what should I do?
"If you just want a global rank, you can pull the current estimated distance of the current phone to all nearby phones and upload the distance between the 2 phones (call it FIRPair) along with a timestamp." Thanks for answering. Regarding the above first step; how do you even do that in code? I mean calculating the distance between one phone and all others. How would it look roughly in Xcode? I assume it would be a function on its own and not something in ViewDidLoad.
Somewhere on your code you have a placeholder from Xcode autocomplete. it's the part that gets highlighted when you tab. you need to replace that with code.
Like pale blue highlighted code?
Yep, that ought to be it.
Thx
If you’re asking these questions, you should take a step back and go through YouTube tutorials for Firebase and iOS (or even coding) - it'll help you more than asking for code
Your comment is better than a triple-scoop ice cream cone. With sprinkles :)
will do
I was also pretty frustrated writing an app in Swift before. I liked the language but didn't like the weirdness of not writing everything in code. Coming for a web dev background, Storyboards threw me for a loop. When SwiftUI came out, I jumped on it, and I can tell you it's way easier. If you're not worried about making apps that work with a previous OS, I'd highly recommend checking it out. The tutorials are pretty solid... [https://developer.apple.com/tutorials/swiftui/tutorials](https://developer.apple.com/tutorials/swiftui/tutorials)
I believe in Xcode 11 they will be moving createml to its own utility app and that new version will support creating object detection models. As of beta 2 that template is not yet included. If you can wait that long this may be something to try when it comes out.
Another thing you can do is start the new project and simultaneously research uicollectionview tutorials - there are several good ones out there. You’ll be able to follow the tutorial and incorporate that with what you’ve already learned. This should boost your confidence as you’ll be doing something new and figuring out how to take the tutorial and apply it to your own project. I can speak from experience on this.
SwiftUI requires macOS Catalina. Even if you are using Xcode 11, you can’t build for a version greater than the one you’re currently on.
Add this to your Xcode project, then create a new UIView in your Storyboard, and then change the class to CustomSlider. Then you can connect the slider's `valueChanged` outlet to your View Controller. (Switch to the Editor + Assistant view or Venn diagram icon at the top right, and control click from the slider to your View Controller)
Ah damn. That sucks. Why does it work in Xcode then? There I can build it and run it in the simulator (which is obviously running ios 13).
Building for iOS works because Xcode 11 comes with the iOS 13 runtimes, but it depends on your system for the macOS runtimes.
Think about it this way, when you decode RidesResponse, what concrete class/struct will the decoder use for RideProtocol? There’s no way to tell from the struct, so the decoder cannot decode, so it cannot comply with the Decodable protocol.... Change the definition of “data” to any array of a concrete type.
Does that mean I could tell SPM that I'm building for only iOS 13 and that then it could work?
There’s no hard and fast rules. Depends on the circumstances and what extra elements there are, memory required for those elements, and if I think I’ll need those elements in a future release soon.
Only read the keys you are interested in. No need to keep the other stuff there as bloat.
Potentially? It depends on if you’re using the version of SPM from Xcode 11, that would know SwiftUI exists.
Thanks mate!
Yes
Do you have any advice on how to get my table view to be split up into three editable labels like in that figma draft? Currently this is [what i have](https://i.imgur.com/93sTxL0.jpg). But I need to be able to have a date/company/bill amount shown that the user can edit. Instead of just a single label (currently cell title) on the tableview
Don't sweat about it dude. I've been a professional iOS Dev for about 6 months now and I'm currently trying to contribute to the Swift language and I feel exactly like you do right now. Just grind through the first bits and you will eventually get into it.
You can using some auto parser json library. You will save a lot of time
is it just called auto parser?
You'd think that the macOS sdk included in Xcode would allow him to build (but not to run, that I understand). But I know that Apple likes to tightly couple things so it doesn't really surprise me
make sense. just add stuff later as i need then
Use the JSON decoder and Structs that implement the codable interface. To do that all of the fields just need to be codable which is most primitives.
Yup! Don't try to code for the future, just code for what you need now. Chances are you'll probably just throw it all away later.
I think the recommendation here is to use `canImport` around your SwiftUI code to preclude its use on platforms that don’t include it.
You will need to create a custom UITableViewCell to do this. You can't just use any of the built in ones. There are many ways to build your UI but you need to know how to make a custom UITableViewCell first. Here is the first google result for "custom UITableviewCell" [https://www.ralfebert.de/ios-examples/uikit/uitableviewcontroller/custom-cells/](https://www.ralfebert.de/ios-examples/uikit/uitableviewcontroller/custom-cells/) &amp;#x200B; Once you have a custom UITableViewCell you can set it up with 3 UILabels set inside of a horizontal stack view (or manually constrained with autolayout), and have 1 be left aligned, 1 center aligned, and 1 right aligned.
I would probably use quicktype to generate the classes, and therefore, have all keys. But, if json objects contain 30 keys and you need 2 or 3, then it's probably better to only write what you need.
Okay, sweet thanks! I was on the right track with my searches for tutorials. I was only able to find a bunch that were with UIImages and titles being pulled from an array to make a YouTube video style custom tableview. But I was needing something that allowed the user to enter titles/dates/etc rather than have some preloaded labels
i like coredata but have no strong feeling on it over others. at first i thought it was really complicated but it really isn't.
Thank you. I’d like to get a solid foundation of UIKit and Swift 4 first. I’ll switch to SwiftUi for sure once I’ve completed this course and built a couple things.
Great advice! Thank you
Thank you for the reassurance. I’ve got no plan to give up. Just needed to vent my frustrations and my wife or two year old can’t relate lol.
CoreData is extremely powerful in many cases and I tend to like it. Ray Wenderlich has some good Core Data tutorials and a book on it. I suggest checking him out.
Thank you for this suggestion I will look up Ray Wenderlich now
Oh ok , I see thank you for your input i will look more into CoreData
Realm for me. Easier to work with and more tutorials
I'm a huge fan of CoreData, and in general try to use first party frameworks over rolling my own or using third party frameworks. Realm has one primary advantage in that it has a simpler mental model, so it's easier to get your head around the basics like loading and saving data, but once you understand how CoreData's managed object context and predicates work you're in better shape for the real problems that face app developers (CoreData's concurrency support is much better than other solutions, but concurrency is hard, so it makes CoreData less approachable.) SQLite is probably great for people who love writing SQL queries, and probably simpler to use with Swift than it was with Objective-C ¯\\\_(ツ)\_/¯ but I feel like giving up CoreData's migration support is inviting a maintainability headache.
I usually pick Core Data because of two reasons. Obviously, the major advantage for Core Data is that it is Apple's preferred data framework across their platforms (even watchOS). The other reason is the ability to bring into memory exactly what you want "easily" (whether it be an entire graph of objects or a lazily built graph with faults). Core Data was best explained to me as a way to manage (various levels of) cached object graphs. Depending on your app/environment (e.g. how big is your data set and how many resources you have like memory), Core Data can be a good fit. &amp;#x200B; I used the [objc.io](https://objc.io) Core Data book ( [https://www.objc.io/books/core-data/](https://www.objc.io/books/core-data/) ) to get a grasp on Core Data. It explained some of the more complicated scenarios such as having multiple contexts. However, it's a bit dated now as there are better ways to do things (such as persistent history and simple properties like \`automaticallyMergesChangesFromParent\` which negate the need for most use cases of ...ContextDidSaveNotifications). I would still recommend the book if you want to learn Core Data as it discusses the fundamental concepts which have not changed. Then, watch the WWDC videos starting around 2016/2017 and see all the "easy mode" features that have made working with Core Data better. &amp;#x200B; Core Data isn't for every app, but for what it does, I find it to be more powerful and feature rich than competitors (at the expense of complexity). As a side note, if you use SQLite, you might want to look into the various wrappers like GRDB ( [https://github.com/groue/GRDB.swift](https://github.com/groue/GRDB.swift) ) which make working with SQLite easier.
It depends... CD and Realm have different idea. I choose CD for models with relationships and Realm when I need something like Document oriented model.
FYI, I would *not* recommend a cell layout like this because it’s not going to scale at all with larger text sizes.
Only the preview panel requires Catalina. Swiftui will still build under Mojave+Xcode11
XCTest is the best example for this. The test target has to support swift 3.0 (Xcode 8.2) if you want to run tests on macOS 10.11. If you don't want to put in work to run (UI) tests on older macOS versions then 10.14.3 is the earliest you can test. Which is a shame because even 10.12 has a lot of memory handling issues that are potentially really dangerous.
&gt; Unless i use Memberwise Initializers. So ... use the memberwise initializer?
I didn't see the answer in the existing comments but your problem is you are trying to use a `protocol` as a `Codable` struct. Change `protocol RideProtocol: Codeable {` to `struct RideProtocol: Codable {`. Now if you really want a protocol that identifies all of the fields in your `RideProtocol` struct you can create a separate one and then conform your struct to it via extension. Here I just fully fleshed out everything with stubs so there wouldn't be any errors for the missing `Waypoint` and `DriverProfile` structs. ```swift struct RidesResponse: Codable { var data: [Ride] var totalRides: Int } protocol RideProtocol { var plannedStartTime: Date { get set } var wayPoints: [Waypoint] { get set } var isCandidate: Bool { get set } var driver: DriverProfile? { get set } var id: Int { get set } } struct Waypoint: Codable { var id: Int } struct DriverProfile: Codable { var id: Int } struct Ride: Codable { var plannedStartTime: Date var wayPoints: [Waypoint] var isCandidate: Bool var driver: DriverProfile? var id: Int } extension Ride: RideProtocol {} ```
I think you might want to wait until it's actually released, and the platforms it requires are actually released.
You should slow down. The platforms for it aren’t even officially released yet to the public
I’m not a huge fan of Core Data. I’ve put a lot of effort in to learning it and still have a lot of problems. I was having lots of issues with data in my current app. Finally got frustrated, replaced it with Realm and had everything up and running and a lot more stable in just a few hours. That said, Realm has recently been bought out so who knows what is going to happen with it... I will probably give Core Data another try when I do a SwiftUI app. I think it will be easier to use in that context. Though I would love to see Apple give data the SwiftUI treatment and simplify it in general. The majority of the time, it just doesn’t need to be so complicated.
Apple actually suggests to prefer structs over classes: &gt; The additional capabilities that classes support come at the cost of increased complexity. As a general guideline, prefer structures because they’re easier to reason about, and use classes when they’re appropriate or necessary. In practice, this means most of the custom data types you define will be structures and enumerations. Check out this doc for a comparison of the two: https://docs.swift.org/swift-book/LanguageGuide/ClassesAndStructures.html As a general rule, Swift is more of a Protocol Oriented programming language, not Object Oriented. This means that Composition is preferred over Inheritance. There’s some great resources online about Protocol Oriented Programming in Swift - search around and you’ll find a lot!
If you get errors not in a YouTube video (assuming it’s up to date) then you have to assume your code is the problem. At which point you need to be comparing it to the video’s code to double check
FYI some information about the previous error. When you typed IndexPath, that is a class. You can’t pass a class to a function (unless you want to pass it as a type). The function is asking you to pass it an object of type IndexPath, which indexPath is of that is declared in the function signature.
Basically, you should default to Struct unless there’s a reason you need a Class.
Classes have very poor performance especially on apple platforms (due to the objc bridging). Most problems can be solved using protocols instead of inheritance.
thanks for sharing that resource. will definitely check it out
As a general rule, structs should be used everywhere and classes only when the object needs to have a Life Cycle. If that term doesn’t mean anything to you, an object life cycle is: 1. Object is Created (`init`) 2. Object is modified. 3. Object is deallocated (`dealloc`) At this point, you may be questioning me: **But I initialize structs all the time!?!** Structs are sometimes created with an init method, but most often, they are created by being implicitly copied. ``` var a = Foo(name: “Old Name”) var b = a a.name = “New Name” print(b.name) ``` If `Foo` is a class, a and b point to the same object so the output would be *New Name*. However, as a struct, the output is *Old Name*. It is worth noting that as a struct, `Foo.init(name: String)` gets called only once, but there are two separate instances. Moreover, there is no `dealloc` call. In practice, this means that your data entities should be structs, but anything that needs to be initialized or cleaned up after (like a Database handle or a View Model) should be a class.
Have you tried using more than one section? If you look at NSIndexPath, it's really a great way to structure data for access by section and row as indices. Here's a way to do it in a simple case. Structure your data so that it can sit in a dictionary. Each entry in that dictionary has a key and a dictionary as contents. Use the key of each dictionary as the section header. Create an array from the top level of the dictionary with the allKeys method. The # of sections in the tableView is the count of that array. You can do the same thing to get the count of elements within the row for a section. The final cell data should be fetched from the dictionary or object instance at that row and section. Now, you can have in line editing, but that's going to be pretty complicated. Each cell needs to know its own indexPath, because that directly relates to the position of the data within your data structure and once edited, the source needs to be updated and the tableViewRefreshed. This means each cell will need to find its reference and also notify the tableView class on certain actions. You're going to need to implement UITextFieldDelegates to handle the edit actions.
These have been an excellent series of blog posts on SwiftUI, looking forward for more.
It's indeed the way i wanted! thank you, however when i print sender.value, its showing 5 in the middle. Do you have any way to make it go 0 in the middle and negative on the left and right on the side? example: when sliding to the left, it will be a negative value and vice versa on the right
We can't tell anything because we can't see your code. Tell us the exact error message you're getting. Edit your post and add the code that's displaying the error.
I just updated it. I don't have any code yet. Xcode won't let me even access the variables within the class.
but that's how it's supposed to work.
I did two other projects and I was able to access all the variables while within the scope of the class though? Am I missing something? Right now I am unable to access any of the variables. I tried writing a new method within the class and was also unable to call it...
it's hard to see without the example of your code that works the way you say it does. it sounds to me like you declared them in global space.
I sure hope so!
Xcode 11 beta 3 does have the project for Object Detection. you provide it with the images and the json file describing the objects in the images. Haven't been able to play around with it much as I don't have a good example dataset to use right now.
So you have to provide the json file with the coordinates and what not? I'm hoping they have a full fledged tool that lets us draw boxes and polygons around objects in our images and then will create the model from that. Otherwise, I'm in the same boat I am in now.
as of right now I don't see a way to create the json by drawing on the images. I am in the same boat you are. I hope they add more to the utility as the betas progress.
I think this is a huge reason why I think machine learning hasn't really caught fire on iOS yet due to the fact that the tools and tutorials do not yet exist (or are very hard to find) which makes this process feel like your trying to do something that's never been done before.
I think you’re problem is in your expectations, not with the code. Code goes in Function. Functions and Properties go in Classes. For example: ``` class Example { // Class-level properties can go here var name: String var age: Int init(name: String, age: Int) { // Code can go here // self is used to distinguish between arguments and properties self.name = name self.age = age } // Code can’t go here func printIntro() { // Code can go here and Properties can be accessed print(“Hello /(name).”) } } // End of class declaration // Code CAN go here let me = Example(name: “Holly”, age: 36) me.printIntro() ```
Then I dont understand how this works? This is from my first project. // // ViewController.swift // calculatorApp // // Created by Scott Leonard on 3/22/19. // Copyright © 2019 Scott Leonard. All rights reserved. // import UIKit // sets current selected mode enum modes { case not_set case addition case subtraction case multiplication } class ViewController: UIViewController { @IBOutlet weak var mainLabel: UILabel! //variable declarations var labelString: String = "0", currentMode: modes = .not_set, savedNum: Int = 0, lastButtonWasMode: Bool = false, lastButtonwasEqual:Bool = false var currentValue: Int = 0, temp: Int = 0 override func viewDidLoad() { super.viewDidLoad() } //multiplication @IBAction func didPressMultiplication(_ sender: Any) { changeModes(.multiplication) } //subtraction @IBAction func didPressMinus(_ sender: Any){ changeModes(.subtraction) } //addition @IBAction func didPressPlus(_ sender: Any){ changeModes(.addition) } //EQUALS @IBAction func didPressEqual(_ sender: Any){ doMath() // lastButtonwasEqual = true } //CLEAR @IBAction func didPressClear(_ sender: Any){ changeModes(.not_set) } @IBAction func didPressNumberKey(_ sender: UIButton) { if lastButtonWasMode || lastButtonwasEqual { labelString = "0" let stringValue: String! = sender.titleLabel?.text labelString = labelString.appending(stringValue) updateText { (labelInt) in print(labelInt) } lastButtonWasMode = false lastButtonwasEqual = false } else { let stringValue: String! = sender.titleLabel?.text labelString = labelString.appending(stringValue) updateText { (labelInt) in print(labelInt) } lastButtonWasMode = false lastButtonwasEqual = false } }// end func didPressNumberKey func updateText(extractLabel:(Int)-&gt;Void){ guard let labelInt:Int = Int(labelString) else { return } //Captures Interger Value of LabelString extractLabel(labelInt) // adds commas for large numbers let numberFormated: NumberFormatter = NumberFormatter() numberFormated.numberStyle = .decimal let formattedNumber: NSNumber = NSNumber(value: labelInt) mainLabel.text = numberFormated.string(from: formattedNumber) }// End Func updateText // changes mode depending on selected enum mode func changeModes(_ newModes: modes){ // Checks if Last Button Was Mode if lastButtonWasMode {updateText { (labelInt) in labelString = String(labelInt) }}else{ if newModes == .not_set { savedNum = 0; lastButtonWasMode = false; labelString = "0";lastButtonwasEqual = false updateText { (labelInt) in print(labelInt) } }else{ currentMode = newModes updateText { (labelInt) in savedNum = labelInt } // labelString = "0" lastButtonWasMode = true } } }// End Func changeModes func doMath(){ print("This is saved number \(savedNum)") /* func currentValue(){ if lastButtonwasEqual {currentValue += savedNum; labelString = String(currentValue); mainLabel.text=labelString }else{ currentValue += savedNum labelString = String(currentValue) mainLabel.text = labelString } } */ if lastButtonwasEqual { switch currentMode { case .addition: currentValue += temp labelString = String(currentValue) mainLabel.text = labelString case .subtraction: currentValue -= temp labelString = String(currentValue) mainLabel.text = labelString case .multiplication: currentValue *= temp labelString = String(currentValue) mainLabel.text = labelString default: print(currentValue) } }else{ updateText { (labelInt) in currentValue = labelInt temp = labelInt print("This is current Label \(currentValue)") } switch currentMode { case .addition: currentValue += savedNum labelString = String(currentValue) mainLabel.text = labelString case .subtraction: currentValue = savedNum - currentValue labelString = String(currentValue) mainLabel.text = labelString case .multiplication: currentValue *= savedNum labelString = String(currentValue) mainLabel.text = labelString default: print(currentValue) } lastButtonwasEqual = true } } } // Class closure
Please fix your formatting. Use triple ticks `x3 to escape code.
I wouldn't subclass NSSlider, just keep a reference to each of them and in the action method compare the sender to figure out which one is being changed.
What does "unable" mean here? Is Xcode not letting you put the cursor there and type a line of source code? Is it a compile-time error? Is it a run-time error? Does it crash?
Looks like you’re just printing the index, or the location of the item in the collection that was clicked. To print the name, you’ll need to reach into the actual collection with that given index and pull out the name.
Like how? I am still new to swift
I *use* structs much more often than classes, and you probably do, too. Almost all literals (such as Int, Double, String, Array, and Dictionary), and the vast majority of the standard library, are structs. There are only a few classes in all the Swift stdlib, mostly related to raw memory access and key paths. I could use the class-based alternatives in Foundation, but there's no real benefit, unless you specifically need to interoperate with some Objective-C code, and many drawbacks.
And you can not release a product built on beta tools.
This just works transparently when using URLSession/URLSessionDataTasks. No need to resort to a third-party library.
Very cool. Thank you!
Thanks! Sure, more posts coming soon.
You're welcome!
Do you have a tutorial about modal presentation with SwiftUI. Sometimes it doesn´t work in my apps and I don´t have any clue why.
What exactly don't you understand? The class has functions &amp; properties, and the code is in functions in that snippet you posted, like /u/sgtholly said.
Not yet, but it's planned.
I'm posting the workaround I've found for posterity and the lost souls Mac developers out there. In my application, I'm using an "expanding scroll view" that always assumes the content size of its document view (the collection view, in this case). For this to work, my subclassed `NSCollectionView` would return its layouted content size as `intrinsicContentSize`. The crash was caused by *having called* the following line before updates are processed: // [self] is of type NSCollectionView let contentSize = collectionViewLayout?.collectionViewContentSize After further tests, I'm certain that the error in the internals of the collection view is caused by the `collectionViewContentSize` computed property above reading values `numberOfSections` and `numberOfItems(inSection:)`. Building a manual content size calculation methods *causes the same crash* when using these values — however, directly using the data source's equivalent methods prevents the fatal error without any side effects. TL;DR: The solution is to build a custom content size calculation function and using the `NSCollectionViewDataSource` methods `numberOfSections(in:)` and `collectionView(_:numberOfItemsInSection:)` instead of ever using the layout itself and collection view's exposed methods for counting its contents.
Sorry, everyone. I just learned something valuable. See, I am learning how to code. I just realized that if you're doing a UIKit the code has to be attached to an action. Code just wont run by itself unless it's at the very start of the app (view did load). &amp;#x200B; The reason I was confused was because all the other code I've practiced has been in playgrounds.
I second that, been going through your site and am learning so much. Thank you it’s such a phenomenal resource you have made!
As best as I can tell with the poor formatting, there are no issues with this code. The code goes in the functions. The functions are in the class. There is no where that doesn’t do this.
No, I figured out what I was misunderstanding. This is only my second project—I am use to using playgrounds to practice code. I just realized that when you are using UIKit everything has to be tied to an event. You cant just access variables and functions randomly like in playgrounds.
Hi 'use to using playgrounds to practice code. I just realized that when you are using UIKit everything has to be tied to an event. You cant just access variables and functions randomly like in playgrounds.', im DAD.
Are you sure you're using the latest version of the Swift Toolchain with SPM?
Ok that's a good solution, I also thought about tagging each and switching on the tag but I feel like that's a bit ambiguous when processing. As I went down the rabbit hole I was curious to see what solutions there are to subclass correctly while being able to initialise your super and include your own properties, it doesn't really matter much in this case but interesting none the less!
How can I generate new buttons on the screen, without hardcoding the variables etc for those buttons? As a first project I have a tally app, and I want the user to be able to add more tallies. So they click a + button, and a new counter appears. Can't seem to figure this out, any pointers in the right direction would be appreciated!
Awesome. Thanks!
You should use clothes[indexPath.item] just like you did for the label in the collectionview cellForItem function.
Probably the firebase library doesn’t know how to store CLLocation?
Interesting. I didn't think about that. Do you know how to teach it?
Break it down into a dictionary of [String: Double] with the lat and long and altitude (if you want)? But this means you need an initializer or function to convert back into CLLocation type.
I don't know, but I would imagine so, because the tool chain gets installed by Xcode right?
Judging by what you've just said, its probably at max, a weekends worth of work. Considering things you might change, or things you've forgotten about, its probably a week.
It should not cost much. Since there are some awesome projects on github like: [https://github.com/AppliKeySolutions/PandoraPlayer](https://github.com/AppliKeySolutions/PandoraPlayer) [https://github.com/bpolat/Music-Player](https://github.com/bpolat/Music-Player) &amp;#x200B; You can play around with source code and customize for your own need. Or hire someone to build from there.
What vero_o said.
I can do this for two grand. shoot me a pm
My first question would be, why not just use the built in music app? I’d say as a base, I’d budget for $100/hr. The app you described sounds pretty easy, but without a full requirements lists it’s hard to say how big it is. For example, do you want to be able to browse the library only, or would you expect to browse playlists, artists, albums, etc? Is building playlists a feature? Are you providing wireframes or design assets? Are you looking for custom animations? Is there a deadline? As a developer I’d be hesitant to give a flat rate price without specific requirements, and you should be hesitant of anyone giving you a flat price from only your high level description. In other words I’d want to have an inclusive list of features the app should have, so at the end of the project I can deliver something that is “done” because it checks all the boxes and doesn’t have any bugs. Otherwise I put myself in the position of the product owner saying things like “can you add one more thing” or “I just assumed it would also do _____”. It also puts you in a position where you could end up with what you consider a half finished product.
What benefits are there to running Swift on a server?
&gt;My first question would be, why not just use the built in music app? That is really a good question. I the preinstalled app daily. But I just wanted to have something I truly own for a long time, but couldn’t do it because I am not skilled at swift. &gt;I’d say as a base, I’d budget for $100/hr. The app you described sounds pretty easy, but without a full requirements lists it’s hard to say how big it is. For example, do you want to be able to browse the library only, or would you expect to browse playlists, artists, albums, etc.? Is building playlists a feature? Are you providing wireframes or design assets? Are you looking for custom animations? Is there a deadline? I would only want to browse individual mp3 songs only, no artists or albums. For example the app would display. 1. 21 questions 50 cent (song) 2. Some other track 3. And so on… And, when I tap the first track, the song would play and show the basic controls play/pause/forward/back. No other information. Maybe in the future I would expand the functionality of the app. &gt;As a developer I’d be hesitant to give a flat rate price without specific requirements, and you should be hesitant of anyone giving you a flat price from only your high level description. In other words I’d want to have an inclusive list of features the app should have, so at the end of the project I can deliver something that is “done” because it checks all the boxes and doesn’t have any bugs. Otherwise I put myself in the position of the product owner saying things like “can you add one more thing” or “I just assumed it would also do _____”. It also puts you in a position where you could end up with what you consider a half finished product. All the functionality I want for this app and project is. The app to list all the tracks that is installed in the Apple Music app. And when I tap the track/song, the song plays and the controls comes up like play/pause/forward/back. If I want to expand the functionality like adding artist’s information, I would start new project and negotiate as such.
In short, its a compiled/typed language so its inherently faster than any interpreted language (like js, or php).
Please write full requirements for the app . Nobody won't do it without requirements. There can be many issues afterwards..
Read something about wasting less CPU cycles on memory management than GC alternatives due to ARC, which equals cheaper hosting, also requires less memory. Can’t pull out numbers though.
You’re going to run into some issues with this project. Namely that what you want is quite simple and it’s hard to see the value in what you want. This means that experienced developers who could make this quickly assume their is either something they are missing or there is something you are missing. Particularly in that we can’t see how you could possibly recoup your investment in this app as it doesn’t seem to have anything that would cause somebody to buy this app over another. The devs that will take you up on it are likely to be inexperienced and/or just want a quick cash grab. If this is an app just for you, where you are willing to spend more than is usually considered reasonable to have an app that functions exactly how you want it - then you should definitely make it clear this isn’t an app you intend to sell. Spec out exactly what you want, how it differs from current apps (preferably with a why), and then you should have no problem finding an experienced dev willing to do this for relatively cheap.
You’re first supposed to be getting the location of the child from its parent. Then you can find it and store it for later use. Depending on the amount of children you plan on doing at once, you may need a pretty large van.
Is there a better way you’d suggest going about this kind of layout? I’d love to know!
Hmm.. as you mentioned, that sounds pretty complicated. I wonder if there’s an easier way to do this that wouldn’t require custom tableview cells
=&gt; code sharing between client and server =&gt; as mentioned arc gives you more deterministic performance that typical gc =&gt; suitable for both high level programing (oop, fp) and low level programing, including seamless bridging into C =&gt; good performance =&gt; low memory footprint
ARC unfortunately is not enough to make swift a particularly performant language. Don't pick swift to save computing resources.
1-2weeks, budget 500$ max.
Yeah, like I said we need some numbers.
It's not something that can easily be quantified fairly. Are you talking about idiomatic code or code that was deliberately written to be fast? What kind of tasks are you talking about? Here are [some numbers](https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/swift-gpp.html), but again their relevance to real-world scenarios is debatable. Swift is significantly slower in this benchmark for many tasks, and likely even slower if you take advantage of ergonomic features like map {} instead of a for loop.
I was referencing [this](https://medium.com/@rymcol/benchmarks-for-the-top-server-side-swift-frameworks-vs-node-js-24460cfe0beb) Swift frameworks are beating out Node in most things and since this is a quite old benchmark, I imagine things have gotten better with Swift 5
Can you explain what you want your code to do again? :)
So basically, the screen has 3 images and one button. Press the button, and one of the images is selected at random, then brought to the front (ie, animation stuff, which I can figure out actually). But in my code, the console does not print out the name of the image; it prints out the random numbers, which I think is the position of the image on my page. Thank you!
Yeah, but that's node. If swift couldn't beat JS that'd be ridiculous.
I don't think there is a reference to a name in UIImageView.
It's not indented
It's hard to tell from this snippet alone. Here's a suggestion to help you with your structure, go download this repo: [https://github.com/twostraws/HackingWithSwift](https://github.com/twostraws/HackingWithSwift) &amp;#x200B; Then look at Project 1 and Project 2. Run them and observe how he handles images in both cases. [https://www.hackingwithswift.com/read/1/overview](https://www.hackingwithswift.com/read/1/overview) [https://www.hackingwithswift.com/read/2/overview](https://www.hackingwithswift.com/read/2/overview) &amp;#x200B; Now, go through each of those two tutorials and see how to adapt them to your goal. &amp;#x200B; Hope that helps!
Maybe this is just a misprint but \[UImageView\] should be \[UIImageView\]?
&gt; a compiled/typed language so its inherently faster than any interpreted language .NET
C# is compiled into IL, by the c# compiler. AKA Compiled.
UIImages don't have a name, name is only used as part of the initializer. When you pass something to print, it will it will print out the objects `description` if it conforms to `CustomStringConvertible`. In this case UIImage conforms to `CustomStringConvertible` so it will print the memory address of the object and the size of the image.
At least, .NET includes garbage collector.
that's what i thought, but when i try printing UIImage i get something like this **Optional(&lt;UIImage:0x6000024719e0 named(photo1.jpg) {1080, 720}&gt;)** which i can split up and get the name.
Right and arc gives you more deterministic performance compared to typical gc as mentioned in other comments.
Thank you so much! I love hackingwithswift, I’ll definitely give this a look!
So do you suggest that instead of imageViews, I use 3 buttons on the screen to represent the 3 images? Meaning, set the image of the button as the 3 respective images, do you think that will help?
Are you running the beta by any chance? Or possibly have a library changing the description? On iOS 12 I get the following, which is formatted different than yours with the different `&gt;` position, missing `,` following it and no space between `UIImage` and the memory address. &lt;UIImage: 0x7fa618f99260&gt;, {152, 45.5}
hmm. i'm running beta. but let me try on xcode 10
If you are using Autolayout, in the outline view of the objects you can drag/drop to change their order in the list. This moves them front/back relative to the other objects in the list. Just move your button in front of whatever is on top of it now.
Why do you want to print out the name of the image? No one using your app will be able to see it.
Nobody won’t do it without requirements... Well that sentence def broke my brain
Good garbage collectors don't tend to be CPU heavy, and they can even use cycles on otherwise unused cores, as long as you're not CPU-bound already. Where RC excels is with memory usage. The fastest GCs require plenty of extra memory (these days, I've heard estimates in the 3x-4x range) to operate most efficiently.
Sorry but I'm not English... Tried as much as I could to explain...
No prob it’s a double (triple?) negative Nobody will do it without requirements is what we would say Yours sounds like “Nobody will not do it without requirements” which is where my brain gets a bit scrambled
There's nothing special about Swift that makes it optimal for server development, but it you like working with Swift it's a nice choice for server side. IMO, Swift strikes a nice balance between productivity and safety. The powerful type system eliminates some classes of issues you would have to write tests for in languages like Javascript, and you don't have to solve some of the low-level problems you do with something like Rust. Plus there's a lot of convenient things for the server side like C interop and automatic JSON serialization/deserialization. The main drawbacks are that the tooling feels a bit second-class on Linux, and it takes a bit of work to stay up to date with language versions (especially when it comes to dependency management).
Basically what I meant is - Just write your requirements and send it to developer. I was at work and typing quick. Didn't mean to write that shit. .
GC performance is typically not a factor when it comes to server-side programming. Modern GC is very performant. It might be a problem for something like a video game where you're churning through a ton of memory, and where 5 milliseconds actually makes a tangible difference. Even with old-school stop-the-world garbage collection, web-servers just aren't implemented in a way where it would make much difference these days. You don't have some large process which is holding on to a lot of memory, you have a cluster of processes which do fairly lean operations, like reading from a database, encoding some JSON and sending it out to an HTTP response.
Most people aren't running NodeJS/V8 on their servers, and JS is a pretty funky language to JIT, or GC. Of every language in the world, JS is the *last* one I'd pick to represent GC in a performance benchmark. How about JVM, CLR, BEAM, ART? How was this GC tuned? What about other frameworks, or other programs? How do we know this test is CPU-bound, or that the client is saturating the network link? That article shows 4 different Swift frameworks, all running on the same runtime, and their memory pressure varies from 2 MB to 250 MB. (They had to put 3 gaps in their chart just to put them all on the same axis.) Requests per second range from 1700 to 4100. Latency varies from 1ms to 11ms. How can you conclude anything at all about Swift performance in general from this, much less RC versus GC? All I get from this is that the particular software you're running is at least 5x to 10x more important than what underlying technology it uses.
If you are really interested in learning app development, don't give up yet, this is a really great project for a first app. To answer your question I'd say $300-500 is fair.
Still stuck in old Swift, but not sure what the first 4 lines does. Can you cast an array of UIImage to an array of UIImageView? &amp;#x200B; Also, the array.randomElement how is that linked to your imagesToChooseFrom? I am assuming you want it to reference that array to print the image?
you can't can't cast between the 2.
Are you OP @Te\_co? So the first few lines, do they work? Does the view actually show the images on the UIImageView?
Likely this: You’re assigning an array of UIImage to an array of UIImageView, which is a different type. Then you’re force unwrapping the UIImageView array which would cause a crash.
no i'm not the OP, but I don't need to be to know you can't cast UIImageView from UIImage. and the code doesn't work. UIImageView isn't even spelled right
Got it. My bad, didn't mean anything by asking if you were OP. Just wanted to clarify. Thanks!
Don't apologise, it's actually impressively complicated while being technically correct. Your (correct) English confused us native speakers 😁
UIKit shouldn't be interfering with your ability to use CoreData. Perhaps it's an architectural problem
Grammatical note: code is plural, so “I have coded this code” is a little more correct but “I have written this code” or “wrote this code” is even better. You “code” an app or a site, etc, and you “write code”.
Because making a mobile music player is such a simple project it is usually used as a tutorial. Check out this list of tutorials from a google search. https://www.google.com/search?q=ios+swift+tutoria+easy+music+player&amp;rlz=1CDGOYI_enUS838US838&amp;oq=ios+swift+tutoria+easy+music+player&amp;aqs=chrome..69i57.27122j0j9&amp;hl=en-US&amp;sourceid=chrome-mobile&amp;ie=UTF-8
We are still playing with a beta after all. Can’t imagine they’d leave this out for the final release, but file a Feedback report just in case if you haven’t already.
Anything with 16gb of ram should work
I meant, don’t do this at all. 2 labels side by side becomes annoying to deal with, 3 is not going to work at larger text sizes at all. Stack them vertically one on top of the other.
Do you want it to be a laptop? Are you working on large projects with many external dependencies? In general 16gb of ram and a quad core is the lowest I would go.
If you can swing it, make 32GB RAM the gating factor and see what you can afford around that. Right now that means a MacBook Pro 15”, Mac mini or iMac. Or if you wait until fall there’s a rumor that there’s a new 13” MacBook Pro coming out and that might be able to address 32GB RAM. If not, 16GB will work right now but no guarantees on how well that will work for Xcode 11, macOS 15 and the SwiftUI environment for devs.
The $6,000 cheese grater
Because Swift is a great statically typed language? My vapor services runs continously without interruptions for months at time without any runtime issue. Deployment with Docker is a breeze. I mean what else do you want to code your cloud side in instead anyway? Scala? Nodejs? Go?
I’d prefer a laptop
Given that most modern REST APIs use JSON as the data format I think Swift makes a lot of sense - being that the Codable protocol is part of the standard library. I work on a heavy cloud API data driven application (tvOS) and Codable has been pretty darn nice to work with. It can be a pain when the API designer uses properties named things "default" and "protocol" - but codingKeys is a decent work around. There is also a lot of boiler plate code when a value is say a Bool, but the API delivers it in JSON as a "y/n" String or even worse a "true/false" String... but that is just poor API design - though we don't always get to decide what APIs we use. Most parsers I know of are gonna have quite a bit of biolerplate code dealing with these types of exceptions. I also really like the way Swift uses enums. I think Swift enums is an often overlooked part of the language.
As opposed to running it on clients, or as opposed to using other languages on the server?
Yes, you can make a program do whatever you want.
This can (should) be done using Swift’s delegate protocol. There are quite a few tutorials out there that you can find with Google. Basically, at the same time you call the second VC from the first VC, you also set the first VC to be the delegate. This means it can receive messages/events from the second VC. When the user’s input is saved in the second VC, you trigger one of these events and include the data you want to send as a parameter. In the first VC you will have a function that executes in response to that event, which will do something useful with the data it receives. Note that this is similar but different from Swift’s Notifications, which are another way of doing this. But the delegate protocol is generally preferred for this type of thing, as I understand it.
I don't know about the slurping part but a Mac Pro with 28 cores, 1.5TB RAM, and full of Vegas will beat the pants off anything else. Get as many XDRs as you can fit on your desk. Getting the "best Mac" probably doesn't make any sense, but we don't know. You haven't said anything about what you're doing. "iOS development" tells us what platform it's for but not *what it is*.
Using that lib is a bad idea. Your sendgrid key will be exposed if it’s included in your app’s binary and anyone who can pull it out of the binary will be able to send emails using your account and run up a very large bill. Emails should always be sent from the server side
Oh OK good to know... so how do I send emails from the server side? I need to use Swift for my iOS app.
Hey all, I’m curious to know if anyone in this thread has completed Learn to Code 1, 2 and 3 and has had success from that pathway in becoming an app developer or working as a software developer for a company. I hear about it being a great learning pathway, but not much else about success stories. Thanks!
If you want to use Swift/Vapor on the server, [this book](https://store.raywenderlich.com/products/server-side-swift-with-vapor) is good and includes a SendGrid chapter. SendGrid's API can of course be used from other languages too.
A Google search for “UISearchController tutorial swift” will lead you to half a dozen good tutorials. I used the Ray Wenderlich one when I got started.
Hi! I looked at that one but it seems that it searches and shows results in the current tableview. I am trying to work out how to do this in a separate tableView on top of the current one as shown in the Notes App. Any ideas?
Ohhhh is this similar to the didSet closures? Such as updating a score variable automatically updates a score label?
As a non-programmer/lurker on this subreddit, I would argue in favor of getting a beefier Mac/MacBook, if only because you'll get a few more years of usability out of your system than otherwise. I would also wait until Apple is done with keynotes for the year; rumors are saying the MBP is getting updated, but who knows
Make up some data to fill in your table view. Have one variable contain all of your data then initialize another (this one we’ll modify) as equal to it. I’m not sure exactly how to get the text field to appear on a swipe down, but there’s probably a stack overflow post about that. Add an on change action from the text field and in that get the current text field text value and filter your data into that second variable. A filter iterates through an array or collection then returns a subset of that where you have some condition met. So you could say something like the data entry has to contain your search query. And have your table view code use the second variable for its data source.
Sorry if i'm misunderstanding but is this still using a single tableView?
If you want to do it exactly like notes then you can present a view controller containing a second table to hold the filtered data. The way I described would be just using the same table.
An initializer is used to set up an “instance” of a class. Basically give values to the variables in the class. For example: struct Person { var name: String var age: Int Init(name: String, age: Int) { self.name = name self.age = age } } let personA = Person(“Tom”, 27) The initializer sets the values for the variables in a structs and classes. It’s also worth mentioning that structs get an Initializer automatically and you don’t have to create and init method to set up the values. Classes however need their own custom init. I put a custom init in the struct above just for this example. Check out the developer docs if you want some more reading [Swift initializers](https://docs.swift.org/swift-book/LanguageGuide/Initialization.html)
to add to this. you don't need initializers if you class properties have default values. also a struct will only create default initializers if all of the properties do not have have default values.
Sorry if I didn’t make it clear. Of course you can design something like this, but how would I go about doing something like this. Has anyone done anything like this before and willing to share how they did it?
Yeah I say this also all the time too about it being a beta. It would very weird if this isn’t added in the final version
Look into the app TapForms.
What part of initializers? Do you know about classes and their instances yet?
I’m looking for something similar as well. I can’t seem to view the code
My teacher was great at explaining things like this those who did not understand. If I remember correctly he explained it like this: Image you have the class triangle which looks like this (keep in mind, classes are like blueprints, you use them to create objects (instances of a class)): &amp;#x200B; class triangle { var sideA = 10 var sideB = 20 var sideC = 30 &amp;#x200B; func exampleFunc() { //Do something } } Here no init is needed, since all the sides have default values. This is great if only instances of the triangle with this specific size are needed, but imagine you want 20 different sizes. You do not want to create 20 classes for this. Instead, you write an initializer: &amp;#x200B; class triangle { var sideA: Int var sideB: Int var sideC: Int &amp;#x200B; init(sideA: Int, sideB: Int, sideC: Int) { self.sideA = sideA self.sideB = sideB self.sideC = sideC } &amp;#x200B; func exampleFunc() { //Do something } } &amp;#x200B; This allows you to create instances of the triangle with different sizes, like: var triangleOne = triangle(sideA: 30, sideB: 40, sideC: 50) var triangleTwo = triangle(sideA: 60, sideB: 70, sideC: 80) etc. &amp;#x200B; All with just one class. If you wonder why inside the init **self**.sideA etc is used, that is because the parameters have the same name as the variables of the class. The **self** refers to the class itself, so you set the values of the object. Without it, swift would not know which sideA is you want to set. You could also change the (internal) parameter name to something like sideOne. That would make it possible to use sideA = sideOne.
Do you need to call it from swift?
// First load your framework void* fwHandle = dlopen("/path/to/your/libFoo.framework/libFoo", RTLD_NOW); if (fwHandle == NULL) { printf("Framework load failed: %s", dlerror()); return; } // Then get a reference to your function void* (*myfunc)(const char *msg) = dlsym(fwHandle, "myfunc"); ​ if (myfunc == NULL) { printf("Symbol lookup failed: %s", dlerror()); return; } ​ // Call it myfunc("bar"); dlclose(fwHandle);
Here is gist with sample code https://gist.github.com/deszip/9390eb29cbd5881f90efcb47d907d0dc
Post a link to medium, delete account :) “Encourages” to read the article.
We are loading this iOS Framework from another iOS Framework that is written in swift. We can add Obj-C classes to it if required. Also the framework contains both Cocoa classes as well as a few C API both of which need to be accessed.
Thanks for the snippet, but the framework also contains cocoa classes which we need to access. The consumer code is in swift.
Do you need to call C function or class methods?
Its a simple C function declared and defined like I mentioned in the initial post. Not C++ class. But the bundle also contains Objective-C classes that also has to be loaded. Right now, I am able to load the Obj-C classes using the NSBundle API, but no idea how to call the C function via the NSBundle. &amp;#x200B; I guess NSBundle also does dlopen under the hood, so anyway to do the rest of the stuff to load the obj-c classes?
Yes it’s using dyload Under the good. Try to load objc pet with nabundle and use code from my sample for c function
&gt; Its a simple C function It's* it's = it is or it has : /
OK thanks! I was also thinking about just using it with Node.js. I already setup Google Cloud Functions with that so I might as well use it for SendGrid.
Answered in comment at the root Level
I have a MacBook Air and a 2013 Mac. The latter is from 2013 and when I tried to install the Xcode on it, it goes at a real snail pace. I have not tried Xcode on the MacBook Air but I would strongly recommend you check with someone who has - I think I would go for one of the more powerful machines, the MacBook Pro. You are doing the right thing by asking other developers.
Also, are there any tutorials out there that can help me setup SendGrid With iOS? The SendGrid documentation has no details for developing with iOS.
...assuming you can find an iOS developer willing to work for minimum wage.
UISearchController can help you do exactly what you’re asking for.
Don't bother with random Youtube videos. Read the book from Apple. Or for general concepts like this, the Wikipedia article.
I wouldn’t use the idea of a life cycle to determine class vs strict since, as you pointed out, both have a life cycle. Rather only use a class when you either need inheritance that can’t be easily replicated via protocols or you need to share data without copying (reference semantics). For example, if you have a database object that can be written to and read from. You wouldn’t want to make a copy of that database in every place you use it so you should use reference semantics, which means you need a class. You could also use a pointer but they are discouraged in Swift since they easily lead to unmanaged memory issues.
I think we’re saying the same thing from different perspectives.
I’m clarifying what you’re saying because the concept of an object lifecycle applies to both struct and class. Using that term to differentiate between using the two can lead to confusion. Also, you use init methods quite a bit with structs. In fact, they can be even more important than with classes since a common pattern is to make your structs immutable by using let on all the properties. In those cases you can only set the properties through init methods.
I don’t know. You’d have to be careful because devices aren’t as secure as servers. If a hacker got your SendGrid key from the app they could send unlimited mail via your account.
I'm just not sure on how I can connect a SendGrid API to my iOS app. Do you think SMTP is a safe alternative?
No. Sending mail is best done from your server.
OK I’ll do my best to figure it out. Thanks for you help though!
I'm glad to hear it 🙂
Yeh the app needs a passcode cause it carries sensitive information not only about the user but about other things.
A Type (struct, class, or enum) is only a blueprint. You can think of it as the blueprint of a house. One can take the blueprints and create as many houses as they like from it. An initializer is the construction crew that takes in raw materials and builds each house.
Why do you have to dynamically load the framework? There is probably a better answer to your problem.
Why do you have to dynamically load the framework? There is probably a better answer to your problem.
Yes, you have a FILE, named Main.storyboard, as this is a file, it will appear in the project navigator, the label is just information inside that file...
Yes, instantiate, is creating a new instance... so your FirstViewController-A, instantiates the SecondViewController-A and then it navigates to this,, then you instantiate another FirstViewController-B which is different that the first one. you could acmes the first one, but that is not recommend, you should create a protocol, then a delegate variable in the SecondViewController-A pf type that protocol, then the FirstViewController-A should conform to that protocol and that way you can pass data.
Because I want to be able to load it on demand and unload it from memory after I am done with it and load a different framework. Basically, I am implementing a plugin pattern where only one plugin (framework) has be active at a time and each one will have a significant amount of memory usage when its active. So, I don't want to statically link all of them.
I would say your only issue may be apple acceptance on the store if it doesn’t provide enough of a difference from the website?
Possible, but I'll deal with that when we get there.. For now I'm jut wondering how to get my Broadcastify feed into the app, or if I need to setup my own Icecast stream or similar to make it happen.
Yes, but a struct doesn’t necessarily get created by an init call and will definitely not get a dealloc.
Read [this](https://docs.swift.org/swift-book/LanguageGuide/Initialization.html) (Swift docs) instead of YouTube videos.
It seems they changed the initialzer of AnyPublisher in Xcode 11 beta 3 so the one that you posted is not available. &amp;#x200B; public struct AnyPublisher&lt;Output, Failure&gt; where Failure : Error { /// Creates a type-erasing publisher to wrap the provided publisher. /// /// - Parameters: /// - publisher: A publisher to wrap with a type-eraser. @inlinable public init&lt;P&gt;(_ publisher: P) where Output == P.Output, Failure == P.Failure, P : Publisher }
Don’t know enough about swift to give you the specifics, but distances between coordinates is easily calculated using a Haversine formula. It’s not geospatially specific enough if you’re doing surveying or something like that, but it’s good enough for most things.
I learn best seeing quick snippets of code to demonstrate functionality. To my knowledge he did not do that in either of these posts so I just kind of skipped over them
I guess I am trying to figure out how to graphically update the left pane. I was having trouble with one of those labels returning as nil, I assume that is the problem. Either way, it is confusing the hell out of me why both sides are showing different storyboards. I at least want them to be up to date with each other...
I mean, it doesn't make any sense to me. If I put the code on the right side of the screen, all the IBConnections are there shown with their little dots next to them as if they are connected to the labels, but when you look at the storyboard in the left side of the screen, they show nothing: https://ibb.co/Ctsy0HQ
xcode is bugged. I got it working. https://stackoverflow.com/questions/27426340/storyboard-assistant-editor-stopped-showing-associated-file
I don't know the answer to your question, but any API exposed over HTTP can be used from an iOS device, so its a little strange to say "for iOS" specifically.
https://www.programmableweb.com/apis/directory
Web APIs aren't really iOS specific. Theres a whole load of APIs online you can find that do different things and give you different info. For example you can use the stripe API to handle payments and the dry codes api ([http://names.drycodes.com/](http://names.drycodes.com/)) to generate random names! All you need to do on your end from an iOS developer standpoint is to send the proper HTTP request to that API and handle the info accordingly. If you're new to HTTP requests, you can use something like Alamofire ([https://github.com/Alamofire/Alamofire](https://github.com/Alamofire/Alamofire)) to easily send the requests and retrieve the info from the API you wish to use :D enjoy
His posts just feels like part of a marketing strategy for his company/employer.
working on the latest iteration of [Voux](https://www.voux.rocks)! Should be exciting.
I show samples from real projects.
Where?
You have to link the @IBOutlet ivar property with the storyboard UI component.
In both articles
All the @IBOutlets are already linked. I did not have this issue in a previous version of my app this is an issue I just began to face.
&gt; I wonder if there’s an easier way to do this that wouldn’t require custom tableview cells No, it does. The big trick is dealing with the editable fields. One part of that is how I mentioned that you should structure your data to display in a form that is a mirror of the indexPath that will be displaying each cell. That way, it is a one to one relationship with the display of the data and the position of the data in its data structure. You can use a custom object for the content of the call with properties to match what you are displaying. The index of the cell *needs* to be index of your data within the data structure. One thing I added to my overly complicated solution was editable textField subclasses that validated the data and prevented empty data entry. Another thing is that the cell needs to know its own index. You can get this either by passing it to the cell on its creation or through `indexPathForSelectedRow`. https://developer.apple.com/documentation/uikit/uitableview/1615000-indexpathforselectedrow When you tap on a field in a cell, the tableview cell should scroll up so that it is visible on the screen while the keyboard displays. When editing stops in a cell, you do not want to immediately dismiss the keyboard because the user can tap in another field to edit. It gets tricky. Take this one step at a time, it's a lot of work, but you can get it.
No need for Alamofire for simple requests, learning URLSession and Codable/Decodable will be incredibly value in the long run. They are also native Apple APIs, so you don't need to add any third-party dependencies.
Youre totally right that will help in the long run! I was just trying to make it easier for him :)
APIs? Do you mean libraries?
So, what is happening is that some constraints are being shrinked by some other content with higher priority. Unless you build a wrapper (like a UIView as a container) around these labels, they won’t be affected the same. The problem is when they aren’t “ visually connected”, meaning that you want “replicate” the smallest UILabel shrink “ratio” throughout other labels that aren’t in this same container. What I suggest is to check functions that are triggered (probably “viewWillLayoutSubviews” or “updateViewConstraints”) whenever any of these labels has its constraint updated. What you need to be aware is that if any of those in your autolayout impact each other, you could probably trigger an infinite recursion - one triggering another endlessly if the math is messy or even the “delegate” function being misinterpreted/misused. Those are just assumptions, but they may worth something for you.
With the $1,000 stand, of course.
Makr your `didChange` a `PassthroughSubject&lt;Void, Never&gt;`. No reason for it to hold data that SwiftUI doesn’t use.
Did you edit the outlet or link at anytime? It’s a common mistake to have too many connections or incorrect connections to outlets when making those types of changes.
Appreciate the response. Will look into these ideas.
Sorry for the late reply, I was able to fix the issue using a different method.
How did you fix it? It’s always good to post the solution in case someone needs help later and comes across this post.
How does it not use the `stations`?
Yeah I don’t see them
I used an entirely different method. I re-coded everything. I fixed it by changing everything about it.
Are we really mastering anything when we still can't remove the separator lines? I feel like we're all slaves to the List.
Your View is reading the `stations` property from `StationsModel` not the data from inside the `PassthroughSubject`. SwiftUI only uses the events emitted from `didChange` to trigger UI updates, not the data inside the subject itself. This means you can refactor it to a `PassthroughSubject&lt;Void, Never&gt;` without and it’ll still work fine.
Thanks for the explanation. Now it makes a lot of sense of why I could hit “back” so many times and keep seeing the same two view controllers. I was able to set up a delegate variable and do what I needed using [this](https://www.hackingwithswift.com/example-code/system/how-to-pass-data-between-two-view-controllers), although I didn’t set any protocols. Is a protocol necessary for a reason I’m unaware of?
Just wanted to say thanks again! I found [this](https://www.hackingwithswift.com/example-code/system/how-to-pass-data-between-two-view-controllers) tutorial and was able to do what I needed setting up a delegate!
Yes, in this example, you put de delegate as type: ViewControllerA! but in real life that is overhead, "becase a variable in your view controllerB, is entirely the view controller A... and then if you want to replicate to more places its a lot, so you need protocols. and conform to them.
did you see my latest edit in my last replay? I put an example
New to Swift and working my way through the language guide. Currently trying out switch statements, but there's something I'm not understanding about where clauses in cases... given the following... let point = (-1, 1) switch point { case let (x, y) where x == y: print("On the line: x == y") case let (x, y) where x == -y: print("On the line: x == -y") // -8 == 8 ??? why did this case print? case let (x, y): print("Location: (\(x), \(y))") } -8 certainly does not equal 8?
Correct. Alamofile uses URLSession.
I used ScrollView with VStack to use as an alternative to List. It made removing the separators possible
Yea that's what I've been doing so far but it feels silly that you can't remove it in the proper List. I sure hope it will be addressed before the GM
I'm still to dive into swiftUI but isn't a delegate what you want?
Read Mike Ash's blog.
one option would be use closure
Have you tried creating a parent view and using that to manage the cardviews instead?
It is in a parent view, I could put the listener there like CardView().gesture etc but still I don’t know how to have a loop where after the touch ends to spawn another one then after it ends again spawn another one etc. how do you suggest I do the intended kind of recursive from a parent view?
How so?
i dont know about swiftUi but in uikit you just use closure like in cell you just make a closure and in tableview you just use that closure to get data
Well I think the best option in your case is creating the variable in the `SecondView` as well und passing it on when declaring the `SecondView` like this: `SecondView(var: yourVar)`
Create a @binding or @ObjectBinding in the second view where the property/object is created by the first view. Essentially it will enable the first view to re-render.
What about updating the model. Is .sink proper way?
UIKit is very different from SwiftUI !!!
Honestly, never thought about that. But you are right that's a limitation. I think there existing no clean workaround for this at the moment, hope that Apple will fix this..
Does it work with iPhone 7 / 8 simulator ? Could be some auto layout constraints issue
I have a question about structs: I was following a YouTube video about SwiftUI, and the guy (Paul Hudson) was explaining @State. This made me realise that functions in structs aren't able to modify their own members, and I was wondering why. Coming from the C++ world, I've never bothered with structs for much more than holding data, and so far with my Swift programming experience I've not stumbled upon this myself till now. My first thought was that this was for technical reasons, but a read around showed me that it's actually in the philosophy of the language to have struct members be immutable by default, and was wondering why this is the case?
Started "100 Days" and enjoying it. If there is better place to post minor comments re the course then please advise. Nits: in case PH ever has time to primp it up (doubtful) Day 3 Operators &amp; Conditions Summary: typo: exhaustive Day 4 Repeat Loops Test: Q4 print text is missing the word 'for' (I said 'nits') Q3, Q5, Q7,Q10, Q11, Q12 - Correct ... text has word Repeat twice ... repeat repeat ... From PH schedule I am convinced "Paul Hudson" is like "Nicolas Bourbaki" - a team :-) ...Ian.
Just checked. Also an issue with 7,8 but not as bad.
My guess would be that you might have set a fixed constant to the leading constraints / frame on your view
Without any examples of your code (or a screen recording) of whats going wrong, we can't help you very much
&gt;programming if you think it's spamming so you must visit our institute and tack a tour. i am sure your prospective will change.
I believe all I did to fix it was by getting rid of this command. let username = usernameTextField.text! And instead I just used, usernameTextField.text! In my line of code. Although I have no idea what I did to completely fix it. Sorry if this doesn’t work.
yeah, i was actually looking at his blog recently and saw that he has a series of books called the Complete Friday Q&amp;A that seems to be in line with what i'm looking for. are you familiar at all with them?
Could you create a array of models and bind the parent view to the array and an index to the current card showing. When a card animates off it increments the current card index which will trigger a new card render in the parent view.
You could just use .assign() as that is what your sink is doing.
Thanks for answering. The going to the right was an error in autoresizing. I have fixed that but still have an issue with images and labels scaling in terms of their space from the top and their size. I suspect somehow the margin at the top is absolute and not in %. I cleared the constraints and still have the issue. In the following link I have the constraints settings (pic 1 and 2 in the XS Max View and 3 and 4 in the 4s view). Can you spot anything that I'm missing? https://imgur.com/a/VTf1WjK
Until `.assign()` makes it into the betas, yes. Haven’t tried beta 3 yet.
I know how to get the event fine, but how could I actually make the new card render?
I don't think that relates to what I'm doing, I don't need to pass any information. What I already have the spot in my event where I need to instantiate a new view, all I need is to actually do that.
What do you mean? I don't want it to just re-render. What I tried was making a state var in the FirstView class and listening if it changes and if it does then spawn in a new SecondView(). However, I don't know how to change the variable even if I make it public static I can't access it from SecondView.
Doesn't assertNoFailure crash your app if there is no internet connection? Or only in debug mode?
You have to click "add constraints" after selecting which ones you want to add.
Instead of assertOnFailure you could use replaceError. Also not sure why you call cancel on your subscription immediately.
Had to Start learning swift because of the new job and the site that really helped me I would recommend you is: hackingwithswift .com. Learned so much from this guy
&gt; i dont know about swiftUi Perfect
assertionFailure should only crash it in debugmode, but not live app. But tryCatch is not out in beta yet so I used this. fatalError will stop in all app versions.
Oh I must have misunderstood that. Would it be possible for you to describe precisely what you want, the example you have given is pretty broad.
Your right, I should try replaceError, but I am more thinking that if webcall fails then I want the older data to live on. The cancel does not prevent the webcall. I used it because previously I was returning the datataskPublisher from the fetch().
In case you can't click the link, this is what my code looks like (following the instructions exactly!) &amp;#x200B; `import UIKit` `class RatingControl: UIStackView {` `// MARK: Initialisation` `override init(frame: CGRect) {` `super.init(frame: frame)` `setupButtons()` `}` `required init(coder: NSCoder) {` `super.init(coder: coder)` `setupButtons()` `}` `// MARK: Button Action` `func ratingButtonTapped(button: UIButton) {` `print("Button Pressed")` `}` `// MARK: Private Methods` `private func setupButtons()` `{` `// Create the button.` `let button = UIButton()` `button.backgroundColor = UIColor.red` `// Add constraints` `button.translatesAutoresizingMaskIntoConstraints = false` `button.heightAnchor.constraint(equalToConstant: 44.0).isActive = true` `button.widthAnchor.constraint(lessThanOrEqualToConstant: 44.0).isActive = true` `// Setup the button action` `button.addTarget(self, action:Selector(RatingControl.ratingButtonTapped(button:)), for: .touchUpInside)` `// Add the button to the stack.` `addArrangedSubview(button)` `}` `}`
What happens if you remove `RatingControl` from the `RatingControl.ratingButtonTapped(button:)` call? I feel like the `RatingControl` shouldn't be there and should be replaced with `self`.
I had a similar issue when I used a `ZStack` containing an `Image` that didn’t match the aspect ratio of the screen, with other content in front of that. While you can set an `Image` to `aspectFill()` and it will lay out correctly, it causes the parent (the `ZStack` in this case) to expand its frame to fit the full Image. So the other content is laid out in a frame over the image's frame. The fix was to use a `Rectangle()` and set its `background` to the `Image` which is set to `aspectFill()`. The rectangle fills the parent's frame and the image doesn’t push its frame size out.
`button.addTarget(self, action:Selector(self.ratingButtonTapped(button:)), for: .touchUpInside)` &amp;#x200B; writing this instead leads to an error which reads: &amp;#x200B; Cannot convert value of type '(UIButton) -&gt; ()' to expected argument type 'String'
That is why you need to re render in order to show the SecondView. Dont forget that the view is a struct which gets re-created on state change.
Oh! Ok, in your current example you have `Selector(self.ratingButtonTapped(button:))` and it should be `#selector(self.ratingButtonTapped(button:))` my bad I was thinking that what you wrote in OP was what you had and you still got the error The reason it's erroring is because `Selector.init()` can take a string argument to create a selector from so you'd have to provide it a string. You don't want to use that init because it's not safe, and most importantly, it's not scalable So just swap `Selector(self.ratingButtonTapped(button:))` for `#selector(ratingButtonTapped(button:))` and you should be fine.
hey! thanks for the fast reply. &amp;#x200B; I did what you said, and I now get this error: Argument of '#selector' refers to instance method 'ratingButtonTapped(button:)' that is not exposed to Objective-C Add '@objc' to expose this instance method to Objective-C &amp;#x200B; is this normal? As in, will I encounter times where I use Obj-C code in my swift code? Because that did help and almost solved my problems.
Yup that's normal. All that does is tell Swift to make that function available for both objective-c and swift. And it's specific to that function there because selectors are more of an objective-c concept than swift Because to my knowledge, selectors are basically a way to call *any* function just by providing a function (i think its called `performSelector`) a string. That's why you got that error you got earlier that was saying you need to provide a string. Because the old way allowed you to do something like `Selector("ratingButtonTapped(:)")` and that would've been enough to make `addTarget(_,action:,for:)` work So in short, just adding the `objc` attribute to the function will allow you to use something in both objective-c and swift which is a requirement for some elements in UIKit like UIButton. You don't have to add `objc` to all your functions tho and it's probably best you didn't. As you start writing more code you'll start figuring out which functions need it and which don't.
Thanks so much for the explanation too, really helpful! I have another question which is again I assume a difference between Swift 3 and 5(?) &amp;#x200B; When trying to pragmatically add constraints to my button, I have written this; `// Add constraints` `button.translatesAutoresizingMaskIntoConstraints = false` `button.heightAnchor.constraint(equalToConstant: 44.0).isActive = true` `button.widthAnchor.constraint(lessThanOrEqualToConstant: 44.0).isActive = true` &amp;#x200B; however whenI run the app, the button is not a square which is what the heigh and width anchors would suggest. According to the tutorial, when I press run, it should be a square shown up, however it's still a large(ish) rectangle.
I’m trying hard to resist the temptation to download the betas and play with all the new toys so I can finish my current project using good, old fashioned, UIKit. It’s an app the render LaTeX code into equations for attachment to e-mail, text messages, etc.
Maybe [NavigationViewStyle](https://developer.apple.com/documentation/swiftui/navigationviewstyle) will help?
I checked these but most of them are outdated. For some stupid reason, swift doesn't have backward-compatibility like Java does. I find beautiful app in GitHub, and once I cloned it, there is million errors that I have clue to fix it.
Thank you. Yeah, $3,000 is certainly too high when I thought about it. The problem I am currently having is that Swift for some reason doesn't support earlier versions, for example if I find a music app source code for swift 3, it impossible to migrate it to swift 4 or 5. Android is not like that, for some reason Java is more forgiving in that aspect; it doesn't matter if the source is 1.5 or 1.11, there is always some guy in stack overflow showing how to migrate it.
That is really fair price. Are you a professional iOS developer or a hobbiest? any portfolio?
&gt;You’re going to run into some issues with this project. Namely that what you want is quite simple and it’s hard to see the value in what you want. This means that experienced developers who could make this quickly assume their is either something they are missing or there is something you are missing. Particularly in that we can’t see how you could possibly recoup your investment in this app as it doesn’t seem to have anything that would cause somebody to buy this app over another. Yeah, for commercial purposes, this app is pretty much worthless. But I am trying to create this app for my own personal use, not for others to buy. I always wanted to create a simple music app but for some reason Swift is more difficult than Java, and for that reason, I can’t hack it. &gt;The devs that will take you up on it are likely to be inexperienced and/or just want a quick cash grab. I’d assume so. But ancillary to this, how do I assess the developers skills given my lack of Swift skills? Is there a way to tell which Swift developer is a professional or hobbiest? &gt;If this is an app just for you, where you are willing to spend more than is usually considered reasonable to have an app that functions exactly how you want it - then you should definitely make it clear this isn’t an app you intend to sell. Spec out exactly what you want, how it differs from current apps (preferably with a why), and then you should have no problem finding an experienced dev willing to do this for relatively cheap. If this is what you meant when you said “the music is not for commercial use” then you have a typo/language miscommunication. After posting this, and reading the replies and my PMs, I realized I overestimated the cost for such a simple app. The specs are simple, the app would list the songs in my library, and play it when the user tabs on it. That is all. I would have created it if I knew a little more Swift.
Thank for that valuable resource. I’ve cloned both repos, but the problem is that the code is written in Swift 3, and my xcode requires Swift 4. Do you know any guides migrating from Swift 3 to Swift 4? I especially like the second Repo.
Instantz is correct, based on your description. [Here is a video by Paul Hudson that explains it really nicely](https://youtu.be/stSB04C4iS4)
The button isn't a square but does the target action work? When you press the button it prints "Button Pressed"?
Then you could try a catch{} in which you return your old data. Be aware though that catch stops you from receiving anymore updates from your subscription. Weird that it still works with the cancel but you either assign it to the _ variable to ignore the returned cancellable or preferably assign it to a member field of type AnyCancellable so that cancel gets called automatically for you when the view gets removed.
It‘s definitely possible but I don’t think it is the correct way to get started with CoreML. What you are trying to accomplish ist very complex and requires you to have a lot of data beforehand to train you ML models with. That would mean gathering behavior data from users before you can do that. I would suggest you start by training an ML model to detect an animal in images. I know it hat nothing to do with the shopping app but it will get you started with CoreML. Check out [this](https://developer.apple.com/documentation/createml/creating_an_image_classifier_model) tutorial for that.
It looks like they are changing the background color, title label and the bottom separater line the achieve this transition. It shouldn’t be to hard to replicate. Fine tuning might be more work. L
Yes! It does print “Button Pressed”. I just had to add spacing either side in order to make them all square and uniform. Very confusing going from swift 3 tutorial doing it with swift 5.
I did. Thanks for that! I'll have to read up more on protocols. I was able to achieve what I needed by adding a delegate variable "weak var delegate: ViewController!" then calling the function from the first view controller from the second with delegate.functionname() . I also had to set the delegate with "vc.delegage = self" when instantiating the second view controller. Not sure if this is better/worse then setting a protocol or if it sets one on the back end.
You should have a Question class and an array of possible answers in it. And an array of all the Questions. Pass the current Question object to your VC so it knows what question it’s dealing with and what answers are possible, and so it can mark answers directly in the object as selected. Also, Swift and most modern languages don’t impose limits on your variable names. So anytime you have to explain what a variable’s name really means, that indicates you should have just given it a better, longer, name.
Thanks so much for your help. The project is showing here on Github: [https://github.com/sverrisson/Bensin](https://github.com/sverrisson/Bensin)
I don’t think you’ll be able to get it through a macOS app (because spotify doesn’t have any API for it). But you might try a Beta feature in their web API that returns the [user’s currently playing track](https://developer.spotify.com/documentation/web-api/reference/player/get-the-users-currently-playing-track/).
Assuming Spotify has AppleScript support for what you want to do, check out the AppleScriptObjC framework. This post was very helpful to me when I was getting started with it: https://forums.developer.apple.com/thread/104672
Try clearing constraints on the problematic label and reapplying the auto layout constraints ?
[https://imgur.com/a/Foc41dW](https://imgur.com/a/Foc41dW) &amp;#x200B; For the second repo, you can change Swift version in Build Settings tab for both target: Music Player and Music PlayerTests. On General tab, you should change Deployment Target that match your iPhone's version and give it Bundle Id and Display Name. &amp;#x200B; In PlayerViewController.swift, line 451, add @objc before update function so it can compile. &amp;#x200B; You can change demo music files in Settings &gt; music directory to yours. &amp;#x200B; Hope that helps :).
You can use a variable that will update every time the user selects a different answer. We can call that currentAns and have that be a string. When you click the next button in the buttonAction function you just append currentAns to selectedans and then do your segue.
I also recommend that you use camel case for naming your variables and also being a bit more descriptive, using selectedAnswers compared to selectedans is easier to read and better practice
[Point Free's](https://www.pointfree.co/) videos might be useful
Thank very much, sir. I really, really, appreciate your help. This worked perfectly. Are you a professional iOS dev or student? I want to thank you by either buying one of your apps or something. This worked!!!! If you have a website or something, please let me know, because I'd need to refine this app more and I'll need your help in the future. Thanks!
So i would help for free if i can. I'm full-stack web developer and learning Swift as a hobby :). You can learn Swift and hack the app from: https://www.hackingwithswift.com/read https://www.hackingwithswift.com/sixty
you can always ask the tableView for the indexPaths of visible rows, and from that you can infer whether the cell you want to make visible would be better moved some other way.
Thanks, I will check this out. What does it mean to be "full stack", is it like php, javascript, html all in one? Basically backend and frontend?
Yes, Full-stack prefer to both backend and frontend. So it can be go, java, kotlin, php, javascript ... for backend and html, css, javascript,... for frontend. &amp;#x200B; But you can use Swift as fullstack too. :D [https://github.com/swiftwebui/SwiftWebUI](https://github.com/swiftwebui/SwiftWebUI)
Wow, I didn't know that. Focusing only in Java blinded me on other awesome avenues of creating apps. Thank you.
Copying my comment from r/iOSProgramming: Add a method that generates the necessary reference type for interacting w/ the core data layer. **By the way**, once you create your Core Data entity, Xcode generates an \`NSManagedObject\` class automatically that you can use - see for yourself in the Data Model Inspector (next to the File Inspector). If you're loading from Core Data, extend your struct and add a convenience initializer that takes in the generated \`NSManagedObject\` class. If you're saving to Core Data, extend your struct and add a method that returns an object of the generated \`NSManagedObject\` class type.
OK thanks, this is not a bad idea. Do you know (and I assume), the first row listed will be at the top of its superView in the UI?
The smallest index in the returned array will be at the top (or higher - part of it will be visible) but the array is not returned in sorted order - you have to get the min index path from the returned array.
I use that or something like it when you want to edit contents within a cell.
Could you use immutable reference types instead?
ok thx
I have done that in class , thank you
I recommend using sourcery or just forking [this](https://github.com/Bouke/SwiftInitializerGenerator/) to generate stuff for you.
You forgot the link
omg. Added it [https://github.com/bitomule/CombineRealm](https://github.com/bitomule/CombineRealm)
Thanks! I got it working with an AppleScript but I was hoping for something more elegant
I might give this a try when I need to add more functionality. I couldn’t find any mac API either however it seems like there used to be one in the past
How do I disable a button in swift?
tried, but work. I think I know what is wrong. The images so some reason don't change in width when the screen size gets smaller. So that is where the problem is. I need to figure out how to fix that.
If you’ve clicked on the checkbox beside width and height it’ll lock the size of the image. So uncheck that and it’ll scale in size if that’s what you want.
I fiddled with it a bit, but I can't seem to figure it out. The documentation is not that clear imo. Do you know how to use NavigationViewStyle or .navigationViewStyel?
I’m really hoping they expose search controller. Almost every app uses the built in search controller from iOS 11
Why is there still a dependency on RxSwift? I would have thought thought Combine would eliminate the need for it.
button.isEnabled = false
Do you type this out within the curly brackets of the button ibaction itself? Because mine doesn’t show anything after “.”
if you're writing this inside the IBAction block make sure your sender is "UIBUtton" @IBAction func btnOkay(sender: UIButton){ // Observe that sender is declared as UIButton sender.isEnabled = false }
Thank you so much. I tried looking it up but most tutorials were kinda outdated, so yeah thanks again
Where’s the RxSwift dependency? I checked but can’t find it
There isn't. But the readme says that RxSwift is a dependency: &gt; This library depends on both RxSwift and RealmSwift 1.0+.
Shit, thanks! I’ll update it right now. Thanks!!
Updated!
The more I play with SwiftUI the more I found a missing functionality, but it's still in beta, so I keep my hope high.
Does anyone know how to undo this?
Try this ``` NavigationView { List { NavigationLink("Go to detail", destination: Text("New Detail")) }.navigationBarTitle("Master") }.navigationViewStyle(.stack) } ```
Thanks! I’ll try it when I get home
I see thanks, what exactly is the checkbox called. I looked in storyboard and couldn't see it.
https://i.imgur.com/P5q4v8w.jpg These are the checkboxes that lock the size of an object in storyboard. If you have those two checked it’ll lock the size of the object.
Hopefully SwiftUI is updated throughout the year with new API exposure instead of waiting to release SwiftUI 2.0 next summer.
Thanks so much! That makes sense. I'll give it a try.
ArKit 3 is improvements and additions to ArKit 2 Everything you learn will carry forward
Unfortunately it’s true, although it’s 7 days instead of 4.
Thank you for this information.
So not constraints and no height/width setting were on. When you say "Without autolayouts you’ll need to adjust each individual device by itself to check and confirm the positioning is as expected", how do you do that without the settings influencing each other. I can set the settings on 6S but then there are gaps at the end on the xs max.
Please feel free to open PR, I need help getting some docs up and adding tests.
It is all relevant, from ARKit1 to ARKit3 it is mostly about adding new features. That said, better first watch WWDC2019 videos on RealityKit integration and people occlusion in ARKit3 before doing the ARKit2 course just to be aware that some problems are already solved.
now supports* It supports. That's how it works in English.
Good read. I think you can omit the code that’s not changed in the code samples.
just copy the device support files from xcode 11 to xcode 10
In your Project Build Settings, you can specify the Swift version to compile with. It's under Swift Compiler-Language.
Are you using the simulator with the beta?
You can download the Swift 5.0 toolchain and set it under Xcode preferences
Is coaching a thing when learning a framework or language? If yes, have you ever had a coach?
That won’t work for Realm’s binary framework. You’ll need to rebuild it from source and use the .xcframework generated by `build.sh`. See the comments here: https://github.com/realm/realm-cocoa/issues/6163
Don’t know why you’re being downvoted, came here to say this. He doesn’t need Swift 5, he needs the devicesupport files. Source: that’s what I did to make it work for me.
That did the trick. Many thanks.
Needs an update for beta 3.
Struct containing structs sounds like a one-to-many relationship.
I tried deleting the derived data and cleaning the app which didn’t do anything. Any other suggestions?
What's in your main editor?
ForEach doesn't apply `+` it just render what inside under single root view (Behave like `Group`) You want something that combines those array into a single result view. I think `reduce` is what you need here. ``` texts.reduce(Text("")) { (result, nextString) in result + Text(nextString) } ```
It should be possible to use a different function that returns the combined `Text` and invoke that function inside the body.
New to Swift and working my way through the language guide. Currently trying out switch statements, but there's something I'm not understanding about where clauses in cases... given the following... import Foundation let point = (-8, 8) switch point { case let (x, y) where x == y: print("On the line: x == y") case let (x, y) where x == -y: print("On the line: x == -y") // -8 == 8 ??? why did this case print? case let (x, y): print("Location: (\(x), \(y))") } The second case is what prints... shouldn't the final case print instead?... -8 certainly does not equal 8?
Sometimes it happens sometimes it does not.
This is correct. The condition in the where clause is true so the case is matched. First match ends the switch even if multiple cases are matched. both x == y and -x == y conditions are true about (-8,8)
Wait that works? You are not using any iOS 13 specific binaries or the branch for realm?
Get Xcode 11 beta, deploy to an iOS 13 simulator from there. You can have both versions of Xcode installed.
Second case is x == -y Which matched -8 == -(8) this is about math, not the language itself.
I think the comparison operator in this context is still confusing me a bit... print(-8 == 8) // false print(8 == -8) // false How is a "true" reached given (-8, 8)?
Ah, of course! I can't believe I missed that, thank you for clearing that up!
Point (8,-8) when bound to (x,y) means x=8 and y=-8 so -x means -1*x = -8 and same goes for -y
[https://github.com/filsv/iPhoneOSDeviceSupport](https://github.com/filsv/iPhoneOSDeviceSupport)
Ok. Here’s how I’d do it if I want a background to stretch but a UIbutton to stay where I want it to be. I’d put a UIView on storyboard under the View and name it View container. Stretch it to cover all r corners and add auto layout constraints as 0 from all 4 corners. Add button UNDER View container so it can take reference to the container’s edges. Now the button will take reference to the new viewcontainer so that is centered within the container. I can see you write that it’s not behaving when you’re running the simulator. You can preview that from storyboard before simulation to be sure
You could try to call hideSeparator() method on the first cell.
What is this method called on? Does it delete the top and bottom separators or just the top?
I'm working on my resume. :|
You can achieve this effect by manipulating separatorInset property on the UITableViewCell within tableView(_:cellForRowAt:). The idea is that you make the separator view inset out of cell’s visible bounds. if indexPath.row == {your row number} { cell.separatorInset = UIEdgeInsets(top: 0, left: 0, bottom: 0, right: .greatestFiniteMagnitude) } I haven’t used it in a real app, so I would recommend playing with numbers until it perfectly works with safeArea tableView and on iPads. Sorry for my bad English, and I’m not on my computer, Unfortunately I couldn’t test it for you. Happy coding 🙂
This isn’t even apart of UIKit...
+1 to this, but checking against indexPath.row and indexPath.section instead. Or if indexPath == [0,0]. Not sure if greatest finite magnitude will work either, but you could fudge it with 10000 or something lol.
Hey there I checked the release notes but found nothing relevant for this tutorial ... can you give me a hint what you mean?
Great, thanks for your feedback!
Thank you, And you’re correct, he should be checking for both section and row, I made it this way because I thought in his example he wouldn’t have more than one section. I believe that .greatestFineMagnitude would works on all devices unless Apple delivers us with the new infinity width iPad 🤪. Am not sure, but adding a header might help with hiding the first separator and footer for the last. 🤨
Why, thanks for asking, Swiftapple! After a month-long hiatus, I'm anxious to get back into swift and app development. I'm hoping to continue working on my drawing-sharing app, where a user will draw stuff with a finger and be able to send the drawing to another user. The gimmick is that you can press 'play' to recreate the drawing from every single brush stroke in sequence. Essentially, I've got the replay down but I need to tighten up my drawing data storage in core data, and then I've got to learn how firebase works in order to setup a nice backend so that users can send drawing data to other users. It's a bunch of simple features that can be deceptively difficult to implement. But, as a side hobby it's something I really want to finish up.
10Mb is a ton of text data man. You do realize a character is 1 byte if ASCII in ASCII encoding and between 1-4 bytes if UTF-8? So at 1 byte per character you’re looking at about 10M characters to make that much data. If you’re string contains binary data, you would be better off pushing that into a different storage somewhere and referencing it with a URL or some other way. Which is going to make your class grow much more anyways to implement the necessary methods....
Posted this in your other thread but in case it interests readers here: Swift Strings are a value type (so implemented as a struct) but that struct contains a reference to a buffer which is allocated on the heap and contains the characters of the string. So whether you implement your code as a struct or class will make no difference as far as being limited by the size of the stack.
String will **always** be heap allocated. If Note is a struct instead of a class, this only means that the two *references* to strings can be stack allocated instead of heap allocated.
Yes. That is a valid use case. &amp;#x200B; Why? Because we already have a production Android version app ([https://wenote.me](https://wenote.me)) for quite some time. Some of users are using the app that way. They simply copy and paste the entire novel article into the note taking app.
Already commented on you other thread, but posting here for my friends over here. “Data size”? Nah, I don’t think it’s a wise idea to do. When choosing between [class vs struct] you’re compromising some key features and different behaviors implied by each one of them. A main key feature between class and struct is that the first is passed and assigned by reference but the later is passed and assigned by value. Which means that struct is copied each time you pass it to a function and any update applied into it would only affect the copy within the function’s body, And therefore all of its properties should be copied by value. Classes on the other hand would make your instance vulnerable to changes out of your watch scope. And another key feature that struct doesn’t offer is inheritance, (but you still get protocols that can be used to achieve somehow similar effect). In your situation here, and those very specific properties you can use struct with some caution here and there, And every thing will work fine. But in your app users can edit the note after saving them, therefore you need to pass the note instance back to the NoteEditorViewController, here you need to pass a reference of it rather than a copy. And at some point your app would offer the ability for more than one user to collaborate and have a shared note, then you will have to add a property that holds a list of the users, using a struct would generate a copy of each user instance each time you assign it or pass it to a function. This is when the by-value feature would start to hunt you. What’s about when you start offering a voice note, image note, and encrypted notes, here you need inheritance to ensure a clean and organized structure of your code. After all, my advice when you’re writing classes/structs is to have a full image of what the app architecture would look like, and better to have an actual drawing of it. And always have an overall idea of where you app is going, not only in the current version, but in feature versions as well. And would recommend reading further about the both of them, and read this article on apple’s website: Structures and Classes
When this happens I just option + click the file I want open to put it there. I find myself doing keyboard shortcuts more than relying on Automatic because you never know how it will behave
Do what koalasee said, or just turn off all separators, add your own to your custom table view cell, then hide it in celforrow
What are some intermediate to advanced level must-read Swift/iOS resources?
I am trying to build my first app. It's a simple note taking app however I'm building it using a blend of mostly o UICollectionView and a little bit of tableView. I'd like to populate the cells with the CoreData names I have saved. On my main controller which displays a collection of cells I am able to successfully fetch and see some names I've saved. When I click on my cell it animates to open a second full screen controller. On this second controller I have added my cell with the name as a header. However when I open it the nameLabel changes back to the placeholder text I entered. Now my question I hope is actually straightforward - on the cell controller should I replicate what I did on the main controller with the cellForItemAt, singleton and fetchRequest? I think it's because of the animation the nameLabel doesn't persist but I'm a bit lost where to go with this. &amp;#x200B; Will appreciate any clues, and I will also clarify what I need if what I wrote doesn't make sense :) Have a nice day!
I wouldn’t even know where to find 10Mb of text that I can copy on my iPhone, but that’s just me.
Hi! Thanks for the info, I just tried it and that code took off the 1st cells bottom separator. I am just trying to take the top off. Do you know if a tableView header has a separator? Is that what is causing that line?
Is there anyway to have an app that forces people to use the front facing camera (selfie), and disallows the usage of the back camera?
This wwdc talk covers this topic in great detail. https://developer.apple.com/videos/play/wwdc2016/416/
Oh, I’m so sorry! My mistake. Although UITableView header doesn’t add separator view, could it be that your using a UITableViewCell as a view for the header? if so, try using cell.contentView as view for header. If it doesn’t work, can you please post the code you use to create the cells and headers?
You're fine! I am just using a header on top of the prototype cells. I don't have a prototype cell for the header and it's not using a section header. I am using a '[tableHeaderView](https://developer.apple.com/documentation/uikit/uitableview/1614904-tableheaderview)'. I've added it in IB. Is there any more info/code that would be helpful?
Yeah now it’s working for me all of a sudden
Great to know. Thank you
Add a 1 Pixel UIView as a table view header. Simple but hacky
Try debugging it using the view debuting tool during runtime and try to figure out where is this separator is coming from (for example what is its superview) I will try to reproduce this behavior when I get to my computer later today! Have fun finding it, and update us. 🙂
That sounds like a wonderful project! I would like to learn more, how are you realizing the replay?
Try debugging it using the view debuting tool during runtime and try to figure out where is this separator is coming from (for example what is its superview) I will try to reproduce this behavior when I get to my computer later today! Have fun finding it, and update us. 🙂
AR Kit seems mostly useless until they ship glasses. Then its going to blow up. I suspect we may see glasses in '20 so I think its a good idea to learn ARKit now so you can sell some demo app for a buck (iBeer)
Okay, upon looking it seems like it's on the tableHeaderView. Just unsure how I could take it off since the headerView doesn't have a separatorInset property? I'll keep looking at it. Please keep me posted when you try and reproduce it and if you have any solutions. I really appreciate your help! :)
I am learning about SwiftUI by following some tutorials and the documentation. Can't wait to start using SwiftUI!
Do you use a grouped UITableView? I believe it adds some separators on the top of first cell and bottom of last cell. Can you update me?
Yep, Grouped.
You've given us nothing to go on.
No one?
So, I'm going through the App Development with Swift (iOS 12/Xcode 10 ed.) and I'm on the lab for 2.6 - Loops, and I'm stuck on exercise 5 part 1. &amp;#x200B; "Create a for-in loop that will loop through alphabet. Inside the loop, print every other letter by continuing to the next iteration if you are on a letter you do not wish to print. (Hint: You can use the modulo operator to only print even indexed characters)." &amp;#x200B; It starts you out with `let alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"` &amp;#x200B; I've gathered that it might help to turn this string into an array, but I'm lost on how I can use modulo to try and grab odd indexed characters out of the array. &amp;#x200B; Any thoughts? Thanks for the help!
Keep in mind that Strings and Arrays are structs. (full stop) It doesn't matter if you put them in a class or a struct, they themselves are structs and there's nothing you can do to change that. Assume that String and Array are designed such that they will not fail due to "out of stack memory". The decision between class and struct should be made entirely from logical considerations. Is identity important or does it make sense to compare their states? If the former is true then use `class` the latter means you should use a `struct`.
Oh! that's why this thing is happening, I wouldn't recommend removing it, since there is no public API to remove it, and its drawn from within the first cell. &amp;#x200B; First, You might change the UITableView style from grouped to plain, and customize it (tableView) to match your desired appearance. (You will be creating your custom header view). Do you use static cells or dynamic prototype? &amp;#x200B; Second you can remove the \_UITableViewCellSeparatorView manually on runtime by searching UITableViewCell subviews for views of this type and then check it's position (to determine if it's the top or the bottom one), and call removeFromSuperview upon the view you found. Unfortunately this might break when apple change its private API or separator behaviour. &amp;#x200B; Call this method inside `tableView(_:willDisplay:forRowAt:)` after checking that its the very first cell `indexPath.row == 0 &amp;&amp; indexPath.section == 0` &amp;#x200B; `func removeHeaderSeparatorView(forCell cell: UITableViewCell){` `for view in cell.subviews {` `if String(describing: cell).contains("CellSeparator") {` `if view.frame.origin.y == 0 &amp;&amp; view.frame.height &lt; 1.01 {` `// Hide first UITableViewCellSeparatorView` `view.isHidden = true //Hide` `}` `}` `}` `}` &amp;#x200B; Also this might hide the other separator displayed at the very bottom of the cell if your cell hight is zero. &amp;#x200B; I don't recommend this approach, Am also a designer, so I would love to give you an advice to make sure that this separator isn't missing your design goal. &amp;#x200B; Happy coding 🙂.
No need to convert to an array; you can iterate through a string literal. In this situation, if `someNum % 2 == 0` then we have an even number (i.e., no remainder) and the opposite (`!= 0`) would mean we have an odd number. So, it's just a matter of using the `enumerated` method to give us a number to work with (e.g., `index`) and which index you want to print (even or odd). If you want odd, it'd look something like... let alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" for (index, value) in alphabet.enumerated() { if (index % 2 != 0) { print(value) } }
Are you using the new iOS 13-only [PencilKit](https://developer.apple.com/videos/play/wwdc2019/221/) to store the stroke data?
Unnecessary commas in your title are unnecessary.
Oh, I feel stupid now. I totally just did not absorb that when I was reading the chapter. Quoted from the book: "“Since String is a collection type, it has a similar functionality to an array. You can use a for-in loop to iterate over each character in a String What if you need the index of each element in addition to its value? You can use the enumerated() method of an array or string to return a tuple containing both the index and the value of each item:” &amp;#x200B; `for (index, letter) in "ABCD".enumerated() {` `print("\(index): \(letter)")` `}` &amp;#x200B; Excerpt From: Apple Education. “App Development with Swift.” Apple Inc. - Education, 2019. Apple Books. [https://books.apple.com/us/book/app-development-with-swift/id1465002990](https://books.apple.com/us/book/app-development-with-swift/id1465002990) &amp;#x200B; Thanks for the answer/help!
10Mb is still a *lot* of text. It’s about the combined total of all five currently-published *A Song of Ice and Fire* novels. https://www.statista.com/statistics/707459/game-of-thrones-word-count/
I'm interested to hear how this changes if at all once you pop the new RAM in. Keep me posted?
Won't work at all? I heard you can use SwiftUI you just don't get the live previews
Yikes, thanks for the heads up
It's gotten a lot better, though I am not sure if it was the ram upgrade or the newer betas as they happened around the same time. Still get the occasional spinner but nothing like it was.
Finals are starting to wrap up and I think I might just bite the bullet and do it. Maybe I'll wait for the nest update to the public beta
I haven't tried this on macOS but judging from how it is working for me in a dead-simple test project on iPad and iPhone, the feature isn't finished yet. &amp;#x200B; Setting the style to .stack, on iPad and iPhone I get the expected single-column functionality. MasterView wrapped in NavigationView, pushed the DetailView onto the stack, etc. &amp;#x200B; Setting the style to .doubleColumn: \- On iPad, I get the expected result on iPad in landscape. On iPad in portrait, I see the MasterView, not wrapped in the NavigationView and thus won't navigate even though the list items are enabled, not disabled like they usually are when not in a NavigationView. \- On iPhone, I get the single-column .stack style in portrait, working correctly. In landscape, I see the MasterView, not wrapped in the NavigationView and thus won't navigate even though the list items are enabled, not disabled like they usually are when not in a NavigationView. &amp;#x200B; Fingers crossed for beta4...
It’s completely overkill but you can use a custom flow layout in a collection view which allows you to specify your own decoration views (dividers). You can then specify that you don’t want dividers for the first cell. I’m not sure if table views have the same api when it comes to layout but obviously all the same stuff can be done with a collection view
yeah i should’ve been more clear my bad you’re right, everything except the live preview will work
There's no time like the present to fix a bug. Fix it now.
No worries, appreciate the info
Hacking with Swift is a great place to start if you are completely new to SwiftUI: [https://www.hackingwithswift.com/quick-start/swiftui](https://www.hackingwithswift.com/quick-start/swiftui) Apple's own tutorials are also a great way to learn by making a real app with SwiftUI: [https://developer.apple.com/tutorials/swiftui/tutorials](https://developer.apple.com/tutorials/swiftui/tutorials)
I’ve learnt a great deal through Apple’s tutorials which guide you through making an entire app utilising swiftUI. The images and text are together very descriptive and easy to understand, definitely worth checking out. Here’s the first part: https://developer.apple.com/tutorials/swiftui/creating-and-combining-views
As others have said the tutorials that apple as provided are actually really good. In terms of swift ui, it is my dream ui framework. Having a development environment that gives real-time feedback is by far the feature that is most important to me (which is something that c# has failed to do). Now that I finally have it, I have no plans of ever going back to web development. I also love the fact that apple has paid attention to how modern GUIs are built. Composable reactive programming is a huge improvement for large apps over mvc and it seems to be a great fit for mobile as well.
The problem is that it’s numbers, and hard-coded number values can be treated as any numeric type (Int, Double, etc). So, the compiler is dealing with a combinatorial explosion of what the actual type of each of those arrays is, and gives up. And, frankly, this is an area not worth optimizing because it’s a pathological case and real world code doesn’t do things like that.
ML guy love to this shit
In real code you either provide a single array of seven hardcoded values, or you concatenate array variables whose type is already known from when they were defined, either of which avoids this problem.
It was a joke
It certainly is an improvement from the previous method.
I think it is an anti-pattern of sorts. Having class references seems to destroy the best things about structs - immutability and thread safety.
&gt; ML guy love to this shit Please translate to English.
This will be solved by Swift 5.1: [https://forums.swift.org/t/pitch-property-delegates/21895](https://forums.swift.org/t/pitch-property-delegates/21895) @propertyDelegate stuct Copying&lt;Value: NSCopying&gt; { private var _value: Value init(initialValue value: Value) { // Copy the value on initialization. self._value = value.copy() as! Value } var value: Value { get { return _value } set { // Copy the value on reassignment. _value = newValue().copy() as! Value } } }
Having a struct hold a mutable class is against the spirit of the type, but if the class is immutable, then it would be fine. Note that even in that case, your struct is problematic. ``` var note = Note() note.body = "hello" assert(note.body == note.bodyAsRichText?.string) note.body = "goodby" assert(note.body == note.bodyAsRichText?.string) ``` I'm going to guess that you want both asserts to succeed, but they don't. Here is a working example: ``` struct Note { var body: String = "" { didSet { cachedBodyAsRichText = nil } } var bodyAsRichText: NSAttributedString { mutating get { cachedBodyAsRichText = generateRichText(body: body) return cachedBodyAsRichText!.copy() as! NSAttributedString } } private var cachedBodyAsRichText: NSAttributedString? = nil } ``` Note that the above fixes both the problem I pointed out and your initial worry. They will only use the same object if/when they have the same value anyway. Another comment about your code: Don't use `String?` unless there is a strong distinction between an empty String and a non-existent String. Same goes for arrays and dictionaries.
Swift is weak
 // let a:[Int] = [1] + [2] + [3] + [4] + [5] + [6] + [7] // Halts with an Error I believe it's with the implementation of the `static func +` operator. The compiler had too many cases to match with. And stupid things like above is very unlikely, during day to day usage. That said, let's test the theory. == struct FunnyInts { var values: [Int] = [] init(values: [Int]) { self.values = values } } extension FunnyInts { static func +(lhs: FunnyInts, rhs: FunnyInts) -&gt; FunnyInts { var lhsCopy = lhs.values lhsCopy.append(contentsOf: rhs.values) return FunnyInts(values: lhsCopy) } } extension FunnyInts: CustomStringConvertible { var description: String { return values.description } } let a: FunnyInts = FunnyInts(values: [1]) + FunnyInts(values: [2]) + FunnyInts(values: [3]) + FunnyInts(values: [4]) + FunnyInts(values: [5]) + FunnyInts(values: [6]) + FunnyInts(values: [7]) + FunnyInts(values: [8]) print(a) // Prints [1, 2, 3, 4, 5, 6, 7, 8] Array literal additional is legal, but why through...
IHMO, stupid code should get a stupid answer from the compiler.
Is there a way to code on Swift using my iPad or can I only do it on my computer? Thanks :)
I was just trolling. I love swift. It's so good I get a bit teary thinking about it. With xcode's autocomplete the experience of coding is unbelievable.
&gt;stupid code ? It's valid code.
really? Thanks maibrl, you made my day :D The replay takes advantage of the way I've coded each brushstroke to appear on-screen. Each brush stroke is rendered from a sequence of user touch points, and the color chosen at that specific time. To play back the brush strokes, I simply have to loop through the 2-d array containing all the user touch points that describe a drawing, and re-render the brush strokes one by one. The fun part is adding in more features to a brush stroke: I've coded width so that each brush stroke's width will follow the velocity of the finger swipe. Swipe quickly, for example, to draw a thin brushstroke, and slowly to draw a thick brushstroke. The hard part is how to store an encapsulated version of a brush stroke into core data, without any hideous bugs that crash the app every time I try to reload a drawing.
No one say it can't be both valid and stupid.
Forgot to mention: Not setting it on iOS results in it working the same same setting to .doubleColumn on iPad but on a Xr or XS Max, not setting it results in the expected single-column stack in portrait mode (horizontalWidth compact) but nothing at all in landscape (where the phones are horizontalWidth regular). So at this point, I have to use the .stack setting until beta 4 (or beyond?)
I keep working on [FreelanceStation](https://ds9soft.com/FreelanceStation/) towards version 1.2. I’ve been working on it for 2 years now, launched in June and I’m iterating fast to please my clients (and myself too).
Someone has prob already stolen your code and is rebranding it for an app store upload btw
I’ve heard using the plus operator on arrays tends to really hurt compile time even when it will compile. I imagine it’s better to use the join operator on an array of arrays.
I don't care. Every time I post open source code someone thinks they're being clever by saying "someone's going to steal your code!" It's literally not stealing because I'm giving the code away. Sure, if they don't open source it, they're breaking the license, but really... who cares? I also have another app on the app store, Numu Tracker, that's fully open source (and free), and even the API could be used by anyone to make their own app running on it (stealing bandwidth/hosting costs)! Not a concern to me at all. To put a finer point on it, they don't need to steal my code to steal my ideas. Look at Pandemic 2.5, someone with more money than the independent dev who made it paid some devs to make a better looking version of the same game, and called it Plague Inc, and it's been on the top of the app store chart for YEARS now, and the Pandemic 2.5 dev gets nothing and has faded into obscurity. It doesn't matter if it's open source or not, people steal ideas.
Having already been through "Swift in Sixty Seconds" you'd think the first twelve days of "100 Days Of Swift" would be a doddle - but in fact they were very helpful in cementing in Swift basics. I am up to day 9, but expect this to continue for the next four days worth. I was surprised and delighted with the little tests accompanying each video; PH's occasional trick question are most annoying but, on reflection, very useful in training oneself to almost unconsciously notice when something isn't right - when 'let' is used instead of 'var' - of course long time familiarity with JavaScript doesn't help here :-) And another difficult one is forgetting to prefix with 'var' or 'let' if one has decades of PHP to overcome. The toughest part by far - and PH knows it - is "closures". I've got by with JQuery for years by just copying the examples without any strong feeling of why it worked. But Swift closures - they have gone to town on that. I am convinced that PH's calm and optimistic tone makes the subject much less daunting than it is if you try to grapple with closures by yourself and come from experience with languages that don't have functions as first class objects or have added them as a (somewhat clumsy) afterthought. But 'trailing closure shorthand'! Now, thanks to PH showing how you can mentally reassemble them back to the fully spelled-out closure syntax, they become much more understandable. I did get a deja-vu, when talking about closures and shorthands, of an old article doing the rounds where some smarty-pants (in C++ I think) overloaded the space character to the point where his (or her) entire program could be written by typing one single space character.
So when someone steals it at least you know they had to put in the work to remake it
Did anything come of this - are there no other active Reddit participants in "100 Days Of Swift"? ...Ian.
Set the imageView constraints to be 2 pixels from the top of the cell, 2 from the botton and 4 from the left. Make the height = the cell height - 4. Set the imageMode to aspectFit. You do know that there already is an image property in regular tableViewCells, right? Have you tried that?
I’m still not sure why that should matter to me, and why I’m being downvoted for saying so.
Nothing snarky just calling out a dumb move when i see one
Thanks for calling me dumb by trying to share my code with the community.
I wanted to get started learning SwiftUI so I started following this tutorial from Brian Advent: [SwiftUI Tutorial](https://www.youtube.com/watch?v=Xetrbmnszjc) &amp;#x200B; I followed it to the T and went over it again and again and it's still not working right. &amp;#x200B; The tutorial is only a week or two old and according to my Xcode there's already a deprecation? (NavigationButton is now NavigationLink?) &amp;#x200B; The app just acts erratically and there is no logical reason I can see that's causing it. ScrollView doesn't scroll, items are not tappable, only their category markers, which for some reason tries to pull up 3 detail views and then settles on 1, and within those the tappable area includes the entire VStack and not just the button. &amp;#x200B; But what's really funky is all of a sudden the images stopped loading on the home screen and just show up as blue. I CANNOT figure out what the hell happened to change that because it worked on an initial build. &amp;#x200B; Maybe someone can answer this for me: Do I need to be running the Catalina Beta for Xcode 11 to be working properly? I know there's certain features that require it but what about compiling the app? Is this why I'm getting totally different results than the tutorial?
I waited til I was at my Mac to respond so I’d get the shortcut right. My primary way now is to do CMD + SHIFT + O This opens a quick menu and I search the name of the class and then I hit OPTION + ENTER and this opens whatever class I want in the right panel. If you want to open it in the left panel just hit enter.
It is totally different. But if you need to support earlier versions of iOS or maintain legacy code, you will need UIKit.
Thanks for sharing the code! Checking Open source Projekts helped a lot when I started programming.
Generally no. But in your case, it is.
Thanks for telling me on using immutable class. &amp;#x200B; I was wondering, for a case which doesn't have immutable equivalent, what should be the solution? &amp;#x200B; I wish I can avoid String? . But, we need to deal with data exchange from an Android app, which null is allowable.
&gt;didSet Besides introducing didSet and replacing NSMutableAttributedString with NSAttributedString, what else steps we can take, to improve the code?
Do you came across any good written article, which talks about this?
Nope, just a personal opinion.
By the way, may I know why copy is required, if cachedBodyAsRichText is immutable?
It’s still not clear how stable and feature complete SwiftUI will be in the next 12 months. I use it daily at the moment for prototyping a complex app and there are things that still require UIKit, not to mention the error messages are close to random and some features are unpredictable (multiline text) or absent, but it’s early days. The app is being written in UIKit but I give the developers the most of the spec in SwiftUI so I know how it looks and feels. If you want to make sure you can ship an app across multiple iOS versions in the next 6 or so months then UIKit is the way. If it’s a longer term project for iOS 13 that fits into a pretty standard app UX model then started with SwiftUI.
Structs are not immutable. Having reference fields is fine, as long as you treat them as such, as with anything else.
&gt; Having a struct hold a mutable class is against the spirit of the type Why? If the struct is mutable, what’s the problem?
In order to run the SwiftUI simulator, the Catalina beta is required. If you are running it straight on a iOS 13 beta device, it should be okay I believe even without Catalina, but I haven’t tried it.
Just convert to a class. Having mutating get in thins kind of type is a red flag for me.
Can’t confirm but isn’t that cause to new scenedelegate code in beta 3? Try creating new project/Target and copy new scene delegate code to yours
Hi, I’ve written a tutorial on medium about it that can help you get started : https://link.medium.com/KYZWSrlq9X Also you can check my full simple project on my Github that illustrate the tutorial : https://github.com/bpisano/Weather Hope it will helps you ! I really had fun writing it.
I think you can just add a property observer to your state variable @State var foo: Double { didSet { } }
UIKit can do everything you can do on SwiftUI, but not the other way round. It would do more good than harm to learn UIKit. SwiftUI still in beta and is quite buggy right now. I think it needs another year until we can adopt it.
I (and a Friend) am working on a large refactor of our app [Mia - The Kodi Remote](https://apps.apple.com/nl/app/mia-the-kodi-remote/id1315790378?l=en) to support the iPad while the design was not originally made for it. It’s a challenge, but quite fun!
OP, I haven't done any development on XCode; mind sharing the differences between XCode and SwiftUI?
sorry for delay in reply. I thinks, it was an issue with the Mask 🙈
allow for what? &amp;#x200B; you can't make an app that interacts with the behaviour of other apps. every app runs in a sandbox, so there is no way your app can force camera usage of other apps or the operating system.
Found an even better guide [here](https://www.reddit.com/r/swift/comments/caj7mm/deep_dive_into_recursion_in_swift/?utm_source=share&amp;utm_medium=ios_app)
Okay, I'll look at all this. THANKS SO MUCH!!
To clarify i am calling what you have done dumb, not you. There is a large distinction
Got me. LOL 😂
Reached the end of the first twelve days - which matches the content of "Swift in Sixty Seconds". However, there's quite a lot of material to be gleaned from doing the associated tests and I persevered until I could answer them all correctly.
I tried to use a navigation link on the navigation bar, and it also didn’t work. Maybe I should be using a different component there but idk
Obligatory recursion joke. Well done.
Xcode is the IDE. SwiftUI is an alternative for UIKit (and the macOS equivalent)
Luke from [Skafos.ai](https://Skafos.ai) here - we'd be happy to help you out - reach out to us on our Slack channel or via [info@skafos.ai](mailto:info@skafos.ai). Fire it up!
If this is too high-level for you, you may need a Deep Dive into Deep Dive into Recursion in Swift
Thanks. I removed the label to make everything cleaner. I got it to work by making width constraints/aspect view. I then linked the consecutive images with horizontal spacing. My only issue is now the spaces between lines is bigger on the smaller screens. Do you know why this might be? The bottom in this link is xs and the top 6s: [https://imgur.com/a/PIxhLE0](https://imgur.com/a/PIxhLE0) My code for height has always been: **override** **func** tableView(**\_** tableView: UITableView, heightForRowAt indexPath: IndexPath) -&gt; CGFloat { **return** 62 }
The normal way to do it is to assign the search controller to your view controllers `navigationItem.searchController`.
&gt;Assume that String and Array are designed such that they will not fail due to "out of stack memory" While this is true, it still leaves people feeling skeptical. It's best to completely dispel it by making it clear that String/Array/etc. *do not store their contents on the stack*.
It might be a valid use-case, but `String` is the wrong data structure for it. Both in Java and in Swift. Strings are designed to shuttle around bits of text. They are *not* optimized for fast editing, rearranging, and other operations one would frequently do in a text editor. Supposing that your user has 10 MB of text for some reason, typing in a single character at the start would probably take 10s if not 100s of milliseconds of latency. If you're having performance issues (which I suspect you will), I would suggest looking into data-structures designs for live text editors, like a [Rope](https://en.wikipedia.org/wiki/Rope_(data_structure)
Yet I've never used recursion inside my app...
Why are you adding the search bar as a table view header? The `navigationItem` has a `searchController` field. You set that to your search controller and let the API take care of all the presentation natively.
Why wouldn’t you use the `navigationItem`? Apple strongly suggests using built in functionality over writing it yourself. I’d suggest the same. You want to have a consistent look and feel to Apple apps. This breaks a user experience rule that will make your app feel unfamiliar to users.
:-)
Spritekit is 2d, scenekit is 3d, So it depends what you want to make. I dont think it matters which framework you start off to learn swift with as long as it interests you. I say its better to learn by doing a project you want to do rather than by building some weather app. I started by making a game in scenekit and its been fun.
try it in `viewDidAppear()` method. &amp;#x200B; [https://developer.apple.com/documentation/uikit/uiviewcontroller/1621423-viewdidappear](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621423-viewdidappear)
Oof. I needed to hear this. I didn’t realize we couldn’t count on SwiftUI for another year or so. That’s a shame because I think in the end it will be far superior to UIKit.
Unless it's an internal app and your company enforces iOS updates, you probably don't want to use SwiftUI until iOS14.
Yes
It would be suicide for you to start app in SwiftUI now. Wait at least a year or do it in UIKit.
Wait, don't get lured by fancy interaction out there.
If I were you, I would \*at least\* wait until SwiftUI is out of beta, since the API is still changing between releases, and keeping up can be a headache.
Do you know any good Sprite or Scene books or website who could teach?
i only watched one course on scenekit on [lynda.com](https://lynda.com). it was helpful to get acquainted with the framework. i didn't follow along, just watched. I also watched the one on gameplaykit, which I found utterly confusing. but now i'm going back to implement it on the game i built and it makes more sense in practice. other than that, just the documentation on apple's website. if you rather learn by example, then definitely go with spritekit because there is very little scenekit examples out there. also i just happen to have lynda account, i don't know how it compares to other sites.
Generally, one strategy to get around reference semantics in structs is called "Copy on write", which is something that Apple has talked about before at WWDC -&gt; (WWDC 2015, Session 414: Building Better Apps with Value Types in Swift) If you have the time to watch that part of the session, I think it'll clear up a lot of questions for you. This behaviour is what is codified in the \`Copying\` property wrapper in Swift 5.1, as mentioned by /u/Cyberbeni As for whether copy-on-write is a code smell or not, I think you'd want to avoid it if possible. However, some classes from Cocoa, like NSAttributedString, are already used with copy-on-write semantics (by convention), so in your case, I don't think it's a big deal :)
Yes.
Be sure to create outlet connections to reference the objects in your storyboard from code.
the key word here is deterministic. by their core design principles, arc's performance is deterministic, while gc's is not. in many server systems, having deterministic performance is more important than having "best performance", as it enables tune-less scalability
Are you aware of any real-world examples where the presence of GC has caused significant, meaningful issues with server performance or function?
Start with Paul Hudson’s free online version of his original HWS book. If you like the content and style, then consider buying other books of his. If not, at least you found out without having bought anything yet. [Official link to free HWS online edition](https://www.hackingwithswift.com) I think Paul’s stuff is worth buying and reading, amd have a couple of his bundles. He’s always really fast at releasing free updates to keep up with changes in Swift, which I feel is crucial. You should also consider getting [Keith Harrison’s Modern Auto Layout book](https://useyourloaf.com/autolayout/). Or at least download the preview, which includes the TOC, intro and a full chapter that is honestly a great resource on its own. And I hear great things about the [obc.io](https://www.objc.io) books, although I haven’t read any of them myself yet.
Paul's [100 Days of Swift](https://www.hackingwithswift.com/100) and [Hacking with Swift](https://www.hackingwithswift.com/read) is my recommendation for anyone wanting to learn Swift. Honestly nothing else comes close in terms of content quality and quantity.
 If you want it to disappear ( fade ) you should be animating the imageView's Alpha. Right now you are moving it down slightly.
try symbolImage.layer.alpha = 0
How do I set up an outlet collection of say 3 images programmatically? Can’t find a reliable source that’s been updated for swift 5
return [**article**](https://www.vadimbulavin.com/recursion-in-swift);
In your **main controller** you say you are doing a fetchRequest in the `cellForItemA` method. When you launch your **second full screen controller** you either need to replicate that logic to populate your cell in that screen, or you need to pass the fetched object from the **main controller** when you launch the **second full screen controller**. Even though you are re-using your cell code you aren't re-using the actual cell object that was created and populated in **main controller**.
**return** [article](https://www.vadimbulavin.com/recursion-in-swift)**;**
Nowhere in the code you posted have you put `symbol\_image` on to the screen. You created a variable to hold the image `symbol\_root` and the imageview `symbol_image` but they don't exist on screen until you do `self.view.addSubview(symbol_image)`. In a `UIViewController` everything that it puts on screen has to be contained inside of it's `view`. The code you want is probably this: ```swift import UIKit class ViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. self.symboleraser() } func symboleraser(){ let symbol_root = UIImage(named: "symbol") let symbol_image = UIImageView(image: symbol_root) symbol_image.translatesAutoresizingMaskIntoConstraints = false self.view.addSubview(symbol_image) symbol_image.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true symbol_image.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive = true symbol_image.heightAnchor.constraint(equalToConstant: 200).isActive = true symbol_image.widthAnchor.constraint(equalToConstant: 200).isActive = true UIView.animate(withDuration: 0.5, delay: 0.5, animations: { symbol_image.center.y += 50 }, completion: nil) } } ``` This should put your image into the center of the view with a size of 200x200, and your animation code will push the image 50 points down the screen after a 1/2 second delay and animate that move over another 1/2 second. If you really want the image to *fade away* you are going to need to change your animation line to `symbol_image.alpha = 0`.
What about using SwiftUI’s ViewRepresentable to bridge UIKit into the SwiftUI world? I think you can use all of UIKit via that method. You would still need to learn UIKit though. See [the tutorial.](https://developer.apple.com/tutorials/swiftui/interfacing-with-uikit)
The great thing is you don’t have to choose. You can use both! Both places provide a wealth of great info for free. Personally, I’ve found Paul’s way of explaining things easier to understand so I bought 3 of his books. Everyone is different so you may find Wenderlich’s a better resource. Try them both and also throw in some “[“Let’s Build That App”](https://www.letsbuildthatapp.com)” by Brian Voong for good measure.
A struct instance is on the heap, but the storage of Strings changes based on how long they are. Short ones stay on the stack, but large ones get put on the heap.
That means you know both UIKit and SwiftUI right?
SwiftUI doesn’t need to be written in Swift. It could be any language as long as a few features are present: Necessary - Generic Interfaces/Protocol - Opaque types within the Generics system - Method for change detections (C# `INotifyPropertyChanged`) would work) Syntax Sugar - Builder Functions - Implicit Function Returns Memory Management is a question that I keep going over in my mind. Does the fact that Swift doesn’t use a Garbage Collector benefit SwiftUI? What about the use of Structs opposes to Objects? I don’t know these answers.
Am still going through Angela’s course, I tried Paul’s free stuff but didn’t get on with it. I have purchased books from Ray and loved them, also done his Udemy course.
Keep doing the tests that way. On wrong answers make sure you know why your answer was incorrect. It will help you understand how the language works now and also down the road. Keep it up!
Thanks in advance for any answers. I'm preferably looking for advice from someone who works in a team as an iOS developer. I've created several apps professionally but I work alone and I am trying to start implementing more best practices into my app. I am sure there are many odd things I do just because I haven't had someone review and say "why did you do that?"
Yep, I just wanted to clarify that they are compatible. In fact, this integration point is something you’re likely to encounter even in SwiftUI apps, so reinforces the point that it’s best to learn both.
I'm doing both right now, and both at the same time is not too bad. Ray has an email list where you get the walkthrough for building an app, so I like that that gives me little goals to focus on each day I get the email to learn. However, Hacking With Swift is definitely better formatted and more informative for everything, and it moves a little quicker.
Thanks all! Will start with HWS first and see how that goes, then may look at doing both for a challenge. Best way to learn ;)
We will have a new generation of programmers that haven’t been corrupted by Objective-C and Apples various tool kits! Thus we should see much higher quality software and frankly a more diverse library of software.
I have to disagree here! It is pretty obvious that Swift was written to be able to create something like SwiftUI. I see SwiftUI and Swift as part of a long term plan on Apples part produce an entirely new and modern software infrastructure for its platforms. This takes time but a lot has been accomplished already.
I’m not sure if you’re trolling me or not. Of course SwiftUI and Swift are designed to work best together. I’m not saying another language would be as good as Swift for this purpose, but there are other languages like JavaScript, C#, and Dart that have declarative UI Toolkits and they do just fine.
//If there HAVE BEEN items, add the items, else do nothing. `if var items = UserDefaults.standard.object(forKey: "items") as? \[String\] {` I can only assume this is your problem, since the only `UserDefaults.standard.set` you have given us is trapped within the block. I assume you've probably ran this app once before when you didn't have this restriction and your array has some data in it. (User Defaults is persistence mechanism, not a mechanism for transferring data from one view controller to another, you're abusing its purpose). Just a stab in the dark with the small amount of code that is here.
Slider updates `foo` continuously. Are you doing it like this? struct ContentView : View { @State private var foo: Double = 0.5 var body: some View { VStack { Text("\(foo)") Slider(value: $foo, from: 0, through: 1) } } }
No... Only allows front facing camera in my "own" app
I was in the same boat as you. I bought Angela's course and had to stop a little over halfway through. I just couldn't grasp the material and a decent majority of information was left out of the lessons from time to time. I've browsed through Ray's work here and there but never pulled the trigger on it. I have however been fully invested in Hacking with Swift. Paul provides a large variety of highly informative content for free. The more in-depth stuff is definitely worth buying as well. The projects he provides really helped me get a grasp of Swift and the concepts he teaches. The challenges at the end of each project really make you think and solidify what you learned. &amp;#x200B; Also the Apple Developer docs. and eBooks are great resources to mix into the equation.
Corrupted? &gt; Apples Apple's* You want to use a possessive noun, not a plural. FYI.
Honestly, I can't see any except to show that it can be done.
&gt; Swift uses Automatic Reference Counting (ARC) to track and manage your app's memory usage. https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html
Yes, it uses ARC, but not a Garbage Collector. Memory management is deterministic and it is easy to determine exactly when an object will be deallocated.
That worked perfectly! Thanks!
Try using another mechanism besides UserDefaults.
I'm not sure why it needs to be multipart. I post to a form in my code rather like this: **var** urlRequest = URLRequest(url: url) urlRequest.httpMethod = "POST" urlRequest.httpBody = "your text here" let urlSessionDataTask = URLSession.shared.dataTask(with: urlRequest){} urlSessionDataTask.resume()
I use a keyboard on iPad Pro. I recommend it. It unlocks a lot of usefulness you might have otherwise overlooked.
It really depends on how you use it. Apple uses classes inside of structs *everywhere* internally to provide copy-on-write semantics. If you want the value semantics of a struct without the copy overhead when that struct represents a large collection of data this is the *only* way to do it.
Yep, that is what I thought, learn both and pick what benefit you based on a situation.
Maybe check UIApplication.shared.windows: https://developer.apple.com/documentation/uikit/uiapplication/1623104-windows
It's called an iPad, not an IPAD. Come on. Get the name of the thing you are talking about right.
Or check the UIWindowScene directly (not the delegate). Didn’t catch the new iOS 13 stuff before posting.
I am learning Kitura
I recommend HackingWithSwift. It’s a reasonable price, and He always tries to update all of his books for free. If you prefer watching videos, I recommend objc.io. I also recommend Ray's books kind of CoreAnimation.
I'd look at a used Mini, one of the old quad core ones.
When is scannedText set (thus calling didSet)?
Stackoverflow offers this up https://stackoverflow.com/questions/24089999/how-do-you-create-a-swift-date-object
I’ve seen that and, if you read the beginning of my description, you’ll see that that’s one one of the methods I described above (albeit verbally) and what I’m currently using. What I’m looking for is a more direct method of just ‘typing in’ the date. I’m wondering if that’s possible with Swift.
It definitely makes a difference. And I’d say a Bluetooth keyboard is always going to be a nice thing to have on hand.
Using method 3 of the accepted answer in the stack overflow link should get you what you want. Or one of the other answers that add similar functionality as an extension onto Swift’s dare class would work as well
I would second this, the old minis should perform great for what you need and are aren’t *too* expensive
You should be able to set up a `DateFormatter` and use it’s `date(from: String)` method.
If you’re competent with building computers and ready to get your hands a little dirty in the system you could look into building a Hackintosh. They’re far more stable than a VM, and you’ll save quite a bit. Otherwise find a used Intel Mac of any sort. Get an i5 at a minimum, and 8gb of ram (which you should plan to upgrade later).
I do not believe you can by means of the modifier.
Thanks. As I understand then, manually setting it up the way I expected is not possible.
Thanks. That’s the closest I’ve found so far and I suppose that’s the closest I can hope for. That said, is there any way to speed up compiling a swift file when I have several custom objects that use this date variable? Or is slow compilation to be expected (and normal)?
They finally did with [CryptoKit](https://developer.apple.com/documentation/cryptokit), available on all of this year's OSes. But CryptoSwift is awesome, and what you should use if you need to support anything other than the latest OSes.
Nothing you're doing here should be particularly slow to compile. Do you have a huge array of `String` literals? There are a few ways to see what's taking so long to compile, Google should turn up some ways to investigate.
If you don’t like the existing options, write your own extension that works exactly how you want it to. Sounds like you want an initializer that takes components of the date as actual integers. You should probably implement that using DateComponents. Note: this probably doesn’t exist by default since there are many different attributes of a true date object. But of course your custom initializer only has to allow for the ones your interested in.
Hem... Not aware of CryptoKit. (Only work in iOS13 ?) &amp;#x200B; I estimate I will roll out my solution in 0.5 year later. I guess that time, most people still using iOS before 13 - [http://gs.statcounter.com/ios-version-market-share/mobile-tablet/worldwide](http://gs.statcounter.com/ios-version-market-share/mobile-tablet/worldwide) &amp;#x200B; Seem like I need to go for community supported CryptoSwift, if I were want to support device before 13. &amp;#x200B; Quite surprise. But, thanks for telling me.
Thirded. This is the best idea imo
I do have about a thousand custom objects. There’s probably no way around it.
Memory management, huh? Both Objective c and swift use ARC. Both don’t use garbage collector.
Yep. Same as objective c. Both use arc and not a garbage collector. So your worry about using arc as opposed to using arc is confusing.
I think I’ll end up going that route if I find myself reusing this code a lot. Right now I’m only using this once so an extension does seem like too much. I think you’re right in that the date object has a lot of attributes which is why direct initialisation like I was hoping for isn’t. Oh, well. Thanks so much for replying.
My concern about SwiftUI and Compose only available on iOS 13+, a lot of developers would rather drop older versions of iOS for it.
Something along these lines is what I came here to post - he likely set some data before addicting a condition for it
I would start with a recent used MacBook Air (2018 or above) or Pro (2016 or above) on Craigslist, basically the ones with large trackpad. The reason for them instead of the Mini is they’re easy carry around, you can attend workshops and attend meetups with it, easier to ask questions and show your code to people. Also, they’re easy to come by and easy to sell. I would highly recommend you pick a machine with 512gb and above, only a 256gb if you absolutely have to, as you won’t be able to upgrade it and it’s the only hard limit that you can’t pay with time (as in waiting for something to load). For the same reason above, I wouldn’t be too hard about the CPU and memory size, since you’re just starting off and you.
A bluetooth keyboard can be used with your phone, iPad, Apple TV, if you have one, your computer, and more. Highly recommend getting one. Swift Playgrounds isn't the only app that can use it either. You can use it anywhere that has text input!
Damn, really?
Not trolling just that you mis the point Apple needed a solution and they needed Swift first to get it.
The Mini as suggested below won't be too bad so long as you get one that has support for the latest OS If you want a bit more power look for a 2015 Macbook Pro. This is what I still use for my job. The one with Retina but before they switched to all USB-C. Check Microcenter if you have one nearby as they sometimes still carry refurbs of this model for around $1300.
I e never liked Objective C and the way NextStep did things. The code always looked like an ugly mess to me no matter who wrote it. So yeah using Objective C and Apples libraries corrupted many programmers. The rapid move to Swift seems to confirm that ObjectiveC is being dropped like a hot potato, likely due to extreme frustration on the part of developers.
Been looking for used minis with quad cores and I’ve found two so far, What do u think about one of these? 1st: Mac Mini late 2012, i7 QC 2.2ghz, 16gGB ram, 512GB SSD (samsung evo 850) + Magic keyboard 2 + Trackpad 2 For $640 2st: Mac Mini 2018, i5 6core 3.2Ghz, 14GB ram, 256GB SSD For $900 Other than those I’ve seen 2011/2012 with dual core and no SSD for around $200-$300 What do u think about these?
I don’t know what it was with Angela’s course, it was ok in the beginning but as the modules went on I was beginning to lose interest. Started on Paul’s tutorials and liking them so far 👍
Definitely reasonably priced. Going through his free course content at the moment and liking it. Good chance I’ll purchase his Swift Power Pack that’s on offer once I’ve completed the free course. Thanks.
I started with a 2015 Air (with 8B Ram) back in 2016/17 and it was perfect for me. As soon as I started getting deeper into design using sketch and photoshop, I eventually moved up to a 2016 MacBook Pro 15in w/ 2.7ghz i7. I think a 2017 Air or a 15/16 pro is a great option. I had a mini in between the two and I really hated the lack of portability.
What I have problem is that it is only IOS 13 to begin with.. we have a cool project in our company , heavily UI based. I suggested using native IOS for this(possibly Swift UI for only minimum IOS 13), however other team build whole app in Flutter in literally a month... I would need about 2 months doing it natively.. Flutter already has amazing UI tools it is sad that Swift can't compete right now with it. I looked at Flutter and saw many startups and even big companies transitioned to it... It makes me worry a little :(
Who cares?
I have a hackintosh, it's way cheaper to build. If that is too much work for you, I would go with a used MacBook. Renting a Mac might also be an option for you.
The first one should fit our needs quite well. I wouldn’t take one without a ssd as this is is a major speed upgrade in day to day use without being that much of a price bump.
Call it a PADD like they did on Star Trek since they were first.
What does it simply not do?
It’s unlikely that they rewrote messages using SwiftUI
The callback of the sink method is not called. In fact no operator after the debounce gets called.
But how is it made then? I want to place Buttons in the bottom but don’t know how
Actually CryptoKit is not really something entirely new. It provides the same functionality but wrapped in a little bit more Swifty APIs. I wrote about it here: [https://news.ycombinator.com/item?id=20149222](https://news.ycombinator.com/item?id=20149222) &amp;#x200B; No support for Bitcoin Elliptic Curve and does not support any Elliptic Curve Methods at all.... really too bad.
I use the first one you mentioned still. I’m a full time iOS dev. There is a small concern that it will be unsupported by the next macOS release. However by that point you could always sell it and upgrade if you decide you’re going to stick with it.
It's Apple they can use all the private API they want, for now it's out of grasp unless you build your own nav bar. If history is something to go by with this kind of thing it'll slowly become the new standard from iOS 14 for bar button items when the large title is showing.
Thank you so much for your reply!! I have spent most of my day trying to figure it out yesterday and passed out by the time you've replied. In my **main controller** I put fetchRequest as private func and I initialize it in the viewDidLoad. In the cellForItemAt method I have the indexPath.item but I haven't inserted the actual fetchRequest inside of this method. This is from my cellForItemAt that is on the **main controller** and successfully prints the saved names on the main screen: let cell = collectionView.dequeueReusableCell(withReuseIdentifier: cellId, for: indexPath) as! MainScreenCell let newItem = newItems[indexPath.item] cell.nameLabel.text = newItem.title cell.nameLabel.textColor = UIColor.black The issue I have with replicating that logic is that on the **second full screen controller** I have put as viewForHeader the same MainScreenCell file I am using for the **main controller.** This is where I get lost and I'm frustrated as I don't know with what to replicate that logic that will make the name persist through the animation. Writing all of this now, I'm thinking based on what you wrote I should fetchItems inside of cellForItemAt and that will make the name persist? I will be trying to tackle this once again today and I will post back here once I get it working. Maybe it's useful for someone else learning. &amp;#x200B; All the best to you, /u/Eoghain !
It’s either a completely custom view or they added the buttons to a UINavigationBar in an abnormal way (ex. titleView or addSubview)
Interested in what the concern is, since the new release is coming up in a few months?
Yeah I don’t mean Catalina, I mean after that. Perhaps it’s unfounded as Catalina runs fine on it. It’s pure speculation on my part.
we are not spamming you can check this guys from commerce background and learn ios in just 3 month and got a job in IT company. is it spamming?
It sucks, but I'd be vary of using it in its current form. The way I see it gives time to mature, sort out the issues, work out the kinks. And in 2-3 years when majority of people have migrated to newer versions of iOS it will be ready for prime time.
by that time only fraction of companies will use native technology. everyone is moving to Flutter, ReactNative also has been redesigned...
I already replied to the your other thread, but also posting it here for my friends over here (would love hear feedback and correction of my mistakes). Hi, Myself, I would definitely go for a protocol. But I will try to find the ups and downs of each approach specially in your current situation. First, and the dumbest reason, is that Apple itself uses protocols throughout all of their SDK(s), therefore using the same pattern will make it easier for your teammates to get along with the API you’re providing, especially the new comers and interns. And now, let’s move to the more technical reasons (in general): Second, callbacks is much more unpredictable, for many reasons such as: each one of them could be referenced from a different object (parent) and debugging it will be much harder. You might end up dealing with half of them not assigned, which you will feel the pain when using them as data providers. It becomes much easier to slip a retain cycle, since each one should be checked individually. And they are more encouraging to the usage of inline closures, which also leads to more code duplication, since they are not reusable. And it’s not easy to track them, like when passing them through multiple layers (with delegates it’s easy to transfer the reference to sub-object that can handle part of the delegation, like: your first object works like a tunnel for inner sub-modules) On the other hand, protocols are much stricter, which in sometimes, it might affect the flexibility. Sometimes an inline closure is much easier and less painful to implement when accessing a variable in parent scope (sometimes!!). When to use callbacks? Closures are more convenient when listening to one-time event, such as UIViewController dismiss method, or injecting code (like building-block initializer). You don’t want an undocumented inline-method to be a major state changing, (like ending sessions, or dismissing ViewControllers, or logging in/out users). Why protocols? Simply they set a PROTOCOL, they offer optional methods, they can define variables (not only methods), it’s really handy when using them as configuration provider, yes, they encapsulate the entire object to a specific matter/purpose while method references doesn’t feel like dealing/handling a one-piece object that has more than one method/functionality. In your situation, it might sound like protocol is an overkill and unnecessary, since it’s only two methods and they only transfer one touch/press event, with no business-code involved, while the back event is just OK, it’s not friendly to pop up a menu or a UIAlertController from an inline method (with buttons and their completion handlers) so you will end up calling a regular method from within the callback body. What’s if you’re willing to add a save, profile, edit, search buttons (like YouTube), all together in the navigation bar (I assume you’re building a navigation bar representation). It will be really hard to maintain all of those as references (saveCompletionHandler, searchCompletionHandler, castCompletionHandler, profileCompletionHandler, and more). If you’re doing so, I would recommend setting an enum that contains all of those case, and creating a dictionary: [YTNavigationItem: ((_ sender: YTNavigationBar) -&gt; Void)], and adding a method: func setTarget(forEvent event: YTNavigationItem, _ handler: (_ sender: YTNavigationBar) -&gt; Void){}. (YT is for YouTube). My advice is to think of where your app is going, not only in the current version, but the next versions as well, And always code like only doing the API, (never think like you’re writing and using it), think of the user whose calling it as a very new programmer (never think that another specific teammate as the user), and always remember that every minute you spend perfecting the structure now, will definitely payoff later. Happy coding 🙂.
I just released [EasyGit 1.4](https://easygit.app) so I guess I'm working on 1.5 now... I know everyone is excited about SwiftUI, but what I look most forward to is [Framing Protocols](https://developer.apple.com/documentation/network/nwprotocolframer)
Can confirm. Was in OPs position a few months back and plumped for an upgradeable 2012 Mini. However I'm on a mere dual core model and it's.. absolutely great. Compiling occasionally lags a few extra seconds (as a noob we're not talking heavyweight software here) but SSD and decent RAM (I'm at 8) make the most difference. It's actually benchmarking at the level of younger Minis/MacBooks. Best 250 bucks I've spent in years. Will upgrade when my skills and needs require it.
In arrays, is it possible to reference to elements except one particular element within the array? For instance: let randomNumber = arrayOfNumbers.randomElement() Is it possible to animate the numbers (images) *other than* than randomNumber, by means of say an array.excluding property?
If you’re just learning, how about using Swift playgrounds and Pythonista on iPad? You can do a surprising amount of things. I would try to push this to the limit before investing in expensive hardware. I see a lot of recommendations for really cheap macs. Honestly xcode requires too much performance. By the time you learn programming well, SwiftUI will be a big enough deal for you to focus on. And my 2018 MBP struggles with SwiftUI. You should first learn general programming well, with python or c++ on windows. When you’re ready to handle Swift programming, buy a new mac (anything but the cheapest iMac or 2015 Macbook Air). Going cheaper, won’t give you enough room to grow.
SwiftUI hasn't been released yet. :)
How do I reference a constant that I set in one view controlller in another view controller?
if you transition from one vie to another using prepareForSegue() method, you can set an attribute of the new ViewController using the current ViewControllers constant. &amp;#x200B; if the is no relation between the views you should make it a global constant.
on ipad there is only swift playground as native swift development app. &amp;#x200B; in theory you can use basic text editors to code swift and upload it to some place that is able to compile it, I guess that is not what you want to do. &amp;#x200B; ipad will not be able to run XCode as that would include the Simulator. &amp;#x200B; another option would be some kind of rdp/vnc/teamviewer session hosted by a XCode running computer.
You’re not looking at this objectively. What if instead of making its own language, Apple decided to migrate to C#? The syntax would be slightly different, but it would still work. The same is true for most languages. Even Objective C (with Generics) would have worked (but it would have been really ugly syntax). There are no “killer features” of Swift that say SwiftUI has to be written in Swift.
Tried the public let thing, can’t seem to get it, though I know that is the only correct answer. I’ll keep trying, thanks
Tried the public let thing, can’t seem to get it, though I know that is the only correct answer. I’ll keep trying, thank you!
try this as a seperate class for globals: &amp;#x200B; class globals { static var variable: Int static let constant: Int = 1 } &amp;#x200B; access it in your ViewController by: &amp;#x200B; myconstant = globals.constant
Hey, TheRickiestMorty, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey /u/CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". And your fucking delete function doesn't work. You're useless. Have a nice day! [^Save ^your ^breath, ^I'm ^a ^bot.](https://www.reddit.com/user/BooCMB/comments/9vnzpd/faq/)
yes its spamming
I would go for 2018 refurbished Mac Mini. It comes with 3 thunderbolt ports so one can use for external storage video etcs. You will start with Mojave and will have support for future release.
second that. macOS are not designed to be run off from a conventional HDD causing them to be extremely slow if booted off them.
Thanks for the tip! I’ll check it out and see what I can figure out
Don’t get a 2011 one. If you fully update all the software, you can’t even developer for the latest iOS versions on it because you can’t install the newer versions of Xcode. We just had ours at work destroyed because it wasn’t really useful anymore. Look at 2015 MacBook pros or the quad core Mac mini’s, but I’d almost just do the 2015 MacBook Pro anyway.
I’m working on an implementation of a Ray Tracer based on Jamis Buck's book The Ray Tracer Challenge, in swift, along with boring work stuff in C++.
I initially struggled with purchasing the iPad Pro keyboard case, as i thought i wont need it. Now i can say it was one of the best purchases. I basically use it daily. Even when i just to some simple image editing which dont need the keyboard, I still use it and if only for keyboard shortcuts. So yes, using a keyboard with your iPad can make a very big difference.
Since you're starting your CS degree, my advice would be to make the game out of SpriteKit, but generate the character graphics with SceneKit. Even in a 2D platform game, you want stuff like your character swinging a sword, and it's easier to animate as 3D rendered to 2D sprites.
that was pure genius
I have an old cheese grater desktop... but I upgraded the mono, cpu, ram, video card, and psu 🤔
To be more exact I am creating a code that will find a string in the array of strings that will then notify the user with AllegenLabel.text. The whole app is divided into different view controllers. The user inputs in a string using a text field in FirstViewController and then that string has to be found in a different array of strings in SecondViewController. For some reason UserDefaults successfully stores and retrieves the string on my phone but does not work on different devices. For example, whenever I click the save button in FirstViewController, a string has to be stored and shown in the console, but for some unknown reason it does not work. Sorry if I was unclear, but thanks for your help, I’ll keep that mind while working on the code
Macbook Air 11’ is a good place to start also. It’s basically a fullsized keyboard with a shitty screen attached to it. A lightweight working horse. I use it for 3 years now as my main machine. I cant play games on it, so i spend much mote time studying or experimenting /w libraries :) Macbook Air 2015 runs Diablo 3, World of Warcraft, Half-Life 2, Team Fortress 2, Banner Saga 1-3) with an external displat it is pretty powerful for 1.5kg aluminum sheet
I’m having the same issue, using the `print` publisher I can see data being sent to `debounce`, but no data is ever published from `debounce`. I’m having the same problem with throttle Without debounce, the pipeline works as expected.
This must be a bug in the combine framework. I don’t have any explanation for this behavior.
I think so, we should file feedback bugs, it’s not in the release notes
then i will not change your mind. it's up to you criosist.
Macintosh SE from the late 80s. 🤓 I’m actually in the works to getting my hands on one...
1) react native being redesigned doesn’t automatically make it killer framework to write apps in 2) flutter isn’t great in all use cases nor is the answer for everything 3) just because flutter and react native are popular should Apple not make frameworks at all then in an attempt to make their platform better?
It worked, thank you!!
&gt; (These kind of questions are probably freq asked, sorry in advance) Don't apologize. Learn to use search.
I am about to upload my project to stack overflow, I could use some help with the code. Is there some precaution I should be taking? Because the main Project Window has my Apple ID, and I’m not sure I want that out there?
This is right up there with "Let's stick to Rampart, people". The question was about a specific trait of SwiftUI, and somehow you're trying to sidetrack onto Flutter. What does that have to do with the question?
Love the app description 😂 🤘 “Whether you’re in the mood for some gently shifting color patterns while you relax on the sofa, or a trippy psychedelic acid wash of moving tie dye while you rock out to Pink Floyd”
Really enjoyed this. Good stuff
What is the presentation style of the next view controller? I’ve heard form sheets and styles will present a little differently in iOS 13— Allowing swipe to dismiss but this can be disabled if you look around.
I set it to the Full Screen setting for presentation style. It initially did nothing, however after quitting and restarting the Xcode Beta, it saved my settings for the presentation styles and is not working exactly how I expected it to. Thank you for the help!
Well if you provide more code, or if you want to get into a screen sharing session at some point, we can help more.
Take a look at this article, could be interesting for you. https://medium.com/@hacknicity/view-controller-presentation-changes-in-ios-13-ac8c901ebc4e
Thanks! These are great tips.
You don't need to fetch your item again (unless there is some chance it changed between the time it was originally fetched and the time the user taps to move to the second controller). What you should be doing is adding a variable/parameter/property/member (whatever you like to call it) to your second controller to hold the item, and passing it through in your `collectionView.didSelectItemAt` method when you launch the second controller. Something like: func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) { let selectedItem = newItems[indexPath.item] let secondVC = SecondViewController() secondVC.item = selectedItem self.present(secondVC, animated: true, completion: nil) }
I'd look at a 2014 model. Get the quad core and don't worry about memory and storage as you can upgrade those yourself later. You can squeeze two SSD drives into one of those.
This explains everything perfectly. Thanks for the article. Haven’t gotten to read up on all the new Swift features as much as I would like to yet haha
Snazzy stuff !!!!
Very helpful tips
Fantastic article.
Awesome!
Finally a post not hosted on Medium! Great stuff,thank you!
Very cool!
You need to @Publishes this string and make it a car. Then set the value layer in the code. Then you’ll see the value getting published :)
Behold, the geometry we learn in high school is actually useful. Look into a 45-45-90 triangle. The subview is laid out ignoring any rounding. You have to figure out what multiple of the width the subview should be to fit exactly inside the center of the circle. Then apply that multiple and center the subview.
Im looking for a answer in code
I don’t think so, but you may want to look into SwiftFormat; it has an editor extension that you can setup with a key bind to format your code on demand. Has quite a few config options, including Allman braces. There’re definitely other Swift formatters, I’m just a fan of this one
You’re welcome, was surprised too as I played a bit with the iOS 13 beta 🤙🏻
You’re welcome, was surprised too as I played a bit with the iOS 13 beta 🤙🏻
I’m of the “teach a man to fish” school. Take my hint and think it through some. If you still can’t figure it out, come back, share how far you got, and I’d be happy to help you along further. The skills you develop doing that will serve you for the rest of your life.
Well im not.
The `publisher()` method gets you a publisher, and data gets published on changes to the string up to `debounce`, where it promptly disappears forever
But still in the example code it's a let constant you won't get any new value as you can't set it. I'm doing exactly that here: [https://github.com/Dimillian/MovieSwiftUI/blob/master/MovieSwift/MovieSwift/binding/SearchTextBinding.swift](https://github.com/Dimillian/MovieSwiftUI/blob/master/MovieSwift/MovieSwift/binding/SearchTextBinding.swift)
Do you really think anybody will help you after speaking like this?
Well no one helped me before speaking like it either lmao
Hmm. I'm doing [this](https://github.com/01100010011001010110010101110000/IllithidUI/blob/search-view/IllithidUI/Search/SearchView.swift). Without `debounce` that code works as expected, and the updated string is printed. The first part looks a bit odd because `publisher()` on a string gets you a character array
I actually did but deleted my comment on the other sub 🤣 good luck!
Guess that proves my point
hey. im new to swift. just finished my swift course. Im looking at some code of a fully polished app store app. I am trying to figure out why I cant see the bar buttons that i know are there on the view controller. its a map based app. i see the view controller with the uiview for the map which takes up most of the screen, but i cant see any of the bar button items on the actual VC. despite them referenced in the actual code for that view controller. ive looked everywhere and my only guess is that they are hidden or something?
OP went to the "give a man fire" school. Give a man fire and he'll be warm for the day. Set him on fire and he'll be warm for the rest of his life.
You have to set fitInSuperview() inside awakeFromNib()
Check out both their free content on YouTube and their respective sites and figure which one suits you better. The best way to learn code is really subjective. Best of luck. PS I’m a fan of HWS over RW. RW is too long and involving for me, but to each their own of course. RW tutorials all involve building an entire app, but sometimes I just want to quickly read about how it works, which HWS is great for. LBTA was the one that really helped me take off though.
Whats wrong with medium?
It used to be really clean and nice to use as a reader but lately they’ve been preventing me from reading articles without signing up or opening a new browser / private window, which is ridiculous.
Is this code in the ContentView_Previews section?
What do you know about the geometry of a circle? What do you know about the geometry of a square? What do you know about the geometry of a triangle? There is a line (or a couple more if you really need them) that you can draw on that drawing of the circumscribed square that will connect the concepts of circle, square, and triangle. Knowing what you know about the superview’s frame you can calculate the multiplier to get the frame of the internal square (hint: it’s a constant!). They teach math in schools for a reason, you know.
How many VCs can Apollo push before it crashes? a lot apparently
Yes. Only dark mode is in light mode. See: https://imgur.com/gallery/35gy8CF
I can't usually as well browse this website due to cloudflare issues, forcing me to use VPN.
to print the raw value just do so like this print(type.rawValue)
Just remember that you can't release an app to the app store made with *any* part of the dev process being created with an Apple tool in the toolchain that is in beta.
Yep, thank you. That's why I posted this as I was struggling to use Enums properly. I did print out the type.rawValue as you mentioned and of course it worked. Let me review your other suggestions and hopefully that will help me understand how to use Enums better. Thanks again.
I was not aware of that. Thank you, really appreciate that tip!
Uh oh. Sounds like Medium is pulling a Pinterest
first line of code Let means number is constant. so whatever random number is assigned to it that's what that number will always be. so first thing is to change that to var then inside your while loop, you need to update/modify the number variable otherwise the while loop will always keep evaluating if "number" (which hasn't changed) is greater than 1 which will always be true if, unless number changes. that's it. make sure number changes inside the loop.
Thank you so much! I figured it was going to be something easy.... So the number variable in the while loop I assume I would need to change that to &lt;= to show it to stop at 1?
yes and no. you can but it would create a different solution/problem. all you need to do is update the number inside the loop and here is why number = some random number then the while loop starts. inside the while loop use the random gen again number = Int.random(in: 1 ... 6) when your while loop evaluates again, if it equals 1 then it will stop. if you change it to while number &gt;= 1 {} you'll be stuck in a loop again because your generator will always produce a number that is = to or greater to 1. so then inside your loop you'll have to test for when it does equal 1 and break from the loop with "break". anyway, there are more tweaks you can do to make it run correctly every time but you'll learn more by experimenting.
Omg! That was so simple! Thank you again! First time ever dealing with coding! Thanks reallly!
there is still something not quite right about this code tho. hope you catch it.
Hahah I know I won’t unless the compiler gives me some type of error
I always just test. Tell him face a direction and see where he faces, add a block at a random location and adjust. Lots of coding is making mistakes and figuring it out.
ok that’s what i’m doing rn too, thanks!!
Thanks for this!
Well in that case. Your while statement wont run at all if your initial random value = 1. I would just assign it a number.
I wonder if anyone could collect more articles like this, that were posted here. It would be really helpful for someone new to iOS dev like myself.
Still rhymes with Medium though. Infinum, Medium
Good point. The “repeat .... while” statement would work well here, since you want at least one iteration of the loop.
Some differences: * It's one line shorter * You can make it so that the color can only be set in init if you want (if cars shouldn't be able to change color once they're made) * It means you don't have to pick a default value, since they'll pass one in (in your case, you could get rid of " = "Black"" * It means you don't have to deal with bugs caused by accidentally forgetting to set one of the vars, since they're all there up front * If you add a "didSet" to the var, it won't run when it's initialized in init(), but will run if you set it from the outside
Look grand, heads up the slidey tab bar animation sample: \- Has a typo - \`self.view.isUserInteractionEnabled = tru\` \- Won't work for tab bars with the "More" tab, as the more view controller isn't present in the tab bar controller's \`viewControllers\` property
Maybe look into Twilio? They have an sdk on there that can get video chat on your app. I’ve done it before haha
Thanks a lot mate. I didn’t know they offer this as well. I took a look, it seems to be what I want. But instead of live calling I want to be able to have a streamer and multiple users viewing it. So I guess I’ll remove the end call for the audience functionality and somehow make it so that the streamer can start the livestream without the other end to tap on accept. Thoughts?
Look into Wowza. I wanted to do something similar as well haha. They have those streaming sdks out there. Keep the dream alive! :)
Working my way through building an Amazon-esque iOS app
Thanks man! I took a look, it’s kinda pricey for me (still a student). Currently looking at the pay-as-you go pricing, looks complicated
Setting `myCar.colour = “Blue”` means that the car object has already been instantiated and your just changing one of its members values. Using `myCar = Car(...)` is reinitializing the object myCar with a new instance of the Car class. Doing this means any previously changed class members of myCar will lose their values because it is no longer the same object.
There’s the free option! You only get charged for some crazy services (idk) but I’m pretty sure there’s a free option! Also look into other live streaming sdks! I found a ton after doing a search rn lmao good luck! :)
Being that design patterns and code organization paradigms aren't a one-stop-fit-all solution for every problem, I'm going make the disclaimer to **take what I have to say with a grain of salt.** After all, code that works is code that works. It's maintaining it that becomes the real challenge after dealing with messy code. In general: You should design your types based off the **S** in **S**OLID, otherwise known as the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle). In a nutshell, the Single Responsibility Principle means that when designing your code, the thing that you're planning to make, IF something should change, there should be only one reason. Now, that doesn't mean you make simple classes for literally EVERYTHING in the case that you had to change one little thing about it. Really, it just means that some type that you design, whether it's a simple model or an implementation of some interface that does a lot of things under the hood, when something NEEDS to change, it should be clear WHERE you need to change it. Depending on how far that change is down the abstraction layer of course will have a various degree of change to anything that depends on it, but regardless, your code is decoupled and its easy to figure out where a change needs to happen. I see that you're working on an API and you're talking about an engine class. I have no idea what that means (which is expected, we might have different ideas on what an 'engine' is), and 'API' really just means anything that helps a programmer make an app. I'm assuming your talking about something to do with a REST-API? So I'll give you an example of how one can implement a library that handles some API calls. Say I want to implement a library that makes calls to this [Movies API](https://developers.themoviedb.org/3/movies/get-movie-details). And I want to implement everything from the ground up. Already I can see three major things I need from this library. 1. I need something to be able to make a network request to some route. 2. I need something that utilizes that network request library and abstracts it's under-the-hood work by providing a public interface for methods to make my users not even realize it's there. 3. I need models that can encapsulate these responses into neatly encapsulated data to give my users a nice experience when working with my library. For number one, we can create a network handling 'package' that handles the hard work of just making the network calls. At the minimum, we need a type that can make network requests (e.g. a class that utilizes URLSession). This minimal class can provide all the necessary abstractions for making GET, POST, DELETE calls to some passed in URLRequest. From here, we can define other things that are convenient for us. Perhaps a class that is used internally to form the correct URL for the resource your user is asking for from this library (Get Details, Get Similar Movies, etc). Now that we have our network module, we need to define and implement a public interface for getting the data from the MoviesDB API. Say I define a type that handles this for me. It uses the underlying network library we just made to actually MAKE the requests, but in terms of what this type does, it provides a public method for each of the GET/DELETE/POST routes. For example, a function called getDetails(...) returns JSON response I get when I make the getDetails call as documented in the movies db. Finally, instead of just returning to our users arbitrary data returned from URLSession tasks, we'll use the Decodable protocol and define model types that match the response to each API call available. We'll decode the data responses and return those decoded types. As you can see, our library uses an internal network, but regardless it has one purpose and one purpose only. It's purpose is to define the methods that I can use to retrieve some information from the MoviesDB. **Thats it.** If my network library bugs out, I only need to make changes to that network library. If my route for some request is off (perhaps sending the wrong query parameters in the public interface?) then I make changes to something in this public method (like the url route trying to be accessed or something). If deserializing the data response fails, then I change the model that failed to deserialized. **The concerns are separated and clearly defined**. With that lengthy example out of the way, I realized now that I didn't tell you HOW to design it but rather what you should think about when you design. I think it's more important to be able to try things out rather than being told to have an endpoints class, a parser class, etc. Like I said, code that works is code that works. Design patterns have came and many that used to be considered great are now gone or looked down on (looking at you, singleton.) What has stayed tried and true is **SOLID**. And with that in mind, I wish you luck in implementing your library, feel free to PM me if you have any questions!
I used to be a major fan of Medium. It appears that nowadays ,98% of the content is behind their paywall. Now ,don't get me wrong,I'm not against being paid for a service(the platform,the writers/creators) but once the medium itself(yes,pun intended), annoys the living daylight out of you with every click about it...
Maybe turn off the top padding on the title, put both button container and title in a container and apply top padding to that? I mean, I don't know swiftUI but this seems like pretty basic programming.
So, have you found another solution ?
Won’t accessing Coordinates as a dictionary be better?
I'm not sure if that would work. I need to further use CLLocationDegrees to categorize users.
hi i dont understand. can you create a pull request fir the same?
Another couple of days of "100 Days of Swift" - finishing up the pure teaching part of the course and moving on to the hands-on app building. I am so very impressed with the teaching on this course - the short sharp questionaires are very helpful in bedding the concepts in. The teaching method PH uses is very effective, for me anyway.
Report spam
Thanks for the share. Small piece of advice, you should show an animated gif of your tutorials in action.
Thanks for your advice, I've planned it for next posts.
You can’t directly. You’re best bet is to store a seconds field that is a simple string that can be easily searched.
Okay, so I need to save the attributed string as a separate string entity? Can you recommend the best way to convert it to a string(how do the images get converted, is there an easy way to take them out)?
Fixed the typo, thank you :) Regarding the "More" tab, you're right. That case purposefully isn't covered since it's not that common in modern apps, but it's a good thing to keep it in mind.
I just used Promise. I think it might actually be a way to go. During one session from WWDC19 they said that Future should be used when dealing with single values.
https://developer.apple.com/documentation/foundation/nsattributedstring/1412616-string To be clear your managed object should have **TWO** fields on it: the Attributed String and the plain text string.
I've had success with a class wrapper, using the fetchedobjectscontroller seems to work pretty well, no intermediate struct needed.
Here just to comment on "practical enum implementations" - Enums are pretty neat once you just accept that the cases for them don't need to be complicated! Use them when you can abstract something between layers. I use them a lot for error / result handling. Just to build off your car example some - say you have an endpoint to get all the models for a particular manufacturer. `/GET /models/{make_id}` I like to set up my projects to have a service layer which interacts with a client layer. The client layer is in charge of making the requests and the service layer is in charge of consuming the request and returning something useful to your “frontend” layer. Maybe you had a screen where your users are presented with a list of manufactures and upon selecting one you want to show all the models for that make. I’d have a service class with a function like `getModels(forMake make: Make) -&gt; [Models]` which reaches out the a client class. &amp;#x200B; First let’s make a quick client class! class VehicleInfoClient { func getModels(make: Make) -&gt; ModelRequest { // Let’s just assume this is how we make a request for simplicity let endpoint = “/models/\(make.name)” let response = request.get(endpoint) return handleResponse(response) } func handleResponse(_ response: Response) { switch response { // Side note - these are enums and used a lot in request libraries! case .success: // Handle the success and return your list of models case .failure: // Something bad happened so throw an error } } } Now here the client could either return a nice object that the front end knows how to use or maybe it throws an error. Instead of having the front end know how to consume all these client errors we can have the service layer deal with them. That way the front end doesn’t become cluttered with handling all these special responses from different endpoints. Your client throwing errors here is a good use case for an enum. Maybe this endpoint could return a bad request error (400), not authorized (403), not found (404), a server error (500), or maybe some crazy error we weren’t expecting. These could all be cases on an enum. enum VehicleInfoClientError { case .badRequest case .unauthorized case .notFound case .server case .unknown } So you could throw one of these guys during the failure case above. Now every endpoint could have it's own error enum or maybe you clump the common ones together and make another enum that expands off the common errors for a specific endpoint. &amp;#x200B; Moving over to the service layer - remember the goal of this layer is to consume whatever “junk” the client gets back and turn it into something nice for the front end to handle and display. This is another case I use enums for quite frequently. Instead of an error enum let’s use a result enum. enum ModelResult { case .success(models: [Models]) case .failure case .notFound } One neat thing you can do is pass something along within an enum case - like the models on a success. &amp;#x200B; Let's make a simple Vehicle Info Service class VehicleInfoService { let vehicleClient: VehicleClient init(vehicleClient: VehicleClient) { self.vehicleClient = vehicleClient } func getModels(forMake make: Make) -&gt; [Models] { do { return handleSuccess(vehicleClient.getModels()) } catch let error { handleError(error) } } func handleRequest(_ models: [Model]) -&gt; ModelResult { // Pretty trivial in this case but maybe you want to cache the result // or do something with it before you send it to the front end return .success(models) } func handleError(error: VehicleInfoClientError) -&gt; ModelResult { switch error { case .notFound: return .notFound default: return .failure } } } See, now I can have my service layer map any result to something usable by the front end using a result enum. The front end can have an error message pop up for a generic unhandled error (`ModelResult.failure`) and could even handle a specific error like when the make we were looking for didn’t exist in our database (`ModelResult.notFound`). I took some liberties in the code above and didn’t write any of it in Xcode so think of it more as pseudo code :) I typically clump together my enums in the class I am using them in (assuming they aren't more of a global enum). So in this case `ModelResult` would go in the `VehicleInfoService` file and the `VehicleInfoClientError` would go in the `VehicleClient` file. &amp;#x200B; Hope this was helpful and not complicated / hard to read!
I don't get it, what are "the benefits of having multiple text objects?"? What you show is just a single string, so why wouldn't you use one text object for the whole string?
I am really new to swift and iOS development. I am trying to bodge together a demo for a project. I have a SKscene and when one of the SK nodes goes over a particular tile I want to perform segue to the next view controller. I have the segue already named in the storyboard. I think I should be using UIStoryboardSegue but I can't figure out how to work it. &gt;UIStoryboardSegue(identifier: "battleSegue", source: GameViewController, destination: BattleViewController) Do I need to initialize both view controllers as UIViewControllers first ? Then how do I actually call/preform the segue. I tired going through apple's documentation but I couldn't figure it out. Thanks
No problem, there was one in particular where you were talking about animations but you only showed the code side so that one stood out. Anyway, good stuff, i’ll bookmark
Yeah, I remember that. There are few posts which are already scheduled.
Swift 5+ comes with the `Result` type, which you can use in 3, so that's usually what's recommended. There are a lot of approaches to completion handling (I suggest going the fully observable route), so it then becomes a matter of what you need.
👏 Pro 👏 mise 👏 Kit 👏
I am learning IOS game development with ray Wenderlich. Does most of the stuff I am learning apply to regular app development as well? Is it hard to do both? Which would be better to focus on first? I feel like I would enjoy game development more but the app development has better job opportunities I imagine.
Clean code
It's not possible without Jail breaking the device. If jail breaking, you can do some googling to find out how to use ChatKit.framework
Okay I’ll look into it thank you
Is there an easy way to treat an Any as a Double or Float when it is constructed from an Int? I was surprised that Double(anyValue) does not work when anyValue: Any = 4. For example. I’m getting data from a free form-ish Yaml document.
Thanks man I'll definitely give a try
So that styling part of the object is possible. Think like having part of the object in bold for example
Swift chat tutorial - import an assload of cocoa modules `Fetching podspec for `StreamChat` Downloading dependencies Installing StreamChat (1.0.0) Installing GzipSwift (5.0.0) Installing Nuke (7.6.3) Installing ReachabilitySwift (4.3.1) Installing RxAppState (1.5.0) Installing RxCocoa (4.5.0) Installing RxGesture (2.2.0) Installing RxKeyboard (0.9.0) Installing RxReachability (0.1.8) Installing RxStarscream (0.10) Installing RxSwift (4.5.0) Installing SnapKit (5.0.0) Installing Starscream (3.1.0) Installing SwiftyGif (5.1.1) Generating Pods project Integrating client project ` Sign up to get api token for service you have no insight into nor control over the user data. Ta da
This 'tutorial' is crap. It's nothing but a way for them to get you to use their service. No thanks.
What do you mean by “capture”? For display, to analyze, something else? Also, what have you tried? What have you searched the internet for? What more specific questions came up?
There is no simple answer for this
How do I make my button make a textfield above it (swift UI)
I meant to display something that is on a website. I’ve looked up this for awhile and one of the only things that came up was a post on Stack Overflow from 2015 that used UIView. I know that UIWebView is deprecated so I thought this post wasn’t going to be much help.
Do you have permission to copy/reproduce this website?
Yes. It is my school’s website. I am trying to create an app for them. I am learning about swift along the way.
Ah, I see. Once you mentioned this, my first thought was that you could use \`NSAttributedString\`, and although it conforms to \`StringProtocol\` (and can be used to create a \`SwiftUI.Text\`, I'm not sure it renders stuff as expected.
You're conflating a map and a reduce operation in one. I would recommend separating them: ``` Swift let masterText = texts.lazy .map(Text.init) .reduce(Text(""), +) ```
Very helpful tips, thank you :D
Ok cool. So a website is a collection of HTML, CSS, and JavaScript. Your going to have to know a decent amount of web development if you want to pull out parts of a website. You will either have to pull out the relevant code or pull out the important data and display it however you want. None of that is straightforward. The easiest solution would be to just use an in app browser (WKWebView) to display the website page in full.
In the "Special Characters in String Literals" section from the [Language Guide](https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html), one of the escape sequences is for single quotation marks (`\'`). Since string literals use double quotation marks, when would you ever need to escape single quotation marks?
As of Beta 2, you use the `PresentationLink` view/button to present a modal view. struct OtherView : View { var body: some View { Text("Yes") } } struct ContentView : View { var body: some View { VStack { Text("Hello World") PresentationLink("Tap Me", destination: OtherView()) } } } I don't know how to do it programmatically without dipping in to UIKit.
I am continuing to work on my apple music client, [Sathorn](https://itunes.apple.com/us/app/sathorn/id1447295899?mt=8). Lots of exciting things in the pipeline for Sathorn, so I'm pretty excited!
I’m digging more into Swift and trying to keep up with WWDC 19’. Hopefully when I understand it more. I’ll understand your post. Is English a second language to you? I would love to work with you and help edit your post just a tad bit. While working on my Swift as well.
It’s not my post, I’m just sharing it here
Shots fired! Pew pew pew.
The only messaging app I trust is one with beyond NSA encryption and that I’ve built myself.
Yeah just find the code that defaults to the front camera. Don’t include functionality to switch cameras. Be aware some people’s front or back camera’s might be broken. Which would limit your audience. Although I also program from the standpoint that people are using my apps on a perfect device. The things I take into account is the human element. “Is someone with a vision impairment going to be able to use my app”
Yeah the paywall is a bummer esp if you’re behind a corporate firewall. The only options to login are google sign-in (blocked). Facebook (no thanks) and an email link (blocked)
Use Presentation Link: PresentationLink(destination: NextView()) { Text("Move to the next page \\nusing Presentation Link") .lineLimit(2) .multilineTextAlignment(.center) .padding() }
This is obviously a service. Anyway they openly showed which dependencies are used.
Hey, that’s a neat idea. I’ve downloaded it and added a few habits. My negative habits are Starbucks, waking up late and takeaways. My positive habits are reading and violin. Will see if I get into the habit of using your app when I’m getting a coffee at Starbucks when I shouldn’t be!
It’s great to hear that!
Our 30% tax hard at work
I just see it as paying for the CloudKit service, which I plan to use extensively to get my money's worth :-)
Apple does provide a lot of top quality stuff at all levels
There is no API for QuickType suggestions. You can make your own by overriding `inputAccessoryView` in your view controller. It takes a custom view and displays it above the keyboard.
Once you have the`UIImage` you need to convert it to data and write it to a temporary file. Use the url from that file to initialize the `CKAsset`. `if let imageData = picture?.pngData() { do { let path = NSTemporaryDirectory() "profile_picture_temp_\(UUID().uuidString).png" let url = URL(fileURLWithPath: path) try imageData.write(to: url) userRecord[profilePictureKey] = CKAsset(fileURL: url) } catch { print(error) } } `
dang, okay. Thanks for letting me know!
Great article! Looking forward for the next update. As a react developer swift UI looks like a good fit.
Why dont you install Catalina in a dual boot setup? With Mojave and APFS its super simple.
You have to learn swift either way.
Correct, but I wasn’t sure if I should learn the UI aspect of Swift or start learning SwiftUI instead. I have a Udemy course for iOS 12, but if SwiftUI is going to take over, I’m questioning if I should wait until the course is updated to iOS 13 with SwiftUI (hopefully) so I don’t have to relearn how the UI programming works.
Yeah, I’ll probably end up doing that. Thanks.
I you have any questions I'm here :)
WWDC2019 "Data Flow Through Swift" explains what this post is trying to work out. https://developer.apple.com/videos/play/wwdc2019/226/
Learn *Swift* first.
No. This is reason #93 why the iOS keyboard API sucks, and it's impossible to replicate the built-in keyboards exactly.
I guess I have a misconception about how all of this works. I’ll take your advice. Thanks.
Start learning iOS 12/UIKit now. SwiftUI is very new so it will take a little while for best practices to be established, tutorials to be updated, etc. also, there are some UI components like UICollectionView that don’t currently have a SwiftUI equivalent.
Thank you! That’s the comprehensive and informed answer I was looking for.
Thanks for posting, will definitely check this out.
I’ll definitely check it out later, thanks for the tipp!
I've tried developing mobile apps using React Native; now I'm interested in learning to develop using UIKit/iOS12. Which is the best resource for me to start with?
The best time to start learning to program you want to get good at is yesterday. Once you learn one others come easier.
This makes a huge difference. I can read 10x faster than a video, and clicking the transcript means I can go directly to what I wanted. The WWDC videos + transcripts move from "something I saw one time" to "this becomes part of my reference library".
This is just advertisement for your site ... stop spamming unrelated crap
Actually your best bet is to learn Swift without any GUI interaction at all. That is learn the language first. By the time you have the language basics down SwuftUI and Catalina will have launched. If you get the basics of the language out of the way first you can then focus on the GUI code. As for a new MacOS upgrade I’d get your software updated. One way or another 32 bit software is coming to an end. Of course that is easier said than done. What really bothers me here is that you described the machine as running mission critical software! If that is the case you really should get another machine for software development. While not as big of a problem as it might have been in the past or is on other platforms, you don’t want something you are doing development wise ruining your production hardware. Basically it is bad VooDoo to use a production (mission critical) machine for programming.
Yes I believe that is what he is saying and what I’m saying. This especially if you don’t have a strong programming back ground. The idea is to get started without the distraction of the GUI and other burdensome frameworks. The release of SwiftUI and the supporting operating systems isn’t far off anyways so you should be able to merge into the GUI stuff fairly easy. You indicate really thing programming knowledge or experience so being an advocate of ground up learning I strongly lean towards getting the basics under your belt. In fact before taking any Mac related courses I would instead suggest at least a couple of courses in computer science. Such courses will likely be taught in something other than Swift. If you take the courses in parallel with learning Swift on your own you should be able to quickly establish what is generic across all languages (the science if you will) vs what is a specific languages syntax. In any event consider my warning about using a “mission critical” machine for development.
Except I really don’t see it as good advice. We are not that far from product releases, literally a couple of months. If you want to take on GUI development and get up to speed quick SwiftUI is likely the better choice. It will be far easier to work with for a beginner for one. Second. It is the way forward on Apples platforms. You may eventually need to work with the older tech but that can be put off until you get up to speed with Swift and SwiftUI. Eventually you will need to learn a bit of Objective C, C++, BASH, Python and maybe other programming environments. This is why I see a comp-sci type class sequence as so important as hopefully it separates out the concepts from the language implementation which should lead to faster adaptation as needs change.
What alternative do you propose? To simultaneously learn programming, a programming language and its standard library, an operating system, and a new (beta) user interface framework? Nobody learns to drive a car by taking laps around Monte Carlo in the Red Bull F1 car, not even future race car drivers, and not even in a simulator.
This is so true. More importantly any programmer is likely to need to use or understand languages that are not his core working language. Often these are system scripting languages. But even Mac software is often built with non platform normal languages. Macs are generally Objective C or now Swift machines but software has been written for the platform in many other languages.
I think it would be even better if they released more useful summaries. Then I wouldn’t have to do it :-) https://github.com/rayascott/iosnotes/wiki/Using-Core-Data-with-CloudKit
Thanks!
I guess I was thinking in terms of learning to build an app rather than learning a language. I understand now.
Thanks for the advice. I always keep my software up to date. I do mainly audio and some video production stuff, so everything is 64-bit, but some things aren’t, like installers and updaters for some software. I get optimization warnings every now and then. I guess I should dual boot. I already have a nearly specked out 2018 MBP and a pretty beefy gaming laptop. I use both just as often. I’m just messing around when it comes to development, nothing serious.
Hmm, okay. Thanks. Well, I’m not looking to get serious with this. Just some iOS apps with a Firebase backend maybe. And I’ll hand back-end development over to someone else if I decide to use AWS. Azure, etc. I have a lot of stuff on my plate, so I just wanted to experiment with Swift.
Try reconecting the cable? If that does not work go to phone settings and try to find it there. If that also does not work then go to devices in xcode.
I like most of it, everything basically except for the tall non native big title fonts. They are a bit strange for strange sake.
Yeah that's something I'm willing to live with. Thanks for the help!
It's my post. Thanks for your cooperation. As you said, English is not my first language. I would be glad if you could help me to improve my english post.
it's hard to say without the code to look at.
`// Clients.swift class ClientsTableView: NSViewController { override func viewDidLoad() { super.viewDidLoad() // Do view setup here. //let model = ClientsModel() } @IBOutlet weak var tableView: NSTableView! @IBAction func tableAction(_ sender: Any) { let i = tableView.selectedRow if i &gt;= 0 { let clientFields = ClientsMainView() clientFields.updateTexts(index: i) } } @objc dynamic var clientsView = ClientsModel().clients //var clientArray = ClientsModel().constructFrom(cells: RecordManager(atTable: "Clients") } class ClientsMainView: NSViewController, NSTextDelegate { override func viewDidLoad() { super.viewDidLoad() // Do view setup here. } // Outlets of Labels // Outlets of Text Fields @IBOutlet var IDTxt: NSTextField! @IBOutlet var firstNameTxt: NSTextField! @IBOutlet var lastNameTxt: NSTextField! @IBOutlet var addressLn1Txt: NSTextField! @IBOutlet var addressLn2Txt: NSTextField! @IBOutlet var postcodeTxt: NSTextField! @IBOutlet var telNumTxt: NSTextField! @IBOutlet var dobTxt: NSTextField! func updateTexts(index:Int) { let clietContent = ClientsModel().clients print(clietContent[index].ID) IDTxt.stringValue = String(clietContent[index].ID) firstNameTxt.stringValue = clietContent[index].firstName lastNameTxt.stringValue = clietContent[index].lastName addressLn1Txt.stringValue = clietContent[index].addressLn1 addressLn2Txt.stringValue = clietContent[index].addressLn2 postcodeTxt.stringValue = clietContent[index].postcode telNumTxt.stringValue = clietContent[index].telNum dobTxt.stringValue = clietContent[index].dob } }`
How can I construct a dictionary with the following structure: var myDictionary = [ "data": [ "thing1": "a", "thing2": "b", "thing3": "c" } from the following two dictionaries: var partialData1 = [ "thing1": "a", "thing2": "b", ] and var partialData2 = [ "thing3": "c" ] ?
Your NSTextField is probably unbound.
You should try asking [Pierre de Fermat]( https://en.m.wikipedia.org/wiki/Fermat's_Last_Theorem)! He wrote an entire proof in the margins of a book!
Desktop link: https://en.wikipedia.org/wiki/Fermat's_Last_Theorem *** ^^/r/HelperBot_ ^^Downvote ^^to ^^remove. ^^Counter: ^^267461. [^^Found ^^a ^^bug?](https://reddit.com/message/compose/?to=swim1929&amp;subject=Bug&amp;message=https://reddit.com/r/swift/comments/cc47bp/app_idea/etkfa58/)
**Fermat's Last Theorem** In number theory, Fermat's Last Theorem (sometimes called Fermat's conjecture, especially in older texts) states that no three positive integers a, b, and c satisfy the equation an + bn = cn for any integer value of n greater than 2. The cases n = 1 and n = 2 have been known since antiquity to have an infinite number of solutions.The proposition was first conjectured by Pierre de Fermat in 1637 in the margin of a copy of Arithmetica; Fermat added that he had a proof that was too large to fit in the margin. However, there were first doubts about it since the publication was done by his son without his consent, after Fermat's death. After 358 years of effort by mathematicians, the first successful proof was released in 1994 by Andrew Wiles, and formally published in 1995; it was described as a "stunning advance" in the citation for Wiles's Abel Prize award in 2016. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Hi, I am just learning how to use Atom… I was wondering how do you get it to show the results at the bottom of the console like in Xcode? I am a little more familiar with Xcode so any help is appreciated… Thanks
Go to your App's general settings and make sure you fill out "bundle identifier" with whatever text you want under the "identity" field. Additionally, make sure you assign an account to the "team" setting under the "Signing" field. I'm pretty new to swift and this is what helped me deploy the app on my phone. Hope this helps !
If anyone could help answer my question at StackOverflow I'd be forever grateful! https://stackoverflow.com/questions/57000037/how-to-use-identifiable-in-a-foreach-loop
haha yeah ? I want to have a steampunk/retro vintage style in the app, so it's a bit golden and victorian font :p
Completed the first couple of projects. If I hadn't already had quite a lot of exposure to Xcode albeit in Objective-C days I think these would have been a bit mind-blowing. Doing the first two projects wasn't hard at all, but understanding what on earth you'd just done, that would be a challenge. I hope that through repetition as I go through these projects, at some point I'll begin to guess right about what tool is needed to do what job. Right now it's extremely hard to generalise from one API call to where I can expect to find solutions to other related problems. The auto-complete is massively helpful in this regard. For non-Apple platforms which don't have auto-complete I think it must be very hard - there are just a gazillion different API calls to remember. PH's choice of small but interesting coding examples is, to my mind, as good as it can be. Is Swift just the language? Is it hell. As we learned with Java, the virtual machine and language are a tiny fraction of the platform functionality that gives it its value. Similarly, I believe the IBM PC chose Intel rather than the far superior Motorola 6800 with its flat address space because of the peripheral chips available for the 8086. I, and others, wept at the choice. And although the PHP language is the opposite of Swift in terms of compactness, safety, clarity of author's intent, it has such a mountain of functions addressing the web server domain that one cannot sensible avoid it. Just saying .... So I expect 80%+ of "100 Days .." will actually be about the libraries, frameworks, and tools. Time will tell.
From what you've asked for, I'd say you need to make a @State private var showTextField = false at the top of the struct, and then upon tapping the button $showTextField = true. Then there will be an if statement block just above your Button block like this `if showTextField {` `TextField("Placeholder")` `} else {` `EmptyView()` `}` Is this along the lines of what you'd like to do?
I just got my first iOS app approved and published in the app store. GoingVertical
does that mean that I didn’t Ctrl-drag from the Storyboard to the class?
I realize I will be in the minority here, but as someone who has worked quite a bit with react and react native, I am very disappointed that iOS is moving towards a react-styled layout. Honestly I detest react and it's layout style and am really hoping to see SwiftUI fail, although I know it won't happen since obviously Apple is pushing it.
Believe me, it won't fail. Declarative and functional UI solve very big problems. There is a reason Apple is moving toward it. It's just much much easier for the developer, and the end product is far less bug prone. And you can drop Interface Builder/Storyboard, because what you see in your view declaration is what you get. It's a 1:1 representation. What do you detest so much with declarative UI?
if you provide a name to `Result&lt;(Bool), Error&gt;` you can specify a description. I don't know if you can somehow provide a description to an unnamed parameter. // Notes to explain what example function does /// /// - parameter foo: description of foo property. /// - parameter bar: description of bar property. /// - parameter completion: description of completion test. /// - parameter result: description of completion parameter result. func exampleFunction(foo:String, bar:String, completion: @escaping (_ result: Result&lt;Bool, Error&gt;) -&gt; Void) { //Code with completion } [https://imgur.com/a/eQpLMMQ](https://imgur.com/a/eQpLMMQ)
&gt;Thank you. thats solved my problem. I wasn't aware I could name the result.
Could you explain more? What does this button do? Create textfield? Not sure I understand the question.
WWDC2019 "Data Flow Through SwiftUI" explains what this post is trying to work out. https://developer.apple.com/videos/play/wwdc2019/226/
Love these bite sized SwiftUI tutorials! It’ll be nice to be exposed to more of it when procrastinating on Instagram!
You could make the text field disabled based on a Boolean and the button would toggle its state. Then you can use the placeholder text of the text field to make it say whatever you’d like. Hope that helps!
Nice! Will be reading the ebook later today👍🏻
I am actually trying to pick developing back up. Working through some tutorials and trying to salvage a project in Swift 2 without having to reinstall multiple versions of Xcode. So yeah, I've got that going for me.
Restarting my Mac work thanks!
Thanks! I restarted my Mac and did this and it worked thanks for the help
I usually make a struct and then just reference it as needed. I got the idea from this Ray Wenderlich article [https://www.raywenderlich.com/605079-migrating-to-unified-logging-console-and-instruments](https://www.raywenderlich.com/605079-migrating-to-unified-logging-console-and-instruments) and it has served me pretty well over a couple of different projects. &amp;#x200B; I wouldn't use print
We use our own logging code because it's more flexible. Usually we log to a file on the device. We have an option where we can log to a server - great for remote debugging. We can also have the user email the log file to our support people. The only really tricky parts were having no measurable speed impact on old devices (our ObjC logger was written for the original iPhone), multithread support (easier now with gcd), and log file rotation and cleanup when the file gets too big. I'm not really suggesting you write your own, though. There are a lot of options. Apple's logger is in my opinion a poor choice for anything but development builds. There are some simple things you can do in your own code, like: gLog?.error( "Whoops" ) This way you can set gLog to nil to turn off logging and it'll have almost no runtime impact. Log.shared.error("Whoops") This one allows for multiple log objects if you want but also a common shared one, which is the usual case.
Almost forgot - in ObjC it was better to use macros for logging, like **LogError(...)** or **LogWarning(...)**, because they permitted us to use **\_\_FILE\_\_** and **\_\_LINE\_\_** to note the code responsible for logging.
Debugprint(“Error \(error.localized)”)
Do you mean [de facto](https://en.wikipedia.org/wiki/De_facto)?
At a minimum, you should be using debugPrint() (instead of regular print()) since it will suppress your logging in release builds. Although print() and debugPrint() are not thread-safe so you might wind up with weird output in multi-threaded code. Good old NSLog() is an alternative, but again you need to take extra steps to suppress logging in release builds. os_log() is a bit more modern and probably preferred to any of the above, but I would think swift-log would start to be the preferred approach since it’s developed by Apple. Overall, it really depends on your needs (writing to file, different log levels, sending logs to a backend, etc.).
Do you have idea how can I get an output window like described - [https://koenig-media.raywenderlich.com/uploads/2019/02/4-console.png](https://koenig-media.raywenderlich.com/uploads/2019/02/4-console.png) ? &amp;#x200B; Thanks
You can actually just use a #IF DEBUg macro to remove all print logs in production while using the original function print(...args)
That is a window of the Console app. It is installed on every Mac.
That will really quickly get out of hand, with conditional compilation all over the place. It's much better to use a logging framework like \`os\_log\` and friends
/r/BoneAppleTea
Thanks. Take me some time to figure out as I thought it is part of XCode. Apparently it is an independent app.
I use `print` only for debugging and not logging I would want in production. That way I can always to a find-all to remove those. I use to use Crashlytics for loggings, since they would get rolled up and included with crashes, but I'm trying to avoid using them now that they are owned by Google (and include trackers), so I just stick with os log.
We built our own logger with different levels of detail (.none, .analytics, .debug, .verbose) and they are automatically enabled/disabled based on what type of build we’re making in our pipeline. So a prod build will save to an encrypted log file with just standard, safe debug stuff that’s still useful. A staging build will have all debugging enabled in an unencrypted, viewable file. A local build will.... well, you get the picture.
This was my main issue with storyboards over the last few years that I’ve been doing iOS development. This change might cause me to take a look at them again (although it might just be worth it to use SwiftUI in new projects anyway).
You just need to use `os_log` with Debug level messages, you don't need to set up a Singleton. &amp;#x200B; first create the log: `let customLog = OSLog(subsystem: "com.your\_company.your\_subsystem\_name.plist", category: "your\_category\_name")` then log it with type `.debug`: `os\_log("This is info that may be helpful during development or debugging.", log: customLog, type: .debug)` &amp;#x200B; found from [this page in the docs](https://developer.apple.com/documentation/os/logging)
That’s a great new addition!! I have recently published my app Envision: Habits Tracker - https://apps.apple.com/ro/app/envision-habits-tracker/id1423771095 I am using a modified version of your library in my app that is doing exactly the Floating Banner. I highly recommend to anyone that has a need for in-app notifications to use this Library. It’s easy to use and implement with a lot of customization available already built-in.
Thanks for the kind words! Glad you find it easy to use!
No. Not that. Everything else discussed in this thread is a solution to avoid *that*. Here’s another: One can have breakpoints perform the debugger command “po instanceName” to print variables you’re interested in. Then instead of changing code you’re toggling breakpoints to print/not print.
Make a global debug print function and put the ifdef in there once?
Make sure the I piece is the best piece. Closely followed by the T piece. But in all seriousness, google it. There’s a bunch of code on GitHub that you can read through and get ideas/inspiration from. My way of doing it might not work for you.
Thanks! 👍
Like notes exept it just one view
&gt; At a minimum, you should be using debugPrint() (instead of regular print()) since it will suppress your logging in release builds. Really? I can't find any documentation (first- or third-party) that corroborates this. But that's OK, because I *want* logging for release builds. That's the most important place to get logging information!
Just delete all of it. People don't actually want that junk.
Haha I wish! The app is for a church and we’re pretty “big” on social media. If we could pick Facebook or app, we’d pick Facebook
&gt; Reddit is kinda wack with formatting A little bird once told me there are other places on the internet where one can upload source code.
Sure, or just use a logging framework that's done it all for you. Conditional logging, ring buffer logging, debug levels, etc.
Wouldn’t it be better to use compiler flags to log or not? Instead of nil
How did you publish, I am trying to publish my small app.
You can do that by making your own custom camera implementation and using the UIImagePicker for accessing the camera. This medium post can be helpful [https://medium.com/@jorgech/how-to-access-to-the-back-and-front-camera-from-swift-accf5adfc37f](https://medium.com/@jorgech/how-to-access-to-the-back-and-front-camera-from-swift-accf5adfc37f)
Maybe make buttons smaller
&gt;Framing Protocols Can you please post some of the resources links you found helpful to learn SwiftUI.
Our ObjC library can do it either way. On old slow devices we definitely used the compiler flags more than we do today. When tracking down remote problems, though, we found that it's often nice to have a debug switch inside the app to turn on verbose logging and then have the user send us the logs. We did some timing tests and, unless you call the logging code inside a tight loop, there's almost no overhead these days thanks to faster CPUs and branch prediction. Still, if you're logging while interacting with the user or animating it can be an issue. Our old macros would essentially evaluate to if ( gDebugLogging ) Log( ... ) so it was just a simple boolean global variable check, which is much faster than a function/method call.
ELI 5 guard let statements.
MVVM with a bump (-C) - Give this a shot, slides and video (good speaker) in the README.md : [https://github.com/macdevnet/mvvmc-demo](https://github.com/macdevnet/mvvmc-demo)
just to change thing up? you can corner radius 100
And don’t use #if DEBUG. Write to the .debug level for your OSLog. A release build disables debug level logging so it negates the need for using build switches.
Honestly, just look at some other apps you like the look of and take inspiration. There’s a lot of specifics that could be changed with your design but I’d suggest it’s easier to start again
Yeah, there’s just not many apps with a bunch of social media links
Yeah I’ve done that, still not pretty lol
I’ll try it
Hey, Developer of Pizza The Pie here. While PTP is very different, there’s a lot in common so I can give you some advice. Break everything up into its own thing. For me, I created a bunch of managers that handle various aspects. Some examples: GameManager PieceManager PlayerManager LayoutManager Etc Then create a bunch of classes for every component. For the shapes, I’d create a Piece class and each of the different piece styles would extend that class and have it’s own Sprite attaches to it. The PieceManager would hold the queue of all the pieces. I have a bunch of algorithms that decide what the next piece is. You don’t need to be as sofisticated, you can just randomly choose the next piece as long as it’s different from the current piece. Make sure each piece has collision detection to detect if it touches another piece. You’ll also want a class to detect if a completed line has occurred . That’s a fun challenge! There’s a ton more code involved but that should get you started. Have fun!
Thx will check it out
Thank you so much! I was confused too conceptually on what was needed and this seemed to clear it all up.
For the record - SwiftLog is designed as primarily as a Logging API, rather than a direct logging framework or solution. os_log will _conform_ to SwiftLog's API, as well as other Logging frameworks (that choose to work within the ecosystem). The only reason why SwiftLog supports logging out of the box, is that it was determined that a bare minimum way to log with it was necessary during the Swift on Server Working Group proposal phase. For more information, see [SSWG-0001 Logging API](https://github.com/swift-server/sswg/blob/master/proposals/0001-logging-api.md)
To answer your question specifically - it depends on your answer to the following questions: 1. When are you planning on seeing these logs? During development in a console, or after you ship and in some collected / aggregated form? 1. What kind of things are you logging? Mission critical (analytics), or just debugging information?