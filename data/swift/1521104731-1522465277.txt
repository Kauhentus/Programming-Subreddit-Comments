To be honest hardly any schools/colleges/universities offer obj-c/swift education. Its one of those languages you pivot to after your forced into the usual C/C#/Java route.
I learnt from library books in the 80s. Kids these days. 
When I learnt to program, if you couldn't solve a problem you had to go to a library and look for a book that might help you figure it out. 90% of programming is problem solving. If you're genuinely interested in becoming a programmer, you'll have to get used to solving difficult problems. So get used to being in situations where there's no obvious answers, and you just have to methodically work your way through it until you figure it out on your own. 
https://www.hackingwithswift.com/ for sure. You can read it for fun. 
I'm completely self taught. Well that's not true, I learned the very basics of programming in Turbo Pascal during 7th grade. Everything that I use today I learned myself. You can do to. Get a proper book that walks you through the process of creating an app from start to beginning. Apple offers a free ebook named [App Development with Swift](https://itunes.apple.com/us/book/app-development-with-swift/id1219117996?mt=11) that does that. 
Yeah! Good thing we have forums like Reddit to help us through that! 
UIDatePicker has a mode .dateAndTime, which combines the month and day and displays the time too. If you don't need the time, set the pickerMode of UIDatePicker to .date. If it doesn't display the time, it's a custom UIPickerView and not a UIDatePicker. Here's a screenshot that shows the two modes of UIDatePicker, top is `.dateAndTime`, bottom `.date`: https://i.imgur.com/1HPznA6.png
I’ve learned to program before the internet. Just grabbed any programming related book I could. 
If you want to learn on your own that a good book will always be the best option, assuming the book isn't a hundred years old and not relevant anymore. 
Back in my day, we had to program in two feet of snow while barefoot. I think you'll find most are self taught on a particular language and the others will eventually need to. In HS or college, you'll be learning the fundamental logic and conventions. If the language you are being taught is not already obsolete, it will be soon enough. 
I've seen some teaching materials, it's very advanced, at the level of Bartosz Milewski's blog posts about functional programming. The Swift module seems to be new though. BTW where's the typo? Didn't spot any.
I know you added an '/s', but this comment still comes across as obnoxious. Can you rephrase it?
I did -- thanks!
This is why I dropped out of my CS major years ago. They were trying to teach me Ada. I understand it's good to learn fundamentals and know the history behind modern languages, but damn was that a snoozefest. More schools need to adopt the "teach them stuff they will enjoy learning" mindset. I can't think of a better way to do that than teach them how to code the apps they use daily.
In addition to the resources other people have pointed you to on learning swift, consider taking classes in whatever languages *are* offered by your high school, community college, or whatever. Learning more languages makes you a better programmer. Each language you master will teach new new and different skills. For instance, C may teach you about memory management and pointer arithmetic. Python may teach you about expressive code and lazy evaluation. Lisp can teach you about functional programming and composition. Perl will teach you about regular expressions and maintainable code. Java will teach you the true meaning of redundant code redundancy and checked exception handling. I've learned lessons from each of those languages that make everything I do in the future better. 
Ill try Firebase, thanks! 
This code snippet does not give enough information about what you want to achieve and in what context you want to do such things. The answer could be either you should trigger the action in the VC in where the button is located or you could achieve this via a listener
I got two different buttons in my viewController. If I click on one of them I load into the other viewController. And now I want to declare which Array get's used by checking which button got pressed to get into the second viewController. Here is my code for these two viewController.swift files. [ViewController](https://gist.github.com/anonymous/305765b45ecf5cc1b2871a7add1aeb3e) [QuizVC](https://gist.github.com/anonymous/17816a9762a95c84f014022e0a176c9e)
^ This, I've found this to be the best guide so far 
Why don't you use storyboards? With storyboards you could set a segue on the buttons and then override the performSegueWithIdentifier method, get the destination vc and set the arrays to the destination.
So I implemented this and it worked (thanks!) but I have a few questions, because although the code worked I'm not sure why - like I said as a beginner I'm having a lot of trouble wrapping my head around completion handlers. I'll put the exact code I used at the bottom: 1. Right now the letters (views) turn blue in sequence, but it happens from right to left instead of left to right which I'd prefer. I'm guessing this is because of `popLast()`? How do I reverse the order and make the views change color from left to right? 2. Is there an "autocomplete" way to put a completion handler in the function signature? Or do you always have to type out `completionHandler: ( () -&gt; Void )?`. I'm used to just hitting enter on completion blocks and they expand - although maybe my taking the easy way is why I don't understand completion blocks very well... 3. What exactly does the last part of `animateViews` mean - the `else if let completionHandler = completionHandler` part? I'm confused since we never wrote out a function named `completionHandler()`. Sorry, I'm just really confused with both recursion and completion handlers. Code: @IBAction func openButtonPressed(_ sender: Any) { let views = [self.oLetter, self.pLetter, self.eLetter, self.nLetter] animateViews(views: views as! [UIView], completionHandler: { }) } // oLetter blue, then p, e, n. Then all flash red-&gt;blue-&gt;red&gt;blue func animateViews(views: [UIView], completionHandler:( () -&gt; Void)? ) { var tempViews = views if let lastView = tempViews.popLast() { UIView.animate(withDuration: 0.5, animations: { lastView.backgroundColor = UIColor.blue }, completion: { (finished) in self.animateViews(views: tempViews, completionHandler: completionHandler) }) } else if let completionHandler = completionHandler { completionHandler() } }
Because I just followed a youtube tutorial to create a quiz app. But there should be a way to do it without storyboards. I mean why can't the button just be available through the different files? [The youtube tutorial](https://www.youtube.com/watch?v=pDHguzqvwbg&amp;t=) 
Hey I’ve been meaning to pick up iOS development but I feel so loss and have no idea where to start. Could you speak as to how you went about learning it?
Can you speak to your prior technical background a bit. 
Sure. In my opinion, without a question the most important thing you need to have is persistence and eagerness to learn. Without these traits, if you feel like you are forcing yourself to learn something you don't enjoy it will be extremely difficult and painful. I was fortunate enough to have a true passion for learning iOS development. On how I personally went about learning take a look at one of my previous posts. And trust me when I began, I was SO lost and felt helpless but it gradually became easier because I was really eager to learn. Everyone has a different approach but this was just how I learned from the beginning: https://www.reddit.com/r/swift/comments/822x72/i_am_really_proud_of_myself_in_how_far_ive_come/
Awesome man! This is inspirational. Can you let us know about the transition process once you have a few days/weeks under your belt too? 
Sure, but I am not 100% I will take the offer yet.
Why?
Waiting to hear back on other interviews.
I edited in some info about me. I don't really have a formal technical background in terms of programming. The only technical background I have outside of programming is just math lol
Great and nice work man! I hope to see more updates from you during this process
Thanks I appreciate it! I will definitely update my progress with this sub
I’m an iOS engineer for the Citibank app. [Here’s](https://www.reddit.com/r/learnprogramming/comments/6dz1pi/do_you_want_to_be_an_ios_developer_maybe_even/?st=JESU9UVY&amp;sh=49c579ed) a bigass post I made regarding learning material, etc. 
Congrats! What were the most common interview questions you were asked?
Congratulations! I’m also a self taught iOS developer and got a job as one 5 months ago for 1 of the big 4 US banks. Although I started in 2013 but I didn’t look for any jobs at the time until I got a recruiter’s email last year. Some things to get familiar with if you’re not already: Jenkins and CI/CD, the app’s Settings.bundle, test driven development (unit testing, UI testing), how to read Objective-C, and how to use Source Tree. These are some of the things it was assumed I knew when I started my job. 
Just off the top of my head these were pretty common: - Explain the pillars of OOP - Design patterns - Delegation/protocols - Access levels/scopes 
Was the 100 day coding challenge something you created or was this from a website somewhere? I'd be interested in learning more about that.
As someone who's currently looking for a job, this is refreshing to see. How many interviews did you have before you got the offer? Also, what resources did you use to find companies looking for IOS devs?
Personally for me I experienced more algo and not much data structure questions. But my sample of interviews is not a good reflection of overall iOS industry hiring process because the interviews I did manage to get were mid-sized firms not huge tech companies that expect you to be the best of the best. So my guess is, the interviews especially the technical aspect in my case were no where close to how difficult the huge tech companies usually make them
Yes you can make apps without storyboards, But it is time consuming and painful. Anyway. Views like buttons are bound to the lifecycle of the containing viewcontroller. The moment you press the button and get to the second viewcontroller the button might no longer exists. If you however got a reference of this button in your second viewcontroller and try to access it, the reference to the button is maybe nil already. Also, the button press isn't persistet. So if the button is pressed and pushes you to the second view controller everything is forgotten. Which means even if you have a reference to the button which is not null, the button couldn't tell you if was recently pressed. That's why you should work with a segue or whatever and pass the "which-button-was-pressed"-parameter to the second viewcontroller
Sweet!!!
61 apps.... 7 rejectsions, 43 did not hear back and 1 offer.... So what happened to the other 10? 
yea woops typo meant 53 thanks
At first I was like “wtf 45 days??” But when you said 4-8 hours a day, that makes more sense. I really just need to put in the time and stop procrastinating.
This is a great resource! Thanks for the heads up!
Simple: make Interface Builder an independent application that is internally connected to Xcode. Great way to improve IB without making everything slow. 
That's pretty excellent. Great work!
Got it. Thanks!
Imagine everything is a stream of values. Now build a functional API around it. 
Neat. How much did you learn about general programming? For example, do you understand stack allocation and heap allocation? Just curious.
What is "everything" here? I *think* in this context it means "any data value that you'd want to pass between the model and view". In which case, it looks like it is just using closures, and RxSwift is *mostly* a bunch of convenience glue to make that a lot easier and more standardized.
I had no formal computer science background and taught myself everything from free resources. You can literally learn anything you want online for free if you have the motivation and discipline. In my opinion, the only reason you should get a teacher or pay for resources is if you have very little self-discipline. Stop thinking you HAVE to learn from someone or pay for resources to learn
To be 100% honest I learned very little computer science fundamentals and is by far my weakest attribute as a self-taught developer. It's a huge weakness and I understand i need to learn these things to be a better programmer that's why I'm studying cs fundamental material on my free time whenever I'm not studying ios 
Git flow Protocol oriented programming Design pattern Mvc vs mvp (if you know mvvm or viper, big plus) Cocoa pods Parsing json 
i find that i understand the swift syntax just fine, but i don't fully understand where i'm supposed to put my code or how i should split it up compartmentalize it etc. 
Yep exactly this!
I've been programming for many years, there's a balance in programming. The balance is in what you need to know to be a programmer. In college they taught all kinds of stuff, including sorts and trees. I have never written a sort professionally. Sorts are built in to the system. Xcode gives you templates to start, so why would you need to write a "AppDelegate.swift" from scratch? I added a remote order processing system that use 3rd party tools, I learned what I needed from the tools and nothing more. The balance is in being a full "cut and paste" programmer or everything from scratch programmer. Back when slide out menus became popular, I got a 3rd party one and it crashed on my version of iOS. I had to go in and modify the code to make it backward compatible. The balance is about how much you should know about every little thing. You have master-detail templates, do you really need to know how to hand craft one from scratch when you have templates from Apple? Most agree that using 3rd party tools is great, but you really need to understand how the code works and how to change it. #####One of the key things to knowing if you're good is that you can debug and modify complex code that someone else wrote. This is an important skill. Xcode not only gives you all the options when you type it in, but allows you to make your own custom code snippets. You probably won't survive on EITHER end of the balance, hand crafting everything from scratch or "cut n paste" only. There's another balance... leaning things that Xcode remembers for you... or learning APIs that make for apps that people love... Here's a tip: if you push more towards learning the APIs, you'll get the other stuff over time because you'll see it over and over again. If you spend too much time on the "nuts and bolts" you'll take a lot longer to make progress. Progress is important. Back in 2009/2010 I made the "floating teapot" on my device. It's a teapot that can't tip over. It was amazing. THIS is where you find motivation. You keep seeing the same code structures over and over, they'll start to sink in. Example: I just did my first framework because of a tutorial and it was cool. I didn't know how to do it correctly before... Point: programming is non stop learning, balance what you learn between the nuts and bolts and the advanced stuff and you'll find less frustration. I spent 2+ hours on the phone with MS to get to the point where I could import Outlook email into an iOS app... I spend 3X that trying to get the same thing with Gmail. It's not so easy to stay motivate if you always get lost in the nuts and bolts.
What you’re feeling is totally normal. As an analogy, you can consider what it’s like to learn a foreign spoken language. After you learn how to form sentences, you still have more learning to do before you can write prose. As KarlJay001 said, programmers are constantly learning. If you’re not getting frustrated at some points, then you’re probably stagnant! Keep pushing on, find the things that you enjoy most about writing software, and then remember those during the tough periods of pushing through new material. 
You're not learning, you're just copying. Get a book and learn step by step. You don't go from nothing to a working app from watching a few videos. You start with "hello world." Then you iterate over an array of strings and print them. Then you create an class and print it. Then you create two classes that do something together. 
Don't oversell yourself. It's more important to realize you don't know something and are willing to learn than it is to pretend you already know everything. Be willing to be corrected, this can be shown by not being hard set on any one way of doing something. They might suggest protocols, some think this is overblown. Showing strong opinions usually leads to being seen as not flexible. Someone posted that he was really pissed off because a new hire was hired above him. I responded by saying that he's there to help the company first, he needed to stop thinking about his career advancement and start thinking about how he can help the company reach their goals.
Congrats!! 🎈🎉🍾 I’m hoping to change career as well. It’s been three months since I started learning iOS dev. 
Language doesn’t matter and if someone is asking hardcore swift objective c questions they’re doing it wrong for an internship. If you did c++ questions in college I’ll ask about that, Java, that, etc. Languages are languages and if you know how to write efficient good code in a language you can probably do it in anything. If somebody asks you about the use of cocoa pods they’re probably terrible and can’t write code on their own.
It sounds like you don't have a full grasp on programming concepts. I suggest going away from iOS itself and focus a bit on programming in its purest form: processing data and displaying the results on a terminal (or writing to a file). 
ugggh, I feel like a moron trying to learn Swift. I have no background in programming, and this has been terrible. 
To understand that, it's best to learn reactive programming as a general concept, one good introduction is: https://gist.github.com/staltz/868e7e9bc2a7b8c1f754 RxSwift is just a swift implementation of the ReactiveX implementation of Observables. More info is at http://reactivex.io/. RxSwift shouldn't just be used because it's cool or trendy: it's setup to solve specific problems with a functional paradigm. If you feel closures solve your problems, use the best tool available to you instead of hammering everything with RxSwift. It's an amazing tool, but also can get complex quickly when overused.
Don't expect it to go very fast. You can't go fast without cut-n-paste and cut-n-paste doesn't help you learn much. Think of it like learning English. You learn the ABCs, verbs, nouns, etc... at some point, you write a book. A book isn't just ABCs tossed out, it has to make a point to be good. It's not a simple easy process. Apple did something interesting by making Swift easy and replacing ObjC. It allows non-programmers to jump in, but only as far as the language goes. There's a LOT more to developing a great app than just knowing the language. Remember, you're competing against some of the smartest people in the world for some of the most desirable jobs in the world. If everyone could master it, the market would be flooded with experts, yet it's the other way around.
That's pretty incredible. Mazal tov. Will you be the only iOS developer at work or will you have a senior iOS dev and you are a junior dev? Did you get any programming questions on the interview? How large is the company? Great success and best of luck Cheers
yea i'm almost done with the 2nd lecture and it ramped up pretty quick. definitely making me use my brain!
Thank you so much! I'll try to be as flexible as I can.
Grats, man :)
Swift is a cool language I'm self taught too thanks for the encouraging words
Thanks but actually I consider myself fairly new, just 3 moths of experience. The gif I am showing is not my current project, just a new one I created to work on search controller. I try to minimise the number of library used in my project so that I can maintain them myself. Do you have any idea how to solve my problem?
What salary did you get? Congrats!
Android development is a clusterfuck with all the fragmentation. You went into the right field.
Refactoring my code for my music app, Nusic. Just added push notifications to the app where I will suggest one song per day based on the previous tracks you liked. Try the app over here: https://itunes.apple.com/us/app/nusic/id1314807539?ls=1&amp;mt=8
So inspirational story. Thanks. I should continue to study too.
Just wanted to say it’s great that you’re trying to solve this on your own without going straight to a library. I hate when people respond to people’s calls for help with a library suggestion. You’ll learn nothing just using someone else’s ready-made solution.
Can you give us a bit more background on what you're using for a search? Things like Core Data, Realm, etc... If you're up for a paid tutorial, I'm pretty sure the Angela Yu tutorial from Udemy has a Realm with search. They go on sale for $10 all the time. The basics is that you grab each change in the textfield and do a search (send a query to the data source), then reload the data or check the number of results then update if &gt; 0.
My db will be realm(but not yet implemented, in UI building stage now) but actually my main problem, is that my search controller is at the blue controller (see picture), and I dont know how my tableview controller (which will display the search data) can capture the search text (user will enter from the blue vc). How the delegate function in my tableview controller being triggered? &gt; func updateSearchResults(for searchController: UISearchController) { &gt; logging.debug("printing update search results in wifi") &gt; }
Thanks man
I'm going to be blunt, but if you can't use it, then you don't really have a grasp on it. To avoid the feeling of being overwhelmed, start with simpler problems that are not over whelming, but not too simple either. (Also, a minor point, but class inheritance is not really a core concept).
online tool and apps can help you convert heic to jpeg format https://www.fonecope.com/convert-heic-to-jpg.html 
You have a text box of some type, it'll have a method like didChange or textDidChange or something like that. At that time, you've got the search text the user entered. You call as search on the Realm DB and then the table view can do reloadData. I just did a quick search thru the tutorial. It's the to do list by Angela Yu from Udemy and it's done thru an extension function that calls a filter and then reLoadData().... extension TodoListViewController: UISearchBarDelegate { func searchBarSearchButtonClicked(_ searchBar: UISearchBar) { todoItems = todoItems?.filter("title CONTAINS[cd] %@", searchBar.text!).sorted(byKeyPath: "dateCreated", ascending: true) tableView.reloadData() } func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) { if searchBar.text?.count == 0 { loadItems() DispatchQueue.main.async { searchBar.resignFirstResponder() } } } Here's a link to the course: https://www.udemy.com/ios-11-app-development-bootcamp/learn/v4/overview You can see in the snippet that there's a "textDidChange" and that calls loadItems after checking for empty string. The filter is a Realm thing, but you can do the same kinda thing with Core Data. I think most of these tutorials cover that as well. It's good to know more than one. Here's the loadItems: func loadItems() { todoItems = selectedCategory?.items.sorted(byKeyPath: "title", ascending: true) tableView.reloadData() } 
Thanks for your thoughtful feedback. It's just so weird for me because it's a kind of learning I've never experienced before. I can't take any of my pre-existing knowledge and scaffold from it onto programming.
Congrats. 5 years ago I was exactly where you were now. Studied math and finance in college, didn’t want to work in finance. Got iOS job out of determination and luck. Best fork in the road yet. Work hard and prosper!
Ok, thank you for clarification. 
I saw the guy in the tutorial do that for a different thing with two other viewController files. But I wasn't able to copy the same method for my purpose. The guy from the tutorial wrote to me, that I can also switch between the different questionsArray arrays but I wanted to do it with the which button was pressed method, but as I wrote, it didn't work out for me. Either I got some errors already in my code that prevented me from even building the app or I was able to build it but then when I pressed one of the buttons I got the error: "thread1:signal SIGABRT". I also think that this is a "bit" over my current knowledge, which is basically a joke. What exactly do I have to write into both files to link btnGetStarted and btnFarben through both files?
50k + benefits 
Swift, and be able to read objc 
I bought a Mac Mini about 5 years ago to teach myself to program iOS devices. My only other programming experience was some stuff I wrote in Visual Basic 3 (yes, I’m old), but hey, how hard could it be? I read every obj c book I could get my hands on and got nowhere. Mostly because I couldn’t wrap my head around XCode. That and just not enough hours in the day to do my real job and learn all this. After many starts and stops I gave up and my mini was a HTPC for a while. When Swift came out I tried again and still wasn’t getting anywhere. Then this last Dec/Jan happened and work just dried up (my real job is construction) and with no major projects coming up I decided it would be a good time to try again. After a month or two of hitting it pretty hard it is finally starting to stick. I’ve got one app mostly done a couple more in the works and am really starting to enjoy it. My work has picked back up with a vengeance, but I’m sticking with it this time. Now, I still spend more time googling solutions for problems than actual coding but I’m getting there. 
You're going to need Objective-C if in order to be a complete iOS programmer. Sometimes you need to do things in C/C++ or interop with libraries written in those languages and Objective-C(++) is just such a natural bridge to those languages it would be foolish to do it in Swift. Swift will *never* be as good for such things and it doesn't need to be. I agree with @yellowliz4rd for beginners though. Forget about Objective-C and concentrate on Swift first. Objective-C is an easy language to learn after that.
&gt; One of the key things to knowing if you're good is that you can debug and modify complex code that someone else wrote. The reverse should be true too. That somebody else can easily understand, debug and alter your code even if it's a really complex process. 
What's the different from a video and a book? I don't copy code I write it all out step by step.
Thanks for this :) I have had a cool down today and going to go fresh into it tonight and hope that helps! I had a bad day at work too which also didn't help.
I think this make more sense to me. Maybe I just need to try get all the functionality working and then review my code or ask for communities to review it!
This is a very bad idea: &gt; The next step what I want to take is to get rid of Keys enum — use the #function instead I'll admit, it's a clever use of `#function`, a compiler statement which gives a string that contains the name of the function whose scope it's in. The problem is that it's cryptic and fragile. Suppose your forget or someone else works on the code, a decision is made to re-name the function, and now that cute little trick breaks down and you don't have any direct idea why. Congratulations, you saved a line or two and made your code less readable and much easier to break by accident. That's why it's better to have a designated constant that contains the key. You can name it as such, people will see it's a constant or key. They can know at a glance that if they change it then there will be issues down the road when that key gets used.
The dirty problem of MVC in iOS is that the V is actually hard to reach while adding IBOutlets to a C is made really easy. In Objective-C I would always subclass the root View of a VC and then overwrite the view with a view with exactly the type I gave it in Interface Builder. In Swift you can't even do that anymore and you have to hack around it doing something like: var loginView: LoginView = { guard let view as? LoginView else { // set the root view in IB to LoginView as well, otherwise it throws the fatalException below fatalException("view should be a LoginView") } return view } To use it like this from your VC: loginView.show(error: .passwordExpired) MVC in iOS makes the right things hard and the wrong thing easy. But your C needs to know which V needs to represent which state or data and the V needs to know how to display it. In the example above the C simply receives that error and passes it to the LoginView class that actually knows how to display an error. Perhaps the LoginView passes it along to the ErrorView it has an IBOutlet to. The C is just a "manager" that delegates work to others. The M part is a bit easier. I would start using static classes like LoginConnector that you could use like LoginConnector.login(with: username, and: password, whenDone: { result in /* just a bit of code where the C decides what to send to which V or to segue etc. */ }) The C only knows what LoginConnector needs for a login and what do with result, it doesn't even know if it's a database, a flat file, an API or a web socket you are logging in to. If you advance a bit I would say you could start looking into MVVM-esque techniques, where that whenDone block doesn't exist anymore and new state and/or data gets pushed down the pipeline independently as a response to something happening in the M-layer. This makes it easier to treat API results or incoming push messages all the same way instead of having to write separate code in your C for every source of data.
I’ve been a full-time iOS dev for over 7 years and I’ve never had to delve into C++ once. Not that I would have really minded since I was a C++ dev before switching to iOS.
When I look at a hard problem, the need to use nested loops sometimes becomes clear, but the type of loop or termination conditions aren’t immediately apparent. So when I start to write the pseudocode, lines that start loops just say “loop”. When the pseudocode is otherwise done, details about the loops become apparent, so I fill those in. Why pseudocode? Figuring out a complicated algorithm requires intense concentration. I find that constraining myself to syntactically valid code distracts me from the figuring out. 
Think about time. Years are a repeating event - an outer loop. Within a year there are weeks, another repeating event which is a loop nested within the year loop. Then there are days, hours and so on.
Yes, provide an example. Preferably not a picture, actual text is better. That way people can give you help specific to your problem. 
For me it's a difference between recognition and recall, the later being more difficult. One thing is to recognise code and comprehend it, the other is to write it yourself. It applies to other things like foreign language, its easier to understand a language than to speak it. In order to be good at recall you have to practice recall, meaning writing code from scratch, have an idea in your mind and see how can you go without assistance. The stronger your understanding of fundamentals the further you can go. tl;dr Focus on recalling code from memory and learn fundamentals
yeah this is a terrible article. it doesn't tell devs anything we wouldn't know and doesn't really explain to beginners why Swift is a better choice than Obj-C for someone just getting in to iOS development. also, this is a foregone conclusion: almost everyone understands that jumping into iOS development with Swift is the smart choice.
I'd suggest starting with Swift Playgrounds if you don't already know how to write code. If you do, it might be a bit too simplistic for you. Then you might try the Stanford course on iTunes U or the Big Nerd Ranch Swift Programming and iOS Programming books. Links and more detail on all of those [here](https://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/).
I would say do the three Learn to Code playgrounds on the Swift Playgrounds app for iPad. Then do this https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40015214 
As a programmer with 30 years of experience (who is also trying to get into iOS programming) your ratio of programming to time spent on google is not concerning. I find with the stuff I've had decades of experience on I spend more time flushing out edge cases on google than I do actually coding.
[This is a good example of a person learning from videos vs reading](https://www.reddit.com/r/swift/comments/822x72/i_am_really_proud_of_myself_in_how_far_ive_come/?ref=share&amp;ref_source=link) 
I'd suggest starting with Learn to Code in Swift Playgrounds for iPad since you don't already know how to write code. It'll teach you all the basics -- conditionals and loops and variables and everything else you need to know. Or if you'd rather start in Xcode on your Mac, [Hacking with Swift](https://www.hackingwithswift.com) is great for beginners. After those, you might try the Stanford course on iTunes U or the Big Nerd Ranch Swift Programming and iOS Programming books. Links and more detail on all of those [here](https://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/).
You can absolutely learn to program without classes. There are [a bunch of great ways to learn Swift and iOS](https://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/) -- some free, and some paid. If you get stuck in one of them and feel like you need help, you can always ask right here on reddit, or, if you're using a Big Nerd Ranch book, in their forums. If you have the ambition you describe, don't worry -- you'll find a way to learn.
[Hacking with Swift](https://www.hackingwithswift.com), the Learn to Code series in Swift Playgrounds for iPad, and the Big Nerd Ranch Swift Programming book are all great resources, and there are [a bunch more](https://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/) depending on where you are.
&gt; Apple did something interesting by making Swift easy You think Swift is *easy*?
"I know English syntax just fine. I just don't know where I'm supposed to put my words or split up chapters." "I know welding just fine. I just don't know where I'm supposed to put any of these I-beams." What are you building? How is it to be architected? Once you have a clear idea of what it is you're building, and how, you just encode it in the syntax of the language. If you don't know where anything goes, that suggests you don't really know what you're building yet. Your problem isn't with Swift. It's before that. Exploratory programming is fun and can be useful but requires more knowledge and discipline if you're using it to actually build something, just like banging things together with a hammer in your garage is fun but you shouldn't expect a house to spontaneously appear. 
This shouldn't be different from how this Reddit is used vs IRC, or how the Swift forums vs IRC are used.
Congrats my dude!
61 applications, how is that even possible? That's about 10 solid days of work just writing and sending the applications. And only 8 responses? I'd really expect even a complete beginner applying for junior positions, to get better than a one in 8 response rate... 
That is a good example, maybe I will sack off the videos for a bit (I am getting to the more complex bits now) and start reading these books and see how I get on. Will keep you posted not giving up!
Thank you!
Perfect, thanks
Thank you
Okay perfect
I did all those applications within 3-4 days. Honestly it doesn’t take that long
In my opinion, Discord provides a sleek UI and functionality in different ways. If someone has a question that is literally 1 sentence and can't really find answer by Googling, then they could easily get Live-help from someone else, right on the spot. 
Terse code is great, as long as you don't sacrifice utility, readability, and future maintenance. Using a compiler directive as a key is a horrible idea, suppose the function is renamed, they key changed, or the code moved. Now it breaks and you have to debug it and it's not glaringly obvious what change caused it. At least if you have a designated key constant you have a great central and obvious single point of change to check.
[removed]
As this is your first programming job you need to understand that the skills and tendencies you will learn at your first role will stick with you for ever. You need to be able to differentiate which skills you need to retain and which ones are quirks. ALWAYS be open to feedback. ALWAYS ask questions. Your new, the company knows your new, don't go in swinging. Take time to learn.
Thanks for helping me with a lot of my trivial questions haha 
Books. Hacking with Swift is a good start, iOS Apprentice is way better. If you have an iPad, Apple's Playgrounds application is an awesome starting point.
With minimal programming knowledge, this won't get a newbie too far.
`Set` is unordered, that is, it doesn't guarantee anything about the order in which it stores elements, or the order in which you'll see those elements when you iterate through the set. Have a look at the [documentation](https://developer.apple.com/documentation/swift/set) for details. If you want a set that retains its order, you could use [`NSOrderedSet`](https://developer.apple.com/documentation/foundation/nsorderedset) or [`NSMutableOrderedSet`](https://developer.apple.com/documentation/foundation/nsmutableorderedset). You would use the first one if you're creating a set that will never change after you initialize it, or use the second one if you expect to add and/or delete elements from the set.
Sets are by definition an unordered collection. You cannot rely on the order of items in a set being stable across inserts, deletes, or multiple runs of the same program. If you need order, there’s NSOrderedSet in Foundation, but it’s not generic, and loses the type information about its contents, which it treats as Any, so getting anything out involves unpleasant typecasting.
Personally I find nested loops are easiest to explain with rows and columns. Let's say for example you have a 10x10 field and want to do something for every cell in the field. Now instead of saying that you want to do something for every cell in the field you could say that you want to do something for every row that does something for every column. In code it would look a bit like this: for row in 0 ..&lt; 10 { for column 0 ..&lt; 10 { cell[row][column].doSomething() } }
As others have said, `Set` is unordered. I would use a Swift `Array` unless you need to lookup many items quickly in a large collection. In that case, consider using `NSOrderedSet`. 
Yep, views can be created with code just fine (and many prefer this over the visual interface builder method)
Yes. I've learned and used a number of languages over the years and Swift is one of the easiest.
100% yes. I tend to have extra notes in my code explaining why I did something and tend to comment out, but keep the old code so that I can go back and look at exactly what changed.
I've done that one too, she does a great job.
One thing that's different about programming is that the computer doesn't care about anyone's opinion, it acts purely on logic. A background in math is helpful, also logic, critical thinking is helpful. Have you been using the playgrounds and tutorials? Playgrounds makes it easy to see the results of your programs.
ahahah this is an awesome post that has given me a lot of relief! So are you working as a swift developer or hoping to get a full time job?
I’ve had a couple of internships and I can say that being humble and admitting you don’t know when you truly don’t know goes a long way. I remember being asked various questions about C++ that I didn’t quite remember, so my interviewer switched to trying to assess my thought process instead. I ended up getting the position. As an intern, you are there to contribute but most importantly to learn. 
also, take a look at [SnapKit](https://github.com/SnapKit/SnapKit) we use it almost exclusively for our UIs
Congrats on your progress. I am in a similar boat and lasted halfway through the Stanford course before moving on to other resources. Currently working on a basic app for a client that will soon be submitted to the app store. Very inspiring stuff, good luck to you. 
There are a couple GTK projects on github. May be others using other cross-platform libraries too.
I am hoping to get press coverage, strategic partnerships, steady growth and then funding over the next month. If that fails I will probably look for a non-programming job. I bet I could pivot and learn Swift teamwork techniques, but I don’t think the drive would be there. 
ButtonLAction.TestButtonL in the selector. Never seen someone do it this way before tho
Just figured that out actually, but instead of giving me an error, it crashes the app in the live view with this. libc++abi.dylib: terminating with uncaught exception of type NSException
Don't worry, soon you will progress from having huge view controllers to having huge singletons and using notifications all the time ;) 
 public class ButtonLAction { weak var button : UIButton! { didSet { let tapGesture = UITapGestureRecognizer(target: self, action: #selector(TestButtonL)) button.addGestureRecognizer(tapGesture) } } @objc func TestButtonL() { print("Button L works") } } So like this?
Like I said I haven’t seen someone do it like this before . Maybe it’s because you don’t initialize your button object. maybe reevaluate having a class that calls that calls itself from itself
Why not use a class?
Hamburger menu in 2k18? LOL! in all seriousness tho, there’s a reason you’re not seeing it in any decent app anymore. it’s an anti pattern, don’t use it.
Pass “self” in as the target. 
Awesome link!
Hey calm down with the down votes, i was joking, jesus. it's an UX anti pattern. Basically the hamburger menu hides content from users and it's not very clear about what it does. Yes, some people got "used to" it but it's still bad. There's many posts that talk about that, i'll link some: https://lmjabreu.com/post/why-and-how-to-avoid-hamburger-menus/ http://jamesarcher.me/hamburger-menu https://techcrunch.com/2014/05/24/before-the-hamburger-button-kills-you/
You need to set the target as an instance of ButtonLAction. It can’t find your function because it’s an instance method. 
You should read about lenses. There is Swift implementation of it - https://github.com/typelift/Focus. Still, you need to write them. Other solution (which I personally prefer) is some code generation, e.g. similar to one described here: https://blog.githawk.com/2018/03/08/Immutable-Model-Mutability.html
Joking or not, you're were still correct.
I presume you mean this: extension Person { func setFirst(first: String) -&gt; Person { return Person(person: self, first: first) } }
The 3Bar "hamburger" is just the icon, that triggers a menu or expansion. Couldn't everyone bash the ? icon for help or any other agreed upon icon?
Oh and about that, don’t make bad apps just because your client wants it, instead show why this is not a good solution and show the alternatives. It’s obviously not an easy path, but it’s worth it.
I haven’t found anything better but then again it’s google, it’s reliable, fast and scalable. And free for testing.
Apologies for not knowing what you mean, I'm not sure why initializing the button is needed? The class isn't calling itself, it's calling a function in a different one, at least that's what I want it to do.
Oh I see. The target needs to be an instance of a class that has the method you are passing into the selector, so that’s why it’s not working. 
The feature is finished.... just one last thing I need to clean up 😂
[removed]
Although I agree with this, it isn't really the same thing as Firebase...
Whats the issue with firebase?
I think this might get you close to what you want, it's not perfect but it does enforce immutability and provide a simple way to generate a changed copy without a lot of extra code: struct Person { private(set) var first: String private(set) var middle: String private(set) var last: String init(first: String, middle: String, last: String) { self.first = first self.middle = middle self.last = last } } extension Person { func set&lt;T&gt;(key: WritableKeyPath&lt;Person, T&gt;, value: T) -&gt; Person { var result = self result[keyPath: key] = value return result } } let foo = Person(first: "a", middle: "b", last: "c") foo.first = "ten" // Cannot assign to property: 'first' setter is inaccessible let bar = foo.set(key: \Person.first, value: "test") print(foo, bar) // Person(first: "a", middle: "b", last: "c") Person(first: "Test", middle: "b", last: "c") 
AWS maybe? 
Asking for "better" is hard to answer without knowing your needs. I don't think Firebase is a relational database. I'd like to have a full relational database for a backend. Something where I can setup indexes, stored procedures, like an SQL Server.
Not at all. 
What about setting a value in userDefaults once they have successfully logged in? Check that in viewWillAppear before redirecting in order to avoid it if that’s unnecessary. 
I mean check the userDefaults flag from the viewWillAppear in the tableVC, to find out if the user is logged in or not before redirecting them to the login tab. 
Have you tried subscribing to a notification in the second viewcontroller, then posting it from the first after login? If the second view has not yet been deallocated, it should be able to receive the notification and call a method to perform the task. You should keep your code out of your lifecycle methods anyway, so it should be fine to call the method from viewDidLoad() as well as from the notification subscription. 
yea i understand that these methods arent good practice to keep in the viewdidload im just trying to figure out a quick way to solve this issue thanks for you input
Free for testing. Expensive af in production
Is the ViewController only used for log in purposes?
for now yes
It would make more sense if you used an on boarding screen. Then once logged in allow them to make it past. After that store their profile and make sure it goes directly to the table view using the app delegate. 
No issue I was just curious if there was a better one
oh okay, I havent really searched around, ive just used firebase. would love to into another if its somewhat better.
Thanks for taking the time to do that! The way my app is set up is different, I simplified it in the original post. There are three buttons and each of them does something different. The buttons are defined and loaded into a view, then given a target function to run when tapped. The three target functions are in another class in a different file. Again I don't have much experience so that might not be the best way to do things, but I did it for the sake of being organized. The main difference I can see is that you made the class inherit from UIButton, and then you made the button itself the class instead of a plain UIButton. I tried doing that instead for all of the buttons and it works perfectly now! I never would have thought of that on my own, but it makes so much more sense.
Why not use var instead of let? The fact that structs are value type means you can only have 1 reference of a specific instance. Using person.first = “New” will actually create a new struct and do exactly what you are doing with your setFirst function. As long as you don’t use any “mutating” functions, you can achieve something that looks like immutability with var 
Look into iCloud, and if you want something really simple ... try NSUbiquitousKeyValueStore! Good luck 
Thanks for your reply. Turns out they farmed the development to a third party, but they said your suggestions were spot on.
As per my other comment, the sole reason why your code didn’t work was because you need to pass an instance of your class as the target. In the code above this is done with: let buttonL = ButtonLAction() 
Thank you for the reply! Ill try it out :-)
Interesting idea im not sure why I didnt think to use an array. Thanks mate :-)
I mean, don’t lose your client because of that, but don’t do stuff just because he wants.
Try this: struct Person { var first: String var last: String } class Immutable&lt;T&gt; { let value: T init(_ value: T) { self.value = value } } Swift is smart enough to handle it correctly, you will not be able to change the value in any way if T is a struct. I made `Immutable&lt;T&gt;` a class because it's cheaper to pass the pointer around than copying the entire struct every time it is used.
I have worked quite a lot with firebase and i really like it. Also like the crash reportings etc. It’s easy to use and great in performance! 
Unclear what the UX here is but the user defaults approach sounds like it would work. Seems like you just need some sort of refreshView method that performs your setup logic based on the user defaults flag.
For entry level or intern positions, I just look at their resumes and ask about the technologies, languages, or libraries they claimed they used in previous work experience or school projects. Basically if you put it on your resume, be able to talk about it intelligently. Sometimes I might throw in some questions about design patterns just to test how far their knowledge goes. Other than that we just check soft skills. Speak clearly, make eye contact once in a while, be well written with good grammar in any email communications, be open to learning, be willing to listen (don't cut us off). It also helps if you ask about our company or the types of projects our team works on. Show an interest in what we do. 
www.figma.com I use it for the app I'm currently working on, allows for multiple people to edit at the same time much like google docs, super useful.
Asked a while back here https://www.reddit.com/r/swift/comments/6hmtfv/prototyping_tool/?st=JEVIRDO3&amp;sh=437a5a6 Ended up using Sketch + Craft and love them. 
keynote + some uikit stencils 
How about CryptoSwift? I’m using this in production for other cryptographic purposes and works well. The readme mentions both PKCS#7 and Linux support. https://github.com/krzyzanowskim/CryptoSwift
I made this article in order to answer to the hardest things to understand as someone who had never used async/await in any other language, I’d love to get feedback from you guys on how to improve it Edit : apparently not everyone is able to access it, does this work ? https://github.com/adtrevor/swift-language/blob/master/Articles/Swift%20async%20and%20await.md
Marvel is free and imo the simplest option. Sketch now has simplistic prototyping and there’s a hack you can look up to make the free trial last forever.
The link 404s for me 🙁
Same here
Does this work ? https://github.com/adtrevor/swift-language/blob/master/Articles/Swift%20async%20and%20await.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [adtrevor/swift-language/.../**Swift%20async%20and%20await.md** (master → 0cacdd1)](https://github.com/adtrevor/swift-language/blob/0cacdd176eddb00c2668dc19a8b4cbacb69468e9/Articles/Swift%20async%20and%20await.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dvuw83b.)
Does this work ? https://github.com/adtrevor/swift-language/blob/master/Articles/Swift%20async%20and%20await.md
Yup that works for me!
Suggest also taking a look at how async/await is implemented in C#, Python 3.5, and more recent flavors of Javascript. They each have their nuances but the C# and Javascript models work nicely with an event-driven GUI and the Python one for networking and DB use. It's likely Swift coroutines will be used in a similar way as in those languages.
Thank you ! 🙂 Indeed I’d like to describe those for comparaison in the end of the article, if I am right C# relies on futures for async/await while Swift won’t !
Sketch looks like it's designed more to create icons and general designs. It also seems that it'd have to create a lot of basic elements myself. e.g. instead of being able to insert a tableview and then customize it I'd need to insert multiple cells
Two options here for you in this [stack overflow article](https://stackoverflow.com/questions/28777943/hide-tab-bar-in-ios-swift-app). Basic solution: `self.tabBarController?.tabBar.isHidden = true`
And just to clarify, would this be in one swift file or each class within its own swift file 
[@twostraws's latest tweet](https://i.imgur.com/hwckvQ5.jpg) [@twostraws on Twitter](https://twitter.com/twostraws) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
That's entirely up to you, but the convention is--in most cases--to have each class in its own file, named exactly the name of the class (plus .swift, of course). If I'm writing something small, and feeling lazy, I'll put everything in one file. But don't tell anyone!
You should set `hidesBottomBarWhenPushed` to `true` on your controller before pushing it to navigation controller. It can be either set from code or from storyboard: https://stackoverflow.com/a/8701657/1816253
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Media Player Queue changes when app enters background](https://www.reddit.com/r/iOSProgramming/comments/857m22/media_player_queue_changes_when_app_enters/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Why is that method either in a singleton or an instance method ? Why not make it static ?
Does that fix my issue or just a prettier design pattern?
Well more of an architectural issue yeah but we can’t fix it because you probably registered for going to background notifications somewhere and are affecting what happens there
&gt; you probably registered for going to background notifications somewhere and are affecting what happens there I have not done this... I have not added anything to **applicationDidEnterBackground** in AppDelegate However, im confused as to why that would matter. I am not locking on to that artist on song change I am locking on to that artist on a button tap So the flow to reproduce error is Play Song -&gt; Tap Button to only play songs by that artist -&gt; leave app (while music still playing) -&gt; wait for song to end I would understand if I was locking onto the artist when the song ends but I am locking before 
It goes slower so you work slower and accept smaller chunks of information before moving on. Learn the Feynman approach: if you can't explain the concept to another person then you don't know it. You should be able to teach somebody who is a month behind you in the learning process. So if you see a chunk of code in Chapter X that was taught in Chapters X-1, X-2 and X-3 then you should know it and be able to explain it well to another person. If you can't then you are attempting to go to fast and you're just going to waste your time. 
It's not really a segue. UINavigationController keeps a stack of the previous view controllers that have been pushed. When you tap back, it pops the one that's currently on top and replaces it with the previous one.
I’m still just learning but think I had a similar problem recently. Override ViewWillAppear and reload the table data and it should pick up the updates that were done to the array in the other view controller. 
I’m gonna have to review the continuation chapter from one of my old Scheme textbooks...
This was the first thing I was thinking, too. You need to tell the table to reload since your data source has changed. 
async/await isn’t going to make it into Swift 5 unfortunately. (Core team has pretty much said that). Hopefully it becomes a priority for Swift 6
Hopefully 5.1 
There are tonnes of UI templates out there and it’s really very quick to put together screens using the Apple standard iOS items. Then Craft creates all the navigation flow. I’d recommend watching some of the video tutorials at least. Regardless, I hope you find the right tool(s) for you. Good luck. 
*Cough *Cough you can use Sketch any version for free. I am using it free since late 2016 also I am running latest 49.1 version free , no crack no patch watch the video how to do that 👍https://www.youtube.com/watch?v=lqUpvkpiSDI 
Check if your app is not fully terminated when going to background? 
This does not solve the problem. I am already calling dreamTableView.reloadData() in the viewDidLoad, i also just created the viewWillAppear function to call reload data again however my table is still empty after saving the dream entry.
I'm sorry if this isn't what your looking for, I may not understand your use case: https://developer.apple.com/documentation/corelocation/clgeocoder/2908779-reversegeocodelocation
Totally. It's not trivial to understand how they work. Even [Apple engineers struggle with them!](https://www.natashatherobot.com/ios-autolayout-scrollview/)
any recommendations for where to get templates? I guess I'll take a deeper look into that then.
How considerate! Thanks for taking the time for the thorough response 
I've found a solution UserDefaults.standard.set(["en"], forKey: "AppleLanguages") UserDefaults.standard.synchronize()
I know this is bad but they haven’t fix it maybe they let hobbits 
Why would you want to enforce a nonnative language on a user?
Paper and pencil. Cheap (you probably already have them), and as a bonus, the product will last longer than any website. Seriously, what are you trying to do? What goals do you have for which you've already decided a computer must be the best solution? 
This is probably not helpful sorry but in your code for numberOfRows in DreamListViewController, the function you have is override func numberOfSections(in tableView: UITableView) -&gt; Int when I think you need override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int assuming that you only have one section for now (in which case you don't need to override numberOfSections(in tableView)).
My app has a very limited search option where the user can sort posts by city and if he'd enter "London" he would not see the results for "Londres".
Acquired mine from here: https://www.sketchappsources.com/tag/ios.html https://designcode.io/ios11-ui-kit But lots out there. Google away!
Why would a user type in English if it’s not their native language though? Just let the user be. They should have no problem using their native language
If you will use more than one computers, cloud is your only choice. Store your code on a remote repo like, bitbucket or github and then you will be free to develop from more than one computers. Just remember to commit, push every time you finish, in order to keep your remote repo updated with last modifications.
My favorite is marvel app https://marvelapp.com It’s good enough and compatible with Adobe XD. Also it’s free.
This is terrifying. 
Sounds like you want an excuse to buy an iPad. Don’t worry, I won’t tell your spouse ;) Kidding aside, do you have a MacBook? You won’t get anywhere without one of those. I’ve been through the PG app and written playground books before. My 7 yr old child has also been through a good portion. I’m a little underwhelmed by it. Not detrimental, but I think the playground app has more of a marketing purpose and is also more of a POC to inspire other “learning” use cases. Idk. I think it only gets you so far. I recommend another way. Depending on how you like to learn, there are some good books and videos that I’m sure someone else will reply with. I prefer to learn by putting extreme pressure on myself to deliver a shipping product. If you’re just starting out, you can offer to develop someone’s app for a few thousand bucks, and pay you after you deliver. If you suck it up, no money is transferred and I can’t imagine your reputation may get ruined for not taking any money. Worst case scenario is they don’t want to pay when you succeed, but really you got what you needed out of it and learned how to develop, which you were willing to spend $1,000 on an iPad. This way, you can maybe get paid and actually learn real stuff, rather than self directed forest wandering. You will the find all your answers by googling everything directing in your way. This is how I learn every new language. 
macbook if your serious. Playgrounds exactly what it sounds like, its for playing around.
I think you must at least be able to code yourself. Reading a lot about it won't help so much as you cannot remind it easily. Practise makes perfect. As you probably know, is coding for the most part debugging, and while reading, you don't do that. This is a short reply because i'm typing this on my phone, if you need additional info, comment below
&gt; Sounds like you want an excuse to buy an iPad Haha honestly, yes. That is a part of it. I do have a MacBook Pro and I have played a bit with Xcode, I just feel that I'm having issues with learning Swift. I just really lack the imagination I guess. I feel like I dont know *what* I should learn, if that makes sense. As in, what do I need to learn to make the app I am interested in making. It's hard to google something I don't know. Also I feel like there is so much so its hard to know where to start. I guess I'll look for some online course and see where it takes me. But then I know what you feel about the app at least, and I suppose it is not what I would be looking for.
It is not available in the same way as far as I know? I know you can enter "playgrounds" in Xcode but when I saw my friend's little sister use the app it was very different. And as I said, this would just be something to get back into programming/to start with, I obivously understand that Playgrounds wont give me enough information to create an entire app.
Yeah, I understand that I should be able to code myself, but I feel like the thing I struggle with right now is getting into it. Back before when I did some programming it was pretty basic, but at least then I had some flow. Now I'm just sitting at my computer, staring at the screen and just wondering where I should even start. I used to do Python 2.7 when I "programmed". But even then it was mainly school projects and some very small programs/text based games from home. So by no means anything difficult or advanced. 
It depends on how serious you want to do this stuff. If you want to build apps, definitely get a Mac (mini). If you just want to fiddle around with Swift, an iPad would be sufficient. You don’t need anything powerful for Xcode /Swift and second hand stuff is almost always great. 
You can't clear persistence cache. Observe child added returns all items in the first run. 
I hate to break it to you, but you’re not going to learn much nor stick with it. You’re absolutely right, you don’t know what to learn and it’s the blind leading the blind. But if I told you there was a million dollars waiting for you if you can make my app support push notifications, I guarantee you would know what to google right now. Obviously, we’re not talking millions but the point is when you have an actual motivation with clear requirements, the “seeing where it takes me” is done already. I’ve tried the aimless learning on a lot of topics but it always fizzles out with a whimper and amnesia. What if I told you my app needed an offline database to store blog articles from my server so users can view content on an airplane, and I need this all done by Foobember 23rd? I bet you would know exactly what to google then, right? In fact, that’s how I learned swift when it first came out. I approached one of those eye rolling equity startup guys that said they’ll pay me when they get funded. I already knew they were going to fail but I wrote their poc app in a weekend and just used them to learn. Of course they didn’t get funded but they sent me an autographed football helmet that’s probably worth $1000, but kinda priceless bc I like the players. Unexpected and a win win. You can find tons of these people all over the world, including those crowded freelance sites. It’s like a free learning course but with a possible upside and also gets your foot in the door for referrals. TLDR; write a real app for free
Hmm, yeah. You really have a point there. I do have an app in my mind that I want to make, so I guess I should just focus on that and try to learn from that. Just take it step-by-step rather than trying to learn all at once, which is what I have been trying now. I tend to overthink a lot of things, so believe it or not but this comment was a real eye-opener for me. Thank you! 
Playgrounds on iPad is a sandbox for Swift packaged with a bunch of lessons, exercises, and templates for getting up and running with the Swift basics quickly. It is intended primarily as a manner to teach and experiment with core programming principles. Playgrounds on mac is built into Xcode, and is slightly different. Unlike on iOS, playgrounds in Xcode doesn’t come with any pre-made content (like lessons). It is just a scratchpad (technically a read eval print loop) for experimenting with Swift and Cocoa packages. It is my opinion that Swift Playgrounds on iPad is for new programmers to learn the basics of Swift and programming. The Xcode playgrounds are more for programmers to experiment with specific tools. I often see mac playgrounds used as documentation, as a manner to quickly document how to use a specific framework or feature. It sounds like iPad Playgrounds would be more up your ally at this time, but be aware that you’ll have to get Xcode if you want to go further. 
Thank you very much for your help! It has solved my issue. I think i was trying to use subclasses and allsorts and it was not working out. Do you know what the best way of learning about the way of structuring data as i don't think i have came across any sources that speak about that kind of thing. 
Oh god. Calm the fuck down, he’s not writing a thesis. 
Noticed the same. I think the TS doesn’t know how to pass the new item back. I think it’s easiest for now to use the delegate pattern for that. protocol NewDreamReceiving { func receive(dream: Dream) } extension DreamListViewController: NewDreamReceiving { func receive(dream: Dream) { /* add to your list of dreams here and reload the table */ } Next steps: 1) add a var to EditDreamViewController for the delegate: var newDreamReceiver: NewDreamReceiving? After that you need to set it to self when you segue into the EditDreamViewController editDreamViewController.newDreamReceiver = self After creating the dream: newDreamReceiver.receive(dream: dream)
Watch the Apple Developer keynotes. You will get ideas and could use the newest features. Win win. 
Thx
I’m still in process of learning Swift. I found the iPad Playgrounds app useful to go through Swift Learn to Code 1/2/3. And I’m interested in going through some of the other lessons there. Also, I’m going through the Stanford 193P fall 2017 course that is on iTunes. I have also gone through a number of the letsbuildthatapp.com youtube videos. And the site offers a paid series called Instagram Firebase that I think in particular is great.
Ive only seen that person contribute to a programming question *once* on this sub. It’s pretty stupid. 
Hi, I just read your articles and I was wondering. Is writing (and learning) ECTest beneficial if your just developing on your own?
You’re a prick
Just finished version 1 of my crypto management app. It's called crypto journal: https://itunes.apple.com/ag/app/crypto-journal/id1329393847?mt=8 Since it's in it's early stages, all feedback is welcome.
My girlfriend wanted to learn programming, so she started playing through Swift Playgrounds on my iPad. It was really cool! It teaches all the basics of programming, and steps through it all in easy to understand lessons and games. If you've never done any programming before, it's definitely a fun and well designed way to learn the basics. I like that Swift Playgrounds on iPad doesn't just teach the programming principles, it also coaches you through putting them into practice, and training you up on problem solving. A lot of people try to get into programming but don't realise that 90% of the job is problem solving. Understanding the language is only a small part of the process. You have to get used to spending almost your entire day thinking through problems and figuring out how to solve them. Swift Playgrounds on iPad is a good way to get familiar with that process. 
No. Just because some beard stroker doesn't like this standard, accepted interface that people are quite familiar with a know to use doesn't make anything a 'bad app'. Furthermore because I am porting an Android app, and this is an enterprise app actual people will use to do actual work, it needs to be the same as the Android one. Finally; "iT'S oBVioUSly nOt AN eASY pAth, BUt it'S woRtH IT." That's you. 
Hi, I had a similar problem a while back. The only way for me to make it work is to create a setData() function that I would call from the unwind segue/the edit dream controller. To make sure you re-add all the entries. how are you returning to the dreamlist controller?
Check out this post by NSHipstser. It should have the info you're looking for http://nshipster.com/uikeycommand/
Indeed. Firebase Realtime Database is a NoSQL cloud database. Firebase doesn't have a relational database.
I did a tutorial on both Firebase and Realm and I'm surprised that everyone loves them so much because they aren't relational. I guess it's hard to come up with a simple relational database, so you have to create a complex one on the back end.
I personally didn't like the reading tutorials, and found these YT channels very helpful https://www.youtube.com/user/Archetapp https://www.youtube.com/user/CodeWithChris https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA
It’s even used on the GitHub navigation for their mobile web view. 
“Playgrounds” is the name of a single feature in Xcode. I is perfectly ok to say “Playgrounds is” in this context.
When did Xiaodi become a member of the Core Team? Have they just not updated the [Core Team](https://swift.org/community/#community-structure ) list, yet? While Xiaodi is a very prolific and opinionated contributor to the Swift forums (and mailing lists before hand), those contributions hold no more weighty than other community contributions. Personally, I find Xiaodi's contributions to be very well thought out and supported by good research into past threads, so I do like reading them even if I disagree with the suggestion itself :-)
I have to agree, I like both Firebase and Realm but sometimes I just want a simple relational backend. Haven't found any online solutions like firebase/realm yet..
&gt; 1 Second Everyday is hiring a Remote Seinor 1 Second Every Day* is hiring a Remote Senior* iOS Developer
What about Backendless?? Here a list of other BaaS that you can try: List of **MBaaS** Providers *Kumulos *Azure *Backendless *CloudBoost *Firebase *Oracle Cloud *Red Hat *MongoDB Stitch
Love this!
I would make favorites some kind of static class where everything is simply tracked in-memory. Saving to and reading from user defaults only happens when you start the app and add a new favorite. class FavoritesTracker { public static var editedFavorite: Favorite? private(set) static var favorites: [Favorite] = { // read from UserDefaults here } public class func add(favorite: Favorite) throws { // add to user defaults favorites.append(favorite) } } Now everywhere in your application your favorites are reached easily without the mental overhead of the UserDefaults that actually back it: FavoritesTracker.add(favorite: favorite) I would simply set the `editedFavorite` to something and read it from the detail screen again: // Somewhere in your table row tap let tappedFavorite = FavoritesTracker.favorites[indexPath.row] FavoritesTracker.editedFavorite = tappedFavorite Make sure the table row tap also segues into the next screen. Then in the detail view controller: // Inside viewDidLoad guard let editedFavorite = FavoritesTracker.editedFavorite else { fatalException("Can't be in this screen without FavoritesTracker.editedFavorite set to something } // Show the favorite 
Reading advanced swift and doing iOS development during the 9 to 5
Assuming all your data is basic primitive types (no binary data or streams), I convert my objects to json and save the string. I’ve tried the other way, convert everything to NSDictionary and NSData, and I would get weird, random crashes that almost could not be debugged. But the json storing has been rock solid for me. Plus, all my objects have to serialize to json anyway. 
Users don’t switch their gamer center accounts. If they do, a broken game is their own fault. 
This definitely seems like the easiest way. Especially when you need to add new properties. Thanks!
Are you sure? I mean if a mom let her two kids use the mom's phone, the kids may log into their own respective accounts, since most game only have 1 save file. I talked to a guy at work and he said his two sons share a singe device. I am not sure if they have different Game center accounts but I will ask.
I have apps with game center integration and i identify users with firebase &amp; game center. There are only very few people with switched accounts. I think there’s actually a listener for game center events like logging in. I’ll look that up. 
The real question is why are you using something like `[String: [String: Any]]` in the first place? Do you truly not know what types you are storing so you aren't able to put them in specialized types? It sounds like you have deeper problems with how your data is structured.
I'm not sure they can. I haven't done all the homework on it yet, but I don't see MS/Oracle coming out with relational solutions for iOS that work like Firebase/Realm. I think it has to do with what Firebase/Realm really are. I think they're just a structure dump. You go in, define a struct and you get a dump of data that matches that struct. No index, no tables, no rules (cascading deletes) no rollback, no record locking... Just a simple structure dump.
I'm coming from Javascript so my mindset tends to go to "Use an object!" and Dictionary is basically what I'd have used in Javascript. I had read about `Codable`, but `PropertyListDecoder` seems to be the important thing I missed. I implemented your way and it works perfectly! &gt; The use of `Any` and casts to types is a bad code smell. Use concrete types where you can and your code will be a lot more direct, easy to read, easy to work with, and more bug-free. Yeah that's what I've done up til this point, just seemed unavoidable here. Clearly not though. Thanks!
Even if you haven't created any initializers, you still have to create an instance with an initializer. What you're missing is: var person = Person() person.firstName = firstName.text
I don't understand if it's an app or an iOS framework
LOL guess I really am tired... got the issue I got the issue.. I had to do: self.searchBar.delegate = self I had forgot the self before searchBar 
FYI, Weather Underground uses AcuRite weather stations as well as other feeds. These are home weather stations that are running all over the US (if not other places as well). I'd suspect that this is one of the services that WeatherKit uses.
Can't help you, but that's a great username.
Yeah, no. It is far from a standard interface that people are quite familiar with. And that "It needs to be the same as the app on the other platform!" thing is horseshit. 
No problem. Swift really does encourage the use of custom types to handle a problem. Between protocols, structs, and classes you can structure your data so that it flows naturally and easily. I would only use a container like `Array` or `Dictionary` to handle data that truly doesn't have a well-defined structure and should be placed in a bag. `Codable` is one of the best additions to Swift in a while. It makes converting data types to and from encoded forms a breeze.
iOS app 
The Enterprise is quite a bit different from startup world or being a hobbyist. Employees are trained to use one app. Supporting two different ones, because you dislike the hamburger icon, is a terrible business decision. 
Well that’s confusing. 
My god, please fix the color scheme on that page. Glaring electrical pastels is simply painful and bad.
Couple points of feedback: 1. This website is abysmal. There's very little information, it doesn't even say something along the lines of 'WeatherKit is a new weather app for iOS,' it leaves me to figure that out on my own. 2. You really shouldn't use the 'Kit' suffix unless it's an actual Software Development Kit. Apple has been using the Kit suffix to indicate SDKs for ages, and using it for an app name introduces confusion.
It looks like you spelled the delegate method names wrong, e.g., you defined a method called `searchBar(searchBar:textDidChange:)` but the docs say it's `searchBar(_:textDidChange:)`.
Looks like you can just set your dictionary directly on `UserDefaults`: let dict:[String:[String:Any]] = [ "A":["1":true], "B":["2":"A word"], "C":["3":4*atan(1.0)] ] UserDefaults.standard.set( dict, forKey: "properties") // works fine To retrieve: let decoded = UserDefaults.standard.object(forKey: "properties")! if let dict2 = decoded as? [String:[String:Any]] { print( dict2["A"]?["1"] as? Bool ) print( dict2["B"]?["2"] ) print( dict2["C"]?["3"] ) } 
I don't have any openings for interns at the moment but I'll do a search and I'll keep you posted if I find anything
I think the company calls themselves "1 second everyday"
Thanks! Most companies have already hired their summer interns, but I really appreciate what you are doing :).
My first thought: "Why would I want to sign up for framework public beta?" My second though: "Oh, it's an app. Why would I want to sign up for weather app public beta when I have stock app/Carrot?"
Hi asklausen! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/85qrdz/i_made_an_ios_app_for_you_to_discover_music/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Congrats! Just installed it to test it out. Runs smooth, the browse works nice. So you have to have a Spotify account to use it? I can't get past the pick a song part, I wanted to see how it handled the playlist. I thought you could get short previews without a Spotify account. Anyways, the front screen where you pick the songs, I'd have more categories on the tab bar. You have New and Popular, I'd have others like genre. I'd also have a progress marker on the right or some kind of index. I didn't see a sort order, clearly not the 1st field, but maybe an option to change the sort order and order indicator. Maybe a color code or some kind of category icon. Seems like it would take a bit to find certain songs, jumping to different categories might help. Didn't see any ads, how are you making money from this?
Thanks mate, glad to hear it runs well! Yeah, a Spotify account is needed. If you're logged in with a free account, you get 30 sec. previews (Spotify changed it last year, so that calls to their server has to be accompanied by a valid user. Before this, no user was needed when communicating with their API). About the tab bar where it says "New" and "Popular", I think you're missing the point a bit. It wouldn't make sense to have genres there as a genre is really a playlist. And each playlist is a #tag. So if you want to listen to electronic music, go to tags such as #electro or #edm. It's a new way of doing playlists, but one where everybody can easily contribute to it and discover new music through it. That's also why each playlist (or the Public) can be sorted through either "New" or "Popular" (most upvoted). Pulse is not really about finding songs that you're already looking for. For that you can just go ahead and search for it in the app. It's more about discovering music through tags and maybe pin your favorite tags to the Menu / Left Sidebar. This way, you have Quick Access to the tags you're most interested in, and can keep track of either new songs or the most popular songs going forward (currently I myself have pinned #hanszimmer, #hiphop, #kygo and #saveus to the sidebar).
You should never have a mentality like that. Always consider edge cases :)
Well, that’s why i integrated firebase too :) 
I'm porting an Enterprise application from Android to iOS. It's for drivers delivering stuff, so there will be map integration and bluetooth for scanners etc. 
I mean it has it's benefits but a relational DB has a lot of benefits too. Especially if you want to have something securely structured. Simply put sometimes we need indexes, tables, rules (cascading deletes), rollbacks and records.. I wonder if someone will ever come out with something like that..?
Is Firebase Firestore something different than just Firebase? I've studied Firebase and Realm and others, haven't heard about Firestore. Ah, the ad and graphics are two different things. If Apple wants you to do a promo (app of the week or whatever) you have to have a set of graphics for them to run. They have to be a specific size. IIRC, you can do animations, but you'd have to check. The other ads are ads that you run thru places like AdMob or others so that you can get some for your time. I haven't gotten to the point where I've setup ads, but I'm sure there's plenty of tutorials out there. https://www.appcoda.com/google-admob-ios-swift/ 
I'm not sure why we see the structure dump products but nothing relational. I might be because it requires so much more setup on the back end. If you think of setting up an MS SQLServer, it's pretty involved. So maybe that why it's left to backend devs. Don't know for sure, but I'm going to find out pretty soon.
Really digging it! One suggestion I would make is to implement Apple Music along side Spotify! This is like the perfect counterpart to my App Shuffle Play Plus haha Great work!
thanks a lot! Apple Music is coming to Pulse in May :-)
Can’t wait!! 
Why don't you tell us about your skills? I've got one going on now and I could use a bit of help on. Let me know if you want some more info on it.
It’s a bad thing idea even if you’re a seasoned programmer. Private members are private for a reason. If you’re at the level of “click this do that” then you shouldnt even be considering this. 
This kinda has nothing to do with swift development ? Its just advertisement?
Yes, you can do this too. As long as everything is property list encodable you can save it into `UserDefaults`. However, you are much better off not doing this kind of thing manually. Use custom types instead, it's much cleaner and easier in the long run. Think of it this way. You're going along, trying to program when you come across this: var objectA: [String:Any] var objectB: Person "I wonder what `objectA` might be. Well, let me try to find where it gets set, what functions are used on it, how it's used." Or, "Oh - `objectB` is a `Person`. Lemme look that up." struct Person: Codable { let name: String let age: Int let profession: Profession func foo(bar: String) -&gt; String { ... } } Clearly, it's much easier to use `objectB`. You can easily look up the type, get its properties, see that it's encodable/decodable, use the methods that are bundled up with it. This is object-oriented programming at its finest. Can you do object-oriented programming without a type defined in code? Sure, you can have a group of properties in dictionaries that serve as an object and associated functions to act on it. However, by using the facilities given to you by the language you make it so much easier to find, read, use, and maintain.
I prefer everything writing in code instead of using IB. I was using IB in my previous project and got a lot IB git merge issues when two people working on the same project. That was a REAL pain to me. And also, I noticed using IB is NOT reliable all the time, sometime it stops working without any reason. After writing everything by hand, I do not have those issues, Of course, I found it takes a little more time than using IB but I think it’s worth in my opinion. 
You're welcome :)
Just Swift. Might learn Objective-C later on. What you got going on?
Dude stop advertising your app twice a week on development forums... it’s great but stop 
Which part do you want/need? The tab strip, the pager, or both? This UI pattern isn’t encouraged under iOS, so implementation isn’t the most straightforward thing. I’ve built a paged tab strip thing before, and what you’ve been told (use view controller containment) is correct, there’s no shortcut. If you have large numbers of tabs, you’ll need to use UICollectionView for the pages. If you’ve only got a small number of fixed pages, you might be able to get away with using a UIScrollView instead. 
I might be missing something, but this looks like it works as expected? `newDate` is a Date object and has no direct connection to the DateFormatter you created. If you print a Date object it will always use the formatting you posted. The effect that the line `dateFormatter.date(from: stringDate)` has is that through that the dateFormatter knows how to parse the string "10/12/1991". If you want that to print as "10/12/1991", you'll have to call `dateFormatter.string(from: newDate)`.
You use DateFormatter to concert between Date and String representations, however it doesn’t add a format to Date objects itself.
I want both. I want something like 4 tabs (I think can be done using collection view), with each of them having a titles, and as I scroll from 1 item to the next, I can switch between 4 view controllers underneath the bar. Actually what I want to do this exactly like what the library does, just that I want to code everything myself instead of using third party library. 
You can do it with Swift too, it's pretty close to the same process. But still, as you said, don't do it!
And that time is always GMT.
That's what I thought :( I've asked them before, and they just provide a stock response pointing me to the page where they make product announcements. Saying if they add a new language it will show there first.
Typical corporate nonsense. Say nothing and people can't hold you to anything.
I can kind of understand why they don't go in depth to the many requests they must get to be honest. It would be nice know if it is in the works though, I don't mind holding off releasing for a few months. But if I don't know I have to assume it isn't.
I find unit testing useful any time I write code -- even if I'm the only developer -- because it's a great way to verify that my code works as expected. If I break something, I'll know about it right away. I'd rather not ship bugs to my users, and unit tests help to prevent that.
First of all, `Array` is a stack implementation. As you see, every given here method is a very simple wrapper around `Array`. Nothing is added to the implementation, all this is doing is limiting the functionality of `Array`. With that in mind, do you want to just wrap the `Array` method [`contains`](https://developer.apple.com/documentation/swift/array/2945493-contains)? Or do you want to implement the method using the stack primitives you've outlined here?
Yes I know the stack is merely an array, my problem is that I want to make a "stack" of "nodes" which is a class I've created. And I wanted to see if given a node is this node contain in this stack of nodes. When I try using the contains method, it's giving me the contains(where: throws -&gt; Bool) re-throw method, and I'm not sure how to use that
I just finished and released my first cocoapod - [DragSelectCollectionView](https://cocoapods.org/pods/DragSelectCollectionView) - over the weekend.
Check out [AudioKit](https://github.com/AudioKit/AudioKit). I'm on the core team. It's a one of a kind project.
Thanks /u/viirus42 and /u/Catfish_Man ! I was misunderstanding the formatter's role. 
I was in a discussion about this soon after Golang support was announced. I’d say it’s highly unlikely at least in the short term. Swift may be usable as a backend language with 3rd party frameworks like Perfect and Vapor, but until similar APIs get rolled into the language, I can’t see Amazon playing the role of “advocate” for a 3rd party one.
YOU ARE THE REAL MVP 🎉🙌
The source code is right there on git. Give it a read.
1. If you want to reverse it, you can either reverse the order of the elements before you pass it to the function. Or you can use let firstView = tempViews.removeFirst() You'll probably want to check that tempViews has a length &gt;0 before you use that though. 1. When writing the function, yes, you do need to write that out. But you can add parameters to it if you want as well, but you have to include an underscore before the variable name. func animateViews(views: [UIView], completionHandler:( (_ myString: String, _ myFloat: Float) -&gt; Void)? ) { .... Would call it like: completionHandler("someString", 10.0) 1. The if let for the completionHandler is because the function is optional in the function. So you can call the animateViews and pass a nil function for the completionHandler if you want: animateViews(views: views as! [UIView], completionHandler: nil) 
I have this extension in my code that helps whenever I have to combine hash values: extension Hashable { /** Combine one hash value with another. Based off of Boost `hash_combine()` */ func combineHash&lt;T: Hashable&gt;(with other: T) -&gt; Int { return other.hashValue &amp;+ 0x9e3779b9 &amp;+ (self.hashValue &lt;&lt; 6) &amp;+ (self.hashValue &gt;&gt; 2) } } You can use it like this: struct Foo { let first: Int let second: Float let third: String } extension Foo: Hashable { public var hashValue: Int { return first.combine(with: second).combine(with: third) } static func ==(lhs: Foo, rhs: Foo) -&gt; Bool { return lhs.first == rhs.first &amp;&amp; lhs.second == rhs.second &amp;&amp; lhs.third == rhs.third } } 
Do I need to combine the hashvalue of all of my variables?
Yep, just chain them with the `combine(with:)` method.
I took a quick look and didn't really found anything. But a solution someone found was to have two MPVolumeView and have one show the slider and the other the route button.
Will take a look. Thanks for linking.
That’s exactly the rote I took. 
A “long time” is relative. Can you post the code for the method you’re using, the code you’re testing it with, and the times?
https://github.com/TrustWallet/trust-wallet-ios
Could this be used to create a pandora like service?
While you could do something weird with `hitTest()`, it's probably easier to add a gesture recognizer to the view behind the one you want to dismiss. You could activate it only when your modal view is visible, then use it to dismiss the modal when triggered.
wow, Apple partnership with IBM, signed by Tim Cook years ago, is about to vaporize competition. Watson is lightyears ahead of competition.
Your implementation for `Stack` doesn't call `Array`'s `contains` method properly. I changed it to this so I could test it: public func contains(element: Node) -&gt; Bool{ return items.contains { $0 == element } } I can't really test all your code so I just profiled your `Stack` with this code: import Darwin var test = Stack&lt;UInt32&gt;() var testValues = [UInt32]() for _ in 0..&lt;100000 { test.push(arc4random()) testValues.append(arc4random()) } var foo: Bool = false for value in testValues { foo = test.contains(element: value) } print(foo) The variable `foo` is just there to make sure the compiler doesn't optimize away an empty loop. On average the `contains` method took 2.5 seconds or so to complete. Since it's testing 100,000 random elements 100,000 times that's pretty quick! It doesn't appear that the `contains` method is slow.
Apple posted some iOS Sketch templates themselves, they cover nearly everything and are easy to reuse.
Did you add your URL scheme to the `LSApplicationQueriesSchemes` key inside your `info.plist`?
Yep I did indeed, let me actually go ahead and add that to the original stack overflow post
Then check [this](https://stackoverflow.com/questions/32870393/canopenurl-this-app-is-not-allowed-to-query-for-scheme-instragram) you put the right thing into the plist. It should be `scheme` not `scheme://`
actually you may have found my problem, i had it under CFBundleURLSchemes not LSApplicationQueriesSchemes. I'll keep you updated.
If you **really** want to do it, there's a pretty terrible hack you can do. You basically [build a tiny shim API in a supported service that just calls through to Swift](https://medium.com/@gigq/using-swift-in-aws-lambda-6e2a67a27e03). You're likely losing a lot of the nice Swift performance there, however... I was at a Swift conference at recently and one of the presenters said it's really easy to get Swift functions deployed on [IBM Cloud / OpenWhisk](https://www.ibm.com/cloud/swift) (the presenter didn't work for IBM, btw). Apparently as long as your functions run under a certain amount of processing time you get the first several thousand requests for free too, so it's easy to try out.
nope. You will have to design your own control.
Adding all the images every time is your problem, you shouldn't have to add all the images again, should only update the image(s) that need to be updated.
Seems like it does what core ml does.
Thanks for the explanation, do you have any resources that explain ui building in code? Have never really worked code only, but I want to be able to do both..
I think it works together in a way that it can learn as it goes? Let say if you make an app that recognize a dog, you can make it so that Watson will get better at it overtime.
You've convinced me, I'll have to add some unit test to my current project! Thanks for the article btw, helps!
You stole the actual encryption code from swiftybeaver, maybe it is more faire to announce that youve created a wrapper which makes encrypting files more convenient...
Stole? I never claimed it as my own. You could just see it as a dependency for my wrapper. I couldn’t find a library optimized for decrypting large sums of data so I decided to make my own. And within that file header you see that I added a modified disclaimer and kept the rest intact. Yeah I could have made it more clear about the dependency on swiftybeaver’s AES library. But claiming that I stole it isn’t fair imo
Just add an invisible UIButton behind your UIView. If not you're going to add that behavior to unrelated view layers that accidentally happen to be below that UIView which makes it a bit of a mess.
:( I'll probably persist with IBM Cloud. They do seem to be improving the little issues, and are definitely playing the role of a Swift advocate.
As far as I’m aware the number of cores is determined by the workload on the device. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [WesVleuten/Swift-AES-Parallel/.../**AESParallel.swift** (master → 809d738)](https://github.com/WesVleuten/Swift-AES-Parallel/blob/809d7389e0a40036044e20b743f23fe1f89d1fd3/CryptTest/encryption/AESParallel.swift) ---- 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [SwiftyBeaver/AES256CBC/.../**LICENSE** (master → 0916f1a)](https://github.com/SwiftyBeaver/AES256CBC/blob/0916f1a3c0bb8837fb18584cd89b0a1c94b05018/LICENSE) ---- 
I want the user to be able to interact. 
"Just like any other map app. When the user pinches to zoom in or out, they see the result as a bigger or smaller map area and the indicator for the user current location may or may not be visible. The user can always get current location again by tapping the current location map button. When user does a search, a marker shows the result chosen. The map view stays in that location until the user asks for something else - either another search or a tap on current location."
Okay, if I understand correctly I need to reference his original work within my readme and my license should also be MIT?
Thank you for your feedback! I'll look into the points you've made. I have one question. How can I prevent making unnecessary copies of data?
The best way to learn the ins and outs of library is to actually mess around with it. Try following this guide from Apple https://developer.apple.com/documentation/corelocation/converting_between_coordinates_and_user_friendly_place_names and play around we reverse geo coding gps into CLplacemarks and you might even figure out what you are looking for is actually the sub-locality. 
No, you can use any license you want and modify the work as much as you want. The key is: &gt; The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
I'd try to avoid reading the entire file into memory unless it's pretty small. Instead you can use an [`InputStream`](https://developer.apple.com/documentation/foundation/inputstream) to only read the bytes you need. Since AES is a block cypher you can read in blocks of the appropriate size, decrypt them, and write them out to an [`OutputStream`](https://developer.apple.com/documentation/foundation/outputstream).
I don't think this is possible. It will be driven by the OS and the current workload that is going on. It also it worth noting that the 4 cores in use and the more energy efficient cores. So whatever the workload is, the system has determined it is better to run them on those cores.
The same way you set the image originally. imageView.image = someUIImageReference
I've just finished watching this second video (I watched the first one about two weeks ago), and I've found it to be one of the most accessible ways to see where the *functional programmer* mindset can actually make quality differences in my code. I do think that there is a resistance to using custom operators, because they are not widely used and even if you see a familiar-looking operator in someone else's code, you have to dig in to see that they implemented in in a way you expect. Until there's a common, popular Functional library that people recognize (e.g. "Oh, they imported Freepoint's libFunctional.") or the operators are incorporated into Swift itself we'll always have to look through where these things are defined. (i.e. do deep dive to see if someone defined their `&gt;&gt;&gt;` or `&lt;&gt;` operators in a sane, performant way). But in the past, I've been frustrated by the use of functional programming's terminology (e.g. monads, functors, etc.) and it really made it hard to see how this was more than a complex parlor trick. So even if I may not use it (without community standardization) I still want to compliment you guys on making this stuff *really* accessible.
I'm already subscribed, just wanted to say I'm a big fan so far: like the other poster mentioned I feel like mixing functional with iOS dev concepts is really helping me to "get" FP 
I think the biggest advantages of the convenience `init`s are : * reduce duplication of code -- don't have multiple places that code can actually be initialized. If the actual initialization is in one place, and called by the convenience `init`, it's easier to debug and change in the future. * improve clarity at the call site -- if your initializer has optional arguments, or will fall back on default values if not supplied, then providing a shorter init makes it clear that the caller isn't concerned with those things. If it's not concerned with them, they shouldn't even need to supply data it's not interested in, just to make the `init` work. It keeps the logic at the initialization site simpler, but still allows full featured initialization if that's what is wanted. Reading the code is clearer what the programmer was interested in.
Hey thanks for watching and thanks for the feedback! The operators are definitely the biggest sticking point we've heard about. Because of that, just a few days ago we recording an episode on how to embrace these compositions without operators, and compare the approaches. The compositions are just too important to miss out on due to operators. 
That's great to hear!
I've never used this library personally, but seems like it could definitely be used to recreate those icon animations: [lottie-ios](https://github.com/airbnb/lottie-ios). I know you weren't asking about the swiping animations, but in case you were curious, that's most likely a UICollectionView with a custom UICollectionViewFLowLayout, but there are other ways it could be done as well.
You could write an extension for the Array class with the method public mutating func append(_ newElement: Element, closure: ()-&gt;()) { self.append(newElement) closure() } Didn't test it, wrote it from my phone but should be working.
I definitely wouldn't recommend doing this in your app that you submit to the app store, but if you want to be able to mess around with the controls, you can get a reference to them like this: let volumeView = MPVolumeView(frame: wrapperView.bounds) wrapperView.addSubview(volumeView) var volumeSlider: UISlider? var volumeButton: UIButton? for view in volumeView.subviews { if let view = view as? UISlider { volumeSlider = view } else if let view = view as? UIButton { volumeButton = view } } Their subclasses are actually MPVolumeSlider and MPButton, but both those subclasses are private.
If you change DispatchQueue.main.async { ... } to DispatchQueue.main.sync { ... } it should work how you're wanting, but that method will lock your UI since it's being called synchronously on the main thread.
Does locking the UI include not being able to create and set subviews and UIImage’s etc? Or just not allow the user to perform any input?
I believe everything will be locked until that block is finished
Hard to say without seeing the test. Did you miss something or add something you shouldn’t? Were you allowed to use alamofire or would they prefer to see you do a native solution? Maybe they wanted to see the json decoding done using swift 4 decodable protocol rather than the older way you did it and things like that? Hard to say what they were looking for. Could just be that someone else did it more in line with how they wanted it and it wasn’t any fault of yours specifically. 
This is so clever. 
I don't have much experience with demo apps for potential jobs, but I feel like they'd rather see you implement things yourself rather than do them with a library brought in with CocoaPods.
So you added pods which unless the tea explicitly says you can do, then you probably shouldn’t plus it probably took longer to actually add alamofire than to write a network layer. Then you added a second pod that just adds functionality the first one already does ... there is a lazy image loading built into alamofire last time I used it ?
The cocoa pods are fine as long as they are for things like networking and the like that most project have preexisting architecture for. They just want to see that you can make something work with basic error handling and debugging. Now if you get a sample project with 12 pods rolled up in it to handle every little thing because you’re too lazy to write your own code, that’s another story. 
Great thank you. Wasn't sure of how big the difference would be 
I'm enjoying what I've used of Vapor 3 so far, with a couple painful exceptions: 1. The locking of models to 1 particular database (at least without lots of generic hoop-jumping) is very unfortunate. While there are benefits to the tight-coupling, there are huge downsides as well. 1. fluent-sqlite (not sure about the other adaptors) uses a really clever way of determining the types and names of your model's stored properties, by passing in a custom `Decoder` type and recording how your model attempts to decode itself. Like most clever solutions, it seems like nice magic until it blows up at runtime and you have to dig through framework code to understand why. 1. Not Vapor-specific, but the Future&lt;T&gt;-based asynchrony model is just begging to be replaced by a Swift language feature like async/await. None of those are dealbreakers, and they're offset by all the great stuff. I'm definitely planning to continue working on Vapor projects, as the opportunities come up.
I think that you’re missing some point. First of all you should use Decodable Swift protocol instead that very long parsing. I’d prefer using URLSession for that simple network calls. You have one “ViewModel” that represents your model, a network layer and actions on your model, I think that’s not single responsibility at all. You’re not masking networking in some service, agnostic from chosen library, but the most important thing: there’s no unit tests! If you were applying to a senior position, I think that they are right.
Despite the JSON decoding and encoding in swift4 as others suggested, your namings are bad! Why is “Event” in viewModel? Or why is Event responsible of returning an Array of Events using a static method? I mean “Event.getEvents” is enough to decide if someone’s good for a job or not. (There might be other API’s that return an array of Event, but this way, your model is bound to a specific API, but models should be as dumb as possible and unaware of the outside world) Your code is not testable either, let’s say you want to mock getEvents method to see how your viewController reacts to different Event models, you have to comment/uncomment some code to achieve it. (Which is bad, since it’s error-prone)
One issue is that your manual response parsing doesn't follow best practices. First, it's best to model your responses (these aren't view models, by the way) using well named properties that match the expected optionality of the response, not just having every property be optional because you don't know if you'll get them out of the response dictionary. At the same time, your parsing method doesn't allow you to represent errors, so there's no way for the app to know if it got a bad response. Instead, you'd just give it a model that has `nil` for a bunch of its properties. Whether you write your own networking stack or use Alamofire, you should likely use `Decodable` instead of doing anything manually. It generates errors for you and will even automatically generate the parsing for you. This specific issue is also general one with your code, as you have little proper error handling (e.g. it's not appropriate to just return `UITableViewCell()` if you can't dequeue the cell type you expected. So I think learning some general Swift best practices would help you greatly in the future. Ultimately I think that, when they said your skills "weren't right at this time", they meant your code was unrefined. It shows some general use of the language and frameworks, but no understanding of best practices.
Like others have said, I wouldn't have used a CocoaPods library for this project. Unless told otherwise, I think it would be best to just use the built in networking libraries, especially for something as common as downloading and processing JSON to display in an app. One thing that stuck out to me that isn't necessarily _wrong_ but shows a lack of care is that your formatting is just inconsistent. On one line you'll have a function declaration of: `getEvents (searchText:String?, completion:@escaping (_ events:[Event])-&gt;Void)` then just below that you have: `convertToArray(data:Data)-&gt;[[String:Any]]?` Last thing, why don't you make the `Status` enum have a base type of String so you don't have to have a switch when you process the JSON result? 
Your app will appear totally frozen to the user
Ahh during the function that I want to make sure finishes I update the game board image multiple times.. is there another way?
It simply doesn’t do anything. The print statement which should only print once the simulate() function is complete prints immediately long before it has finished.
Are you sure the work in simulate is run synchronously?
How would I know if it is? I apologise this is my first foray into having to mess with the threads and synchronising things in Swift.
You know it’s run synchronously if it doesn’t appear in any asynchronous block. In simulate, stick an explicit sleep for a few seconds (https://stackoverflow.com/questions/27517632/how-to-create-a-delay-in-swift). If that delays the dispatch queue notify, then simulate is run synchronously. Otherwise it’s asynchronous.
Without more information I can't tell exactly what's going on, but form a first glance this is the first thing that came to my head: Consider giving each node a numeric ID and do the checks using the numeric IDs. Also maybe have a separate array (parallel) with just the node ids and search _that_ array (will probably be more cache friendly).
I don't thinking "naming" is really a disqualifier (it's mostly personal taste/preference after all).
Giving a numeric ID so that the equatable function only need to check it ID? That seems very reasonable, I'll give it a try
There's no reason to assume _you_ definitely did something wrong. Maybe it's just one of the developers does not like your style, or maybe they already hired someone else. Also, it's hard to tell without knowing what their requirements were. Maybe they asked for specific things that you did not implement, but no one here can help with that without seeing the actual test (and I assume you're not allowed to share it publicly). 
Something like let start = Date() thingToMeasure() let elapsed = -start.timeIntervalSinceNow() print(elapsed)
I understand that this is correct, but how do I do this assuming I don't want to assign an initial value to "badge"? i.e. What if I want to initialise Badge using init instead of putting in a value right away (so I can later set the value in myFriend)
 At some points, yeah I agree, but if you’re applying for senior position, your code has to have a minimum readability to the team, don’t you think? P.s: I was trying to emphasize on the “Event.getEvents” logic despite it’s naming.
Every stored property in Swift has to have an initial value, however you could use Optionals to model an empty initial value.
I mean for Name and Year for example, you don’t have to put an initial value since I did the init then did self name = name and self year = year. My question is how do I write the override init so that instead of setting an initial value for Badge, I can do something like self badge = badge so I can define that value later when I do the myFriend instance?
Like this? import UIKit class Student { var name: String var year: String init (name: String, year: String){ self.name = name self.year = year } func pupil() -&gt; String { return "\(name) is a student in \(year)" } } class Perfect: Student { var badge: String override init(name: String, year: String) { self.badge = "Badge" super.init(name: name, year: year) } init(name: String, year: String, badge: String) { self.badge = badge super.init(name: name, year: year) } } let myFriend = Student(name: "Aisha", year: "SS2") let myOtherFriend = Student(name: "tester001", year: "2018") myFriend.pupil() let myNewFriend = Perfect(name: "new", year: "123") myNewFriend.pupil() let myNewestFriend = Perfect(name: "Sam", year: "5678", badge: "InitBadge") myNewestFriend.pupil() print(myNewestFriend.badge) BTW, please submit your code in raw format (cut and paste) so we don't have to type all the code in for you. Tip: if you block the code, then select Editor-&gt;Structure-&gt;Shift Right from the menu... it'll post in the proper Reddit format.
Not sure if I understand it correctly but I think there's 2 possible way to achieve what you want. First you can extend the Student class with an optional badge property and set an initial value in the initializer // MARK: Extend the Student class with optional badge property class Student { var name: String var year: String var badge: String? init(name: String, year: String, badge: String? = nil) { self.name = name self.year = year self.badge = badge } func pupil() -&gt; String { return "\(name) is a student in \(year)" } } let myFriend = Student(name: "Aisha", year: "SS2") // myFriend.badge = nil let myFriendWithBadge = Student(name: "Aisha", year: "SS2", badge: "badge1") // myFriendWithBadge.badge = "badge1" Or you can subclass from Student and set the initial value of the badge to an empty string to prevent using optionals. // MARK: Subclassing the Student class class Prefect: Student { var badge: String init(name: String, year: String, badge: String = "") { self.badge = badge super.init(name: name, year: year) } } let myOtherFriend = Prefect(name: "Dave", year: "SS3") // myOtherFriend.badge = "" let myOtherFriendWithBadge = Prefect(name: "Dave", year: "SS3", badge: "badge1") // myOtherFriendWithBadge.badge = "badge1"
Oh. Thank you. But now I have a question. How come you have to do the override init and give self badge the initial value of “Badge” before doing ANOTHER init where you can finally do self badge = badge ? Must badge get an initial value? How come it can’t be like name and year which just get self name = name until you create an instance of it?
I think my confusion is in the subclassing method where not only do I want to add a new property "badge" in the subclass, but I also want to change one of the original properties "year" by overriding it. Basically, I don't know how to write a subclass where the following two things are happening: 1. Add new stored property - badge (with NO initial value so initialise using init / self badge = badge 2. Override "year" to be something else (therefore needing to use Override Init)
You can have both. You can have more than one init. In this case, you might decide that you want badge to = "badge" unless the programmer gives it a value. You can think of this as a default. If you cut-n-paste that code into a playground, you can see the choice of inits come up... Type this into the playground: let myNewestFriend1 = Perfect( then press space... see what happens? I'm not sure if it's a 'must' but it's a good practice. Basically all vars should have a value, even if the compiler gives you one, it's best practice (IMO) to always have a value.
What if I don't want it to have a value until I create an instance? I know it's good practice but it's important to me that i know how to do it both ways because I'm just learning so I want to know I can do it even though once I've mastered it, I will follow best practice.
Can someone explain what this is about?
I think you just make it an optional. The other code example used an optional. I was just reading his example. Did you cut and paste the code into an Xcode playground? I wonder if the init choices would show one as being an optional.
Like this? import UIKit class Student { var name: String var year: String var time: String? init (name: String, year: String){ self.name = name self.year = year } init (name: String, year: String, time: String? = nil){ self.name = name self.year = year self.time = time } func pupil() -&gt; String { return "\(name) is a student in \(year)" } } class Perfect: Student { var badge: String override init(name: String, year: String) { self.badge = "Badge" super.init(name: name, year: year) } init(name: String, year: String, badge: String) { self.badge = badge super.init(name: name, year: year) } } let myFriend = Student(name: "Aisha", year: "SS2") let myOtherFriend = Student(name: "tester001", year: "2018") myFriend.pupil() let myNewFriend = Perfect(name: "new", year: "123") myNewFriend.pupil() let myNewestFriend = Perfect(name: "Sam", year: "5678", badge: "InitBadge") // show the usage of optional in an init let myNewestFriend1 = Student(name: "one fish", year: "two fish", time: nil) // shows the optional 'time' print(myNewestFriend1.time) // this is nil let myNewestFriend2 = Student(name: "one fish", year: "two fish", time: "red fish") print(myNewestFriend2.time) // this is no longer nil myNewestFriend.pupil() print(myNewestFriend.badge) 
Not possible :( it’s restricted to the OS apps. Maybe in the future ?
It’s an event driven network framework with high performance Apple released just a few weeks ago here https://github.com/apple/swift-nio It’s very impressive that Vapor has been so quick to implement it.
To add onto what /u/Maxesse said, Vapor is a web framework (think Ruby on Rails, or Node.js, or Flask, but in Swift). Web frameworks need a way to send and receive network request asynchronously, and up until today, Vapor was using something the developers had written and were maintaining themselves. Switching over to NIO, which is written and being maintained by a team at Apple, means that the developers of Vapor have more time to write awesome features now that they don't have to spend so much time mucking around with low level networking code. It's very exciting stuff for the server-side Swift community.
Hi All, I'm a self taught developer in the middle of applying to my first dev position. I just got two rejections this week after submitting seperate code samples so I'm starting to get a bit worried about my prospects. I wasn't able to get feedback on either of my codesamples (which seems to be par for the course during the interview process unfortunately). That being said, I don't really have access to any advisors when it comes to Swift, iOS architecture. I'd really appreciate any feedback you have on any issues / code smells that stand out to you. You can find the repository for the app [here](https://github.com/CodeOfManyColors/TapSearch). The prompt was simply to create a word search app that works on all screen sizes. For the purposes of this post I commented out the API and replaced it with dummy .json file. Other than that, everything should be the same as what I turned in. 
I’m not sure what you mean here. When you have `self.name = name` in the init method, that means that the parameter you pass in is the initial value for the name property. You’re not avoiding setting an initial value there; the value you pass is the initial value. An overriding init is when you want different behaviour from an existing init, for example if for some reason this particular subclass converts the name to uppercase values. If you also want to pass in a badge value, you need a separate init, not an override, since badge is defined only in the subclass. You can’t define the value later, Swift requires all your properties to have some initial value. You can use an optional so the initial value is nil. But you still have to have an initial value.
https://youtu.be/s_SOYcYBnGU 9:30 Time Profiler
It could be. I think both the Hacking with Swift book and the Ray Wenderlich have been updated to NIO, but I could be wrong. Which one did you get?
[removed]
In "Event" you should make "Group" and "Venue" weak, otherwise you are creating a strong reference cycle. It would be better if you made all your variables set to "!" instead of "?". This will give them a default value of nil when initialized. You could use a failable initializer: (init?) and add guard statements to return as soon as it doesn't find the property it needs. Still, this would not work for enums and other structs or classes since the json only understands about primitive types. This is one of the options if you want to use an initializer. Better would be, as others have mentioned, to use the Decodable Swift Protocol. This handles literally everything to initialize your class. Here is a link to know more about decodable protocols: https://developer.apple.com/videos/play/wwdc2017/212/ If you go to 23:44, you will learn more about Decodable and Encodable. 
Maybe have a look at this (https://designcode.io/spritekit) Out on April 9
The complete code can be found [here](https://github.com/kinglouie/BlurWindow) I also tried using NSMapTable with *.weakMemory* set for the Windows but this leads to a segfault too.
Teu using convenience init convenience init(parameters) { } 
I got the Hacking one just a few weeks ago. The instructions didn't match up with what templates Vapor created and it looked like Vapor was doing things like creating different templates based on the file name used. Considering that the second project was different than indicated, couldn't compile and I had no idea what was causing what, at that point, I'd simply be guessing and just expected that I'd wasted the money and time at that point. 
Thanks that's really helpful. My code in simulate() does actually use DispatchQueue: func simulate() { var move: Int? DispatchQueue.global(qos: .default).async { if self.throwing == true { self.playerArray[0].ascii = "A" self.ball.coordinate.i = 99; self.ball.coordinate.j = 99 self.ball.player = nil } for _ in 0...3 { for player in 0...15 { if self.playerArray[player].moveStack.topItem != nil { move = self.playerArray[player].moveStack.pop() if self.checkAcceptableMove(direction: move!, player: player) { self.playerArray[player].move(direction: move!) if self.ball.player != nil &amp;&amp; self.ball.player! == player { self.ball.move(direction: move!) } } else { self.playerArray[player].moveStack.clearStack() } } } DispatchQueue.main.async { self.resetBoard() } sleep(1) } } } This was to make the board pieces move across the board one space at a time and look presentable (user inputs 4 moves at a time, and then simulate moves the pieces then). What would you recommend in this instance? Want to wait until the 4 loops are fully completed before allowing the next function to run.
The one you specifically singled out, as stated in comments can be achieved with Lottie from AirBnB, but most of the designs shown would have to be made custom and take a very long time, some of them just seem to be more cumbersome and less intuitive than a usual flat design :/
Are you creating your Vapor project from the version 3 beta? I had a similar issue but it turned out it was because I was installing Vapor 2
My simulate() code looks like this, which does actually include a DispatchQueue and a sleep() call (to make the board pieces move one space at a time across the board, user inputs 4 moves at a time). func simulate() { var move: Int? DispatchQueue.global(qos: .default).async { if self.throwing == true { self.playerArray[0].ascii = "A" self.ball.coordinate.i = 99; self.ball.coordinate.j = 99 self.ball.player = nil } for _ in 0...3 { for player in 0...15 { if self.playerArray[player].moveStack.topItem != nil { move = self.playerArray[player].moveStack.pop() if self.checkAcceptableMove(direction: move!, player: player) { self.playerArray[player].move(direction: move!) if self.ball.player != nil &amp;&amp; self.ball.player! == player { self.ball.move(direction: move!) } } else { self.playerArray[player].moveStack.clearStack() } } } DispatchQueue.main.async { self.resetBoard() } sleep(1) } } } What would you recommend in this instance? Want to wait until the 4 loops are fully completed before allowing the next function to run.
Shouldn’t you use composition to fix this?
i'm a beginner. i've only gotten as far as subclassing. i don't know what composition is
docs.vapor.codes/3.0/
&gt; Node.js Sorry to nitpick but Node.js is not a framework. Vapor should be compared to Hapi or Express in Node.js land.
I did try contacting you about this to help figure out the problems, but many things did indeed just change – I'm busy stepping through all the projects to bring them up to date. I'll be issuing a book update shortly to take into account all these changes, but if you have the time please email me (paul@hackingwithswift.com) so I can help get you back on track!
Twostraws has been pretty active updating it and trying to keep up with any changes. I’m sure if you mentioned any inconsistencies to him he’d update it. 
Oh, did you reply to my post on your subreddit where I asked the question? That's where I was looking and after a few days of checking back in, I gave up on the whole thing and moved on to other projects. At this point, I'll have to reorganize my schedule and I realize you are in the middle of an update. It might just be best to wait until you release the update and I'll take another look at it. 
Whatever it was a few weeks ago, I don't remember. I just followed the instructions in the book and went over the projects several times. After being left with the same project that couldn't compile after recreating it from scratch as per the instuctions over and over and not getting my questions answered when I posted them in the hackingWithSwift subreddit after a few days, I realized this was a waste of time and money and moved on.
I did. And I posted the the problems and questions on the hackingWithSwift subreddit. After a few days of no responses and burning 4 hours trying to get past the routing example (exercise 2?), I gave up since it was a time sink and the instructions in the course did not produce output templates that matched what I was seeing. With this mismatch in the project templates, there clearly was no explanation for why this was happening, it wouldn't compile and considering that Paul stated that each example is based on the one previous to it, there was no way I could afford to waste any more time with it. 
I sent you a DM, but I should probably have posted to the thread as well – apologies. If you get my emails containing announcements, you should get a message in the next couple of days explaining all the changes. There are quite a few!
Initializers for a `struct` are simple. You get one for default that takes all members and initializes them. If you create your own `init` method then the default one is not created. By the end of the `init` method all members have to be initialized, either by a default value or explicitly in the `init` method. And, um, that's pretty much it. A `struct` `init` method is a normal method other than that. Done.
That is about as compact of an explanation as it gets! 🤗
Heh, sorry. I'm a fan of compact explanations!
Unless folks specifically tag me in a post, I don't see them easily! I am working on an update now with all the new NIO changes and it should be out in the next couple of days.
there is no difference. Go forth my child and sin no more!
Did you make sure the snippet section was open before you start dragging? https://medium.com/@abhimuralidharan/ios-tips-creating-custom-code-snippets-in-xcode-d91facf5e242 http://jademind.com/blog/posts/create-your-own-xcode-code-snippets/
Awesome =) glad you got it working! In the code above I'd say the easiest recommendation I would say the easiest recommendation I would say try to avoid using a dispatch queue within the function itself. The reason it was getting stuck and everything happened all at once was because your outer call to the function here was handled on the main thread: DispatchQueue.main.async { self.simulate() group.leave() } Even though it's asynchronous, the main thread can still be blocked waiting for a call to finish. So here's what I would do: 1) Make the above call on the global queue: DispatchQueue.global().async { self.simulate() group.leave() } Note: global() always runs at 'default' QoS by, well, default so need to include (qos: .default) 2) Remove the DispatchQueue.global(qos: .default).async call within the simulate function. 3) Keep any UI calls within the simulate (and other) functions called with a DispatchQueue.main.async call. 4) Enjoy! Now your code will work as intended. I find it easier to manage code this way as it makes you think about how your methods/functions are being called and which would be the best queues to call them on; as opposed to having to worry about managing embedded dispatches queues from not only outside the function but within the function as well. As a bonus, some of the for loop logic looks like it could be simplified/cleaned up a bit to be more readable. I came up with this: for _ in 0...3 { for player in 0...15 { guard let _ = self.playerArray[player].moveStack.topItem else { continue } // Your initial if check is just to see if a value is nil or not. To try to prevent creating an if pyramid it'd be best to use a guard let statement here. They are very similar to the if let statements implemented below. Having said that, lets break down what is happening here. guard let, like if let, allow us safely unwrap an optional value for potential use.The difference here is we are guarding to make sure the code below the guard does NOT execute if the optional value returns nil. Since we don't need to set a new variable here we use _ in lieu of a variable name. So at this point the check for a valid value is complete, but then we see else and an enclosure. This is where we define what to do if the value is nil. In the case of your original if statement, you were simply skipping over your logic to continue to the next entry in the for loop. This guard does just that, it says to 'continue' with the next loop entry if self.playerArray[player].moveStack.topItem is nil. let move = self.playerArray[player].moveStack.pop() // Remove var move outside the for loop and set it here with a let since it's only being modified from this point and the rest of the calls are all force unwrapping the value. I take that to mean you know the value of move will never be nil (otherwise the force unwraps below would cause a crash) so there is no downside to storing the value as a no-optional let. if self.checkAcceptableMove(direction: move, player: player) { self.playerArray[player].move(direction: move) if let currentPlayer = self.ball.player, currentPlayer == player { self.ball.move(direction: move) } // An if let statement makes more sense here. If lets are super powerful (though somewhat confusing) if you're new to programming in general (they were for me at least haha). The if let statement is a way of unwrapping an optional value safely and assigning it to a new variable before use within the if statement. So lets break down the above change to make sense of it. 'if let' defines it as an if let statement. 'currentPlayer' will be our newly defined variable IF self.ball.player unwraps into a useable value. If it doesn't, the if let statement won't execute at all (which is what we intended to do by skipping it if the value was nil anyway). Then we put comma indicating to the statement that IF currentPlayer has a valid value we now want to do the following. At that point we check if our new currentPlayer variable is equal to the variable of player. Then and only then will the above if statement trigger. } else { self.playerArray[player].moveStack.clearStack() } } DispatchQueue.main.async { self.resetBoard() } sleep(1) } I think those if lets and guards will make your life a ton easier, I know it did for me once I learned how to use them =). Happy coding!
Do note that the default `init` is `internal`, not `public`.
Wow, firstly thank you so much for such a great reply! Really helping learn as I go along. When I try to implement the 'guard let" I get an error message on the final line of the block saying "'guard' body may not fall through, consider using a 'return' or 'throw' to exit the scope". I tried some things but couldn't figure out exactly what I should be putting here. Any idea? Other than that made the other changes just fine and will definitely try to make sure I use if let's more from now on, thanks! 
I feel like there should be an annotation or something that just promotes the default `init` to `public`.
It would be nice to be able to manipulate the default `init` method a bit. Say, a keyword to generate it in predefined ways. That way you could make a custom `init` and still get the default one just by adding the right keyword. I think there was a proposal to add something like that to standard Swift at some point but it didn't get approved. People have asked for a similar thing with `class` too.
=D happy to help! And I'm sorry, I forgot you can't use guards with continue . . . so in that case we will go back to what you were doing but with a twist! if self.playerArray[player].moveStack.topItem == nil { continue } That should do the trick =)
One could get even more picky and say that Vapor is a combination of Express + Node, since it handles both the routing (Express) and is webserver with nonblocking capabilities (Node). 
So as perhaps the first real-world project that is using this brand new framework, what is the impact of this change? Is Vapor simpler? Is performance better? Is swift-nio as robust as what Vapor had spent dozens of releases refining? In general, adding a big (50,000-line) external dependency can make sense *if* it's a good interface, a good implementation, and it continues to be well-maintained, but since swift-nio is so new I have no idea whether any of that is the case here. Has this paid for itself already, or are they hoping it will in the future? 
The LetsBuildThatApp youtube channel has lots of series of videos building known apps from the ground up. Very helpful for getting your head rounds programmatically building UI's.
How do you isolate the components
Great questions! I'll answer the ones that I can. &gt;Is performance better A lot of people are going to hate hearing this, but it's worse, at least for now. Before NIO, Vapor was easily beating Golang's Gin framework, and approaching FastHTTP in requests per second. You can read more about that benchmark halfway down the Vapor Nation newsletter found [here](http://vapornation.news/week1-18-01-29). I haven't seen a NIO MySQL benchmark yet, but pre-NIO, Fluent (Vapor's ORM) was achieving 17k queries per second per core from a Macbook Pro. After NIO, Vapor is no longer beating Gin, but a large part of the that is NIO's unoptimized HTTP parser. The Vapor team put a lot more focus on optimizing Vapor's HTTP parser than NIO, but once that happens, I'd expect Vapor to be back in the vicinity of where it was before. You can read HTTP optimization discussion [here](https://github.com/apple/swift-nio/issues/141). &gt;Is swift-nio as robust as what Vapor had spent dozens of releases refining As robust if not more so. Vapor 3 was a complete rewrite of Vapor, so the current code base is actually only slightly older than NIO. In addition, NIO has a larger team and much more support from Apple. I haven't heard any complaints of missing features from the Vapor team, and they've been very excited about the gains. &gt;Dependency concerns I'm going to quote Vapor's founder, Tanner on this one ``` Swift NIO directly replaces: * vapor/async (except we will keep our conveniences here, since they are nicer IMO) * vapor/sockets (we only supported TCP, they support TCP, UDP, Unix, way better!) * vapor/tls (finally, 🙏) * vapor/engine (except websockets and our multipart/form-url stuff. we will also port over our conveniences for header names, body, etc) ``` It totals around 20k lines being replaced IIRC. So far, the developers have been very happy with it, so the implementation must be pretty good. I don't think there are any worries of NIO becoming abandonware any time soon. It's being maintained by a dedicated team at Apple which is a good sign already, but on top of that, NIO is being used by other teams internally from what I've heard. A few members of the NIO team are working closely with Vapor, sitting in Vapor's Slack channel, fielding questions and bug reports, and reviewing PRs and issues submitted by the Vapor team. Overall, it's looking like a great symbiotic relationship. &gt;Has this paid for itself already, or are they hoping it will in the future? It's only been a day so I can't say whether it's paid for itself or not yet. They did a pretty good job of keeping the public API stable so the changes I needed to make to my projects when I updated were super minimal. A lot of low level networking bugs were fixed outright by swapping in NIO, so that was pretty good, but of course, new bugs are going to be introduced when you make changes that large. I'd say it's been a net neutral change day 1, but it's expected to be overwhelmingly positive given that the most bug-prone parts of the codebase are now being maintained by some very qualified people. We ought to have a faster rate of development of high level features moving forward.
Im going to work on updated the app I built for visualising Strava activities in 3d. It uses a table view with default cells. I am going to change it over to use a UICollectionView with custom cells so it looks a bit better!
You need better training material to cover both apps. Your support people have to support both of them. Etc. You want the experience to be the same for all employees regardless of platform. These are truck drivers not programmers remember. 
If they're physically close, you could use MultipeerConnectivity? That comes with a built-in view for finding other devices, as well as sending, and accepting invitations to connect. You can set a maximum number of devices to pair together, should you want to.
If your dictionary has an order then I’d recommend making max and min functions to make access easy on either end.
I use Inventor or 3DStudio. There is also Blender which is free an open source. I am not an artist though. I can deal with mechanical type stuff but not organic looking things such as creatures and faces. But I can say 3DS Max and Blender can do all that in the right hands.
You can use `last` to get the last element on an array, this will return you an Optional element. so for your case - `dictionary["key"]?.last`
The values are arrays. OP is missing a bracket. 
Use a protocol to define a student instead of a class
George Costanza would be proud. 
The last statement has no bearing on the discussion. Very few smartphone users in the world are programmers. That has nothing to do with the proper development of mobile applications that are UI-specific to the platform. Your truck driver that is used to using an iPhone should be able to expect to use the UI controls and metaphors that are specific to the platform and that they are used to using (in their properly developed iOS apps). They shouldn't have to learn to use a crappy hamburger menu just because you can't convince your client that Android UI controls and metaphors shouldn't be used in an iPhone app. Your client presumably hired you as an expert. Part of your job is to explain and convince them about the right way to develop an iOS app. Have you told your client that it will actually cost them more money for you to implement a hamburger menu vs. just using what's built in to iOS? You're not writing them app for the folks writing the training materials or the support people. I've never had a client where I've had to get permission from the support or documentation staff how to develop an app.
I’m trying to create a subclass of Student called Prefect where: - Prefect has a new property called Badge - The year property of Student is changed to Grade 
I just started learning so I don’t know what a protocol is yet ☹️
Happy to see they’re already looking to work on speeding up the HTTP Parser. 
Working on a new native Mac code editor. Finding it challenging due to the dearth of modern tutorials and docs on MacOS programming.
https://www.youtube.com/watch?v=iqpAP7s3b-8
Print normal.count. What does it say...
You should definitely have a look at this library. https://github.com/AudioKit/AudioKit I think you can also probably find some tutorials to do exactly what you're building if you look at their documentation. 
Absolutely crazy work by these guys, Vapor 3.0 was already some outstanding work, now it has gotten even better in a real short time. One of the funny thing about Swift NIO is that it contains what I think is the first ever Apple made implementation of Future/Promise, I'm pretty sure the Vapor guys have since switched from their own implementation to the SwiftNIO's promise/future instead.
Android version when?
Yes, that does seem to be the functionality I was looking for. I don’t think I would have guessed the right keywords to search for on my own. Thank you!
Your app will use less RAM if the appdelegate does everything. /s
That's a nice observation. The app gets the data from OpenStreetMaps, and I'll need to verify if it has gender info. 
That's a nice observation. The app gets the data from OpenStreetMaps, and I'll need to verify if it has gender info. 
Thanks I’m aware, it was autocorrect.
Should try using [PureLayout](https://github.com/PureLayout/PureLayout), I find it much easier than using the visual format language. All you need to do is pin the tops of the first row to the top of the parent view, and the bottoms of the last row to the bottom of the parent view. For all the other rows, pin their top edge to the bottom edge of a view from the previous row. Next if a view is the first or last of a row, pin the leading or trailing edge to the respective parent view edge. If the view is anything but the first of the row, then pin it's leading to the trailing of the view previous to it. Below is the logic of what I just mentioned using PureLayout to pin the edges of the views, it's untested but should get you started. if y == 0 { imageView.autoPinEdge(.top, to: .top, of: parentView) } else if y == (rows-1) { imageView.autoPinEdge(.bottom, to: .bottom, of: parentView) } if y &gt; 0 { imageView.autoPinEdge(.top, to: .bottom, of: floorImageView[y-cols]) } if x == 0 { imageView.autoPinEdge(.leading, to: .leading, of: parentView) } else if x == (cols-1) { imageView.autoPinEdge(.trailing, to: .trailing, of: parentView) } if x &gt; 0 { imageView.autoPinEdge(.leading, to: .trailing, of: floorImageView[x-1]) }
I made this project just for fun, and to show how we could design and build a modular, testable iOS app. I want to create an Android app using the same loosely coupled architecture, just to see if it's possible. There are apps like Flush which solve the problems, and you might want to check them out. 
Checkout [PureLayout](https://github.com/PureLayout/PureLayout) if you want to programmatically do AutoLayout with easy syntax. Can help if you have any questions.
Nice writeup!
Ok thanks! 
You can put it anywhere. Google and other libs suggest appdelegate since it’s the easiest place to register things after signup. Over time as you add more there is no reason why you couldn’t split these into multiple classes.
Just read about it then &gt;_&lt;
100% agree with this. I would have also NOT included the /PODS or .workplace folders, and simply kept the .podfile in the repo. This shows that you would have an understanding of a shared project amongst developers. Networking code is easy to implement, there is no need to relay on a sledgehammer, AlamoFire.
Who's winning? I'm a Kitura guy, should I switch to Vapor? They seem even more professional than IBM.
 let fCount = analysisList.filter { $0.tests.contains { !$0.complete } }.count 
Interestingly, there's [discussion on the Swift forums right now about cleaning this construct up to make it more readible](https://forums.swift.org/t/count-where-on-sequence/11186/35).
Thanks for the feedback guys. I appreciate it. They did say it was ok to use Cocoapods and they mentioned using Alamofire in the phone interview which is why I thought it would be a good idea to use it. I've been developing for almost 5 years and I definitely feel like my coding ability is stagnating, you know? How am I supposed to learn best practices so I can nail these interviews?
It's probably one of the most common extensions. On GitHub, a Swift language search for "func count(where" turns up hundreds of hits.
Here is a great book to start with: https://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/0984782850/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;psc=1&amp;refRID=VYKNSB6ZE37T8GSP8GKY Stay active in the Swift community. Finish the test app, add features, experiment with UI, etc.
You could let your program display a standard text input field and use dictation. On Mac, via Edit &gt; Dictation or On iOS, via the keyboard and the tap the microphone.
Yep, definitely a great addition if it gets approved. I'm a fan of using `.filter.count` until then, just because it's more clear than `.reduce`.
Overall episode 1 is not a bad intro, if a bit reminiscent of r/restofthefuckingowl. There's a couple places in the video, though, where I hear something that seems to come completely out of left field, and appears to have nothing to do with what was said before. "People don't like custom operators. I think the reason is probably because of C++." Haha what? Where did C++ come from? You showed how to 'solve' a simple problem by using 5 extra keywords which are almost never used in Swift, and did it by defining a new syntax which already gave a strange error message when it wasn't perfect, and it doesn't interoperate with editor autocompletion or any of my other tooling. I see lots of potential issues, and none has anything to do with C++. I'm not sure most Swift programmers even know C++. I know a little, but not enough to have an opinion on the design of its custom operators. "In the function version, there’s stuff I can delete from here that leaves a valid Swift program behind. There’s maybe a little bit of a metric we can use to see how reusable something is by how many things can you delete and still get a valid expression out of it." Wha huh? Where did this metric come from? I don't see how being able to delete part of a statement is an indicator of anything at all. I can take a Forth program and delete any word anywhere and the compiler will still work. By this metric, doesn't that make it infinitely more reusable than any functional language? Function composition has uses and benefits, but I don't see how arbitrary deletion is indicative of either.
that's not what I want
&gt; we'll always have to look through where these things are defined. (i.e. do deep dive to see if someone defined their &gt;&gt;&gt; or &lt;&gt; operators in a sane, performant way). Isn't that true of every normal function, too? Custom operators just let you create a funny-looking way to call your func, but they're still just a func. They're not faster/slower, more/less robust, or anything else, except a way to avoid using `()` to call them. Could be worse. You can't tell what `.` means by looking at the usage, at all, because a property can be stored, computed, lazy, observed, etc., so it could be anything from "a single L1 read" to "blocking I/O"!
Never heard of this. Cool stuff!
Thanks, already better!
Great answer!
The function (`zip`)[https://developer.apple.com/documentation/swift/1541125-zip] is great whenever you want to combine two `Sequences` and use their elements in pairs. For example, filling a `Dictionary` from a `Sequence` of keys and a `Sequence` of values: let dict = Dictionary(zip(dictKeys, dictValues), uniquingKeysWith: { (first, _) in first }) 
If you want to submit your app to the app store you need to remove the Simulator part of the universal framework for the submission build... Otherwise it will just get rejected.
Does it have to be on iOS? On macOS there's a simple built in API that does exactly what you want. Look up class `NSSpeechRecognizer`.
Nice, thank you!
At which step this check appears? As for me, uploading a build with a fat framework working good, yet I did not pass further internal test flight for now. Will it be rejected only when publishing to the app store itself (for everyone's access)?
If you go by Github stars, Vapor's killing it 😂 http://serversideswift.racing/#/ It kinda depends on what you like. Kitura and Vapor used to be the closest of any of the server-side Swift frameworks, but since Vapor 3 they've diverged quite a bit. For very new programmers, I probably wouldn't recommend Vapor at this point since it takes a minute to wrap your head around Future/Promises. But if you want something extremely powerful with a huge community, Vapor's the way to go. Join us on Slack at [vapor.team](https://vapor.team)! On the other hand Kitura has a lot of potential, mostly from the people behind it. IBM is a solid, prolific company with decent established cloud tooling. I don't know if it's still the case, but at least around 2016 they seemed to have some sort of relationship with Apple given that they got a shoutout in one of the WWDC talks. Kitura's also got some nice GUI tooling, which Vapor lacks. I think the command line is worth getting comfortable with, but if you're not, you'll like Kitura's tooling a lot more. I'm sure Kitura will switch over to NIO at some point, but it'll be a while. Their async architecture is very different. So I guess try it out and see how you feel :)
Hmmm, I've got a lot of app written in iOS and was using UIKit. Is it a good idea to combine UIKit and Cocoa to get both iOS functionalities and `NSSpeechRecognizer`?
I’m a mobile dev, started with objective-c then migrate to swift...the same for android, started with java and hesitate to switch to kotlin. Now I’m so boring to migrate often for the same task...many developer are confused and ask for witch one to migrate...I think this will kill native development and people would migrate to cross-plateform solution 😡😭
I'd considered this, but it "fixes the issue" by silently ignoring it. That's usually not what I want in a situation like this. I'd say one of the *weaknesses* of my approach is that if the string of letters was missing one, there'd be one button without a title, but at least if there's too many, you'll know the first time you run it. Either way, it's easy to nail down the proper lengths with an assertion.
It looks just like anchors, except it requires a third-party library. It predates Apple's standard layout anchors, so it had good reason to exist back in 2014, but unless you're targeting OS X 10.10 / iOS 8 still, I don't see the point.
Quite curious to learn how all of that will be implemented under the hood.
You can't combine both frameworks as the playground either runs directly on your Mac or inside of the iOS simulator
Yep, that seems like a natural place for it.
True, you might want to validate that the lengths are equal and notify if they aren't. A `precondition` is a good for for that.
Personally moved from Swift to React Native But I will say that I don't really see a good reason for a React Native developer to switch to Swift unless the developers job or client demanded it for a non technical reason. One thing I've noticed moving from swift is that there is a real JS community there that is as diverse as it is confusing, it's even more insane because even though I'm using the react native run time, there are ways to incorporate node modules, although difficult. If you can manage to do that, there is an insane number of packages that can help you (this is the primary reason I moved over, there was more open source support for my field in js than there was in swift) And even if you needed to use the native Apis or wanted to do something in swift/objc that wasn't super easy to do, you still have visibility to the core loader and can add native code as you see fit. I'm not saying React Native is better than native development (I haven't done animations in RN but I'm guessing it's not as easy or fun as it is natively, although I could be wrong), but it really does provide a lot of benefits over purely native development while still providing developers the control of linking native code to the react native codebase. I will say I don't like redux at all
You can upload, but you’ll get an automated rejection after submission to TestFlight. It’ll tell you what frameworks contain the extra architectures.
Just the syntax I'm used to, haven't actually used the anchor way of doing it yet, but it sounds like I should. Thanks for mentioning that.
I think it depends entirely on the app. If you’re writing a game or anything with AR or AI, you’re going native. If you’re writing a mobile client around a web API, you can go React. The single biggest threat would be if Apple changed the AppStore submission process to only allow Swift apps. It’s not likely, but not outside the realm of possibility.
You could switch to using a Mac playground instead of an iOS playground.
Do what works for you. Do you want to convert your code over to Swift? It'd be time intensive, but also a great learning experience. Most modern languages like Swift, C#, Kotlin, etc are a fantastic as long as you write good, maintainable code. I'm kinnnd of in the "JavaScript is a complete shitshow that I never want to touch again" camp, but there are many other people who disagree, and that's a completely valid opinion. Just do what works for you, and keep in mind you can write a completely terrible app in native swift. It's all about how you code it.
So I rewrote the layouts using anchors, and you're right that it's pretty similar to using PureLayout. It's a little more verbose, and I find it kind of strange that accessing the top/bottom anchors is so different than accessing the leading/trailing anchors. I'm sure Apple had their reasons to do it the way they did, but I'd definitely prefer it if there you could access the leading/trailing anchors the same way as top/bottom anchors, but that's only a minor complaint. Since picking up PureLayout, I haven't kept up at all with doing Auto Layout the standard ways, but the anchor way of doing it isn't bad at all, especially compared using NSLayoutConstraints which were so verbose. Looks like I'm only about two years late on the anchors, better late than never I guess.
Aren’t most games and AR done in Unity this days? 
you just killed native english
nah the thing i was looking for was a singleton but ty
If the SQL ORM part is what you're really interested in, you should definitely play around with Vapor's Fluent framework (the Vapor 3 version). It is pretty different from Kitura/Kuery.
Okay cool. Singletons can get tangly but that can be a problem down the track. 
&gt; this comment Thank for reading this article. We appreciate for your good feedback, we will add required notes regarding this issue
They're a bit different IMO. People tend to use things like React Native and Flutter (my personal favorite) for *cross platform development*, which languages like Swift and Java/Kotlin don't really achieve without external help. (In particular, AFAIK no cross-device Swift frameworks let you share UI code yet.) OTOH as others have mentioned, if you want close access to native APIs, you'll pretty much be better off with the native language. (Unless you're a moron like me and try to make your own...)
&gt; ork might This article is about Universal Framework but Apple does not allow build with extra architecture (**i386** and **x86_64**) included. We are adding a note in our article regarding this issue.
You’re right, I’m not fluent...just try to share something...you don’t need to say this
With internal test flight it's working good, that's why I'm asking. So you say it will be rejected when going to the public test flight?
I've only done a few of these, but aren't their ready made controllers for this? It was quite a while back, but even at the start of iOS they has touch controllers for games because the feedback was so important. Anyways, I'd look at getting a time stamp at the start of the gesture then poll (check with a timer or a thread) how long that press has been active. So maybe a pressStarted var that is a time stamp, then an isActive. Check if is active, check the pressStarted compared to current time and set a break point where you change over. Once you start the rapid fire, you'd have the same var rapidStarted, rapidActive and then check it every so often, then have a spin down if you want. The reason for this approach is that you can make a custom spin up / spin down duration. I haven't done any speed tests, but I'd take as much code out of the "firebullet" routine as you can, put those into the class as var. Is there a reason you are setting things like affected by gravity with every bullet? I'd have some kind of very fast loop that looks at the isActive for the different types of shooting. Maybe have a iVar that has bulletFireRate. When the gesture is constant (on) for &gt; X time, increase the bulletFireRate by 10% until it reaches a maxFireRate. Then have a slowdown so that the fireBullet checks the timestamp on the bulletFireRate and drops it ever Y time. So this way it'll increase only while they are holding, then go back to normal once they stop holding. One reason for this is that you might have an upgrade. I played a shooter years ago that you would win upgrades, you'd upgrade the weapon fire rate, so having this tied to that and/or the time the gesture is held helps. Anyways, I'd look for some advanced examples because this is a very important part of the game play. I did the RayW games years ago and they were very good.
Your company has 75 JS devs, can't find native devs, and you've found it more economical to retrain them all? You must have an extremely compelling reason not to use react native. Could you share that with us?
Yes, good point, I’d guess 1/3 are Unity based.
I'm seeing a lot of Swift AR stuff going on. TBH, I haven't dug into Unity in a long time, but I'm seeing Swift AR tutorials all over the place.
What city are you in? I've been following the job market for a long time and didn't know it was that tight. I mainly look at the Silicon Valley (North East / Oakland area). Seems like the demand is pretty high.
In the function you’re creating a new tableView variable in the local scope but not assigning it to anything (it is nil). Don’t do that, just delete that line and your function will use the UITableViewController’s tableView as intended.
I’m working on a similar project, and been doing this recently. On touch press I’m sending a message to the Notification Center, which the Player System listens to. It causes the weapon system to start shooting, and on touch release it stops. [Check out my GitHub if you want.](https://github.com/bredlej/Tleilax/blob/master/Tleilax/systems/player/PlayerSystem.swift) 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [bredlej/Tleilax/.../**PlayerSystem.swift** (master → 8358986)](https://github.com/bredlej/Tleilax/blob/835898655b684fa6ce01dd16b0032348a86e8796/Tleilax/systems/player/PlayerSystem.swift) ---- 
Yeah, Kuery completely sucks. That’s where Java gets you, really...
I got quite into React Native and even started using at the previous company I worked at, however, I switched back to Swift and true native development. Mainly due to dislike of javascript and how you needed to install hundreds of dependencies to do anything. The general disregard of the Native feel of apps by the React community, for example if you look at the Navigation components that React Native reccomend, they are all JS based solutions which try to and fail to mimmick UINavigationController. React Native has a bunch of advantages but its still nothing close to the feel of a true Native app
Totally agree with your point about navigation. That’s left a bad taste if I’m honest and considering it’s such an important part of any mobile app it’s not in a great state. Both platforms handle navigation differently too so there’s a trade off to be made when trying to abstract them into a single library. 
To be clear, we have hired a handful of native devs but it often takes us 2-3 months to fill one position and our need for native devs is at a point where this just isn’t going to work. We also have to compete against a lot of other local tech companies. I’d rather not say the company I work for but I’ll mention that I am not in the Bay Area but in a city with a lot of tech companies. We have several existing large apps that we work on, mostly in Swift and Java. When we looked at RN we found that if we were starting from scratch or for prototyping, RN would probably be a viable option. And there are some things we really liked about it like not having to build to see your changes and test. But integrating it into our existing projects was too cumbersome and we kept running into problems. Also, RN is absolutely NOT write once run everywhere that people often claim. With RN we could get maybe 80-90% cross-platform-usable code without having to dig into native code. Certainly a huge gain but when we explain to execs that it doesn’t just work on both platforms they give that confused dog look since this doesn’t line up with what our FB and Google reps have told them. And in both cases you’re going to have to spend some time in native code so either you’re going to have to know it or we’re going to still have to maintain a native team just to support the RN devs. If we were building simple apps like you usually see in online demos and tutorials then the percentage we’d have to delve into the native code would be much smaller. We also run a lot of custom frameworks and patterns (RXSwift for example) that I don’t know how would fit in to RN, if there is an analog, or if it’s just not possible/necessary. Another thing we struggled with but it could be because of our limited RN knowledge was animations and transitions that we use. We could just never get these to look right. Close, but not to design spec the way we can natively. One last thing is that when we did a side-by-side comparison of dev time to complete certain complex features we found that we could do it natively often in half the time... but we’d have to then build it for the other platform. This was our native devs vs devs internally who have worked in RN previously. Maybe not the most scientific test but we wanted to see the difference. So I’m not sure that we’d save a lot in terms of initial development costs using RN. I think the real savings for us with RN might come in having to only maintain one codebase after the fact. So since we’re not going to start building our apps from scratch, and since JS Web devs are a lot less expensive (no offense to any in the house) we are starting a program internally so that anyone on other teams who want to contribute to our codebase but who don’t know Swift/Java/Kotlin we will train you and give you the necessary tools. So far the interest has been great. Not all 75 but maybe half have attended at least one session. I’ll also add that we aren’t opposed to RN itself. Some of us have side projects where we’re experimenting with it. I think most of us prefer native code but if RN or Xamarin or vue.js or whatever is next is the new standard then we’ll move to it if it makes sense. I think for our company we will continue to write in native code for all customer-facing apps, even new apps. But for internal apps we will build them in RN. Maybe someday that will flip the other way around. 
The guard is checking to see if contact is nil. If it is, the function returns immediately and doesn't run anything below the return. 
If the guard statement fails, the function will stop here (= return). Otherwise it will continue with the following statements.
Thanks.
This page gives some additional good examples and outputs showing how guard return works in functions: https://iosref.com/swift-control-flow/#guard
Haha I had some uimageviews in a 2d array, yeh having addsubview before setting the constraints fixes it. Though I find the logic bit odd
Yes UISplitViewController gets you two columns. As of iOS 10 mail.app and notes.app can have three columns if you tap the button in the top left while in landscape.
Ok the image didn't work. But here is the text: The code below should look similar to code you wrote in the Fitness Decisions exercise. The if-else statement is actually unnecessary, and instead you can print either one statement or the other all on one line using the ternary operator. Go ahead and refactor the code below to do just that. let stepGoal = 10000 let steps = 3948 if steps &lt; stepGoal / 2 { print("Almost halfway!") } else { print("Over halfway!")
You don’t need the initial “steps =“ otherwise you solution is correct although you have flipped the if else. This would make the solution: steps &lt; stepGoal / 2 ? Print(“Almost halfway!”) : print (“Over halfway!”)
&gt; As of iOS 10 mail.app and notes.app can have three columns if you tap the button in the top left while in landscape. On the 12.9" iPad Pro. Maybe on the smaller iPad Pro as well. 
Read up on guard statements because it will both answer this question and open up a lot more knowledge to you that will help it click in your mind.
Alternatively you could do let printString = steps &lt; stepGoal / 2 ? “Almost halfway!” : “Over halfway!” print(printString)
You're doing the same thing if the test passes or fails. The only thing the `if` statement is really doing is changing the content of the string. So you want to: * Set up steps and stepGoal * Print -- And while printing decide which of the two Strings to use So the code would look like: let stepGoal = 10_000; let steps = 3_947 print( steps &gt; (stepGoal / 2) ? "Over halfway" : "Almost there" ) The ternary operator is good for really short bits of code, where the result is easily visible on both sides, and writing it in the longer `if-else` style would make the code harder to read.
I don't see it on the 10.5". Looks like there are some 3rd party ones: https://github.com/TimOliver/TOSplitViewController
True, the other way is more concise. But op seemed confused about ternary and I wanted to show another way to use it. 
Think of guard as a sort of enhanced `if`. It enforces that something is in an expected state, if not, it forces exiting. In this case, it's creating a non optional shadow local of `self`'s `contact`. I don't particularly care for shadowing things like this, I would likely have written it thus: guard let contactActual = contact else. { print("contact is nil, aborting configure") return } ... and then used `contactActual` in the rest of the function in place of `contact` the code inside the `{ }` is not a closure, it's just a scope, so the `return` applies to the function itself. I hope this helps!
Seems you are correct.
Thank you! It's nice to hear comments like that every once in a while. :)
Just a note: Don't post an image of code, you're better off posting the actual code. That way people can copy it into a playground, try it out, modify it, and see what's going on.
I'd highly recommend not using a singleton here — they're occasionally useful, but this does not seem like the right situation for one. In general, global state (which singletons create) is a bad thing because then _any_ class can modify that state and this can cause unexpected behavior. On top of that, if you ever decide you want to change the singleton, it can be a lot of work if you have lots of classes that depend on it.
Can’t I override private init to protect it ?
Yes, you can do that, but you're putting the User into a singleton so you can access it from another view controller, right? What happens when a bunch of other classes need that User and then you need to change the User class? It gets really hard to untangle the mess of dependencies on singletons.
In the Singleton class I put this in along with the properties: static let user = User() private override init () {} In one view controller I do: let sharedUser = User.user And in another view controller I do: let sharedUser=User.user Then I can change any of the properties from any view controller as long as I declare let _ = User.user Not sure if this is efficient or will potentially cause problems for my app later down the line but I’m a trial and error type of guy. Since this suffices my needs for now I will worry about the any problems that I run into later aka it’s a future me problem lol 
It'll work for now -- if you want to know what problems you may run into with singletons, this Stack Overflow Q&amp;A is pretty good: https://stackoverflow.com/q/137975/2030
Alright thanks appreciate it !
you don't necessarily need to add the subview before creating the constraints, but you need to do so before activating them (otherwise the layout engine has no common frame of reference)
Look into URLSession and Codable to serialise the JSON response into model objects. This is assuming you have access to Foundation and you’re building an app. But this is simple networking so there are plenty of resources online.
thanks it worked!
Maybe something to do with Facebook changing their API’s after the Cambridge Analytica leaks?
1. Make sure you opened the .xcworkspace, not the .xcodeproj 2. Build it again with command+b
[@codevapor's latest tweet](https://i.imgur.com/vh3zlOu.jpg) [@codevapor on Twitter](https://twitter.com/codevapor) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
I am iOS developer and recently I started learning RN and I must admit that its pretty cool and powerful but this JS is just too much for me after using swift for almost 2y :/ Thats why I am realy interested in flutter cuz its seems to be better than RN but...well its still on alpha :/
Yea cleaning and building was my first natural troubleshoot but it didn’t work but randomly it started working again ... I’m so confused 
That's the nature of Xcode and Cocoapods. It's best to not think too much about it.
just had a go and can't get it to work still :(
https://gyazo.com/ab37a51ff7f3185498923935ea2d0374
Hi, I'm a bot that links Gyazo images directly to save bandwidth. Direct link: https://i.gyazo.com/ab37a51ff7f3185498923935ea2d0374.png Imgur mirror: https://i.imgur.com/w6KniM2.png ^^[Sourcev2](https://github.com/Ptomerty/GyazoBot) ^^| ^^[Why?](https://github.com/Ptomerty/GyazoBot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/u/derpherp128) ^^| ^^[leavemealone](https://np.reddit.com/message/compose/?to=Gyazo_Bot&amp;subject=ignoreme&amp;message=ignoreme)
You can look at the state of the gesture. Such as if longPressGesture.state == UIGestureRecognizerState.began{ } as well as .ended or .changed So I'd probably have in my uiview init let longPressGesture = UILongPressGestureRecognizer(target: self, action: #selector(handleLongPress(longPressGesture:))) self.addGestureRecognizer(longPressGesture) @objc func handleLongPress(longPressGesture: UILongPressGestureRecognizer){ if longPressGesture.state == UIGestureRecognizerState.began { //start the pewpew } if longPressGesture.state == UIGestureRecognizerState.ended{ //stop the pewpew } 
Post text, not images.
Protip: Paper prototyping and sharing some sort of blueprint will help
Is it that you don’t like Javascript as a language or are you finding it difficult to learn?
I will recommend these two steps 1. command + shift + K (that will make big cleanup ) 2. command + shift + B (that will make a big build that will actually rebuild connection to facebook) Helped me all the time when I work with external libraries
RemindMe! 10 hours
More along the lines of visibly being pressed in and when let go it bounces back to original size. This effect is actually very subtle but pleasing to interact with using touch, especially (like OP mentions) when paired with haptic feedback. Wouldn’t call it useless, the button animates to show a registered press and can be dismissed if not intended. 
Did you try using sudo apt install swift?
&gt; The reason I don't want to create an instance is because I don't need to reuse the model object. What does this mean, exactly?
Did you happen to get an error like this?: /usr/bin/swift-package: error while loading shared libraries: libicuuc.so.55: cannot open shared object file: No such file or directory
Awesome, thanks! `typealias` is exactly what I was looking for.
no, when I run 'swift package' the error : 'krircc@debian:~$ swift package error: unable to invoke subcommand: /home/krircc/soft/build/Ninja-RelWithDebInfoAssert/swift-linux-x86_64/bin/swift-package (No such file or directory)' 
'sudo apt install swift' can't install swift, it install a [python package](sudo apt install swift)
I using debian testing, maybe this is reason, does you do that contain the 'swift package'' command ? yes , I want to try Vapor(3.0 base on swift-nio).
You want to use [components(separatedBy:)](https://developer.apple.com/documentation/foundation/nsstring/1413214-components) to separate the string into a bunch of substrings. You can then [map](https://developer.apple.com/documentation/swift/array/2907114-map) over the array to get a bunch of URLs. As for opening a web page, [open(_:options:completionHandler:)](https://developer.apple.com/documentation/uikit/uiapplication/1648685-open) is the easiest option.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://developer.apple.com/documentation/swift/array/2907114-map) - Previous text "map" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20dw8yzat) 
Check out [NSDataDetector](https://developer.apple.com/documentation/foundation/nsdatadetector)
I download the last Swift 4.1 Development Snapshots, it has the 'swift package ’ Swift 4.1 Development Snapshots works well current.
I download the last Swift 4.1 Development Snapshots, it has the 'swift package ’ Swift 4.1 Development Snapshots works well current.
What you're after is NSURLRequest, you want to create one of these and set the httpBody Data field to the Data representation of your dictionary. You will also need to specify a Content-Type header to application/json. https://developer.apple.com/documentation/foundation/nsurlrequest
Bouncy isn't bad. Think about the bounce at the lower end of a list in table view. It tells you that you're at the end of the list and you can see that without any other visual indicators.
https://developer.apple.com/documentation/uikit/uidatepicker - Responding to User Interaction section or through UIPickerViewDelegate method - didSelectRow
I imagine going from static types to a dynamic typed language is weird. I couldn’t understand types when I first started programming (C++) but now I cant imagine using vanilla JavaScript for anything semi-serious without some form of types
Does your protocol have a set of defined keys and value types or is it literally a bag of primitives? It seems like just aliasing the mess away is simply hiding the problem.
Just to expand on this, here's how you use `NSDataDetector`: import Foundation let urls = """ http://www.example1.com http://www.example2.com http://www.example3.com http://www.example4.com http://www.example5.com http://www.example6.com http://www.example7.com http://www.example8.com http://www.example9.com http://www.example10.com """ // Set up the detector. if let detector = try? NSDataDetector(types: NSTextCheckingAllSystemTypes) { // get all matches. let matches = detector.matches(in: urls, range: NSRange(location: 0, length: urls.count)) // Go through all that are a URL. for match in matches where match.resultType == .link { // Convert to a URL. if let url = match.url { // Use the URL. print(url) } } } // Results: // http://www.example1.com // http://www.example2.com // http://www.example3.com // http://www.example4.com // http://www.example5.com // http://www.example6.com // http://www.example7.com // http://www.example8.com // http://www.example9.com // http://www.example10.com 
Just an aside, rather than doing all the heavy lifting yourself there are some excellent libraries out there that make this incredibly simple. Take a look at this StackOverflow answer for more information: [What is the best practice to parse html in swift?](https://stackoverflow.com/questions/31080818/what-is-the-best-practice-to-parse-html-in-swift)
+1 for AudioKit! This library is amazing. They even provide a bunch of playgrounds for you to mess around with. 
I always forget about `if case let`. I think I have some refactoring to do...
There weren’t many changes at all in SpriteKit
i think you are looking for something like this : var exA = Date() @IBAction func clock (_ sender: UIDatePicker) { exA = sender.date viewDidLoad() } override func viewDidLoad() { super.viewDidLoad() let abcd = Calendar.current.dateComponents([.hour,.minute], from: exA) print(abcd) let hour = abcd.hour print(hour!)
There's a course in the Hacking with Swift book that does a good job of talking about Collection Views. Maybe read through that to help give you a good platform of working with Collection Views.
A seamless "ducking"? I don't know what you are trying to say.
https://developer.apple.com/documentation/avfoundation/avaudiosessioncategoryoptions/1616618-duckothers An example of ducking is when you're using maps while driving and listening to music, and the music is lowered for turn-by-turn and then resumed afterward.
I’m working on my first ARKit project 🤓
This is awesome. Thank you so much! How would I go about storing each url into a variable with an index so that I can access the URLs by an index? 
That link is great. I actually used SwiftSoup to parse the HTML file from the website. I found it when I was researching website parsers.
You don't need to reference self via weak reference, since UIView animations don't create retain cycles.
Ducking is when you quiet background audio while your app’s audio plays
They're in an `Array` already, the index is just the position in the `Array`. let first = urls[0]
If you're already using SwiftSoup then why do you need to parse a block of text? You should be able to pull out all the URLs directly into an `Array`.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [uploading a file picked with documentpicker](https://www.reddit.com/r/iOSProgramming/comments/872vmm/uploading_a_file_picked_with_documentpicker/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I did that, but I guess I was having a hard time storing it into a variable, so I thought there might be an easier way. I have: let els: Elements = try SwiftSoup.parse(string).select("a.news-article__figure-link") for link: Element in els.array(){ let linkHref: String = try link.attr("href") and print (linkHref) will return all of the links in a single variable, but I need them as an array. But, I still don't know how to access each link individually as an index of something like: print (urlFromUpdate[1]) // www.example1.com print (urlFromUpdate[2]) // www.example2.com print (urlFromUpdate[3]) // www.example3.com ... print (urlFromUpdate[10]) // www.example10.com Sorry if this is really simple. I'm trying to teach myself this language haha, so I might be lacking in some areas. Thanks again for all the insight. 
Once again, thank you so much. This is exactly what I needed. You made my life 100x easier. I really appreciate the time you spent on helping me. 
Glad to help.
I would create a dictionary of the strings to their count then just get the top values. 
I already create dictionary, but I don't know how to do that what you saying, can you write an example to take just for getting top values?
This is my code; let a = art.replacingOccurrences(of: "&lt;[^&gt;]+&gt;", with: "", options: String.CompareOptions.regularExpression, range: nil) var aArray = a.components(separatedBy: " ") var countDict = [String: Int]() for name in aArray { if let count = countDict[name] { countDict[name] = count + 1 } else { countDict[name] = 1 } } self.mostUsedWords = [] let highNumber = countDict.values.max() for (word, count) in countDict { if countDict[word]! == highNumber! { print(word) self.mostUsedWords.append(word) } }
 let text = """ Facebook’s executives have spent much of the past week dealing with the fallout of reports claiming millions of its users had their data harvested from a quiz app without their consent. CEO and Founder Mark Zuckerberg issued a long non-apology on Facebook, and appeared on cable news to explain how the company was responding to what he called “a breach of trust between Facebook and the people who share their data with us and expect us to protect it. """ import Foundation let words = text.split(separator: " ") let wordSet = NSCountedSet(array: words) let sorted = wordSet.sorted { wordSet.count(for: $0) &gt; wordSet.count(for: $1) } print(sorted.prefix(5)) 
Beautiful, but UIView animations are “soft-deprecated” and you should be using UIViewPropertyAnmiator instead. The API is fairly similar and you should be able to replace easily.
The easiest way is probably to just sort the dictionary, even though that is not necessarily the most efficient. 
Whoa! is that easy? Thank you for help
You can't sort a `Dictionary` - the elements are in their own, internal order. You'd have to use a container that supports ordered elements, like an `Array`.
Yep, `NSCountedSet` is the key. You could roll your own version of it but why not use the one that comes for free?
Yeah you are right and actually I didn't know it.
Most of programming is just knowing that a bit of code already exists, right? That just comes with experience and looking through the libraries. There's tons of stuff hidden in Foundation, I learn new things all the time.
Sorry, I need to be more verbose, you’ll be left with an array of the words in order. https://developer.apple.com/documentation/swift/dictionary/2298238-sorted
When I get clear from this projects that I have, I will dig Foundation. And actually I need to learn this high order functions. still doing stuff with old ways
I actually used a property animator in my newest post on the blog, super useful!
Just for fun here's a quick and dirty implementation of a counted set: struct CountedSet&lt;Key: Hashable&gt; { var values: [Key:Int] = [:] init(array: [Key]) { array.forEach { guard let count = values[$0] else { values[$0] = 1; return} values[$0] = count + 1 } } } let swiftSet = CountedSet(array: words) print(swiftSet.values.sorted { $0.value &gt; $1.value }.prefix(5)) // [(key: "the", value: 4), (key: "of", value: 4), (key: "and", value: 4), (key: "to", value: 3), (key: "their", value: 3)] 
What you could do is embed that for loop looking through your dictionary inside a while loop and index down your high number after each pass until you have your desired number of words identified. If you have 5 counted for your max then you would check the same thing for instances of 4 the next time through. I can write out the actual code for this if you want.
Thanks for the explaining :)
It's pretty flexible, so it's just primitives, but in the form: [ "identifier id/username/etc.": [ "metas": [ // Array of K/V pairs you can attach to the presence tracking, only default is a refernce used internally called "phx_ref", but I use this to store stuff like "online_since"/"device_type (user could be on web and mobilel)" ] ] ] so it ends up looking a bit like `["joe_blow": ["metas": [["phxRef": "abc123"], ["timestamp": 1522022001], ["imageURL": "http://www.photo.com"]]]]`
There's little chance anyone would be able to help you on this because you don't have any code or defined a problem. I guess you have a ~250ms break and this is what, not long enough, too long, not supposed to happen at all? Without code and a clear statement of the problem, I wouldn't expect much help. Anyways, have you looked at threading, I can't tell by the code posted if this is on the main thread or not.
The location simulator only works with your own apps running on the Simulator, so I believe you might be out of luck. See if the little hack described in this blog post still works: https://7labs.io/mobile/iphone/change-gps-location.html
This may be an idiotic answer but have you made your class public. In swift playgrounds all classes are private for default
Yep, all classes are public.
Saw this when I was researching, no longer works with iOS 11 unfortunately 
Is the bot only against Udemy? Because that would make it's name feel really misleading, if it's that targeted.
I’m assuming you’re in theta tau? 😂
It sounds like you are trying to render a 2d hand. I think you should look into sprite kit and core graphics.
You can access bluetooth devices via corebluetooth (https://developer.apple.com/documentation/corebluetooth). Though you have to implement the communication protocol yourself. Via Lightningport you can work similarly. The last time I worked on accessing hardware via Lightning port we did it with C.
Random fact you might not know: you can replace your `init` with: init(array: [Key]) { values = Dictionary(array.map { ($0, 1) }, uniquingKeysWith: +) }
Another "Swifty" version (first few lines like /u/thisischemistry's), without `NSCountedSet`: let text = """ Facebook’s executives have spent much of the past week dealing with the fallout of reports claiming millions of its users had their data harvested from a quiz app without their consent. CEO and Founder Mark Zuckerberg issued a long non-apology on Facebook, and appeared on cable news to explain how the company was responding to what he called “a breach of trust between Facebook and the people who share their data with us and expect us to protect it. """ let words = text.split(separator: " ") let countByWord = Dictionary(words.map { (word: $0, initialCount: 1) }, uniquingKeysWith: +) let sorted = countByWord.sorted(by: { $0.value &gt; $1.value }) let topFive = sorted.prefix(5) print(topFive) //[(key: "the", value: 4), (key: "of", value: 4), (key: "and", value: 4), (key: "to", value: 3), (key: "their", value: 3)] 
Nice use of `uniquingKeysWith`. I like it.
Yep, it's a great use of that. I knew about `uniquingKeysWith` but hadn't thought about it in this context.
I'd just define it as a computed property or a method on the innerStruct ``` var innerValue: get { switch self.field { // etc } } switch ome { case .someValue: // stuff case .innerStruct(let s): return s.innerValue } ```
I could guess the cause of this from the title. 100% of the time someone posts about this problem, it turns out to use CocoaPods.
 switch ome { case .someValue: print("some") case .innerStruct(let foo) where foo.field == .a: print("a") case .innerStruct(let foo) where foo.field == .b: print("b") default: print("default") } 
Thanks for the idea, but I'm not sure I can use that for my specific case. I rather my data type be "dumb" and allow the calling code points to deal with different values.
Yeah, fair enough on the `is` point. That was just because of my contrived example. But thank you- I'm going to try this out.
How is a switch anymore diseased than an `if` statement? Or are `if`s diseased, too? That's a really hardcore OOP philosophy, IIRC. I do agree with most of your rules, though. I actually greatly prefer the way Rust does switch/match, where it's an expression rather than a statement. That makes a lot of things less ugly. You can use matches like a fancier `?` (ternary) operator.
I know guys that say that, I also have rules for ‘if’ statements that also get me down voted (current vote of 0. :). I don’t go that far. But I say an if should have a single check expression. If you go past two, move to a function. Thing is, the swift enum type is really cool, which is why I do have a few switch statements in my code. Switch statements take up a LOT of vertical space, and they do not conform consistently with the other control statements in any C language (they explicitly use Goto labels, where if does not).
A switch may be fine, but if the logic starts getting ugly you can look into the OptionSet type, or using a state machine
Hi antonleviathan! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/87aier/my_first_ios_app_video_app_for_qi_gong/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Any branch statement is a glorified goto, that's the whole point of them. Unless they are inlined, function definitions are glorified goto statements. Closures are glorified goto statements. Pretty much anything that isn't a linear block of code contains some sort of "go to" in order to execute code. A switch is a much more elegant branch than a bunch of nested `if` statements. Yes, it can be abused but it can also organize and highlight the branches so that you can clearly see what's going on. Your rules have some interesting ideas in them but they can also serve to further obfuscate the code. Why wrap a switch up in a function if its only point of use is in that one location? The switch itself mirrors a function closely, you have an entry point, you have a block of code, you have defined exits. Why move it if you don't have to? In Swift the `break` is implicit, if you do nothing the `case` will drop out of the `switch` code block. This is a good design principle, each `case`, by default, does its thing and there's little interaction between them all. So why is `break` verboten? Surely, if you need to do further processing after the `switch` you shouldn't automatically `return`? Just continue your code and use the results of the `switch` Yes, keeping the `switch` and each `case` concise is a good thing. Just like you should do with nearly any piece of code. Try to keep the [separation between intention and implementation](https://martinfowler.com/bliki/FunctionLength.html) to a minimum. There's no hard-and-fast on size, a few lines or a few dozen lines can work as long as the intention of the code is pretty obvious and easy to grasp. 
Indeed. Swift and Rust both get major kudos here.
[removed]
Definitely also worth a mention -&gt; [Vapor](http://vapor.codes/) They just fully adopted the [Swift NIO](https://github.com/apple/swift-nio) framework. see [here](https://twitter.com/codevapor/status/976615922558558209)
hahahaha triangle 😂😂 But no phi delt
Actually it looks like when location is simulated using the debugger it affects all of iOS. My location will appear changed in maps, find my friends, snapchat, ect.
Yes. Just [follow their algorithm](https://tools.ietf.org/html/rfc4122.html#section-4.3).
Yeah I know I could do it from scratch but I was wondering if there was an easier way using built in functions.
I can appreciate the cut of your jib
Great to know. I honestly thought it would get sandboxed to your own app.
You said that you don't need to check for None in Python and then did it anyway. The correct Python way would be: favSport = person.getFavoriteSport() if favSport != "chess": print(".....") 
&gt; In any other language I can think of, you would simply do the comparison directly You contradicted yourself with the code you wrote. You checked to make sure that favSport was not None ("if favSport"), just like you had to do in Java.
&gt; At the moment, the best distribution for Swift is Ubuntu 6.04 Bit of a typo there, I hope..
Depending on what they need to do I write them like this: let valueIWant: Int switch thing { case 1: valueIWant = 3 /* etc etc */ } Or with return statements if they're inside a function, function calls when you're proxying out messages etc etc etc. Only F# and Elixir switches are more cool than Swift's. But not fit for big blocks of code. If you write more than three lines inside a case block you're probably doing something wrong.
Guilty re: Optional(...) strings. Oops!
Yeah, and stays that way until you reboot your phone.
I prefer Kotlin's handling of optionals. It's more natural, and fits with how people have always written code, yet it still provides the safety of optionals. For those that don't know how it works in Kotlin: You don't need to unwrap optionals into a new var, you just need to nil test them. Once you've nil tested the optional, it's implicitly upgraded to non optional. You can also still use the ? operator, same as you would in Swift. 
nvm i figured it out lol
Hopefully Swift will be picked up in more domains than just back-end development. Apple could be doing more to promote the good parts of swift to the science and engineering communities for example. In some ways I can see Swift replacing Python in many areas where Python is strong.
Can someone fill me in on why Swift is ideal for backend web development? Not bashing it, just curious as to why this is preferred.
Vapor is first class. Version 3’s use of Futures makes vapor blazing fast. 🕺🏻
Because existing Swift developers don’t need to learn a new language to write a backend API. No node, js, ruby, etc- Just your Swift app, talking to your Swift backend.
Ah, that's fair.
That’s nice but I prefer Swift’s `guard` for avoiding pyramids of conditionals. Say you needed two properties unwrapped - you’d have to nest two levels deep. In Swift you can do ```guard let favSport = favSport else { return } guard let favTeam = favTeam else { return } doSomethingWith(favSport, favTeam)```
That's why we have "and" operators...
What stops me from making favSport null after doing the check?
Yeah. It certainly is prettier. Personally, I'd like to see swift inherit some ideas from Rust and Haskell.
Thank you, I will try the Master-Detail
Connect the start button and the easy medium and hard buttons too as outlets.. Set easy,medium and hard isHidden = true in viewDidLoad. On click action of start button set startButton.isHidden = true and others the isHidden property set false.
How does pattern matching on enums work with Kotlin? Swift’s `if let`, `guard let`, and friends is really just syntactic sugar for pattern matching an Optional. E.g. enum Result&lt;T, E: Error&gt; { case success(T) case failure(E) } typealias PiResult = Result&lt;Double, Error&gt; let foo: PiResult = .success(3.14) if case let .success(value) = foo { print(value) } You can very easily make custom operators, functions, data structures, etc. backed by enums. What would that look like in Kotlin? Really curious 
Vapor all day 👌
they still need to learn css,sql and html :)
Not to write the API. If you want a front end, then yes. ;)
No, I don't see any contradiction here. The article claimed: &gt; A Java programmer has to protect the equals comparison from getting a null pointer exception by checking for null first. You don't have to protect the comparison in Python, because `favSport != "chess"` is perfectly safe even if it's None. In fact, `if favSport` *doesn't* protect the comparison. It just checks for another possible value. You could switch the order of the clauses -- `if favSport != "chess" and favSport` -- and it would still work equally well. That's not the case in Java. If you switched the order of the clauses, it could raise a NPE at runtime. That's the danger of Java's null with respect to equality tests. 
There's a pretty big difference between "ideal" and "easier for people who only know that one programming language". There's 100 things you need to know for backend web development. Programming language syntax is just one, and not even the biggest one. As anyone can tell from glancing at r/swift on a day ending in Y, just because someone knows Swift doesn't mean they know the first thing about *using* an API, much less designing or implementing one. This is like opening an English language sumo school in Tokyo, on the basis that it makes it easier for New Yorkers to become sumo wrestlers. Technically that is true, but it doesn't mean you're going to see competitive sumo in Manhattan any time in the next century. There's too many other issues. Language is one, but realistically, it's not what's holding anyone back.
Have you had any experience with uiTests and uiTests? I am trying to test the complete UI but for a small part is manual input is required. I found how I could set those values in the setup() method but I get a lot of missing ... errors + it can't load the bundle anymore.. 
So what I'm hearing is that this is aimed at the subset of developers who: 1. know Swift 2. don't know any other programming languages (including SQL, which makes me wonder what this API is going to do) 3. know web API design (despite not having any prior experience in it, as per part 2) 4. can't be bothered to learn even a simple second programming language 5. yet is not bothered by the lack of help they'll get searching online for a brand new web framework, on a not-quite-fully-supported platform This seems like an audience which doesn't really need a new web framework -- much less several of them.
For anyone else wondering, I just figured it out. Kotlin has C-like enums, which are just plain old enums with no associated values. However, it does have sealed classes -- and those are really similar to Swift's enums. They can have what we call "associated values" and those associated values can be of any type, including lambdas. Here are some trivial and contrived examples: Kotlin: sealed class Operation { class Add(val value: Int) : Operation() class Substract(val value: Int) : Operation() class Multiply(val value: Int) : Operation() class Divide(val value: Int) : Operation() } fun execute(x: Int, op: Operation) = when (op) { is Operation.Add -&gt; x + op.value is Operation.Substract -&gt; x - op.value is Operation.Multiply -&gt; x * op.value is Operation.Divide -&gt; x / op.value } // returns 20 as expected val foo = execute(x = 5, op = Operation.Multiply(value = 4)) Swift: enum Operation { case add(Int) case subtract(Int) case multiply(Int) case divide(Int) } func execute(operation: Operation, on value: Int) -&gt; Int { switch operation { case .add(let operand): return value + operand case .subtract(let operand): return value - operand case .multiply(let operand): return value * operand case .divide(let operand): return value / operand } } // returns 20 as well let foo = execute(operation: .multiply(4), on: 5)
this. vapor is clearly the front runner at the moment for swift backend. Not sure why this post specifically mentioned Kitura.
Quick example, hopefully it helps. Create a new UIViewController for the second screen and present it like this: `self.present(yourViewControllerHere, animated: true, completion: nil)` Note: you won't be able to navigate back to the first UIViewController at this point. You will need to either use a UINavigationController or add a back button to dismiss the new view controller. Code to dismiss: `self.dismiss(animated: true, completion: nil)` 
`1` ➝ `$1` ?
To be honest, I don't know. I've only spent a single day with Kotlin so far. I have just never liked the extra verbosity of Swift's optional unwrapping, and was pleased to see that Kotlin is providing the same safety but without extra verbosity.
Chris Lattner was on ATP a while back and talked about how his plan for Swift world domination was to adapt Swift to more and more use-cases step by step. Obviously Apple platform apps were the first, server side is the second, which is what is currently being focused on. The next might be embedded/systems programming or science stuff, who knows. Also we’ll be getting great Python (and other dynamic language) interop soon-ish, which might help.
There’s some people currently working on bringing an opt-in ownership model similar to Rust’s to Swift. The generics system is also continually improving. forums.swift.org is where all of this happens btw, lots of fun discussions to follow.
You can still assign the optional's unwrapped value to a non optional var in Kotlin. So you can use that pattern too, if you like. The implicit unwrapping on null check is just syntactical sugar that allows you the choice of avoiding an unnecessary new var assign in cases where Swift would always require you to do a new var assign. 
Kitura has IBMs backing which is huge for anyone looking to choose a long-term tech stack.
Meh, once you understand the basic API’s and use best practices, there isn’t much of a difference. It’s like the whole tabs vs spaces, vim vs emacs, or iOS vs Android thing. Except spaces, vim, and iOS are clearly superior. Try out both approaches and see which one suits you better. 
Thank you. That was helpful
It's not about trying, it's about focus. Currently, the Linux ci build is mostly failing. The clean-workspace-Linux build status is "broken for a long time". The documentation for Linux is practically nonexistent. There's no Linux roadmap or getting started guide on Linux. Having a dedicated WG, mailing list and some getting started documentation would go a long way towards building momentum for server-side Linux. It's extremely frustrating to spend hours attempting to fix build, core library and repl issues without having a community to bounce ideas off of and to verify if the approach is philosophically aligned with the Swift in Linux direction. Unfortunately, most swift on Linux resources seem to be focused on the layer above the language, with an emphasis along the lines of "go grab a docker image or prebuilt blob and only run on specific versions of Ubuntu". A set of swift on Linux community resources (WG, mailing list, getting started and contributing guide for example) would go a long way. Looking at Go and Rust communities on Linux would provide good models for successful Linux support. Swift is a great language and can be awesome on Linux. There are folks eager to assist, we just need to find the right venue. 
I was also interested. Seems like Apple cheated and didn’t give us access to whatever they did with the iPad Pro. It’s possible it’s just 2 split views embedded in each other. 
That was my first thought and it appears to work on the iPad at first glance but in portrait or on iPhone it errors with an error about a split view controller being in a nav controller. Apparently the split view controller must be the root.
That was my first thought and it appears to work on the iPad at first glance but in portrait or on iPhone it errors with an error about a split view controller being in a nav controller. Apparently the split view controller must be the root.
Yep. They “cheated” by doing this on a specific device while telling us to only look at size classes. 
For the double spaces you could simply do: let words = text.split(separator: " ", omittingEmptySubsequences: true) With other whitespace you could either create a `Set` of characters to test against or use a `CharacterSet` as your source. With `CharacterSet` you have to test against `UnicodeScalar` values so you have to convert to and from that view of the `String`: let words = text .unicodeScalars .split(omittingEmptySubsequences: false, whereSeparator: { CharacterSet.whitespacesAndNewlines.contains($0) }) .map { String($0) } 
Rust's `match` statements are also cooler than Swift's. They're almost the same, except they are expressions instead of statements, which makes them cooler (like Elixir, IIRC).
From your picture, it doesn’t appear that your app is running. You need to make sure and run your App (click the play button in the upper left of Xcode or press Cmd + R). Once the project has built and is running, your specified output will display to the console.
Sure let value = 10 switch value { case 10: print("Hi!") default: print("Bye.") } 
Please post the text of the code and not an image.
I've done some UI testing with XCUITest, but I've found it to be much less stable than XCTest. Often tests that used to pass would start failing because the test tried to do a button tap before the simulator had the screen loaded -- and other things like that. That said, I did work on a project where we had a QA person 100% dedicated to writing automated UI tests with XCUITest, and he did a great job working around the problems and relieving all of us of some of the manual testing. But if you can't dedicate a bunch of time to that, you might try [testing your view controllers -- including button taps -- with XCTest](https://roadfiresoftware.com/2018/03/how-to-unit-test-button-taps-on-a-view-controller-with-xctest/).
import UIKit class ViewController: UIViewController { var pictures = [String]() override func viewDidLoad() { super.viewDidLoad() let fm = FileManager.default let path = Bundle.main.resourcePath! let items = try! fm.contentsOfDirectory(atPath: path) for item in items { if item.hasPrefix("nssl") { pictures.append(item) } } print(pictures) print("hello") } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() } }
https://imgur.com/a/Rredo When I click play/Cmd+R, this is what I get
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/Ef3WfqX.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwd1suu) 
Thanks for the response. I made a new project and copied over the files and code. Same thing happens, nothing in the console still.
Yep, I did exactly that. Both are single view app, and I dragged/dropped the folder of pictures in the same place as the previous project. I just restarted my PC, opened the project again, and ran it and it worked. Took a VERY long time for the simulator to start and the console to work, but it did. Seems like a bug to me, but thanks so much for your help!
I like the idea of this approach, but is there an easy way to swap out the implementations of dataManager and log in your tests? I can't think of an easy way to do it.
Ah, I thought you meant you didn't need to check for null at all. I concede your point.
Are you sure that’s the initial View Controller? Check your storyboard (if in-design) and see if the class is properly linked in the attributes inspector 
Well I still think my proposal is valid but only you know the logic of the app you just need to understand when to check for updates. Download them and point to the files you downloaded. 
Thank you, I will give it a shot
You are welcome!
Yes, the key is in the extension that you define. In the live-code example I provided, the `dataManager` property simply returns the `fileprivate` instance of DataManagerImpl. That is in `AppDelegate.swift` but you can put that anywhere. In your unit tests, you usually don't link in `AppDelegate.swift`, so instead you can define the extension like so: ``` class DataManagerMock : DataManager { // Fill in mock functions here. } fileprivate let mockDataManager = DataManagerMock() extension RequiresDataManager { var dataManager:DataManager { return mockDataManager } } ````
The author does a disservice to readers by insisting that XCode needs to be used for Swift development. Buying a copy of AppCode for Windows or Linux is a lot cheaper than buying a Mac if you don’t already have one!
you can invite me as a contrib to your repo
Thank you! This really helped me grasp it. I think I was trying to make it more complicated than it really is. 
True true, that would make sense. Thank ya for the tip
There's a whitespace `CharacterSet`, right?
It’s ok gitlab tho...
Yes, in this example case, it is essentially behaving as a singleton, although there is nothing preventing you from creating another instance of DataManager if that's appropriate (for example, if you connected to multiple databases or something like that). If you wanted to enforce a single instance, you could certainly make the class a singleton return `DataManager.shared` in the extension. I see it as advantageous over calling `shared` directly because the class that uses DataManager doesn't need to know or care whether it's a singleton or not. Thanks for the kind words. I agree it's a tricky problem.
Yes but since this is about breaking up words you’d have to include punctuation in there too. So I went with non-alphanumeric characters instead. 
I can see the appeal of a dedicated operator, but Swift does have a built-in solution for this, [`flatMap`](https://developer.apple.com/documentation/swift/optional/1540500-flatmap): ```swift let url = textField.text.flatMap(URL.init) ``` If `textField.text` is non-`nil`, `flatMap` will pass it to `URL.init` (note that you can omit `string:` in this case, because there are no other `init`s that could apply here) and return the result. If `textField.text` _is_ `nil`, `flatMap` will just return `nil` without calling `URL.init`.
Localween sounds a little Grindr-like if you ask me.
Yeah, I recently switched a lot of cases of such operator use to a `flatMap`, too, because it sort of felt nicer. Though, I've still kept an `apply` operator around (to apply an optional function on an optional value, where the function does not take an optional – like a delegate method where the delegate is optional). Tangentially, there is also [this – in my opinion – interesting tweet](https://twitter.com/cocoaphony/status/974256574922395648) by Rob Napier. I had been hoping for a `Result` in standard library, but his idea really made me reconsider what would be more *Swifty*. Not to denigrate `Result`, of course - it's awesome. But the tweet just sort of illuminated to me something I hadn't yet verbalized or maybe hadn't internalized: that what feels *Swifty* [to me] is some type of balance between functional and object oriented approaches. 
what level are you? is this your first ios / software development job?
Yeah I don’t think OP was joking
I'd be weary on hiring someone who has no idea how to find a job these days. It's pretty simple. Not like you're driving around submitting apps. 
Indeed
All of them (Indeed, Linkin Jobs, Monster, etc). When I was looking I spent each day going through each site and sending my resume out to the new jobs posted that day. It basically became my job. I would wake up and start the day searching and applying. Next day I would do the same thing. You will send out lots of resumes and hear nothing but the point is to never stop and just keep at it. 
Careers.stackoverflow.com
I hadn't realized this at all, but what you say is very true. And, in fact, looked at in this light, the more natural operator would be Haskel's `&gt;&gt;=`. I'm putting together an update that addresses all this. Thanks for the feedback!
Slightly surprised that you are asking this question given your level of experience, although I admit I'm learning aspects of job hunting even after 10 years of working in tech.
Yeah, it totally make sense when I write it out. I mean, if `[T].flatMap((T)-&gt;[U])-&gt;[U]`, then it follows that `T?.flatMap((T)-&gt;U?)-&gt;U?` — especially if we think of optionals as [collections of zero or one elements](https://twitter.com/olebegemann/status/978771153778077696). I just don't connect with this on an intuitive level for some reason and completely overlooked it. That why the Swift community is the best! Thanks all.
To be constructive and give you honest feedback, I took a look at your post history and I wouldn’t consider your code to be mid to senior level based on my employer’s standards. It seems like you are more of a junior. Maybe you should set those expectations and work your way towards a higher goal. If you feel like you are stagnating, length of time at the job is almost working against you. Starting at a lower level but at a place where there are a lot of people to learn from will benefit you. Firstly, I should mention, mid to senior level means nothing really, it’s all arbitrary and dependent on the employer. Second, you got some really great feedback on your reddit post asking about your work. I would look into certain things there: SOLID software design, upholding Swift guidelines and best practices, looking into architecture alternatives (MVVM, VIP, etc) are just some things I would look into.
*Very* interesting tweet. This is [the one that kills me](https://twitter.com/jckarter/status/608004989600997377). Which is to say, at least conceptually, `func foo&lt;T&gt;() throws -&gt; T{ ... }` is identical to `func foo&lt;T&gt;() -&gt; Either&lt;T,Error&gt;{ ... }` They essentially build the entire error handling mechanism as sugar on top of `Result`. Same approach with the concurrency manifesto: get coroutines then build `async...await` as a layer of sugar on top. To be Swifty seems to mean building a private core hipster Haskelly stuff with a public offering of (really well thought-out and elegantly executed) syntactic sugar so the uninitiated never have to reason about functors, binds, or what maps on what. It's sort of an odd balance because at the end of the day why not expose `Either` and let the FP kids have their cake? On the other hand, it's so trivial to implement `Either`, `Result`, pointfree operators, etc. that maybe it's just not worth it? I'll be interested to see how much of the coroutines stuff ends up exposed when `async...await` happens, or if we'll only see the sugar.
Thank you!!!!
More so because it's tech. Kinda like expecting an iOS dev to know how to work a smartphone.
Are you finding any opening at all or is it that you're not getting responses from the jobs you apply to? IDK the job market in NYC, but it's supposed to be one of the hot spots. Are you dual platform, full stack? Do you have professional experience programming in any language? If you're not getting a lot of responses, maybe post the resume with your name removed.
I didn't know this one, thank you :)
You have another post with a project you did. How long did they give you to do that project? What was the assignment asking for? I haven't dug too deep into it, but looks like quite a bit of work for a take home exam. It's got 132 lines of constants, that seems like a lot of work to figure out if someone can program. https://www.reddit.com/r/swift/comments/865s9i/want_to_know_what_i_did_wrong/ https://github.com/cvlehe/meetup-events 
Just go to LinkedIn and turn on the options for recruiters (this is turned off by default) then wait a while. I did this and landed a job without ever having to actually look or apply for one
Dice.com
Your app is not running. Look at the top center of the screen. "Finished running Project1 on iPhone8".
Welcome to Xcode. Odd things like this happen. It's like using a PC 20 years ago. When in doubt, reboot.
Damn, that project didn't really look too well. Maybe OP should write in CV that he has 1 year experience, that could actually help.
I didn't get it running yet, can you give some insight into what doesn't look good? The storyboards don't come up on Xcode 9.2 and I didn't update the pods yet. I was looking at all the structs used for constants and that seems to be fine, haven't seen that much before. I ask because I'm collecting these kinds of project to determine what is good practice and what isn't.
I didn't run it either, it does not look good from coding practices perspective. You can check the coments at https://www.reddit.com/r/swift/comments/865s9i/want_to_know_what_i_did_wrong/, they had good insight.
Because it compiles to native binary, has no GC, and LLVM can produce very optimized code. I'm shocked everytime I see iOS developers who think Swift is basically just a language for iOS. It's not. It's a general purpose language.
That's a stupid reason in my opinion. You can utilize almost _NONE_ of your iOS knowledge in creating a server side application. The language is such a tiny part that it's a rounding error.
I would agree that an optional array makes limited sense, there may sometimes be a difference between an empty array and a *missing* array but that doesn't seem to be the case here. That aside, .flatMap { $0.cars } // [Garage] -&gt; [[Car]?] -&gt; [[Car]] .flatMap { $0 } // [[Car]] -&gt; [Car] there's no need to go through two flatMap here, you can just use nil-value coalescing: .flatMap { $0.cars ?? [] }
of* Swift for* the Raspberry Pi
That's nice! I've never heard of `swift-lite` I'll give it a try, thank you!
If it's a lab, you can download the "answers", essentially, by downloading the teachers' App Dev With Swift book (from iBooks), then going to the page prior to Unit 1: on that page there's a button to "Download teacher materials". Open the appropriate one up in Xcode and see if it solves your issue If not, I've certainly noticed that some things simply seem to be out-of-date. For example, one instruction in Unit 2 had me using a deprecated method. I didn't check the teachers' guide for this, but I did for some earlier issues, and the mistakes in the student guide were not always mirrored in the teacher guide. So it might be something like that. In that case you'll probably just need to figure out how to solve the task yourself.
This is completely valid if our goal is to obtain a URL that we can perform some side-effects and then forget about. But because of `if`'s restrictive scope, this isn't a great solution when we need a value to chain or pass to a great number of other operations. We could use `guard` then, instead, but we run into a similar problem. If there's a lot we need to do in the case of failure, our `else` block starts to get huge and duplicate a lot of code of the function body, but with `myURL` replaced with `nil` or whatever. In both these situations, it'd be ideal to just have a `URL?` to pass around. But you are absolutely correct to say it doesn't seem worth broadening the inputs of failable Foundation initializers. As others point out here, I've missed the point. This is *really* a case of `flatMap`ing a container (i.e. binding a monad) rather than extending a polymorphic initializer to accommodate another type and applying that type to the new init.
Disclaimer: I haven't tried this, so I don't know the caveats. I work on a very large scale iOS Swift project and the compile times are at times unbearable even on the fastest MacBook Pro. What you can try is cross compile for a Raspberry Pi on a MacBook Pro. Like I said above, I don't know if there are tools readily available that can do this for you and what are the limitations.
Has anyone figured out how this is filtered? I'm not seeing anywhere in the code where it's limited to a given city, yet I'm seeing only things from the South East.
It’s the array itself that is optional, not the cars in the array. If you wanted to create an array of optional cars then the type would be [Car?]. But if you stick with just the array being optional (ie. [Car]?) I think what you’re looking for is just: let carIDs = (garage.cars ?? []).map { $0.identifier } But if it’s an array of optional cars (ie. [Car?]) then: let carIDs = garage.cars.flatMap { $0 }.map { $0.identifier } But if you want to do an optional array of optional cars (ie. [Car?]?) then: let carIDs = (garage.cars ?? []).flatMap { $0 }.map { $0.identifier }
The problems you’re facing probably has a lot to do with why that person didn’t get the job offer.
IIRC Swift 3 is fine and there are binaries available for the Raspberry Pi. Swift 4 doesn’t build at all on the Raspberry Pi and seems seriously broken. Some people have tried to make it work but ended up just giving up. I have vague recollections of the reasons being something something 64-bit issues
Any resources to find that binaries? I've been having a lot of troubles when using Ubuntu on the Pi, after installing it and setting up the WiFi connection it won't boot because it messes something in the kernel. Any experiences with that?
I wonder how long he was given to complete the project. Looks like one of those 24hr challenges. I had one a while back and I refused to look up any code online or use any 3rd party tools. Ends up it was a game engine and afterwards when I looked it up, there was a better way of doing it. I'm not an expert on the "Big O notation" stuff. I took it as they wanted to know the problem solving process and anyone can cut-n-paste, being in pure native code and taking a unique approach proved that I could solve the problem with no outside help.
OP is not using a `UITableViewController`. OP is using a standard `UIViewController` and creating an extension adhering to `UITableViewDataSource`. This would mean OP would be putting a `UITableView` in a storyboard (IBOutlet) or in code somewhere. Side note– `return UITableViewCell()` will crash if the guard fails. I'd recommend at least providing a "fatalError(message:)" instead, so there is a bit of a paper trail on a crash
Idiots not knowing how to use CocoaPods? Hate to work for that company.
I remember visiting that web but I must have missed that link, thanks!
Why not just move the entire view’s origin by the keyboard height when you receive the keyboardWillShow notification? Then move it back into place on keyboardWillHide. I’m doing that and it’s working great, considering the complexity of my view hierarchy. As for the textfield behaviour, there’s two possible causes off the top of my head: - its delegate is somehow being set at the wrong time — set breakpoints and inspect your call hierarchy - the constraints cannot be satisfied
You can still provide extensions to a `UITableViewController`, they just would need to add the `override` method prefix. extension YourViewController { override func tableView(_ tableView..... } Adding a `UITableView` to a `UIViewController` is fairly common, especially if you are looking to display content in only a portion of a page. Think about a Weather app that would display an hourly forecast that ISN'T the entire screen. Using a non-scrolling tableview would be perfect because of the ability to configure a single cell. Hope that helps.
Also shouldn’t the setting of the constraint constant be done inside the animate block?
&gt; I'm not an expert on the "Big O notation" stuff. Then you should learn. It's a simple notation for a fundamental concept in computing. At my school, it was taught freshman year. I'd be suspicious of what other core concepts such a candidate is lacking. You wouldn't hire a musician who said "I'm not an expert on the 'quarter note notation' stuff".
&gt; Associated values in enumerations prevent me from inflating instances from raw values. Does "inflate" have some special meaning in Swift here? I'm not sure what this means.
It’s personal preference, really. Although I have experience in rails, ember, firebase and node, I’d prefer to write the backend in Swift so I’m not constantly context switching. Plus, Vapor 3 is fast as hell. The real answer to why someone would want to write a backend in Swift is just “because I want to.” Options and competition create better ecosystems and push technology forwards.
Yeah, both of those are just strawmen. I noticed you mentioned a tap gesture, is it somehow on top of the textfield when the view controller first appears? That would fit the bill if you set that tap gesture to move the textfield down. Moving the entire view will indeed move everything on the top of the screen off screen :) but IMO that’s expected behaviour. Here’s an [SO answer](https://stackoverflow.com/a/41719907) that should get you started.
You could use swift on Linux (you may install it with your Windows Ubuntu bash, really don’t know how is called that) you will not able to develop for iOS/macOS but you will able to use Swift itself (theres a bunch of staff for Linux, just Google it)
Swift does not support that at this time. 
[removed]
This...might actually be very useful to a project I’m working on! Thanks and I’ll be sure to contribute where I can. 
When using a `UITableViewController` you can take advantage of prototype cells, whereas with a `UITableView` added to a `UIViewController`, each cell must be registered in code with the table view.
That’s weird, I’ve never done that. I guess that’s an IB vs code thing. 
I do it quite a bit in more complicated layouts: self.tableView.register(UINib(nibName: "HourlyForecastCell", bundle: Bundle.main), forCellReuseIdentifier: HourlyForecastCell.reuseIdentifier) self.tableView.register(UINib(nibName: "DailyForecastCell", bundle: Bundle.main), forCellReuseIdentifier: DailyForecastCell.reuseIdentifier) self.tableView.register(UINib(nibName: "LocalForecastCell", bundle: Bundle.main), forCellReuseIdentifier: LocalForecastCell.reuseIdentifier) This is in a standard `UIViewController`. This is very common with a `UICollectionView` that is added to a subview.
You can add a tableview to a viewcontroller in IB and set up prototype cells just fine without any code
It appears cross compilation maybe supported! https://github.com/AlwaysRightInstitute/swift-mac2arm-x-compile-toolchain/blob/master/README.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [AlwaysRightInstitute/swift-mac2arm-x-compile-toolchain/.../**README.md** (master → 68e39ea)](https://github.com/AlwaysRightInstitute/swift-mac2arm-x-compile-toolchain/blob/68e39ead27c4315581be54b8c01511c17fe3f277/README.md) ---- 
For me, that's actually a huge negative. IBM does not have a good reputation in the tech world.
Usually if you have some static resource and you create code from it, you “inflate” it. An example would be storyboards which inflate the xml that they’re written in to actual code (views, constraints and what not). In this case it means that he can’t create the enum directly from the resource that he’s using because he has to also specify the associated value,.
I'd recommend learning something as different as possible, so you don't get confused by trying to learn two similar languages at once, and also so you don't fall into the trap that I frequently see here where people start to think that the Swift way is the best way or the only way to do something. Ideas: - Scheme or Tcl (dynamically typed, with syntactic abstraction) - Forth or Factor (stack-based; self-hosted) - Smalltalk or Dylan (object-oriented, and dynamically typed) One advantage you'll have is that all of these are much simpler languages than Swift. Apple's Swift language book is 500 pages. The entire Scheme language spec (including the index) is only 50 pages. Smalltalk was originally designed to meet the challenge to create a complete and powerful object system in "a page of code".
Good info thanks so much! Yes I am currently just using the tapgesture to deal with when they tap off of the textfield, to reset it to its previous position. Thanks again.
Somehow I got it to work by moving everything that was in didBeginEditing into the keyboardWillAppear() func... and now it works perfectly. No clue why!
In my opinion you should learn a backend language and framework, from a purely utilitarian perspective. This way you will also be able to build your own backend for your app(s), which you will inevitably need, unless you just use Firebase or something similar. There are a lot of options, here are some: 1. Continue using Swift with a backend framework, like Vapor. This should work on Linux. 2. Try a dynamic language: node.js, Ruby on Rails, PHP etc. 3. Use something enterprise-y, Java or C# 4. Golang I would personally pick Ruby, becaue you will find plenty of resources, it's still widely used, and it's different enough to be a challenge. Don't spend too much time trying to decide though, pick whatever, and you'll be fine, as long as you build stuff.
RPi is generally just the hardware (arm processor + specific modules), paired with some flavor of Linux tailored to support the hardware. Ubuntu is one option, but there are others such as archlinux arm or raspbian. A cross compiler tool chain that could be adopted per architecture and os would be ideal.
Weird how this redirects straight to Udemy with an affiliate code attached. Paging /u/lyinsteve, who I think is the only active moderator we have left…
This course is spammed in this subreddit every few weeks. 
Kotlin is pretty similar to Swift and works on Android, Linux, Windows and Mac OS. C# is also pretty cool and inspired a lot of Kotlins features.
Yep! Or if you’re unsure of what future responses may hold (in case you’re dealing with Ints, Arrays and Objects as the values) you can cast to [String:Any], then build your models up using the values.
Depends. Tommy Emmanuel and Jimi Hendrix couldn’t read music. Just because a dev doesn’t know big o theory doesn’t mean they wouldn’t be able to solve problems in that area. You’re right though. It is simple. Maybe an hour of research to get the basics down?
I had this discussion with a hiring person from Google. I pointed out that I have worked as a professional programmer for many years for some of the nation's largest companies and in many years for many companies, I have never, ever written a sort, tree or used a "Big O notation". I've used tons of 3rd party tools and APIs, I assume these are written by people that know how to write those things. If you decompiled all of the top 200 apps on the App Store, how many do you think would actually have hand crafted sorts or hand crafted trees? I'd guess none. The reason is that these things are built in. The hiring person at Google agreed, but mentioned that IF someone knows how to write a sort, they should understand how to work with a complex API. That's kinda like asking a truck driver to build a diesel engine. Driving a truck is one thing, being a diesel engine builder is another thing. IMO, leave the low level "nuts and bolts" to the people trained for that, I've spent many years developing solutions for customers without building a chip or hand crafting sorts or trees.
Ok, so there's some advantage to this approach if you have a smaller table display? I didn't think about the non-scolling part. I'll have to check that out.
That can't be your actual code. The code in your pastebin results in an error: "Expected declaration". That's because you're putting that code inside a class but not in a method. Not only that but when you create the `URL` you are using a failable init method that results in a `URL?` so it needs to be unwrapped before using. Here's the corrected code, which works: import UIKit class ViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() if let url = URL(string: "https://www.google.com") { UIApplication.shared.open(url) } // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } } 
Thanks
Storyboards are like any other part of iOS or programming in general: there are times where you should use it and others where you might not want to. That said, Apple has put a lot of focus in the past few years on size classes and constraints. While you can do those in code, it's a lot easier to work within the storyboard. The issue with working on them in larger applications has to do with dealing with them across team mates and potential merge conflicts. But if you're thorough with using storyboard references and keeping your UI abstracted into multiple storyboards, they actually can be fairly easy to use, even on larger projects.
Would you recommend, I try to do the same app twice, one with using storyboard and other without using storyboard to practice?
I would personally not recommend doubling the work. Based on your earlier comment, I assume your app has quite a few screens. Instead of an all or nothing approach, maybe try building one part with storyboards while you continue down your current path with the existing portions of the app. As you develop them side by side in the app, you’ll see which you find easier or harder to work on. 
There's another way to make this automatic, if you put the textfield in another container like a table view. that may or may not work for your application, but I did it with my data entry screens that had a lot of fields. It allows scrolling of the text fields, handles several types of data entry and handles the keyboard.
Well now it has more screens but when I origionally posted this it was only one screen and did not know how to do so programatically. I guess I will give it a shot and try to implemeny both storyboard views and also lrogramatically. Also, this is just for fun don’t plan on doing anything with the app, this is just to practice coding in swift.
We'd need to see the code that didn't work in order to give you an accurate explanation. There's not enough information here
[here](https://imgur.com/a/teK9j) Is that enough?
Great idea! mine isn't in a tableview but I'll keep that in mind.. I didn't even think about textfields in table views. ty =)
Flexibility. While they are currently not needing to display the tableView in a size other than filling the entire view, using a UIViewController allows them to accommodate whatever size/position needed(as others have mentioned) without having to refactor the UITableViewController into a UIViewController later on if they need to display the tableView in any other way than filling the entire view of the viewController.
I'm not sure I understand, can a UITableView NOT be smaller than full viewcontroller? Meaning, can't you have a view with a tableview that's a smaller size? Basically a table view is a type of view with methods already built in. IDK, I've never dug that deep into custom table from scratch using viewcontrollers. I've used several table views inside of a collection view. they were much smaller in size, but they were still tableviews. Seems a bit odd to me, I've seen the app in question running on my phone, and I can't see anything there that would require a special table browser. Like many others said the code had a number of odd things in it and maybe that's why the OP didn't get the job he was being tested for.
Thanks, will give that a shot! 
nice!
&gt; Continue using Swift with a backend framework, like Vapor. This should work on Linux. Despite being officially "supported", the Swift standard library still doesn't work the same on Linux as on Darwin. If someone is still learning Swift as their first language, this is perhaps not the sort of confusion they need right now.
Yup, I've been using the same thing for years. Might want to invest in extra ram depending how much it has.
Unfortunately the base model has soldered RAM, so I’m stuck with the 4GB it comes with.
4GB is just fine to run MacOS and a couple of apps. The only time you may get into trouble is manipulating large photos, videos, music, databases, and so on.
I work with a 4gb ram, 1.9 ghz mac. It works great, it just takes a little longer to build the project and load the storyboard.
Well, the reason I’m wanting to get into producing iOS apps is that I’ve worked a minimum wage job my entire life, and I’d really like to eventually get out of that. I have a little experience with JavaScript and I’ve touched on C# in the past, briefly, but I’d eventually like to develop full time. I would be producing very simple kids games.
Good for you. Swift is a great language and if you've had some experience programming then you should be able to pick it up without much problem. A bit of advice, embrace the "swifty" way of doing things. Keep stuff as immutable as possible, use protocols when they make sense, use extensions to add on to existing types, properly unwrap `Optional` and don't do force-unwrapping, give functional programming techniques a try. Here's a great style guide to start with: [The Official raywenderlich.com Swift Style Guide.](https://github.com/raywenderlich/swift-style-guide) There's a great community here but also over at Stack Overflow: [Newest 'swift' Questions](https://stackoverflow.com/questions/tagged/swift)
The OP’s context is questioning what he can do with his first programming language. There are similarities across all languages. You get a bunch of programmers who each know a single language and put them in a room and (assuming they can communicate using the same ‘spoken’ language) they can pretty much understand what each other is doing. They may not know syntax for the other languages, but they can internally translate it into something they can relate it to. As long as you have that relation, you are good and picking up another programming language can be done fairly quick. You may not know all the intricacies, but you know enough to get started. Then you have backend. There’s more to handle. It causes you to think differently about problems and how your structure there affects the front end solution. Your quote here is a poor choice. The OP is not practicing something once and moving on. They are working toward learning Swift. They need something to do while working with and running Swift programs are not an option (unless they really want to jump through some hoops). If they, on their “off days” start learning back end concepts, they most certainly will have something others with only front end experience will not have. Their understanding will primarily be Swift, with a knowledge of how the front end and back end work together. They will have, as one of my professors used to say, understanding of both “breadth and depth” of the subject matter. Their understanding here will not only allow them to communicate with a group of peers in a workplace, but also communicate cross-functionally with another group. And that adds a lot of value and time saved when in the workplace, not to mention improves your peers estimation of you. This suggestion would also open the OP to working in a small business or on their own, where they are both front end and back end support. It broadens their possibilities for employment. I stand by what I said before. If you don’t, then we simply disagree. 
Post your code because without it we can’t help you. In the future Stackoverflow is probably better for getting answers to programming questions. 
There is no code, this was done completely in my storyboard. I agree, that is probably the best place, however whenever I go there for help, I find the language intimidating and feel like I leave more confused than I entered. I’m sorry for not giving you much to go off, I really do want help learning this language/Xcode so I’m trying to teach myself really. Sorry.
Don’t be sorry my man! It takes time to learn these things! Can you post the constraints you used in the storyboard?
Listen to this man. And good for you for getting your game on. Swift is very straightforward. Look for the patterns at first more than the details. That's when the lightbulbs go off.
Carthage doesnt use workspaces, you need to make jenkins call carthage bootstrap --platform iOS 
Thank you for taking the time to reply. The reason I chose to use Carthage is because I have build configurations in my project that required me to create a workspace. Before Carthage I tried using the popular Coco pods but it created its own workspace and build configurations which I could not use. I going to implement your suggestion that I believe should help resolve the situation/nightmare.
https://imgur.com/a/65Jlx this is the list of the constraints that are attached to the above issue! Sorry and thank you!
In that same menu, can you rename the view you're trying to layout, that way that list of constraints says the view's name instead of 'View'?
I changed the name for you, yeah. Does that help you? I didn't even know I could change those names so thank you. You've already helped me organise my workspace. https://imgur.com/VLOdLtU
Just to be sure, when you say you downsize the phone, you mean in Xcode where you can select 'View as: iPhone 8/Plus' correct?
yes, that's what I mean! I've run in a simulator too to make sure it wasn't an Xcode thing, and sure as hell everything is still going off the screen/off centre slightly to the right, even though the constraints on the left of the screen are keeping strong. as for priorities, i'm going to have to google what that is because that's not something I know of.. yet.
Check that all your priorities have the same value: https://imgur.com/6879HgO Also, try cleaning your project. In the Xcode menu go to Product-&gt;Clean, then also run it again but while holding down Option. 
1 more question do your eyes ever hurt? I heard of people wearing those blue light glasses 
In case you're not already familiar with what's new in Swift 4.1, here are two articles I wrote that might help: [What's new in Swift 4.1?](https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1) and [Swift 4.1 improves Codable with keyDecodingStrategy](https://www.hackingwithswift.com/articles/52/swift-4-1-improves-codable-with-keydecodingstrategy). Now, on to [Swift 4.2 and beyond](https://www.hackingwithswift.com/articles/62/what-2018-has-in-store-for-swift)!
Yes, you should be fine. You’ll definitely want a more beefed up system later, but it should be fine for now - as long as you do in fact use that external SSD. I’ve run macOS from external drives for years, never any problems. 
I think you're better off going with an equivalently-priced iMac.
Thank you - I must have been using the wrong terms to search SO. I actually ended up implementing this earlier today, but couldn’t get the right results. Turns out I was concatenating the namespace UUID and name as strings, not bytes.
The automatic `Equatable` &amp; `Hashable` implementation is pretty cool. Now you can just declare `protocol MyData: Equatable &amp; Hashable {}` ^^terrible ^^name and copy Kotlin’s [data classes](https://kotlinlang.org/docs/reference/data-classes.html) struct Person: MyData { let name: String; let Age: Int } 
I've been using duck duck go for programming related searches recently, and I sometimes get better results than I'll get with Google. I feel like Google tries to get too fancy making assumptions / tailoring results for some things.
&gt; https://imgur.com/6879HgO I checked this and they were all the same value, 1000. Some had different constants and idk why. I cleaned it and ran the debug option, one of the two fixed it on the simulator but the constraints are still active in my storyboard
just had a penny drop moment and noticed that my safe area is bigger than my view. no idea how i've managed that tbh
When I first started working, my eyes did ache a bit, probably because I wasn't used to staring at multiple screens for long periods of time. Over time, you get used to it though. Nowadays I also make sure to take short breaks throughout the day to give my eyes some rest.
I also put in roughly 40 hour+ weeks and my eyes rarely hurt. If they do then you should look at getting them checked, you may need prescription lenses or to get your current prescription updated. Another thing that helps is using one of the light on dark themes in Xcode, like Midnight. It tends to strain your eyes less, in fact I created a custom version using the [Inconsolata font](https://fonts.google.com/specimen/Inconsolata) with slightly larger text since I have a 27" monitor. I do the same in the Terminal app and I set System Preferences-&gt;General to "Use dark menu bar and Dock", as well as Accessibility-&gt;Display-&gt;Increase contrast
Glad you found it! That's one of the many reason I prefer to do all my Auto Layout attributes in code rather than Storyboard. 
`Hashable` already inherits from `Equatable`, so you can use the former directly with the same effect! struct Person: Hashable { let name: String; let age: Int } 
If you can build it locally but not on Jenkins then surely it's a problem with your build command on build server?
That would still apply you just have to tell Jenkins to use the workspace and still would need to run the command as it bootstraps which I think is just update the local versions of the dependencies 
Well, I was asking because at the moment this was posted, the download links weren't up yet (they still aren't, but now it explicitly says they aren't up yet). I have to wait for those because I'm on Linux... ¯\_(ツ)_/¯
You dropped this \ *** ^^&amp;#32;To&amp;#32;prevent&amp;#32;anymore&amp;#32;lost&amp;#32;limbs&amp;#32;throughout&amp;#32;Reddit,&amp;#32;correctly&amp;#32;escape&amp;#32;the&amp;#32;arms&amp;#32;and&amp;#32;shoulders&amp;#32;by&amp;#32;typing&amp;#32;the&amp;#32;shrug&amp;#32;as&amp;#32;`¯\\\_(ツ)_/¯`&amp;#32;or&amp;#32;`¯\\\_(ツ)\_/¯` [^^Click&amp;#32;here&amp;#32;to&amp;#32;see&amp;#32;why&amp;#32;this&amp;#32;is&amp;#32;necessary](https://np.reddit.com/r/OutOfTheLoop/comments/3fbrg3/is_there_a_reason_why_the_arm_is_always_missing/ctn5gbf/)
From [https://www.meetup.com/meetup\_api/docs/find/events/](https://www.meetup.com/meetup_api/docs/find/events/) &gt;By default, the events return will be based on the hosting groups near the authenticated member's location. Presumably OP is authenticated by their API key \(which probably shouldn't be on Github\)
40 hour weeks unless I seriously screwed up or found something interesting and can’t put it down.
remove(where:) is going to be fantastic, so much easier than using filter 
Nice thanks man
Ok, I get it. I was looking all over the code for some defaults.
For those that hate the App Store. https://download.developer.apple.com/Developer_Tools/Xcode_9.3/Xcode_9.3.xip 
No. It looks fine.
Glad you got the problem solved! For future reference I would post a question like this in /r/iOSProgramming/, since it is not related to Swift.
A singleton is used when there must be singular access to a resource. Or when it doesn’t make sense to have more than one instance. For example, UIApplication.
Has anyone confirmed that it requires High Sierra to install? The reason I ask is that it's a minor upgrade and that usually doesn't require an OS upgrade.
Would need to see your code to see the exact issue ;) 
What’s wrong with the App Store way?
I’m assuming it won’t be used if you’re defining your own keys
TL;DR: Had a view controller that played local video on older version of swift, tried to remake it on newer version but now only the audio is playing - no sign of the video. Any idea why?
Yes requires High Sierra, as have the betas
People might come in and tut me for doing it wrong but I use a singleton for the class that handles my preferences. With the same singleton instance accessible from anywhere, all view controllers can have access to up to date preferences.
A good use of a singleton would be for a networking layer. You don't want all of your classes to be able to query your API at once, so you implement a queue to handle the requests. Now you want to ensure you only have one queue, otherwise what would be the point right? So a Singleton suits the purpose very well.
Yes, that will be fine; an iMac of a similar vintage will work as well.
I’ve just put an update out for my app Game DVR. It lets you share and edit your screenshots and clips from the Xbox. It’s started to gain some traction so built an analytics manager to track it all and see where to focus my efforts. I’m loving it. It’s my first app and it’s exciting watching it grow. Had to up my api to a paid version recently. Happy out 😃 Link if anyone wants to try it - https://itunes.apple.com/gb/app/game-dvr-share-xbox-clips/id1249025546?mt=8
How are you finding it?
I built my app from scratch on a minimum spec air. You should be fine to get going. 
You might want to install somewhere different. Also sometimes the store just fails for me. Like everyone else, I do not use the Mac App store very much. 
You can use a tap gesture and call self.tableview?.reloadData() and it will go through and count the rows and sections and recreate the table
not exactly what i was asking. i want the label to update if the data in firebase changes even if the user does absolutely nothing. I found out i can accomplish this with a firebase event listener
I literally am doing so on that exact model right now, and its fine, even with 4GB. I did put in an internal SSD, which seems like a lot of steps at first, but there are so many videos and guides, as long as you have the tools, is really no big deal. The build / simulate times are slow, but perfectly workable, and no worse than developing was 10 years ago and earlier. MacOS is actually doing an down right amazing job with memory management and compression, I am very impressed. This unit will tide me over until the new Mac Pro comes out, so that is going to be a fun transtion. 
I keep thinking Xcode for ipad pro is right around the corner. Its been years since a pro iPad, when will iOS professionals get to use the iPad pro?
Look up arc4random_uniform
If I were to do arc4random_uniformt(99999999) and it returns 0 or 12, how can i make it return 00000000 or 00000012 instead?
Okay awesome thank you. But is there a way I could make the numbers include '0's as placeholders ex: if the random number returned from your code is '8' or '132' how would i get it to return instead '00000008' or '00000132'?
As much as I love my iPad and would love to see better dev tools on it (including Xcode!), I suspect it’s going to be quite a few years before you can do use the iPad as a professional development environment. I’d love to see at least baby steps in that direction though. Docker for iOS is my personal pipe dream. 
This is a bummer, they still don’t have a corporate blessed High Sierra image where I work.
I know of quite a few people who use it. It can be pretty handy. 
Awesome thanks will try it tomorrow 
Xcode minor releases usually *do* drop support for the previous OS after a few releases. Xcode 9.3 requires macOS 10.13, Xcode 8.3 required macOS 10.12, and Xcode 7.3 required OS X 10.11.
When using @dynamicMemberLookup, can you define multiple subscript operators for each type you want to use? Or is it only one per type?
F.lux to block blue light helps with eye pain
Use arc4random, multiply, and format with NSNumberFormatter to pad
I didn't go back and check, I just remember that I just did an upgrade some 5 months ago just to get Swift 4. I really can't see why they need an OS update for this.
It requires High Sierra and refuses to run on Sierra, but you can make it run. Do that at your own risk, of course. It requires using xcodebuild from 9.2, which may or may not break something. In my limited testing, it works fine 1. Edit Xcode.app/Contents/Info.plist and change the Minimum System Version to 10.12.6 2. Do the same for Xcode.app/Contents/Developer/Applications/Simulator.app/Contents/Info.plist (might require a restart of Xcode and/or Mac OS to make it open the simulator on run) 3. Replace Xcode.app/Contents/Developer/usr/bin/xcodebuild with one from 9.2 I have tested it with several Objective-C and Swift iOS projects and one Vapor (Mac OS) project - haven't encountered anything obviously broken yet. Haven't tried with the new build system.
Hmm, I find that the light theme strains my eyes less. Aside from iOS apps, I work as a web dev and use the dark theme on VSCode. After some time the text becomes blurrier and it just strains me more. I can't get used to a light theme for VSCode for some reason, but I started on the default theme on XCode and prefer it. 
There is a few pro's and con's when using a singleton instance in an application. Though I choose to use them myself as a senior iOS engineer. I typically use them to store special classes or access generic functions which could be used across the app. This allows for unit testing, correct inheritance and scoping. Many people have hot views on this, but have a good read on the web about all the use cases. 
I managed to solve this - I realised I was using the mov version (50mb) instead of the mp4 version (5mb). I assume it just wasn’t loading in time or there’s some file size limit not specified in Xcode!
This doesn’t really answer your question, but you could also just press the T-key, which takes just as long as pressing tab. As for the capital I, I would just get used to always starting your type notations with a capital as they all (even value types and “primitives” like Int) start with a capital in Swift. 
Sorry, I should have given that example as well... Typing "int" does NOT bring up Int. In fact, you have to scroll down quite a bit to get to the Int. It's bringing up things I've NEVER used. I was under the impression that some of these were "smart" in that if you use Int 100% of the time for "in" that it would change the selection.
I've developed a habit of letting selections come up and picking them because it takes care of misspellings and seems to "catch" more often as some times Xcode doesn't see things. I just had to retype vars in the playground because Xcode was seeing errors when there weren't any. So it seems to work a bit better when you pick from the list and you can also see other things from a list. Example: you have a struct and you hit ., it comes up with all the element in the struct and you can double check that you accounted for all of them. The Int thing just sticks out because I have to handle it special every single time.
I've just started learning so I'm finishing the playground courses - I've almost finished the first course so onto the second and third after that. Was wondering though - where to from there? Bootcamp?
cool app!! 
From someone who’s been working in XCode a bit after having transitioned from the latest version of Visual Studio, XCode’s code suggestions are so bad that I don’t even bother with them. It doesn’t seem to have any concept of context, and it doesn’t seem to learn from previous choices, nor does it even seem to have any kind of hard coded like priority list to sort “common” types and methods to the top. It’s like it’s just a bare minimum alphabetical sort (I know it’s not quite that bad, it just feels that way) of everything under the sun based on what you’ve typed in, where in other IDEs the code completion is a legitimate tool for consuming documentation and increasing coding speed.
Swift doesn't even compile on windows as far as I can tell.
Well, the big ones that are cross platform are GTK+ and QT, I saw QT wrappers for Swift. But like UIKit or AppKit theres none that I’m aware, I think it depends on the community to write a UIKit like library for Linux/Windows but seems a bit hard, those frameworks are just huge and it would take too much to have something stable. As for Windows I only saw a Swift 3 unofficial compiler, the Swift.org don’t distribute the compiler bins for Windows and you need to build yourself and as the official documentation says it could take a few hours. So as final note you may chose between QT or GTK+, I don’t think is hard to get running on Linux, just install the library from yum/apt/etc and on Mac you could use brew to install them.
actually there is swift on windows unofficially as seen in the following links: https://github.com/apple/swift/blob/master/docs/Windows.md and https://swiftforwindows.github.io/ 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift/.../**Windows.md** (master → 99dcfae)](https://github.com/apple/swift/blob/99dcfaef6e375d43d7430be62207feeb5bfa136d/docs/Windows.md) ---- 
Gtk is pretty easy to use. You probably wont find a solution that also covers windows.
Cool pod, TY.
Everyone is a bit different, that’s for sure. Experiment and find out what works best!
Something like this should work: let view = SKView(frame: CGRect(origin: origin, size: sceneSize)) let scene = Scene(size: sceneSize) view.presentScene(scene) PlaygroundPage.current.liveView = view
thanks for the insight! i'll keep that in mind.
you can declare a constant without a value, as long as it is given a value before its use, e.g. let id: Int if someCondition { id = 5 } else { id = 12 }
Yes, I think you could. My understanding is that there’s a lot of belief that the Mac Mini will be updated this year for the first time in ~ half a decade. I’d really recommend popping up that RAM to 8GB though if you decide to purchase now. 
If you can avoid a singleton, you probably should. There are definitely use-cases I would consider valid but they get hard to reason about if you’re accessing a singleton across multiple threads, and depending on what it is multi-user support can be difficult. 
I haven't done VS in some 9 years, but I remember it wasn't bad. I remember an "Object browser" or "Class browser" that would allow you to browse around all the different classes offered and what they did. I think it had a pretty good description about what a given method did. Xcode gives tiny descriptions IF it even gives a description of the methods. It sucks whey you have several methods to choose from that all do different versions of the same thing.
I went from VS to Java back in 2000 and it was a nightmare. Java had no real IDE, it was kinda "go build your own" out of whatever tools you want. I dropped Java after a while and went to C#/VS/SQL on a notebook and it was sweet. Everything I needed right there on one notebook. I've heard about JetBrains AppCode, but IMO Apple should just step up and fix Xcode.
Any good GUIs* written in Swift that are open source it is they are That's how it works in English.
Currently using Swift for my dissertation project. So I spend on average around 3-4 hours a day but it's not uncommon that I end up with 10-12 hour days when I need to catch up. 
I just tested it and `Int` is the second choice for me, so it doesn't seem that bad. I don't know of any way to set it as a preference for order, though.
For something like this I dislike the map/join approach. Not sure how Swift implements it but sounds like just too much allocation of temporary objects (arrays, strings, lambda). How about: let digits = 8 var number = "" for _ in 0..&lt;digits { number += String(arc4random_uniform(10)) } 
Lets get crazy since we have all these ways to do it! import Darwin struct RandomDigits: Sequence, IteratorProtocol { var count: Int mutating func next() -&gt; String? { guard count &gt; 0 else { return nil } count -= 1 return String(arc4random_uniform(10)) } } print(RandomDigits(count: 8).joined()) 
Awesome I just tried what you suggested with "%0*u" and it works! It's exactly what I was looking for! I even wanted it as a string for what I was going to use it for too. Thank so much man! Before, I looked everywhere and everyone else made it so complicated but you kept it so simple thanks again really appreciate it
Darwin is all of the underlying BSD stuff. Basically a bridge to the C libraries that the system is built on. Foundation is the core stuff added by Apple (and NextStep that originally created it). Foundation includes Darwin so you get both by importing it. However, I follow the practice of importing as little as possible. It prevents accidental namespace clashes and could shorten compile times and code size, at least in development. I needed to import Foundation because of `String`'s [`init(format:)`](https://developer.apple.com/documentation/swift/string/1417691-init) which comes from Foundation. If I wanted to be clever I could have also done: import func Darwin.C.math.pow import func Darwin.C.math.arc4random_uniform import func CoreFoundation.CFString.CFStringCreateWithFormatAndArguments Which is *exactly* the imports I need to make my code work. However, this is a bit OCD and not necessary. The compiler takes care of trimming down imports to just what is strictly necessary, I help it a bit by choosing a general import that fits and then let it do the rest of the work.
No, `arc4random_uniform` produces a number in the range 0..&lt;max, which means from 0 to 1 less than the max. If I used 100,000,000 the range would be from 0 to 1 less than 100,000,000.
I come to /r/swift a few times a day but I should probably start sorting by new. Until then, maybe I can add more rules to AutoModerator. Thanks so much for your diligence.
No, thank *you* – your continued work is keeping this place hanging together.
My day job is not iOS or MacOS related, so I find time in the evening after dinner and getting children to bed. I probably fall between 6-10 hours a week.
Just published a [long article](http://archagon.net/blog/2018/03/24/data-laced-with-history/) on an eminently-mergeable new kind of data structure (operational CRDT), together with a) a generic Swift implementation of the data structure, b) a demo of real-time collaborative text editing through CloudKit Sharing in iOS, and c) a mesh network simulator with real-time collaborative text and vector graphics editing on macOS! ["Data Laced with History: Causal Trees &amp; Operational CRDTs"](http://archagon.net/blog/2018/03/24/data-laced-with-history/)
Got it thank you 
Also, the Swift team is working on an official port, but the move to a stable ABI is taking priority at the moment.
Yes, but if you can then you should wait for them to release a new one.
A lot of people say that you should avoid Singletons as much as possible but in reality, you should be smart and decide when it is safe to use a singleton. Like you have a TabBarController which stores the VCs in an array, meaning they are basically singletons. But if you push other VCs on the ones you have in your tab bar, you are most likely instantiating those every time it happens. Of course some VCs can be used in multiple places at the same time with different data source. Then those shouldn't be singletons. When you are making apps for stuff that run on battery then being energy efficient actually matters a lot. (Not to mention having to instantiate a lot of stuff can take time which can ruin the user experience if it's long enough to be noticable) "static let" is always lazy (you can also use the "lazy" keyword to be extra safe and to signal your intention that you don't want to make the splash screen take even longer), so preloading your singletons in a lower priority DispatchQueue can also be a thing to consider.
The iOS 11 and Swfit 4 by Angela Yu on Udemy is a really great course for beginners. Highly recommended!
The swift community is in the final phases of defining this syntax for swift 5: let randomInt = Int.random(in: 0 ... 100000000) https://forums.swift.org/t/se-0202-random-unification/11313/101
[removed]
Like NSUserDefaults and UIApplication are accessed as singletons. There's not more than one user and not more than one application at any given moment accessible. The difference between a class that has everything declared as static and class and a singleton is that a singleton still behaves as a class. This allows (amongst other things) Generics to work better and it's easier to refactor to a non-singleton version. People tend to warn a lot against singletons but I have never been bitten by it. I guess you shouldn't go overboard by it and try to use stateless static classes instead or injection or simply multiple instances as much as possible. Expecting there's only one user or one application is a good expectation. Expecting that there will only be one API endpoint or one list of users is a bad thing.
I'm curious to see how this ends up going, better favor messing could be nice but I dunno Relation to the Swift project This project includes Swift compiler and language changes, which are in a copy of the Swift compiler sources. We think that some of these changes will be interesting to the broader Swift community, including language-integrated automatic differentiation support, a constant expression model, and improved interoperability with Python (and other dynamic languages). 
I know TeamTreehouse has videos, and they give quizzes practicing the code in-browser. It costs $25 a month, but I can’t give too much info about it since I’ve only used it for a month off and on. I would say give TeamTreehouse a try. You won’t be able to actually make a program, I think they just check if you typed it in right. 
Your calling clipsToBounds to true so the view is clipped to its bounds, with your code it doesn’t look like you need it for either of the effects you want to achieve 
You also have wxSwift. I know that Swift has been around for a long time in computer years but it is still rapidly morphing and maturing. As such I would have to say it isn't ready to be a cross platform system were massive GUI libraries need to be developed. The ABI still isn't frozen and frankly much has been rewritten and that needs a shake out before massive libraries are developed.
&gt; Also, the Swift team is working on an official port, but the move to a stable ABI is taking priority at the moment. This is so important to understand, with the lack of a stable ABI and other massive changes that have happened to Swift since its release, it really doens't make sense to go hog wild with GUI software. Frankly it doesn't make sense to go hog wild with any substantially large project. This is why most of the cross platform development taking place right now is focused on light weight server type apps and experimental GUI releases. 
It does look like there will actually be ABI stability on the 5.0 release though, so I expect progress on the Windows port to start making some decent headway next year.
You can just upload a dictionary like so: { Usr: “your_uid” }
You should just be able to use setValue
Yes things are looking good as the other transitions seem to be done. I'm actually hoping to see Swift adoption in the embedded world. If I had the cash and time Swift in the embedded world would be somehting to pursue
Mine is choice # 20, that's the frustrating part is that I have ino_t, in_addr, ino64_t... and a bunch of other stuff I don't even know what they are. The "keystroke saver" takes ONE more keystroke and makes it 20 new after waiting for it to pop up.
beautiful i will try that out in a bit. thank you! clearly i wasn't totally aware of what that property does :P
I tried the same but I couldn’t find anything that worked for me. What ended up being helpful was listening to other podcasts like ATP and CoreIntuition and Independence (and MobileCouch) which kept me motivated and interested while at work and also kept me in the loop with other non-coding related Developer happenings. I was so excited from my day of listening to that stuff that when I got home I couldn’t help but sink hours into coding. So indirectly it did help because otherwise I think I would have been too frustrated at my lack of skills to keep at it. 
Yep that fixed it, perfect thank you so much! Makes sense.
I really appreciate the insight and suggestions. I’ll have to check those out! Thanks.
I found it to be a waste of time, literally--she has hours and hours of content up but it's not well structured and includes a lot of divergent rambling. But leaving that aside I think it's a particularly poor choice for OP since her lessons around MVC don't actually cover much about MVC design, and when they do, they incorporate all the worst practices associated with the pattern. I learned more about MVC best practices and autolayout in the first Stanford lecture video than I did in the entire Yu course, and it took like one-tenth the time to get it across.
its a swift playground template called Puzzle Word that I made on my iPad
Ok, still need more info. What's in there besides code?
So no images? How do you generate the graphics?
it was a template from inside the app
If it's that kind of size then there must be images, audio, movies, and such included in it. You'll have to thin them out somehow. I haven't used Playgrounds on iOS so I have no idea how to do that, if it was in Xcode then I could help you out.
I listen to it at 2X speed. I wish YT had 2X speed on mobile. It gets old when you go somewhere to learn something and you spend 20 min watching someone type just to get 2 min of knowledge. IMO, there's not a lot of really well done tutorials out there.
Firebase is basically just a JSON tree, you’re going to have to save a dictionary. 
alright thanks
Can you export it to Xcode and see what sort of assets are included?
Try this guy: https://www.youtube.com/watch?v=P6NEUpLhpUM He actually has some good content, but you could reduce this down to about 3 min. I watched on a while back that had to be 2/3 typing. I really don't need to see people type. I messaged one guy about having the source code linked somewhere so we don't have to type it all in. He replied about how it's better to learn if you type it in and "cut and paste" programming was bad. I get that, but I've been programming for many years, I just need to know how something works. I don't need more typing practice. If they could just type everything out in advance, then zoom in, highlight and explain the code, run the code, link the code. IMO, part of the problem is that it's so easy to make a tutorial that anyone/everyone seems to be doing it. +1 on the Stanford, the only thing I didn't like was the code screen was always out of focus. For some reason, the camera was having a hard time focusing on the code. I just checked Stanford for the first time in years, they're doing the same card matching game as years ago, only now it's in Swift. Brings back memories, I still have that card matching game on my old iPT running iOS 6. Pretty cool that we get Stanford classes for free.
can you tell me how please? im having an issue transferring it from my iPad to my Mac
This article explains it a bit: [Erica Sadun - Playgrounds Part II](http://ericasadun.com/2016/06/14/playgrounds-part-ii/) &gt; Here’s how to go from iPad to Mac: &gt; &gt; 1. Open AirDrop on your Mac &gt; 1. Tap “My Playgrounds” (4 squares) &gt; 1. Tap Action (top-left, square with arrow pointing up) &gt; 1. Tap the playground you want to send &gt; 1. Tap an AirDrop destination &gt; 1. Wait for the transfer.
Thanks! I'll take a look.
got a new issue. the airdrop keeps canceling.
It might be too big. Apparently you can try emailing it or saving it to your iCloud Drive too.