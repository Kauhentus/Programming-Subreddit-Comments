Found this on sketch.. really like the look of the play button [https://www.icloud.com/iclouddrive/0BThvnpJxWQhJtKpXnZGbk-MQ#buttons](https://www.icloud.com/iclouddrive/0BThvnpJxWQhJtKpXnZGbk-MQ#buttons)
Learn the S.O.L.I.D. Principles for software development. As you learn what they are use them as guidelines while creating your code.
Lmao why did think he meant it like that?
Lmao why did you think op meant it like that
how would i code this on my app?
The stuff in that link or my original post?
This looks awesome, I‚Äôm gonna work It into a dev branch and submit to our PM for formal adoption of a production app I contribute to. Should I dm if it‚Äôs accepted?
This is a great change, but unfortunately since it isn‚Äôt supported by iOS 12 I can‚Äôt use it for at least the next 6-12 months.
It always doesn't feel right with Storyboard and view controller, this change should ship with the initial release of Storyboard. And yes too bad it comes along with SwiftUI and no backward compatibility.
Sure, feel free to!
Yes, too bad.
What was it like releasing an oss framework? Mind sharing what inspired it, what mental monsters may have popped up, what good came of it (so far?) and of course, aNyThInG else...
In the link.
Check YouTube for things like ‚Äúsketch to swift‚Äù
I am working on a workout app .... just finished my iOS development course and now starting my very first own project
You could also use this typealias typealias AsyncCallback&lt;T&gt; = Optional&lt;(Result&lt;T, Error&gt;) -&gt; Void&gt; I made it Optional because I don't like adding @escaping everywhere but it will work without it too.
If you‚Äôre looking for a redesign, take a look on Behance for inspiration. If it‚Äôs about sticking with what you‚Äôve got, try adding equal padding around all edges of the button.
I don't think SwiftUI is like React, it's just being described that way because many people know what React is. SwiftUI is more like hyperhtml or lit-html, but works even better. The reason is that hyperhtml uses tagged strings to simulate embedded HTML, whereas Swift directly embeds UI in Swift without needing JSX. It took a few days of deep diving into property wrappers and watching a lot of WWDC videos to understand what was going on, and quite honestly, it's brilliant... even if you don't want to use SwiftUI at all. It's a general purpose way of creating any kind of DSL in Swift that is embedded and compiled, using delegated control flows through methods (optionally classes).
Thanks for this resource, checking it out now
Eh, more reasons to never use storyboards. Hard to test, hard to use dependencies. They are a crutch.
I created some labels and images views programmatically to learn auto layout. How can I create segues since I have nothing on my main.storyboard to do it using interface builder. Also is there any way I can add labels and image views in the storyboard after creating them programmatically and refer them through the view controller?
I‚Äôm working on an architecture for developing and testing a client and server together (without being a traditional end to end test that interacts with the UI by simulating taps). This is much easier when they‚Äôre both written in the same language, so I chose Swift for that since I like a lot of the ideas in Swift (mostly the encouraging usage of value types).
your login page tutorial is very informative. Is it possible to expand this login page example with mock up httpRequest and response where the "login successful" is displayed based on the server response ?
De-factor is the opposite of re-factor; it‚Äôs the gradual process of well-designed code devolving into chaos over time!
The left margin for images is too small.
Good call, thanks!
Is there a way to create a feature in an app, connected to some kind of bluetooth/electronic lock, that will generate a one-time code when a certain condition is met? (ie something is scanned with the camera that matches what is needed to open the lock, so the app gives the user a numbered code to open it in that instance, but they won't be able to use the same code again)
Because you declared ‚ÄòSize‚Äô variable as Implicitly Unwrapped Optional.
If you want it to not be optional instead of implicitly unwrapping on initialization set it to a default value such as 0
This is an example node I made for this post. My real node has a static texture that is implicitly unwrapped. When I try to retrieve its size property, I get CGSize? And I can't set an sktexture to a default value.
For further reading, look up the `RawRepresentable` protocol. Enums with raw values conform to it, where the `RawValue` associated type is set to the backing type of the enum.
You know who else isn't paid hourly? All the people offering free help, if only you weren't being such a twit.
The window level is a 32-bit signed integer. Normal windows have a value of zero. Floating windows have a value of 3. The Desktop is -2147483628 (`Int32.min` + 20). These are all defined in CGWindowLevel.h, which you can view by using the "Open Quickly" command (Command+Shift+O). Using a value below `NSWindow.Level.normal` (i.e., less than zero) will put the window below regular windows. For example: self.window.level = NSWindow.Level(rawValue: NSWindow.Level.normal.rawValue - 1)
Thank you very much for the detailed response. That worked perfectly.
Try \`let customSize:CGSize = CustomNode.Size\` or \`let customSize = CustomNode.Size!\`?
Can you use a lazy var maybe? Haven‚Äôt really worked with SK.
In Beta 3 I‚Äôm getting a warning that is driving me crazy in a similar scenario: something about using ‚ÄúwrappedValue‚Äù because ‚Äúvalue‚Äù is deprecated. Have you seen something like that?
I think it might be similar problem that I had. Posted a question one week ago on SOF but no answers to this day. &amp;#x200B; [https://stackoverflow.com/questions/56898896/cant-access-propertywrappers-when-using-didset-or-passing-in-method](https://stackoverflow.com/questions/56898896/cant-access-propertywrappers-when-using-didset-or-passing-in-method)
Yep, and thats why you should quickly just type the code for me and not stall for days becaude youre a ‚Äùteach a man to fish‚Äù person. :D
I'm not sure if any other language has equivalent of some T. At least in theory SwiftUI may be extremely fast because Views are mostly stack allocated structs and compiler knows exactly what kind of body given view would return. Therefore no GC and no dynamic dispatch.
you would need to have a type that a double can attempt to create itself from. To think about it from the compilers point, \`Any\` is literally any type, and one example of that from Yaml could be an array of strings and there isnt really a sensible way of giving a double value from e.g. \["foo", "bar"\] &amp;#x200B; if you know the expected type you can cast to an int, e.g. let intValue = anyValue as? Int //will need to deal with the nil case now
This leads into my favorite part of SwiftUI: No Inheritance! I‚Äôve worked in so many bad projects where the view hierarchy has views and view controllers that has 5+ ancestors. That can‚Äôt happen with structs.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Declarative HTTP networking DSL in Swift](https://www.reddit.com/r/iOSProgramming/comments/cd2d7g/declarative_http_networking_dsl_in_swift/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Neat! I've made something similar: [declarative backend routing](https://gist.github.com/d-srd/c633c5d36af84faa6716e8260ac49188). e.g. ``` let router = Router { Route { GET "/user" Handler { request in Response(statusCode: 200, message: toJson(user) } } } ```
Damn, what a masterpiece üëåüèª
I had a similar idea, except I wanted to use property delegates to wrap closures that handle different routes Like: ``` @Get(‚Äú/myRoute‚Äù) var routeHandler = { request in } ```
I mean, that‚Äôs kind of what I‚Äôm doing but a var v = value as? Double fails when the v is an Int.
Good job !!
This is the piece of code i am trying to re-run or access when I hit the submitOrder button &amp;#x200B; func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell { let paperData = collectionView.dequeueReusableCell(withReuseIdentifier: "inventoryList", for: indexPath) as! InventoryValues if let paperType = currentOrder?.paperType{ if paperData.stockAddButtons.currentTitle == paperType { print("This is the indexPath: \(indexPath)") } } return paperData } &amp;#x200B; i tried just doing collectionView(currentInventory, indexPath: \_\_\_\_\_ ) &amp;#x200B; But i have no idea how to access the index path. Or if this would even work.
Swift requires you to be more explicit about the types so you cant say intValue as? Double (the compiler should warn you that this will never work). Instead you can make sure the value is an int rather than Any, and then create a double from it, e.g. let anyValue: Any = 1 if let intValue = anyValue as? Int { let doubleValue = Double(intValue) print(doubleValue) }
I think you might want this https://developer.apple.com/documentation/swift/array/3017524-partition
Thank you. I didn‚Äôt realize that syntax was valid. I‚Äôm a long time C++ programmer so my conversion while working was a bit more verbose. This will clean it up significantly.
For SwiftUI, if I understand correctly, the initial gateway a user sees is through the body of the ContentView.swift file, correct?
Can you also include parsing result in Request? I don't want to manually decode in my Views.
It's a beta, from Apple. Don't report issues with it to Reddit.
Yes, I plan to extend the functionality of that view a lot. First I plan to improve how the Json works, as it‚Äôs not as reliable as I would like ATM.
That's how you defined it. What do you want it to be?
The Kickstarter project use mvvm AFAIK. But they also heavily rely on reactive cocoa so you‚Äôd have to wrap your head around that .üòÖ
I've created an issue so you can track the progress: [https://github.com/carson-katri/swift-request/issues/1](https://github.com/carson-katri/swift-request/issues/1)
I'm not sure why would RequestView care how the request is parsed. Shouldn't Request take care of that?
Why not use codable?
Just FYI, `buildBlock()` isn‚Äôt working atm
I was going to, but I had some difficulty getting it to work the way I wanted. I would still like to look into support for `Codable`
It isn‚Äôt working in my package or it isn‚Äôt working in general?
Yeah this lib is sick. With codable support I‚Äôd be super into it. Let me know if you want help with that I have loads of experience with genetics and codable support
As a beginner to programming, can someone ELI5 why this is so awesome?
\[opt\] + \[cmd\] + \\ and enter objc\_weak\_error in the Symbol field.
I was expecting something like @Enviroment but this is not too bad. Although I think's it's better to just replace storyboards with programmatic layout and previews. It will be easier to eventually migrate to SwiftUI.
A non optional value. Documentation says anytime you use or retrieve an implicitly unwrapped value, you can assume it's a non optional value.
thank you &amp;#x200B; i should probably read up of debugging. i don't know how to use most of the tools
Yeah, any contributions would be amazing.
It does. `RequestView` handles setting the callbacks on the `Request`
In general, see the pitch thread about function builders you can see it :))
Learning more doesn't have to be a boring slog through online resources. Lately I've been learning a huge amount through the WW videos: [https://developer.apple.com/videos/developer-tools/debugging](https://developer.apple.com/videos/developer-tools/debugging)
print("This is the indexPath: \\(indexPath)") should be \\(indexPath.item)
Just for reference: https://forums.swift.org/t/function-builders/25167/351
I wish I couldn‚Äôt rewrite my networking code to something similar, but Combine ios13+ is killing me :(
Self-coaching has been my philosophy during all my development career, tutorials, videos, articles, books, etc are enormous sources of knowledge, you just have to start with something easy and start reading about it.
You should start by deciding how, in words, you would go about doing this. Forget about code, think through how you would do this on paper. This is the foundation of an "algorithm." If you can come up with that, I'll help you translate it into code.
Apple‚Äôs developer portal. developer.apple.com Go to downloads then apps
Beta 3 should work fine for building Swift
There is only Xcode 11 beta 3 which is the latest release. I can't find beta 1.
Ah, Apple doesn‚Äôt maintain the other ones on the website.
cool, then I hope `build-script` will be successful this time
It has (good) documentation.
That almost reminds me of my time in C# with labeling the function with an attribute....
i'll check it out. i figured out my issue. i still didn't fully understand what i was looking at, but i figured out where it was happening and now it's solved.
What pay are you offering? Hours?
Are you saying to partition the fetchedRC results after the fetch? Would this then update if a cell is selected and the relationship changes?
I was thinking about 5-6 hours a week Skype or FaceTime while we work and then as for pay not really sure how much is a good price if you got a estimate let me know and we can work something out.
Im thinking something close to $60/hour.
Hi new to Reddit and I was looking for some advice, see if anyone has any insight into these 2 issues. I have an app I am having developed, we are about 70% done and my programmer works very well, but there are two issues we are having problems with resolving: 1) When uploading pictures to upload into the app we are developing, the problem is taking a picture in portrait mode (16:9 ratio) we are unable to have them upload this way, they always upload cropped to 4:3 ratio so the pictures are always cut off... we need this fixed! 2) We have social media icons (like 'heart' button, comments button) with counters but every time the buttons are pressed and the counter goes up, the buttons shift a bit to the right so they aren't static, they always move when the counters change from 0 to 1 or 9 to 10 etc... Sorry for the random message. apologies just kind of desperate and frustrated.
All numbers will be divisible by one and itself, what you need to check for is the "only" part, meaning not evenly divisible by anything besides one and itself. I'd start by thinking of a way to check to make sure the number is NOT divisible by any other number. Some things to think about: how do you check to see if a number is or isn't evenly divisible? What numbers/range of numbers do you need to check for divisibility?
You are storing the fetch result in an array that gets used by the UITableView to display it's data right? Well, each time you update the array (on every fetch) you should partition it so every selected cell goes to the beginning of the array. After that you may have to call reloadData on your table view! Does that make any sense? Let me know :)
Couple of days wasted - not entirely due to some weird games being played in England - somethings called cricket and tennnis. Main frustration was attempting to upgrade an elderly Macbook Pro to Mojave and the latest Xcode. Sadly (for me) I had a TarDisk that worked very well indeed with all the MacOS up to High Sierra - but Mojave would not install until I'd uninstalled the TarDisk - endless disgruntled chatter about this - looks like TarDisk have down-skilled and are just milking their cash cow with monomal investment in support or evolution. Finally getting there and then I'll have one screen for Xcode - for doing the projects - and one for PH videos. Meanwhile I am doing, and re-doing, Projects 1 - 3 which is getting me into the swing of Xcode. Swift reminds me as much of Pascal and Modula-2 as C and C++ - I particularly liked the clean style of Dijkstra's innovations. Remember his "Go To Statement Considered Harmful", published in the March 1968 - probably not :-)
I use a fetchedResultsController: **let** request = Tag.fetchRequest() **as** NSFetchRequest&lt;Tag&gt; **do** { fetchedRC = NSFetchedResultsController(fetchRequest: request, managedObjectContext: context, sectionNameKeyPath: **nil**, cacheName: **nil**) fetchedRC.delegate = **self** **try** fetchedRC.performFetch() print(fetchedRC.fetchedObjects) } **catch** **let** error **as** NSError { print("Could not fetch. \\(error), \\(error.userInfo)") }} &amp;#x200B; This is called in my viewWillAppear and I use this in my tableView to access objects \`fetchedRC.fetchedObjects' etc. Then the fetchedRC takes care of all the updating/deletion etc. automatically. Can I partition the fetchedRC and will this update everytime a change is made?
Use the scroll view delegate and the uicollectionview‚Äôs visible cell function?
I created a Swift Package that allows developers to spit up their Massive App Delegates. &amp;#x200B; It's the latest in a long line of attempts to solve this problem, and I hope it helps promote better architecture in swift apps. [https://github.com/steg132/IntermediaryAppDelegate](https://github.com/steg132/IntermediaryAppDelegate)
I‚Äôm so glad they fixed that.
Same, make so much more sense now
No more arc4Random?
[https://xcodereleases.com/](https://xcodereleases.com/)
Its there ‚Äúunder the hood‚Äù, on the platforms that use it. We just don‚Äôt call it directly anymore
Oh yes! I'm so glad I'm not the only one üòÅ
If you made Request generic: Request&lt;Output&gt;, then it should be pretty easy to add support for JSONDecoder at least. I my API code I would have RequestInput for encoding initial conditions and RequestBuilder&lt;T: Codable&gt; which included RequestInput + parsing method + execution methods. Also I don't see why RequestView would need anything besides Result&lt;T, Error&gt;. Maybe even T would be enough if you provided some kind of default view when request in pending or in failed state. I think something like this would be ideal: func getTodos() -&gt; Request&lt;[Todo]&gt; { // implement in your model layer } RequestView(getTodos) { data in // data is never nil here because RequestView takes care of other states // I think it's reasonable for a lazy programmer to show the same loading indicator // or "Try again" button in every RequestView, unless specified otherwise. Text(data) }
How would you write unit tests for this?
I have been programming in SwiftUI and any advice on using that is premature, as in beta 3 many things are still broken and errors from the framework coming that you can‚Äôt affect.
I don't agree, it's depend of what you're trying to do. Even right now, with some small issues, SwiftUI is very very efficient for iterating fast on a project. You can swap components just so much faster than on UIKit, it's crazy. If you're already familiar with functional programming it makes everything a breeze. In two months this is going into production, and it'll be the default option for many developers and new project that don't require legacy OSs. I think right now is the prime time to start getting familiar with it. I've made a ton of feedbacks to Apple, endless list of what's missing, despite all of that, UIKit/AppKit now feels ancient. I maintain various applications where I need to support iOS 10, 11 and 12. With ton of legacy code, would trade it for SwiftUI unpolished beta state any day.
I thought for a moment to be in /r/ProgrammerHumor
What I had difficulty with was getting that generic to be optional. So I wanted to instead put the generic on a callback, `onObject`. But then I couldn‚Äôt get it to work with `JSONDecoder`
I have some tests in the project if you want to take a look. They‚Äôre not great tho
This is the source url [https://github.com/bq/mini-swift/tree/5.1](https://github.com/bq/mini-swift/tree/5.1)
I'm working on the 5.1 revision of Mini, a Flux-based architecture, using SwiftUI as a first class citizen: [https://github.com/bq/mini-swift/tree/5.1](https://github.com/bq/mini-swift/tree/5.1)
Turns out the code is in Objective-C... And the senior looks at you like a dumbass.
I found the senior dev! ^ #salty
Still using C APIs make me cringe in a language like Swift (knowing that the compiler is written in C++)
Here is a version from WWDC2015 `func primesMutating(to n: Int) -&gt; [Int] { var numbers = [Int](2 ..&lt; n) for i in 0 ..&lt; n-2 { // guard let prime = numbers[i] where prime &gt; 0 else { continue } let prime = numbers[i] guard prime &gt; 0 else { continue } for multiple in stride(from: 2 * prime-2, to: n-2, by: prime) { numbers[multiple] = 0 } } return numbers.filter { $0 &gt; 0 } }`
I haven't used collectionView, but I use \`didEndDisplayingCell\` and \`willDisplayCell\` to track the end of a Table View and then scrolling back up to show an indicator that there are more items to see.
Where do you get your assumption that it‚Äôs going into production in two months? Apple may decide to keep it in beta for another year as this is such a big undertaking.
I just finished an implementation of the [OPAQUE Protocol](https://github.com/GeorgeLyon/Opaque) and am working on standing up a small web service with Swift NIO and FoundationDB that uses OPAQUE for authentication.
If you mean NSTextInput, that's [slated for deprecation](https://developer.apple.com/documentation/appkit/nstextinput), but it's only used by NSTextView. NSTextView's superclass is NSText, which has a [string property](https://developer.apple.com/documentation/appkit/nstext/1528601-string).
I‚Äôm very much still fumbling around with SwiftUI, but over the past couple of days I took a shot at using it to build a prototype of a view controller redesign that‚Äôs been repeatedly pushed out due to its complexity, and to my surprise I was able to get it to 90% of where it needs to be in around ~260 LOC, despite the bugs and missing bits in beta 3. Doing the same in UIKit would easily take over 5x the code and not be half as flexible (though to be fair, the new collectionview/tableview APIs in iOS 13 would bring that number down a fair bit). Depends on your situation for sure but in my case I‚Äôd very tempted to just live with the missing features/bugs for the first year or so just to be able to use SwiftUI sooner, and this is coming from someone who started tinkering with Cocoa back in 2001. It‚Äôs that large of an improvement.
I've used React, and I can't say I agree that AppKit feels 'ancient'. AppKit feels fine, but a poor fit for Swift. But SwiftUI would make a poor fit for Objective-C, too. And all the C libraries I have to use also feel like a poor fit for Swift. Calling into another language, like JavaScript, can be even worse. You can't just take a framework and move to a different language and expect it to be a great developer experience, especially across the dynamic/static divide. Nobody should be surprised by that. Apple has already spent years redesigning Foundation to not suck under Swift. These cycles never end. Every few years, somebody re-"discovers" the idea you could write something only once and have it work anywhere ... and then people get annoyed that it's not native enough, and make one that is unabashedly non-portable, and people like that better for a while. Then the cycle repeats.
And when talking about missing features, you can just use Representable to bridge UIKit/AppKit components.
Do you mind posting your code and the assignment description where you are facing issue with?
I believe I just sent a picture below as to where I'm messing up. As for the assignments description, I'm suppose to create a emoji dictionary. It's an assignment in the App Development with Swift 4th Edition book.
NotificationBanner was inspired by a very simple observation. That observation was that there simply wasn't a good library out there that allowed an extreme amount of customization and flexibility and was easy to use. Thus NotificationBanner was born! A few good things have came from it so far. The first being that it was a former #1 trending Swift repo for several days which is always fun to be able to talk about. But most importantly, it has opened a lot of doors for me career wise. Employers love seeing potential employees work on open source software. They love it even more when that person is responsible for creating and managing a very popular one. The only negative side is finding the motivation to constantly update it and address any issues that come in from other developers. This can be overwhelming at times. All in all, it has been a great experience for me and I'm extremely glad I did it.
Could someone help me out with writing the Function Builder playground page?
Imagine being mad there‚Äôs a much more accessible way to achieve the same function üòÇ
Actually, this is what the Timer docs say: &gt; A timer is not a real-time mechanism. If a timer‚Äôs firing time occurs during a long run loop callout or while the run loop is in a mode that isn't monitoring the timer, the timer doesn't fire until the next time the run loop checks the timer. Therefore, the actual time at which a timer fires can be significantly later. See also Timer Tolerance.
A more mathematic approach may be more helpful here. Let's consider the numbers between 1 and n. In Swift, we can express this as a range: let numbers = 1 ... 100 We only want to have the prime numbers, so we can use a filter operation. It takes a sequence of numbers and for each number decides, whether to keep it or to discard it. let primeNumbers = numbers.filter { number in isPrime(number) } So now we need to define the function `isPrime`, which takes an integer argument and returns a boolean, indicating, whether the number is prime or not: func isPrime(_ number: Int) -&gt; Bool { ... } In this function, we define the set of numbers between (not including) 1 and number. let testNumbers = 2 ..&lt; number If this sequence of numbers contains any number such that `number` is a multiple of it, we know that `number` is not a prime. return !testNumbers.contains(where: { testNumber in number.isMultiple(of: testNumber) } One thing that we need to keep in mind, is that `2 ..&lt; 1` crashes, so we need a special case for 1 and smaller numbers. To wrap it all up: func isPrime(_ number: Int) -&gt; Bool { if number &lt;= 1 { return false } else { return !testNumbers.contains(where: { testNumber in number.isMultiple(of: testNumber) } } } func primes(upTo n: Int) -&gt; [Int] { let numbers = 1 ... n let primes = numbers.filter { number in isPrime(number) } return primes } To print the primes, we can map them to a string and join them together with a comma. The map function takes each element of an array and applies a given transformation, here it takes the number and creates a string out of it. func printPrimes(upTo n: Int) { let primeNumbers = primes(upTo: n) print( primeNumbers.map { number in String(number) } .joined(separator: ", ") ) }
I'm having problems completing the Emoji dictionary program for the App Development with Swift assignment 4.6 I believe. I've tried multiple times but can't seem to complete the assignment. are there any tutorials better than the one given in the book online?
Can you describe a little bit about the project?
I come from Python where I do Machine Learning stuff but Swift for TensorFlow caught my attention. I've been loving swift, feels amazing to have a compiler again but still be able to get things done without much hassle. Anyway, this is my first opensource project in Swift, feedback appreciated!
So it would be a social media app, but more for artist of all type of arts and it would be more for people who are looking to collaborate on projects with others, it would also have its own marketplace for freelancers and stuff.
You are asking the JSON Decoder to decode a single instance of [OtherUsers.Pet](https://OtherUsers.Pet). Instead, you want an array of pets: \`let json = try JSONDecoder().decode(\[OtherUsers.Pet\].self, from: data)\`
‚Ä¶ but this is /r/Swift!
A long time ago I used [usleep()](http://man7.org/linux/man-pages/man3/usleep.3.html), but I don't know if it's available in Swift.
Did you by any chance put a NavigationView inside a NavigationView?
The example is here: https://developer.apple.com/tutorials/swiftui/composing-complex-interfaces I went through the tutorial but the result don‚Äôt look right. The earlier tutorials I did came out looking correct. So I run the completed project from that tutorial. It‚Äôs looking wrong. Is the bug in the example or in SwiftUI?
See my comment below
GKSavedGame
How can I show table view controller (which is in tabbar and navigation controller) after location permission allow button tapped? I asked a question on stackoverflow and did not find any solution. Link in below: https://stackoverflow.com/questions/57039406/tableviewcontroller-does-not-showing-after-location-permission-allowed-in-alert?noredirect=1#comment100612778_57039406
I your LandmarkList-View there should not be a NavigationView, is that right? What happens, if you remove that NavigationView?
It‚Äôs available
&gt; It‚Äôs already a mostly platform agnostic UI framework. ... a unified UI Toolkit for all Apple platform [sic] Music? Oh, we got both kinds. We got country *and* western! In case that's too subtle: there is a *way* bigger market for apps for iOS+Android or Mac+Windows+Linux or mobile+web, than for iOS+Mac. Until someone gets SwiftUI running well on any other platforms, it's hard to call it "platform agnostic". There isn't even an officially supported Swift *compiler* on Windows yet. There's no compiler that targets JS, either, so it's a non-starter on the web. SwiftUI may be the future, but it's going to remain the future for a while. &gt; It‚Äôs not just hype, or a phase, this is the future of making applications on Apple platforms Did you call out Storyboards for being "just hype" 8 years ago, or did you buy into those being the future, too? Because I can still count on the fingers of one hand the number of .storyboardc files in my Applications folder today (spoiler: it's 5). While Apple was producing cool WWDC videos showing how to make the next generation of "modern" Cocoa applications with it, they weren't actually using it themselves at all. I really don't feel like jumping into a new technology before even Apple has. I'll let other people be beta testers.
You're essentially asking someone to build you an application for free. And you get to design it. Do you have any experience in UI? Sketch? At least you know a social media app is a lot of work but also please learn the difference between there and their.
Are we allowing image memes now? Historically, that's a quick way to kill a subreddit. There's a reason so many ban them.
Why do you have to be a dick? Also why comment if your gonna be useless. I was told to post here and ask for people who are looking to learn more and work on a project for free to either get experience or build there portfolio. And again I would be putting whatever knowledge I could into this as well I‚Äôm learning swift and Xcode so I do have some experience that I can put in as well. I have a idea and the UI and everything already planned out just need helping building it if that‚Äôs not you then move along
Yeah I saw that, but I haven‚Äôt seen any better mechanism yet. Any tips ?
Yeah, but I‚Äôm looking for a more ¬´ Swifty ¬ª way to do this.
Grow up. You're so far over your head you don't know constructive criticism when you get it. Asking for help but not taking ten seconds to proof read your request shows you're not serious. Go build something small and you'll quickly realize how ridiculous your social media app idea is for someone of your level right now.
Unfortunately, I don't have any tips to offer you. Any time I've used timers, even being half a second late would have been no big deal for my needs. I just didn't want you to go into it thinking that you could rely on 100¬µs precision.
So it has the unneeded MavigationView there still. I removed it, added it to Preview. that should not be in the ‚ÄúCompleted‚Äù project, right? Now Preview look right. But when I run and click to the LandmarkList view, it crashes EXC_BAD_INSTRUCTION on line ‚Äúclass AppDelegate‚Äù Console shows: display_timer_callback: unexpected state (now 7c2c3b91c151 &lt; expected:7c2c3c7f8c45) Add the NavigationView back, runs fine same as before. :(
So it has the unneeded MavigationView there still. I removed it, added it to Preview. that should not be in the ‚ÄúCompleted‚Äù project, right? Now Preview look right. But when I run and click to the LandmarkList view, it crashes EXC_BAD_INSTRUCTION on line ‚Äúclass AppDelegate‚Äù Console shows: display_timer_callback: unexpected state (now 7c2c3b91c151 &lt; expected:7c2c3c7f8c45) Add the NavigationView back, runs fine same as before. Doesn‚Äôt make any sense why the change would crash. :(
Holy shit when did they add this?
Another senior dev, I see!
I‚Äôm not really sure how to solve it but my gut feeling tells me that maybe using a SerialQueue using Grand Centeal Dispatch might be able to solve this. Ray Wenderlich has a really good tutorial on GCD [here](https://www.raywenderlich.com/5370-grand-central-dispatch-tutorial-for-swift-4-part-1-2).
Also forgot to post it in April after you wrote it, lol. Fuck off with your blogspam!
I have been building a restaurant delivery app using Firebase + iOS. I saved tons of time using Firebase for Authentication etc, Still in progress integrating Stripe for payments with cloud functions. So far, I like it...
.randomElement() ?
Swift can‚Äôt directly call C++, so you would need to write a simple C wrapper to fix that. Otherwise, to get timing that precise, you‚Äôd probably need to use a combination of usleep and clock_get_time on the monotonic clock.
If you don't have designer(s) guide you how to make your app look nice then I think the login page is the least of your problems.
This is such a simple but clever idea. Am I right in assuming that EasyGit runs as a server on a local machine and stores the repo in iCloud? I've wanted a simple solution for private repositories, so this might just be the thing for me.
I'm currently learning about Combine and SwiftUI by building an iOS music player on top of MusicKit. It will probably end up being something disposable, but it's a good learning experience.
You‚Äôre also going to need a backend developer to create the storage, user accounts, messaging, and other web calls. The iOS development is just one part of the puzzle. You may want to define if you‚Äôre willing to pay or if this is open sourced
Implicit optional unwrapping of a `T? ` to a `T` only happens in places where a `T` is required (by a type annotation, type of a function param, etc.). The context you're trying to use it in is good with any type, so no unwrapping is done. The same would happen if you passed it to a function that requires an `Any`, for example
Last year
Push up your code to github or somewhere.
Ok this is indeed cool, but imo using memes in this subreddit is totally going to make it turn into trash really quick would love to know what others and the mods think
The. code is here: https://developer.apple.com/tutorials/swiftui/composing-complex-interfaces If you don‚Äôt mind try running it. Open the Landmark project inside the ‚ÄúCompleted‚Äù folder. Removing the unneeded NagivationView in LandmarkList view body. To make Preview work, you can wrap that in a NavigationView.
This is not very clear unfortunately. I think that a bit of code should help both sides. Any generic solution we can provide here may confuse you even more. With some code, we can tell you exactly how to do it, and this will hopefully help you to understand the general picture.
This looks slick, I'll definitely play around with it! Unrelated, what did you use to bridge the gap from ML in python to swift? I'm learning swift now because of TF, would appreciate any recommendations!
I'm new. From what I heard iOS restrict background / off-screen processes severely. Is it realistic to create a tracker app which would appraise user location every 1-5 minutes while the phone is in pocket and the screen is turned off? If positive - any good tutorial on this functionality?
So, I was pretty curious about this because I've been looking at these samples recently as well (you're actually further along than I am :P), but after digging around, I did get it to work. It's a combination of the completed sample either being wrong or targeting a different version and the fact that Xcode 11 is still in beta. You do have to remove the extra `NavigationView`, just as the sample asks you to do, but there's also an important note in Step 4 of Section 5: &gt;**Step 4** &gt; &gt;In Xcode 11 beta 3, the LandmarkDetailview doesn‚Äôt automatically access the UserDataobject in the view hierarchy‚Äôs environment. **The workaround for this is to add the environmentObject(\_:)modifier to the LandmarkDetailview.** It sounds like at some point, child views will automatically get access to environment objects, but for now we need to manually supply them. However, if you go to `CategoryHome` class in Home.swift, you'll notice that it is *not* supplying `UserData` environment object to `LandmarkList`. That's why it's crashing. Add `@EnvironmentObject private var userData: UserData` to the `CategoryHome` class just like in LandmarkList.swift, and then give `LandmarkList` a copy in the body of `CategoryHome`: E.g.; change NavigationLink(destination: LandmarkList()) { Text("See All") } to NavigationLink(destination: LandmarkList().environmentObject(self.userData)) { Text("See All") } Hope that helps.
I'm getting "Your request produced an error. [newNullResponse]" on the link.
Thanks! About the gap, hard to say exactly, for me Swift initially feels like a good combination of C# (type system) and Python (syntax), enums are a bit like Haskell unions. I haven't read a book or anything special, I think that speaks well of the language, the hardest part has actually been setting a productive environment on Ubuntu, Swift still need love outside of XCode! Good luck!
That is weird. I didn't change anything but just replaced the link and it seems to be working now. Thanks for the heads up.
You can probably use Swift Forums for that
Not sure what your experience is, but you may want to [read up](https://stackoverflow.com/questions/748175/asynchronous-vs-synchronous-execution-what-does-it-really-mean) on how asynchronous code works. This is what is happening in the example you provided: 1. A `dataTask` is created with a `completionBlock` 2. This `dataTask` is kicked off with `dataTask.resume()` 3. `dataTask.resume()` does the network call on another thread and the code in `networkCall` continues 4. For sake of example, let's pretend this network call takes 10 seconds 5. In the meantime, the rest of your code executes 6. `jstring` is returned with the initial value we gave it, an empty string, it has not been changed yet because the network call is still happening 7. We're back in `submitButton` and response is set to what we just returned, still empty string. 8. We print that 9. ... ten seconds later the network call completes and we run the code inside the `completionBlock` 10. This sets `jstring`, but that doesn't matter anymore because we already returned in `networkcall` 11. `print("jString: " + String(jString))` happens, which has the data you are looking for Is there a particular reason you want to handle the response immediately after? The reality is that the network call is asynchronous and we can't do anything until it returns. This may be what you are looking for tho: func networkCall(completionBlock: (String) -&gt; Void) { let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -&gt; Void in // ... completionBlock(jstring) } } And then use it like this: func submitButton() { networkCall() { response in print(response) } } Using completion blocks like this is the native Swift to handle simple asynchronous tasks.
LOL.
Ah. Thanks üëçüèæüëçüèæ for unraveling the mystery! Did someone at Apple uploadEd the wrong copy? So strange‚Ä¶ I was bitten by the same missing environmentObject in Preview. Preview just crash. I hope Apple will tidy thing up nice soon.
If there isn't a Swifty way to do it, use what works. Don't use something because it's "Swifty". Also check out timer granularity. You want to make sure that any sub ms timer can only vary so much for it to be reliable.
Just save the indexPath in a singleton container as a property and access that property in another class. It's that easy.
Your previous link missed id part of the URL.
My app does not get an altitude when you press any buttons. It is a calculator for providing you with an average gradient based on cues you input. Alternatively it computes elevation gain from a treadmill activity based on user inputted data from the treadmill. It is not a live activity tracker. Regarding your question. I am not sure. I have not had to research that.
Maybe a closure could help you. In the UIView Class you could create a var or let For example: //In UIView class var myClosure = ((IndexPath) -&gt; Void) //when you call it in the UIView class myClosure(yourIndexPath) //Call it like this in your desired viewController with the instance of the UIView yourView.myClosure = { indexPath in //code goes here }
can we get a sneak peek at what it looks like?
That's right, EasyGit runs a local Git server on port 9418, so you can talk to it with any git client using the git://localhost/foo scheme. Then it uses CloudKit to store the git objects in iCloud. Since CloudKit uses it's own entitlement, EasyGit needs no entitlement for outgoing network requests at all, so you can be sure that there are no 3rd party servers involved, no tracking and no analytics at all.
Sure, but you have to sign an NDA and a Non-Compete, because once you see the app‚Äòs brilliance, you will want to steal it right away.
Hi, this will be screenshotted and crossposted to /r/ChoosingBeggars, mark my words. To give some serious advice: Get money and hire someone then. Go pitch your mockup to investors, and see how much meat there is to your ideas. What you‚Äòre offering is neither compelling nor fair to developers. You‚Äòre asking this community to work on your idea, and maybe get paid once the stars align. Also, (and I‚Äòm just assuming), your app has probably some froofy Networking components to it, which means that the UI itself isn‚Äòt even the most pressing issue. Your mockup isn‚Äòt as valuable and important as you think.
What exactly are you talkign about? Are you in the right sub?
Greetings from a person who saw this post while waiting for the build process to be completed.
yeah good luck getting someone to do this for what is effectively free.
I want an option to make compiling really visible, like in a hacker movie, so it's obvious to my boss that I'm actually working. It should announce things as well, in a weird androgynous synthetic voice. But not complete "polarizing the hull" Star Trek techno-bullshit, my boss learned to develop in the MS-DOS era. So it's got to be believable. *"Compiling terminal output to the kernel"* *"Scrubbing the pre-build hash tables"* *"Authorizing fault registers for 64-bit data paths"* *"Datamining system paths for USB transfer"*
Get back to work!
Is FB6692656 the ID to file a duplicate?
&gt;the buttons shift a bit to the right so they aren't static, they always move when the counters change from 0 to 1 or 9 to 10 etc... &amp;#x200B; &amp;#x200B; sounds like your counter label has no static width an the icon is bound by a static space next to that label. if the width of the label changes it will also move the icon. try a static width for the label.
No, I thinks that‚Äôs the ticket.
You should wait for 10 years to get the comment for that.
should be allowed. I have some apps installed that track running/cycling and they work when the phone is in standby/screen-off. &amp;#x200B; I don't know how, though.
Yep, looks like it
Now that you have posted it online, it will never happen. Sorry, but that's what happens too many times. &amp;#x200B; I hope that I am wrong.
Xcode already gives you a notification when builds finish though
A yes. I misunderstood.
you‚Äôd get a push notification of ‚ÄúBuild Succeeded‚Äù if Xcode isn‚Äôt the currently active window
Yes, I know. But this way you can manage your build times much better, I think, as you can follow the progress from when Xcode is in the background. Browsing reddit in builds is a delicate time management issue.
no problem
ü§£ü§£ü§£
This was the answer I was looking for thank you.
I love Apple products with passion but their stuff for developers is so bad that I am sure satan runs things there. Xcode is the worst IDE I ever used. Not even 1990 Visual Basic was so bad.
*‚ÄùHacking the Gibson*
Pass the item, not the index path.
https://xkcd.com/303/
How large does the project need to be for this to be an issue, and why can‚Äôt parts be independently compiled for the sake of testing?
How long does a build take for your project.?
too damn long
I love their development tools. Could they be better? Sure, but that does not make them bad. I also love the price. I remember when you used to have to pay thousands for development tools.
As a former Apple engineer who spent 10 years there I can assure you you‚Äôre wrong in this case. üòé
Add a build script that calls an AppleScript using the say command.
Yup.
I‚Äôm going to guess you‚Äôre trying to push a VC from a thread other than the UI Thread.
No... I also thought about that. I call DispatchQueue.main.async before any push actions
Then you need to show some code.
And takes forever to compile the first 30% and last 1% anyway
OP (Endtest) is spamming up tech subs, every day with multiple accounts [1,](https://www.reddit.com/user/boss_scarbos) [2,](https://www.reddit.com/user/dragnea_presedinte) [3,](https://www.reddit.com/user/llupei) [4](https://www.reddit.com/user/wernerklaus), [5](https://www.reddit.com/user/jos_cu_klaus), [6](https://www.reddit.com/user/sa_vina_werner), [7](https://www.reddit.com/user/ihavelepower), [8](https://www.reddit.com/user/viorica_presedinte), [9](https://www.reddit.com/user/werner_sclavul), [10](https://www.reddit.com/user/basist_infect), [11](https://www.reddit.com/user/felix_presedinte), [12](https://www.reddit.com/user/werner_la_puscarie) ultimately in an attempt to make you pay money for the service he runs (endtest). [This is the kind of person you're dealing with here](https://imgur.com/xyfZ59P) Still want to give endtest money? **Vote and report accordingly.**
Yes. I mean once you are in simulator and you click on the background, the page goes to the previous one. Like in this app screenshot if you click on the green backgroun: [https://imgur.com/a/dBFqiy5](https://imgur.com/a/dBFqiy5)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/1aZtJfX.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme)
That is impossible to tell without any code and without knowing what your views are
Yeah but you don‚Äôt wanna be halfway through a 5000 word TIFU when your build finishes
A development tool like decent MacBook for 2500 dollars?
Such drama. You can develop on a low end MacBook with no problem.
I've published the part 3 of my journey into making a full featured SwiftUI only app. I'm here if you have any question!
Also: "A standard Visual Studio Enterprise subscription with MSDN costs $5,999 for the first year and $2,569 annually for renewals." LOLOLOLOLOL
Just keep that part of the Xcode window visible? It‚Äôs like 30 points tall
Not an answer to your problem but you might want to look into DispatchGroups to avoid this callback hell. Might as well guard the currentUser != nil condition.
Coding with only one monitor?
I set mine to make a noise for that and for build failures as well. A good ping noise to alert me that it‚Äôs time to switch back to the simulator.
maybe i don't want to endure the temptation. i don't want to see it anymore.
As in 10 years is optimistic and xcode is deprecated before anyone even reads this request?
Pretty sure enterprise is, as the name implies, for enterprises and they have cheaper and free versions for your average coder and small business. So...
No, as in the Xcode team is epic, they read reddit, and they‚Äôre probably already talking about how to do something like this :)
Tbh I wouldn't rely on any software sub-millisecond timers on platforms that don't run a real time OS. The kernel schedule was designed to efficiently juggle user processes, not hardware protocols. Perhaps there's a hardware interface that can handle this, like a hardware PWM or signal generator.
Individual is a $45/month SUBSCRIPTION. Subscription! LOLOLOLOLOLOLOLO
1. Any relatively complex enterprise app should do. 2. Laziness.
You only need one if it's an ultrawide. üòÑ
Xcode isn't that bad. You just need a better machine. If you run it on an HDD, expect to have nightmares.
Then you still have windows side by side üòâ
I'd be surprised if there were any developers who didn't have dock hiding turned on
Still cherry picking there aren't you... And even the full versions MS are throwing at small businesses, startups and indies through various programs. And if you need the full version then you should be making that money back. It's well worth it. But very few need that version and again, if they go, they know it's worth it. It's like complaining about the price of final cut pro when there's much cheaper and free editors. Comparing apples and oranges and cherry picking the oranges on top to skew your case.
He specially built big project and is using low-end cpu so he can spend whole day enjoying our community :bigbrainemoji:
&gt; they read reddit While they build? Could imagine you could get somewhere while waiting for Xcode to compile.
Frog blast the vent core.
I have an app that needed relatively precise timers, so I spent some time investigating a few years ago. I ended up using a \`DispatchSourceTimer\`. You can initialise it with a "strict" setting that would try to force the least amount of leeway, but the system always has final say. Drop this in a playground and see if it would fit your needs. ``` let queue: DispatchQueue = DispatchQueue(label: "timer.queue", attributes: []) let timer: DispatchSourceTimer = DispatchSource.makeTimerSource(flags: DispatchSource.TimerFlags.strict, queue: queue) timer.schedule(deadline: .now(), repeating: .milliseconds(100)) timer.setEventHandler { let current = CFAbsoluteTimeGetCurrent() dump(current) } timer.resume() ```
I already intend to use a hardware device for receiving messages (CAN Bus messages). These messages can have a periodicity of around 10ms, or even shorter. The timestamps are precise up to 10us. I only need to be able to send them at 10ms +- 500us.
Thanks for te tip. I will try that !
Hey, I‚Äôd be okay with that.
What if want to write some code in a coffee shop (I do it sometimes)? You can‚Äôt bring a second monitor with you, and if you did, people would just look at you weird.
You could always configure a shell script at **Run** within **Preferences &gt; Behaviors.** &amp;#x200B; I configured a script to focus my browser in **Build &gt; Starts**. Then, a script to focus Xcode on **Build &gt; Fails** and **Running &gt; Generates output.** &amp;#x200B; The scripts can be something like: &amp;#x200B; build\_started.sh #!/usr/bin/env zsh open -a /Applications/Firefox.app build\_finished.sh #!/usr/bin/env zsh open -a /Applications/Xcode.app You can make it play a sound, song or anything else you can launch from command line whenever your build fails or generates output...
So many people complaining. I don‚Äôt think the OP is saying, xCode is unusable unless Apple adds this. I think the OP is more like, ‚Äúyou have some of the best engineering teams in the world, WHY NOT, add this feature. Let‚Äôs not forget, they already have the process indicator in xCode when it‚Äôs in the foreground, it should not be that hard to add it in the dock.
IPad is your second screen. And that's not the place where you care about the time before you get a notification anyway.
How has it gone? I'm in a similar situation (I've been taking the books).
You are definitely not alone. We all feel that way every now and again. My suggestion: forget about courses at this point. Pick something you want to build and figure out how to make it happen. Even if you spend 95% of your time on google, stack overflow, and reddit, you will learn much more from piecing together a solution than seeing whole sale solutions in a course.
A framework (in this context) is a collection of functionality. An API or Application Program Interface is the interface for a programmer to use a framework. For example, UIKit is the framework programmers use to create iOS apps. They don't have to define every pixel on the screen at every moment, they get to use the UIKit framework to create things like a "Label" that helps display text on the screen (and obviously a whole lot more).
What specifically are you hoping to do in the app?
Well the thing that inspired this post was, I was trying to see which of my beta testers are on the newest version... had to use safari:/
I swear by Linode (host many VPSs with them). Cheap, reliable, a decent UI for managing them, and great tutorials. [https://www.linode.com/?r=3a282fce290fba594d5f0656ea8da396aa910fa8](https://www.linode.com/?r=3a282fce290fba594d5f0656ea8da396aa910fa8) (Yes that is shamelessly a referral code)
Ok ya, I think that is the one lacking aspect of the current app (TestFlight management). I don't see any reason to make it full featured, but I think beta management could be useful.
Great answer.
I guess my point is, why not. The data is there on their servers. This is one of the biggest software companies in the world. Why not make your apps have all the features of their corresponding web apps, especially when this a tool for developers.
I'd rather they spend their time/money on making and maintaining other actually useful software :). Even the biggest companies in the world have to make tradeoffs for what they work on. Software should be written to make the best use of the platform they are targeted for. They could make a full featured Final Cut Pro for iPhone, but it would be pretty useless because advanced video editing requires a big monitor and precision control.
I don‚Äôt think you can compare the two to be honest. I look at App Store connect a lot on the go. Probably more often than on my Mac. Also, App Store Connect is a super simple app. There‚Äôs no audio/video conversion/encoding/decoding, no creating proxy video. It‚Äôs literally just text from a database. You could put a team of interns on it and have it done in 48 hours.
Thank you! I think I understand now
my suggestion is to stop using tutorials and try to make you own project. you will be stuck but that's normal. try to problem solve one issue at a time and don't worry to much on whether you are setting up your project incorrectly etc. just make it the way you figure out on your own. it will take a long time to do so, but your brain will be engage and you'll start to think like a programmer. as you learn new things you'll be constantly going back and revise/refactor what your initial solution was. maybe even rewrite your whole up again. there is no one single way of completing a task, and you'll learn a lot from making mistakes. you'll always need to reference the documentation, it's silly to try and memorize everything and everything is contstantly changing. but if you work a project that is unique enough, then when you seek out solutions, you won't be able to just copy and paste because you'll need to adapt code to your own needs.
Does this cover the sim team as well? I know (-ish) someone in the sim team who's pretty cool!
&gt; If you run on an HDD, expect to have nightmares. Same is true for most IDEs I've played with
Like i said, I hope I‚Äôm wrong.
After I upgraded I noticed various things around my system appeared bigger as well.
I was also having problems going through the tutorials. They were easy to do but nothing really sunk in. It took me probably 5 or 10 times longer than it should have for the app I built and there was a lot of time on stack overflow. However I walked away from that project with a much better understanding than I got from any of the tutorial apps.
Yeah I'm seeing the same thing. They're the only two warnings left in my project.
Thanks for the response! I think I‚Äôm going to just jump into a project but do you think I might as well finish the book, or should I just not bother?
My notifications is always disabled on mac because messages/other apps are distractive.
There are two common and slightly different character encodings used after capital Z. Most places use \`+\` and \`/\` but another common encoding used for URLs uses \`-\` and \`\_\` instead. There may be a mismatch. What are the differences?
Whenever I learn a new language, I always just jump into a small personal project. Books and tutorials are great to reference when you hit a problem developing (and you'll hit tons of problems). But are you really going to retain most of a book front-to-back? I'm too dumb for that. With a personal project, you'll feel a bit more invested since it's *your* project. You'll learn to troubleshoot one problem at a time. I think most professional devs spend a good chunk of time every day googling "how to program XZY". You'll get a real-world education by building something out, then realizing all the mistakes you made.
I saw that you said this is your first programming language. imo Swift isn't the most beginner-friendly, especially since you'd also have to learn how to use Xcode and UIKit which is *a lot* to take in. If you're not in a rush to learn App Development, can I suggest learning a language like Python or Ruby (or even JavaScript). This would allow you to focus on learning core programming concepts to have a stronger foundation in understanding Swift. Python and Ruby are also preinstalled in the Mac command line (though they are older versions), so it's easy to get right into it and have immediate results. If you're set on learning Swift, then I think doing a project would be most helpful because it gives you a clear defined goal to work towards.
The differences don‚Äôt really have a pattern, the strings are just similar for the most part. One thing I realized is in Swift I‚Äôm grabbing a png as a ui image and then converting it to png and then to base64 so it makes sense they could be a little different. I used an online decoder and both strings give me the correct image, but for some reason the api says my base64 string is invalid. At least I know now it‚Äôs encoding correctly, maybe I just need to use a different api
Ok cool, that does explain the differences. My guess with the API is: A) it is using a different character set B) It expects a padded base64 and you aren't padding it (some base 64 encodings require all encoded data to include a multiple of 4 characters). C) There is some other formatting problem with your HTTP request.
I have picked up Hacking With Swift every year since Swift 3. It‚Äôs never clicked. SwiftUI came out and I started poking around again. I kept getting stuck on UIs in the past and never made it anywhere. I understand SwiftUI is different and not a full solution compared to UIKit at the moment but the takeaway I want you to hear is that it motivated me enough to do something on my own. Now I have my own app as a motivation to keep learning and expanding on so when I read tutorials on a specific topic, I start to think of how it could apply to my own app. Good luck, and stick with it. We‚Äôll get through this and from what it sounds like, we‚Äôll never get away from StackOverflow. If anything, we might just get better at what we‚Äôre searching for.
This worked great for me. Thank you!
Thank you!
I thought swift needed a full recompile unlike objc
Core Image can do it.
Any chance you could interface to that CAN interface over something like USB or ethernet?
API? You mean a good library.
It's at the top of the screen so I assume it is a navigation bar. Basically, when user scroll down, those button will be shrinked and move to the navigation bar with that animation.
I think you will have to judge that one. If you are not retaining anything then maybe just make yourself familiar with the concepts in it so you can refer to them if needed. Then pick something that you want to make that you are passionate about or want to use yourself and go for it. It will be a slow process but you will get there. Afterwards, a lot of concepts will make more sense.
Nah it does incremental builds as well, though still slower I think.
Well yeah Swift is built on top of ObjC.
I think I‚Äôm weird because I just could deal moving my head all day. Went with a 4K (@1440p) instead. My plan now is to try an ultra wide but once you go high dpi it‚Äôs very difficult to go back. Other option is a larger 4K monitor but scaled to a higher res. Anyway, I tried all sorts convos with 2x1440p monitor and end up trading them.
If this is your first time learning programming, you should know that there is learning a programming language. There is also learning some development tools. These are completely different things. First, you need to learn the language and forget the complex tools e.g. UIKit, SwiftUI, or any other frameworks. You should start from something really simple programs and going forward step by step to more complex programs. Embrace the syntax, the rule, and the soul of the language. You may also start from using Swift Playground instead of full blown XCode. Or you could also start from making a console program. Once you understand the language, it's time to go further with UIKit or SwiftUI. This time you're starting to learn how to use a framework. It's quite different from learning the language. There are additional rules, limitations, new things, new concepts, etc. Now you may use the full blown XCode to help you doing many things with the framework. Programming is hard, but it's not impossible to master. Do more and more practices. Have fun and good luck! :)
Here's some working sample code in Objective-C. I leave it to you to translate it to Swift as an exercise: #import &lt;CoreImage/CoreImage.h&gt; #import &lt;UIKit/UIKit.h&gt; @interface UIImage (QRCode) // Returns UIImage of QRCode of string. nil on failure. + (nullable UIImage *)qrCodeWithString:(NSString *)s size:(CGSize)size; @end @implementation UIImage (QRCode) + (nullable UIImage *)qrCodeWithString:(NSString *)s size:(CGSize)size { UIImage *result = nil; CIFilter *filter = [CIFilter filterWithName:@"CIQRCodeGenerator"]; // Documentation says ISOLatin1 is the encoding to use. NSData *data = [s dataUsingEncoding:NSISOLatin1StringEncoding]; [filter setValue:data forKey:@"inputMessage"]; // 'inputCorrectionLevel' defaults to @"M" (medium) [filter setValue:@"H" forKey:@"inputCorrectionLevel"]; CIImage *ciImage = [filter outputImage]; if (ciImage) { // Scale the image with CGAffineTransform so the result is sharp. // Experiment shows that UIImageView scaling will blur it. CGSize extentSize = [ciImage extent].size; if (0 &lt; extentSize.width &amp;&amp; 0 &lt; extentSize.height) { CGAffineTransform t = CGAffineTransformMakeScale( size.width/extentSize.width, size.height/extentSize.height); CIImage *ciImage2 = [ciImage imageByApplyingTransform:t]; result = [UIImage imageWithCIImage:ciImage2]; } } return result; } @end
Custom uinavigationviewcontroller - I‚Äôd implement a Navbar sub view with an offset and then upon scroll reduce the offset.
Only more errors to debug
Why do all this complex closure stuff? Why not just use a count property: class FooVC: UIViewController { var count = 0 { willSet { print(count) } } func doStuffAndCount() { // doing stuff count += 1 } }
Not in this sense. Swift uses objective C runtime and APIs but that doesn't have much to do with compiling. ObjC has C-style headers which make linking and incremental changes very fast. Swift must use file modification changes, and full file pre-parsing to see which links are necessary, though I thought the whole subproject/framework was built each time
Yes ! I use the PEAK USB CAN bus interface. I read it at 1000000 bps.
 Something like: var table = [ CGPoint(x:0.1, y:2), CGPoint(x:0.2, y:2), CGPoint(x:0.25, y:3), CGPoint(x:0.3, y:5), CGPoint(x:0.3, y:5), CGPoint(x:0.32, y:4)] var sum : CGFloat = 0 for i in 2...5 { sum += table[i].x * table[i].y }
Thanks, I'll try to figure it out
I guess when the offset.y is zero you can use that to change opacity and add in the new navigation controller itembars
Can it buffer the messages, so it can loosen up your "10ms +- 500us." requirement? Oh wait, is that requirement imposed by the CAN interface, or by some design requirement to issue commands with that low of a latency?
It is imposed by myself. I will be trying to mimic a CAN node with my Mac for testing purposes. Using the same hardware, PEAK Systems have a piece of software that does exactly this : PCAN-View. All I am trying to achieve is to reproduce that software on macOS As for buffering, I believe there is an internal bufferization of messages, but I do not think we can count on that for custom periods.
You're going to need some kind of back-end service. You might find [https://vapor.codes](https://vapor.codes) interesting - you can write your back-end in Swift :)
In iOS 13 CloudKit and CoreData work together much better. While I know that CoreData is not a replacement for a fully fledged database, you could look into it and see if it fits your needs more. I recommend watching [this WWDC Session](https://developer.apple.com/wwdc19/202)
üòÇ I first open reddit while waiting for the Xcode build process to be completed, and I saw this post.
This is the reason why JS people came up with Node
Thanks, I looked at Vapor a while back, just to see what it could do (I've done a lot of python-based backend stuff, Django and waaaay back, Zope), but it was overkill for what I needed, tbh, I think I ended up with a static HTML generator in the end. I was trying to emulate what DayOne does - it has a Mac and iOS App, and they communicate quite nicely. Not written a native Mac App before, so may well end up using a Vapor backend. Thanks again!
Thanks very much for the pointer, I had always thought CoreData had a reputation for 'here be dragons', but if it's working better under iOS 13, then it's definitely worth a look see! Loading up the WWDC session now, thank you again!
I have been trying to save user input from a textfield that is inputted into an array of strings permanently with UserDefaults but it is not working. Is userDefaults the correct way to go?
I will try to port this to swift when I get home :)
hey man. tbh. i was in your exact position like two weeks ago. two weeks ago i was probably on my 6th week learning swift via online course. i could always do thing with their help and looking at notes, but on my own i couldnt do anything. its demoralizing and i would sit down and feel like i literally hadn‚Äôt learned anything. you will get over the hump soon. I have finally done so recently. Focus on building incredibly small and simple projects. I realized that i always felt overwhelmed when starting a new practice project because my brain didnt know where to begin to recall information i had learned. theres so much of it and the information overload just freezes you up. So try to focus on building the simplest features, the simplest idea. Eventually it will all come together. practice every single day. I have every single day this summer. doing otherwise is not an option if you want to learn. When youre on your phone, pay attention to what apps are doing when youre using them. this helped me alot and helped me understand what the general flow and structure of ios development and how things are done. , i will say something that has realllly catapulted my learning is the fact that i hve my own app on the app store(coded by professional developers two years ago) that ill be taking over soon. So I had them send me the code in advance to them sending me the whole project so i can learn the ins and outs of the code. its ao helpful because i already know exactly what my app does, every part of it. therefore its super easy to go into the code and figure out what each part does, take notes and ask questions about stuff i dont know, add my own code, etc. So id say if possible, find the source code to one of your favorite apps and try to pick it apart and understand it.
this
[removed]
Yeah, something that could help me generate QR code‚Äôs that can link to a profile page in my app...
You probably need some kind of backend with/without a database, such as [Firebase](https://firebase.google.com/). However this requires the user to signup/login. &amp;#x200B; If your data is more file oriented, then perhaps a [UIDocument](https://developer.apple.com/documentation/uikit/uidocument) / [NSDocument](https://developer.apple.com/documentation/appkit/nsdocument) combo. It's a pain to make QuickLook plugins for macOS and for iOS, so I wouldn't recommend this.
Not sure why no one is giving you a working answer but here you go, it's done in Core Image. Put this function in your code and give your app a UIImageView. Use this code to generate an image based off of whatever you want and if you put a web address in the textToEncode parameter, you can open it in Safari from the camera app. func createQRCode(textToEncode: String) -&gt; UIImage? { guard let qrCodeFilter = CIFilter(name: "CIQRCodeGenerator") else { fatalError() } guard let data = textToEncode.data(using: String.Encoding.isoLatin1, allowLossyConversion: false) else { return nil } qrCodeFilter.setValue(data, forKey: "inputMessage") qrCodeFilter.setValue("Q", forKey: "inputCorrectionLevel") //Apples default 25% medium high quality guard let qrOutputImage = qrCodeFilter.outputImage else { return nil } let scaleX = self.frame.width / qrOutputImage.extent.size.width let scaleY = self.frame.height / qrOutputImage.extent.size.height let transformedImage = qrOutputImage.transformed(by: CGAffineTransform.init(scaleX: scaleX, y: scaleY)) return UIImage(ciImage: transformedImage) }
Please someone tell me, something like anaconda will be made for swift installing and importing modules makes me nuts
Be aware, it will currently only work for Private databases. Not Shared or Public. That may come next year, but it‚Äôs a limitation you should be aware of.
To actually add the robot in "front" of the face, you first need to get the face. Apple's documentation is pretty good and they have an example project which I believe does what you're looking for. [Link to docs.](https://developer.apple.com/documentation/arkit/arfaceanchor)
In my case I always try making a crawler every time a learn new languages. But this time, I spent over 3 hours getting used to xcode and importing external modules. Even swift says module imports is static, I can't understand that even a simple crawler needs over 3 dirs with bunch of xcode, plauground, ect... even I start typing "let" It feels like swift is for only apps not general purpose programming
I agree with you.
Maybe that wasn't clear, I'm not talking about face detection I'm talking about BodyTracking in an ARView. I know how to detect faces and I do understand how to detect a person and get the ARBodyAnchor. I just don't know how to do additonal Stuff on an ARView.
Sorry was on my phone. Haven't really worked with ARKit in a while and unsure if it supports detecting human bodies in real time. You could however look into third party frameworks such as OpenCV that have a model that does this.
This is exactly what I‚Äôve been using in my app as a simplified backend, and it has worked quite well in the month or so I‚Äôve been using it.
[removed]
You are confusing Swift the language with the current challenges of developing for the Mac. Swift is not the issue, it's the fact that up until now Mac apps and iOS app were programmed differently. There were several things announced at WWDC this year designed to change this, including SwiftUI and Catalyst. Unless you need to develop an app to release commercially in the next 6 months I would focus on those two new frameworks.
Swift is a programming language not an app framework. The Mac uses AppKit rather than UIKit which means that apps and tutorials for iOS will not generally work on macOS. SwiftUI which is in beta now will allow apps to be developed both for iOS and macOS. It‚Äôs harder to find mac-specific tutorials these days simply because of the scale of iOS but use AppKit in your search terms and you might get better results.
Especially these days
&gt; And why are most of the tutorials for iOS not macOS? There are a variety of reasons, but the most significant is simply that iOS is the more widespread platform of the two. Back in November, Apple stated there were [100 million active Macs.](https://techcrunch.com/2018/10/30/there-are-now-100-million-macs-in-use/) 18 months ago, Apple stated there were [1.3 billion iOS devices](https://www.macrumors.com/2018/02/01/apple-now-has-1-3-billion-active-devices-worldwide/). Another significant factor is that there is significantly more software written for iOS than there is written for macOS. People write what they know, and when the majority of developers are writing iOS apps exclusively, their tutorials and articles will be for iOS.
Firebase it already works for macOS https://github.com/firebase/firebase-ios-sdk#macos-and-tvos
My apologies. Can I paste code directly in here? I‚Äôve realized that I‚Äôm trying to pass a parameter to a function inside an override init and that‚Äôs not working. I‚Äôve also tried passing parameter directly to override init, but not sure how to do that either.
Yes, you can post code here. You can also use https://gist.github.com.
Thanks for the response, I'm about to start working on a personal project and I haven't been this excited for a while. Im just curious though, did you finish the course or did you stop and then make your project. I'm on chapter 4 out of 6 so I don't know if I should completely ditch the book, or just finish it. And if I were to finish it I'm unsure how to balance the project, and the book.
It's actually mostly to learn about Swift closures, coming from JS. I have it really simplified, but in the case of a counter, it's nice when you have to dynamically create a bunch of counters. func viewDidLoad { counter = makeACounter(3) anotherCounter = makeACounter(5) } func makeACounter(countBy inc: Int) -&gt; () -&gt; Void { var count = 0 return { print(count) count += inc } }
Text background color is the theme specific white/black color: https://developer.apple.com/documentation/appkit/nscolor/1535446-textbackgroundcolor
Swift is a general purpose programming language. Learn it as such first. Once you understand Swift learn to use the SDK‚Äôs. In this case your best bet is SwiftUI! You can‚Äôt really expect to be able to use an SDK successfully if you don‚Äôt understand the underlying programming language it is implemented in or written for. Swift is an extremely powerful language but you can‚Äôt rely upon knowledge from other languages to get up to speed. You need to invest sometime in Swift its self.
In addition to what others have said, consider a direct iPhone to Mac connection too. I use it for password syncing so my password database never hits the internet. Apps can use WiFi, Bluetooth, Bonjour, and Mulitipeer to talk. The only really hard problem when syncing SQLite databases is what to do if a particular record is modified on multiple devices between syncs.
That train of thought is largely non sense. Swift is as powerful as any other language and is being used successfully in the server world. It is the farthest thing possible from an apps only language. What is true is that Swift is a very immature language. Think about that a bit, it just became stable a few months ago! So what it doesn‚Äôt have is a massive library of public libraries to make life easy for you. Swift could also use a more robust standard library. The problem is people look at other languages like C++ or Python and see these massive library‚Äôs of code that they can integrate into their apps and think that Swift can‚Äôt solve the same problems. They also see languages like Python with standard libraries with tailored solutions and forget that it took time for Python to get to where it is today. I really don‚Äôt see the point in comparing a language that just became stable with languages that have 2-3 decades of development behind them. Swift is very capable and as such will become as easy to use as Python as the library of solutions grows.
Sounds creepy af
You need to finish the book! However I suspect part of the problem is that you are going too fast. You need to do the tutorials but you also need to write your own code each step of the way through the book. It doesn‚Äôt have to be a complete application, in fact that might be a waste of time. What you need to do is implement the feature being discussed in your own code so that you understand how it works for you. I know back in the day, when I took my first comp-sci courses, I would write little scripts to explore every little thing covered including the simplest flow control statements. Sometimes this could go on for days for example C++ streams especially learning to format Output. The idea here is to become deeply familiar with a feature so that you can write that idiomatic code without resorting to a manual to walk you through the mechanics. By the way the suggestions to write your own app are not bad per say. The problem is you may not be ready for that right now. I have no way of knowing where you stand but getting hung up on tutorials kinds indicates to me that doing an app might be counter productive at the moment. Instead create little bits of code that help you exercise the concepts that the tutorial focuses on. At some point writing your own app makes sense as a method of learning, I‚Äôm just not sure you are ready for that yet. In some ways learning a programming language is a lot like learning a spoken language. Sometimes you just need to repeat yourself constantly to get those Funny sounds down. Eventually whole paragraphs can flow from your mind in a way that a native speaker can understand. You don‚Äôt expect to be able to rattle on like a native speaker when first learning a spoken language and you shouldn‚Äôt expect to do so when it comes to programming.
This worked well! Thank you!
I‚Äôm shooting in the dark a bit because I normally go the other way, but is `AnyObject` available in Objective C? Try switching it to `NSObjectProtocol` and see if that changes anything.
And to answer your questions, yes, it is possible. Can you verify that your Bridging Header is configured in your build settings?
Glad I could help!
You'll want to watch this [video](https://developer.apple.com/videos/play/wwdc2018/233/) from WWDC.
yes, it is :) I verified many things, found in stackOverflow :)
I think you might need protocol to confirm to NSObject.
That is a URL to a local file. You can move the file to someplace else on disk you want to keep it, or if you just want it in memory: ‚ÄòData(contentsOfURL: url)‚Äô
You can easily use firebase to sync up data between the two platforms. Really easy to setup listeners so the data is synced in real-time.
Sorry, but I use Xcode since 2008. Xcode is a piece of shit. It crashes every 10 minutes. Last week I had 40 crashes using Interface Builder and @IBdesignable. Apple sells macs with HDD. This is not an excuse to create a piece of shit IDE. I have 11 years of experience using that crap. Xcode was reasonable until release 4. Then the nightmare began.
that's what i thought too, but I'm getting error when i did \`let data = try Data(contentsOf: url)\`.
tried, same issue with file not found :(
tried, same issue with file not found :(
What error?
don't have permission to view it.
Ok, you‚Äôre going to have to copy the file somewhere into your own app‚Äôs directory (probably your cache) first because of file permissions
Ok let me try that first and I‚Äôll get back to you. Thanks buddy
You might be starting with too complex an app. You mentioned trying to make a CoreData app. CoreData is a complex framework and not recommended for people starting out with Mac or iOS development. Starting with a simpler Mac app can help you finish something and reduce frustration. Regarding resources for learning Mac programming, Paul Hudson has a book [Hacking with macOS](https://www.hackingwithswift.com/store/hacking-with-macos) that builds 18 Mac app projects. [Ray Wenderlich](https://www.raywenderlich.com) has some Mac programming tutorials, but they stopped making Mac tutorials. I have some Mac programming articles at [Swift Dev Journal](https://www.swiftdevjournal.com).
Nope it will not grant me access. I appreciate your help tho.
Oh, looks like you actually have to call \`startAccessingSecurityScopedResource\` on the URL first. [https://stackoverflow.com/questions/34636150/no-permission-to-view-document-passed-back-from-ios-document-provider-on-open-op](https://stackoverflow.com/questions/34636150/no-permission-to-view-document-passed-back-from-ios-document-provider-on-open-op) Sorry for the incorrect guesses before. I hope this one works!
Create a property on the created UIView class that's gets shown, either make it the property an IndexPath or an Int depending if you want the whole index path or just the item/section/row. When you instantiate it, set that property either to the indexPath or iitem/section/row in the new class. If you have code how you're instantiating you're UIView I can help you more. If you're showing a new UIViewController and using storyboards to do so, then you set the property in the prepareForSegue method on the view controller that is the collection view's delegate.
I got bit once, because the file wasn't in the correct target. It's not likely the problem, but worth checking.
Try making a forward declaration in your class header and importing the `-Swift.h` header in the main class.
Delete derived data
omfg yes that was it!! thx bro
happy to help!
What is meant by a private database?
&gt; CoreData had a reputation for 'here be dragons' In 8 years of development I have been lucky enough to have faced CoreData in only two or three occassions. Yes, it's not friendly at all even though through the years they tried to make it more friendly.
You dont need a sign in in some cases. Maybe my comment from some time ago will help? i just thought of it, but you could use anonymous... https://www.reddit.com/r/swift/comments/9twt61/cloud_db_firebase_w_out_sign_in/e8zzm5f?utm_medium=android_app&amp;utm_source=share
i finished the course. no point in not finishing
Aha, thanks. I didn't know that.
The lesson is here: https://developer.apple.com/tutorials/swiftui/working-with-ui-controls Again, it needs fixing up to run. See this: https://reddit.com/r/swift/comments/cdlpf1/apple_swiftui_tutorial_composing_complex/ Couple of problem: on the ProfileEditor, the ‚ÄòDone‚Äô button on left should be Cancel. It brought up by a PresentationLink in CatagoryHome. The ProfileEditor can only brought up once. Once it‚Äôs dismissed by swipe down, it cannot be brought up again clicking the Edit button in ProfileHost. The ‚ÄúCompleted‚Äù project from the tutorial exhibit the same problem. What could be the problem?
This is super out of scope for Xcode... but honestly i wish it would automatically switch to my browser while building/switch back when done. If I have to work on any client projects that use Cocoapods it always takes 3-5 mins to build. Thats a really long time to remember to come back. I hate cocoapods.
A large project where every variable has been Typed by the developer (instead of letting the Swift compiler determine what every type is), it will build unbelievably fast. &amp;#x200B; Work on an "enterprise-level" app with a bunch of Java or C++ developers that don't use types anywhere (because they are excited that they "don't have to").... and it will be slow as all hell. Also Cocoapods and RxSwift. Lots of apps are poorly written, using 20-30 cocoapods just to use one or two methods from each. RxSwift seems to confuse the hell out of the compiler and break syntax highlighting. My xcode is usually grinding anytime i open a new file in an Rx heavy app. Anything like that can take up to 10 mins to build. My prime examples of these from work are the simplest apps you could imagine, like 3 views. The sad fact is that this is most apps on the market, and most apps made by "professionals". Just do whatever HN tells you to.... it will be fine i promise... jk lol
You might solve this problem most efficiently by running OCR over the image, then searching the results with the user-inputted string. The way you describe it, it might be more complicated to approach this as an ML problem. Others might have a better idea though...
In my experience it depends on how much you are relying on the compiler to determine types. If it has to figure it out through 3-4 layers of classes, its just going to rebuild everything. If your variable declarations/method declarations/closure aliases are all well defined types, it usually builds very fast.
Callback hell is only called a hell if you start chaining a ton of callbacks. Reasonable callbacks make life easier and save a ton of boiler plate code. It's also pretty explicit. You can follow the stack to see what called your callback and why. The first example is great. Having separate logic for success and failure makes complete sense. You can reuse the failure or success callback. I use very similar code in most of my apps: func apiGalleries() { weak var weakSelf = self let request = RestkitRequest.init(.GET, mapped: true, path: "galleries") request.pathParameters = ["per_page":"9999999"] request.displayServerError = true request.displayConnectionError = true request.success = RestkitRequest.expectListResult({ (galleryList:[Gallery]) in guard let strongSelf = weakSelf else { return } Gallery.syncGalleriesWithUser(galleryList, user:strongSelf._currentUser) BaseManagedModel.saveMainContextToPersistentStore() strongSelf.retrievedGalleryList(galleryList) weakSelf?._requestGetGalleries = nil }) request.failure = { (operation:HTTPURLResponse?, error:ServerError?) in weakSelf?.loadCachedGalleries() weakSelf?._requestGetGalleries = nil } _requestGetGalleries = request RKClientWrapper.sharedInstance().perform(request) }
it‚Äôs done
CloudKit has 3 types of databases: Private, shared and public. There functionality is well documented.
Do both files have the same targets?
Hold on, I don't follow. If you have a hardware CAN &lt;-&gt; USB interface, then your Mac won't be a CAN node. The interface will be a CAN node, and your mac just happens to be talking to it (over USB). You have the USB hardware of the Mac reading the interface, at USB speeds/latencies, you just have to write the driver for it (lol "just", I made it sound trivial). If your Mac isn't what's generating the CAN signal, then why do you need the "10ms ¬± 500us" precision?
This is a bug. It‚Äôs been around since beta 1. Here‚Äôs to hoping modals and presentations are finally fixed in beta 4.
What about inspections, same thing?
‚ÄúDone and Done.‚Äù
Is Swift a good choice for creating a point-of-sale system for macOS?
üëÜüèºtriggered.
I see. I just downloaded Xcode beta 4. There are many SwiftUI deprecations and errors related to BindableObject Fixing things now‚Ä¶
It‚Äòs true that CoreData is not what one would call convenient, but it has improved quite a bit in recent years. While there are still some quirks here and there, I would say it has lost much of its scare. And Xcode even helps you now to manage CoreData Model classes with automatic code generation. If you need more information about getting started with CoreData, I can really recommend [Project 38 from Hacking with Swift](https://www.hackingwithswift.com/read/38/overview) by /u/twostraws . Other than that, happy persisting! :)
Good need: Xcode Beta 4 fixed the environmentObject() problem. No longer need to hand propergate through navigation stack. Fully working as supposed: just attached at root view in SceneDelegate! üëçüèæ
&gt; code‚Äôs codes* Why do you think that adding an apostrophe s makes a word plural?
It was a typo
I might be brain farting because I‚Äôve been in stuck in C#, Kotlin and Typescript land at work for 3 weeks... But what do you mean by inspections?
&gt; I couldn‚Äôt figure out how to fix deprecated PresentationLink to .sheet modifier There's an example in step 3 of [Add Navigation Between Sections](https://developer.apple.com/tutorials/swiftui/composing-complex-interfaces#add-navigation-between-sections). &gt; DatePicket.init There's an example in step 5 of [Define the Profile Editor](https://developer.apple.com/tutorials/swiftui/working-with-ui-controls#define-the-profile-editor).
I went through that WWDC session, and it was *very* helpful thanks. I'll have to watch it a few more times and the related ones, and start with some simple Apps for it to gel, but it certainly helped. And if I learnt one thing, it's that `NSPersistentCloudKitContainer` is my friend!
The speaker at the WWDC Session (linked) certainly implied that, which I thought was quite honest. Certainly, my initial attempts with CoreData were along the lines of 'wut?' It does look like it's on a continual improvement path though, which is very good to hear.
Thanks for that, the speaker did mention 'private' in the WWDC Session linked, but it was only once, and you'd easily miss it - and I only noticed it because I'd read your comment first... Fortunately, at the moment, it's not a deal-breaker for me.
Yeah. I noticed they only mentioned it once too in the session. Asked the engineers at WWDC and they made it clear it was only private. Shared is probably the easiest to support next, so fingers crossed for WWDC 2020
Old timers have story‚Äôs of sleeping In the hallways clutching a pager that would ding if the massive build fails. At one point it was c, CodeWarrior, apple script, and old school Mac toolbox that made the magic work
Thanks for the link to Project 38, I'd missed that in the blizzard of material that /u/twostraws has been making available :) It certainly looks like CoreData has improved a lot, the WWDC Session (linked) showed Xcode doing a good job of initial code generation. Just d/led Xcode 11 b4 and will see what goodies are lurking there. And we continue to persist :)
That's great to hear thanks.
Thanks for that, looks like the final part of that video is the one I'm going to spending most time on - debugging! :)
Thanks for the thoughts and that's a good point about never hitting the internet. At the moment, I'd be happy if an entry on my phone made it to my Mac over any transport layer! It seems that the new hotness of iOS 13, CloudKit and CoreData are going to be much easier to use than was the case previously!
Thanks for that. A while back I was thinking of Realm and Firebase, but watching the WWDC Session (linked) talk about using SQLite alongside CloudKit and CoreData (and getting syncing 'for free') was a bit of a welcome surprise. I'll take your advice and steer clear of QuickLook! (I've had real problems just getting downloaded markdown ones to work)
Thanks, I briefly looked at Firebase and Realm a while back when my initial forays into using CoreData was melting my mind. From the linked WWDC Session, it does look like the CloudKit/CoreData combo has become much simpler, so I ought to give that another look-see!
Thanks for that, I see that Firebase is getting a lot of recommendations. I did look at it and Realm a while ago when my efforts with CoreData were getting me nowhere. The WWDC Session (linked) on using CloudKit and CoreData together has given me a nudge to have another look in that direction...
Thanks! They updated the tutorial üëçüèæ
Thanks! So they updated the tutorial. Should have refresh my page. ü§ì
There‚Äôs no photo but you can probably find what you‚Äôre looking for at [Apple Human Interface Guidelines](https://developer.apple.com/design/human-interface-guidelines/)
Supposed to have posted thishttps://i.imgur.com/0ctGR5X.jpg
I am learning Core Bluetoooth!
UISegmentedControl. Theirs was modified in appearance but that will get you the functionality
The real-time linting etc. (like Intellisense in visual studio). In my experience it takes about 10 seconds in swift but almost instant in kotlin
So? Fix it.
Your computer's speed.
&gt; environmentObject work through works*
See that‚Äôs insane. Granted I only ever deal with god awful inherited codebases... but my Kotlin compiler consistently grinds and crashes with ‚Äúran out of memory‚Äù errors, while taking up a whopping 3.5gb of ram to build.... on a machine with over 12gb of ram waiting to be used. I havent experienced a Kotlin project that didn‚Äôt feel like a slow motion train wreck.
I‚Äôm in iOS public beta 1. That‚Äôs the segmentedcontrol across the stock Apple apps. So will I need to modify it?
Look at the header that's created for that file.
You've got it backwards. You want to look in the automatically generated `$(PRODUCT_NAME)-Swift.h` file.
You've got it backwards. You want to look in the automatically generated `$(PRODUCT_NAME)-Swift.h` file.
Tragic and fuck that guy but this is a classic case of /r/lostredditors
Do I need to update to beta 4 to run the tutorial hiker app? I was half way through the course and suddenly i downloaded project files for Animating Views and Transitions and the project just wont compile with errors i don't know how to fix. https://developer.apple.com/tutorials/swiftui/animating-views-and-transitions
For over a year I continue to develop my app for creating random textures, mostly I am adding new presets, effects, etc. I've uploaded youtube preview recently: [Sabiland's Texturing for iOS](https://youtu.be/LFtPJSCUi3s)
Thanks Tom, you‚Äôre the best ;) I actually found a solution for passing parameters into an init. Needed to be set as a regular init with parameters and not an override apparently. This led to another problem with networking. And unwrapping an array as a string. Starting to think learning Swift is a lot of problem solving lol
&gt;why are most of the tutorials for iOS not macOS? Because far more people are developing for iOS. Supply and demand.
[This is the community in case you were wondering](https://www.facebook.com/groups/TalentHubLyto/) Would really appreciate your feedback!
I also found that I could actually use Xcode like Xcode 10 now! Thanks to apple for all the fixes!
I work in the Health tech industry and I've just started playing around with CareKit 2.0.0. Some of the out of the box UI stuff is really neat and performs fantastically. CareKit Store is also really cool (it's essentially a CoreData wrapper that provides an out of the box data solution for health apps). Out of the box it's able to surface insights about the Patient's data, which I can see being really powerful for some of the apps I work on. Other than that, SwiftUI of course :)
I'm really liking what I see so far and dealing with UI state is so much simpler in SwiftUI.
Yes, definitely!
Oh this sounds fun!
Aside from the enterprise apps I make at work I'm making a Tiny Arcade (C++ not Swift) with Arduino components. I went as low res as I could and still be fun so I have two 8x8 matrices that'll play Tetris, Snake, and a third one I haven't decided on yet but probably some kind of space shooter thing if I have the memory for it. I already made a prototype controller*, and I made the screen, and the controller interacts with the screen, and I have a basic framework for Tetris created but work got very busy so its on pause. I'm also experimenting with the design of the cabinet which I'm modeling in Modo and will print with my 3D printer. *I may have to redo my controller, it uses a LOT of pins and I found out that a thing called a "shift register" exists which may help me take my pin usage count down. Too bad I ran across this information literally an hour after displaying my controller online.
Here‚Äôs an example for sheet replacing PresentationLink: https://stackoverflow.com/a/57087190/3179416
ooof facebook
Yeah we know.... :( But we are still programming the actual community and we wanted to test and improve it before the actual workload of a developing it. Do you know of any other platform apart from FB or reddit to do it?
Currently trying to figure out the same thing. Would like to have a skeleton overlaying the person being tracked. I see that ARView has a scene property, but this differs from SCNScene and has no rootNode in which I could add to.
I'm trying to make this work in Playground: var str = "Hello, playground" let qrFilter = CIFilter(name: "CIQRCodeGenerator") let data = str.data(using: .isoLatin1, allowLossyConversion: false) qrFilter?.setValue(data, forKey: "inputMessage") qrFilter?.setValue("Q", forKey: "inputCorrectionLevel") let image = UIImage(ciImage: qrFilter!.outputImage!) But the error on the last line is "Failed to convert UIImage to PNG". I'm unable to figure this out after an hour. Any ideas?
Looks like its a bug in playgrounds. I couldn't get it to work and after some googling I saw many others have the same issue.
Rxswift with a simple signal and whenever you need it, you just subscribe to that signal
Sigh. I am the world's best software tester. Everything I try and do is always a bug in XCode or the library.
I'm seeing this as a workaround: let context = CIContext() let finalCGImage = context.createCGImage(cIImage, from: cIImage.extent)! let finalUIImage = UIImage(cgImage: finalCGImage) but the data is a CIFilter at this stage, so I don't see how to plug that into the CIContext().
The classic way to to this would be to have the timer post a notification and have the VCs that care about that subscribe to the notification. &amp;#x200B; providing relevant search result links for background and tutorials. look at the "Use Your Loaf" link to get a really good understanding of the philosophy [https://nshipster.com/nsnotification-and-nsnotificationcenter/](https://nshipster.com/nsnotification-and-nsnotificationcenter/) [https://medium.com/@dmytro.anokhin/notification-in-swift-d47f641282fa](https://medium.com/@dmytro.anokhin/notification-in-swift-d47f641282fa) [https://useyourloaf.com/blog/delegation-or-notification/](https://useyourloaf.com/blog/delegation-or-notification/)
Why is your app delegate pulling server data? Seems to me this should be abstracted into a different layer where listener view controllers can subscribe to the serverRetrievedData method
I‚Äôm not experience enough with extensions to tell you the best way to get it to your main app, but if it gets there as Data and your unzip library requires a URL, just write the data temporarily to your cache directory and use that url. FYI most libraries unzip from the file system because of high memory usage concerns.
You can use freelance sites such as upwork or linked in to find people in your area.
You asked me a question and I answered it. I fixed the issue. I don‚Äôt think anybody really cares or even noticed that there was a typo. We are all human. Deal with it.
Fuck it, Playgrounds sucks.
The Tutorial projects have been updated to Xcode Beta 4. There are lots of SwiftUI deprecations, especially in animation stuff. It‚Äôs best to download the new file and start again. The project code now match the new api.
Where else would I put it?
Is this a volunteer pro-bono gig?
Hmm I think as of now yes it would be free and just a few hours a week when people have time and hopefully with 3 - 5 working on different parts it would speed up the process
Probably some kind of service that you share across the app (singleton or by passing it around). A class named something like SomethingSomethingPollingService. If you need multiple listeners for events from the service you should use NSNotificationService or some kind of signal/subscriber library.
I would go to any of the iOS meetups in the Chicago area and see if you can recruit people. You might also want to look at any nearby college boards. You can find a lot of meetup groups here: [https://www.meetup.com/topics/ios/us/il/chicago/](https://www.meetup.com/topics/ios/us/il/chicago/) Although I will have to say good luck finding people to work on your project for free.
Unless it‚Äôs a good cause or something inspirational, if it‚Äôs unpaid, be prepared for a lot of no‚Äôs, as CS students shouldn‚Äôt even be taking unpaid internships with the demand out there.
Please don't do this
Why?
Having global signals that anything can observe from any part of an application breaks the single responsibility principle, makes things hard to test in isolation, and makes it hard for engineers to reason about side effects.
Which company cares about tests. And his question was looking for an easy solution
&gt; There's an example in step 3 of Add Navigation Between Sections. Is there a good example when the presented view is dynamic (like presenting a view based on a tapped item in a list, like showing a detail view based on which item in the list is tapped)?
I‚Äôll check it out thanks
thanks 8-bit! I'm swamped with work now but I hope I can dive back into the project soon
You can initialize a new String from Data, and pass in an encoding like utf8 or whatever you need. Here‚Äôs the docs on it, there are probably examples on Stack Overflow. https://developer.apple.com/documentation/swift/string/3126741-init
Out of interest, which features are you missing? I‚Äôve started a new app using SwiftUI and it‚Äôs been great for all the simple screens. Some I think I‚Äôll have to go back to UIKit for, but overall I think we‚Äôll save time.
The CAN interface is a pysical node on the bus, but having something plug in the bus does not mean that is is a real CAN bus node. An oscilloscope on the bus would be a node in your sense. Once there is read/write capabilities and understanding of the bus signals, you have a node. I would say that a node comprises of all of the 7 OSI layers. I believe you think that the interface is an independant device that can commincate with a computer. Think of my interface as just a conversion device, like a dongle. A good example is the Ethernet to Thunderbolt dongle (it looks the same but with a RS232 plug instead of RJ45). A CAN bus can function up to 1000000 bits per seconds. A bit would be transmitted in 1us. The maximum length of a CAN 2.0b message is 128 bits. So a message would theoretically take 128 us to be transmitted. My 10ms period is well over that timeframe. Currently my program receives multiple messages that all have a 10ms period, an I see at most 0.15 us imprecision. This data is then inserted by another thread to a NSTable view after being decoded by the driver. What I am trying to acheive is to transmit messages every 10ms synchonically. Typically, a SYNC message using the CANOpen protocol. I know that macOS is not a RTOS, so perfect 10ms periods are impossible, but I am trying to have something close. So basically, I want to add messages in a (other) NSTable view, hand it over to a `CANSender` class, that would send the messages with a set period through calls to the driver API. ¬´ Send ¬ª messages do not necessarily have the same period. So I was thinking of creating a repeating timer for each message, triggering a call to `sendMessage`, using the period set in the `CANMessage` structure. With Qt &amp; C++, a `QTimer` class would have done the job. Qt says that most modern platforms can have a 1ms resolution more or less, depending on the workload and the hardware.
&gt;Sorry for didn't clarify that. It was the first thing i attempt. I thought it would be due to the encoding but I tried all encoding options and still yield nothing. &gt; &gt; &gt; &gt;let string = String(data: data, encoding: .utf8) &gt; &gt;and &gt; &gt;let string = String(decoding: data, as: UTF8.self)
Unsplash has been my favourite image site for so many years... I do like the official app on the iPad because I love seeing details on the larger screen... , if you do a iPad layout I‚Äôll happily download and try it out :D even pay for it if you make it a paid app.
Thank you.
Did you use the demo project provided by Apple? They have a fully working skeleton, just change the offset of the skeleton in the project and it‚Äôll be Projected right in front of the tracked body
&gt;Think of my interface as just a conversion device, like a dongle. I see, that's clarifies things! I was thinking that it would be doing its communication independently, buffering messages for you to poll at your leisure. I think I understand the problem, so here are my suggestions (ordered from most-convenient, to hardest but most likely to work) 1. Try using a `DispatchSourceTimer`, but don't use `DispatchQueue.main` or `DispatchQueue.global`, which are too heavily used by other application tasks, which will totally fuck your shit up. Create your own private serial `DispatchQueue`. * Be sure to set `qos` to `DispatchQoS.QoSClass.userInteractive`. * Make sure to set a low value for the `leeway`. 1. Try using `Timer`, but do not configure it to run on `RunLoop.main` (which is the default), for the same reasons as #1. * Instead, create a new thread (which will create a new `RunLoop`), and assign your timer to fire on it. See \[`Timer.publish(every:tolerance:on:in:options:`)([https://developer.apple.com/documentation/foundation/timer/3329589-publish](https://developer.apple.com/documentation/foundation/timer/3329589-publish)) or [`RunLoop.add(_:forMode:)`](https://developer.apple.com/documentation/foundation/runloop/1418468-add)). * Obviously, don't use `Thread.current`. * Make sure your thread: * has its [`qualityOfService`](https://developer.apple.com/documentation/foundation/thread/1409426-qualityofservice) set to `.userInteractive`. * has a high [`threadPriority`](https://developer.apple.com/documentation/foundation/thread/1411927-threadpriority) (closer to `1.0` than `0.0`). * Play with the various `RunLoop.Mode` options, which are basically just QoS categories, but the documentation doesn't make it clear which one is the highest priority. 1. Create your own `Thread`, but manually implement your own event loop. * Set a high qos and thread priority, like above. * Use [`Thread.sleep(forTimeInterval:)`](https://developer.apple.com/documentation/foundation/thread/1413673-sleep) for timing. * I doubt this would have any benefit over the timer approach. Fundamentally, a runloop really just is an infinite loop a thread enters, that processes a loop body over and over. It might be worth a try, though. 1. Use pthreads * This will be like dragging your balls through glass, but it might be worth it if the other options don't work out. * Max out the priority * Set a `THREAD_TIME_CONSTRAINT_POLICY` * You can use [`pthread_setaffinity_np`](http://man7.org/linux/man-pages/man3/pthread_setaffinity_np.3.html) to pin your thread to particular CPU core, and try to reduce task-switching overhead (which means you'll have less time for useful work on your thread). * See [https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple\_ref/doc/uid/](https://developer.apple.com/library/archive/documentation/Darwin/Conceptual/KernelProgramming/scheduler/scheduler.html#//apple_ref/doc/uid/) TP30000905-CH211-BEHJDFCA * Find out every other * Given that this is the threading primitive on the system, this is as good as you can get, short of using a different OS.
Yeah downloaded and had trouble getting it to run all day yesterday but got it working today. Unfortunately the tracking is not good enough yet to do what I wanted to do but it was still cool to get working.
given this context, how is it different that a notification?
Wow I didn't know medium had a paywall
Great question! &amp;#x200B; In a lot of ways, its very similar (I wouldn't say a notification is the right way to do this if you care about the concerns listed above) &amp;#x200B; However, the main difference would be that the components would be less tightly coupled than if it was a notification - not much less coupled; but yes - the point of this being similar to a notification is correct. Neither solutions are particularly good and certainly not if you are worried about the concerns I've listed above (which, you likely should be)
yikes
Yes apple allows you to use fonts. What Xcode do you have
CreateML app has many templates you could try out https://heartbeat.fritz.ai/train-and-ship-a-core-ml-object-detection-model-for-ios-in-4-hours-without-a-line-of-code-eb36942c2b21
Thanks for all these tips ! I still have trouble understanding what the QoS represents. I am from a C++ background. Is it like the scheduling priority ?
Not necessarily features (sorry for being vague), but some things that annoy me, for example, to remove a simple separator from the List, you have to manually create a ScrollView and loop through your views and add them. This is okay but ScrollView behaves very differently from List (SV renders all views, even offscreen). &amp;#x200B; Also, you cannot add pagination, for now, well in an official way, I've seen some hacky methods but they still require me to use List. &amp;#x200B; I have a lot of other issues which I'll probably write a whole article about.
&gt;FreelanceStation Looks neat. I'm taking a hiatus from freelancing but will give this a shot when I return.
Great to hear! This will probably be a huge headache for me but for a good reason. (I'm kind of the guinea pig at work when it comes to new stuff and I have to make my current app in both UIKit and SwiftUI.)
There are two problems at play here. First of all, to gain an automatic implementation of Codable you cannot define it in an extension. Secondly, \`Any\` is not conformant to Codable, because Any can be any non-codable type as well. The solution is to create a struct for dictionary(-like) types that are codable. ``` struct Response: Codable { struct Data: Codable { struct Driver: Codable { let id: Int let name: String let phoneno: String } let token: String let driver: Driver } let status: Status let code: Int let data: [String: Any]? let message: [String]? enum Status: String, Codable { case success = "success" case failure = "fail" case error = "error" } } ```
Thanks for the response. I was actually wondering if there was a way to do it in a more generic way since I was hoping to use the `Response` object as a reusable template for all responses. The response in the post was just an example response.
What I like to do is use generics: ``` struct APIError: Decodable enum Status: String, Decodable { case success = "success" case failure = "fail" case error = "error" } let status: Status let code: Int let message: [String] } enum APIResponse&lt;T: Decodable&gt;: Decodable { case success(T) case error(APIError) init(from decoder: Decoder) throws { do { self = try .success(T(from: decoder)) } catch { do { result = .failure(try JSONDecoder().decode(APIError.self)) } catch { result = .failure(error) } } } } ```
Thank you, I‚Äôll appreciate that :)
Deprecated doesn't mean removed.
11 beta 4
[removed]
But it certainly means it‚Äôs a bad idea to use it for new development. Does GKSavedGame cover your needs? https://developer.apple.com/documentation/gamekit/gksavedgame
Xcode can do that. Create a shell script that opens/focuses chrome and another one that opens/focuses Xcode, then go into Preferences &gt; behaviors, select build &gt; fails and at the bottom, in run, select your script.
Yea, I did the test. Can you tell something about the skype interview? How did they grade and was it a 1-to-1 interview? How long did it take? Thanks.
Turns out that after the Catalina beta 4 installation, Xcode got bugged and the Swift version shipped was not installed properly, nothing like reinstalling all the CLI and Xcode from scratch to remove weird errors.
SwiftUI is ridiculously fast for writing up a simple layout, but as soon as it gets a little complicated Xcode can no longer give me detailed errors and will more often than not fail to tell me what exactly I did wrong. For example, if I misspell the name of a member of an object in the View body declaration, I will get an unrelated error on a wholly different line. Fortunately I‚Äôve worked with Swift long enough to avoid most pitfalls and I can work through it.
Yeah, the compiler errors are pretty bad right now, but now I‚Äôve been using it for a little while I‚Äôm starting to get the hang of what it is I‚Äôve done wrong. Worst comes to worst I just start commenting out the code I added most recently until it compiles again. Also, splitting the view into multiple vars reduces the footprint of code I have to debug to work it out.
my guess is either **legacy** (apps existed before swift, and they never transitioned) or apps that exist for **windows** and they ported it over, since you can‚Äôt use swift for windows development. lots of companies don‚Äôt use the latest tech because they don‚Äôt want to spend the resources to update
Depends on the app. I bet those C and C++ apps are games using 3rd party engines, and java god only knows maybe a corporate thing? They key thing to ask yourself is what am I trying to create? If you are trying to learn programming then Swift is the perfect place to start in the Apple world. If you are trying to make a strategic choice then it depends on the app. Keep in mind that even if 3rd party libraries or engines use another language your work can be done is Swift. Swift is open source and has a bright future both in the Apple world and on the server. You can't go wrong learning it either because it is very similar to Kotlin, the new official language of Android. If you know Swift you can read Kotlin pretty easily.
Thanks for the reply, I understand a bit more now
Thanks for the reply
*iOS learns how often and at what time the user is running your app and tries to run BGAppRefreshTask at a time when the user is not likely to be using the app.* I'd add to this a little and say that (from what little Apple has said) it proactively tries to refresh close to when you'd use the app. So, for example, instead of refreshing periodically all night, it aims to do fewer refreshes, closer to when you wake up.
1. Swift isn't currently great for massive apps. It generates a lot of code and very large binaries. If you're worried about binary size then you can run into problems. 2. It doesn't cooperate with C++. If you wrote part of your codebase in ObjC++ then switching to Swift isn't a simple process. 3. If your developers are ObjC experts and their day-to-day work has been ObjC for yers, switching to Swift doesn't have as great of a benefit as you have to know it to write it. 4. ABI stability just hit earlier this year. Many didn't want to switch until this happened. Now that we're here, more should be swithcing.
You could just use iCloud kvs, I know that is able to be used on tvOS.
Admittedly, if you wrote part of your codebase in Objective-C++, then you've probably already decided to give up coding and go live as a hermit so you'll never have to deal with that mess again.
Are there any disadvantages with using iCloud kvs for saving games?
TIL ObjC++ is a thing
Now with the binaries being bundled with the OS is the number 1 still a thing?
Thanks for your comment!
I like to design my types to be best for usage, not easiest for parsing. In this case, I would want it to be impossible to use an error response if it were successful (or vice-versa). The downside to the already proposed solution is that it throws an error if not successful. Yet it is caught right away, but it makes it a real pain to debug other thrown errors because a breakpoint will hit there even in "expected" scenarios. Also, I would want the parsing to be as type-safe as possible. Having a dictionary of Any is not very useful. So, I would create a generic response that lets you pass in concrete types for the data (calling it \`Body\` because \`Data\` is already a type): struct Response&lt;Body: Decodable&gt; { enum Status { case success(Body), error([String]) } let code: Int let status: Status } extension Response: Decodable { enum CodingKeys: String, CodingKey { case status, code, message, data } init(from decoder: Decoder) throws { let container = try decoder.container(keyedBy: CodingKeys.self) self.code = try container.decode(Int.self, forKey: .code) let status = try container.decode(String.self, forKey: .status) switch status { case "fail": let message = try container.decode([String].self, forKey: .message) self.status = .error(message) case "success": let body = try container.decode(Body.self, forKey: .data) self.status = .success(body) default: self.status = .error(["Unrecognized return status '\(status)'"]) } } } So when dealing with the response you do a nice switch statement on the status of the response. To get a response specific to the request you have in your question, you would define a type like so: struct DriverBody: Decodable { struct Driver: Decodable { let id: Int let name: String let phoneno: String } let token: String let driver: Driver } So then you could use the type \`Response&lt;DriverBody&gt;\` to decode the response. If there is anything unclear here, let me know and I can explain it further.
I haven't found any in my uses, Im a fan of key value encoding or using NSSecureCoding for simple save states or data structures (where the total memory needed is small). When I needed to save a platformer game's data, I made a singleton that would manage my game's save state from any level and have calls to archive and unarchive. They both function in a similar fashion, where local you use NSUserDefaults and with iCloud you'll use NSUbiquitousKeyValueStore in the same fashion. I guess the only drawback is you have to manage your keys.
I am not sure where you have your data from but basically everything that is cross platform is written in Java/C++/C# etc. When you develop from iOS purely there is 0 reason not to go Swift (or Objective-C) in the past. Also if you take into account Unity and Unreal Engine those make a lot for the non-Swift games. I would be really curious to see a chart for AppStore apps languages and that is not to be confused with Mobile Development Languages which can include Java/C++/C#. Except for the game engines above that are established, no company or developer that respects themselves does apps that are non-native. Creating non-native apps makes the app lose a loot of the smoothness of the device (especially if it's a HTML-based engine) and will add a lot of technical debt to the project. This is why apps like Instagram/Facebook/WhatsApp have separate clients for each platform, that is how you are supposed to do it.
Swift is a language originally created by Apple for their platforms, although it's now open-source and you could use it on Linux as well. It's not well support quite yet for general purpose programming although IBM and others have made some web frameworks. You can use Objective-C as well. Other platforms have other languages that you have to write apps for. &amp;#x200B; Apple has a language bridge to JavaScript, Ruby, and Python too but those only work on MacOS I believe. &amp;#x200B; You can write apps in any language on MacOS actually, but you have to use a supported language if you wanna use Apple's APIs.
I'm trying to think of (design) an application that can use JSON and collection views, then actually getting the hang of parsing JSON and implementing UICollectionView objects.
I appreciate the response, I looked at apps like Spotify, Instagram, YouTube and games like Clash of Clans and there was no mention of Swift being used to write the apps mainly C and C++ came up. But looking a bit closer now, it looks like they use both as ‚ÄúInstagram uses Python and HTML5 languages‚Äù for app development and ‚Äòapplication logic‚Äô, but then also Swift and objective-C for the iOS platform ?
This might help. [https://nshipster.com/propertywrapper/](https://nshipster.com/propertywrapper/)
Example: /// Returns a Boolean value indicating whether two values are equal. /// /// Equality is the inverse of inequality. For any values `a` and `b`, /// `a == b` implies that `a != b` is `false`. /// /// - Parameters: /// - lhs: A value to compare. /// - rhs: Another value to compare. public static func == (a: BlendMode, b: BlendMode) -&gt; Bool /// The hash value. /// /// Hash values are not guaranteed to be equal across different executions of /// your program. Do not save hash values to use during a future execution. /// /// - Important: `hashValue` is deprecated as a `Hashable` requirement. To /// conform to `Hashable`, implement the `hash(into:)` requirement instead. public var hashValue: Int { get } /// Hashes the essential components of this value by feeding them into the /// given hasher. /// /// Implement this method to conform to the `Hashable` protocol. The /// components used for hashing must be the same as the components compared /// in your type's `==` operator implementation. Call `hasher.combine(_:)` /// with each of these components. /// /// - Important: Never call `finalize()` on `hasher`. Doing so may become a /// compile-time error in the future. /// /// - Parameter hasher: The hasher to use when combining the components /// of this instance. public func hash(into hasher: inout Hasher)
Swift on Linux works perfectly fine at this point and Vapor 3.0 is a very good framework for cloud dev. It's the tooling that's kinda shit, getting ,uch better with xcode 11 though.
You can't see the actual code for most (I remember seeing some, maybe it knows you have the source or something) frameworks, especially apple ones, what you are seeing is the thing Swift generates that act similar to a .h file, only containing public declarations
In all of the apps you've mentioned you have the server side component which works for all platforms and which nowadays is made in NodeJS/JavaScript, HTML 5 for the WebSite [Instagram.com](https://Instagram.com) and Python most likely for server side also. To achieve the smoothness of Instagram no web based language is used for the UI, of that I am 100% sure of. Youtube maybe has a cross platform system as it's made by Google and Clash Of Clans is made in a game Engine that has both C++ and Objective-C according to Wikipedia.
2016 called bro
It is because SwiftUI is not open source. You are seeing only the public interface of the real implementation.
Hope they do open source it soon so we can use it on the web
Generally Apple doesn‚Äôt open source these types of frameworks. While the Swift language is open source, proprietary frameworks like AppKit, UIKit, and (likely) SwiftUI are not open. I agree it would be nice to see SwiftUI open sourced, though. Maybe one day...
Uhmmm, ton of people loves ObjC and ObjectiveC++. Its the best of both worlds, great UI language and great performance language seamlessly cooperating, yummy. Essentially swift has much nicer syntax(mostly) but other than that meh... and those breaking changes between versions... Horrible. IMO. I wish Apple would just use Swift syntax and left everything as is, so we could get everything (C/C++ integration) years ago. Oh well now I just need to have ObjectiveC++ bridge for C++ stuff, I can live with that,
Well they didn't get some inperation from javascript frameworks like flutter and react, so they might do so. It wouldn't really hurt them, it would more people to their platform.
Why is this getting downvoteD?
I downloaded the SF Pro font of Apple‚Äôs website. Turns out it is not available on any version of Xcode you need to download the rounded version manually.
Number one and four are related. Because swift didn‚Äôt have ABI stability until version 5, you had to build and bundle your libraries with your app, essentially statically linking everything, which is what gives rise to number one. Previously, even if you bundled binaries with the OS, you couldn‚Äôt trust them due to the lack of ABI stability
Swift is still new and a lot of the older companies you mentioned are transitioning slowly to Swift piece by piece but their iOS apps are still mainly written in Objective-C. Apps like Amazon on iOS are almost entirely written in ReactNative, Facebook also uses a mix of ReactNative and Objective-C. A lot of these companies are stuck partially because converting everything to Swift has limitations just based on how large apps are allowed to be on the iOS app store. In my opinion Swift is still the way to go. You can learn what you need to from the other languages on a job to job basis. Swift is undoubtedly the future.
Objective-C has served well for many years. Objective-C++ is a convoluted nightmare that combines the worst of both worlds with two different syntaxes, two different object types that are opaque pointers to each other, and two different memory management models. Either Objective-C or C++ alone is better than both at the same time. I did a project in Objective-C++ way back when, under the assumption that it must better, but eventually ripped out the C++ for plain Objective-C. At one point I had to look through the Chromium code base, and that gave me flashbacks.
There are many ways of making apps, not just using Swift. The App Store has been around since, what, 2008? Swift was introduced in 2014. Previously the ‚Äúofficial‚Äù way was using Apple‚Äôs UIKit framework via the Objective-C programming language. Since Obj-C is a superset of regular C (and there‚Äôs an Objective-C++ too), people who already know C can pick it up relatively easily. Some game engines use C/C++ too so those would boost the figures for those languages. People also wrapped web-based tech like HTML and JavaScript in a thin shell to make ‚Äúapps‚Äù that way, but those have a pretty rubbish track record. I really don‚Äôt like them, but they‚Äôre a way to get a lot of re-use across the web, iOS, and Android, which saves a lot of time and money at the cost of UX. More recently there‚Äôs been React Native, Xamarin, and Flutter which offer much more native look and feel (rather than just web pages which rarely ‚Äúfeel‚Äù right). RN uses JavaScript at runtime, but instead of controlling a web page, it‚Äôs controlling native UI controls. Xamarin uses C# (.NET). I don‚Äôt really know a lot about Flutter. I highly doubt anyone is using Java on iOS. I‚Äôm not even sure it would be possible. If it were, it would undoubtedly suck. It is used for Android apps, though, so perhaps that‚Äôs where you were seeing it mentioned? There‚Äôs also the Kotlin programming language now for Android, which is a really nice modern language in similar ways to Swift.
or y'know ```swift indirect enum List&lt;T&gt; { case empty case cons(T, List&lt;T&gt;) } ```
Thats not doubly-linked.
Looks* Like
Someone reversed the keys and objects.
@Clovel19 Yep. and in the case threads, it goes beyond just "I need to schedule a thread, which one should I schedule next?" to "This high priority thread just unblocked, should I evict the current thread to give way to the high priority thread"? This sort of work stealing doesn't happen with runloops, though
Did you try changing the font as it is not available for previous iOS versions?
from stackoverflow https://stackoverflow.com/questions/49833678/xcode-error-this-class-is-not-key-value-coding-compliant-for-the-key-ibshado
Is the font unavailable in all versions before iOS 13?
What you're looking for are delegates, this is a link to one article but I would recommend doing some more searching because delegates are useful for separating your apps using MVC. &amp;#x200B; [https://medium.com/swift2go/passing-data-between-viewcontrollers-via-delegate-protocols-4ecde4b167de](https://medium.com/swift2go/passing-data-between-viewcontrollers-via-delegate-protocols-4ecde4b167de)
This is tolerable as farms building a data structure goes , but it isn‚Äôt a very good tutorial on building a **Swift** data structure. - What Interfaces should be implanted? - Advantages/Disadvantage of being a class VS a struct. - Should the Nodes be classes? I suggest they should not.
This isn't entirely true. The Windows port is actually actively maintained and pretty far along. There is a community CI bot for it and even nightly builds of it. It is seeing active development and does so with a proper port to Windows (not through MinGW/Cygwin/WSL).
Store it in a data container like a singleton and then fetch it in the viewWillAppear of the other VC. Only one VC will be on the screen at a time. It can't screw up.
why do you think they shouldn‚Äôt be classes?
With a doubly-linked list, they have to be. I'm aware of that. &amp;#x200B; My point is more about making it a Linked List in a Swift motif. As the other comment here points out, it's possible to do it with a single indirect enum. Personally, I would have liked to have seen him implement \`Sequence\` on it.
If \`NSLocalizedString\` can't find a value for that key in the user's locale, it will return the key. &amp;#x200B; Are you sure the user's preferred languages include the languages you've chosen to localize you app? And are you sure the project file for your framework has all of the correct languages added to the localizations setting?
&gt; With a doubly-linked list, they have to be. I'm aware of that. So if you know they have to be classes why do you suggest that they shouldn‚Äôt be? &gt; Personally, I would have liked to have seen him implement `Sequence` on it. Why `Sequence`? If you‚Äôre going to get persnickety about protocols and interfaces, why not the better mapping and more useful `BidirectionalCollection`?
My point is that the example is complete contrived. `Sequence` was my choice because it is simple to implement and would be a good way to teach adapting a new data structure to existing protocols. Yes, `Collection` would have been possible or others, but linked lists aren‚Äôt always randomly accessible.
Protocol and delegate.
This is a bad idea. This is what segues are for. But if you're going to (ab)use global state like this, why even bother with a singleton? That would just be a glorified global variable.
could it be that for iOS 12, the ‚ÄúshadowedLargeTitleTextAttributes‚Äù property is not available for navigation bar yet? What if you try remove this property from storyboard and run it again, does it work?
That is true.
&gt;Regarding this Are you sure the user's preferred languages include the languages you've chosen to localize you app? No I am not sure. This is the problem. iI need to **return English,** if for example preffered languages don't include at least one language defined in framework. How can I improve my location to manually return english, if it matches?
I thought about setting at least one language in app target, because I did not had any. If I would set default to english, will it use it even if **preferred** user languages don't match application?
I'm not sure if it's a good idea, but you can always write code to fall back to the English version manually. [Here's an example](https://pastebin.com/zzhhc0AG), where it tries to load the localized version. If it gets back the same key, it tries to manually grab the English string. That said, this kind of behavior could break in future versions of the OS or Xcode if localizations start being stored in different ways. It also doesn't take into account stringsdict files for pluralization. I think that long-term, if you want to fall back to English and be future-proof, you should just use English as your localization keys.
Oh ok..I never thought that I need to set keys as English.. In android we can use any keys we want...
Not without jumping through some hoops, like in that code I linked. I tested it, and it worked for me, but I've never used that code in a real app so I have no idea if it would be good in the long-term. The CFBundle APIs for loading localized strings should all be reliable, but converting the file data into a Property List would fail if Xcode no longer used that format to save compiled localizations in the future (and obviously you'd want to implement actual error handling instead of my `try!`s and `fatalError`). The most common idiom on iOS and macOS is to use English as the NSLocalizedString key. Some people still use custom keys, but you get the English fallback that way.
Except they said that Swift is going to be open source when they announced it.
Your addTask method is creating a TaskTableVC and then calling updateTable before the view is even created. A view controller's view isn't loaded until it is asked to be presented to the screen. This is why taskTable is still nil. I'm actually not sure what your intention is at all because as far as I can tell, you are never attempting to actually present that newly created TaskTableVC.
Thank you so much for the detailed answer. I completely understand what you mean. I also ran into another problem. I came across [these extensions](https://stackoverflow.com/a/46049763/1077789) that would resolve my initial issue but only later I realized that even if I successfully decode the base response to an object, the `data` dictionary is still a plain old dictionary. So I was actually looking to do something like this but I was struggling a bit (I need to study generics more) and your solution helped me put together a final solution. I had to modify a couple of things though. Some success responses from this API doesn't carry any values for `data`. They send a string in `message` field. So you either get data or message in success responses. ``` { "status": "success", "code": 200, "data": null, "message": [ "Verification code was sent. Please verify within 60 seconds." ] } ``` So I modified the Response like this. ``` struct Response&lt;Data: Decodable&gt; { enum Status { case success(Data?, [String]?), error([String]?), failure([String]?) } let code: Int let status: Status } extension Response: Decodable { enum CodingKeys: String, CodingKey { case status, code, message, data } init(from decoder: Decoder) throws { let container = try decoder.container(keyedBy: CodingKeys.self) code = try container.decode(Int.self, forKey: .code) let status = try container.decode(String.self, forKey: .status) switch status { case "success": let data = try container.decodeIfPresent(Data.self, forKey: .data) let message = try container.decodeIfPresent([String].self, forKey: .message) self.status = .success(data, message) case "error": let message = try container.decodeIfPresent([String].self, forKey: .message) self.status = .error(message) case "fail": let message = try container.decodeIfPresent([String].self, forKey: .message) self.status = .failure(message) default: self.status = .error(["Unrecognized response status '\(status)'"]) } } } ``` I had to create an empty struct for the above JSON because without one, you can't pass it for decoding. Not very elegant but I see no other option. I have one question if you don't mind me asking. I'm trying to extend error handling in the API class. Because you could get parsing errors, http errors coming from the URLSession itself and there's no way to propagate these error to the top. So I made a separate enum for these. ``` extension APIClient { enum Error: Swift.Error, Equatable { case brokenURL case serialization(String) case http(String) case unknown } } ``` And send those errors in the completion handler. ``` func login(phoneNo: String, completionHandler: @escaping (_ response: Response&lt;LoginData&gt;?, _ error: APIClient.Error?) -&gt; ()) { var request = URLRequest(url: API.login.url) request.encodeParameters(parameters: ["phoneno": phoneNo]) let task = session.dataTask(with: request) { data, response, error in if let error = error { completionHandler(nil, .http(error.localizedDescription)) return } if let data = data { do { let decoder = JSONDecoder() let response = try decoder.decode(Response&lt;LoginData&gt;.self, from: data) completionHandler(response, nil) } catch let parseError { completionHandler(nil, .serialization(parseError.localizedDescription)) } } else { completionHandler(nil, .unknown) } } task.resume() } ``` Would you recommend doing it this way? Or is there a better way of doing this? If anything I said is confusing, I put together a demo Xcode project [here](https://www.dropbox.com/s/0nebxpxlnpk4nic/apiclienttest.zip?dl=0).
Seems you feel strongly about it. I am genuinely interested what cause your nightmare, because I view ObjC++ as simply ObjC that can use C++ seamlessly - I admit don't use ObjC from C++ apart from passing__bridged pointers. I'mIm keen to know your experience, problems etc.
Still working on ny first Swift compiler contribution. It is hard..
Where you‚Äôve written instTaskTableVC, do you possibly mean to write simply ‚Äúself‚Äù?
Ok, it seems like you have a decent ability to understand complex code. I'm going to layout the full blown strategy I've used in several of my own apps. But first, let me address a few specific things about your code: 1. I still don't like all the optional things in your Statuses. Puts too much responsibility on the code using the response to understand deeply what to expect. This is a dangerous. If both messages and data vary for all requests, I would not hardcode the "Output" to be based purely for the data property, but instead, for the root of the JSON. 2. On that note, Swift 5 provides a `Result` type that is an enum of either a successful object or an error object. This is much preferable to returning an optional error and optional result because a switch statement is much more elegant than if lets on each optional independently and a weird unhandled case where they both could theoretically be nil (with the enum, you always have one or the other). 3. Your code is using the exact same message decoding in all three cases, just move it to above the switch 4. You are putting a lot of responsibility on your methods that are making particular requests (creating the data task, parsing the response, validating the response, etc.) This is where my full blown solution comes in. I created a \[declarative\]([https://tylermcginnis.com/imperative-vs-declarative-programming/](https://tylermcginnis.com/imperative-vs-declarative-programming/)) endpoint system. Here is a gist for it: [https://gist.github.com/drewag/49c17d24b740d1c9eba4f3b48a5ecf05](https://gist.github.com/drewag/49c17d24b740d1c9eba4f3b48a5ecf05) The highlights: * You declare each endpoint as a concrete type of either `EmptyEndpoint`, `InEndpoint`, `OutEndpoint`, or `InOutEndpoint` depending on if it has input and/or output. Each one has a few basic requirements to implement. * When you want to make a request, you instantiate an instance of the specific endpoint and call `makeRequest` on it. The exact form of that call depends on the type of endpoint. An empty endpoint doesn't take an input and it only returns an error or not, while an InOutEndpoint requires input and also returns output. * All of the heavy lifting is implemented only a single time: making the request, parsing the response, validating the response, etc. You will want to customize a good portion of it. Certainly the base URL and validation stuff. You will also probably want to improve the error reporting. If you have any questions on how this stuff works or how to customize it, let me know. Now that I went through the effort of creating that gist, I will probably turn it into a full-blown blog post. If I do, I reply here again with a link.
I think it was a year after.
It's not possible to implement a doubly linked list in a purely functional language. If you want bidirectional iteration, you can use a zipper. It's basically two singly linked lists, one storing all the elements before the current location in reverse order and one list storing the elements from the current location to the end. So the a pointer to the element 5 in a zipper [1,3,5,7] will be: (List.cons(3, .cons(1, .nil)), List.cons(5, .cons(7, .nil)))
Use the Camera API to take a photo, then wait 20 years and take another photo.
&gt; My point is that the example is complete contrived. Well, yes, using any sort of linked list in Swift is completely contrived. Adding conformance to a protocol wouldn‚Äôt make it any less contrived. &gt; Sequence was my choice because it is simple to implement It‚Äôs not like `Collection` or `BidirectionalCollection` are tough to conform to. They‚Äôve already got all the code they need for the conformance, they‚Äôd just need to rename some of the functions. Nothing about collection implies random access, only indexed access; `String` conforms to `Collection`, for example.. If you want guaranteed efficient indexed access, that‚Äôs what `RandonAccessCollection` is for.
Implementing a data structure and making it conform to existing protocols is not contrived. I do that at least once in every project I work on. For example, I‚Äôve wrapped `NSFetchedResultsController` in a struct that makes it a `Collection`. It makes the code that touches it really clean.
&gt; Implementing a data structure and making it conform to existing protocols is not contrived. Implementing some functionality in Swift *using a linked list* is almost always contrived. In the vast majority of cases, there is a better approach.
Implementing a linked list is academic. It is a great teaching example covered in every Computer Science Data Structures class. Showing that it can be built in Swift is good. I would have liked to see a discussion about *why* some design decisions were made, such as class VS struct VS enum for the `Node` type. What made it contrived were the last few steps where arbitrary functionality was added that didn‚Äôt make it more useful. It could have included subscript index lookups, or protocol conformance and made it a really good example.
&gt; What made it contrived were the last few steps where arbitrary functionality was added that didn‚Äôt make it more useful. Wait. Inserting and removing nodes in a linked list is now arbitrary, non-useful functionality? Really? I mean, O(1) insertion and removal is one of the main academic advantages of using a linked list. If you're doing a linked list at all you should absolutely be doing insertion and removal.
They didn't.
It still happens even when I delete the navigation bar
Oh thanks. Will go read oh this then in order to know how .
Step 6: That print functionality seems handy. Too bad there isn‚Äôt a way to apply it to everything. We could make a protocol that handles it so we coups arbitrarily print random objects. Maybe we could call it [CustomStringConvertable](https://developer.apple.com/documentation/swift/customstringconvertible) and it would work with the entire Swift library. Step 7: Fetching an indexed node is useful, but the syntax is rather verbose and inconsistent. There should be a standard way to look up objects within a structure by [subscript](https://docs.swift.org/swift-book/LanguageGuide/Subscripts.html) using a standard notation. It eliminates the need to remember different syntax for each type. It could maybe even use square brackets, like the Array notation. Step 8 &amp; 9: I‚Äôm tired of trying to be sarcastic. I didn‚Äôt even think that was possible. Insert and remove operations are [RangeReplaceableCollection]( https://developer.apple.com/documentation/swift/rangereplaceablecollection). I‚Äôm done with this discussion. I started trying to provide feedback for OP and the articles author, but I feel like you‚Äôve been trolling me and wasting my time.
Glad they replaced the PresentationLink. It literally never worked more than once.
Oh, so first the functionality wasn't useful. Now it's useful but only if it conforms to a protocol. Much like your 'nodes should be structs'/'I know they can't be structs' flip-flop your feedback is self contradictory. &gt; Insert and remove operations are RangeReplaceableCollection. Of course you wanted to stop at `Sequence` conformance‚Ä¶ I mean if you wanted to provide useful feedback, you could have said that you would have liked to have seen the functionality made to conform to an appropriate protocol so you get the other protocol functionality for free. That's fine. But then you add in all this other nonsense like preferring structs when unless you want to resort to some silly boxing technique won't work with a doubly linked list, pretending that some parts of the problem are contrived but not others, complaining that some functionality isn't useful then arguing that it should have been implemented under a different name. That's not exactly useful feedback.
Thanks again for the help! I can understand most of the stuff in the code. One thing I'm stuck on is how to pass in parameters of a different type other than JSON to the HTTP body. Because this API I'm working with requires the parameters to be passed in as URL encoded. I use the following extension to do this. extension URLRequest { private func percentEscapeString(_ string: String) -&gt; String { var characterSet = CharacterSet.alphanumerics characterSet.insert(charactersIn: "-._* ") return string .addingPercentEncoding(withAllowedCharacters: characterSet)! .replacingOccurrences(of: " ", with: "+") .replacingOccurrences(of: " ", with: "+", options: [], range: nil) } mutating func encodeParameters(parameters: [String: String]) { httpMethod = "POST" let parameterArray = parameters.map { (arg) -&gt; String in let (key, value) = arg return "\(key)=\(self.percentEscapeString(value))" } httpBody = parameterArray.joined(separator: "&amp;").data(using: String.Encoding.utf8) } } I see that in this implementation the `Input` needs to be `Encodable`. I'm not sure how to bridge this gap...
I wanted to help but couldn't understand your question. What do you mean by page?
**STFU CUCK BOY**
For your views to be created and outlets hooked up correctly, your view controller must be instantiated by the storyboard, and not manually. You're using `TaskTableVC()` to instantiate, but you should either use a storyboard segue (it looks like you already have one set up), or call the instantiate method on `UIStoryboard`: let instTaskTableVC = storyboard?.instantiateViewController(identifier: "TaskTableVC") as! TaskTableVC
Found Another way by making var business : businesses? an optional .
The table is inside the initial view actually. it is embedded into my MainVC so it is loaded when I run the app.
I got this answer in another thread, but I don‚Äôt understand how self.reloadData() would work if the table view is in another script.
But how come instTaskTableVC = TaskTableVC() does not work? Because I am calling the function to reload the data in that script.
Because that initializer will not connect your IBOutlets from your storyboard. You're also not doing anything with the view controller after you instantiate it, so it's being immediately deallocated when the function returns. You need to present the view controller or push it onto a navigation stack for it to be shown.
Okay so can I do that on super.viewDidLoad() in the TaskTableVC class?
Okay so can I do that on super.viewDidLoad() in the TaskTableVC class?
Why should apple burn resources porting and supporting Xcode for windows? Have you tried getting llvm setup on windows? Basically I left some bits out for you to fill and to understand why your android studio comparison makes no sense
It still shows on the top left and right ‚ÄúDone‚Äù ‚ÄúDone‚Äù. Pressing the left Done button commits the change. The right done actually cancel. (From running SwiftUI Tutorial code from Apple) Very surprised this simple bug was not fixed.
So I put a print statement in my `super.viewDidLoad()` in my `class TaskTableVC : UITableViewController` and it does not give me nil. So why does it give me nil when I try to `reloadData()` on the `@IBAction func addTask(_ sender: Any)` ?
I gave up and got a mac. Android studio runs awesome on it. Baam. Both for development in side by side windows. Mac w 10 old one for 500 bux.
OK, so why would someone want to do that?
The property in your second view controller should be of type Business. `var business: Business! `
When hell freezes over.
To avoid writing your own configuration language and parser from scratch, inevitably being slow and buggy as you evolve towards yet another Turing-complete ad-hoc language.
Thanks. By page I mean App window. Like this would be a navigation controller that ges to a new page which has not been formatted yet. https://imgur.com/a/7cKmvpR
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/FlUx6XA.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme)^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20eubcy9o)
If I've understood correctly, the problem here is that there are two objects of type TaskTableVC. One is created by the system based on your storyboard, and the other one is created by you doing instTaskTableVC = TaskTableVC(). Although these two objects are the same type, they are completely separate. One appears on the screen, the other never does. &amp;#x200B; I think the simplest solution (which people may correctly say is inelegant) is to add a property of type TaskTableVC to your AddTaskVC class called "instTaskTableVC". Then when the AddTaskVC is being opened you'll need to set that property in a prepareForSegue method in TaskTableVC: addTaskVC.instTaskTableVC = self Then remove the line that says "let instTaskTableVC = TaskTableVC()" and it should work.
This makes so much sense, thank you. So I am creating an identical copy of TaskTable rather than using the on already in the storyboard?
Okay so my AddTaskVC class now looks like this: class AddTaskVC: UIViewController { @IBOutlet weak var taskTitle: UITextField! @IBOutlet weak var taskDate: UIDatePicker! var instTaskTableVC : TaskTableVC! //... @IBAction func addTask(_ sender: Any) { let dateFormatter = DateFormatter() dateFormatter.locale = Locale(identifier: "en_US_POSIX") dateFormatter.dateFormat = "yyyy-MM-dd'T'HH:mmZZZZZ" let taskDateFormatted = dateFormatter.string(from: taskDate.date) let newTask = Task(title: taskTitle.text!, description: descriptionTextView.text, date: taskDateFormatted) let instSQLiteData = SQLiteData() instSQLiteData.uploadData(newTask.title, newTask.description, newTask.date) instTaskTableVC.taskTable.reloadData() //error still here } } And my TaskTableVC looks like this: class TaskTableVC : UITableViewController { @IBOutlet var taskTable: UITableView! override func viewDidLoad() { super.viewDidLoad() //What do I add here? } //... } Not really sure what to add in my `override func viewDidLoad()` I tried `AddTaskVC().instTaskTableVC = self` But that still gives the same error of `Unexpectedly found nil while implicitly unwrapping an Optional value` when I try to do `instTaskTableVC.taskTable.reloadData()`. Thanks.
So what exactly do you have at the moment?
Okay, we are getting somewhere. Now, could you please provide a diagram of the navigation path you want to achieve? I promise I am not deliberately annoying :)
Kudos to you for working through this ‚Äî a lot of people just copy boilerplate code without really understanding it when they're starting off. So, AddTaskVC().instTaskTableVC = self doesn't work because it's that mistake again of creating a new, invisible AddTaskVC rather than accessing the one on the screen that the system creates from your storyboard. You cannot do this in viewDidLoad because the system doesn't create the AddTaskVC until it's nearly time to see it on screen. You can try the below ‚Äî this isn't the greatest code but it's a start. There might be some minor syntax errors: override func prepareForSegue(segue: UIStoryboardSegue?, sender: AnyObject?) { if let vc = segue!.destinationViewController as? AddTaskVC { vc.instTaskTableVC = self } }
Mostly, it was the fact that it‚Äôs trying to program in two languages at once, even if they happen to be in the same file. The two different memory management models were the worst part, with C++ being oblivious to NSObjects as anything other than void*, which made manual retain/release complex, and ARC all but impossible. Migrating to ARC was the last straw that made me rewrite the C++ parts in Objective-C. The Chromium codebase solves this this through having wrappers around everything for memory management, which is a verbose eyesore. At one point, I copied a hash-generating method from their app to mine and de-C++ed it, and the end result was half as long.
Okay that‚Äôs what I thought! I was really confused because I was thinking ‚Äúthere‚Äôs no way to get around creating this copy rather than the original‚Äù. Let me try the code you sent and get back to you. Thank you so much!
Thank you for your answer.
Sure thing. Thanks for the help! :) https://imgur.com/a/oPRWuaK In there, the bottom right homepage needs to go to the top right homepage(via the navigation controller or direct). It doesn't work currently because the bottom right homepage navigates to two different pages already - so if I make a new push(show) navigation, one of the other two gets taken away.
LMAO
Also, if I can‚Äôt do it in the viewDidLoad method where would I place this code?
Context: I am making the game Simon. How would I change the color of a button and keep it that color for one second then change it back?
If you‚Äôre unable to map it to a concrete type, you may consider a package like `SwiftyJSON` or the Json parsing in my package `swift-request`. These simplify the reading of `[String:Any]`
Sent private message
What is your desired output?
Probably never and for a good reason, Xcode uses a lot of proprietary Mac OS technologies Windows has no equivalent of. For example storyboards are backed by Metal now. Windows doesn‚Äôt have a Metal equivalent. Also Visual Studio for Mac isn‚Äôt nearly as full featured as the Windows version for the same reason, some parts of Visual Studio require Microsoft technologies.
I know this post is from a few days ago but are you able to elaborate a little more on how I would accomplish that? Can you maybe show some code?
Check out bandwidth. Their prices are generally lower, and many services like Twilio build on top of them.
Okay so how would I call this function, this is what I have so far: class TaskTableVC : UITableViewController { @IBOutlet var taskTable: UITableView! override func viewDidLoad() { super.viewDidLoad() } override func prepare(for segue: UIStoryboardSegue?, sender: Any?) { if let vc = segue!.destination as? AddTaskVC { vc.instTaskTableVC = self print("instTaskTable assigned") } else { print("error") } } } Right now nothing is being printed so it is not being called. I read that you have to connect it through the storyboard or something? I am guessing that i have to link the Add button to the `override func prepare` ? If so how would I do that. Thank you sir.
I wouldn't even use a closure for that. A struct/class is a much more general solution.
Do you mean you can navigate: A-&gt;B-&gt;C-&gt;D But also you want to navigate A-&gt;D While making sure B and C are also in the view controllers stack (eg. they are available through the back button) ?
Thanks a lot for this. Do you know if the gesture correctly composes with a scroll view? Ie: do you have a way to avoid the scroll view from catching the event in place of your DragGesture?
Thanks, didn‚Äôt know about Bandwidth. I‚Äôd search for similar services but they never came up, strange
Yes there is! Try - CocoaPods - Carthage - Swift Package Manager ( Works in iOS, MacOS as well as Backend APIs)
Using a gesture recognizer to detect the swipe and present the action sheet instead.
I've written initial support for \`Codable\`. Let me know what you think. &amp;#x200B; [https://github.com/carson-katri/swift-request/pull/4](https://github.com/carson-katri/swift-request/pull/4)
 [https://medium.com/@hacknicity/view-controller-presentation-changes-in-ios-13-ac8c901ebc4e](https://medium.com/@hacknicity/view-controller-presentation-changes-in-ios-13-ac8c901ebc4e)
No, protocols are much better than passing objects my friend. From the SOLID Principles: Dependency Inversion Principle - High level modules should not depend on low-level modules. Use abstractions, such as protocols, to hand off behaviors instead of objects.
I just published this framework. I'd love feedback on it! Also, FYI, this is a declarative framework but it does not use the new any of the new Swift 5.1 features.
Ok ya, unfortunately that is a difficult gap to bridge. To do so, I had to create my own Encoder that would collect key value pairs. Instead of continuing down this gist path, I decided to convert all my code into a full-blown framework....I'm crazy... You can see it here: [https://github.com/drewag/DeclarativeHTTPRequests](https://github.com/drewag/DeclarativeHTTPRequests) Importantly, it supports URL query input formats on top of the JSON body format. Feel free to either use it directly or just explore how I implemented it. It goes a bit beyond what I had in my gist. Most notably with the additional concept of a WebService protocol so that the Endpoint request code doesn't have to be hard coded for particular configuration and validation.
It's modal. I think you misunderstand the point of a modal view. You have to dismiss it first.
"A Very Helpful"?? /r/titlegore.
Seems like ESL, give ‚Äòem a break. OP: if this is the case ‚Äúvery helpful‚Äù can stand on its own here. Besides, I got his meaning
Set [isModalInPresentation](https://developer.apple.com/documentation/uikit/uiviewcontroller/3229894-ismodalinpresentation) to true, have your view controller conform to UIAdaptivePresentationControllerDelegate, and implement presentationControllerDidAttemptToDismiss to get notified when the user swipes down to dismiss
It's `[String: [Int]]`
I had similiar idea but decided to abandon declarativeness because it's, among other things, too verbose. Maybe you will have better luck.
A problem I see here is that you need to know what type given request decodes when you call it. This is not ideal if your requests are declared in another file, because if someone changes the type all RequestView that used it will start failing. For this reason I really think that Request should be generic. If someone hates using Codables then they should use Request&lt;Data&gt; or Request&lt;String&gt;. You can also prepare a typealias to maintain compability: struct GenericRequest&lt;T&gt; { //TODO } typealias Request = GenericRequest&lt;T&gt;
Ya, I think my declarations are a little verbose, especially the WebServices to allow for the necessary configuration, but the actual usage of the endpoints are really clean. Also, I still think it is less verbose than using URLSession directly.
More like, currently there s A&gt;B and A&gt;C. C or B routes depend on what user does on A. Now I also want to add A&gt;D
I have an app that sends alerts to a designated contact when a fall is detected. To get around Apple's rules I ended up building a socket script in Python that runs on a server and is connected to by the end user when required. This links up to Nexmo which I've found to be competitively priced. It's not an out of the box solution, but it works well if you're willing to go down that route.
You mentioned that you use this with Swift backend. Do you have one swift library with endpoints and models, used by client and server? That would be neat. But, for this to work, I think the `var path: String {get}` would have to be static.
Yup, I indeed use a single, cross-platform swift library that defines the endpoints, models, and a bunch of other functionality. This makes the exact request format irrelevant as long as the necessary data is included. However, like you guessed, my backend can't directly use the path variable on the endpoints. That must be set again by my back end. A small price to pay for the rest of the benefits.
Cool, then why path is not static where method is?
I wanted to support requests with variable paths. For example, a get record request that would look something like: `/records/4` where 4 is the record's ID or even `/records/4/subrecord/2`. I couldn't think of another way to handle that kind of dynamism.
It's early days and as it will only run on 10.15 and later it will be a few years before we can ship apps. Apple has tutorials [here](https://developer.apple.com/tutorials/swiftui/tutorials) but SwiftUI is still changing rapidly at this point.
I have a TableView in editing mode. Users should be able to reorder cells, but not delete them. How do I only show reordering controls without deletion controls?
There's no problem. You can drag multiple segues from one view controller. You just give them different (and informative) identifiers. In view controller A you probably need to use either a switch statement or a bunch of if-else to decide which segue to trigger.
"Are you SURE you don't want to leave a review of this app?"
You can store something on keychain
What‚Äôs that? I know in Android you can check a specific shared preference in Main activity but I don‚Äôt know how to do it in iOS!
Reload data should go in viewWillAppear!
Keychain storage is usually for like credentials that store across installs, if they delete the app it still exists, so if they download again it‚Äôs still there
Years? It should be release in a couple months with iOS13. Swift UI will work on any device that upgrades higher than an iPhone 6. You can start shipping apps in a couple months, but the API is still changing on a daily basis. Watching all the WWDC talks is a great start, then there‚Äôs a couple amazing YouTube series.
So how am I suppose to implement it? Or will I understand it just by reading Apple Documentation?
Oh you expected people to literally write code for you :/
Issues, must be different issues now after you fixed the font so show it
Apple documentation it is.
OP is asking about macOS where [users are slower](http://gs.statcounter.com/macos-version-market-share/desktop/worldwide) to upgrade than iOS. Agree with you about watching WWDC videos although I didn't think they had much of a tutorial.
No you‚Äôre not getting it, I don‚Äôt wish to store either the password or any sensitive information by the user, all I need to do is when he has purchased the App for the very first time ‚ÄúThank you for Purchasing ‚Äú image should appear and after that it shouldn‚Äôt. So I want something like this ‚ÄúImage.ishidden = false‚Äù if opening for the very first time. But ‚ÄúImage.isHidden = true‚Äù if he opens any other time. So how am I suppose to do that? Is there some library or something I need to import in order for the app to know that this isn‚Äôt the first time user is opening the app.
I‚Äôll try to implement something like this today.
Usually UserDefaults is used for that. Store something like ‚ÄúUserDidTheThing = true‚Äù and check for it on startup. If it needs to persist across devices / installs, then you need to tire that info on the server and fetch it on startup.
What would you like me to show? What happens when it crashes.
Whoa! You \_are\_ crazy! And I mean it in the best way possible üòÅ This is so great! I just gave it a try and it works perfectly. However I've hit a couple of snags. 1. Is there a way to set additional custom headers? 2. Some API URLs I have look like this `http://example.com/api/driver/profile/9/`. The 9 at the end is dynamic (a profile ID). Since it's not a proper URL query like `profile?id=9`, Even if I use an `Input` object to pass the ID in, I can't build the `path` with it. Is there a way to &amp;#x200B; struct GetProfile: InOutEndpoint { typealias Service = APIService static let method = Method.get // static let inputFormat = InputFormat.formURLEncoded let path: String = "/driver/profile/9/" struct Input: Encodable { let profileId: Int } struct Output: Decodable { struct Data: Decodable { let driver: Driver } let data: Data } }
Search for UIImage extensions, many can do this. Oldest is probably UIImage-Categories, http://vocaro.com/trevor/blog/2009/10/12/resize-a-uiimage-the-right-way/
How many messages are you going to send?
You can get sued for anything. The question is: Will they win?
Why not merge the gem purchase into the save that has more progress?
Use `UserDefaults`
What if that same gem purchase is part of both saves, but fewer gems were used up in the save with less progress in the game?
Personally, I would favor benefitting the user, even at the cost of some gems as long as it isn‚Äôt exploitable.
A lot of messages. A message will be sent to a user when they have been invited to edit a document in my app.
Why wouldn't this be exploitable? They could turn off network access at certain times to cause iCloud conflicts.
Thank You so much :) (Got that from stack overflow but I‚Äôm just scared that if the user deletes and downloads the app again will it show that ‚Äú Thank You for Purchasing ‚Äú image again? Coz I don‚Äôt want it to show.
 Set the object using \`UserDefaults.standard.set(\_ : forKey: )\` and then on \`applicationWillTerminate\` make sure to wipe that key: [https://developer.apple.com/documentation/foundation/userdefaults/1411182-removeobject](https://developer.apple.com/documentation/foundation/userdefaults/1411182-removeobject)
Then you'll have to go back to using the keychain solution. Imo showing the "thanks for purchasing" if they redownload it is such a minute edge case you shouldn't worry about it.
The source of truth should be server side, not local. Shouldn‚Äôt matter if they turn off network access‚Äîeither the transaction goes through completely or not at all
I'm glad it is working out for you! Yes, both of those things are already possible. To create the profile url, you simply need to add a profileId property to the endpoint type itself and dynamically generate the path (this is the reason that you call makeRequest on an instance of the endpoint and not on the type itself. You can actually see a simple example of this on the wiki: [https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Endpoints#path](https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Endpoints#path) Regarding the custom headers, you can do so in your web service. The wiki has an example of that too: [https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Web-Services#urlrequest](https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Web-Services#urlrequest). By implementing that configure(\_:URLRequest) method you can customize the request however you like. Are the headers you're hoping to add universal for all endpoints, or specific to just one? I'm also consider adding a way to add headers directly on an Endpoint.
If you don't want to get your ass sued, always do stuff that will benefit the user the most. You will never lose.
`SwiftyJSON` is your best friend, if not, you can always use `Codable` if you don't want third-party libraries.
I am having trouble with using user defaults. I am able to save user input that populates a table view in an array and then save it with user defaults. But for some reason, the data is being saved to all users (if I log in as another user, the user input is still there from the previous user). Is there a way to save data to the specific user that added the input and not to the whole app? Thank you!!
You can also use iCloud storage itself. Let the app look for a simple file in the app‚Äôs own folder. If the file is not there, show the message. If it‚Äôs there, just skip the message and launch the app. Many apps use this method, including games, where the app stores saved game files, etc. If the app finds the file, it won‚Äôt give the user the tutorial, for example, and automatically downloads the save file, letting the user pick up where they left off. This will also work across devices. Not just when the user re-downloads the app, but when they install the app on another device. This solution would also let you store information and settings you want to carry over across devices and installations without having to use your own server.
I think you'll need to use CoreGraphics for this: import UIKit import AVFoundation let image = UIImage() // your original image let newImageRect = CGRect(x: 0, y: 0, width: 1080, height: 1920) let renderer = UIGraphicsImageRenderer(bounds: newImageRect) let newImage = renderer.image { context in guard let cgImage = image.cgImage else { return } let rect = AVMakeRect(aspectRatio: image.size, insideRect: newImageRect) context.cgContext.draw(cgImage, in: rect) } `newImage` will contain the resized image. It's possible you'll need to think about the scale of the result image. Should it match the screen scale (usually 2 or 3), or should it just be 1? &amp;#x200B; if instead of a `UIImage` you actually want a PNG or JPEG image, then `UIGraphicsImageRenderer` provides other methods for getting that. Check the headers. &amp;#x200B; AVFoundation provides a nice function `AVMakeRect(aspectRatio:, insideRect:)` for doing these kinds of calculations, but I think it's going to give you aspect **fit** behavior, not **fill**. But you can figure out the math for determining the `rect` for aspect fill.
app's* lifecycle* Save a value in the UserDefaults once it has been displayed. Or simply save a flag in a file stored in the documents folder.
&gt; suppose supposed* You are never "suppose" to do anything. You are always suppose**d*** to do something.
READ. THE. FUCKING. DOCUMENTATION.
They will. So in that case, you need a server account to track the user's purchase and you need to coordinate with it.
Shouldn‚Äôt sending notifications be easier? It‚Äôs free of cost
I think userdefaults would be the easiest way to implement this. In case of user deleting the app and installing it again, you would need to use Keychain. Apple's original keychain library might be intimidating for beginner to use as it is based on C API a lot, you can use some third party library like this https://github.com/kishikawakatsumi/KeychainAccess#installation , to simplify the usage of Keychain, this library makes Keychain feel like UserDefaults. Hope this helps!
If it‚Äôs for an actual purchased app you could also check the App Store recipe for your app, which would/should always be there and restored
Absolutely !
Don‚Äôt be a cunt, mate. He‚Äôs here asking questions. Have some patience. Everyone learns different ways and at different speeds. A simple ‚ÄúIt‚Äôs noted in the docs‚Äù would‚Äôve been sufficient.
Multiple people told him to read the docs and he keeps asking for people to give him the answer. Sometimes people need to be yelled at if they keep ignoring advice.
Oh I didn't see the wiki. My bad. Fixed both issues :) &amp;#x200B; For the first 2 API calls (login and verify), I don't need to pass any custom headers. after successfully authenticating, I receive a token which has to be passed for every request there on after. I implemented the `configure(_:URLRequest)` method and it still worked fine even for the first 2 calls. If I were to properly handle this, should I be checking the `request` parameter and filter out the requests which I need to set the header or not?
Yes, but you can still say it without being rude or aggressive. This sub/community should be welcoming of people of all levels of knowledge and learning styles, and behaving that way doesn‚Äôt give that vibe. Remember it‚Äôs more than just you and them reading this.
I suggest using https://developer.apple.com/documentation/foundation/propertylistencoder for encoding and decoding saved data.
I think you‚Äôre going to have a hard time finding engineers willing to work for the ***possibility*** of pay 2 years from now. (Not saying they don‚Äôt exist, but there‚Äôs likely few.) Most startups fail, and if you‚Äôre not able to prototype it yourself and secure some sort of initial seed funding or business loan, then it‚Äôs going to be hard to find people. If this is something you really believe in and can‚Äôt tackle the prototype on your own, then you might be better off saving up to hire some contractors for the initial prototype work, then pitching it to investors for funding. Regardless, best of luck and I hope your app ends up being awesome and successful!
Yes I forgot to mention, I send notifications to users that already have my app and messages to users who don't.
It presents an action sheet confirming that the user would like to discard the changes they have made BEFORE dismissing.
[that helped me a lot.](https://nsdateformatter.com)
Totally understood. You‚Äôre right. Startups are very risky. Each person has a unique perspective on risk vs reward. I‚Äôm offering extremes for both. For the right people this is the opportunity of a lifetime. But it‚Äôs not for everyone. I‚Äôve built a small team ‚Äî most work part time. They still believe strongly in the mission but need their salaries. They all received a chip in a big game without having to quit their day jobs. I recommend to anyone else that‚Äôs interested ‚Äî find out what‚Äôs up and *then* decide. I‚Äôd love to fill the co-founder CTO position sooner rather than later. It frees me up to do more CEO stuff (hiring etc). Send your aspiring tech leader musician my way please. This is a full-time life-changing position. Pitching to investors at SXSW 2020. Salaries to follow. Equity offers to change as well. And, thank u for your best wishes. Same to you.
Oh okay.
This is a good solution but how can you properly conform to UIAdaptivePresentationControllerDelegate? I have been trying for awhile but can't get it to work.
What does user upgrade rates have to do with anything? The op could be developing for a captive market for all we know. There are probably as many good reasons to get started on SwiftUI for the Mac as there are bad. As long as the developer can accept early bugs and changes I‚Äôd say go for it.
Yeah. A modal display *is modal*. The way the user asked the question was that they implied that they also wanted to swipe on a modal display, which seems like a really poor UI metaphor.
Super useful, ty!
This is the thing. You can get sued by anybody in one of two common ways. One is that a lawyer sees a way to make big bucks off the process. The other is somebody with deep pockets to pay the lawyer to do the deed. Frankly you don‚Äôt even have to do something wrong to get sued.
Im thinking about using a CSV file instead. So I am storing this data locally, it is like 270,000 items. I have to be able to take X percentage of the items from the list. &amp;#x200B; To answer you question, a list of lists. The inner list 5 integer values. &amp;#x200B; I think CSV is the way to go?
Yes, I know that. But in decoding the JSON, I cant give a property name to something that matches the JSONs key bc each key is different.
I have heard of Swifty. It is unclear to me how to use Codable bc I do not know how to name the property appropriately, each of my keys has a different name...
OK thank, you.
[RelativeDateTimeFormatter](https://developer.apple.com/documentation/foundation/relativedatetimeformatter) in iOS13. Been waiting for this.
Oh i see . Thanks for the tips. Will need to find about all this and abstraction.
I've made `Request` generic, and renamed it `AnyRequest` as well as provide a `typealias`: [https://github.com/carson-katri/swift-request/pull/4#issuecomment-513585171](https://github.com/carson-katri/swift-request/pull/4#issuecomment-513585171) We could continue the discussion on GH.
Agreed, it‚Äôs a really useful site for the DateFormatter syntax!
Where is the button which opens this modal view? I'm Confused how the modal view could open over the mainvc before the table view has been loaded?
Let me know if you have any questions or feedback!
Yep, it‚Äôs awesome to finally have it built in üôÉ
Hi, userdefaults is saved onto the device -when you say your data is being saved for "all users" that's not what is happening, it's just being stored on that particular device. Because you are logging into multiple users on the same device you will see the same Userdefaults data. If you think users will switch accounts on their device and you want user specific data stored it's better to use an API or server of some sort where your user is stored and add this data in there.
Shouldn't that just be `encoding` and not `usedEncoding`? As in: `let contents = String(contentsOfFile: "/blahblah", encoding: .ascii)`
I haven‚Äôt needed to do this before myself but couldn‚Äôt the UserDefault key be constructed from the user name of the currently logged in account? That key can definitely be assigned through a String variable.
Ohhhh that makes a lot of sense now. Thank you so much!!!
Okay so the button is on the MainVC and when it is hit it opens the the modal view. Here is how the view loads works: APP START: &gt; table view &gt; main view BUTTON PRESS: &gt; modal view DISMISS MODAL VIEW (triggered via button on modal view): &gt; No views are loaded but the modal view goes away and the main view is what is shown
Unfortunately this implementation doesn't work nicely with a scroll view, and the behaviour is so strange that I can't figure out if it's just a beta issue: the SlideOverCard initially starts moving (for around 10 points) and then the gesture falls through to the underlying scroll view. Weirdly, the `onEnded()` callback on the SlideOverCard's drag gesture is never called. &amp;#x200B; I've looked for a SwiftUI equivalent of UIKit's [shouldRecognizeSimultaneouslyWithGestureRecognizer](https://developer.apple.com/documentation/uikit/uigesturerecognizerdelegate/1624208-gesturerecognizer?language=objc) with no luck. [SimultaneousGesture](https://developer.apple.com/documentation/swiftui/simultaneousgesture) looks promising, but you need to instantiate it with two gestures and we have no way to get a reference to the scroll view's gesture. &amp;#x200B; Any suggestions on this would be super welcome as I've tried a lot of stuff with no luck!
Looks like it, thank you so much. Was working with a tutorial from a previous version of swift!
I just realized the confusion here may have stemmed from the "User" part of the name "UserDefaults". This makes *much* more sense on macOS, where multiple users can have separate accounts on the computer itself, rather than on online services it connects to or specific apps it has installed. On iOS, there's currently only one user.
Yes, for example the error message
AFAICT onEnded not being called is necessarily a bug of SwiftUI, since you already have a project demonstrating this I‚Äôm sure it would be interesting to send Apple a feedback on this.
I‚Äôm working on a new app to create and share LaTeX-formatted mathematical equations. It includes a Messages extension, which is something I haven‚Äôt done before.
Type `.`, then control+space, and auto-complete will show you all the enum cases available to you.
I would check if you're constructing your API request correctly, Authorization headers are often a pain to deal with. Try using a tool like Postman to shoot some GET requests until you get the Data you were looking for and then import the code to a Swift format for use in your application.
Learn what you can when you can.
Okay, stop that. Community edition is free.
https://www.hackingwithswift.com Paul keeps everything pretty up to date.
Am assuming you have run a successful Oauth2 flow and want to use the authorization token. In that case your header is wrong. The correct header is ‚ÄúBearer &lt;token&gt;‚Äù, ‚ÄúBasic &lt; token&gt;
Don‚Äôt worry about SwiftUI as of right now. It‚Äôll take at least 2 more years (most likely 4)before it become requirement for employment. I would recommend you spend more time on UIKit first.
Ty :)
to learn swift i just jumped in and started making a game. i consulted the documentation often and asked around specific questions online when i got stuck but i've found that i've learned a lot.
They have a whole series of tutorials here: https://developer.apple.com/tutorials/swiftui/ Here's the first one: https://developer.apple.com/tutorials/swiftui/creating-and-combining-views
Software dev here, worked with Swift specifically 3+ years. My advice is to set out to make a simple list app of some sort. Could be a list of movies, favorite foods or whatever. Bonus points for actually fetching some data and showing that but start with a hardcoded version. Download Xcode and just get started. You will learn so much by just trying to solve these challenges. There are a few things you will need to learn to become a dev and the best way to learn is to just set out and try to build something. Good luck.
Thanks for your recommendations
If you have any experience with using DateComponents when creating Reminders, I'm currently stuck on a bug that I can't seem to figure out how to fix, and I'd really love help with that. Pls lmk üôèüèº
I mean that `[String: [Int]]` is already codable, you don't need to write anything.
Did you check this? [https://developer.apple.com/documentation/swiftui/dropdelegate](https://developer.apple.com/documentation/swiftui/dropdelegate) I think it was added just recently.
What have you tried so far?
Auth is something I hadn't originally gotten around to, but now I did. Yes, you could have configured it manually, but auth is a common enough thing that I wanted to build in a mechanism. I updated the Wiki to talk about it. Here I discuss how to configure the auth on the WebService [https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Web-Services#authorization](https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Web-Services#authorization) And here I discuss how to declare the auth requirement for an endpoint. Basically it can be required, optional, or none. For your login and verify endpoints I would set it to none. The rest you will probably want on required so you get a quick error if you haven't authenticated yet. [https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Endpoints#authorization-requirement](https://github.com/drewag/DeclarativeHTTPRequests/wiki/Declaring-Endpoints#authorization-requirement) **Important**: If you pull down the latest code, you will break any URLRequest configuration because I decided that it would be helpful if those methods also received the particular endpoint. You will need to update any existing configuration methods to match the new method signatures. I don't expect to make breaking changes like this in the future, but I wanted to make sure it is right early on. I'm still working through adopting this library in all of my projects, so I expect to keep making improvements, especially adding built in services (like I just added [AWS S3](https://github.com/drewag/DeclarativeHTTPRequests/wiki/Amazon-AWS-S3)).
what you should do is prefix your user default Key with the user id or something like 8409849010_userInputKey, then its like its per user
Yea I‚Äôll submit this feedback to them
First off you want to stArt with the basics! Don‚Äôt dismiss Playgrounds because it is available on the iPad thus comes in handy. Yes it is simple but it is the only way to Swift on iPad at the moment. Of course iPad isn‚Äôt a Mac and Playgrounds isn‚Äôt XCode, for development though you want to concentrate on MacOS and XCode. Get to know the UNIX underpinnings of MacOS and the internals of XCode and what it does. Mind you this isn‚Äôt Swift per say but understanding your tools goes a long way in becoming a skilled developer. Of course then you need to learn Swift itself. Here I‚Äôd simply download everything Apple has to offer and start from ground zero. You seem to have a bias against that but I urge you to avoid trying to skip through any program of course of study. In fact do just the opposite hack each new concept to death before going on to the next section. Most importantly don‚Äôt get discouraged when you hit tough spots. As you move further into Swift you will get hit with concepts you likely are not familiar with. Take the time to understand them, search the programming sites and otherwise learn the concepts. Also take periodic breaks. SwiftUI is the future but frankly I wouldn‚Äôt worry about doing the graphical parts of an app initially. GUI development is almost a completely separate thing. You want to be able to keep the language of Swift separate from any GUI you might be using.
Omgü§†üò± Guess I‚Äôm shipping with SwiftUI this fall after all then. Wrote it off completely due to lacking this.
Good advice in any language, clever code is usually hard to maintain, especially if the original author used some "clever" global variables or similar. Avoid being clever unless absolutely necessary (to an extent of course). The best code strikes a balance!
I advocate this in my team, simple, easy to grasp, commented code is the way to go. Little do they know I'm actually too stupid to comprehend clever code.
This. I‚Äôm a senior iOS developer, and I haven‚Äôt even started to look into SwiftUI. It isn‚Äôt even close to relevant, yet. My guess is that it will at least a year before bigger established apps will begin to transition.
A few things: - Start small. **SMALL**. Small, complete projects are key because you learn so much more when you complete a project than when you just get it working. I say small because it's very easy to get overwhelmed very quickly when you're starting software development. -Set tiny goals for yourself each week and stick to them. Again, something small like "Make a hangman game" when learning Swift, or a console "blackjack" game are always good learning exercises. When you get to learning the iOS SDK (where the fun stuff starts) you can remake those things using graphics. - Don't dismiss the boring stuff. Things like data types, classes, functions, etc may not be the most interesting things to learn but they're the absolute foundation for everything you do in the future. - Practice. You can't just read an article/book and expect to retain it. A lot of programming becomes muscle memory the more you use it. Practice practice practice. Set yourself a goal, even if its small, of something like 15 - 30 minutes of coding a day on top of whatever else you do. - Realize you WILL get stuck, frustrated, etc. This is normal and doesn't mean you're bad at programming, it happens to everyone. Back up, reframe the problem, take a break from it or pass over it for now and come back to it later. Some concepts you learn later will make the ones you were stuck on click. Again, you WILL get stuck, and when you do start hitting the internet for different explanations of what you're stuck on or ask on the forums. As for how to reach your goal: 1. Learn Swift. Swift is a great language and it overtook C++ as my most favorite language. 2. Learn the iOS SDK. Do you have to be a Swift expert before you get here? Absolutely not, but you should know data types, functions, conditional operators, and classes at a bare minimum. Knowledge of protocols and delegation will help too but this may be hard to understand without having the iOS SDK (which relies heavily on it). 3. Make small projects every week. Don't overwhelm yourself and take breaks when necessary. Your small projects should be things like To-Do-Lists, Birthday Countdowns, etc. 4. Start expanding further. Learn about web API's and JSON, and make something like a weather app. If games interest you start learning SpriteKit (yes it's not nearly as capable as say Unity or Unreal but it lets you focus on important concepts the other two kind of gloss over). Find an area that interests you and start learning the SDKs for that area.
One thing I really loves Objective-C for was, that there was almost always only one way to do things - and there was a very established convention about most of the things. Being in a team back then was a lot easier, because there were so many things not up for discussion. Now, with Swift, there is so many ways of doing just simple stuff - not to mention the vast amount of different ways to architecture your app is coming to iOS. Now everything is a discussion because every developer on the team things that their solution is the real clever Swift way of doing it. Remember we developers are still to a large extent still hackers who want to impress our friends (now colleagues). To be honest, I hate it!
Elegance has to be understood to be appreciated.
You are right. In the end, `Codable` is for generating objects with a certain structure, and it seems that your JSON object does not have a truly defined structure, so you either go for `SwiftyJSON` or you can always use the legacy `JSONSerialization.jsonObject`, you can check the docs online but you have to pass a `Data` object and you'll receive back an `Any` object which you can subscript.
That‚Äôs just generally code coding advice. Not really C or Swift specific. This post doesn‚Äôt really make any sense.
Hi :) I guess it's hard to see without actual implementations haha. Dismissing a modal view should not dismiss the tableview however - modal views just appear over whatever previous views and dismissing them should not affect your other views unless you've asked it to. So before you tap the button - the tableview is there right? Then when you dismiss the modal view the tableview has gone?
We had an issue where someone was inverting `optional&lt;Bool&gt;`s by calling `bool.map(!)`. Only another employee reading the code thought the ! was unwrapping, and screwed up the logic. We now require people use `bool != true` for this case.
ty.
It's equally applicable to all languages.
It's not that you're too stupid, it's that you are not the person who wrote it. Code needs to be made clear to the person who didn't create it.
I would recommend ?? false over != true unless you use == true in your code base instead of the bool directly. This adds the benefit of if it becomes non optional you get a warning about a redundant ??. (Sorry for formatting I‚Äôm on mobile)
&gt;Currently I have different ideas for some apps i can make &amp;#x200B; select the idea that you think is the easiest to accomplish first or that is the most fleshed out in your head. Then just go ahead and start a project in Xcode in order to create it step by step. try to identify what components your app needs. for example does it revolve around a tableview or do you need a navigation stack? then stick to tutorials for those components and try to change them in a way they create what you actually need. There are also tutorials on how to start a project in Xcode and how to work in it. You will learn a lot by doing this. &amp;#x200B; I was coming from web development and php myself and started creating an app myself this way in my freetime. I had a running version of that app ready for testing in around 3 months. some time later learning about apple developer account and publishing it was released in the Appstore. I learned a massive amount about software developing, not just swift, in that time. also because I had to work on projects in another way than I would in web development. Looking back there are a lot of things I should have done differently in that first project, but that is normal as I continued to learn through other projects. &amp;#x200B; I can only recommend learning by doing as it gives you the biggest motivation. following tutorials or books just in order to work through the topics will soon feel like a chore. but the feeling when solving problems on your very own project as well as publishing your own app with your own name next to it is unique. seeing my app in the global appstore was one of my prodest moments so far. try it yourself.
We've found `?? true` to be sub-optimal because if you're inverting it, you have do `if !(bool ?? true) {` and in more complex conditions, having the `?? true` is simply counter-intuitive and is therefore bug prone. If you use `==` or `!=` you have better control over it.
The problem with Obj-C is that instead of doing things the Apple-blessed way, a lot of devs would bring in these huge kitchen sink utility libraries that let them write Obj-C the way they wanted to, which were then near impossible to remove when those people left the company. Swift has its problems but at the very least it‚Äôs reasonable to refactor libraries and convoluted code out.
When I come across Python list/set comprehensions it always takes me much longer to understand. Then again I‚Äôm not super active with Python but it always just seems unnecessary.
The existence of optional Bools as anything other than an intermediate step when decoding JSON is itself a huge code smell. What are they being used to mean, semantically?
Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it. --Brian W. Kernighan
It has not gone away, it still is there but I do not know how to call a method upon it... I guess my real question would be how do I call a method on an object in another class/script.
A better visual of the question is here: https://stackoverflow.com/questions/57138217/uitableview-returning-nil-when-reloaddata-method-is-called-upon-it/57146319#57146319
No code smells worse than clever code.
I have converted the CSV to a PLIST. But now XCode doesn't like the structure of my PLIST: &lt;array&gt; &lt;array&gt;&lt;integer&gt;1&lt;/integer&gt;&lt;integer&gt;2&lt;/integer&gt;&lt;/array&gt; .... &lt;/array&gt; Any ideas?
Thanks again. Would it be possible for you to add a podspec to the project? I've created podspecs before but haven't worked with a pod that has dependancies so I'm worried I'll mess up something.
The reason the data is the same is because UserDefaults saves data locally to that device. Logging in as another User will give you the same UserDefaults if it's on the same device.
We have almost 800 instances of "Bool?" it in our codebase... A lot if it is related to JSON/GraphQL but definitely not all of it.
Yeah, you could do it that way. &amp;#x200B; Here's some sample code with uploading a new string to an array saved to UserDefaults: `import UIKit` `let stringsArrayKey = "myStrings"` `func fetchSavedStrings() -&gt; [String]? {` `return UserDefaults.standard.value(forKey: stringsArrayKey) as? [String]` `}` `func upload(newString: String) {` `// fetch current array` `var currentStrings = [String]()` `if let pastStrings = fetchSavedStrings() {` `currentStrings += pastStrings` `}` `currentStrings.append(newString)` `UserDefaults.standard.set(` `currentStrings,` `forKey: stringsArrayKey` `)` `}` &amp;#x200B; demo: `upload(newString: "My New String")` `print(fetchSavedStrings())` `upload(newString: "My Next New String")` `print(fetchSavedStrings())`
What are you talking about. You can do everything you can C in Obj-C and then some. Swift prevents from some "cleverness" like using non-booleans for conditions, etc.
Link to Part 2: [https://medium.com/@dbolella/shoehorning-swiftui-and-create-ml-part-2-a8932075e09a](https://medium.com/@dbolella/shoehorning-swiftui-and-create-ml-part-2-a8932075e09a)
Replaced stupid with more stupid.
What do you mean it doesn't work? I forgot to mention you have to assign yourself to the presentation controllers delegate - adding this in viewDidLoad should work: presentationController?.delegate = self
Generally arrays in Swift perform very well. I wouldn‚Äôt worry about it if you are not using it in extreme circumstances.
This is great, minus the comments
Well actually I "enforce" the comments rule only if the committed code is needlessly clever or complex, I don't expect people to document every single "if".
You grow into it. They always a look a bit foreign to me, coming from Swift, they feel backwards. But not using list comprehension is like not using filter or map in Swift. It's pretty brutal.
How would you model the answer to a question like "Are you an organ donor?" that hasn't yet been filled in? Assuming either way would be erroneous, so you need a third case. Also, what's the return value of `arrayOfBooleans.first`
I've never used Cocoa Pods before, but I believe I got it setup correctly and published it. FYI, I renamed the project to "Decree" and that is what the pod is called.
Does anyone have macOS Catalina's Create ML object detection working the way it was used in [https://developer.apple.com/videos/play/wwdc2019/424/](https://developer.apple.com/videos/play/wwdc2019/424/)? I want to know if I should keep chasing my errors- are they my fault, or the fact that Create ML is in beta?
And that's a good attitude. I have an impression that due to bad reputation of code-newbies and their 'this is x of type int' comments some folks are simply avoid comments at any cost, even when they're useful and clarifying. Needless to say about code-gurus and 'WRITE SELF DOCUMENTING CODE, DON'T COMMENT', sigh
I found [this](https://stackoverflow.com/questions/56517400/swiftui-dismiss-modal) on Stackoverflow, maybe it helps, it seems to be the same problem
The rule I like for comments that code should be self documenting in terms of **how** something is done, and comments are there to explain **why** (if it‚Äôs not obvious)
This app adds emojis to your calendar events. I find emojis for many more things than apple‚Äôs simple keyboard suggestions such as (airport codes/pro and college sports teams/festivals/etc). The emojis really work well on the Apple Watch calendar complication. Please download it and let me know what you think.
The old clear is better than clever principal.
Most companies with large mobile apps use several languages. A "normal" minimal set is a server languate(python/ java/literally anything), an android language(java/kotlin), and an iOS language(objc/swift). iOS and android are in a transition period between "blessed" languages so many apps over a couple years old use both of the languages mentioned in their section because its not worth re-writing a bazilion man hours worth of working, tested code to the latest hotness. Lots of them use some C/C++ too because it's got the best performance and basically everything has some form of intetrop with C so it can be used as a glue language in multi language projects.
This really hits home with me. I always try to write super-advanced-looking code in an attempt to impress myself and others, but I've never thought of a middle-ground approach like this.
It is happening because of cliptobounds. Set cliptobounds to false on the table view and table view cells as well
At my previous company I stumbled across a codebase that had comments like ‚Äúthis is a class‚Äù and stuff like that in every single source file. Apparently stuff like that was written when they brought in a contractor to teach people OOP back in the late 90s or so which caused people to write completely redundant comments.
I believe clip to bounds is only for iOS, I tried to use it in my code but NSViews don't have that attribute.
I asked Apple Education on twitter but they never replied. Please DM them! Maybe if enough people do it they'll answer to one of us
Yes, you can download swift for Linux. To access the standard C library you can `import Darwin` or `import Glibc` depending on your platform.
I just release [Emojify](https://apps.apple.com/us/app/emojify-the-emoji-app/id1467226342). It adds emojis to your calendar. They look great on the Apple Watch calendar complication.
I think the original code was fine here, not really clever at all. It's just map.
I'll check it out, thank you!!
Isn‚Äôt a commit message more appropriate for the why?
So the same token will be used twice?
Yeah, Swift is one thing, and AppKit / UIKit / SwiftUI is a whole different thing. Definitely focus on Swift on its own first, followed by the UI stuff later. AppKit / UIKit are old Objective-C systems, and there‚Äôs some dissonance when using them with Swift. I haven‚Äôt used SwiftUI yet, but it should make more sense with Swift. I too do mostly system level C work, but I have found that Swift influenced my C development for the better. ‚Äòguard‚Äô and ‚Äòdefer‚Äô make Swift a little more coherent, I‚Äôve adapted that style in my C code as well.
Elegance does not have to be understood. It should be self-evident that it is elegant. &amp;#x200B; This means your code has to be human-readable first then it has to flow its logic that a human can understand the flow. If your code is too complex to follow (no matter how efficient it is) then the next developer to inherit it is more likely to rewrite it instead of understanding it. &amp;#x200B; As beauty is in the eye of the beholder: we as developers need to step back and think about future-proofing code not just in terms of supporting practices and paradigms that "may become", we need to ensure that these (practices and paradigms) can be followed by inheritors of the code who may have other ideas on how to implement logic. &amp;#x200B; A great enemy of progress is the restriction of ideas. Making code too difficult to follow is a restriction of an idea. It is akin to the old Church wanting everything written in Latin and forbidding translations of the bible into other languages.
Not necessarily. * a lot of people don‚Äôt look at git history or blame when reading code * if they do, it puts the onus of finding that information on them, where if it‚Äôs in a comment right next to the code it‚Äôs almost unavoidable * in tricky codebases, there might be multiple oddities in a single commit * if the request for documentation is made in a pull request, it‚Äôs better to add a commit to correct it than it is to rewrite history * If commits get squashed, that information is obfuscated or lost * If the snippet is copied as a reference material, rather than inside its repo, that information is lost for the recipient * In my experience, lots of devs‚Äô (including myself) comfort with git is not great; they know it well enough to do their job and that‚Äôs about it If a commit message based workflow works well for you, I‚Äôm not saying it‚Äôs wrong (git is an incredibly flexible tool and can support lots of different workflows), just that there are reasons why it wouldn‚Äôt work great in many cases.
I just wanted to leave you a second message and say Postman was awesome! It helped me figure out what I needed, and I definitely don't think I would have figured it out on my own haha. Thank you again!
This is not true!!! Objective-C and Swift for that matter are languages that are based on the idea of being able to do things in multiple ways. We as developers are conditioned into "best practices" by whatever organizations we are associated with at the time. &amp;#x200B; As much as I believe that writing efficient code that is too complex to follow is a restriction, I must state as well that the enforcement of "best practices" can be another way of restricting ideas. We are forced by commercial politics to ensure that we write our code in a certain way and that follow a limited set of algorithms that others have deemed "efficient". As such we are prevented from experimenting with "what could be". &amp;#x200B; This is what I lament most of all. The "hacker" culture which gave birth to all the technology we are using in the now is being killed by "well defined", "proven" and "best in class". We don't know how to innovate and embrace the true parents of progress: creativity, experimentation, failure and idealism. &amp;#x200B; Don't hate your hacker friends or co-workers. Understand them, embrace the fact that what we want always is "to impress". Leave a good idea out there and let it germinate. If they have written something you cant understand, ask them to simplify it or explain it in comments or documentation. Fight for your right to understand "how", don't let someone else define it for you.
One man's elegance is another man's cleverness. I've seen plenty of flame wars where one side says the code is too clever and hard to understand while the other side says the code is fine for anybody who understands the language in question. Who's right? This isn't quite bike-shedding because it really does matter whether the code is understandable by the team (or future you,) but there is no obvious place to draw the line. Each team has its own culture.
I think Swift, with its open-sourced approach encourages this behavior. Honestly though a little openness and understanding goes a long way here as well as asking for the time to do what is needed. If your company is not open to such ideas I think "that" is a bad reflection on the company you are working for.
In my notes for my programming students, I make the same point, saying that computers, smartphones and even watches are all fast enough these days that you should rarely need complex, efficient code.
Happy to Help! Postman's saved me a ton of time whenever I'm working with APIs anywhere. Good luck with your project :)
How do you feel about Swift implicitly returning an instance without having to type `return self`? Does it help or does it make the process a little muddier and harder to understand?
If it's not readable then it's not elegant. It might be something else, but it isn't elegance.
&gt; Elegance does not have to be understood. It should be self-evident that it is elegant. 'Self-evident' implies comprehension. Comprehension implies understanding.
Swift for backend is also growing. SwiftNIO is an interesting Apple-hosted open-source project for this.
This is one of the reasons why the best engineers shouldn't always be placed in management. Having a good engineer, but one that understands workflows and teamwork is critical for a team that has "clever engineers"‚Ä¶ ;)
Fine, fine... amended. Elegance as I want to define it in this case means that I do not have to put an effort to understand or comprehend the code. It should be immediately evident to code readers how it works. That is elegant code. &amp;#x200B; If you think that I am mixing elegance with simplicity. Let me say it straight: I AM. I believe in whatever is simple is best, whatever is complex is unnecessary.
&gt;Any fool **can write code that a computer can understand**. Good programmers **write code** that humans **can understand**. &gt; &gt;\---Martin Fowler
None of those points are compelling reasons to comment in the source code. You and devs aren‚Äôt comfortable with git? You didn‚Äôt know how to run git log? If the commits get squashed? You don‚Äôt squash commits after merging into master. There are multiple oddities in a commit? So make a bulleted list in the message. You don‚Äôt look at git history when reading code? I do it all the time, and you should too.
I would agree that none of my reasons are _compelling_; they‚Äôre mostly surrounding convenience, ease of adoption, and pragmatism. Can you provide compelling reasons not to comment in the source code?
What is the book?
Not readable by whom? You? I can't read Russian, does that mean no Russian prose can possibly be elegant? A math proof can't be elegant because my eight year old doesn't understand it?
Can you provide a little more code/data? Like does "subArray" look like?
Wow... 1) Code does not always come from a live SCM, commit messages are not always available 2) Good comments make for good online documentation (deoxygen, javadoc, etc) 3) Inline comments mean no context switch looking up commit messages 4) Inline comments are a great place to include usage notes and examples Don't worry about code comments, no one is going to hire you to code professionally.
Yes. I am incapable of reading Russian poetry, so therefore I cannot tell the good from the bad.
You can't use Playgrounds for performance testing at all, generally. They add a ton of overhead to do all the playground-y stuff. Once you switch away from Playgrounds though, you would need to put each thing you want to test in a loop to run it enough times to get meaningful measurements, then make a Date() before and after the loop and see how much time passed between them.
Ah bummer, that's what I was afraid of. Thanks for the info, appreciate it!
Then I take it you can you appreciate that someone who's had four months experience with a language and someone with four years experience will likely have a different idea regarding whether a particular block of code is clever or elegant (or both or neither for that matter. They aren't mutually exclusive.)
Sorry for the delay, i just wanted to try it out before replying, and I gotta say, thank you so much :D
I‚Äôd throw up a prompt: ‚ÄúDo you want to continue with level X, or resume progress with level Y?‚Äù
Source: Page 7 _C Programming. A Modern Approach._ By K.N. King https://archive.org/details/KingCProgramming2ndEd./page/n1
Why does it need to be in a playground?
I wouldn't bother doing anything serious with SwiftUI yet, as far as on the Mac platform, its basically useless currently.
If you‚Äôre offering an IAP to unlock full functionality, I think you need to list in the description the free tier‚Äôs limits. It‚Äôs more ethical. Other than that, the app seems really nice üëå
Yeah, so better read up on the OAuth2 flow first. As long as the token is valid you can use it, if no longer valid you can refresh it.
Commented code should be a requirement however it should be what I often see which is blatant definitions for a variable, function or whatever. Such nonsense is a ware of time rather the goal should be idiomatic code with rational naming. I‚Äôd much rather commenting be focused on detailing the research or technology the code was written to implement. This especially means references to documents or research that drives the code. The biggest problem with most programming languages is that they are text based making that a challenge at times. One of the reasons I took such an interest in Jupyter and similar technologies is the ability to mix in text (html) and graphics into your code. The concept has a ways to go but it is incredibly nice to be able to open a file and see right there a beautifully rendered formula in the code or a nicely formatted comment that informs you as to the codes reason for being. .
Nexmo is competitively priced. Haven‚Äôt used it but looked into it before. The truth is that SMS is expensive and short codes are REALLY expensive.
It doesn't, I was wondering if it was possible.
What have you tried?
I‚Äôd say no! But it isn‚Äôt a hard and fast no. In part it comes down to how you define why! If you make a code change for maintenance or similar, that is to go into a commit. However in the code the comment should be about why the code exists. This might be interpreted as what but a simple example might be: ‚Äú this code implements a xxxxsort based on the research of John Doe as detailed in this paper.‚Äù Or something similar. Another approach might be to say something like ‚Äú this code implements a spiral generator that implements this formula: {math formula inline}. Maybe add a few more details like if it is an Archimedes spiral here‚Äù Now I know the preceding is really simple but the point is what does a programmer do if he is assigned a piece of code maybe 10-20 years old that is I‚Äôm a problem domain he isn‚Äôt familiar with. Commit entries really are not suitable for this information. I look at it as the bigger picture why or what. It is the information the new programmer can use to better understand what the code is trying to do, that is to access the research the code is derived from. One other piece of information that should be put directly into comments in the code is where mathematical short cuts are implemented. Especially those that are not well known outside of very small circles. In a nut shell comments in code can be very useful. Unfortunately most that I‚Äôve seen are anything but useful.
No problem at all, You‚Äôre very welcome! I‚Äôm glad I was able to help out, it‚Äôs a great course!
You got it! Everything works smoothly. Thank you :) I also opened your first issue üò¨It's more of a suggestion though. I also tweeted about it üëçüèº
Where did you learn about `var content: () -&gt; Content`? Pretty cool that you can create a View where you can easily embed other views.
If you‚Äôre trying to RE the data / formats that their software expects your best bet is to use an actual Bluetooth sniffer and hope they are not using any encryption. BLE 4.2?+ also has some built in encryption I believe but not familiar with details. Their messages may also be secured by obfuscation. I think your best bet is to get a sniffer and start looking at the actual bytes being sent from the official app, look for patterns and try to duplicate them first, then manipulate the data you send based on what you see when you make small variations with the official app You could also email them and ask. If your project may result in more sales for them who knows, they may give you a spec
My _guess_ is O(n), but there may be complications to that given swift Unicode correctness. However, isn‚Äôt this method bridged from the method on NSString? So then maybe there aren‚Äôt any Unicode concerns. And there might be a fast path for ascii strings, but maybe you pay a bridging cost since Swift 5.1 strings are backed with UTF8, but NSStrings are backed with UTF16? TL;DR: if this is really performance critical code, just use Instruments and profile it. Odds are this code here will never be an issue.
You shouldn‚Äôt use Date for time measurement.More reliable source is DispatchTime which is based on the Mach time unit. It returns time in nanoseconds.
Ok. I can see my comment sparked some controversy. I do agree with most of you, that both languages are rich languages that are able to do whatever structure you need. I think my point was, that with Objective-C and the Apple frameworks, there was a very well established way of doing things. We did everything in an Apple interpreted method of MVC. It was not the best, as an example testing was complicated, but in absolutely lot of the cases it got the job done. I once heart an interview with Nitin Ganatra (the old manager for the Mail team at Apple) who said something like he didn‚Äôt care what the developers technical religion was as long as they got the job done. I, to a large extent, agree with that. MVC and Objective-C did that. In most of the cases it got the job done. Now Swift has arrived, and it has opened the door for many other possibilities of structuring your app and doing things. It is also a much more capable language than Objective-C in form of expressiveness. Contrary to how my previous post sounds, I do actually think it‚Äôs a good thing that we can move above the architectural capabilities and limitations of MVC. I also regard Apple‚Äôs move towards SwiftUI as yet another step towards Apple stepping out even more of architectural decisions. I think my point is that Swift did solve a lot of the problems that Objective-C had - but it does not do so without introducing its own set of challenges. I am a freelance developer, and I constantly move in and out of code bases, so I‚Äôm fortunate to see a lot of these things in practice. I have yet to see a company that has actually down the line stuck to whatever decision they went with when they started out. Some do very complicated architecture that can really complicate stuff because management has decided that they need 85% test coverage - then three years down the road not a single test has been written and now you‚Äôre stuck with this overly complicated minute separation of layers for nothing. I‚Äôve also seen code bases where one developer early on has decided on an architecture, and later on another developer has come in and (presumably because of time pressure) has decided to just walk over it to get the job done, and now it‚Äôs just a mess beyond repair. My personal opinion is, that 90% of the apps I worked on is just fancy frontends of some REST API that has most of the business logic. They are basically about presenting data in a user friendly and beautiful way. It‚Äôs not rocket science. We‚Äôre not sending men to the moon. The projects I have worked on that has worked the best, is the projects where there was as dead simple architecture. They might even use Storyboards. No unit tests. No integration tests. Nothing. Just dead simple. Sometimes it‚Äôs better to just have a dedicated tester constantly checking if things work as supposed instead of spending a lot of time building and maintaining tests, setting up and maintaining build environments, etc. Again... just get the job done. My point is that back in the Objective-C days where there was well established conventions about how to go about things, it was much harder to go down a road that was hard to maintain going forward. Because of Swift‚Äôs vast capabilities, this has become a lot easier. And my professional experience has shown me, that after code bases has transitioned to Swift, extremely failed architectures, messy code bases and frustrated developers are a lot more common these days, than they were just five years ago.
Hey [check](https://stackoverflow.com/questions/17793022/make-nsview-not-clip-subviews-outside-of-its-bounds) this out
I would not enjoy having someone on my team that thinks like this.
Thanks for the response. The person who contacted me about this tried already and got no response. (It‚Äôs a Chinese company) but I definitely will look into a Bluetooth sniffer.
Or just crank your loop count up another 2x and don't worry about it. If you get to the point where Date is too low precision for your measurements, you'll need to control for CPU turbo first anyway (yes, I have benchmarks I've written where CPU turbo introduces way more noise than Date).
Because of situations like these comments have a bad rep among higher-level programming languages. Unfortunately IMO programming world likes to be dogmatic, eg. some senior programmer had a bad time with over-protocolization: 'Let's ban protocols here, classes only!'. Another didn't know if his features will break something because there were no tests: "testing every method, 99% coverage!"
Well, its very quiet round here - maybe everyone else is over on Facebook or something? After a few days when distracted by other things I'm now back on track - finished day 26 including the challenges, sort-of. a) As suggested I'll come back and add loading the "permitted hosts" strings from a file b) Modelled on Project 1, adding the hosts to a table was straight forward BUT when you split the function between a table controller and webview controller you break stuff and the code structure needs a rethink to make it all work again: - if you instantiate the webview each time a site is selected it's not only expensive but loses the potential for forward/back navigation the way you expect it - the checking that each web site is safe has to be built into the webView controller but it would be cleaner if the set of safe sites were abstracted from both - if it were the 'model' used by both the tableview and webview More anon ... ...Ian.
Yea it‚Äôs super useful. I looked at the type signatures and constructors for built-in views (like ScrollView) and mimicked the generic `Content: View` type declaration.
Yeah, I‚Äôm avoiding, I‚Äôm just gonna have to have the user send the message them selves.
Thank you for the feedback. I‚Äôll get right on that.
Probably that's what you are looking for: [https://stackoverflow.com/questions/41268744/how-to-put-alphabetical-index-on-right-side-of-a-uitableview](https://stackoverflow.com/questions/41268744/how-to-put-alphabetical-index-on-right-side-of-a-uitableview) &amp;#x200B; And "Yes" it's a part of [UITableViewDataSource](https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614857-sectionindextitlesfortableview?language=objc).
Writing a generic "full-fat" ONVIF driver for iOS, MacOS and tvOS. Pretty big project. Only at about the halfway point, but it works on every camera I've tested with. Video is easy. I had that working on Day One. Most of ONVIF is about device management.
In about a year or more. &amp;#x200B; I'm actually a bit surprised at how many large organizations are still using ObjC. I guess that I shouldn't be. These are big shops; not just old stick-in-the-mud small shops (which are more likely to be pure Swift, like me). &amp;#x200B; It is interesting. I took the time to learn the basics, but when I realized that it requires iOS 13, the urgency was lessened. I always program at least one major version back (usually not more than that). &amp;#x200B; I am looking forward to being able to rely on it. I despise IB. &amp;#x200B; When iOS 13 is that "one version back," I will be writing apps that rely on SwiftUI.
Yes you would. I would teach you how to use your tools.
Same. Rewriting an app entirely in SwiftUI, an app that heavily relies on drag&amp;drop. Hopefully that DropDelegate "just works". We shall üëÄ
You can pass through either `String`, `NSNumber` or `NSDecimalNumber`. E.g. let z = Decimal(1.234). let dz = Double(z.description)! let dnsz = Double(truncating: z as NSNumber) let nsdz = NSDecimalNumber(decimal: z).doubleValue I'm not sure which is the most efficient.
Looks neat!
Up till SwiftUI/Combine, there was no compelling reason to migrate large objC projects. Swift is irritating to use with objC SDK/Libraries. It really comes into it's own when you are using pure swift libraries. I figured apple would start building Swift abstractions at some point and so now i'm ready to migrate.
Why did you make a whole new post about this? It‚Äôs directly related to a comment someone left on your [last post](https://reddit.com/r/swift/comments/cgl5ei/if_a_player_is_in_the_middle_of_level_x_and_you).
Have you tried compiling this with xcode beta 4? I believe I have it set up properly, however, I am receiving a `Generic parameter 'Content' could not be inferred` error next to the content I am trying to embed. The only pieces of code needed to make the view function properly are `&lt;Content: View&gt;` and `var content: () -&gt; Content`? Right now, I'm just trying to embed two Text views.
Apple ships a Bluetooth sniffer with Xcode. In xcode menu: \&gt; "Open Developer Tool" &gt; "Other Developer Tools" &gt; "Additional Tools for Xcode"
ew