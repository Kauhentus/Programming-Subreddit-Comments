Work out the point for twelve o'clock. Then rotate it clockwise by an angle of 360 degrees / 60 second or 6^o per minute or second increment. So, 10 minutes would mean you rotate the point by 60^o , 17 minutes would be 102^o and so on.
Could u please post some example code for that?
Class assignment?
No I need it for a camp I'm going to and I won't have my laptop 
I like https://github.com/malcommac/SwiftDate
Also could I just make if statements for every time?
Are you kidding me..? That's not even a starter project .. just shit pro level..
Why? Foundation has this stuff built in. Joda Time is only necessary in Java because the date APIs pre Java 8 sucked ass.
Except the messaging syntax is shit and pointlessly different from Smalltalks's. And no, the evolution mailing list isn't open minded.
I had a look at `NSDate` and `NSCalendar` in the [API Reference ](https://developer.apple.com/reference/foundation/). Are there additional classes that contain more date calculation / comparison methods that I'm missing?
There are libraries for sure, but Instrongly suggest you first use the inbuilt calendar class
I don't find any difficulty in adjusting. ObjC brackets, semicolons in C languages, colons in python, spaces in Ruby, right to left reading in Haskell. Switching back and forth is effortless. I don't see why people get so obsessed with one way. 
You'll have to be more specific about what you're missing for anyone to answer that question.
You probably want to assign the string array to the same variable that your `UITableViewDataSource` methods are using. Possibly `list`? list = defaults.stringArray(forKey: "SavedArray") ?? [String]() 
You need to be able to access that data in tableView(_:cellForRowAt:) As it is now, you're just assigning it to a variable and never using it again. 
`.isEmpty` instead of `.count == 0`.
Between processes? Where do Apple state this?
I am trying to do a social app. But you need server side, right?
If you have a free developer account the app certificate expires in 3 days. After you sign up, then you can use apps for up to one year.
Nice! I'm almost done as well, but I'm trying to find a way to show the posts of the people the user is following while having an infinite scroll. It isn't easy lol
Yeah that can be tricky. I set up my Firebase database to have a "following" node off of the parent "user" node. That way when a user followers another users, all of their posts are added.
Why not use apples leaderboard?
Do you mean the Game Center setup? That's an alternative, but I would rather go with Facebook if it was possible. Do you know anything about it?
That's a stupid move from Apple which I never understood. I develop mac apps for the desktop and they never expire, why should apps for the mobile expire? One thing is not being able to deploy to the app store and another thing is deploying to my own device for my own use. No matter how many stupid excuses they throw at us there is no valid reason for deactivating the apps in our own devices. /rant
I saw a good YouTube video on this, hold on. Edit: check this guy out on YouTube https://youtu.be/zgP_VHhkroE If this isn't what you need, please provide a screenshot of the app you made in Java
Working on one right now! I'm currently working on reworking how handle errors and how I construct flows (for users inputting data, like signups). It certainly is an undertaking!
Thanks! And how would I reference I specific button (cup)? For example, if it's in a 10-cup layout, how would I set an action for the top cup?
How is that?
Yeah it's challenging but when you start to see everything come together it is a great feeling!
Doing well. Something is very low level at some points. For example, upload multi-files
inside the IBActions, simply say yourlabel.text = "First" or = yourbutton.titleLabel.
So it requires you have a mac developer account?
You know this is one of those times where a `protected` keyword would be extremely useful. Then one could write this: public struct HeaderKey { public let rawValue: String // see the protected keyword here protected init(_ rawValue: String) { self.rawValue = rawValue } } public struct Response { /// I'm using an array of tuples, because according to the HTTP spec /// duplicate header keys are permitted and can even serve a purpose private headers: [(String,String)] func addHeader(key: HeaderKey, value: String) { headers.append((key.rawValue, value)) } } /// Now whenever you'd want to add a new type-safe HeaderKey /// you could just do this anywhere in your code extension HeaderKey { static let contentType = HeaderKey("Content-Type") } /// Which would allow you to do this: response.addHeader(key: .contentType, value: "application/json") /// But you still wouldn't be allowed to do this: response.addHeader(key: HeaderKey("Content-Type"), value: "application/json") This means you can have the convention to define all your header keys in one place (so you only have to check your spelling once) and then use the ones you've defined type-safely in the rest of your code-base. I've read the swift-team's objection to a `protected` access keyword, but I don't agree. Yes it is less safe than the other access keywords, because you can always make a public function that exposes the functionality or value of a protected function or property. However, it can fulfil a different purpose than to be 100% safe. Namely it can gently nudge someone in the right direction. It can show a developer how your code is *supposed* to be used. That's already a lot better than being forced to make something completely public because the only alternative would be to make it completely inaccessible.
If you want to get the index path of the cell that is about to be added to the collection view, there is a method that gives you that and you should be able to set the color there. If that isn't the cell you want to get the index path of, which cell are you looking for?
i would work with game centre for now, and implement later if you're not familiar with Facebook's API so it doesn't hold you back during development.
Hmm, I've never used it before but I was under the impression that it solves the problem of image caching (thus not having to manually store it in the data model) but not the problem that I have of populating the image after the fact. It has that capability baked in as well? Also, do you use Kingfisher in conjunction with other networking libraries such as Alamofire?
I write a lot of apps that deal with Music Theory and music notation. Over the years, I've developed various methods that are capable of notating music for Cocoa/UIKit. It finally became time to just roll this project into a framework. Step 1: https://github.com/mmuszynski/Music Step 2 involves the actual displaying of the music, and that's sort of on hold to deal with the apps that need to be updated.
Ok thank god I'm not the only one. How did you rewrite it? And unfortunately I don't have years, which is why I'm willing to pay for assistance if necessary
Don't rely on a property of the UI, instead, implement a centralized class (e.g. a data-manager singleton or similar) that handles your downloaded data. This way, no information gets lost, your download can finish whenever it likes and your detail view can be populated once the image is available in the data manager
what have you tried?
I'm actually messing with it right now and surprisingly when I created a function that creates an instance of my object it seems to have no issues using it more than once. I have no idea how this works behind the scenes but I suspect that it has something to do with functions using local variables.
Impressive library. The value of zero dependencies is often overlooked
Can you post some code?
I'm wondering if a struct could help here? ie: class SomeCustomClass { var employees:[Employee] = [Employee]() } struct Employee { var name: String } let c = SomeCustomClass.init() let e1 = Employee.init(name: "Bob") let e2 = Employee.init(name: "Sam") let e3 = Employee.init(name: "Alex") c.employees.append(contentsOf: [e1,e2,e3]) print (c) Try creating a struct that holds all the text field data you are wanting, then add it to your array or class. This is similar to that of a view model concept. 
Personally, I wouldn't use an exception in `canCredit`/`canDebit` - I, as a programmer, expect to be able to call this, and it will tell me true or false. I'd maybe expect an exception to occur when it fails to load some account data, for example, but not to indicate that a credit/deposit can't be made. The `credit` and `debit` methods are different though. When I call one of those, if I pass in an invalid amount, an exception would be ok for me because I asked the method to do something impossible. That brings me back to your question, `Is there a way to make it so that it returns and error to the thing that originally called it`, and yes, you can do that, by simply throwing an exception! A signature like `public func credit(amount:Int) throws` would indicate to me that something can go wrong when I try to credit an amount, and it's not far-fetched to think that the method will throw if I pass in an incorrect amount. So basically, I'd say, remove the `throws` from `canCredit` and return true or false. In `credit`, add the `throws`, and throw an Error if `CanCredit` returns false. The calling code is now forced to deal with errors when passing in an incorrect amount. Another thing, in Swift, it's not common to do private variables that are underscored. Here's my version: class Account { public private(set) var balance: Int = 0 public func debit(amount: Int) throws { guard canDebit(amount: amount) else { throw AccountError.invalidAmount } balance += amount } public func credit(amount:Int) throws { guard canCredit(amount: amount) else { throw AccountError.invalidAmount } balance -= amount } // // Private methods // private func canCredit(amount:Int) -&gt; Bool { guard amount &gt; 0 else { return false } return true } private func canDebit(amount:Int) -&gt; Bool { guard amount &gt; 0 else { return false } guard balance &gt; amount else { return false } return true } } let act = Account() try act.credit(amount: 100) print (act.balance) // 100 do { try act.debit(amount: 101) } catch { print("Couldn't debit: \(error)") } print (act.balance) // still should be 100 try act.debit(amount: 1) print (act.balance) // 99 You'll notice that my error messages are worse, because I have only one exception. If you need two different ones depending on the reason, I'd refactor something like this: public func debit(amount: Int) throws { guard checkAmountValid(amount: amount) else { throw AccountError.integerNotPositive } guard checkFunds(amount: Int) else { throw AccountError.insufficentFunds } balance += amount } Of course, you can get rid of the 'integerNotPositive' error case by just using UInt instead of Int, which has to be positive.
Cool stuff
Well, I can't really argue against that 🙂
Thanks for that. I will get set up on the slack group. I got it all working and got my client apps all fixed up as well!
So this avoids me the overhead of typing six ticks? 
Why not have the .row (Integer) as a parameter, since that is what you use to get the message out of the array. Or have the message as a parameter? Or the indexPath as parameter if you need more then just the row. Multiple solutions
yes
I like the idea of having the do-try-catch inside the thing that's calling it; rather than in the function and I agree with the idea of canCredit/canDebit not use exception and should still be able to call it and get true/false. I'll play with it in playgrounds.
I tried this; the log of let act = Account() try act.credit(amount: 100) print (act.balance) // 100 actually outputs -100 This is because the credit and debit functions are incorrect; credit should add, and debit should reduce
How do i write tests for this without constantly doing do-catch? var act = Account() do { try act.credit(amount: 100) } catch { } let balance = Double(act.balance) let taxDue = Int(Tax(balance: balance).taxDue) do { try act.debit(amount: taxDue) } catch { } XCTAssert(act.balance == 90) Can i replace them with guards?
i posted some sample code just now if you wouldn't mind taking a look.
How did you declare your controller to observe this notification ? 
Totally unnecessary comment.
sry i had no idea you were the creator of the library, I thought that was stock imagery or something... I've deleted the comment. Again, I'm sorry.
Performance Test: Ran a search on 1300 book titles. Executed the test 10 times. Results are as follows: - Average time (seconds): 0.660 - Relative standard deviation: 1.860% - All tests times (seconds): [0.687017, 0.647608, 0.661385, 0.665456, 0.662192, 0.665456, 0.640384, 0.652648, 0.651242, 0.666398] Soon, I'll be creating additional tests with more items (in the tens of thousands range).
You can call a throwing function without considering the error by using. `try?`. var act = Accout() try? act.credit(amount: 100) let balance = Double(act.balance) let taxDue = Int(Tax(balance: balance).taxDue) try? act.debit(amount: taxDue) XCTAssert(act.balance == 90) If you use `try?`, you don't need put those statements in a `do` block and you don't have to handle any errors. If the throwing functions you're calling return some value, then `try?` will give you an Optional -- if the function worked, you'll get the value wrapped in an Optional, and if the function threw an error, you'll get nil. Just like with Optionals, if you're sure the function will return without throwing an error, you can call it with `try!` to force unwrap it. Of course, if the function does throw an error and you called it with `try!`, your program will crash. For example, [this function](https://developer.apple.com/reference/foundation/filemanager/1414584-contentsofdirectory) (belonging to the `FileManager` class) returns an array of the names of the files at the given directory, but it throws an error if the directory doesn't exist. func contentsOfDirectory(atPath path: String) throws -&gt; [String] If you're sure the directory exists and you don't want to bother with a `do`/`catch` block, or with an Optional, you could just call it like this: let myPath = "/path/to/directory/that/surely/exists" let fileNames = try! FileManager.default.contentsOfDirectory(atPath: myPath) But it's usually best to just deal with the error.
&gt;Personally, I wouldn't use an exception in canCredit/canDebit Exceptions do exist in Swift in as well. It's important to not interchange the terms, especially when talking to beginners, because Exceptions are not recoverable.
Yeah it's bad in my opinion, I hardly get stuck on anything but spent hours today trying to get the cornerRadius to make an imageview into a circle and just can't figure it out on one of my cells, I've been doing iOS over 6 years and still today I'm getting so frustrated trying to make a damn circle. Anyways I'll pm you my email and maybe we can work something out. 
Hi LisaDziuba! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6e97ii/apple_has_released_a_free_beginnerlevel_900page/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
This. Super important for beginners to note and anyone coming over from a language like Java.
no, you should just mark the test case as throws, and use try. Do not use try? like this. 
the data is accessible through a public array in a separate swift file I created. I've tried manipulating the data directly by making it a var, and I've also trying making a copy of the data for the user to use and assigning it to another var. still no dice 
oh ok , does an array of "Food" count ? or does it have to be an array of a native simple data type ?
Yeah, it needs to be an array of a simple data type. If you make Food conform to NSCoding, then you will be able to store an array of them. https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/PersistData.html
What's being force unwrapped, and how can it cause a crash? I only saw like three force unwraps. One of them was for an array index that definitely exists, the others seem like they'd only be hit with 0 length inputs, which I'm guessing are caught earlier in the library.
a lot of good stuff there, ta
I mean it's not the best idea to do that but I was just trying to show it's possible to use throwing functions outside of a do/catch block.
You should *always* use or test the result of try? Use try! In what you wrote instead.
Use this opportunity to learn CoreData or another database solution. Storing in UserDefaults is usually frowned upon for object graphs like the one you want to implement. Granted, your case is small, but as it grows, you'll want to find alternatives to UserDefaults.
Whenever you use `constraintEqualTo:constant:`, you're creating a constraint for your current view relative to another view. In this case, you're setting all of your `mainView` constraints relative to `view`. For example, the line `mainView.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -350)` sets the difference between the bottom of `view` and the bottom of `mainView` to 350 pixels. So as your `view` grows, so too does your `mainView`. What you want to do instead is set the width and height of your `mainView` to constants. You can do this with `mainView.widthAnchor.constraint(equalToConstant: &lt;some width constant&gt;)`.
Get rid of the `let` in your method, you're creating a new variable called `IPString` instead of using the one you already have.
Can you more specify? You mean handle password in the server or handle connection to the server?
Sorry for the delay, the reason why my tax file is using doubles and not currency is because the game only ever deals with Ints (or whole numbers); actual currency is never used in the game; and I wanted a double to ensure for double precision on the amount * rate calculation. Also, the rate percentage never changes, its a fixed decimal number of 0.10 In summary; my game only uses Ints and I was using a double only for the rate calculation. 
Yeah a private social network: https://itunes.apple.com/us/app/event-is/id1141185734?mt=8 it was Swift 2.3 but used a library Kingfisher for Async images n guess the dude didn't wanna upgrade to swift 3 so I kinda abandoned the app cz I'm not going to correct 300+ errors 
Watch this video, it has very good explanation of how autolayout works In your case the reason the view grows / shrinks is because you anchor it to the edges of your superview ( the view controller i am guessing) and that superview changes sizes on devices, if you want a constand dimension use width and height anchor and make it equal to a constant. After that you need to position it by using centerx or centery anchors or by the edges using top, bottom, leading, trailing anchors. https://youtu.be/xjArhdrqAn8
Could we ban these cancer sites? Redirecting to some Indian crap.
Attempt at formatting it; class Hero { var name: String = "default name" var superPower: String = "default power" var isEvil: Bool = false var arrayOfHeros:[Hero] = [] // initialized empty array of type Hero init ( ) { // nothing needed here because all of the properties have initial values } // above is a simple example class // func createNewHero (newName: String , newSuperPower: String , newIsEvil: Bool ) { var tempNewHero:Hero = Hero ( ) tempNewHero.name = newName tempNewHero.superPower = newSuperPower tempNewHero.isEvil = newIsEvil arrayOfHeros.append( tempNewHero ) } }
Why do you want to "change the tempNewHero var before appending it"?
No, just bugreport.apple.com Languages and low level frameworks have been open source at apple for many many years, Swift being OSS is not a huge change in that respect.
Aren't you mistaking swift for iOS sdk?
I would suggest you get used to autolayout constraints first with **IB**. When you understand them quite well, it'll be easier to do it programatically. And stick to IB autolayout constraints unless you really need to set them programatically. 
Hey everybody 👋. We've started a Youtube channel about mobile development. We speak mostly about native mobile and react native. We are trying to get a new episode out every week. Thanks for checking it out, it means a lot for us :)
If the force unwraps can't cause a crash, then the code can nearly always be written in such a way that there is no force unwrap. This is Swift, after all. I'm not saying these particular force unwraps can realistically cause a crash, but I'd still rather use the type system to ensure that no runtime error will occur than to take someone's (including my own) word for it.
This seems to work; though not sure if I did it right. class Player { var name: String = "" lazy var portfolio:Portfolio = Portfolio(owner: self) init(name: String) { self.name = name } } class Portfolio { weak var owner: Player? var name: String = "Portfolio" init(owner:Player) { self.owner = owner } } let p = Player.init(name: "Bob") print (p.portfolio)
Okay, will do!
That makes sense I think. So is it Side Scrolling Cells inside a UICollectionView that is inside of a UITableView? Or is it Side Scrolling Cells inside a UICollectionView that is inside of another UICollectionView? And good info on not getting asked that question in an interview, that makes sense too-
Got it. Yeah I've used tableviews and collection views, but wasn't sure the best way to implement this.
Aw man, wish i could see the code without scrubbing through the video for it.
Here is what I have (currently not working) class GameScene: SKScene { //var ball1 = SKSpriteNode() //var ball2 = SKSpriteNode() var ship = SKSpriteNode(imageNamed: "Spaceship") override func didMove(to view: SKView) { //ball1 = self.childNode(withName: "ball1") as! SKSpriteNode //ball2 = self.childNode(withName: "ball2") as! SKSpriteNode ship.size = CGSize(width:100, height:100) ship.position = CGPoint(x: 0, y: 0) self.addChild(ship) } override func touchesBegan(_ touches: Set&lt;UITouch&gt;, with event: UIEvent?) { for touch in touches{ _ = touch.location(in: self) let SmallBall = SKSpriteNode(imageNamed: "Ball") SmallBall.position = ship.position SmallBall.size = CGSize(width: 30, height: 30) SmallBall.physicsBody = SKPhysicsBody(circleOfRadius: SmallBall.size.width / 2) SmallBall.physicsBody?.affectedByGravity = true self.addChild(SmallBall) } }
it seems like you fetch touch.location, but you never use it (which is why it recommended _ instead of a variable name) if you really want to keep the line for some reason, try adding a "let " at the beginning of that line?
Good to hear! 
So what is probably happening is that you swipe your finger quickly, the touch location is no longer contained in the ball's bounds, so the ball stops moving entirely. You need to drag slowly, keeping your finger inside the ball, which is probably maddening since it's a shooter. Does that sound right? A better method might be instead of just making the ball's position the touch location, have the ball (or ship or what have you) move towards the touch position. I don't know what that code would look like off the top of my head, I'd have to look it up to be honest, but that's the approach I would take if I were doing something like this.
Yes thats exactly whats happening. Because of other functions of the app I don't really want the ship to go where you touch (where you touch is where a projectile is fired). I guess I can make the ship it bigger but I feel like there is a better solution. I have played many mobile games where this issue does not exist so I know its possible.
I trust it.
What do you think of people who do a "clean" first? Are they paranoid?
Everybody has their own routine. I don't judge :) For me, the problems with builds are very very rare so I don't do a clean before a release build.
Considering xcode used to corrupt the project file back in ObjC projects, I always hit clean from old paranoia.
What about using callbacks? In this sample elixr the author appears to do a callback on debit and on ok performs action case Account.debit(player, price) do :ok -&gt; Portfolio.add(player, corp) # {{:ok, price}, %{s | corp: n-1}} {{:ok, price}, Dict.put(s, corp, n-1)} :error -&gt; {{:error, corp}, s} end I'm wondering if combining callbacks with throws is better or not? Sample; enum AccountError: Error { case insufficentFunds case integerNotPositive } final class Account : NSObject { public fileprivate(set) var balance: Int = 0 override var description: String { return ("Balance: $\(self.balance)") } init(balance:Int = 50) { self.balance = balance } func debit(amount: Int, completionHandler:@escaping (Bool, Error?) -&gt; ()) { do { let _ = try canDebit(amount: amount) self.balance -= amount completionHandler(true, nil) } catch let AccountError { completionHandler(false, AccountError as Error) } } func canDebit(amount:Int) throws -&gt; Bool { guard amount &gt; 0 else { throw AccountError.integerNotPositive } guard self.balance &gt; amount else { throw AccountError.insufficentFunds } return true } } let act = Account.init() act.debit(amount: 100) { (success, error) in if (success) { print (act.balance) } else { print (error ?? "N/A") print (error?.localizedDescription as Any) } }
Did you ever find the solution to this? I can only do it in the controller too
In large projects for iOS applications, most of the UI layer goes from being "dragged" on, to being created completely in code (easier for multiple collaborators to work on). As for the logic between code and "Visuals" you may want to look at some application tutorials. Essentially the visuals are just code with specific attributes/constraints to be displayed on the screen to the user. Logic to create the visual along with logic to handle input are usually all on the same level. As for how snapchat makes their interfaces nice, I'm not too sure. They may have some dev blog stuff laying around somewhere for you to peek at. My guess is they have created their own libraries over time for dealing with that stuff. Probably native so Objective-C or maybe Swift. They most likely have created their own custom objects, extending from base objects.
Doesn't [Archive do a clean build by default](https://stackoverflow.com/questions/14640816/how-to-create-xcode-archive-without-a-clean-build)?
try this after task.resume() ; session.finishTasksAndInvalidate() 
Use a super simple (probably only the P term) PID loop to move the ship toward the finger position if the finger is currently down or the last place there was a touch. You'll get nice smooth movement. 
Because the network call is asynchronous, the script finishes running before the call is done. [This post has a good explanation and some approaches to handle it](http://mgrebenets.github.io/swift/2015/10/08/async-swift-scripting): // ... var keepAlive = true let task = session.dataTask(with: request) { (data, response, error) in print("hello") keepAlive = false } task.resume() let runLoop = NSRunLoop.currentRunLoop() while keepAlive &amp;&amp; runLoop.runMode(NSDefaultRunLoopMode, beforeDate: NSDate(timeIntervalSinceNow: 0.1)) { // Run, run, run }
That did it! Thank you!
I always clean before submitting. There's an old joke about a programmer's conference attendees being asked if they would fly on a plane for which their team wrote the flight control software. Only one person said he would, only because the plane would be unlikely to even taxi down the runway if his team was involved. I don't want any problem when I submit, so I clean first. Paranoid? Maybe. Don't care. I clean.
Unnecessary to spin your own runloop. `dispatchMain()` will do it for you, then you can just `exit` from the completion handler of the task. Your way actually burns the CPU in the while loop.
I'm guessing email is out of scope: try u.email? Better yet u.uid.
my first interview asked me if I was familiar with collection views
I think you really bring up some awesome points. To begin, I think storyboard files can be really useful when either working with a small project or a very small team. Anything more and the user interface development becomes too complicated. That being said, I think developing custom IBDesignables is something every new dev should work with even when using storyboards as it makes your app stand out from the rest while giving you some introductory learning to the code side of design. Unfortunately, Apple makes those dang storyboards too hard to neglect during the infancy years of a developer's career. That is why I am providing my personal experience and what I believe to be some key take aways.
Yeahhhhhh... we always ask about UICollectionView in our interviews. So many apps end up using them.
All builds are done on the CI system, which creates a clean environment before every build....
Are you sure it was Xcode doing that and not CocoaPods converting the pbxproj from XML to OpenStep format (or vice versa)?
&gt; Removes all the product files For certain definitions of the word "all" 
I'm fairly certain the WWDC app is a table view, and the table view cells each have a collection view for the horizontal scrolling images
You dont need to change any names of variables. When you append an object to your array and the function ends, the only connection to this object is through an array - the reference from function's VAR is dropped. When you call this funcion again, there is not instance of your "tempNewHero" :) this is Just basic understanding of How OOP works, Or programming in general. 
Hi refine_and_refine! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6elusw/swift_on_the_server_with_chris_bailey_by_software/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
I wasn't using cocoapods in that project at that point, but I've had issues with that too, yes. Edit: I definitely remember having to open the project file in finder to delete some folders that XCode generated inside that, and that was prior to integrating other packages in that project.
I use this almost exclusively for all my notes — it's pretty perfect and I don't have any complaints. It's frequently updated and has support for custom themes, multiple windows, search, theming, Vim-mode, and a ton more !
There is a very good tutorial on Udemy called ["Pirate Bay App in iOS and Swift 3".](https://www.udemy.com/pirate-bay-ios-swift-3-development-app-only/) The course instructor walks you thru from start to finish on building a pretty complex eCommerce app. It goes much more in depth than the usual intro tutorials that you run across online. I think it will really help you get a good jump on learning app development. Good luck!
Great info! And thanks for the heads up about inserting headings
Thanks, that's very true about the commitment. I've committed myself to making the app for a conference next year, so that'll hopefully keep me motivated, and the Coding Club will as well.
The last thing we need is more design pattern posts.
I feel like a programmers note taking app on the Mac would be available on Homebrew-Cask and not the Mac App Store exclusively.
Have been very happy with Typora lately. Very minimalist but supports Markdown with live preview, and it's free. I'd recommend it to anyone looking for something simple. 
This is the only one you need, it's perfect.
Most talented software engineers know a couple of languages I say go ahead since it sounds like you don't hate programming yet. Your conference app is a great idea, the hardest thing to do is finish a large project completely. Swift and Python I'd think are close enough to not be using completely separate parts of your brain, I don't personally see any use for python but it doesn't hurt to know a few languages either way!
Awesome. I have been coding a long time. And when Swift came out I was really struggling to find books with proper syntax as they updated it so often in the beginning. I really enjoy your e books and how there updated. Defiantly haven't read a book that was very helpful for coding in the way yours is in a while. You should do a ruby series or python.
Thanks that's still great news to me. I was dissatisfied with Evernote and OneNote. I wanted the syncing but the support to handle "code" was too poor.
Yeah $10 (I'm in the US)
Same been using this for a couple years now and love it! Also been beta testing the mobile app which is (admittedly by the developer) has been taking longer than he and I would like... Development seems to have picked back up and it will get released soon!
Thank you! I'm glad you're enjoying the books :) I have written a short book on Python, albeit unreleased, although it's quite specialised – probably not of interest to most people!
Take a look at MWeb also.Has good iOS apps and an abundance of features. I now use it to manage all my markdown, plain text files and static blog on my local server. I love Quiver but really needed an iOS app as well. MWeb has been worth it. Here's iOS link - and Desktop version is in MAS as well. MWeb - Pro Markdown Writing, Wordpress Publishing. by ou lvhai https://appsto.re/us/x6vIgb.i
Sure thing! Sounds like you're on the right path. I don't know much about Python, don't do much web or backend stuff, I've invested my time in Unity3D, then lots into Objective-C and then started Swift a couple years ago. It's better to specialize in the sense that you'll be able to make an app quicker, but if you can take in two at once it'll help learn about computer science as a whole more. The languages are just abstractions made to accomplish tasks. I really like Swift, if it picks up as a backend language it'll be even better, some things like http://perfect.org/ are trying that. Also Android just release Kotlin which is supposedly their own version of Swift so that might not be hard to jump into next. 
Sure thing, totally agreed! I've been looking for the "Rosetta Stone" of design patterns for a while and been doing something similar to this for the past couple months. Really helps with code reusability and sharing code between components and screens. Apps always seem to hit an inherent limit in complexity but if you do it right with something like this I like to think that goes away! Happy to see someone else doing things this way. All the best!
100% agreed :) Cheers!
Booo. This is a rehash of basic training material without adding anything new whatsoever. The tiny bit of basic info OP shares about these two protocols is in the manual, Apple's "The Swift Programming Language (Swift 3.1)". In fact, the idea to use "Vectors" as the type in the example comes from that book! (chapter is "Advanced Operators") If one is going to make a YouTube video for new coders, I feel one should offer some kind of fact or insight that's unique amongst all the other trainers/tutors for Swift popping up right now. You did not. You spammed this to reddit because you have a course on Swift 3 algorithms to sell that happens to be advertised on the page for the video. For those trying to learn, this is a bit of info more digestible than the Apple book: http://swiftdoc.org/v3.1/protocol/Comparable/
The reason the compiler is not doing it for you: As Catfish_Man explained the features to do that have not been written into Swift. **YET.** The Swift compiler is known to be slow. It is being worked on. You will likely see performance gains in future releases. [Maybe even this Monday](https://developer.apple.com/wwdc/)
I keep notes with snippets for doing repetitive task. Because it has Markdown support I might also draft up a blog post or even documentation for code in it first before committing it. But I would say 80% is just snippets of code I rarely use but clutch when I do need them.
[Link to the app](https://itunes.apple.com/us/app/3-recall/id1231917802?ls=1&amp;mt=8) Unfortunately I can't edit the post title, sorry guys.
It's not the languages that are hard, it's learning the frameworks you build your apps with. AppKit (Mac) and UIKit (iOS) are an order of magnitude more complex to learn than the computer languages they are built from. You cannot build Mac / iOS apps without learning the fundamentals of these kits. A lot of "Swift" training is actually AppKit/UIKit training: they only introduce new aspects of the Swift language alongside a new aspect of the Kits that utilize that part of the language. When it comes time to write apps in Python, you will need to determine which Python framework(s) you'll use and start learning them. Some of Python's "full stack" frameworks are just as daunting as the Apple kits. I do not believe you can learn a Python full stack framework AND AppKit or UIKit at the same time and do them well. I'd pick a framework to learn first based on what you like, then just use whichever language naturally goes with the framework. Pick one: Mac client Apps - AppKit with Swift iOS client Apps - UIKit with Swift Server side databases and web apps - Django or TurboGears or whatever with Python. That being said: if your computer group just does super simple apps for a summer then they may not need a Python framework. In that case you could learn 2 languages and **1** framework.
Ooh nice. I use notes a fair bit, but not great for formatting things like bash commands, or code snippets.
UI is one of the biggest challenges in iOS. Most things are a tableView. Snapchat and Musically have talented developers that know tricks to make their UI resemble a real world material. Generally speaking the app asks the backend for information (such as json), the backend returns it, the app parse the information internally and injects the information into the UI in a consumable fashion. Sounds like you could benefit from some real experience trying to build an app like the others said, that's the only way to clearup the "black box".
Python is by far not a dying language. Python has uses for mobile development, web app development, data science,academia, sciences, etc. Browse around /r/python, and they have several resources to help you get into python. 
You don't need UIKit unless doing some iOS GUI component, import Foundation instead. Could also be a warning to use let instead of var for your variable
never heard of it, just bought it now thanks for the recommendation
Thanks! Purchased the power pack, looking forward to diving in.
Don't cast the body field and see what it spits out. It might be an array. You aren't supposed to have top level arrays in json, but people do.
Looks like it's an array of dicts, not a dict. Cast to [[String:Any]] (two pairs of brackets) instead.
I'm currently working through your hacking with swift book, I love it so far! Thank you! 
Would somebody please write a blog post(or a series of them) dissecting this framework? 
What happens if you type(of: json["body"])
Great price, was on the fence a long time because i consider 30$ too expensive for only a digital product but with these prices, ended up buying Pro and Linux Swift. Thanks :)
Awesome – thanks for your support!
Glad to hear you're enjoying the book!
I do try to keep my prices as low as possible; $30 is actually pretty cheap compared to most of the competitors out there. Plus, all existing readers always get $5-off coupons for new books, bringing the price down a little further. However, you've bought Pro Swift now so I'd like to hear what you think: after you've watched all the videos / read all the material, do you think you would have gotten $30 of value out of it? Let me know :)
If I already bought HWS in the past will I get a second copy purchasing the bundle? Because I'll be honest, 50$ for that it's pretty amazing my only concern is that I will probably get two HWS :)
Pfft – I'd never settle for something so lame! Instead, I'll discount the Power Pack's $50 by whatever you paid for Hacking with Swift, so you get a double discount :) Email me at paul@hackingwithswift.com and let me know your Gumroad email address so I can discount however much you paid.
Damn it sucks being a student
Exactly my thoughts. Plus living in eastern europe is not making it easier. 
Scrolling on this site is absolutely awful for me.
I'd love to post it here if it is within the rules. Update: right now talking to a publisher, so it may delay it a little. I hope to have the first chapters out in some weeks.
Absolutely. Python is the easiest language of all and a good tool to have in your toolbelt for quick hacks.
That code can't be correct because it won't compile. In this line: let body = response["body"]! as? [String: Any] ?? [] you are trying to assign body a response["body"] cast as a dictionary and if that is nil then an empty array. This won't work as the Swift compiler infers the data type of body to be [String: Any] and then [] can't be used to create an empty dictionary. If you had [:] that would work. Then if you did fix that the line will never be executed based on your data because in this line: if let response = try! JSONSerialization.jsonObject( with: data, options: []) as? [String: Any] { you cast response to a [String: Any] when the top level object of your JSON is an array. How about something like this (not perfect but you get the idea): if let response = try! JSONSerialization.jsonObject(with: json, options: []) as? [Any] { // Cast as an array as the top level object is an array if response.count &gt; 0, let responseData = response[0] as? [String: Any] { // Check there is something there and then case as a dictionary let body = responseData["body"] as? [String: Any] ?? [:] // Get the body item or an empty dictionary let zones = body["zones"] as? [String: Any] ?? [:] // Get the zones item or an empty dictionary } } Of course this only works for your supplied JSON and would fail if the top level object was a dictionary not an array but you can expand my example out to check for both types if you need.
Hello guys, thank you for great feedback last time! This month again we are bringing you popular and not popular libraries, so be sure to check it out :D . All suggestion are very welcomed and we are happy that this community of swift developers grows so quickly :]
I think that was his point...
I can't speak for other authors, [but I've made my position crystal clear](https://www.hackingwithswift.com/update-policy): all my books will receive free updates for Swift 4, Swift 5, and beyond.
Great :) Now folks: go buy books with these promises attached.
That's such a great overview. I need to jump into making an app, but this puts my mind in the right space before I begin. I'm going to be traveling for 6 weeks and that'll give me the space I need to jump in.
Love your posts...
I'd suggest the first thing to do is step away from the keyboard and write down (yeah, paper and pencil! remember them?) exactly what you want your layout to look like for the different screen sizes you want to support. You could do this with little sentences or a drawing with annotations or whatever. At this point, you shouldn't worry about how it will be implemented: you just want to describe what it will look like to the user (who, presumably, doesn't know or care if you are using constraints or stack views or trigonometry to create the layout). The reason I suggest doing this is it is easy to get lost when actually doing the constraints and it is good to have something to cross reference to. Usually, it is only necessary to think about a few different situations (such as: short and wide, short and narrow, tall and narrow, tall and wide). Then you need to figure out what tools to use to accomplish it. I'd always start with the high level tools and get more and more specific if necessary. So, as u/Steaps suggests, try stack views first, then constraints, then traits. Eventually you should end up with some combination of stack views and constraints with a very slim possibility of needing traits. As with just about everything in computers and especially when starting something new, it is best to start small and expand rather than trying to create a ton'o'constraints all in one go. It also helps when you get constraint violations because you know the problem has occurred between the layout at time(n) and time(n+1) so you can combine that knowledge with the dump that the error message gives you to fix the problem. There's one point in your description I don't quite understand: "I'm having an issue, though. My understanding is that, using Xcode's point system (as opposed to pixels) was that you could have the display identify on two different screen sizes, however, the best I can get is here." Autolayout works well, but it can't make a UI in the cramped quarters of the 4s look exactly like the wide-open spaces of the 7s. It sounds as though (and again, this is my inability to understand that I'm questioning here) you expected it to make the UI on the 4s a sort of miniaturised version of that of the 7s which it doesn't by default because that would end up being a sort of interface for ants on the 4s. IOW, it is best not to shrink buttons, text fields, images down too much or they won't be effective; it is usually the amount of space between the objects which should shrink and expand a bit. 
Thanks very much for your comprehensive response. Your understanding of my point was correct! I assumed if, for example, the 4S screen was 20% smaller than the 6S screen, and I designed everything natively on the 6s, that the 4s would just be an identical version of the 6S one but where everything is 20% smaller! I have some fairly complex view controllers and I was trying to start on my easy one but I'm finding even that hard. This is going to be more difficult than I thought! When starting with my app I did do what you suggested and sketch out the whole thing on paper and then implement everything until it looked the same on screen as the paper - I'll have to try that again I think! 
Thanks! Good stuff. I actually use my own complicated version that's pretty similar to how you do things, I use TableViews for pretty much everything and made my own Navigation and tab bars so I 1) have a reusable cell for everything (labels, buttons, maps, labels, webviews, custom components, etc..) and 2) I can switch out my components and screens in whatever navigation order, so If I wanna change the app from a sidemenu to a tabbar or whatever else. For now I just animate with https://github.com/lkzhao/Hero which works really well, so any view can animate to any screen and any component, it's pretty sweet. Swift lets you get pretty creative.
This is great! Thank you, made my app development so much easier :)
You can use Vendor ID. It will return a unqiue string for all apps by that Vendor. https://developer.apple.com/reference/uikit/uidevice/1620059-identifierforvendor
And um, I have a question. How did you make all animation? All in swift?
If you have older Xcode (like Xcode 8.2) that has a required Swift version (basically toolchain), you can try: 1. Copy XCode 8.2 toolchain from /Applications/Xcode_8.2.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain into /Library/Developer/Toolchains folder, rename it to custom_toolchain_swift_*** (*** - required swift version). 2. Edit Info.plist inside the new toolchain package (specifically CFBundleIdentifier, you can just change 4-th digit like org.swift.3012 -&gt; org.swift.3013) so it becomes compatible with your newest Xcode 8.3. If you won't update Info.plist, your newer Xcode would just say that it's not compatible with the new toolchain. 3. Choose the newly created toolchain in your Xcode 8.3 through Preferences -&gt; Components -&gt; Toolchains, clean the project (cmd + option + shift + K) and build it. That should work.
Print that out right before the line with the cast.
I thought so too at the beginning. Keep working on your ideas no matter what. 
Also, thanks a lot for taking the time to answer.
No problem glad to help
I agree, however I've designed the whole app on iPhone 6s, so now I'm trying to cater for 4s it feels crammed! As opposed to upscaling and gaining more screen real estate! I made the background for my app in photoshop, grey with a blue bar at the bottom (simplified, for arguments sake). When I lock the edges of the background to the edges of the view it works, but then when I try lock the buttons at the bottom of the view to be a given distance from the bottom, on some phone sizes they sit out with the blue bar, whereas on some they are within it. Obviously this isn't ideal. What would you recommend for that? Going. Back and making my background in Xcode as opposed to a single image?
Apple explicitly disallows this capability. Tim Cook chewed out the CEO of Uber for doing exactly this.
If you are locking the buttons a fixed distance from the bottom then that will result in them being in different positions on the iPhone 6 than the iPhone 4 because the logical resolutions are different (320x568 compared to 320x480). So if you had a fixed distance of 50 from the bottom that would be just under 9% up the screen on the iPhone 6 and just over 10% on the iPhone 4. What you want to look at is the relative height of the blue bar in the image. So if the blue bar takes up 10% of the bottom of the screen then you could set the bottom of the buttons to 0.9 (90%) of the bottom of the screen (i.e. constrain them to the bottom of the view with a multiplier of 0.9 and a constraint of 0). This will then work for all devices as long as the image is being scaled correctly as well. This [link](https://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions) is probably a better one for the different phone info.
Not really at the moment however this Apple documentation details the basics [(link)](https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/AutolayoutPG/AnatomyofaConstraint.html#//apple_ref/doc/uid/TP40010853-CH9-SW1) but it might be a bit heavy or if you don't mind the read maybe this tutorial [(link)](https://www.raywenderlich.com/115440/auto-layout-tutorial-in-ios-9-part-1-getting-started-2), it's iOS9 and Xcode 7 but it's still relevant.
Grabbed both the power pack and Erica's book. Thank you for the headsup!
Thanks! I'll look into that. Much easier to copy and paste a reusable button cell that takes one second than to set one up every time, then setup the sender in the view controller. Same with every other UI component. 
Why is your company called hacking with swift? Is it alluding to "mastering" it? Note: Very new to swift community ✌🏼
Disallows what exactly? Edit: I don't think there is any issue with using IDFV.
To get it to work I had to convert the returned string into well formed JSON: stringData.insert("{", at: stringData.index(stringData.startIndex, offsetBy: 1)) stringData.insert("}", at: stringData.index(stringData.endIndex, offsetBy: -1)) Incidentally, Swift 4 makes this kind of thing almost fun. [Here](https://gist.github.com/anonymous/810ae459d1f0896c76ece0a8cac9ddbc) is an example. 
Thanks! Well, it answers the question indirectly. :) You should learn Swift as it will be the programming language for everything: iOS/macOS, server-side, systems (maybe even Android ;)).
Here's the first paragraph from Wikipedia's definition of hacker culture: &gt; The hacker culture is a subculture of individuals who enjoy the intellectual challenge of creatively overcoming limitations of software systems to achieve novel and clever outcomes. The act of engaging in activities (such as programming or other media) in a spirit of playfulness and exploration is termed "hacking". So, that's the root of the name: having fun with Swift.
Vendor ID isn't really persistent; it gets reset when all the vendor's apps are removed and reinstalled.
Is there a newsletter for this?
Thank you, we try each month to bring best and we are glad to help :]
That'd be great! Thanks
I have the same thinking, but server side still need to work out 2 things: Concurrency and Security that Rust is more appealing to me and offer better performance where I can offload to. Server side Swift have uploaded their prototype and could take until 2018 to finalize. There is Swift for Android, Scade, partner with PerfectlySoft.
getcyclesapp.co Just released in the App Store and currently adding new features and updates!
No, it doesn't really address that at all. As I said, it's an interesting post about the *history* of the language, but does nothing to justify why you should learn it. I could write a fascinating history of BASIC and that wouldn't be a compelling rationale for writing new code in it because I wouldn't justify using it for new projects. Apple say they want it to be the next big thing, and you're saying this is why you should learn Swift, but there are no arguments given for that. Do you see the problem? You cannot make a claim without any reasoning.
I'm referring to web framework between Swift and Rust. Vapor, Perfect and Kitura uses OpenSSL now which is fine in my project. Meanwhile, SSS api project haven't discussed on Security due to WWDC event, https://github.com/swift-server/security I had tried to optimize some performance issue with Turnstile security that use by 3 web frameworks but Perfect team may be plan to rewrite, these are not being discuss may be a concern for us. Therefore, a working group is need to address it.
Haha, I didn't want to reveal the truth... Actually, the original title did not include the question. My editor decided to change the title right before the article went live.
&gt; You aren't supposed to have top level arrays in json, but people do. Where's that come from? I'm looking at ECMA-404 and section 4 says "A JSON text is a sequence of tokens formed from Unicode code points that conforms to the JSON value grammar", and section 5 defines that as "A JSON value can be an object, array, number, string, true, false, or null." I don't see anything that suggests that the top level must be an object.
That's a bit difficult. Currently version 2 of our app only supports the iPad so the only differences are between landscape and portrait. I am part of the team that is currently a few months into a complete re-write of the app in Swift and this version will support the iPhone but it has yet to be decided how far this support will go and in what form (iPad is the primary concern). In addition v3 will be iOS10+ so won't ever support the iPhone 4. What I will show you is the current catalogue in landscape and portrait orientation to show an example of how we use auto layout. The catalogue itself is a UICollectionView and the UICollectionViewCells use auto layout to arrange themselves based on orientation. For an iPhone version there would be less tiles (smaller screen) but they could use a different layout. Here is [PixSell Catalogue Landscape](http://i.imgur.com/EenAYtA.png) and [PixSell Catalogue Portrait](http://i.imgur.com/RJps3gr.png). It is still a work in progress and needs to have it's proper styling applied so excuse some of the buttons (particularly the next page one on the right). Also a lot of the styling (button colours, background image, etc) is configurable by a client so it can vary a great deal. p.s. I won't leave the images up forever but as the v2 of the app is free anyone can actually install it and look at them.
Hey! nice work, Swift is a language that even a beginner can learn with minimal issues. If you ever have any questions I am sure the Reddit Community as well as myself would be more than willing to help!
Swift Programming Language for beginners. I hope you all like my lesson. 
Swift Programming Langauge for beginners. I hope you all like my lesson!
Posted the same in last month's thread. But major improvements to Peek iOS is coming this month! https://itunes.apple.com/us/app/peek-tools-intercept-debug-proxy/id1187756601?mt=8 (PM or DM on https://twitter.com/inter_cept for promo codes). * Intercept and debug API's right on your phone * iOS version does not require a Mac * macOS version is FREE for now
Was my Pro Swift book not advanced enough? Were the advanced challenges in Swift Coding Challenges so easy? Were the epic projects in Practical iOS 10 a cinch? Did everyone just blitz through Server-Side Swift like it was iOS 101? Obviously I rather think the answer is "no" :) I've only written one introductory iOS book, which is Hacking with Swift. If you have suggestions for more advanced topics you'd like to see covered, let me know – I'll see what I can do!
Amazing, thank you!
I was learning C, while I was not super interested in C itself, I have always been very interested in programming. I'm still reading Kernighan and Ritchie, but I find myself watching more and more videos on Swift. I have a lot more interest in Swift, mainly because I want to build apps that I can use in my daily life that will help me. I want to be able to fix things I think I know how to fix. I have been watching Brian Voong on YouTube, and I recently got Stanford's CS193b on iTunes, but the first prerequisite was being strong in Object Oriented Programming, which I am not. I believe I will be learning through Apple's Swift lessons, to build myself some kind of foundation to build off of. I'm open to any and all suggestions, tips, and advice. Please share your input with me! Thanks.
All they need is the testflight app and a mail client on the device with the email they gave you logged in. (They will need to click the link in the mail to claim the download.)
Actually turns out there's more to this problem. None of my network devices respond to https:// which Xcode requires for safety. Additionally, all sorts of errors arise because I actually have it calling a function to check a user defined IP address, first, so it's not working properly. FAILURE: Error Domain=NSURLErrorDomain Code=-1004 "Could not connect to the server." UserInfo={NSUnderlyingError=0x600000243270 {Error Domain=kCFErrorDomainCFNetwork Code=-1004 "(null)" UserInfo={_kCFStreamErrorCodeKey=61, _kCFStreamErrorDomainKey=1}}, NSErrorFailingURLStringKey=https://192.168.2.7/, NSErrorFailingURLKey=https://192.168.2.7/, _kCFStreamErrorDomainKey=1, _kCFStreamErrorCodeKey=61, NSLocalizedDescription=Could not connect to the server.} 
I agree man, think his work is great and I've done the coding challenges and pro swift but still wish he'd do more advanced stuff.
Coming up with ways to implement network caching for a new social networking app. Then, coming across https://talk.objc.io/episodes/S01E25-network-caching and wondering why i haven't came across these guys before and after watching a few of their videos feeling slightly humbled.
AVFoundation has all of that: https://developer.apple.com/av-foundation/ Specifically, AVAudioRecorder and AVAudioPlayer.
Yeah actually, it's a bit overwelming! But I hope I can get through this, because I really want to be able to write some apps :) 
What would I use Peek for?
ill be working on an inventory app for my portfolio and will opensource it afterwards, does anyone know what are the key features of an inventory app?
That's great to hear – thanks for your support!
Check what simulator you picked before running. There is a dropdown, where you can also select archive or your actual device. For example if you run one app on iPhone 6 simulator and another on 6s simulator, they are different.
Thank you!!
Hey, thanks a lot! Just got off work, going to check it out now :)
DateFormatter is notoriously slow. I think its even in the docs that you should try to only make one and reuse it when it makes sense. Your solution with keeping a cached formatter makes sense; I have a general utility file I include in most projects that has a standard DateFormatter I can call from anywhere.
Im working on a Chat app for my portfolio and for my personal use. completely built with firebase. Also wanted to try Kotlin (For the android version of it). 
I was able to extend PythonBridgeable with Collection, it's just then all types that conform to PythonBridgeable has to also conform to Collection.
Thank you! 
Thank you :]
Please please don't call things "ISO8601" when it just parses one thing contained in ISO8601! It's a pretty big standard with lots of formats. A parser that parses "2017" into a year is one valid format for example. No one would call this a "ISO8601 parser"!
is AuthenticationDelegate a class or a protocol? I would say it shouldn't be static if it needs context of the object calling it. I would split the function into stuff that is static and stuff that isn't. then call both functions from a non static function and only use the static function where no context is requried. might involve a bit of rearchitecting if there is a lot of things using this AuthenticationDelegate thing.
Kind of an issue tho, as, for example, I don't want `String` (which I had conform to `PythonBridgeable`) to be a `Collection` :( Thanks for taking a look, though !
Because protocol do not dispatch method via message dispatch, so it do not support inheritance to ensure its performance [swift method dispatch ](https://www.raizlabs.com/dev/2016/12/swift-method-dispatch/) 
Did you try something as simple as overloading your methods to deal with a collection? Like you have a generic function supporting all classes of PythonBridgable, Did you try to overload that function to take a collection of PythonBridgable? They great thing about protocols is you know every class will have the same methods so you could call them from it.
I've purchased both Hacking With Swift and Server-side Swift and think they're both great. I feel that the teaching style in HWS is responsible for increasing my knowledge of iOS programming exponentially. I'd love to be able to get the rest of them and I highly encourage anyone interested in Apple development to look into these books.
You do have to be careful to either not modify the DateFormatter after initialization or make the cache thread-safe. I use a thread-local dateFormatter cache to be safe. 
A function that takes nothing and returns nothing. And since it has a question mark at the end, it can also be nothing.
In your first exemple, you are just defining a variable an its type. Not its value. Your second exemple is the "value" of a closure but this value is not assigned. You can combine the exemples like this : ``` var updateAccountBlock: (() -&gt; ())? = { statements } ``` 
It's a little more subtle than it seems. DateFormatter is thread safe on any recent OS version, *but*: * Modifying it at all will invalidate its internal state, which costs just as much as creating a new one * Of course, any changes to it will apply to other threads, which could be confusing to reason about So my general recommendation is to make a global cache of one of each *configuration* of formatter you use, unless there's too many of them for that to be feasible within memory constraints.
[List of what's new](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/WhatsNewXcode/xcode_9/xcode_9.html#//apple_ref/doc/uid/TP40004626).
Looks like there's finally some refactoring features.
But then you've only written 3 lines of code
This SDK is very useful if you want develop something that allow users to edit part of an image.
have you figured out how to set that up? 
I just published the first version of math app written in swift: https://itunes.apple.com/gb/app/math-infinite-problems/id1244547440?mt=8. Swift is a very good language for implementing math features. Overriding operators helps a lot. 
Like what?
I'm wetting myself right now. 
You can search for the Swift Generic Manifesto which has a paragraph on why this is unlikely to be supported.
It used to be a thing a long long time ago (I’m not 100% on the debugging part though). And it was removed because it was buggy. I’m guessing they tested it better this time ;)
Can I run this along side Xcode 8?
I can’t believe no one is commenting on the brand new editor. It better be super performant for swift code.... I can’t wait to try it
Yep!
What if you were to do something like this? (i simplified things to make it shorter). I'd be curious compared to the one that creates a date formatter each loop. import Cocoa let dateList = ["2017-10-01", "2017-05-22", "2017-01-20"] let f = DateFormatter() f.dateFormat = "yyyy-MM-dd" for d in dateList { let dateObj = f.date(from: d)! print(dateObj); }
I'd be interested in finding out the limitations and shortcomings of ARKit. I don't want to come up with a cool ARKit project idea and not be able to implement it.
Timing
Go to Build Settings and search for Swift Language Version.
Installed, anyone else have all of their regular xcode simulators disappear?
Refactoring?! I'm sold.
Sourcekit hasn't changed, just the text editor itself. Now, as the text editor was slower than molasses in January before it should still be a noticeable improvement, just don't expect miracles.
You'll most likely come up with a great ARKit idea but have no 3D modeling experience to make it cool.
How? 
Would recommend the udacity course over any of the Udemy courses. The udacity course is free as well
Then what's the point of the optional?
Maybe Xcode can hold a stronger rating on the App Store than a like 3 star now.
Hmm i have sims on the beta, just not my regular version of xcode. I dont want to develop on the beta because apps made in the beta cannot be published to the app store/live. (At least the last few years they cant).
Heh, this sounds fairly accurate.
So, it's mainly for testing purposes? 
As an example, let's say you want to create a variable in a struct that is of type Thing: struct Foo { var anObject: Thing } Now you need to provide the value of anObject when you initialize your Foo instance. There are various reasons you might not want to do this. What if initializing anObject is computationally expensive, and you only want to do it when necessary? struct Foo { var anObject: Thing? func useAnObject() { anObject = Thing() anObject!.doSomething } } This is a really crude example, but it's one reason. The general takeaway is that optionals in general are examples of places where your design pattern might be able to be improved in order to provide better type-safety. The main reason you don't want to forcibly unwrap optionals very often is that you should only really be doing it in the case that you are absolutely sure that you will be doing it safely. Next time you find yourself forcibly unwrapping an optional, ask yourself if there's a way you could make the value non-optional in the first place (now that we can Throw and Catch, this becomes a lot easier).
If you have prior experience with augmented reality, I'd love to see how to compares to other AR SDK's in the market. Such as [ARToolKit](https://artoolkit.org/\)), I have experience using ARToolKit before and it was a bit too complicated at first to set everything up properly. Hopefully, ARKit is more straight forward to use.
From what they showed in the State of the Union it should be noticeable faster. Especially search
I'd like to know if it's possible to use AR Kit for positional data only, as easier alternative to the older GPS method. 
Anywhere you would do guard let x = y else { fatalError("Something went very wrong, y was nil!") } You can/should use force unwrap. Crashing is far from the worst thing that can happen to a program, and if things have gone so badly wrong that something you thought would never be nil is actually nil, it's often better to crash cleanly with a good diagnostic than it is to stumble along in an unknown and incorrect state. As a concrete example: back when I worked on Adium (Objective-C code, but a similar situation, bear with me), we had a bug for a while where part of the UI would mysteriously disappear. We eventually tracked it down to an exception being thrown while setting up the UI, which was caught by something much further up the call stack. If we hadn't caught the exception, it would have been trivial to fix. Since we did, we spent a long time baffled about the bug. (edit) Also I just want to say I really like this question. "If I shouldn't use it, why did they make it" will almost always turn up something good to know.
So you recommend buying the author's other more advanced books, not the "basic" Hacking with Swift one?
Hey! I am currently going through the Team Treehouse course, but looking to start this one! If you want a coding buddy hit me up! 
Nope courses are all free. 
Can you download it without a paid developer account? I don't remember how I downloaded Xcode 8 beta last year.
Sometimes you want your app crashes to see where the problem is. Or, when you know at the time, the implicitly optional has a value
Xcode 4!! I loved that feature back then.
The dateFormatter.dateFrom section of your code at the end returned a 'Date' object, but you need a string if you are assigning it to the .text property of your label. I'm not exactly sure what you're trying to accomplish, so it's hard to pinpoint a solution for you, but if the data is being stored correctly in firebase, when you retrieve the string, you can just port it into the label as is. (If you're sitting the human readable formatted string) 
Thanks! I found it very hard to pin point the problem but let me try explain what I'm doing. I have a screen where users will create an event with a due date. I managed to select the date from picker and pass it along into a text field and from there sending it to firebase as a string. I have then a second screen which will display the event with information like the due date. Did that help in helping me further?
sweeet. does this mean you can unlock security doors with your phone instead of a badge now? 
Any improvment is completely drowned out until they fix sourcekit. Dont know wtf theyre doing it should be their priority number 1.
Did anyone reach out to you with a solution? Please PM me if not
Only the beautiful (but annoyingly slow) https://developer.apple.com/documentation?changes=latest_minor
Different NFC chip AFAIK. 
Maybe. Depends on your use case. Here's another example: I have a timer that I use to simulate some rapid UI touches. It's called dummyTimer, but it's optional, because it can be nil when the timer is invalidated: var dummyTimer: Timer? ... //When dummy mode is turned on, here's what happens dummyTimer = Timer(timeInterval: 0, repeats: true) { self.pressRandomButton() } RunLoop.main.add(dummyTimer!, forMode: .defaultRunLoopMode) ... //Eventually, it's time for dummy mode to end dummyTimer?.invalidate() Here's the cool part, though: if I had used `dummyTimer!.invalidate()` a fatal error would occur if the dummyTimer is nil. Since I made it optional, I can call `dummyTimer?.invalidate()` and not worry about whether the timer is nil. I want the timer to stop for various conditions, so I put a bunch of `dummyTimer?.invalidate()` in places like `viewWillDisappear`.
That one doesn't work. Have another link?
It worked great for me but I'm guessing not everyone was so lucky since that got taken out pretty quickly
Yeah it looks like it
Yeah, same here. It was great just running the app and handing the device off to a QA, so that they can break things. :D I have no idea what took them 5 years to get it back, but I'm happy.
I believe you always could if the door supported it and your company set it up
Did you look for a crash report? Did you use the Console.app on your Mac to get more details?
No crash reports are output and nothing in the console. 
The console contains around 120,000 lines and I'm able to find my bundle id but nothing much about why it crashed. 
Filter on springboard or your app name. Not the full bundle id. The hint you need is in those 120000 lines. 
There's no sending of information with it, yet, but you could reasonably trigger a setup where the NFC read triggers a call to a webservice that validates and sends a message to the door. But, standard door validating your NFC tag isn't going to be available until we can actually send an NFC signal programmatically.
Yes, Swift would be the language I'd go with. At this time, it's only for development on Apple devices, so as far as I know, there isn't any way to write Android apps using Swift. (Android apps are largely done with Java.) Personally, I think Swift is a better language than Java, and easier to learn. The Swift Playgrounds app for iPad is a great way to play around with the concepts, if that's an option for you. If you have an Apple desktop computer (which you will need for writing the app anyway,) you can download the Xcode development tool and get started right away. There are a ton of introductory programming tutorials you can find online, both in written articles and on YouTube. There's also a Stanford course on writing iPhone apps that is great if you'd like a more traditional classroom lecture type of learning experience.
Does `Array` not also have `.first` and `.last`? Do you have any other examples? I'm not convinced…
Although Core NFC doesn't support sending anything, an app developer could create an app to open doors by reading a security doors info, and using an id (login via the app), and send info to a server to open the door. Sure, long winded. But still achieves the same thing. 
Array does, which is nice because you can interact with the slice the same way as an array instance, and the indexes map exactly to their position in the actual array. An easier example, though, might be using a function with reduce() on the array slice. 
I don't have that playground in front of me, so it's hard to visualise, but why do.you need nested while loops. Wouldn't it make sense to have one while loop that handles both of your conditions? While switchCount &lt; 4 &amp;&amp; gemCount &lt; 3 { ... } That should keep going until both swotchCount and gemCount hit their targets.
Oh I see what you mean, the indexes are relative to that of the original array.
You can try using the run speed options (beside the run my code button) to step slowly through your code. The &amp;&amp; condition should definitely be satisfied when both those variables start at 0, so your loop should go at least once.
Going through it right now. It's well explained and teaches a microservice approach to building backends. It also touches on Docker which is really useful.
Just came to also vouch for this book (currently learning from it). In additional, where should I look for more after I finish this?
Let me know what you think
A deeper look at the language and real world use of the more advanced features. I find that its harder implement these features when creating/refactoring apps rather than doing small, one-off examples. Maybe a deeper dive into different UIKit components aswell.
Want me to send it to you?
I totally agree. Me personally, even when I learn swift topics I'm not sure I'm using them correctly. It's difficult to tell when you're reading a good guide or a bad one. I recently did a home assignment for a job interview and they just said no without any feedback. So now I'm really confused if I'm using swift correctly :(
Practical iOS 11 is not part of the Power Pack; Practical iOS 10 is. The two are completely different books – one isn't an update or upgrade of the other. Practical iOS 10 covers the APIs that were introduced in iOS 10, like speech transcription, SiriKit, maps extensions, and so on. Practical iOS 11 covers the APIs introduced in iOS 11, like Core ML, ARKit, and more – they aren't even slightly shared.
Practical iOS 10 will be updated for Swift 4, and any deprecated APIs will be updated for iOS 11. However, it will not be replaced by Practical iOS 11 – they are different books.
Thanks for sharing!
it's so frustrating. Paypal is asking for credit card when I have funds in my account. does anyone else have the same problem? I think it's gum road specific problem because I have purchased many tutorials on udemy without any problem. 
I'm sorry to hear you're having trouble! If it still happens in a different browser, you might need to email support@gumroad.com.
You should format your code into a code block when you post it here. You create a code block by putting 4 spaces before every line in your code when you post it. Just indent every line with an additional 4 spaces. The other issue is that in order to test your code someone has to create a [test double](https://en.wikipedia.org/wiki/Test_double) for all of your missing methods and variables. It would be better if you posted a more complete example and/or created test doubles for the missing stuff yourself. Then we could simply put your code in our own Playground to test it. This would make it more likely someone will help you figure out your coding issue. Even better might be to host the entire project somewhere and post a link. There are many sites that offer free, easy hosting that integrates well into Xcode, such as BitBucket, GitHub, GitLab, SourceForge, and others.
Could you send it to me? I really want it but I don't have paid membership yet :(
Too many moving parts. If you have a whole server set up for opening the door, the server can be compromised. As an experienced Shadowrun player, trust me, you do *not* want this. ;)
Thanks for the information I was able to get the code edited into a better format so it's hopefully easier to see what's going on.
First impression: holy shit this is fantastic. And it doesn't change the project file, so we actually use it productively already. Of course there are still bugs, but it's much faster, it's like a different IDE. Also refactoring.
I can second this, Xcode 9 is butter smooth!
Understood. 
I'm trying to resist a download of Xcode 9 simply because the betas caused trouble in the past with HomeBrew. That is something to consider. Otherwise what has been seen so far does look interesting. Sadly most of my work lately has been on Eclipse with PyDev so can't say much beyond that.
One key thing to know is that structs are value types, and classes are reference types (meaning that a struct will _usually_ be copied when it is passed around, a class will not). The typical advice is to prefer structs, but Apple actually leans the other way in their guidelines: &gt; As a general guideline, consider creating a structure when one or more of these conditions apply: &gt; &gt; - The structure’s primary purpose is to encapsulate a few relatively simple data values. &gt; - It is reasonable to expect that the encapsulated values will be copied rather than referenced when you assign or pass around an instance of that structure. &gt; - Any properties stored by the structure are themselves value types, which would also be expected to be copied rather than referenced. &gt; - The structure does not need to inherit properties or behavior from another existing type. &gt; In all other cases, define a class, and create instances of that class to be managed and passed by reference. In practice, this means that most custom data constructs should be classes, not structures. 
Will your WWDC sale last the entire duration of WWDC?
For me the gitlab link isn't working. Maybe try send some other way? I will have a look.
Try now please: https://gitlab.com/dgooglr/Challenger 
&gt; https://gitlab.com/dgooglr/Challenger nope still nothing. just shows up as empty. Put it on github maybe?
Now it should work right?
My guess is that `questionDict.count` is either returning 0 or 1, as `arc4random_uniform(0)` and `arc4random_uniform(1)` will always return 0.
I just printed questionDict.count and it returns 3. 
In this article, Eric Cerney goes through some of the more important features in the new rev of the language.
app development with swift will be much more in depth on all the topics. 
So there's no way of detecting a wall or a vertical plane. I'd be curious if that's something that'll be added on once it's out of beta.
Thanks. I haven't seen the cgal site before. Trying to use SGCore was the first time I've dealt with wrappers. I attempted to update their swift example. Which was written for the Mac instead of ios. But it still had an error at runtime that I couldn't resolve. But I'll check out this site.
If they keep piling on dynamic features, I might stop hating it. Except for the really shitty method naming syntax. Fucking _'s everywhere for who knows why exactly. They decided to invent something new...why? Shit fit. And \'s for key paths? @'s would make more sense since its a conceptual *location* and so many tools have issues dealing with \'s. Swift's "designers" (I use the term loosely) have zero taste. Edit: So many snowflake/fanbois
Xcode 9 fixes a bug from previous releases... In previous releases, when instantiating multi-file templates, the FILENAME macro's value would be updated for each individual file being created, but derivative macros like FILEBASENAME would not (they would remain set to the expansion for the primary file of the multi-file template. In Xcode 9 all the filename based macros update as each file is created. 
My exact thoughts as well!
This seems to work: let questionDict: Dictionary&lt;Int,String&gt; = [ 1: "a", 2: "b", 3: "c", 4: "d" ] print( "Dictionary Count: ", questionDict.count ) for var x in 1...10 { let randomIndex = Int(arc4random_uniform(UInt32(questionDict.count))) let randomEntry = Array(questionDict.values)[randomIndex] print( randomIndex, ":", randomEntry ) } prints: Dictionary Count: 4 1 : c 2 : a 0 : b 2 : a 2 : a 0 : b 3 : d 2 : a 0 : b 0 : b 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [apple/swift-evolution/.../**0104-improved-integers.md** (master → 72b8d90)](https://github.com/apple/swift-evolution/blob/72b8d90becd60b7cc7695607ae908ef251f1e966/proposals/0104-improved-integers.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dilsrkd.)^.
I'm aware of these changes and the differences between `&gt;&gt;` and `&amp;&gt;&gt;`. Also: &gt; On most architectures this masking is already performed by the CPU's shift instructions and has no cost This implies that the changes to bit shifting carry no performance cost for my usage. Seeing that this library deals mainly with low level number crunching (including lots of bit shifts), I'm confused as to why there's a change in performance.
Pretty sure I saw this today. Thought Xcode 9 had wiped my v8 simulatirs, but then they were back again! Most likely rebooted between looks as well.
The entire syntax is a disaster. Far too much reliance on punctuation...which apparently they are running out of fast. And I still don't understand method syntax. Apparently there are all kinds of optional random tokens you can throw in there including the _s and various other gunk to try to make it read like Smalltalk/Objective C selectors. Its an incredibly poor fit. I say this as an Objective C guy who started in 1997 with it and before that a Smalltalk guy. Before that a C++ guru. I still can't wrap my head around its complexity. Maybe they should have just adopted Smalltalk message sends and gone with that. Would have eliminated loads of confusion. Except I think they don't know Smalltalk but they think they have what it takes to replace a Smalltalk dialect without understanding it. Switf's "designers" (I'm being kind here) have no taste at all in syntax. The only uglier language I know is perhaps COBOL. And yeah, I spent some time on evolution list, but eventually I couldn't watch anymore. Gratuitous complexity abounds and every time I pointed it out it was like I shit in the punchbowl of koolaid they are all drinking. Also...keypaths usually come from data. Compiled key paths are pointless. I don't need them. Stringy key paths from json - those I need. It seems the key path proposers don't actually know what key paths are mostly used for.
Definitely seems worth a bug report!
Do you know if you learn Server Side Swift, will you know more about other backend setups? I want to learn a backend and I already know some Swift, so I figured Server Side Swift would be easier to understand, but I don't know if it'll ever be a high demand server setup. There's quite a few other servers in written in other languages, I'm not sure if Swift will gain much traction.
Kotlin is very close to Swift, but I wonder if they'll stay on or near the same path. It would be nice to almost learn one language and have it work on both platforms.
Weird how he didn't mention the enforcement of exclusive access to memory. This is a huge feature in my opinion. It brings us closer to a memory model like rust's and could really help improve performance critical code. 
Great point. When some of the more interesting features of the ownership manifesto are implemented (this summer?), more of these details should be added.
LOL. I like the cut of your jib. Swift playgrounds make it very easy to put this kind of thing together quickly. I agree, a working example is almost always the best answer. Especially when it comes coupled with an explanation as to why op's code isn't working. In this case, op didn't post their code so there's no way to comment further. I hope the example helps. 
OK, that makes sense, but you have to admit when you hear "you have to build the compiler yourself if you aren't using Ubuntu" you want to stick to, let's say, Rust (tooling!). I think some languages do not put enough effort to make them approachable.
I probably wouldn't consider swift a functional language, it borrows elements of functional concepts from modern languages. It also depends absolutely on your application, MVC is a pattern still applicable today to pretty much all sizes - the problem is that it is unforgiving and too easy to create large classed components. You should invest some time in learning about a few different patterns and pick what suits you MVVM, MVP, VIPER, Redux, ReactiveSwift.. etc
I don't. Its been gone for a year and I can't think of a single time I wished I could use it. Coming from a c background means I've seen operators like that used in ways which make you need to stop and think about what code is doing when reading, so I have no problems with this tradeoff 
But there’s no reason to have it, why keep it? I admit I used it when it was available over „+=1“, but since they announced they‘d remove it I see it a different way. The alternative is more readable for everyone, even those pesky newbz and does the same thing, literally. I would be willing to settle on an error 🛑 mentioning that ++ is not a supported operation in swift, maybe add Fix-It even. Yes, I think I could live with that. edit: more emojis
It *was* hip, back when C++ was introduced. Now it's obsolete.
The reason to have it is because everyone else has it; Heck even metal has it. It just throws people off when it doesn't work and then they have to rewrite both api's so the code is the same in both places. 
Awe man, someone needs to tell google cause Kotlin has it. C++ ??? Nah man the ++ comes from B
Then it's this simple, you would want the same code style. 
Back in my time it was up to the people who have a problem to come up with a [Short, Self Contained, Correct (Compilable), Example](http://sscce.org). 
I definitely see Swift on the Server. Python, Ruby and PHP are all loosely typed. Horrible for big projects. Java is simply too verbose and ancient, C# is too closed. Swift is the perfect mix of modern, type safety, and scalability. Swift will go big on server. 
I've created a post on StackOverflow but haven't had any responses. Could anyone give me a hand? I'm really new to IOSProgramming and Swift and I'm really struggling to figure this out
[Link](https://vapor.codes/) to vapor if you're interested. They just pushed an update to v2 as well. Highly recommended. There's also Perfect IIRC which is a different framework but does the same more or less. Edit: misread you're comment but leaving the link for others. They have great tools to deploy to docker or heroku in the CLI tool as well. 
"three gems four switches" in the 2nd module of Learning to Code
If you would like to check out Kitura, there is a [Udacity course](https://www.udacity.com/course/server-side-swift--ud1031) on Kitura and Server Side Swift. 
Just curious, what is your background? I've used PHP, Ruby, ASP, and a myriad of frameworks. I haven't ever jumped on the js train, though. Right now, I am looking at either swift or node.js. Also, swift does appear, in its server-side infancy, to have far less easy hosting and deployment service providers than most other technologies. 
Oh yeah nothing as extensive as you, I've just had to write up APIs in python and PHP. I certainly agree though that it is in its infancy and probably not fitted for anything else than RESTful APIs at the time. But having only a need for that, it suits my purpose just great already. 
Just to clarify, I mean a mile wide and an inch deep. Most of my web dev experience was before REST or web APIs were a thing. Ruby on Rails was probably the most recent and deepest dive, which I got really lucky with. A lot of the RoR concepts were pretty solid and took hold across most other languages/frameworks (or they borrowed from some others, themselves). I am trying to get into iOS development but I just really enjoy creating the web/backend code also. If I could do that all in one capable language, I'd be in heaven. 
Is there any major difference or its just matter of preference?
I am not an expert on any of the frameworks so can't tell. Probably preference mostly.
Yeah, important difference. However, as you say, they are dynamically typed, which IMO is a big drawback for large projects. Also, PHP, Ruby and Python are far less performant than Swift. 
I thought of another example that shows up in my design pattern a lot. The implicitly-unwrapped optional. This comes most frequently in the interface builder outlet: @IBOutlet weak var theButton! But it's also common in my code when I want to keep a strong reference to a variable that will be initialized with the object, but that I don't want to include in `init()`. A recent example from StoreKit -- Apple suggests that you keep a strong reference to your App Store receipt request: var receiptRequest: SKRequest! func requestNewReceipt() { self.receiptRequest = SKReceiptRefreshRequest() self.receiptRequest.delegate = self self.receiptRequest.start() } It would be inconvenient to require `receiptRequest` to be initialized in the init method. EDIT: In the end, it was convenient for me to change this back into a regular old optional, because I can set the request to nil when I the request comes back. This turns out to be a good way for other objects to know if the request is still in process. 
It will be one. It currently is a bit light on compatibility with APIs around the internet, as the swift api's they publish are not server compatible
Thanks for the suggestion. 
Absolutely every time, bar none, that ive seen ++ used in Swift code, it was in a situation that could be better written if the author had a better understanding of for in loops, enumerated, zip, etc.
Unless extreme performance is your priority, don't get wrapped up in the implementation details of structs vs. classes in Swift when making your decision. Make the decision based on whether the type makes sense as a value or a reference. When I'm deciding, I usually ask myself the following question: when I pass this type to a function, and that function modifies it, do I expect my original variable to be modified? Take the following pseudo-code: &gt; func foo(_ string: String) { &gt; string += "!"; &gt; print(string) &gt; } &gt; &gt; var greeting = "Hello" &gt; &gt; foo(greeting) The function foo changes the string its given by adding an exclamation point. Do we expect our original string to be changed? Probably not. When we pass someone a string (or a number or any other value type) we would be confused if it changed later. Now take this pseudo-code: &gt; func foo(_ user: User) { &gt; user.age += 1 &gt; } &gt; &gt; var user = User(name: "Bob", age: 20) &gt; &gt; foo(user) The function foo adds one year to bob's age. Do we expect our original user to be changed? Probably yes. There is only one Bob in our system and it represents a single Bob in the real world. It would be confusing if we passed bob to a function and then had 2 bobs in our system. One that was 20 years old and one that was 21. In this case, our User object makes more sense as a reference type. 
Just finished working on a very big update for [iDropLinks](https://itunes.apple.com/us/app/idroplinks/id964837973?ls=1&amp;mt=8), which we released on 1st June, exactly one year after the very first release of iDropLinks. With iDropLinks you can **share iCloud Drive files** with a short URL and much more. Check it out!
Vapor uses MVC: http://www.appcoda.com/server-side-swift-vapor/
No mention for the new keys and values for Dictionary?
B also had the `=+` composite operator, used `*` as its escape character, relied heavily on `goto`, and its only "type" was the machine word (integer or pointer, depending on context). Swift is pretty much the opposite of B -- though if you want to use B, it'd be pretty easy to write a compiler for it these days.
Compare https://github.com/thedp/Dreamland_test/blob/master/Dreamland_test/PlacesNearbyAPI.swift and https://gist.github.com/anonymous/a1005b580a1dd7666ae45f70f8994110. I only changed a few things, removing extra line breaks, breaking up too long lines, but it's a pretty major difference imo.
Wait, you can also make web pages with SSS? I thought it was just for backend.
With the frameworks out there (Vapor, Perfect, Kitura), it makes it possible to build web apps and by virtue of that, web pages.
Those are both things you definitely should not do. You're instantiating a new array every time you accessed `.array` and iterating through from `.startIndex` every time you access `advance`. Those are both WORSE than O(n^(2)).
Most basic objects, like an SKRecieptRequest, take up very little memory, and it's premature optimization to treat them as above rather than declaring them instantiated in the header and just making a new one when it's needed. Most people gape at this because it feels wrong, but it's better to take up an extra 3mb of memory across a few hundred now non-optionals that simply can't crash than to walk on the coals with explicitly unwrapped optionals. Our phones have crazy amounts of ram, but no amount of increased specs can stop a crash. 
What is the difference between strong and weak typing?
lol, I had stored it as DueDate in firebase. All works now. Thanks
What's your workflow? Are you using Xcode?
Honestly, most stars on GitHub. I like that's it's Swift and growing rapidly. Haven't done anything extensive enough to find any fleas with it yet. No hurdles what so ever. 
Yep, and deploy with docker. Easy as pie. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [tbrand/which_is_the_fastest/.../**README.md** (master → 3550837)](https://github.com/tbrand/which_is_the_fastest/blob/3550837543592ebdcf5814d15fef39ea767f6d7b/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dingaj7.)^.
Actually, you can use array.enumerated().forEach() as well.
What more of a reason do you need?
There are ways to avoid explicit copies without exposing such a ~~gross~~ nightmarish API...
Too late for me. They weren't fast last year, and that benchmark is so close it doesn't bother me. Also, neat repo. :)
I started playing around with developing server side applications in Swift 3.1 using [Perfect](http://perfect.org) and I definitely don't want to go back to dynamic interpreted languages. I don't care if 90% of swift developers are just using it for iOS. I think Swift is perfectly capable of server side applications and it should't matter at all what the majority is doing. There are enough talented people working on supporting server-side development with Swift that I think it's already mature and viable. 
Yes, but I also thought the available XML support when I evaluated it allowed me to demo more compatibility with what we needed to do. At the time this meant Kitura just wasn't ready and I had to start ASAP. I didn't want to go into detail, but I needed a framework that is about as corporate-friendly as I can get. I'll eventually have to deal with some other companies and groups that I will want to make it as easy as possible to get their systems set up. Perfect ended up being this solution.
I'm not sure what MVC is supposed to signify in the context of backend (server side). There are no views. You basically create endpoints to manipulate data and endpoints to present data.
**Weakly typed:** the runtime will coax a value of one type to behave like another type if used in the latter type's context. Like using the string "12" as the actual number 12 if used in addition, or treating the string "false" as if it were false in an if-statement, or treating an integer as a floating point number if used in division. PHP is some level of weakly types. **Strongly typed:** values of certain types can only be used as the type that it actually is. You must cast a value to a different type if you want to use it in that context. Python is strongly typed like this, but not statically typed... **Statically typed:** The types of all values must be declared in or inferred from the source code, and therefore known at compile time. Swift is statically typed. In general programming language terms, "static" means some structure or information that is fully declared in the source code and does not change when the program runs. **Dynamically typed:** The type of variables are not known at compile time, and you can assign a variable of any type to any variable, or pass it to a function. This means that errors are only found when the program actually runs. If my function expects a Person object, but gets passed a Building object, and tried to call a method to get the gender of the building... then that is a runtime error. But this functionality can be used to your advantage as well because it is very flexible. Python is dynamically typed like this.
If you only care about the index and not about the element, you can do for index in array.indices {
&gt;The term “Hacking with Swift” means we are “playing” with the Swift language Not sure 'playing' is the word you're looking for.
Not sure, I saw the configuration demo has Horizontal, could have vertical and one more option. Hope you can find in the doc.
Did you figure it out?
I've not been able to, I realize that the nested loop triggers an early stop so I've tried doing an || (or) with the outer while loop and the code won't run at all. This one has me hung up...
So there are many ways in which you can solve problems, and mine might not be very elegant, but I'll ask you some questions to see if you can figure it out yourself. I'll give you my code if you want, but working through the problem is a better learning experience. When do you want this program to run? While either gemCounter &lt; 3, or switchCounter &lt; 4 are true, right? You want to loop through some code while the gemCounter is less than 3 but also while the switchCounter is less than four. So you're on the right track with your ||. But you don't want to pick up every gem or activate every switch, and the loop is still true after 3 gems have been picked up, so how do you stop picking up gems after 3 have been picked up? Can you think of a way to only pick up a gem when you want to? Is there some way to check if you want to pick up the gem Byte is standing on?
Why wouldn't that be an allowed operation? I have a while loop that contains the rest of the code, which has some if statements checking for what you mentioned.
Not only is it always good to give an example when asking a question a lot of the time you end up solving your own question as you work on an example
Thanks! That makes a lot of sense and it works perfectly in XCode! I really appreciate it! :)
Already checked both.... But I'm looking for a course instead of an article/video. Thanks anyways
OIC, I interpreted the question as can swift build webpages in the backend and then serve, not as building webpages on the frontend (like with javascript).
Glad I could help :) But do yourself a favor and review the code, so that you're certain you got the idea, before you move on. And you might want to refactor it once you've learned about switch statements and logic operators.
Although, after WebAssembly is released front end Swift might become an option.
As of Swift 4, `zip(0..., sequence)` is probably better than `sequence.enumerated()`. To the point that they're considering deprecating enumerated().
[It's a low level VM for the web.](https://en.wikipedia.org/wiki/WebAssembly) You know asm.js? It's that without the JS. :D Webkit apparently supports it in the developer preview, so it might come out in High Sierra, meaning that it'll finally be supported everywhere.
##WebAssembly WebAssembly or wasm is an efficient (e.g. compared to JavaScript) low-level bytecode format for in-browser client-side scripting. Its initial aim is to support compilation from C and C++, though other source languages such as Rust are also supported. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove
Sometimes the thing you _think_ you need to accomplish (in this case, fiddling around with animations and arrays of images), is not the think you _actually_ need to accomplish (in this case, throwing that code in the bin and starting over). You love that code too much; you said yourself it is messy, but you are sticking by it. Let it go. The only thing it is useful for now is as a milepost _which you have now successfully passed_ on your way to getting some good code written. Unless you are lucky and get one really determined person who is going to persist in following what that extremely complicated code is doing, you will not be getting any answers. I looked at the general shape of it (which I could easily detect by the several centimeters of closing brackets at the bottom), and I saw the declaration of two IUO NSMutableArrays and noped my way right out. (VERY IMPORTANT: I'm not one of these people who is ignorant of, and therefore against, the proper use of IUO, but I can just tell that these uses are not any of those uses). Start small. Do one thing only. Get it to work. Maybe package it up in a function or an object (or struct) or whatever is appropriate. Then add a little bit more. As much as possible break the solution down into separate parts which can each be developed and tested independently and then can be combined/composed together to do the whole job. However, i think it best if you don't get someone to say 'oh, change the } in line 42 to a )' or 'ah, you just need to enclose the whole thing in a monad' or whatever. You need to solve this one yourself. But by all means as you are redo-ing it - in small pieces! - please do seek help when you need it on very specific problems with very specific, small chunks of code which demonstrate the problem. 
the view in this context is how the data is formatted for display / being returned. so formatting HTML or JSON for example 
Can someone upload an app to test it?
I've released an app that lets you report stray or missing dogs. It's super easy to use. It's called [Dog Finder](https://itunes.apple.com/mt/app/dog-finder-find-stray-dogs-or-missing-dogs/id1241403254?mt=8) and it's free to download.
Awesome, that's great. Throwing it out and starting over saved my ass many times working through Playgrounds. It doesn't look like you're incrementing gemCounter, is that why it's collecting all gems? I think the functions goLeft and goRight make the code a bit strange to read, because it looks like you want the guy to move forward, left, and right until he's blocked. I'd remove the functions and just have conditions checking for isBlocked and !isBlockedRight to move right, same for left. I do think you're on the right track, but I would make the entire program a while loop checking for the gemCounter and switchCounter states. If you check for !isBlocked, that means that even when you're done collecting gems and switching switches the program keeps running until he's blocked. You want to stop the program when gemCounter &lt; 3 and switchCounter &lt; 4. Also, maybe you can check for both being on a gem and gemCounter &lt; 3 at the same time. Do they have to be nested? I'm going to write out pseudo code for my solution below, so if you want to keep banging your head against this problem don't read this. Otherwise, just read it and implement and move on, I worked through the entire Playgrounds series a bunch of times before everything started to make sense. Writing it out without being worried about syntax helps me visualize the problem, so here: While gemcounter is less than 3 or switchcounter is less than 4, move forward. If I'm on a gem and gemcounter is less than 3, pick gem up increment gemcounter. If I'm on a switch and switchcounter is less than 4 flip switch increment switchcounter If i'm blocked and not blocked right, turn right, if i'm blocked and not blocked left turn left
Derp clearly it's been several days since attempting this (hadn't tried since last week until speaking with you) totally forgot about incrementing. So after reading that, modifying it and trying once more with a while loop using an or statement it actually worked this time. I skipped your coding portion as I wanted to be able to troubleshoot this I just needed a finger in the right direction. I was able to get it from your tips, thank you very much for the help you provided! I know what I laid out on this go is not the most concise or efficient coding but I'll do as you did and work through these modules a few times over to improve myself, thanks again sir 😀
I am a high school CS teacher and some of us have been learning Swift as a professional development initiative to put more coding in the classroom. I just finished a game with our German teacher: https://itunes.apple.com/us/app/wiener-tapper/id1200818899?mt=8
This video? https://developer.apple.com/videos/play/wwdc2016/416/ Really interesting breakdown of memory management and references.
Yes, yes, yes. This is the one.
Thanks! So probably the 2012 MacBook Pro would be my best bet then. Or what model would you suggest?
Max out the ram, but yes, an SSD will make worlds of difference. Make sure to check the compatibility list for High Sierra.
Where are you placing this code?
I'd suggest anything that can run High Sierra, so the rMBP is fine. If you don't care for Retina, a 2011 model with full RAM and an SSD will work too (that's what I use). 
it seems you've placed that code into a method that gets called more than once.
Alright, this basically cements it. Thank you!
Can you submit apps using swift 4 in Xcode 8? I'd love to be able to use Xcode 9 right now due to all the improvements, then revert back to Xcode 8 for submission. 
I'm really hoping this one gets re-visited at some point. I'm happy that performance is a priority but when performance has improved enough I'd love to go back to automatically expanded tuples names.forEach({ name in let (first, last) = name print(last) // "den Hollander" })
Hmm, can't really see anything wrong with how it's called. Is the closure being called multiple times, or the method it's in? That's the only explanation I can think of. 
Wouldn't it be smarter to add proper pattern-matching to lambda arguments and write names.forEach({ (first, last) in print(last) }) ?
it would be nicer but that no longer works in swift 4. from the discussion on mailing list this seems to have been a little unexpected so hopefully they'll keep working on it 
It doesn't *actually* work in Swift 3 either, it's just that the parentheses of a closure are optional when inferring types. You can check that by trying to nest a tuple inside e.g. names.enumerated().forEach({ i, (first, last) in … or names.enumerated().forEach({ (i, (first, last)) in … it fails to compile.
If you don't need a laptop and if you have a spare monitor, I'd heavily recommend a Mac mini 2010 or later (which will run OS X Sierra). If you can, the newer ones have an ssd and I'd max out the ram if possible. These are significantly cheaper than the laptops that are offered and just as powerful, albeit with no mobility like a laptop
the example you posted _does_ work in swift 3 though. but yeah I've run into the issue with nested tuples as well
[removed]
Not currently, although there is talk of making keypaths accessible to functions taking closures. For now, just use let user: User = QueryBuilder(User.self).first { $0.name == "John" } 
I made print statements on both the pushViewController and then the view will appear. I commented out all functions and put breakpoints on the pushViewControllers inside of VC 2 to see if it was getting triggered. The print inside pushVC in VC1 was printed once, the print on VC2 in the view will appear was called 5 times, and no breakpoints were triggered
I just got put into a project that is using kotlin and spring and I fucking love it. It has a lot of similarities with swift and can take advantage of the jvm ecosystem 
I found this... https://stackoverflow.com/questions/39669682/viewcontroller-appears-mulitple-times-when-creating-a-navigationcontroller-progr I used it and now it is improved, it is only getting called twice...still not optimal
Well, without access to the project, all I can do is throw out a bunch of random, generic things which have helped me in the past: Before doing anything, the first thing I would do is create a new branch in source code control (if not using source code control, this is a good time to turn it on) because sometimes in the fury of tracking down a problem i end up doing all kinds of changes which i just want to get rid of in one fell swoop; a branch makes it super easy to do that. 1. do a clean build folder (hold down alt and choose menu: Product-&gt;Clean Build Folder... and answer "clean". 2. I have had this exact thing happen to me in the past: I connect a button in VC1 to VC2 which creates a segue. Then I connect that same button to VC2 again and it creates a 2nd segue. Then when I press the button, it presents 2 VC2s. I understand you are not using a button, but are there any other ways (either code or segues) to get from VC1 to VC2? If so, either disconnect them or somehow set breakpoints to see if they are executing. 3. Is there any other way (again, in code or in storyboard/nib) to get a new VC2? if so, again, disable or delete them or at least think of some way to detect if they are executing. 4. take the code which instantiates and pushes VC2 and extract it into an IBAction function. Call that function from where the code currently is; make sure that still works the same. Now, stick a great big button in VC1 and connect it to that function. See if pushing the button acts the same way as the cardNode.singleThingy, or if it just pushes it once. of course, build/run after each step to test if that works. If that doesn't work, then you are into desperate measures territory which usually requires quite some work. Some things I can think of: 1. If you've been using source code control the whole time you've been developing, and have done small frequent commits, you could try going back in history to see if you can find a time when it worked followed by a commit where it doesn't work, and then figure out the difference between them. 2. (i'm assuming these view controllers are in your Main.storyboard, if not, you'll have to make appropriate adjustments) create a new storyboard (call it 'FFS.storyboard'), create barebones vc1 and vc2, set the view controller classes, storyboard ids as necessary. TEMPORARILY make FFS.storyboard the Main Interface for the project (in the project's General inspector). now when you run the app, FFS will appear rather than main. See if the same push problem occurs. If not, the Main.storyboard has got undesired connections in it, or is corrupt. If not it is likely problems with code in the view controllers or elsewhere (such as a nav controller delegate) in the app. 3. make a completely new project, make barebones vc1 and vc2, make barebones classes, and just put in enough code to try this VC1-&gt;VC2 manoeuvre. And, ultimately, if it gets frustrating remember: tracking down a problem like this will expose you to the grimy underbelly of 'how things really work' in UIKit which is really valuable knowledge; it is this type of knowledge which causes programmers to earn the big bucks.
sorry but if that changed things, then something doesn't make sense. Earlier you said you put a breakpoint on the push and it only reached that breakpoint once. In order for this solution to reduce the pushes, that would imply that push had been executing multiple times.
Did you finish reading the first sentence? That's why I wrote "to the extent they do on Apple devices". What's the last server you deployed that had less than 1/2 GB of RAM (for everything, including the operating system), and zero swap space? Ruby and Python and Java are all doing just fine on servers, and they are not at all designed for the kind of low-level optimization that Swift is. Swift specifically avoids GC because a tracing GC takes at least [3-4x more memory than needed](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160208/009422.html). If memory usage were truly such a huge concern, we wouldn't see nearly every web framework in the world blowing 75% of their RAM budget on GC tables. This is not behavior suggesting they care primarily about memory efficiency. The server is a place where, almost all of the time, it's far cheaper to use a higher-level language that's slower to run, but faster to develop in. You can always buy twice as many servers -- they're pretty cheap, and the cost scales linearly with number of users. You can't just tell people to buy twice as many Apple Watches to run your app.
How do I max out the ram for mine? Early 2011
How do you do max RAM?
CoreData is Apple's standard storage Framework. It's rather advanced, though. Objc.io sells a book on the topic that is well worth the price.
I'm making an app with similar requirements. I used plist files stored on the phone and seems to be working pretty well. 
I need my code folding, man. I can’t live without it! Besides that, holy crap it’s such an improvement. I love it
It's hopefully going to happen in the future, but it turns out to be super tricky to usefully and efficiently represent the type of the elements of a KeyPath. Basically the bar to meet is "let developers take a keypath apart and process setting a value through the pieces without incurring any worse algorithmic complexity than if they had set through the original keypath", which sounds straightforward at first glance, but remember: a.b.c = d can update a.b in place, while var b = a.b b.c = d a.b = b may incur copies depending on how well the optimizer does. Additionally, this sort of thing doesn't work in the way you might hope: let unknownPath: AnyKeyPath = ... let valT = type(of: unknownPath).valueType let baseT = type(of: unknownPath).rootType let knownPath = unknownPath as! KeyPath&lt;baseT, valT&gt; //error, swiftc wants actual type names as the generic arguments There *are* ways to get both of these to work the way you'd want, but they're not at all intuitive, so figuring out a better solution for decomposing key paths into their pieces was deferred in favor of getting the core bits solid for Swift 4. 
i am working my way thorough the new apple course "App Development with Swift" and it seems to fail at the first assignment when i open the playground. i followed exactly what the iBook said to do, and the playground does not even replicate the first line of text which is "hello playground". has anyone else had this problem.? 
problem solved i took off the quotes when i input the name of the playground and it now works. however i would still appreciate some one telling me how to access the trig functions. and also is swift the correct program for me?
Yeah I had a feeling it would be :/ I've heard about something called Core Audio which may be able to help me. I'll give it a shot. Thanks for the help :) 
The most general distinction is **identity**. Do instances of the entity need an identity to be globally differentiated? Say given two instances of `String`s, what we care about is the content inside them, but not whether the two instances are the same. This makes value semantics a natural choice for a `String` (ignoring the implementation detail in the Standard Library). Let's say now we are given two instances of `UIVIew`s, we know that views are **owners** of visual and interactive states that would be displayed to the user's screen and manipulated. Even if two instances have identical contents, they are not gonna be the same because they could represent different things at different use sites. Here comes the need of an identity to differentiate them.
I have spent hours and hours and hours debugging issues with core data. XCode changes the modeler UI from 7 to 8 and suddenly you can't figure out how to create a new model, or you have to figure out the persistent store stuff for various threads and merge them, it's really unnecessarily complex for most apps. Use Realm.
I kinda wish zip was a method on Sequence (I know I can extend it myself, but I mean in the standard library). sequence.zip(with: 0...) Would be nice. I prefer extending chains of functions calls over nesting them
Your label outlet is probably not connected in IB.
IB? And how would I do that?
Why would it be set to nil if I have linked it up from the IB using the UI editor? Even with the UIView being linked up to the view controller I get the same issue. though as soon as I do self.lblMessurementType1?.text = "Hi" it seems to work.
Really nice
And it does not use swift, you develop in a language called Elixir.
yep, not meant as a swift example, just an example of functional concepts in a web app using MVC architecture elixir is a pretty cool language, worth checking out
Yep, I do consider decomposition alone is going to open a lot of unchartered lands in Swift. I got one important use case of it to differentiate key paths by their root keys for best performance, so I do hope it would arrive ASAP. :p
[Here's a step-by-step](https://support.apple.com/en-gb/HT201165). Apple claims that 8GB is the max supported, but 16GB works. 
I think you're missing the point. There's no (sane) way to convert this into an efficient database query.
https://www.udemy.com/best-ios-10-swift-3-xcode-8-course/ this course is really good. get it while it's only $15
Go for it, all you need is common sense and lots of curiosity.
**Design Your Company Website** 1.Basic Website: $50 2.Professional Website: $100 3.Online Shopping Website: $200 Call: 03332788992, +1(214)3770410 [Designing Contract] (http://www.designingcontract.com)
yes, although i would suggest you to search for swift tutorials on youtube and maybe get some app template in order to learn how to code better and faster: https://codecanyon.net/user/fvimagination/portfolio 
Read the “App Development with Swift” book. It’s all you need.
Udacity's iOS Developer Nanodegree™. https://www.udacity.com/course/ios-developer-nanodegree--nd003 I don't know if you can afford it, but it is a really good place to learn iOS Development with Swift. Including major frameworks. The Networking related course will definitively challenge you. Good luck.
So somebody helped me, it was very confusing as why the order of print statements were occurring until he saw the rest of my project... On other ViewControllers I had Firebase observe methods....when I would push to another VC I was just adding to a stack...that method was still running in the background so I had 2+ observers doing a pushViewController .. We ended up changing some of them to be ObserveSingleEvent... He told me alternatively we could have done the viewDidDisappear So i guess it helped me understand better how apps work.
I tried to think of an example of incrementing 'a thing' but couldn't find one. However... if you really miss it you can always bring it back: postfix operator ++ { associativity left precedence 160 } postfix func ++(left: inout Int) { left += 1 } **Disclamer**: there's a chance that the operator declaration is incorrect, I don't do custom operators a lot. I just threw it together and it seemed to work in a playground.
For me it's also the first language that i learned ! It's really easy with common logic and lots of tutorials ! I would suggest first of all to start with MVC pattern and try to follow Stanford Tutorials https://m.youtube.com/playlist?list=PLPA-ayBrweUz32NSgNZdl0_QISw-f12Ai Keep also in mind great articles about swift and ios development in Medium.com 😊 If you read a lot and practice more by examples and why not distributing your own application, most likely you will find yourself at ios development industry !
Don't get me wrong the Stanford iOS 9/10 course is beyond amazing, but what I noticed is that if you don't enjoy the University setting you'll get confused. Also, have you been doing the homework/reviewing the slides after each lecture? Doing so will help you a lot. Anyway if your not fond of the University setting I'd recommended you check out HackingWithSwift.com, great website for beginners. 
Not arguing with that, but I have more faith in Apple to maintain a DB framework than Realm Realm have taken $29M of funding, I'm not 100% clear on their business model but if at some point it becomes untenable I doubt the investors will stick around because a lot of apps are using it
It comes up with what looks like byte code or assembly
The official free iBook from Apple. Not sure how quick they will be with updating to Swift 4 though.
Good summary if you didn't watch the keynotes but still want to dive in some of the new amazing features!
I read summaries too + watch some key sessions. 
There is any chance to run arkit on xcode simulator?
I hope you don't mind, I created a bug report for your problem [here](https://bugs.swift.org/browse/SR-5197).
found another solution. I have a friend who has a mac, so I'll just make a bootable install usb on her computer, and turn my laptop into a dual booting hackintosh. my computer can easily run the shit out of mac software
It's okay as long as you are okay with being limited to a macOS environment. While Ubuntu is supported and it is technically possible to target Windows, the instrumentation and tooling is only really available via Xcode.
so if i learn swift for that, what should i learn next to take the things to web also? 
https://swift.sandbox.bluemix.net/#/repl
Seems like DeStephano makes videos using Paul Hudson's /u/twostraws books. I assume he has an agreement with the books author. The books are guaranteed to be upgraded to Swift 4 for free, I doubt same goes for the videos. 
I learned Swift as my first language. Made learning JavaScript much easier. With the amount of support from Apple and the amazing community, it made me hate JavaScript for how broken it is. IMHO Así from the Apple iBooks, which as practically all you need, there are some other awesome (and fairly inexpensive) resources that I loved using: [Ray Wenderlich](https://www.raywenderlich.com) [Devslopes](https://devslopes.com/) [Mimo](https://getmimo.com) 
I just made my first app for the App Store in Swift 3.2 and learned from scratch. https://itunes.apple.com/us/app/pitch-pipe-with-pitch-assistant/id1244972865?mt=8 
You don't seem to be following. The *Swift compiler* is writing code for us (synthesizing) as part of the build step, otherwise we would not get all of this behavior for free. I want to be able to do the same thing since it lets you create really powerful libraries, just like Codable. See: https://github.com/apple/swift-evolution/blob/master/proposals/0166-swift-archival-serialization.md
You're welcome man. Glad it can be of use to you. Leave a like. Leave a share. Cheers 🍻 :) 
Last year I launched my first app [Bici(s)](https://itunes.apple.com/app/apple-store/id1131177363?mt=8), it lets you check the status of some bike sharing services (more to be added soon, finals won't leave me free time) and I just made a complete redesign trying to adapt it to a more iOS 11-ish aesthetic. Also, I didn't know how CloudKit worked and I implemented it in the latest release and wow, it's sooo easy.
Google. Search: "swift" before everything and then things such as: - swift eye recognition - swift camera eye - swift eye movement - swift camera movement Look for stackoverflow answers. This is a big thing you're doing, and it's gonna require a lot of time. How much experience do you have with Swift?
I mean a program like the iPad app "Swift Playgrounds" which is made for beginners. It is on the AppStore under this address: https://itunes.apple.com/de/app/swift-playgrounds/id908519492?mt=8
I have zero experience with Swift (have coding experience, but only front-end web dev and some php - and very little visual basic). Just taking it on as a project for my grandma who can't see properly. And want the screen to correct for astigmatism aswell. Will make those searches when I get home from work. Thanks
It's for my grandma who can't see properly. And I want the screen to correct for astigmatism aswell as just enlarge the text (which there are several of available apps for afaik)
That app is basically a subset of Xcode Playgrounds. Install and open xcode, File &gt; New &gt; Playground. Demos and documentation are here: https://developer.apple.com/swift/resources/ 
Can you give examples of apps that use this on the App Store? 
**Today** I have released my new iOS app - [Sophia - Photo Carpetizer](https://itunes.apple.com/us/app/sophia-photo-carpetizer/id1241606097?mt=8) --- SOPHIA makes your photos look like carpet-designs. INNUMERABLE combinations are possible - always calculated completely randomly. Usage: - Load photo from photo library - Swipe UP/DOWN to create new photo-carpet - Swipe LEFT/RIGHT to move through history - Share/Export photo-carpet as image sized up to 4000x4000 - (if you don't load photo from photo library, normal carpet-patterns are drawn)
That's the thing. I don't know of any apps on the App Store that corrects for astigmatism or for that matter tracks eye movement..... I also don't know every app on there so maybe someone here could know? :) Edit: I see now that I wasn't very clear. My apologies. I meant to say in my previous post, that there are several apps that enlarge what's viewed through the camera. And I don't know of any that correct for astigmatism
[Intro to App Development with Swift](https://itunes.apple.com/au/book/intro-to-app-development-with-swift/id1118575552?mt=11) Edit: you'll also notice when you scroll down the second book is also listed. 
I doubt it has all the capabilities of actual playgrounds but you could try https://swift.sandbox.bluemix.net/#/repl
Yes, a great development machine for iOS apps!
So it'll help with the learning process and get me through that. My only concern I guess would be since I'm very new to this would be that the 4GB RAM may not be able to handle the work load. As far as the screen goes, I will most likely have this on my external monitor regardless. I'm sure I'm going to hear a lot from other people, but what got you started and helped you the most when learning Swift?
It should run well enough for most uses, but you’ll probably need to use fullscreen a lot to make the most out of it. I’ve been using Xcode on a similar machine for a couple of years no problem. RAM shouldn’t be a problem with regular projects, but playgrounds run really slowly for me. On the other hand, the portability it provides is great.
Good luck with your learning. I didn't mention this in my original comment but I learned Swift with my 11" Air as my only machine, and it's great for some aspects but not for others. Playgrounds especially are great for testing out code snippets - invaluable when learning, so you may find that an issue. For app development itself it's fine.
I recommend against using both an older machine and a small screen. I've gone down this exact route myself and having upgraded to a Macbook Pro 17" and external monitor - what a world of difference! If nothing else - I cannot overstate the value of having an external monitor. You can absolutely be productive on the Macbook Air, but you will definitely be leaving some productivity "on the table" by using lackluster tools. Best of luck!
4gb should be fine
Maybe this will help you https://www.weheartswift.com/swift-programming-scratch-100-exercises/ (for mac) https://www.weheartswift.com/online-exercises/ (online version)
Well an optician or an ophthalmologist recognizes that for you. It's usually incorporated in your glasses - it's very very common. It's like a building fault of the eye.
Yes it's going to be little projects here and there. This is for my own personal use; I would like to learn how to code and possibly make it a hobby
Can you list a few of the tutorials you used? Thanks!
I found a YouTube channel called The Swift Guy that is pretty nice, I'm just learning too
Beware, laptops are a lot harder to make Hackintosh than desktops. It's gotten better in the past few years, but the issue isn't really power, but compatibility. [this](https://www.tonymacx86.com/threads/laptop-compatibility.106791/) should be a good resource if you haven't already found it, just know it could end up being more trouble than it's worth.
I've had no luck. just gonna buy a mac. gotta find someone to sell my pc to now. spent $950 on that shit not even a month ago ):
Core Data, NSFetcedResultsController. 
[this](https://www.youtube.com/playlist?list=PLyjWuFyddLWNIB44fxY2AY5gbvNjWXvq9) The guy knows what he's talking about (used to work for NeXT I believe) and explains stuff very clearly. I'm still very new to it, but after seeing these I understood enough to be able to start on my own project. Edit: removed non-official playlist 
Still learning programming and swift, so maybe you're trying to do something I don't understand, but i think you'd want to create a new label object and then set label.text = words
try NSString
You typically don't want to draw a string manually like this. A string is an abstract concept of a bunch of characters in a certain order. "Drawing" is a very complex process that involves taking abstract concepts (like strings) and turning them into pixels. If you're developing on macOS or iOS, you're probably going to want to use labels, text fields, and text views. They do the hard work of converting strings into pixels while managing their size and position in the view hierarchy. If you must draw a string, I would suggest looking into Core Graphics. Relevant tutorial [here](https://www.raywenderlich.com/128614/core-graphics-os-x-tutorial) If you're developing on another platform (i.e. Linux) then you're going to need to find a graphics library for that platform that is capable of drawing Swift strings.
How long are the search terms? 400,000 strings could be like ~50KB in memory which your phone could chew threw in a few milliseconds without any hiccups if you put them all in a dictionary. Your table view data source doesn't really have to load EVERYTHING at all times, you could paginate the data source if needed. I usually try to avoid a DB for as long as possible
This is a non-trivial problem and you haven't provided enough information for anyone to give specific suggestions. I'll toss out a few common solutions, though. First, we have to actually understand the problem space. 400k strings *sounds* horrifying, but is it really a burden? Even if it takes up tens of megs of data to hold that data, is that too much? What percentage of your app is that? Is it reclaimed when it isn't used? Is this a performance problem? Is this a problem at all? Okay, so maybe it *is* a problem. You'll know if you measure it. Are you using Instruments or the Xcode memory allocation tooling? Measure it and if it is a problem, we can move on to ways to address it. Assuming that there is a performance or memory overhead burden with those strings, can we merely offload the data to disk? What's the performance overhead of merely reading a file line by line and filling a smaller buffer? Is that plausible? Do you need more control or guarantees? Can you store the strings in an on-disk database (say, CoreData or SQLite)? Have you considered mmap (I wouldn't recommend it for this, but it's not an *awful* option when you need it and know what you're doing)? If you really need those strings in memory, do they *need* to be stored verbatim? What does the data look like? Are there a lot of repeated strings? Can you turn that 400k into a set of, say, 4k and store an array of indexes into that set instead? Would it be possible to convert the strings into a trie and recompose them on the fly? Could you use another searching solution? Sadly, SearchKit doesn't appear to be available for iOS, but is there some library that lets you efficiently load lots of text and do efficient searching? Search is a non-trivial process and offloading that to a dedicated API is likely the right thing for you and your users. Lots of searching apis that I've worked with provide thresholds for various fault tolerances and results, so you might find something that lets you allow users to make small typos but wouldn't provide unnecessary results. Again, I can't provide any specific recommendations because I have no idea what problem you're facing or what data you're using. It's entirely possible that it isn't actually a problem yet. I hope some of these options are useful or help get the ball rolling.
Currently working on games and a math education tool. I'm a math major at Duke University and I think it's pretty sad how bad our teaching and our education technology is. Also, I'm working on writing a general iOS Swift framework with useful things, built-in class extensions, adding more UIColors, etc.
u/GHansard gives good advice. For my money (and from his suggestions) it *sounds* like a Trie-like data structure could solve the problem well, while avoiding the cost of adding and learning any new dependencies. For general Trie info see: https://www.topcoder.com/community/data-science/data-science-tutorials/using-tries/ Here's how the Trie approach can be related to two of the requirements you outlined: *Requirement 1:* Filtering based on search-term input. A critical question is whether this needs to match only the beginning of a string, or any part of the string? If it's the former case, then the problem is a lot simpler: we can traverse the Trie following the character sequence, and use the sub-tree from that point as the one to present in the `TableView`. *Requirement 2:* Loading the search-result strings as table rows. If we *maintain a count of the number of leaf nodes below each node* (at trie build time), this allows us to efficiently seek the path in the trie and any sub-trie for any given index. I'd be happy to do an example implementation; but if the search is only useful to you if it matches arbitrary parts of each string, that would we wasted time and we'd have to consider a more complex solution instead.
&gt; 400,000 strings could be like ~50KB in memory Where do you get that from? Does a `Dictionary` perform any space optimisation for strings by default? To my knowledge, it does not, meaning that in the best case scenario where each string is 1 byte (one ASCII character) with no memory-layout overhead, that would be 400,000 bytes / 1024 ≈ 390Kb With an arguably more realistic ball-park of 30 bytes per string (inc. overhead), 400,000 strings would occupy: 400,000 * 30 = 12,000,000 bytes ≈ 11,817Kb ≈ 11Mb ...which is starting to become a burden for the App.
Was just assuming some basic chopping for pagination you could do. Should've gone deeper into it. However: 11Mb of ram will still run fairly easily btw. It's not ideal, but still more than functional. Remember, 11Mb is like 1 photo with today's cameras. Not even a video clip nor Live Moment. Adding Realm or a DB framework would add a couple of megs in disk and memory anyways so don't fret too much about optimizing until you really need to. 
Think about the trees!
What do you mean it only works for a couple days? Is apple rejecting it? Mine last years
When you build an app in Xcode and load it directly onto your iDevice (by clicking 'Run'), it will only be able to start for a duration of 3 days I believe. After that it won't open anymore and you have to install it again from Xcode. 
I believe they changed their policy on that because many people downloaded otherwise rejected apps' source code (take emulators for example) and installed them on their iDevices via Xcode. To avoid this sort of "disruption" of their own ecosystem, they reduced the amount it was valid when installed without signing from a valid/paid developer account. To circumvent this, you need a paid developer account which lengthens the period it can be run, which still isn't forever as far as I know. Just longer than with a free developer account. 
my favorite part about this is that op hasn't responded to anyone here, and it's been 10 hours.
Awesome! Purchased! Hope to learn some great stuff :) 
1) Create (programatically) UIImage (circle, etc.) 2) Make SKSpriteNode from created image When using thousands **same-looking** nodes, SKSpriteNode is obviously better choice. 
Yourarray.filter{$0 as String == "your search word"}
I have many apps that I installed on my iPhone and are many months old, some more than a year and they still work !! Edit: Built through Xcode
Care to share your process?
Okay I was able to fix my problem with a type erased ownable protocol, but I'm still curious if you guys also think this should be considered a compiler bug.
Are you using two definitions of `User`? One for the associated type and one as an actual type name?
This is not a bug, but by design (for better or worse). In overload resolution, Swift prioritizes non-generic methods over generic methods (they are considered "more specific"), and since Post matches both versions, the non-generic one is chosen. You might have some luck making both check() overloads generic so Swift views them with equal priority, and then will choose the more specific Ownable version in that case.
Ah yes indeed, I forgot that that might be confusing for you guys. I assure you that's not the issue though. :-)
Thanks, that makes sense. ~~I can't make the non-generic method generic, but~~ Actually, yes I think I'll try that when I get home. I was also able to solve it by using type erasing to make the generic method non-generic. It still preferred the wrong method though, but at least now I could write an if statement like `if let ownable = entity as? TypeErasedOwnable { }`. 
Why are you trying to implement this yourself? Why not just use the built in UINavigationController?
Ah, that much I knew, I thought you were talking about a way to do it with a free dev account...
Here are some options (choose which fits your needs): **Views:** * UILabel defines a label, which displays a static text string. * UITextField defines a text field, which displays a single line of editable text. * UITextView defines a text view, which displays multiple lines of editable text. * UIWebView **CALayers:** * CATextLayer - I use this often when creating custom UIControls which are backed by a tree of CALayers (some layers of which are CATextLayers) **Drawing directly to current graphics context:** * NSString's draw method, this is useful if you are creating a custom UIView via override UIView's draw method.
I believe this is an instance of Codable being a protocol and then also having a default implementation via a "protocol extension." Protocol extensions have been freely available for us to use since ~ Swift 3 I think. http://sam.dods.co/blog/2015/08/04/why-i-love-swift-protocol-extensions/ https://www.appcoda.com/protocols-in-swift/
It's been a while since I used them, and Swift has changed quite a bit since it began, so many of them have been changed or are outdated. I hadn't actually come across [Apple Education's iBook](https://itunes.apple.com/us/book/intro-to-app-development-with-swift/id1118575552) until recently, but that looks like it may be worth a look at. Other than that, Apple Developer videos on their website, such as [this](https://developer.apple.com/swift/blog/?id=16), are really helpful and if you want to start using SpriteKit I often find myself on https://www.raywenderlich.com, the tutorials there are quite thorough and the popular ones are updated for newer versions of Swift. I'll try and update if I can find more buried in my reading list.
I opened it up in Hopper to take a look, and it might interest you that they [have a lot of values](http://i.imgur.com/IuB65s4.jpg) for that recognizer. Not sure which corresponds to the one you're looking for, but you might want to use the [Hopper](https://www.hopperapp.com/) trial to take a look.
Thank you
Very interesting perspective on this problem! I did some quick research around friction default values and found out the UIDynamicItemBehavior's default friction is 0.0 and SpriteKit's is 0.2... Argh! But I kept persevering and checked for UIScrollViews (as you suggested... stupid me!). And it turns out they have a [decelerationRate](https://developer.apple.com/documentation/uikit/uiscrollview/1619438-decelerationrate), around which are defined 2 constants: `UIScrollViewDecelerationRateNormal` and `UIScrollViewDecelerationRateFast`. I definitely prefer this approach, because the threshold can now be something like: "the view would have made the whole transition anyway" and a hard-coded percentage ("movement &gt; 100%") is more enticing than a random absolute value ("velocity &gt; 400"), because it scales better throughout all devices/orientations. As for your last comment, I'm not planning to use a UINavigationController (nor a UIScrollView) but I'm not worried about that, since I'm sure the calculation is not that complicated. Thanks a lot for your suggestion, I'm loving it! I will make some tests and hope that it will end up as good as it looks in my mind \^_\^.
Oh, I didn't know about Hopper. I'll give it a try, but I have a question for you: From your screenshot, I will get a list of constants/properties/methods. If I'm lucky enough to find what I'm looking for, how would I be able to use it? For example, I see there's a `-[_UIScreenEdgePanRecognizerEdgeSettings maximumSwipeDuration]`, what can I do with that information?
Ah sweet, thanks for your quick help!
You're welcome. Best of luck
I had two major issues with Vapor when I first adopted it. One was fixed and the other has gotten worse. My first issue was with the router in Vapor 1 where a design flaw prevented nested resources from being viable. Some of the nested routes would clobber the parent routes causing not found errors in routes that were explicitly setup. This was fixed in Vapor 2 so I can now achieve the end result that I need. The other major issue I had was with database transactions. They didn't exist in Vapor 1. I ended up writing my own little transaction function and setting a flag on the database driver telling it to retain/reuse the connection so everything would flow through the same connection as my transaction statements. Well in Vapor 2 they ended up implementing official transactions. Sounds great except the implementation is severely broken for trying to wrap anything non-trivial into a transaction. This wouldn't be the end of the world except the ability to retain/reuse the connection was removed which broke my implementation. I'm really hoping this whole thing was an oversight and was not meant to be the new normal. That being said, I love Swift and using Vapor has otherwise been a pleasure. I can't really imagine going back to a non-compiled language for my backend. We just need to give it a little more time and trust that the maintainers will move things forward in the right direction. So far so good from Vapor (and Swift) on that front.
I bailed on Perfect before landing on Vapor. The main reason for me was because Perfect didn't have an ORM at the time. I believe they do have one now, is that correct? Also, Vapor's big drawback for me at the moment is the way they implemented database transactions in Vapor 2. How is Perfect on that front? Can you wrap a controller action in a transaction and trust that all the lookups your models might do inside the block will be covered by the transaction?
 What you need is the [Trie](https://www.raywenderlich.com/139410/swift-algorithm-club-swift-trie-data-structure) data structure. It's designed to facilitate quick prefix searching for the English language. There's going to be some overhead for serializing the text file into the Trie to begin, but once the Trie is set up in memory, filtering terms based on search text will be quick and efficient. 
When you want one of your types to adopt a protocol, you need to declare its conformance explicitly. One thing this helps with is preventing accidental adoption of protocols when you're unaware that one of the types you're defining is actually fulfilling requirements for a protocol when you don't realize that's happening. &gt; Types do not automatically adopt a protocol just by satisfying its requirements. They must always explicitly declare their adoption of the protocol. https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID278 Because dictionaries are generic types and might contain values that aren't equatable, not all dictionaries are equatable. You can see that *some* dictionaries have the `==` and `!=` operators available in one of the type's extensions: `extension Dictionary where Value: Equatable` https://github.com/apple/swift/blob/master/stdlib/public/core/HashedCollections.swift.gyb#L2596 Check out [this section of TSPL](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID192) for more details on this case. A related feature that's accepted for a future version of Swift is [conditional conformance](https://github.com/apple/swift-evolution/blob/master/proposals/0143-conditional-conformances.md). 
If you're doing backend development with Swift then any decent laptop will work. If you plan to develop iOS/OSX applications you will need a Mac unless you go the Hackintosh route.
interesting point! We will think more about landing... Do you have any examples of good landing pages for iOS dev tools? The design and landing were done by us (we're not professional designers), so might done it wrong :(
Yes, through paid dev account!
Sweeeet
Well, that does make sense. And I also see how it may be a burden to implement equatable for a custom type in order for it to be placed into a dictionary. 
https://www.paintcodeapp.com/sketch is pretty great. 
Assuming you are using a command line app, the function you want is `readLine()` which according to the docs: &gt; Returns a string read from standard input through the end of the current line or until EOF is reached. Edit: a more concrete example: print("Give me a number:") while let input = readLine() { guard input != "exit" else { break } if let inputAsNumber = Int(input) { print("you entered: \(inputAsNumber)") } else { print("\"\(input)\" is not a number. Stop wasting my time") } //ask again: print() print("Give me a number:") }
HELL NO.
XMLParser exists for a reason. Don't fall prey to bad habits. Learn how to use XMLParser. DO NOT if/then/else your parsing code. You create a shit parsing structure as it expands. If anything use a look up table.
The hero we need. Saved me a few seconds of reading so I thought I'd reply instead. +1
Then you should have been asking about the introspection aspect of it instead of code generation. =P
is this in xcode? you should be able to type in the console, but need to click inside it first 
Yeah, but it's in the Playground section of Xcode. I'm clicking and typing but it seems you can't edit the console section.
Sorry mom
Great, done the same and it's working now - right, I can ask the user questions and input answers to the questions. I've got the calculation at the bottom of my script, but how do I adapt the code you put before so it saves the answer as a variable?
Why though? It just makes your code less readable to someone who just knows Objective-C. If you want to use Swift that bad just switch
From a leading iPhone app development company with 2 head of iOS development :/
**Swift** The swifts are a family, Apodidae, of highly aerial birds. They are superficially similar to swallows, but are not closely related to any of the passerine species. Swifts are placed in the order Apodiformes, which they share with hummingbirds. The treeswifts are closely related to the true swifts, but form a separate family, the Hemiprocnidae. Resemblances between swifts and swallows are due to convergent evolution, reflecting similar life styles based on catching insects in flight. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove ^| ^v0.21
The blog says yudiz is a leading iPhone development company and in their staff section they have 2 head of iOS lol
Hehe thanks . Will correct 😂
thank you :)
https://www.slideshare.net/mobile/SommerPanage1/swift-graphql 
I think it's a fairly safe bet that Apple maintains an internal build of macOS on ARM, like they did for years with the Intel build when PowerPC was the only supported architecture. It lets them have a contingency plan and gives them leverage with the chip manufacturers. With BitCode, they should be able to cross-compile submitted apps for multiple architectures, and I expect it to go from suggested to mandatory for App Store apps at some point, as it already is with watchOS apps.
Cool! 
In that case this scenario doesn't sound unlikely at all. :-D
Lol ReactNative...
Yeah, I will give it another try later on, when I feel more comfortable with programming as a whole. Thanks for the tip! Edit: Actually, I just realized that I do need to use if/then/else both before and after parsing! Could that be why I couldn't get it working before? What should I do then?
Follow these three simple steps: 1. Learn CoreMotion 2. Learn CloudKit 3. Combine the two People usually aren't gonna write code for you for free, you need to do it yourself. Now if you believe you've got somewhat of a solution, then you can ask for help on StackOverflow or here. People are much more willing to help you when you've done some effort yourself. Also, use Google and StackOverflow search for help, it's really useful. Good luck!
Here's the thing. You should always code to the paradigm that is expected. You would't want enterprise Java dev to come in and Java-factory-creation-manager-factory your Swift. When I code in objc, it looks like objc style, only when I actually port that to swift do I change things to be swifty.
For making the file, Swift 4: https://stackoverflow.com/questions/26820720/automatic-json-serialization-and-deserialization-of-objects-in-swift For uploading to the cloud, there's a lot of options.. I like S3, but that's just me. 
Performance-wise, they could stick two A10s in there and it would kick a MacBook's arse. In theory. It's not the OS itself that is a major obstacle. It's all the existing applications and lower-level stuff like drivers. Apple would doubtless need an emulator to run x86 code on ARM, like they did when OS X transitioned from PPC to x86. And that emulator would probably hang around for years, just like the PPC-&gt;x86 one did. If you're running most of your software in an emulator, the machine is going to be slower, even if the processors are significantly faster. I could definitely see them transitioning the fanless MacBook to ARM, however, if Intel doesn't get its shit together soon. And then slowly moving other machines to ARM over several years as software support improved. 
Ah shit, that's too bad... :-(
Working on adding more features to my app Lynked like TouchID, better security over all, a pro version etc..just fun stuff 
*Visitor*
&gt;so this will be built in when Swift 4 drops What exactly?
Since `filter` returns an array, you can't really do this on other types than `Array`. As /u/trump_is_precedent already pointed out, this will change in Swift 4. By the way, you don't need the generic parameter; you can just do `mutating func remove(item: Iterator.Element)` :)
You won’t need to cast because filter will return some associated type that “just works” with the parent type.
ended up trading my new laptop($950 worth) + $150 for a 2014 used macbook pro (13" retina, i7 chip, 128gb, the a1502 version) was that a good deal?
Are you familiar with software development ?
I'm currently learning a little bit of it for my cyber security degree. I'm learning HTML/CSS/PHP for one of my classes at the moment, so I know a little about client/server development. I will have more classes going in that direction aswell later on. The nice thing is when I get into something i get VERY into it and learn it very in depth. considering how badly I've wanted to learn Swift I think I'll be absorbing a ton. I'm using apples ibook for my initial teaching, and then trying that one guys hacking with swift book
currently using the intro version of that one! will get that one next! and thank you! once I get far enough into it, I hope to be making some fun games :) got 2 ideas already!
Is this the Xcode playground? It looks like sublime 
Yes, this is the full window. There were no imports at the top. I did try to add import Foundation and the import UIKit I used before, but that didn't make any difference 
You might try Protopie: https://www.protopie.io
Pictures + Interface Builder
Still a bit not perfect, they could use Swift which I found Kickstarter, WWDC and other app has smooth scrolling and feel swiftly, the current Reddit in Objective C feel struggle and perceived slower for me to navigate over 10 subreddits every day.
&gt; Element True. But in that case compiler wouldnt warn if the passed element isnt of the type of elements the array contains! 
This will change in Swift 4, which implements a feature called conditional conformances. The language will allow you to express "`Dictionary&lt;K, V&gt;` is equatable only if `V` is `Equatable`". So a `Dictionary&lt;Int, MyEquatableType&gt;` is equatable, but a `Dictionary&lt;Int, MyUnequatableType&gt;` wouldn't be
Not at all :)
Adobe XD?
Hi eisnah! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6hnzmb/cant_run_xcodeprojects_on_iphone/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Am I missing something? Beside the fact that it's not cross-platform, bitcode [isn't even supported](https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AppThinning/AppThinning.html) for Mac apps yet.
So do you think Apple shouldn't have gone to any effort to make UIKit and AppKit use Swift conventions? That sounds like a good way to get people to hate (and not adopt) either your language *or* your frameworks.
what exactly do you mean by you are trying to get this to work? Deck is a class with default values. The whole thing would work, but i would set it up differently&lt; more like this class Card { let suit: String let value: Value init(suit: String, value: String){ suit = suit self.value = value self.suit } } let twoOfHearts = Card(suit: "Hearts", value: "2") 
I believe we have a winner. Could even go premium with ansi
Can you show me what you've tried that didn't work? Using `Iterator.Element` should work out of the box, more or less.
While your post contains useful information, you really need to work on your manners. Talking down to a beginner like that is not acceptable.
I am so sorry. It did work. I was just about to paste the example when I saw the mistake. Thanks a lot for that input. Updating the gist :)
[removed]
Sketch for sure
Thanks for your really detailed answer. I already managed to solve the problem on my own by changing the *Bundle Identifier* from com.example.FirstTimeDebugging to com.example_myName.FirstTimeDebugging. 
Just self.suit ?
Link please
Not really to be honest, it's just that i'd rather have no memory leaks at all before releasing my app. Suppose i'm just being picky it's only 2 leaks of 16 bytes each.
Here you go :) [App Development with Swift](https://itunes.apple.com/book/app-development-with-swift/id1219117996?mt=11) You can find this statement on page number 60!
Let without values? 
They'd do what they did every other time they've switched proccessors (68k -&gt; PPC -&gt; Intel), they'd put an emulator in. I just hope the emulator is closer to the 68k to PPC switch than the PPC to Intel switch.
Craft looks great! How intuitive is the interface?
That said, I think using the `let` and `var` macros is better than using `__auto_type` directly.
Thanks very much for the info. Trial of sketch and Craft plugins downloaded. Let's see what it can do. 
You can't. It's asynchronous, meaning the stuff inside it may not be available by the time you reach the next line of code.
Give these a watch since you're new to Sketch. https://www.invisionapp.com/blog/switching-to-sketch-app/
Register a developer account, it is free. 
You still need to log in with that (free) account though. If you look in your Xcode preferences, there is an "Accounts" tab. Click that, and log in with your Apple ID. You should then be able to generate your single device-oriented provisioning profile.
You mean: encapsulating the entire URLsession.shared.dataTask inside a function that will have a "completion: @escaping", then writing a completion(data) inside the closure, and finally calling the function elsewhere? Something like: func myFunc(completion: @escaping (String) -&gt; () ){ let task = URLSession.shared.dataTask(with: request, completionHandler: { (data: Data?, response: URLResponse?, error: Error?) in //some code goes in here to massage data a bit completion(data) }) task.resume() } myFunct () //I want to use data here! 
Thanks for the downvotes! Such a reaction to unpleasant facts is always a great barometer for the level of groupthink and fanboyism in a sub. Considering this has all happened before with the PPC to x86 transition, and you're still not buying it, you folks have it pretty bad.
&gt; I just read that they probably can't recompile every app. There's no "probably" about it. The vast majority of source code for Mac apps lies well outside of Apple's control. There is already an almost perfect precedent for this situation: the PPC to x86 move. Except this will be worse, because Apple would be moving from an architecture with excellent support for regular PC components to one with minimal support (whereas the PPC to x86 transition was the opposite, in that almost no hardware had PPC drivers, but no x86 drivers). 
Stop posting this thinly concealed blog spam. 
Did the video use a Playground? I think this is normal output for a Playground. "_lldb_expr_328.Deck" is the internal name for deck See the link for more info: https://stackoverflow.com/questions/30303410/empty-class-in-swift-playground-gives-lldb-expr-error
Oh, wow, I didn't know about that. That's pretty nice. It would be nice if a typealias could work for that.
Enjoy! http://www.redmondpie.com/download-reicast-ipa-of-dreamcast-emulator-on-ios-10-iphone-no-jailbreak-required/ 
This. If you have a Preferences pane, set them in NSUserDefaults, otherwise use CoreData. 
He went out of his way to be a dick. 
I finally got me a mac, and I'm on lesson 10 of apple's intro to swift. also wondering on the side, how 3d characters can be made for games
[removed]
NSUserDefaults is not the way to do this. It is only for app settings. It is said to have lower performance and has a size limit. Which means you won't be able to add photos as a feature at a later date, without rewriting this part. Core Data is too complex for this simple a data structure. Instead use NSCoding. As of not it needs a few lines to explicitly encode and decode objects and structs. With Swift 4 and Xcode 9, you will be able to use Codable protocol and be done in very few lines of code.
I completely agree. If this were Objective-C, you could just use writeToURL: on an array of dictionaries of simple types and it would write a text file in plist format that you can just read with initWithContentsOfURL: If you have more complicated data types NSKeyedArchiver and NSKeyedUnarchiver works on objects that implement the NSCoding protocol. The file format is also a plist, as above, but NSKeyedUnarchiver knows how to call your initWithCoder:s to reconstitute your object graph. There's also NSJSONSerialization that takes a similar input, but the disk file format is JSON. I don't bother with CoreData until I have at least 10 megabytes of data in the dataset.
I would use Realm, I find coredata can get in the way with its verboseness
Another possible way is to use the Markdown library to help display strings like this, assuming you just want simple bold, italic, etc.
I still would like a good way to know how to handle turn management. My turn manager handles the turns, and works fine I'm thinking I need a reference to an array of whether all players have completed their turn; so this then informs whatever is watching the turn manager that it is safe to continue to the next phase. A more basic way flow-chart: BuyProductViewController -&gt; {Turn manager get player on turn} -&gt; {Player takes action} -&gt; {Advance turn index} -&gt; {Repeat until all players have had 1 turn} -&gt; When all players have finished their turn then move to the next view controller/page 
Thx
No prob man👌 
If your Excel spreadsheet is hosted on Office 365, then you would access your document through the Office 365 APIs: https://dev.office.com/excel/rest https://blogs.office.com/2016/08/03/announcing-the-general-availability-of-the-microsoft-excel-api-to-expand-the-power-of-office-365/
[removed]
I'm thinking about disrupting the giants with a $9/month service for https transmission and edi to xml/json/yaml mappers for all transaction sets. How to know if small businesses may be interested?
Try using `.flatMap`: `link.flatMap { URL(string: $0) }.flatMap { url in try? UIImage(data: Data(contentsOf: url)) }` I'm on mobile so I can't check if syntax is correct, but it might work.
Both the URL and Data initialization routines can fail. You should handle those errors elegantly. Also, don't use that Data initializer on the main thread unless it's a file URL. If the network is slow, your UI will lock up and the system may terminate your app. 
I see. Thanks for the tip
Is `try? x = expression` even valid syntax? Shouldn't it be `x = try? expression`
"If let" statements like this makes things sooo much easier to deal with.
&gt; I have this line of code: &gt; dunno lol. but it worked
Start with Core Graphics, but you may also want to check out Scene Kit. EDIT — meant SpriteKit. SceneKit is for 3D.
It doesn't look like that website supports https, and by default https is required by the webview. If there's no way to enable https, you'll need to configure your app to allow insecure web traffic: https://stackoverflow.com/questions/32690789/cannot-load-http-links-in-uiwebview-in-ios-9
It would probably help if you showed code (if you're doing auto layout in code), or a screenshot of the constraints you applied to the top bar from the storyboard/xib with he size inspector.
As a director of software development - I'd say of course you can. However, make sure it's your passion. Then look for a reputable Bootcamp such as General Assembly. That investment will ensure you're marketable once you're ready to look for your first job. The college degree major isn't important. Just make sure to finish the degree you started if possible (don't change majors because it isn't necessary!!!). 
If you don't mind using Google Sheets, they also have a great API [iOS Quickstart](https://developers.google.com/sheets/api/quickstart/ios?ver=swift)
Definately gonna buy your Practical iOS 11 book soon. Looks like a good way to get into iOS 11 stuff, and I've seen lots of other people suggest your other courses and such.
Thanks for the response - that isn't checked. I can't figure out why it's saying that the leading and trailing edges are constrained to the edges of the superview, but for the 7 plus they clearly aren't?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/eLQtkA1.png ^[Source](https://github.com/AUTplayed/imguralbumbot) ^| ^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^| ^[Creator](https://np.reddit.com/user/AUTplayed/) ^| ^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^| ^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dj2klqg) 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/eLQtkA1.png ^[Source](https://github.com/AUTplayed/imguralbumbot) ^| ^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^| ^[Creator](https://np.reddit.com/user/AUTplayed/) ^| ^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^| ^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dj2km1d) 
Hmm that's really strange. Try clearing the constraints and ensure that the margins isn't checked for the leading/trailing. 
Ah, so the math is checked by default. Makes sense now that I think about it, Apple mentioned Swift being a safe by default language. Do you plan to emulate a PC-XT?
Are you defining a width for the element? You shouldn't need to. It should be calculated with the other constraints. I haven't done iOS development in quite some time so i could be wrong. (Company transitioned me to web development)
Yes, I think I did! I would've thought it'd still get overwritten, but I'll try remove it and see if that works!
Nope! If I remember correctly, the defined width takes top priority. Let me know if that was the issue!
Ah! It never had a width constraint! I've fudged it by making the width massive (even bigger than the 7 plus screen) and that seems to work, but I'd like to figure out the issue! 
Honestly putting it in AR doesn't add anything, except being somewhat novel and a potentially good learning experience. Probably just find a plane then put the game screen there. 
SpriteKit for 2D stuff.
How do you do this if the row changes after page has loaded - e.g. Fro user interaction ? 
I will be messaging you on [**2017-06-19 23:25:25 UTC**](http://www.wolframalpha.com/input/?i=2017-06-19 23:25:25 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/6i1xdf/webview_adspop_up_blocker/dj31g6m) [**2 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/6i1xdf/webview_adspop_up_blocker/dj31g6m]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dj31gny) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Thank you kind stranger :)
RemindMe! 1 day
You're welcome. Now click the link.
I'm only on chapter 4 so far, but I've enjoyed working through this free iBook. “App Development with Swift” by Apple Education https://itun.es/us/SoKQib.l
Hacking with Swift, iOS Programming by Big Nerd Ranch, and the O'Reilley books for iOS Programming
I did some CS106A, but I just got a new Macbook Pro and wanted to dive into Swift ASAP, so I started this. After two episodes, it's really awesome. Paul is an instructor I enjoy following, albeit some concepts I have to pause and Google them, but that's because I didn't do the prerequisites. I found the explanation in Ep. 2 of MVC really hard to follow, but once you actually start applying it, it makes more sense. I'll look into it more.
First of all you have to design it. Either with storyboard either by code. Google is your friend about that Next step, enable Woocommerce REST API https://docs.woocommerce.com/document/woocommerce-rest-api/ Then learn everything about getting stuff from your database and also post things to it ! http://woocommerce.github.io/woocommerce-rest-api-docs/#pagination I would prefer the PHP Library for my REST API! And then using Alamofire to make the requests to your server and get the JSON responses. https://github.com/Alamofire/Alamofire It has lots of work to do and those two steps are only the beginning. Then you have to make payments with Paypal or so... But first try all the above! And i hope that other users will have much more to say about it!
well i guess what i needed to know them most if it'd need other languages besides swift. so i'd need php also? and can i make the app only on swift and then hire someone with php skills to 'connect' the app to the database? 
this. I've tried and failed at software development multiple times, and iOS development through books, online tutorials, and more. This Stanford course led me to publish my first app, and now I'm working on my second.
Thank you! I'm having an issue with the view not increasing in size if the content of it increases in size. Do you know how to solve that? Thanks for your help! I'm finding this surprisingly difficult to understand, but loving Swift, so it's a good learning experience.
The only reason I can think of that that would do anything is if you have a getter for `lblMessurementType1` that calls `_ = self.view`. It could be a coincidence. Maybe insert a `print()` in `viewDidLoad()` to see if `viewDidLoad()` is executed before your app crashes. Did you change your code based on my comment?
https://github.com/PerfectlySoft/Perfect-TensorFlow I have not tried out `Perfect-TensorFlow`. The `Perfect` framework works well.
the stuff you want from python e.g. scipy, numpy etc are likely written in c anyway so if they offer a c API you can easily use that from within swift. Swift also got accelerate and all the other nice apple frameworks.
&lt;&lt; The only good author is the writer of hacking with swift, unfortunately I cant afford all the courses. &gt;&gt; I'm flattered – thank you! But you don't need all the courses, do you? I mean, unless you're desperate to learn literally everything Apple produces, you should be able to get by with three or four – that's probably six months of reading right there :) Tell you what: email me (paul@hackingwithswift.com) and I'll send you any one book you want, free of charge. I'll also set you up with a discount for any other books you'd like. **Note:** This is me talking to /u/Larryn1030, not me asking every Redditor ever to email me.
Awesome – good luck! :)
Have read your HWS books. Great way to pick up Swift! 
I have read some! I prefer videos but like the books too!
I am making a similar game that has turns, and I think I can help. In my case, I'm not using GKState, but I am using objects that basically represent the current phase that the game is working through. I'm thinking of them as controllers which define what interactions the player has. My game is a solitaire game, but the concept could easily be expanded to a multiplayer game by just having these controllers track which player can give input at the time. What I did was map out the structure of the game using these controller objects. If your game is like mine, it can be defined as a set of rules about what happens when, where "what happens next" is fairly well-defined, and you can represent the game hierarchically. For instance, the classic game tic-tac-toe can be defined like this: X PLAYER SELECTS A LOCATION ANIMATE PLACEMENT CHECK FOR WIN O PLAYER SELECTS A LOCATION ANIMATE PLACEMENT CHECK FOR WIN REPEAT ...or, in a hierarchical view: ROUND-ROBIN ALL PLAYERS SELECT A LOCATION ANIMATE PLACEMENT CHECK FOR WIN This is obviously a simple example. More complex games will have more complex structures, and will also have higher-level controllers for main menu's, game over screens, etc., but this should convey the idea. Once you have your project organized like this, it becomes rather easy to compartmentalize and control how the game proceeds. You just need your UI to be able to respond to changes to these objects, able to load whatever resources you need to load to present the UI for that game state. For instance, in my game, I'm using SpriteKit, so I subclassed these controllers as SKNodes. My SKScene has a controller node that it just injects into the scene, so that when that controller comes up, it can, say, add a button to the screen by just adding it to itself. It can display a message or animate something on the game board. And when it's done, it can animate itself out and hand control off to the next controller object. If you were using UIKit, you could load new views and put them in the current view controller, or you could use actual view controllers, animating between them. If you were using SceneKit, you could add SCNNodes to the scene for injecting elements into the scene, which could in turn show SKScenes on billboards for HUD-like functionality. The idea is to just compartmentalize each state that your turn-based game can be in, and have a consistent way to just transition to and display a state and respond to input for that state. 
Build an app. Just think of a thing then try to build it. Building is the best way to learn to develop. Most of development is problem solving. There is a value in developing without having all the tools you need at first. If you learn only from tutorials, then you'll have trouble in an actual job.
If you struggle coming up with code without looking at examples I highly recommend you start learning about data structures and algorithms. Being able to read and write code is step one, knowing what data structures to use and when is step two, being able to solve problems with the knowledge gained is step three. 
We need Pandas! I'm curious why you worked on Jupyter though. I would have thought Swift Playgrounds would already be better.
Your AutoLayout constraints might not be complete enough, or it might be the way you are computing the row height. Without additional details it is quite difficult to guess :)
I struggled with it for another day and gave up, have moved to a stack view within a scroll view and an XIB with the view that I replicate for each item as required. Seems to work well, just fixing some funny hugging constraints.
Use Firebase with your app. It does everything you're looking for.
I think I understand what you mean. I'll give it a go
yeah but typealiasing/explicit typing/etc never ceases to be confusing
It's still way easier to remember than [fuckingblocksyntax.com](http://fuckingblocksyntax.com.).
How do you mean? What’s confusing about them?
But what if casting to an optional type? Then you should be able to have a nil `valueMaybe`. E.g., let x: Any? = nil print(x as! Int?)
I'll have to give Hacking a shot
I find I'm stoping and starting with these vids as I'm coming from a basic web dev background :/
Avoid copy paste. You can copy someone's code but you should type it yourself to get familiarize on the implementation. You can also write notes for every component and their properties. 
Just downloaded it and subscribed. Loving it so far, however what do the trophies and medals mean?
Nobody remembers, that's why code completion is such an important feature in an IDE. You remember what you use most, everything else you look up. A year isn't much time, and I'm assuming that software engineering isn't your full time job either, so it's really far less. Give it time. A couple years in you'll remember much more. I've been a software engineer for a long time and I still look up stuff nearly everyday; a syntax you don't use often, a class you're not familiar with, something new in a library that's just come out...
Never. Software development doesn't work like that. It's always changing, you're always learning. If you don't like learning new things don't go into software development. Swift is a new language and as such its changing more rapidly than others, but all languages change and evolve. If you knew Swift v1.0, it wouldn't help much for current Swift 3, and Swift 4 brings more and better capabilities.
If you're using WKWebView, it's not really possible. The old way of handling things with UIWebView was to create a custom URL protocol handler that would allow you to block things on a per request basis. Right now, you could try some sort of JavaScript to alter pages and remove malicious pop ups individually if you know how they're being opened and on which websites. In iOS 11, WKWebView is getting support for the same syntax of content blockers that Safari and SafariViewController got in iOS 10. WKWebView is also getting custom URL protocol support in iOS11. Both will make content control a lot simpler when iOS 11 hits.
When they stop changing it?
You finished learning when you start learning your next language or give up programming 
Yer think I just need to stick with it and keep building. Trying to look at everyday objects like a Car or a House and see how it would be structured in swift!
If you just need a blue background, it's best to not use an image at all - just use a plain UIView and set it's background color.
Yeah, that's what I've taken away from this! It's because originally I'd mocked the whole UI up in photoshop and then, when I was satisfied, broke it down into each component. Every day is definitely a school day for me with app development! Thanks for your input - much appreciated!
Glad to hear it, hope my comment wasn't too discouraging. It can be tricky to write in your non-native language, especially on a technical topic.
Yeah, Firebase is very simple. However, also a bit expensive. But if you, lets say, want to use an external service for inappropriate content detect, you can easily implement it with Kitura/Vapor. If you use Firebase you're a bit restricted.
Okay, I will research Kitura. But anyway, I can use it to delete inappropriate content manually?
No worries. Thank you :)
I almost forgot about this. iOS UI elements for Sketch directly from [Apple themselves](https://developer.apple.com/design/resources/).
Sounds cool if possible. But I don't think my programming skills is that qualified yet.
In a swift playground? Or are you running it and looking at the terminal window?
There are some apis that let you detect nsfw images, you could find one of those and when a user submits an image, you run it through that before uploading to firebase. Something like https://sightengine.com/, or you could use apple's new machine learning framework to build one yourself and check against that before uploading pics to firebase. You can do a lot with firebase, it just uses more client-side code than a typical app might where the heavy lifting resides on the server. 
I love the swift guy! I find he breaks it down in such a simple way, so his videos are easy to follow.
Looks really interesting. Never heard about sightengine before. Thanks!
Thanks that got it working great!
Sign up with Team Treehouse, it's extremely worth it. 
Yeah, I was an idiot and didn't try force quitting xcode. The code worked once I force quit
Not an idiot :) Simple solutions are usually the hardest to come by. Even as developers we often forget the tried and true "turn it off and turn it back on again" 
I would like to say that r/swift is one of the most friendly and helpful subreddits. Too many other subreddits (especially programming ones) are toxic and not very helpful to beginners. Thanks!
No comments, high score, not directly Swift related content. Bots?
It's a joke. It's referencing [fucking block syntax](http://fuckingblocksyntax.com/), which was not a joke.
For what it's worth, I picked up the Udemy iOS 10 course for $10 over the weekend and felt like it was well worth that price tag. I had tried a few books before that and kept getting stuck on Xcode interactions and optionals, but watching the videos of that tutorial series helped put it all together for me. YMMV :)
Try doing some simple tutorials. There's no real diagram that tells you "what goes where". I can tell you a function contains code that you want to be executed everyone you call that function but I don't know how I'd diagram that for you. 
Sorry, I'm a little tired and having a hard time following the code. I recently found https://github.com/facebook/chisel and use the `pvc` command and breakpoints to debug this kind of stuff. You may want to give that a try.
and for web even later? i can build the interface using php or something else like that?
Some things to note: * When you write your CodingKeys, you don’t need to assign values to the cases as shown in the examples here — just listing the cases will suffice: enum CodingKeys : String, CodingKey { case fullName case id case twitter } These cases will receive a String value equivalent to the name of the case, just like any other enum. * There’s a lot of flexibility in customizing your encoded representation by just providing CodingKeys, without even writing an init(from:) and encode(to:). If you provide a CodingKeys enum yourself but don’t write the other methods, the compiler will fill those in based on the values in your CodingKeys enum. You can use it to give a different name for your properties, leave some out of being encoded/decoded, etc. Good article though!
I got a used MacBook Pro for 250. My friend thought the screen cracked but it was only the plastic covering that broke. I got it fixed for free since my aunt works at Apple and knew a guy ! I got it like 4 years ago and it's getting outdated so I'm saving up for a new iMac :D 
Not as easy and simple as php but it will go everywhere java has gone and beyond.
I should add this is a command line application
Command line tools don't have bundles. You'll probably need to either make an actual app, have an installer that stashes your resources somewhere, or take a path as an argument.
Huh ! No bots . 
I see what you mean.
You can't do it with `map` (you can't sum with map, because you only have access to one element at a time) but you can do it with `reduce`. It's not all that pretty though. [1,2,3,4].reduce((sum: 0, list: [Int]())) { accumulator, currentElement in let newSum = accumulator.sum + currentElement return (sum: newSum, list: accumulator.list + [newSum]) }.list What would be ideal is the `scan` function. You can find an implementation here: https://medium.com/@atnemecek/the-scan-function-is-the-core-of-all-programming-5f5085df76e7 It does pretty much exactly what you want, but it's not part of the Swift standard library.
By mistake we forgot to add few lines. -- In viewDidLoad Method add below lines -- self.searchController = UISearchController(searchResultsController: nil) self.navigationItem.searchController = searchController
Only works if all numbers are a single digit.
Beware of overflow
It' a shopping app on one hand you have the list of all shops and on the other hand the maps where the shops are located. So when i log in, i segue to a tab bar contoller. Then I have a Navigation controller that allows me to go to click on a list of shops and when i click i go to the products in that store
And you want to programmatically segue to the TabBarViewController? You could just present the tab bar view controller as long as you know when to dismiss it. This assumes you use storyboard and uses pseudo code Instantiate a view controller variable with string name of view Present view controller I suggest embedding the tab bar view controller in the navigation controller. Let me know your thoughts 
First: format your code! Second: You need to actually load your xib, which will construct the controller for you. Look into `Bundle`, it has some methods for that. 
Plz come back to Apple and implement the refactor in Xc... wait a minute
That was swift.
Are you using playground? Have you tried to make a simple iOS app and run it on the simulator?
Interesting that 2 hours after I posted this you have enough time to write a huge anti-trump sermon, but not enough time to either fix your program or provide thanks for someone that went out of their way to help you. This is why people can't stand you brain damaged liberals, no idea how to do anything other than bitch, I'm honestly upset with myself for helping such an egregious asshole.
Yeah, I am using playground. I am using the ones the lesson brings, you download them from Apple. And no, I haven't tried that second part. Wouldn't know where to start, I'm just starting with Swift. 
https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html
YOU DID IT! THEY LISTENED!
You can modify one of those tutorials to work in a tableView cell. The "Entire View" will just be the entire view of a tableView cell. The logic should be the same. The tricky part will be if you need to interact with it, since it's not directly part of the view controller, if you want custom interaction, you'll need to create a custom delegate to relay information to the ViewController.
Use whichever is more readable for you, optimization is for stuff like this. Also I'm pretty sure it's the same without optimization too.
Never really do pre-optimization; however, if you're having to do a lot of filtering you may want to look into switch cases or designing objects that don't have to be filtered in such a way. The compiler will essentially handle it all the same. Just write your code to be easily readable more than anything.
Bought, worth it, pretty awesome!
The following statements are equally efficient: if isThing &gt; isThing2 &amp;&amp; isThing3 &gt; isThing4 { // do the thing } if isThing &gt; isThing2 { if isThing3 &gt; isThing4 { // do the thing } } In the first statement, `isThing &gt; isThing2` is evaluated first. If it's false, `isThing3 &gt; isThing4` won't even be evaluated--since the first condition is false, the whole expression must be false. That's why it's the same as the second statement. Similarly, in the || case, the following statements are equally efficient: if isThing &gt; isThing2 || isThing3 &gt; isThing4 { // do the thing } is isThing &gt; isThing2 { // do the thing } else if isThing3 &gt; isThing4 { // do the thing } (Note that in the || case, it may not sense to split this into an `else if` if you'd really be doing the exact same thing in either situation.) Again, `isThing &gt; isThing2` is evaluated first. If it's true, `isThing3 &gt; isThing4` won't be evaluated--since the first condition is true, the whole expression must be true. Hope that helps! 
Ew, Windows. Get it off, it burns, it burns! ... meanwhile, as someone who works in infosec: Yay, job security!
&gt; Plz come back to Apple and implement decent documentation that is not written by satan. As someone who's being forced to use Kony for a client project... you know not the face of Satan's wrath.
Please no, let him move on to a company that focuses on product quality instead. 
I love how people are a cult to Elon. Dude is a young tyrant Steve Jobs.
Won't be hard for him to find a new job, he's the only one in the world with 5 years of Swift experience 
Considering AWS is the bedrock of a lot of the web, it seems pretty high quality to me. 
To more accurate: "Young Steve Jobs". I miss you, Old Steve! 😥
Most jobs are asking for 10 years swift so he might have a hard time.
Going from Java to Swift isn't too bad (Swift fixes many of the problems that Java struggles with), but depending on what you've learned, it could be pretty hard to go from Swift to Java. On the upside, the tools for Java development are superior to the ones for Swift (unless you're using AppCode, I suppose? Certainly better than Xcode). I've met people who started with a higher level language like Python, then moved to a lower level one and had much more trouble than others who started with a lower level language, but I think it's all about how you learn it.
It likely means you're using the "!" force operator where you have not verified it is safe to do so. In Swift there are optional types that either hold a value or they don't (nil). If you force unwrap a value while it is nil your program crashes. Make sure to use conditional assignment with `guard` or `if let` or similar. It's possible it is MapKit's fault but usually it's just programmer error. :) 
Have you seen his updated resume? Makes me feel like a serious underachiever.
That's a lot of work in 5 months.
URGENT!
The identifier is for you to be able to remove the boundary later. It really is arbitrary, you can use almost anything (including "circle"). I don't think you need to add a boundary behaviour though. For your circle views, override the `collisionBoundsType` with `.path`, and return some `collisionBoundingPath`. About the path: you have to be careful with the coordinate system. I think, for the boundary, the origin for the path is the center of the view. For drawing, the origin is at the top left. &gt; Now again I question if spawning custom views was good idea If you want to use UIKit dynamics, you don't really have a choice.
I bought a refurb MacBook Mid 2010 with the exact same specs as yours just for work, and I have no problem running our iOS app project. We're running Xcode 8.3.3 and Sierra 10.12.5 for reference
Java sucks, to put it plainly. It's a lot less powerful than Swift so learning it should be easy, but using it is probably a nightmare. If you must use the JVM, Kotlin is a lot closer to Swift.
&gt; You mean like a company that has the highest quality public cloud in the world Sorry, that's Google. They may not have as many services, but we're talking about quality and not quantity. Everything from low-level details of how they run VMs at all, how their networks and disks operate, up to high-level services like BigQuery makes AWS look like somebody's hobby project. &gt; That thousands of companies [...] rely on See [this comment](https://www.reddit.com/r/swift/comments/6im0wa/swift_creator_chris_lattner_leaves_tesla_after/dj8o1o7/?context=1). &gt; which is one of the most innovative &amp; creative companies in the world I'll grant them the Dynamo paper at least! &gt; I am genuinely curious however as to why you think they don't focus on quality products The backend of AWS seems like a bunch of hastily glued together things that are barely holding up. Basically all APIs are inconsistent, overly complicated and mixing tons of different paradigms. Things you'd think are easy end up being convoluted operations that you need tons of special, AWS-specific knowledge to handle (example: AWS IAM, how many people have accidentally caused massive security issues due to not correctly understanding how `Deny` works?). Services are slow. Lambda is a joke, API Gateway is a way to add a few hundred MS of request latency to every request, things like Kinesis (which is a home-grown copy of Kafka) pale in comparison to the things they're based on. Not everything is dog-fed. Sometimes AWS makes a service (like AWS ElasticSearch or ECS) that they don't actually use themselves, because they've heard they need to have a "something containers" or "managed ElasticSearch". You can tell that those things don't get as much attention as their own bedrock services, e.g. DynamoDB. Sometimes I have to [file issues](https://github.com/awslabs/amazon-kinesis-producer/issues/61) against AWS services that make it obvious that they don't perform any proper testing of everything they release, and probably have no end-to-end tests in place to make sure their various little puzzle pieces stay reasonably glued together after big changes. Oh and in addition to that AWS is known to be one of the worst employers in the IT industry, which means their churn-rate is extremely high and abandoned projects frequently get passed down to the next hire, causing pressure and eventual burnout and perpetuating the cycle. I've wasted so much time fighting all the small problems AWS has that I'll happily reject all future jobs that involve using their platform. &lt;/rant&gt;
Well at least you didn't mention Azure, in which case I would not have replied at all :D, I agree Google is a great cloud too. However, I feel you are being unfair in your analysis, **1** &gt; They may not have as many services, but we're talking about quality and not quantity. I would disagree with your premise, we are talking about cloud quality, AWS and Google have the same quantity of clouds each, which is one. The number of services has a huge impact on the quality of a cloud. For example, if I release my own cloud with the most awesome Block Storage provisioning functionality, Am I now the highest quality cloud in the world? **2** &gt; Services are slow. Lambda is a joke, API Gateway is a way to add a few hundred MS of request latency to every request, things like Kinesis (which is a home-grown copy of Kafka) pale in comparison to the things they're based on. Not sure what you are talking about, I am running Lambda functions from a SPA on S3 which has sub 80ms response times from the browser to a serverless backend running through API Gateway, Lambda and doing inserts &amp; gets from DynamoDB. Happy to give you the link if you want to check it out and see the response times ( it's in the Ireland region however so you'd have to account for your distance to Dublin, just PM me. **3** &gt; I'll grant them the Dynamo paper at least! Haha man, you have to give them more than that, look at Lambda, everybody is copying it, Google has literally copied it down to a tee, the Google Functions provisioning metadata is exactly the same! **4** &gt; Considering McDonalds is the bedrock of a lot of people's diet, it seems pretty high quality to me. Your analogy here is not valid and can kinda be turned to disprove what you initially mentioned in your point about AWS being too complicated. &gt; Things you'd think are easy end up being convoluted operations IMO the reason McDonald's is in a lot of people's diet is due to convenience. If it was the case that AWS was too convoluted AND was not as high "Quality" as other cloud's then nobody would build from scratch on AWS. There is much more thought put into choosing a cloud provider by very smart people and the majority are still on AWS. If we are to focus on quality specifically, I don't think that things like IAM being tricky to do is that much of an issue, AWS has tonnes of premade policies for you to choose and it really only gets tricky if your trying to do something very specific, in which case I would say it adds to the quality of the cloud that you can define such specific security policies. &gt; I've wasted so much time fighting all the small problems AWS has that I'll happily reject all future jobs that involve using their platform That's a fair point, if you got hit hard in some occasions, I wonder though how many small problems would you have run into if you spent that time on Google instead Anyway, let's just agree to disagree, both great companies imo and fuck Azure! But just your initial &gt; company that focuses on product quality instead I think is unfair, of course, they focus on quality. Hopefully, Chris Lattner can read our posts and make his own correct decision :D (AWS) EDIT: Formatting
Java is purely object-oriented, whereas Swift is multi-paradigmal. Some of the object-oriented concepts are shared—single inheritance, protocols/interfaces, generics—but they are still rather different languages.
It's for a class, he can't just decide "yes! Kotlin"
&gt; I wonder though how many small problems would you have run into if you spent that time on Google instead S T O C K H O L M S Y N D R O M E
Professional Swift contractor... As oppose to those unprofessional ones
I just found his videos a couple of days ago. They are really good! Actually explains what he is doing and not just telling you to “write this here, and put there there”. We need more channels like this one!
YES! THanks alot! All I had to do was to add following inside my BubbleView class override var collisionBoundsType: UIDynamicItemCollisionBoundsType { return .ellipse } Now I have to apply "force" when "dragging" instead of setting center as you suggested. And again I have difficulties doing that. You suggested this: &gt; Just create an UIAttachmentBehaviour to your circle with an anchor point, and set your fingers location as the anchor point (update the same behavior with a the new location of the finger when it moves). It sounds reasonable, but it seems that once I applied UIAttachmentBehaviour to the freshly spawned "box" i can't change it anymore. It gives me an Idea that I should, probably add UIAttachementBehaviour inside my BubbleVIew class and make it "ask" for an anchorPoint, but it seems "wrong", because anchorPoint point can very well be outside of my BubbleView. Grrrr..... Edit. I was wrong. It seems that I can actually change anchorPoint dynamically, but still - I have to apply AttachmentBehaviour initially when ball being spawned and it seems I can't add it later based on event (or I'm doing it wrong again). Now if I add it initially - all balls are being spawned already attached, and worst of all I have to figure out which of them was tapped and somehow change attachmentBehaviour of that exact ball. There must be another way to do it... Is it possible to attach "empty" attachmentBehaviour at the spawn and change it later on? Also I think I need to create some dict construct to keep track of all balls that have been spawned to later address the one that been tapped... 
The method doesn't make sense for arbitrary types. The code above is basically how it should be done.
Conceptually it's pretty easy: - remove protocols and extensions, replace with interfaces and abstract classes - remove structs, enums and pattern matching - remove ARC, add GC - remove operators - remove the ability to have more than one declaration in a file. You can only have 1 class per file in java. Basically java is like Swift but you're only allowed to use classes, subclasses and very simple protocols. Those limitations might drive you crazy, so that's harder. 
You asked a question i've been wanting to for quite some time now. I'm also just starting Swift, I have a background of Basic Java, HTML, CSS, and minimal jQuery. I've been reading and watching tutorials all I can, but to me, there's just something about Swift that just isn't allowing it all to click in my head. Not only that, but it's extremely frustrating to be watching a tutorial and coding alongside it, only to realize that it's from 2015 and the syntax is extremely outdated. At the moment, my biggest issues i'm having is fucking tableviews. I just dont understand it - like even a little. I've spent multiple nights now 3-4 hours at a time trying to get the damn cells to fuckin populate - only to give up and delete the app and start from scratch again.
What the hell is that language? Jesus christ use swift, you're like 4 years in the past. 
The 3d character itself? Or getting a 3d character in an iOS environment? The former is done with 3d authoring programs like Maya, 3ds Max or Blender. The latter is best implemented with an engine like Unity.
Tree house has really useful tutorials that introduce the concepts, I believe there is a 14 day trial. Give it a whirl 
Web languages are pretty different from traditional programming languages, and to compound that, Swift isn't the easiest language to get a grasp on, it's quite different from say, C++ or Objective-C. In web, you're used to using a bunch of different frameworks and languages to accomplish one task. In standard programming you don't do nearly as much of that. Swift and the iOS SDK provide almost everything you need. Also by the sounds of it, you're not just hung up on Swift with its syntax, but also the design patters iOS uses (delegation for the tableviews for example). I would suggest this (not knowing how comfortable you are with Swift): 1. Do some programming exercises in pure Swift. If there's something syntax wise you're confused on, practice it until it clicks. Learn from different sources and see how they approach that topic. A programming exercise could be making a fitness tracker (all text, no graphics yet), or something even simpler like a simple password login screen. Before touching tableviews you should be comfortable with creating single view applications, connecting outlets and actions to UI items in the storyboard, and you should be familiar with the model view controller paradigm. 2. Once you have a grasp on that then go back to the tableviews. With your table view they operate on a pattern known as delegation. All delegation means is that an object (your tableview) wants some other object to let it know where to pull data from (its data source) and when it's interacted with (its delegate). Imagine you're the tableView. You tell your friend John to let you know what data you need to display, and you tell your friend Mike to let you know when someone taps one of your rows. You don't need to worry about those details anymore, your entourage handles that for you. That's what delegation is. Now an issue you will see is most tutorials put the delegate and data source in the UITableViewController, so you never get a grasp on *why* you would even need delegation, but in reality its not good practice to do that because it makes your view controller huge. You can have other objects in other code files be your delegate and data source (more likely your data source as delegates are often in the view controller). What this means is say you don't want John to tell you what to display, you want Julie to tell you instead. No worries, just make Julie your new data source and give her the methods you need in order to update your data (the required methods of the TableViewDataSource). Apple recently released a free eBook called "App Development With Swift" that is free on the iBooks store. It may be worth looking at, it looks pretty good. 
I've only been learning Swift for about a month now (and it's my first programming language), so I can't offer you a ton of advice. However, I would really recommend that you check out the "Intro to App Development with Swift" book, the "App Development with Swift book", and the "The Swift Programming Language" book from iBooks. I've only been using these books to learn Swift (mostly the Intro course book), and I've been having a great time with it. I haven't really found any great tutorials on YouTube, so I haven't been using YouTube (then again, I haven't really looked that much for any). I think you should download these books from iBooks and take some time going through them. The intro book really helps to build up your knowledge of Swift and how programming works, but since you already have prior experience with other languages, I'm sure you could go through it quickly to just get a better idea of how Swift's syntax works. Out of all of the books, the "The Swift Programming Language" book would probably be the most useful one to you. Coincidentally, I just started lesson 16 in the intro book and it deals a bit with table views. Since you're saying that you're struggling with table views, you might want to check lesson 16 in the intro book out.
Wow, thank you for the detailed reply, I didn't expect to get any answers to this. As far being comfortable; i'd venture to say i'm "capable" to bull my way through coding a swift file. To be completely honest - i'm actually much more comfortable with the coding side of it all, as opposed to straight up using the interface builder. Moreso because i'm coding it on an older Macbook Pro, but nonetheless. I'm definitely more confident with using a normal view controller, as well as the normal outlets, and action button segues. (So much so, to the point where I actually came up with a prototype app the other day that basically avoided the reuse of a tableviewcontroller, by creating dedicated viewcontrollers that led to a dedicated tableviewcontroller for the specific type someone clicked on.) So obviously I threw that all away, because 8 storyboards was just ridiculous. But that gives you a decent idea on how much I dislike TableViews currently; haha. Another thing I wish I had, was another buddy whom was into programming or coding - I feel that I learn better when i'm able to bounce ideas or just random things to someone else who would understand or help understand. But my friend-group isn't into this sort of thing. In response to your imagery example for tableviews: That's exactly what i'm talking about! That's the type of thinking that helps me further understand the content i'm looking at. It's funny you used that example, because sometimes I also tend to doodle a bit on my notes to help me understand - in a way that's comparable to the "Heart &amp; Brain" comics on Instagram. I drew one where "delegate" was essentially a "hitman" for the tableview. Tableview receives data, chooses the hit, then walks away from it. But I second guessed myself and threw that away too.
Another thing that I just can't seem to wrap my head around, when it comes to delegates and where to place that method, is the following: (And this is moreso because i'm still set in the other programming languages) If I create my Action Outlet for a button, and say like "if button.touchedUpInside = true { let passData = "optionOne" } else { passData = "optionTwo"} and then i'd set my tableviewdatasource to be == to one of those choices, thus completing that transition. But obviously swift isn't like that.
You'd have to post your code for this one. I'm not quite sure what you're trying to do. I'd make it in a separate post though with a screenshot of your story board along with it. 
http://RayWenderlich.com can give you a hand with tableViews, it helped me a lot in understanding delegates and datasources for the first time.
I've used his guides, unfortunately, they've become outdated as well. :( 
Do you want to set the time in GMT or local? When you show the time do you want it in GMT or local? Do you want it as a `String` or a `Date`?
You probably want something like this: import Foundation let dateString = "Thu 6:30" let dateFormatter = DateFormatter() dateFormatter.locale = Locale(identifier: "en_US_POSIX") dateFormatter.timeZone = TimeZone(secondsFromGMT: 0) dateFormatter.defaultDate = Date() dateFormatter.dateFormat = "E HH:mm” let convertedDate = dateFormatter.date(from: dateString) // =&gt; "Jun 22, 2017, 2:30 AM” (In my local timezone) This will take a date string in the format you have described, assume that the date is relative to today (otherwise provide the appropriate day, month, year) and then create a `Date` from it. By using today’s date as the relative day that means that “Sun” will be the Sunday before today and “Sat” will be the Saturday after today. Basically the day of the week for the week that today is currently part of. I used `TimeZone(secondsFromGMT: 0)` simply because then it didn’t have to look up the abbreviation to get that value and return an `Optional`. Using `TimeZone(abbreviation: "GMT”)` is just as good, except it returns an `Optional` which you really don’t need to worry about if you know it’s 0 seconds from GMT.
It just feels like there's a hill, and if I can only just get over it, everything will make sense. but until I get over it, I'm going to be stuck not understanding. HTML, PHP, and CSS were instant to me, but with this, I just dont get it. I don't know why, I'm overly analytical. maybe I just overcomplicate it
dude YES. That's verbatim how I feel.
Check out this result found by @catfish_man on twitter. https://godbolt.org/g/vwzvYN Amazing how strong the optimizer is...
is it bad practice to create a separate swift file with all of your variables and such defined on it as opposed to your other functional ViewControllers? 
No, I am already subscribed to NatashaTheRobot and Dave Verwer for free.
Yes! Don't do that haha. Usually you want to declare variables accessed through the file at the top of the file, and local variables (the ones inside methods) right above where they are needed. 
Ah, alright! I already typically do that, I just didn't know if that followed true with Swift. I'm sorry to bug you with such mundane and trivial questions - i've got nowhere else to ask! You're awesome. 
Have you checked if my code works? It should do just what you’re saying, take a GMT time and store it into a `Date`. Then, when it’s displayed, it will be displayed as a local one. A `Date` is stored internally as GMT and when it’s turned into a string it's automatically converted to the local timezone. You can change that by explicitly formatting it as a different timezone. If you want to convert it to a different time zone string then you can add this code: if let timeZone = TimeZone(abbreviation: “EDT") { dateFormatter.timeZone = timeZone let timeZoneString = dateFormatter.string(from: convertedDate) } 
No worries that's what this sub is for. 
Also to expand on why you don't want to do that: The reason is when you start making more complex programs, you'll find that a separate variable file will make things a nightmare. Generally you want your files to encapsulate themselves as much as possible. For example if you had a hero character in a game, his file would be a hero class with all the methods and variables pertinent to him all in one spot. If you need to make a change, you know to go straight to the hero class. 
No, the net is full of free information and blogs.
You wouldn't use a dictionary for that, you'd use subclassing. For example say you have a generic Hero class. (I've never played Skyrim so I hope this makes sense). All Heros have the following traits: -Hit Power -Attack Power Now, say you want to make a Mage class. They have the same attributes as the Hero class because they're a Hero character, but they also have Magic Power. You could write something like this: class Hero { let hitPower = 10 let attackPower = 10 } class Mage { let hitPower = 10 let attackPower = 10 let magicPower = 15 } However that could become difficult to manage quickly. Say you have 10 more character types, and now you want all Hero characters to have magic power, and defense power. Well, doing the above you'd need to update that for every class. What if you miss one? A better solution is to subclass. Since all Hero characters will have hitPower and attackPower, we can have our Hero class: class Hero { let hitPower = 10 let attackPower = 10 } Then we can derive our subclasses from that hero class: class Mage: Hero { let magicPower = 15 } class Nord: Hero { let strength = 20 } The Mage and Nord still have the hitPower and attackPower, but the magicPower and strength are unique to them respectively. Now if you want all hero classes to also have defense power, you simply update the *base* Hero class: class Hero { let hitPower = 10 let attackPower = 10 let defensePower = 20 } And all of its subclasses get that. Now if you're using instances of those classes you'd access it like so: let myMage = Mage() let mageAttack = myMage.attackPower
Alright dude, I've got to pick your brain, because I've now just spent my entire night trying to get this fucking code to work no matter what book I follow, and I still just can't get this delegate protocol to work out. Right now, it's a very basic transition. I have a HomeViewController, Where I have two @IBAction buttons set up. One is Choice A, and the other is Choice B. Both perform a segue, however the segues are identified differently. These segue to a TableViewController. On the TableViewController, I have my Arrays defined there. Up until this point, my code works. I can properly populate my tableview, but only with one array, because that's what's hard coded into the tableView funcs. However, this is what i've been stuck on for three nights now. Depending on what button was pressed on the ViewController, I want to carry that choice into my tableviewcontroller, and have it use that user selected button. I'm getting confused on how to carry that data over. It's one thing if it was a data passage through segue to populate a label, or a UIImage, but for this, I can't find any clearcut answers. Any insight? I can paste the code for you if that'd help.
Noo
It's definitely not MapKit's fault. =)
What's impressive about it? Just inlining and constant folding.
No problem, some of these classes can have counterintuitive interfaces and they’re easy to get turned around on. Glad it worked for you.
- Swift is generally compiled (and optimized) ahead of time. JS is compiled at runtime. (This allows JS to provide `eval()` for example) - Swift has a sophisticated (complicated?) static type system. Swift variables can only hold values of the type specified for that variable. These are almost always known at compile time. JS variables are untyped (in JS source) and can hold a value of any type. - Swift classes use classical inheritance (classes + instances). JS objects use prototypal inheritance. There are a lot more differences between the 2 languages... I haven't even mentioned the syntax differences, or generally which software libraries/functions are available to programs in the 2 languages. etc etc.
Hey! Looks like we're on the same page. I have been working through all of the K&amp;R problems. Re-learning C has been a humbling experience for me. (Software developer with a Computer Science degree and 2 years of work experience.) I am picking up Swift with the iTunesU Stanford course too. This is more theoretical than the one Udacity course I've tried before. Swift looks like an elegant language- the optionals, pattern matching, computed properties, all of them a joy to play with. I am working through this with the aim of releasing a tiny game in 3 months. I also have to understand iOS app guidelines, signing and the other ugly bits etc. Let's get swifting!
https://www.youtube.com/watch?v=iGLh9hRmRcM
SECTION | CONTENT :--|:-- Title | Homer Simpson "NOOO!!!!!" Length | 0:00:03 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
Hi! It seems that you posted a video link and I just wanted to let you know that it is in fact a video link. Why? Because reddit apparently needs more YouTube bots which reply instantly to every single link. I'd provide you with information like the number of views, the title, and another link for some reason but thankfully that's already covered by a bunch of other bots. ***[^Want ^to ^stop ^all ^these ^useless ^bots? ^Contact ^this ^subreddit's ^moderators](http://www.reddit.com/message/compose/?to=/r/swift&amp;subject=Spammy%20Bots&amp;message=Please%20ban%20the%20bots%20%2Fu%2F_youtubot_%2C%20%2Fu%2Fvideo_descriptionbot%2C%20%2Fu%2Fyoutubefactsbot%2C%20and%20%2Fu%2Fone_more_youtube_bot.%20They%20create%20pointless%20replies%20to%20every%20single%20YouTube%20link%2C%20entirely%20unsolicited.%20)***
&gt;[**Homer Simpson "NOOO!!!!!" [0:03]**](http://youtu.be/iGLh9hRmRcM) &gt; [*^Jim ^Williams*](https://www.youtube.com/channel/UC3ILY3Yh5fomrmYkswNeVMA) ^in ^Comedy &gt;*^68,022 ^views ^since ^Aug ^2014* [^bot ^info](/r/youtubefactsbot/wiki/index)
unsubscribe
Better compare Swift with JS Frameworks, that's where the focus of the JS community is. Knowing JS alone won't get you that far these days.
Download the "App development with Swift" iBook (not the intro one) from Apple for free, and just follow along.
Xcode. (Sorry)
&gt; The app currently consist of an input screen for the Challenge(Main Task) and then the plan is when you click save you save the data to firebase AND move to the task adding screen. Here you input tasks for that particular challenge. &gt; I want to help. but i don't understand what you are saying. Can you try to explain it to me as if i'm 5 years old?
Ok thanks for that. First screen: Main Challenge (Examples: Housework etc) Here you input information like: ChallengeName, Reward Amount etc. This is submitted to firebase and stored under Node: Challenge then a childbyautoId(). So when I click on save I would like to be able to submit the data to firebase AND move to the next input screen with the reference to the Challenge that I just added. Second Screen: This is an input screen where you add tasks, so you specify what exactly tasks you relate to housework. Project can be found here: https://gitlab.com/dgooglr/Challenger.git Hopefully this makes it easier to understand. I would love to get in contact with someone with experience with this so that I can understand if I'm completely off track. Thanks!
https://news.ycombinator.com/item?id=14617453
Hi, So what is committed to gitlab, is only the input of a challenge and not the task. That is what I'm trying to figure out how to do. But that screen you input what you see below the "challenge" node in firebase: http://imgur.com/a/p54zr So now I want to create a new screen that you get to when you click on the +. This should cause me to save to firebase under Challenge node like today AND move to new task screen with a reference to the actual challenge. Then add tasks to a Task node preferable with a reference to the challenge it belongs to. Was that confusing?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/wzidluC.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djakxuh) 
So let me try to show: http://imgur.com/a/ji0vL Just added some static code to illustrate: let post = ["ChallengeName" : addChallengeName.text as Any, "RewardAmount" : addRewardAmountDouble as Any, "ProgressStatus" : progressFieldUpdateint as Any, "DueDate" : dateClass.formatter.string(from: datepicker.date) as Any ] let task = ["taskId" : "test" as Any, "ChallengeRef" : "StaticRefID" as Any] //Post Challenges to Firebase ref?.child("challenge").childByAutoId().setValue(post) reftask.childByAutoId().setValue(task) So then I store the challenge on one node and all tasks in another one. But I dont understand how to actually link those two together so that I can display as output the Challenge and the correct tasks. 
Yes it is a little bit confusing. 1- Can you create the new screen that you get to when you click on the + button ? Don't add codes. Just create it using xcode and take a screenshot. 2- What do you mean by "like today". I can't find it anywhere here http://imgur.com/a/p54zr 3- "AND move to new task screen" &lt;&lt;--- can you take a screenshot of this to know which one you are talking about. 
&gt; What's the best way to learn swift? It would be my first programming language. People who think they know Java often assume they can quickly write Android apps. They quickly find out they can't. The reality is they have to learn the Android SDK -- similarly with iOS dev. Swift isn't a major barrier learning iOS dev-- Cocoa and all about UIViewControllers/Xcode gotchas etc is the stuff you need to learn. This is why iOS devs who've been writing iOS apps in Objective-C can just switch to Swift even if barely knowing the language they know most everything else. So regards to learning Swift -- it matters if you intend to do back end dev with Vapor or front end with Cocoa/iOS dev.
Thanks for recommending my book! /u/liuk_yep: Hacking with Swift is free to read online [right here](https://www.hackingwithswift.com/read) – let me know how you get on!
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/AwrSizX.png https://i.imgur.com/PdsEmK8.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djalt0i) 
I always thought iOS development was pretty approachable. You can have a simple app running almost out of the box and keep building on it, which is exactly what a beginner needs: quick, simple progressions. Also to add to what you said about being able to switch languages, it really helps if you focus on the patterns and the ideas rather than the language itself. If you learn to program, you'll be able to switch languages, platforms, and frameworks effortlessly; whereas if you learn a language, you may be unintentionally locking yourself in. Focus on algorithms, data structures, programming patterns, and architectures, then look up language-specific syntax as you need it. The same goes for learning how to work with frameworks. 
Okay, many thanks
There are two ways to do that: **Easy way:** Don't use childByAutoId() Look at the example in the link I gave you. Firebase team used: One, two, three. **Not smart way:** When you use childByAutoId(). Save the value of this new childByAutoId in .plist file using UserDefaults(). then this same value use it as ref: self.ref.child("task/\(childByAutoIdYouSavedInPlist)").setValue(taskid) 
Creating +1 can be done multiple ways: You can use global static variable (google that) and increment the value (But problem with this is that you lose the data if you close and reopen the app) (better way ) you can save it in .plist using UserDefaults(), then grab the value and increment and then save it again Or you can: var numberOfTaskSaved = snapshot.childrenCount https://stackoverflow.com/a/37925384/1778674 then save it in global static variable (don't forget to increment it +1 so that it won't over write the last task in DB) 
Open Xcode and drag a label, textfield and button controls on the main storyboard, click run and amaze yourself. That's all you need to know to get started. For the rest of the journey, Google, StackOverflow and Ray Wenderlich will be your companions. Just dive in head first.
Thanks for posting this--seems like a great resource to have.
Let's say I want to order a coffee. Should I use English or French?
Of course that's true. The more resources the merrier! There are of course many online free resources and books alike on any topic in Java, Python etc. – it's good that we're getting to that point in Swift. Different explanations and formats (book length with the same author's voice throughout for example) appeal to different learners. I would also add that several of the topics are not covered there (constraint satisfaction problems, genetic algorithms, neural networks, etc.). But I think Swift Algorithm Club is a fantastic resource, although I haven't looked through much of it.
Yes. All my books come with a [lifetime Swift update policy](https://www.hackingwithswift.com/update-policy).
I would avoid Storyboards and just do everything with something like SnapKit. Honestly Storyboards and xibs are trash, I have no idea what Apple was thinking. It's not you it's them.
Gotcha, so even the online version?
Yes. 
Thanks for the kind words Laurent!
I'll try that. Thank you! You're awesome. 
Instead of hardcoding buildItems, use a variable named rows in all the tableView methods so you can assign either items or blocks to it if action == 1 { rows = buildItems } else { rows = buildBlocks } then in your tableView you can use rows.count or rows[index]
Don't think there's a .pdf version of this. But you can get it for free on iBook store, here's the link: https://itunes.apple.com/us/book/app-development-with-swift/id1219117996?mt=11
you should just start something on the excellent iso-developers slack!
Count me in 
If you do form a studying / reading club, let me know!
I was working on an HTML version of that book for those who don't have iBooks but it's a lot of work for zero return so now is engrossing my list of dead projects: https://kuyawa.github.io/books/introtoswift/
I am working with it too. A great start for Swift and iOS 
Looks like hotdog no hotdog 
Looks great!! But yes, I understand...Do continue if you find some free time -- I can imagine the website attracting a considerable audience consisting of those that don't have Macs as you said...
I started about 5 months ago, I'd be down to join - still learning new stuff and would be happy to try to help where I can. 
Count me in too!
will there be videos to accompany the practical ios 11 book?
Count me in 
Any good tutorial for collection view or custom tableview with bottom navigation tabs?
I am newbie in programming. But I really want to join
I'm new to programming in general but i've started with swift so i'm up for joining.
I m in!
I would love to join
i would love to join!
I'm in!
Thank you very much for your comment! I'm not at my computer right now, so I'll have a look at it tomorrow morning. I really appreciate it. 
Swift 3 and FireBase? I'm not available to watch it right now and there are no details in the description of the video. 
Thank you! It's crazy how steep the learning curve is for Swift - i'm really struggling to pick this up in comparison to other programming languages 
I'm down to join. I have made a handful of iOS apps using Swift 2 and 3.
I would be interested as well~
Makes it unbareable to watch.
Imma do a 180 on the channel and just do it normal thannks for the feedback
Honestly I would have watched it if it was a normal voice. It's a cool concept for sure.
I got stuck on this exercise as well... because BOTH conditions have to be met, I was using the &amp;&amp; operator, not ||. The code would absolutely not function correctly, Byte would randomly collect gems until it hit 3 gems and then would do nothing. As soon as I tried ||, it worked. To my understanding, if one needs multiple conditions to be true, one should use &amp;&amp;... meaning that as long as one condition is not met, the loop will run. To my further understanding, one uses the || operator if only one of the conditions needs to be met. In my mind, this means that as soon as Byte collects 3 gems, the loop should stop. Why is this not correct? 🤔 
I can't fucking understand you. Top tutorial.
I just started a few weeks ago. This would be cool to see each other's progress! Can I get an invite to the site?
I'd learn at least 1 more language in addition to Swift just to make yourself more flexible. Java, C++, JavaScript, C#, and Python are all good languages to know although there are many others that are also useful. Swift is getting a lot of attention now and you certainly can be a Swift-only developer but it's not as common as some other languages and there are a lot of great job possibilities you'll miss out on if you only know Swift.
wat
One of the nice things about swift is its new and pulls a lot of good ideas from different languages and paradigms. Getting a broad set of experience using swift w/ apple's libraries etc will help you learn about OOP, functional programming, the benefits of a powerful type system, and if you build some nontrivial apps, a good sense of smart architecture. Apples ecosystem &amp; libraries make for a huge playground. A couple decades of continuous development means you can spend years learning and still not grok it all. That said, yes you'll want to learn other languages. But I'd probably wait until you run into a problem that seems best solved by another language. 
Great tutorial, but maybe Leia’s voice will do better.
Since so much revolves around "cloud" or "team" principles, I'd suggest learning Swift along with a common server language (PHP?). 
I'd love to join this
Interesting idea mate, would you like to join us on slack and talk more about it?
Small update. MongoKitten is now quite significantly more performant than C.
So you build an app starting with no real direction. It somehow gets better as all the various ideas collide. ???. Then profit. Might work. I think Bioware uses this model.
😻
https://www.youtube.com/watch?v=zw-Tj-WaPEI
SECTION | CONTENT :--|:-- Title | Replicating Snapchat iOS (Part 1 - Login Flow) Description | Part one of our series, we'll be using Xcode and swift to try and replicate snapchat functionality for iOS. Link to files: https://drive.google.com/open?id=0B3ALyHCgvMCQaXNkc1Roa1pKd3c Length | 0:31:19 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
Thanks!
I re did the video in a normal voice and re upload. check it out here. https://www.youtube.com/watch?v=zw-Tj-WaPEI
SECTION | CONTENT :--|:-- Title | Replicating Snapchat iOS (Part 1 - Login Flow) Description | Part one of our series, we'll be using Xcode and swift to try and replicate snapchat functionality for iOS. Link to files: https://drive.google.com/open?id=0B3ALyHCgvMCQaXNkc1Roa1pKd3c Length | 0:31:19 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
From my understanding Xcode runs on Linux so you should be fine for the whole process of development and submission to the app store. It's only windows that can't run it. Worth double checking but i'm sure i remember reading that somewhere. 
Oh, dang... That includes the simulator and everything, right?
I get what you mean! It's a good idea!
Xcode does not run on Linux at all, the swift compiler and the foundation library does. This enables you to learn swift and write web applications, but you cannot write iOS applications with it
This was actually always part of the problem the back and forth with factories in china and getting materials on time and them being exactly what the company said they would be lol. Just a few more months of studying to go I feel until I am make something simple.
You couldn't be more wrong.
More worried about the simulator.
I'm currently working on [OrangeIRC](https://github.com/ahyattdev/OrangeIRC), an iOS IRC client (with detachable client library) written fully in Swift. 
Please keep this series going! It sucks that there are so many interesting series in YouTube that never get finished. I'd love to work through these when I have some free time!
Send me a pm with your email, I'll get your invitation set up!
MongoKitten is amazing. I wouldn't use anything else. Thank you. Thank you. Thank you.
I doubt a C program can do these things. But C is designed around completely different principles
I started with Apples book too, but possibly equally as important is not just reading for ages on end, but to actually start putting it in to practice day after day, even if it's incredibly simple, try every day making a 'hello world' app or something incredibly simple so you get used to the basics and it gets refreshed in your memory till it's automatic. 
No. Structs are not copy on write. Heard that large value types would be passed by reference at some point though.
You are doing CoW like how stdlib and Foundation collection types do. Have you wrapped those classes as value types?
I go the programmatic route and I think it’s way easier, as long as you’re willing to document the shit out of everything (since you can’t actually see what’s happening).
I'm actually considering breaking down and paying for something 
watched the vid 3 times and it definitely looks like everything works as intended. The grey background of tableview is vertical rectangle, but component size and placeholding separators extend to fill whole controller no matter size and orientantion.
I don't have any direct experience with them but as a person who has been part of the hiring process for software engineers a certificate like that would have little bearing on hiring someone. Hiring priority usually starts with a degree in software engineering or significant experience in the industry. Examples of projects, especially open source ones, will help secure an interview. I'd still run them through the normal hiring process and judge them by how they do on a code review and questions. Present them with some example programming topics and see how they tackle them, what strategies they follow, if they identify the issues properly and find a way to tackle it that is close to optimal. How they interact with the other people in the room - what questions do they ask and do they accept suggestions and modify their direction based on them. Listing a certificate on a resume would be no more than another bullet point that may or may not be considered. The exception is a professional certificate, like a [Network+ or Security+ certification](https://en.wikipedia.org/wiki/CompTIA), for a job that requires those disciplines. If a "boot camp" helps you write better code and leads you to develop some solid example projects or work on an open source project then it's worth it. I would never do one just for the certificate though, that's probably wasted money.
Just ask here, we're always looking for good projects to work on in our spare time. If you want to hire someone to do it for you then /r/SwiftJobs may be a good place.
SECTION | CONTENT :--|:-- Title | Learn Swift for Beginners - Ep 1 - Variables (Swift 3, Xcode 8, 2017) Description | This Learn Swift series is designed for beginners with NO programming experience. It uses the latest version of Swift 3 and Xcode 8. If you've ever wanted to learn Swift programming and build your own apps, this is it! Hands on training with PDF lesson notes and cheat sheet... Follow along! It's the best way to learn! I'll be in the comments to help you along as you learn about Swift concepts such as variables, data types, if statements, loops, classes and more! Swift Programming Syntax Chea... Length | 0:15:02 SECTION | CONTENT :--|:-- Title | How To Make an App - Ep 1 - Introduction (Xcode 8, Swift 3, iOS 10) Description | How To Make iPhone Apps with NO Programming Experience! Lesson 1: Introduction (Tools and Materials) This lesson is an orientation of what you need to start making apps and the tools and resources that Apple provides. Download the Key Takeaways Lesson Notes here: https://codewithchris.leadpages.co/yt-beginnerlessons-keytakeaways/ This video series uses the latest and greatest from Apple (Xcode 8, Swift 3, iOS 10) and will teach a beginner with no programming experience how to make iPhone apps... Length | 0:08:05 **** ^(I am a bot, this is an auto-generated reply | )^[Info](https://www.reddit.com/u/video_descriptionbot) ^| ^[Feedback](https://www.reddit.com/message/compose/?to=video_descriptionbot&amp;subject=Feedback) ^| ^(Reply STOP to opt out permanently)
I think I spend at least 50% of my development time dealing with screen layout issues for different screen sizes. Generally I start with the layout for an iPhone 4 and then scale up. I reference certain key constraints and then adjust then in a switch statement depending on the screen dimensions. 
I recommend you HackingWithSwift.com, is great to begin learning swift and app development
Code completion finally works, and Swift refactoring support. It's an amazingly solid beta 1. I've been using it instead 8.3.3 for quite a bit of general work.
I also prefer to layout all my view components programmatically using the SnapKit framework. But I don't think its necessary to have to document everything you are doing. In essence, good code should document itself. 
There are two key things missing from your EmojiView. It doesn't have a background color and the emojiLayers aren't being added as sublayers. So you're showing a view that has nothing in it. Using the [view hierarchy debugger](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/special_debugging_workflows.html) should show you that the view is there but it has nothing in it.
I'll do it for $1000 upon completion. 
I haven't done the online option - however, from what I've seen you're usually buying a mac mini in a server farm to work on. The biggest drawback would be latency of working on a remote connection. Sure, you'll want to consider your data, but any reputable hosting company is not going to steal your ideas and likely will have a contract to that effect. React Native uses web technologies to compile to native code. It's quite good at what it does and many companies use it. The benefit is that you can spit out an android app at the same time. Drawbacks are likely things like needing to pay more attention to the app looking and acting fully native and probably some limits in more recent or advanced framework features. There are other alternatives to React Native btw, Ionic is one but there are many more. All the same basic idea.
Thanks :)
You're welcome :) I'm glad you (and others) enjoy using it as much
Waiting for reachability to make network requests is an anti-pattern specifically recommended against by Apple. It should never be recommended. 
Indexing is a one time operation. And in Xcode 9, it will index as you build, so just do a build and everything will be ready to go. It's it actually requiring a reindex every time you refactor, you should report it as a bug.
Thanks for the write up. One question, is there any benefit using SpriteKit for animations like this rather than just using the baked in animation framework in UIKit?
Sure - So I'm looking for an app that can bring in website articles. Users would have the option to see what blogs they want to follow and which ones they would like to avoid. I would also like to have 5 tabs on either the bottom or on the side. That further breakdown the categories of the feeds into 3 distinct topics, 1 with static links, and another with an Instagram feed. I also would like the ability to export articles as emails or text messages. Thoughts? 
Not a swift programmer, but I would assume the init method is to set any particular properties when instantiating the object. 
Uh, what would you do without init? What would a “fresh” instance look like?
Sounds pretty useless to me.
Using this right now. Amazing library! Hoping to make a planner with a timetable a long side it to create some sort of booking application. Had any experience with this or know of any libraries that could help me out?
It depends what you're reading the JSON for. If it's personal data that's assigned to each user, I'd recommend using JWT. It's not too hard to implement. You could also look up OAuth but thing's might get a little complicated. Otherwise, use Basic Auth. This will make sure only the mobile client talks to the web service and avoid human interaction.
nearly, you need to override viewWillLayoutSubviews on your VC and move the playerLayer.frame = ... to that, make sure to call super in viewWillLayoutSubviews. override func viewWillLayoutSubviews() { super.viewWillLayoutSubviews() playerLayer.frame = self.view.bounds }
Thanks so much I'll give this a try tonight. Can you (briefly) explain why this is correct and what I had isn't? 
Thanks very much for that concise answer! I'll give this a go tonight and let you know how I get on. I really appreciate the help!
Sure. PM me? :)
Sweet. Where can I find your apps? would love to check them out 
Are you using a `UIWebView` or a `WKWebView`? `UIWebView` should work with `HTTPCookieStorage`. `WKWebView` runs outside of you apps process, so you either need to add the cookies as headers on the URLRequest or inject javascript to set the cookie when the page loads.` https://stackoverflow.com/a/26577303/385017
I don't know what to say. I've used both in the past and it work fine. Maybe double check that you're using the correct keys or values. For example, sign in through the login screen then read the stored cookies and compare to the ones you're creating.
I asked this a couple of months ago. Maybe it can help. https://www.reddit.com/r/iOSProgramming/comments/65aae0/is_there_a_way_to_autoenable_cookies_inside_of_a/?st=J4FRVOPC&amp;sh=4d9866cd One thing to mention is that cookies are sandboxed in both webviews and Safari. So they won't trade cookies or share them meaning that if you log in to a site in a webview, the site won't recognize you in Safari.
Yes, APFS, my bad. I'm curious why you think a brand new, written from scratch, never deployed in the wild fs that offers no data redundancy is less scary than a mature fs with 30+ years of production hardening?
Idk if it's just me but the if-statement conditions are exactly the same even though the comments suggest that maybe they should be different? Idk Also, make sure the identifier for that view controller actually exists. That could be an issue. Also, make sure that the reference to that storyboard exists as well. Instead of using the '?' on the storyboard just unwrap it with an if-let statement or a guard-let statement.
Just put ads, sponsored posts, or ask for donations. 
Going this route too. I did take AP CS and developed Android apps. I would love to study with you and share resources.. 
Inner classes do exist in Java. And there are more annoying things than having to create additional files. 
I have another somewhat related question if you don't mind. I got it working so that it restores the correct view controller, but now I'm trying to add back in the data. I added print statements to see if the encode and decode functions were running. I see that the encoding function runs whenever I push the home button (works fine), but the decode function only runs the first time I launch the app and not after I close it (using Xcode) and open it again. Here's the function I'm using for the decode: override func decodeRestorableState(with coder: NSCoder) { print("decoding") let currentScore = coder.decodeObject(forKey: "currentScore") if currentScore != nil{ currentScoreLabel = currentScore as! UILabel } super.decodeRestorableState(with: coder) } EDIT: I'm not smart, it's not printing beacuase I stopped the simulation
Hey man, I just gave it a go [here](http://imgur.com/a/AoL66), and it still doesn't seem to be working - have I implemented your suggestion incorrectly? I had to add the Let playerLayer to the viewWillLayoutSubviews section to make playerLayer accessible within that function. The app runs, but the result seems no different than without the viewWillLayoutSubviews section. Any ideas? Thanks so much again for your help.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/usO5Uc2.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djhc5xh) 
Yeah that looks fine, is the VC a child VC embeded in a container view by chance ?
I can highly recommend the iTunes U Stanford Swift course. I also came from webdev and it helped me to get up and running. 
The view controller is embedded in a scroll view, if that's what you mean? I have two videos side by side, you can swipe left and right to go back and forth between them?
I do, which part do you think would be helpful in particular? I think I've found a clue; if I type in the scroll view controller (while viewing on an iPhone 7 plus): Print(self.view.frame.width) it's returning 414 points which is the width of an iPhone 7 plus. But if I type in the video1.xib (aka the VC nested in the scroll view): Print(playerLayer.frame.width) it's returning 375 points, which is the width of an iPhone 7, aka the width the video was natively shot in. So I need to try establish why the frame is wanting to stay that width - is it due to the video being that size natively, or is some other factor forcing it to be that? Any other ideas how I can figure this out? It's driving me crazy, haha. Thanks again!
Have you tried scrolling to the last index path in your table view? For example, if you have 50 messages and only one section in your table view, you could do something like this: let indexPath = IndexPath(row: messages.count -1, section: 0) tableView.scrollToRow(at: indexPath, scrollPosition: .bottom, animated: false) Just do that as soon as your messages are loaded and after your table view data is reloaded and you should be good to go!
Neat! A nice look at the implementation details of `JSONEncoder` in Swift. The code is still changing before the final release of Swift 4, but cool to see it in action. Interested in seeing an article about the decode side, eventually. :)