Your PerformOS function contains a print function, and it does not return a value. This would be a void function in a C type language, but in Swift, this is considered to be a function of type (). Its signature is () -&gt; (), meaning that it takes no arguments and returns no value, but this is abbreviated to just (). When you print the return type of the PerformOS function, the code first calls the function, which then calls the print function in the PerformOS function, and then takes the return of that function, which is nothing, and prints it. Also, I would rearrange your code so that the explicit initializer that takes all of the arguments as the designated initializer, and make the init() function that just uses default values to be the convenience initializer. 
This seems fine, and I understand that with swift if you pass gameObject from one view controller to another is completley fine. But I'm talking about the entire game object, everything from cards, player states. &amp;#x200B; I guess it doesn't do any major harm, or perhaps I worry too much about getting it right first time &amp;#x200B; Thanks
Thanks Hayden.
In the header class that i created, i added constraints to the imageview programmatically and also in the Viewcontroller class I forgot to change the line from this `let layout = UICollectionViewFlowLayout()` to `let layout = StreachyHeaderLayout()` .
Nice work, but can we stop calling things “more swiftly”? Cuz that’s just like your opinion, man. I would argue that what you’ve done is more generic-y and has little to do with swift outside of the fact that Swift supports genetics. 
Thank you for your feedback. Yes, “more swifty” is a bit tongue in cheek, but I don’t have a better term. And the whole article is based on my opinion. Using the api as-is is not a mistake, and it works. It’s just that it’s a bit ugly to me.
You’re printing the function itself, which returns (). I think you mean to run the function instead, by typing `obj1.performOS`
Well, instances of *classes* are pass-by-reference, while instances of *structs* are pass-by-value. The blanket statement that all objects in swift are pass-by-reference isn’t quite correct. This misunderstanding could lead to some pretty frustrating bugs pretty quickly if the tools here are misused. 
I think if all your game info is in one class, and all VCs need access to all that game info, then it’s efficient to pass the class (reference).
Just created my first MacOS program after a couple of years involved in iOS dev. It's a great way to keep track of time spent on projects. Check it out: [https://github.com/johngarrett/Title-Timer](https://github.com/johngarrett/Title-Timer)
Yeah. Got that. Thanks Double
OT: I see you grabbed one of those .dev domains as well!
Names are important!
If any given `SearchResponder` will only return a single concrete type of `nextSearchResponder`, then one option would be to introduce an additional `associatedtype NextSearchResponder: SearchResponder` and have `nextSearchResponder: NextSearchResponder?`. Alternatively, you could mode this using a type-erased `AnySearchResponder&lt;Result&gt;`.
https://www.hackingwithswift.com/articles/74/understanding-protocol-associated-types-and-their-constraints you want something like this: ``` protocol Screen { associatedtype ItemType: Item associatedtype ChildScreen: Screen where ChildScreen.ItemType == ItemType var items: [ItemType] { get set } var childScreens: [ChildScreen] { get set } } ```
Oh that's a good idea. Thanks! I'm always so happy that we ask each other questions on the internet and that people actually want to help. 
Thanks!
You really need to read up on encapsulation and observers.
I would rather say that the single responsibility is not meet. So he might refactor the code in smaller class responsibility and then inject only the objects being needed VCs. Even if passing object reference is harmless doesn’t mean the application architecture should follow SOLID concept. 
Dobar article Dusane :)
Im working on a iOS Base Project, with a scalable clean architecture, also using MVP, and other patters. I tell a little more about it here [https://www.reddit.com/r/iOSProgramming/comments/az6blh/clean\_architecture\_ios\_base\_project/](https://www.reddit.com/r/iOSProgramming/comments/az6blh/clean_architecture_ios_base_project/) &amp;#x200B; Is ready for recibe a lot of feedback!
I have tried: * Uninstalling/reinstalling Xcode * Cleaning the project * Deleting derived data * Rebooting more times than I can count * Starting a new project Running Xcode 10.1(10B61). Issue just started randomly as I was building an app yesterday and I haven’t been able to fix it. 
Would recommend going through a beginner Xcode/iOS programming course.
It’s working as it’s meant to. You can’t have a statement at the top level inside a class; there you can only have methods and variable declarations. 
I will give you the cold hard fact. It depends on many factors like device, regions, wether or not people clicked on the ads. If it's just impressions for banner ads, you're realistically looking about $1-$2 - that's being generous. 
Surly a troll?
The code you’re writing is syntactically incorrect. No number of reinstalls/restarts will fix that. I recommend starting with a beginner Xcode/Swift course or tutorial.
No. That's overkill. Also. I would recommend Realm Database of Core Data. It's just better and more efficient. 
Like i said in another comment still new, user defaults and core data all i know but i didnt know if you could easily increment user defaults? Still learning here just was trying to give some help from my limited knowledge
That’s the reason in this case but OP may have also run into the face that some classes have a print() method and to use the swift print you must say Swift.print(“hello, world”)
Both work, but the intent is probably person: person. When you call the function screen() you need to pass two arguments. A bool and the name. When you pass the name you actually pass the variable declared at the top, like this: screen(onGuestList: true, person: name) Let's say you declare another variable at the top name2, then you can pass name2 to the function at it returns a message with the name store in name2. But if you use person: name and then pass as argument name2 it will return name, not name2 in the message, which I believe is not the intention here.
Yes, there does appear to be an error with the parameter names. Also, in the posted code, the screen() function is never called. What you have is some function definitions, but not anything that actually runs.
Well I feel like a dope Declaring 3 functions and wondering why nothing else is running when nothing has actually been called seems a bit silly, no? Thanks for the fast reply :)
I’m always happy when I discover that my bug was just a dumb programming error. I understand why those are wrong and they are easily fixed.
Thank you so much for breaking it down further. your reply and /u/PogClap made me realize all I did was just declare 3 functions without actually doing anything. I made the skeleton but didn't add the meat to the app :P screen(onGuestList: true, person: name) was all I was missing and I understand why. This is awesome - thank you so much. 
Seems like a singleton is a good idea here. 
Was in deep trying to fix another issue and mistakenly blew up on this non-issue without actually looking at what I was doing. Apologies for the dumb post. Moving along now, nothing to see here.
I guess you're deleting the row from the table, but not erasing the record from Core Data. You have to delete de object from managed context, the reverse operation from loading it.
I probably should have clarified, sure, but "object" refers very specifically to instances of classes in Swift. Enums and Structs are "values". This actually led to a number of naming dilemmas in the standard library, such as "what is the general name for a thing that can go in an Array, since it may be an object or a value?". That particular one was settled with "Element", but the general naming problem is still a bit of a hassle.
`func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {` `if editingStyle == .delete {` `guard let appDelegate =` `UIApplication.shared.delegate as? AppDelegate else {` `return` `}` `let managedContext =` `appDelegate.persistentContainer.viewContext` `let fetchRequest =` `NSFetchRequest&lt;NSManagedObject&gt;(entityName: "Event")` `do {` `events = try managedContext.fetch(fetchRequest)` `events.remove(at: indexPath.row)` `self.tableView.deleteRows(at: [indexPath], with: .automatic)` `managedContext.delete(events[0])` `} catch let error as NSError {` `print("Could not fetch. \(error), \(error.userInfo)")` `}` `}`
@paca\_tatu\_cotia\_nao
Start with Playgrounds. Then when you buy a Mac, try Intro to App Development with Swift. Also by Apple.
FP in my opinion shines in the network layer. Everything else tends to be OO. 
Totally. I assume limiting the scope is usually good for preventing bugs whenever possible. It's ultimately up to them since it sounds like they have options of what to pass.
Thanks, I saving for a MacBook rn
Sweet thanks, that’s what I was wondering. Any reasons to choose one service or another?
Hi doublem-! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/azmexf/please_help_out/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Hi doublem-! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/azminy/this_is_literally_the_coolest_app/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Look into RxSwift. I don't know about how well ReactiveX Swift support is maintained, but i's an interesting approach to what you're asking for. It's also the direction everyone seems to be moving right now, so it has real world relevance too.
Not sure if you still need help, but you forgot do { try managedContext.save() } catch {debugprint(“error here: \(error.localizedDescription)”} After your managedContext.delete(result[0]) Also, do send me a link to your app when it’s done :D i have a very similar app to yours, mine is an event manager. Variables names might not be the same cause i’m typing on mobile
Hell no. Store data in a container that you reference and access from each view controller. Passing items from controller to controller is a recipe for fuckup.
Interesting work. Happy to see it.
Nope, I'm not.
I would say that "using FP for the sake of FP" is a dangerous mindset to get into. Specially with a language like Swift which isn't strictly FP but allows it to be pretty idiomatic. More importantly, if you're working with a team of people or if your code is going to outlive your time maintaining it, I would suggest you stick to a style that matches the code around your edits. That way, future maintainers will have an easier time understanding and changing your code. With that said, my advice would be to use the *teachings* of FP without going your way out to make it FP. Typically, use pure functions instead of relying on global state. Use very small types, like structs and enums, instead of large class hierarchies. Use protocols instead of relying on inheritance. All those go a long way to make your program easier to understand, maintain and performant. Purely functional programming looks very different from imperative and object-oriented programming, so mixing different styles might not make your program actually better. But borrowing from it should allow you to get the benefits without suffering from the result of an inconsistent mashup. Also, you don't have to put your functions in a static class. You can just leave them on the top level of a file. A class makes sense only if you intend to instantiate it. If it's only full of static functions and carries no information, it might as well not be there.
"But I was thinking that I could at least have a Service layer which could be purely functional. I created a new swift file with utility functions in the global scope and thought that might get messy so I opted to put them in static classes. I think I'd end up with many different static classes as my Service modules. Am I on the right track? Is this crazy?" I've seen it done and it's a terrible idea yes if it also involves static/global variables in that mix of global services. Avoid global variables like the plague, seriously, especially these dumb fuck redux-like architectures people try to do on iOS nowadays that don't fit with the platform whatsoever. On the other hand, if you plan on having what you call these services simply as way of grouping function under a "namespace", then yes sure, just don't fall to the temptation of having a bunch of static vars in the mix unless you are really sure what you're doing. Btw, a common Swift convention is to use caseless enums if you want to regroup some stuff under a fake "namespace", because, unlike a static struct or class, you cannot initialize a caseless enum by accident. On the other hand, Swift does namespacing by modules, if I were you I would see if it's not possible to have at least one small module (dynamic library) outside your app that handles calling an api and serializing stuff into very dumb raw struct models. This entire module can pretty much be a bunch of structs and async functions so it's as functional as it gets. You will also find that most of the places where functional programming makes sense in iOS dev is actually asynchronous in nature. There are many ways to handle this, RXSwift, Result closures, etc, but I would highly recommend https://github.com/google/promises which work pretty well and is pretty fast. It also does not fuck up XCode auto completion as much as some of the other libraries out there which can still be a real pain in the ass with swift. iOS dev is pretty much entirely OO at the ui level, my advice for that aspect would be to try to use dependecy injection as much as possible whereas viewcontrollers pass in useful data to other view controllers, preferably at the initializer level if you are not using storyboards, otherwise through some other standardized way like segue or just passing by property. In the end, depending on what youre passing between your VCs, this is actually very much FP in nature since it will naturally make you use a lot more composition in your code instead of subclassing. Good luck :)
singletons are always a bad idea. 
&gt; 13 of tech support 13 whole tech support? Never a whole tech support!
Nah, how would you handle oauth token with FP? Also cache handling (no change is automatically handled by reading from cache)
It's called a brain fart, and everybody has one of those from time to time. Keep developing 👍🏻
I'm starting to delve into Core Data and I think this is what I'm looking for. Thanks! &amp;#x200B;
You'd be wanting to set a [Timer](https://developer.apple.com/documentation/foundation/timer).
Adsense is the best bet (you need to apply though). It has the largest pool of ads. Ultimately what you want to do is find an Ad Exchange that works for you. This will let you use multiple Ad Platforms which can maximize your CPM/CPC.
Was looking for the same kind of requirement some time back wherein we were trying to refresh user's access token every after certain duration of time. But it seemed like we don't have such schedule mechanism in iOS wherein without opening the app, certain method would be called. So really looking forward to answers if anyone has it.
Not sure why you would need to refresh access token when the user is not using the app. Typically you would do token refresh in Appdelegate when the app starts. You can also explore background refresh options.
ohhh got that thank you!
Timers don't run in the background, so you'd have absolutely no way to guarantee this working
I don't get the part with "#selector()" UITapGestureRecognizer(target: **self**, action: **#selector**(tableViewTapped)) &amp;#x200B; like in this code above, I don't get why #selector is necessary :( couldn't it be self.tableViewTapped to refer to that method? (Oh I am aware that it requires selector type as a parameter but I m confused why selector tho not just a normal function?)
You shouldn't need to refresh a user's access token manually like this! You should use a refresh mechanism in which you have an access token and a refresh token... when the user comes into your app, if you detect the access token has expired you send the refresh token to the server and it grants you another access token. The refresh token must be securely stored, and is much longer-lived than the refresh token. This is how most apps which keep you logged in permanently work!
As the person suggested on the other chat, the only real option you have here is to use local notifications or silent "content-available" notifications but you'd need a server setup for those if you don't already. Unfortunately there is no API for scheduling tasks like that, and even the two options I've suggested: Local Notification: Won't call any code until the user interacts with the notification (Clicks on it to launch your app) Silent "content-available" push: Won't guarantee to be called, and Apple will stop delivering them if you don't actually download content using them. Apple are very good at detecting when you're not using them for their intended purpose! It might be useful to know what you're actually trying to achieve?
[https://www.hackingwithswift.com/example-code/system/how-to-run-code-at-a-specific-time](https://www.hackingwithswift.com/example-code/system/how-to-run-code-at-a-specific-time) Maybe you could try this
Visually lacking? What exactly is lacking here, it looks very stylish to me.
Doh!
It sounds like you need a combination of approaches. Running the method at a certain time of the day while the app is running is easily achieved with a Timer. For that, you can see the hacking with swift link someone already provided (shut out to P. Hudson) If your app happens to be in the background then you have no way to guarantee that the method would be called exactly at a set time, but you can do a “best effort” approach by running a background fetch task (see https://www.raywenderlich.com/5817-background-modes-tutorial-getting-started) and checking for the time so you could call your method more or less around the set time. There is no 100% sure way to do what you ask though, and for good reason 😉 The other way to attempt this, like others have mentioned is using a local notification but you will need the user to interact with it for it to actually work. Good luck! 
They’ve got their own internal frameworks for that. They’re that big ;)
They have their own internal exchange setup. You could do the same if you wanted using an existing Ad Exchange tool like OpenX, but you would have to find your own advertisers. Not worth it unless you have a user base that can attract a significant advertiser base.
I mean in Swift you always have the \`asyncAfter(deadline: DispatchTime, execute: DispatchWorkItem)\` that executes a closure after a specified time. Keep in mind though that this might not work after long periods in a iOS context since the OS suspends the app after some time of being inactive.
from the looks of it, just just insert ads into their data source for the table view, and their json probably has a flag to denote that it’s an ad so they can add the “sponsored” label. 
This will not do what you want. This will just tell your app whether or not the face is recognized — it can't recognize more than one face or differentiate between people based on their faces.
print() method should be called inside another method dude
This. Once the application has woken up from a notification, you have a certain amount of time, a time slice if you will, to execute code.
What makes you think that?
I guess if all you write is high level code on things that’s don’t use hardware much. IOS system libraries are full of singletons. 
If you're not familiar with [2Dimensions.com](https://2Dimensions.com), it allows you to add real-time animations to apps and games that can be manipulated with code. 
First, of course, you have to decide what "purely functional" means to you. I'd say it mostly means avoiding mutation, so just ... stop mutating. Swift actually has pretty good support for that. I wouldn't say FP is about global functions or static classes. I'm not really sure where you're going with that. Perhaps you could post some examples?
This is the best advice in the thread so far imo
Video doesn’t seem to want to play.
No luck with the video on an iPhone. 
Looks dope
 struct Info: Codable { let fat100G: String let carbohydrates: Float let sugars: Float enum CodingKeys: String, CodingKey { case fat100G = "fat_100g" case carbohydrates, sugars } } struct Product: Codable { let info: Info } struct ProductResponse: Codable { let status: Int let product: Product let code: String let statusVerbose: String enum CodingKeys: String, CodingKey { case status, product, code case statusVerbose = "status_verbose" } } let foo = """ { "status":1, "product":{ "info":{ "fat_100g":"0", "carbohydrates":10.6, "sugars":10.6 } }, "code":"5000112630794", "status_verbose":"product found" } """ import Foundation if let data = foo.data(using: .utf8), let decoded = try? JSONDecoder().decode(ProductResponse.self, from: data) { print(decoded) } // ProductResponse(status: 1, product: Product(info: __lldb_expr_6.Info(fat100G: "0", carbohydrates: 10.6, sugars: 10.6)), code: "5000112630794", statusVerbose: "product found") 
There is pretty known one, called generamba
How is this any different from Lottie? 
Lottie is a library, you need to own and use After Effects to be able to export to it. Flare is a design and animation tool made specifically for real-time animation (not for post-production and video). Check out [https://www.2dimensions.com](https://www.2dimensions.com) and [https://www.2dimensions.com/about-flare](https://www.2dimensions.com/about-flare) for more details.
It is a GIF not a video mate
Didn't know that :D .. but this one is faster i think.
TL;DR: Follow Apple's naming conventions. Don't use semicolons. Use access control. Exit early. Structure your code.
I released the beta of my first app. It's a flashcard app called Omen. &amp;#x200B; [Here's a link to a post I made about it.](https://www.reddit.com/r/iOSProgramming/comments/azynm6/i_made_a_flashcard_app_called_omen/)
in your script you have 2 destinations and both are only for the simulator. So no surprise it's x86 and x86\_64 only. you will have to ammend your xcodebuild command with "-destination generic/platform=iOS"
&gt; More importantly, if you're working with a team of people or if your code is going to outlive your time maintaining it, I would suggest you stick to a style that matches the code around your edits. That way, future maintainers will have an easier time understanding and changing your code. This sounds reasonable at first, but I've only ever seen it hurt projects. It's popular right now to suggest that everybody has a valid "taste" in how to write code and everybody's taste is as good as anybody else's, but I've never seen this in practice. Most good code, in a given language, is basically the same style. Programming languages today have universal coding conventions. There's a right way and a wrong way. Matching the code around you leads to a perpetual "broken windows" situation. When is anything going to improve, if you always match the code around you? (Hint: never. You'd need a "let's stop forward progress and clean things up" milestone, and those never happen. And even if they did, that's a free month you're handing to your competition.) A better alternative is the "boy scout rule": always leave code better than you found it. Everybody on your team knows what good code should look like, so aim for that, not whatever your predecessors did. (A dirty little secret of programming: your predecessors aren't happy with their old code, either. In most cases, they wouldn't want you to follow what they did.) There are many famous projects which died because they kept on with the same broken style. WordPerfect was written in x86 assembly for MS-DOS, and when new programmers went to improve it, they kept on matching that by adding more x86 assembly ... and then Word came along and demolished them because they used C++ and were able to add new features (like Windows support) 10 or 100 times faster. I know of zero projects in the history of computers which died because their maintainers used inconsistent coding styles. This situation is *especially* true with Apple platforms, where old frameworks and technologies are regularly deprecated. If you're using Carbon in 2008, or OpenGL in 2018, you don't "stick to that style" and double-down by writing more code for that framework. You always aim for the highest level abstractions and the newest frameworks. I don't know what "using FP for the sake of FP" means, or even where you got that idea, but FP has many concrete advantages. In cases where the system supports it (and Swift mostly does, mostly), the functional solution to a problem is almost always better. You won't do anyone any favors by avoiding FP, on any scale.
Aw I was hoping for something more advanced. Thanks for the deterrent.
Hey there, so firstly I’d say you don’t really need to read the apple swift guide cover to cover, but you did so well done. It’ll be a great reference guide and jumping off point. Don’t forget about the apple documentation etc too for looking things up. First step is, start thinking about what your app will do. I mean specifically. Start thinking of the user (namely, you. But pretend it’s for the mass market and that’ll be better for your learning) journey through your app. Sketch it out and make make some simple paper prototypes. Then start making the bones of the app. Start with making story boards of the layout. Then start thinking what the actions will do. Start thinking about the simple classes and write some functions and set them up to buttons etc. Start small. You’re not going to write the perfect app in one go and certainly not first time. I’m talking start with a total daily water amount on the screen and a button that increments it by a set amount when you click it. That’s a bunch of actions right there, you’ve got a label, a button, a variable that needs increasing and then the label needs updating. When you get stuck google it. Use apple docs, YouTube, stack overflow. You won’t get hurt by not being able to do it, but you’ll get stuck and that’s the best thing for your growth. Then you’ll need to start storing that info for when you close the app, look up core data etc. Then you’ll start snowballing and start iterating and improving. Make sure you commit all this to a git repo to show off (if you decide to) in interviews or just see how far you’ve come. The first step to making a great app is making a real fucking shit app. Source, currently a grad software dev at a big company making a very shit app to learn swift. Lemme know if this wasn’t helpful and you need more pointers. But the best step is literally writing any shit code down and making it work then iterating from there.
I'm looking to get into IOS coding and specifically Swift. However with Swift 4 now out a lot of the books have not yet caught up, or are issuing new versions in a few months. Is it worthwhile to get the books that use Swift 3 or will the changes be significant enough to warrant waiting? Thanks in advance!
Why is it deleting 0 element?
Swift 5 is coming out very soon. I always find it hard to recommend traditional books as they're only accurate for so long. Online courses, like on Udemy, Lynda, etc.. are what I tend to recommend because they tend to get updated more frequently, and those updates are typically free for course participants. Of course, if you're diligent, you can certainly get by with a Swift 3 book and just make note of the changes in Swift 4 and 5. However, that being said, everyone is different when it comes to learning. Some people prefer books, some videos, and others just experimentation. I was an Objective-C dev and migrated to Swift- picking up the language experimentally by translating my existing projects. Maybe someone else can chime in with further suggestions.
You can pry my semicolons from my cold dead hands. This is 2019, we end our lines with semicolons, damnit! This ain’t no Visual Basic! 😛
Thanks for the advice! I definitely would not prefer to have stateful variables alongside the static functions. Also, I will definitely check out Google Promises. I've used Promises a bunch in JS and they're amazing. Awesome that Swift has a library for it.
Ah very interesting indeed. It's lead to some interesting reads online. I have played around a bit with RxJS and this seems very similar.
I like the idea of not forcing FP into my projects - totally makes sense! If I was to leave my functions outside of a class wouldn't that be considered polluting the global space? Also, it would seem that every function must have a different name, otherwise I get an error. Is there some way to explicitly namespace using the file name? I was actually starting out doing it this way since classes are not quite functional, but thought that the global pollution might get crazy.
Avoiding the "broken windows" is definitely sound advice IMO.
This is 2019 -- and we need to preserve this one feature of ALGOL-58 until the end of time! (...even though parsers have advanced a bit in the past half century, so semicolons are mostly useless today, and ALGOL-58 was kind of a lousy language even for its day, and we've long since thrown away all of the other useless little syntactic quirks of ALGOL-58...) But on the question of *this one character*, VB also happens to be in the same half of the programming language family tree as Swift, and it's somehow better to be associated with ALGOL-58 than VB. Fight da man!
Ah yes, to clarify, I was just wanted to use mostly pure functions. I was a bit confused on where to put them. I thought having them in static classes might be the best solution in terms of namespacing them properly. Though classes are also not a FP concept so that didn't seem 100% right either. I come from a JS web development background and was pretty much trying to translate that over here. It's a different world in JS, so maybe that's just not the way to approach it in Swift, but I thought I could bring in some concepts. In JS I'm able to just create module files with pure functions, not attached to classes or anything and export them out as needed for use. They are namespaced by the module name so they aren't global and I don't need to use any classes. In Swift it seems that any functions outside of classes are basically global (aside from private ones), which kind of deterred me from that path. I just wanted a good way to namespace so I thought that static classes might be a nice container. I'm not sure of the performance concerns either though of using a bunch of static classes. And yes, I can definitely can stop mutating.
Sure. Just wanted to disambiguate here. 
Busted.
he's just pushing his courses...
Although there really hasn't been much call for it, I'm working on making my main app iPad compatible. Partially because it's becoming more a compelling idea now that iPads have multitasking (having it on the side of your screen is a good fit) but mostly so I'm poised to take advantage of Marzipan come WWDC.
As for me, one of the best choices in the market. Book contains a lot of useful examples and easy to understand explanations, especially when you are on the beginning of jour journey ;)
Yeah. GKLeaderboard is pretty easy to implement and it's pretty functional. Just remember that Game Center is gone and you have to create the views yourself for the leaderboard.
This look really cool, but I can’t find the swift announcement anywhere. Can you link to it?
One of our engineers posted this video to his Twitter. We haven’t released it yet. It’ll be out this week, we’re just cleaning some things up. Give us a follow on Twitter if you want the latest and greatest! We’re @2Dimensions. We list all our runtimes on our site here: 2Dimensions.com/runtimes
 Or iPad.
I‘m working on a macOS app named [Taggy Tagger](https://taggytagger.com). It allows you - in a simple way (no rules, just a switch) - to automatically add tags to new files in a selected folder and trigger copy/move actions for certain tags. It’s my first app for macOS and also my way going back to Swift programming after being absent for a couple of years. If you‘re interested in helping me test it, feel free to subscribe on the website, so I can let you know when it‘s ready. Happy coding.
I'm working on improving page load speeds of Respawners. Also any feedback on the current app is appreciated :) [https://itunes.apple.com/us/app/respawners/id1407622522?mt=8](https://itunes.apple.com/us/app/respawners/id1407622522?mt=8)
click on the GitHub link .. you will find a link to download the video instead of a GIF.
Does it go more deep into concepts compared to the book called big nerd ranch? 
Recently launched a micromanagement timer. EveryTime by Whizbang https://itunes.apple.com/au/app/everytime/id1454444680?mt=8 Looking to redesign some of the UI and add themes.
So, I am interested in how to animate dropdown icon like they did in Apple music player? [Here is gif](https://imgur.com/a/YrFSIMS) 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/WeDkwsQ.gifv** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Its hard for me to compare with big nerd ranch, but maybe you find answer in tabel of contents of mastering swift: [table of contents](https://www.oreilly.com/library/view/mastering-swift-4/9781788477802/#toc-start) I think „dive” level is enough for understand how things work and how use them in your projects.
Can you call `myDispatchGroup.enter()` in the beginning of the closure instead of before it?
Awesome thank you very much! Wills tart to learn it, would love to build things with this! :) 
Great! Thank you for helping me out :) I’ll get both PDF and study !
viewDidLoad is called after view is loaded into memory. At this point textfield's value is null. You've assigned idText.text to id1 but this doesn't update when textfield value is changed. To fix this you need get textfield value in prepare for segue method. 
Figured it out, thank youuu!
You can identify which container triggered the notification using containerIdentifier variable in CKNotification class. Not sure if you can identify individual records. 
Does that mean i’ll have to identify the container -&gt; download all records -&gt; re-update my local coredata? Or is there a ‘fetch changes’ thing
I think dispatch groups might be the wrong tool here. What are you trying to achieve by using them? Are you trying to synchronize (make thread safe) access to fetchedContent? If so then it might be easier to use a serial queue. I’m not familiar with FireBase, but if you only want to fetch a document once, maybe there’s another method you call where the closure is only called once? 
May be [this](https://stackoverflow.com/questions/38996677/cloudkit-get-actual-object-from-record-id-in-osx) will help ?
The best approach is to try optimistically to perform the action which requires a token. If you get back a message saying it's expired, refresh it. If you don't, you're good. Low-power, low-effort, and will work in the future if the service ever changes the token's required refresh rate
Unfortunately no :/ cause the solution from your link would only work on private database. What they’ve described, i actually used it in my app and it works nicely. Problems arise when i share it with someone with a different apple ID. Me : me@icloud.com Him: him@icloud.com That’s when it gets saved as a shared database on him@icloud.com’s database. Apparently, CKSubscription, or CKQuerySubscription (on ios 11) only works in private database (me@icloud.com) I figured a work around, if anyone is reading this in the future. Please google ‘maintaining a local cache of cloudKit Record’ from Apple. It’s a long and arduous process where once you get a notification, you have to - plow through all the zones, - use CKFetchDatabaseChangesOperation - get the change token - use CKFetchRecordZoneChangesOperation to get the records since last change A far longer solution than if it is in your private database.
This works when I pass it to the next ViewController. But when I try to get the value of idAns from a ViewController at the end of the application it doesn't work. Should there be a reason for this? override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. print("test") if let detail = detail_items { print(detail.idAns) q1Ans.text=detail.idAns } } I'm trying to call it using this code. It will print "test" from outside the if statement but not from inside.
That means it’s not going into the if scope and means detail_items is nil. You also keep thinking this code is executed later on. No. ViewDidLoad only executes once: when it’s loaded. That’s it. Changing the values later has nothing to do with this method. 
Ok great. And this might sounds dumb but I’m just double checking, is GKLeaderboard the same as Game Center. The way you said Game Center is gone kinda threw me off. 
Yeah that makes sense. Any idea why it would work for one class but not the other? 
If you're looking for depth, it's hard to beat the [objc.io books](https://www.objc.io/books/).
I can’t say much from your code snippets but works in the first view because you declared ans and it’s clearly not nil. The 2nd view is probably declared as optional and default value is nil. Are you sure it’s even going inside the if statements in the segue method? Use breakpoints instead of print statements. 
GK is part of GameKit. Game Center isn't truly gone, but it's no longer a default standalone app. GameKit is actually a part of the Game Center umbrella, but it requires you to create the interfaces that once existed in Game Center. &amp;#x200B; You can find all of the GameKit library here : [https://developer.apple.com/documentation/gamekit/](https://developer.apple.com/documentation/gamekit/) &amp;#x200B;
Ok cool that honestly sounds ideal. Thats what I didn’t like when I used to play, the standalone game center app.
Hi there, you can solve your problem by using a new controller. Usually what i do is that i create a view controller that looks exactly like splash screen and put logic in it. For example to check should i show login controller or some other (if user is logged in already). 
I put it in AppDelegate.swift and solved the issue. Thank you.
The code for the is pretty much exactly to same for both of the classes. The code isn't going through the if statement on the segue for the last ViewController, which is the one that isn't working. I'm just not sure why it would work for one class but not the other? The code for the one that's not working is below: import UIKit import CoreData class ResultsPage: UIViewController { var detail_items: Answers? @IBOutlet weak var titleLabel: UITextView! @IBOutlet weak var resultLabel: UILabel! @IBOutlet weak var q1Label: UILabel! @IBOutlet weak var q1Ans: UILabel! @IBOutlet weak var q2Label: UILabel! @IBOutlet weak var q3Label: UILabel! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. print("helloo") if let detail = detail_items { print(detail.idAns) q1Ans.text=detail.idAns } } } 
&gt; Programming languages today have universal coding conventions. There's a right way and a wrong way. Good luck convincing your colleagues during code review
I don't do any iOS programming so I may be working with the wrong intuition, but in the code posted originally, you are checking if the segue destination is of type `Question1`, while in the code you've posted here, the destination controller is of type `ResultsPage`. If that's the case, this would cause the `if` to fail and thus the `detail_items` property never gets set.
Yes I agree but I will buy them once I have intermediate level of understanding! These days I’m learning the language and reading blogs which give me different ways to think about the concepts. 
They are there same thing, actually. There's a bunch of different implementations of ReactiveX for different languages and platforms. From what i understand, if you're familiar with one, using it in a different language is fairly straightforward. 
Here is some relevant code in \`applicationDidReceiveRemoteNotification\` method - [https://github.com/maxvol/RxCloudKit/blob/master/RxCloudKit/Cache.swift](https://github.com/maxvol/RxCloudKit/blob/master/RxCloudKit/Cache.swift)
Look up GCD or Grand Central Dispatch. A big name for something surprisingly simple. Well... I mean that’s relative and you can get complex with it. But for what you are asking, you just need to pass off that code to another thread and it will happily run while completely oblivious to what other threads are doing. 
I could, but that would defeat the purpose of the DispatchGroup. I call it before the closure so that the DG knows to wait for the http response.
I’m using a DispatchGroup because, in addition to loading these documents, I’m also downloading images. When everything is returned, the DG is notified and I present it gracefully. With Firebase, I’m fetching the documents, but I’m also subscribing to them. This means that if they are updated on the server, the closure will be called again for that document. I need to subscribe, rather than fetch once, so I can update the UI when the document changes. I only want to leave the DG on the first call to the closure for each document. I’ll poke around with a serial queue but as of now I’m still convinced DG is the right approach. I’m using a dictionary of DispatchSemaphores with the DG to achieve this right now. It works fine but I’m convinced there ought to be a more elegant solution.
The destination is type ResultsPage. In the segue method you’re checking if the destination is Queation1 which it isn’t. 
I believe that if you remove the defer statement and just put the `myDispatchGroup.leave()` at the end of the closure will be enough contentToFetch.append(id) myDispatchGroup.enter() firestore.collection("foo").document(id).addSnapshotListener { (snapshot, error) in ... if self.contentToFetch.contains(snapshot.documentID) { self.contentToFetch.removeAll(where: {$0 == snapshot.documentID}) } //This line at bottom of your closure self.myDispatchGroup.leave() ... } }
This will still cause leave to be called more than enter, which isn’t allowed for DispatchGroups. The key point is that this closure is called multiple times per document, and that I only want to leave the DG after the first time for each document. For example, if I’m fetching 5 documents, I want to enter and leave the group 5 times, but the closure block might get called 20 times total, several per document.
I did change the sugue destination on my original code. I realised that I had to send it through each ViewController anyway and managed to up date each field along the way to get my final answers. Thank you for the help everyone, it's been very helpful!
I am working on an Apple Push Notification tester macOS app (so you can send push notification easily to your own iOS app with one click). https://itunes.apple.com/us/app/pushever-apns-tester/id1455738387 Critiques / comments are welcomed! 
Haha, so true! Swift was designed for the human, not for the machine - "made by Apple" after all. ;) It was surprisingly easy to get rid of those semicolons. Now I omit them even when I shouldn't (in my Objective-C or C++ projects).
Why would you want to put all constants into one file?
What we do is have different files for different groups of related constants
I think a good rule of thumb is that if any file starts going over 400-500 lines, it's time to see how to split its content up. I'm not a fan of pre-optimization, but that's just a personal preference
I strongly recommend you use segue identifiers too when transitioning in case you have more than 1 segue from a view controller. 
You can think of the error throwing in Swift as a shorthand for repeated checks for the presence of an error. There's one such branch per throwing statement. Without it, you would end up writing repetitive Go code, such what's shown at the beginning of this article this: https://medium.com/@pokstad/simple-golang-stategies-for-repetitve-error-handling-74735713f8cd
Are those constants automatically generated or maintained manually?
We used to do this in the old days when applications were much smaller. Almost every C project had a **Constants.h** file. 
It depends on the size of the app and if/how you plan to reuse code. It's not completely unreasonable to put them in one file but it depends on the specifics. If there are a lot of #ifs in the file, maybe you should split them into separate files per target. Or consider one per module or application subsystem. 
As well as GCD, as mentioned by /u/Bill3D, it seems like you could do with a Model object. Separate out any non-view related logic into a separate struct or class, and maintain a reference to it in the second view controller, perhaps by passing it after creating the second View Controller.
It's a holdover from the Objective C roots of AppKit. Swift functions can be used seemlessly as closures. This is not true in ObjC. There, the way of "holding onto" a method is by storing a reference to the object you want it to be called on, and the name (selector) of the method you would want to later call. Fundamentally, ObjC's dynamic method dispatch mechanism is merely a lookup table mapping method name strings (selectors) to function pointers.
Usually the constants are related to something. I would associate them with the something they are related to. Perhaps you're using notifications with a certain name. Then your NotificationManager has a bunch of static lets with the keys you're using. And perhaps: even just encapsulates them instead so it only exposes more robust functions.
Not that it really matters all that much, but if you’re starting from scratch writing your constants, make them `enum`s instead of `struct`s. Case-less enumerators can never accidentally be instantiated. https://stackoverflow.com/a/38585994
Hey, wanted to let you know that we just released it! Here's the announcement: [https://medium.com/2dimensions/flare-for-ios-and-macos-5906654823d6](https://medium.com/2dimensions/flare-for-ios-and-macos-5906654823d6)
Exactly this. I put enums inside classes or structs they are related to, or in the same file as a top level enum.
That looks sounded awesome. Gonna look into it this weekend to see what I can do with it! Thanks!!! 😁
in terms of dependency management, that's a bad practice. Usually a header like that gets included into everything. So someone editing a comment can cause an unnecessary massive recompilation. Best to keep things scoped by use.
Scoping by use makes sense except when that code is shared in multiple applications or on multiple platforms. You don't want the platform-specific stuff leaking all of the way down to the modules if it's not necessary. And it depends on what kind of constants the poster is talking about - URLs, UI constants like default font &amp; size &amp; theme, debug modes, etc. I agree that massive recompiles are a huge pain in large apps, especially with a slow compiler like Swift. 
App constants? No. But every project I work on has a StringConstants.swift file that contains all the strings in the app, separated by structs (for example: Strings.onboarding.subscription.valuePropOne). This makes editing text a cinch, whenever designers/someone wants changes. This is the only massive file in the App that’s allowed. Mostly because most apps don’t actually have that many strings. The only time I had to change this was an app I took over for 2 months at the end of my contract, were we had nearly 30000 lines of strings. That shit was split up and categorized pronto.
Hey, this is the second time I read about flare here this week. Can anyone compare it with SpriteKit?
All the WS end point are in a single file with other const 
I can't name everyone I've seen building on top of Swift, but the community is relatively big and active. I can't name all of the projects using server-side Swift. And I do know a good amount of them having been a core contributor of Vapor and a bunch of other libraries. I'll keep my points objective for this reason. [NodeJS is around since 2009](https://en.wikipedia.org/wiki/Node.js) whereas Swift on servers was only starting development [at the end of 2015, when Linux support](https://en.wikipedia.org/wiki/Swift_(programming_language)) was introduced. So there's a 6 year gap between the two. Server-side Swift is not just backed by [Qutheory (Vapor)](https://vapor.codes), but also by [IBM's Kitura Framework](https://www.kitura.io) as well as [Apple themselves](https://github.com/apple/swift-nio), in a way. Interestingly enough, NodeJS has been working on a Vendor Neutral ecosystem [since 2015](https://en.wikipedia.org/wiki/Node.js#Project_governance). A project Swift has been working on since the [relatively early time of 2016](https://github.com/open-swift) which has taken an official shape at [the end of 2016](https://github.com/swift-server/work-group). Less than a year after the original release. The choice is yours to make, and you should choose whatever fits your personal preference and the project requirements best. I can go more in depth on reasons you should choose Swift over another language, but that would not be objective.
Haha. I interviewed at a company where you were supposed to do a PR for something of your choosing. Okay - a little lame, but if it's simple, it's better than some stupid coding test. But, their main function was 300+ lines long, and the equivalent of the AppDelegate was 7000+ lines. I said, "In good conscience, I can't contribute to that". I just fixed their build. That was enough for me to come in for an interview, but I suppose my attitude was a red flag for them. That 7000+ line file is now 9000+.
This looks awesome!
how about keeping a strong reference to the model object? 
Hey, I'm not super familiar with SpriteKit, and I'm obviously biased as I'm one of the founders of 2Dimensions. Sooo keep that in mind when you read below. As far as I know, SpriteKit is a library. Flare is actually a full blown tool with an interface, like After Effects, but built specifically for real-time animation that can be manipulated with code (not for video and post production, though we will be supporting video export in the future). I do the design work at 2Dimensions, so I'm not the most qualified to answer specific tech questions you might have, but I can definitely pass them to the right people. You can also email us at [info@2Dimensions.com](mailto:info@2Dimensions.com) or tweet us @2Dimensions. Thanks for checking out Flare. :)
Thanks!
Am interested in your thoughts on the last part, even though I understand the reasons are subjective.
You shouldn’t start apps this way. You should use the login items in the system preferences panes. I also has a option to hide the app on launch. I don’t quite remember how to script modifications to this pref pane, but I know it’s doable.
When you think of Swift on the server, there are two immediate benefits that were there from the start. First of all, type safety. This makes your code more predictable and testable and therefore more robust. The second benefit is that it’s a compiled language. Most errors are filtered out at compile time, especially using key-path based querying and the codable protocol. Codable ensures that your types are encoded/decoded with easy. Be it to store/retreive them from a database, or simply to read/write json data. Key-path queries ensure you never compare age with a String, or email addresses with an integer. This is guaranteed by the framework and the compiler if you use these queries. Finally, Swift being a compiled language puts it right next to other frameworks performance wise, with direct access to other (C) libraries. In scripting languages you need to create a library that’s part C and part NodeJS/python/PHP/ruby for new functionalities. Swift does not. There are two main downsides right now. First of all, Swift is usually written async. Especially with Vapor. This can be a burden to write since we don’t have an ‘await’ keyword or function yet. Secondly, many of the more advanced libraries like ML, video encoding have no support yet. There are some small helpers, and you can use the C libraries, but it’s not exactly the most elegant solution.
&gt; I do know rails has been around for over a decade and node.js really took off in the last couple of years, but server-side swift has been around for quite some time too Really? - Ruby: 1995. Rails: 2005. - Javascript: 1995. NodeJS: 2009. - Swift: 2014. Vapor: 2016. One of these is not like the others. I can't speak to the *quality* of Vapor as I've never used it but if you're looking for *maturity* this is not the language and framework for you.
Consider having the XML file run an applescript that starts chat then hides its window. (or a standalone commandline program of your own that does that.)
From what I’ve read, I can’t use the login items in System Preferences because this isn’t for me, it’s for users that I’m deploying this to. The login items are protected by SIP so there’s no way I can make the app open and hide.
&gt; First of all, type safety. This makes your code more predictable and testable and therefore more robust. Yegge wrote a great article about why this doesn't really hold water. There's no one thing called "type safety". Every type system is different. Swift "is type safe", but so are languages with weaker (static) type systems, and languages with stronger type systems. If you believe using Swift's type system makes your programs "more robust" in a significant way, then why not go whole hog and use Haskell? &gt; Most errors are filtered out at compile time PL research does not bear this out. Most errors are not type errors. Programs in dynamic interpreted languages do not have twice as many errors as programs in static compiled languages. &gt; Key-path queries ensure you never compare age with a String, or email addresses with an integer. This is guaranteed by the framework and the compiler if you use these queries. Have you ever in your life seen a program fail because somebody tried to compare an email address with an integer?
A strong type system is generally called type safe. It’s not a correct terminology, but is generally understood as the same thing you call a strong type system. I’m not arguing that there are twice as many errors in interpreted languages. But for most programmers it’s easier to find and solve problems in a strict type system with a compiler bugging you. And for the sake of example, I compared an email to an integer. That does not change statement’s purpose. I tried to use arguments that are easy to reason about. Taking them out of context and purpose and changing them to a black or white scenario to justify your believes is not an ideal way to get a discussion going. I’m not trying to argue technical correctness. I’m attempting to communicate in a way so that a large portion of a public forum can immediately understand a discussion.
&gt; which allows you to add high-quality animations to your iOS/Mac apps Animations. No. That's not what I want. Features that aren't useless fluff. That's what I want.
Look at a launchAgent script that does what you want, open it up and look at the guts.
I don't know why anyone would want to use javascript unless they absolutely had to. So node isn't an option for me. And let's not forget about the massive node\_modules folder and dependancy hell you have to deal with.
I guess my current conundrum is deciding between writing my server in swift or rust. Any thoughts on that?
I don’t do global. I think it’s bad practice. I rather make them in a static struct or class. 
I won’t give you the answer since I’m on Mobile but this is really bad practice and implementation. If you have more rows, you’re making a lot of network requests over and over as the user scrolls through the table view. What I did was make a class for the cell. Then in the viewdidload of the controller, I made a background call to fetch the data for the cells. When it completed, it refreshes the table view. But then a network call gets made to download the images and update the image property of the cell model class and refresh the table. This way the network calls only happened once, when the controller loaded. No code in the cellforrow method besides assigning the cell model to the cell properties. 
Isn't a static struct the same thing? It's what I'm doing in the giant file. I'm just organizing constants in static structs inside the file. 
I usually have a file called Utilities for grouping related properties with structs or enums. Yes except you can’t accidentally use the wrong property or mistype some other variable since you would have to know the grouping it is under. As opposed to global variables not inside anything. When you write, any of the many global variables might show in the autocomplete. This is avoided using structs, enums, etc. 
I think Swift has a promising future. That said, nobody has run server-side swift through the paces. By that I mean, it's been deployed on a large application, with lots of traffic, through years of maintenance. There's going to be significantly fewer libraries to help you accomplish tasks, and much like the platform, those libraries won't be battle tested. There will be fewer people to go to when things go wrong. When it's time to transition the project to another developer, there's some hope you'll find one. Hey, this might not matter if you're dealing with a small project that in all likelihood will shut down in a year, and will never see a lot of traffic. Maybe the stimulation of working on a new platform will help you get through an otherwise mundane project, more power to you. If you want the least frustration, use an established, boring platform. I'm a fan of Python. It won't match the theoretical performance of Swift, it won't have the niceness of the type safety, but it has fewer unknowns.
Check out kingfisher- thank me later...
Great job finding the motivation to learn Swift in your downtime. The snippet of code you provided could use a lot of work. But there are plenty of lessons to learn from it. &amp;#x200B; Firstly, can you elaborate on what you mean by "I don't know how to implement it into the storyboard." Are you having trouble hooking up this \`RowTableViewController\` to the storyboard? Or are you having trouble displaying the downloaded image in the table view cell? &amp;#x200B; Secondly, you had a question about the !: &amp;#x200B; &gt;//If I remove ! this code fails? Not sure why &gt; &gt;let backgroundImage = URL(string: "[https://i.imgur.com/s5ntYKH.jpg](https://i.imgur.com/s5ntYKH.jpg)")! &amp;#x200B; The ! is necessary because \`URL(string:)\` is a failable initializer, which means it returns an optional URL object. In other words, it returns nil or some URL object. The ! unwraps the optional URL into a URL. You can learn more about optionals here: [https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#ID330](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#ID330). You get an error for not unwrapping the optional URL because the NSURLSession's \`dataTask(with:)\` expects a URL (not an optional URL).
Thanks, but I don’t know of a launchagent script that hides apps when launching.
Okay, but when Design comes back and they want a complex animation in the app, wouldn’t it be nice to have another utility to choose from? It’s not like the people making this are stopping other things from being made. 
It looks like BasicExample's FlareSwift.framework is broken. I tried importing it on my own per the Github page instructions but it keeps breaking. 
so Flare looks like a (hopefully) better version of flash that has a focus on animation and exports some kind of file that is readable by the Flare library?
That’s awesome 👏 
I have no idea what's going on here but googling for "StorageMetadata", the third hit is [this exact question on StackOverflow](https://stackoverflow.com/questions/50546796/).
I stick them in with my preferences singleton, generally. For some reason, I don't tend to have many though. 
Every programming language is designed for humans and machines. It sits right at the boundary between them. 
Literally the first hit in Google... http://lmgtfy.com/?q=macos+open+app+from+terminal+minimized
I’m sorry dude, but animations, good animations, are an intrinsic part of good UI/UX, and not useless fluff. 
SIP only protects the system, the login items _should_ be fine. What tool are you using to do your deployments?
I have’t looked into rust enough to help, I’m sorry. But go with your preference I’d say. What do you like writing more? I’ve heard good things about Rust. But ultimately your productivity and happiness as a developer is a big factor.
I think you may need to run the `BasicExample` as a target from within the `Flare-Swift.xcworkspace`, if you try running the example from its own `xcodeproj` it won't find the Framework.
Tell me more. I might learn something new. I've only spent 25 years in this industry. ;)
Thanks for the summary.
I'm doing it like this. enum Constants { enum Layout { static let margin: CGFLoat = 8 } enum Keys { static let consumerSecret = "key" } }
I use Kingfisher as well. Great way to load images async. [https://github.com/onevcat/Kingfisher](https://github.com/onevcat/Kingfisher)
I'm no expert, but shouldn't IBOutlets go only to the ViewController class that owns that particular view? There can only be one associated with it in the storyboard, anyway. I've had trouble linking subview IBOutlets and what has worked for me there is to manually add the IBOutlet line in the code and then drag from the outlet button in the code panel to the correct location on the storyboard. That often works when ctrl-dragging does not. And something I have done in a similar situation is simply put all my MapKit code into an extension of the underlying VC instead of creating a new one. That made it simpler to understand and work with without actually separating the functionality. But it's not really clear to me why your SessionController and MapView are so tightly coupled in the first place. To me it all looks like it belongs in one ViewController... but as I said, I'm no expert.
I suggest using delegate in this case, you can add a protocol MapViewDelegate in MapView.swift and make SessionViewController.swift to conform to it. // MapView.swift class MapView : UIViewController { ... // ALWAYS use 'weak' for delegate weak var delegate: MapViewDelegate? ... func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) { // delegate is the SessionViewController, we ask the SessionViewController to run the method // mapView(_ mapView: MapView, updatedWithLocations locations: [CLLocation]) with the // parameter below delegate?.mapView(self, updatedWithLocations: locations) } } protocol MapViewDelegate { func mapView(_ mapView: MapView, updatedWithLocations locations: [CLLocation]) } // SessionViewController.swift class SessionViewController : UIViewController { override func viewDidLoad() { super.viewDidLoad() mapView.delegate = self } } extension SessionViewController : MapViewDelegate { func mapView(_ mapView: MapView, updatedWithLocations locations: [CLLocation]) { // do your stuff with locations here } } 
Did you delete your post from yesterday, so you could post it again today ?
No, I never posted it in this subreddits before! You may saw my post in r/iOSProgramming/.
1. The code in your screenshot is ObjC 2. You declared the variable items incorrectly. It would need to be (I'm making some assumptions about the type you're looking to work with) something like this: NSArray *items = ...; Once you have a valid variable declaration, that will go away. 
another blog spammer
1. Did you mean to submit this to /r/ObjectiveC? 2. you have `_feedItems *items = _feedItems[indexPath.row];` what you want is `FeedItem *items = _feedItems[indexPath.row];` _feedItems is an instance of the class FeedItem, it is not the class itself.
Oh yeah actually i did my bad ohh thanks man i will try and hope that it will work 
The program itself asks me if i meant feeditems and gives me the fix option 
Ohh okay thankyou 
The obsession with over-animating everything needs to die in a fire.
Just out of curiosity, why are you learning iOS and starting with ObjectiveC? You might have an easier/better time learning Swift.
I need to download an rss feed from an website for live content rendering and objective c was the only way i found 
Give me the code for objective c and I’ll show you if it’s not too long how to do it in Swift 
I made the this a link to the tutorial i used 
Yeah yeah, I saw that, finding an exact tutorial about Wordpress + RSS in swift might be a bit hard, but finish it in objective c and you'll see it isn't all too hard to migrate it to swift - you can even use this site to help you out bits by bits - [https://objectivec2swift.com](https://objectivec2swift.com) Ask around in the sub if you get stuck.
i will thank you so much for the help 
Session Controller should be a UIViewController, MapKit should be a UIView contained inside SessionController. @IBOutlet weak var mapView: MKMapView! Add a UIView to your SessionController.storyboard or .xib make the UIView a MKMapView and youre good to go.
Not really, the over obsession with using third party libraries needs to die in a fire, useful for a Junior but makes you dependent and never lets you learn anything useful... you know, except being dependent on third party stuff.
use Kingfisher, or implement the same methods you're using in cellForRow, but don't forget the most important part and that is to give each other their proper responsibility, your filling your VC with unneeded logic. cellForRow should be only 4 lines. The declaration of the cell \~ dequequeReusable The data it needs to feed \~ let data = myData\[indexPath.row\] The cell taking said data and configuring the cell inside it's own class \~ configureCell(with: data) and the return of said cell \~ return cell
`// VC Code` `guard let cell = tableView.dequeueReusableCell(withIdentifier: "labelCell", for: indexPath) as? LabelCell else {` `let data = rows[indexPath.row]` `cell.configureCell(with: data)` `return cell` `}` `return UITableViewCell()` `//cell code` `func configureCell(with data: LabelData) {` `guard let url = URL(string: "https://i.imgur.com/s5ntYKH.jpg") else { //Why this line? It's not good to force unwrap ANYTHING, learn to use Guard, or If let.` `return` `}` `downloadImage(with: url)` `cell.textLabel?.text = data.text` `cell.imageView.image = UIImage(named: row.image) // Pretty sure this needs to be in download image,` `}` `func downloadImage(with: URL) {` `//creating session` `let session = URLSession(configuration: .default)` `let downloadTask = session.dataTask(with: backgroundImage) { (data, response, error) in` `if let e = error {` `//error` `print("Error downloading image: \(e)")` `} else {` `// Checking for response` `if let res = response as? HTTPURLResponse {` `print("Downloaded image with response code \(res.statusCode)")` `if let imageData = data {` `// Finally convert that Data into an image and do what you wish with it.` `let image = UIImage(data: imageData)` `} else {` `print("Couldn't get image: Image is nil")` `}` `} else {` `print("Couldn't get response code for some reason")` `}` `}` `}` `}`
No, it's not necessary, don't teach people to force unwrap stuff, because you do it, doesn't mean it's correct.
Hi this looks very interesting! Are you familiar with [Keyshape](https://www.keyshapeapp.com/)? How would you say 2Dimensions compares to Keyshape+Lottie?
&gt; But i wanted to split the class up into separate objects. This is where i came into problems. Doctor, it hurts when I do this! What is your goal here? You have a working program, and then you changed something to make it not work. So the easy answer is: don't do that.
I'm not familiar with it, but it looks like it's vector only. Flare also supports images, meshes, and mesh deformations (though this isn't supported in the current Swift alpha runtime, but we're working on it for the next update). We also have skeletal animation (bones), inverse kinematics, constraints, and more. We started as a 2D gaming software and evolved from there, so I think we have some very powerful features that are more common in the gaming world and less common in UI software. Watch our announcement for image meshes here: [https://www.youtube.com/watch?v=XtG4Wa3gIf8](https://www.youtube.com/watch?v=XtG4Wa3gIf8) and check out all the features at [https://www.2Dimensions.com/about-flare](https://www.2Dimensions.com/about-flare) 
Yep, that sums it up about right. :)
That's not true at all. You can have multiple \`UIView\`s that have \`IBOutlet\`s you can connect. Also there are associated objects that you can drag next to the \`UIViewController\` in the scene and those can be connected with \`IBOutlet\`s and \`IBAction\`s as well. I made heavy use of that for a while in my Storyboard / Objective-C days. I simply put all kinds of helper classes like \`UITableViewDelegate\` implementations or custom stuff like a \`FormChecker\` in there and they would live and die together with the \`UIViewController\` which itself would be really thin. Regrettably Storyboards and that approach worked much better with Objective-C, I kind of miss it.
I always get downvoted when I comment on how people need to stop using Cocoapods, or at least reduce how much you use. Even as a Jr dev, you aren’t doing yourself any favours. The worst is when there is an OS change and your code breaks, or a 3rd party breaks, then your progress is blocked until all the problem code gets fixed, if ever.
&gt;I always get downvoted when I comment on how people need to stop using Cocoapods, or at least reduce how much you use. Even as a Jr dev, you aren’t doing yourself any favours. The worst is when there is an OS change and your code breaks, or a 3rd party breaks, then your progress is blocked until all the problem code gets fixed, if ever. We don't need to stop using Cocoapods, it's there for obvious reasons, I still use Alamofire for networking even though I can use the native just because it's simple (but I could make the switch whenever I want because I know how to) there's other reasons to use Cocoapods as well, facebook, firebase, Crashlytics, analytics, so many good uses for analytics. The bad uses are when you become lazy and get told to implement x animation and the first thing you do is go to google and look for a GitHub repo, instead of trying to learn and doing it with CoreGraphics, the problem is when you get told to do X thing that can be easily done natively as well.
 This code in the sceneDidLoad may also be relevant self.anchorPoint = CGPoint(x: 0, y: 0) self.backgroundColor = .black self.scaleMode = .aspectFill
As long as the animations make physical sense, there’s nothing wrong with them. I agree that some animations can feel superfluous but in general, the lack of animations is a much more serious problem than a gratuity of animations.
Both the language frameworks are bleeding edge Swift is backed by a company which is famous for being anticompetitive and which has little to gain from swift adoption on the server. Swift has no unique advantages in the server environment, where there are many languages that are as good or better in many regards. Now don't get me wrong, I write swift for a living, and its a really nice language, but I can't really understand why anyone outside the mac/iOS ecosystem would want to use it server side. I certainly like it better than ruby and javascript, but its at a huge maturity/ecosystem disadvantage. And the things I like about swift as compared to ruby/js are present in a bunch of other languages with better server side stories(scala, kotlin, haskell, ocaml, closure, elixir, go, F#, etc). Kotlin is probably the most comparable. Haven't actually used it, but my understanding is that you'd be hard pressed to find many areas in which Kotlin doesn't outclass Swift on the server.
Target-action is a common paradigm in iOS. Basically, you're telling the recognizer to send a message to the target when an event is recognized. A Selector is a unique identifier for a method on a particular target. It allows the object sending the message to be able to find the method to send at runtime. Here's a good article on the subject: https://developer.apple.com/library/archive/documentation/General/Conceptual/DevPedia-CocoaCore/Selector.html
It's very much like when you go to the gym and do a new exercise that uses muscles you haven't needed before. You're, in a somewhat literal sense, building new pathways and connections in your brain, and until they're in place you're going to be frustrated by your brain not responding as well as you're used to. The good news is that brains can do that! If you manage to stick with it, you'll almost certainly find yourself moving past the stuff that you get stuck on now, and into much more interesting stuff. Once you get the basics solid, it's a lot easier to maintain motivation, since you can actually do things. The bad news is that there's a near-infinite supply of new ideas to struggle with, so it can be helpful to reorient your expectations towards continual learning. I've been programming for almost 20 years now and I still have to learn new stuff constantly. My rule of thumb, from myself, and from watching people I've helped teach, is that it takes about a year for most people to stop feeling super wobbly.
what are you lost in? are you not understanding the concepts are not remembering specific method names, syntax, etc? if you don't remember the latter, that's normal. you can easily always reference that stuff. if you can't grasp the concepts, then you have a problem. focus on learning the concepts and available functionality. like flow control, mvp, optionals, etc. don't get tied up memorizing specific steps to duplicating a tutorial you saw on youtube. that's not learning.
Am in a similar situation. The things I’ve gotten are through repetition. So, those big, expansive courses that purport to teach you everything aren’t the best because you spend 5 minutes on a really complicated concept once, and then you don’t see that concept again for 4 weeks. I’ve found that getting courses on Udemy that focus on one topic, say TableViews (one of the most important concepts) are SUPER helpful. Because now, even if everything else is confusing, at least I know how tableviews work. Additionally, and this is where I started making the most progress... focusIng on learning the language itself is really important. Not building with the language, but just learning Swift. Here’s a great YouTube tutorial on how Swift itself actually works: https://m.youtube.com/playlist?list=PLiam006vv5ww61tERJunmIWS6S1dMW6oQ So, in conclusion, forget building for now. Learn the language’s ins and outs first. Then go back and learn SPECIFIC features. After doing that an Angels Yu type course is fantastic because you get to put all this stuff together. That’s what I’ve found in my studies and I related to your post A LOT.
Ah gotcha, thanks for this. So the function is passed in as a parameter which I believe to understand, but how is the sender assumed to be the recognizer itself? Or is it because it's written in the initialization (the part where I pointed the carrot) that the recognizer knows which parameter it belongs to once the function is called?
Been there... what worked for me: if you don’t understand something, just move on for now. If it’s important (like, I dunno... while loops. I got stuck on those in the beggining) it will appear again sooner or later and it will most likely “click” by then. “Failure” is essential, especially in programming, I’d say. You will ALWAYS get stuck on something - frankly, that’s the beauty of programming. 😉 Just push through it - that feeling when you finally crack something that’s been unsolvable for weeks is priceless!!!!!! 😎
Yeah, as someone quite junior I get a kick out of doing this stuff using the native tools. 3rd party reliance can come later.
You just have to keep doing it, eventually you’ll see patterns and it will click more. Start doing the hacking with swift projects. When I first start learning a language I just go through as many tutorials as possible to have a better high level over view, then try and make my own project and really zone in on specific things. 
I recommend instead of watching videos or buying courses, do exercises in swift and build something. Download the free swift book by Apple and do ALL of the exercises they give you.
You're not passing the function in as a parameter, you're passing in a _unique identifier_ of that method. That's what a Selector is. You're also passing in a target (`self` in this case). The way target action works is you tell some object "Alright, you receive some event. When that happens, call this method (your Selector) on this object (`self`). We know that the gesture recognizer is the sender because we just told it to send me this message. Maybe I'm not understanding your question, but hopefully that helps. 
That's how they chose to write it. It's a common idiom. When you read the UIGestureRecognizer docs, it says that's the type of the `sender` parameter. I suppose it doesn't *technically* say that it will call the method with *this* UIGestureRecognizer, but you can read between the lines.
&gt; The first language I have really attempted to learn &gt; randomize the cards and create a new game button I've been writing software for decades, and am fluent in a dozen programming languages. Swift is one of the most complex languages I've ever used. I would highly recommend starting out with something simpler. (Some people can learn Swift first -- and I'm sure they're going to show up here and try to call me a loser and argue that it's a great first language because they survived it. I have not seen a great success rate with Swift among first-time programmers, though.) UIKit isn't exactly a walk in the park, either. These are professional tools and they have plenty of quirks because they're made for professionals, not learners. A Mack truck may be the best way to move cargo, if you're in the business of moving cargo, but it's not the best way to learn to drive. You're trying to learn how to program, *and* learn the Swift programming language, *and* learn iOS application development -- all at the same time. Any one of these is an ambitious (but reasonable) goal. Don't try to do them all at the same time. Even the professionals didn't start out that way. This is like saying "I'm trying to run an IronMan triathlon, and it's REALLY HARD! BTW, this is the first exercise I've attempted." Well, yeah, no kidding.
Next level. Huh. How do you know what level my code is on right now?
Have a timer inside the `AppDelegate`, that when triggered, loops through all `childWindows`/`sheets` of [NSWindow](https://developer.apple.com/documentation/appkit/nswindow) and invokes `endSheet`/`resignMain`/`orderOut`. IIRC.
It doesn't matter. These tips will bring it to the next level (n+1). ;)
Uhhhh. Wat? I understood 0% of that. :) &amp;#x200B;
Try to use Carthage, it compiles library in framework, and you can use it after Swift version upgrade. Every Carthage dependency can build with own version of Swift.
Before adding library to your project, try to understand how it works, check the source code. Using third-party library doesn't mean you don't have to know how it works.
Post some more of your code, maybe we can come up with a better advice that way.
This is my code right now: &amp;#x200B; `//` `// InitCUViewController.swift` `// CaughtUp for macOS` `//` `// Created by Griffin Bauer on 3/12/19.` `// Copyright © 2019 Griffin Bauer. All rights reserved.` `//` `import Cocoa` `extension NSViewController {` `func removeInitFromScreen() {` `}` `}` `class InitCUViewController: NSViewController, NSWindowDelegate {` `override func viewDidAppear() {` `super.viewDidAppear()` `view.window?.delegate = self` `sleep(2)` `// Window reference` `var window: NSWindow?` `// After window is displayed, get the handle to it` `window = self.view.window!` `// To dismiss it try` `window?.performClose(nil) // nil or empty value` `}` `override func viewDidLoad() {` `super.viewDidLoad()` `}` `}` &amp;#x200B;
The sleep(2) blocks the main thread for 2 seconds. &amp;#x200B; For an async sleep, try dispatch\_after, here: [https://stackoverflow.com/questions/24034544/dispatch-after-gcd-in-swift/24318861#24318861](https://stackoverflow.com/questions/24034544/dispatch-after-gcd-in-swift/24318861#24318861)
So i need to remove sleep(2) and replace it with dispatch_after?
Exactly.
Oh ok awesome! This all helps greatly. I appreciate it, and thanks for bearing with me. I guess the source of confusion was just how the word `sender` comes into play, but I figure now that `sender` is just part of the selector business. For example, I can pass a method *(and I see what you mean about it being an identifier)*, and that method will have access to `sender`. It makes sense to me *why* that would happen, but I was just wondering exactly how it knows (and if the word sender is reserved). Apologies if that doesn't make much sense, but I think it's slowly starting to click. I'm pretty new, so once in a while I'll run into one of these unpopular topics that aren't discussed much, and I'm accustomed to most things being explicitly created and passed. I try reading the documentation and am slowly getting used to its voice. 🙏🏻
Hmm gotcha. This is all totally making sense and I def appreciate it. Sometimes I have a hard time getting past how certain things just happen automatically, at least with something that works on the same level of the rest of our code like this. Not diving deep into how the app runs every little bit or anything like that.
It worked! Thanks! I guess it was just the `sleep(2)` thing I did! :) 
Congrats. YW
Using \`sender\` just ensures that your action method conforms to the method signature required by UIGestureRecognizer, as nextnextstep mentions below. Per the docs: &gt;The action methods invoked must conform to one of the following signatures: &gt; &gt;@IBAction func myActionMethod() &gt; &gt;@IBAction func myActionMethod(\_ sender: UIGestureRecognizer) You can check out the full documentation here: [https://developer.apple.com/documentation/uikit/uigesturerecognizer](https://developer.apple.com/documentation/uikit/uigesturerecognizer) &amp;#x200B;
Actually, now I need it to open another View Controller once it closes. Any idea how to do that? &amp;#x200B;
Actually, now I need it to open another View Controller once it closes. Any idea how to do that?
&gt;"but shouldn't IBOutlets go only to the ViewController class that owns that particular view". Agree with this. Less damage done while refactoring, and easier to troubleshoot. IMHO, never access/mutate deep into a hierarchy of nested views/instances. Only access the nearest neighbor.
Perhaps something like this: &amp;#x200B; In the `AppDelegate` install an observer for window close events. When the notification gets triggered, then create an instance of your `NSViewController` and present it in a `NSWindow`.
How do I do that? &amp;#x200B;
For installing the observer, [https://stackoverflow.com/a/38706094/78336](https://stackoverflow.com/a/38706094/78336) &amp;#x200B; &amp;#x200B;
Where do I put it in the ViewController swift file?
What free book is this? Can you include a link?
A quick google search of ‘Apple swift book’ would’ve done the job but here ya go https://itunes.apple.com/us/book/the-swift-programming-language-swift-4-2/id881256329?mt=11
I wish I’d known this before starting out with Swift.
Install the observer inside the `AppDelegate.awakeFromNib()`
There are so many resources out there that I wanted to make sure I was finding the specific one you were suggesting. Thank you for posting.
Where is that? Could you give me just a detailed step by step on how to do this so I can understand? &amp;#x200B; &amp;#x200B;
Instead of awakeFromNib, take a look at this: [http://www.rockhoppertech.com/blog/swift-script-to-create-a-cocoa-window/](http://www.rockhoppertech.com/blog/swift-script-to-create-a-cocoa-window/)
This. I hate learning from some courser. Doesn’t matter if written or videos. I feel like even if there’s something interesting i forget it in 15 minutes after watching it. What I usually do (I actually do it know with swift) is to get some idea for an app or whatever and do it step by step. Don’t know how to make a button? I google it, read documentation and so on. I learned like this when I began learning software development and I still learn like this now (8 years in professional dev). This way not only you learn by doing, learn things that you actually need, but also there is some actual value. This way not so long ago I published my first iOS app to the App Store: Timestamp Notes. It solves my problem (quick baby logbook), is a nice playground for learning and I can show it to people. 
Totally agree with this. You're jumping in the deep end. I don't think swift itself is necessarily that hard of a language to learn on it's own if you were just trying to do the basic exercises you might find in an Intro to Programming class taught in C++, but when you're combining it with UI design and mobile development you're really biting off a lot at once without any prior knowledge or experience. It's fun to build complete tangible things, but when you take a woodshop class they don't start you out with the task of building a house.
Will do. Thanks!!
Message me about questions you have if you want.
What would you suggest is an easier language to start with? I know a lot of people love python (which I tend to dislike). I came from C style languages and I certainly think swift is much easier to understand 
Swift is still a good language to start with. Just skip the iOS part for now. Focus on purely swift using Swift Playgrounds for example.
You need `self.performSegue...`
DispatchQueue.main.async is a closure that captures the values that are in it and may jump threads. In this case, swift requires that you manually opt in to using variables and functions declared on your current class. In this case, performSegue is a function on your controller, so the compiler is telling you that you need to put a 'self.' before performSegue. This helps you know when values are being captured and serves as a hint to avoid retain cycles. 
Like u/nextnextstep said, if you're just learning to program you might want to start simpler. I've been programming for a while and learning iOS development had a huge learning curve in the beginning. If you want to learn how to program with Swift, I'd recommend going over data structures and algorithms in swift. They're foundational topics of computer science, and you can do a lot of programming to get your head around using the language and the way programmers solve problems. You could do it in playgrounds to watch how your code changes. Next, I'd recommend writing some code as a console application, compiling it, and learning how to use the debugger to step through code and inspecting variables. Optionally, learn a bit about version control, even if you stick to just using the GUI in Xcode. You should wait on trying to make a full iOS or Mac Cocoa application.
That does not work. it closes the window (like it should) but does not show the view controller
I’m definitely not going to give up. I have quit trying to learn HTML CSS and python I’m not giving up on Swift 
Thanks for the tips and direction!
Thanks! I'm sure if can use some work and still learning :). What I mean by, *I don't know how to implement it into the storyboard* is I don't know how to render the image on the storyboard. Thank you for the second part on //If I remove ! this code fails? Not sure why
I have implemented reverse mode autodifferentiation and accelerated tensor operations as a Swift package. It allows me to compute derivatives with respect to any parameter of long equations automatically by providing the derivatives of low level operations such as addition, subtraction, etc. Using this system I can implement and train neural networks easily by just specifying the forward pass. So far I've implemented generative adversarial networks and recurrent neural networks based on this framework and I'm working on getting convolutions and GPU acceleration implemented. [I've put the whole thing on GitHub if someone is interested.[(https://github.com/palle-k/DL4S)
That's an unrelate issue and I'm not sure how to resolve it. I just wanted you to know that it's not the `self` bit of it that's causing the view controller not to show. Adding `self` in this case is a requirement of the compiler and doesn't affect how your application will function once it's actually running. 
You'll do what you set your mind to but man the stuff you gave up on was a lot less complex than what you're diving into now. If you don't understand any coding principals at least the other languages you tried would be easier to pick up via something like code academy.
I’m going to take the Apple Books on Intro to App Dev and see how that goes 
Try self.performsefue... where the sender is also self rather than nil
I’ll try to send you the project when I can since I made it for an interview. 
Someone else in here had a good suggestion. Start with Swift, maybe through Playgrounds if you have an iPad. Learn the language and then once you comfortably know the language, learn the xcode environment. Trying to do both at the same time could easily be overwhelming.
I’m going to take the Apple Books on Intro to App Dev and see how that goes 
The image is not rending on the storyboard because you are downloading the image and then doing nothing with it. After this line of code: // Finally convert that Data into an image and do what you wish with it. let image = UIImage(data: imageData) You can add this: cell.imageView?.image = image That will set the cell's image view's image to the downloaded image.
Thanks! Have some internet points! 
First off, thank you! This helped! Second, this is terrible. The performance is terrible...which is probably no surprise to anyone here lol. However, I've learned some things tonight. I'm going to look more into `SDWebImage`. Thanks again! 
My understanding is that you are waiting to download all the documents before presenting the fetched content. Instead of using \`firestore.collection("foo").document(id).addSnapshotListener\`, why not use \`firestore.collection("foo").document(id).getDocument(completion:)\`? This should perform the task of downloading the content without firing the completion block multiple times (like with the snapshot listener). &amp;#x200B; If the above solution does not work, you can try something like this: ``` for id in references { myDispatchGroup.enter() var didLeave = false firestore.collection("foo").document(id).addSnapshotListener { (snapshot, error) in defer { // Do not leave the group again if we already left the group for this document. if didLeave { return } didLeave = true self.myDispatchGroup.leave() } ``` The above code block assumes that the snapshot listener's closure is executed on the same thread as the myDispatchGroup.enter() call.
Sorry in advance for formatting... I'm on mobile. When you print this out it prints as a number because you are using as! which force casts the array index to Int. Below that though, the indices aren't being cast so are still optional. Arrays don't support subscription with optional parameters. There are a couple ways to solve: Iterate using ints instead of elements: for i in 0..&lt;nuns.count { } Then you can get a value with just nums[i]. Alternatively, you can unwrap the value of the optional indexes with 'if let' if let num1 = nums.indexOf(i), let num2 = nums.indexOf(n) { // Nums are not optional within these braces } 
I'm not going to argue with you, but I do want to make a clarification. Swift itself is not an incredibly complicated language. A standalone swift app (not iOS) with some print statements will be a bit more work than python, sure, but probably about the same as a java program. That being said, learning swift is almost always linked with iOS development, which is a whole different beast, and is even decently difficult for an experienced programmer to learn for the first time. I'd probably still suggest doing something like python though, there's a lot more first time programmer" information for python than there is for non-iOS Swift.
If you've experienced programming before, iOS is complex, but it's not that bad. Picking up the language itself isn't going to be too difficult depending on your skill level. Picking up the iOS development framework is the hard part, and if you want to develop mobile apps, you're going to have to learn it at some point. If you're trying to learn a new language without learning how to develop mobile, python is always a great choice, even though you said you don't like it. You could also learn javascript or typescript or another front-end language.
I skimmed through the beginning of this... It looks like something that would be good for someone who can write some simple swift but doesn't really understand computer science... https://classroom.udacity.com/courses/ud1011
index(of:) returns an optional. swift is saying that if index(of:) returns nil your code will fault. &amp;#x200B; also, that method is deprecated. [https://developer.apple.com/documentation/swift/array](https://developer.apple.com/documentation/swift/array)
It really just depends on the app that you’re building. Storing all of your globals in one place makes them easy to access and prevents you from accidentally reinventing the wheel in three different class files because you forgot that you already set/calculated/built [thing] somewhere else. On the flip side, it’s nice to have organized code. Even if it makes accessing items that live in other classes pain in the arse.
The error is showing you that you are assigning an **option Int** to an **Int** variable. An **optional Int** is a different type from an **int**. A quick fix is to force unwrap the **Int**, as shown below: You can learn more about optional's at this [site](https://www.hackingwithswift.com/100/12) func twoSum(_ nums: [Int], _ target: Int) -&gt; [Int] { var result:[Int] = [] for n in nums { for i in nums { if(n + i == target &amp;&amp; n != i) { print("\(nums.index(of: n)!)") result = [nums.index(of: n)!, nums.index(of: i)!] break } } break } return result }
Thank you! This does make sense. I think once I really have my head wrapped around type stuff this language will really start to open up for me.
Gonna chime in and say Swift is not a great first language, imho. Python is a much. much better fit, unless your primary goal is to make iOS apps.
Im trying to get good enough to land a dev job, i feel like im making progress but yet i dont :(
Thank you and everybody else who answered! Was able to refactor, clean up code a bit and get it working. This was my first LeetCode in Swift! func twoSum(_ nums: [Int], _ target: Int) -&gt; [Int] { var result:[Int] = [] for n in 0..&lt;nums.count { for i in 0..&lt;nums.count { if nums[n] + nums[i] == target &amp;&amp; n != i { result = [n, i] return result } } } result.sort(by: &lt;) return result }
Going to add to this as well. If you are trying to learn programming I would start with a weakly typed language like Python or even JavaScript. Once you are fluent in those kinds of languages, add typing with Java / Obj-C / Swift. If you absolutely \*have\* to have your first experience be a mobile app, maybe look at something like React Native. Swift is an incredibly complex language with a lot of rough edges, and despite Apple positioning it as a language for beginners it just isn't that.
In swift optionals provide a lot of power and are really a core part of the language. I would strongly recommend you read the section in Apple’s Swift Programming Language book on optionals for a more complete understanding on what purpose they serve, and how you can get a value out of them, in particular, `guard let` is a really powerful tool. I’ll try to give you a quick explanation on what exactly is causing your issue here though: In Swift, designating a variable as optional means that the value can be either a value within that type, or `nil`. Nil is an empty value, and it doesn’t have a type it isn’t a part of ‘`Int` or `String` or any other type, it’s just nil. This means that an `Int?` can really either be an `Int` or `nil`. So `Int?` and `Int` are different types. This is cool, because it means in functions that may not return a value, you can instead return an optional, and thus greatly simplify some error handling you may otherwise have to do. Swift provides a lot of control structures and language mechanisms that make unwrapping optionals easy, and you’ll get more comfortable with these as you write more Swift code. The reason that you’re running in to this issue, is because you’re trying to use an `Int?` as an argument for a function that is expecting an `Int`. Since the optional could potentially hold `nil`, the Swift compiler won’t let you do this. You have to unwrap your optional value before trying to use it there, because the function you’re using doesn’t know how to handle the potential `nil`. DM me if you’d like more info, I was trying to keep this concise. 
They deleted it for relevancy. 
Result should be a tuple `(Int, Int)` regardless. 
Protip: if you have to use ! you are doing something wrong. They used that symbol for a reason. 
&gt; Swift itself is not an incredibly complicated language. "Swift is a complicated language." -- Chris Lattner, 2017. When you say you think it's not complicated, what's your metric? What are you comparing it to? What do you mean by that statement? C++ used to be the classic big-and-complex language. Depending on exactly how you count, it has around 100 reserved words, and the language reference is around 1000 pages. (Oof.) Swift has around 100 reserved words, and the language reference is over 1000 pages. C++ has been piling on complexity for 30 years longer, and Swift has already caught up -- and they're planning to add a new concurrency model next. I struggle to think what programming language would be considered more complicated. There's only a couple axes available. On the semantic axis, you can end up with something like Scala, whose type system is notoriously complex. On the syntactic axis, you can end up with something like Perl, which is so freeform it's hard to even define what a "reserved word" is. That's about it. Remember, "simple/complex" is completely different than "easy/difficult (for programmers of other languages)". Languages like Erlang or Factor or Scheme are often considered *difficult* by programmers whose primary experience is with languages in the C++ family, but those languages are quite simple. For people new to programming, every language is equally foreign, so similarity to C++ gets you nothing.
I’d like to add which a few people aren’t mentioning. I’d like to preface this by saying I’m not book smart. I hate reading through textbooks and online resources if it doesn’t relate to what I want to know. And that’s the whole point to learning swift and subsequently iOS development: it has to relate to what you want to make. Get an idea for an app you want to make. It doesn’t have to be original or ground breaking, it can even be already done but something you think you may be able to improve on. It might be even a carbon copy. What matters is you have an app idea. This will push you to learn the concepts and be able to apply it immediately rather than for example: learning networking and not using until months down the line when you’ve forgotten it. Strike when the irons hot! Say you’re making an app and you’re gonna put a table view with the information you want to put in. Go learn online or in books about it. The thought of it being immediately applicable will inspire to push past the boring stuff so you won’t lose motivation as it’s a step to something you want to build as opposed to just knowing for the sake of knowing. Learn and apply via something you want rather than an abstract exercise about Timmy’s school needing an app which has tableviews about the school pta meeting. The thought that you or possible other people will use will be also driving force into properly learning more and more dependant on how complex you want it to be. There are more ways to learn which people have mentioned but this was the main inspiration and thing that kept me motivated. Best of luck, mate. If I got this then i know you can too! 
IMHO, doing C/Java style exercises in Swift is much harder and don’t follow best Swift practices. Just look at codility and their idiotic forced use of ‘inout’
You could use a dispatch group to close the window and then use the notify callback mechanism to instantiate a new VC when it's called. Notify method is called once the dispatch group has finished running it's tasks (in this case your one task that closes the window).
One thing I think is way too seldom mentioned when questions like this come up: Learn how to research problems you face. Wanna know how to do X? Go google that shit until you found a few approaches, then try them. Don't understand an error message? Google it (and variations, parts of that message) and find an answer. Don't sit around following one stupid step-by-step tutorial after the other that will teach you almost nothing in the long run. Try to build you own ideas (or just any old idea, doesn't matter really) and use blog posts, stack overflow and even tutorials as reference when you get stuck somewhere. Also there is no "cheating" on this. You'll spend years googling the same shit, rereading the same docs and digging through other peoples code to figure out how they did sonething before you start being able to do these things without reference. That's just how it works.
Look into it but don't use it. Research how to properly load and cache images yourself, so you actually understand what is happening and will be able to solve different-but-similar problems in the future.
For a static string URL it's perfectly fine to force unwrap 👌
just a little update: &amp;#x200B; I reorganized the way API calls were handled and made them optional for the Apps startup. Apple accepted it to the AppStore. &amp;#x200B; So thank you for your advice, it was spot on.
Yeah don't just force things to work by using `!` please! It's not very swift-like at all. There are very few situations where it's acceptable.
`nums.index(of: n)` and `nums.index(of: i)` return `Int?` values and **result** is an array of non-optional. Hence, that error. *Now, if you are okay let's review your code.* • Try to avoid force-unwrap, like you did on `print(nums.index(of: n) as! Int)`. It is a common place for crashes. Use `guard` or `if let` to unwrap optionals. e.g. guard let idn = nums.index(of: n), let idi = nums.index(of: i) else { continue } print(idn) result = [idn, idi] break • As the function only returns two indices value, it would be better to use tuple. like, func twoSum(_ nums: [Int], _ target: Int) -&gt; (Int, Int) { But what if there are no indices found which sums up the target, so array is good. • This method has a time complexity of O(n^2). There is a better way which involves `array.contains` function of swift and has a complexity of O(n). func twoSum(_ nums: [Int], _ target: Int) -&gt; [Int] { for n in 0..&lt;nums.count { let firstNumber = nums[n] let secondNumber = target - firstNumber guard nums.contains(secondNumber) else { continue } if let i = nums.index(of: secondNumber), n != i { return [n, i] } } return [] } Let me know if you have any further queries.
What if there is no indices found that sums up the target. How do you fit tuple in that case?
While I understand your problem and appreciate the solutions given already, let me try to give you another direction: Instead of using index(of:), try running the for loops on nums.enumerated(). That way, you get a tuple (index, n) or (index, i) respectively in each iteration and don’t have to look up the indices for the values at the end (which is also more expensive). Bonus: You don‘t have to deal with optionals. 😉 
Hacking with swift be the tight fit for you
i am going to recommend 100DaysOfSwift by Paul Hudson. It’s free but worth so much for me. I am now on day 41 and learned a lot, and more importantly I have built up confidence with swift, iOS and Xcode. 
Select your app's scheme in the top left corner, then select *Edit scheme...* &lt; *Run* &lt; *Info* and make sure that your build configuration is set to *Debug Development*
i did and now i get this error: failed to initiate service connection to simulator
Try cleaning and re building your project. Restart Xcode too if needed
tried that to did not work 
Actually spent a little time on async loading for images. You can check out my project as well if you need another example. It implements prefetching to get further rows and I've tried to break it all up into their own components and layers. No 3rd party libraries here. &amp;#x200B; [https://github.com/markhmwong/SmoothScrolling](https://github.com/markhmwong/SmoothScrolling)
Apart from your advice `nums.enumerated().forEach { i, num in /* code here */ }` would be an easier and more swiftly way to do it. Don’t think I wrote one of those old-school for-loops in the last few years anymore in any kind of language.
An optional of a tuple is probably the best return type: (Int, Int)?
The array as stated here wouldn't help there either. Make the tuple (Int, Int)?. 
&gt; Result should be a tuple (Int, Int) regardless. Since it's a LeetCode problem and they specify the function signature, `result` should be whatever type they tell you to return. 
&gt; This method has a time complexity of O(n2). There is a better way which involves array.contains function of swift and has a complexity of O(n). The method you give following that is still O(n^2) because `Array.contains` is O(n) and is potentially run for each of the n values in `nums` (well, n-1, but that doesn't really matter). To see this in action take this slight modification of your function: func twoSum(_ nums: [Int], _ target: Int) -&gt; [Int] { var counter = 0 let cNums = nums.map { n in return { (i: Int) -&gt; Bool in counter += 1; print("Comparison number \(counter)"); return i == n } } for n in 0..&lt;nums.count { let firstNumber = nums[n] let secondNumber = target - firstNumber guard cNums.contains(where: { $0(secondNumber) }) else { continue } if let i = nums.index(of: secondNumber), n != i { return [n, i] } } return [] } Now run it on an input where the solution is at the end of nums: twoSum([11,15,2,7], 9) This prints: Comparison number 1 Comparison number 2 Comparison number 3 Comparison number 4 Comparison number 5 Comparison number 6 Comparison number 7 Comparison number 8 Comparison number 9 Comparison number 10 Comparison number 11 Comparison number 12 Or, for a more illustrative example, run it thusly and see what it counts to: twoSumA((Array(100..&lt;200) + [2,7]), 9) For O(n), you'd want to do something like: func twoSumA(_ nums: [Int], _ target: Int) -&gt; [Int] { let targets = Dictionary(uniqueKeysWithValues: zip(nums.map{ target - $0 },0...)) for (idx,n) in nums.enumerated() { if let targetIdx = targets[n] { return [idx, targetIdx] } } return [] } Though you'd want to use something a little different for constructing `targets` if you think you might have duplicate keys in the dataset.
There are tradeoffs to consider when using `forEach` over `for-in` loops. On the plus side, `forEach` can be chained in a series of function calls like `blah.filter {…}.forEach {…}` and it looks a bit more pleasant (at least to my eyes). But there are disadvantages to using it as well; you lose the ability to early exit. From Apple's Swift documentation: &gt; Using the forEach method is distinct from a for-in loop in two important ways: &gt; 1. You cannot use a break or continue statement to exit the current call of the body closure or skip subsequent calls. &gt; 2. Using the return statement in the body closure will exit only from the current call to body, not from any outer scope, and won’t skip subsequent calls.
Good point. I never actually did that myself, but coming from knowing C/C++, Java, and Python, and a little JS I felt like learning swift syntax was pretty easy and the difficult stuff to learn for me is mobile development, MVC, and UI development. I couldn't imagine trying to learn all of that from scratch. Now that you say it though, I'm not sure how I would do stdio in swift.
A much simpler, faster, and generic way of doing this: extension Collection where Element: BinaryInteger { /// Tests to see if two elements sum up to the target value. /// If so, return them. If not, return nil func twoSum(target: Element) -&gt; (Element, Element)? { var tested: Set&lt;Element&gt; = [] // test each element for test in self { // calculate matching value let match = target - test // see if matching value has already been tested if tested.contains(match) { // we already saw the match so return the test and the match return (test, match) } // add the test value to the tested set tested.insert(test) } // no matches found return nil } } This will, at most, go through all the values once. At best it will end after the first two values. Thus it has O(n) complexity. Your algorithm has O(n^2) complexity, considerably slower on average for large data sets.
I used a dictionary because the problem specification is to return the indices in the supplied array of the elements that sum to the target rather than the elements themselves. There are a few ways you could do this with a set, but none are as straightforward as just using the dictionary, and OP is just 3 days into Swift.
True, but \`enumerated()\` also works with \`first(where: \` which is just as efficient (at least on paper, didn't benchmark) as doing a more risky manual \`for\` with indexes.
By your own argument, Swift being complex has nothing to do with learning difficulty then?
I don't think Swift is a particularly hard programming language. It has advanced concepts, but like most languages, you can avoid them unless you need them. However, *app development* is hard. Learning Cocoa Touch even if you're already fluent in Swift would be difficult. Doing both at the same time is not easy.
Ahh, I didn't catch that it was the indices that were to be returned and not the values. Obviously, you can do this with a `Set`, if you plan properly but using a `Dictionary` works well too. The main thing is the early exit. This can be quite a time savings if two matching elements are early in the `Array`. So this returns the indices and also early exits: extension Collection where Element: BinaryInteger { /// Tests to see if two elements sum up to the target value. /// If so, return them. If not, return nil func twoSum(target: Element) -&gt; (Index, Index)? { var tested: Dictionary&lt;Element, Index&gt; = [:] // test each element for testIndex in self.indices { let test = self[testIndex] // calculate matching value let match = target - test // see if matching value has already been tested if let foundIndex = tested[match] { // we already saw the match so return the test and the match return (testIndex, foundIndex) } // add the test value to the tested set tested[test] = testIndex } // no matches found return nil } } The difference is instead of using a `Set` to just contain the values it uses a `Dictionary` to also retain the indices.
Even with `enumerated()`, you have to be careful and make sure you're getting what you think you're getting. E.g. given: let a = [0,1,2,3,4,5,6,7,8,9] let s = a.suffix(3) Then `s.enumerated().forEach { print(($0.offset, $0.element)) }` prints (0, 7) (1, 8) (2, 9) While `for v in s.indices { print((v, s[v])) }` prints: (7, 7) (8, 8) (9, 9) Enumerations of collections and their indices are not the same thing (see also Sets, Dictionaries, Strings, etc.). In this case, it doesn't matter, but in general you have to make sure you're using the right thing.
Yeah. There's actually a surprising amount of teachability (for lack of a better word) tucked into this problem that can allow someone to talk about a lot of different benefits and pitfalls to the different approaches to the problem.
Even better solution, kudos. Thanks for clearing my concept on \`contains\`. &amp;#x200B;
The other thing to discuss is why I constrained it to `Element: BinaryInteger`. Basically, we need to conform it to `Hashable` to use it as the key in a `Dictionary` and we also need to conform it to `Numeric` to be able to subtract the elements. So I could have done: extension Collection where Element: Hashable &amp; Numeric { However, `BinaryInteger` covers both of those conformances and it's a bit simpler for an example so I used that. I could have also used `FloatingPoint`.
In your scene's `didMove(to:)` method, just add a tap gesture recognizer to the owning view. Example: public override func didMove(to view: SKView) { super.didMove(to: view) let tap = UITapGestureRecognizer() tap.addTarget(self, action: #selector(handleTap)) view.addGestureRecognizer(tap) } 
Thank you for the suggestion, however I did mention that I have to use snapshot listener and not get document because I need to subscribe to future document updates, not just fetch once. I need to know when they all get fetched the first time.
Oh really, as simple as that? 
I have used some JSON data in Decodable struct and it loads into a table view and one of the things in the struct is the year e.g. **struct** jsonDownload: Decodable { **let** year: String } and I'm trying to split the table into sections based on the header, can anyone explain how to do this thanks
I’d recommend posting your question to [this month’s questions post](https://www.reddit.com/r/swift/comments/ayuciv/got_an_easy_question_ask_it_here_march_2019/)
*Beep boop* I am a bot that sniffs out spammers, and this smells like spam. At least 100.0% out of the 6 submissions from /u/freezcourse appear to be for courses, coupons, and things like affiliate marketing links. Don't let spam take over Reddit! Throw it out! *Bee bop*
Oh right, duh. Well it's still the same idea. Just add the gesture to the SCNView. Check out this [Ray Wenderlich tutorial](https://www.raywenderlich.com/2243-scene-kit-tutorial-getting-started). It adds a pan gesture recognizer, and the logic for adding a tap gesture recognizer would be pretty much identical. 
Thank you! &amp;#x200B;
Can you fetch the documents the first time and then use the snapshot listener after all the initial fetches occur and the content is displayed? 
https://twitter.com/twostraws/status/1106235274265329664
Yes, that is possible. However, I’d be fetching more than necessary and Firebase isn’t free 😉 I’ve found a solution by subclassing DispatchGroup, and giving the subclass a special flag so that I can call leave as many times as I want without effect after the first one.
My friend won it last year, wanna team up Snake?
&gt; Memory is leaked in an iOS app when the system is unable to determine if an object allocated in memory is in use or not. That's a rather strange way to phrase it. The system doesn't know what "in use" means, but the object is definitely still being *referenced*. Technically, the system is never 'able to determine if an object allocated in memory is in use or not'. &gt; with a purple exclamation point icon next to it. This is Xcode indicating that an object has been leaked. That's the general indicator for any runtime warning. It could be the main thread checker, the address sanitizer, the undefined behavior sanitizer, etc. You need to open it to see for sure.
After you change your data, you need to call `picker.reloadAllComponents()`
I've never used UIPickerView, but numberOfRows(inComponent:) says: "A picker view fetches the value of this property from the data source and and caches it." Do you ever tell it to refresh this, after changing the number of rows out from under it?
Yep. Much like a table view, you gotta tell the component to reload after the data has changed. In the case of UIPickerView, it's reloadAllComponents()
Worked perfectly, thank you!
The other poster's solution seemed the do the trick. The picker.reloadAllComponents() updates and refreshes it. Thank you for taking the time to help
\* Unless your program uses Foundation or CoreFoundation or AppKit or UIKit or any other C or Objective-C library or framework which wasn't designed around Swift.Optional.
There are better, safer ways to get the value out of an optional. Can you give an example where you think the `!` is necessary vs a safe unwrap?
I would like to change an image on tvOS 12 depending on if its in Dark mode or Light mode. I looked all over the internet to find nothing on this. Only thing I can find is for MacOS not tvOS. Any help is much appreciated. Thank You
Hey there! I can help with that. Which part are you stuck at?
Is `nested custom classes` referring to composition or inheritance?
It could also be namespacing. The question just makes no sense.
wow $1500 for a ticket? It should be called WMDC, M for millionaires. 
Sorry. I’ve been in front of my screen for 12 hours. I’ll add a code example and explain better tomorrow. 
App for beauty shop
It's really not much for much devs, specially ones in the Apple ecosystem.
Shake it off. There’ll be plenty more chances - Swift is a common and in demand skill set. What were the questions you were asked in your interview?
WWDC submission 
And who didn’t man that’s absolutely okay we learn from our mistakes good luck next time
I got absolutely obliterated in 9 on site interviews over a span of 11 months until I finally got a job a couple of weeks back. Keep chipping away and remember you only gotta get in once.
I won last year. Made an xcode project which can be found on github. I think it’s hard to give any adivce. You don’t have to focus on very advanced, new stuff like ARKit. My playground was plain SpriteKit with AVFoundation. It’s much more important what you do and how you present it than how you do it. Weird thing is that Apple reduced time to submit a project from 3 weeks (last year) to 10 days. Good luck to everyone 🙂 
`OuterClassName.InnerClassName` I assume is what you want. They're not "passed" because they're classes, not instances. Can you post the code?
If you need to start to learn how to implement algorithms on a whiteboard while you’re in an interview you’re too late. Just like you need a solid grasp of algorithms before getting algorithm questions, only a handful of people just invent those algorithms as they go.
I’ve just always politely explained to the interviewers that I have VB, C#, JavaScript, Obj-C and now Swift floating around my brain and when I’m “coding” on a whiteboard to expect more abstract concepts than language accurate code. Give me a white board with a keyboard and intellisense and you’ll get better code, until then, deal with it!
First was reverse a string without using .reverse that I went blank and the second was parse Json which I was able to do
Hey all, I'm getting stuck with trying to initialize a cell with some text :( I'm of course quite new to initializers, and my usual lame solution is to call a setup function to pass info afterwards. Any wise words? Many thanks in advance. class MainCell: UICollectionViewCell { let titleLbl: UILabel = { let lbl = UILabel() // other stuff was in here return lbl }() override init(frame: CGRect) { super.init(frame: frame) } required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) } } &amp;#x200B; class SubCell: MainCell { convenience init(title: String) { self.init() titleLbl.text = title } } &amp;#x200B; SubCell(title: "Test") // doesn't return a cell with "Test" in the label &amp;#x200B;
The more interviews you do, the better you get at them.
for loop, iterate string length, instead of starting at index 0, start at end Index of string and go backwards appending each character to a new string. The result will reverse the string.
Cause most jobs dont let their employees google for answers...
I followed your links, and swift 3 and Xcode 8 is fairly outdated. I don’t disagree with BNR as a path, but isn’t there something more contemporary?
Thanks. Yeah there is but I have read a number of good current Amazon reviews about \*this\* book and was curious what others thought. BNR has a new version coming out in May so might revisit. &amp;#x200B; &amp;#x200B;
Welcome to being an official programmer. Failing an interview is a rite of passage. I recommend getting hacking with swift: coding challenges. It has every Swift coding problem they are going to throw at you during a whiteboard. If you’re poor, you can probably find a pdf online for free ;) Don’t let this set you back too much and just keep going. You got this! 
Nested types are not contained inside instances of outer types. It's a namespacing mechanism only.
Hi I translated your shortcut MyWiFis to Arabic , I didn’t publish it or share it with anyone and I wouldn’t. after your permission , if you want me share the translated shortcut or you want it for any reason , tell me. I didn’t put any information about me or anything related to me after translating, I only translated, and I don’t want any credits or benefits. so, if you want it tell me (;
Thanks. I’m going to blame all this on too much caffeine and screen time. 
It’s a developer conference for professionals, not an event for fans to watch the keynote. It’s a pretty standard price for a conference.
I’d recommend checking out Paul Hudson’s books at [Hacking With Swift](https://www.hackingwithswift.com). I think he produces good learning material, and he keeps his books updated as the language and tools evolve so that you don’t have to go find and buy new books every year. The complete content of his first book is also freely available to read online at his website, so it’s a good way to see if you like his work enough to pay for his other books that you might be interested in. (I’m just a happy customer who has bought several of his books.)
What did they ask you during the white board test?
Looks really awesome and easy to implement! I’ll give it a try and post a project 
Thanks, I’ll check it out!
That book was actually my first dive into Swift. I thought it was excellent at the time and would have recommended it to you back then. These days I'd go with what another commenter said and look up Hacking With Swift.
Well you can get angry about the status quo or study for a while to get hired at a substantially better paying company. It's not nice to have to study something you will probably rarely if ever use at your current job but then again if you didn't like to keep up with technology programming was a bad choice to begin with.
Literally never heard of anyone doing a whiteboard test tbh :/
For learning Swift itself, I'm not too crazy about his books. I think the Apple Books are better for beginners and objc.io's books are better for advanced stuff. But where he really does a good job is in introducing iOS programming and UIKit (and the AppKit equivalents in Hacking with macOS). If you want to do iOS or Mac GUI programming, then I also recommend his books, but for just learning the language I'd look elsewhere.
&gt; First was reverse a string without using .reverse I swear, if I were ever asked this in an interview I would ask the interviewer why on god's green earth would they ever want to do something so stupid as to write their own, likely less efficient and less safe variant of a preexisting constant time collection wrapper.
Whiteboard tests are an old bullshit interview technique that is slowly starting to die out because people are starting to realize that it has no correlation to people's ability to actually perform their job well.
Hey, it's gonna be all good. Mistakes and failure are the stepping stones to success. Get back on that horse and ride! You got this.
My team is maintaining a Swift server-side app in production. Swift has some things that are really nice (a rather expressive type system, no hidden nils, for example, and let/guard are neat), but I wish we had chosen something different (I only joined after this decision). The language is very young, many of the early tradeoffs made in the language design were (and still are) more concerned with mobile app development and the tooling situation is very, very bad, especially compared to Rails or Node (I used to write Rails in previous jobs). That said, you \*can\* pull it off, I just don't necessarily think the tradeoffs are worth it. 
If I was hiring, I’d probably give some take home questions/code exercises and tell them they could google whatever they wanted as long as it’s on my desk by 9am the next day.
Hi! I have an imageView that has an astronaut set as the image. I want to move and rotate in random directions, and bounce back from the edge of the screen if it reaches it. How can I do such a thing?
Nicely done. Did you know that AppKit has NSTokenField (macOS)? You should check out the client API for that and see if yours matches that, then you’ll have a cross platform solution. Also, you may want to add your solution to this stack overflow question: https://stackoverflow.com/questions/1307553/is-there-an-iphone-equivalent-to-the-nstokenfield-control 
Thanks, I’m going to check that out. Another user on github already asked if it can be made cross platform so I’ll look into it.
I meant, since NSTokenField already exists, if you match the calling API to that, or you additionally conform to a trivial protocol that matches to it, then we all get the best of both worlds: native class on AppKit and compatibility on iOS. 
Then you probably wouldn't get the job. 
Then it’s probably not a job worth taking. Honestly, if I were interviewing someone and one of my coworkers was dumb enough to ask a question like that I’d be far more impressed by a candidate pushing back like that than I would one who wrote flawless code to reverse a string. A better question to ask a candidate is along the lines of why shouldn’t you write your own string reversing function and in what cases should you.
Maybe some signature problems?
Not that I know what a signature is :D but I didn’t change anything (at least as far as I know) from the time I was able to load the first app I did about 10 days ago. Anyway I can check this signature issue? And see if it’s the problem 
What is the build error?
This is absolutely true. I got my first iOS job on a Friday, learned obj-c over the weekend, and came in Monday decently competent in the language. Then I proceeded to spend the next several months(or was it several quarters even) trying to become decently competent with cocoa an UIKit.
It happens almost instantly a pop up just saying “build failed” 
Phone probably not registered in portal, also “build failed” doesn’t help us much, post the actual error 
That is not the error. There’s a pane in Xcode that had the log
TL;DR: This has nothing to do with XLSX. All it does is print the filename.
ok, thanks for the clarification, it looks like I've reached some limit (:-1: Your maximum App ID limit has been reached. You may create up to 10 App IDs every 7 days. (in target 'TT') I am just playing around with xcode, and having fun is this some limitation that I need to get a license to overcome or something? 
oh boy, i really hope you can stay in your world for as long as possible.
Oh, don’t worry. I’ve been out of entry-level job interviews for 20+ years now. I don’t have to worry about people asking me asinine interview questions like that any more.
Pricing is way off for small teams, and this is effectively a commercial post, btw.
As the article is more about the practice than the tool, I disagree.
I was unaware of that limitation. A workaround for now would be to reuse a previous app ID
Optionals help you to avoid crashes when for some reason you receive JSON in a different format from what you expect (for instance, when API provider change "list" to, let's say, "dataList", all those guards and if-lets will save you app from crash). And as for the last, `Array(convertedTemperatures.prefix(upTo: 7))` should return you array without optionals. Could you give us an example of JSON you're trying to parse?
I don’t know if you need to start with a ‘simpler’ language. The one you want to learn will be easier than the one you feel like you are using just to go through the paces. I also won’t say swift is difficult because then that gets in your head and you believe it’s difficult. The first two that you learn will be the hardest and it gets easier after that. Similar to spoken language. I do agree you need an actual tutorial and work through the examples in it. 
Ahh A/B tests, I know as a user I frequently hope for a 50% chance that something will change and then change back for no apparent reason. 
THIS IS AWESOME! might use this on my app
Thank you. Here is the json that I'm parsing - [https://pastebin.com/Hg2tY7zZ](https://pastebin.com/Hg2tY7zZ) So essentially its okay to get an optional array for guard let temperatureEveryThreeHours = json\["list"\].array?.map({$0\["main"\]\["temp"\].double}) else { return } because I'm also using guard let to return if the result is nil? And it is to be expected to get an optional array for the first time because it's the first swift variable to get the json data.
`guard let list = json["list"].array else { return nil } // To ensure that we have some array at "list"` `let tempsSlice = list` `.compactMap { $0["main"]["temp"].double?.rounded() }` `.prefix(upTo: 7)` `let temp = Array(tempsSlice) [Double]` &amp;#x200B; Not sure why you get array of optionals after converting slice to array but the code below should return array of wrapped doubles.
&gt;Does `rounded(toPlaces: 0)` return optional Double? If so, this if what happens: you map you json, then compact map it to wrap values and then and map it to array of optionals because rounded() returns optionals. &gt; &gt;So `json["list"].array?.compactMap { $0["main"]["temp"].double?.rounded(toPlaces: 0) }` should return you wrapped array.
The article says it's basically not possible to do CD on iOS with Apple's own tools but "Thankfully, Bitrise has a solution to this problem." It uses screenshots from this tool and explains where to click to make it work. If there's any way this is "more about the practice than the tool", I'm really not seeing it at all. I read the article and I have no idea how to implement this in any way other than with this specific tool. Which part, exactly, should I be looking at?
&gt; https://developer.apple.com/documentation/os/logging?language=occ I for one am interested to learn this new "occ" language! Is it better than Swift?
While the author may not have intended it to be, it gives the impression that it is commercial so I respectfully disagree with your disagreement. There are enough examples of “using a service like Bitrise”, “Thankfully Bitrise has a solution to this problem “, and “look no further than Bitrise — it’s my personal favorite.”, along with multiple paragraphs of detailed, Bitrise specific info along with screenshots, plus it’s even hosted (or presented via) bitrise.io. It’s not impartial and gives the distinct impression that it’s a commercial promotional post. Having said that, a quick perusal of the sub rules and I couldn’t see anything forbidding this type of post, though I’m under the impression that site-wide rules require commercial or advertising posts to be clearly marked. For what it’s worth, I didn’t think this post rises to that level, but the article is sufficiently biased that I wonder if a few words of clarification might be good. 
Do you have a paid developer account? Without one, Apple limits what you can do with things like this. (Please don't shoot the messenger).
I suspect you're coming from Java, where (non-static) inner class instances have implicit references to their outter objects. Swift does not do this. Even in Java, there's no automatic references connecting "outter objects" to "inner objects". As other's have said, nested types in Swift are basically only namespaces, with the only distinction that they have access to the same generic type parameters as the enclosing scope.
I would try using `Codable` instead of SwiftyJson. It avoids a lot of these problems by having concrete `struct` objects instead of `Dictionary` ones. That means you avoid a lot of the `Optional` proliferation you see here.
You're calling setup before initializing device. Also is this for WWDC? I'm still stuck on coming up with an idea :(
Using `Codable` and [quicktype](https://quicktype.io) to quickly generate the `struct` declarations: struct Weather: Codable { let cod: String let message: Double let cnt: Int let list: [List] } struct List: Codable { let dt: Int let main: Main let weather: [String] let clouds, wind, sys: Clouds let dtTxt: String enum CodingKeys: String, CodingKey { case dt, main, weather, clouds, wind, sys case dtTxt = "dt_txt" } } struct Clouds: Codable { } struct Main: Codable { let temp, tempMin, tempMax, pressure: Double let seaLevel, grndLevel: Double let humidity: Int let tempKf: Double enum CodingKeys: String, CodingKey { case temp case tempMin = "temp_min" case tempMax = "temp_max" case pressure case seaLevel = "sea_level" case grndLevel = "grnd_level" case humidity case tempKf = "temp_kf" } } let json = """ { "cod": "200", "message": 0.0055, "cnt": 40, "list": [ { "dt": 1552435200, "main": { "temp": 282.6, "temp_min": 282.6, "temp_max": 285.89, "pressure": 1009.3, "sea_level": 1009.3, "grnd_level": 1000.1, "humidity": 100, "temp_kf": -3.29 }, "weather": [""], "clouds": {}, "wind": {}, "sys": {}, "dt_txt": "2019-03-13 00:00:00" }, { "dt": 1552446000, "main": { "temp": 283.56, "temp_min": 283.56, "temp_max": 286.028, "pressure": 1008.28, "sea_level": 1008.28, "grnd_level": 998.99, "humidity": 100, "temp_kf": -2.46 }, "weather": [""], "clouds": {}, "wind": {}, "sys": {}, "dt_txt": "2019-03-13 03:00:00" } ] } """ // decode the JSON text: import Foundation if let data = json.data(using: .utf8), let weather = try? JSONDecoder().decode(Weather.self, from: data) { print(weather) } // Weather(cod: "200", message: 0.0055, cnt: 40, list: [List(dt: 1552435200, main: Main(temp: 282.6, tempMin: 282.6, tempMax: 285.89, pressure: 1009.3, seaLevel: 1009.3, grndLevel: 1000.1, humidity: 100, tempKf: -3.29), weather: [""], clouds: Clouds(), wind: Clouds(), sys: Clouds(), dtTxt: "2019-03-13 00:00:00"), List(dt: 1552446000, main: Main(temp: 283.56, tempMin: 283.56, tempMax: 286.028, pressure: 1008.28, seaLevel: 1008.28, grndLevel: 998.99, humidity: 100, tempKf: -2.46), weather: [""], clouds: Clouds(), wind: Clouds(), sys: Clouds(), dtTxt: "2019-03-13 03:00:00")])
Hi! I'd like to buy a MacBook and get into Swift, I do not plan to do anything else with it tho, since I also have a PC which I use for gaming etc. Which MacBook would suffice for my needs if I want it to run smoothly? :0 Thanks in advance!
``` enum CodingKeys: String, CodingKey { case temp case tempMin = "temp_min" case tempMax = "temp_max" case pressure case seaLevel = "sea_level" case grndLevel = "grnd_level" case humidity case tempKf = "temp_kf" } ``` Ignore this rubbish and use `keyDecodingStrategy` instead.
Of course you can do this. I just went directly with what was returned from quicktype because the comment was already getting a bit long and I didn't want to go on a sidetrack.
An idea for what?
Presumably the scholarship. 
I’ve spent the last two days going through this and it’s absolutely fantastic. I feel like I’ve made more progress in these in two days than I have in the past two months with paint by numbers coding courses on Udemy. 🙏🙏🙏
Glad to hear it!
Here is a collection of resources for first time Python developers: http://programming-motherfucker.com/become.html#Python There are a lot of other links for learning coding languages in there as well.
An API wrapper is a generic interface that allows you to make multiple requests from a single method. Here is an example of an API wrapper that uses Alamofire. https://github.com/Shanlon/Alamofire-ObjectMapper/blob/master/Networking.swift Unrelated: please don’t force unwrap, it makes your code extremely unstable. 
Can’t answer if this is a api wrapper but giving you advice about code style: When you ad empty lines between code blocks it will become more pleasant to your eyes and therefore better readable. Although it will slow you to keep logical operations together. 
Okay, thank you then I think I am doing it correctly(minus the force unwrapping)
Just a few things: * Wrap your JSON serialization in a do-catch block, and on that note, there are too many bang operators ("!") in general, if I were you I would opt for a safer approach, it may seem safe already but edge cases happen and in a serious application overuse of the bang operator would be a red flag and would most likely not get through a code review. * I would prefer to have both a success and failure completion handlers as I feel it makes for clearer code, it's clearer when you call one of the completion blocks whether the request has succeeded or not, and you don't just have to rely on an interpretation of the completion handlers parameters to judge the success of the request. &amp;#x200B; But thats just my take on it, not bad by any means :)
Assuming you are using HTTP over SSL (https), what's your public and private keys trying to accomplish? When updating for the next release and the private key need to be switched, at which point are you going to cut off the older private keys? I suppose that's a business decision for you/company to decide. Basically, it's key pining and I think you have to tick 'used non-standardized encryption' box when submitting.
&gt; Notes: I tried to use guard let instead of that conditional to check if the array is empty but couldn't quite get it. I think I understand optionals - but wondering if there is a more elegant way to do it? The `guard let` and `if let` constructions are used to check is something is nil. Empty collections are not nil. The most common way to do that check would be `if strs.isEmpty { return "" }`.
How would I accomplish having both success and failure completion handlers?
Ok cool - yeah that was the problem. The test case was passing an array, it was just empty. So that's not nil. That makes sense. Thanks!
You would have two separate completion blocks and only one would run, saves a lot of error checking on the success case too.
[This](https://imgur.com/VIIg7ue) is what I have after doing so. Would you say this is what you meant or did I misunderstand? 
Yes! That's it, far clearer and removes a tonne of ugly error handling in the success block
Some other notes: * `for word in strs {…`: There's no need to do this unless you need constant time random access to the characters in a string. If you're just doing linear scanning you can leave the strings alone since they conform to the Collection protocol. * `allWords.sort`: There's no real need to sort the array of words to get the shortest word, you can pull it out by doing something like `allWords.min(by: { $0.count &lt; $1.count })`. You'll do an extra prefix comparison, but it will likely still be quicker than sorting, depending on the input. * `for i in 0 ..&lt; allWords[0].count { let compareLetter = allWords[0][I]`: There's no need for this construct you can just do for compareLetter in allWords[0]`. Similarly with `for wordIndex in 1 ..&lt; allWords.count {…`, you can just say `for word in allWords…`
okay, thank you. Is there a way to remove one of the failure blocks or am I stuck with them?
Would you say [this](https://imgur.com/VIIg7ue) is better or should I have blank lines in other areas?
Not really, also remember to call your failure block when your guard statements fail. I would also unwrap the data variable using a guard statement, it seems pretty inconsistent to use if-let if your using guard everywhere else, plus using guard statements prevents nesting. If you want to write less failure blocks then something like this would work: **guard** **let** dataDictionary = **try** JSONSerialization.jsonObject(with: data, options: \[\]) **as**? \[String: **Any**\], **let** data = dataDictionary\["data"\] **as**? \[String: **Any**\], **let** result = data\["result"\] **as**? \[String: **Any**\] **else** { failure(Error); **return** } &amp;#x200B; And finally I would avoid having three variables called data, (the passed by the completion block, the one in the if-let and the one in the guard statement).
I don’t mind writing failure blocks, it’s just that it looks kind of funky and just want to follow best practice
In the case of splitting up completion blocks it's pretty subjective, there really isn't one correct way. I've been splitting them up like that for quite some time and I've worked quite a few collaborative projects and have had no complaints.
Sorry man you're correct, but this is an old version of my project and I forgot it
This one time I got asked to reverse a linked list.... -\_\_- bombed it pretty bad I don't think you'd ever use one in Swift/iOS so it caught me off guard pretty good
haha.. sure not shooting anyone ! anyways I have just enrolled as an individual developer and paid the related fees (using the same apple ID) , yet nothing changed :( is there anything I need to do in Xcode?
I think it looks cleaner because I don’t have to know the order now the name tells me if it succeds or not. I actually did not know I could have two completion handlers in a function, so I thank you for that
Don’t do this. It’s bad practice. Use result instead. It’s coming to swift 5 https://www.hackingwithswift.com/articles/161/how-to-use-result-in-swift
Forced unwrapping is not always bad. There are some cases in which you can be certain the result of a call will never be nil given the input. For example, constructing a URL with a controlled input string (i.e not user input) Another example is to have implicitly unwrapped class properties. You can guarantee they are not nil because they get set in an initialization method. Apple’s own code uses this often. 
Why to have iuo in class prop if you set it in init? I am sure that Apple tries to avoid it in swift code, though the most notable case where you can see them is bridging from objc.
Nope. Not in init(). For example if you have a viewcontroller and you keep refs to your subViews, you’d declare it as, say, UIView! And set it in loadView(). That view will always get set. No sense in checking for nil everywhere else in the class. 
I wouldn’t say that’s the definition on wrapper... a wrapper is a convenience interface specific to your needs of a broader generic interface.. wrappers are not specific to networking since you get things like swift wrapper of c++ code
The only case for iuo in viewcontrollers is for outlets when controller instantiated automatically from storyboard. Also I use loadView only if I need to replace default view. It is usually bad practice to create subviews there. Use lazy vars and call them not earlier than viewDidLoad.
There is a missing semicolon. Run it through this: https://www.freeformatter.com/json-validator.html. When you have input files it’s a good idea to validate them. 
Thanks, however, It says that the JSON is valid?
Ugh. Sorry. I’m not sure how that happened
you can also use a closure like rather than having a lazy var if you dont want the mutability (also keeps the closure unaware of self so moving the views to a custom view class for example is simple) ``` let someView: UIView = { //return a view }() ```
I had a very similar approach but more generic, but then some problems when api communicated with response codes. For example data was null but response was 201 so everything was good. But in my and your case that would return error. But that might be specific API approach.
In addition to this, an API wrapper should also hide implementation details with regards to: - The transport mechanism used to acquire the data - in this case HTTP - The structure of the response - in this case JSON While OP’s does a good job hiding the first, by returning an inner dictionary from the response the fact this is using JSON has inadvertently leaked out into the caller. Consider what happens when the JSON structure changes when a field is renamed - you’d have to chase wherever this payload if read and update the key, with no assistance from the IDE beyond find-and-replace. If the callback closure took a well-defined type - like a struct - that adapted the JSON into a type, this detail can be hidden away from the caller and it becomes the responsibility of the API wrapper’s domain to parse the response into a transport-agnostic type. Swift does provide Decodable to make this easier, but I’d still wrap that object in another type specific to the domain of the wrapper. This is both cleaner and makes for more coherent code, and also makes testing the caller of this wrapper easier to deal with as your tests can pass objects back to the closure rather than parse JSON (leave that to the tests for the wrapper).
It’s sounds like items is an array
The one reason to use lazy var is to defer large views' construction at VC initialization time. The second reason - it helps to avoid creating some instances at all, if this is unnecessary(f.e. user didn't interact with some parts of screen). You can also use closures with lazy var.
Consider using URLComponents to build URLs, looks cleaner and doesn’t break when query items need to be encoded.
Oh for crying out loud. Would have loved to have found this on Thursday morning!! Bookmarked for future ref. Upvoted for doing the work for us lazy people. 
`items` is an array so you would need to iterate it to get the title… `let title = json[“items”][0][“volumeInfo”][“title”].stringValue` would get the title of the first item in the items array.
I have this code: var celsiusValue: Measurement&lt;UnitTemperature&gt;? { if let fahrenheitValue = fahrenheitValue { return fahrenheitValue.converted(to: .celsius) } else { return nil } } Can anyone tell me where .celsius is coming from? That's a type right? And why hasn't to been declared anywhere? I am a bit new to Swift, but not really OOP. Help is appreciated. Thanks, Lester
Working on a SQLite wrapper called Boxed which aims to provide a hassle-free, type-safe way of storing your structs :) https://github.com/mannberg/Boxed
Those appear to be API keys, not keys used for public key encryption. 
Need to wait until release though haha
Why? Make it yourself in the mean time: ``` enum Result&lt;T&gt; { case success(T) case error(Error) } ```
Use result instead. Multiple completion blocks is not standard and not really a well designed API. It can cause confusion, plus it’s a bit verbose when it doesn’t need to be https://www.hackingwithswift.com/articles/161/how-to-use-result-in-swift
API stands for Application Programming Interface and refers to a suite of methods/objects that all come from the same source. An API wrapper is a specific object/file in your code that isolates the API so that none of the rest of your code depends on that API. This allows you to easily swap out said API for a different one that performs essentially the same function. So in answer to your direct question, I would say no, this one function is not an API wrapper. Firstly, it doesn't wrap an entire API, I expect there are quite a few endpoints being provided by the server at that baseURL and this only attempts to wrap one of them. Secondly, it doesn't fully wrap the one endpoint it _does_ work with. By emitting JSON through the closure, it is exposing the structure of the APIs output to the rest of the code. If that structure changes, the change won't be isolated but rather spread out to all the code that uses this function. Better would be if the closure was declared something like `([Character], Error?) -&gt; Void` where `Character` is structured in a way that makes sense for the _users_ of this function, not identical to the structure that makes sense to the API itself. If you do the above, _then_ it will be a part of an API wrapper.
According to what you described, the only thing that works could be the UI only. It is likely that no communication is made at all. Anyone who help to build a backend would need to update as well ... I guess more info is needed before anyone can help, i.e. how does the app work? what info should be stored? What is your budget?
So, you purchased half of your assignment from someone and now you want to purchase the other half? I don’t think purchasing your assignment will solve the problem here. 
I like Moya (that depends on Alamofire) to do all the routing. It’s a nice layer of abstraction: https://github.com/Moya/Moya
I'm working 1 day a week on an iOS travel diary running on a FireBase/Google backend. I document the whole process on YouTube in weekly episodes. Feel free to checkout the full play list: [https://www.youtube.com/playlist?list=PL-cGpqZ7XB49ZK-LLY2pwkSVkr-tFdbCF](https://www.youtube.com/playlist?list=PL-cGpqZ7XB49ZK-LLY2pwkSVkr-tFdbCF)
A bit. You can also do in in the closures. When posting code try paste bin, there I could edit it even when I’m on mobile. You can also give [Ray Wanderlichs Swift Style Guide](https://github.com/raywenderlich/swift-style-guide/blob/master/README.markdown#spacing) a try. And use comments, you will thank yourself after 1-3 months for this. I know this may be a huge load of critic but it isn’t critic. Those are the things many of us forget and become get frustrated about when we should deal later with the written code. I just wanna remind you and others to comment what they written because humans need comments to understand the code faster. 
This was a very specific example of a networking wrapper. There are 1000s of ways and different reasons to create wrapper classes. 
I don’t think he is a software engineer, from reading his posts it seems he is a ux designer.
‘Codable’ all the JSONs 😂
Good luck. I am just starting out and having fun learning everything.
What do you mean?
Thank you, I will be making the Character object. I do plan on doing the rest, I just wanted to make sure I was on the right track.
If they get set in an initialization method they aren’t implicitly unwrapped. Implicitly unwrapped would be a property you KNOW will exist that is NOT set in an init method. I think a correct assertion is that forced unwrapping and implicitly unwrapped optionals are dangerous and almost always unneeded. Yes you can use them, and use them correctly, but in most cases there is simply no reason to. You are introducing a crash vector in your app for no reason. Optionals exist for a reason. In the case you gave, why not just use a guard statement and return if the URL creation fails? The problem is that programmers are fallible and eventually will do something we expect to work, but doesn’t because of oversight. There’s simply no need to risk a crash for no gain
Lol I went into the final interview at Asynchrony a few years back and panicked and forgot EVERYTHING, to the point where I couldn’t think of what a dictionary did. Fear and anxiety happen and bombing interviews is a great lesson in humility and in prep for future interviews Just learn from it and move on. That’s what I did after being embarrassed for a few days.
He means using the URLComponents type to build your URL instead of the string manipulation you are currently using: func getCharactersURL() -&gt; URL { var components = URLComponents(string: IceMarvel.baseURL)! components.path = "/v1/public/characters" let ts = URLQueryItem.init(name: "ts", value: IceMarvel.ts) let apikey = URLQueryItem(name: "apikey", value: IceMarvel.publicKey) let hash = URLQueryItem(name: "hash", value: IceMarvel.hash) components.queryItems = [ts, apikey, hash] return components.url! } You could even put a URLComponents object into your IceMarvel thing so that all the reused bits are kept in one place (including queryItems.)
+1 for Moya, I like it a lot too
Oh okay, thank you didn’t know about URLComponents.
.... Hmm... I'm gonna say that all code is an API wrapper. Everything we write transforms calls to other APIs into different, more specialized ones.
RemindMe! 1 day
I will be messaging you on [**2019-03-17 22:03:56 UTC**](http://www.wolframalpha.com/input/?i=2019-03-17 22:03:56 UTC To Local Time) to remind you of [**this link.**](/r/swift/comments/b1xte6/rxswift_rxcocoa/eiov6ln/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[/r/swift/comments/b1xte6/rxswift_rxcocoa/eiov6ln/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
&gt;RxJava has been helping to defeat complexity on Android for a few years now. RxSwift is rapidly catching up on iOS, and its impact is deemed to be bigger at least by an order of magnitude, because it happens to solve most iOS-specific complexity issues very efficiently. Think delegates and data sources spread all across the codebase - they’re gone! Think GCD and operation queues - gone! Think KVO with all its peculiarities - gone! What is left: a uniform declarative cohesive app logic, and almost no boilerplate code. &amp;#x200B;
you asked a bunch of questions, hopefully I get to them all with my answer. I started using RxSwift &amp; RxCocoa because it was a requirement for my job. If you’ve never done reactive or functional programming before, it can be a pretty big learning curve. I would highly recommend using MVVM for iOS apps if you’re also using RxSwift. Why use RxSwift? I would say it’s really, really good for asynchronous stuff and avoids you using a bunch of callbacks all the time. If you’re creating an app that will have streams of values over time (think a stock ticker or a stopwatch, for example) RxSwift/RxCocoa can be really great because you only have to set a subscription or binding once and you don’t have to think about it again. I would say that if you’re going to build an app from scratch, that’s an ideal time to use RxSwift. Integrating it into an existing project isn’t as easy. As for organization, usually I go for some kind of client singleton that returns an Observable (a Single even). The client is essentially your networking layer. You would only call the client from a view model, whose responsibility is to format the data. So by the time you’re getting properties from your view model, they can come over to the view controller without any extra work. The responsibility of the view controller then is reduced to just presenting and handling touch events. I would highly recommend looking at some RxSwift code on GitHub to get you started. Feel free to ask me any questions, and for context, I worked with RxSwift/RxCocoa for about a year and a half.
&gt; Then you probably wouldn't get the job. But you would definitely be dodging a bullet. I can't imagine ever asking such a retarded question in an interview.
I agree - having one mechanism that works similarly across the entire codebase to handle asynchronous code and user interactions is very freeing. Knowing Rx and using it effectively simplifies a lot of things because of this.
I'm not aware of any way... But Google might. Snarky response aside - I'm curious... Why would you want this?
Merging storyboards is a pain in the ass but it’s a lot easier to design in them :-/
Tell me about it. I have a tough time merging two different branches of my _own_ work on storyboards without a nightmare of merge conflicts, let alone other people in my team. Best policy, honestly, is to only have one person working on any given storyboard at a time. Which is easier said than executed, especially when ya gotta go fast. 
Those forced unwraps (`!`) are just begging for trouble 
I've only experimented with it (I forget which reactive variant it was) in some toy apps, and it did have patterns which simplified parts of the codebase. The one caveat I've heard from coworkers who have used it in large projects is that it can be **really** hard to remove, if/when you no longer want to use it in your app. That can be the case with a lot of 3rd party libraries, but most of the time you can write an abstraction between the library code and your code to make it (theoretically) easier to replace later. That's not really the case with Rx libraries, because they are super invasive. To get their benefits, you need to structure your code to match their idioms (not unlike Cocoa). My knowledge is mostly secondhand, so take it with a grain of salt, but that's the experience I've heard from other devs at work.
You will probably want to split up your root views into reusable subviews that all do only 1 things. The whole point of writing UI by code is to make it readable. &amp;#x200B; You can have live preview in playground so you can see changes you make: [https://www.youtube.com/watch?v=DrdxSNG-\_DE](https://www.youtube.com/watch?v=DrdxSNG-_DE)
I agree with using it with MVVM but I’d stay away from using it at your network layer. I’ve used it in production apps and it shines at the VM layer using drivers. I’d avoid it anywhere else because while your initial implementation will look clean, over time it’ll be a pain to maintain. 
absolutely agree, didn’t mean to imply it should be used for networking. I stick to using view models for controllers and maybe for cells if there is data manipulation occurring or to keep track of changes.
&gt; The one caveat I've heard from coworkers who have used it in large projects is that it can be really hard to remove, if/when you no longer want to use it in your app. Isn't that true of AppKit/UIKit's object-oriented system, too? This isn't just a library. It's an architectural style.
- `.count == 0` is usually spelled `.isEmpty`... - ...but the `if strs.count == 0` check is useless here, anyway. No reason to hardcode the n=0 (or n=1 or any other) case before the actual algorithm. - `for i in 0 ..&lt; anything.count` is a code smell. Just loop over the items. Or if you need the index for something else, too, there's `.enumerated()`. 
Yes, I have experience with it. I started using it in 2015. Why use it? There are some 6 different ways to pass information from one object to another in iOS (sub-class, pass in closure, delegate, assign to var, KVO, &amp; target/action,) each of these different systems may be simple by itself but most of the complexity in the logic of an iOS app is in having to convert from one of these systems to the other. RxSwift/RxCocoa replaces virtually all of these systems which makes development much less complex. Also, Rx supports a much more declarative style of programming. You spend your time establishing invariants rather than working out steps in a process. The most common structure discussed is MVVM-C but my most common structure in production apps so far has been a variation of the redux/elm architecture. And as for testing, Rx helps tremendously. It is far easier to separate the app's logic from its effects which makes the logic far easier to test. As for "all the different kind of observables," there is really only one kind, `Observable`. The rest, `Single`, `Maybe`, `Driver` etc... are all just limited versions of that one type so just learn how to use Observable and don't worry about the rest until/unless you feel like it later. And BTW, there is an rxswift sub-redit and an RxSwift slack channel, the later of which is quite lively. Also questions on SO about RxSwift rarely go more than a day without getting answered. So you can expect lots of help if you need it.
An automated tool will probably just recreate the XML in Swift syntax. Merging is still going to be basically just as bad as now. If you want source code that's easy to maintain (and merge), you need to write it yourself. Tools can't automatically extract logical groupings, and XIBs/Storyboards don't have a way to declare those.
Cool, my submission was 32ms... I used two guards. If the array is empty then there is no prefix. If all strings are equal then any one of them could be the prefix. guard !strs.isEmpty else { return "" } guard allEqual(strs) == false else { return strs[0] } All equal is a function I wrote: func allEqual&lt;C: Collection&gt;(_ c: C) -&gt; Bool where C.Element: Equatable { guard let f = c.first else { return true } return c.allSatisfy { $0 == f } } The function grabs the first element of the collection, if there isn't one, then the function returns true. Otherwise, it checks to see if all the elements in the collection are equal to the first one. You may notice that in doing so, I am comparing the first element to itself which isn't really necessary. It turns out that adding `dropFirst()` to avoid that didn't speed up my algorithm. So now... Since we are looking for the longest common prefix, it is very likely that we will end up using the `prefix` operator somehow... 
I haven't heard of one, but the Storyboard is just XML. And it's nowhere near as bad to read as it was before. You might be able to write a script to do it.
It's not the most pleasant of things, but communication with team members is the best tool for that problem, I've found. If they can pair with you on merging, even better.
When using SwiftyJSON, use `.arrayValue` instead of just `.array`. The later returns an Optional array while the former returns an array.
I always felt one of the biggest problems with Swift is that it forgot it's main initial platform was iOS, and didn't handle the idea of classes who's creation is separate from it's initialization. I have so many optionals in my coffee for the sole reason that I have to set the things in viewDidLoad because I can't do it in init
The only thing that might improve that would be to typealias those blocks to be something more readable.
Been there, man. I've interviewed with Google about 3 times now, and I've always bombed one of the interviews. One of the things that cheers me up is that a bartender friend of mine will make me their specialty drink when I get back that night (Google would fly me back the same day as the interviews). Not to encourage drinking, just saying to take some time to relax and do something to cheer yourself up.
Are you sure you bombed? I mean did you at least try and explain your thought processes? I've only done one of these sorts of interviews some 20 years ago now (except it was with paper and pen rather than whiteboard.) I was asked to write C's `strcpy` function (this was an interview for a C job.) I wrote it out and handed it to the interviewer. He scanned it over and then handed it back and said, "there's a bug in it." I stepped through it and realized I had forgotten the null terminator, fixed it and handed it back to him... I got the job. I asked him later why I got the job when my code didn't work and he said, "nobody gets it right the first time, I am testing to see whether you can find bugs, not write `strcpy`." One of my co-workers wrote his function flawlessly, but he accidentally wrote the code out for `strcmp` rather than `strcpy`, he still got the job. :-) 
I'm not entirely sure about it not being a job worth taking. Bad interviewers are everywhere, even in good companies. And sadly, there are some people who aren't able to be as picky with their jobs. :( That said, the last couple of companies I worked at discouraged the use of those terrible questions.
You should never have to merge storyboards....
&gt; Or if you need the index for something else, too, there's .enumerated(). Since I'm in a pedantic mood, `.enumerated()` doesn't give you the indices, they give you the offset from the initial element. This is a very important distinction when working with slices.
It's a lot easier to use `Codable` and a site like [quiktype](https://quicktype.io) to generate the model. The advantage is you have your model completely defined for you and you only deal with an `Optional` on creation. struct Book: Codable { let kind: String let totalItems: Int let items: [Item] } struct Item: Codable { let kind, id, etag: String let selfLink: String let volumeInfo: VolumeInfo let saleInfo: SaleInfo let accessInfo: AccessInfo let searchInfo: SearchInfo } struct AccessInfo: Codable { let country, viewability: String let embeddable, publicDomain: Bool let textToSpeechPermission: String let epub, pdf: Epub let webReaderLink: String let accessViewStatus: String let quoteSharingAllowed: Bool } struct Epub: Codable { let isAvailable: Bool } struct SaleInfo: Codable { let country, saleability: String let isEbook: Bool } struct SearchInfo: Codable { let textSnippet: String } struct VolumeInfo: Codable { let title, subtitle: String let authors: [String] let publisher, publishedDate, description: String let industryIdentifiers: [IndustryIdentifier] let readingModes: ReadingModes let pageCount: Int let printType: String let categories: [String] let averageRating, ratingsCount: Int let maturityRating: String let allowAnonLogging: Bool let contentVersion: String let imageLinks: ImageLinks let language: String let previewLink, infoLink: String let canonicalVolumeLink: String } struct ImageLinks: Codable { let smallThumbnail, thumbnail: String } struct IndustryIdentifier: Codable { let type, identifier: String } struct ReadingModes: Codable { let text, image: Bool } import Foundation let json = "" // fill in your json text if let data = json.data(using: .utf8), let book = try? JSONDecoder().decode(Book.self, from: data) { print(book.items.first?.volumeInfo.title) } // Optional("John Brown\'s Raid on Harpers Ferry")
What blocks are you reffering to?
Good question. Rx has its use cases but can be overused and abused in my professional experience, I have worked with code bases from many large global organisations - some with over 1 million lines of code. As soon as I see the word “just” or “create” I question if we are actually dealing with a stream or just a single value, in which case a simple return value would be easier to reason with. The main reasons I’ve seen people do this is so they can leverage the schedulers (dispatch queues) that Rx uses or merge/zip (somewhere down the line); which feels rather wasteful and adds complexity to otherwise simple functions. These should be created at the very last minute (if at all) imho. One other issue I have with these libraries is that they genericise errors and treat every stream as errorable, so you end up losing track of all of the errors that may occur and end up casting them in your “subscribe(onError...” or “asDriver(catchError...)”. I’d recommend looking at ReactiveSwift and ReactiveCocoa for typed errors and “NoError” type (which means no nasty error handling for streams that don’t error). Rx is powerful, but with great power comes great responsibility. People try to apply it to situations where pure functions would be more suited, wrapping every line of code just to make it monadic.
Thanks 
Thanks
Exactly
Totally, which is why I called out that it's like Cocoa. And the same way that it'd be very difficult to migrate your code from (for example) Cocoa to QT, you will struggle to avoid a major rewrite if you migrate away from this kind of framework. That doesn't mean people shouldn't use it– but I think it's important to understand that it has all of the risks of using any 3rd party library, plus you really can't put an abstraction between yourself and the framework code, so you're going to end up tightly coupled.
In the first example farenheitValue is the receiver, to: is just the label, so it’s performing a method on farenhetValue that converts it to Celsius, but doesn’t look like the result of the method is being used, as it’s not assigned, usually it would look like let celsiusValue = fahrenheitValue.convert(to: .celsius)
I’d second what’s been said about integrating from step one. It’s hard to go to and from rx, best to use it or not from the off
Computed variables in the actual code you posted...
I have been learning RxSwift and applying it to a new app I’m building. A very complex app with almost no use of external REST APIs. I started building this App in the traditional MVC paradigm and quickly realized that, because of App complexity, things would grow to be a nightmare. Learned the basics of RxSwift and did a clean rewrite with an MVVM approach. Complexity is now very manageable. The best thing about it, in my opinion, is that you don’t keep state values anywhere. Not maintaining state anywhere removes a lot of undesirable side effects. 
Just as a side not. while everyone is talking about FRP and a lot use it only to connect their ViewModel to their View, we all forget about KVO ;)
celsius and fahrenheit are class variables of UnitTemperature which those functions expect. if let text = textField.text, let value = Double(text) { fahrenheitValue = Measurement(value: value, unit: .fahrenheit) } `let value = Double(text)`
If you just want to add a few symbols, then you can add them as text. Unicode includes characters like that, for instance √. As long as the font you pick includes those characters, you'll be fine. You can hit ^-⌘-Space to bring up a quick character picker, or add it to the menu bar in System Preferences ➙ Keyboard ➙ Show keyboard and emoji viewers in menu bar.
yes, I know that I can do it but maybe there is some way to make the proper symbol with the whole equation under the √ symbol.
You would have to implement your own “text editor” and keyboard with the engine for drawing said nodes the proper way, take a look at Photomaths editor you might get a clue
I know you said no libraries, but in case that you don't find a good solution, I found this: https://github.com/kostub/iosMath
What about static text where the text can only be set programmatically? 
Maybe a font that uses ligatures to do this? No idea if this would be possible with the Unicode standard tbh. 
Here is the code: `override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {` `print("row \(indexPath.row) selected!")` `_ = storyboard?.instantiateViewController(withIdentifier: "profile")` `let vc = UserProfileViewController()` `vc.user = FR_Friends[indexPath.row] as! PFUser` `navigationController?.pushViewController(vc, animated: true)` `}`
 //Here is the code: override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) { print("row \(indexPath.row) selected!") _ = storyboard?.instantiateViewController(withIdentifier: "profile") let vc = UserProfileViewController() vc.user = FR_Friends[indexPath.row] as! PFUser navigationController?.pushViewController(vc, animated: true) } &amp;#x200B;
I tried looking up labels in swift but all it did was lead me to pages on UI elements. Is there anywhere I can learn about labels in arguments? I am totally in the dark on this one. Thanks!
Also, the &lt;&gt; part after measurement looks like C++ template classes. Is that something I need to look into as well?
Just because no one has mentioned it: if you have the icon as an image you could use NSAttributedString + NSTextAttachment
Why not use segues ? 
I need to access the indexpath var provided with the tableview. 
I'm not sure about this, but I remember a VC doing a similar thing when I had accidentally defined a segue directly from the table row. Then on the `didSelectRowAt` it would be called twice (once from code and once from the storyboard). 
You can do that with segues. Implement prepareforsegue method 
How can I access the indexrow var
Not sure if you’re doing this with storyboards or programmatically but looks like you’re instantiating the profile vc twice. Remove either the UserProfileViewController() or the storyboard.instantiateViewController
I’ll have a look at my code 
I’ll try that 
Declare a variable say selectedRow in class. In didSelectRowAtIndex method set selectedRow = indexPath.row and then call performsegue method. In prepareforseguemethod, set vc.user = FR\_Friends\[indexPath.row\] as! PFUser
You could also use a Webview (or the newer version of it, I forgot the name) and use MathML if it‘s working on it
Not sure if it’s possible, but maybe include the latex executable and render the latex as a pdf? You might also be able to use MathJax
 override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) { print("row \(indexPath.row) selected!") let vc = storyboard?.instantiateViewController(withIdentifier: "profile") as! UserProfileViewController vc.user = FR_Friends[indexPath.row] as! PFUser navigationController?.pushViewController(vc, animated: true) } You should use something like SwiftGen to generate all the instantiating from storyboard code to avoid typos.
From memory: render it into a CGGraphicsContext and then save the context as a PNG image
Let's go through your questions one by one ``` fahrenheitValue.converted(to: .celsius) ``` This is a variable `fahrenheitValue` on which you call the method `converted(to:)` which will convert the measurement to `.celcisus`. `to:` is not a variable, it's the name given to the argument. It hints at what the arugment is supposed to mean, as in "this function converts, and the argument, is what the function converts _to_". `.celsius` is not a variable either. It's a value of the type `UnitTemperature`. My guess is that `UnitTemperature` is defined as follows: ``` enum UnitTemperature { case .celsius case .farenheit case .kelvin } extension UnitTemperature { func converted(to: UnitTemperature) -&gt; UnitTemperature { … // implements the unit conversion } } ``` ` Measurement(value: value, unit: .fahrenheit)` This seems to be a constructor for the type `Measurement`, either a Struct or a Class. Given the simple nature of the type I would assume its a struct defined this way: ``` struct Measurement&lt;Unit&gt; { let value: Double let unit: Unit } ``` So your second line means "construct a value of type `Measurement` using `value` for the field `value and `.fahrenheit` for the field `unit`. Again, what is left for the `:` is the name of the argument which hint you at what they mean. What is right of the `:` is the variable used. I hope seing the declarations helps you understand where the `to`, `value` and `unit` come from. Finally, &gt; why is it using a decimal in .celsius an .fahrenheit? I'm not sure I understand your question but I hope the `UnitTemperature` helps you understand or formulate another question. PS: ``` var celsiusValue: Measurement&lt;UnitTemperature&gt;? { if let fahrenheitValue = fahrenheitValue { return fahrenheitValue.converted(to: .celsius) } else { return nil } } ``` could be simplified to ``` var celsiusValue: Measurement&lt;UnitTemperature&gt;? { return fahrenheitValue?.converted(to: .celsius) } ```
Hey, zephyz, just a quick heads-up: **Farenheit** is actually spelled **Fahrenheit**. You can remember it by **begins with Fahr-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey /u/CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". And your fucking delete function doesn't work. You're useless. Have a nice day! [^Save ^your ^breath, ^I'm ^a ^bot.](https://www.reddit.com/user/BooCMB/comments/9vnzpd/faq/)
Hey BooCMB, just a quick heads up: I learnt quite a lot from the bot. Though it's mnemonics are useless, and 'one lot' is it's most useful one, it's just here to help. This is like screaming at someone for trying to rescue kittens, because they annoyed you while doing that. (But really CMB get some quiality mnemonics) I do agree with your idea of holding reddit for hostage by spambots though, while it might be a bit ineffective. Have a nice day!
In many languages, you call a function without argument labels: func(1, 2) While that’s possible in Swift too, it’s more common to use labels that are specified by the function: func(x:1, y:2) This is similar but slightly different than Objective-C. Labels make reading the code more obvious, make it harder to confuse or transpose arguments, and allow for default values where the caller doesn’t have to specify an argument if they just want to use the default. See [Apple’s Swift Tour](https://docs.swift.org/swift-book/GuidedTour/GuidedTour.html) 
Try setting a background color on the second view controller. I think that should stop the weird black transitioning background.
Are you talking about \`UIGraphicsImageRenderer\`?
No the &lt;&gt; are defining the type like you could say let a: Array&lt;String&gt; = [] Which would be an array of strings initialised empty
Yes, Swift generics are similar to C++ templates. See https://docs.swift.org/swift-book/LanguageGuide/Generics.html 
Thank you.
I appreciate it.
&gt;https://docs.swift.org/swift-book/LanguageGuide/Generics.html I sure appreciate it.
weirdly that worked lol
https://kenney.nl/assets https://opengameart.org https://www.gamedevmarket.net/category/2d/?type=free ( free but I think it requires sign up ) Kennys assets should be enough for you, he has a lot of common [GUI](https://i.imgur.com/f17dDjm.png)
You know, maybe you should read through the language guide ;)
https://github.com/Raizlabs/Eject (no longer maintained)
That’s not possible with just a simple attributed string, you’d have to draw it yourself as other people have suggested here.
Probably [UIGraphicsBeginImageContextWithOptions](https://developer.apple.com/documentation/uikit/1623912-uigraphicsbeginimagecontextwitho). But `UIGraphicsImageRenderer` is, in this case, functionally the same thing, just a newer API.
You’re on the right path. Once you have a graphics context, you can draw the image plus any additional content directly into the context. You don’t need to rely on an image view or any other view to do the rendering for you, but it will take more work to size/position everything as you want. [Here are some clues.](https://developer.apple.com/library/archive/documentation/2DDrawing/Conceptual/DrawingPrintingiOS/HandlingImages/Images.html) 
Do not use a uiimageview for this (views are for viewing). Learn how to render your own uiimage in code
What's the point of not using Rx for the networking layer? Rx is great for anything asynchronous - networking definitely qualifies here.
Not too sure what your core data model is but why not just Store a Boolean value in UserDefaults? 
Also- nice username 
I want to be able to store individual records with different configurations of button selections for each. 
What about storing an Int array of which button tags should be selected (then comparing and setting these values in viewDidLoad/appear) 
Take a look into using the Coordinator pattern. This is a really good example of a simple implementation of it: https://www.hackingwithswift.com/articles/71/how-to-use-the-coordinator-pattern-in-ios-apps Some might argue that for small projects, it's Overkill and maybe it is. But I would say it's worth it because once you've put in the extra effort to set up a good Coordinator system in your app, it makes stuff like this immensely easier and consistent across your app. Plus it helps promote loose coupling of your different view controllers. I use it at work and in my own personal projects and it makes my code just that much cleaner and easier to maintain. 
I actually find exactly the opposite. Rather than having well-fitting tools to solve problems, everything ends up being wrapped in one abstraction which doesn't add any value in 99% of situations. You end up with as much or more code, but instead of most of it being related to business logic, a lot is boilerplate Rx code which makes the project harder to read. And at runtime, you end up with call-stacks which are harder to parse because they contain all the Rx indirection. It does make some things easier, but it creates other kinds of issues, which in my opinion are harder to solve since they're usually buried in some system you have no control over, or are related to some complex interaction which might not be reproducible when you break it down into the constituent parts.
In my opinion Rx is a case where the emperor has no clothes. I'm a mobile developer with 10 years experience, and when Rx started getting hyped on Android and then iOS, I approached it with an open mind because so many people claimed that it was the greatest thing since sliced bread. I have worked with it in several large professional projects, and my experience has been that Rx does not add any meaningful benefit to mobile development, and for the small set of situations where it provides some benefit, it generally introduces a whole host of problems. There's a lot of "Woo Woo" about how FRP is the second coming of programming, but all it really is is an abstraction layer for dealing with streams of events. It's based on the false premise that you can magically make the complexity of your problem go away if you abstract it enough, but in reality all it means is that instead of just writing your business logic directly, you chop it up into little pieces and wrap it in a bunch of Rx boilerplate and then write a bunch of abstract Rx code to glue it back together. So instead of dealing with bugs related to your business logic, you end up with weird problems with things happening too often, or out of order, and if you want to breakpoint it to figure out what's going on you have this giant call-stack where like 1% of it is code you actually wrote and the rest is super abstract library code. It might actually be useful if the problem your application had to solve was modeling an incredibly complex set of interactions between a huge number of event streams, but mobile applications just aren't that. Mostly you have events which need to be handled in exactly one place - like button presses, or HTTP responses - and a handful of more global events like logout or something. Rx is total overkill for that. Honestly the only thing I think it's good for is job security, since once you write a decently sized application with Rx, you're the only one who's going to be able to modify or debug it. Or if you're the kind of programmer who just loves jerking themselves off with abstractions and complexity, and you don't care about your coworkers, Rx is for you. I'm convinced the reason people think they like it so much is some kind of Stockholm Syndrome, since the API is so obtuse that once you sink the time learning it, you don't want to believe it was a waste. 
Just do the .push on the main thread. That’ll solve your issue. Lookup OperationQueue to know how
lmao
so the argument .fahrenheit that is being passed into Measurement is from fahrenheitValue, being a Measurement&lt;UnitTemperature&gt;?
lmao
It's just overkill. HTTP requests are usually triggered in exactly one place and handled in exactly one place. Sure it's a use-case for a single, but there are much simpler abstractions available which do the job just fine.
Yeah I finally am working on mine now as well but I really do not enjoy working with playgrounds 
Try click and hold the play button on the Playground, then set it to run manually. After this, you need to press the play button to run the code (no more automatic run). I used this method and it has reduced number of crashes for me
It seems to get reset often for me. It always crashes after I save (CMD+S) and I save after every single little change (it's a quick reflex). Should I take it that these crashes are common?
You mean the “set to manually run” setting is reset back to automatically run often? Hmm it could be something to do with Saving, I didnt save often when in playground since Xcode auto saves most of the time. Looking from the error report just now, did your code in playground deal with file open / saving? Not sure if this affect Playground, and yes Playground does crash often 😅
Latex is good for that; see if you can find some Latex library to implement in Swift.
Yeah I'm making a music matching game thingy, so my AVAudioPlayerNodes load in files from the Resource bundle
bugreport.apple.com
You can start with the Stanford iOS Course! You can go faster than the lectures if you have some knowledge. 
My thoughts too. 
hacking with swift is another fantastic resource, really recommend it: hackingwithswift.com
You can do it with some hacks, like custom subview and constraints magic or some work with traversing subviews, but there is no "normal" way to do it, you have to create custom class or import framework. Maybe you should just wait for the dark mode release for iOS. Who knows ^_^
Looks like you don’t have a xib setup for your pushed view controller. Either add one manually (or add one to your storyboard), set the class and wire up the view. 
From beginner to advanced you can find a lot of content here [http://raywenderlich.com](http://raywenderlich.com/)
Go through Apples “App development with swift book”, Stanford’s iOS course, and the “hacking with swift” book. 
Why do you recommend to do this instead of implementing didSelectRow? I personally do not see any value in using a segue in that case, but a lot of drawbacks: 0) The functionality that was in one plae before is now split in two different places that er still thightly coupled, but that coupling is now hidden 1) You need an extra instance variable 2) You need to implement didSelectRow anyway just to set that instance variable 3) Segues are „Stringly Typed“ - you need to type out the name of the Seguee as String that can not be checked by the compiler (hello typos) (unless you use R.Swift or Swiftgen) 4) If multiple Segues exist from that VC, prepareForSegue gets ugly I‘m not one of those people who say to not use Storyboards, but not using Segues (at least when the presented VC has to be configured) is good advice imo.
Yao wanna have this result - [screenshot](https://www.dropbox.com/s/3wsejztzr90umpv/Simulator%20Screen%20Shot%20-%20iPhone%20XR%20-%202019-03-17%20at%2015.28.48.png)?
Buy Angela Yu's course on Udemy. She is really good and her course is a good one to start with.
Eh, I gave up on that to be honest. I used a framework called CFAlertController to get this on my app. [dark mode action sheet](https://i.imgur.com/fHBYHVl.jpg)
Run this code into viewDidLoad method. This will change the background blur effect into dark mode. `UIVisualEffectView.appearance(whenContainedInInstancesOf: [UIAlertController.self]).effect = UIBlurEffect(style: .dark)` Then you can use NSAttributedString to customize the colors: `let attributedString = NSAttributedString(string: "Title", attributes: [NSAttributedString.Key.font : UIFont.systemFont(ofSize: 15), NSAttributedString.Key.foregroundColor : UIColor.red])` `alert.setValue(attributedString, forKey: "attributedTitle")` The whole code look like this: `class ViewController: UIViewController {` `var myButton: UIButton!` &amp;#x200B; `override func viewDidLoad() {` `super.viewDidLoad()` `myButton = UIButton(type: .roundedRect)` `myButton.bounds.size = CGSize(width: 150, height: 40)` `myButton.center = view.center` `myButton.layer.cornerRadius = 15` `myButton.setTitleColor(.white, for: .normal)` `myButton.backgroundColor = .black` `myButton.setTitle("Click Me", for: .normal)` `myButton.addTarget(self, action: #selector(showActionSheet), for: .touchUpInside)` `view.addSubview(myButton)` `UIVisualEffectView.appearance(whenContainedInInstancesOf: [UIAlertController.self]).effect = UIBlurEffect(style: .dark)` `}` `@objc func showActionSheet() {` `let alert = UIAlertController(title: "Alert!", message: "This is an alert!", preferredStyle: .actionSheet)` `let action = UIAlertAction(title: "OK", style: .default, handler: nil)` `let action2 = UIAlertAction(title: "Cancel", style: .default, handler: nil)` `alert.view.tintColor = .white` `let attributedString = NSAttributedString(string: "Title", attributes: [NSAttributedString.Key.font : UIFont.systemFont(ofSize: 15), NSAttributedString.Key.foregroundColor : UIColor.red])` `alert.setValue(attributedString, forKey: "attributedTitle")` `alert.addAction(action)` `alert.addAction(action2)` `present(alert, animated: true, completion: nil)` `}` `}` 
The general purpose nature of your question makes it a tougher ask than you might think. There are a number of courses that have something less ambitious but similar, though. [This is one of them, see section 24.](https://www.udemy.com/ios-12-app-development-bootcamp/)
HackingWithSwift is a free course that’s pretty good to get started. It has a heap of tutorials that explain and show you a bunch of useful functionality in swift and Xcode. On top of that, r/hackingwithswift and is pretty well monitored and can provide help if you can stick with anything. 
Watch the developer conference [session](https://developer.apple.com/videos/play/wwdc2018/703/) on CreateML. They show a very easy way to train a model with folders full of images. I wrote up a bit of a play with this in [my attempt](https://blog.marxy.org/2018/12/a-failed-attempt-to-recognise-postie.html) to recognise the postie from a webcam.
Angela Yu's course on udemy is pretty good, but as a fellow Software Engineer who already knew how to program, i liked Brian Voong on youtube. https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA/featured I started off with his Game of Chat's lesson. I like Brain's style more than Angela's because he builds his UIs without using the builtin story board WYSIWYG, he programmatically does all his UI, which is something im more familiar with since its all code and not a new tool i have to learn. Storyboards suck in my opinion. 
The most successful approaches for image classification today are based on convolutional neural networks, which can be used to predict, what class of object out of a selection of objects is shown in an image. Neural networks can be integrated into iOS apps using the CoreML framework. These networks include models like InceptionV3, ResNet-50, MobileNet, SqueezeNet, etc., which are available on the [Apple Developer website](https://developer.apple.com/machine-learning/build-run-models/). They have been trained on the ImageNet dataset, which contains over 1000 classes of objects. You cannot easily extend these models with new classes of objects on an iOS device, as this takes some time. If you are willing to incorporate 3rd party online services, you can retrain classifiers in the cloud. For this, you could look into [IBM Watson Services for CoreML](https://developer.apple.com/ibm/). There are some machine learning frameworks available for Swift but nothing will get you anywhere close to what you can achieve with the CoreML models you can download from Apple's website. 
It should be noted that CreateML only works on macOS.
True. Actually reflecting on the OP's question. It will be hard to train a model from a single example as you suggest. Generally training is done on hundreds or thousands of labeled examples.
Honestly, anything in the last 3 or 4 years will run Xcode just fine. I’m still using a minimum spec MacBook Air from 2013 and haven’t been able to justify upgrading because it still handles everything I do just fine. Obviously compile times are faster on newer machines, but it doesn’t make that big of a difference beyond the first time you compile a newly cloned project. The only place that Xcode will really tax your computer is if you use Interface Builder to build storyboards with too many view controllers in a single file, or insist on running half a dozen simulators at the same time.
[removed]
I have a Macbook Air from 2015 as my personal laptop, and a Macbook Pro 2015 for my work laptop. And seeing as you: &gt;I basically mainly want swift to run completely smooth, since I have a pc for other stuff like gaming etc. I would suggest getting a Macbook Pro then. It's definitely much more expensive but it's made for heavy development and would definitely be more than enough to have Swift/Xcode run smoothly. That being said, my Macbook Air works perfectly fine! But over the years I've gotten to develop bigger and more complicated apps, and developing/building my apps on my Macbook Air is starting to be a total drag. I'm personally going to get a Macbook Pro later on but if you just want something to just start and play around with, then really any Macbook Air 2013+ should do perfectly fine! 
Thank you so much for your thoughts! If I were to choose a macbook pro, is even the one with the "worst" specs fine? Or is there a certain version with specific specs I should buy? :O
I want to say that any macbook pro would probably be fine? (Sorry I don't have too much time to look into it!) The Macbook Pro family of computers generally have much more ram, better CPU and more storage (with some being SSD type storage I believe?) than the Macbook air does. It also lets multiple external displays (2 for the Pro vs 1 for the air). Those are the four features that I really like on the pro and generally what makes computing faster for any computer. The difference in RAM and CPU power is quite notable between the pro and the air, so I'm sure any pro should be fine.
I've thought about using a neural network to generate a latent space representation that abstracts away lighting and angle and then using a k-NN classifier on that, which would allow the user to add new classes with a single or only a few examples. This is how FaceNet works, which is state-of-the-art in face recognition. I'm not sure how well this approach generalizes to object classification though. 
No thank you a lot for helping me at all! I still have a lot to learn so I do not really understand the differences completely in detail, but I think I got the gist of it! I will go for the cheapest one then naturally xd Thanks for ur time! 
I second this 
Storyboards is the worst and being in the iOS dev world for a couple of years I don't know anyone that uses it. 
The best way for you to learn is find a problem or something that can be automated in your life, and program a simple solution then build off it. Good luck.
Act as if you know nothing and follow the tutorials for the newbs. 
Apple's* Possessive nouns! How do they work?! Come on. This is second grade English.
Taylor Swift is ugly.
Do you have any prior programming experience? If you’re starting from scratch, the Swift Playgrounds app on the iPad is an awesome way to learn the basics. I’ve got a bit of prior experience with C, C++, Obj-C and JavaScript, but I still found the Learn To Code tutorials useful for syntax
In an NSAttributedString you can add an NSTextAttachment holding a UIImage (NSImage on macOS.) You can render the text by text-drawing on an off-screen CGBitmap, then convert that to a UIImage. or: you can create a custom font TrueType that contains the sqrt symbol attached to a top line that extends 'n' pixels over the following characters
Ignoring this answer and picking the "MacBook Pro" answer below reveals the true purpose of this post: OP wanted a MBP, not information or advice -- and wanted to find someone on the internet to justify this purchase. Even the part of the answer that says a 4-year-old MacBook Air "works perfectly fine" is ignored. That's not the answer OP was looking for.
Awesome to know, I've been doing it as a hobby but would love to switch over to an iOS dev one day.
There is no fill in that circle next to cowButton IBAction. Did you hook it up? 
Thanks. Do you have a source where I can look that up and then maybe implement it into my app? The problem with that is that it will not be backwards compatible, but I’ll definitely implement it for ios 13
Sorry, but I can't. It's not stated that iOS 13 will have dark mode, just rumors and user expectations. But we will find out when WWDC starts, I guess.
Good thing the entirety of the internet isn’t one big formal essay in which grammar matters. Otherwise you might have a valid point! 
I meant the hacks you talked about, I’m aware that it’s just a rumour and that we may never see it
I really appreciate the effort and time you put into this, but that’s the way I do it rn, I want to have it like in my screenshot tho
How do i declare variable in extension with get set? I want to have 3 variables in UITableView extension and be able to set them in my viewcontroller. I currently already have my tableview up and working, along with an extension. I am currently trying to implement lazy loading, and wanted to add variables like currentPageNumber shouldLazyLoadAgain isLazyLoading So in my view controller I can do something like : myTableView.isLazyLoading = true
Well, I tried to implement such thing myself. Just things I found on stackoverflow. :D The problem is, when alert controller appears, cancel button changes it's blur effect to it's standard, so you need to change it other way, maybe. I used view debugging in Xcode to look what can I change, you may do that yourself. Also, did you try [custom view controller for cancel action](https://stackoverflow.com/questions/44601692/uialertcontroller-change-background-color-of-cancel-button-for-action-sheet) ? I did not, but it may work. I gave up this idea for now, waiting WWDC.
I'm all for correcting grammar, but there's no need to chalk up a simple typo to stupidity.
if u have some knowledge of programming then i think swift documentation will help u with the code. if not i highly recommend stanford ios course.
This is simply not possible with an action sheet. Unless you want to employ weird tricks that may get your app denied in the App Store. Code it yourself, or find a nice library on Github.
I prefer to think UIKit(iOS) is comparable subject rather then Swift
Put any statement (print("") or sth) at line 41 and set a breakpoint there (click the line number on the left). Also set one at line 38. This should give you an outlook on what is going on. 
My guess is your `IBAction` isn't actually hooked up. Double check that. Once you fix that you may see that it crashes when force unwrapping the path. The resource name should just be `"cow"` and the type is `"mp3"`. After that you may still fail in that `catch` block. I suggest you turn it into something like this to log it: ``` catch error { print(error) } ```
I guess you're giving extension wrong. &amp;#x200B; Can you try that path as Bundle.main.path(forResources: "cow", ofType: "mp3")
Which language? I would say the language the original website is written in. So English if the original is English, otherwise you have to translate everything which would be a pain...
Give him a break man. He's using one of those crummy new keyboards. 
LOLOLOLOLOLOL
-_- i ment coding language like swift or objective c 
I would say swift. But if you are only pulling content from websites, be wary of Apple’s guideline 4.4.2 which talks about content aggregators and your app has a high chance of never seeing the day 
Sorry, I thought swift was not a question as you are asking this in r/swift ;)
yeah pulling news content and event content and making an wr scanner in the app still recommending swift in that case?
yeah i know but i thought that it was clear that i ment coding language ( but stupid to ask in r/swift i know but i thought someone would tell me like no use ... or something or yeah swift is fine 
Yeah I would still recommend Swift. Just cause moving forward I feel like Objective C will be less and less supported as Apple is pushing for Swift. I started learning swift 9 months ago and I am happy about it. The syntax is easier to read than Objective C if you have little coding experience
do you maybe have a cheatsheet list or tutorial list for swift ? i have searched for a tutorial for making an app for Wordpress website but couldn't find anything
I don't, cause I started just by going on random website searching for what I need. but [https://www.raywenderlich.com/](https://www.raywenderlich.com/) Lynda.com [Medium.com](https://Medium.com) are good starting point. I usually just write down what I need to do, then break it down into smaller part, for your example it would be: I would search on Google and follow stackoverflow answers for \-How to use Xcode Storyboard \-How to link a viewControllers to another viewControllers \-How to use TableView on Xcode \-How to get JSON from wordpress (or rss or whatever information wordpress gives you) and so on and so on. There won't be a website suited for your exact needs, you'll need to build it piece by piece, at least that was for me.
&gt;Medium.com ahh okay thank you very much &amp;#x200B;
Best of luck, if it does see the light of day, please send me a link for the app :)
I was thinking the same thing. If your code doesn't run as expected but you're discarding errors, the first thing you should do is look at those discarded errors. Also the resource lookup should be changed from ``` let path = Bundle.main.path(for Resource: "cow.mp3", ofType: nil)! let url = URL(fileUrlWithPath: path) ``` to ``` guard let url = Bundle.main.url(forResource: "cow", withExtension: "mp3") else { print("Cow not found!") } ``` See also: * [Locating Resources in a Bundle](https://developer.apple.com/documentation/foundation/bundle#1651491) * [`func url(forResource: String?, withExtension: String?) -&gt; URL?`](https://developer.apple.com/documentation/foundation/bundle/1411540-url)
yess i will do that thankyou very much 
Not without capturing the error at line 40 
I personally think the official swift guide is very readable. https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html
if you set second vc's backgroundColor, problem will be gone.
Short answer: It's shorthand for a value that can be accessed without an instance of a type, such as an enum value or static property. Long answer: The function \`converted(to:)\` is likely taking an enum, where one of the values is \`celsius\`. You'd usually refer to the value as \`EnumName.celcius\`, however when the type system has enough information to infer you're working with an enum (such as a parameter) you can omit the enum name entriely. The same applies when declaring variables or fields, e.g. \`let value: MyEnum = .celsius\`. &amp;#x200B; The same applies for any other type, where the declared type has a static declaration. If \`converted(to:\` were to (hypothetically) take a \`String\`, and you've previously declared a static \`celsius\` property, this would be valid too as the compiler will infer you meant \`String.celsius\`. This can be handy when referring to shared instances of singletons. &amp;#x200B; Hope that clears things up. If not, [the Swift language guide](https://docs.swift.org/swift-book/LanguageGuide/Enumerations.html) should explain more!
You also need to activate your AVAudioSession, otherwise the OS won't know that your app wants to play audio and it may fail to do so
I cannot agree more, the free content is good, but the subscription content is superb. For example tried both Hacking with Swift Vapor book and Raywenderlich Swift course and I take Ray's course for scratching the surface, and I'm thinking to buy the book after finishing the Vapor Cloud screencast.
Using models is easy, training models is often insanely hard. Your use case requires re-training and re-deploying models. Training is not currently possible or desirable on iOS platform, so your best bet would be IBM Watson SDK that allows updating model in the cloud and automatically pushing it to the clients.
If you don't get around to fix it by other recommended issues, I had a similar issue with the AVFoundation. The problem was fixed when I changed the format of my sound files from .mp3 to the .m4a, I know it sounds ridiculous but it worked. I didn't get down to the root of the problem, however this simple format swap made my sound work in the application.
NodeJS is fine. It depends a bit how large the project is, but you probably want to use Typescript. Single threaded shoudn't be an issue, that's just how the runtime works, you wanna spawn 1 node process for each CPU core. Also check out Vapor of course. Very much the underdog when it comes to backend stacks, but it's low dependency, simple, and generally very "solid" feel to it (which is not a word I'd use to describe JS backends) For Auth you can choose to go with OAuth, which allows you to offload most of the work to Facebook, Google &amp; Co. That way you don't need to worry about all the time consuming stuff, like proper hashing/salting, 2-Factor-Auth, a way to reset credentials etc. Just need to implement OAuth interface, its pretty straightforward for most providers (except Twitter...)
#100DaysOfSwift is a really nice project to start. It’s free so perfect to check if it is something that you really like. 
NodeJS single threading isn’t an issue since it’s built to be asynchronous. Massive organizations that handle millions of requests a second use NodeJS, so I presume you’ll be fine.
thanks, this helps a lot
Any. Literally. &amp;#x200B; I have the MacBook 12 inch - had the first version, now on the second (wanted a different keyboard). No need for anything particularly powerful. &amp;#x200B; btw.. I'm running a ruby server with a Postgres DB containing 7 million records on that sam machine! &amp;#x200B;
What do you mean "playground" and "live view"? I'd suggest you test this in actual Xcode and not playgrounds, could simply be a random bug there, also are you doing a video game? pretty sure your SKView should be a UIView... but if it is a Sprite Kit view, try it in an actual app and make sure your view actually exists.
That makes a lot of sense. Thanks!
The easiest language is almost always the one you already know best. 
i dont know swift or objective c 
If your top concerns are full control over every aspect of your app, avoiding vendor lock-in, and "do it yourself", I'm wondering how you arrived at MacOS and NodeJS. Those seem like terrible solutions for your stated criteria.
Massive organizations that handle millions of requests a second do *everything* differently than individuals starting a new project. They legacy requirements that prevent a fresh start in a new language, and an operations team that does nothing but make sure the service stays up 24/7, and 1000 redundant servers because hardware is cheaper than people or downtime at that scale. You can't just look at big established players and copy their design decisions. It's like looking at the USS Nimitz and seeing that it has two nuclear reactors, and deciding to put two nuclear reactors on your weekend sailboat. Nuclear power can be extremely reliable but it's also fantastically heavy and requires a dedicated crew who is specifically trained on it.
I’ve been using Elixir to build GraphQL APIs. Performance is top notch.
I’m talking more about the backend than the actual app it’s self, my main worries are that if Firebase shuts down (google does this a lot) there might be a risk of losing critical data or if a transfer option is provided it would result in a lot of unnecessary work, another reason is that I have a lot of custom features in the app that would require customisation of the backend and may require features not provided by Firebase, I’m currently exploring vapor atm as server-side swift sounds a lot better than NodeJS as I’ve never felt fully confident using that anyway
This is the kind of answer I was looking for, as I’ve never felt fully confident with the reliability of using NodeJS, after doing some research into vapor I think that’s the route I’m going to be taking since swift is the language I’m most confident in using! Thank you! 
[https://feathersjs.com](https://feathersjs.com) I find pretty interesting so far. Maybe it will help you out.
You don’t necessarily have to be a big player to want to build a custom backend, I have many reasons for wanting to, besides vendor lock-in and customisation of backend functions, two of the main reasons for going this route is because hardware is cheap, if you build a backend correctly the costs could be far cheaper than Firebase, although for most Firebase is the best solution and I’m not against it, for my personal use case I’d rather build and scale the backend as required for the app, it’s possible to scale to 1M users with a $100 server if you write the backend correctly, for example offloading data-heavy resources such as images to cloud storage where ingress traffic is free with google cloud compute and only egress is charged.
I meant the parameter types.
I ask, “Would tests be useful here? Is that value greater than the cost of writing and maintaining them?” I don’t think the answers are going to be consistent across apps, so you’re not going to walk away with actionable information.
In a similar position with AWS and have been considering NodeJS as well. Leaning towards going the server side swift direction though since it has the added bonus of keeping everything in Swift. RayWenderlich seems to have some good resources from my limited search so far. 
I feel like that is the most logical approach. It's just that I had an interview recently and got asked what percentage I usually aim for and if 100% coverage is realistic, I wasn't really sure at all and just said I aim for 90% and it's definitely realistic to aim for 100%. But I have the feeling I messed up haha.
Fighting with a random provisioning profile error that popped up a few days ago. Can’t debug code on a real device anymore. It’s frustrating and there doesn’t seem to be any solution.
Test business logic and models really, and any important things. I generally leave things like VC's and stuff as they never contain any of the important logic or anything.
If you do TDD or some approximation thereof, this question does't really make much sense. You write test for all your business logic, and that enough. What percentage that ends up being depend on the ratio of view code to business logic, and that depends on what you're building and whether you're doing your UIs in code or interface builder.
Yeah. Models and other functions that map simple input to output? Test the heck out of that because it's really easy. Network code? Mock what you can, test what makes sense, but the more you have to mock, the less you're testing what actually happens. UI code, try testing key flows, do some screenshot tests to detect unintentional layout changes, but it tends to be tedious.
Thanks!
Don't use a web scripting language to build a backend. It's absolutely bonkers that people think about doing that. Any of the normal backend languages (PHP, Java, Ruby, Python, etc) will have plenty of support for secure authentication. 
in iOS, sometimes half my code is just UI code...I don't write unit tests for that. I try to separate code that is pure logic based out of UIViews and UIViewControllers into separate files, and then write tests around them. Depending on how UI intensive the code base is, I aim for maybe 50%. But I'm not trying to test for silly things like "does the button have rounded corners", "am I using the proper shade of blue". I am testing: "If the api returns data that looks like this, does it get transformed properly for the UI to work"
That's the point of this question tbh, I'm looking for pointers in the right direction for building a backend, I've always seen using NodeJS as unsuitable for an app backend but everyone seems to be suggesting it (if you do a google search)
Yup, same. Looks like the paid accounts have been fixed, but not the free ones. It’s been long enough that I’m beginning to think that this may be a new feature rather than a bug.
Yea I just purchased the paid account and everything works fine. I hope your wrong. I’m praying Apple reduces the cost of this paid licence eventually. 113 per year is pretty steep when everyone else gives it for free or for a much lower price. Microsoft dev accounts are $20 one time fee. 
Lots of people suggest NodeJS because they can't program in anything other than JavaScript. Without knowing your current user load, and expected load in the near-ish future (about a year), it's really hard to suggest what to use. 
It sucks a lot, and it happens. Sorry to hear about your experience... always have that knocking feeling of "man I wish I could have done this instead of this..."
I think the annual price is a trade off that we can get an actual human to review our app , and actually contact a human when there is anything wrong with the app submission. Google Play Store just direct you to a list of FAQ and automated replies.
I didn’t know this. That’s pretty good.
You’ll cringe at my job. Recently they started asking for 100% code coverage. I end up reviewing code that uses XCTAssertNotNil on things that aren’t even optional. I also see this: guard x = ... } CCTAssertNotNil(x) I mean no shit! And the worst thing I saw: Func testA { ... XCTAssertNotNil(testA) } Wtf is that!!! Lmao
I am a big fan of Django, personally. You will get many different opinions on what to use so you're just going to have to evaluate the options and see what appeals most to you. I chose Django because it's very quick to get endpoints up and running and dev time is so limited if you're developing both the front and back ends.
I’ll definitely give it a little bit of research, haven’t heard of people using django before never even really looked into it, only ever heard about it :)
What do you mean? The 'catch' block by default catches an instance of 'let error:Error'
I came here to suggest Vapor too. I used it for the first backend I wrote as a paid dev. The community is on Discord and they are super helpful. Good luck!
Where do I find the discord if you don’t mind me asking?
I think this should do it https://discord.gg/BnXmVGA - it’s on the bottom of their webpage https://vapor.codes
https://stackoverflow.com/a/90021/1438339
Same issue here!
Related to this I wonder? https://arstechnica.com/information-technology/2019/03/godaddy-apple-and-google-goof-results-in-1-million-misissued-certificates/
That's someone who's trying to not look like they're not writing enough code, methinks.
It’s not just someone. Multiple developers. 
It's a tradeoff because you want to test what's important, but you don't want to make your tests take so long to run that no one bothers to run them. (Or, worse, they never finish running because everyone's always canceling.) So let's say you've got something that's basically: let q = x + y + z You don't need to test x, y, and z (if they're simple enough). It may be enough to check that q has the expected value. Even that may be too basic. In general, I care more about testing edge cases and main code lines, but not about the really simple stuff. This is one of my problems with TDD: you tend to start a project writing the simple stuff, so that's where the tests are written. When it gets more complicate is when the pressure starts to build and people tend to fall off writing tests—but maybe those are more important to write. There's not infinite time, unfortunately.
Argh. Are they paid by the lines of code? (I've heard of that in my distant past, and it makes me shudder.)
That code looks wrong, it would return a new instance of UI label every time you referenced codelabel?
If you code in swift I can safely say .NET was an easy transition for me 
😳 ... You have just changed my job for the better... Thank you!
Correct. Should probably be a lazy var 
That seems likely. What a PITA.
Hi, &amp;#x200B; :-1: /Users//Example/BarcodeScannerExample/Pods/Target Support Files/Pods-BarcodeScannerExample/Pods-BarcodeScannerExample.debug.xcconfig: unable to open file (in target "BarcodeScannerExample" in project "BarcodeScannerExample") (in target 'BarcodeScannerExample') &amp;#x200B; I keep getting this error when trying to run my code what does it mean?
That's great for methods like [unifiedMeContactWithKeys(toFetch:)](https://developer.apple.com/documentation/contacts/cncontactstore/1402987-unifiedmecontactwithkeys) which say they can return a nil but return a non-optional type. Just add a test for ... what now?
What a strange question. Test coverage is not a property of the program, but of the development process. It's like asking how many UML diagrams I have, how many prototypes I throw away, or how many glasses of water I drink. They may have an influence on quality but they do not determine it. 
You're assigning a block, but not calling it. You probably want to call it.
“When a measure becomes a target, it ceases to be a good measure.”
Thank you!
Restarting your Mac also fixes some problems, add that to the list of things to do when Xcode misbehaves.
Same problem here, unpaid account.
for i in 0...numCircles - 1 { let button = UIButton() button.addTarget(self, action: #selector(buttonAction(\_:)), for: .touchUpInside) } &amp;#x200B; @objc func buttonAction(\_ sender: UIButton) { // Do sth }
AVFoundation has built-in barcode scanning features. Here's a tutorial that uses them: https://www.appcoda.com/barcode-reader-swift/
Why do you want a barcode scanner? It's not always the best solution to ask for camera permission if you only need it to scan a barcode once. (For example if you are providing a barcode for your physical goods to register in your app) The built in Camera app also has barcode scanner functionality.
I have a database of food products I want to scan a barcode and get data on the barcode, I have the ability currently to manually type the code and get information
Then just look up the first "avfoundation barcode scanner tutorial" that looks sympathisch.
Thanks! That appears to mostly work. Though when I try to access sender (or sender.frame) it works great when a circle is tapped, but the background leads to "Thread 1: signal SIGABRT" error.
Already done that, running into an issue of trying to combine my parsing JSON code with the scanner code but I guess I’m just gonna keep working through that tutorial 
You do not need any external libraries, there are already 3 standard ways of scanning barcodes in iOS: in CoreFilter, AVFoundation and Vision frameworks.
Are you trying to use frame to determine which button is pressed?
By "background leads to "Thread 1: signal SIGABRT" error" you meant that when you press on button everything is fine, but when you press on view it leads to crash?
Yes, unless there's a better way.
I think you can use [tag](https://developer.apple.com/documentation/uikit/uiview/1622493-tag) in this case. Something like &amp;#x200B; `for i in 0...numCircles - 1 {` `let button = UIButton()` `button.addTarget(self, action: #selector(buttonAction(_:)), for: .touchUpInside)` `button.tag = 500 + i` `}` `@objc func buttonAction(_ sender: UIButton) {` `guard let buttonNumber = sender.tag - 500 else {` `return` `}` `// Do sth` `}`
Thanks mate
This is fantastic!
Correct. sender.frame on a circle outputs e.g.: (714.0, 492.0, 40.0, 40.0) and on background puts out a bunch of text, most relevantly: **2019-03-18 13:35:31.600868-0700 Hue\_Test\[453:8331005\] -\[Hue\_Test.ViewController tapCircle:\]: unrecognized selector sent to instance 0x7fea5401ac00** **2019-03-18 13:35:31.605049-0700 Hue\_Test\[453:8331005\] \*\*\* Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-\[Hue\_Test.ViewController tapCircle:\]: unrecognized selector sent to instance 0x7fea5401ac00'** I guess that means I need to handle view, but it doesn't have .addTarget as a member. &amp;#x200B;
Maybe you have connected outlet for gesture recogniser in your storyboard? If so, you should delete it ([this](https://stackoverflow.com/a/48193995/4189003) might help).
`And if you want to make it a bit more swifty` &amp;#x200B; `enum Button: Int, CaseIterable {` `case firstButton` `case buttonThatLeadsToLogin` `// etc` `}` &amp;#x200B; `for i in 0...Button.allCases.count - 1 {` `let button = UIButton()` `button.addTarget(self, action: #selector(buttonAction(_:)), for: .touchUpInside)` `button.tag = 500 + i` `}` &amp;#x200B; `@objc func buttonAction(_ sender: UIButton) {` `guard let buttonNumber = Button(rawValue: sender.tag - 500) else {` `assertionFailure("Unexpected sender")` `return` `}` `switch buttonNumber {` `case .buttonThatLeadsToLogin:` `// Do sth` `()` `case .firstButton:` `// Do sth` `()` `}` `}`
Yes, I figured that out just before, last vestiges of gestures were left. Looks okay now, the tagging made it simpler.
Hey guys, beginner programmer here (only Pascal knowledge). From what I've gathered the basics of Swift aren't that different from Pascal, but when it comes to building an app it gets tricky. I have a few ideas that could start me off, nothing too overwhelming, got basic concept of how things should work, but I just can't get the hang of it, I feel like I need a mentor of some sort to do this, what do I do?
Go develop for Microsuck then.
Hi westopher_robin! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/b2oa6c/the_problem_with_app_development_tutorials/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Same issue here. Started two days ago. I am pretty sure this is a new feature from Apple.
if you’re worried about having tags starting at 0 you could give the first enum case a value of 500 and not worry about handling it in the rest of the code 
Awesome article! I never thought of using AR and MLKit together for classification. Thanks for sharing.
I apologize. You spent a lot of words arguing against something I never said or meant to imply (and perhaps some of the downvotes were because of a similar misinterpretation by others). epicblitz was making a case for NodeJS, which is what I was responding to. I would never suggest one shouldn't make a custom backend at all.
It sure would have been nice had there been a good open-source logging solution that was in some way compatible or usable with `os_log`. Apple already made a nice new logging framework, a couple years ago, with a nice Swift interface. The main reason to use Swift on the server, AIUI, is so you can re-use code from the client-side, but if I have to write my own wrapper for all logging calls, that's going to be kind of a pain.
Yup, I wasted a whole day trying to figure out what was wrong 
There was plenty of time to voice your opinion. https://forums.swift.org/t/discussion-server-logging-api/18834 https://forums.swift.org/t/feedback-server-logging-api-with-revisions/19375 
Man! I was wondering what was going on. I made an app that I just want for personal use on my phone. Anyone know how I can download it to my phone now? :(
Usually just the data model. 
This is just an interface.. I believe there is talk about making an `os_log` implementation.
I think if you want to learn any think in the world then you should start with basic. To learn swift above link is the Bible of swift.
Can you please confirm if you are able to simulate location in Xcode by paying the license?
I have free account and everything works. I have had to delete provisioning profiles.
What features does it not support?
If you are having problems simulating the location on the simulator, that’s probably unrelated. This provisioning profile issue prevents any apps from opening on an actual iOS device. 
If it’s something you want to use personally, keep in mind with a free profile you will have to redeploy it to your phone every few days to refresh the certificate. I’m not really sure how to fix the issue other than paying. You can try this, maybe you will have better luck than I did. Delete the app from your phone. In Xcode preferences, remove your account. In keychain access, delete every single apple developer certificate. Open up Xcode again. Re add your account. Set your code signing to automatic in the project file. Try running it on your phone again.
I may be missing something, but the documentation and the proposal outline a different interface, in particular the logging levels. I’m on my phone at the moment, but was surprised to see so many levels. In my experience, that hasn’t often been the problem—not enough granularity in levels. Additionally, they seem to diverge from prior art.
&gt; I hope your wrong. you're* wrong your = the next word or phrase belongs to you you're = you are This is second grade English.
I think your height of 21 is too small for the text and it's trying to wrap weirdly. Also, I assume you're in the ViewController? Don't make another UIView, use the one that's already there. Also, label is probably a optional and will need self.label? everywhere to compile. Works here.
Why not server-side Swift? Try [Vapor](https://vapor.codes) or [Kitura](https://www.kitura.io).
Do you have more than 3-4 machines to test on? (1 for each supported OS) If not then there is no reason to split them up, the best you can do is enable parallel testing. If yes then you can just use a tool to read the test names from the xctest bundle and split those up between your runners, no need to ruin your project with a million targets.
Very nice! My first ever app was also a BMI Calculator. You can take a look at my code to compare our two different ways. https://github.com/orisraeli/BMICalc
For basic stuff you’re not wrong but there is value for advanced networking use cases...flat mapping multiple network calls, retry logic etc. 
For the multiple network calls case, I would personally rather use promises (Promise.all or await syntax on a background thread), since I think the syntax is clearer. I think the need for retry logic is massively overstated in mobile. The number of cases where a retry is actually going to give a different result if the first fails is minuscule: like basically only if you try to load a URL while driving through a tunnel, or if the server you’re connecting to has some exotic error (DDOS attack, catches fire, hit by meteor) while fulfilling the request and then the load-balancer routes to a new server instance for the second request. In most cases, it’s more than fine to show an error in UI and let the user initiate the reload, and this massively simplifies the implementation. Basically, if your application needs to retry requests with any regularity, you need to fix your server, not your client. 
Blogspam
Regional from settings provide unit preferences. Try to use those instead of letting the user choose between units..,
Hi there, good job :) Few tips for you. You seem to have 2 ViewControllers doing same this (imperial and metric), you should try to make that same controller. Try to be neet, it says a lot about person and developer. And maybe most important for now, try to read a book about swift, you have apples books for free, it will help you a lot! If you have any questions feel free to aks :)
You can't add variables in an extension. Unless they're computed, and that's not what you want. If you want to add variables, you should subclass.
If you want to add those variables to an extension and subclassing is not an appropriate way to you, you can use `Associated Objects` to achieve that. A small example of how to add a variable with extension: ``` extension UIViewController { private struct AssociatedKeys { static var DescriptiveName = "nsh_DescriptiveName" } var descriptiveName: String? { get { return objc_getAssociatedObject(self, &amp;AssociatedKeys.DescriptiveName) as? String } set { if let newValue = newValue { objc_setAssociatedObject( self, &amp;AssociatedKeys.DescriptiveName, newValue as NSString?, .OBJC_ASSOCIATION_RETAIN_NONATOMIC ) } } } } ``` These two articles should help you to understand this a bit more: - https://nshipster.com/swift-objc-runtime/ - https://nshipster.com/associated-objects/
What are your thoughts on this, is this usable and maintainable in production code?
I think it depends on how and for what you use `Associated Objects`. If you understand why this is needed and what are potential issues, you can use this in production code. Sometimes using `Associated Objects` allows making some things in an easier way and it doesn't make an extreme effect on a code like `Method Swizzling` as well 🙂. However, if you can use subclassing instead of `Objective-C Runtime`, just use subclassing. So I don't see any big problem with using `Associated Objects` in production code, and if you have an understanding of what you are doing the answer is yes, you can use this. If not, it is a good point to start understanding that 🙂.
I fixed it by unchecking the “Debug executable” box in the build scheme. I’m far from an expert, so I have no idea what, if anything, I’m losing by doing this, but it did enable me to install and run apps on my device.
There’s an advanced swift book as part of the hacking with swift books.
Whole there are a few books that go deeper into Swift, I haven’t seen one that goes into all of that stuff. Honestly reading and asking questions on [the Swift forums](https://forums.swift.org) is probably your best source for info like that. 
+ 1 on hacking with Swift. 
Hmmmmm - a timer maybe... https://www.hackingwithswift.com/example-code/system/how-to-make-an-action-repeat-using-timer
And this brings nothing to the conversation. Enjoy your downvoted.
You can check out [Advanced Swift](https://www.objc.io/books/advanced-swift/) 
You are the best! Thanks 
That’s a great book, but other than a bit here and there on memory management, it doesn’t cover any of the topics OP is interested in. 
But this is not a crash, isn't it? If yes, try to do these steps: - Go to Xcode -&gt; Product -&gt; Scheme -&gt; Edit Scheme - In the Environment Variables, add OS_ACTIVITY_MODE as name and disable as value. [stackoverflow.com](https://stackoverflow.com/questions/40024316/reading-from-public-effective-user-settings-in-ios-10)
Its not a crash but the camera access doesnt work, okay will try
It sounds like you're asking for implementation details and other parts which are still in flux. It's unlikely there's going to be a good book about those yet. You should read the online mailing lists and forums for that.
Adding stored properties has been the domain of subclassing for decades. Using an uncommon platform-specific mechanism like associated objects will signal to anyone reading the code here that "for some reason, subclassing was not an option here!" I've done that in production code, once, when that's what I wanted to say. The phrasing of the question here suggests it's probably not what OP really wants.
Can you share some mailing list to subscribe?
&gt; hacking with Swift Which one? Didn't find any on the website 
Ah yes, I remember reading about this. It was the first chapter of *The Hitchhiker's Guide to the Galaxy*. Only that time, I'm pretty sure "you should have known where to look and filed a complaint last year" was intended as a parody, not a reasonable way to acquire feedback on a proposal. I'm not even sure what you're suggesting I should have done, had I known. One of the *authors* calls interop with systems like `os_log` a "core idea" of the project. So I should have registered on that forum just to chime in with "That thing you say you want to do, you should do it, because you don't appear to be doing it"?
I’m just saying if you read the post, it’ll work with os_log which seems to be your whole complaint. 
Yes, but the interface is so weak it doesn't support most of the features of `os_log`. That's like saying the Mac supports POSIX. That's cool, but it's really a lowest-common-denominator interface these days. You can't write a good app that runs on your Mac and on Linux simply by sticking to POSIX.
As far as I can tell that just turns off system logs in the console.
Type formatters (datetimes, UUIDs, errno, binary data, etc), per-parameter privacy, (enough args to support) activity tracing, (enough args to support) stale message accumulation in memory, ... WWDC had a whole hourlong talk about everything `os_log` supports.
No, it's not. I ended my comment by saying: "And this one doesn't even seem to support half of the features of `os_log`." How can I make this more clear? 
It doesn’t support those features because it’s that low level. Once that patch on swift lands os_log will work and you’ll have all the os_log features you want. How can I be more clear? 
"Advanced Apple Debugging" helped me a lot 
This is the thread that comments on the logging levels: [https://forums.swift.org/t/logging-levels-for-swifts-server-side-logging-apis-and-new-os-log-apis/20365](https://forums.swift.org/t/logging-levels-for-swifts-server-side-logging-apis-and-new-os-log-apis/20365) more specifically the log levels were adopted as defined by syslog ( [https://en.wikipedia.org/wiki/Syslog#cite\_note-syslog.conf(5)-7](https://en.wikipedia.org/wiki/Syslog#cite_note-syslog.conf(5)-7) ) &amp;#x200B; The reasoning is essentially to bring together apple's \`os\_log\` and this swift logging system in terms of log levels.
Are you already using multiple storyboards and storyboard references? Makes it really easy to split up storyboards and not have merge conflicts. Depending on your structure, you could have a storyboard for each scene and a main storyboard with just references. 
I think they're talking about "Pro Swift", it's good, though as an experienced developer there were bits that weren't too useful for me other than better understanding Swift-specific syntax and such. Still a great read though.
Build up your portfolio and update it with your most recent work if you haven’t already. Start networking at local entrepreneur and start-up related events in your city. You’d be surprised the abundance of groups that exist, you can use Meetup or check out your local start-up organization’s calendar. It’s easier to convert clients locally in my experience, but there is a bunch of work that can be done remotely. You can utilize online freelancing services but just be aware you’ll be competing with developers from all over the world with different CoL. These are just some ways you can start building a network of clients.
Nice work!
Thanks, I forgot about some of those more advanced formatting options. While os\_log may be supported as a backend for this interface, from what I've seen apple is not trying to push you to using it on iOS/macOS. There's no reason you wouldn't just use os\_log directly. &amp;#x200B; There are plans on the os\_log side to make the API more similar (like using the same logging levels, and using Swift 5's custom string interpolation to provide some of the features you're describing). There's a thread about that here: [https://forums.swift.org/t/custom-string-interpolation-and-compile-time-interpretation-applied-to-logging/18799](https://forums.swift.org/t/custom-string-interpolation-and-compile-time-interpretation-applied-to-logging/18799) &amp;#x200B; Even in the swift-log implementation you may be able to extend \`Logger.Message\` to provide similar formatting options via the \`ExpressibleByStringInterpolation\` protocol it conforms to.
It isn’t possible to unit test Watch kit code. I recently refactored the watch app for a large company and we could only test the models and factories contained in the watch extension.
I can run the app on my iPhone by editing the scheme to “ask on launch” but it doesn’t let me to simulate any location. Do you know if it is related to this problem?
From what I understand, the last time that my team tried to enable parallel testing, it ran the same full test suite on different simulators rather than what was expected: splitting the tests up between simulators. Any idea if this was a bug or the expected behavior? Where can I find more information on how to do this? &gt;read the test names from the xctest bundle &amp;#x200B;
Probably a bug. I only do macOS UI tests on the current project, so don't know if it works with latest Xcode version. For getting the test cases: https://github.com/lyndsey-ferguson/xctest_list It's mostly used in this tool: https://github.com/lyndsey-ferguson/fastlane-plugin-test_center
I found this library for making custom customizable ActionSheets: https://github.com/danielsaidi/Sheeeeeeeeet I wrote some code that makes it look pretty similar to a regular action sheet. It's not exact, though. I'm still working on getting the appearance to look a bit more like the regular action sheet, and you can't drag to select a different option. I can share it if you'd like. Screenshots: https://imgur.com/a/7JDGapw
Yes. I’m also having this same issue but this isn’t coming in all projects which is really strange. Don’t know what apple is doing with Xcode but its really frustrating.
Unfortunately I’ve not had a chance to test it as now Xcode by default uses my paid certs. But I don’t think simulating location is related to this. Have you added the gps usage description to your info.plist file?
I think they were referring to the old Swift mailing lists. The project uses https://forums.swift.org/ instead now. Also see: - https://apple.github.io/swift-evolution/ - https://swift.org/blog/ - https://github.com/apple/swift/search?l=Markdown - https://www.objc.io/books/advanced-swift/ (Swift 5 update is being worked on)
Hey, awesome work! It looks brilliant. Would you be interested in opening a slack or discord channel for a community? Or do you have some other means to get in touch in mind?
New to Swift here! Is there any major reason you would elect not to use this framework in a project? Where would you use React instead?
thanks, I’ll look into that
Very nice, but swear to god if I see one more "Counter" example for one of these state based layout I am gonna get real mad. 
Thanks for the feedback! This is the most basic example that I worked on when I started it, but it now supports much more powerful stuff, you can have a look at the Example project. My plan is to replace those gifs and the example code with something more practical, like a password validation form.
Depends a lot on your requirements, do you need to ship for both Android and iOS? Does native navigation and accessibility matter to you? They both matter a lot to users in my experience, but maybe you're very tight on budget and won't be able to support and maintain separate codebases for multiple platforms. While Tokamak was built to enable renderers for other platforms right from the start, in its current state it would be useful probably only for pure iOS apps at the moment, macOS/AppKit renderer is at a very early stage. I very much welcome contributions that improve or add support for other platforms, but I wouldn't expect anyone to start building production-ready apps with Tokamak for anything but iOS currently. I'm working hard to change this and make it production ready for more platforms as soon as possible.
If you meant sending a get request to an image direct link (eg. https://example.com/image.png) , you can look into UIImage(data: Data(url: URL(string: “https://example.com/image.png”) . This is a synchronous function and might make your app unresponsive, you can look into DispatchQueue to do this on the background thread. If you meant sending a http request to a web API, usually they will return the link to the image (“https://example.com”) , then we can use the previous step to turn it into an uiimage and set imageView.image = UIImage(...) . Due to caching issue (like saving the image downloaded and no need to download it again every time), there’s some library you can use such as Kingfisher Hope this helps!
I'm not really sure. It's a simple project with a GPX file attached. I used to run this app on my iPhone and then go to Debug -&gt; Simulate location -&gt; "My GPX file". Now, it does not work. I don't know if there is an issue with the debugger, do you know?
Im sorry but local community thing my work in big city but not where I am at the moment. There are literally few mobile Devs in the city next to my place. We do meetups, they work locally for 2 companies which are there but I would rather move back to London than work for crappy and co🙁 I'm asking if there are certain communities online which connect startups with freelancers
Huh, I'm trying on a different computer and it still doesn't work...
The tag property exists so you can identify UIControl elements, so this would be an appropriate use of it. However, personally I try not to use the tag property because it doesn't really hold any context and there's no safety mechanisms for checking you are setting unique tags for each button. Since you only have a few buttons, I would instead setup @IBOutlets to each of the buttons, and then check which one is equal to sender to set the game mode.
Exactly. 
Try adding the usage description for GPS to the plist.info file. Generally you have to do that anywhere where an app requests anything that could be private information.
So the problem could be, that they're using xcode bots in order to run these tests. I also read online that Xcode server doesn't currently support parallel execution of tests...which could be a problem. Thank you for providing this information!
That's the only thing you have to do. By default any code you write in that file is available to other Swift files.
Thanks so much for your detailed reply! You definitely helped!
If you want cross-platform support for Android!
Yeah, Xcode server seems garbage if this article is still valid today: [http://thebugcode.github.io/ios-continous-integration-choosing-a-build-server-and-tooling/](http://thebugcode.github.io/ios-continous-integration-choosing-a-build-server-and-tooling/) I mean if you want to automate your single view hello world application then it's usable, otherwise not.
It’s cool, 7 years ago i used a similar thing for creating views albeit without bindings - SQLayout. And then the author threw in a towel, iOS got updated breaking all the margins and an app with 40 views built with that needed to be maintained. It was a nightmare. Not saying the same will happen here, but that for me is the number 1 reason not to go with these.
That did the job, thank you!
As someone who wrangles React for a living and is trying to learn iOS/MacOS programming in his Copious Free Time, I find this *very* interesting.
did you take my advice and increase the height? I used 200 (way too much) but it looks good here.
It seems like you're making it hard on yourself, based on your code snippet. If your actual code is anything like that, why not just set the tags more appropriately? As in button1.tag = 10, button2.tag = 5, button3.tag = 3. So then you just do: let currentGame = Game(mode: sender.tag) With some appropriate error handling inserted somewhere and driven by your overall design, naturally.
Tags are exactly the way I would handle a bunch of buttons that I don't want to subclass and that really only give me a single value for something. I think that future you would appreciate if you make an enum for the values of 1, 2 and other so that the code is more readable in six months when you are trying to remember what you were thinking when you first wrote this. ```` enum ModeSelection: Int { case Hard = 10 case NotQuiteSoHard = 5 case Beginner = 3 } ```` That way you have some logical values when you create the buttons and when you read them later.
I hope you find this interesting. In this blog post I’m trying to explain how to test controllers by mocking dependencies in Vapor 3. If you have any comments or questions please join the discussion 😊 What is your experience with testing in Vapor? 
The only thing I can say is check your grammar. I understood everything, but I had to fill in the gaps here and there. Thumbs up for more Vapor exposure!
See also this one: https://www.reddit.com/r/iOSProgramming/comments/b2gvya/job_ads_thread_for_week_11_2019/?utm_source=share&amp;utm_medium=ios_app
Hey all what does it mean when we add .self when registering custom cell classes For example: tableView.register(MyCellClass.self, forCellReuseIdentifier: cellID)
Highly suggest you show something asynchronous like an API call and success/error handling afterwards. 
I like this example, but what I’m struggling grasping is how do I the hard button to enum value .Hard? Would I have a switch statement that checks tag and if it’s 1, for example, then mode would be .Hard? Am I making sense?
This web page has some *amazing* photographs. Sadly, the gallery is all chopped up with a review of some web framework which seems completely unrelated.
Well I did two view controllers because like they were two "Different" view controllers. One view controller was for Metric and one for Imperial. I saw a guy on how he did the calculation with classes but I have trouble with the classes and how to pull out information from there. But as of right now I'm using this course to learn: [https://www.udemy.com/ios11-app-development-bootcamp/](https://www.udemy.com/ios11-app-development-bootcamp/) But I will look in the book for Swift by Apple, thanks. I am also working on this math game app for my APCS P AP Exam and well its using the very basic knowledge of programming to make nothing really complex. 
I increased it to \~40. I should probably increase it more lol &amp;#x200B;
Button.tag = .Hard.rawValue
Yea I saw your post first and that motivated me to post mine to get some feedback. So thanks! What materials did you use to learn swift and make your BMI calculator?
Ohhh so if their location like lets say not USA cause everyone else uses metric it would automatically take you to the Metric page instead of manually clicking it ... I like that. 
Why not just read through the Swift Foundation documentation? If you're advanced enough to want to learn such advanced topics, then you're at the level where the bare Swift documentation will be easy and comprehensive. https://developer.apple.com/documentation/foundation
Every start can be hard, just try to be curious about everything and take it easy, nothing comes over night. If you have any question feel free to aks it here, people here tend to be very helpful :) 
Every start can be hard, just try to be curious about everything and take it easy, nothing comes over night. If you have any question feel free to aks it here, people here tend to be very helpful :) 
Not really location but more which region is chosen in the settings when you setup your device for the first time. If you set it up as US then when you’re outside the US. You’ve still the US settings. 
Dev boot camps are expensive and usually don’t offer much imo. I think you can get the same thing by doing courses online and going to meetups. You will probably get more out of it because of networking, I have found Udacity to be good in US because once you pass their course they help you find work. Also they give you assignments that an actual developer would review. Other great resources are Udemy courses $10 -13 or going through Paul Hudson’s courses or doing the Harvard iOS program, make sure to check out the latest they always update it. Gluck!
Well this my second project I am currently working on: [https://www.reddit.com/r/swift/comments/b34p9k/second\_xcode\_project\_crazymathgamei\_need\_better/](https://www.reddit.com/r/swift/comments/b34p9k/second_xcode_project_crazymathgamei_need_better/) you can check it out. 
Thank you so much!
you can set it through enums that way it has context and is easily changeable without breaking code
I second that suggestion! I've never used React so I'm trying to get my head around how this swift framework would handle an API call with success/error handling. Please and thank you.
“Duplication is far cheaper than the wrong abstraction” - Sandi Metz 
That's fine, though there's a lot of magic numbers here. Make some consts.
And did you either use the existing view or set the size of the UIView you created?
Thanks 
I'm brand new to the Swift language. Currently following the Stanford IOS class in my free time. In this struct: `struct Card {` `var isFaceUp = false` `var isMatched = false` `var identifier: Int` `static var identifierFactory = 0` `static func getUniqueIdentifier() -&gt; Int {` `identifierFactory += 1` `return identifierFactory` `}` `init() {` `self.identifier = Card.getUniqueIdentifier()` `}` `}` &amp;#x200B; I see that the init is creating an identifier every time a new instance of the struct is created but my question is doesn't each new instance of card start withe the var in identifierFactory at 0 giving every card the identifier 1? Thanks
Programming is fun again! Seriously, this looks great.
I didn't change anything related to the UIView.
I agree that enums are a great way to make tags safer, but you would still have the problem of setting the values correctly in the xib or storyboard. And if you instead set the tags from the enum in code, then you're back to having an @IBOutlet for the button anyway.
How could you test the models if the models are located in the watch extension folder? &amp;#x200B;
I won't mind Java. 
Figured it out for anyone else who has the issue. contactData\[0\] = contactData\[0\].sorted(by: {$[1.name](https://1.name) ?? "" &gt; $[0.name](https://0.name) ?? ""})
hello r/swift this is my first post, I hope I can meet some Rx fans here
I've got pretty limited experience, but elixir is pretty cool, it has the same ability to define the same function with different argument signatures that Swift has, although it's implemented differently and that's pretty much where the similarities start and end between the two languages, and it's definitely more niche than Java. I'd guess you'd have the easiest time job hunting with Java. I don't work with Swift anymore, but I haven't used anything as good since.
Do an hour or two of hackingwithswift.com every day and you’ll be an iOS developer in no time (maybe a year, but you’ll save that bootcamp money). Just be sure to do your own projects for fun as well using the concepts you’ve learned, to reinforce it. 
If you need to know what action to perform based on which button, then use an IBAction. If you’re modifying the UIControl/UIButton appearance, then keep a reference to it with an IBOutlet. Rule of thumb with tags if you really MUST use them: never ever reference them outside the scope of the view that’s calling viewWithTag. 
I can understand the pain. Currently trying to bug fix a reactivecocoa project and it been a pain in ass. The framework cant be upgrades and memory leaks are even harder to find. And dont even talk about trying to understand someones code reactive code.
Prisms + GraphQL on NodeJS which I think the hassle-free way to have a https backend without trouble
It could be simple or terrifying hazing. I've experienced both. Big O notation is de rigueur and knowing about various patterns and data structures are nice to know.
Thanks. What Java framework do you use for backend?
You could create a Test target for any platform and then enable target membership for the relevant files.
&gt;patterns Do you mean design patterns? like MVC? Big O, is always there and usually a test during the call. &amp;#x200B; Others that i can think of: \- String manipulations, like sub-string, the use of iterator. \- Sorting algorithm \- Recursive function
I find Ruby / Rails (or even Sinatra) is a pleasure to use, the syntax is similar to Swift and you can quickly spin up a web app in matters of hours. There's common criticism on the slowness on Ruby but it definitely can be further optimized should you encounter these problem (but also congrats that your app has enough user to make the backend slow). 1. Ruby/Rails dev are high in demand in my region (Asia) 2. Definitely a pleasure to use, with support of a lot of ruby gems(library) and most people in ruby community (r/ruby) are nice
Thanks Ill try this when i can
PHP symfony is a bliss
I personally preferred PHP with Laravel 
Select your project &gt; iOS target &gt; General page: https://i.stack.imgur.com/lA46i.png
data structures, do some problems on Project Euler
For me it’s got to be Ruby on Rails. In fact every time I use it I wish apple would copy some of the great stuff rails provides (for example ActiveRecord is a breeze compared to CoreData). I’d say Ruby on Rails is many times more productive for developing than Swift/Foundation/cocoa/uikit.
That’s it? Thanks!
There are many. Currently am using https://spring.io/ for couple of my project. I have also used Struts in several projects few years back. https://struts.apache.org/
The site is very helpful, thank you very much.
Thank you, this seems to be a good topic. Do you happen to have covered a deep dive of regex with swift?
That's interesting, do you use any 3rd-party libraries at all? If you do, what are your required and optional criteria for a library that you'd use?
Thanks for the feedback! Not yet, but it might be happening​ in the future.
I will try it!
Seems like a pretty cool solution and a great improvement.
Take a look at [Grails](https://grails.org). It runs on the JVM and one can claim it's Java (although it's really Groovy) and built on the very popular Spring Boot framework &amp; Hibernate &amp; some other very popular Java libraries. I find Groovy a much more pleasant language to work in than straight Java - the syntax niceties &amp; shortcuts it provides save a LOT of typing, and you can write it as straight Java if you like.
buy Cracking the Coding Interview Good luck.
Good material! Definitely will get this book. Thank you.
why not this? : class SubCell: MainCell { init(title: String) { titleLbl.text = title } } &amp;#x200B; &amp;#x200B;
Complexity of ReactiveCocoa and RxSwift is exactly what motivated me to build Tokamak. The amount of concepts that Tokamak requires you to learn is very minimal (it's just declarative trees of UI components and hooks for side effects basically) and you can use the usual Swift patterns to build complex apps. There is no need to learn anything about special operators and nothing specific for memory management is required. Would you also mind describing why in your case the framework can't be upgraded?
This sounds like great advice. I happen to have Java as my first language and I was quite advanced at it before I dropped it for Apple things. Will look into this. Thanks!
Walking binary or b-trees. 
for *a padawan to* practice RxSwift
The `~=` operator is cute and may be useful someday but as of today (Swift 5) it's still pretty buggy, like [this](https://bugs.swift.org/browse/SR-1121) and [this](https://bugs.swift.org/browse/SR-3012). It's not one of the better maintained parts of Swift and I would be extremely careful using it in any production code where I cared about the results.
&gt; What’s a backend stack that you’ve found to be a pleasure to use, besides the ones in Swift? Does this question assume that we find Swift pleasant to use on the backend? &gt; the polish of Swift and the Apple SDKs I can't tell if this is a joke or not. Let me go back to working around another swiftc bug I found...
Sorry about my grammar 
Thanks!
Yeah, you're making sense and like u/lord7ouda says you use the .rawValue to get the Int out of the Enum so that you can compare it to the tag value. The other thing you could do would be to init an instance of the enum with something like this ```` if let chosenButton = ModeSelection(rawValue: self.view.tag) { switch chosenButton { case .Beginner: //do a beginner thing case .Hard: //do the hard thing case .NotQuiteSoHard: //do the medium thing } } ```` 
vapor!
Long term PHP developer here. I find swift interesting because it's a nice evolution of the C/C++ language and has a very good string manipulation library ( something i use a lot in web development with php ). Performance also seems fantastic for a language with some high level elements. A framework like Kitura or Perfect seems to wipe the floor with node js. In many instances, Swift can get very close to C/C++/Rust performance. https://medium.com/@rymcol/benchmarks-for-the-top-server-side-swift-frameworks-vs-node-js-24460cfe0beb The appeal to me is that the jump from PHP to Swift has small learning curve due to the C/C++ roots of both languages. I absolutely abhor javascript because of it's wild inconsistencies. PHP isn't an angel in that regard, either, but the devil you know.. Your first point about Apple as a company is my main concern. I'd love to use swift for a high performance backend, but linux sits on the back of the bus so far, and Apple may just cut off support arbitrarily one day. 
I assume that there are people who like Vapor in r/swift. You, specifically, might not like it, but I did not consider you in my assumptions. And obviously, no SDK is perfect but Apple’s is incredibly clean (plus first-class dev support too) when compared to others. You’ll just know what I mean if you have enough experience.
Can you post the code you use? What you described really should work as expected as long as the *app* stays in foreground.
Look into UIBackgroundTask, you can keep your network request running in the background. https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtask
You can mix in kotlin pretty easily. no personal experience, but some of the guys I work with use and love kotlin on the backend, and it's basically swift for the JVM. Probably not a lot of jobs explicitly calling for kotlin experience, but it's a comparatively easy sell for any java shop compared to any other language you'd want to work in.
We used the main app test target. There were a few steps add the main app test target to the Watch extension scheme, uncheck any tests that aren't for the extension. Then create your new test and make sure they are checked within the test target for the extension. Lastly go to the main app scheme and go to the test target and uncheck the tests for the watch extension. This should insure that failed tests for the watch extension don't affect the main app scheme and vise versa. 
For me it's been C#, especially since .NET Core is open source and does work on multiple platforms. It has some of Swifts syntactic sugar, is verbose like Swift and has lamba expressions that are similar to Swift closures. Oh, and LINQ is a really great tool that makes working with collections, lists and so on, very easy. 
I've been using virtualbox os mojave running on my pc. 
Move networking from view controller to another object. Lifetime of this object should not be same as view controllers.
Yep, MVC, MVVM, maybe asking about protocols and extensions too.
It's very rare but could be an Xcode problem. Delete app from simulator, Product -&gt; clean, close xcode, delete derived data, open xcode, build
i got this warning Automatically Adjusts Font requires using a Dynamic Type text style \[9\]
It sounds like a you issue
It is in another object which survives all application . I just reference that object from ViewControllers to initialize network request which gets killed after app goes to background and imediatiely returns
The picture you posted shows the font changing to bold and larger; so I'm not sure what you're asking. Are you trying to get it not to truncate the words?
Ignore that, I’ve increased the size of the text and made it bold, after I built it and ran, it stayed non bold and the same size
Oh, sorry. Could you please paste error from networking?
You network calls to work in the background you need to use an URLSession with URLSessionConfiguration.background()
I think my comment got deleted, but ignore the truncation, I made the text bigger and bold, but the changes aren't applied, however if i change the colour it would change, so I'm confused. 
how should I do that in code? let sessionBackground = URLSessionConfiguration.background(withIdentifier: "test") let task = sessionBackground.dataTask I get an error, which says it can't be performed
The Apple OS is designed to kill networking when the app goes into the background. You can try to get around it by setting in your info.plist Background Modes -&gt; Background fetch. Here's a link to Apples documentation: [https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html](https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html)
What if I do that in the framework? will our framework work well if application which does not include that in their Info.plist?
You need to add the Background fetch in the Info.plist. The rest of the code will go in your appdelegate and whereever you're handling your networking functons.
Do you have code we could look at? Just to get an idea of the how you have things set up and is this being used in a UItextfield, tableview, etc.
There’s no code it’s literally just a label on the view 
I'm going to guess there is a constraint on your label that is forcing the label to be a particular width or height and it is adjusting the font to fit in that label at runtime. 
 **2019-03-20 21:15:12.675242+0200 testing\[945:234482\] TIC Read Status \[3:0x282fb1e00\]: 1:57** **2019-03-20 21:15:12.675592+0200 testing\[945:234482\] \[\] nw\_connection\_copy\_connected\_local\_endpoint \[C3\] Connection has no local endpoint** **2019-03-20 21:15:12.680325+0200 testing\[945:234482\] TIC Read Status \[4:0x282fb30c0\]: 1:57** **2019-03-20 21:15:12.680409+0200 testing\[945:234482\] TIC Read Status \[4:0x282fb30c0\]: 1:57** **2019-03-20 21:15:12.680912+0200 testing\[945:234482\] \[\] nw\_connection\_copy\_connected\_local\_endpoint \[C4\] Connection has no local endpoint** **2019-03-20 21:15:12.689823+0200 testing\[945:234482\] TIC Read Status \[2:0x282fa9800\]: 1:57** **2019-03-20 21:15:12.689911+0200 testing\[945:234482\] TIC Read Status \[2:0x282fa9800\]: 1:57** **2019-03-20 21:15:12.690866+0200 testing\[945:234482\] \[\] nw\_connection\_copy\_connected\_local\_endpoint \[C2\] Connection has no local endpoint** **2019-03-20 21:15:12.694362+0200 testing\[945:234482\] Task &lt;9083C376-BA4A-4F5F-94A6-239C1291A770&gt;.&lt;5&gt; HTTP load failed (error code: -1005 \[1:57\])** **2019-03-20 21:15:12.695483+0200 testing\[945:234245\] Task &lt;9083C376-BA4A-4F5F-94A6-239C1291A770&gt;.&lt;5&gt; finished with error - code: -1005** **2019-03-20 21:15:12.695846+0200 testing\[945:234482\] Task &lt;A2F71E10-E796-4DB9-8ECD-6A3C8D144C3F&gt;.&lt;8&gt; HTTP load failed (error code: -1005 \[1:57\])** **2019-03-20 21:15:12.697601+0200 testing\[945:234482\] Task &lt;123E5128-F435-491E-B9E1-B1AF2E1C7BAC&gt;.&lt;9&gt; HTTP load failed (error code: -1005 \[1:57\])** **2019-03-20 21:15:12.698538+0200 testing\[945:234482\] Task &lt;A2F71E10-E796-4DB9-8ECD-6A3C8D144C3F&gt;.&lt;8&gt; finished with error - code: -1005** **2019-03-20 21:15:12.708817+0200 testing\[945:234482\] Task &lt;123E5128-F435-491E-B9E1-B1AF2E1C7BAC&gt;.&lt;9&gt; finished with error - code: -1005**
I only found required background modes and the only one appropriate is app downloads content from the network
added that no success, getting this error: [https://forums.developer.apple.com/thread/106838](https://forums.developer.apple.com/thread/106838)
[screenshot of background fetch in Xcode](https://www.dropbox.com/s/dyfl6yj54f4wv4n/Screen%20Shot%202019-03-20%20at%202.27.33%20PM.png?dl=0)
That's your problem; you have to use header, footer, title, etc for the dynamic type text to work.
there is none for a framework...
Hey thanks a ton for the reply. I realized actually that I was passing data to cells in the lines between first dequeuing them and returning them in cellForRowAt. They get initialized in the dequeue, so I couldn’t pass the info that early (IIRC). I had to initialize/dequeue first, then set the variables after, then return that cell. Also, using init() would require calling another init method.