if i email it, how can i trim the size?
Read that article. Basically you remove the assets that are not being used. [Playground Book Package](https://developer.apple.com/library/content/documentation/Xcode/Conceptual/swift_playgrounds_doc_format/index.html)
okay thanks. il let you know if it works
Good luck with it!
one more question, how much will the file size be when zipped? right now the best i can do is reduce it to 95 before zipped.
Media files generally don't compress well because they're already compressed so every byte you remove will be nearly the same amount in the final zipped file. Text compresses very well so I'm betting that the code and other text files are actually pretty small.
awesome, thanks
your amazing, thank you, it worked!!!
Thanks for the help guys! 
sorry dont mean to be bugging you about this lol, didnt you say that you wanted to see the xocde file? after zipping its now 100MB
Nah, you're not bugging me. Didn't you need to get it down to under 30MB? Sure, if you have a way to share it I'd look at it and see your project.
okay, one sec
That's way worse than your original version.
Nice! Looks good, hope it gets you to WWDC.
Lol, I never said it was better. I said it was crazy.
Looks cool, I wonder how much this compiler/language will diverge from Apple's Swift project hopefully it's not going to different by it's nature it'll be more supported on linux and windows
His tutorial was so bad I almost stopped watching it. It makes me want to do one of my own.
That's not a premature optimization. It's just a general rule of thumb: prefer simple iteration over map/filter/join. Simple iteration is clear, you know you're not allocating anything more than you're saying to allocate. With map/join, you never know what happens under the hood. Anyway, we can easily measure it: the for loop runs more than 70 times faster than the map/join. You can try running the code with optimizations or without optimizations. https://hastebin.com/koxaroyulu.swift Now in this case it's a trivial irrelevant scenario. However, as a general mindset: always default to using for loops. They are easier to read, easier to follow, and usually _much much_ faster than alternative ninja/functional approaches. This is _NOT_ premature optimization. You should always write code in the most straight forward clear fashion. Not doing so is premature pessimization. 
How about recursion? import Darwin func randomDigits(count: Int) -&gt; String { guard count &gt; 0 else { return "" } return String(arc4random_uniform(10)) + randomDigits(count: count - 1) } print(randomDigits(count: 8)) 
I didn't say that one version was better than the other, just that it's not really worth worrying about which version is faster. This is likely to be something used a few times and not in a tight loop. Just implement it in any way that seems easiest and most obvious to you and don't waste time worrying which way is the fastest. It's not likely to matter much. As to `map` vs iteration, they both have their uses. I generally use iteration when I might want to escape a loop early but `map`, et. al. when it's nice to have the code concise. Both can be overdone, confusing, and feel sloppy so judge them on a case-by-case basis.
Note I said: &gt; Now in this case it's a trivial irrelevant scenario. I hope you read the rest of my comment before hitting the reply button.
According to [this post by Chris Lattner](https://groups.google.com/a/tensorflow.org/forum/m/#!topic/swift/xtXCEvtDe5Q), “we... aim to get as much of our code upstream as possible, when it is mature enough for that to make sense.”
For me personally, I don't use any dependencies unless I have to. Most of what I'll ever need is built-in with Apples provided frameworks, and in most cases far more optimized than what you'll ever get from a third party. Exceptions would be things like SDKs from your crash logging services, analytics, social media SDKs, etc. You can probably get away with never using another networking library again. Apples are very mature these days. I know a few agencies that just have a standard Podfile they use for all projects. Even if there's stuff in there that they will never use. Saves them money I guess, but it's bad practice. 
Of course I did. That's why I responded to your whole comment.
The times vary randomly on my machine but they average about something like this: Time for map/join: 0.673628ms Time for loop: 0.005847ms For loop is faster by a factor of ~115
In a playground or a project? Using your exact code? Compiled for what OS? That result seems...odd.
I did it in a terminal on macos. Create a file `str.swift` then run it either directly or with optimization: Directly: $ swift str.swift Compile with optimizations on: $ swiftc -O -o strswift str.swift $ ./strswift 
That works too, of course. I’ll have to poke at it more when I get a chance. 
Pytorch is easier to read. Don’t really like TF.
That's fair, and you're right that they probably don't *need* to be tied to this specific OS update. However, the tradeoff is not being able to use any of the High Sierra APIs in Xcode, and there's the (I assume) more significant cost of maintaining compatibility with all of the system APIs which aren't public and therefore aren't binary compatible between OS releases. Speaking for myself, I'd rather they didn't spend extra time maintaining OS compatibility for developers and invested that time in fixing issues instead...
Has anyone done Mark Price’s course on Udemy. Is it any better?
ATP: https://itunes.apple.com/au/podcast/accidental-tech-podcast/id617416468?mt=2 CoreInt: https://itunes.apple.com/au/podcast/core-intuition/id281777685?mt=2 Independence: https://itunes.apple.com/au/podcast/independence/id1238555061?mt=2 Mobile Couch: https://itunes.apple.com/au/podcast/mobile-couch/id599454382?mt=2
I'm not sure what High Sierra APIs there would be, I guess there could be some. TBH, I don't care what the OS does. They add all the cute things to it and the only thing I care about is being able to write programs. I started work back Snow Leopard came out and I can't think of any OS features that I use past what was offered back then. I get major changes like 32 to 64 bit, Motorola to Intel chipset, etc... but this just seems like it's too much. As far as fixing things, I wish there were 1/2 the concern for Xcode working well as there were towards forced upgrades.
I'm writing a code of matrix multiplication in swift and python but both code generates a different output. I also write this code in C++ but it generates same output as in python, I checked the swift code again and again but I got no difference I'm trying to multiply these two matrices. Here's I asked question on [StackOverflow](https://stackoverflow.com/questions/49585283/different-output-in-matrix-multiplication-python-vs-swift/) but not get any response
I just want to add that you should learn proper MVC and not "Apple MVC". There's a difference as I've been learning recently :) If it's architecture you're interested in, consider MVVM and other patterns.
0.72 hours a day. I'm not kidding. I take it seriously, my apps pay the bills but, according to my records, that has been my average since September 2nd last year, when I started tracking it. To be fair, I took a break over most of December and I do have another job. Still.. I was surprised it was so low. I should work on that.
You need a developer account to load the app on your phone. It’s the only way it will trust it. Have you considered trying out the perennially popular To-do app as a first project? Maybe with some iCloud syncing?
BNR and many others have ToDo list apps that are great. You learn data storage, UI, master-detail, etc... BNR is Big Nerd Ranch, they've been making books for iOS for a long time. Udemy has the Ray W tutorial and Angela Yu in their Swift 4 series.
Yup, “Apple MVC” just generally means cram everything in the view controller and totally ignore Separation of Concerns.
You can load an app to the phone without a developer account, but it will only work for a week or so. You can resign and reinstall it and not lose any data. It's a major pain to have to do every week, though. Source: did it myself. 
I always recommend Let’s Build That App on YouTube. He recreates popular apps step by step. 
Interesting. Can you link to instructions?
You don't need a notification set up You need to look into this: `MPRemoteCommandCenter` . Look into that and then enable togglePlayPauseCommand and handle the logic inside its addTarget method
THISSSSSSSSS
Bank that uses sourcetree and Jenkins... sounds like a big blue bank I work for as well. 
First of all, this algorithm has nothing to do with matrix multiplication. Second, you didn't make this easy to run. The matrices are just pretty-printed versions, and not something that can be run directly with either Python or Swift. Third, you didn't make this easy to inspect. The first three opening braces each use a different style. The indentation is inconsistent. The variable naming is bizarre. There's lots of hardcoded magic numbers. The ranges got ported to while-loops. I suspect that if you clean up your code, the problem will be obvious, and/or you'll have more luck getting help with your code.
Thank you 
I just fixed that, the bug fixed by using arr.removeAll() :P
Try something which you can connect to your life or hobby, instead of a boring n+1th todo or weather app. It should have persistent data storage, networking (better if you try alamofire, and you could even use PromiseKit), ui animations, custom views (for example tableview cells with xibs) elements and of course networking. My first project was a Death Counter app for video games. You can search video games on Internet Video Games Database, add them to your “library” and increase, decrease death count. The library is persistent, of course. Also it’s good that you have multiple screens with different kind of segueing. It really worked out for me, and I learnt a shit ton of things from it!
Ah I just saw the new update! I'll give it a shot and see if my code works
show the rest of your code, is this function inside the class you are initialising?
It took a fair bit of searching and time but I got a fantastic job and moved to Amsterdam through it!
that's awesome! did you usually write small cover letters or no? Also did you mass apply because i heard employers on AngelList can see the number of positions you apply to on the site and it looks bad to some employers if you mass applied
Some of both. Depending on my motivation level I’ve spent 15-20 min each application at times and sent a hundred applications in 15-20 min at times
Could you give me a sample of one of your optional messages you sent to a company on angellist? 
Hmm, still yields the same bug. One thing to note is when I ran it in playground, a popup did appear saying "auxiliary module did not compile successfully" My playground application is running swift 4.1
Edit: I managed to fix this error by creating a new variable from the zip and using a for in loop I guess swift 3 code is still obsolete
Check out Stanford’s iOS course. Not only do they provide the project documents but the course is also taught very well
&gt; don't hesitate to tell me if I'm completely wrong with my way of approaching things. This will be kind of meta, also ** BLUNT COMMENT WARNING ** &gt; I have finally done it - I participated in the open source community! I don't understand why people think that this is a "thing" or even a "goal" to be achieved? 
Hi wavy, I think I get what you are talking about - the lack of pragmatism. I get it. So idealism is clearly a point here for me, yes. I want to share something useful with the people out there. But this does not mean that I consider this to be an "I haz open source"-garbage-project. I do plan to maintain it!
Feel free to contribute or share your thoughts! I'd be happy about it.
I'm in the same boat as you! I found a flappy bird game ("FlappySwift" by fullstackio) that is written in Swift 4. Give that a try! It's a pretty small, simple game 
Check out https://vapor.codes or https://www.perfect.org. Both are quite mature. Vapor is very similar to Ruby on Rails while perfect has a less pre-defined architecture.
I’m an idiot. xD my bad.
This is the correct way to address the error anyway... did Swift 4.1 really undo this change?
TIL: Even lolcode implements all and any functions: public func _lolcode_all_of(_ values: Any...) -&gt; Any { for value in values { if !_LOLCodeValue(value).asTroof { return false } } return true } public func _lolcode_any_of(_ values: Any...) -&gt; Any { for value in values { if _LOLCodeValue(value).asTroof { return true } } return false }
**I just finished updating all my books for Swift 4.1**, including the free online edition of [Hacking with Swift](https://www.hackingwithswift.com/read) and all 576 articles of my [Swift Knowledge Base](https://www.hackingwithswift.com/example-code). If you weren’t aware of what’s new in Swift 4.1, I wrote articles [here](https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1) and [here](https://www.hackingwithswift.com/articles/52/swift-4-1-improves-codable-with-keydecodingstrategy) summarizing the key changes. Now that Swift 4.1 is complete, the process of tagging all the Vapor 3 repositories as final is also underway. So, **I’m running a 50%-off sale for my Server-Side Swift: Vapor Edition book**. It’s fully updated for the final release candidate of Vapor 3, and as more repositories are tagged for 3.0 your code will automatically switch over. This offer is limited to 100 people: [click here to claim](https://gumroad.com/l/server-side-swift-vapor/vapor3isgo). **This Tuesday I’m running two online workshops.** Both are rather oversubscribed I’m afraid, but I think I might add a third for overflow. If you want to try your luck for a spot [this one](https://www.crowdcast.io/e/hacking-with-swift-live-2-1) is at 10am UK time (UTC+1) and [this one](https://www.crowdcast.io/e/hacking-with-swift-live-2-2) is at 7pm UK time. **For the rest of the month I’ll be focusing on writing more articles on the site.** Recently I wrote “[What 2018 has in store for Swift](https://www.hackingwithswift.com/articles/62/what-2018-has-in-store-for-swift)”, “[Want to win a WWDC scholarship? Previous attendees give their advice](https://www.hackingwithswift.com/articles/60/want-to-win-a-wwdc-scholarship-previous-attendees-give-their-advice)”, “[How Swift keypaths let us write more natural code](https://www.hackingwithswift.com/articles/57/how-swift-keypaths-let-us-write-more-natural-code)”, and more. 
I have no opinion on this project actually. Dependency injection is not something I'm really into. If I did have a blunt opinion about the code itself, believe me, I would've said it directly. I know it sounds mean and harsh, but I think more people in the industry should discourage the "me too" open source participation thing because that is what led to npm and left-pad and is-even. &gt; Why would you think that participating in community is not be a goal to be achieved? Having useful knowledge and sharing it is a good thing. It's not the participation that's desirable; it's the positive contribution that counts. 
Your comment wasn't harsh, no offense was taken. I completely get your point. But you need a motivation for doing things, right? Mine is idealism and not just contributing something that's completely useless. I've spent too many hours of learning, trying, failing (&amp; repeat) without getting paid just for the sake of contributing garbage.
Apparently not, I guess my example (since I was using a macOS playground) was too simple. Using this code in an iOS playground I see the same error so still need the `let (item, offset) = pair` line
**LinguaBrowse** Continuing to work on my first ever app that I released last month (after 9 months' development), [LinguaBrowse](https://itunes.apple.com/gb/app/linguabrowse/id1281350165?mt=8): a free web browser for reading foreign-language websites on iPhone &amp; iPad. It allows you to immerse yourself in native texts in any of over 30 languages without having to constantly switch out to different apps for tools like dictionaries and alphabet charts; everything you need is inside, and accessible with a single tap. **CORE FEATURES** * Tap-to-define: defines a word with a popup dictionary. * Tap-to-speak: speaks the word aloud (via text-to-speech) * Add phonetic transcriptions: add phonetic transcriptive text like pīnyīn (for Chinese), hiragana (for Japanese), or Roman characters for any other language (e.g. Russian, Greek, etc.) * Universal: There's large support for different language pairs (because not everyone is a native English speaker!), so e.g. a Bulgarian can learn Croatian using a Bulgarian&lt;-&gt;Croatian bilingual dictionary. **WHAT'S NEW** * The online dictionary's visual layout is vastly better now. * Words are now highlighted upon tap. * There's now a startup tutorial, made using TNTutorialManager. * Support for looking up most languages' words even if they're not in dictionary form (blog post I made about the tech involved [here](https://birchlabs.co.uk/blog/jamie/linguabrowse/2018/03/10/looking-up-words-in-thirty-languages.html)).
You have to first copy your included file to the documents directory, then you can write to it. If you don't move it, it will be read only.
Your table shouldn't crash when your CoreData store is empty. Without seeing the rest of your controller, I'm guessing you're force unwrapping something or not properly return the correct number of rows for the tableView and accessing an out of bounds index in your array.. You should looking into using NSFetchedResultsController, when properly implemented you don't have to worry if there's any data or not.
Whatever the client wants I guess smh
This really pisses me off. It's a very well written article but it's also April fools. For the time being I'm going to pretend it's fake 
Eh... you made a mistake and now you know more about Swift. You just made this mistake on stage ;). Happy hacking!
It’s 100% fake lol but a good article
For you information I've read this one : [tutorial](https://www.raywenderlich.com/150073/ios-unit-testing-and-ui-testing-tutorial)
Have you tried googling it?
For starters you could watch some of Apple’s WWDC Keynote sessions from a few years ago when they introduced Swift. There’s a lot of good beginner content on there. If you’ve got any prior knowledge from other (similar) programming language you could of course just start coding something and figure it out as you go along. A big part of Swift is really beginner-friendly imo.
Are the WWDC videos on these subjects not good enough?
I did more testing and generated some results with this code: https://hastebin.com/firirekejo.swift Relative results with optimizations, `swiftc -O`: functional: 12.9 loop : 6.4 recursion : 12.4 formatter : 15.0 table : 1.0 The table implementation is interesting. It skips computing the exponent and just uses a lookup table: let powers:[UInt32] = [1,10,100,1000,10000,100000,1000000,10000000,100000000] func table(digits) -&gt; String { return String(arc4random_uniform(powers[digits])) } Make the table as large as you need, of course. Interestingly enough, hard-coding the value instead of looking it up saved very little time. This was the fastest I could get without dropping down to C or another low-level implementation. I was actually surprised that the "formatter" implementation did so badly vs converting an integer to a string. However, I never found the "loop" version to be more than about twice as fast as the other versions. I wonder if the compiler somehow optimized out the loop due to the result not being used in your version of the code , thus making it so much faster.
Yes, I have tried Googling it, many times, which provided no solution. I’ve managed to get it returning values other than 0, but nothing still no insight as to why it is assigning a value of -16777216 to any turn.
Can you be more specific than "the more I read the more I'm confused"? Can you explain what part you understand and what part you don't understand? You might not need a tutorial past the RayW one listed.
 So my problem are the following : * I don't understand how I should "architecturise" my unit test (each class should have a unit test on it's own) * is there any prerequisite for unit test on a MVC application ? * more generally I just didn't understand how to unit tests as whole concept not juste for xcode/IOs (or at least I think I don't know)
You can setup two segues and give them an identifier and go from there. But why a confirmation to a ViewController and not just a pop up menu? 
Writing a blog post for a [layout library](https://github.com/HotCocoaTouch/DeclarativeLayout) I wrote
I had the same issue. In my case it helped to disable iCloud Drive, delete Swift Playground, load Swift Playground again and enable iCloud Drive again.
I'm a professional javascript developer and I'm learning native development on the side. Mostly because I don't actually like JavaScript that much but I love Swift. I use React Native and Ionic at work though. I hope Swift takes off in other domains because it seems like the future of app development is cross-platform solutions.
I’ll try that. 
That worked. Thank you kindly! :)
It's likely that you reached that number due to integer overflow. Adding increments of ten until you wrap around, and bam, your number is no longer an increment of ten. 
Brilliant example of democracy 
I would use UserDefaults. It’s a super simple persistent key value store. 
Sorry could you elaborate a little more as to how I’d use that to only show something once, please? Thanks 
I thought you could create an SKImage from a UIImage.
I did look up SKImage in google and the apple developer website, but both yielded no results. :(
I must be thinking of something else...
Interesting read, nice code. So calling the “suspend” selector or exit() is the part that would block an AppStore release? Together with the UI guidelines of course.
Yeah "suspend" is a private API and `exit()` crashes the app. Both break the App Review Guidelines.
First off, only half of the code is formatted as such. Secondly, what’s the error actually say?
You are unwrapping a nil value on line 47
How would I fix this?
Partly from [How to Add Touchscreen Home Button on iPhone, iPad](https://gadgets.ndtv.com/apps/features/how-to-add-touch-screen-home-button-on-iphone-ipad-648588): 1. Open Settings. 1. Go to General &gt; Accessibility 1. Scroll down to the section labeled INTERACTION and tap on AssistiveTouch. 1. On the next screen, toggle AssistiveTouch to the green On position. 1. Press "Customize Top Level Menu". 1. Hit minus until there's just 1 icon. 1. Press the last icon and choose "Home" 
Yeah. When the user logs in you'll check for a key in UserDefaults.shared.boolForKey("hasSeenVideo") != True. This works because it's nil the first time(e.g. it isn't true because it's nil) and then you'll set it to false later. If that falls through then you cab show then the video and then you will set it like UserDefaults.shared.setValueForKey("hasSeenVideo", true") and then the next time through they won't see it. I am typing this on my phone. Could be Bool for key or value for key. Can't remember syntax off the cuff. But you get the idea. 
Thanks, I'm a bit of a hack at swift and fall on old habits. 
You should try and give in a bit to new habits. You'll be surprised how much of what you learn can be applied to other languages like ES6 (JavaScript) or even Python or C#. ```navigationController?.viewControllers.first(where: { $0 is TheOneIWant }).map { self.navigationController?.popToViewController($0, animated: true) }``` I wouldn't use $0 but properly labeled variables, as well as putting .map and maybe .first on newlines. Also didn't really test this so sorry if it doesn't compile.
That's what I meant. Not that I was sticking with the old. I was just changing it in my code. Although I had changed it to: if let test = viewControllers.first(where: {$0 is nameOfController}){ self.navigationController!.popToViewController(test, animated: true) } 
Bad joke, a very bad joke. This is why I hate April 1st. Every single one of these "articles" should have a clear indication in its title that it's a joke so I can skip clicking on the link.
One thing you should do is have a timer so that a if a person doesn't make it all the way thru the video, they can watch it again. Sometimes the video playback fails and you get locked out. I had something like that happen, after the connection the program crashed and it wouldn't work after that.
Dear god, don't send user passwords unencrypted in JSON.
I thought this, but the number -16777216 doesn’t seem to be anywhere near any kind of boundary for any of the fixed width Int types. Plus, from what I can tell, Swift throws an error and crashes your whole application if you overflow an integer. So I don’t think it’s that.
oh yeah i was aware of that but i'm not quite sure why i stored them as strings to be completely honest
You can use `.lazy.filter().count` to spare the intermediate array allocation.
Roughly 6 hours a day 7 days a week. So give or take ~42 hours. This is learning on my own though not a job
I totally feel you. I used to do the same thing until it started causing me problems. 
Absolutely, I left out the `lazy` just for simplicity.
Update: I have a partial answer, as detailed above.
Mobile Couch is no longer produced. This repo has some podcasts that might interest you: https://github.com/vermont42/Podcasts
If you indent all of your code by 4 spaces or more when you post here then it will be formatted as code instead of as regular text. This will make it much more readable for the rest of us. Right not it's a mess and most people won't even bother trying to decipher it.
This is like trying to eat soup with chopsticks jesus
Knowing it happened on thread 1 is about as useful as knowing it happened on the first floor. What's the error?
I was thinking once one user is logged into spotify, the other user's that did not log in will send their searched "strings" to the original logged in user somehow and it searches on the logged in user's end but i have no idea how I would accomplish this with spotify's ios sdk/web api
right that's what im suggesting. just keep track of the other user's string request. and just act like that request is from the logged in user. for example, create a helper class called spotifyManager. app -- &gt; login premium user, enqueue song search string, callback --&gt; spotifyManager spotifyManager methods : auth token, queueOfSongRequests, getSongsWithCallback spotifyManager --&gt; dequeue song search with auth token --&gt; Spotify iOS sdk Spotify iOS sdk --&gt; return list of songs --&gt; spotifyManager spotifyManager --&gt; returns results and handles callback --&gt; app
Ok thanks a lot will look into this 
if you have a repo I can help you in exchange of downloading my app, and subbing to my youtube channel.
Ok sure ! it’s late here so I’ll probably get back to you tomorrow 
It's been in the language for a long time, it's just not used often enough. :) http://blog.krzyzanowskim.com/2015/11/13/where-where-may-be-used/
Wow, never, ever saw this before. Do you happen to know if Java, Kotlin or any others have that?
foreach in C#, for example.
C# has [LINQ](https://msdn.microsoft.com/en-us/library/bb308959.aspx) , which *probably* [gave some inspiration](http://nondot.org/sabre/) to for-in-where. 
I've heard of [Weed Jesus](http://m.worldstarhiphop.com/apple/video.php?v=wshhJantx4rB08eyHRYC) and [Republican Jesus](http://knowyourmeme.com/memes/republican-jesus/photos) and [Buddy Jesus](https://en.m.wikipedia.org/wiki/Buddy_Christ) and [Big Butter Jesus](https://m.youtube.com/watch?v=_-ksuOaI61g)... I gotta know what Chopsticks Jesus is all about! It sounds like he's an annoying bastard that slurps his soup?
**Buddy Christ** Buddy Christ is a parody religious icon in the film Dogma. In the film, he is part of a campaign ("Catholicism Wow!") to renew the image of (and interest in) the Catholic Church. Viewing the crucifix image as "wholly depressing", the Church, led by Cardinal Glick (George Carlin) decides to retire it, and creates Buddy Christ as a more uplifting image of Jesus Christ. The icon consists of a statue of Jesus, smiling and winking while pointing at onlookers with one hand and giving the thumbs-up sign with the other hand. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I looked into this recently! I noticed that a pretty big app allows unauthenticated users to use the search api by passing along the auth token of the single premium user. It sounds crazy at first but it actually seems to be okay because the issued auth token has basically no permissions besides using the search api.
Could be an older Objective-C method (not specifying nullability) or perhaps some Swift 1 era code? It means it doesn't want to guarantee it's never going to be `nil` but you have to be brave and pretend it will never be. I would `nil`-check it every time or refactor it at first chance.
I’ve been updating my app, [Game DVR](https://itunes.apple.com/gb/app/game-dvr-share-xbox-clips/id1249025546?mt=8), to include analytics so I can see what games people are playing and sharing and what screens people are using so I can focus my efforts on what’s being used more. Really enjoying seeing it start to gain some traction, it’s been picking up some momentum over the past few weeks and I’ve been loving it. It’s encouraged me to get back to putting out updates for it! Especially because i built it for myself but it’s so encouraging seeing others get some use out of it too :)
Probably just inexperience with swift in its early days and it’s been sitting around for a while. 
I have MacBook Pro and 2 books from big nerd ranch. Swift &amp; iOS. Where should i start? I have slim programming history
Skip everything and straight to the books? First Swift then iOS?
That makes sense, though I’m still not too sure how it makes the jump from values of +/-200 to some sort of overflow value! I tried debugging this by getting every single generated turn value and summing them all up (even though I know they wouldn’t all be added together like this) and the number it comes up with is 4930. Just to be clear, I know it *could* overflow and reach this particular number, but when there are less than 250 numbers, and each of them is between -40 and +80 (in this particular instance) I don’t see how it could be overflowing. This bug is baffling me. I may end up using one of my Apple developer tech support incidents on this...
[This](https://developer.apple.com/documentation/uikit/uipickerviewdatasource/1614377-numberofcomponents) should help. It’s quite like a table view. 
What do you mean by "admin authentication." Admin in respect to what. Like some service you created? Also yeah you can save a bool value to NSUserDefaults, unless you have some external service that keeps track of logins.
Maybe OP is talking about macOS and wants to require sudoer's privileges.
It looks to essentially be what’s called a list comprehension. I’m not super familiar with this syntax in Swift, but in Python you could create a list or generator with this (with slightly different syntax). Haskell also support list comprehensions, and I’m sure a few other popular languages do too.
I've never seen it before, but I guess it's been around a while. I'm doing a bunch of Swift tutorials and bumped into this and never seen if before. I'm use to writing conditionals inside the loop, so I wonder if this would be faster. The system still has to do the same work, unless it finds a way to optimize things.
Java has the for each loop, and thats about it. However if your custom class in Java implements iterable then you can use the for each loop on custom classes. 
Similar features have been around for decades in other languages. For example, in Common Lisp: (loop for j upto N when (/= j i) ...) or for a more modern example, in Clojure: (for [i (range N) :when (not= i j)] ...) You're right that this feature doesn't seem to be mentioned in the Swift Language Guide, or even the Swift Language Reference, except in the grammar. File a bug.
That's what I'm thought too which just makes me think of security issues if you have to ask reddit how to do (if Apple even allows you to do). But I'm positive if there's no good reason to require access from admin user than just to get a login then this would be overkill. Kinda like a bartender asking to see someone's social security number and ID just to see if someone is in fact 21 years old.
Looked into it a little more. While the `where` syntax is definitely reminiscent of list comprehensions when used in `for` loops, it's applicable in a few other places. The [Swift Language Reference for Statements](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html) indicates that `where` clauses may be used in three places (which were already shown in the link given previously by /u/Dhiraj): 1. [`for-in` loops](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/swift/grammar/for-in-statement), as you discovered 2. [pattern matches in `switch` cases](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/swift/grammar/switch-statement) 3. [pattern matches in `catch` clauses of `do/catch`](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Statements.html#//apple_ref/swift/grammar/do-statement) In the grammar specification, it is denoted as a `where-clause`, which simplifies to a `where-expression`, which is equivalent to an `expression`. So the grammar does not place any syntactic restrictions on what kinds of things you can put in a `where-clause`, though I'm sure there are semantic restrictions which are checked during compilation. The second and third cases from above are definitely pretty interesting, and seem unrelated to a list comprehension (though you could feign similar functionality through list comprehensions, I'm sure). Additionally, further on in the language specification it is revealed that the `where` clause can be used to restrict types (again, following the link shared previously). [Here is documentation on the "generic where clause".](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html#//apple_ref/doc/uid/TP40014097-CH26-ID192) (There is a more succinct summary [here](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/GenericParametersAndArguments.html) under the heading "Generic Where Clause".) --- *Further* reading shows that the `where` clause fell out of style among the Swift development team when used in certain places (guards, ifs, etc.). [This proposal](https://github.com/apple/swift-evolution/blob/master/proposals/0099-conditionclauses.md#restructuring-condition-clauses) (authored by Erica Sadun and Chris Lattner) motivates the removal of `where` in certain contexts by arguing that it is confusing, and a simple comma-based approach would be better. The proposal was accepted on June 8, 2016. Note that this proposal did not remove `where` from everywhere in the language. Rather, it was only removed in certain places. --- To your point about writing conditionals inside the loop, I think [this person's argument seems reasonable](https://gist.github.com/keybuk/2e23e78a117c03546635b0e33bd60792). Essentially: the `where` clause as used in `for`-loops helps a reader understand the author's intent more clearly. While you could achieve a similar end through different means, I think the `where` clause increases the clarity of the intent, which is always good.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-evolution/.../**0099-conditionclauses.md#restructuring-condition-clauses** (master → fce64e8)](https://github.com/apple/swift-evolution/blob/fce64e89f97f3683be4682d106ff79d927cde830/proposals/0099-conditionclauses.md#restructuring-condition-clauses) ---- 
Remove all the `!`, they are the source of a great deal of crashes. Never use them *unless* you absolutely have to use them and know *exactly* what you are doing.
A great alternative but even using markup it's not rocket science. Preface each line with 4 spaces. Bam, code looks fine. Beyond that, the extra color markup and ability to fork, download, and such are good reasons to use gist.
So what do you want to happen when it's nil?
 if let image = cell?.viewWithTag(1) as? UIImageView { image.image = UIImage(named: "ScriptIcon") } 
Ive posted a question about this on stackoverflow in 2014, back then it was not possible, the way to do it then was: for j in (0..&lt;array.count).filter({ $0 != i }) In Swift 2 the where syntax was added and it has been possible since. [stackoverflow](https://stackoverflow.com/questions/27240047/can-i-use-where-inside-a-for-loop-in-swift)
It would probably be easy enough. Just try to `su -`to `/dev/null` and if that goes through, the user has admin access.
What happens if they dont? The app doesn't work?
Again, why is there a cast on the first line? Read [my post](https://www.reddit.com/r/swift/comments/890s7s/thread_1_fatal_error_unexpectedly_found_nil_while/dwojkb5/).
Yup, sounds like you had an outlet or something connected and then removed the view but the connection remains. So iOS is trying to make that connection with KVO and crashing since it’s missing 
No, your tableView is actually nil I think. How is it being assigned? Check that you’ve wired the IBOutlet
And on mobile it scrolls horizontally instead of breaks lines. 
Not using the storyboard. I call `var tableView : UITableView! And then in the `ViewDidLoad` override I set it up ` tableView = UITableView() self.view.addSubView(tableView) `
I’ll check again though, perhapsnit has to do with the function being called at the top of override func viewDidLoad, i thought that didn’t matter much though. 
If you set the quotes property before initialising the tableView property you would get this crash. 
It seems you are right, calling the `updateView()` after initializing the `tableView` did fix it. I didn't know it worked like that, since I define the `updateView()` function outside of the `ViewDidLoad` Thanks a lot!
Many dictionaries (maps or associative arrays) are unordered. This goes for JSON objects too, they are considered to be unordered. A lot of them are implemented with a hash table or similar and the point is that you get fairly fast reads at the sake of slower writes. You truly can only count on a collection being ordered when it's an array or a list or similar. Or when it explicitly says it maintains order - like in a Swift [`DictionaryLiteral`](https://developer.apple.com/documentation/swift/dictionaryliteral). &gt; Use a DictionaryLiteral instance when you need an ordered collection of key-value pairs and don’t require the fast key lookup that the Dictionary type provides.
Swift 4.3? Wasn't Swift 4.1 just [released](https://swift.org/blog/swift-4-1-released/) a few days ago?
There are a lot of places that you can use a where clause. Many of them are non-obvious. http://blog.krzyzanowskim.com/2015/11/13/where-where-may-be-used/
Looks like the added it without telling too many people.
you’re correct, i overlooked that. i changed my response 
This sounds like a race condition to me.
Thank you.
Gonna need to see some code on this one, there's all sorts of ways you could be causing trouble here. But yes, you could easily outrace yourself one way or the other. A lot of times when you do this kind of producer/consumer pattern you include a way to throttle one or the other to prevent a race condition.
Dictionaries in most or all language frameworks aren’t ordered, neither by insertion order or key compare order. At least not guaranteed to be. 
I'd say that the big languages you'll get in a coding test are probably Java, C++, Python, and JavaScript. You might also get to choose C, Ruby, Perl, or C#. Beyond that you *may* get something cutting-edge like Swift, Go, or Kotlin. This is true of jobs too. Java and C++ are huge, then it goes down from there. The [TIOBE Index](https://www.tiobe.com/tiobe-index/) is pretty good for monitoring the relative popularity of a language.
I think in this case the inspiration is more simple and predates LINQ query syntax.
Doesn’t have a where clause. 
What they had on the list included those 4 (not 100% sure about JS) but also the C, C# were on there too. I've been cramming for over a week on this and just assumed Swift would be there. Even my ObjC is a bit rusty. One other thing is the dependence on the editor for things. You get used to code completion and feel a bit lost without it. I've seen the TIOBE index, they're in the top 20, but I guess just not enough. Just a heads up for those that only learn Swift or are rusty on others.
&gt; I'm use to used* to Nothing is ever "use to". The phrase is "used to".
Whoops.
Can you explain how I would pass along the auth token?
There really isn't a nice way to call *into* Swift right now. Swift's calling convention does not match C's, and there isn't an officially supported mechanism to export Swift functions so they're callable from C. Swift also doesn't have an ultra dynamic runtime like many scripting languages, so you can't just re-interpret method names on the fly and invoke them. You can however write some C glue code, or use some unsupported attributes in your Swift code which will certainly break from time-to-time until they are officially supported. See [this post from the Swift forums](https://forums.swift.org/t/best-way-to-call-a-swift-function-from-c/9829/2) for more info.
The problem is Swift doesn't have a simple array structure, but is more of a struct. See the article here: http://ankit.im/swift/2016/01/07/exploring-swift-array-implementation/ I've tried this, as well as a version with "element" missing. No luck. class SwiftArray(Structure): _fields_ = [("element", c_int), ("count", c_int), ("capacity", c_uint), ("data", POINTER(c_int))] 
Fantastic, @_cdecl handles the name mangling!
Oh my bad lol, just a typo. I literally checked in advance what version I was on... 
Looks like Swift arrays aren't handled yet: swiftc -emit-library partitions.swift partitions.swift:2:13: error: method cannot be marked @_cdecl because the type of the parameter 1 cannot be represented in Objective-C public func partitions(cards: inout [Int], subtotal: Int) -&gt; Int {
You are calling the wrong dequeueReusableCell(). The new one also takes an IndexPath and is guaranteed to always return a cell. You are using the old one, which returns nil while the 'queue' it is dequeuing is empty. You can continue to use it, but you should refactor most of the routine to: override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { if let cell = tableView.dequeueReusableCell(withIdentifier: "Act") as UITableViewCell? { return configureCell(cell, indexPath : indexPath) } else { let cell = UITableViewCell(frame: .zero, style:.plain) return configureCell(cell, indexPath : indexPath) } }
That makes sense. I'm not sure if "yet" is the right way to describe it, to be honest. C doesn't actually have a notion of passing an array as a parameter. Compilers some hand-waving to convert array arguments into pointers (except for `sizeof()` and unary `&amp;`, which are special-cased), so if your Python -&gt; Swift code is going through C, your options are limited. Something like this would probably work, though I haven't tried to compile it: @_cdecl("myLib_partitions") public func myLib_partitions(buffer: UnsafePointer&lt;CInt&gt;, size: CInt) -&gt; CInt { } substituting `UnsafePointer` for `UnsafeMutablePointer` and/or doing the same for `CInt` to `UInt8`, etc. depending on your use-case.
/r/shittyprogramming
I used where recently where I had to find a first item in an array that had a property of some value. It is then that I remembered how many hidden features Swift has. I had a list of items to show in tableview. The items were of two kinds, differentiated by firstProperty. When I would encounter the first item that has firstProperty different than the previous, I should change its secondProperty (in my case showHeader). someList?.first(where:{ $0. firstProperty == false})?.secondProperty = true
Thank you! Embarrassingly long... I basically became an accidental grad student for a number of months while I read research papers, examined other CRDT code, worked out the CT details and edge cases, and built my sample projects. (I didn't know a thing about any of this stuff going in.) I just hope the writing makes sense to anyone but me!
Is that not called: "Developer"? 
Yes, it was generic class with missed generic parameter. The main issue was me still working at 4:00 am. But still, Swift is full of misleading or completely useless error messages
Still a beginner and learning swift &amp; iOS development through udemy. This month i plan to finish the programming concepts and attempt to make a 2nd app based on what i have picked up and then go over some programming concepts again as there are some i haven't picked up such as Methods &amp; Inheritance as i am more familiar with classes thanks to other programming languages. 
I figured but it never hurts to ask! I know they're working on Swift 4.2 but I didn't think there was much available beyond that.
Try with Supernova Studio
Thanks - you are a legend :) 
Wow, thank you! I’ve seen your work before, keep it up!
&gt; accidental grad student new band name, called it
answers[indexPath.row]...?
Hi rubberDuck3yy! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/89h4w3/just_release_new_app_its_a_simple_app_but_would/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Just add this to the func?
Nice! I hope AWS is next.
using a* datafile
At least it’ll be equatable now 🙃
The low quality and unhelpfulness of many error messages is one of the things I notice most when writing Swift - especially when I’ve just been writing Rust, it really stands out. I was wrestling with an error relating to destructuring a tuple in the parameters list of a closure today. It turns out that the problem was not actually that it wasn’t possible to destructure the tuple there, but that one of the constituent types of the tuple was `() -&gt; String` rather than `String` due to a mistake a few lines earlier. I run into this kind of thing all the time.
Really nice work, I’m impressed at how quickly you turned that one around :)
Depends on what you mean by design. I personally like [PaintCode](https://www.paintcodeapp.com/) for a lot of drawable items. There is also [Lottie](https://github.com/airbnb/lottie-ios) for animations. There are also apps to make clickable prototypes from designs like [Principal](http://principleformac.com/). But as /u/Arnold_iOSDev points out what you are really looking for is a Developer. The tools I mentioned can help but they won't convert a design to app.
OK, lets go on a ride! This uses Python's ctypes, a module map, and some crazy glue code! It is inspired by this gist: [Using Swift libraries in Python](https://gist.github.com/jiaaro/e111f0f64d0cdb8aca38) I implemented a shim which takes a Swift `Array` and returns a `struct` that has a length and an unmanaged pointer to a c-style array. The shim, saved as "main.swift" import Darwin /** Takes a maximum number and counts up to it from 0, returning an [Int] */ public func counter(max: Int) -&gt; [Int] { return [Int](0..&lt;max) } /** Encapsulates an array length and an unmanaged pointer to a c-style array */ public struct ReturnedArray { let length: Int let data: UnsafeMutableRawPointer } /** Takes a Swift Array and returns an unmanaged copy of its data in a ReturnedArray */ public func arrayConvert(_ input: [Int]) -&gt; ReturnedArray { return input.withUnsafeBufferPointer { buffer -&gt; ReturnedArray in let count = buffer.count let copy = UnsafeMutableRawPointer.allocate( byteCount: MemoryLayout&lt;Int&gt;.size * count, alignment: MemoryLayout&lt;Int8&gt;.alignment) if let baseAddress = buffer.baseAddress { copy.initializeMemory(as: Int.self, from: baseAddress, count: count) } return ReturnedArray(length: count, data: copy) } } Put this file into the same directory as the Swift file: [module.map](https://gist.github.com/jiaaro/e111f0f64d0cdb8aca38#file-module-map) Compile the code into a library: swiftc -emit-library main.swift Get the mangled function names: nm libmain.dylib | grep counter nm libmain.dylib | grep arrayConvert I got these values, you might get something else: __T04main7counterSaySiGSi3max_tF __T04main12arrayConvertAA13ReturnedArrayVSaySiGF Take each name, take off one of the two initial underscores, and copy them into fn_counter and fn_convert in the python test file: import sys from ctypes import * lib_ext = "dylib" fn_counter = "_T04main7counterSaySiGSi3max_tF" fn_convert = "_T04main12arrayConvertAA13ReturnedArrayVSaySiGF" libmain = PyDLL("./libmain.{0}".format(lib_ext)) counter_prototype = PYFUNCTYPE(c_void_p, c_int) counter = counter_prototype((fn_counter, libmain)) class ReturnedArray(Structure): _fields_= [("length", c_int), ("data", POINTER(c_long))] converter_prototype = PYFUNCTYPE(ReturnedArray, c_void_p) converter = converter_prototype((fn_convert, libmain)) foo = counter(c_int(10)) converted = converter(foo) data = (c_long * converted.length).from_address(addressof(converted.data.contents)) print len(data) for value in data: print value Save this file as "convert.py" in the same directory as the compiled library and run it: python convert.py You should get this output: 10 0 1 2 3 4 5 6 7 8 9 
Pls merge my pull request. 
Im trying to polish up this library I made for working with Attributed Strings: https://github.com/Nirma/Attributed/issues/51
Well. Imho, actual current version of Swift is not "4". It actually is "0.4" But personally I will prefer this language to not exist.
Does Apple fixed this typealias-hell?
Have you ever used Lua, Python, or Rust? Do you miss [variable shadowing](https://en.wikipedia.org/wiki/Variable_shadowing)? Fear not, for [zero-width Unicode characters](https://imgur.com/lME8oIg) are here to save the day once again! Fair warning: please don't ever do this. Ever.
**Variable shadowing** In computer programming, variable shadowing occurs when a variable declared within a certain scope (decision block, method, or inner class) has the same name as a variable declared in an outer scope. At the level of identifiers (names, rather than variables), this is known as name masking. This outer variable is said to be shadowed by the inner variable, while the inner identifier is said to mask the outer identifier. This can lead to confusion, as it may be unclear which variable subsequent uses of the shadowed variable name refer to, which depends on the name resolution rules of the language. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
What about it?
Maybe "How to abuse Unicode in Swift to fake variable shadowing" would've been a more descriptive title.
The minute you allow Unicode you open yourself up to these kinds of things. It's pretty much a given.
Now this is shitposting
An improvement to NSAttributedString is definitely needed. Some things I would suggest: 1. It would be nice to do something like “Hello”.with(attributes). Nice and short. Maybe also attributes.annotate(“Hello”) would also be useful. 2. The fluent chaining API is nice. It would also be nice to expose the properties as a struct, where you can access the properties individually: a.foregroundColor = .blue It would be useful to expose the properties as variables, and have an initializer with optional arguments, and a factory method with optional defaults, e.g. let a = Attributes(foregroundColor: .magenta) let b = Attributes(lineSpacing: 12, font: myFont) let c = b.with(foregroundColor: .cyan) let s = “Hello”.with(c) let s = c.annotate(“Hello”) It would also be useful to be able to apply attributes to ranges: s.at(0 ..&lt; 13).foregroundColor = .green Or s.at(0 ..&lt; 13).annotate(attributes) 3. Maybe a drop in replacement for NSAttributedString is not absolutely necessary. You would gain a lot more flexibility by having a separate API, with some extensions for converting to NSAttributedString and back, e.g. let s = “hello”.with(foreground: .cyan) +” “ + “world”.with(foreground: .magenta) let a = NSAttributedString(s) 4. It would be really great to support markdown, even if it’s manually annotated, I.e. semantic styling instead of explicit attributes. let s = “hello”.as(.heading) + “google.com“.as(.url(“http://google.com”)) + “cats”.as(.bullet) This is probably unrelated to what you want to accomplish however.
thanks, you too!
Start a timer to go off before the 1 hour is up and renew the token. 
Swift ranges can become annying especially when paired with NSranges like nsattributedstring uses. I’d love a better API. One thing I hate is trying to obtain “general” attributes which apply to almost the entire string. There’s no good way to do it without storing them separately. It’d be nice to have things like this easily accessible.
thanks for the suggestion but i want to actually track it from spotify's end 
Consider yourself lucky you never had to work with Obj-C. Swift errors are exceedingly helpful in comparison
Thank you so much for this, this kind of feedback is the exact reason why I posted here!
Noted! A simpler faster modification API is in the works!
My favorite Swift-related podcast is Fireside Swift. Check it out, it's both fun and educational! 
Thanks! Looking forward to going over this in detail.
Base on my research this is not an iOS thing, so it won't be so straightforward to do this in iOS compared to Android which is called view pager. I don't want to use library in my project in order to do implement this, and I wish to build it myself. Any ideas?
UIScrollView has an option called "Enable Paging". If you enable it, and you add elements of the same size to the scroll view, it will scroll between them in this fashion. See: https://developer.apple.com/library/content/documentation/WindowsViews/Conceptual/UIScrollView_pg/ScrollViewPagingMode/ScrollViewPagingMode.html
**Trying to figure out why Apple didn't release a Swift framework/API**. I switched to swift in January, love the language but to do anything, of course, you need to use the frameworks, and those are Objective\-C with some shims. Not good, it makes Swift a mish\-mash of native, clunks, shims and workarounds to get anything done. I do prefer the Microsoft approach, "Hey everyone, here's c#, and a complete new framework \(.net\), oh and a new form design language \(XMAL\)" \- deal with it. Yes we have to learn new stuff, but it gave them the ability to fix things and drop all the garbage \(it also introduced new issues\) \- can you imagine Swift with a namespaced swift only framework \- amazing. The horizon may hold something new, I'm specifically thinking of the new cross\-platform APIs \(macOS/iOS\), and hoping they use that to create a whole new framework that works on all devices.
Ok. But how do I add the tabs on top that user can click on to scroll to next page? And when user swipe the content the tab indicator will scroll accordingly as well
Look at [XLPagerTabStrip](https://github.com/xmartlabs/XLPagerTabStrip)!
Yeah this is a little tricky to do. There are many ways to do it too. You could put your content view controllers in a collection view (side by side) and then embed this collection view in your main vc. This main vc would also hold the custom tab page bar thing on top. Whenever the scroll events of the collection view passes a threshold you need to snap it to whatever child vc is closest and send a delegate message according to a protocol to your main vc, which would then reasonably tell your tab bar thing to update/animate its index.
You could use a UIPageViewController, but the API is quite old, if you can get away with a collection view because of your small number of screens it will be easier (and the skills are more transferable)
I worked at a number of startups during DotCom and one had var name both global and local. I actually had to check which one was valid. Some code is so crappy that you want to trash it and start new.
Exercise for the reader :) Try to do it yourself. It's better that way.
The logic sounds simple, but I got totally no idea how to implement this to code
I have used this is a previous project. But I hope to not use in the future as I want to build my own to reduce dependencies.
I have done this so far, anyone of you can help me with the tab above? https://drive.google.com/open?id=14BNbwrHtfffmVLLoQbCr0TGHoe7R7dw1 u/wavy_lines u/kenboy0 u/DangerJuice
Yeah, you kinda have to know what you’re doing in UIKit... On second thought, you probably ought to use a UIPageViewController in your main VC (instead of a collection view). Try setting that up first with couple of dummy child VCs just to see if swiping between them works.
Sorry, I'm at work right now. Maybe I'll have a look later.
No shame to have, I'll read it and tell you if it helped me !
Seems like a UIPageViewController
And a uitableview
You can use Page view Controller and add two tableview controllers to it. I would do it like this - navigation bar with title and some navigation buttons - under it view with two buttons to swith the controllers -under it container view that would hold the page view controller -to page view controller add two tableview controllers
I have no idea if this would be considered good practice or not, but you could just embed 2 tableviewVCs in your main VC. Use UIAnimate to push one of the tableviews out of sight, then on a swipe or button tap animate the transition between them, essentially just having 1 VC visible and the other pushed off screen 
Step 1: Put two table views into a horizontal scrollview next to each other; each table view having the same width as the screen. Enable paging on the scrolling view. You should now be able to scroll left and right to switch the pages. Step 2: Implement the top bar as a UISegmentedControl; add it above the scroll view. React to the action of the segmented control and let the scroll view scroll to the corresponding page. You should now be able to use the segmented control to switch pages. Step 3: Implement some of the UIScrollViewDelegate methods so you can update the segmented control when you scroll between pages. Now, the segmented control should update the scroll view, and the scroll view should update the segmented control. Step 4: Set the scroll view delegate on the table views to react to up/down scrolling. This is a little tricky, but you can use these delegate calls to show/hide the tab bar when scrolling (basically: when the y-offset increases, move the bar up by the same pixel amount up to some maximum; if it decreases, move it down. One option to move the tab bar is to set its transform property to a translation transform - look into CGAffineTransform). You also have to think about what should happen with the bar when the pages are switched. Step 5: If you want, replace the UISegmentedControl with your own control that has a custom look. It will do the same job as a UISegmentedContol though, so you should try to make your custom control work similar to the standard segmented control.
I'm running into this even more today, under different circumstances... perhaps I should report a bug.
/u/junweimah this is a good way to do it. 
People don't want to download and extract a zip file. Better to paste code.
 .underlineStyle(.styleSingle) could be: .underlineStyle(.single) Some quick questions: * What's the performance of overloading the `+` operator especially combined with `NSAttributedString`? I was a fan of `Cartography` until I saw my compile times go out of the window. Also using the `+` operator in Swift is less performant run-time than String formatting (note: last time I checked). I would build a performance test around this. * Some corner cases of using `NSAttributedString` would make it crash. Is this API safer to use?
&gt;does anybody uses scroll view nowadays ? Yes, for when a collection view is clearly overkill.\` like it is here
Spotify won’t track it for you. 
It's an interesting take on the applicability of some of the newer languages and where they need to go in order to spread their usefulness.
`~/Library/Developer/Xcode/DerivedData/` It's where all of the out of source bits and pieces are placed when you build, etc. 
So it's safe to delete and Xcode just rebuilds it.
If you are a beginner, I would recommend that you use a library like [ICViewPager](https://github.com/iltercengiz/ICViewPager). 
Yup. Standard Xcode troubleshooting practice for just about anything strange the Xcode does. 
I recently announced my next book, [Unit Testing in Swift](https://roadfiresoftware.com/unit-testing-in-swift/). It's designed to help iOS developers do less manual testing and more automated testing by starting to write unit tests. I plan to release the beta soon and continue editing to finalize it in the next few months. Along those lines, I've been writing all about unit testing on my [blog](http://roadfiresoftware.com/blog/) in articles like [How to unit test button taps on a view controller with XCTest](https://roadfiresoftware.com/2018/03/how-to-unit-test-button-taps-on-a-view-controller-with-xctest/) and [What's the difference between a mock and a stub, and how do you use them in Swift?](https://roadfiresoftware.com/2018/03/whats-the-difference-between-a-mock-and-a-stub/)
Really 1000s use it daily to search for their version of xcode at one place...
I would never recommend a library to a beginner; that defeats the point to actually becoming more than a beginner...
Thats 500 × bipolarity!!! cool
The rare Puzzle Pirates user spotted in the wild 
Already did that. Didn’t help...
Can you verify this?
Lol, but which one is line 47? Haha. You sir get my upvote!
I’ve made this type of behavior with a UICollectionView. Then you add that blue line underneath as a very thing 1px tall UIView that animates through translation as views are scrolled. 
AS3?
Sorry, I mean AS3 as in the Programming Language "action script (Version 3 at the time i worked with it)"
Yeah I also developed for the iPhone 2G. It’s come a long way so Jc’s then.
I looked into it and there are three different types of authentications. One of the methods allows for token refresh without a third party script. Do you know how I would go about doing this? Or would I be better off just handling it myself?
I would say it's a font or rendering bug. The reason most programmers use monospaced fonts is specifically so they can see every character exactly. Here, some characters are being rendered with a different width (zero), presumably for stylistic reasons which shouldn't apply when viewing source code. If your editor displayed "0" and "O" identically, you wouldn't blame the programming language for allowing the number 0, or a variable named O. 
I understand, and have documents showing the different sizing for all the Static Launch Screen Images... But what goes where. Ok the 9.7" iPad is 15346 X 2048? Where does it do. What is the sizing of the no status bar. Come on Apple. How the heck is someone supposed to figure this out.
Look up Spotify token on github. There are a couple libraries for deploying to a server to handle the refresh
Perhaps. The problem is a conflict between Unicode and seeing every character. There are many Unicode sequences where you don't see every character, instead the code point sequences combine to produce a single glyph. If the GUI were to show every single code point then the glyph wouldn't look right. On the other hand, you take the chance that some sequences could be used to obfuscate the actual name used in variable, method, type, or string. The true answer is that people shouldn't write code that does these sorts of things. There's all sorts of ways to obfuscate code even without Unicode, if someone is hell-bent on writing something something hostile like this then you're going to have a hard time stopping them.
I already wrote about the new features in Swift 4.1 [here](https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1) and [here](https://www.hackingwithswift.com/articles/52/swift-4-1-improves-codable-with-keydecodingstrategy), but I think it's more interesting to have actual working, editable code in front of you, hence the new playground.
Thanks I found a repo for a ruby script that i would need to deploy on heroku but the drawback is that it goes to sleep after 30 minutes of inactivity. In other words, i would need to set up ANOTHER 3rd party service to ping the heroku ruby script. I'm trying to create something that would ideally mimic a production app that allows the user to stay logged in without having to deal with all these third party stuff. Is there an option that would be ideal for a production app? Because using all these third-party things does not seem scalable at all
I wouldn’t use a scroll view here. Use page view controller. https://developer.apple.com/library/content/documentation/WindowsViews/Conceptual/ViewControllerCatalog/Chapters/PageViewControllers.html
This should be the answer. 
Yeah. I have used the ruby script. Not on heroic though. But on AWS. I’ll see if I can get you some info, currently swamped b
Okay awesome thank you. Appreciate it
The article quotes Lattner's goal of "total world domination", but then defines the competition as languages which "aspire to become a general purpose language for all the domains that C++ currently encompasses". Well, that's certainly one direction to take it. I assume the author believes, as I do, that despite Lattner's lofty goal, there's no way that Swift is ever going to be competitive in the same space as, say, Elixir. It just wasn't designed for that. (We're heading into version 5 and a concurrency model is still an explicit "non-goal".) It may turn out to be a better C++, but it's never going to be a better Erlang, JavaScript, or Bash. &gt; consider writing a fully working cross platform system library The trouble I see is that for a lot of these (like the first case, databases) the problem isn't writing the code, but creating a standard. It's not hard to find and use a C library for accessing your favorite database. The real improvement that a Swift library could offer is a familiar interface for all databases, but for that to happen, you need to be in the position to define a standard for it -- like JDBC for Java. The individual programmer isn't generally in that position. A company (like Apple or IBM or Google) is. That's not to say I couldn't try to create a standard, but I don't have the perspective that would let me create a great one, and if one of these companies decided to do it, their popularity would simply steamroll my project in short order. So I don't have much incentive to try. The best bet here is maybe to get a couple client developers from different database projects in the same room to hash out something. &gt; Rewrite Existing C libraries ... a great opportunity for learning more C and in turn loving Swift even more ;-) I've rewritten a couple C functions in Swift for my own use, and they certainly do not make me love Swift. Swift is good at some things, and C is good at some things, but they're not the same things. Bit-twiddling and FFI with Swift can be downright painful. Here's a meta-project for anyone to try: can you make a Swift library that makes bit-twiddling and calling C functions really easy, and so it doesn't change syntax completely every time there's a new Swift version? &gt; Care about Linux This is a big one, but it's not (just) about third-party libraries. The standard libraries still have lots of bugs and holes on Linux. It's not really practical for me to care about Linux support with my own libraries yet when 90% of that would mean adding kluges to deal with the Swift differences. Right now, Swift on Linux is so different in behavior it's really only usable there for projects which are completely disparate from Mac/iOS applications, like web servers. Making the standard library work identically on all platforms would go a long way. &gt; Support Swift Package Manager The situation with the packaging system is a total mess right now. There's 3 major players, and so you not only have to find a library that does what you need, but it needs to support the package manager you use. This is another case where an individual contributor can't do a lot. ("I'm sorry, but if you want unanimous consent, you're going to have to get it from one of the other owners!") I think it's clear that we're getting better at writing package managers, since they're getting a lot better as they get newer. Unfortunately, SPM seems to lack some important capabilities of Carthage (AFAICT), and the documentation is still lousy. I think the most useful things an individual can do today are to add features to SPM to make it a usable alternative, and to help document it so people understand how to use it. Be practical -- think "I've got an Xcode app", not "Imagine you're writing a console program to shuffle playing cards, with no external dependencies". We don't need to set out to try to kill CocoaPods/Carthage. We just need to improve SPM enough that it's the logical choice. &gt; you can still help out by using it / testing it on Linux and submitting bug reports. The more people use it, the more stable it will become. Yeah, I wish this were true, but the bugs aren't exactly a mystery. On bugs.swift.org right now there are 423 open bugs that mention Linux. As Jerry Seinfeld would say, anyone can *file* a bug, but the important part is the *fixing*. Or if that isn't your thing, the next best thing would be a comprehensive test suite for Foundation, so we can see at a glance what parts of it are working the same on Linux. CharacterSet is broken on Linux, for example, and right now you have to search the bug database to learn that, but if there were a big table that let me see at a glance which parts worked, that could be useful -- both for people who want to use it, and for people looking for something to fix.
I have the app Icons. It is the mandatory splash screens. I know the sizes of all devices in portrait and landscape. I have documentation. The problem is I don't know where they go. And also there are sizes that are not listed due to the missing status bar. The only way I can see of doing it, is submitting it to Apple, and then hopefully when they reject it they tell me the sizes. This is completely Apple's error. Every 'update' it is more work for less and less money.
A quick and easy solution is using the [reloadData function](https://developer.apple.com/documentation/uikit/uitableview/1614862-reloaddata). Depending on how you load your source in you'll either want to nil out the storage of the objects (if an array of objects you can do a removeAllObjects() on that array), then reloadData, and then re-build the cells.
That’s great!
Hacking with Swift is the answer!
You mean Playground the game? How do you put it in the app?
can you use a launch storyboard?
Look at iconizer. It will make app icons, icons for the UI elements, and can turn your image into the right launch screen sizes https://itunes.apple.com/us/app/iconizer-icon-generator/id1129133321?mt=12
A playground file is a means to demonstrate or play around with Swift code.
Thanks for this.
It is the name of a thing https://imgur.com/ESCKlO5.jpg 
Capitalization https://imgur.com/ESCKlO5.jpg 
[there you go](https://imgur.com/gallery/V9Qt6) 
There's absolutely no need to use C# or C++ over Swift when you're programming a MacOS or iOS game. Yes, if you ever hope to port it to Windows or Linux you'll have to wait for Swift to catch up on those platforms. But Swift is just as capable of driving a decently-large game as many languages.
You’ve got a point. But since he is a beginner it might be easier to use a language that has supported game engines. The learning curve is better, and they are more powerful. Additionally game engines like Unity 3D can export to IOS.
If you're an absolute beginner then it's going to take you quite a while to learn how to program any game beyond something very simple. There's enough free resources out there for you to learn how to program, the problem is you won't know *what* you need to learn. I recommend that you find some starting courses in programming, either locally or online. Learn the basics of the [Theory of Computation](https://en.wikipedia.org/wiki/Theory_of_computation), how binary representation works, the basic algorithms and structures, scheduling, memory, storage, user interaction, and so on. You'll probably learn a programming language in the process but the language is the least important aspect of programming. Once you learn the other stuff any language will be pretty simple to pick up and use. Get a mentor, have them guide your learning. Participate in an open source game or project. Do small things at first, don't dive into a game. Believe me, most people rush in headlong and end up burning themselves out, getting too frustrated to accomplish anything. Or worse, they never learn good programming practices and constantly fight their own code, wasting a lot of time producing something that barely works and is a nightmare to maintain. Programming is not something you pick up in a couple of weeks or even months. It's a process of learning that takes years. Yes, you can be a hobbyist and make a game. Many people have done so. However, there are so many more people who failed trying because they didn't give themselves time to get a proper foundation.
Although I’d prefer you use Stripe, here is info on Braintree: https://developers.braintreepayments.com/start/hello-client/ios/v4
https://stackoverflow.com/questions/29135594/uisearchbar-x-button-pressed
Thanks for the quick response. From what I’ve seen online, Stripe is better than PayPal. However, I’m a student and none of my peers (main users of this app) use Stripe; instead they use PayPal. Someone suggested me AcceptOn, as it offers a variety of payment options.
I conformed to the searchbar delegate and tried to do func searchBarCancelButtonClicked(_ searchBar: UISearchBar) { print("hi!") } but it doesnt get called for some reason
Stripe isn’t a payment method, like PayPal. Stripe processes credit card transactions, amongst other payment methods. If your friends have credit or debit cards, they can use Stripe. 
Bet you're fun at parties.
I don’t recommend libraries to a beginner. It’s better they understand how they can apply it or applied it. 
If your goal is to make games, you should consider Unity/C#. Ray Wenderlich has books and tutorials on both. Swift limits you to Apple platforms (for games), and Unity has better tooling and a richer ecosystem for game development. That said, I have nothing against SpriteKit or SceneKit, Apple’s 2D and 3D gaming frameworks. 
Integrating a client app with Fitbit API for the first week and rest of the week wrapping up the project. May be writing about building an iOS app without storyboard. 👍
You could take a look at their source to see how they did it! (and if it was good/bad and if you could do it differently!)
 func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String){ print("searchText: \(searchText)") if searchText.count &gt; 0 { // Show ur content } else { // Hide your content } }
This is just the stripped down iPad version version of the same thing, more or less. It’s not just a set of games, the iPad Playgrounds app can also be used to test out and display code samples like this.
First off, post some code and we can look to see if there are any optimizations that can be done. Secondly, are you doing any prefetching? Caching? Why wait for the user to hit enter, let them type a few characters and then send off a request before they even hit enter. If you don't get the right thing then you can always fire off a new request with the full search term. Third, load the low-bandwidth data first if you can. Send off separate requests for the song metadata and the cover art. Then you can improve responsiveness by showing the data as it comes in rather than waiting for the entire image to load.
What udemy course are you taking if you don’t mind me asking? I’m looking to take it 
https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/AutolayoutPG/
I think Auto Layout is for dynamically calculating size and position of all the views in view hierarchy. 
Relax; I made a mistake, and folks are focusing on that rather than the actual changes. It really doesn't matter, and I suggest you ignore them. I'd love to put something into the iPad Swift Playgrounds some day!
As UIViewControllers can be embedded and its views added, removed and animated at will, I guess you could say UIViewControllers are closer to being Fragments than Activities.
Thank you for helping me out
I use Xcode/Swift. But you can technically also do Objective-C or even C# (with Xamarin). 
The idea of a scroll view is that it can contain views that are larger than the visible area. It can be a little annoying to edit in interface builder, but it works. I created an example for you: https://www.dropbox.com/s/kgw7w35ktku8x4d/example.storyboard?dl=0
Thanks!
How do you manage to write about Swift's reach but don't mention the missing Windows support? Windows accounts for ~50% of developers operating systems. Building on swift on Windows is broken and NOT a priority of the "core team". Swift with the linux subsystem is an additional barrier that many newcomers don't want to take. Without Windows there is no way swift gains a more relevant momentum. I'd point to 3 aspects that in my opinion further limit the growth of swift. * Corporate sponsorship Done by Apple, but not eager to expand Swift beyong MacOS/iOS. IBM did some work on cross platform libraries, focus on they cloud^TM stuff. * Availability + (Standard/Core) library Some parts of the Foundation library are not implemented for Linux =&gt; no reliable cross platform behaviour. Windows support not even announced. Furthermore the documentation is lacking. The classes + functions have a short description about the parameters, and purpose. Whats missing are short and expressive examples. Like Go and Rust have (for the most part). * Tooling Tooling is the most important part when learning a new language. For MacOS there is the playground and xcode. For linux the tooling support could be greatly improved if swift had a language server implementation. If you had autocomplete and (some) linting the language would be much more accessible.
I wholeheartedly agree that Windows support is a real problem, even a bigger one than missing system packages. In this post I wanted to just raise one issue that I see and where I find that the community can work on it. Windows support is an even bigger issue but much more difficult to pull off for the community (i.e. people who write Swift packages in their spare time).
Did you make this UIView programmatically or is it a Xib file? Do you have sample code?
Rule? It's a [REPL](https://en.wikipedia.org/wiki/Read–eval–print_loop) environment. You put the code into the playground and run it.
Check which Optimization Level you have, if you have the new -Os I breakpoints start acting weird, change to -None
Did that a few minutes ago, working! Thanks!
I didn't write it, I was looking for a Swift solution that would run in a playground. Why can't I just define a function in playgrounds and then run that function? The two strings are accessed differently. One is self. which has the problem. I don't have a problem with this being an extension, but if someone simply want's a Swift version of the solution in playground, this won't work. So can you have an extension on String and run it in a playground? And if not, then why not just take the func out of the extension? The reason seems to be how the strings are handled.
Easiest is to look in the source on github.
Just found this article, check if it helps you: [Creating a custom view from a xib](https://medium.com/@brianclouser/swift-3-creating-a-custom-view-from-a-xib-ecdfe5b3a960)
You are casting the view as a UIView, but you have to cast it to your custom view. 
Experience with games here. I have built and published a full game in SpriteKit and worked with Unity for some time. Adding to the above, in my opinion: First: Between Unity and mobile frameworks (SpriteKit, Cocos2D-x...), choose Unity if you want to do something that's too complex for other engines and frameworks (like crossplatform games). Choose others if you want a lean project and want to really build the software inner workings of the game (Unity is focused on gameplay scripting). Second: Swift is an awesome language for making games, but SpriteKit have severe limitations that you will only find when you're 80% done with your game. Before that, it's all shiny and beautiful. If you're gonna stick to a mobile-only framework, I'd recommend Cocos-2Dx even if it's C++. It has been battle-tested for years, there's a big community around it and it's open-source, which is always a good thing.
I found the error. When I created the Cocoa touch file, I accidentally put UIViewController instead of UIView as the super class. Because of that I couldn't cast it to my custom class as it would give a compile error. Thanks for the help.
Try not to embed view controllers because of how you are used to doing it in Android. iOS and Android UX are fundamentally different. In iOS, view controllers are typically presented in a stack that’s embedded in a UINavigationController. Look into that: https://developer.apple.com/documentation/uikit/uinavigationcontroller
Just what I would have said!
The other way around. 1. Wrap it in an `extension String` and use as-is 1. Change it to a stand-alone function. 
https://clean-swift.com
any time* It's not one word.
Add them.
&gt; How do you manage to write about Swift's reach but don't mention the missing Windows support? Probably because we all know it's going to be more work than Linux support, which was talked about at length. The article was about next steps, not all steps. Swift is still a very young language, and newcomers who only use Windows are not yet the target audience. &gt; Without Windows there is no way swift gains a more relevant momentum. And without Linux support there is no way Windows gets support. I can't think of any language that was born outside of Redmond which supported Windows before Linux.
&gt; return (username.count &gt;= Constants.minUsernameLength &amp;&amp; Constants.minPasswordLength) Huh?
I think, just using some constant value to explain the usage instead of using magic numbers (a.k.a. 3, 5, 6, etc)
AutoLayout doesn't just calculate sizes, it applies the constraints so that views "magically" are always the right size (as long as you set up the constraints correctly).
&gt; Swift is still a very young language, and newcomers who only use Windows are not yet the target audience. Thats a lazy excuse. Swift has been worked on actively for 6.5 years and Windows support hasn't even a time window. And its not just for newcomers. Its much of the programming community where at least some if them would want to contribute to swift. &gt; And without Linux support there is no way Windows gets support. I never said anything contrary. But linux already got support which is why Windows should be next. It's overdue.
But I dont want auto layout. 
Indeed. The right hand side of the &amp;&amp; is the dire consequence of copy pasting. It it supposed to be `&amp;&amp; username.count &lt;= Constants.maxPasswordLength)` Thanks @applishish for pointing it out!
Why does the username has to be smaller than the max password length
Yes and even, if you send a request for "red " and you get a response but the user already typed "red hot" you can do local filtering on the results from the earlier request and show that, untill the response from "red hot" is received
yes, however he needs to learn proper coding first so starting with just plain swift might be easier
It doesn't. It is supposed to be maxUsernameLength but it really is trivial and has no relationship with the context. But I edited it anyway.
Exactly. Start loading results after 3 or 4 characters and then if those characters just get added to you can filter the result yourself. Don't be too eager because you may get too many results and then you'll be waiting for them to return from the server.
[removed]
I wrote up some examples of [basic Xcode Markdown support](https://www.hackingwithswift.com/example-code/language/how-to-add-markdown-comments-to-your-code), but in this case it's probably easiest just to take my repo and pull it apart :)
This is pretty great. Thanks for the work behind it.
But I do have multiple published apps and about 5 years experience as an iOS engineer professionally 
K nvm
If you know something about clean architecture, You notice quite instantly that what this guy made doesn’t follow basic rules of Clean Architecture. Cheers to him for creating an Architecture for his needs but in our office, after paying for the book and some of his lectures we said: this is a no-no
UICollectionViewCells don't come with preconfigured styles. You'll have to recreate it yourself. No big deal, the UITableViewCellStyles are usually just a label or two.
Oh alright than, thanks!
Embedding view controllers is a valid way of encapsulating functionality.
Just do this: extension String { // Paste the function here } // Define a couple strings and use the function here
The repo you linked has a Playground. You don't even need to bother copy/pasting into your own Playground.
Find the distance between the two, and see if that distance is less than or equal to your radius?
Are you sure you need these? You could just assemble your launch screen in LaunchScreen.storyboard
[Distance formula](http://www.purplemath.com/modules/distform.htm) is the same for a CGPoint as it is for any cartesian system: d^2 = (x1 - x2)^2 + (y1 - y2)^2 A refinement is to pre-square the distance so you don't have to do an expensive square root: 30^2 = (x1 - x2)^2 + (y1 - y2)^2 90 = (x1 - x2)^2 + (y1 - y2)^2
var laze: String? You are initializing `laze` in the 2nd option with an empty string, so there is no need for an optional
Thanks :)
Hi, it is me again. I posted [this question](https://www.reddit.com/r/swift/comments/89n7ib/i_am_a_beginner_ios_developer_wondering_how_to/) a few days ago, thanks to all of you who commented, especially u/jasamer. I am still taking my time to learn that. Here is another question. However this should be more straightforward as it is seen on Apple AppStore. Does this effect as a name? How does it fade as we scroll up to the navigation bar and the navigation bar slowly become visible?
I have edited my question please read it again. 
I think it would be much simpler to start with saving them to UserDefaults or CoreData, depending on the amount of locations. There are many concepts you need to grasp at once for what you are trying to follow and the benefits are unclear to me for your use case.
Hey, if you mean the elastic scroll headers, there is a great post about it that replicates yahoo digest news. I recommend it, at least to know the principle. I use at work in the app and is just wonderful. http://blog.matthewcheok.com/design-teardown-stretchy-headers/ In few words you have to implement a didScroll delegate which in turns changes the image height. That method will be called every time you scroll. I'm not aware to do the changes for the navigation bar, i will try to search how is done so i can use at work. If i find the solution i let you know. Cheers!
It's very easy doing it this way. Using a \`UIImageView\`, then set it to aspectScaleToFill, then all you need to do is set the height of that UIImageView.
Thanks! Will look into the link
I had a guy in my team who did it just using auto constraints in interface builder you still need to implement logic for changing the “header” size when you drag 
I think you just constrain the bottom of the image view to the top of the scroll view, embed the scroll view in a regular UIView, and set the obvious constraints and you're good to go.
Any more info on that? Like a link or article to read
Do you mean what the op posted is a no-no or what the clean architecture author created is a no-no?
I have a demo on my github I posted the other day for someone [here](https://github.com/SeanLintern/HeaderTest) 
I think fastest way to calculate distance is: static func twoPointsDistance(p1: CGPoint, p2: CGPoint) -&gt; CGFloat { return hypot(p1.x - p2.x, p1.y - p2.y) } Then you can write a CGPoint extension: extension CGPoint { func distance(to: CGPoint) -&gt; CGFloat{ return Helper.twoPointsDistance(p1: self, p2: to) } } And use it like: if point1.distance(to: point2) &lt; 30 { // TODO: }
The Clean Architecture was created by Robert C. Martin. It’s one of the best architectures to implement. What it is a no-no for me is the Clean-Swift Architecture. Which violates much of the rules from the Clean Architecture.
Oh thanks for the clarification. Could you give an example? Maybe they were made to make the architecture more suited for swift 
I have a demo on the stretching header on github : https://github.com/cupnoodle/parallaxTable , the header size means the size of the image on top, you increase it when user scroll up (pull down) , you can reference the function for calculating it here : https://github.com/cupnoodle/parallaxTable/blob/master/parallaxTable/TableViewController.swift#L209 (the var headerRect part) 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [cupnoodle/parallaxTable/.../**TableViewController.swift#L209** (master → 12781b5)](https://github.com/cupnoodle/parallaxTable/blob/12781b595c91c0af43d4ed59fc7076bf1929c589/parallaxTable/TableViewController.swift#L209) ---- 
lucasvandongen advice is good, I would suggest using UserDefaults for storing the order of the locations (use a sorted array). After storing the locations array into UserDefaults, you load it to the view controller data source (perhaps you are using table view?) in viewDidLoad.
bump. Is this something that isn't possible to do?
I usually do this by putting the view controller inside a navigation controller, then link the navigation controller to a tab controller : https://imgur.com/a/aUUgf Hope this helps!
The scripting language for Flash.
Have you tried this? (https://engineeringtheworld.wordpress.com/2011/04/11/detecting-when-clear-is-clicked-in-uisearchbar-x-button/) , get the text field inside the search bar and set its delegate to the view controller. Then you can detect when the textfield is cleared (ie. X is pressed) using the TextFieldDelegate method textFieldShouldClear: .
I recommend reading Apple official tutorial on building UI: https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/BuildABasicUI.html#//apple_ref/doc/uid/TP40015214-CH5-SW1 , it explains how to link the textfield and button to the code and perform action when the button is tapped and get the text from the textfield. If you don't like the apple official tutorial, you can try google "IBOutlet tutorial"
https://github.com/AppleEducate/AppStoreiOS11
Thank you! This was the method I ended up using and it worked pretty well 
You'd also have to make sure the uiViewContentMode is set to AspectFill
For starters, in the clean architecture the UI is a detail. It's not important for the architecture. Here, everything is about the UI. Even the "Scenes" are created to match the UI. And there's an interactor for every scene, instead for every Use Case. The problem is some scenes have several Use Cases and some Use Cases are used in several scenes. So he ends up creating this "Workers" which not even him can explain what it's about. Then the interactors, which are the core of the program and shouldn't know about frameworks, UI or any external element have some implementations from some protocols from the UIKit or the MapKit which shouldn't happen ever. So he created a new architecture, which might be good or bad, but i'm pretty sure Robert C. Martin won't call it a Clean implementation.
Yep, I figured after seeing the full name. When I see “AS” and programming in an Apple-related forum I think AppleScript but the latest version is 2.7 so “AS3” didn’t make much sense. 
if you are initializing `laze` with a value, no need to type it on declaration var laze = "Hello world" If the value is not set on declaration and is optional var laze: String? 
Again, you can use the `scrollViewDidScroll(_:)` to adjust the alpha of your viewController's `navigationController?.navigationBar`. Just pick how far you want to scroll for it to become fully opaque (maybe 200pts or something), and scale that offset down to the range of the alpha (0.0, 1.0), then do a little min/max work to make sure the alpha never goes outside that range.
After you reloaded tableview, call layoutifneeded on scrollview and after that set content height to tableview height constraint. Set the following code after ur table reload code. 1 - urtableview.reloadData() 2. Scrollview.layoutifneeded() 3. urtableviewheight.constant = urtableview.contentSize.height 
This should solve your issue: class ParentView: UIView { override init(frame: CGRect) { super.init(frame: frame) } init(custom: Int) { super.init(frame: .zero) } required init?(coder aDecoder: NSCoder) { fatalError("Not implemented") } }
Don't know why you get down voted, but I really like your unit test post!
...you shouldn't be manually constraining your navigationBar and tabBar. They already layout properly
Unrelated but Aerials is still my favorite screensaver for mac.
I’m not talking about when you embed the a controller into a nav or tab bar controller. I’m literally adding the nav and tab bar myself and wondering how to constrain them properly 
Thanks! 
Close your `if` block before you start your `else if` block. In other words, you're missing a `}`
You forgot close the first if.
Yes SceneKit can be integrated with any iOS App written in Swift. The scene would still typically be in a view controller. It’s like using a UIView. But is SCNView(). The controls can either be related to the view or applied to a view layered overtop that may be transparent.
} before else if It might help visually if you put ending and starting brackets on same line as the else, helps me anyways 
Is this a timed class? Or can you go through all the course work at your own pace? 
I always use a shared instance (singleton) of the wrapper class (I usually name it as HTTPRequestHelper), it works well. It make sense to use singleton in this case as there's no need to have multiple instances / objects for calling Alamofire method. Unless you have some different User Agent or HTTP Header field for some request, I think using singleton is fine.
Thanks! Really glad to hear that. I'm working on an open source iOS camera app, maybe you'll get some use out of that as well.
I appreciate the help. I have several of these parent classes that I can't add that basic of an initializer to because it depends on several constant variables. I found that this is caused because I'm inheriting from an Objective-C object. Adding @objc to CustomView's init method solves this.
Please post text instead of images, that way people can copy your code and test it.
thanks for the advice 
thanks very much it actually helped
Is there a way I can just add logic to when the tab button is clicked ?
your own pace. There isn't a time limit, you can even reply the videos again and again. 
No only is it okay, but it's recommended, for both Alamofire and `URLSession` directly, as you should only be creating one `URLSession` per host. Unless you're going to be passing that instance around everywhere, a singleton would be where it lives.
Where do we upload that artwork in iTunes Connect?
well the viewDidLoad logic will execute when the button is selected. You can have the view controller adhere to the UITabBarDelegate if you want to control for any additional clicks 
[removed]
Also , another tip I recently learned.....you can double click on a starting and / or closing bracket/parentheses and it should highlight all the way to the starting / ending of that group 
What environment are you doing this? MacOS? iOS? Linux? What versions of OS and Python are you targeting? Why a Python script exactly?
No, what’s a search?
Without all the weebs
I want to build an IOS app using xcode that will use a python text summarizer script. I have xcode 9.3 and dont know what version of python to install 
Do you have a reference for “you should only be creating one URLSession per host”? I wasn’t aware of this. 
&gt; Thats a lazy excuse. What does this mean, exactly? Do you think Swift developers at Apple are sitting around drinking martinis all day when they could be porting their compiler to a third platform, before the second one is working properly? Or do you think they should drop what they're doing to sacrifice even more from the Mac/iOS experience, in order to make the huge pool of Swift Windows developers (ha) happy that building the compiler toolchain doesn't require them to touch the Linux subsystem on Windows? &gt; And its not just for newcomers. Its much of the programming community where at least some if them would want to contribute to swift. I'm confused. If "much of the programming community" consists of Windows users who want to "contribute to Swift", why don't they do so? Patches are welcome! It sounds like you're simultaneously claiming that there's too much work yet to be done, and too many people who want to do said work. &gt; I never said anything contrary. But linux already got support which is why Windows should be next. You're using awfully rose-colored glasses if you think Linux is decently supported. Have you built a Swift program on Linux? Does your program manage to not hit any of the hundreds of known bugs (not to mention the unreported ones) in Swift for Linux? By saying "Linux already got support", you are implying that it's finished, but that's far from the truth. The toolchain builds without error, which is a great first step, but that's about all I can say for it. &gt; It's overdue. By whose timeline? It took Microsoft over 10 years to open-source their C# compiler at all, and 15 years to ship a version that ran on another platform. (Apple open-sourced Swift in 18 months.) You're holding them to a standard that no company in the world can meet. 
Have you looked into Uber’s RIBs? The main idea is that the app is driven by business logic and not the view controllers. I really liked this one, but I have yet to use it anywhere in my own projects, only done a couple of tutorials. So far it seems that it’s well thought through. (Also it makes use of Rx, if that’s a plus depends on your preferences) Here’s a link if you haven’t heard about it: https://github.com/uber/RIBs/blob/master/README.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [uber/RIBs/.../**README.md** (master → 92b7478)](https://github.com/uber/RIBs/blob/92b7478b924edccbd42dc3838495259fd4b7e45a/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dwxl64g.)
You could easily use the summarizer that is built-in to Core Services in [SearchKit](https://developer.apple.com/documentation/coreservices/search_kit ): let fullText = """ Apple's capital return plan will get much larger, according to one Wall Street firm. Citi Research reiterated its buy rating for Apple shares, saying the company will use tax reform proceeds to significantly increase its stock buyback and dividend program. "We do expect volatility ahead as consensus estimates calibrate to lower March and June quarters given more tempered demand for iPhone X," analyst Jim Suva wrote in a note to clients Wednesday. "Looking ahead, we expect investor focus to be on the impact from Apple's capital returns strategy, which we estimate could be a $100 billion increase, the 2H18 lineup, and continued strength in Apple's Services segment." The company's stock rose 0.7 percent Thursday. Suva reaffirmed his $200 price target for Apple shares, representing 16.5 percent upside to Wednesday's close. The analyst predicts the company on its next earnings call will raise its capital return program to about $400 billion from its current $300 billion authorization. Suva said a $100 billion increase is double the amount Apple has added in each of the previous two years. As a result, the analyst said Apple will more than double its annual share buyback, which averaged $32 billion a year in the last five years. "We believe that the shares remain attractively valued relative to the market and can undergo sustainable multiple expansion," he wrote. Apple is slated to report its fiscal second-quarter earnings results on May 1, according to its website. """ import CoreServices import Foundation if let summary = SKSummaryCreateWithString(fullText as CFString)?.takeRetainedValue(), let summaryText = SKSummaryCopySentenceSummaryString(summary, 3)?.takeRetainedValue() { print(summaryText) } &gt; "We do expect volatility ahead as consensus estimates calibrate to lower March and June quarters given more tempered demand for iPhone X," analyst Jim Suva wrote in a note to clients Wednesday. "Looking ahead, we expect investor focus to be on the impact from Apple's capital returns strategy, which we estimate could be a $100 billion increase, the 2H18 lineup, and continued strength in Apple's Services segment." &gt; &gt; ...As a result, the analyst said Apple will more than double its annual share buyback, which averaged $32 billion a year in the last five years. 
It's not strictly "one per host", more "don't create one per request". I can't find a reference in the documentation, but I've had it confirmed by Apple engineers in the past.
Ah, right, that makes a lot more sense. It’s pretty normal to have multiple sessions with different configurations for a single host (as discussed in the Apple docs [here.](https://developer.apple.com/documentation/foundation/nsurlsession). I definitely agree that creating a new session for each request would be inefficient. 
Thank you so much
I looked into it further and the code should probably call `takeUnretainedValue` instead of the second `takeRetainedValue`. I changed my example to reflect this.
True 😁 
&gt; What does this mean, exactly? Compared to Rust (~6years until cross platform 1.0) and Go (~3years), the cross platform development experience in Swift lacks behind (6.5 years in development). Of cause they don't sit around but they aren't declaring cross platform a priority either. Why would they. Apple doesn't gain that much with Linux + Windows support. &gt; make the huge pool of Swift Windows developers (ha) happy that building the compiler toolchain doesn't require them to touch the Linux subsystem on Windows? The Swift Windows community would be bigger than the linux one very quick. Simply because much more people use Windows compared to Linux... &gt; I'm confused. If "much of the programming community" consists of Windows users who want to "contribute to Swift", why don't they do so? Patches are welcome! It sounds like you're simultaneously claiming that there's too much work yet to be done, and too many people who want to do said work. You seem to forget that one cannot simply port swift to a new platform (or walk into Mordor). This task is too big for individuals. It needs an actial team (that someone pays) to work on it, or at least manages it. &gt; You're using awfully rose-colored glasses if you think Linux is decently supported. I never claimed it worked good. But you can download and use the prebuilt binaries on swift.org, much of the Foundation framework is ported, and bugs + gaps can be worked on as part of the open source development. With windows you can do about nothing besides using the Linux built on the subsystem. &gt; By whose timeline? It took Microsoft over 10 years to open-source their C# compiler at all, and 15 years to ship a version that ran on another platform. (Apple open-sourced Swift in 18 months.) You're holding them to a standard that no company in the world can meet. Bad example. Just as Apple locks in customers with thei Hardware and Software platforms, Windows used to lock in their developers with their proprietary .Net platform and its software. Similar to Apple with Objective-C, Microsoft had no motivation to port .Net to other platfoms. The only reason they did it is because of a culture shift. Furthermore, it was probably a bit akward that someone built the Mono+Xamarin platform what Microsoft didn't want/was able to. A better comparison would be Go, Rust, and maybe Kotlin Native + D...
Also some low-hanging fruit: extension Stack { init() { self.storage = [Element]() } init(_ storage: [Element]) { self.storage = storage } init&lt;S&gt;(_ s: S) where Element == S.Element, S : Sequence { self.storage = [Element](s) } } extension Stack: ExpressibleByArrayLiteral { init(arrayLiteral elements: Element...) { storage = [Element](elements) } } Not sure if you need the last one because you also get it from either `init(_ storage: [Element])` or `nit&lt;S&gt;(_ s: S) where Element == S.Element, S : Sequence` but it doesn't hurt to be explicit that you adhere to `ExpressibleByArrayLiteral`.
For generics: struct Stack&lt;Element&gt; { var items = [Element]() mutating func push(_ item: Element) { items.append(item) } mutating func pop() -&gt; Element { return items.removeLast() } } This is from [Apple's Guide and Code Samples on Generics in Swift](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Generics.html). I prefer a Linked-List approach to the stack so you get a better idea what is happening in memory and get to appreciate why a Stack is pretty great. When you call for example, items.append or items.removeLast. It's kind of like magic.
The thing is that if you have the memory then a contiguous stack is just fine. You allocate a block and keep a pointer to the start and the end, then just move the end pointer. A linked list is good if you want to be more flexible about memory allocation but it's slower and a pointer per node can take up quite a lot of space if your values are simple data types like `Int`. Most times I'll do my stack as an array in memory - it's simple, fast, and saves space.
I should have said when first learning. I *believe* it helps develop the foundation and understanding to some concepts down the road. You'll work with different structures like binary search trees, or use techniques like recursion.
While you're correct, Apple uses the term `sharedInstance` (in objc) or `shared` (swift) for shared singleton instances
I guess (correctly or incorrectly) I see singleton as a design pattern used to describe a class design that strictly limits the ability to create instances of the class to just one. The shared instance convenience methods are just methods that will return you the same instance forever. Nothing is prohibiting the instantiation of the class. Happy to be challenged on that, but I feel it's useful to be explicit with terminology like this.
The best way to find it out is to try. If you find it's difficult, you've learnt something. I tend to try and avoid singletons because it _always_ makes unit testing harder. it's really great to have hands on experience trying different approaches. Just be sure to: `git checkout -b alamofire-singleton-wrapper` Then go nuts and figure out whether it's helping you or not. 
You are right about the Singleton stuff but this part of your answer is the one that confuses me. “The shared instance convenience methods are just methods that will return you the same instance forever. Nothing is prohibiting the instantiation of the class.” A class with a shared instance can be, or not, a Singleton. It will then depend on the visibility of the initializer. Getting to the point of prohibiting, if your initializer is private, you have a Singleton, if not, you have just an instance that for any reason you would like to share (e.g UserDefaults and the standard shared instance). As long as you don’t know OP’s implementation, imho it’s not right to say that shared instance != Singleton. 
Thank you!!
Yeah, in some (very) big projects, compile times can benefit from having all types annotated. Instagram was investing making a preprocessor that does this, without muddying up the code the developer sees. Besides that though, I can see little reason for redundant type annotations, in contexts where they don't add information ("clearly it's a string, look, a string literal was assigned to it!")
Rewrite it in Swift. 
You should not be using `Data(contentsOf:)` for this task. As you've seen, it can get bound pretty easily and it's not meant for this kind of loading. Instead you want to set up a [`URLSession`](https://developer.apple.com/documentation/foundation/urlsession) et al. See this documentation: [URL Loading System](https://developer.apple.com/documentation/foundation/url_loading_system) There's also a ton of frameworks out there that might help with this kind of task.
Can I get a question answered real quick about URL sessions? How do I use a URL session to fetch a file? All the examples I've seen use completion handlers for data management, but those use void-returning closures. I can't get a file back to the main thread if it asynchronously executes a closure and then returns void. Is that when I use the `downloadTask(with: URL)`?
It's all in here: [Fetching Website Data into Memory](https://developer.apple.com/documentation/foundation/url_loading_system/fetching_website_data_into_memory) Look at "**Listing 3** Using a delegate with a URL session data task".
Post some things you've tried, we shouldn't write it for you!
Wow, all the resources you linked are really handy. I'll make sure to read all about URLSession next time I've got a project like this I'm working on
&gt; Detect black pixels in a white image. Trick question! If it's a white image, it has no black pixels.
Glad to help!
Well to support that type of app, you would also need to make a web application to store your user accounts and their posts/data to be accessed by the app. You should get a good handling of programming in general, then learn about full stack development (full stack meaning all of the layers that go into running a service application as you described -- server, database, web application, api, client apps and website), then make your app. You can find different cloud services to handle your backed, but you will still need to understand how they work to interface with them.
[removed]
Like Lanza21 said, rewrite it. Line by line, convert the Python code to Swift code. 
The performance of the operations (i.e pop, push) in the video are O(n) instead of being O(1). To optimize it, one needs to replace array.first to array.last.
It is right to say "shared instance != Singleton" because it doesn't mean that the class will definitely be a singleton. I tried to make it clear that with all the APIs I used provided by Apple, none that I remember were singletons. I wanted to highlight this to OP because the reason they have designed the API that way is because of the problems associated with singletons. It's also important in teams that everyone has the same understanding of terminology. If I described a class as thread safe when really it wasn't, it would likely lead to issues when other people picked it up. I'm not trying to be an arsehole, just I find this kind of thing important.
Thank you.
How about game theory? I did the "Monty Hall" problem: https://en.wikipedia.org/wiki/Monty_Hall_problem A few years back. I simply made a table view with the results one way then the other and summarized the results. It could be done better with charts, decision tree, and animations. You said algorithms have been done already, I'm studying that now, where are these simulations for algorithms? You could also setup a card game framework where a person can alter the rules and check the outcome. Example: I posed a question about a simple card game and what card would have the best outcome. The game is simple: 2 players, each get all of a suit, they play one card at a time, highest card wins the contest. Player A plays 7, 8, 9 to player B's A, K, Q... What's the best play for player A? So you'd simulate the playing of the remaining 10 cards and record their outcome. You could set on player as random card selection and the other as top to bottom based on face value. You could then alter the setting so that they are both random, or bottom to top, or 1&gt;than last card played, etc... In the above example: if player B plays a card &lt; 6, can player A win with a straight A to 2 run? A win is simply 7 of the 13 contests. A playground that would have a number of options to control the path would be great: number of plays, options for each player. Even a struct for each card so that betting could be allowed.
**Monty Hall problem** The Monty Hall problem is a brain teaser, in the form of a probability puzzle, loosely based on the American television game show Let's Make a Deal and named after its original host, Monty Hall. The problem was originally posed (and solved) in a letter by Steve Selvin to the American Statistician in 1975 (Selvin 1975a), (Selvin 1975b). It became famous as a question from a reader's letter quoted in Marilyn vos Savant's "Ask Marilyn" column in Parade magazine in 1990 (vos Savant 1990a): Suppose you're on a game show, and you're given the choice of three doors: Behind one door is a car; behind the others, goats. You pick a door, say No. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Not an arsehole at all, I think it’s a fair point and I agree with you. It’s right that the term “shared instance” is not explicitly related to a Singleton, but as long as it’s implemented correctly, a “shared instance” can be a Singleton. Overall, if someone tells me about a shared instance, my first thought would be “it’s implementing a Singleton”, until said otherwise. I think both are valid points, if while reviewing, my peer would make an attempt of having a Singleton with a shared instance, and still leave the initializer visible, I would simply not allow it to merge until the intentions are clarified, and/or, fixed. If you want to keep the idea of shared instance not being strictly a Singleton, it’s perfectly fine, but then again, all comes to the actual implementation. And the same here, at this moment can’t think of any API by Apple that I’ve used, that has a shared instance and it’s actually a Singleton. Have a nice weekend 😊
The first chapter is about the Monty Hall problem! Good to know I’m on the right track. As for the card game, I was thinking about doing black jack and demonstrating how card counting works. Along with messing with the number of decks, and how often they are shuffled. One such book I know of that deals with algorithms in swift is Wayne Bishops “swift algorithms and data structures” Thank you. Simulating more card games is a great idea. 
Here's a link to the simple card game: https://www.reddit.com/r/GAMETHEORY/comments/8a0xlo/which_card_would_you_pick/ One reason for using a very simple card game is that it removes a number of factors. The win/lose is easy to see and people can focus on other things. When I did the Monty Hall, it was years before the playgrounds came out, so I actually made an app. The important part was being able to change all the variables. The simple card game would be straight forward to learn because it's hard to get a game that simpler than straight face value. There's some discussion on the link. If you really want to dig into this, try the "two wins make a loss..." https://www.youtube.com/watch?v=U5GSCO3mKo0 A bit more complex to understand.
Sounds great. I'd be interested in stuff that can be used for small games, for example, generating a dungeon, or a forest or some such.
Sounds like something I would look over. How do we get notified when you have released it? 
Neat. The only thing I'd suggest is another column for what version of macOS can run each of those versions of Xcode.
Thanks! Usually I will make a method for each endpoint and alter their completion block type like this : class HttpRequestHelper { class func getUsers(completionHandler: @escaping ([User]) -&gt; Void) { let url = URL(string: "https://httpbin.org/getUser")! let task = URLSession.shared.dataTask(with: url) { data, response, error in guard let content = data, let json = (try? JSONSerialization.jsonObject(with: content, options: JSONSerialization.ReadingOptions.mutableContainers)) as? [String: Any] else { print("Not containing JSON") return } print("json response dictionary is \n\n \(json)") // Parse the json dict into User data here... let users = [User(), User()] // Pass the users to completion handler and call completion handler completionHandler(users) } // execute the HTTP request task.resume() } class func getImages(completionHandler: @escaping ([Image]) -&gt; Void) { let url = URL(string: "https://httpbin.org/getImage")! let task = URLSession.shared.dataTask(with: url) { data, response, error in guard let content = data, let json = (try? JSONSerialization.jsonObject(with: content, options: JSONSerialization.ReadingOptions.mutableContainers)) as? [String: Any] else { print("Not containing JSON") return } print("json response dictionary is \n\n \(json)") // Parse the json dict into User data here... let images = [Image(), Image()] // Pass the images to completion handler and call completion handler completionHandler(images) } // execute the HTTP request task.resume() } Then in the view controller, I call the web request method like this : override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. // Get users from web API HttpRequestHelper.getUsers(completionHandler: { users in // do something with users here, like update tableview etc label.text = users[0].firstName }) } Hope this helps!
One of the problems with doing algorithms in Swift is that Swift isn't used in interviews. I studied for this in Swift, only to find the Amazon doesn't do Swift for interview questions. So I'm learning Python, since I need it for AI anyways.
Just popping in to say that this is a cool idea. Maybe take advantage of some of the built in tools in SceneKit to do simple physics simulations? 
Useful table. Could be improved if the date was consolidated into one column instead of two. Having the year span several rows kind of breaks the flow of readability IMHO
Ok, finally got something to work. I found the vapor apt repository (it doesn't have sources for 17.10 but those for 17.04 seem to work fine) and after adding that "sudo apt install swift" almost does the trick. The only thing is that if I want to use Foundation (or anything that depends on it) from the REPL, I have to run it with "swift -I/usr/lib/swift/clang/include" or it will raise weird errors.
If I am unable to code this, how much would it cost for someone to code this for me so I could edit the source code once the barebones are done? 
I was thinking of adding a similar page for Xcode, kind of an inverted version of this one. Basically a page that would list each Xcode version, along with the versions of Swift it comes with, date released, and other info. macOS compatibility would definitely be a great inclusion there.
If you're looking for a gradient along the line, you probably have to create a region with a gradient fill and then mask it with a stroke. If you just want multiple lines of different colors, just call `setStroke` before each line you draw.
 sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)" brew install swift
https://firebase.google.com/docs/storage/ios/upload-files This should help
What are you trying to achieve? Delegates are the most common pattern for this and is actually very simple. What concepts of it don't you understand and maybe we can help you. 
Also, Let’s Build That App on YouTube has some really great tutorials on Firebase. 
I’ll do it for you! For free. DM me to talk more!
That would be amazing! I would need to give you some sort of compensation 
You have to understand its quite a young language compared to whats out there, plus the linux community doesnt really like anything from apple (understandably) We'll have to wait until the swift community truly adopts the language. Then again nothing is ever really simple on linux.
I love that guy. 
[removed]
You habe to import Foundation in your Swift files. On MacOS and iOS it‘s automatically included. Same thing for GCD. Then it should work.
&gt; If this book does well, Keep in mind that, generally speaking, people just don't buy tech books these days, and even when they do, authors make virtually no money from them. Decide on your metrics for success ahead of time, and don't quit your day job. &gt; For now, it's a practical book filled with fun and educational projects. Most technical books try to do that -- the only question is *who* it's fun and educational for! If the target audience is "high school students who might be entirely new to programming in general", it's great that you've picked such a specific target. Even better if you have access to people in this demographic to use as a test audience. Just be aware that high school students are a segment of the population who don't necessarily have the most time and money to spend on books, and Swift might not be (despite Apple's claims) the best language for teaching as a first language. It's easy to find dozens of books on modeling and simulation in Python, and I bet those are going to be your primary competition. Be sure to look at it from the consumer's POV. There's a bunch of webpages and ebooks which are free or cheap (~$15) that teach modeling and simulation using Python, which everybody and their dog tells me is the ideal first language, and it's cross-platform and mature and Google and everyone else in SV is hiring for it. Why would I want to buy a book on simulation in Swift instead, which is none of those things? I'm not saying it can't be done, but I'm not seeing a compelling reason yet. You've got to find or create one.
You could make your custom object to draw itself. func draw(ctx: CGContext) { // ...set path self.strokeColor.setStroke() // ...draw path }
You’ll do yourself a massive favour by forcing yourself to use the delegate pattern. They’re used extensively in iOS development and when you get the hang of them you’ll find life much easier. The best way to learn the pattern is to create your own protocols and use them to pass data back from one VC to another, so start now, I implore you. If you ever want to do any Android development (or work in a team with Android devs), the interface pattern basically works the same way, so you’d have a head start because you understand the principle. 
Yes i used UIRefreshControl with UIScrollView.
Hard to explain all on reddit but basically you want to generate new image from the old one by using the constraints inside the crop to resize the old image and then take a screen shot using code. To take a screen shot is pretty easy, just google it and you’ll be able to find the stackoverflow answer. 
&gt;Keep track of the median of a stream of numbers. Find a word that is present in a grid of letters. Detect black pixels in a white image. 1. The first one doesn't seem to need anything special. If you take the literal of the question, all you need to do is track the median of a stream of numbers. While (stream is active) { rawTotal += nextNumber // total of the numbers numberCount += 1 // count the numbers averageNumber = rawTotal / numberCount // average of the numbers } What value would the search tree have? 2. queue/stack? This is a classic "connect four" type logic, the difference is that you're NOT just looking for a hit/miss (red/blue) you're looking for a word. If they give you the word, that's one thing, if they expect you to look up EVERY SINGLE collection to see if it's a word, that's going to be slow. You'd either have a list, string, array, or dictionary (hash table) or you'd make one for the words. Otherwise, you assume it's one certain word. You can search the matrix of letters to see if a certain word is there. However, using a hash table would be very bad for his as the key is calculated so "APPLE" would be "APPLE" not "AP" or "APPL". If you have a sorted array, you can find the closest match. So you find "AP" in the matrix, you can see what that matches in the sorted array. If it matches 2 of the 5 and IF you have 3 more spots left to make the other letters, then you check in that direction. For each spot in the grid, you figure out how many spots you have in all directions (left/right/up/down &amp; diag for each) This becomes your control for the For..Next loop. Be advised that you have to know how far to chase down each path. https://gist.github.com/poke/6934842 #! /usr/bin/env python3 from itertools import groupby, chain NONE = '.' RED = 'R' YELLOW = 'Y' def diagonalsPos (matrix, cols, rows): """Get positive diagonals, going from bottom-left to top-right.""" for di in ([(j, i - j) for j in range(cols)] for i in range(cols + rows -1)): yield [matrix[i][j] for i, j in di if i &gt;= 0 and j &gt;= 0 and i &lt; cols and j &lt; rows] def diagonalsNeg (matrix, cols, rows): """Get negative diagonals, going from top-left to bottom-right.""" for di in ([(j, i - cols + j + 1) for j in range(cols)] for i in range(cols + rows - 1)): yield [matrix[i][j] for i, j in di if i &gt;= 0 and j &gt;= 0 and i &lt; cols and j &lt; rows] class Game: def __init__ (self, cols = 7, rows = 6, requiredToWin = 4): """Create a new game.""" self.cols = cols self.rows = rows self.win = requiredToWin self.board = [[NONE] * rows for _ in range(cols)] def insert (self, column, color): """Insert the color in the given column.""" c = self.board[column] if c[0] != NONE: raise Exception('Column is full') i = -1 while c[i] != NONE: i -= 1 c[i] = color self.checkForWin() def checkForWin (self): """Check the current board for a winner.""" w = self.getWinner() if w: self.printBoard() raise Exception(w + ' won!') def getWinner (self): """Get the winner on the current board.""" lines = ( self.board, # columns zip(*self.board), # rows diagonalsPos(self.board, self.cols, self.rows), # positive diagonals diagonalsNeg(self.board, self.cols, self.rows) # negative diagonals ) for line in chain(*lines): for color, group in groupby(line): if color != NONE and len(list(group)) &gt;= self.win: return color def printBoard (self): """Print the board.""" print(' '.join(map(str, range(self.cols)))) for y in range(self.rows): print(' '.join(str(self.board[x][y]) for x in range(self.cols))) print() if __name__ == '__main__': g = Game() turn = RED while True: g.printBoard() row = input('{}\'s turn: '.format('Red' if turn == RED else 'Yellow')) g.insert(int(row), turn) turn = YELLOW if turn == RED else RED 3. black in a picture is pretty straight forward based on what they gave you. Just define the color, search the stream for that color. If it's a grid or a stream, just start at the upper left or bottom right and search each one. Create an array, store the position of each black one. #define COLOR_BLACK XXX // whatever black is Assume a stream: While (not EOF) { currentPixel = grabTheNextPixel(stream) if currentPixel.color == COLOR_BLACK { arrayBlackPixels.append(currentPixel.origin.x, currentPixel.origin.y) // whatever the structure is, IDK. } } It might be a grid(X,Y) and you have to do a for..next inside a for..next If they don't tell you, just do the most common thing, and look up the structure of a pixel. One other note: make sure they'll take Swift, I just found out that Swift is NOT universal for testing.
The main headline on your page as a typo, "Eliminate **unsued** code from projects written in Swift". Looks like a solid work, swift/xcode really need better static analysis tools. Even appCode struggles at this which surprises me because jetbrains other products (resharper comes to mind) do this quite well.
&gt; Delegates are too complicated for what I'm trying to achieve I disagree. The protocol/delegate pattern was practically made for something like this.
MSFT didn’t like Linux, and with good reason. Linux servers compete against their own servers and are very attractive due to not having an expensive license. But they made dotnet core available for Linux and macOS. They even made a code editor for those platforms. The point is Apple should be the one making Swift available on different platforms.
Been trying to do so all day, I just don't get how it works outside of all the tutorials and stuff on the internet where they make it seem easy. They explain it with simple classes that conform with simple variables that are easy to set. But in a real ViewController it's all different and I can't just call and define variables the way I expect them to. It's frustrating. 
Ok, forgot the median part and went with average. Although median is a type of average. Given that you need 1/2 above and 1/2 below, then ok, that's different. Good point on #1. The queue/stack part I don't get. You say to quickly add/remove things. Ok, but you're checking a grid for words. Assume you have a 10X10 grid, you need to check for words in that grid. You'd do the "connect four" logic in that you'd start at 1,1 and check each of the 8 directions for length, then grab the longest string and check for words in that. You'd benefit from using math to determine there is not up, left, etc... to check an keep track of what's already been checked. What part of would you use the queue/stack for? Wouldn't mind getting your game plan on this one, it's always good to see different approaches. Mine was basically make an array of the string, say "XYAPPLEXC" then go thru the array and do a lookup in a sorted array. The sorted array allows for a partial search inside of a string. The string itself would be many check and once you get a hit on "AP" you run out that path. Same as a tree. https://towardsdatascience.com/implementing-a-trie-data-structure-in-python-in-less-than-100-lines-of-code-a877ea23c1a1 I doing this as a autocomplete test. The way I see it, there's no way around checking each substring inside of the string.
Calculate the Big O notation for the connector four logic. Remember also you need to search in reverse too. There's a very strong reason to use stacks/queues for this. For example, [XYELPPAAPPLEXC] Apple does show up at least twice.
So you would load the string into a stack and check against the tree for each one? Doing each way is true, so is different lengths inside of each direction. So you have X, XY, XYE,... then Y, YE, YEL, etc... Whole lot of combos there, but you can still get the search string out of that with a substring/range function. for i = 0 to stringLength j = currentStoppingPoint currentString = substring(mainString, i, j) next I guess the gain would be to record the strings so that you only have unique strings that you search for. So if you add all the strings and put them into a set so that you don't check for the same string more than once. Interesting problem, I'm sure someone has a best solution. My guess would be that making a set of all unique strings and as you make these strings, have markers (if you need to prove where they are). Once you have all the unique strings, then compare them against the tree to see if there are any words. Another concern would be to find unique substrings, not just strings. I wonder if this is in one of those practice books. 
Check out [PersonNameComponentsFormatter](https://developer.apple.com/documentation/foundation/personnamecomponentsformatter) 
You can also hold alt/option and click on a colored variable to see what datatype it is, which tells you what the color signifies.
 Menu -&gt; Preferences -&gt; Fonts &amp; Colors This is where you select/edit your color theme, the names at the right are the elements.
activeIndex will either get nil or cellIndex as its value 
Think of it as two parts. This part: activeIndex == cellIndex ? nil : cellIndex Says return nil if activeIndex is equal to cellIndex, otherwise return the cellIndex. The result of this (nil or cellIndex) is then assigned to activeIndex. This maybe makes it more clear: activeIndex = (activeIndex == cellIndex) ? nil : cellIndex 
Yes, he explains it quite well in the tutorial! 
I don't think we plan on using Objective C. Can you tell me what you mean by "no dynamic functionality"?
I didn't try linuxbrew, but the second one is exactly what I tried. I just ran into the weirdest compile issues. At some point, I was forced to manually add "cmake_policy(SET CMP0023 OLD)" to a bunch of files to get rid of some errors, only to run into different obscure errors down the road (pointer dereferencing errors or something like that), at which point I gave up. The vapor binary that I mentioned in my other comment works though.
That python script is only 79 lines total. What's wrong with translating it line for line? It could be a good way of getting better at Swift. Of course you would have to use a different class than `HTMLSession`, maybe Swift's [`URLSession`](https://developer.apple.com/documentation/foundation/urlsession).
`activeIndex = activeIndex == cellIndex ? nil : cellIndex` Can be translated to: if activeIndex == cellIndex { activeIndex = nil } else { activeIndex = cellIndex }
Did you run sudo apt -y update &amp;&amp; sudo apt -y upgrade &amp;&amp; sudo apt -y install git cmake ninja-build clang python uuid-dev libicu-dev icu-devtools libbsd-dev libedit-dev libxml2-dev libsqlite3-dev swig libpython-dev libncurses5-dev pkg-config libblocksruntime-dev libcurl4-openssl-dev autoconf libtool systemtap-sdt-dev tzdata rsync ? I just spun up a digital ocean droplet on 17.10 and I'm trying it now. 
Using segues to pass data around is cancer. Just store the data in a singleton data object of both View Controllers. Reference that singleton object upon each View Controller's ViewDidLoad. Declare the object you are storing in the singleton. Before you leave one View Controller, set the desired object in the singleton. When your second View Controller's ViewWillAppear gets called, get the value of the object from the singleton. This can't screw up. 
did I say it was bad? you might want to read my comment again.
Don't declare the singleton in the app delegate. Create a singleton in a separate object that only serves as a data store for the relevant info you need. Delegates are massive overkill for this. There is no need for this level of complexity here. Delegates and protocols *are* perfectly applicable in more complex cases and you *need* to become comfortable with them, but here is why I vote on a singleton for this. 1. No risk of data getting orphaned in a view controller. 2. These View Controllers are only displayed one at a time. It is impossible for any data contention of too many attempts to set and get the data and a conflict occurring. 3. No risk of and illegal access errors. 4. One central area that is common to those two view controllers for storing this data. More complex data exchange cases require other solutions. But that is not this case.
I mean, I *thought* you were implying otherwise. I guess I just misinterpreted...
Moving information to a view controller you're about to display, or moving information to a the view controller you're going back to? Or both?
One thing that bothers me about this approach is simply this. By passing data from one to the other, this means that one view controller needs to know about the other view controller. One needs to import the other so it can make an instance of it and pass to it. This is bad. There is no reasonable justifiable reason why the first VC should need to know anything about the next one. This creates a dependency that's worse than it appears. This means that each view controller that needs to pass data to the next must include the next. If you have a chain of 10 view controllers, then you get the first VC importing the second, which imports the third, which imports the fourth, which imports the fifth, which imports the sixth, which imports the seventh, which imports the eighth, which imports the ninth, which imports the tenth. You create dependencies in items that should be independent, that should not need to care about each other by passing data through segues. This is quite simply bad design™. Someone, please tell me why passing data between view controllers in segues is a good idea.
Yes. We looked into it. We decided to make our own and include what fitted us best.
Thanks! That works just brilliantly.
So you don’t know how to do this and you want to cheat and have us help you do it? We would be cheating your future employer.
How is using `count` a shortcut? It's a tool. If I saw someone avoid a tool and do it the hard way I'd be sure to put their application aside.
The hard part is that there's more than one way to skin a cat (gross), but don't get discouraged! This was a major stumbling block I had on my way to becoming professional iOS dev! If you don't force yourself outside of your comfort zone you'll never learn the good stuff! Remember that a protocol is just basically just a checklist of functions or variables that a class/struct contains. You can have a reference to a whole object, OR you can have a reference to just the part of the object that conforms to that checklist (protocol). That's all that the whole delegation thing is: Having a reference to a chunk of an object that follows a determined pattern. Thats why a delegate can be ANYTHING really, that conforms to the protocol. The most common example I can think of (that you've probably used at this point) is a UITableViewDelegate. It's most common to extend your ViewController to implement some or all of the methods declared in the UITableViewDelegate Protocol. By setting the tableview's delegate to your ViewController (i.e. tableView.delegate = self) your telling the tableview that your ViewController contains those methods defined within the UITableViewDelegate, and that it can interact with it by calling those methods. The terminology can make things really confusing too, and I don't think that's talked about a ton either. Protocol: A checklist of methods &amp; variables (what I described earlier Delegate: an object that conforms to a protocol that gets called/accessed when things happen (i.e. when you tap on a cell in your tableView) (More advanced is that this object should always be a weak optional to avoid a reference loop, further reading for you lol) Does this help at all? Is there anything in particular thats confusing besides the whole concept being murky?
Honestly I'm not sure if I'm using the platform incorrectly or if they actually don't want me to use it
You could also just have your own character set [0,1,2,3,4,5,6,7,8,9] and just check if it’s in the list append to a string, then do a check when you’re appending to the string if it’s the 3/6 position to insert the -....
The easiest way is to remove all the non-numeric symbols from the input string at first. Then check if length of string equal 10 (6505551234) and then split it to the three groups of numbers using “-“ (650-555-1234). 
&gt; I’m not sure how you would handle if someone had a last name that was two words Yeah, this is the sort of thing you might see in an interview to find out if a candidate knows basic string manipulation ... but the second part of the question should be recognizing why you should never actually do this with names. If I had a dollar for every time some program made incorrect assumptions about the format of my name, and presented an obviously incorrect mutation to me...
Terrible. It asks to accept junk like `65/05/5512/34`, which doesn't look like a phone number at all, and probably indicates the user didn't think they were typing a phone number, while rejecting numbers like `(650) 555-1234 x111` (which is perfectly valid, and extremely specific). I've worked on systems that dealt with real users and real phone numbers before, and I can tell you no user ever complained that they couldn't type their (North American) phone number as `65/05/5512/34`, while many dozens or hundreds complained that they couldn't enter an extension like `(650) 555-1234 x111`. Whoever designed this system has no concept of how phone numbers are used in the real world, and if someone asked me this on an interview, I'd start by describing how I'd go back to the designer and talk about how this whole application needs rethinking. Hopefully everyone on Google, Stack Overflow, etc., that you ask will tell you to just use NSDataDetector, because that's a much better solution than trying to do it "manually". I see you're using the built-in memory allocator, too, so I guess the interviewer will still think you're cheating.
Is it cheating if you use ARC? I'd suppose so, real men program with manual management only.
Microsoft’s approach is not good. They keep coming up with new APIs to write apps for their OS. Look at how their mobile OS turned out. Apple has been refining Cocoa for 18+ years and it shows. Swift was designed to take advantage of their huge existing libraries, yet also offer features similar to C++ while retaining dynamic runtime capabilities, but also improving the safety of the language. Pretty awesome if you ask me. The only thing Swift really lacks of interopability with C++ for connecting existing codebases to a UI, but that’s what Objective-C is for. Anyways, be glad Apple isn’t isn’t redoing everyone. Swift isn’t even stable yet enough to ship with the OS. It’ll continue to mature :)
The precedence is as follows activeIndex = ((activeIndex == cellIndex) ? nil : cellIndex) 
If your only parameter is a string that is someone's full name then how would you be able to identify name format? If you had more information/parameters then yeah 100% you shouldn't make this assumption, but I feel like there isn't a way of avoiding that issue giving the constraints of this function.
This is what I would have done ^^^ let validNumbers = “1234567890” Remove everything that isn’t contained in that string. 
I'm insanely confused and getting mixed signals here
Xvim works, you can also check out AppCode. AppCode has better Vim support through their plugin
Nope, there used to be plugins for it, but Xcode broke them and made them impossible to write because they hate you
` import Foundation func answer(from string: String) -&gt; String { // Return a formatted phone number from an input string, // iff the input string contains 10 digits. // Output format is ###-###-#### let charactersToRemove = CharacterSet(charactersIn: “1234567890”).inverted let phoneNumber = string.trimmingCharacters(in: charactersToRemove) guard phoneNumber.count == 10 else { return “”} let areaCodeIndex = phoneNumber.index(phoneNumber.startIndex, offsetBy: 3) let prefixIndex = phoneNumber.index(phoneNumber.startIndex, offsetBy: 6) let areaCode = phoneNumber[phoneNumber.startIndex..&lt;areaCodeIndex] let prefix = phoneNumber[areaCodeIndex..&lt;prefixIndex] let line = phoneNumber[prefixIndex..&lt;phoneNumber.endIndex] return “\(areaCode)-\(prefix)-\(line)” } print(answer(from: “;akjsgdasdkj7737053264”))` 
A few things to consider: The requirements state that the function should return an empty string if the phone number is invalid. While it might not seem like a big deal, you might get dinged for lack of attention to detail with your solution. Strictly speaking, the decimal digits character set includes characters that you probably don't want to include in your output. See [here](https://developer.apple.com/documentation/foundation/nscharacterset/1408239-decimaldigits). 
&gt; but Im not sure what does the first part do: but I'm* not sure what the first part does*
Why not go the other way and add Swift syntax highlighting, autocompletion and some custom build/test/run commands to vim? Having a language server protocol implementation would also be *really* nice for those inline build errors, but it’s still usable. 
Since it hasn’t been posted yet, this is a **ternary conditional operator**.
It depends on what sort of data you want to "transfer back". If it's some data object that you want passed from one view controller to another, the delegate pattern is ideal for this because it is lightweight (doesn't rely on additional references of other objects) and it is an easily understood pattern within iOS development. There is no perfect way to do anything, I think in your case of a singleton, if you're passing some event/data from one screen to another, they may cause issues of interlocking or overwriting data. If two screens are writing to the same object but rely on it at different times, you may have a race condition that the data is old/invalid at the time of use.
Neato, but since this is not a one line perl script with awk and sed I cannot upvote it._(read already have)_.
Have you tried RxSwift?
False, check out Xvim2 - i use it 
I love using Xvim2 - cant live without
Could you please share an example? I don't know Perl 🤷‍♂️
I see where you're getting at. That's cool and it's great that you're looking at many different resources. Sometimes it comes down to simply the wording that affects how you understand it. Here's my take on it, see if it helps. A delegate is simply a way one class talks to another class, whether it's a simple class to a simple class, or a simple class to a view controller or even in your class a view controller to a view controller. It being a ViewController won't change anything. It does so by usually having a variable in it called "the delegate". Think of it as the "calling class". If class A makes class B, class A is the calling class. Class A will set class B's delegate as itself (A) so that when B finishes something, it can tell A directly through its delegate that "Hey A, you're the one who called me, I'm done now, you do what you need to do and maybe I can send you some data related to what I've done". As such, the 'delegate' of something is just a normal variable reference back. A more concrete example of that would be if you display a ProfileViewController that shows your Facebook Profile. When you tap on the display picture it would display a ChangeDisplayPictureViewController and set that new viewcontroller's delegate to be itself (ProfileVC) because it called it. When the user finishes changing their display picture, we might want to go back to the ProfileViewController and update that display picture. We can do that by calling on the delegate on ChangeDisplayPictureViewController to tell its caller (ProfileVC) that I'm done now. Keep in mind however that delegates and protocols are different things, but are used together. A delegate is "hey you're my caller and I need to talk to you when I'm done with my job" whilst a protocol is a "rule of how you need to talk to me". So before when I said a delegate is a link to the other view controller, that is correct. But instead of saying in ViewController B: "var delegate: ViewControllerA", you might want it to be a protocol (or rather, a ViewController/Object that conforms to a protocol), like so: var delegate: ChangeDisplayProtocol. The advantage with using a protocol delegate as opposed to a straight delegate is that with a protocol you can change that delegate object to be ANY class that conforms to that protocol as opposed to a hard, direct link to that view controller. In that Facebook example, if you use a delegate, the ChangeDisplayPicureCiewController when it's done will simply say "Hey delegate I'm done, whoever called me update your picture" as opposed to "Hey ProfileViewConteoller I'm done, update your picture". Why would you want to do that since you know ChangeDisplayPictureVC wants to update ProfileVC? Because it allows you to present that ChangeDisplayPictureVC anywhere and can still update the display picture anywhere. For example, you might be able to change your display picture from the settings menu and you want to use that existing ChangeDisplayPictureVC since you've already done it. And let's say there's a picture on the SettingsMenu that we want to update when you finish that change, if in your ChangeDisplayPictureViewController you set it so the delegate is a protocol, then as long as your SettingsViewController conforns to that protocol, you don't need to change a thing except implement on SettingsViewController what it's to do with that event! If we look at that in action, it could be something like this: protocol ChangeDisplayProtocol { func didChangeDisplayPictureWithPicture(displayImage: UIImage) } class ProfileViewController: ChangeDisplayProtocol &lt;--- THIS IS IMPORTANT { func userTappedOnDisplayPicture { // Display change Display picture Screen let displayPictureChangeVc = DisplayPictureChangeViewController() displayPictureChangeVc.delegate = self present(displayPictureChangeVc, animated: true) } // THIS IS WHERE WE IMPLEMENT THAT DELEGATE IN THE PROTOCOL func didChangeDisplayPictureWithPicture(displayImage: UIImage) { // This image that's referenced here will be the image that the calling class will send back to this class! So let's set it. self.displayPictureImageView.image = image } } class ChangeDisplayPictureViewController { var delegate: ChangeDisplayProtocol // some function to display and change display picture func changeDisplayPicture { // present your photos? maybe? self.presentPhotos ( completion: profileImage in { self.delegate.didChangeDisplayPictureWithPicture(image: profileImage // here is the magic. You are now calling on your delegate and passing in a piece of data that will go back to it's calling class } }) } } Hope that helps! I'm happy to help out where it's still a bit cloudy
What you've said is completely true and I agree, but OP did ask how to do it without segues! :) 
Platform?
iPhone / iPad , Swift 4.1, XCode 9.3
For interest, here is an attempt in Perl. Sorry, this is not a Perl one-liner. I don't normally code Perl that way and am way too rusty. use strict; use File::Find::Rule; my $projectDir = $ENV{"PROJECT_DIR"}; my $projectSettingsPath = $ENV{"PRODUCT_SETTINGS_PATH"}; my @swiftFiles = find( file =&gt; name =&gt; ( qw/ *.swift / ), in =&gt; ( $projectDir ) ); my %patterns = ( EKEventStore =&gt; "NSCalendarsUsageDescription", Hello =&gt; "HelloW", ); my @keys = (); foreach my $file (@swiftFiles) { open(FILE, $file); my @lines = &lt;FILE&gt;; # There might be some combo of grep+map that could make this closer to a one-liner, but I'm too rusty. foreach my $pattern (keys %patterns) { if( grep(m/$pattern/, @lines) ) { my $key = $patterns{$pattern}; push(@keys, $key); } } } # looks like there is a PList module on CPAN # http://search.cpan.org/~bdfoy/Mac-PropertyList-1.40/lib/Mac/PropertyList.pm # I'm not completely sure how to use this module, so this is a complete guess. (Untested) use Mac::PropertyList qw(:all); my $plist_data = parse_plist_file($projectSettingsPath); for my $key (@keys) { $plist_data-&gt;exists($key) or die("error: Missing $key"); $plist_data-&gt;value($key) or die("error: Empty description for $key"); } 
I think he's just practicing code challenges. I'm doing that myself and I'm posting up in the Python group to see if the answers are good. He's just trying to learn.
This doesn’t provide enough context for any one to understand what you are doing or how it’s doing it. You’re going to need to post some more code if you want others to help you. 
On the side of coding, yes, I totally agree. And Swift has a nice balance of ease and power.
Please post some code, we really can't say much about optimization unless you show how you're doing it.
The requirement to return an empty string is a very bad decision and, if I were in an interview, I would tell them just that. I would tell them the way I would code the function is to return a `String?` in order to indicate that the conversion wasn't possible. In fact, many interviews deliberately give you bad specifications just to see if you'll pick up on the fact that it's a bad specification and aren't afraid to correct it and fight for what you believe is best. It's often a big thing that separates a good team member from a bad one.
You can but why? This is a solved problem with many examples out there, it's highly unlikely that any code you show will be so unique that it will warrant such secrecy.
No no, it’s just a big chunk of code to put it in a comment. Feels weird post it in a comment lol
Store it in a `Date` and convert that to a user-readable `String` when necessary. A `Date` object stores it internally as a value anyways and better shows the meaning of the value than a plain-vanilla NSNumber.
Check your syntax, Lytmus only supports Swift 3 and it was tripping me up the other day as a result. I don’t know if this is your issue but I’d double check. I was able to use built in methods once I adjusted the syntax to Swift 3
That all depends on how `Array` is implemented. More often than not it's implemented as a block of contiguous memory which can hold more than the current amount of items. The excess memory is often at the end of the array so, yes, it can grow without a reallocation and copy operation. In this situation it's usually best to have the top of the stack be the end of the array rather than the beginning. Since this type of implementation is very common it's often to just assume it unless you know better.
One thing I noticed, you're calling `removeLast()` without checking to see if the `Array` is empty first. That's a requirement for using [the method](https://developer.apple.com/documentation/swift/array/2885764-removelast), &gt; The collection must not be empty. I would use `popLast()` instead and return the `Optional` value. It's safer.
I don’t think you would save the user selection via this function. This function should just show the UI that allows the user to press on one of the items. For example, maybe each item is a button or a table view cell on screen. This function would show that. Then you would have IBAction(s) for buttons or use table view protocol methods (didSelectRowAtIndexPath) that would trigger when a user makes a selection which could then store the chosen item to a variable. Otherwise, if you’re doing this from the command line (not an actual application) and you want the user to type in their selection, then you would use the readLine() which returns an optional value containing entered text.
Thank you for the example! Is guess Swift more popular, especially for iOS developers :)
Search function: https://gist.github.com/simonsayz13/7a0abc2adf1ca299a620713cea10a46a Heuristic function: https://gist.github.com/simonsayz13/a3c7000fc31df18d89fe5dcd5686cee3 Priority Queue Implementation: https://github.com/davecom/SwiftPriorityQueue 
It was directly from the Apple Documentation (not my code). The reasons might be two fold. First, you *may* want to use removeLast() over popLast() due to explicit reasoning for failure. Second, when you bridge from the documentation you get to O(n) complexity. The very nature of a stack should always be O(1) for push and pop for all cases. It's usually not the job of the interface or primitive data structures to be "*safer*," but the class that uses this data structure to properly manage it. Example: var items = [Int]() items.append(1) print(items[0]) // prints 1 print(items[1]) // fatal error, doesn't return nil. var items = [Int]() items.append(1) items.remove(at: 3) // fatal error, doesn't return nil I wouldn't ever want graceful failure of something like that. One of the very first things you learn in computer science is dealing with edge cases and throwing errors (i.e. exception out of bounds errors in your class).
The puzzle game is called sokoban -&gt; https://en.wikipedia.org/wiki/Sokoban
Yeh, it's for sure the computing heuristic part since I've used time profile and it shows the programme spend most of its time in getting the manhattan distance (Heuristic function)
All right, thanks. I'm going to try to figure out how to make the items buttons rather than strings. 
Also, these are the function that the programme spend most of its time on: https://imgur.com/a/qQxCQ
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/QuGIaat.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dx2k887) 
Aren't we saying the same thing ? Array implementation for swift is known to us and it's good at removing the last element than the first. 
Feel free to message me. I’m a teaching assistant for a course on mobile app development using Swift and have a good amount of experience myself.
There's definitely a balance between safety and simplicity/speed. It all depends on the use-case of the structure. Generally, in Swift, the container classes err on the side of safety although they do allow you to go off the safe path in some ways in case you need it. In this case it's probably best to mirror the underlying structure and offer both `remove` and `pop` methods, just like `Array` has `removeLast` and `popLast`. One which is unsafe but returns a value and the other safe and returns an `Optional`.
Yep, I'm agreeing with you. I'm just adding a bit of background to your answer. What you're saying is very often true in most implementations and, as you said, we're pretty certain that's the way it is in Swift. Since using first vs last makes no difference in the final implementation of a stack we might as well choose last since it often will be more performant.
To post code just put four spaces in front of every line, if you put "&gt; " it will be a quote instead and some of it won't look right.
Thanks for formatting tip
Glad to help! Formatted code really helps get more people to look at it and provide feedback.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [clawesome/ProtocolExample/.../**5121e13fdde8a6f3cb4b29e3b2ab960b86858435** (master → 5121e13)](https://github.com/clawesome/ProtocolExample/tree/5121e13fdde8a6f3cb4b29e3b2ab960b86858435) ---- 
Yeah, I was a huge proponent of Xvim... but having it constantly break on me, and manage it is not ideal. Also, I cannot use it at work. I could have two versions of Xcode, I suppose, but even this is pretty cumbersome. I’ve just gotten used to not using him for writing swift. But i do use it to edit everything else. 
As some people have replied already: it’s great, but it comes with many downsides. Having vim fully and reliably incorporated into your workflow requires a compromise of one type or another and some of those are unpleasant. 
You haven’t said anything about what your problem is or what error message you get.
It looks fine to me, besides not having an `else` block to handle the case that you cannot create the path.
Thanks for input , it solved the compilation error
What compromises? I used XVim and XVim 2 but stopped using the latter because I got frustrated with it. I've since forgotten why and hooked it up again last week.
A perfect place for **guard** instead of **if**
Randomly stops functioning. New releases of Xcode break it often. Signing could be an issue (depending on where you work). Causes weird behavior in Xcode sometimes. These may not be dealbreakers for you. To be honest, only two are dealbreakers for me: new releases breaking it (though this is more of large annoyance, really); signing (where I work, I can’t mess with tools without approval and a review process that must happen on every update - this kills Xvim for me). I am a sad panda that I can’t use it at work (the majority of my day-to-day coding) because I love vim. 
I'd flip that into a `guard` statement: guard let … else { return nil } … It reduces nesting, increases readability by reducing clutter, and improves intent.
Try this [Hacking With Swift tutorial](https://www.hackingwithswift.com/read/2/overview) to learn about UIButtons or even Raywenderlich.com for tutorials on this UI stuff. You can use the storyboard to add UIButtons and they have a hidden property. Make sure they are hidden (unless you want to show them from the start) and you can even give them titles (your item names). If your item names change, then you can use that show function you had to change the names of the buttons. To change the title or how the buttons look (even hide/unhide) in code, you’d have to connect them to your code as IBOutlets. If you want something to happen when a user presses a button, you can also connect them to your code as IBActions.
You forget about human error. Often manual entry leads to incorrect inputs in databases often times, or you're dealing with an existing database that may have had existing errors already in it, or someone fucked up long ago and rewrote every entry to have a space at the end. The world is never *perfect.* It's not uncommon to see these kinds of things pop up. Ideally, everything would be perfect. We as programmers need to be that funnel of knowledge that can solve these types of problems -- no matter how wacky they may seem.
Thank you
What is it about the protocol/delegate pattern that is giving you trouble? At the most basic level, it looks like this: class FirstViewController: UIViewController { func presentSecondViewController() { let secondVC = SecondViewControler() secondVC.delegate = self present(secondVC, animated: true, completion: nil) } } extension FirstViewController: SomeTypeOfDelegate { func doSomething() {...} } class SecondViewController: UIViewController { weak var delegate: SomeTypeOfDelegate? func delegateTask() { delegate?.doSomething() } } protocol SomeTypeOfDelegate: class { func doSomething() }
Feel free to message/chat me with questions
self.global is not a key.its a variable with a int. Database looks like this motivator --text1 --text2 --text3 with the global variable i want that everytime i press a button that the int variable will be increment and that the array shows me the next text. 
i see. and is datasnapshot the snapshot of motivator like it knows it grabbing the children from motivator "table" and basically you are trying to iterate through motivator. I don't think the data comes back that way as well. I think it would be looking for the key value of 0, 1 , 2 and not the index of the value. 
yes datasnapshot is the snapshot of motivator i think i dont have childrens ? the childrens are text1-text2-text3. Then i run this he prints the text messages but i cant assign this to a text label 
Can you show your implementation of your Node's Comparable protocol implementation?
so when doing pardon the code while (self.global &lt; objects.length() { print(objects[self.global] + "\n"); self.global ++; } you end up getting: --text1 --text2 --text3 ?
Yes I’m out right now, I’ll send it right away when I get home :) thank you!
What does your data structure look like? { "motivator":[ "key1", "key2", "key3" ] } 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [MPMediaPropertyPredicate filtering artist with collaborators but not artists with similar names](https://www.reddit.com/r/iOSProgramming/comments/8b0gfg/mpmediapropertypredicate_filtering_artist_with/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
yeah my guess is the string part as well
if you really want to implement A*search yourself, please do ... but be aware that there is a (probably heavy optimized) version available in ios gameplaykit: https://developer.apple.com/library/content/documentation/General/Conceptual/GameplayKit_Guide/Pathfinding.html#//apple_ref/doc/uid/TP40015172-CH3-SW1 
Can you include code and any errors? A database reference is a reference on where you want to store said data. [This link goes more into detail about it](https://firebase.google.com/docs/storage/ios/create-reference)
I would honestly just use the dumb method, and just write for readability with good comments. The problem is that some companies may still be using Swift 2, or Swift 3 or Swift 4. Some things may not work due to the changes between versions. This is not a particularly hard problem, so I believe the interviewee is really just testing readability and ease of change in future. I'll start off: func answer(telephone_number: String) -&gt; String { // some variables to keep track of for character in telephone_number.unicodeScalar { // check if 0 -&gt; 9 // add in the -'s // any conditionals check } // check if valid size // return outputs }
Ok I’ll give that a try thanks
The docs are too incomplete to get anything done. I bailed and wrote my API in Go. Vapor 3 looks like it'll be great when the documentation is complete.
I tried this but it gives me some errors Cast from 'DataSnapshot' to unrelated type '[String : [Any]]' always fails 
We need to know what your database looks like. It's all a shot in the dark when we can't tell what is in the database. 
Here is the node class: https://gist.github.com/simonsayz13/0f82a6b39f953212ee932b36bd02e6da
I'd do it, personally. --coding bootcamp alum
Thank you for the reply! What are the benefits of learning Objective-C as someone primarily interested in Swift?
See this is where we're on the same page somewhat; I'm actually still early on in my own Swift/objective-C/mobile programming journey, so I can't give a very authoritative answer on that part specifically, I was more endorsing the format of bootcamps, especially given your description of your learning style. However, my understanding is that Swift is built on objective-C like Ruby is built on C and such, so learning lower-level functions and syntax that are "represented" by prettier and simpler abstractions in Swift helps build a deeper understanding of the true workings of the language and gives you an edge in troubleshooting "under the hood" if the need arises. Hopefully a real expert can step in and be more definitive on that, though.
Swift is similar to Kotlin. You could try translating it to Kotlin and paste it into your native Android app.
I totally feel you, funnily enough I did the exact same thing :3
Here is the node class: https://gist.github.com/simonsayz13/0f82a6b39f953212ee932b36bd02e6da
This question is probably better asked after Vapor 3 is officially released.
I believe it is performance. I'm waiting for the book to be published on raywenderlich's site. Vapor's docs is not enough for now but I will use it on a real project.
Thanks. I appreciate your perspective. 
I'd personally pass on it, that's what I did. One of the key issues is that you have little programming. I'd never pay that kind of money without REALLY knowing the topic. A company sent me to a 4 day bootcamp years ago, it wasn't cheap and there were about 12 of us in the class. 4 all day classes and labs. So the net gain wasn't all that much. I study quite a bit on my own. I'd get the Udemy, Lynda.com or some other inexpensive tutorials and keep going thru them. Once you have a handle on Swift, try the Stanford 193P course online for free. They have a number of different ones, try several years just to get a good handle on them. Take notes, make your own cheat sheets. Sign up for RayW for a few months.
Sorry, but Swift is not build on ObjC. They can interoperate without major problems, but are two different languages (is very different from ObjC being a superset of C). Regarding OP, the important thing is understand and learn the APIs and frameworks needed to build an application and you can achieve that using ObjC or Swift. 
Also if you’re listening for a child added event inside of your posts nodes, then that data that was added will be returned automatically by the child added method meaning you shouldn’t have to separately query the database. 
It’s not ordered though 
It's hard to know what you want to do without doing stuff. I'd recommend holding off on this boot camp but trying to follow their syllabus as closely as you can(usually they have curriculum online for free) and see if you like the languages/projects they give you with the caveat of only using free resources/cheap books and courses. Do a project of your own using whatever you learnt. Then upload that to GitHub and ask people to critique your stuff. If after all that exhausting stuff you feel like you'll benefit from exhaustive further instruction,sign up for the next session of the boot camp. You can't throw around that kinda money without knowing a bit of what you want
The only case I would consider having a human readable string on an entity would be if that piece of data comes formatted from the server. Otherwise I recommend you save it as a Date instead of a human readable string or an NSNumber. To add to this, normally you have formatting logic very near the UI layer, where all the views exist. You translate entities into strings and numbers right before you apply those strings and numbers in your views. In a Clean Swift approach you’d have the Presenter receiving entities (like your Message) from the Interactor and creating a view model with the formatted dates that it then passes to the View Controller that applies that view model to its views. The Presenter has access to DateFormatter objects to format that Date into a String object. Also, if you are worried about performance then reuse DateFormatter objects whenever possible. A simple rule of thumb is, if the format is the same you should be reusing it throughout the app and only delete from memory in case there’s a memory warning. This was true a couple of years ago and AFAIK there were no changes to that. 
Swift or Objective-C won't work on Android. You need to write your code in Java or Kotlin
Thank you for your perspective! What is the reason for continuing to write a lot of ObjC? Is it out of necessity for certain projects, familiarity, or something else?
Thank you for the feedback!
Great advice. I've seen a few great books that are project-oriented and maybe it's better that I dive into those first. My only concern is that I feel I would learn faster in a competitive and structured environment. I have a lot of free time and, while I am self motivated, I know I'm at my best when given harsh deadlines and/or a competitive situation.
Thank you for sharing your thoughts. Have you gone through "Hacking With Swift"? I'm curious how RayW's stuff might compare. Any other resources that you recommend?
This is gonna sound snarky but Just set the same deadline as the end of the course and have some self discipline. You're gonna get nowhere in software development if you're not self motivated and a go getter. Interviewers can smell non self starters a mile away and it'll push you down in terms of competition
^ This is dumb.
It’s a variety of factors. I work on one project that dates back to 2006 and haven’t seen a need to introduce Swift to its (large) codebase. On a contract project I’m doing, I want the code to still build and run in a couple years even if I don’t touch it, as the client doesn’t have an iOS dev on staff. Swift is (historically) too unstable to use with that constraint. Another of my projects is an audio app where I’m writing most of it in Swift, but using ObjC for the low-level parts, because ObjC is much nicer to use when dealing with C and lots of pointers. And of course, after 13 years writing ObjC basically every day, I feel *very* comfortable and efficient using it, so it’s not as if it’s a burden to use it where it makes sense. I also write plenty of Swift. In short: my situation is my own, and I still think for someone starting out, it makes more sense to focus on Swift.
Not dumb. I used it all the time Use jasonexport on github to generate json to models. Swift to kotlin converters work great too. Converted whole app from java to kotlin just so I could do this. You do learnt to move as much code out of UI classes as you can. :)
That’s not quite true, sorry. See [here](https://github.com/apple/swift/blob/master/docs/Android.md).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift/.../**Android.md** (master → bceaab3)](https://github.com/apple/swift/blob/bceaab36c858bb7afe3bf0523c5cc7b85c6521f3/docs/Android.md) ---- 
I guess that’s an option, but due to the size of the source (10k+ lines) I was hoping to maintain a single codebase. C would have been the best solution originally, but unfortunately that ship has sailed.
The picture doesn’t go to firebase database just the reference to it, the picture itself should be uploaded to firebase storage 
Yeah you’re right I meant storage 
I'm torn when reading your feedback. I agree with your sentiment, but also know my nature. Leveraging a competitive and structured environment will almost certainly accelerate results for me... whether by forcing an extra 10-30% of effort or by forcing me to move on to the next step and cross-train new skills rather than falling back on my natural tendency to repeat and reinforce a current step far longer than necessary. I consider myself a self-starter. I'm learning this purely because I want to... not because I need or want a new career or job. I won't be interviewing to work for someone else at any point. I just believe willpower is no substitute for a fast-paced and competitive environment... and I'm trying to decide if the trade-off of the curriculum's focus on Objective-C is worth the benefits of this environment. Sorry if it sounds like I'm disregarding your feedback. I'm honestly just processing it and thinking as I respond, and I appreciate your perspective on this. It's making me think and reconsider.
I get it-If you can afford it go for it, boot camps are pricey but if you think you can get value then it's worth it right!
I've tried to document my experience here: [Server-Side Swift: Kitura vs Vapor](https://www.hackingwithswift.com/articles/73/server-side-swift-kitura-vs-vapor) – the short version is that it's a huge step forward from Vapor 2, although it's having a hard time settling down right now. I know the team were hoping to have it released last week, but more last-minute changes are still happening so I'll need to update my [Vapor 3 book](https://www.hackingwithswift.com/store/server-side-swift) once again.
If I'm understanding you correctly, Swift is still changing and evolving, so projects built on them require more maintenance until the language becomes more stable. Do you have a sense for how long this evolutionary period will last? If you were brand new to iOS development, but knew of the benefits of writing in Objective-C... would you bother to learn it at this point or would you just focus exclusively on Swift to maximize your potential there?
Ohh I've never heard of this...
If you can afford it - do it. You will do Udemy and Ray Wenderlich either way but this will give you something to compare online course with. I did a 12 week iOS boot camp and now I know how shallow and plain bad are most Udemy courses. Just keep in mind you will still have to do a ton of work on your own to actually learn how to make apps. Learning Swift is the easy part, learning how to use Cocoa Touch framework, how to implement protocols, networking etc. that’s fucking hard. 
If you’re in this for the long haul, it won’t matter. Nobody can learn OOP fundamentals, MVC, or internalize Apples common libraries in 10 weeks or even 6 months. There will be a lot of trial and error. The bulk of your learning will be on your own.
The real question is how much does this stuff cost? Are you paying people 10k to give you a deadline because you lack discipline? Set your own deadline for a very small project, maybe. Like "finish six Ray Wenderlich tutorials" or "build an app with one button that makes a moo sound like a cow" and get cracking. I worry a lot of these boot camps are predatory and out for that dollar. 
If you are thinking of spending thousands on a bootcamp, some RW money is mad cheap by comparison. Also there's a ton of it for free. No need to pay. Just need to wprk. 
Boot camp Alum - probably don't do it. I went this route and put in a good 80-100 hours a week for 3 months and it worked out ish (I got a software job at a pretty good company) Every interview i went to I was only asked about CS stuff, even tho I only applied for iOS jobs. After a few months of the boot camp I started cracking the coding interview and learned CS fundamentals and thats they only reason I got the job If you have the disciple to self learn - it's a much better way to go. (If you need some sort of basic structure, I'll help develop a curriculum thats personalized to you if you want) If you don't - and you don't have the disciple to go home after the boot camp and put in the work after the boot camp to self learn, probably shouldnt go If you have the disciple to learn at the boot camp, and practice at home, but need structure in your life, then probably go All this obviously depends on financials, but I know plenty of people who thought they could just do the assignments, nothing more and still get a great job (for those who didn't do anything at home, they didn't get jobs) It really comes down to this - boot camps will give you the bare minimum you need to learn but even a year or two after (like me) there will be so much to learn and so much you won't know. If you go this route just be ready for the long game in learning and practicing. 
I bought the book from twostraws on Vapor 3 and the first chapter was pretty good. I build a little static website just based on that and then tried to actually deploy it and that was where I ran into issues. I can get it into Docker, but the thing won't run. Nothing wrong with the book so far though, but the official documentation is a bit hard to follow, especially when you're trying to make it a production app. I'm really hoping twostraws looks at deployment methods other then vapor cloud. 
Lock as in lock in on that artist If it’s Pink Floyd lock into only playing Pink Floyd
Shouldn’t matter as long as your variable names match your keys of your JSON
Take a look at my code in this file https://github.com/enjoipotter/DogSpotter/blob/master/DogSpotter/Controller/NewDogViewController.swift Pay close attention to the submit dog method. Not my best code, but hey it works. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [enjoipotter/DogSpotter/.../**NewDogViewController.swift** (master → 6a35ec5)](https://github.com/enjoipotter/DogSpotter/blob/6a35ec5ba3edd5d2780978136c181f206ee2dea7/DogSpotter/Controller/NewDogViewController.swift) ---- 
This question is basic stuff that everyone is supposed to be able to do in first year computer science. If you have to ask for help online, don't apply. You will probably have miserable time at the job if you can't handle basic stuff like this, and will likely get fired soon anyway because you will be found out.
Using Google and SO is not the same as asking people to solve it for you.
Thanks that helps a lot. How important is ciimage 
Just remember that most jobs will not look to hire people who come out of bootcamps. You'll need years of learning to even be considered for any serious job. The types of jobs you might get out of a bootcamp are small contract-for-hire things from small business owners looking to get a cheap app out of it. Those really don't pay well and will take you many hours of work without the proper programming experience. You're much better off enrolling in a local college and getting an associates degree in computer science or the equivalent. Work on some open source projects and apps of your own, build up your repertoire, try to get hired on somewhere as an intern or junior developer. A bootcamp is best for people who already have some decent experience in programming and want to learn a specific language or environment. Even then you can learn about the same stuff for free on your own, the big difference is a bootcamp is a structured environment and may lessen the time needed to learn the language. Honestly though, you will not get a major position in a good company without many years of experience or a bachelor's degree.
ok smarty pants, the question is meant to test whether an applicant can handle basic logic, it's not meant to actually solve a practical real world problem. It's an interview question, not a task assigned for a product.
This last line 100%. Some do give you good information in a structured environment but even then they are only doing what you could very easily do on your own with the free materials out there. Employers do not want people who just learn from bootcamps, not serious employers. I've been on the other side of the interviews and when resumes came across with bootcamp experience it generally made us downgrade the application, not upgrade it. Serious employers want to see bachelor degrees, open source contributions, real-world experience, detailed knowledge of design and structures. There's no way that a bootcamp can substitute for that.
Meh... semantics. The runtime is built over objc4 in many places and the language was designed to provide a clear mapping from one to the other. 
There are libraries build in Objective-C and Swift has shims that make access to them easier. It was also designed to make those shims easier to write. However, the languages have very little else in common.
I've never used that library, but I looked through the documentation and I was expecting way more capabilities from `MPMediaPropertyPredicate` than what it has available. I'm scratching my head wondering why it's only capable of `.equalTo` and `.contains` while only being able to do `AND` queries. I get they want to keep the library light, but how much more overhead would it have been to at least be able to do an `OR` search.
A few things: A. I highly suggest learning Objective-C at some point. Get an older book from 2014 or something and learn the language on the side. B. I would find a different bootcamp if possible. Obviously my issue isn't that you'd be learning Objective-C. But I do have an issue with splitting in such a way that you waste plenty of time learning multiple languages. The problem many bootcamp grads have is the depth of their knowledge and skill. A bootcamp splitting into two languages will waste extra time learning the shallow details that could have been spent learning the deeper topics.
Your code would also be 100x better if you conformed to the [Codable](https://developer.apple.com/documentation/swift/codable) protocol
If you mention specific problems you are having we could help a lot better. Saying, “I just can’t get it to work” doesn’t help you or us figure out how to best address your issues. Screenshots, crash logs, errors, etc.. these are things we can work with. I don’t mean to sound harsh, I’ve just dealt with enough lazy people who always use that as an excuse for help.
I’ve been using my app for like 5 days since it’s been released and I only just noticed that bug so I guess it’s not too obvious Hopefully Apple builds this up? 
Except, you know, the [objective c runtime](http://github.com/apple/swift/tree/master/stdlib/public/runtime/SwiftObject.mm). 
Oh you mean the shims I was talking about? // This implements the Objective-C root class that provides basic `id`- // compatibility and `NSObject` protocol conformance for pure Swift classes.
Vapor 2 about at the level of Perfect in terms of documentation and stability. I wouldn't expect Vapor 3 to be as stable given that it's still in beta.
u/BigSelection take yourself over to udemy.com and purchase Angela Yu’s iOS 11 swift 4 class. I think it is 10.99 and it covers everything. Then pick up Mastering iOS 11 programming, excellent reference. While you go through the on line class, hit YouTube and search for something like “using Apple developer documentation”. This will help familiarize yourself with the things you will need to learn as far as researching the swift language. You should also look at Mark Price’s classes (devslopes) for iOS programming. You will not be able to avoid objective C, but these should give you a great head start and only cost you a small fraction of the price of a boot camp. There are free previews for each of the instructors named above. Good luck!
Thank you for your perspective. I appreciate it.
Great point. I don't want to stall out learning too many surface concepts without going deep enough to see meaningful and rewarding results on any one thing.
It's always so tempting to pay for what seems like a quick fix or at least a partial shortcut. I appreciate your advice here.
[removed]
No, but I’ve looked into it and it definitely looks interesting for when I’ve understood the basics of Swift. 
Well I’ve never had any issues myself, but in almost all articles on singletons and on moving data the use of Singletons is discouraged since it’s difficult in larger apps to manage which viewcontrollerd accesses the variable and it can become pretty hard to oversee when there’s multiple processes running at once. Haven’t done any projects on that scale though, so I’ll get to experimenting some more with them tonight. Thanks man. 
I did an objc iOS boot camp and I learned swift after. In terms of jobs, swift is definitely becoming more prevalent, but there will always be objc projects to maintain and build upon. Ancedotal, but my first dev job was taking on a objc app and a few months in I decided to throw in some swift just for practice. So if you're set on doing a bootcamp, I would do one that teaches both. I also wanna throw in my 2 cents about boot camps. The good thing about them is that they provide a place to learn. Everyone has the same goal and works through the same problems, plus there are TAs to help when you're stuck. However, they can be pricey and you can just as easily learn everything on your own, as long as you're self motivated. My cheap alternative recommendation (to anyone, not just OP.): 1. Big nerd ranch objective-c programming ~3-5 weeks. 2. Apple's Swift documentation 2-5 days. 3. Stanford's iOS course https://web.stanford.edu/class/cs193p/cgi-bin/drupal/ 1-2 months (I haven't done the whole thing, but I learned a lot from the parts I did) 1 will give you programming basics and a solid foundation with objc. 2 will introduce you to syntax, and the "swifty" way. And 3 will show you some design patterns, how to use xcode and cocoa touch, and how to build an app. At that point you can start building your own relatively simple shit. So do that. Also contribute to open source projects. That will give you the opportunity to see and build upon other people's code. While you are learning go to meet ups and tap into the programming community. If you do all of that, you will have the skills to land a job, at that point it depends on your networking skills/luck. 
For the record, [here is Chris Lattner's take](https://oleb.net/blog/2017/06/chris-lattner-wwdc-swift-panel/#on-swifts-similarities-with-kotlin) on Swift vs. Kotlin. The syntax is similar, but it's really just skin deep.
There are several tutorials ([for example](https://www.appcoda.com/custom-pull-to-refresh/)) out there, but I'd caution one thing (which I unfortunately can't find a reference for right now, gonna keep looking). Lots of apps build their own "loading" or "refreshing" controls, but user studies have observed that users tread the built-in "loading" controls as meaning "the phone is slow" or "the network is slow." However, when apps have their own unique style for loading indicators, users associate the slowness with that particular app. "Loading" isn't a state users want to be in, and you're much better off having users associate your loading state with the rest of the ecosystem than your particular application. You don't want to put your own stamp on slowness. If you're doing this to learn or experiment, by all means carry on. You should just carefully consider the implications of shipping an application with customized loading interfaces.
I would definitely try to write less rusher than everything in Swift whether possible, this is to reduce the complexity and technical debts because one you are dealing with template and database, it’s hard to change something you can do on static page with your own template engine. As with Perfect, I’m replacing many parts with H2O web server which could do 80% of the thing I wanted.
This is what [I have so far](https://gfycat.com/GlisteningHorribleAustrianpinscher) But the animation seems to be a little off. I followed [this tutorial](https://www.raywenderlich.com/173576/ios-animation-tutorial-custom-view-controller-presentation-transitions-3) to achieve what I have for now. Any ideas how to improve? Thanks
Thanks for the input, will look into it
This. Also Xcode allows you to open source files in an external editor. Clicking a source file in the IDE will open a MacVim window. So there's that.
Last I heard, Swift wasn't going to be a native or 1st class language on Android. Someone said it can't be done, but I don't see why Kotlin and Java can run on Android and Swift can't. I get the static vs dynamic, but if you can make one language work, you can make another one work. It would be awesome to have Swift be fully cross platform. Even if it's like the C# thing MS has... At least we'd be able to have some common code.
You might find this helpful: https://github.com/raywenderlich/swift-style-guide
You might find this helpful: https://github.com/raywenderlich/swift-style-guide
Just change Optimization level under the Swift Compiler - Code Generation submenu. Move it from -O to -Onone
Is this the same kind of approach needed to get that effect from clicking a table view cell? Ie the cell appears to expand and animate over the view? But is actually a new vc
How?
https://github.com/lkzhao/Hero/
Exactly. 
By leveraging machine learning driven A.I built atop blockchain technology to deliver value and generate unrivalled revenue. *invest in my startup tee hee*
Check out [this documentation ](https://developer.apple.com/documentation/uikit/uiview/1622594-animatewithduration) for the animation block with spring and dampening, that should help you get the slightly bouncy animation. Also, for good practice you may want to use a UIViewControllerAnimatedTransitioning class and a UIViewControllerTransitioningDelegate to perform the animation. This will make the animation reusable for other view controllers and you can easily make it interactive using a UIPercentDrivenInteractiveTransition.
Thank you so much for your reply - I’m going to work through this this evening and will let you know how I get on. Thanks for so much detail! 
lol. Depends on his code. 
From what I can see in the video, there are a couple of things you can do to improve the animation: 1- There seems to be an issue with how the final frame is calculated when returning back to the collection view. This is why is compresses and snaps into place. 2- You should look into using a spring animation instead of ease in/out to give it that bouncy feeling like in the App Store app Hope that helps :)
Sorry but you have the wrong attitude for software development. You mention that you thrive in a structured/competitive environment, which will help you short-term progress I guess, but not long term. What happens after the bootcamp? There will be no one to compete against and no deadlines and any further progress you make will be from your own will power. You'll still need to sit down and go through boring tutorials or documentation to learn new things.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Problem when using GKMinmaxStrategist strategist](https://www.reddit.com/r/iOSProgramming/comments/8b88oc/problem_when_using_gkminmaxstrategist_strategist/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I had a similar problem when first implementing it. It’s due to your Piece objects having reference semantics. Make a copy constructor, or copy method on the Piece class, and in your Board’s setGameModel method, make sure it calls the copy constructor/method for each piece. A simple way of doing this is making a new `init` that takes a Piece object, and copies the member variables to the new `self`. e.g. init(piece: Piece) { self.position = piece.position ... (copy other member variables like this) }
There are plenty of ways to put oneself in a competitive and structured environment after a bootcamp. IMO, a great environment is like the difference between playing casual pickup basketball with the "right attitude" vs. always seeking a more challenging game. The first can involve useful drills and a desire to improve while the second forces one to reset their baseline and push REALLY hard in order to meet a new standard. IMHO, reliance on willpower or a attitude is no substitute for this. In fact I'd go one step further and suggest the right attitude is having the courage to find and commit to more challenging environments to force rapid improvement. 
There's an example of this in the `GKMinmaxStrategist` tutorial that /u/Arwell27 is following: look for `func copy` in https://www.hackingwithswift.com/read/34/7/implementing-gkgamemodel-gamemodelupdatesfor-and-apply – I use it to copy the game board for GameplayKit, but the same approach can be used to copy anything.
Shut up and take my money
Actually that's nearly swift...
Yeah, I know. Almost.
I think this is what you’re looking for: https://github.com/PaoloCuscela/Cards
There's a useful article in here, but it's prefixed with a ton of FUD about the supposed horrors of IB. &gt; Using IB results in less Objective-C or Swift code, but IB does use “code” in the form of an undocumented, arguably inscrutable XML file. In one production iOS app, this file is 2503 lines long. XML doesn't look inscrutable to me, but holy crap, 2500 lines? How does that even happen? And once it does, why blame it on IB? I don't put 2503 lines of code in one function and then blame the programming language for letting me. &gt; IB’s XML format is subject to change between Xcode versions. Changes in format can cause warnings that the developer has to fix. Two apps developed by the Author experienced these warnings, examples of which appear in the following screenshot. Am I just exceptionally lucky? I've been using storyboards for years and never had a single warning caused by an Xcode upgrade. &gt; Because the IB file format is not backwards-compatible, old storyboards and XIBs cannot even be opened in newer versions of Xcode, a situation described here. This is a situation so rare he doesn't even seem to have experienced myself -- just that he read about it on someone else's old blog. It sounds like all the problems were involving the old binary NIBArchive format. AFAIK the new XML format is fully backwards compatible. &gt; IB hides implementation details from the iOS-development-learner. I suppose that's true, in the same way any abstraction does this. Swift hides implementation details from the assembly language learner! Assembly language hides implementation details from the IEEE-754 learner! As Carl Sagan said, if you wish to make an apple pie from scratch, you must first create the universe. You can always avoid abstractions if you wish to learn what's under them, but that doesn't make abstraction bad. &gt; Global changes to colors, fonts, paddings, and constraint constants are tedious and error-prone. Finally, a realistic criticism of IB! I like to think there should be a good solution to this, but I don't know of one yet. It doesn't seem insurmountable, with the right tooling. &gt; In a world where reviewers of pull requests rightfully expect every commit in a pull request to reflect developer intent, these no-op changes are problematic. So ... don't commit them? I don't see the problem. .DS_Store would be just as problematic, if you were crazy enough to commit them. It's *good* that reviewers are catching these! &gt; Admittedly, these conflicts can be minimized, but not eliminated, by putting each UIViewController’s visual representation in its own storyboard. Ha, I love it. As the final note, we admit that, yes, you can minimize problems if you follow the best practices you should be following anyway. Also, source code is bad because it often has bugs, but if you break it up into *functions*, that can help to minimize them! &gt; This tutorial takes no position as to whether PL or IB is the better approach. Hahaha!
https://gph.is/1IFWQHs
I would love some help but i need to restart my project after taking a year hiatus on it. Can i save your username and pm you when i start back up?
Please do! I would love to help/learn. 
My friends and I try to be thrifty, but some apps in the store would just be either really complicated or too simple to record expenses. So using Core Data, a Calendar, &amp; Data Visualization, I recently just published a bookkeeping analytics app! https://itunes.apple.com/us/app/thrift-budget-statistics/id1360918483?ls=1&amp;mt=8
https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab His video series are phenomenal for learning math 
This isn't a bad example however you should look at it as purely that, an example. It's a bit glitchy.
* In loadCellData(), I would empty out posts before filling it again with the snapshot. That way if loadCellData() is called more than once you won’t keep old posts around. I think this might be why you were seeing duplicates. * Also in loadCellData(), I would call self.tableView.reloadData() only after you finish adding all of your Post objects to posts. * I would move image data fetching to tableView(_:cellForRowAt:), since you don’t need to fetch images for cells that you aren’t yet showing.
[removed]
I would say you have been lucky. I’ve had XCode updates DESTROY my layouts. Other times things would silently disappear (wiring of events...every single button lost touchUpInside wiring...all of them). Plus I’ve had hellish merge conflicts when working with other devs on the same storyboard.
I’d like to thank OP for posting and everyone for sharing their tutorials, I’ve been looking for something like this for a while.
Mostly my back... That and all the other reminders that I'm just getting too old for what I do. I've dabbled with software before. I learned basic back in the Vic-20/C-64 days. I wrote a file manager app for windows 3.1 in VB3 that I sold about 100 copies of but I haven't really messed around much since. Swift is my first time getting serious with object oriented stuff and I've finally turned the corner from beating my head against the wall to having some fun with it. I'm not planning on quitting my day job any time soon but I've got a couple ideas for apps that might do alright.
I was on mobile, not exactly friendly towards code. 
Here is an example of your code showing how you'd use a completion block to cause the `doSomethingAfterDataFetchIsFinished()` method to be called once the fetch has completed. import UIKit class ViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() fetchdata { doSomethingAfterDataFetchIsFinished() } } func fetchdata(then: ()-&gt;()) { //get data // Once data has been downloaded call then() then() } func doSomethingAfterDatFetchIsFinished() { print("data fetch is done") } } Basically all a closure is, is a function wrapped in a variable. Letting you pass around code to be executed later. In my code above I created an closure that performs the `doSomethingAfterDataFetchIsFinished()` function call. Then I packaged that closure up and sent it to the `fetchData(then: ()-&gt;())` function. In passing it to that function it gets placed in the variable I called `then`. Now when my fetchData function finishes doing whatever work it needs to do I tell it to run whatever code is in the variable `then`.
I commented on your gist. You have to think of it this way. You are passing a block to a function that can execute that block whenever it wants, in your case when it completes doing something. In your case you want to pass in a block with code that calls the next function. There are many things to keep in mind here including retain cycles. Also if you are chaining a lot of completions you may want to look at something like PromiseKit. Cheers
Thanks but can you explain: fetchdata(onCompletion: { [weak self] in self?.doSomethingAfterDataFetchIsFinished() } Not sure why `[weak self]` and `self?` is needed? What do they do?
[removed]
Yeah of course. Because you are inside a block when you call doSomethingAfterDataFetchIsFinished() you will have to call it using self. In doing so you are adding a place in code where you reference self. This leads to what is called a retain cycle and it makes it so that your view controller will never be released in memory. [Weak Self] makes it so that you don't have a strong reference. Here is a link that probably explains it better than me: https://stablekernel.com/how-to-prevent-memory-leaks-in-swift-closures/ 
What’s a good way of upgrading the memory and cpu of a Mac?
You can also try [khan academy ](https://www.khanacademy.org/) 
Ok cool
Finished on WWDC Playground project, [see it on GitHub here.](https://github.com/coffeeboo/WWDC18) Working on a **Kitten,** a video chat app that I paused development on for a while. Besides that, can't wait until WWDC!
May also be the HDD. My 2014 Mac Mini was interminably slow, but I upgraded it to an SSD and now Xcode and the simulator are more bearable. Not ideal, and still crawls to a halt occasionally, but not as bad as it was. Also the tutorial vids probably cut out the loading times to make it *seem* instant (that's what I'd do).
Currently doing this too. [Try converting it to Kotlin first.](https://github.com/angelolloqui/SwiftKotlin) If that doesn't work, [compile it to Java.](https://github.com/SwiftAndroid/swift-android-gradle)
&gt; Not sure why [weak self] and self? is needed? What do they do? [Swift Retention Cycle in Closures and Delegate](https://blog.bobthedeveloper.io/swift-retention-cycle-in-closures-and-delegate-836c469ef128)
I’m running a late 2014 mini with 8gb of ram and when I first launch the simulator it will take a good 8-10 minutes. Works fairly well, but Interface Builder is getting slower to load as the app grows. Best advice I could give is to just leave the simulator/Xcode running even when not developing. Might not be so easy if your MacBook is your main machine.
What is it that you are having problems learning? Linear algebra is not hard - if it is explained to you in a way that you understand. You'll be able to rely on being able to use it for a long time.
&gt; 8-10 minutes jesus
Exaggerating, it’s probably 7-9...
Get more than 8 GB of RAM. Quit Safari. I have 2011 and 2012 and newer MacBooks and you can't live in Xcode without 16 GB of RAM.
Fucking Apple. Thanks for making all the new MacBooks impossible to upgrade the RAM on. 
My MacBook Pro has 8GB too and runs smooth with other IDEs opened too. 
That’s how long the app takes to build at work. 
Well I'm confused a little in your explanation. Do all sources have an id? Why not make a dictionary array that goes by key: ID and stores a personInfoObject {name: String, moneySpent: double}. And if anne walsh is in all three sources. Do a check if getting a dictionary by anne walsh's id returns back with a result add to the current money spent. If no result returns back then add the new personInfoObject to the dictionary with the id.
Macbook Pro mid-2010. Changed battery, SSD, and added more ram from 4gb to 8gb within the past 2 years. Even with that it also takes a solid 7-8 minutes to open simulator. Can’t let Xcode open it op on first build. I need to first run simulator, then build-&gt;run app, then let it crash, then run the app again. Then it actually works. Xcode is slow in general when coding and I’m very close to upgrading my pro. Just not sure which I should choose. I’m not paying the price for the newest. 
The move from Swift 2 to 3 was the hardest in terms of code breaking changes. But having been there, here’s a potential plan: 1. grab Xcode 8 from Apple 2. Convert the project to Swift 3 3. Open it in Xcode 9.3. 4. Convert to Swift 4. With each conversion step, you’ll likely have to make changes based on Xcodes recommendations. Methods will have been deprecated or renamed. But it’s not hopeless. As for release to iTunes connect, ensure the developer profile has an App Bundle ID for the app you’re working on, the set the project to automatically handle provision. When ready, produce an Archive (via Xcode) and choose that it’s for the App Store. This will take care of signing and the like. This is a rough overview, but it should get you started in the right direction. 
This is the right plan.
All sources do have an I’d but they only work for processing on the source they come from, source a id is useless when comparing to source b id for example. Each source just updates a struct every second and then I want to check each object in that struct vs Allpeople (which I can do by id if it exists) if it does not exist I want to create it in Allpeople so other sources then have a string to check against in Allpeople. 
2012 Mac Mini, i5, 16GB RAM, SSD, sucks monkey balls! :D Avoid, if anyone is considering it.
With this, lookout for delegate method signatures. The converters don’t seem to update these. 
Macbook Pro 2009...Sure I usually run Xcode by itself, plus Safari when I have to. The best option is to run straight onto your phone via usb. I ised to use a macbook air 11” with 4gb ram and 64gb hdd and that’s the only way it would work for me. I have not counted how much time it takes to load the simulator up, but it takes up enough time to have it running as soon as you fire up xcode and should probably run the project right away to get the app downloaded right off the bat. It's, unfortunately, just part of the workflow...
Plenty of good tips in here, but one thing missing is this: Don’t use the simulator. You own an iPhone, I presume? Use it. There’s no reason to use the sim for any device model that you already own. And if you’re just starting out, then specific device models aren’t something you need to fuss about yet. Always do your daily building and running on a real device, unless you don’t is the necessary device. 
The AI 'thinks' by exploring the game tree. A node in this tree is a game state, an edge is a possible move. When the AI explores a move, it is `apply(_)`'d to your game model. When the AI has reached a leaf node in the tree, or has reached its maximum depth, these moves need to be undone again. This is what `unapplyGameModelUpdate(_)` and `setGameModel(_)` are for. In those methods, you need to un-upgrade your pieces if they have been upgraded by the moves that are to be undone.
Unless you need to explicitly support new iOS 11 features or the iPhone X screen resolution, you don't have to do the conversion to Swift 3 and 4 - if the task is simply to get the app up on Testflight, I would focus on that, using the existing Xcode 8.
Learning Swift, i just started one month ago, so I'm still learning
Is there any trial version? I'd like to try it out and see if it's worth to buy it. 
Try to use an iPhone SE or 5S as your target device, doesn't need scaling on a Retina screen and uses less resources compared to an iPhone X. And your apps should look fine on the smallest screens first.
Perfect is the enemy of good. I wouldn’t release something that is ragged or obviously broken, but it’s okay to release something working that can be improved. 
Create deadlines for yourself. Make a list of features you want to add. Add the ones you really need first, then keep adding stuff until a week before your deadline. Test, polish, test, polish, test, polish and then release. Monthly releases are a good middle point between your business interests and your end users.
I made that transition about a year ago, it was not a big deal, even though I was new to both the project and Swift also. About a week would enough, 3 will be plenty.
good point. i learned something today
The way I would do this is create an enum with cases and associated values of every type you need to store. Then, when you retrieve the enum at a particular index, switch on the type and handle appropriately. I might be biased because enums with associated values are one of my favorite Swift features. 😛
Check out the Stanford series on Swift :)! https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316
I publish my apps when the primary functionality is working with no bugs. (Because if 1.0.0 is crashing... goodbye users)
Primary functionality free of bugs means release. Do not queue yourself with details or minir features without the best ideas source -&gt; real user feedback.
You can always list out features to look out for in your future updates when you make the app description. That way you can release a stable product, and are beholden to keep going with it. 
If you have an iPad checkout [Swift Playgrounds](https://www.apple.com/uk/swift/playgrounds/). It's an app from Apple that teaches Swift from (very) basic to intermediate level. Next step would be to transition to Xcode to start building smaller apps.
I really liked udemy for that, I like paying a small amount for a service I can get for free, it feels like people spend more effort when they sell a service. I got a 50-hours swift course for 10$ so it was definitely worth it.
Check out Angela Yu on Udemy. Really good course for beginners. Just don’t pay full price wait until they’re on offer. Also worth checking out Hacking with Swfit. Hope that helps. 
I'd focus on an crash free app with the minimal set of minimal features you must add. You might think some features are must have but they will only be used by 1% of your users, so don't add them for now.
Teamtreehouse and Ray Wenderlich
A lot of good advice already, but I would add that whenever you have a release-ready version, try to find some beta testers (using TestFlight is easy for them and you). There is always some path you haven’t tried, various screen sizes, different networking etc. it’s really worth the effort!
Lots of resources at https://developer.apple.com Specifically https://developer.apple.com/swift/resources/ I would recommend starting on an iPad or Mac using playgrounds and work through the “The Basics” part of the free book “The Swift Programming Language”. Then you could move on to the Stanford course (also free online). Here you’ll need a Mac running Xcode. Only thing you need to pay for here is the iPad or Mac itself and an internet connection. In principle some version of Swift is available for other systems, but for a beginner I’d recommend a Mac where everything is installed for you via Xcode. Doesn’t have to be a shiny new Mac. Basically any used one Intel processor will do. It could be a Mac mini. It just needs to be able to run macOS 10.13. E.g a Mac mini from 2010 or later. See https://support.apple.com/en-us/HT201475 I’d also recommend you get in contact with someone experiences who you can meet and ask questions. Perhaps join a cocoa heads meetup in your area. (If you have a few questions for starting out, I’d be happy to help) 
If it doesn't crash and works according to a preset MVP then I say submit it. And then working on a weekly to biweekly release schedule.
My input is.this. Most big apps are written in objective-c so I would suggest learning objective-c at least enough to be able to do basic things.Because if you are looking for a career and if the company isn't new then they would prolly be looking for an objective-c devs as well. But learn how to build in swift. Swift is fairly easy to learn. It's prolly one of the most new user coding languages out there. So i I think watching youtube videos will be fine. But watching how to program in swift is kinda of boring and after a while no point. So I guess im vouching for you to think of an app idea. Could be something basic. And start developing on the way. This way learning swift is practical and actually can produce tangible progress. Like say you want to make a dating app. Then watch youtube how to make a dating app in youtube.
Also learn git while we are at it and put code on github. Source control is super important that a lot of new devs tend to lack
I’d recommend focusing on Swift. Objective-C also encompasses C and I think Swift is much cleaner and easier to learn and is a blessing for people starting from scratch. I think there’s is plenty to learn and wrap ones head around focusing on Swift. Objective-C is becoming legacy and certainly will be needed to work on existing apps, but there is no need for someone starting out to complicate things more than necessary.
But there's a difference between wanting to learn swift and wanting to become an iOS developer. What we have is people in the industry who know objective-c and have no desire to learn a new language. &gt; Objective-C is becoming legacy I'm sorry but that is wrong. That's like saying Java is legacy code. Mac OS is written in objective-c, while the kernel is C. Saying objective-c is becoming legacy is grossly inaccurate. And learning C I think is almost fundamental and what separates the good dev from the best dev.
ugh - thanks for the report. I'm glad to know it isn't just me. 
&gt; And then working on a weekly to biweekly release schedule. As a _user_ of apps, I find frequent updates to be rather annoying. Weekly or biweekly seems far too often. I'd much rather see monthly or even quarterly releases. 
I would recommend you start with the two books in Apples "Everyone Can Code" series. Intro to App Development With Swift: https://itunes.apple.com/se/book/intro-to-app-development-with-swift/id1118575552?mt=11 and App Development With Swift: https://itunes.apple.com/se/book/app-development-with-swift/id1219117996?mt=11
No, because then someVariable could be either an Int or a String, and a variable can only have one type. So you'll have to use more logic (and two variables, or an enum as mentioned in another comment, etc) to test the cases individually. If at all possible, you'd be better off having someArray be an Array&lt;someMoreSpecificType&gt; rather than the Array&lt;Any&gt; as it presumably is.
Sorry buddy. App updates are important.
The function I gave you doesn't return anything. When you call it you need to provide a block that you call when your dataTask returns. fetchJSON(urlString: "https://url.com/blah", completionHandler: { result in switch result { case .success(let object): // do something with object (this is your actual struct already decoded) case .failure(let error): // handle error }})
I believe the return block he speaks of is the closure. It’s parameter name is completionHandler and is marked with @escaping. 
Can confirm. It freeze a LOT
Well, yes are right about that. I was trying to help by saying that a beginner probably should not worry too much about Obj-C in the beginning. I believe here is plenty to learn and plenty to do for someone focusing on Swift. I don’t think OP was going for a shot at becoming a kernel programmer or working on the OS or frameworks as a first project. As far as I can tell most, but of course not all, new apps today are written in 100% Swift. Of course the more you know about Objective-C, C, C++, Metal, JavaScript etc. the more jobs you can handle. I just wanted to help a total newbie by not setting up overwhelming demands. Cheers!
Me and XCode go way back, I have a solid 8 hours under my belt over the last 3 days.
Soon you'll be saying "[anything Xcode related] seems like it gets worse with every update" just like the rest of us.
Oh nice. I didn’t know about those. They look like much better resources for a beginner than I put in my reply to OP. This is what OP is looking for. 👍
I'm not against updates at all. For improvements, bug fixes and especially security updates they are a necessity. I'm just opposed to a frequent release schedule for its own sake. As a user i find a stream of small updates annoying. If an app has significant changes or security issues need to be addressed then by all means, send an update. 
https://developer.apple.com/documentation/swift/array/2296801-sort
Yeah you’re not wrong. There is a line that could be crossed. I’m thinking more on a small scale. Like realistically he’s not going to have a thousand users right away. So have a short release schedule is more an internal goal
Definitely publish an app as soon as it has all of the most basic features and almost no bugs. You can release weekly updates after that, but it's good to get the app out there sooner rather than later.
Oh definitely not wrong about this. I do agree with what you say. Maybe slightly disagree. I learned swift first and tried finding an iOS job in swift but they were are looking to objective c. What made me switch was being burned on swift when they updated to like swift 2 and none of my code worked and the auto translate didn’t work properly. Been going hard in the paint with objective-c. That said the people hiring are people prolly who are most comfortable in objective-c. But swift is perfect for new to coding
I’ll recommend the free online books from Apple in their “Everyone can Code“ series. https://www.apple.com/everyone-can-code Start with the book “Intro to App Development with Swift”. Happy journey :-)
Since Int and String have practically nothing in common, what use would this serve? You wouldn’t be able to use the resulting object anyway.
If that was possible, at compile time, the compiler wouldn't know what the type of `someVariable` is. Imagine if you started treating `someVariable` like a `String` (for example, accessing the `count` property), but it ends up being an `Int` (which doesn't have a `count` property). Presumably that'd be a crash. And this is exactly the type of thing that Swift's type safety aims to avoid. If you only care about whether a specific value is a `String` or an `Int`, you could do this: let isStringOrInt = (someArray[x] is String) || (someArray[x] is Int) Or if you want to actually treat that values as its actual type, you could do something like: if let stringItem = someArray[x] as? String { // Do stuff with String value } else if let intItem = someArray[x] as? Int { // Do stuff with Int value } else {...} You could also use `compactMap` or `flatMap`, to get arrays of just the Ints and just the Strings, that way you'll already know the type when you iterate through them. let strings = someArray.compactMap { $0 as? String } // use flatMap Swift 4.0 and earlier let integers = someArray.compactMap { $0 as? Int } // use flatMap Swift 4.0 and earlier
The sidebar has a pretty nice list of resources: https://www.reddit.com/r/swift/wiki/index
As a big fan of enums with associated values, I agree!
Trying to understand delegates and protocols. Trying to learn about NSFetchedResultsControllerDelegate. Delegates and protocols are still kicking my ass though. Gonna dial it back and start back at zero again. No real projects for me yet, it seems. 
Thank you
I'm not sure why I care so much, but I'm really glad that we could find some common ground of agreement. :) Scale does matter - good point! 
The title: &gt; Wait two or more network request (or other task) to finish then only perform function using Dispatch Group Say what??
oooor op can implement their own sorting function and prep for future coding interviews
No problem, it's much less confusing now.
Just sounds what OP wants is to have a very likely scenario of inaccurate data. Especially if the data is large enough. I mean China alone has mostly one character last names so they have very similar last names.
Not much you can do there other than come up with some sort of ranking method to judge correlation. Once that's done you have a sensible cutoff and group likely similar instances together. At some point you'll need a better discriminator to come along and make decisions, most likely a person or a very advanced and trained machine-learning algorithm.
Not big 4 but not too short of them. ;-)
Okay ! Thanks a lot &lt;3
I mean if OPs goal is to provide a solution that is currently lacking any real relational data and keep the data all together then I understand using a permutation while giving it an unique ID. But if OP is just in the present state of setting up these datasources then the solution should be put a relationship key that allows the matching of the people. But honestly if it comes to money I find it crazy that there is like probably roughly a 25% chance the money I paid is inaccurate. I mean trained and advanced machine learning algorithm wouldn't be good since how many Muhammad's are in the world. I think if in the current state would be implement some confidence algorithm that says "we think it matches this value" and would need some person to validate it. Otherwise matching on something that is not unique at all is an interesting solution.
They'll also answer your questions and guide you. No one is expected to have every single algorithm or structure in their head at all times. Yes, you should know the basics but it's much more important to be able to find the answers then have every single one memorized.
I have this problem EVERY time I try to use playgrounds. It will either crash completely or it will get stuck on "launching simulator". Doesn't seem to matter whether or not I have it in automatic or manual run. I've found a blank playground on the iPad actually works very well for simple things.
Thanks but I just stored them as Doubles and used sort(by:)
What about newvalue:any? = (value as? Int) ?? (value as? String) Still have a any though, so you don’t what is is.
Why does Apple's Xcode team let the product ship with such glaring level 1 crashes?
I remember when Xcode didn't suck. 3.2.3
It freeze**s*** a LOT they freeze it freezes That's how it works in English. : /
So about this... I'm confused. It first establishes that, before the Swift 4.1 work: "Optional and Array are Equatable, so long as their contents are equatable." Then it claims that you can't do this: let a = ["1","2","x"].map(Int.init) print( a == [1,2,nil] ) Saying "This is because the implementation of == for Array, as shown above, required the array’s elements were equatable, and Optional wasn’t equatable." Even if I set Xcode to SWIFT_VERSION Swift 3.3 it doesn't complain about the example. So was Optional equatable before or no?
Just missed an S homie. 
You're probably not going to find anything more succinct than TSPL that's both accurate and complete. Swift is a pretty big language. There's even a few areas which the Apple book misses.
The obvious way is to define a protocol, and have Int and String conform to it. Then you can declare the interface you'll want to use here. 
📅 2018-02-12 ⏰ 21:00:19 &gt;You can now pre-order the [@rwenderlich](https://twitter.com/rwenderlich) Vapor book! The author list includes the entire core dev team, so it's a great way to learn Vapor 3.0 and support the framework.💧📘🎉 &gt;https://store.raywenderlich.com/products/server-side-swift-with-vapor &gt;-- Vapor ([@codevapor](https://twitter.com/codevapor)) &gt;🔁️ 46 💟 140 &amp;nbsp; [^PM ^me ^for ^suggestions](https://www.reddit.com/message/compose/?to=TweetTranscriber) ^| ^(I'm a bot and this was done automatically)
I have used dispatch group in the past to perform a network request for each element in an array, collect any errors that happen and then notify the user when they are all complete. But now I use RxSwift or Promises for that sort of work.
Good work! Keep us updated with an App Store link once it’s released. 
[removed]
"Did you mean to use '='?"
The iPhone X is actually the one that works the best. I own a 5s so I would prefer to use the 5s simulator, but as others have said, I should try loading the app to my phone directly for testing.
No. This is an initializer. 
You have to choose, you can't have both! You either initialize it when you create the class, or the object comes pre-initialized with the class.
Of course, using a real device is always the best option.
Talk to a few “real” users. Get their feedback. Maybe it’s only a few things that matters to them. What pain does your app solve?
Good job!
Congratulations mate.
Dang I mostly want you to code review my stuff. I’ve been doing swift since day one, but it was my first and basically my only language to date. 
You might not offset the cost though app sales, but at least in my case the amount of stuff I learned and the people I’ve met by publishing my apps in the App Store has offset any monetary cost spent on it. Good luck and don’t give up!
As long as it's mutual I'm happy to code review your stuff. It doesn't matter if it's your first language, as long as you consider yourself advanced I'm game.
same here! Only my friends have downloaded my app, but two friends from high school noticed needed an iOS dev so they hit me up right away when they saw I had an app released.
Not at the moment I'm afraid, I'm not sure what kind of trial would be appropriate. There's a large up-front value with Periphery, i.e you remove a lot of code when first using it, and subsequent uses are more about maintaining a clean codebase. So I'm a little worried about the trial version providing 90% of the value, which may discourage people from following through with a purchase. There could be some creative ways in which I can restrict reporting, but I need to think through what's reasonable and workable. P.S I'm aware the website does a poor job at explaining the full capability of Periphery. I'm working on improving that at the moment.
RemindMe! 1 day
I will be messaging you on [**2018-04-13 02:48:52 UTC**](http://www.wolframalpha.com/input/?i=2018-04-13 02:48:52 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/8blmnu/can_someone_please_explain_this/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/8blmnu/can_someone_please_explain_this/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Biggest tip i can give is to now focus marketing. No matter how good or how many apps you make, if you don’t actively seek users/clients, then your apps will never take off
Congrats and the best of luck! One of the biggest lessons you will learn right away is how quirky app sales vs ad revenue can be. Its a fun process I swear. And I can't agree more with other people in this thread that by posting an app you will get attention from other sources and lead to outside work 9 times out of 10.
Yea exactly, it was really important for me to see the entire process through to the end. Thanks!
Thanks for the tip! Yes that seems to be critical. I've started looking into that. 
I am having some difficulty understanding but I think I can explain what you want. It all has to do with the view hierarchy being independent of the view controller hierarchy. Navigation controller is a view controller. Using viewDidLoad is not going to guarantee that you are in a view controller hierarchy. You can only have a non-nil self.navigationController when the view controller is within a navigation controller. Otherwise, it is a nil reference and your line of code does nothing. For the first view controller, its view probably loads after it has a navigation controller, meaning your line of code works. For the others, they probably do not have the view controller hierarchy at their point or viewDidLoad. For a concrete example: I can have a view controller’s view loaded before I call pushViewController. viewDidLoad will happen when self.navigationController is nil, but viewWillAppear will happen when it references the parent VC. If you are specifically asking about tab bar controller, it loads its view at init for whatever reason. Some Apple view controllers do. You can’t depend on viewDidLoad being a view controller-related event and instead maybe want to look into didMoveToParentViewController etc
What is anyone can code. Link?
Why not offset? Making a really good app, will get sales, thats what I think!
This is quite inspiring for me, because I've been in an app dev course for over a year now, but (for some reason) have never really thought I knew enough to start a project! Thanks!
It might not be too hard to build yourself, depending on your requirements. You could build a custom UICollectionViewLayout or otherwise create a layout manager which draws your content inside a scroll view. What does "reload single cells" entail? Can reloading a cell change its size? If so, presumably you want to invalidate the frames of all of the cells after the one which reloaded. What are the contents of a cell? Basic text? Rich text? Images? Are they interactive or static? Is this for a personal project or something that other people will use? If it's the latter, you may need to consider accessibility and localization (including RTL layout) which can significantly increase implementation effort.
Congratulations! Now the hard part is getting user to use it :P
"all of the constructs" is frankly too broad for anything succinct. If you're looking for a reference, check out TSPL as other posters suggested. If you'd rather read some code, check out the source for the [Swift Package Manager](https://github.com/apple/swift-package-manager). It has lots of examples of different Swift concepts, wraps some POSIX/C concepts, uses Foundation, implements lots of simplified types, etc. It's nice because lots of things are in bite-sized chunks.
I’d like to join. I have about the same number of years spent working with Obj-C and Swift (though not full time), and I have been involved with and contributed to Vapor since version 1. I currently write for Linux, macOS and iOS.
Yeah, I understand. The thing is, I can't really be sure if the software actually works. So if I could run something like a demo or anything like that, that'd be great. I'm not buying it rn because I don't know if it actually works.
What's the app?
I think that might because that in landscape mode, tab bar height is different, have you tried this? https://stackoverflow.com/questions/46349080/uitabbar-height-in-iphone-not-changing-dynamically-when-rotating-from-landscape
I wish there was a way to apply squircle to any CALayer. It would be helpful when creating more complex custom controls. 
Good idea, I’ll work on that for a 1.1.0
Congratulations!
Boom solved that. But the text is changing position and if i set it to like 0 , -4 the values are opposite in landscape so its either really low on portrait and perfect on landscape or perfect on portrait or really high on landscape... Cant win!
You could just make your extension an extension on `CALayer` (instead of `UIView`). This makes more sense, since you don't do anything with the view anyway, and things like `cornerRadius` are properties of `CALayer`, too.
I see where you're coming from. But if the app isn't perfect the first time don't you think i'd loose users?
Yeah I know it's unlikely that i'll get thousands of users straight away. But there is always a chance. And if I produce something that isn't capable of handling that amount of users I would've actually wasted my time. But I do agree with what you initially said - making sure the core functionality is bug free. I guess I should prioritise some of my features.
I think private lets the compiler make certain optimizations 
So I guess, thinking about it, what i'm asking is how do I set the height of VC\-A and VC\-B to the height of the scrollView? If I do that, then the scroll view and the VC will be the same height, so there will be no scope for y axis movement...right?
also have a look at google tag manager it maybe just what you looking for.
I also create UI elements programmatically and I default to making them private.
A sad reality is that phone Apps [don't make money](http://www.ibtimes.com/how-do-you-make-money-when-less-1-apps-are-financially-successful-1537962). Unless you have an extra service to provide on top of your app, like a subscription service, then it is almost certain you won't make enough money to break even, not to mention to make a profit.
Thank you! 
Personally, I use Rx to route data into and out of a Elm like library I wrote (https://github.com/dtartaglia/Apex). My library is still a work in progress and doesn't have documentation yet, but any redux/elm like library would work well.
In, PM me
I’m probably in the minority here judging from all the code out there, but I don’t use weak for my @IBOutlets. Take this typical line... @IBOutlet weak var someView: UIView! It never made sense to me to both force unwrap and use weak. Seems like you’d be saying “if everyone else dereferences this var then set it to nil, and if it’s ever nil then crash!” which doesn’t seem all that great.
They both had == operator when their Element was Equatable, but they weren’t Equatable themselves. Right now if array’s element confirms to Equatable, then array is Equatable. This allows to put such array or optional to method which expects Equatable as argument
And what about apps that costs about $5 and sells like hundreds and hundreds? I'm asking you because I don't know quite right
In general it’s a good practice to add private to all the variables and functions you’re not accessing from other files but sometimes you need them to be public or open and only then you should promote them :)
I’m pretty sure the developer fee is waived if you are a student and have a school email 
&gt; Btw is it necessary to make ui instances weak if I'm not using @IBOutlet? Swift IBOutlets should not be weak. Let's let that die already. The story used to be more complicated, but only on iOS 5 and earlier, and Swift only supports iOS 7 and up. If you want to make your own view references weak, that's up to you. I can't think of a reason to do it. Weak references take a tiny bit more time/space to access, and once they're referenced by the view hierarchy, it doesn't matter at all.
Are you sure? :/ [https://developer.apple.com/support/university/](https://developer.apple.com/support/university/) &gt;**Is there an Apple Developer Program for students? Do students receive any discounts? ** &gt; We currently do not offer student discounts or a student Apple Developer Program. The iOS Developer University Program is designed for accredited, degree-granting, higher educational institutions planning to incorporate iOS development into their curriculum.
A couple nits: - "!" doesn't mean "if it's ever nil then crash", but only "if it's ever nil *and someone tries to dereference it* then crash". If you know the the lifespan of your objects, this might not be a problem. - Using "!" here means you can avoid using "!" in 73 other places in your program, which might be a significant benefit for you. There are always going to be valid and useful situations which can't be encoded in any type system, and "!" can be useful in some such cases. That said, IBOutlets probably aren't a good use of this, but it's not inconceivable to me that someone would want to use a weak IUO.
You can answer all these questions yourself with a few well-placed NSLog() statements.
From your link: &gt; But just because they implemented == did not mean Array or Optional conformed to Equatable. The reason for that is that you couldn't have Conditional Conformance which is an `extension` with both a conformance statement and a `where` statement. So before you could only do: extension Array where Element: Equatable Now you can do: extension Array: Equatable where Element: Equatable That means you can now say that the `Array` is `Equatable` when the contents are `Equatable`. Before this all you could do is provide an `=` operator for `Equatable` contents but not actually say the enclosing type conformed to `Equatable`.
I have recently written an article about my experience with using storyboard as well as how to build a simple login screen from scratch 100% programmatically. http://softauthor.com/ios-ui-design-programmatically-xcode-9-swift-4/ Hope it helps! 
Why no epub format?
My pleasure! Happy coding 
Watch the Stanford course lectures. 
Use 4 spaces before every line of your code in order to format it as a code block. Using "```" doesn't work here.
Ah sorry, it works on mobile; I typed it on my phone. 
Actually, one more thing. If let's say the user is on picture 3, and they press previous - I want it to go to picture 2, but at the moment it is going straight back to picture one. I don't want the user to be looped from picture 1 to 3, if they're on 1, I want it to stay at 1 so they can't loop backwards. So I think my problem lies with the fact that I've made it so 'if picture 1 is showing and they press back it presents 1 again.' So I know where I'm going wrong, but I'm not sure how to make it go backwards one AND IF they are on picture 1, it to stay on picture one if you get me?? func previous() { currentIndex -= 1 if currentIndex &lt;= OBImages.count { currentIndex = 0 } imageView.image = OBImages[currentIndex] }
Fenced code blocks are available with some flavors of Markdown but not the base version and certainly not on Reddit. It would be a nice feature to have but Reddit's version of Markdown is severely limited.
I can't vouch for the book (as I haven't read it), but Josh's blog is full of great articles. If you're on the fence, that might be a good place to start to get familiar with his content. -&gt; http://roadfiresoftware.com/blog/
Maybe it’s just my eyes but it doesn’t look quite right, the middle of the corner looks “pointy” if that makes sense. 
If you are using a navigation controller, those view controllers are stored in a stack, when you go back to previous controller, the current get pop out of the stack. When you enter the next controller, the next one get pushed into the top of the stack. 
Autolayout? Constrain your childViewControllers' views to the height of the scrollview.
I reposted the link. Thanks for your feedback... I will include those points in that article... For now, I gave up on Storyboard because of Git merge conflict and working with auto layout constraints. I rebuilt the same login screen of one of my client's app a few times because the auto layout constraints are breaking as I add new nested views. I went back to build the login screen 100% programmatically, the constraints never ever gave me any issue. Now I am at the end of finishing that project and I felt that I made a good decision...
Ah. I confused the two. Thanks for the clarification 
Oh. I think every time I only read it as: &gt; ... Array or Optional conformed to Equatable ...
TL;DR an amateur developer knows shit, but attempts to teach others
I see you have a different opinion, but I like to hear constructive criticism if you have any. 
It’s not a matter of opinion, it’s a matter of experience. Everything has it’s place, and should be selected for the right reasons. 
They’re separate vc’s - they’re not physically within it in storyboard! Can I still do that?
Literally started them today! 
The short answer: people don't seem to mind getting only a PDF. Parsing JSON in Swift was also just a PDF -- no epub -- and I think only one person ever asked me if they could get an epub version. That's well under half a percent of customers, so producing epub wasn't worth the effort. If there's enough demand for epub I'll gladly consider it.
You'd usually use a delegate here. `ImageViewController` captures the image, uses the delegate to send it back to the presenter or whatever wants the result.
Thanks so much! A few of the articles there became chapters in the book after some editing and rewriting to make them fit. Here are a few -- consider these your "free sample": - [What are the benefits of unit testing?](https://roadfiresoftware.com/2018/03/what-are-the-benefits-of-unit-testing/) - [How to write unit tests in Swift 4 with XCTest](https://roadfiresoftware.com/2018/03/how-to-write-unit-tests-in-swift-4-with-xctest/) - [How to unit test button taps on a view controller with XCTest](https://roadfiresoftware.com/2018/03/how-to-unit-test-button-taps-on-a-view-controller-with-xctest/) - [What’s the difference between a mock and a stub, and how do you use them in Swift?](https://roadfiresoftware.com/2018/03/whats-the-difference-between-a-mock-and-a-stub/)
The hard truth is that no serious company will hire a developer who doesn't have years of experience, either through a formal education or through many years of self-teaching and working on open-source projects. It's just not done, there are tons of qualified developers out there with the right kind of experience. The second option is companies that don't know any better. These are small businesses who just want an app so they can grow their business. They will hire anyone that sounds convincing and wants very little compensation for their work. Lastly you have starting your own business. Writing apps, putting them up on app stores, writing more apps. Without proper experience you won't get hired by option one and the other two options will pay little and take a lot of your time. Yes, you can make some money even without years of study but it's a much better investment of your time to spend it on studying! Take a few night courses at a local university or adult education program while you work a regular job. Work on open source projects and do a few apps of your own. Build up a programming resume that real companies will look at or strike off on your own, armed with the tools to do the work. A few months of study in any field is too little to get a good job, unless that job is slinging food or dirt.
Yeah, you're probably right. I'll think more about it and see what it would take to create an epub. My process is a bit slow, and epub might actually be easier. I'm going from Markdown to PDF to PDF with Cover and Table of Contents, and doing all of it manually. I wish there were some way to automate it, but I haven't found a good way yet.
I'm new too but my understanding is that the braces contain the stuff that gets done when the function (the name before the opening brace) gets called. func doStuff { print("Doing stuff!") } Then call doStuff and it will print.
Thanks for the honest and insightful advice I really appreciate it
Braces enclose the *scope* of the code block, kind of like parenthesis in a math problem encloses a set of calculations. They're simply a way to "wall off" different blocks of code from one another. Not all languages use them (Python does not, for instance). It's not just visually easier to see where one block of code ends and another begins, it's actually required to use them in Swift. The indentaion is not required but is enforced automatically by XCode (or Playgrounds), again it's primarily so you can visually see what belongs with what. Indenting code inside a set of braces visually tells you that it "belongs" to that block (or is within that scope). It makes the code much more readable. Braces are required in Swift, indentation is technically not (though you should go along with it if XCode or the Playground is indenting your code).
Indentation is completely up to the programmer, it's never necessary. You put it in there to indicate that your code has entered a new level of nesting. Like those Russian nesting dolls, each new level is used for a a new "scope". Curly braces are used to scope your code. Local variables and other definitions are limited by that scope. So say I define a variable at the top scope, the one with no curly braces: let foo = 5 Now `foo` is in the "global scope", which means it can be used in all inner scopes. How about if I define a function: let foo = 5 func bar() { let baz = foo + 5 } I said that `foo` is available everywhere. The `func bar() { ... }` defines a new scope, inner to the global scope. In it I define `baz` which will only be good for that scope. When the function ends at the `}` then `baz` will be unavailable. let foo = 5 func bar() { let baz = foo + 5 } func bar2() { let baz = foo + 10 if baz &gt; 15 { let moreBaz = baz - 2 } } So you can see it gets even more complex. You have `foo` at global scope, a `baz` scoped to `bar(), a `baz` scoped to `bar2()`, and `moreBaz` scoped to an `if` statement inside `bar2()`. Each one of these is generally available to any scope more inner than where it's declared, but not available to any scope more outer.
can you expand more on this? 
gotcha.. thanks. ill give that a shot
Indentation is forced by default in Xcode and many other IDE (Integrated Development Environment) but it can be changed or turned off. It's a good feature, though, and probably should not be turned off.
It can be tough to hear, you're certainly doing a lot of work and seeing results. It'd be great to have that hard work pay off sooner rather than later. Unfortunately, it usually doesn't work out that way and it takes a lot more hard work to get a decent job. Keep up with it, you'll get there!
Oops... Updated. private let btnLogin:UIButton = { let btn = UIButton(type:.system) btn.backgroundColor = #colorLiteral(red: 0.1411764771, green: 0.3960784376, blue: 0.5647059083, alpha: 1) btn.setTitle("Login", for: .normal) btn.tintColor = .white btn.layer.cornerRadius = 5 btn.clipsToBounds = true btn.translatesAutoresizingMaskIntoConstraints = false return btn }()
That wasn't the point here, I meant: - weird shortcut name(most of the time be as verbose as possible) - no space after type: - another weird shortcut name inside closure - closure is redundant since you could just assign UIButton
Congrats brother!
Thank you for your feedback. The reason I use a closure instead of using UIButton directly is the view code eventually you will want to put in a separate file to follow MVC pattern. Also, I have mentioned in the article as well. 
Some constructive feedback could be welcome. Being right does not give you the right to be rude.
Thanks for the kind words I’m definitely going to continue to work hard
Scrivener is my favorite writing tool. Inexpensive, publish in multiple formats, easily customized. Good writing 
I don't see anything illogical about using both these features at the same time, when you want what both of them offer. For example, when a strong ref would create a reference cycle, and I know the lifetime of my object makes the unwrap obviously safe, and I don't want to type "!" 73 times. I suppose there are other ways I could have accomplished this, but they all seem more complex or verbose to me. For example, I could have made it a normal optional, and slapped a `guard let x = x else { fatalError("oops") }` on the top of every method that uses it, but for exactly the same result that's a lot more typing. Or I could have made it strong, and nilled it out in `deinit`, but again, that's essentially just a verbose way to emulate a feature that's built in to the language. Some people seem to have an intense aversion to any use of IUOs, but if you don't, I don't see anything about them that's fundamentally incompatible with `weak`. It's not the most common combination but there's nothing wrong with it.
Wait, there's actual *research* that's found Swift is a good language for beginners? I'd love to see that!
&gt; what do Curly Braces mean and why are they sometimes indented. Sorry if this is so basic but I can't seem to find an answer in lame's terms The reason you can't find a simple answer could be because there isn't one. Swift uses curly braces for a dozen different things: - closures - switches - blocks - property observers - computed property accessors - enum definitions - struct definitions - class definitions - protocol definitions - extensions - precedence groups - attribute usages Don't try to memorize the list. Just accept that "{}" can mean lots of different things, and that each one you learn may or may not be similar to others you've learned. As for why they're only *sometimes* indented, I've been using Swift for a few years and I have no clue why the Xcode/Swift engineers decided that some of them (like switches) should not be. That drives me crazy. 
I’ll admit I wasn’t considering reference cycles. Do you have an example where an @IBOutlet would cause a strong reference cycle?
You could just have an empty VC as entry point and not fill AppDelegate with stuff that doesn't belong there.
Agreed, especially for these types of books... annotations and having pages reflow-able on different screens is invaluable.
And the curve seems to extend too far into the flat. It looks wrong to me too.
I wrote the blog about how to build a simple login screen 100% programmatically and also gave my opinion about why storyboard to be avoided. http://softauthor.com/ios-ui-design-programmatically-xcode-9-swift-4/ I have been working on the project building UI 100% programmatically.
Do it! Mine is super simple but it was a really solid experience going from idea&gt;planning&gt;writing code/UI&gt;publishing on the app store. getting through apple's app store requirements was a big learning experience and i got a lot out of it.
it is a really simple quiz app for yoga instructors to help them learn yoga pose names in both English and Sanskrit languages. i teach yoga so it was neat trying to marry the two together. its not a mind blowing app and very simple UI but felt awesome to get it done!
thanks so much!!
cheers to that, haha. thanks for the encouragement!
I don’t know why I got downvoted, but I have advertised one of my app only on Facebook and it went from 0 to 10.000 downloads while making me earning thousands of dollars. I have spent around 1000$ on ads, but I started spending just 20$. I spent less than 200$ on another app that is now sitting at 150.000 downloads, luckily with this app it gained traction after just a few bucks spent on ads. I find Apple Search Ads way more expensive and the same could be said by asking individual websites/blogs to advertise your app. I am not saying it’s not worth it, but I would start with Facebook. For example a blogger asked me 400$ for a single post. With the same money you can be *sure* to have thousands of downloads on Facebook. 
From my understanding a relatively common technique is to get an entry level job that simply works with code, like an automated QA engineer, something that requires basic understanding of programming and not much else. From there you can work your way into a software developer position by showing that you’re both interested and competent. It’s all about getting your foot in the door, even if it’s a tiny bit it’s a huge advantage over most non CS majors. 
There’s a divide over whether storyboard is more helpful than harmful. For instance when you’re sharing work with people storyboard files can get massive and bulky, and any inconsistencies across projects lead to really annoying bugs. If you don’t use storyboard you aren’t letting Xcode hide all of the nitty gritty, arguably the point of programming, from the developer. Storyboard can be a crutch if you’re looking to really understand what’s going on / want to be really creative. If you don’t want that level of intimacy it’s no big deal, but it also means resigning yourself to what Xcode wants you to see, provided you don’t have the know-how to get around it. However if you’re new storyboard is a god send (it was for me), it’s infinitely more intuitive to a programmer new to creating and working with UIs and has a lot of helpful tools.
In my experience once someone is hired as QA they find it very hard to switch over to a software engineering role. Many companies, for reasons I don't quite understand, would rather hire from outside the company than hire out of QA. It might be that they don't want to have people come into QA under this type of hope, always looking to switch positions and wasting the money spent on training for QA. They'd rather hire someone new and train them specifically for software engineering.
 func previous() { guard currentIndex &gt; 0 else { return } // never go below first index currentIndex -= 1 imageView.image = OBImages[currentIndex] }
Yeah I don't blame you :) It's early days and I've a lot more work to do to demonstrate its ability. I'm going to be working out some inaccuracies over this weekend, but after that I'd like to send you a free license key. Can you DM me your email address?
&gt; As for why they're only sometimes indented, I've been using Swift for a few years and I have no clue why the Xcode/Swift engineers decided that some of them (like switches) should not be. It's completely Xcode, Swift contains nothing about formatting the code other than what's necessary for the syntax. That being said, you may want to look at this Xcode extension: [SwiftFormat](https://github.com/nicklockwood/SwiftFormat) &gt; **indent** - adjusts leading whitespace based on scope and line wrapping. Uses either tabs or spaces, depending on the `--indent` option. By default, `case` statements will be indented level with their containing `switch`, but this can be controlled with the `--indentcase` options.
RxSwift allows people to write code in a specific style. There are claims it helps you with writing async code, or avoiding side effects, yada yada. The majority of apps don’t use it, and they arguably don’t suffer because of it. If you like RxSwift, it is always sensible to use it. If you don’t like RxSwift it is never sensible to use it. 
I am glad it helped you out! Will update it with Safe Area Layout Constraints later and will be useful especially for iPhone X simulator. Thank you for the suggestion. I wanted to keep this article to be simple, if you want the landscape to work perfectly as well, I would recommend putting all the text fields inside UIStackView and using all the height and space of text fields relative to the stack view. Also, You would need to put the stackview inside scroll view so that when keypad appears you can push the focused text view above the keypad. 
Er well, I need to reiterate that I already know how to do views programmatically, but I like seeing people introduce it more as a topic.
Thanks a lot for the reply. So would you say I should just try it out and if I really like the style, then it's worth getting into, but if I don't it's totally fine if I just leave it?
My bad... thanks for the support though!
Yep! 
&gt; has it’s place has its* place it's = it is : /
IMO Rx is a plague in mobile development. I think there are some legitimate use-cases, but since it is so hyped it gets applied all over the place where it doesn’t make sense. You don’t need to be able to debounce an http response. In general Rx adds a lot of indirection which hurts readability, and lends itself to “weird” issues which are hard to debug. Rx to me is like trying to use a Swiss-army’s knife for everything instead of the precise tool for the job. 
I can agree, but I think the root of the issue is that reactive functional programming is a different style that requires thinking in different paradigms, and that's a skill not all developers have (and that doesn't mean that they're bad developers!). There's definitely ways to write clean reactive code that's easy to follow, but it's *super* easy to screw it up.
Sounds cool, congratulations!
Thanks boss! Very helpful!
I've brought up this problem before, people come in new and find out that the job market expects 3~5 years exp, a degree and several complex apps in the store, or at least that's what they're asking for. When iOS started, they were asking for 6 months and any kind of app that compiles. If you look at other jobs, they ask for 7~10 years exp. iOS is different from the old days, the mobile bubble is mainly in selected areas. Look at programming jobs vs iOS jobs. Programming is everywhere, iOS isn't. In addition, mobile is in a bubble. They are gambling on what is going to lead the way, just like they did with DotCom. We learned from DotCom and saw that Amazon, eBay and others came out ahead because of what they did with the tech. Same thing is going on with mobile. Point: they aren't really looking for entry level programmers. This is why they give the algorithm tests (even thou iOS devs don't write algorithms much), they can't really invest without vetting people. The other issue is tons and tons of people have been rushing into mobile, the gold rush was indie apps, that's flooded out and it's been "get a great job" gold rush that's also being flooded out. The best path (IMO) is to just make complex apps in order to prove you know the stuff. Having any job that is actually programming goes a long way. While I was in college, I started a business making custom business software. I used this to be able to get jobs, it gave me tons and tons of experience. One if the important parts of getting the CS or related degree isn't just the degree, it's also the internship. Putting out apps, open source projects are about the only way to get into the business.
Thank you, edited.
Yeah, glad it’s not just me then 😄
Guys, thank you for all the info. It's definitely given me a lot to look at. It's nice to see people in the same boat too. Thanks again!
How many pages is it?
Did you set breakpoints in the functions to see if they’re even being called? How about showing the code where you’re calling them. PS to format code on reddit start the line with four spaces, not &gt;
Yup. For functions, think of the curly braces as grouping code. 
To add on to what they said, I’m an iOS developer with no CS degree, but I’ve been doing iOS development on my own since 2013. I wasn’t looking for a job at the time. I made 6 apps between 2013-2017. I started an online CS program at DSU in summer 2017. I was at a Hackaton when I met a recruiter for a programming school. She told me they were hiring iOS instructors for the summer classes in California. I applied and I got the job to my surprise. This helped me get iOS experience on my resume. After I came back from California, a recruiter called me about an iOS position nearby. I agreed and went through 3 interviews. They almost didn’t give me the job because I didn’t have a CS degree but I told them I had 1 year left, which I do, and I got the job.
I remember a redditor complaining about that in /r/cacareerquestions. He would only get recruiter emails or calls back for QA.
Literally a lot of good reasons to use them. This isn’t a storyboard issue.
Some iOS developers like to feel superior and act smug that storyboards are from hell and useless and that it’s better to do all of it in code. I don’t agree at all. Only people who suck at using them complain about them. Constraints are powerful and you can even make constraint outlets in the view controller to adjust them via code. Storyboards are a great way to easily add elements and see your design. Also makes visualizing segues easier. You don’t have to put everything in 1 storyboard. You can have multiple of them. You can even select a few view controllers in a storyboard, and I think it’s Editor &gt; Refactor into Storyboard to move those views you selected to a new file with the segue added automatically. Heck, I work as an iOS developer for 1 of the big 4 banks in the US, and we use storyboards. One of the major issues I always hear is that it causes a lot of merge conflicts. I monitor all of the CI/CD jobs on Jenkins, so I know ALL merge conflicts that occur between ALL iOS teams. Guess how many from storyboards? 0. 
Yes, I've tested it and the methods are being called. In viewDidLoad I'm calling "loadData" like this: NoteHandler.sharedInstance.loadData() and I call "saveData" whenever changes are made to the notes: NoteHandler.sharedInstance.saveData(). 
&gt; can get massive and bulky You can’t blame storyboards because of bad programmers. This sounds more like bad design/architecture. You can easily split views into other storyboards. You don’t need to have a single storyboard file. In my apps, I group related views into their own storyboards. &gt; any inconsistencies across projects lead to really annoying bugs This sounds more like a team issue, especially if they’re having conflicts. I’ve never experienced this and we have over 15 teams that work on the iOS app for about 50 developers. I also monitor Jenkins job and see all conflicts. I see 0 from storyboard files. 
No CS degree here. Self taught. Made it at a great company with great pay. My advice: network. I’m in Los Angeles. Other big cities with large tech presence work too. Go to Meetup.com, find iOS meetups and attend all of them. It may take time but it’ll open doors. Of course have the skills to back it up as well.
My thought at as well. Check the notes array on NoteHandler before saving. Could be setting the notes on an array in the controller but not the handler instance.
Perfect, thank you so much!! 😊 
That’s your problem, you can’t do that because Swift arrays are *value types*. That means they’re copied rather than referenced like regular objects. You *can* shorthand it by saying, for example **nm = NotesManager.sharedInstance** and then work with **nm.notes** directly, but not the way you’re doing it.
You’re not creating in an instance of the Singleton, you’re copying the notes array of the Singleton to a local variable and then working on that copy. By using the code I posted, the **nm** variable would be a reference to your Singleton which you can then use to access its notes property without creating a copy.
Oh, I understand it now. Thanks a lot for the explanation!
No worries. Once upon time, when iOS programming used Objective-C, it would have worked the way you’d done it, so it’s an easy mistake to make. For some more background on value and reference types read [this blog post](https://developer.apple.com/swift/blog/?id=10) from Apple.
You’re welcome!
UIKIt has seven different ways of providing callbacks. When you use a reactive library like RxSwift and RXCocoa, virtually all of the callback systems are rolled into one. It's the whole simple vs easy issue. Using RX isn't easy, but it's simpler. Instead of having to integrate delegates, closures, responders, key value observers, notifications, and actions, you only have to deal with rx observers.
I just looked at the examples from google searches. If you know scenekit, it's just a little more lingo. 
Exactly, you can get a good development position without a CS degree but you have to have other stuff to show off your experience. Open source projects you've worked on, code examples, apps you've developed, courses you've taken. Without the degree it's definitely a tougher sell but it can be done. However, you most likely will still have to have years of experience to show the recruiter and interviewers to even get that first interview. When I first started working as a professional programmer I had a BS in Chemistry, had worked as a chemist for a long time, and had never programmed professionally. However, I had many years of personal software development, knew a half dozen languages, taken enough college courses to effectively have a CS minor, and had a bunch of code samples implementing fairly complex cryptographic algorithms. Even then I was closely quizzed on my knowledge and had to prove myself. I believe that what cinched it for them was that I had gone back to school and was working on a Master's in CS.
Other than the official documentation? [Apple Developer Documentation](https://developer.apple.com/documentation)
You do know thats not the official docs right?
Well this comment got a bunch of downvotes, so...I stand corrected. People *do* seem to mind getting only a PDF.
The beta 1 PDF is 109 pages. I'm sure that'll change through the betas and into the final version, but the content is all there now, so it shouldn't change much after editing.
as someone who is a newbie to swift and iOS casually learning how to do all this stuff, I appreciate the tutorial! Two (newbie) questions: 1) In the tutorial you mention splitting the view code into a different file to adhere to MVC. I would love to see what the code looks like after that split. For some reason, I am not sure how that would work specifically. 2) When I add a button using the storyboard and I want things to happen when a user pokes the button I create an IBAction. I'm sure this is something I could look up but that was my biggest curiosity after reading your tutorial ... how do I wire that up programmatically. Thank you!
The hard truth is that most serious companies have internships, entry level developer programs, or launch code programs and increasingly companies are finding ways to train people with the right mindset without requiring them to have a degree or experience. I would look to see if large companies in your area have ELD programs or a launch code facility to get you started. There are plenty of opportunities out there for someone with the right drive and determination. Good Luck !
I am working on finishing the Complete IOS App Development Bootcamp course from Udemy Link is: https://www.udemy.com/best-ios-10-swift-3-xcode-8-course/ Of all the courses I have taken over the years this is one of the best. Self paced. The instructor talks very fast so I end up going over some sections a second time. It is on sale right now. But I think that happens rather frequently -- so no rush to buy it. Heartily recommended.
Just go through a book about RxSwift, like this one: https://store.raywenderlich.com/products/rxswift
I totally agree. I also use a lot of "reactive concepts" but mostly I accomplish it with event emitters and promises, each of which is implemented in a single file of a couple hundred lines. The Rx syntax is needlessly verbose, and it feels like each edge case gets its own observable type. Rx feels like metaprogramming: It's the classic trap of trying to come up with a magic abstraction to abstract away all your complexity, but as always that complexity just gets shifted around.
Of course I do. I said "I really like the ease of browsing it offers". It also displays more information (in some areas) than the official documentation, which has a different purpose.
Yes, other than the official documentation which doesn't offer the same features like hierarchical diagrams etc.
Thanks, although it seems it browses the same documentation as the official one.
Nope, not that I've seen.
SwiftDoc is auto-generated and open-source. Are you saying it doesn't work with Swift 4?
Hasn't been updated since the author was hired by Apple. And Apple seems to have no desire to give Swift real documentation.
okay, just making sure. 
umm no.
Just use core data dude /s
Does the book cover how to unit test something like login flow (for example, I have a method that gets a token from firebase with a completion handler that calls a Facebook login method with a completion handler that gets a custom token from a custom server, etc). When I have a lot of methods relying on each other in an asynchronous fashion, I get really confused as how I unit test each one. I hope that makes sense. I’ve done some unit testing tutorials, and they’re frustrating because they really only talk about a very compartmentalized example that was built for the tutorial and not very “real world app.”
Watch the WWDC Sessions https://developer.apple.com/videos/play/wwdc2017/602/
I'm trying a bit hard to create fun code videos in Swift! Let me know your emotional experience of this video :)
Ah, so that’s what happened. Well, the Apple documentation is ok in places, but pretty lacking in others. It also has several weird bugs. 
What bugs? Definitely report them. 
As Bill said, knowing Scenekit is nearly everything you'll need to know to start developing your first AR application! I started out with some examples I found on GitHub to learn the environment. While not an application with great graphics, [SnakeAR has a great foundation of what you can do to get your application running](https://github.com/PGSSoft/3DSnakeAR). Examining SnakeAR is a great way to start. Apart from that, [there is a list on GitHub](https://github.com/olucurious/Awesome-ARKit) of projects that implement ARKit. You can learn quite a bit just by looking at the code in the repositories provided in that list. Feel free to reach out to me personally. I'm still developing my second application for ARKit, but I'm comfortable enough to answer any basic questions you may have about the process.
I like to use dash. It uses the official docs but it's so nice and locally searchable, plus it integrates into most editors including xcode. So typing some stuff up, I can quickly jump to the docs for it. 
Excellent point, but the main idea is that storyboard files inherently hide code making those bugs harder to fix if you’re not familiar with the behind-the-scenes.
Hey thank you very much! I appreciate it!
He's saying that when he started to learn he just used Google searches. That's pretty common in learning anything, and is a fine way to start.
Serious question... do you think there is something wrong with using Core Data?