Thanks for answering your own question, it's really usefull when people do that :-)
If you mean that you don't want the same string the next time, but after that it is ok to see this string (for example: string1, string2, string1) then you can keep var with the previous index and then try Int(arc4random_uniform(UInt32(idioms.count))) again and again till you don't get the previous one. If the array is long enough (and even if it is not too long...) statistically you should get a new index after trying not too many times. If you are still afraid of the option that you will need to try too many times, you can copy the original array every time and remove the previous index. But this is less efficient, because you have to copy the array each time. If you meant that you never want to see previous values (for example: string1, string2, string3), then every time remove the current index from the array.
Do you actually set the text view in the randomizedText() ? You have to set it somewhere and you ain't doing it in the action.
The updatedDirContents function: func updatedDirContents() -&gt; Array&lt;AnyObject&gt; { let documentsUrl = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)[0] as NSURL var directoryContents = NSFileManager.defaultManager().contentsOfDirectoryAtPath(documentsUrl.path!, error: nil)! var list: [String] = [] for item in directoryContents { list.append("\(item)") } return list }
Make sure that when define the variable "items" that it's defined as being of the type "[AnyObject]" If you're defining it with a string or two already in it make sure you do it like this var items:[AnyObject] = ["test"] EDIT: If you want to define it without any items var items:[AnyObject]? or var items = [AnyObject]() 
Pardon my ignorance, but is there a reason your function definition calls for returning an array of AnyObject, but in the function itself you're just returning a String array? 
I havent much swift experience (obj-c dev) but your returning list which is type cast as an array of strings and not returning an array or anyobject like your func suggests. Change: var list: [String] = [] to: var list: [AnyObject] = [] 
&gt; `func updatedDirContents() -&gt; Array&lt;AnyObject&gt; {` Any easy fix would be to change this method signature to `func updatedDirContents() -&gt; [String] {`
I have changed the function's return value to a string and it works! Which is weird because I *think* it didn't work when I tried it before. Either way thank you to all of you!!
check back when that happened dude. :D
That's really cool that your employer offered you a scholarship - do mind if I ask who is your employer?
[Ray Wenderlich](http://www.raywenderlich.com) may have something, but I haven't been following the tutorials provided there very closely. It started out pretty iOS heavy but I feel like there might be some things in there that are for OS X also.
Correct Ray Wenderlich has a great "candy Crush" style game with SpriteKit in swift. Great stuff there. 
One quick way to pick up some of the basics is do some tutorials on Ray Wenderlich's site: http://www.raywenderlich.com/tutorials 
If you've already developed for iOS using ObjectiveC, I think the official Swift eBook is the easiest way.
Here is a good Swift course which I just completed (having never coded before) - http://mbsy.co/bHJbV
Looks like it's a playground bug, you should submit a radar (bugreport.apple.com) I ran your example using the swift command line, and it worked fine. Nomenclature:playgrounds$ swift SwiftPlayground.playground/section-1.swift objtime changed The time is 2015-02-19 06:44:31 +0000 One thing you are going to need to do is to stop observing in your dealloc, or you will get crashes later. Another option, at least on Mac, might be to use bindings, and override the setters. EDIT: I just realized that the bind would only work for one to many, not many to one. 
Read the official book. The entire thing in the [Mac Developer Library](https://developer.apple.com/library/mac/documentation/Swift/Conceptual/Swift_Programming_Language/) or is available [in iBooks](https://itunes.apple.com/us/book/the-swift-programming-language/id881256329?mt=11).
You can't do KVO in playground nor bindings. A mater of runtime, not a bug. 
I suggest TreeHouse, which have some great tutorials for beginners, and Udemy. I would start with those two.
That works very well, thanks. But honestly as beginner, what is the difference between your last random generation code and the "standard" arc4random_uniform in let index = Int(arc4random_uniform(UInt32(idioms.count))) ? PS: The Github proj can't be opened without Cocoapod (which is in beta for Swift) and Xcode 6.1.1.
please stop spamming reddit. follow 9:1 rule
cool. What about update thing? my first question?
App Store updates can be differentials but it depends how well the update is packaged. I think the update from XCode 6.0 to 6.1 was basically as large as downloading it new, but the update from 6.1 to 6.1.1 was much smaller.
You need to use a custom image picker. Try this. https://github.com/chiunam/CTAssetsPickerController
There is no difference between the two. Just that you can reuse the randRange method above also in the future for any range you want. You can replace randRange with let randNum = Int(arc4random_uniform(UInt32(idioms.count))) Yes, the example project was created with Xcode 6.1.1. If you cannot open it, you can just take a look at the code of the view controller file.
25% off with code "mybrother" 
Thank you to anyone who answers this survey, it's very much appreciated!
Yeah, it's 'UIImage(named:)' in Swift - that's the one that does caching.
solid resource
To simplify what was said here, `numberOfRowsInComponent` is part of the function name. Swift functions, unlike C, have 'named' parameters that are actually part of the function name.
Yes, "component" is the parameter instance whose type is Int, but "numberOfRowsInComponent" is the *external name* for this parameter. This external name is part of the method name. I think Apple's documentation might be able to explain it in better detail. Check out [this article](https://developer.apple.com/library/mac/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID166), particularly the "External Parameter Names" section.
You need to define `func &lt;(lhs: CGPoint, rhs: CGPoint) -&gt; Bool` for that to work. Or you could compare the x &amp; y coordinates explicitly: if a.x &lt; b.x &amp;&amp; a.y &lt; b.y {…}
No idea without seeing any code. Post at least the code of your didSelectItemAtIndexPath method.
W/o seeing the code, it's hard to tell - perhaps you're (re)initializing the array inside didSeletItemAtIndex so it's always just the last value?
AVPlayer makes a layer in which you can stream a video to from AWS this allows a high level of manipulation of the layer to perform animations with such as the way facebook opens/closes video previews.
This is cool! How long did it take to make? Would you have any advice for someone learning swift such as myself?
Thanks Opelle! Total dev time was about 2 1/2 months but I started Speed Swiper not knowing anything about Swift...As far as advice goes, it depends on what you are trying to build but if it's SpriteKit games, [Code With Chris](https://www.youtube.com/user/CodeWithChris/videos) has a lot of great tutorials as well as [Skip Wilson](https://www.youtube.com/user/SkipCasts/videos). Just keep plugging at it and if you get stuck, this subreddit and StackOverflow are full on wonderful people willing to lend a hand! Never hurts to ask :)
Do you have a project to work on or do you need one?
What does `&lt;` even mean for points? Maybe you want to know which point is closer to the origin or to some other point? Maybe you want to compare using the manhattan distance? Maybe you want to compare the points the way \u\leftspin described (which is weird, since that is not symmetric, i.e. point1&lt;point2 and point2 &lt; point1 can both be true at the same time). Anyway, you need to define some metric to use to compare the points... 
Is there a different way to do it where when the hero dodges the circle the score increments by 1?
Are you trying to shuffle the array? If so, I recommend using the [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
Nice! How did you create the left/right/etc images and the app icon? 
Hey thanks! I used Pixelmator for the graphics
Either instantiate the second view controller in the first and set the object directly before running the segue, or use the prepareForSegue function in the first view controller to grab a reference of the second and then set it. Edit for more info: Let's say you have storyboard as a UIStoryboard that has your second vc let vc2 = storyboard.instantiateViewControllerWithIdentifier("VC2Identifier") vc2.imageToSet = image self.navigationController.pushViewController(vc2) Where you set VC2Identifier in IB I wouldn't suggest this way of doing it though since the segue will only happen when the closure is called.
I've published the analytics now: https://docs.google.com/forms/d/1jn6dWWnSEsphNGt1vQxFEnR2gx184_vSrTK1GBX2DD4/viewanalytics#start=publishanalytics I got 46 responses, and only one person drew an ASCII penis, success!
:)
A simple Google search.. http://stackoverflow.com/questions/26295799/sourcekitservice-crashed
How do I delete the derived data and cache?
If your primary ball doesn't move along the y-axis and the balls to dodge size is static, when the game starts calculate the y position where the balls to dodge would be past your primary ball: primaryBall.position.y + (primaryBall.size.height / 2.0) + (ballToDodge.size.height / 2.0) During the game loop you would check the y position of each of the balls to dodge. Once the balls y position is greater or equal to the position to reach, add to the score and set a flag on the ball saying it has been scored, or remove it from your array of balls to check (depending on how you are handling the balls animation)
Should I do this in the didBeginContact func?
My score increases when the primaryball hits the balltododge. How would I fix this?
Aw come on, man. Really? Lazy bastard. http://lmgtfy.com/?q=How+do+I+delete+the+derived+data+and+cache%3F
You should't have to mess around with derived data or anything anymore. What version of Xcode are you using? They supposedly fixed the SourceKit crashes in version 6.1 (...at least I think that was the one). I'm on 6.3 beta now and I haven't experienced a SourceKit crash in at least a couple versions. If you're using an older version, just update!
All right, I've edited it. This is what I have so far: import Darwin var arrayResults = [Int]() func coinFlipper(flips: Int) -&gt; String { for n in 1...flips { arrayResults.append(Int(arc4random_uniform(2))) } println(String(stringInterpolationSegment: arrayResults)) return(String(stringInterpolationSegment: arrayResults)) } coinFlipper(5) But now I'm getting these errors: swifttest.swift:100:17: error: extra argument 'stringInterpolationSegment' in call println(String(stringInterpolationSegment: arrayResults)) ^ ~~~~~~~~~~~~ swifttest.swift:101:16: error: extra argument 'stringInterpolationSegment' in call return(String(stringInterpolationSegment: arrayResults)) I keep removing parentheses for trial and error but nothing seems to be working...
There aren't any Swift/OSX books (yet). The Big Nerd Ranch Cocoa Class is in Swift if you've got money or are doing this stuff for your job. If you're already familiar with iOS / CocoaTouch, you should be able to get an existing Cocoa book (there are several) and make the mental translation. Like /u/MarsSpacehip says, there's a bit more subclassing (but some things, like view colors, can be affected via Core Animation / Layer API, so be sure to do some reasearch). Many of the patterns you know and love (target / action, delegation, data sources, the drawing model, etc) are very similar to desktop apps. 
try this: arrayNameGoesHere.append("1st") or: anArray += ["Moar", "Strings"] or: anArray.insert("This String", atIndex: 0) 
looks reasonable, where are you getting the crash?
http://imgur.com/XKFBD38 when i select the tabview that this page is associated with i get this error and it crashes. if i remove the viewcontrolle class from the storyboard that the view is associated with, the page appears but obviously not with the code. 
Just do it
Make sure your identifier is written properly and if so, check your profileCell and myReviewsCell are a subclass of UITableViewCell
 let positions = [ CGPointMake(self.frame.size width / 1.5, -70), CGPointMake(self.frame.size.width / 2, -70), CGPointMake(self.frame.size.width / 3.5, -70), ] let randomPositionIndex = Int(arc4random_uniform(UInt32(positions.count))) wall.position = positions[randomPositionIndex] An endless action that repeats the wall spawning sequence seems fine to me. Just give the action a key (e.g. runAction(endlessAction, withKey:"EndlessWallSpawnerAction")) so that you can cancel the action later. For example when the player pauses.
It depends on your desired UX. It can be jarring to have the screen suddenly change the moment you get hit. Can depend on the type of game and how fast paced it is, and personal preference, of course. You may want to show a dying animation, or pause the game with a "Game Over" label. If you want to just transition directly to your gameOverMenu in didBeginContact that's fine too. Just clean up your scene and call view.presentScene() with next scene. Is that not working?
I would expect that to work, but I am not an expert on SpriteKit. When you call runAction it doesn't run anything immediately. It just queues it up to run at the next update. So all 3 actions are installed at the same time, and then at the next update all 3 should run causing both nodes to rotate, and one of them to move. Since the durations are the same I'd expect them to be in sync. One rotates a frame ahead of the other? Are you sure it's behind or could it just be visual? Stop it in the debugger in the update callback and print out the rotation of each.
Yes it worked. I need help with one thing and that is how would I be able to pause my gameScene and when I touch the screen the user can play the game like in flappybird? 
Oh, duh! Thank you very much!
Here's a quick way to implement pause. Put an SKNode subclass (sprite, shape, label, doesn't matter) on your scene. In touchesBegan see if the touch is on that node. If so, you put up an SKLabel that says PAUSED and call self.view?.paused = true to pause the SKView. Also set a flag isPaused = true. Now in touchesBegan if isPaused is true, remove the PAUSED label and call self.view.paused = false.
Basically, you're asking for implicit casts. Apple decided to not use implicit casts pretty much anywhere in Swift, and I think there are pretty good reasons for that - most importantly, it gets harder to reason about types if they can be converted automatically at any point. Even in the cases where they did allow it (eg. String to NSString), Apple backpaddled in Swift 1.2.
Hey mauledkitten any progress on this? - I'm looking for a start point to implement an icmp in swift... and if you has anything that you could share, it would be nice!
That makes the reason more clear to me, thanks. 
One thing I do wish is that there was a way to explicitly cast to unrelated types, calling a constructor taking the original type. For instance, in working with JSON, I get a dictionary (`[String: AnyObject]`). It would be nice to be able to cast to a custom type (`dictionary as? MyJSONObject`), where it would call `init?(dictionary: [String: AnyObject])` on MyJSONObject, if it exists. I've currently defined a custom operator to mimic this, as the following: infix operator ~? { associativity none precedence 132 } func ~? &lt;T, U: JSONObjectConvertable&gt;(maybeJSON: T?, type: U.Type) -&gt; U? { if let jsonObject = maybeJSON as? JSONObject { return U(jsonObject: jsonObject) } else { return nil } } So I can call `dictionary ~? MyJSONObject.self`, which works alright. It would be nice to get this as an official feature, though.
A couple of potential options: * Encrypt your data yourself before sending * Deliver your message over https, i.e. SSL/TLS The latter would include something like the following (for an untrusted certificate): - (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace { return [protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]; } - (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge { if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]) if ([trustedHosts containsObject:challenge.protectionSpace.host]) [challenge.sender useCredential:[NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust] forAuthenticationChallenge:challenge]; [challenge.sender continueWithoutCredentialForAuthenticationChallenge:challenge]; } 
Currently Mac development is in the process to be more like iOS (Storyboards etc..). I don't think you should buy Books about Swift yet. (Just see all these changes in iOS 8.3 Beta)
Off the top of my head, I can think of a two reasons. 1) You want to control how the caching logic works. `imageNamed` is sort of a black box and if you really want to control when you want to release the texture, you can create your own cache to do so. 2) Dynamic SKTexture generation. You can manually create images with CGImage and then use that to create a SKTexture that can be used with a SKSpriteNode. There's also preloading and reusing the texture between scenes, but those two kind of also boil down to the first point. 
&gt; I was able to find a couple things about making a class or something but like I said I am extremely new to this stuff This may not be the answer you're hoping for, but you probably aren't quite ready for working on GUI apps. Learn the fundamentals of object-oriented programming, the language, and Cocoa APIs first, then start to expand out toward GUI applications.
I like to do this var cat = SKSprieNode() var scaryCat = SKSpriteNode(imageNamed:"scaryCat") var happyCat = SKSpriteNode(imageNamed:"happyCat") then when I'm tryna spawn the a cat i can change its texture by cat.texture = scaryCat.texture These textures are all PNG's that I create and put into a folder. You need to make your folders name have the .atlas extension for images that you'll be drawing a lot to increase ur performance. :) So something like "GameTest.atlas" for your folder name
You could also do: let cat = SKSpriteNode() let scaryCatTexture = SKTexture(imageNamed: "scaryCat") let happyCatTexture = SKTexture(imageNamed: "happyCat") Then if you want the cat to be scary: cat.texture = scaryCatTexture
You can't do that on iOS. On the Mac there's [NSStatusItem](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSStatusItem_Class/).
For construction new objects you're supposed to use constructors though (in your example, 'MyJSONObject(dictionary)'), which makes it clear that a new object is being constructed. Casts are for telling the type system stuff about a variable, not for actually changing objects (at least in Swift). They are definitely not a short hand for calling any kind of constructor. I don't mean to be rude, but I really hope they don't support the feature you want, because casts are a different concept from calling constructors - if you want to construct a MyJSONObject from a dictionary, use the constructor. About your code... is the cast to JSONObject necessary? Why not just require 'T' to be a 'JSONObject' (i.e. '&lt;T: JSONObject, U: JSONObjectConvertible&gt;')? Then again, instead of 'dictionary ~? MyJSONObject.self', is there a reason you can't (or don't want to) do 'dictionary.map { MyJSONObject($0) }'?
You might want to have a look at the presentationOptions property of your window and set the HideDock and HideMenuBar Bits: https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSApplication_Class/index.html#//apple_ref/c/tdef/NSApplicationPresentationOptions
Have you got some code to show us? Just start your second images x position 1 less than you do now. I'll assume you have something like: secondImage.x = firstImage.x + firstImage.width Instead maybe something like this. secondImage.x = firstImage.x + (firstImage.width -1) Does that make sense?
I remember that a few years ago, the Twitter app showed notifications in the status bar. Any idea how they did that?
I don't remember the Twitter app doing that, but I suppose I wasn't a heavy twitter user prior to iOS 7.
You mean [this](http://657b072aab060d50f8ce-d7abb53cb376b4947d77643d4b4a48d3.r79.cf1.rackcdn.com/30447_Twitter-Status-Bar-2.png)? It's basically just manipulating the status bar, or puts a view on top of it. You can obviously only do that while your app in the foreground. There are [a](https://github.com/jaydee3/JDStatusBarNotification) [couple](https://github.com/cezarywojcik/CWStatusBarNotification) [of](https://github.com/frankdilo/FDStatusBarNotifierView) third-party libraries for that sort of thing.
Do you have a local CocoaHeads, NSCoderNight, or an Xcoders? If so, check them out. They're often quite accommodating of newbies, and you might be able to find a mentor.
If you want to learn Swift, check out: https://itunes.apple.com/us/course/developing-ios-8-apps-swift/id961180099 If you need some help, feel free to contact me on twitter: @MichMich. (I can't promise I'll answer all your questions and requests ... ;))
Thanks so much! I'll definitely check it out! And thanks for the offer, I'll let you know if I get stuck somewhere :).
Crashlytics Flurry
What is this Google you speak of? 
Oh you know why. You were already setting shipCategory to 1. It was just shifted left zero times. I didn't see that it was being bit shifted instead of having default values. Did you set yourself as the contact delegate for the physicsWorld object?
Apple doesn't have tutorials? The day they announced Swift, they also released free iBooks detailing the language: https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11 https://itunes.apple.com/us/book/using-swift-cocoa-objective/id888894773?mt=11
Do you know *why* your numbers are being reset? Are new scenes being created once a player loses? There's not enough information to give you a proper answer, but one thing I would recommend is trying to understand what your code is doing right now and *why* things are behaving they way are right now. In programming, the things that happen are because of the way the code is written and it's more useful trying to understand what is going on rather than copy and pasting solutions into your project. Play around with your code! Make one increment by 2 and the other increment by 1, figure out what works and what doesn't. Try to get one number to not increment at all. Once you can do all these things, then you can piece together your solution.
Why does your app need a phone number?
I love how smooth your app is and the UI is beautiful and I'm happy to say your app as replaced YikYak on my phone although I have a few suggestions 1) in the beginning add a screen where the user has to agree to not bully and stuff 2) also in the begging explain how you get murmurs from other people and how you can view them (still a bit confused about this)
I'm down to learn with you. I don't have much time as well since I'm a full time student graduating next semester, but let me know how to get a hold of you. Also, let me know if you're willing to work on a couple side projects with me, I have a bunch of app ideas that I can give you for us to work on together. If you don't like any of my idea you can just let me know what you want to work on, that's fine for me too. I pm'd you my Skype and email info.
Make sure the geocodeStringAddress completion handler is returning any placemarks or if it's an empty array. Also, add the annotation pin to the map on the main thread.
I'm glad I could help! Hope you find your solution soon.
Most likely a custom transition between the stations list vc and the station vc (definitely separate view controllers). With custom transitions you have access to a lot of information needed to customize the subsequent view before transitioning in (position of table view cell in view, etc). Check out http://www.objc.io/issue-12/custom-container-view-controller-transitions.html. 
You have a few options when it comes to image assets. (I haven't use any videos in my products so far, I'm not sure about that part) You could simply import each asset and their retina version as you stated, that is indeed a way to do it. You could also, assuming this isn't a Spritekit game, use a vector PDF of your image assets and xcode will generate PNG images at the proper resolution. (http://martiancraft.com/blog/2014/09/vector-images-xcode6/) The third option is just using image assets large enough for a retina iPad and have them scale down. This isn't a desirable option as they tend to not scale very well on the smaller screens of the 4s/5/s. It's not that they'll be jaggy, but they may appear to be a little too large. Personally, I went through and made 1x,2x, and 3x versions of all of the art assets for my Spritekit game. However, if I could have used the vector pdf method, I think I would have. I think I would have been a major time saver. 
Unforunately, the particles generated by an emitter node are purely visual and aren't meant to be interactive. You can read about that [here](https://developer.apple.com/library/ios/documentation/SpriteKit/Reference/SKEmitterNode_Ref/index.html). You can try creating a SKSpriteNode directly to handle collisions.
Use `arc4random_uniform` to generate a random x position and set the y position to the top of your screen. Then you can use another random number along with an *SKAction* to change how fast the asteroid is suppose to move down the screen.
Perfect. Thanks for that. Off topic, but would you know how I could detect collisions without having my nodes be dynamic? 
http://www.raywenderlich.com/934/core-data-tutorial-for-ios-getting-started There are many many reasons for using core data... you can use NSPredicate to sort and filter, and it reads and writes faster, can store more, and stores safer. But the biggest problem is that people can change your NSUserdefaults from outside your app. 
To give a bit of context: `JSONObject` is simply a typealias of `[String: AnyObject]`. The reason for the cast to JSONObject is because I want to be able to do the following: struct Example: JSONObjectConvertable { let var1: Int let var2: SomeOtherJSONObjectConvertableType init?(jsonObject: JSONObject) { if let var1 = jsonObject["var1"] as? Int, var2 = jsonObject["var2"] ~? SomeOtherJSONObjectConvertableType.self { self.var1 = var1 self.var2 = var2 } else { return nil } } } Getting values from dictionaries returns an optional, which must be unwrapped to be used. As this is JSON, the dictionary can hold an Int, a Bool, a String – or an array or another dictionary (object). Furthermore, the `JSONObjectConvertable` initializer is failable, so that itself needs to be unwrapped. I *could* replace the `~?` operator with: if let var2JSONObject = jsonObject["var2"] as? JSONObject, // otherwise returns AnyObject? var2 = SomeOtherJSONObjectConvertableType(jsonObject: var2JSONObject) { } However, that hinders readability and results in much unnecessary duplication of code. It is, I suppose, a specific case of the Monad 'bind' operator (see [this](https://robots.thoughtbot.com/efficient-json-in-swift-with-functional-concepts-and-generics) for more info). If I required T to be a JSONObject, then I would have to write: if let var2 = jsonObject["var2"] as? JSONObject ~? SomeOtherJSONObjectConvertableType.self { } Dictionaries do not have a member named 'map'. You're thinking of arrays.
Ah I see, you just want to be able to pass in AnyObject because that's what you get from the dictionaries... I can understand that reasoning, it's kinda annoying to get untyped data "into" the type system. Also, I know that dictionaries don't have map (even though mine do through an extension, I don't really get why the don't have one); Optional does have map by default though, and that's the one I'm referring to. However, if the initializer is failable (which makes sense), you'd need a `flatMap`, which unfortunately isn't part of Swift by default, otherwise you'd get nested optionals. (Technically, you could do `var2 = (jsonObject["var2"] as? JSONObject).map { SomeOtherJSONObjectConvertableType(jsonObject: $0) } ?? nil`, but that last part looks really weird and is hard to read... With flatMap, I think `var2 = (jsonObject["var2"] as? JSONObject).flatMap { SomeOtherJSONObjectConvertableType(jsonObject: $0 } ` wouldn't be too bad though, don't you think?
&gt; may I suggest Core Data? Huge overkill for the case in question.
From general programming experience with arrays I would guess performance starts to rapidly decay when you get into 1000’s, depending on element size. Therefore in a program I wouldn’t have an issue storing a couple of hundred elements. This said I would probably start using a sqlite3 database or coredata, sooner rather than later if I were you.
People can change your CoreData stores from outside your app, too. Apple even provides a command-line tool **sqlite3** to make it easy (for the efficient CoreData store). The other formats are just plists, which you can edit with a text editor, just like NSUserDefaults (use **plutil** to convert binary plists). 
Amazing! Thanks so much :) Can you explain why this worked? 
I think what you should do is rethink your data structure for storing your information to make things easier in the future. It sounds like you should be using a dictionary with the name as key, and the value would be an array of strings that represent your description. var data = [String: [String]]() Then when you want to add descriptions about a person, you can check if the dictionary has a value for the key, and if it does, append the new description, but if not, we create a new array for it. var newDescription = "Something about Ken" if let descriptions = data["Ken"] { data["Ken"]!.append(newDescription) } else { data["Ken"] = [newDescription] } For your first table, you would use *data.keys* to display the list of names, and for your second table, you would use the string array from *data[name]* to display your descriptions.
It's because your *SecondViewController* is the current *UIViewController* that is displaying a view. When you are using the presentation methods, you need to work with the active UIViewController, not the *rootViewController*.
You shouldn't be editing a core data store with sqlite3 unless you _really_ know what you're doing. sqlite is a nice robust stand-alone database that core data happens to use as an implementation detail.
Use NSUserDefaults for transient stuff that you don't mind disappearing - the user might get annoyed that the font reverts to Times from Comic Sans, but it's not wiping out hours of their life with a document they created. NSUserDefaults is geared for small bits of data that have default values (perfect for preferences). If you've got legitimate user data you're creating and maintaining, use another mechanism - core data, NSCoding, plain old text files, etc.
I would reuse the same picker view and just update its data source. Then reload the picker to reflect the changes after the next text field is tapped.
Define feedCell's delegate in the feedCell swift file protocol FeedCellDelegate { //your delegate functions func tappedCommentButton(cell: FeedCell!) } Then define the delegate variable in the feedCell class: var cellDelegate: FeedCellDelegate? = nil Then set the delegate in your tableview method feedCell.cellDelegate = self Make sure you also inform your view controller that it conforms to the FeedCellDelegate protocol. Then in the FeedCell class call cellDelegate?.tappedCommentButton(self) when the button is tapped.
Yeah you will put the code there. UITableView delegates also conform to the UIScrollVew delegate protocol. You'll want to use the scrollViewDidScroll and scrollViewDidEndDecelerating methods to determine when to show hide the button.
Thankyou so much for the detailed walk through! You are a wizard!!
There's a trade-off between money and time. The more money you're willing to spend, the less time it will take to get up to speed. But you asked for free resources. There are free videos on iTunes and youtube, but you'll find the production values to be pretty low. Don't forget books. If you have a decent library system nearby, they should have some books available. Eventually, you're going to want to discuss problems with others. Check out stackoverflow and the raywenderlich.com forums for that. Also check to see if you have local ios or swift meetups. Good luck. Let us know how you're progressing.
Ah, I didn't realize that optionals have `map`; that's actually incredibly useful! I can probably replace some of my code using that, but I'd still like to keep the `~?` operator so that I can have consistent semantics between converting to Int, Bool, String, etc. and converting to objects or arrays of objects.
Great APP! I have a couple of questions. How long have you been coding and how long did it take for you to make this app? 
You’ll need to set the UITableView’s delegate in Interface Builder, or create a new IBOutlet for the table view and set the delegate programatically in viewDidLoad.
This is a pretty basic task. Simply change the *affectedByGravity* property of your skspritenode upon the user touching the screen to **false**. Then, increment the y position of the sprite while the user is still touching the screen, and stop incrementing when touchesEnd() (and re-enable the affectedByGravity) Hope this helps!
Ok. This is starting to make more sense. I want to know if I am on the right track. I have two class files: LearnContainerViewController (with container and button) which is connected to LearnTableViewController. In the Table View Controller, I have this protocol protocol didScroll { func scrollViewDidScroll(scrollView: UITableView) func scrollViewDidEndDecelerating(scrollView: UITableView) } I then have my above code in the View Controller. What would be the next step? Is this the correct way to define a protocol? I also declare this variable inside the Table View class var delegate:didScroll? I am not sure where to go from here
Hi. Thanks for your reply! The thing I'm unsure about is which method to use to increment the y position while the user touches the screen. How can I know when they are holding down, and when I do know, what is the correct way to increment Y? (methods like moveByY are for a specific amount of Y, and do not relate to whether or not user is holding down screen) Thank you
There are several methods called automatically when certain events occur. I believe they are touchesBegan and touchesEnded. in your game scene OVERRIDE these functions so that when these events occur you can do something. //called when user's touches Begin override func touchesBegan(touches: NSSet, withEvent event: UIEvent) { //touches is a set that contains UITouch objects } //called when user's touches End override func touchesEnded(touches: NSSet, withEvent event: UIEvent) { } Judging from your responses you have not implemented this successfully. What you want to do is upon the user touching the screen, disable gravity for the sprite. To achieve moving the sprite up and down while the user touches the screen, create a boolean variable. for example: var touchStart = false Then, inside your update() method, run a check for whether the touches began or not func update() { if(touchStart) { sprite.position.x++ } } Inside your touchesBegan() function, you would set the touchStart boolean to true. Then, inside your touchesEnded() function, you would set the touchStart boolean to false. Hope this helped :) 
I use Crashlytics in just about every app I create. It's easy and valuable for independent developers who don't have the resources to test on a large group of devices. It makes pinpointing rare crashes a cinch. Flurry is great if you're looking to log specific actions as well as time periods spent performing those actions and the data associated with them.
Great links, thank you. I will check them out.
Did you try just googling nsuserdefaults example? Not trying to be mean but I'm sure the first 10 pages of google results will be more helpful than what most can explain in a Reddit comment.
 class ViewController: UIViewController { var currentColor:UIColor = UIColor.redColor() @IBAction func changedColor(sender: UIButton) { if(currentColor == UIColor.redColor()){ self.view.backgroundColor = UIColor.yellowColor() currentColor = UIColor.yellowColor() }else{ self.view.backgroundColor = UIColor.redColor() currentColor = UIColor.redColor() } } override func viewDidLoad() { super.viewDidLoad() self.view.backgroundColor = currentColor // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } } So this is how I did it real quick and it works. Just control drag the button from your storyboard and make it an action and call the method changedColor. What I then do is init a current color variable to red then in viewDidLoad I set the view's background color to that, which is red. Then inside of changedColor I just do an if else to determine what the current value of the color is and set it to the opposite color! Hope that helps.
Ok I have override func scrollViewDidScroll(scrollView: UIScrollView) { delegate?.scrollViewDidScroll(self.tableView!) println("hello") } override func scrollViewDidEndDecelerating(scrollView: UIScrollView) { delegate?.scrollViewDidEndDecelerating(self.tableView!) } "hello" prints but the button does not hide. These are the functions in my view controller class LearnContainerViewController: UIViewController, didScroll{ @IBOutlet weak var backButton: UIButton! func scrollViewDidScroll(scrollView: UITableView) { backButton.hidden = true println("it worked!") } func scrollViewDidEndDecelerating(scrollView: UITableView) { backButton.hidden = false } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. } But it is not getting to that print statement "it worked!"
Hmm everything looks good. Double check to make sure the LearnTableViewController's delegate is set to the LearnContainerViewController. Since the delegate variable isn't an IBOutlet you'll have to set that in code. Or you can make it an IBOutlet and make the connection in interface builder.
Yeah so this is what is in the view controller class LearnContainerViewController: UIViewController, didScroll{ @IBOutlet weak var backButton: UIButton! func scrollViewDidScroll(scrollView: UITableView) { backButton.hidden = true println("it worked!") } func scrollViewDidEndDecelerating(scrollView: UITableView) { backButton.hidden = false } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. } And this is in the table view controller import UIKit protocol didScroll { func scrollViewDidScroll(scrollView: UITableView) func scrollViewDidEndDecelerating(scrollView: UITableView) } class LearnTableViewController: UITableViewController{ var delegate:didScroll? override func viewDidLoad() { } override func scrollViewDidScroll(scrollView: UIScrollView) { delegate?.scrollViewDidScroll(self.tableView!) println("hello") } override func scrollViewDidEndDecelerating(scrollView: UIScrollView) { delegate?.scrollViewDidEndDecelerating(self.tableView!) } The table view controller delegate is set to the view controller in this correct?
Add @IBOutlet weak var learnTable: LearnTableViewController! to your LearnContainerViewController and make the connection. Then add learnTable.delegate = self to the viewDidLoad() function of LearnContainerViewController
So make a connection from the table view of the table view controller to my container view controller? It won't allow me to make that connection. 
Constraints are absolutely necessary. It will allow proper adjustment between different sized screens. Size classes (new to XCode 6) encompass multiple screen sizes, so even if setting up size classes, you would still have issues. Constraints really aren't that bad, a bit of a learning curve but they just require some practice.
Hmm, I'd put out a different opinion. Since OP's already laying out components based on screen width and height, I don't think Auto Layout is necessary. The only run-time size change I can think of would be orientation changes, and without that, Auto Layout is not necessary. I think it's very useful to learn Auto Layout, but it isn't needed all the time.
Ok, I will delve into constraints, thank you! 
Posting your code would be nice :)
There's basically two costs to storing things in NSUserDefaults vs something like CoreData or SQLite: 1) Either all of it is in memory or none of it is (technically if you use -initWithSuiteName: you can manage that separately, but the normal case it's all or nothing). So if you have a bunch of irrelevant stuff in your preferences, it'll get loaded up alongside the tiny boolean you checked. 2) Similarly, it all gets updated at once. If you set that tiny boolean, the whole file is going to get saved out to disk again (though: it saves it to disk later, in a background program, so it won't necessarily slow your program down. Still not free though). With the tiny amount you're storing in it, none of this should matter for you. If you end up storing more though, these two places (memory usage, and time when setting new values) are where you'll pay the costs. Reading values from user defaults is almost always very fast, pretty much regardless of how much you store. (edit) One other random NSUserDefaults performance tip: setting a value inside a collection inside user defaults is more expensive than setting the same value directly in user defaults. Keeping things 'flat' like this helps.
Was a little too fast for me, I recommend the one of TeamTreeHouse for those who have no idea (as it was my case) and later on take this one.
Me too, have a set of about 50 words. OpenEars seems like overkill for my needs actually. There should be something way more basic built-in. 
Local voice recognition will usually require training unless you somehow get hold of a really good voice model. I can't remember the name off hand, but there's a recognition engine from a university written in C which is free to use. Should be easy to port to iOS. Nuance had a free-ish Silver level license you could try out. Needs network, of course. And it's probably in ObjC unless they've ported it recently to Swift. 
let addr = "192.168.1.2" let port = 80 var inp: NSInputStream? var out: NSOutputStream? @IBAction func connectButton(sender: UIButton){ NSStream.getStreamsToHostWithName(addr, port: port, inputStream: &amp;inp, outputStream: &amp;out) let inputStream = inp! let outputStream = out! inputStream.open() outputStream.open() var buffer: [UInt8] = [103, 101, 116] //"get" in ASCII outputStream.write(&amp;buffer, maxLength: buffer.count) let bufferSize = 1024 var inputBuffer = Array&lt;UInt8&gt;(count:bufferSize, repeatedValue: 0) let bytesRead = inputStream.read(&amp;inputBuffer, maxLength: bufferSize) //encode as string and print }
Sorry I couldn't just link to a repo, I'm required to maintain privacy on the majority of the project.
fixed it by putting the highscoreshow variable in the endofGameHighscoreLabel.text =String(highscoreshow)
Just create two edges with a width of 1. Place one on the left, and the other one on the right.
If you look at the scroll bar on the right, you'll see two red notches near the bottom. These are basically errors that cause the compiler to fail.
My edges wont go all the way out of the scene How would I posititon to go out of the scene? Here is my code: let leftEdge = SKSpriteNode(imageNamed: "leftEdge") leftEdge.setScale(1.0) leftEdge.zPosition = 15 leftEdge.physicsBody = SKPhysicsBody(rectangleOfSize: leftEdge.size) leftEdge.physicsBody?.dynamic = false leftEdge.position = CGPointMake(self.size.width / 20, self.size.height / 2) 
Sorry, I am new to the Internet.
TeamTreehouse has some excellent stuff on constraints. Well worth the 30bucks a month in my opinion. 
Definitely. Are you aware of any good alternatives? I've reached a standstill because I really don't know where to go from here.
neat and succinct but not an optimized variant of the algorithm. since you call filter twice you are running through the array a twice for every level of recursion. 
It matches the theory where one has a partition element and 2 recursive calls for elements that are lower / greater than the partition element, though. I wouldn't use this implementation if I had to write performance-critical software but it's a neat visualization. And I'm happy to see that some people still care about theoretical CS.
What did you guys have problems with? Getting the objective-c file into swift? 
I was able to get it running by bridging it with a header file, and the code runs without errors, but it doesn't actually do anything.
As I replied to someone else--your code isn't really functional. You pass in a mutable array and you call removeAtIndex which can only operate on a mutable array. That's not quite functional. 
Assuming you have imported the necessary files and have them connected [this](https://gist.github.com/allenjwong/b962972d64904d2217bc) just worked for me in the simulator and on a device. Returns the following to console. &gt;Pocketsphinx has detected speech. &gt;Pocketsphinx has detected a period of silence, concluding an utterance. &gt;The received hypothesis is HELLO REDDIT with a score of -3245 and an ID of 43 
Nice interface, there appears to be a bug disallowing me to enable the game center feature. If you choose not to enable game center the first time the app launches, it won't enable even when toggling the option in settings. I also have a question, does healthkit's data usually take that long to 'sync'? Took a whole minute for mine to load initially. I never worked with healthkit so I am just curious.
http://swiftdoc.org/func/partition/
You can find a list of the reasons why apply might reject an app in the link below. You can use it as a checklist and make sure that your app follows along with the requirements in the document. https://developer.apple.com/app-store/review/guidelines/#terms-conditions
Yes...? 
Did you have prior experience with objective-c? I'm just starting out and I have my feet wet with swift, but I feel like I should get some objective-c experience first. 
Focus on the details, and test everything. I had an update rejected because during the transition to sandboxing, I forgot to add the "print" right to my app. The app prints (just to comply with the standard AppleScript suite), but no one really prints from it. But... Print was in the File menu, and a warning would pop up that the app didn't have permission, and so it was (rightfully!) rejected. 
Thanks exactly what I was looking for!
How long is the review process?
http://appreviewtimes.com
Then why didn't you just ask for that?
You could try reduce. Something like this demo_array.reduce(0) { $0 + ($1 == 6 ? 1 : 0) } or filter and then count (which looks cleaner IMO) demo_array.filter { $0 == 6 }.count 
Woops, I misread your question. Sorry!
! means **not** or in the case the inverse. if !(x == 0) would mean if NOT x = 0 or in other words, if x is NOT zero.
Awesome, thanks for the responses guys.
You're telling me. It's just the submitting that's a pain though. The app itself is one code base with 17 targets. 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Null coalescing operator**](https://en.wikipedia.org/wiki/Null%20coalescing%20operator): [](#sfw) --- &gt; &gt;The __null coalescing operator__ (called the __Logical Defined-Or operator__ in [Perl](https://en.wikipedia.org/wiki/Perl), __Elvis-operator__ in [Groovy](https://en.wikipedia.org/wiki/Groovy_(programming_language\)) and [Kotlin](https://en.wikipedia.org/wiki/Kotlin_(programming_language\)) ) is a [binary operator](https://en.wikipedia.org/wiki/Binary_operator) that is part of the syntax for a basic [conditional expression](https://en.wikipedia.org/wiki/Conditional_(programming\)) in several [programming languages](https://en.wikipedia.org/wiki/Programming_language), including [C#](https://en.wikipedia.org/wiki/C_Sharp_(programming_language\)), [Perl](https://en.wikipedia.org/wiki/Perl) as of version 5.10, and [Swift](https://en.wikipedia.org/wiki/Swift_(programming_language\)). &gt; --- ^Interesting: [^?:](https://en.wikipedia.org/wiki/%3F:) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cp0i072) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cp0i072)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Most of that work could be automated with Python and xcode's command line tools. 
This might help http://codesmith.in/swift-guide-for-the-c-sharp-developer/ Microsoft just released a guide for swift devs who want to move to C#. You can use it otherwise and get a hang of swift based on your C# knowledge
Create your own program/app
How long did it take you to solve the exercises? 
Is this a white labeled app?
So, first off, you can probably find a coupon to get that course even cheaper.. I had bought it for $5 about a month ago, but that was a special promotion udemy was doing, I dunno if you'll be able to get it that cheap right now. Secondly, the course is pretty decent it takes the "learn by doing" method approach, and if you already have coding experience, especially with ios development, then it might be enough for you. The instructor often suggests to look up the documentation, which is solid advice anyway. I actually used [this course](https://www.udemy.com/ios8-and-swift-app-programming-crash-course/#/), I really liked it and it went more indepth than the other one. However, the only thing is that the instructor hasn't uploaded the rest of the sections it's advertising, but they're adding bit by bit every so often. And you get all future updates at no additional cost as well, this actually applies to most other courses too. With both courses, and probably others too, it even lets download their projects so you can run them, or even tweak them yourself, which is pretty cool. the thing with udemy is that you really ought to wait for a discount promotion, or search for a coupon, I wouldn't ever pay full price for any of the courses. And yes, you'll be able to watch the vids any time you want, if you look through the overview it'll say something like "lifetime guarantee". 
Look for thenewboston and YouTube, His tutorial are amazing. Some people don't like them, but you should give them a try.
Hey just wanted to mention that your limitation can be worked around with a required initializer. class Piece { // ... required init?(json: JSON) { // ... } } extension Piece: JSONConvertible { func toJSON() -&gt; JSON { // ... } static func fromJSON(json: JSON) -&gt; Self? { return self(json: json) } } required ensures that the initializer is implemented in all subclasses, and that you can call the initializer dynamically. Also worth noting the init can return nil.
Buy an older MacBook off of eBay, but switch out the old hard drive with a solid state drive.
If you want the best of both worlds in terms of usability, go with an ASUS S500CA. They go for about $350-$400 but they're worth every penny. It looks like a MacBook (sort of) and they're extremely easy to turn into a hackintosh. This'll allow you to run both Windows and OSX so you can dual boot and choose between both operating systems depending on what it is you want to do. If you want to use Xcode, just boot in Mavericks/Yosemite and it'll work great. If you want to play games or use windows-only apps, all you have to do is boot into Windows and you're there. Highly recommend it.
I haven't finished Rob Percival's course yet, but I am satisfied with the 50% I've completed so far. I bought the course when it was on discount for $13, I think. At that price, it was definitely worth it and I would recommend it for someone looking to learn by example.
I actually really like the http://bitfountain.io/ courses. Especially with the swift course, they do a magical job of balancing depth and speed, taking you from what something as basic as what a variable is to full and complex applications surprisingly efficiently. Just googled for a coupon and found this: https://stacksocial.com/sales/the-complete-ios-8-developers-course-w-swift-pre-release
Another vote for bitfountain - it was really well done. I went from zero iOS experience to accepted in App Store in 4 weeks.
As someone who's spent the better part of my time going through this with Swiftz and the Basis I share your frustrations. Monads wouldn't just simplify implementations, they'd *reduce* them. Being able to quantify over any generic `m a` means it only takes a few specializations of primitives (in the case of Haskell, bind and return) and you get access to a wealth of operations and language support. The same thing in Swift is accomplished by manually writing out instance after instance. You can eke out the shadow of Monads this way, but I often wonder why I even tried to express them in the first place. There's nothing to be gained by having a "generic" interface given the current state of Swift. And while the operations may be clean and useful writing them out over and over again does nobody any good.
It definitely carries over, Ray Wenderlich has a tutorial on OSX, but it's not too complex
Is there also a ressource about how to remove iAds (especially after IAP)?
Not really. Some models can, but often have driver (especially graphics) issues. 
Force Quit Xcode -.-
ok thanks!
oh awesome! These look great. thanks
cool. I was doing treehouse for a little while back when it was teaching objective C, but I stopped to learn more web development. They are a resource I've kept in mind, though. thank you. 
cool. this will be great to follow
What can let do apart from assign constants?
That's me. not much experience, at all. so thanks
I've never heard anyone say Swift is supposed to be concise. Swift is intended to be safe with high performance.
Just because one particular thing is less concise it does not mean that everything is. Compare the swift closure syntax versus the [block syntax](http://fuckingblocksyntax.com) Also in this particular example you forgot that the Swift code does more that the Objective-C code: - It ensures that you do not modify the midX, midY and position _constants_. - It ensures that you actually know what you are doing with types, because implicit coercion can be a source of problems. To make this code more concise you could actually write a floor function that works on arbitrary floating point types. Maybe it will be in the next version of swift?
Pass by value types (structs and enums), and immutability. It sounds small, but once you start trying to crack down on mutable reference types, it forces quite a few changes in how you structure and think about code.
I believe he's referring to `if let` optional unwrapping, which is absolutely amazing in 1.2.
Yes, but also making values constants provides one more way for the compiler to help you verify your code. Note that you can assign the value only once but in 1.2, you can use an 'if' statement to decide the value. 
Why didn't you use the CGFloat floor()? Keep everything in CGFloat. let bounds = CGRect(x: 0, y: 0, width: 200, height: 200) let midX = floor(CGRectGetMidX(bounds)) let midY = floor(CGRectGetMidY(bounds)) let position = CGPointMake(midX, midY) I believe Swift now wins.
 let midX = floor(CGRectGetMidX(vista.bounds)) let midY = floor(CGRectGetMidY(vista.bounds)) let position = CGPointMake(midX, midY) And suddenly, Swift wrote the code with only 130 characters. 
That too. I always try to make use `let` unless I absolutely have to use `var`. It's much safer that way.
Type casting is a way to check the type of an instance, and/or to treat that instance as if it is a different superclass or subclass from somewhere else in its own class hierarchy. Type casting in Swift is implemented with the is and as operators. These two operators provide a simple and expressive way to check the type of a value or cast a value to a different type. Checkout: https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html
In Swift, you have the "optional" type. Which basically means, that a type, e.g. Int, can have a nil value (written as "Int?"). By "unwrapping", you check whether that value is nil or not, using: if let unwrappedInt = myInt { /* do something with unwrappedInt, which we know is not nil */ }.
- Step 1: Forget that you know Java - Step 2: Learn to program in Swift If you continue to try to "port a Java program to Swift" you will continue to be frustrated. This is like translating English sentences word-for-word into a different language. You will have a hard time. The key to being a native speaker is to learn to speak natively. Seriously, it's easier if you concentrate on "being a blank slate" and learning from scratch as opposed to trying to program in Swift as you would in Java. And, yes, functions don't have to exist earlier in the code for you to access them. It may be a restriction in Playground. And, yes, I believe that Playground is constantly compiling to give the real-time output. That's not the case when you actually develop classes in Xcode.
Unless it's changed since I was working with XCode, compiling is free and always has been, it's only iTunes that requires payment.
This is such bad advice. Seriously, if you know any other computer language, you've got a great head start. There's nothing wrong with asking, "I do this in Java, how does it work in Swift?" The analogy of learning another human language doesn't hold. Anyway, someone has already addressed your questions. You should feel comfortable asking specific questions here or on StackOverFlow. 
Very good point, thanks! I don't like that it has to be added to the main class definition, though. I updated the post with your comment: http://narf.pl/posts/swift-json
THanks!
Where are you stuck? Do you have an image file, or are unable to make a web connection, or are unable to post data?
I didn't say, "forget to think like a programmer."
I don't see a reason why it wouldn't work. But I've never done worked with Sprite Kit so I can't say for certain. 
Your arrays contain elements of different types so you can't use them interchangeably. You have to cast everything from *myarray* to *Any*. mycontrol.items = myarray.map { $0 as Any }
&gt; Can I write it in Xcode and compile it without a developer account or do I need to pay for one before I can even compile? Yes. You can test via the iPhone/iPad simulator on your Mac, but you *might* need a developer account to render the app on your iPhone/iPad for testing. Developing for iOS can be counter-intuitive at times. Tables thew me for a loop for a while. I know this sounds obvious, but it would really help if you had someone to lay out a roadmap to follow. As far as online resources, look for Swift tutorials. There are a bunch out now. I'd steer away from Objective-C tutorials being that you don't need to anymore and learning Objective-C is a bear unto itself and that with Swift will have your head swimming! Also, I strongly suggest avoiding a bunch of 3rd-parth GitHub framworks that people will tell you to use. Assuming that your app is basic (being that you are new to Swift, I assume you wouldn't take on an advanced project), you won't need them and they may make things more complex. I've deployed 4 (1 free, 3 paid) apps to the store without needing any 3rd-party frameworks. They aren't complex but solve real problems for my customers.
Thanks, that seemed to work! However, it seems like it should not be needed unless I'm not understanding exactly what purpose Any / AnyObject / AnyClass are really supposed to be used for. In the example above ( and in my actual project ), an array passed in would always contain *all* of the same type of objects. In the sample, it would only contain TestModels. However a different screen could use the GenericControl and set the items to an array comprised of only OtherModels, which is why I thought to declare items as an array of [Any] ( favoring value-based structs for models over classes ). The extra step of needing to remap to a generic type that should cover the specific types seems like it shouldn't be required.
It's highly advantageous to practice idiomatic programming and Swift carries a number of idioms that were only *just* introduced in a lightweight manner into Java. It's quite reasonable for less advanced Java programmers to be feeling very out of their world in Swift. It's not like you don't get it both ways. You still have the advantage of programming experience even if you have to take time to learn the idioms of the new environment.
I'm a long term advanced Java programmer and have not had any troubles with Swift. But then again, Java is not the only language I know or have used so I'm sure that helps. The worst thing a programmer can do is stay focused on a single language. It warps your mind in so many negative ways. Learn a new language every few months. I assure you, you'll never run out of languages to learn, and everything you learn will add to your overall skill level.
&gt; EDIT: also it should be noted that Java is really a good language. I only now realize that from trying to code in some other languages. Haha, yeah, Java programmers have no clue how good they have it, really, in terms of the whole development ecosystem. Nothing beats Java. It surely has its weird parts, warts, and anachronisms, but, it's so easy to write powerful high performance software that is very safe in a very short time period thanks to the realities of the whole Java programming ecosystem. Hopefully the safety aspects of Swift will help bring some of that advantage to the iOS/OS X world.
CGFloat already has floor, etc… functions that can be used. Also, you could write a CGRect extension to get the mid-point of a rect.
I was surprised when I saw that it was Microsoft that made it.
Thanks looks good. I will look into it!
dont forget to share the video, and subscribe to my channel :D 
Very professional and Clear. Thank you very Much. I couldn't figure out what is the reason for AnyObject but now I have a better understanding of typeCasting. 
Yeah, `id` is the Objective-C equivalent to `AnyObject` if you're familiar with that language. I never really got what that stuff was all about when I was first learning Obj-C, but once you start digging into the iOS APIs and learning how to put together apps, it becomes clearer. You've got a bunch of generic pre-made methods, which you implement in your own projects, and many of which get called externally, without you having to do anything. Those methods cannot be pre-made with knowledge of your specific app, so they have to be as generic as possible. That's where `AnyObject` (or `id` in the case of Obj-C) really shines. The method returns an `AnyObject` and you just cast it into the more specific thing that you need in that situation.
I suggest you try to wrap all the 4 corner image views in another UIView. This one doesn't need to have any visible properties at all. It's just a container for your corners. Now you can lay-out the corners in their (invisible) box view. Forward the pan translation from the corner objects to their superview. Now only the corners react to the gesture while the whole box moves. You could alternatively try to use Auto Layout constraints to position the cornders relatively to one another and see what happens. I favor the box solution.
Could you please share a link to more basic information on monetizing with iAds that you found useful? 
Video is basically the worst communication mechanism for programming topics unless your goal is to make every 60 seconds worth of reading take 5 minutes to receive.
Thanks for posting these, seems like a good resource. In some of the videos you refer to a project file but I can't seem to find any download links. Would you mind posting those or pointing me in the right direction?
oh yeah sorry I forgot, to upload the project files I have something to do now but as soon as I finish I will upload them.
Wut... I don't even...
Is it web scale? You should use MongoDB because it scales right up.
&gt; I am a very young entrepreneur I don't have any talent, training, experience or money. &gt; and I have several problems with the technology of today. Its slow, buggy, and the companies don't care about the user. I obviously care by the way I refer to them as users. I'm also not very good at grammar or forming coherent sentences. &gt; I need programmers and designers. Who will work for nothing, since that's what I have. &gt; I want to revolutionize what the tech world is. This is a get rich quick scheme. &gt; Please help me out Do the work for me, suckers.
Read [The Basics from The Swift Programming Language](https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html). Optionals are a major, important part of the Swift language and must be understood to use it properly.
Smart. :D But I'm afraid my question is not clear. In your solution corners will move as one object. One big rectangle. But what I need is to change this rectangle's size. When one of my corners is moved closer to the center of the screen, every other corners got to move closer to the center of the screen as well.
hello, you can now find the link to the project files in any videos description.
I'm on my phone so this is going to be short. GUI logic should be implemented in the viewController, internal model logic should be implemented in the model. The model should expose public APIs that will be called by the viewController, so the viewController acts as a middle layer between the model and views. Check out Apple articles on MVC for nice diagrams. https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/MVC.html
This main issue is you're trying to use access a property's value to assign it to another property's *default* value. When you assign default values to a class' property, it happens before the class is fully initialized. There's a whole [documentation page](https://developer.apple.com/library/mac/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html#//apple_ref/doc/uid/TP40014097-CH18-ID203) that talks about this in detail. The equivalent of your error would be something like this: class RandomClass { var someProperty = 10 var anotherProperty = someProperty + 10 } It's just that the Swift error message isn't really helpful because in the example above, it'll tell you that *RandomClass* doesn't haven't a member named 'someProperty' even though it was the first property defined. Note that you can do something like this: class RandomClass { var someProperty = 10 var anotherProperty: Int init() { anotherProperty = someProperty + 4 } } 
Don't use *NSUserDefaults* to pass variables around. You can set the value of the FaceUp variable (please name variables starting with non-capital letters, only classes should start off with a capital) after you create your scene but before you present it.
The issue though is that I am trying to load the data through the viewDidLoad(), and even if I call reloadData() at the end of that, it doesn't work. Do I need to move the loading of the data to somewhere else?
You can call reloadData any time your data that your table changes updates. So for your case, after the call to the server is finished and your dataSource is ready, you can call reloadData on the table. 
Worked like a charm. Thanks so much!
As a follow up, here's a version that gets around the limitations using an UnsafePointer to perform the construction from UIntMax... func integerWithBytes&lt;T: IntegerType&gt;(bytes:[UInt8]) -&gt; T? { if (bytes.count &lt; sizeof(T)) { return nil } var i:UIntMax = 0 for (var j = 0; j &lt; sizeof(T); j++) { i = i | (UIntMax(bytes[j]) &lt;&lt; UIntMax(j * 8)) } return withUnsafePointer(&amp;i) { ip -&gt; T in return UnsafePointer&lt;T&gt;(ip).memory } } Of course, at that point, why not simply reinterpret the array buffer directly... func integerWithBytes&lt;T: IntegerType&gt;(bytes:[UInt8]) -&gt; T? { if (bytes.count &lt; sizeof(T)) { return nil } return bytes.withUnsafeBufferPointer() { bp -&gt; T in return UnsafePointer&lt;T&gt;(bp.baseAddress).memory } } 
Each to their own. 
Are you wanting other objects to be able to pass through the top and bottom of your edgeLoop? Some clarification would be good.
8GB is a good minimum for dev work these days. 16GB if you can swing it.
That's what I love about this community! Sending PM in a bit. I'll spread the word about your game!
Any that can be parallellized. Having access to more cores makes a huge difference.
Looks great!
Love it. Great work! Does it speed up the further you go? I wanna see different locales (saloon, ok corral, train stop). 
It doesn't matter if you are building a game in Sprite kit or building an app in "normal" xcode. You can still use game center, if that is what you are looking for. When you upload your app on iTunes connect you have to enable game center and create leaderboards and achievements. Create some checker when for example an user tapped a button 10 times and send a request to add it to the user's achievements in game center. I build an regular app that has game center enabled. I found some good stuff on the subject on Raywenderlich.com. Check it out :) or just Google game center integration or something :)
That didnt work.
Thanks for posting the source code too! This will help a lot. 
Hi SillierCarcass5 - I'm having a somewhat similar issue, though I am using reloadData... In my case I have built a timeline so that when I submit/choose a picture in the screen before, it is supposed to display in the timeline. Maybe you could help me out? I wrote a stackoverflow post about it, here is the link for more details: http://stackoverflow.com/questions/28794041/selected-images-not-displaying-in-order/28836392#28836392 Would really appreciate any help!
I have one other question im trying to add the highScore in the setInitialText but when I add this, the highscoreLabel I get an error saying unresolved identifier. I set it as a var in my GameScene. How would I fix this? tweetSheet.setInitialText("I scored \ (highscorescoreLabel.text) 
I'm using a 2008 MacBook, and it's just fine. Your setup should be a breeze (the RAM upgrade should be more than enough, maybe an SSD. 
You're being too generous. Honda Civic is much better than XCode.
Yes, but normally you'd use something like a UIPageViewController to manage separate pages, each a UITextView.
Thanks! I'm going to go for the 16gb to be on the safe side.
I like to see the source files as well if you don't mind. I've been developing for iOS for almost 2 years now, and Swift for a few months now. I wanted to get into game development and was thinking about using Sprite Kit.
I think you're asking for a way to calculate the distance between two points, so that you can iterate over all the taxi ranks to find the nearest one. In this case I found [this](http://www.movable-type.co.uk/scripts/latlong.html) page to be a very good resource. For dialing numbers, I found [this](http://stackoverflow.com/questions/4929717/make-a-phone-call-programmatically) StackOverflow thread by googling. In swift you would do UIApplication.sharedApplication().openURL(NSURL(string: "tel://0123456789")!) or with "telprompt" instead of "tel" If you got anymore problems I'd love to help 
Thank you so much! I've been getting the same advice to create a sheep class. I'll get back to you and let you know how it goes. :) 
Sorry, quick question. I know in Objective-C, classes were created through different files, (.m, .h). But in swift, it's like..all inclusive. So I would create the sheep class outside class GameScene: SKScene {} ( where all the gameplay code is) so that I could access sheep class's properties within class GameScene, right? I have a bunch of functions referencing sheep, but if it's now its own class, there's some things I would have to change. For example: In my spawn sheep function (which is inside class GameScene), I would replace: let sheep = SKSpriteNode(imageNamed: "sheep") with var newSheep = SheepNode() Does this all look ok? I just want to be sure I get the concept. Thank you!
You can create a new file for your sheep class so that there is some sort of separation from your scene. Make sure that your new Sheep class is a subclass of SKSpriteNode. That way, your sheep class has ALL the properties of a SKSpriteNode as well as all the additions you put in your sheep class. After that, you can just replace all your references to SKSpriteNode for your sheeps to SheepNode. If your old code is: let sheep = SKSpriteNode(imageNamed: "sheep") Your new code would be: let sheep = SheepNode(imageNamed: "sheep") Remember that your SheepNodes are still SKSpriteNodes, so anything you can do with SKSpriteNodes, you can do with SheepNodes.
This thread has been linked to from another place on reddit. - [/r/iosdev] [X-Post from r/Swift about my new Cocoapod, KGFloatingDrawer](http://np.reddit.com/r/iosdev/comments/2xyzzg/xpost_from_rswift_about_my_new_cocoapod/) ^Please ^follow ^the ^rules ^of ^reddit ^and ^avoid ^voting ^or ^commenting ^in ^linked ^threads. ^\([Info](/r/TotesMessenger/wiki/) ^| ^[Contact](/message/compose/?to=\/r\/TotesMessenger))
Great work for one night, I'm guessing you've coded before to pick it up that quick! How much did you pay for the artwork? 
I think it's working now..but I honestly can't tell if each sheep holds its own value because now the collision part isn't working for some reason. inside my func checkCollisions(), I have: var hitSheep: [SheepNode] = [] enumerateChildNodesWithName("sheep") { node, _ in let sheep = node as SheepNode if CGRectIntersectsRect(sheep.frame, self.sandman.frame) { if sheep.sheepValue == self.equation { hitSheep.append(sheep)}} This was supposed to be the easy part, but when my player sprite (sandman) intersects with a sheep with the right value, the sheep doesn't get 'hit.' This boggles my mind, but you're suggestions have helped immensely. If you're still interested in helping me figure this out, I can send you my git-repo of this project. I'm looking over my code to see what else I could've missed. Thank you so much!
I volunteer as an artist. My first game [Zombie Critters] (https://itunes.apple.com/us/app/zombie-critters/id908548006?mt=8) I'm currently trying to code my own things in Swift for my thesis project. Kinda difficult for me though, since I'm not the strongest coder.
The tutorials on [raywenderlich.com](http://www.raywenderlich.com) are excellent. The video blogposts are behind a paywall, but the text-based tutorials are free (and to be completely honest, I actually find text tutorials better in the first place, as you can only get so comprehensive in a video before it becomes bloated). They also have several amazing tutorial books available in their store. The "iOS Apprentice" series is the one they recommend for beginners, and all the books can be obtained as PDFs. Going through those materials alongside the official Swift language guide from Apple (available for free via iBooks) would be a great way to learn the language and the iOS APIs. An added benefit is that the Wenderlich tutorials are updated for free as new major versions of XCode come out and Apple issues code-breaking changes to Swift. The Stanford course recommended by others in this thread is probably a great resource, but it's inevitably going to suffer from obsolescence in areas, as Swift is a very young language and meaningful changes will be/are occurring.
To be honest I had practically zero experience. I did some small stuff using AS3 long ago. As for the artwork - I didn't pay anything, it was a fun project for us both.
Thanks, It's superjordan@protonmail.ch
Excellent work then for just starting out. I've just started too, you obviously have more of a logical mindset than me lol. I'm going through just trying to recreate games that are all ready out, so done the flappy bird game currently making a zombie runner game. It's defo an interest for me and something I want to continue, just need to step it up and try retain what I'm taking in. Craig
Highly recommend downloading the latest here: https://developer.apple.com/xcode/downloads/ Xcode Beta 6.3 beta 2
Nothing you can do. Source kit is just really unstable. Apparently this is being improved in the next update. We know Apple uses Xcode for development. Could you imagine how the guy that caused this feels right now. All the glares...
Yes, sorry. There is nothing anyone can do. It happens even in the latest beta. 
I haven't had a SourceKit Service crash at all since I upgraded to beta 2. It was still present in beta 1. 
ha ha you are very right... your reply, gave me chuckle. hope they fix it :)
thank you, I will download and try :)
fixed
I like it, thanks for sharing. 
That does indeed work.
Is this a SpriteKit app? If so, you should use a transition - this completely removes the old scene from memory. If it's not a SpriteKit app, then apologies for wasting your time.
You get that error because you're trying to interpolate a variable in the string that does not exists outside the GameScene object. You'll need to use the [postNotificationName function overload with the `userInfo userInfo: [NSObject : AnyObject]?` parameter](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSNotificationCenter_Class/#//apple_ref/occ/instm/NSNotificationCenter/postNotificationName:object:userInfo:), pack the highscore there with a dictionary literal with the userData argument, it might end up looking like something like this: `postNotificationName("Twitter", object: nil, userData: ["scoreText": highscoreLabel.text])`, then when you receive the notification function you can get it from the NSNotification object by calling: if let data = notification.userData { let score = notification.userData["scoreText"]; tweetSheet.setInitialText("I scored \(score) yeeey"); }
yes it is a spritekit app. I already did some tests and came to the conclusion that when I call the following code in the update function, this function still runs for sometimes let transition = SKTransition.revealWithDirection(SKTransitionDirection.Down, duration: 1.0) let scene = EditMaps(size: aCena.scene!.size) scene.scaleMode = SKSceneScaleMode.AspectFill aCena.scene?.view!.presentScene(scene, transition: transition)
But you can't reference self in those closures
You might find this variation a little cleaner // before let started = NSDate() // after let interval = NSDate().timeIntervalSinceDate(started)
None particularly, I had a reason for that when I started the project (something to do with isKindOfClass to avoid generics and free Equatable protocols), but they became no longer needed as I refactored things, so I actually just forgot to remove them in the end, and they serve no purpose now. I'll have them removed on my next commits. edit: Yeah removing the NSObject superclass from some classes resulted in faster performance and way less 'hickups' of framerate, I'm guessing NSObject brings a lot of the dynamic dispatching nature of Objective-C which slows down things considerably.
&gt;it finds a nil value What finds a nil for what, exactly?
1) Why don't you set the background color inside "cellForRowAtIndexPath" method? 2) In your "willDisplayCell" method you forgot to dequeue the cell 
First: you should take two bodies (bodyA and bodyB) out of **contact** parameter and then decide what to do, etc.
how long did it take you ?
Cool! :) I need do something for motivating myself to the AppStore too. Good luck for the next time buddy! :)
The AddressBook framework is a scary beast, to be honest. It's a C API for the most part and it requires doing all that crazy rigmarole with unretained values, etc. I'd recommend, in the long run, to use an existing 3rd party AddressBook wrapper. It'll save you a lot of headaches and hassle! [This one looks promising!](https://github.com/SocialbitGmbH/SwiftAddressBook/)
Thanks for the tip. I'll give it a shot!
You can't just check the auto layout checkbox and expect everything to magically be configured for you. You still have to add constraints between all the views on the screen to create the layout rules which AutoLayout can then use to position your UI elements correctly for different screen sizes. Just checking the box means, "yes, I want to use AutoLayout", but there's a lot of work left to be done. 
Tell us how you are invoking the sound, and we'll be much better equipped to help.
This is really cool. Thanks for sharing!
I can't explain how to use AutoLayout in a reddit reply. I'd suggest watching the WWDC videos on the subject or finding a tutorial somewhere online.
Thats fine as long as its a UIViewController subclass. 
SourceKit crashing isn't a deal breaker. It crashes on me all the time and I usually just keep working. Sometimes I will reopen the project, but it's usually too much of a pain to do that every time it crashes. Now if you mean the compiler is crashing when you try to build the code, I've seen that happen too. In that case you should post the error message from the build log.
Thank you for reply, but I don't understand what you mean. Any example please?
Help with what? What is your question?
That's weird, at this point I just don't know what may be wrong, sorry.
'Int?' is shorthand (compiler folks call it "syntax sugar", since it makes programming sweeter, but has no nutritional (semantic) value) for Optional&lt;Int&gt;. Optional&lt;Int&gt; is just a Swift enum with two cases. It looks approximately like this: enum Optional&lt;T&gt; { case None case Some(T) } So the ! operator checks which case of the enum is present, and either crashes (if it's None) or returns the thing contained inside (if it's Some). You could imagine implementing it like this: func &lt;T&gt;!(argument:Optional&lt;T&gt;) -&gt; T { switch argument { case .Some(let value): return value default: fatalError() } }
so far I'm using the following: ///////////////////////////////////////// var bgMusicURL = NSURL(fileURLWithPath: NSBundle.mainBundle().pathForResource("file-name", ofType: "mp3")!) musicAudioPlayer = AVAudioPlayer(contentsOfURL: bgMusicURL, error: &amp;error) musicAudioPlayer.numberOfLoops = -1 musicAudioPlayer.volume = 1 musicAudioPlayer.play() ////////////////////////////////////////// And it is playing the music and looping it the way it's supposed to. This is my first attempt at building an iOS app, so I just don't know the convention to fade out the audio. any help is much appreciated. :) 
Text tutorial, How so?
Yeah. Start simple, try new stuff and eventually you come up with an idea :) 
The primary purpose of an enum is to make finite sets for the sake of reaching completeness when writing algorithms across them. If you look at a number type like int, you can think of it as representing one selection out of a set of 4 billion or whatever, depending on scale. That's pretty insane when you only have 3 states you care about. So an enum gives you a way to natively invent symbols to represent the possibilities in a set of states or values that you have full control over. Then with things like Swift enums you get to expand on that a little with associated values and the like, but, the core idea remains the same. A variable that is optional can have two states, and in the one state there is a value which you (probably) care about.
Okay. So what you could do is setup an NSTimer that fires many times a second to create a smooth fade. Each time that timer fires you would decrease the volume by a small amount until it is 0, and then you'd invalidate the timer and your volume is now faded out. Good luck!
Yeah I noticed I use self a lot on get/set-like methods and constructors, this is probably baggage I brought from Java. And thanks for the tip on the newlines, I wasn't aware of that!
&gt; dispatch_after will only fire once. Thats why I suggested using a timer that will be called on intervals. You don't really need to be using GCD at all to do what you want here. 
Thanks for the perspective. It's easier to learn a language when you understand what its little bits are actually for.
&gt; delegate.didFinishAddingHelper(self) // here Apologies, it finds nil here, because I didn't set a value. I got some advice on SE on how/where to set the value, but (of course) that begets another error. http://stackoverflow.com/questions/28889416/swift-delegate-and-optional/28889904#28889904 
Pros (beats existing versions of game as well): - Lovely interface and design - Original (at least I think it is) and catchy name - The AI (haven't tried it but sounds good) Cons - A tic tac toe game (with no online multiplayer) that is paid. lol It may not be original (I also created the same a few days ago as part of learning the language), but you have some good plus points that put you above the existing ones. To use a classic example - the iPod wasn't the first music player. Certainly the best though, because of the several plus points it had over the rest. Edit: If I may ask, how long did it take you program the game, and AI, and design (did you design the squares and circles or programmatically create them? 
Have a gander at [this](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextFieldDelegate_Protocol/index.html)
This isn't perfect, I admit that. That's because it's a workaround; if you absolutely must be able to use optional methods in a protocol without the `@objc` attribute, you can use this and get a decent approximation. If you're only using classes, you can further use this as a sort of abstract class – providing a default implementation that's simply `nil`. In any classes inherited from that base class, you would only have to implement the method if you wanted it's functionality; otherwise it would inherit the `nil` default from the "abstract" base class. I don't think the idea is useless, simply a bit niche. I doubt I'll personally need to use it, but there may be someone that absolutely *needs* to use a feature similar to `@optional` in a pure-Swift protocol that this may help. It certainly isn't a perfect replacement, but it's better than nothing at all. Presumably, Swift will eventually support optional methods in pure-Swift protocols, but that may be a while off. EDIT: An example of the 'abstract class' idea: class ExampleAbstractClass { var example: ((string: String) -&gt; String)? { return nil } } // implements the 'optional' method class Example4: ExampleAbstractClass { override var example: ((string: String) -&gt; String)? { return { (string) in return string + " Example" } } } // does not implement the 'optional' method class Example5: ExampleAbstractClass { } Unfortunately, this only works with classes, not structs. It's still useful, I think.
[NSTask](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSTask_Class/index.html) is what you want 
You might have to go old school and use unix expect command
figured out why, some kind soul on facebook group ran my project and told me error line numbers. here's the mistake I did. I have a class `Tweet` and my instance is `tweet`: let tweet = tweet() this was my mistake. as soon as I fixed the above, xcode stopped crashing and I was able to figure out all. 
agreed. interface is just too good. &gt; If I may ask, how long did it take you program the game, and AI, and design (did you design the squares and circles or programmatically create them? even I would be interested to know this :)
How's that going for you? Do you do the exericses for both big nerd ranch and Stanford? Thanks for the link.
So yes, there are some limitations there, but, it's not as hopeless as static lets. Try this example and adjust to taste: https://gist.github.com/ztj/521965ac7c2988f97029 Basically we're caching a runtime association but it's fairly convenient to use, calling .URL() instead of .rawValue. Feel free to rename things as preferred, of course. Edit: grammar
&gt; http://shrikar.com/blog/2014/12/31/ios-app-design-using-xcode-6-and-interface-builder-yik-yak-clone-part-1/ not really a good tutorial for beginner (or for OP). he will be lost at many points. Basically that tutorial is do this and this, just copy what I am doing and it will work.
Couldn't you use a computed property instead of a function? i.e.: var URL: NSURL? { var url: NSURL? = Region._regionURLCache[self.rawValue] if (url == nil) { url = NSURL(string: self.rawValue) Region._regionURLCache[self.rawValue] = url } return url } I do believe that the code has an error, though: `url` is an optional (`NSURL?`), but `_regionURLCache` is of type `[String: NSURL]`. It also doesn't quite fit my needs, as a 'Region' is defined as follows: struct Region { let name: String let platformId: String let host: NSURL } Basically, I wish I could define Java-style enums in Swift.
1) Yes, you can use a computed property. The point was to quickly throw together a demonstration of one approach to your issue. 2) No, the code has no error. Dictionaries return optional values because the key may not exist. 3) So you are using a struct. Here is a little nasty but very workable example (and despite the scary type conversion/parsing, it's very type safe with crashes happening early at runtime, though compile time would surely be better): https://gist.github.com/ztj/c1ae212cef5ed3554703 Ultimately, there are numerous ways to approach this problem but nothing perfect just yet. Enumerations may not be the right way to do this, but, if they are, at least you can deal with it. And let's be honest, Java enum are hardly perfect particularly when you want lookups based on instance parameters. Also remember that Swift is very young and progressing at breakneck pace. The next revision represented in beta 6.3 is already looking quite a lot nicer.
Great work, thanks for sharing! Question: In GameScene.swift, in the updateDrag and drawDrag functions, you have an if statement if let p = draggingPoint where inputMode == InputMode.DragBody { When I tried running it like it, it gave me an error saying "braced block of statements is an unused closure ". So I commented the "where" part out if let p = draggingPoint { // where inputMode == InputMode.DragBody { And it built and ran the project. Doesn't seem like commenting that part out made any difference. So, my question is, what does have a where condition in an if statement do? I've never come across it before. Why is it needed here? Pardon me if this is an amateur question, just have never seen where in an if statement. Googled it and couldn't find an answer, only switch case statements have where. Maybe having where in an if statement was only part of the beta version of Swift? Thank you! P.S. The scene's extremely laggy. You did address that in a comment here regarding the Swift compiler. So nothing can be done to improve on this lag by improving the coding? 
Don't look at it as mutually excluding resources, you should follow both, big nerd ranch books are almost 1000 pages from beginning and standford is more advanced.
An Optional can always contain its value type so promotion from its value type to Optional is always possible. The reverse is not true. Demotion from an Optional to its value type is not always possible since the Optional must be non-nil for this to work. The relationship is inherently asymmetric.
 var optionalString:String? = self.someNonOptionalString is syntactic sugar for var optionalString:Optional&lt;String&gt; = Optional(self.someNonOptionalString) 
Course will surely prepare you, about most used/popular iOS APIs. However they won't be covering all of them, obviously. Here's what I suggest: Don't get any swift book. Apple's official book is great and enough. However do get a book which teaches about iOS Apps and APIs. It's the APIs which are important and difficult to learn and where you will be spending most of your time with. BNR guys have been proven with great material, so I guess you can buy their books. However their swift books are not out yet, so you have to wait. Another book I would suggest is [iOS 8 Swift Programming Cookbook](http://www.amazon.com/iOS-Swift-Programming-Cookbook-Solutions/dp/1491908696) This is not the usual learning book, rather a collection of recipes you would want to use. This book is not for a beginner, ofcourse. Also, keep following this blog: www.raywenderlich.com. so to answer, &gt; Do you think that I should finish the course first and then supplement my knowledge of iOS with any other book/course resource? I would to say yes to this. Course won't cover all the APIs and it's more of a beginner level course. Once done, hop onto advanced topics/books/resources. If you are confident, then you start with another material/book by the lecture 6/7. TLDR; complete the course, get the BNR iOS 8 book when it comes out and keep building apps. more you write code, more you learn :)
I disagree. Standford might not be advanced for you, but is advanced **COMPARED TO** BNR and is advanced for zero-experience programmers that thinks swift will solve their problems, the teacher explains at the beginning that you must understand OO programming and have a C background (Swift is not the only standford course) and just talks about things like "the heap" as you should know beforehand, in BNR you start from zero, they don't assume you know how pointers and memory management works.
Okay thanks for all the help. I will continue to follow the Stanford courses and probably begin developing the yik-yak clone by the end of the 6 or 7th lecture, if I feel comfortable enough with iOS. 
Yep. The `Optional` enum is has compiler support to make it more convenient.
I appreciate the input. Very rare to see a comment with helpful constructive criticism! :)
Your approach is very tempting :) If I were to try your head first approach to iOS dev, what would it entail? Do you use any tutorials or is it just quick questions on stackoverflow?
The thing I did with that `if` statement there is indeed a new feature of the beta Swift 1.2 where you can append multiple optional bindings along with conditional clauses, so basically that line says `if draggingPoint is not null, and inputMode is DragBody...`, it works without it because the input mode is always dragging body anyways, 'cause I didn't have time to implement switching between input modes. Also, about the performance, I really can't blame the language since for the most part it is just as fast as it can get, but still currently in other parts it is really sub-par, specially in array iterations, which the engine does like crazy. Although if you disable rendering by commenting out the drawBody method you do get a considerable improvement, even as far as getting the thing to run at 60 fps. In the end, it might just be that I chose the wrong library for rendering the demo scene, for starters.
You forgot to add Selector UILongPressGestureRecognizer(target: self, action: Selector("longPress:")) 
As you try your own stuff, keep doing lots of tutorials. Easiest way to find them is by subscribing to newsletters: Natasha the Robot — http://natashatherobot.com Swiftplanet — http://swiftpla.net Swift Monthly — http://swiftmonthly.com
Try `.Recognized`?
You don't use selector in swift, you were right the first time. What function are you instantiating the gesture recognizer in? If that's in the body, the view wouldn't exist yet. Try placing the creation of the recognizer inside viewWillAppear. 
 I ran that code exactly as it was and it worked, the first three lines in viewDidLoad. Could it be something else?
How did you make it? Is the code open source?
Hmm, the top error means you haven't implemented the necessary methods for the UITableViewDatasource protocol, you need to implement the required methods listed on this page. https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITableViewDataSource_Protocol/index.html The bottom means your variable tableview has not been declared, maybe you meant to use UITableViewController instead of UIViewController?
Alright I'll have a look, thanks
Move the longPress function outside of viewDidLoad.
nothing..
You want to use a delegate method of the textfield. When the contents of the textfield changes, you want to set the text of the label to the text of the textField. You need to set the delegate of the textfield to be this viewcontroller and declare the viewcontroller to be a subclass of UITextFieldDelegate. It looks like you created a method to set the text of the label to the text of the textfield, but I don't see where you called it anywhere. But I'm on mobile and that's a lot of code. Good luck!
I've been able to send messages successfully over wifi and bluetooth with my own app written in SWIFT. This blog has good articles: http://www.rockhoppertech.com/blog/swift-fail-midiclientcreate/ and this stackoverflow posts also helped me: http://stackoverflow.com/questions/26494434/using-midipacketlist-in-swift http://stackoverflow.com/questions/27416435/send-and-receive-midi-with-swift-and-coremidi I'm still not able to read messages or notifications, the callbacks are working now but my app crashes when I receive a midi message or there's a connection change. My recommendation is to use objective-c until CoreMIDI becomes more stable in swift. 
It was actually just named collectionTableView instead of tableView
Just Swift and basic UIKit. Besides an image sequence for the logo and two PNGs for the sound icon, the rest of is handles with UIKit basics and drawRect. Nothing fancy :) It is not open source. But, I'm happy to answer any questions!
great! PM me anytime if you need help or start a thread and point me to it. All the best!
Impressive! I don't know why your thread getting downvoted, but your app needs to be seen by many in this sub (beginners like me) for the good design. I wish you all the best
Even I am interested to know this. How to package my .swift file into a library, add test cases and share it on cocoapods. 
Try removing the transition effect and see if that solves it. It's hard to tell from the code you provided but it reminds me a similar issue I had. 
How did you make the AI?
Further, and this is purely stylistic, you may want to rename your CollectionsViewController. I know I was incredibly confused because I thought it was going to be a [UICollectionView](http://developer.apple.com/library/ios/documentation/UIKit/reference/UICollectionView_class/index.html)...
Thanks for your help, however this error appears: [error](http://i.imgur.com/qvjLWqG.png)
I need the transition effect for switching scenes. The problem is whenever I switch back to the start menu the game starts on its own or even if I press the home button and come back to the game it also starts on its own. It doesnt stay paused. Im not sure what to do. I did a google search and cant find anything on it. 
And also he should use dequeueReusableCellWithIdentifier(:forIndexPath:) instead.
`as? UITableViewCell` That method can return nil. Alternatively, register a class and use the `forIndexPath` variant instead. 
Maybe start by checking out the built in core image filters? Apple has a nice Gaussian blur built in
You also haven't set building.userInteractionEnabled = true
Use a UIVisualEffectView, which is specifically for doing these kinds of blurs.
btw, since i got the gesture working i noticed something. the way it functions is by recognizing gestures only when you click IN the view.. however, is their an object so I can click outside the view and hold the click and drag into the view and it still triggers? click for simulator .. but click as in touch
If you need to support iOS 7, use this library https://github.com/nicklockwood/FXBlurView Otherwise, if you support iOS 8 only, there's more efficient native class called UIVisualEffectView.
Can you post a complete concise working code on github or pastebin? 
https://github.com/fwilli/SayYesToTheTest
There are a few ways to do this, but all of them require a separate server. The easiest way you might find is to use [CloudKit](https://developer.apple.com/icloud/documentation/cloudkit-storage/) to save that list to Apple's servers, by creating a custom object, something like this: struct ListItem { let content: String let likes: Int let dislikes: Int }
While there are many, many free tutorials out on the web, I haven't found one as effective or enjoyable as [Rob Percival's *The Complete iOS8 and Swift Course*](https://www.udemy.com/complete-ios-developer-course). The course does retail for $299, but there are almost always sales through Udemy that knock it down to about $29. Just Google Udemy promo codes and look for one that gives about 90% off. This course is great because it not only teaches you the basics, it continuously reapplies the concepts into actual iOS apps that you build. I had done an uncountable number of tutorials before discovering this one, but it is the best by far I've used. The only downside I can think of is that it's video-based, which requires more attention than most of the text/picture tutorials. Otherwise, it's great! The author is highly responsive, as are other students in the course. The content is consistently updated to the newest standards (already supporting Swift 1.2), and the courses are incredibly easy to follow. I definitely suggest you check it out, as it provides a much more in-depth experience instead of just one-off apps that don't always give you a working knowledge of the language. There should be a few lessons to preview without purchasing, so I'd take a look at those first!
 &gt;No idea - you are so far off the map of "proper ways to use a programming language" that it's anyone's guess as to what is happening. That's what happens when beginner, complex ideas, Google exist at the same time. Thanks for the help. 
Ok thank you very much!
Thanks! 
To follow up: Swift is quite readable/understandable if you only know Objective-C. Really wish I could say the same thing about the inverse... 
I would suggest looking into [Parse](https://parse.com/), it is quite easy to get started and can be very powerful. Set up a database for your array strings, then update your "main array" through the Parse API. You could implement a like/dislike system this way as well. 
I've been working with the Standford Swift course on Itunes U, It's quite good with the basics of xcode. Though it goes quite fast because they assume you know some programming. Checkout the Itunes course for the basics (first 2/3 lessons) then start making things and learn how things work. atleast that's what i'm doing.
Yes, you can achieve the same thing without placeholder images; you can just use empty UIViews if you'd like with constraints to fix their size. There are two ways I might do your layout. One way is to have a single placeholder (or "spacer") in the centre with a predefined width/height, and then align your four buttons to the edges of it: http://i.imgur.com/fgeHPZX.png The other way would be to put your four buttons inside a container view, then centre the container view itself. The buttons would then be aligned to each other and the edges of the container view: http://i.imgur.com/SYtvT9R.png Either way should work, though I'd tend to use the container view approach since it's usually simpler to do things like compressing the space between the buttons on very small displays, etc!
[Here's a test .xib](http://old.themeparknerd.com/test.xib.zip) that demonstrates both methods.
Sorry if I didnt explain it well but Im trying to get my enemy nodes to not run their actions in the start menu. So I want the speed to be zero. The enemy nodes are in this function that has runBlock which i think is the reason the speed = 0 code is not working.
We're going to need a little more info about what you're trying to do and why. How does the app work? You want to show a "fact" - can any user add facts for everyone else? Can I only see facts that I've added myself? My first thought is that you do not want to use an array at all, but rather store each fact as its own object (row) of that class. Regardless though, your next step is to start using [Queries](https://parse.com/docs/ios_guide#queries/iOS) to download the data you're looking for. You may also want to look into [Subclasses](https://parse.com/docs/ios_guide#subclasses/iOS) for managing and storing the data once you've fetched it.
i find autoconstraint would do it most of the time -- you have to check what it puts in to make sure it makes sense... you can also centre multiple objects to the screen by selecting them as a group.
There are two ways you could do it. The first way would just involve adding code to your view controller. You would need to create a PFQuery to get your Fact objects. Then use the returned array to populate a UITableView. The second way would be to make your view controller a subclass of PFQueryTableViewController. It is a helper class for showing a table view based on the results of a query. I've played around with this a couple times but always switched back to using a UITableView for better control and customization. I would highly recommend going with the first option. UITableView is used everywhere and it's a very important thing to become comfortable using. In the long run, you'll learn way more about iOS development and there are more resources available to help you. Parse also has some [tutorial apps available](https://www.parse.com/tutorials) that you can take a look at. They're all written in Objective-C but could be helpful.
It works just fine because the rest is just modifying the attributed string as it should be. Something like this should work: attributedString.appendString(NSAttributedString(string:"\n")) Personally, though, this is not how I would add an image to a bit of text. I'd set up a separate UIImageView and then use the exclusionPaths property of the image view's textContainer object to have the text wrap around the image.
So from there I just need to bring some down and then store them in an array? Would they all be stored in the array as they are submitted? This is from my FactBook.swift import Foundation struct FactBook { var factsArray = [ All of my arrays go here at the moment ] func randomFact() -&gt; String { var unsignedArrayCount = UInt32(factsArray.count) var unsignedRandomNumber = arc4random_uniform(unsignedArrayCount) var randomNumber = Int(unsignedRandomNumber) return factsArray[randomNumber] } }
Oh really! how would I go about doing that? Because this is all new to me, so if i can find a more efficient method, that would be wonderful
Yup, that all sounds right to me.
Okay thank you for bearing with me! 
If I had to guess, I would say it's because the Swift-Koans repository is *very* out of date version of Quick. Not only is it about ~250 commits behind, but it still references pre-release versions of Xcode/Swift that do not use the same syntax as the final release. Making things worse is that there were several syntax changes in Xcode 6.1/Swift 1.1 as well. Since the repo author hasn't bothered keeping it up to date I'd recommend looking for a different tutorial.
I think this will help http://ios-blog.co.uk/tutorials/connect-your-swift-application-to-parse-com/ also you can try http://ios-blog.co.uk/tutorials/swift-create-user-sign-up-based-app-with-parse-com-using-pfuser/ and http://ios-blog.co.uk/tutorials/swift-create-a-login-app-with-parse-com-pfuser-keychain-locksmith/
It would be better to have the listArray variable outside of the addListItem function, then it should be visible for everything in that class. Hope that helps.
Look up scope. Variables are local only from *inside* the brackets they’re defined in and brackets inside those. You’ll notice that you define listArray in one set and try and access it from another outside set. Looking at the left indentation helps, too. If the indentation goes back right (without balancing out left), it’s not in the same scope. That’s a very loose rule I just made up, so take it lightly. 
Sweet thanks!
 override func viewWillAppear(animated: Bool) { self.navigationController?.setNavigationBarHidden(true, animated: animated) super.viewDidAppear(animated) } put this in your first view controller
You can use an optional: func deleteMembershipForGroup(group: GroupData?) {} Then do something like (which is kind of like nil checking, which isn't necessarily IMO an anti-pattern): if let g = group { } // Unwraps the optional if it's not nil and assigns it to g within the if scope
&gt; I'm reading many articles about how you shouldn't check an object for nil. It's a objC paradigm No, the approach Objective-C takes is that messages to nil should be silently ignored rather than having nil checks everywhere. Checking for nil/null everywhere is the approach languages like Java and C++ take. &gt; and it's a bad design and w/ swift it's been eliminated. It hasn't been eliminated in Swift and it's not a bad design. But if you construct the type system to distinguish between variables that may not hold a value and variables that always hold a value, you can move a lot of mistakes made when programmers mix the two up from runtime to compile-time, which eliminates a whole range of potential bugs. Optionals still allow for variables that may or may not contain a value, so you still have to check for nil in these cases. &gt; per example below, can you pass thru "group" as nil value? No. There's no such thing as "nil value". Nil is the *absence* of a value. The argument for that function is defined to be of type `GroupData`. This means that you must pass through a value of type `GroupData`. Nil is not a value of type `GroupData`; it's not a value at all. &gt; does the nil-checking mechanism happen when the function is called No, it happens when you compile the code (and, under typical conditions, when you are still typing the code). &gt; hence removing the need to implement if(group==nil){..} ? Yes, the point is that inside the function, you can be sure that the `group` variable has a value of type `GroupData`. 
Using AVFoundation's AVAssetWriter class. You'll need to convert your CGImage objects into the correct pixel buffer format. This [thread](http://www.raywenderlich.com/forums/viewtopic.php?f=2&amp;t=11827) should help you get started or at least get you searching for relevant class names. If you're writing this for OSX, you can just connect to your webcam using AVFoundation and capture directly to a video without needing to construct individual frames. 
So no coding is involved for touch id? 
Not for in app purchases. There is an API for Touch ID but it's only used for using Touch ID for authentication for your apps login page and a few other things. 
If you don't want to use a server, look into Multipeer Connectivity Framework. 
I've found that already. I have other images on the screen. How do i get this to remove specifically the counter images?
You can either store the images you create in an NSMutableArray, and then iterate through them to remove them from their parent, or you can create some sort of container to hold your numbers UIImageViews, and then remove that instead.
Isn't this the sort of thing that CloudKit is for?
If it's a small amount of data being transferred, CloudKit can work. And you wouldn't have to be in proximity of each other, as with a Multipeer Framework solution. 
as LetsCodeSomethingFun suggested, I would use something like Parse or CloudKit. Parse will probably be easier to get up and running with.
Instead of contactList being an array, you could use a dictionary. The dictionary will have a key for each letter of the alphabet. The value of each key could be an array of all the contacts whose names begin with that key. Then, your sections count for the table would be the number of keys in the dictionary. The number of rows in a section would be the count of the array for the key at the index of that section! Additionally, I see that you have some core data logic (you have a context:NSManagedObjectContext) if you were to store the contacts into core data, you could use an NSFetchedResultsController to manage your table view and it has a group argument that you could set to automatically handle the sections :)
It is running now.
Thanks guys
It's back up now, that we're having DNS issues. Supposedly!
I think I had found many github repositories by typing "open-source iOS app" on Wikipedia. Not all was in Swift, but still.
I had the exact same need and pretty much just created a subclass of UIControl which incorporated a UILabel and a UIImage. Then I just added the correct TargetActions as well as Send Events.
Have you tried performing a clean or restarted XCode?
thank you!!!!
Though if you're targeting OS X or iOS 8+, you should really take [a look at Carthage]( https://github.com/Carthage/Carthage).
On #1, from apple docs: "Use a weak reference whenever it is valid for that reference to become nil at some point during its lifetime." By default, a var is a strong reference, meaning swift uses automatic reference counting to know when it can safely be deallocated. This can result in you keeping a lot of things in memory that you never use again. If you make a var weak, then you are saying that you don't care if it gets blown away later in your code at any random time. I suppose it would be good for things that are used in the process of setting another object or value and then you don't care what they are anymore. On #2: The UILabel is an optional. It would normally be declared with a UILabel? And then you would have to unwrap t everywhere in your code that you referenced it. By declaring it UILabel!, you can reference it directly because it is automatically unwrapped. You only want to do this if the optional you are using is set very early and never changes. If the label is always initialized with the view, then when your view is displayed, it will have always been set, so the optional UILabel? will never be nil and you can use the ! notation for convenience. This is covered pretty well in the second lecture in the current Stanford course on iTunesU. 
Thank you! I had been beating around this solution for a while until the "ah-ha!" moment hit. I was really doubting the compiler would allow this but it does, and you don't even need to worry about using the &amp; operator to pass by reference!
Cool project, but Cocoapods matches my workflow better. I will definitely keep an eye on it though. With cocoapods I don't have to be concerned with integrating frameworks. It works closer to pip or npm which i like. 
Additional note here: When you define your own custom delegate protocols in Swift, you do not need to mark these as weak properties in the containing class. This is contrary to standard Obj-C, where they would be marked as weak. The only exception to this is when the Swift protocol is defined with the @objc prefix, then you should mark them in the containing class as weak. If you try to define them as weak without the @objc prefix, the compiler will give you an error.
1. The added benefit is that it makes it less likely to accidentally create retain cycles. Unless you are adding or removing a view from the view hierarchy manually in your code, you should use weak. 2. For convenience and readability. A view controller loads its view lazily, so after the constructor is finished these variables will still be nil. Non-optional values cannot be nil in swift after the constructor finishes, so IBOutlets have to be optional. On the other hand, once viewDidLoad is called, IBOutlet variables should be non-nil for the remainder of the lifetime of the controller. Since most VC code generally is executed after viewDidLoad fires, if IBOutlets were ordinary optionals then code would get cluttered with question marks and "if let tmp = someOutlet" statements. The implicitly unwrapped optional (the ! operator) means you can treat these variables as non-optional, because for the majority of a controllers existence they will be. You just have to be careful not to access these variables before viewDidLoad is called.
It's mentioned in 'The Swift Programming Language' (Apple's book about Swift) in the chapter about generics. 
The `swap` function is actually one of the few global functions that *is* mentioned in Apple's *The Swift Programming Language* book. As mentioned by someone else, there are many other cool functions that are not mentioned.
Most articles will have a link to their project on GitHub, always useful to browse the code in its full form. One of my favorite blogs is the [objc.io blog](http://www.objc.io), which is mostly Obj-C code but can easily be ported to Swift if you're familiar with Obj-C. Their [Functional Programming in Swift book](http://www.objc.io/books/) is also really, *really* good. [Cocoa is my Girlfriend](http://www.cimgf.com) has a bunch of examples on their site as well as one with [CoreData and Swift](http://www.cimgf.com/category/core-data/). If you are new to iOS/OS X development, I highly recommend you get a good grasp of Obj-C before dabbling with Swift. Having a good Obj-C foundation will go a long way in writing Swift code because you will understand the whys and hows of the Apple Frameworks. Also, the code you write in Swift to interact with Obj-C frameworks will likely be a bit different than code that interacts with a pure Swift environment. Having the Obj-C knowledge will let you understand why your code is different for these circumstances and why you *shouldn't* fall back to every Obj-C convention when writing pure Swift code. For example, you may notice that the Foundation classes make use of the delegate pattern quite extensively. A few of them have been enhanced to use blocks (completion) but not all. A classic case is the legacy NSURLConnection class which has been superseded by the NSURLSession class in iOS 7. You will see that while the latter offers delegates, the completion block pattern is really where it shines. So which should you use in Swift? It depends on the situation but the completion handler (block/closure) pattern is much preferred. Of course, you will have to interact with some legacy Obj-C bits but that's where Swift shines -- you can write extensions to enable such functionality. Before iOS 8 introduced UIAlertController, it was common to see extensions that added block support to UIAlertView which eschewed the traditional delegate pattern. 
Huh! Google didn't find it, and I'm not at the point yet in that book/site. Thanks! 
Any reason to not use explicit unwrapping here, out of curiosity? if let rhs = rhs { lhs = rhs } Also, funny you posted this. I had yet another take on it that [started here](http://exorcyze.blogspot.com/2015/03/parsing-data-into-models-in-swift.html) this morning and [continued with](http://exorcyze.blogspot.com/2015/03/in-our-previous-post-we-created-some.html) to be a bit more generic. I opted to be able to provide a default "safe" value when unwrapping a dictionary ( from JSON ) so I wouldn't need optionals in my models. I ended up with something like this in my model parsing: artistName = d.safe( "artistName", or: "" ) Where the type is inferred from the default "or" value and if a strong value is found in the dictionary, it's used to auto-cast it. =) 
Perhaps a delegate would be better choice
Cool site, thanks
\^This is correct, OP. In case these instructions aren't explicit enough, you can create an outlet to a UIView element (any button, text field, text area, image view, etc.) by clicking and dragging the same way you did to create the IBAction, except in the little dialog that pops up you change "Action" to "Outlet" in the dropdown menu. Creating an outlet ensures you have access to that specific element.
Thanks! I've been reading up on them. Hopefully it will solve my problem.
Something like this should work: func hasStoredUser() -&gt; Bool { return NSUserDefaults.standardUserDefaults().stringForKey(LCHasStoredUserKey) != nil }
Thank you!!
Take a look at this example. It may be of some help http://stackoverflow.com/questions/24647406/how-to-use-completionhandler-closure-with-return-in-swift
Your thinking is correct, even though there's an even more basic issue: if response == "invalid" { var returnstate = false } When you write var, you declare a new variable. The returnstate variable above is only usable from within the if (so it isn't used anywhere). I have no idea what you return on line 19, but it doesn't have anything to do with the returnstate variable in the closure you pass to the dataTaskWithUrl method. I guess your class has a property with the same name? In that case, you'd return the value of that property. But even if you fixed that, it wouldn't work, because of the reason you mentioned. There's a good reason why you pass a block to dataTaskWithUrl; it's because it takes a while, and you can't just wait for it because that would block the thread you're on. If you're using the main thread, that would be very bad because the UI would freeze. Basically, you need some mechanism to do something with the result "later", i.e. when the closure you passed to dataTaskWithURL is called. One way is to just do what you'd do with returnstate right there, in the method. Eg. let task = NSURLSession.sharedSession().dataTaskWithURL(url!) {(data, response, error) in var feedback = (NSString(data: data, encoding: NSUTF8StringEncoding)) as String! if response == "invalid" { displayErrorUI() } else if response == "valid" { displaySuccesUI() } } Where displayErrorUI is some method that updates the ui to reflect the invalid response, and so on. You may not be able to do that though, for example if the class that you implemented httpcall in doesn't have access to the UI. In that case, I'd recommend passing a closure parameter to the httpcall method, similarly to how dataTaskWithURL does it. The basic idea is that you want to give something to the caller of the method, but you can't return it right away because you only get the result sometime later. So you require the caller to pass a closure that you can call later when the result is here. It would look like this: func httpcall(urlbit: String, onResult: (BOOL)-&gt;()) { var urlor = "http://notarealurl.com/etix.asp?t=scanticket&amp;sid=100000&amp;tid=" urlor += urlbit let url = NSURL(string: urlor) let task = NSURLSession.sharedSession().dataTaskWithURL(url!) {(data, response, error) in var feedback = (NSString(data: data, encoding: NSUTF8StringEncoding)) as String! onResult(response=="invalid") } task.resume() } And you call it like this: xyz.httpcall("someurl", { responseWasInvalid in doSomethingWithTheResponse() }) You may have to store your NSUrlSessionTask somewhere to keep it from being deallocated, too. One final thing: try to stick to naming conventions and use expressive names for your methods. It will help a lot later. For example, "httpcall" is not a very good name, it gives almost no information about what it does.
My bad.. I was think of calling a completion handler with the result.
I'm sorry, I really don't understand a lot of that code; I am very new to swift. But what exactly am I supposed to do with "xyz.httpcall("someurl", { responseWasInvalid in doSomethingWithTheResponse() })"? I didn't mention this, which I apologize for, but the server is supposed to return the strings,"valid" or "invalid" when I call it. I want my app to display if it's valid or invalid by this following line of code: messageLabel.text = response Response will be either the string "valid" or "invalid". I'm not sure how to integrate your suggestion with that. If you could elaborate a little bit, that would be much appreciated. And thanks for the thought out and detailed response.
Try setting your contentSize to something larger than the screen size.
Sometimes it won't work with just cleaning/restarting. If you go to **User -&gt; Library -&gt; Developer -&gt; Xcode** and then delete the **DerivedData**. After it has been deleted restart xcode and it should be working again :) 
Took me 1-2 seconds to see the problem.
Have you tried any of the free resources yet? There are a lot out there. I think the biggest advantage of these paid courses may be the incentive to finish them since you've already paid. 
i am currently using Haneke, i might be able to assist you. can you provide me with a snippet of code maybe? 
Agreed. [Team Treehouse](http://teamtreehouse.com) has 14 day free trial on their resources. [Code Academy](http://www.codecademy.com) is another, though it isn't exactly iOS specific. I had very little experience with Ruby and really liked [Rails for Zombies](http://railsforzombies.org) approach and it was free. [Thinkster.io](https://thinkster.io) has a Swift section as well. When I was first learning iOS (Obj-C), I made heavy use of [Ray Wenderlich](http://www.raywenderlich.com)'s tutorials. Is it worth it? Well I can tell you that iOS developer positions can pay between $30-50/hr. The pay is definitely there, and these aren't even senior level positions which pay $10-20 more. If you live in CA/NY or another place that has a high cost of living, they likely pay even more. Considering you may be out a couple hundred for books/video tutorials to learn a new trade... I'd say that sure beats thousands going back to school.
This is likely the issue. To better visualize "how" a UIScrollView works, think of the view's frame as the viewport size and the content size as the entire content being displayed. The viewport will scroll so the rest of the offscreen content can be viewed. If the contentSize is the same size or smaller than the frame itself, it does not need to scroll and will not. In the context of a real-time strategy game, think of the UIScrollVIew as your current viewport. The entire game map is the content size. The map is too large to see all at once, so the viewport lets you scroll to view it all.
You are using NSURLSession in the correct manner but I think you may be misunderstanding what is going on behind the scenes. When you use NSURLSession.dataTaskWithURL(...), you create an asynchronous task object and provide the completion handler that is executed once the network operation completes (pass or fail). The completion handler is necessary because the network task will be executed in the background and will take an indeterminate amount of time to complete. Your HTTP call method needs a way to get the result back from the asynchronous operation. Similar to how NSURLSession works, you can also create your own completion handler argument for your HTTP call method. For example: func httpCall(string: String, completionHandler: (String) -&gt; Void) { ... } Then inside your HTTP call method you can use the following to return the result: completionHandler(response) You do not need to return anything from HTTP call because your networking code is asynchronous. The return value you want (the response from the server) will have to be provided via completion handlers. If you want to invoke your completionHandler on the main thread (for working with UI controls), use the following instead: // Return is necessary due to Swift not allowing non-void returns inside a void closure (this will be fixed in Swift 1.2) NSOperationQueue.mainQueue().addOperationWithBlock { completionHandler(response); return } EDIT: Here is an example you can try in the playground: // This defines 'HTTPCompletionHandler' as a function which takes a string and has no return (void). typealias HTTPCompletionHandler = (response: String) -&gt; Void func executeHTTPRequestAsynchronously(token: String, completionHandler: HTTPCompletionHandler?) { let urlString = "http://notarealurl.com/etix.asp?t=scanticket&amp;sid=100000&amp;tid=\(token)" let url = NSURL(string: urlString)! NSURLSession.sharedSession().dataTaskWithURL(url) { data, urlResponse, error in let serverResponse = NSString(data: data, encoding: NSUTF8StringEncoding) as String completionHandler?(response: serverResponse) // If you want the completion handler executed on the main thread, use this instead // NSOperationQueue.mainQueue().addOperationWithBlock { completionHandler?(response: serverResponse); return } }.resume() } executeHTTPRequestAsynchronously("test") { response in println("response from the server was '\(response)'") } 
oh my god thank you! first before i show you code, how did you put it into your project? i've been trying to import different frameworks and have realized that maybe the root cause is the installation. would it cause problems if I just downloaded the zip, and dragged + dropped it into my project? edit: i got rid of all the code i was using with haneke because i got too frustrated with it. Could you provide me with a simple code block that shows how you get the data to persist? 
Don't waste your money. Maybe it is good Idk I haven't used it but you can learn anything and everything about coding on the internets
One thing to note is that JPEGs are not well supported on iOS. PNG is the preferred format and a lot of the time, JPEGs will simply not show up when you run your app. 
i think i have fallen in love with you. you have no idea what you've just done for me and my health. 
Larger than it's frame to be exact
A `UITextView` will need the HTML converted to an `NSAttributedString`. Displaying the string will be very fast, the bottleneck will be converting it. If you have a format more standardized and simple than HTML, writing your own parser may be the way to go. A `WKWebView` (iOS 8+, `UIWebView` for iOS 7-) will display any HTML page, so it'll be a little slower and memory intense. But is definitely not a terrible route to go. Much, much easier.
As far as I know, that's not possible at the moment. It only accepts Strings and no NSAttributedString nor UIImage as a title. 
And can you introductioned the second way, how do that with image? Thx!
"Considering you may be out a couple hundred for books/video tutorials to learn a new trade... I'd say that sure beats thousands going back to school." Agreed I'm actually looking to buy CodewithChris and Ray Wenderlich's video tutorial. The way I look at it is it will cost me $200 (CodewithChris - How to make iPhone apps, and iOS Toolbox course) and $15 per month for Ray Wenderlich's video site. I might even do Team Treehouse it's only $25 a month. vs Going back to school and spending money on a bunch of prerequisites courses, books, technology access fees, parking fees, and other unnecessary courses to make me more "rounded"
He offers the first part of his course for free on his website, I'd start with that and see how you like it. http://codewithchris.com/how-to-make-an-iphone-app/ I did this and made the "War" game app in about 10 days. Now I'm looking to buy the rest of the program (once I get my Birthday money next week). 
When you're running the iPad simulator for an iPhone only app, it's running in compatibility mode where everything just scales up. This is normally the behaviour for an iPad running any iPhone only apps. When you set the app to Universal, the app actually runs as an iPad app, so it scales properly to the screen size.
In terminal, you need to go to your project folder. Then run `pod init` which will create the Podfile for you. After you've entered the pods you want into the Podfile, run `pod install` and your good to go.
thank you so much for that, i was able to get the file to create without error, however I ran into an error while downloading it: platform :ios, '8.0' edit: error code - SyntaxError - /Users/&lt;mycomp&gt;/Desktop/iPhone Dev/&lt;projectFolder&gt;/Podfile:6: syntax error, unexpected tCONSTANT, expecting end-of-input pod 'SwiftHTTP', :git =&gt; "https://github.co... was the error ... i'm not even sure what to do :( 
Download my app, send a murmur, then swipe to delete. If that's kinda like what you need to do, I'll help you out :) https://appsto.re/us/2x234.i
Blargh. Thanks. Is that a suggestion, or my only option?
Suggestion that's based on personal experience. But also if you hadn't accepted the new terms, re-provisioning might work too. 
Yes, NSUserDefaults would work. NSUserDefaults survive app updates, so keep that in mind. You may or may not want that. Google is your friend for finding examples and tutorials on how to user NSUserDefaults. I did that for you and found this towards the top of the search list: http://www.codingexplorer.com/nsuserdefaults-a-swift-introduction/
Thank you I found it!
Right, I'll try that as well. Thanks, I didn't want to install the beta iOS just because then I have to restore from backups. I'm exceptionally lazy. 
I had this problem too. I had to reboot my computer for some reason (Perish the thought!), and it started working. So, give that a try. 
If you're saying you tried to keep up with the pace of the Stanford iTunes course and 'maybe theres something better', does this mean that you struggled to keep up? If that's the case you might want to go back to learning basic programming and what object orientated programming is. If this isn't the case and you just don't like videos I highly recommend all the latest books from Ray Wenderlich, iOS Apprentice is what I would recommend you if you have no experience with iOS as well as Swift, if you just want to know Swift (if you have prior Obj-C/iOS/Cocoa Touch knowledge) then he has a Swift book which gives you a good outline on what the language is like and how it's used.
I really like the The Complete iOS8 and Swift Course, it was an amazing platform to build off of! But your #1 tool is finding a reason to build something, and google as always
Honestly, I think the best way to learn the language is to read the language specs, type out the examples provided, and make sure you understand why they work. This is kind of in the vein of "learn python the hard way," but I don't see a substitute for learning the language other than sitting down and going through the language features one by one. If you don't have a basic understanding of cocoa touch frameworks, well, that's another story. But if you want to learn swift as a programming language I think that's the way to go. Plus storyboards make playing around with swift incredibly easy. 
https://www.udemy.com/complete-ios-developer-course/#/ This is what I've been using to slowly learn iOS development and SWIFT. Wait for it to go on sale (or don't if you don't care) and sign up. He goes slow enough that I was able to pick up everything after only 1-3 viewings of each lecture, and the only reason I had to watch a few of them 3 times is because I kept getting interrupted and I have horrible ADHD. 
Seems cool, although i'm pretty broke student, waiting until sale for sure!
That is exactly what I wanted. Thank you so much!
After working with a Mac for the past year it's funny how the thought of rebooting never even crosses my mind anymore. Thanks for the reminder that this... "re-boot-ing" concept even exists!
In that case, have at it and good luck! =)
Here is the code for the core data file import UIKit import CoreData class PersistentHelper: NSObject { var appDel: AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate) var context: NSManagedObjectContext; override init(){ context = appDel.managedObjectContext! } func save(entity: String, parameters: Dictionary&lt;String,String&gt; )-&gt;Bool{ var newEntity = NSEntityDescription.insertNewObjectForEntityForName(entity, inManagedObjectContext: context) as NSManagedObject for (key, value) in parameters{ newEntity.setValue(value, forKey: key) } return context.save(nil) } func list(entity: String ) -&gt;NSArray{ var request = NSFetchRequest(entityName: entity) request.returnsObjectsAsFaults = false; var results: NSArray = context.executeFetchRequest(request, error: nil)! return results } func remove(entity:String, key:String, value:String)-&gt;Bool{ var request = NSFetchRequest(entityName: entity) request.returnsObjectsAsFaults = false request.predicate = NSPredicate(format: "\(key) = %@", value) var results: NSArray = context.executeFetchRequest(request, error: nil)! if(results.count&gt;0){ var res = results[0] as NSManagedObject context.deleteObject(res) context.save(nil) return true } return false } } 
You can send the information that you want displayed in the second view using prepareForSeque() in the first controller. You should google how to send information to your destination view controller from the current (source) view controller
You could absolutely use Xcode to learn Swift on either, but for the small price increase I would definitely, definitely go with the retina. Much better spec will suit you better for compiling, and have a longer life as a useful machine. Also, you can set the display in a scaled mode that gives you slightly more screen real estate, which will also be welcome.
It's phenomenal. I knew nothing about programming other than some BASIC from when I was a kid and a tiny bit of ObjC (I stopped learning as soon as swift was announced but was only 1-2 weeks in). The commands make a lot of sense for the meantime and, honestly, the only thing I'm having a problem with is trying to figure out how Xcode's interface editor works and how to link everything up. Swift itself is quite easy. For example in one of his first apps (years to cat years) it seems very simple but then he walks you through it and you're control+dragging from one side of the editor to the code so that it inserts itself and you can say "well this needs to perform and action or display this when this happens". Once I got past that I've been able to almost do every challenge offered up on my own and even do some of the examples from memory. 
No question that is the better laptop. *The only real downside to getting the MBPr is the extra weight and smaller hd. Both they're not really that bad of downsides since you can get an external hd and the MBPr is alright super light. For the extra $100, you get twice the ram, better screen, faster processor, and improved graphics. It's a no-brainer. 
Try this. https://www.youtube.com/watch?v=9LHDsSWc680
I don't remember where (it might have been Apple docs), but I remember reading that swift requires a default switch case unless you are switching on an Enum. I think all other types require a `default:`.
Thanks. Gonna go with that one
It is the first option you stated, thanks for the advice! 
I'm going to go ahead and disagree with this recommendation. I "tested the waters" here with an upload of this entire course on a popular torrent site and really didn't like it. Not only does he do a poor job of explaining why you're doing something, he's downright boring to watch. I switched immediately after watching one of his (presumably) non-final edited clips of him fumbling with basic code for a solid ten minutes because he didn't know what he was doing. You'll find countless examples of this in the torrent version and it speaks volumes about his ability. Go with Ray Wenderlich. I used the iOS apprentice while learning Objective-C and I'm now watching their video tutorials on Swift and thoroughly enjoying them. 
This has definitely been my favorite resource for tutorials. I recommend RW over Chris.
I downloaded the same one before deciding to purchase the course. The pirated course is out of date, does not contain any of the newer updates or redone videos, nor any of the great community answers to common problems. 
I definitely believe that he would have edited most of the mistakes and awkward periods out, but that insight into his true ability turned me away from the course. Ray Wenderlich has a much better series of tutorials and their videos cover many more aspects of iOS programming (adaptive layout series, etc) so that's largely why I say it's a better resource. Additionally, the forums at RW are likely much more productive than the Udemy course discussion as Ray has a staff of experts dedicated to answering questions as opposed to a single instructor. Ultimately it's a matter of personal preference and I found the teaching style at RW to be far more interesting (Brian's Star Wars and Game of Thrones examples are great) which keeps me learning.
Yes, but form what i can tell, the issue is that he's getting symlinks to the framework in his .app bundle, rather than the actual framework install. Nobody can realistically expect people to install the frameworks them selves. 
Yeah, I'm getting the Image Not Found error, which is preventing execution by anyone who doesn't already have the framework existing where the alias points to: Library/Developer/Xcode/DerivedData/[Project Name]-gunkchflywpgzohfpyaevxvivkjl/Build/Intermediates/ArchiveIntermediates/[Project Name]/IntermediateBuildFilesPath/UninstalledProducts/SwiftHTTP.framework
You need to create a data model or proerty and pass it between. The simplest version of this would be to create a dictionary with the data you want and before you show the 2nd view controller send that dictionary from the first one to the second. Alternatively, not every view has to be it's own ViewController. You could have one ViewController that swaps between your views and holds your properties in one place. Though, this can get hairy if you abuse it. 
When in doubt, check the [open issues](https://github.com/CocoaPods/CocoaPods/issues?q=is%3Aissue+is%3Aopen+swift+). [Looks like it's a known issue](https://github.com/CocoaPods/CocoaPods/issues/3156). If you have any other info, please add to the ticket! Edit: typo
I've tried my hand at it. It appears you can do the following: func ==(lhs: JSONValueType, rhs: JSONValueType) -&gt; Bool { switch (lhs, rhs) { case (.Array(let la), .Array(let ra)): return la == ra case (.Object(let lo), .Object(let ro)): return lo == ro case (.String(let ls), .String(let rs)): return ls == rs // etc default: return false } } See if that works for you. EDIT: You can instead use case let (.Array(la), .Array(ra)): return la == ra I'm not sure which looks nicer or if there is any difference.
http://imgur.com/r5zuLmU //This sets up the table view cell. class tableViewCell : UITableViewCell{ override init(style: UITableViewCellStyle, reuseIdentifier: String!) { super.init(style: style, reuseIdentifier: reuseIdentifier) self.textLabel?.font = UIFont.systemFontOfSize(13) self.textLabel?.numberOfLines = 0 //When 0, there is no limit. self.textLabel?.lineBreakMode = NSLineBreakMode.ByWordWrapping } required init(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } override func layoutSubviews() { super.layoutSubviews() println("running layoutSubviews") var imageViewCustom :UIImageView = self.imageView! imageViewCustom.layer.borderColor = UIColor.grayColor().CGColor imageViewCustom.layer.borderWidth = 1 imageViewCustom.frame = CGRectMake(0, 0, 320, 320) imageViewCustom.contentMode = UIViewContentMode.ScaleToFill imageViewCustom.layoutMargins = UIEdgeInsetsZero
I learned my foundation from Treehouse. they offer a 14 day trial period.
That issue seems to fail when they codesign, which makes the Archive fail. My codesigning is working fine, and the Archive succeeds. My error is when someone on another machine tries to run the .app. 
I believe you could also be able to use shadow variables in this case: case (.Array(let lhs), .Array(let rhs)): return lhs == rhs case (.Object(let lhs), .Object(let rhs)): return lhs == rhs After doing that, the amount of redundancy in the code is obvious - which tells me there may be a better, more functional way of approaching this. 
I don't see where you're setting player1 = nil in the playground example, and I don't think it will naturally get dealloc-ed in the playground otherwise since there's no automatic parent scope ownership like there is with the view controller. 
Doh! Wrong screenshot. Here's the one with the nil. http://i.imgur.com/SFUtgml.png
Ah, the wrong screenshot syndrome - I always hate getting bitten by that one! It [looks like it's been seen before](http://stackoverflow.com/questions/24021340/memory-leaks-in-the-swift-playground-deinit-not-called-consistently) so it's good to be aware of. Seems that it could possibly be because of how the playground needs to function for live output, so quite likely it's by design. 
In brief: 1. Create another view controller in the storyboard, set it up to display an image, and have an image identifier property, we can refer to this as the 'image VC' 2. From your 'go' button or whatever, Control+Drag to the image VC and create a push segue and give it an identifier 3. In your first VC, override the prepareForSegue, check to make sure the segue identifier matches, then grab the 'presented' VC pointer, cast it to the type of your image VC and assign the image property appropriately. 4. You can override viewWillAppear to load the appropriate image in the image VC, make sure you aren't 'double loading' it as viewWillAppear can trigger for a number of reasons. HTH!
Did you actually add the gesture to a view?
Right now the best resource available for free is the [Stanford iOS 8](https://itunes.apple.com/us/course/developing-ios-8-apps-swift/id961180099) course available on iTunes. Regardless of your background it will teach you the fundamental concepts needed to develop iOS apps in Swift. Other good free resources include the Apple official [Swift guide](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/). There are also paid resources available although with my limited exposure to those, I can say that the free Stanford course is by far the best. Udacity has an [iOS nanodegree](https://www.udacity.com/course/nd003) with some courses. Udemy also hosts an [iOS course](https://www.udemy.com/complete-ios-developer-course/#/) with good reviews. The official price is 200$ but you can usually find discounts on the internet and get it for ~30$. Edit: This question gets asked so much in this reddit, mods should propably update the wiki page or maybe create a sticky post with resources for beginners? 
Depends on your background and experience. If you want, feel free to email me and we can chat about it. 
You could say the same about any language. Every language on a very low level is the same, cause you only have so many processor instructions. Where they differ is the syntax, runtime and libraries. VB is integrated strongly into the Windows environment, so if you are developing for Windows you might as well choose VB. You could say, why not C#? Well some people may like the VB syntax better. Sometimes you are just required to learn a language for work. If you come to a project which was developed for years in Visual Basic, you can't just say that it should be rewritten in Java just because you don't like VB syntax.
Had to learn it for A Level computing at school. Wasn't an option for the first year, but looking at swift because we're allowed to do whatever we want next year
no im lost...Do I have to add code to the touchesBegan?
Swift is built so you do not have to do garbage collection. This doesn't mean that you don't manage memory. Any time you create a variable (especial with the "var" keyword) you allocate memory. Try reading up on optimizing your app, and learn how to use the profiling tools.
Once you create the gestureRecognizer, you have to add it to some view - ideally your ViewController's view. let myGesture = UILongPressGestureRecognizer() myView.addGestureRecognizer(myGesture) And then in your method viewLongPressed, handle the logic for moving your node. PM me if you need more basic understanding of this concept.
As the other comments point out, its all about ARC, which is *not* garbage collection. And in fact, garbage collection has been deprecated in the platform and apps that use it (in Obj-C) must change to use ARC. Since you're coming from a background of C and C++ I would recommend that you read up on Obj-C and its mechanisms for memory allocation and auto-management; it applies to Swift as well, though you don't control directly (though you can *influence* it) when you write apps with Swift instead of Obj-C. Be cafeful how you set up your variables and use certain keywords such as `strong`. If you can't let go of the desire to control memory allocation/deallocation then I'd say that Swift is not for you and you should pick up Obj-C instead.
I have been trying to get the wrapper to work, after copying the 'SwiftAddressBookWrapper.swft' file, I keep getting Use of undeclared 'SwiftAddressBookRecord' errors.
This uses a UISplitViewController, the interface is referred to as a master-detail view. https://developer.apple.com/library/ios/documentation/UIKit/Reference/UISplitViewController_class/
Strangely, it's not in the docs. window.titlebarAppearsTransparent = true window.styleMask |= NSFullSizeContentViewWindowMask You can also set "Full Size Content View" on your window in Interface Builder. The title bar will be transparent and your window content [will appear under the title bar area](http://imgur.com/HEAejqb). You can also use `NSWindow.standardWindowButton()` to get access to the standard window controls like close, minimize, versions, etc., and reposition them if necessary.
Catfish pointed out my error, you're asking about Mac UI and I'm talking iOS. Tunnel vision, my apologies.
There's a more 'pre-made' open source NSWindow subclass that sounds like it does what you want: [WAYSourceListWindow]( https://github.com/weAreYeah/WAYSourceListWindow). Use a bridging header (it's Objective-C) and you should be good to go afaik.
Hey, I'm in exactly the same boat as you! Personally, I'm finding the iOS Apprentice book series from Ray Wenderlich incredibly useful. You learn how to make iOS apps and you learn programming ideas at the same time. I'm assuming you learned VB.net in a purely procedural programming manner at AS level, right? If so, learning ideas like the differences between procedural VB and object-oriented programming is vital and, thankfully, not that difficult with the iOS Apprentice books.
I want an entirely new view with new options and visuals. I've read some things that tell me that View Controllers can't do this, and I need to use Window Controllers. I'm unsure if that's the case or not. Given that I've also just learned that Storyboards aren't backwards compatible with Mavericks, I'm considering dumping it completely and doing whatever it is people did before Storyboards existed. 
You could even use preview to do this which is free with Mac OS X 
The original code is something to do with JSON parsing. A [JSON](http://json.org) value can be one of the following: * string * number * object * array * true * false * null Where an object is a collection of name/value pairs (in Objective-C and Swift, this is a `NSDictionary` / `[String: AnyObject]`), and an array is a list of values (including objects). /u/ttflee/ was making an enum for the various JSON value types, though I'm not quite sure for what purpose.
I was figuring something along those lines, but it seems if we knew more about it that maybe there would be a different way the problem could be solved that would allow for a more functional approach. =) 
Lets say I put a image in the 3x scale will it automatically update the image in the simulator just for the iphone 6+. This is new to me I just want to get a better understanding of how this works. 
Ah. Sorry! I guess thats what I get for doing things before a cup of caffeine :)
You (probably) need to move your question mark to after the variable name: leftBall?.backgroundColor = UIColor.cyanColor()
That stopped the error, thank you! But unfortunately still didn't colour the button :( 
just an fyi, VB is not a procedural language at all. It is 100% OO just like C# and Java. Have to remember that VB and C# are just languages that sit atop the .Net framework and both compile down to MSIL (Microsoft Intermediate Language). 
Yeah, I know. I just meant that my computing A level course didn't teach us, well, anything about object-oriented programming, even when using VB.NET for our coursework. So I learned little to nothing about objects, how they're created and used in the code, which is really screwing with me as I try to complete my coursework for *this* year, with Swift and an underlying SQLite relational database instead of Visual Basic.NET and a relational XML dataset.
I'm new to Swift and Mac programming in general. I come from a C# background. I didn't realize you could just change the controller to use a new view. That may be the easiest way. I'll try the things you've suggested. Thanks for your help, I'll let you know how it goes.
For that scenario, you can't, but you shouldn't need to since the view should be loaded by that point. I'd try making sure that your button variable is correctly linked the button you presumably made in Interface Builder (your button variable should be an `@IBOutlet`, and Xcode should indicate it's correctly linked by showing a filled circle in the gutter next to where you declare it).
I dont know if I should go with iAds for my first time or try something different and go with ADTapsy. 
I just looked at their site for a quick second and it appears that they're going to run one of their ads (for free) as payment for you using this combined SDK for every 10 as requests. It also says "*up to* 100% fill-rate", which seems like a redundant statement. I'd recommend using MoPub and adding the ad networks **you** want to use and skip the bundle. It gives you the freedom and control to only add the SDKs you want and to update them whenever you want. I'm sure it'll take a little more effort to set up, but I feel like it's worth it to not have 10% of your requested ads taken from you. Disclosure: My advice is based on a really quick glance at their site. I've never used them. I personally use MoPub in my apps.
Will MoPub work for swift? 
Sorry for the late response. I would suggest adding your own imageView to self.contentView so that you can set your own layout constraints.
There's an iPad specific suffix. I can't remember off the top of my head. 
Great, thanks so much! However, I am not familiar with CocoaPods, how do I install the wrapper?
You're supposed to call `dismissViewControllerAnimated()` on the presenting view controller, calling it on the presented view controller only works because Apple put that in as a fallback. The way Apple designed this to work is that the presenting view controller has an unwind/exit segue (which can call `dismissViewControllerAnimated()`), and you trigger that unwind segue from the presented view controller. See [Technical Note 2298](https://developer.apple.com/library/ios/technotes/tn2298/_index.html) for details. 
They are presenting `AddItemView` modally, it's not part of the navigation stack. Going back in the navigation hierarchy would result in the user seeing `FirstView`, not `SecondView`.
Yes. You can use `xcrun` from the command line. for example: xcrun swift file_name.swift More info here: https://developer.apple.com/swift/blog/?id=7 http://stackoverflow.com/questions/24011120/how-can-i-use-swift-in-terminal 
Thanks! That's exactly what I was looking for. 
OK so I realised I needed two types of cells, so I've done that and also made imageViewCustom it's own thing (not = self.imageView!): class tableViewCellPicture : UITableViewCell{ var imageViewCustom: UIImageView = UIImageView(frame: CGRectMake(0, 0, 320, 320)) override init(style: UITableViewCellStyle, reuseIdentifier: String!) { super.init(style: style, reuseIdentifier: reuseIdentifier) } required init(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } override func layoutSubviews() { super.layoutSubviews() println("running layoutSubviews") imageViewCustom.layer.borderColor = UIColor.grayColor().CGColor imageViewCustom.layer.borderWidth = 1 imageViewCustom.contentMode = UIViewContentMode.ScaleToFill self.contentView.addSubview(imageViewCustom) //Setting contraints test imageViewCustom.setTranslatesAutoresizingMaskIntoConstraints(false) let views = ["view": self, "new_view": imageViewCustom ] var constH = NSLayoutConstraint.constraintsWithVisualFormat("H:|[new_view(320)]", options: nil, metrics: nil, views: views) self.addConstraints(constH) var constW = NSLayoutConstraint.constraintsWithVisualFormat("V:|[new_view(320)]", options: nil, metrics: nil, views: views) self.addConstraints(constW) The first row is staying the same size as the other rows now, so the imageView overlaps rows 2-5. This is the first time I've tried adding constraints - is this what you meant? They're auto-layout constraints. Thanks for your help, I think I'm nearly there!
Why not make your datasource an array of arrays? Where each array represents a section and contains row data? Then number of sections will be the number of arrays, and number of rows will the be number of items inside the array for that section? Then in your add method, you grab the last item in your array, check if the count is less than 5, if it is add to it, if it isn't create a new array, add an item then insert it into your section array. 
Don't use layoutSubviews to add the additional subview or the constraints. This gets called many times throughout the life of the view. For UIView subclasses you should add any additional views and constraints in one of the init methods. If you're doing this in a viewController then viewDidLoad would be the place to do that. In your UIViewController subclass are you implementing tableView(_ tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -&gt; CGFloat? If you're using autosizing, try implementing sizeThatFits(_ size: CGSize) -&gt; CGSize in this tableViewCellPicture and return the size you want (320,2 320) 
Since they are in a tab bar controller, I assume you just want to switch tabs? I think there is a setSelectedIndex method in UITabBarController.
Apologies in advance for not directly answering your question with code. This is the first time I've ever tried to help anyone online with coding hah. You should definitely look into the Navigation Controller. To summarise it (badly), every time you move to a new view controller, it stacks it on top of the previous view controller. So the view in which the user can see represents the view on the top of the stack. So to move backwards through the views you can simply pop (remove) a view controller from the top of the stack, and as such you'd see the view controller placed underneath it. These links may help you. http://makeapppie.com/2014/09/15/swift-swift-programmatic-navigation-view-controllers-in-swift/ https://www.youtube.com/watch?v=AQXWsDNno8o Ultimately, navigating backwards is just a case of calling the pop methods of the navigationController.
It just says "The operation couldn’t be completed. (NSURLErrorDomain error -1009.)"
You might check out Unity which does a lot of cool game things and will compile to iOS.
Or Unreal Engine 4. While unity may be a bit better for mobile games, UE4 gives you all the source code so you can see everything going on, and there are more built in free tools that can help you. 
Remove the `...` then? Not sure why you added that in. ingredientText.appendFormat("%@\n", ingredient)
Then I still have an error because that is part of the argument that appendFormat requests. ingredientText.appendFormat(format: NSString, args: CVarArgType...) If you remove that line, it gives the following error: Type 'AnyObject' does not conform to protocol 'CVarArgType' 
I just finished the Swift Basics on Treehouse using their free trial. I'm glad you recommended it, it's a great course. I would also recommend Swifty (iPhone app $2) for the basics. Thanks for the article! 
The format approach shouldn't be needed anymore: let ingredientList = [ "Butter", "Milk", "Chocolate" ] var allText = "" for ing in ingredientList { allText += "\(ing)\n" } println( allText ) Anytime you see a loop, there's a good chance you can change that to a map or reduce operation, which is a more functional way of thinking about the operation: let ingredientList = [ "Butter", "Milk", "Chocolate" ] let ingredientText = ingredientList.reduce( "" ) { ( acc, val ) in return acc + "\(val)\n" } println( ingredientText ) 
Aah thanks for pointing that out. Didn't know that! It's working like a charm now :)
You're close. The type for your go function is in the form of `() -&gt; ()` because there are no parameters and no return type. You have to create a variable that holds the type `[() -&gt; ()]` because you want an array of functions. Here's the code: func go() { println("Hello") } var array:[()-&gt;()] = [] array.append(go) array[0]() Or you can let Swift's type inference determine the type of the array for you like so: func go() { println("Hello") } var array = [go] array[0]() 
For #2 I would browse http://www.raywenderlich.com/ where there are lots of simple swift game tutorials for a variety of popular game types. I don't know of one that is similar to that game, but you will definitely find more examples to compare/contrast to FlappySwift.
http://stackoverflow.com/questions/28974926/ios-8-2-not-supported-in-xcode-6-3-beta/28975053
Damn, I suspected as much. Thank you for finding that. I was holding off on flipping to the latest beta but for some reason... I guess I just did it anyway. Oh well, my app isn't Store-ready yet, hopefully the latest beta goes release and it's all sorted before I'm ready to submit...
Sorry, answered my own question - timeIntervalSinceDate is not a type method but an instance method.. and the error message is reporting the name of the function itself... which is very confusing.
I didn't review udacity yet nor do I know someone who has. Do you have a link to a particular course? I'd like to take a look.
thanks for the advice I just did as you said, the gif appeared on the iOS simulator but it was not moving! any ideas?
Oh sorry, this is how I did it for a png. I'll look around and let you know.
What I'm trying to do is create a cell with a status in it and I would like a uilabel to be right beneath the last line of text. However the status length varies from 0-220 characters. 
Did you make a bridging header for your project? If not, check out this link: https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html And then put the following line in your bridging file: &lt;#import "APAddressBook-Bridging.h"&gt; Without the &lt; and &gt; (sorry I don't know how to put code in reddit)
Thanks! I'll try to wrap my head around what's happening and give it a go!
I agree with you but "Swifty" is a pretty amazing app. It teaches you the basics starting with things like variables and constants and gradually gets more complex. Though it is short and doesn't go over a lot of concepts it is a really good app to get started with.
I put the code for the iads in the gameviewcontroller. I keep getting an error when I add the SKProductsRequestDelegate, SKPaymentTransactionObserver to the GameViewController class. It says "type GameViewController does not conform to protocol SKProductsRequestDelegate. "
I forgot to mention I added a bigger version of the retry image named retry@3x but then deleted it. 
NSArray is an immutable array. Remove the 'as NSArray' at the end so you get a mutable array instead.
You don't need to insert a valid url at this point, just insert "http://" for the time being and update it later.
A toggle maybe? try putting a UIButton on a tableviewcell and make the button dynamically add another row below with an UIDatepicker **edit**: just like in the calendar app
How are you implementing the code? I just tried it and it is working fine. You have to add "UIImage+Gif.swift" to your project. It is an extension of UIImage and with that extension you can import and play gif-images :) 
If you're using parse then you won't be interacting with the database like you would with Core Data or SQL. Everything is built around the PFObject using PFQueries to retrieve data. I've been playing around with Swift and Parse recently so drop me a message if you need a hand. I find the [docs](https://parse.com/docs/ios_guide#top/iOS) are pretty concise.
I found out what was wrong. Turns out that everything was working fine in terms of the code, the problem was that some of the table view wasn't showing in the simulator so I couldn't see the delete button. Hahaha yes I know, rookie mistake. If anyone ever seems to come across something like this, turn your simulator into landscape mode and see if your swipe to delete action will work then, and if you are using auto layout, ALWAYS make sure your constraints are set before testing!
Hm, you've convinced me to give Carthage a try then. I've been having trouble with CocoaPods all week (it works when adding it to a fresh XCode project, but just won't play nicely with my existing project) and playing up with the source control. I didn't like the drag-and-drop aspect of Carthage but if it just works I'll be happy.
Thanks for that, I'll look into that as well. 
Realistically, focusing exclusively on *any* single language is a bad move for your career. You want to be a programmer, not an XYZ programmer. Swift is also less than a year old, who knows where it'll go in the future.
Swift isn't iOS only - it's also for OS X! Personally I know Java pretty well and have worked on a large scale app written entirely in Swift (and done some Swift in smaller apps) but wouldn't call myself an expert in the language. I dislike Java strongly and have more fun writing Swift (and ObjC for that matter). Java probably has a brighter near term future in business though.
Apple has sample code: https://developer.apple.com/library/ios/samplecode/DateCell/Listings/ReadMe_txt.html It's in Objective-C, but a quick scan of the code and there's nothing that can't be translated into Swift.
Why not both?
I know Java and Swift. Learn both. And learn 3-4 more other languages. Then keep going and learn more. Only the worst programmers stop learning new languages. You only need basic competency and some exposure to real projects prior to working with a tool. You can't fake the real experience of real work. However you will gain great benefits applicable to all work by exposing yourself to many new tools and libraries and ways of accomplishing tasks. 
JavaScript. But for realz
Thank you for this, I was vaguely aware of size classes but had never really looked into it. Good reading :) 
Honestly they are really similar. Just the touch libraries and a few small differences like NStableView vs UITableView. If you can follow an iOS tutorial you can follow an OS X tutorial. My advice is to just dig in and make it happen
The Mac stuff has been around much much longer, so there's a lot of existing resources; problem is, they're all in ObjC. Personally, my take would be that learning ObjC well enough to understand them would be worthwhile. It's really not a difficult language to pick up the basics of.
Best answer you can get. Also once you get most of one language down, switching to another isn't too bad. I know about 6-7 languages pretty well and any issues I comes across are well documented online
Google objective-c method swizzling.
Thanks that what I need
I love the extra power and flexibility of Objective-C but Swift + Playgrounds enabled me to go farther in figuring out all the *Kit APIs in just a few days than Obj-C did in months. Everything just makes sense. The language itself is perfectly ready, but the tools definitely need some catching up (all those Xcode soft-crashes ugh). I don't think you don't need to worry about how much Obj-C code already exists in your organization, as you can freely mix .swift and .m files in the same project.
If you're curious what those functions do check out CGGeometry.h CG_INLINE CGPoint CGPointMake(CGFloat x, CGFloat y) { CGPoint p; p.x = x; p.y = y; return p; } CG_INLINE CGRect CGRectMake(CGFloat x, CGFloat y, CGFloat width, CGFloat height) { CGRect rect; rect.origin.x = x; rect.origin.y = y; rect.size.width = width; rect.size.height = height; return rect; }
NVM... I found out that I'm really dumb. So the scrolling was possible, but I have been trying to use the [scroll bar on the right](http://i.imgur.com/rndeeXe.jpg) and I guess this scrolling is not 'table scrolling'. I guess the scroll bar on the right is scroll for the 'simulator' and not for the 'table' To scroll my table, I had to click on the screen and move my mouse upward... I guess I have to figure out how to make 'table scroll' to show up now...
Oh yep, good call. I think it was autocorrect from my phone :(
It's a visual indicator of how much further you have to scroll. Can you describe what you are looking to do more verbosely? I'm not sure what you are looking for. Maybe an example in an app that we might know?
Yeah I agree, I find your way cleaner. I was confused when he didn't end up there by following the steps he was taking us through.
Why are you using `NSNumber`? Any struct or class can be in an array, and Swift will translate basic data types (`Int`, `Bool`, `String`) into a format that can be encapsulated into an Objective C class.
You can also use C-style for loops in Swift: for var x = 0; x &lt; 10; x++ { // Do Stuff } Also note that the `...` range operator is inclusive; the exclusive range operator is `..&lt;`. Thus the loop should read: for x in 0..&lt;10 { // Do Stuff } If you want to iterate over the indices of a collection, you can use the `indices` [global function](http://swiftdoc.org/func/indices/): let array = [ "apple", "orange", "pineapple" ] for i in indices(array) { // Do Stuff } 
Thank you, this is good. I actually have the same experience with codecademy, it's fun to "learn" like that. But I didn't know when to use it like you said. I hear you and to help you some if you want to integrate with social networks and such you can use www.parse.com. They got a great documentation how to use their code in your project. When I used it a couple of months back the documentation wasn't fully translated to Swift but maybe it has been updated now. Parse let you integrate with facebook, twitter, google+. And help you with the backend. But absolutely this is a good subject to bring up. Just one question, what do you mean by "UI elements are connected to your program"? 
Hi, I'm on my phone so this will be light on specifics, but hopefully I can give you some good directions to search out. You don't necessarily have to do this inside the update function. One method is using SKActions - there's a wait (or delay, I'm forgetting the name) action that will wait the specified amount of time, and another action that will run a block of code where you can re-show your ship. Put them into a sequence action and you should have what you need. So on button tap you hide the ship and run the SKAction sequence. After five seconds it will run the block of code to show the ship again. Hope this helps!
The issue I have with this is that I don't want the player to be completely gone, I want a low opacity of player to show that you're 'invisible' from the enemies but can still move around
Thanks. I am aware of those things, but I don't think they're particularly relevant to the thread, lol. OP asked for help converting syntax from Java to Swift.
Two things that are confusing me now - Protocols and delegates. Just cant seem to get me head around them! How the file structure of an app should look like in xcode.. When do i make a new swift file? Where do I put all of my images? Do I make a new viewcontroller file for every viewcontroller, do I make a new cocoa file for every class I make?
Thanks guys, but I am familiar with the syntax - my question was really about whether anyone has stared work on a converter tool. I think i can whip up something using the Java ANTLR grammar pretty quickly that does a quick and dirty first pass but just wanted to see if there is already a project going.
That iterates over the elements of the collection; my example was iterating over the *indices* of the collection (which is sometimes necessary).
I'm honestly a little bit of a noobie in Swift. Can you give me your code snippet how you implemented the UIImage into your View Controller? I added the GIF to my project and was able to add it as an UIImage view item in my main storyboard. However, it is just a motionless picture. Any advice appreciated! Thanks! :)
Using the `enumerate` function on an array returns a tuple with the index and value.
Sorry for the late reply. I would definitly recommend using parse for setting up a database in the backend. The platform is so well documented even a self-taught coder in his/her early stage could comprehend it! 
So it does. I guess I'm one of today's [lucky 10,000](https://xkcd.com/1053/). There *are* instances were you'd only want the indices of the array, but those are not particularly common.
You might want to check out NSUserDefaults because it seems to me that it would be a better approach for storing data throughout the app, especially if you want to have the results saved for later on. But if you want to pass the data with segues than the solution would be to create a property in the destination controller which you would set in prepareForSegue function.
Is there a way to save the data using NSUserDefaults through different view controllers? If the user pressed button 1 in the VC1 and button 2 in VC2 how do I know in VC3 that the user pressed buttons 1 and 2 in the previous 2 VCs? 
Check out the method prepareForSegue. You can make a reference to the new view controller then set values in it to store which button was pressed. 
I'm pretty sure you'll have to send a message (AppleEvent). You can't get a reference on another executable like that (it sounds like you're trying to get a handle on your app's main window from within the service?). There are other means of interprocess communication, but AppleEvents are easy. 
My hunch is that the approach you are describing is most similar to that of Google's j2obc: https://github.com/google/j2objc. If anyone is going to get started on Java -&gt; Swift syntax conversion, I'd expect them to be somewhat involved in that project already.
This is what prepareForSegue is for, OP. Use it!
This is great thanks!
How often will your updates be? Great little tutorial so far :-) 
First you need to decide what kind of data you want to store. You could put tags on buttons and save the pressed button tag or you could just get the title of the pressed button. After that you could create a dictionary that would store your results in a way that key would be string and value also string if you decide to use button title. For the keys you could use something simple like "First","Second","Third" for each view controller. So each time a user makes a selection you will get dictionary you created from NSUserDefaults and set value for the key which corresponds with current view controller.
I'll keep an eye on them! one recommendation though: What do you think about starting the tutorial with the final result? If you put the gif of what you're trying to accomplish at the beginning we don't follow the tutorial blindly. Keep it up :)
[Intro to in app purchases](http://www.raywenderlich.com/21081/introduction-to-in-app-purchases-in-ios-6-tutorial) [App purchases dev guide](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Introduction.html)
As often as possible. Realistically 1 or 2 a month. I'm going to try and get a few together quickly to get folks off the ground with this series. 
Passing objects (e.g. arrays/dictionaries/structs) by reference (currently, they get copied by value). For example: var a = ["hello"] //create an array, with the first element being "hello" var b = a //assign b to a a[0] = "goodbye" //change "hello" to "goodbye" println(a[0]) //"goodbye" println(b[0]) //still "hello" Not sure if it's currently possible without creating your own class.
I developed my entire game and had multiple versions approved on the app store before I ever added any IAP to it. So yes, it's totally possible to add a new menu and then add new functionality to your app... One example of mine was removing ads from the game for $1
I have this code where if you tap on the left side it moves to the left and if you tap on the right side it moves to the right. Could I convert this to a long press instead of a tap? Heres the code. if location.x &lt; CGRectGetMidX(self.frame) { hero.position.x -= speedOfTouch hero.texture = SKTexture(imageNamed: "lefthero") AudioPlayer.play() } else { hero.position.x += speedOfTouch hero.texture = SKTexture(imageNamed: "righthero") AudioPlayer.play() } 
I'm not sure what kind of affect you're trying to accomplish. Are you just trying to make the sprite continue moving until the touch event ends? If so you don't need anything other than the basic touchesBegan, touchesMoved, and touchesEnded methods. All you need to do is tell it to move by a certain x value in touchesMoved. Then as long as the touch event continues, the sprite will keep moving. The sprite will stop when the touch event stops. Use an SKAction for the movement and keep your basic logic to see which side of the screen the touch happens on. You can also keep the same exact logic inside the gesture listener if you want to use the long press gesture recognizer. The only thing I would change is using an SKAction instead of explicitly setting a new location. I would use ```moveByX:y:duration:```. Just use ```repeatActionForever``` to make it keep going until you tell it to stop (in ```touchesEnded```). Can't stress enough how valuable looking at the SKAction documentation is. It sounds like you are pretty new to this stuff. I'm not sure what else to tell you aside from actually writing the code for you, which would not help you learn lol. There are a ton of great tutorials out there for learning this stuff. Finding the exact behavior you want is just a matter of playing around and trying things. 
If you have a func changeValueByRef(inout i: Int){ i++} Call it with: var myInt = 1 changeValueByRef(&amp;myInt) println(myInt) // will now show 2. So by having inout in a func you can change the value of any type :) 
I've fixed this now... Event was missing an empty initialiser (init()). 
I would try the following: make your class use the AVAudioPlayerDelegate protocol in your class definition: class PlaylistDetailViewController: UIViewController, AVAudioPlayerDelegate { ... In the function playA assign the delegate @IBAction func playA(sender: AnyObject) { if let path = NSBundle.mainBundle().pathForResource("AviciiWakeMeUp", ofType: "mp3") { audioPlayer = AVAudioPlayer(contentsOfURL: NSURL(fileURLWithPath: path), fileTypeHint: "mp3", error: nil) if let sound = audioPlayer { sound.delegate = self // &lt;====== Assign delegate to self which is AVAudioPlayerDelegate sound.prepareToPlay() sound.play() println("Sound Played!!!") } } }
Why is it nil in the first place? I'm instantiating it, shouldn't that guarantee it's not nil? I also don't understand why it's returning an optional type there. If I use if let syntax, I'll still have a nil, I just won't assign the view, so my window will load blank. This code is in a Controller NSObject's awakeFromNib(). It's instantiating a ViewController and assigning the view it creates to a Custom View on the Main Menu. Having that controller return nil or not have a view when it instantiates confuses me and makes the code not work. 
ok, so I changed the type of currentController to NSViewController? and I'm still getting the same error: var currentController: NSViewController? = DownloadingViewController(nibName: "Downloading", bundle: NSBundle.mainBundle()) var v = currentController?.view I think the debugger says currentController has a value. Like everything in xcode, the debugger seems arbitrary and counter-intuitive. The value of currentController seems to be the word "Some" with no ability at all to browse to "View" and see if it has a value or not. I have no concept at all of what a Bundle is. The "Downloading.xib" file is owned by the DownloadingViewController class. Is that what you're asking?
The native arrays/dicts/sets in Swift have value semantics - if you need pass by ref use an object (like NSArray) or write your own wrapper class around the value array.
It's time to stop blaming the tools an recognize that you don't know the language at all. Go read Apple's free Swift book and get some basic understanding. You should know about Optionals. They are an integral part of the language. Apart from that, if you are still getting EXC_BAD_ACCESS but you are able to see that currentController is "Some" then these two lines of code are probably not the cause of your problem. Generally it's a good idea not to assume you know where the problem is so exactly when you're asking for help. Pastebin the whole class at least, assuming the error indicates this is the general area of failure, along with the error itself for the best chance at help. If you are still getting EXC_BAD_ACCESS but, what you say is true about currentController, then these two lines aren't the cause.
Why would he assign the delegate if he isn't implementing audioPlayerDidFinishPlaying() or audioPlayerDecodeErrorDidOccur()? This wouldn't fix any problem he's having.
As for the code, are you sure it's compiling like this? Did you type it into reddit by hand? There is a typo in awakeFromNib. You actually have awakwFromNib... and that would not compile. And what was the output from the crash? Did the debugger stop on one of these lines? Have you done a full clean/rebuild just in case that's out of sync? When you get EXC_BAD_ACCESS, it means you tried to access memory you're not allowed to. It's almost always an attempt to access memory at address 0 which is nil. The first line in your method here assigns a variable to the result of a constructor call that can fail and result in nil. But, it doesn't access that potential nil. The second line creates and assigns a variable that can also be nil because it's implicitly typed by the right hand side expression which results in an Optional because you used optional chaining (that question mark in there.) But, neither of those two lines actually tries to dereference/access the resulting potential nil values. In a playground I can do this: var currentController: NSViewController? = nil var v = currentController?.view and it is fine. Both variables are just nil optionals at this point. That's what I mean when I say these lines can't cause your crash. Maybe something in DownloadingViewController's init can, but, then I am not sure if the debugger would stop here or elsewhere. I still feel like important information is missing so all I'm suggesting is that, as shown, this is not the most interesting point in the code to be thinking about when trying to resolve this problem. You apparently do nothing at all with this view controller you've created. Did you leave something out? I think the place to look next is the initializer for this downloading view controller... As for the point of not knowing Swift... It's understandable that you don't know the language, that's why I suggest reading Apple's **FREE** Swift programming book available on the iBooks store. Again, it's free, and it's updated all the time and it's not huge and you can skip the appendices. Seriously, I think I get an update notification almost weekly for it, or at least, have in the past. Things seem to be stabilizing now. But, ignoring that you don't know the language then begging for help while complaining about the tools anyway makes you seem like a lazy, self-entitled asshole. Just so you know. Not that that's a rare breed amongst reddit programming subs :P
structs are intended to be passed as (copied) value. Arrays and dictionaries will be passed as references copies as long as you don't change their state, then they will be implicitly copied.
The dichotomy you're posing here is the issue. Going deep into one language doesn't preclude learning others. As someone who's been doing very deep Objective-C development for a decade or so, I *learn things I can apply to ObjC* when I learn things about Haskell, or Swift, or Ruby, or… Beyond that, the time I spent learning about languages like Rust meant that I adapted to Swift far faster than other Objective-C programmers, because I was already familiar with the concepts behind it.
ok, it looks like that suggestion lead me to the problem, but fixing it creates a different problem. When I put the breakpoint in, I noticed it kept calling awakeFromNib, like a circular reference. As it turns out, Downloading View references App Controller. If I remove that reference, this error stops happening. But that also removes DownloadController's ability to change the view, which is the only thing App Controller is used for. I assume I'm doing something fundamentally wrong here, which I is likely because the tutorial I'm using is for ObjC and I'm somehow failing to convert it to Swift correctly. 
I haven't seen all the code, but, my first guess would be that instead of referencing the common instance of AppController from the instance of DownloadViewController you are trying to create you are creating a new instance of AppController which is then recursively creating a new DownloadViewController, etc. and maybe eventually failing specifically because of that issue. But that's just a guess without seeing any code. The real issue could be a variation or something else entirely. Showing the DownloadViewController source might illuminate things.
You've stumbled upon something very cool with the Swift internal implementation, namely that [instance functions are just curried class functions](http://oleb.net/blog/2014/07/swift-instance-methods-curried-functions/)
Why wouldn't you use AutoLayout? If you don't use AutoLayout, you're opening the door to a bunch of micromanagement to duplicate what AutoLayout does very, very well.
Unless there is an API or a library for dealing with Excel, which I do not believe exists, unless it is a third party library, go towards the CSV file parsing method.
So I've stopped trying to do what the tutorial was showing, and just did it the way I would in C#, and it seems to be working, though I welcome your advice on if this is the best way or not. I've removed the reference to appController in the DownloadingViewController and instead have an NBObject? property on the DownloadingViewController that I have the appController set to self when it instantiates the DownloadingViewController. I then put all the code to change views (including the code we've been discussing in this thread) and wrapped the entire thing inside a call to GCD, so it would happen on the main thread. Visually, I'm getting the effect I want now. Let me know if any of that is stupid. Thanks for your help, I don't think I would have gotten this figured out without it. 
Oh this is a question not a statement Easy to implement yourself using scrollview or offscreen view that moves down when clicked. Alternatively you could try https://github.com/pixyzehn/MediumMenu
Yeah the problem I have free online tutorials is that they don't really give a good conceptual understanding or what's truly going on and how to build good software design and habits etc. although it's good information and I have done a bunch of them, I want to have something more in-depth that I can read and then be able to build a simple solid game, assuming that I digested the info and able to execute it properly. 
It's really hard to make any judgements without seeing the code. It is imperative to do UI state updates on the main thread, so, that's good that you're making sure to do that, but, depending on when/where you're calling for the change, it might be there already (most or maybe even all events/callbacks are invoked on the main thread, for example) but, again, couldn't be sure without seeing code. And the other thing is the nature of creating an object then setting a value that is a critical dependency as two steps. I personally find it's a much better plan to provide all critical dependencies as initializer parameters. However, in the AppKit/UIKit model, it's common for dependencies to be set after construction by the dependency resolution system (interface builder) so maybe it doesn't really matter in the long run in this case.
I bought the iOS Apprentice tutorials from their site and they were pretty awesome. So, yeah, go ahead, you won't regret it.
 import UIKit class DoubleComponentPickerViewController: UIViewController, UIPickerViewDelegate, UIPickerViewDataSource { @IBOutlet weak var doublePicker: UIPickerView! private var bread = ["Rye", "Pumpernikel", "Sourdough", "Wheat", "White", "Hallah", "Hallahback"] private var innards = ["Roast Beef", "Turkey", "Mushrooms", "the good kind of mushrooms", "Chicken", "Tuna", "Egg Salad"] private var breadComponent = 0 private var innardsComponent = 1 override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } // MARK: - // MARK: Picker Data Source Methods func numberOfComponentsInPickerView(pickerView: UIPickerView) -&gt; Int { return 2 } func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -&gt; Int { if component == breadComponent { return bread.count } else { return innards.count } } // MARK: - // MARK: Picker View Delegate Methods func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -&gt; String! { if component == breadComponent { return bread[row] } else { return innards[row] } } } 
You need to add the delegate methods for NSURLConnection for: - (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace { return [protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]; } - (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge { if ([challenge.protectionSpace.authenticationMethod isEqualToString:NSURLAuthenticationMethodServerTrust]) if ([trustedHosts containsObject:challenge.protectionSpace.host]) [challenge.sender useCredential:[NSURLCredential credentialForTrust:challenge.protectionSpace.serverTrust] forAuthenticationChallenge:challenge]; [challenge.sender continueWithoutCredentialForAuthenticationChallenge:challenge]; } obviously in there swift counterparts
Hmm. No dice there. I also found a script googling that supposedly helps but it didn't...
The problem is that the tutorial might be using the new beta version of Xcode which uses Swift 1.2 syntax for casting. Essentially, there's been a change where if you try to downcast and it can fail, you need to use either `as?` or `as!`. In Swift 1.1, it was okay to use just `as`, but because downcasts cause a crash if they fail, in Swift 1.2, Apple changed the syntax so that you have to be more aware that this can happen. If you're using 1.1, you can just change the `as!` to `as`. The reason you're "getting more errors" is because the compiler checks for errors from top to bottom, so if you have an error at the top of the file, it won't finish checking the rest of the file. Those errors were always there, but because you had other errors, it just didn't get to a point where it told you.
Check the version of Xcode you're running. If it's 6.2, you're on Swift 1.1. Right now, only the beta (6.3) will include Swift 1.2. 
The only thing different between production ads and test ads is the graphic you see. If interstitials popup randomly, it's going to happen in your live app as well. Banner ads are suppose to go full screen when you tap on them. You should only display an iAd banner if there is actually an ad in there though. If your banner is empty, it doesn't have an ad and you're suppose to hide it. I'd recommend reading [the documentation](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/iAd_Guide/WorkingwithBannerViews/WorkingwithBannerViews.html)
From an app building perspective: 0/10 because you haven't shown that you can turn technical knowledge into products. From a software writing perspective: 2/10 because books and tutorials don't provide any experience. You only have knowledge that an experienced iOS developer can get within a day Though 2/10 might be good enough if you need a job ;) My advice? Stop studying and start building apps. That's what counts. Nobody cares how many Xcode projects you have in your Tutorials folder. A link to the App Store that shows your name and an app is much more valuable. Even if it's something small that only has a couple dozen users. The problem with books and tutorials is that they teach technicalities. They start a new project for each chapter, they teach views and frameworks. They don't teach you how you design the bigger picture. They don't teach you how to maintain a project. They don't teach you all the tiny things that become important if your app is actually used by people. Tutorials teach you the easy 80% of the code. They leave you alone with the important 20%. You need experience to master the 20%. And you only get experience by actually putting something out in the world. I was like you when I started iOS development in 2009. I spent (today I would say wasted) more than half a year to read countless books and even more tutorials. My background was embedded development, which means plain C, bit toggling instead of GUI and 32kB RAM. So iOS was new, exciting and very overwhelming. I always felt like a shitty developer because there were so many things that I haven't read yet. Over the time I had a folder with literally hundreds of small tutorial style projects were I tried things. But I felt not confident enough to call myself iOS developer. One day I decided to start a real project. I actually just wanted to use an app from the store, but it was very annoying, so I decided that I want to make an app that works better. Just for myself, but in the end I put it in the App Store because it was way better than the existing app(s). Anyway, I learned more in 2 months of developing this one small real world project than I learned in the 6+ months doing toy projects. Some things are impossible to learn if you throw away your project every two days because you start a new chapter in the book. Today I use books and tutorials only as a reference. I own all the iOS by tutorial books from RW. But I would never try to read them front to back, I use them when I need to implement something that I haven't done yet. From a pragmatic point of view it doesn't make much sense to waste your time (and brain storage space) with stuff that you don't need to know in the forseeable future. Your knowledge about SpriteKit will be useless if you work on a productivity app. Your knowledge about CoreData will be useless if you work on a game. There is no need to be an expert in every framework. You just need the ability to learn when you need it. You obviously have these capabilities, so don't waste your time with learning more stuff that you don't need right now. Use the time to build something, and learn while building. There is one exception. WWDC sessions, I watch almost all of them that are related to my work. You should too.
Ok. Thanks
Doesn't exist to my knowledge. This is a killer missing feature
You're trying to use map to iterate over an array - that's what the "for" loop is for though. 'map' is for mapping values in an array to other values, but that's not what you want to do. In general, when using functional techniques to manipulate arrays etc. (e.g. when using map, filter, reduce), it makes sense to use immutable data structures. If you want to do something like 'x.removeElement(...)' or 'y[i] = z' and use 'map' at the same time, you're probably mixing imperative and functional paradigms, which is (imho) a bad idea.
But does it?
You could use appcode... But who does that. 
The interstitials ads only pop up when I open my app and then they don't show up until I close my app fully and open again. Is that normal?
There's also a working web version, with color coding, which the app lacks. http://i.imgur.com/VFca2NB.jpg http://swiftstub.com
navigation bars are by default translucent. You can set them on or off by: yourNavigationBar.translucent = true or yourNavigationBar.translucent = false If you want the nav bar to sit on top of the tableView, just place it below the tableView in the storbyboard hierarchy. Are you calling the Navigation Bar thru a Navigation Controller? 
Embedded navigation controller. And I meant transparent And I don't understand what you mean by under the table view
OK. for transparency: http://stackoverflow.com/questions/2315862/make-uinavigationbar-transparent self.navigationBar.setBackgroundImage(UIImage(), forBarMetrics: UIBarMetrics.Default) self.navigationBar.shadowImage = UIImage() self.navigationBar.translucent = true this should get you a transparent navigation bar. I am unsure what is causing the problem regarding the tableView. Are you extending it up to the top of the view in the storyboard? Perhaps you could post a screenshot of your storyboard. edit: also, read about how these things are supposed to work here: https://developer.apple.com/library/ios/documentation/WindowsViews/Conceptual/ViewControllerCatalog/Chapters/NavigationControllers.html 
~~Wow. I can't believe someone has the gall to charge for a web view.~~ Edit: I was on mobile before. I didn't realize it was the same guy that developed it. I thought it was some other dev that was selling a web view to someone else's site. 
Well thank you so much for showing me xctool. I was just having this issue last night trying to build with xcodebuild. This is much much easier. 
[Here](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/SysServices/introduction.html) would be a good starting point. An example of a program that uses Services would be [ManOpen](http://www.clindberg.org/projects/ManOpen.html), a UNIX manpage viewer originally for NeXTStep, but has been updated to work with OS X (the most recent version requires 10.4, but uses features available in 10.7).
Maybe I just don't see how to turn it on. If you look at the other screenshot I posted, you'll see it isn't color coded.
From looking at the documentation, it appears the color property has different effects based on the SKSpriteNode's texture property. If you are just trying to have simple shapes, why not use an SKShapeNode instead?
You're using an image for the Sprite's texture, so the Sprite is going to be the color of the image. I believe if you want to change it's color upon initialization, you'll have to tinker with its ```blendMode```. Do you use the scene editor interface at all? I'd very much recommend learning to use it while you're a beginner. It will shed some light on Sprites and their properties in a way that is very accessible. [I wrote a blog about it, if you need a jumping off point](https://dezwitter.wordpress.com/2015/02/23/spritekit-with-swift-introducing-the-level-editor/) -- people have said it's been helpful. In the level editor/scene editor, you can drag your Sprite onscreen, then tinker with all its properties before you write any code (see [this image](https://dezwitter.files.wordpress.com/2015/02/nodeinspector.png) from the aforementioned blog post). You will see what the ```blendMode``` property does, the choices you have, and how it affects your Sprite. Also, when using the scene editor, the three lines of code you wrote are no longer necessary, you simply need a reference to the Sprite you already created and configured in your scene. It leads to much cleaner and more direct actual code. There is also an SKAction called [```colorizeWithColor:colorBlendFactor:duration```](https://developer.apple.com/library/prerelease/ios/documentation/SpriteKit/Reference/SKAction_Ref/index.html#//apple_ref/occ/clm/SKAction/colorizeWithColorBlendFactor:duration:) that you could look into, but that's intended to be used as an action (i.e. in response to an event or something). Of course you could just do it once when you create the Sprite and call it a day. Good luck!
Yes I made both swiftstub.com and the mobile app. I tried to name the app Swiftstub too but apple said that I can't have the name Swift in the app's title. 
Great. Personally, I would love to use this for all my mobile coding needs. Any chance we can eventually export text files to Dropbox and/or Google Drive? I could always highlight and copy/paste to an email, but something like a save feature would be beautiful. :)
Absolutely. I am working on a way to get files saved and share code with others. Also some other super cool features. 
Very cool! How does it actually work? The app posts it to your website and the website executes it on a Mac server?
My brother is sitting in his house, I pay him 5 bucks an hour to type in peoples Swift samples into his computer.. he copy and pastes it back to you. We are hoping the ROI will be high enough.
You rock, man. Make the super cool features paid if you want. I'll pay just to support the development. Mobile coding is definitely something I've been waiting too long for. :) 
Thanks. Just spread the word and everything will be easier.
Hi, I'm not using SKShapeNode because I need to morph some of my shapes, and read somewhere that its note quite easy (performance-speaking) to use ShapeNodes.
Thanks for your answer. I already try the blendMode without success, and also the colorizeWithColor method. I will read your blog post and try to use the scene editor, thanks for the tip. :)
I answered your question in the iOSProgramming sub ? You are using the deprecated method for: - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(NSDictionary *)editingInfo NS_DEPRECATED_IOS(2_0, 3_0); you are supposed to use: - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info; and then get the image via: UIImage *image = [info objectForKey:UIImagePickerControllerOriginalImage]; EDIT: IF you dont need the largest version/original then there are other versions available // info dictionary keys UIKIT_EXTERN NSString *const UIImagePickerControllerMediaType; // an NSString (UTI, i.e. kUTTypeImage) UIKIT_EXTERN NSString *const UIImagePickerControllerOriginalImage; // a UIImage UIKIT_EXTERN NSString *const UIImagePickerControllerEditedImage; // a UIImage UIKIT_EXTERN NSString *const UIImagePickerControllerCropRect; // an NSValue (CGRect) UIKIT_EXTERN NSString *const UIImagePickerControllerMediaURL; // an NSURL UIKIT_EXTERN NSString *const UIImagePickerControllerReferenceURL NS_AVAILABLE_IOS(4_1); // an NSURL that references an asset in the AssetsLibrary framework UIKIT_EXTERN NSString *const UIImagePickerControllerMediaMetadata NS_AVAILABLE_IOS(4_1); // an NSDictionary containing metadata from a captured photo
I think it is likely that Xcode 6.3 will be launched around the time OS X 10.10.3 ships. That could be around the time of the Apple Watch launch or not. There's nothing really specific to the Apple Watch in it but there are new API for the force touch trackpad that should probably be released before or around the same time as the new Macbook so I would think that is the likely target.
Wait... really?
yes - I understand. The code I gave you will accomplish the transparency part. But I think you will need to post a screenshot of your your actually storyboard layout in order for anyone to help you. Much of what happens is determined by how you are layering different elements in IB. We might even need to see the code that you are using to generate the table. The devil is in the details. Also - you need to read up on the human interface guidelines to make sure you are conforming with what apple expects or you could run into trouble when you go to get your app approved. 
Nope :/
Anytime in April would be very welcomed by me. Fingers crossed.
Yeah the beta 4 API diff was pretty thin. That's usually a good sign, but not a definitive one.
Does your button in the storyboard also link to the segue in the storyboard as well as the function buttonPress? That could be causing the error you're seeing.
Thank you, it works!
This question is off topic but I wanted to know if you knew how to add this type of touch in this game? I added some code to my touchesMoved and I get close to what I want its just that I have to use a swipe and hold on either side instead of just a touch and hold to move my node. This is the game that has the touch method I want in my game. If you could help I would really appreciate it. Thanks! https://itunes.apple.com/us/app/run-bird-run/id951346475?mt=8
Just got the book and finished chapter one. It's awesome and exactly what I was looking for! If you want to learn how to build iOS games with swift the right way and most efficient way then buy this book! 
Yep. 2 separate apps. My personal recommendation is to make one app with in-app purchases though -- you'll undoubtedly get a much higher conversion rate. 
I thought Apple stopped allowing a free and premium app now. It has to be one App with a purchase to access premium features 
Could I make my free app with ads and the paid one without ads? 
Absolutely. In fact, that's usually the reason people make two versions. 
Okay thanks for the help! 
Yeah, it works, but you need to be careful with reference cycles. Example: class B { var closure: (()-&gt;())? = nil } class A { let b: B = B() init() { b.closure = self.foo } func foo() {} } If you instantiate A, it will never be deallocated, because A holds an instance of B via the property, but B also holds a reference to A through the self that is implicitly captured by the closure. Unfortunately, this is frequently what you want when working with delegation stuff (eg., B could be some view, A is a controller, the controller holds the view as a property but also wants to be notified about stuff by the view through the closure). In that case, you need to write 'b.closure = { [weak self] in self?.foo(); return }' to avoid the retain cycle. It's quite unfortunate, the other syntax is so nice - but it just so happens to capture self strongly. 
Functions are nothing more than syntactic sugar for named closures. I made an interesting writeup a while back about another use for closures: closure optionals as a [workaround](https://www.reddit.com/r/swift/comments/2y26w2/optional_methods_in_protocols/) for optional protocol methods. Closures are incredibly flexible and well-integrated into the Swift type system.
Do you want to talk about what's logical, or about what Apple allows? Because this discussion is about what Apple allows. I just launched 3 versions of an app, differing only in the amount of content, at price levels of free, cheap and expensive. 
Not sure if it's okay, but the app does say SwiftStub when installed / viewed on the home screen. If not "okay", your next update might be rejected by a more observant reviewer. 
Are you sure you need arrays? Do you care about the order of the elements, or just whether a certain element is in a collection? I'm asking because usually, when I try to perform this type of operation, I'm interested in the latter; Sets are the appropriate data structures for that, not arrays. Example: let a: Set&lt;Int&gt; = [1,2,3,4] let b: Set&lt;Int&gt; = [1,2,3] if a != b { let difference = a.subtract(b) // difference is {4} (i.e. the set that contains 4) }
I think you could use a protocol class foo { protocol myEnum {} enum A : myEnum{ case Bar } enum B : myEnum{ case Baz } } func getEnum(input: foo.myEnum) { }
Some thoughts: If you want to start with Swift, and you know a bit about C, Objective C could be a good starting point, as it is "C with SmallTalk"(As I've heard it called). It is less likely to screw up pointers to Objective C objects, as Objective C uses a retain-release cycle, which does allow for delayed release via `autorelease` and an autorelease pool. Objective C is object-oriented, but its take is different than C++. For the most part, you don't need to deal with pointers in Swift, unless you really, *really* want to. Swift, like Objective C, only has single inheritance. You can have classes conform to protocols. You can also extend classes with your own methods, either by using `@interface AClass(YourOwn)` (Objective C) or `extension AClass` (Swift).
I think you could do it with optional arguments: func getEnum(_ a: A? = nil, _ b: B? = nil) { if let aValue = a { } else if let bValue = b { } } Then a call to: let v = A.xxx getEnum(v) ought to do the right thing. On the other hand, this is kind of silly because method overloading would solve this directly without any shenanigans.
Unfortunately, I think Swift doesn't like protocols getting declared within class... It is giving me an error: "Declaration is only valid at file scope"
Interested in feedback and implementation suggestions, thanks!
A buddy of mine wrote [this book](http://www.apress.com/programming/ios/9781484203774?gtmf=c). Haven't had the chance to read it yet, but I know from working with him that he knows his stuff.
I think I'll fix that. 
It's a way of configuring and laying out native iOS elements using Javascript. You'd use it if you really like Javascript and don't really need native code except a few UI controls and other limited hooks provided by the framework.
I would like to point out that there is already an existing framework that also does what React does called [Titanium](http://www.appcelerator.com). It's also worth taking a look at, especially if you like JavaScript but isn't very interested in React. Another great thing with Titanium (and probably React too, I haven't looked into it) is that it's easy to extend with modules, if you want to extend your app with native functionality that the framework doesn't already provide. So in a way, you're never locked into what the framework can do.
Does Titanium support using React.js proper for layouts? To me the major benefit of React is the idea of "view as a function state" - if Titanium can't replicate that I wouldn't really be interested in it myself.
What about repeated elements? For example, let oldArray = [1,1,2,3,4] let newArray = [1,2,2,3,4] What result do you expect here? If you don't care, or if this can't happen, why not: let result = newArray.filter({ !contains(oldArray, $0) }).count EDIT: change variable names.
His example works (if you're using Swift 1.2). Just use let a: Set&lt;YourType&gt; = [ banana, apple ] 
I'd suggest having a look here - http://www.raywenderlich.com/68613/create-paid-lite-version-iphone-app
I have another question. Do I have to make a restore ads button if my no ads button handles the restore func also? I pressed on the no ads button after buying it the first time and it says I could get it for free. So do I have to make a seperate button for restoring the purchase? 
Can you rework it to use NS_OPTIONS instead of NS_ENUM?
.removeAtIndex() is a method call. All method calls use parentheses to pass in their parameters. You use brackets to access the data in the array at a certain point. For example: var x: Int = arr[10]; // will set the int variable x to the value at the 10th index of the array named 'arr'. 
Yes and no. Yes you can learn by example. Simple way is to type what you want as keywords into Google and start there. E.g. "Swift method return array" or whatever you want to find out. 90% of the time what you want is on stack overflow. The bigger picture you want to learn about MVC and how to structure a program. This is much harder to learn by looking at what other people wrote because while the code is there, what not be obvious is why it is structured in the way it is. Depends on the programmer and if they document as they go as well. So yeah, you can easily learn snippets but you might have a harder time putting them all together. Check out the Stanford courses on iTunes U and that should fill in the blanks. edit: words
I was following a tutorial in Objective-C and i converted it. The tutorial used NSMutableArrays etc. I will try using stanrd ones though
Have you looked at the documentation? Looks like you are missing the second parameter, there is no overload of runAction that takes one parameter. https://developer.apple.com/library/prerelease/ios/documentation/SpriteKit/Reference/SKAction_Ref/index.html#//apple_ref/occ/clm/SKAction/runAction:onChildWithName:
Thanks, i just started going through a few tutorials, and the code is pretty easy to follow, but i was having trouble understanding the code architecture. I'll look into the Stanford course next!
Thanks anyway, I have figured out how to do this using an NSTimer instead. Seems silly to use SpriteKit just for a timer.
You can't add to the emoji selection because the emoji displayed is determined by the receiver, not the sender. Also, it's not determined by Apple. It's an open standard. When you send someone a text message, you're not sending images of the characters. For example, if I text you the letter 'a', I'm actually sending you a number (in this case,0x61). Your phone, whether it is an iPhone or Android or whatever interprets that to mean the letter 'a'. Emoji work the exact same way. When I send someone a smiley face, I'm just sending a number, which their computing device interprets and displays accordingly. The images are determined by the Unicode consortium, though each platform can create their own versions based on the descriptions. With iOS 8's new custom keyboards you *may* be able to create a keyboard that sends custom png files, but those won't inline with text. They'll be treated as images (with the formatting and data implications that go along with that).
#####&amp;#009; ######&amp;#009; ####&amp;#009; Section 3. [**In the Unicode standard**](https://en.wikipedia.org/wiki/Emoji#In_the_Unicode_standard) of article [**Emoji**](https://en.wikipedia.org/wiki/Emoji): [](#sfw) --- &gt;Hundreds of emoji characters were encoded in the [Unicode Standard](https://en.wikipedia.org/wiki/Unicode_Standard) in version 6.0 released in October 2010 (and in the related international standard [ISO/IEC 10646](https://en.wikipedia.org/wiki/ISO/IEC_10646)). The additions, originally requested by [Google](https://en.wikipedia.org/wiki/Google) (Kat Momoi, [Mark Davis](https://en.wikipedia.org/wiki/Mark_Davis_(Unicode\)), and Markus Scherer wrote the first draft for consideration by the Unicode Technical Committee in August 2007) and [Apple Inc.](https://en.wikipedia.org/wiki/Apple_Inc.) (whose Yasuo Kida and Peter Edberg joined the first official UTC proposal for 607 characters as coauthors in January 2009), went through a long series of commenting by members of the [Unicode Consortium](https://en.wikipedia.org/wiki/Unicode_Consortium) and national standardization bodies of various countries participating in ISO/IEC JTC1/SC2/WG2, especially the United States, Germany, Ireland (led by [Michael Everson](https://en.wikipedia.org/wiki/Michael_Everson)), and Japan; various new characters (especially symbols for maps and European signs) were added during the consensus-building process. &gt; --- ^Interesting: [^Apple ^Color ^Emoji](https://en.wikipedia.org/wiki/Apple_Color_Emoji) ^| [^Regional ^Indicator ^Symbol](https://en.wikipedia.org/wiki/Regional_Indicator_Symbol) ^| [^Miscellaneous ^Symbols ^and ^Pictographs](https://en.wikipedia.org/wiki/Miscellaneous_Symbols_and_Pictographs) ^| [^Emojli](https://en.wikipedia.org/wiki/Emojli) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cpv724x) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cpv724x)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
So essentially if I wanted to create my own emoji images I would have to set up my own branch of Unicode and convince apple to use it? or could I create a keyboard that would reference it. Assuming this would only work on one platform.
Good luck with that 😉 Now that I think about it, if you really had your heart set on this, you could come up with and embed your own font, where you're basically hijacking existing Unicode codes with your own art. Think "Wing Dings". This would only work in your own app, though (or any other app where a developer decided to include your keyboard and font). If you're interested in learning more, I suggest reading Joel Spolsky's [The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets](http://www.joelonsoftware.com/articles/Unicode.html). *edit—This is also assuming app review allows you to hijack existing UTF characters. That is far from a sure thing. 
Store it in Keychain. 
This is a shame. I wanted to create an app where one could somewhat customize their own keyboard as they please, such as adding new emojis but it seems that my dream is lost
Thanks, Ill take this into mind while going through everything. I have looked at the iTunes U course but its for iOS, which again is something I'm trying to avoid since it wont be the same for OS X, which is what I am trying to develop apps for
Also, notice that you're passing an int (the index) and not an array. But mostly what /u/ReservoirDawg said.
Yes it will. It uses the standard(worldwide)telephone iso. 
Thanks I'll be able to test it in about 2 days
Xcode will automatically complete the method signature when you start typing its name (e.g., "retrieve") as long as the compiler can see a declaration for the method you're trying to override. override func retrieveImageForTime(time: CMTime, completion: ((CMTime, UIImage!) -&gt; Void)!) { } 
With this solution, you're losing type information; you'd probably have to cast in any method that uses myEnum, because the protocol doesn't expose any information...
They seem to be pushing it very hard – I reckon 6.2 was holding things up a bit because of the Apple Watch work, and the Swift 1.2 changes were probably being held back for the Watch + 1 release. My estimate: in the next four weeks.
Thank you very much for giving it for free. any chance you can open source the code used in the project (and preferably on GitHub)?
That's a great idea – I'll get on it tonight. I have a version of the projects updated to Swift 1.2, but obviously you need the correct version to match Xcode otherwise it won't build. I might put the Swift 1.2 version into the 1.0 project but commented out, perhaps? That seems like a solution that suits both camps. Anyway, thanks for the suggestion!
&gt; I might put the Swift 1.2 version into the 1.0 project but commented out, perhaps? That seems like a solution that suits both camps. yup, I think that will do!
See [NSApplication.orderFrontStandardAboutPanelWithOptions()](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSApplication_Class/index.html#//apple_ref/occ/instm/NSApplication/orderFrontStandardAboutPanelWithOptions:) Most of the information comes from your application's Info.plist file by default. You can use the above method to customize its contents further. 
Thanks! Love the videos - I'm through 10 of them so far and they are very helpful
They are all linked from his website above. Go to the projects and each project has a separate link to the relevant video. 
&gt; Q: How come all this stuff is free? &gt; A: Originally Hacking with Swift wasn't free, but after about six weeks I had earned enough to cover all my costs so I wanted to find a way to make the same information benefit more people. My solution: put it all online. This wouldn't have been possible without support from all the purchasers, and I'm very grateful to them. Why would anyone *ever* buy anything from you again? All people have to do is wait a few weeks before you shit on your paying customers and make it free. Loyalty's a thing, you know. It'll get you a lot further than this shit you're pulling.
I'm sorry to hear you're upset; I guess you bought a copy of the book and/or video series. You wanted the book, you paid for it, and you got what you paid for, I hope. It's down to me whether I continue selling the book for the price you paid, whether I reduce the price, or whether I give it away, but none of those options take away what you bought: you still have what you paid for, and it's still just as useful. As for why people should buy from me again (not that I sell things very often!), I think the answer is simple: because I have demonstrated that I'm willing to work hard, produce quality content for a fair price, and yet am also willing to contribute as much as I can back to the community as soon as I able. Again, I'm sorry this has left you so angry, but I hope you can understand that making the book free wouldn't have been possible without very generous support from people like you. This means that not only did you get the books and videos you paid for, but you also contributed directly to supporting thousands of other people learning too.
You can call a method from another class by creating a shareInstance or theres two ways #1 - Creating a class variable Add this to the top of your 'GameScene', var GameVC = GameViewController() Then you can acces it's methods simply by doing this. GameVc.removeAds() # 2 - Otherwise you can just do this GameViewController().removeAds()
I haven't dived (dove?) into the series yet, but I want to thank you. While I've been having fun developing via the IDEA -&gt; PROBLEM! -&gt; GOOGLE? -&gt; STACKOVERFLOW! method (and I have an app in the App Store to show for it), it gets rather tedious and the knowledge has a tendency to drift away after I've put it to use. I'm always on the look out for structured, step-by-step courses (or what-have-you), since that gives me focus and a goal, rather than just me aimlessly wandering the Swiftian wilderness cobbling together projects from bits and pieces of code I find online. Having a solid foundation of understanding is always helpful. So thanks for giving this away, I can't wait to dig into it.
Great thanks!
Great thanks! 
I'm back! Can I just say that I love your writing style? I pretty much already know everything in the first project, but I'm reading it anyway because your writing is clear, succinct, and enjoyable to read. I don't care if I know it all anyway, I'm having fun hearing it all again told in an entirely different way than I've ever read before. Thank you!
This is awesome! Thanks so much for posting.
*response The line that "doesnt add anything" sure adds something - an element to the **copy** of the post array that you throw away immediately after (by never using it). If you create a copy of something and modify that copy, of course the original is unaffected. That would be crazy.
The Stanford class assumes you've taken introduction computer science classes so I can understand why it would be difficult coming into this class from a clean slate. The class itself has been pretty interesting and I believe iTunes U also hosts some of Stanford's other CS classes. If you're interested in going through this class anyway, you may want to take a look at the other introductory CS classes and then come back to the Swift class. One thing to keep in mind is that Swift is an evolving language. Swift 1.2 is going to be coming out soon and will break older Swift code. Apple has made no guarantees about backwards compatibility in Swift versions and has explicitly said that updates will break older code. So when you're looking for books, try to find the most up to date ones you can, otherwise you'll be learning on old syntax that might have changed and won't compile. Good luck and welcome to the language!
Im using a CGFloat for my speeds I dont think this will work 
I want the max speed to be 2.0 and the min to be 0.5. 
Titanium uses XML to bind data coupled with something comparable to CSS for layouts; they call their format for styling 'Titanium Style Sheets'. I personally will be using React over titanium for iOS Development because I enjoy javascript and React's rendering is really seamless. 
Check out this link for a function that will generate random CGFloats. Just set the speed of your nodes as you instantiate them. http://stackoverflow.com/questions/26029393/random-number-between-two-decimals-in-swift
Cast the result to a CGFloat
This is my experience too. The problems are interminable. And also frustrating. It makes learning the language nuances and APIs much harder, which I had to suffer through and which others suffer through on a daily basis. My productivity has never been lower. I can't find any fixes for this, myself, so I think our best bet it to wait for Apple to put on their big boy pants and finally release a usable IDE for their shiny new language.
Check under Product -&gt; Edit Schemes that the "Archive" scheme is set to build a "Release" application, then go Product-&gt; Archive, click Export on the latest entry, then choose "Mac Installer Package" or "Mac Application" and package it yourself (in a dmg for example) The one in the debug folder with have debugging symbols, so will be unnecessarily bigger.
Thanks you it works great!
Just put ios in front of it. Not a big deal, right?
Don't know why you're being downvoted... This is completely true.
The LinkedIn app is written completely in Swift.
Could be. I have no idea. I can't discern info about a complex system from one static, non-interactive screenshot. It's time for you to learn to use the profiler.
Yeah i'm trying to learn and don't know how to which is why i'm asking for help or someone to point me in the right direction. 
Apple spent a lot of work to make swift work smoothly with ObjC libraries, so there's no need to rewrite Cocoa. What would be the advantage of rewriting Cocoa?
Don't forget that without signing it as a registered developer, gatekeeper will complain on most macs out there.
I think it complains for the first time, later it should be fine right?
thats a great point, TIL.
Basically you want to check a bunch of those options over on the right like... Invert call tree, hide system symbols, etc. This makes it easier to see wtf is actually going on. That guys being pretty unhelpful, but just google for a tutorial on the profiler. 
I started with Stanford's course. Remember that it requires experience with programming and OOP concepts
this is great. Mozilla guys also offer mentorship. I will give a try. thanks for mentioning!
Your edit was correct. This is a cache issue. Every response from NSURLConnection is caching data. That's they way it was designed. I would suggest finding away to not call the API every second. This is bad practice anyway. Is there a reason your making a network request every second? Also there may be a way to dump the cache that you could perform just before each network call if that' call absolutely cannot be avoided Edit: Objc to dump cache: [[NSURLCache sharedURLCache] removeAllCachedResponses] Swift: NSURLCache.sharedURLCache().removeAllCachedResponses() Or something similar to this stackoverflow answer: [Answer in SO](http://stackoverflow.com/questions/405151/is-it-possible-to-prevent-an-nsurlrequest-from-caching-data-or-remove-cached-dat)
Okay thanks for letting me know i'm on the right track. The app checks your public IP address and displays it for you in the menu bar and the frequency of checking is changeable by the user. I wanted it myself to be able to check every second so I know the second my VPN drops. Is there a better way for me to do this? I'll see if I can figure out the swift equivalent of what you wrote in objc. Thanks heaps for the information. 
Sometimes it can be more complex than the following, but... did it work? If it did, you likely got it right.
I put my own book out there for free a couple of days ago: [Hacking with Swift](http://www.hackingwithswift.com). You can read it online or download it if you want, both are free.
This doesn't really make sense, as they should both behave the same. Could you expand on this? Maybe include some code as it's possible you were doing something incorrectly that would cause the odd behavior 
I also want to learn best practices, thats why I posted here for a review =)
1. Go to teamtreehouse.com/tracks/ios-development-with-swift. 2. Register, then complete the course during the free trial. (It's very possible, I did it) 3. Go to www.hackingwithswift.com - its all free now. 4. Profit
Facebook use ReactNative for F8 apps, Objective c for Groups (for example). Google is mainly using Java for IOS application.
i set the datasource and delegate to viewcontroller in the connections inspector panel.
Just getting your app reviewed/approved can easily take 2 weeks, fyi.
Yes
The value proposition of Swift is less bugs. If you don't care about software quality, feel free to ignore it.
So I guess you didn't read the console output at the bottom right? Gonna guess that the property "guess" isn't connected to anything and this is nil at this point. 
Look at the output in the console: Unexpectedly found nil when unwrapping an optional value. When you declare a value as a var like that, you're saying 'immediately evaluate this expression and give me the answer.' However, that UITextField is an IBOutlet, and you can't be sure that outlet will be anything but nil until awakeFromNib() is called. What you might want to do instead is something along the lines of this: var guessInt: Int? { return guess.text.toInt() } This means any time you call self.guessInt, you're actually calling guess.text.toInt(), rather than that being evaluated when your controller is instantiated. Keep in mind, though, that you can't call guessInt before awakeFromNib has been called.
If you look next to your @IBOutlet for your guess textfield you will see the circle is white not gray. This means that there is not connection to your textfield so that you are not actually getting the value it is always nil.
I understand that software quality is important, but from a business perspective the more buggy programming language obj-c has seemed to work for everyone just fine. I just don't see how having less bugs is a game changing value proposition, sorry.
The only thing I can think of is: Are you correctly assigning the `FBSDKLoginButton`'s delegate to be your class?
Hi! I've made the same things with my app. you can find it [here](https://github.com/pablosproject/Panda-Mac-app). The method you're using is valid if you have a valid Mac developer programs; if you want to make it works you have to use the classes in the LaunchService frameworks. Take a look at PALoginItemUtility class in my project and you can see how I can verify if my app is added to the login item and how to add/remove it.
&gt; I understand that software quality is important, but from a business perspective the more buggy programming language obj-c has seemed to work for everyone just fine. Do you run a fire-and-forget business? I maintain and support my apps for years. Every bug that I don't ship, saves money over the lifetime of the app. Diagnosing and fixing issues early is much cheaper than doing it late. 
That is awesome, much appreciated 
Just installed your app. It is just... so nice! Really nice UI, love it. Also there is so much to learn for me. How to organize code base, project, directories etc. I will try to learn those. Can you tell me how to create directory in the project? For example, you have Application, Controller, Library as different directories, even on file system. When I create `New Group` in Xcode, they are organised in different directories in Xcode project, but on file system they are not. I looked at the code, if I use the library `PALoginItemUtility`, I just have to call `PALoginItemUtility.addCurrentApplicatonToLoginItems()` to add and `PALoginItemUtility.removeCurrentApplicatonToLoginItems()` to remove? Woot, that just made my life simple. I think you should ship this as separate library. 
Learn Swift and skip Objective-C. Sure, people will tell you that there's a ton of old Objective-C code out there but that's not really a big deal. When you need to look at Objective-C code (which isn't often) you only need to be able to understand just enough to see what's going on. You'll be able to do that after spending some time with Swift. Swift is absolutely stable enough for you to learn.
Im good friends with a 3rd year CompSci who is writing his final year project in Swift. He says its stable but it is updated regularly which sometimes causes his apps to break. Just something to bare in mind
Great, thanks again! one more thing, you have committed your parse api keys to git. [link](https://github.com/pablosproject/Panda-Mac-app/blob/master/Panda/Application/AppDelegate.swift#L34)
here are the instructions if anyone is looking: http://stackoverflow.com/questions/6402661/workflow-to-create-xcode-groups-as-file-system-folders
It depends on your goal and if you already know C. If you already know C, then ObjC is not that hard to pick up. If you are starting from scratch, Swift will be easier to learn. If you are hoping to get a job programming iOS in the near future, you should really learn both.
Nice advice Zeke! Swift is definitely stable enough to learn it, but being able to translate objective-c is huge skill to have. There are way more objective-c (sdks, projects, etc) out there, and to be able to utilize those, you need to know at least how to read it. 
You should still learn Obj-C, until and unless Apple replaces Cocoa and Cocoa Touch with a new, Swift-based platform.
Then please tell me why companies are not rewriting their apps entirely from scratch using Swift if it is much cheaper fixing issues early than doing it late. The fact is, everything you can do with Swift, can be done in Obj-C in not more. 
Well I'm dumb cause you had the right solution and I just misunderstood you :/! Stackoverflow gave me some extra assistance here is the final answer for anyone else wondering: http://stackoverflow.com/questions/29401724/swift-ios-app-facebook-sdk-4-0-on-login-logout-methods-not-executing/
use the |-^-| in the GUI editor to set image constraints, add view.addSubview(*myView*) at the end of viewDidLoad
How do you know the helper app *isn't* launching?
Your code, frankly, makes no sense. Firstly, you seem to be declaring firstActivityItem twice, for what reason i'm not sure. Next, you are directly creating an instance of UIActivity, which you are not suppose to do. UIActivity is meant to be subclassed and not instantiated directly. Next, you are for some reason comparing this instance to a constant string. At this point, i'm not even sure how your code compiles, but according to you it does. In any case, there is no way this comparison can ever evaluate to true, so the subsequent block of code will never fire. Basically, you seem to be trying to check if the user selected twitter before you've even presented them with the UIActivityViewController. You need to remove the if around the rest of your code and instead use the [completionWithItemsHandler](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIActivityViewController_Class/#//apple_ref/occ/instp/UIActivityViewController/completionWithItemsHandler) property of the UIActivityViewController to check if the share completed via twitter. This handler receives an argument for the type of share action the user selected and also an argument to determine if the user actually completed the share operation or cancelled it.
Is it, though? Swift 1.2 is a huge advancement, but it's still in beta and it breaks backwards compatibility. Who knows when the next big break will be. I think we'll have a much better idea of where Swift is going after WWDC. Swift is clearly the future, but it's not completely baked. And that's fine. These things take time. But it looks to me like it's far from a no brainier. Anyone jumping into Swift now without having a strong Objective-C background should at least know what they are getting into. 
I wrote an NSTask within helper, which would create a file on desktop whenever launched 
Probably not. However, I bet that all changes over the next 6 months. Xcode 6.3 will be the release that brings enough stability and performance improvements to allow most developers to trust using Swift. 
Skip obj-c. It's prehistoric at this point. 
Maybe the NSTask is failing?
Yes and no and maybe. Just learn them both.
yes, that could be a reason too :|
Whoops! Thanks!
Api keys not need to be secure, they can be [exposed to public](https://parse.com/questions/replace-compromised-api-key-and-client-key). I fixed it by using [this guide](https://parse.com/docs/data#security), if anyone is looking for it.
We've only had two versions, and Apple provided a migration tool. I'm not sure that counts as 'regularly'.
No, you can use it even if you're not enrolled.
What are the constraints you added ? i expect they would be left/right height distance from bottom ?
Apple provided a migration tool for the changes from 1.1 to 1.2. There were plenty of changes from 1.0 to 1.1 and even more changes happened before 1.0. I basically went All-In on Swift a week after WWDC. Regularly is the right word. 
Ahhhh. Ok I'll pursue the method you outlined. I don't know any C, C++ or Objective-C so that will be my first step. If you can make me a class that detects a clap and notifies a delegate, then that would really give me a great place to begin with after I have an understanding of C languages. Thank you Opcao, you've been really helpful and I really appreciate it. Looking forward to your example! 
You do know you shouldn't have any secret keys in your app, right? They can easily be extracted. Your app should authenticate with a server, and the server has secret keys to interact with whatever service needs them. Anything you put in your app, whether in compiled code or text, should be assumed public information. 
I paid for this, and it's one of the best resources on Swift I've come across. Dives you right into advanced topics all while teaching you the basics. Can't recommend enough.
I can see it being useful for a web app – don't send the API key and have the web app directly query the API source, instead have the app query the server backend which queries the API. But for a native app, it loses much of it's utility.
By search do you mean get the address location's coordinates? If so it's pretty simply to do. You could use an address and get coordinates by using a method called Forward-Geocoding. Here's an example. let geocoder = CLGeocoder() geocoder.geocodeAddressString("123 Main Street, City Town State", completionHandler: { (placemarks, error) -&gt; Void in if placemarks.count &gt; 0 { let placemark = placemarks.first as CLPlacemark let location = placemark.location let coordinate = location.coordinate } }) [More info](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/LocationAwarenessPG/UsingGeocoders/UsingGeocoders.html). 
The utility is part of a larger library idea me and my friends are working on. The timer is pretty simple but might be a useful example if you're just getting your feet wet with Grand Central Dispatch. What I'm really looking for is suggestions for other GCD utilities that people might find useful, so feel free to respond if you've got any.
What does this offer that NSTimer doesn't? 
I like the API you've created, it's nice and clear. NSTimer is just a bit too simplistic and this makes the code a little more readable than the previous selector approach. I don't however see being able to start/pause/cancel from different threads being a good thing. I actually see that as potentially confusing and could lead to difficult to read implementations.
In general I agree, allowing modification from different threads could reduce readability. However, my thinking is that it would be better to support it rather than throwing an exception (which would crash your app) or doing something worse, like failing silently. NSTimer on the other hand sounds a bit non-deterministic in this regard. To quote Apple's docs: &gt; If you send this message [invalidate] from another thread, the input source associated with the timer may not be removed from its run loop, which could prevent the thread from exiting properly. This seemed bad to me, Apple is essentially saying, "please don't do this, but if your code accidentally does it you might not notice and bad things might happen." So in the end, supporting it seemed the lesser evil. Any thoughts?
Good points, I'm inclined to agree!
Can you post the error log / PM it if you prefer? I work at Yahoo (not on the SDK team, but in the same group) and can definitely help out.
Thanks for willing to help! Here is a copy and paste from the error log. The problem occurs when I add -ObjC and -all_load to the Other Linker Flags under Build Settings (required for Yahoo Search SDK). I am not sure how to fix it since it is a problem with Parse. I have googled around and I have seen suggestions to replace -ObjC with -force_load but I am not sure. Undefined symbols for architecture i386: "_PFParseErrorDomain", referenced from: -[PFSignUpViewController _signUpAction] in ParseUI(PFSignUpViewController.o) -[PFSignUpViewController _signUpDidFailWithError:] in ParseUI(PFSignUpViewController.o) -[PFImageView loadInBackground:] in ParseUI(PFImageView.o) ___32-[PFImageView loadInBackground:]_block_invoke30 in ParseUI(PFImageView.o) -[PFSignUpViewController _signUpAction] in ParseUI(PFSignUpViewController.o) -[PFSignUpViewController _signUpDidFailWithError:] in ParseUI(PFSignUpViewController.o) -[PFImageView loadInBackground:] in ParseUI(PFImageView.o) ___32-[PFImageView loadInBackground:]_block_invoke30 in ParseUI(PFImageView.o) ld: symbol(s) not found for architecture i386 clang: error: linker command failed with exit code 1 (use -v to see invocation)
Love the website. I've tried several books, videos, websites, etc. but hackingwithswift.com is without doubt my favorite. Of course, a combination of different resources is the best learning method, but your website is a great place to start! 
I don't quite understand what you mean by 'in the same search field'. Do you mean entering both addresses in the same string?
I'd do something like.... on applicationDidFinishLaunching set an NSDate object. Then set another date object on applicationWillTerminate. You should then be able to compare the two dates and get the time passed between the two, and reset the score value based on that. Sorry, I know it's crude response, but typing this kind of stuff on an iphone sucks. :-/
Thanks for the reply mate, but I'm looking for something that would mean it consistently resets at say 2am or whatever, every day without fail 
Ah gotcha. Are you resetting all users scores at the same time every day?
Actually, that's the right answer. You aren't going to be able to reliably run code in the background. Not only is that just not allowed for this use case, but it's kind of pointless anyway. If you can calculate the same results without a background task you should absolutely do that. It's in fact _more_ reliable to do it on demand based on elapsed time because you can't possibly control when your app is in memory or not. You can, however, store a date in a preference and check it on next launch. It doesn't matter if the data is out of date when it's not being looked at. It only matters that it's right when the user can see it. The only correction I would make is that `applicationWillTerminate:` won't get called these days. Instead you should use `applicationDidEnterBackground:`. 
You're casting topStories to NSArray which is immutable. You could instead cast it to an NSMutableArray and use the addObject: method or alternatively cast it to a native Swift array which I suppose for the Hacker News JSON would be [Int].
If i cast it down to Int, it won't return me anything. I'm really stuck at this, could you provide me some example? [here is whole project ](https://www.dropbox.com/s/2aj1wzelyxsz18l/HackerNews.zip?dl=0)
It actually is returning the result, if you were to place a breakpoint or even print out the count you'll see that's the case. The real issue you're having is getting the data to actually display in your table view. First off - you might want your view controller to extend UITableViewController instead of just a UIViewController, as it is more suited to handling a table view. Second, after you've loaded in your data you'll need to call the reloadData() method on your table view to actually have the table reload with your new data. Does this make sense?
I don't think there is such a way. 
You're going to need to be a little more specific than that... what happens? [0..9] should be taking the items from indexes 0 to 9 (first 10 items). Though the JSON is always likely to have 500 items, you should probably also add a check to make sure there are at least 10 first before taking the first 10.
If you try on example that you sent me, you will see that it says that this is Int is not convertible to [(Int )] :/
Hmm, so it doesn't. Try this: self.postTitles = Array(topStories[0...9]) 
&gt; self.postTitles = Array(topStories[0...9]) that worked, thnx a lot yeskia, you saved me a lot of headache :) 
I am not sure what that means? I am relatively new to iOS development.
Regex?
Those lines were working perfectly before, but now I have no idea what changed it It's really distressing I know it's an optional so I make an if statement, if it's == nil I assign it a value of 0 then I make sure to unwrap it later. This is mega frustrating
Not exactly, this is just a repeating timer not a countdown. But you could accomplish that using this timer by having the timer decrement "time remaining" every second and adding time to the "time remaining" anytime a user grabs an item. We're currently working on adding another timer that could also fit your use case in a sort-of roundabout way. It's a "VariableTimer"; each time it fires, it asks a delegate for its next firing interval so you can variate firing intervals based on some external function. For example, I'm using it to control how often a cache checks for expired items based on the frequency of "puts" that push the cache close to its capacity. We could add a countdown timer with the functionality you mentioned if you're interested, I could definitely see a countdown that allows you to increment/decrement on the fly being useful.
Hehe, interesting. I was wondering about it all week. The easiest way to share info between Watch Apps and the iPhone app is to use NSUserDefaults... I plan on using it to store a dozen values. Are you sure this error code was due to too many NSUserDefaults? I never heard of a hard cap before. It was always simply discouraged to store big files. 
It's something else. You're focusing on the wrong thing, and it's making finding the right thing difficult. Happens all the time. Show someone else your code, explain what you're doing, and I bet they spot it right away. Or post it here. Or it could be Swift, but that's unlikely.
Most likely the value you added was invalid somehow. Adding too many items cannot cause it to crash. You should post the backtrace of the crash. 
var savedTotalSeconds: Int? = userDefaults.objectForKey("totalSecondsKey") as Int? That's the line - I can't understand why that would crash, it's creating an optional value, if the value is nil surely that's fine. I'm not unwrapping it.
Delete the app from the simulator and try again with a fresh run of the app. Pop a breakpoint on that line and when you hit it type this into the console: `po userDefaults.objectForKey("totalSecondsKey")` Might give you a better idea of what sort of data is being stored there.
I took up learning Swift just recently, so I am by far no expert. But what look odd to me in that line is that the second question mark is behind the "Int". I don't know if it helps but try it after the "as" and delete the one after "Int". 
NSScanner will scan things starting at its current scan position. If you haven't scanned anything that position will be the beginning of the string. Since there are no numbers at the beginning you have find the first character that is a number. So you basically scan everything until NSScanner encounters the first character that is part of the `decimalDigitCharacterSet()` (contains numbers and decimal separators, in various languages). Since we are not interested in the part up to the number we scan into nil. You have to explicitly scan all parts of a particular string.[1] If you would scan into an actual string, e.g.: var scannedString: NSString? scanner.scanUpToCharactersFromSet(NSCharacterSet.decimalDigitCharacterSet(), intoString: &amp;scannedString) The variable `scannedString` will contain "set time to" ---- [1] or you tell NSScanner to ignore everything that is not a decimalDigitCharacter. let string = "set time to 5 seconds" let scanner = NSScanner(string: string) scanner.charactersToBeSkipped = NSCharacterSet.decimalDigitCharacterSet().invertedSet var value: Int = 0 if scanner.scanInteger(&amp;value) { println("did scan \(value)") } This should work as well. I prefer the explicit way though. 
Specify the types explicitly. let tuple: (foo: String, bar: String?) = ("Foo", nil) Or if you want to create an array of these tuples: let moves: [(foo: String, bar: String?)] = [ (foo: "Foo", bar: "Bar"), (foo: "Foo", bar: nil), ] Since you have so many objects in your tuple I would actually look at struct or a plain old class. This is so much nicer: struct Pokething { let foo: String let bar: String? init(foo: String, bar: String?) { self.foo = foo self.bar = bar } } let moves = [ Pokething(foo: "Foo", bar: "Bar"), Pokething(foo: "Foo", bar: nil) ] Tuples are becoming the new dictionaries. People tend to overuse them.
[**@andy_matuschak**](https://twitter.com/andy_matuschak/) &gt; [2015-01-28 18:54 UTC](https://twitter.com/andy_matuschak/status/560511204867575808) &gt; I say with confidence as a former UIKit author: React's model for the UI layer is vastly better than UIKit's. React Native is a *huge* deal. ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Blocks (C language extension)**](https://en.wikipedia.org/wiki/Blocks%20(C%20language%20extension\)): [](#sfw) --- &gt; &gt;__Blocks__ are a nonstandard extension added by [Apple Inc.](https://en.wikipedia.org/wiki/Apple_Inc.) to their implementations of the [C](https://en.wikipedia.org/wiki/C_(programming_language\)), [C++](https://en.wikipedia.org/wiki/C%2B%2B), and [Objective-C](https://en.wikipedia.org/wiki/Objective-C) programming languages that uses a [lambda expression](https://en.wikipedia.org/wiki/Lambda_calculus#Definition)-like syntax to create [closures](https://en.wikipedia.org/wiki/Closure_(computer_science\)) within these languages. Blocks are supported for programs developed for Mac OS X 10.6+ and iOS 4.0+, although third-party runtimes allow use on Mac OS X 10.5 and iOS 2.2+. &gt;Apple designed blocks with the explicit goal of making it easier to write programs for the [Grand Central Dispatch](https://en.wikipedia.org/wiki/Grand_Central_Dispatch) threading architecture, although it is independent of that architecture and can be used in much the same way as closures in other languages. Apple has implemented blocks both in their own branch of the [GNU Compiler Collection](https://en.wikipedia.org/wiki/GNU_Compiler_Collection) and in the [Clang](https://en.wikipedia.org/wiki/Clang) [LLVM](https://en.wikipedia.org/wiki/LLVM) compiler front end. Language [runtime library](https://en.wikipedia.org/wiki/Runtime_library) support for blocks is also available as part of the LLVM project. The Khronos group uses blocks syntax to enqueue kernels from within kernels as of version 2.0 of [OpenCL](https://en.wikipedia.org/wiki/OpenCL). &gt;Like function definitions, blocks can take arguments, and declare their own variables internally. Unlike ordinary C function definitions, their value can capture state from their surrounding context. A block definition produces an opaque value which contains both a reference to the code within the block and a snapshot of the current state of local stack variables at the time of its definition. The block may be later invoked in the same manner as a function pointer. The block may be assigned to variables, passed to functions, and otherwise treated like a normal function pointer, although the application programmer (or the API) must mark the block with a special operator (Block_copy) if it's to be used outside the scope in which it was defined. &gt; --- ^Interesting: [^Closure ^\(computer ^programming)](https://en.wikipedia.org/wiki/Closure_\(computer_programming\)) ^| [^Objective-C](https://en.wikipedia.org/wiki/Objective-C) ^| [^C ^syntax](https://en.wikipedia.org/wiki/C_syntax) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cq41ap5) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cq41ap5)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I have had trouble/crashes converting nsuserdefaults in the past from anything other than a string. It's not recommended, but try putting it as a string and using the .toInt() method on a next line to see if it works.
When you said you were playing with the notifications, were you able to get any notifications at all? Did you add an observer to the notification to get the updates? You may have to call `beginGeneratingPlaybackNotifications()` on the MPMusicPlayer to get it to start generating notifications. 
Where did you create your instance of MPMusicPlayerController? I noticed you had a reference to `mp`, so you can use that to call `beginGeneratingPlaybackNotifications()` when you create it. 
Are you using an MKLocalSearch? The search is going to look for points of interest, and so you would need to provide a category that they are looking for. This is why when they specify Regal Cinemas, they get back results but if you specify an address, what is MKLocalSearch supposed to return?
Thanks :) I'm only using them to feed some test data into my Core Data database. I already have Pokemon NSManagedObject. Would it not cause conflict?
A struct may be a better solution, as classes are passed by reference, but structs are passed by value. 
I've had these bookmarked for so long, and since one of them is a file for the Sketch app, ymmv, but these are two template resources for the different screen sizes: https://github.com/franceindia/design/blob/master/Apple%20Startup%20Image%20Template.sketch https://github.com/tfausak/tfausak.github.io/tree/master/static/images 
RegEx was a good solution until `NSScanner` arrived at the party :)
prepareToPlay should be called just once, and as soon as the scene is loaded, only once. The only reused code should be .play(); prepareToPlay loads the assets into memory IIRC, so you really don't want to call that outside of say, the loading screen. as it'll cause a big delay (relatively speaking)
And CoffeeScript made the most dreaded list?
or can you lock a segmented controller? while also disabling user interactivity? 
So weird. I absolutely love it.
Thanks for sharing this! I enjoyed watching it and learned a bit. :)
I'll love it even more when I can start writing it on Linux and phase out bash and perl. 
You can use lldb's `print`/`exec` commands to that effect. It's less convenient than a straight-up prompt, but it does let you do pretty much anything you want.
Tell that to any medium sized and above business and they will ignore this argument simply because it is just not worth it right now to rewrite an app entirely in swift (or even partially for that matter because of Apple's history of backtracking support for a new language). Even for PR, the consumers don't really care because everything works the same. Only devs care as of right now, and until the customer cares whether Swift is being used, that language is Radioactive.
Same it's my favourite. Probably dreaded because JS is so popular and when a JS dev runs into it in a project, they rage? Or just hipster hate. It's just as fun as Swift for me.
WWDC 2015 Apple open sources Swift. Anyone wanna bet against it?
It's hard for me to imagine that anyone who writes JavaScript would hate coffeescript. Do they love curly braces?
I'm not sure i understand, but doesn't swift already have a repl?
We've started working on it, so look out for an update in the next few days.
PhoneGap? I looked it up a bit ago. Not sure if this is what you are looking for. 
Um, you can create sandbox projects... which evaluate an entire file in real time... what more do you want?
You can join an array of Strings using ",".join(myArray), but since it's not built in for an array of Ints, we can add it with an extension: extension String { func join(array:[Int]) -&gt; String { var str:String = "" for (index, item) in enumerate(array) { str += "\(item)" if index &lt; array.count-1 { str += self } } return str } } -- var myArray = [1,2,3] let str = ",".join(myArray) println(str) // 1,2,3 
You can make it more terse by mapping the array into a string array using `map`, and then join the result: ``` let joined = ", ".join(array.map { "\($0)" }); ``` edit: Here's a (very late) extension for String.join that works with any Printable object (ints, doubles, etc.): extension String { func join&lt;T : Printable&gt;(elements: [T]) -&gt; String { return self.join(elements.map { "\($0)" }); } } var ints = [0, 1, 2, 3, 4, 5, 6]; var print = ", ".join(ints);
array.description does this, but if you want more control use one of the other answers.
Why wouldn't you extend the Array so you could do this instead: [1, 2, 3].join(",")
Consumers care about stability, a lot. They also care about the higher productivity developers have when using swift- http://iphone.appleinsider.com/articles/15/02/07/apples-new-swift-programming-language-takes-flight-with-getty-images-american-airlines-linkedin-and-duolingo I'm in no way saying that anyone should rewrite an entire code base, I didn't do this, just be open to the idea of starting writing new code in it when you are confident Apple aren't going to toss it away. Also please justify your qualification of it as 'radioactive,' I don't get what you mean.
I can't say that I *love* Swift yet. I can see that it offers several improvements over Objective-C, but it's got its share of irritations, too.
Set its enabled property to false. You can disable any UIControl that way.
Not the same. I want a command where I can drop into a repl in a real project anywhere I want.
The question was, of all the technologies you've used, which one would you like to use again? So that's not exactly love, but probably "which one do you think shows promise" or "which one do you think would be fun to use again".
Apple has no need to "lure" android developers. Everybody already knows that iOS is where the money is. 
&gt; I'd say Swift was introduced mainly to lure Android devs over to iOS development. &gt; And Apple really don't want iOS devs to wander over to other platforms. Your two points contradict each other. If Swift can lure Android developers to iOS, it can lure iOS developers to Android at the same time. 
I've always liked C++, I'll admit I haven't had the chance to play with it since university but trying C++11 is pretty high on my list of things to do when I have some free time. 
I would actually bet against it. I don't see how that would benefit Apple. They will most likely add custom code to CloudKit. Which pretty much removes the need of open sourcing Swift for most developers. 
Come back when you try to wring some money out of Android users 
You can add Messages and Sounds to Local Notifications. I'm currently doing this for an app I'm using. I think this is your only option unless you go the Push Notification route.
Is there a way I could do this without the commas being added? If my array looked like this: var myArray = [1,2,3,4,5] I would want the string to be: 12345 Is this possible?
I am using C++98 for embedded development now and it feels like I imagine it would if I were speaking English while avoiding 3-letter words.
Whatever you use in replace of the comma will be your delimiter. let string = "".join(myArray) // 123 -- let string = "-".join(myArray) // 1-2-3
I'm at work so I can't try it out but would no delimiter work?
Since Design+Code is for non-coders, I'd say it's approachable but would do it in tandem with another program since it approaches app design from a designer's perspective and doesn't dive deep into the code. Teamtreehouse.com's Swift and Obj-C courses are solid and you build complete apps, messenger apps with backends and everything. For me Design+Code inspired me and helped me build out my storyboards and flow, and other sites like Teamtreehouse.com gave me the start on the programming end of things. Bottom line: $50 for Design + Code is well worth it if you are keen on making an app beautiful and its users happy. $25/mo for Teamtreehouse is a drop in the bucket if you are serious about learning to make apps. Do both in my opinion.
Very nice! I will be studying your code. :)
That's really dumb.
Apple knows devs loves Swift and want to write it everywhere. Even the first line of the book says it's designed to be able to write operating systems. The more I think about it, the more I'm willing to bet on it eventually being open sourced. Picture this. Federeghi on stage talking about how the initial release went down, how popular Swift is, he'll source this article saying it's the most loved programming language. Then he'll say how they've got a lot of feedback from devs wishing they could write everything in Swift! Then announce that it's open source today. Crowd goes nuts, Twitter goes nuts, hacker news goes nuts, even /r/programming's consensus is that they hate Apple but "have to commend them for doing this". Still unrealistic?
I found the first time was the longest. Recently the wait as been longer than usual. My guess is a back log from watch based apps submissions.
It is. This site is helpful: http://appreviewtimes.com/
that could be it.....I saw on other forums people were getting there apps accepted in four or five days. 
I doubt it since Swift works on iOS7. 
What kind of data? Parse might be a good solution depending what data it is. 
I use a custom font in my project and this causes Xcode to hang every time I open a .xib that uses the font. So there's that. 
I ran into a tiny one -- looks like unwrapping nested tuples got a little borked. http://stackoverflow.com/questions/28866426/swift-1-2-cannot-express-tuple-conversion-error We were trying to unpack everything like (key, (value1, value2)) in a for loop and it doesn't like that, although the types it complained about looked right. Fixed by using (key, _) since we didn't need the rest inside the loop.
Im in middle of the Stanford iOS course. Will swift 1.2 break my code? If so, I will skip the update for now. 
We ran into a show-stopper and had to roll back to Xcode 6.2. A closure within a generic function was crashing with EXC_BAD_ACCESS while accessing a parameter from the outer function. And only on a release build on the device, not on the simulator. The deal breaker was that any attempt to run the app in release mode under the debugger resulted in Xcode crashing completely. So basically, no way to debug at all :\
UPDATE: There will be no issue with YahooSDK if using just with Parse. But if you're using the FacebookSDK, then you NEED to update to Facebook's newest SDK (4.0). 
Hey, thanks for the update! I'll make a note of it in case anyone else ever runs into this issue too :)
I know but I couldn't help myself.
Does anyone know the download size of the Xcode update? Edit: 2.57GB apparently
I've been making a music controller just to practice before adding music controls to my actual app. Once it's finished, I was planning on uploading it to GitHub as a reference for anyone else wanting to add music controls. The whole app is just buttons (play, pause, skip to beginning, previous, next) and a label that displays the current track information. I want to add volume control and a timer but haven't had time in the past few days, but I can probably give you what I have if you think it would be helpful.
Can't have parameters with default values after closure parameters if you want to use the trailing closure syntax.
Essentially the app would have a collection view and each cell would contain a UIImage and some text. I would like to be able to share the collection view with someone else. If it's not possible to share the actual collection view, then I would try to share images and text found in the collection view as individual elements. I hope that's clear - thanks :)
Looks a lot like ActiveSupport. 
if you don't have existing code base... our code base was almost entirely on swift, and we ended up with 140 errors, *after* automatic conversion
This makes the Rubyist inside of me giddy! Though, why do things like 1.day.ago return optionals? Also, have you considered writing tests for your library?
Oh, thx for info.
Yes it will break the existing code bases. You can't really "skip" it since from this point on, all the upcoming Xcode versions will have Swift 1.2. Might as well make the transition now before the codebase grows even more. 
Should be possible with CloudKit, although this wont work crossplatform ofc
I'm striving for 100% coverage for tests -- that I haven't written yet :( Also the functions return optionals because the NSCalendar APIs that act on date components return optionals. They can fail with malformed components, sadly.
1. Clone the git ("git clone https://github.com/supermarin/Alcatraz.git") 2. Open xcodeProject 3. Build Master has the UDID updated for 6.3
You don't need to store a bool, just query audioPlayer.playing() if audioPlayer.playing() { // stop } else { // play }
Thank you so much, this worked!
There's no [variance or contravariance](http://en.wikipedia.org/wiki/Covariance_and_contravariance_%28computer_science%29) support in generic types in swift, so you can't change a generic component of a generic type by casting it, but what you can do is provide non-generic protocols to your generic type, and cast any generic instance to those protocols, like so: class SPInputDeviceBase&lt;T&gt; : SomeBaseClass, Printable /* Printy-print! */ { var description : String { return "Something something" } } var floatInput = ... var intInput = ... var input = [floatInput, intInput] for i in input { if let i = i as? Printable { i.description; // Available! } } I noticed your generic type has a base concrete class because you where able to create an inferred array from two different generic signatures (that's usually not allowed if there's no common base class), so you may also be able to cast the values into that base class and store any non-generic features there, if that fits the architecture.
The new `Set` type was introduced in Swift 1.2. Just replace `NSSet` with `Set&lt;NSObject&gt;`.
Beautiful! This will appeal to anyone who has written Ruby, or anyone who has tried to wrangle with NSDates. So… everyone, then :)
Try using the Xcode tool to covert your Swift code to the latest version automatically. Its in the Edit menu: `Edit &gt; Convert &gt; To Latest Swift...`
Struct. Definitely just use a Struct.
I take no offense to your statement. If you could provide me your reason as to why you believe so, it'll help me improve my lack of logic and reasoning skills.
Original code: override func touchesBegan(touches: NSSet, withEvent event: UIEvent) { let touch = touches.anyObject() as UITouch ... } New code: override func touchesBegan(touches: Set&lt;NSObject&gt;, withEvent event: UIEvent) { let touch = touches.anyObject() as! UITouch ... } but now it says set&lt;NSObject&gt; does not have a member anyObject() Sorry for all the confusion. I am still trying to learn swift.
I had made a copy of the previous version of xcode and just ran xcode-select. Rolling back the code changes was just a matter of git reverting the appropriate commits.
You can do something like: let touch = touches.first as! UITouch or if you want to get all the touches, you can iterate through the entire set as you would an array like so: for touch in touches { } 
Check out Erica Sadun's NSDate extensions: https://github.com/erica/NSDate-Extensions I've bee using it for years and it makes date comparisons almost painless. It would be nice to see a Swift implementation. 
Check out [this website](http://iphonedev.tv/blog/2015/2/9/swift-12-fixes-and-breaks-a-few-things-you-should-be-excited) and search for "touchesbegan". They have a solution there
&gt;Like user LuizZak says, you must make T be a common ground between the classes of T that you want to use. Any is a common ground between Float and Int. Both can be upcasted to Any. Or am I interpreting what you're saying wrong? &gt;For example, since AnyObject will match all objects, you can use that as your T I can't, AnyObject is more restrictive than Any. Neither work because it seems a type&lt;extends/implements T&gt; - thinking in Java terms - is not considered a subtype of type&lt;T&gt;. I can't cast up from type&lt;extends/implements T&gt; to type&lt;T&gt;.
Thanks to all the responses, I got it working. I really appreciate it!
The error is that `programVar` is *nil* at that point. I was under the impression that `viewDidLoad` would be called after `prepareForSegue` was done, but that must've changed at some point. The best way to test would be to add a `println` in `viewDidload` and `prepareForSegue` to see the order of calls being done. You can also assign `programVar` a default value as well. Basically, when you use `!`, you're telling Swift that this value *WILL* have a value by the time you start using it and if it doesn't, it'll cause a crash and that's what you're seeing.
Apparently it takes a few hours... Mine was accepted today however it hasn't shown in the app store yet.
I remember I freaked out about this as well, but I went to bed. Woke up the next morning and it was in the search results! Just hang tight and it will be there.
Having dealt with date comparisons as recently as a few weeks ago anything that lets me compare dates painlessly without having to use an NSOrderedAscending stuff would be great. Maybe do some operator overloading with '&lt;' &amp; '&gt;' or something that returns a simple Boolean. I managed to pull through and while working with dates in other languages like Java and C# is not exactly a party I don't remember it being so difficult either.
Which steps got it working? How about upvoting the helpful response(s)????
Xcode would not correct it on its own. I used the website that someone linked. Upvoted everybody for their help
IIRC everything is marked internal by default. So unless you explicitly mark anything public, or private. It will be set to internal for you
Well, if fixing errors in Haneke caused by Swift 1.2 is beyond scope of your knowledge, I honestly doubt that you'll be able to create something so complex from scratch. Just wait for Haneke to update, or use something like SDWebImage.
True, we changed haneke to SDWebImage about 2days ago at work. Haneke had some problem and its memory usage could reach 500mb, so we ended up replacing it, now the maximum ram we use is about 30-40 mb
It sometimes takes a day or so to show up everywhere consistently. It's agonising!
http://shouldiblamecaching.com The App Store works with many different servers and CDNs worldwide. Whatever you do in iTunes Connect, results won't be immediate. 
Great, this solved the issues :).
I think you need to look into protocols / Closures(Blocks) for passing information back to your View controller which contains the collectionview to pass the relevant information back and present the relevant information. making a protocol on bottom level cell that passes the object or struct with information that is required to present enough information. 
Cell customization is done in the cellForRowAtIndexPath method of your TableView data source. Based on the section and row number, you can customize each cell before returning it. 
I have one more question, does it take a while for the ads to show up because in itunes connect it says there live but in my app they dont show up? Thanks!
You don't share actual views. You would share the objects in your model that those views are 'representing'. You would likely want some sort of server backend like Parse or CloudKit. You should be able to google and get tons of information on Parse and a decent amount on CloudKit. Just a heads up though, if you have any cross-platform desires (an android and iOS app), CloudKit is iOS only.
There are some dates such that "1 day ago" is a time that doesn't exist, but "24 hours ago" does exist. For example, 2:30 AM the day after a DST transition.
Good idea, but there are times when quite early on it is impossible to get past due to the enemies taking up the entire width of the screen! Good job though, keep it up.
Thanks. Are you playing on the iphone or the ipad?
slide your finger from the middle of the screen to the left and it will move to the left and the same thing for the right, slide your finger from the middle of the screen to the right and it will move to the right. 
thanks! 
LLLVM and CLANG are open source products that they use, aren't they? Confused as to why you're talking about Apple open sourcing them when they didnt make them.
LLVM was Chris Lattner's PhD project, and it already existed when Apple hired him. CLANG was started after he joined Apple.
ah, so they voluntarily open-sourced CLANG? that would seem more hopeful then I thought for swift then
Ok I have figured out what my problem was. I had to create another dictionary and send it as 'metrics' argument. So my new code would be: let viewsDictionary = ["top":topView, "bottom":bottomView] let numbers = ["spacing":20] let view_constraint_V:NSArray = NSLayoutConstraint.constraintsWithVisualFormat("V:|-spacing-[top(bottom)]-[bottom]-10-|", options: NSLayoutFormatOptions.AlignAllLeading, metrics: numbers, views: viewsDictionary)