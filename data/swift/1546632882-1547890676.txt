u/rshanlon is right but he could've elaborated. Basically, go to Github, then discover, then find Swift and do a little sorting and what have you. Example: all Swift projects, sorted by stars: https://github.com/topics/swift?o=desc&amp;s=stars Find a popular project that has your interest. Then see if it has open issues and/or welcomes pull requests. 
What dude? It's a simple search on Github. Took me 5 seconds to find via a github search: [https://github.com/dkhamsing/open-source-ios-apps](https://github.com/dkhamsing/open-source-ios-apps)
[Here’s](https://www.reddit.com/r/swift/comments/ac8up4/learn_ios_development_in_swift_by_contributing_to/?st=JQIIQH13&amp;sh=101b7fc4) a new open source project that suits your needs. 
A M A Z I N G It’s great that *Google* is making such things. 
[Here’s Google’s branch for it.](https://github.com/google/swift/tree/format)
It's likely because Chris Lattner now works at Google.
But still... Google as a company can still decide what their employees work on. 
I've never gotten these to work reliably in any non-trivial project. When the sidebar just says "Failed", or sits on "Building" forever, how do you debug this? This is one of those too-clever-by-half features that never got the love it deserved from Apple. Cute idea, but avoid.
I really enjoy swimat tool. Very helpful for me, as a beginner-iOS dev
&gt; Void, a type which has only one member Don't you mean "zero members"?
Totally and automated as well for checks. 
Can you use defer { function2() } At the beginning of function1? 
What exactly is the confusion? You can look at the type of `f` and see that it returns `Void`. You can look at the type of this function and see that it should return `Void`. The call is still made. What confusion is created by the word "return"? There are enough special cases around tuples already. I think it would be *more* confusing if we added another one, prohibiting the return of a 0-length tuple from a function that is declared to return that. Every Turing-complete programming language allows infinitely many possible expressions, infinitely many of which can "lead to confusion when reading". The solution to this is to keep the language as simple as possible -- not to add as many special cases as you can think of to try to avoid the ones you don't like.
As I understand it, it's the employees/teams who decide what to work on at Google. That's why they have so many projects that basically do the same thing.
Thanks! Will do
Look into DispatchGroup 
I have it working great in production Apps with millions of users.
[removed]
The post which OP is referencing in case anyone is interested: https://www.reddit.com/r/swift/comments/ac8up4/learn_ios_development_in_swift_by_contributing_to/?st=JQIP23XN&amp;sh=0c452d23
This is right. This is how most companies do it.
It'd be nice if the post or the readme had a basic explanation of what the coordinator pattern is or a link to a good resource. 
I thought he was going to Tesla, what happened to that?
He was there a while but not long. He's at Google Brain now.
A mix of both. Force unwrapping is not a good practice but some we came up with as a team such as brackets and spacing. 
No. Every programming language I know uses a very different system for function calls and default return values. For example, the calling conventions of a few popular families of languages: - Pascal: functions/procedures are defined with different syntax; reporting a return value and exiting scope are separate statements - Forth: no difference between functions/procedures; no return values, except the state of the stack (i.e., implicit multiple return values) - Lisp: no difference between functions/procedures (or methods); `RETURN` with no arguments returns the value `NIL`; multiple return values are explicitly supported, and returning 0 values is different from returning the value `NIL` - Python: no difference between functions/procedures; can return any single value, including `None` (the default); there's a separate tuple type which can be used to emulate multiple return values - Swift: functions/procedures differ only in that procedures have no declared return type, which is shorthand for returning type `Void`; there are also tuples, and `Void` is itself a synonym for the 0-length tuple; all of these are completely different from the value `nil` - C, C++, Java, JavaScript, Perl, Ruby, Go, Rust: also all different from each other, in subtle and not-so-subtle ways that I don't feel like describing in detail. Sometimes it's allowed, sometimes it's not, and very often this distinction makes no sense at all, in the type/syntax system of the language. There's really no consistency at all in how function calls work across languages. That's a big part of why it's so hard to design a virtual machine that works for many languages, and why physical machines don't share calling conventions (which in turn is why Swift can't just use the C ABI, and we're all awaiting its own stable ABI in version 5). 
This example is not a proper implementation of the "Coordinator" pattern. ViewControllers should NOT have a reference to or even know about the "coordinator". This creates a tight coupling between coordinator and View Controller, and it results in something that is no different than calling \`navigationController.pushViewController(vc, animated: true)\` inside the button action. The proper way to implement this is to have the View Controller either... 1. Call a closure that has been injected. 2. Have the View Controller have a protocol that relays information to whoever is its delegate is. That way the View Controller can truly live on its own. All it does is relay that something happened. 
[https://www.hackingwithswift.com/articles/71/how-to-use-the-coordinator-pattern-in-ios-apps](https://www.hackingwithswift.com/articles/71/how-to-use-the-coordinator-pattern-in-ios-apps) &amp;#x200B; You have code identical to Paul Hudson's article (link above) Down to the function names and variables. &amp;#x200B; At least link to this so people have a follow-along.
It's pretty straight forward: ``` import ARKit import UIKit import AVFoundation class 360DegreeVideoPortal { private var arSession: ARSession private var captureSession: AVCaptureSession required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) captureSession = AVCaptureSession(options: [.rearCamera, .arMode]) arSession = ARSession(withCaptureSession: captureSession) arSession.mode = ARSessionMode.360portal arSession.delegate = self } } ``` Then all you have to do is implement the ARSessionModeDelegate to detect when the camera is running. Then you'll be able to see the 360Portal view that you can interact with
Can you please provide demo for it
Like this one: https://youtu.be/xO2a7QTTAk4
Integers are counting and positional numbers, basically. They have other uses but are best thought of that way for someone new to coding. The different types of integer depend on memory management or checking that you’re not doing anything dodgy in your code. You might use an 8 bit integer to save on memory. You might use an unsigned integer because you don’t need negative numbers. But don’t think too much about those use cases until you’ve learned a little more.
Thanks! A sort of off question topic, do you believe the iPad Pro is good for learning Swift or should I have picked up a MacBook too?
Why can’t I link a nav controller + detail scene to my tableview controller? Ive got a table view setup and im trying to set it up so that I can click a cell and have that direct to a details view.
This post has 2 comments.
It’s a new thread 
Honestly, a MacBook (pro or otherwise) would be a lot better. You’ll outgrow the playgrounds app pretty fast. 
Well that’ll be my next purchase. For now I’ll just keep using the iPad Pro (and I got the new one too 😭)
Where is this listed? 
Integers get used everywhere... Length of a string Number of lives in a game Number of likes on a post Number of open connections to a server Unless you need fractional amounts for something (maybe a precise temperature or exact percentage), integers are usually a better choice because they can be easily and safely compared for equality. The same is not true of floating point numbers, which can contain super small errors that will prevent things you think should be equal to not actually be equal.
This was stated at the keynote when the language was introduced https://youtu.be/w87fOAG8fjk.
Thanks! I just didn’t really understand what the integers would actually be used for. Starting out is quite hard 😅
This was stated at the keynote when the language was introduced: https://youtu.be/w87fOAG8fjk?t=6315.
Yikes. At least give the guy credit where it's due. Honestly, if I saw this code this in a code test I definately wouldn't hire the guy. That being said, `MVVM-C + Rx` is a pattern I really like. Combined with good testing frameworks it can be powerful (we use cuckoo for mocking and it's really nice).
Hey, attentionwandered, just a quick heads-up: **definately** is actually spelled **definitely**. You can remember it by **-ite- not –ate-**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Some of Google's other style guides have been ... questionable. I don't see anything terrible here yet, though my own code definitely wouldn't pass. You can tell what problems Google engineers face by what rules they make. They sure spend a *lot* of time discussing exactly how and where to line-wrap -- I guess super long lines are a big problem for them! Also: "Naming Conventions Are Not Access Control". Well, yeah. I guess they're trying to convert some of their Python programmers.
That’s precisely it! Mostly, the line wrapping is to make diffs as small as possible. Say you add a function parameter, if your line wrapping is set to bin-pack, you could take this: aLongFunctionCall(aLongParameterOne, aLongParameterTwo, short1, short2, short3) And have to reflow all of them: aLongFunctionCall(newArg, aLongParameterOne, aLongParameterTwo, short1, short2, short3) Whereas with their line wrap rules, you only add one line in the diff: aLongFunctionCall( aLongParameterOne, aLongParameterTwo, short1, short2, short3 ) You still have a bunch of extra lines, but that’s the trade-off for easier readability and cleaner diffs.
This project was spearheaded by Alex Lash and Tony Allevato on the Apple Frameworks team at Google, and Chris is a user and big fan of the tool 😄
It really depends on what parts you want to consider faster. Objective-C has dynamic method dispatching (message passing) which is going to be slower than direct invocation. Will you ever notice this? Probably not. For code that doesn't involve message dispatching or the Objective-c runtime, I doubt very much Swift is faster. Again, not likely to matter ever. Where it used to matter, things like video and image processing, all of that is happening on GPUs now. Audio is probably the last frontier where it's a concern and on macOS you'll be doing the bulk of that in C anyways.
so, turned out be in act related to a “com.apple.security.application-groups” tag without value in the entitlements-file. I removed the complete tag from the file and re-submitted… passed. Looks like that Xcode doesn’t clean up the entitlements-file properly in every case when adding and removing entitlements… My app "smartReact" passed all tests and is now in the App Store :)
I’m recently new to development too (5 months now) and I created a quiz app and use integers in my code to track the following things: - creating a random order of questions - incrementing the score by += 1 each time a user gets an answer correct - how many times they press a button, therefore knowing which screen to present - total correct answers against total questions asked - total questions asked from a specific film (it’s a Lord of the Rings quiz) In short, I have found integers integral to writing my code, and are very useful for a number of different things! Also, as someone mentioned above, you’ll need a Mac of some sort to do some actual development, I started with the Playgrounds app, and it is very useful, but does have a shelf life once you’re comfortable with the core teachings. Hope this helps!
This actually helped a lot! Today is my second day of actually committing to learning and I found the Integers to be confusing. Thanks a lot!
I try to show different option which were presented in HackingWithSwift there is not one perfect way to do it. I added a new example in Demoscreen6. Thank you for your comment though because it made me realise the example is not good enough or clear enough. 
Will do that also ! &amp;#x200B;
It is an basic example ...I try to help people who just start programming .... So sorry if I did not enter unittests in it or used a storyboard instead of making Viewcontrollers in code. It is just a very basic example. I know when I was learning that helped me a lot to get better. Btw I like the MVVM + RX also .... but for beginners it is kind of hard in the beginning but when you get the hang of it , it is great! 
There’s so many angles to answer this from it’s really difficult to start! I’ll just pick a random assortment: * First off, it isn’t always faster. Sometimes it trades speed for correctness, for example Swift String avoids splitting multi code unit grapheme clusters at the cost of using a slower indexing algorithm. Any anything using ObjC bridging incurs a cost. * Swift can avoid heap allocations and reference counting in many more cases than ObjC due to more powerful structs * Swift can devirtualize and inline through dynamic calls in many cases * Swift’s standard library is simply a different codebase from ObjC’s Foundation, with different strengths and tradeoffs * Swift’s String type uses 2 words of storage, allowing a larger percentage of Strings to use the compact representation (tagged pointers in ObjC, SmallStrings in Swift), as well as using a cheaper encoding when they do * Swift’s ARC optimizer is more sophisticated than ObjC’s (but with the trade off that it has to be, because it’s harder to opt out of it if you want to tune something by hand) * ObjC has mandatory dynamic behavior that’s very hard on optimizers in many places it’s not strictly needed (for example, the compiler cannot rely on ANY method call doing the same thing twice, even if it’s calling the method in a loop, because the method could swizzle itself) * ObjC relies heavily on “opting out” in performance critical situations. In other words, anywhere it’s slow, you can just write things in C for that little bit. Swift tries (with mixed success but getting better) to “do it all” and be usable in these places too. And YES this does matter. Contrary to what many people will tell you, client-side performance is far from a solved problem! The only reason apps on your phone or watch (or even your laptop!) are responsive and pleasant to use is because engineers both inside and outside of Apple invest time and energy into making that happen. If you profile any real app (say, while you’re scrolling) in Instruments, you’ll almost certainly see ObjC near the top of the profile; I usually see objc_msgSend at between 10 and 20% of the total time across a wide variety of apps and tasks, with additional time spent building method caches on launch, retaining and releasing, allocating and deallocating objects, and so on. Swift won’t eliminate all of that, but it may be able to help, especially as the OS starts to use it more.
Are they playing games with you? I once outsourced app development to India. I asked for samples of their work and it all looked great. What I actually ended up with was shit and a waste of six months and a couple of $k in progress payments. ¯\_(ツ)_/¯ 
Have they given you the full source code yet? Did you write a complete specification on what you wanted, with imagery?
Thanks guys for reply I obviously send all documentation very detailed ( I’m a very organised person I know what I want ) and the source code is on GitHub ( I don’t know if is the right and complete one !) App looking not bad but I need someone as expert to give me an idea where are the issues Someone told me that they can run the code from a different server without giving you exactly what you want Can be this companies so difficult ? Are this people sow low as common sense ? What do you think ? Thanks 
I would say if you have the code, and your saying there is UI missing, then that is a bug, nothing to do with locality really.
Please have a look Jim and let me know your expert opinion You’ll probably know if you see the code because for me is a nightmare this codes You can also contact per email gugulica67@hotmail.com Thanks again 
Could be localized views. One for India that has the button and one for English (I have actually seen this). Easy to test though you just switch the region settings in the device and if the button is there you know the issue. Though that is assuming op discussed localization which I doubt as that would be the first suspect of the issue and is really easy for the developer to check. Could also be the screen size and maybe the buttons constraints are not configured right so the device they are using in India versus the one op is using are different. Again easy to test but you do need access to other devices which op might not have. Honestly without seeing or knowing more about the project it could be a lot of different things and telling the developer that won't get op anywhere because the heart of the issue is that they are not listening to the client. So my advice would be to take a screenshot of the button that is missing and go over that in order to receive final payment this needs to be working which I hope is in op's agreement with the developer.
Unfortunately the iPad Pro doesn’t have Xcode or support the terminal. When you outgrow the swift playground you will need a Mac (or Linux) for serious swift programming.
I mostly agree with the style guidelines given by Ray Wenderlich at https://github.com/raywenderlich/swift-style-guide.
I think its a case of they have made it for one device,and it appears on theirs, but OP using a different device.
Mostly it is to prevent extra layers of indentation. Swift 1 had so many problems with indenting `if`s, it even got a name "pyramid of doom". Then they allowed to combine `if let` pattern matches with `if` conditon checks, it it was better. Then they allowed to mix `if let` with `if` in any order(previously you had to pattern match first, and then check conditions). And then to reduce indentation even further they created `guard`: if you have some condition, your further code in the scope makes no sense, you put `guard` and make early out of scope. Also, `guard` came with `defer` which allowed to handle all the scope exits caused by `guard` usage. If you need to do something before any exit from scope, you put it in `defer`.
You could just use an if statement, but guard indicates semantically what the programmer's intention is... this is some condition that has to be true, or if the else clause is triggered \*must\* cause execution of the rest of that block/method whatever to be abandoned. For that reason the compiler will generate an error if you don't return at the end of the guard's else. It shows intent, and also ensures you don't forget to return out of that method once it's triggered. Guard statements can also be read a preconditions for allowing something to go ahead, and used in this way do help prevent some form of indented tree of doom.
I've just seen the other reply "pyramid of doom" is the correct phrase. I don't know where I got "tree" from. I believe this term applies to other languages as well as Swift, and is used in any case where the style of programming has ended up producing deeply indented functions, of the sort where it becomes difficult to work out what is going on, especially if the function is complex and long, which you should try to avoid, but sometimes that's easier said than done! Async programming APIs using completion handlers can lead to this sort of thing as well.
No, it’s literally that. There’s nothing you can do with a guard statement that you couldn’t do otherwise. The else clause has to exit from the parent lexical scope, and it’s done to limit what had to be indented. 
Just a semantic note - you don’t have to return in a guard. For example you could break or continue depending on scope, for example. 
It is the equivalent to "if !let", which of course doesn't exist but was badly needed. 
Look up UIView.appearance()
The top 2 answers to this stackoverflow question provide a good explanation, worth a read: https://stackoverflow.com/questions/32256834/swift-guard-vs-if-let
It’s ‘superficial’, but very useful. It increases readability of the code, which helps prevents logic bugs and increases maintainability of the code. Also, because there are no layers of nested if blocks you prevent the very common bug where a statement further is a level too deep or too shallow. Exit-early is considered a good practice and guard makes that easy and natural.
It is to avoid nesting a whole bunch of if statements, but all I have ever used them for is unwrapping optionals. Very confusing.
I use an extension on UIColor for all of my colors. You could handle the check there 
It's possible you might find my [Swift glossary](https://www.hackingwithswift.com/glossary) useful.
Well I already bought the iPad Pro so I’ll just save up for a MacBook while the playgrounds app is still somewhat useful.
Actually it’s quite useful! I’ll refer to this glossary while I’m studying. Thank You!
Correct. Thanks for clarifying my rather sloppy explanation. :)
A bunch of years ago, Microsoft people had been putting out some inflentual books on programing well. One technique popularized by Microsoft was having two types of builds: debug and release. The debug build was meant to have all sorts of checks and balances in it, mostly to endure data consistency at run time. A significant technique here was making use of something called assertions. You would assert that an expression had to always be true. For example, prior to looping through an array, you’d assert that the array had to have at least one element in it. The most widely used assertions are preconditions where you ensure data looks a certain way before you perform an operation. For example, validating function inputs in a debug build is done through asserting preconditions. There are also postconditions and invariants. What does an assertion look like? For maintainability reasons, you want to make it clear what the condition is that must be met. So an assertion looks something like this: assert(some condition that must be true) for example assert(count &gt; 0) So what happened if an assertion failed? The assertion would raise a fatal exception and the program would halt execution (ie. crash). Microsoft claimed this was desirable in a debug build because you could then see the error when it happened, in context, and fix it. But what to do in release builds? Release builds are what gets shipped to customers as the final product. It would not be desirable for the program to crash. In fact, you’d want the exact opposite. If an error did occur, for any reason, you’d want the program to try to recover as much as possible and continue running. This property of the application to recover from errors is called resilience and the programming technique that accomplishes it is called defensive programming. What if you could exit a function early if some of its preconditions weren’t met? Instead of an assertion, which would crash an application in a debug build but would do nothing in a release build, we could simply write an if-statement to test if the precondition was satisfied. If not, we could then exit the function, avoiding any problems in the function that could be caused by unmet preconditions. There were lots of different recommendations for how exactly to go about returning early from a function. Suffice to say tgat today the clear winning strategy is to throw an exception. Of course, you’d have to handle the exception so the effort of defensive programming is much higher than assertions in debug builds because of tge additional error handling work that needs to be done. But it’s worth it if you want a resilient application that doesn’t crash in production at the first sign of trouble. Now we finally get to guard statements. What are they? Guard statements are a defensive programming technique that makes it clear what condition you are asserting must be true and also makes it clear what action you are taking to handle the case when that condition is not met. The condition under test is a precondition, a postcondition, or an invariant. Could you do this with a simple if-statement? Of course, and that’s how it’s done in languages that don’t have dedicated syntactic sugar for guard clauses. In Swift, the guard-statement makes it clear that this is not just a random if-statement that you just so happened to write as a guard. It makes it clear that this is a defensive programming aspect of the code that is specifically checking a precondition, postcondition, or an invariant 
This is a great blog post on the subject: [https://medium.com/@mimicatcodes/unwrapping-optional-values-in-swift-3-0-guard-let-vs-if-let-40a0b05f9e69](https://medium.com/@mimicatcodes/unwrapping-optional-values-in-swift-3-0-guard-let-vs-if-let-40a0b05f9e69)
Another of the utilities is to prevent [this](https://m.imgur.com/BtjZedW?r).
Read later 
It isn’t because the variable binding in a guard is valid after the statement, which isn’t the case for if.
Well yes its a bit of a distortion but it fills the void of an if construct that literally had no negation possibility. 
1. Apple firmly encourages "failing early and gracefully". 2. Guard statements avoid the stack of if...let's brought on by Swift, and they can be used to save a lot of vertical space. There's the obvious use of crushing if...let pyramids, but also: 3. Did you know you can combine a guard and try? statement to reduce the usually 3-5 line do { try... catch } setup to a single line? 4. Guard let statements also work just like if...let's but are intrinsically more powerful because they command your function to drop its work and return immediately, and this seizure of control is not a side effect: it's a core part of their purpose. It makes idiot-proofing the entryway to a method so easy: just can just guard that all required params have valid values or immediately return. I don't think you will suffer too much by not incorporating guard statements, but they've already been around long enough that coworkers will ask why you aren't using them. I've used guard...let and the more recent guard... try? with great success. They're not difficult to grasp and once you start using them you won't even notice it, just like you probably don't notice using an if...let anymore or an if...then anymore because they're just tools you've assimilated. That article you read might be accurate, but the author hasn't shown you the real reasons to use guard. Removing indentation stacks isn't a priority just for convenience/sanity (though it helps): it's a weapon you can use to reduce visual complexity. And even that is the least of the benefits that guard offers.
You will still need to tell visible views to refresh their color. So you could use Observers: [https://www.swiftbysundell.com/posts/observers-in-swift-part-1](https://www.swiftbysundell.com/posts/observers-in-swift-part-1) &amp;#x200B; &amp;#x200B;
Lots of good replies here. It's true that in some ways, `guard` is an unnecessary language feature. An `if` statement could be used wherever a `guard` statement is used. It doesn't provide any new runtime functionality, but it *does* provide features at compile time and author time which make it worthwhile (for me, anyway). The main advantages I see of the `guard` statement are: * Clearer intention when you are revisiting the code (or for when others are doing code review). You're signaling that this is a condition that "guards" against the submission of unexpected conditions. * Concise unwrapping of optionals. Since you often need to "guard" against nil optionals before executing code, it's nice and concise to `guard let` an optional to both unwrap it and handle the `nil` case in a single statement. Since this is often a trivial part of the function, it's appropriate that it is concisely expressed. * Defensive coding. The `guard` syntax, unlike a simple `if` statement, causes the compiler to ensure that the `else` block cannot allow code to fall through. That way, you can't forget to `return` (or `break` or `continue` if this is used in a loop) when you check that condition. If you get in the habit of using `guard` where it is appropriate, eventually it will save you from yourself. (This, I believe, is the main benefit of using it - it provides extra information to the compiler so that it can be more effective in checking your code for you.) * Reducing cognitive clutter. Similar to the above, if you get in the habit of `guard`-ing your preconditions at the top of your functions, it sets up a nice rhythm to your code, which ultimately helps readability. When you use it consistently, you have nice, clean `guard` blocks at the top of your functions that let you quickly check whether you've handled all the necessary preconditions, or, more likely, cognitively skip over the "just checking inputs" stuff so you can focus on looking at the core logic of the function. You could of course do the same with `if` statements and comments, but inasmuch as self-documenting code is useful, the `guard` block gives you a clean separation between the largely unimportant conditions that check for unexpected inputs versus conditions that are part of the natural logic of that function. It accelerates reading functions, basically, because you will know whether you're interested in looking at `guard` logic or not. * As mentioned by others, it does help avoid the "pyramid of doom", although `guard` doesn't do that exclusively - there are other techniques to fight that, as well, but using `guard` consistently helps ensure you don't even have to worry about them, because your code naturally avoids it. 
Not sure if this will help or not. But ask the developer which device and iOS version he is using for testing. He might have created Static UI which works on specific screen size. Also mention that you are facing issues in xyz devices/iOS version. Make sure that he develops app that works on all devices and iOS version as per the requirement. And he should be able to test the app on different device simulator even if he doesn’t have actual device, so there are no excuses. 
So the two current comments suggest using an extension to `UIColor` and `UIView.appearance()` (aka "appearance selectors"). These are two great suggestions, and in the one app where I implemented a dark theme, I actually used both of these together. If I had to implement dark theme again, I'd go this route again. The point of the extension is being able to use your own colors. So for example, if you set the `.textColor` property of a `UILabel` as `UIColor.black`, you're going to have a problem when you use dark theme. Instead, you can define something like `UIColor.text` (using extensions) and assign all label colors that value. Then, depending on the theme, `UIColor.text` could be set to `.black` (for a "light" theme), to `.white` (for a dark theme), or to something else for another theme. You can define more colors using this same principle like `.background`, `.accent`, or whatever you see fit. Then, you use the appearance selectors to do most of the job for you. For example, you can say something like "all label text colors should be `UIColor.text`", instead of painstakingly setting the color for each label. When you have a more "custom" view that doesn't conform to the generic appearance selectors, you can set those up in your View Controller, but remember to use the colors you defined, so they're subject to theme changes. Last but not least, keep in mind that appearance selectors, are applied when the view enters the view hierarchy. If there's a view that's already there, and you change your appearance selectors, there won't be any changes on them. The way I implemented mine, was that all the views can be reloaded (and are reloaded) when the theme is changed. But that is because the design of my app (design in terms of UX) allowed for this to be the case. If this isn't the case for you, you'll have to find a clever solution there.
Thanks for the reply The situation is that these guys they proved me that there in India is working and send me a short video but seems like here in U.K. is not working ( I asked them to do the test flight these days maybe will be solved who knows !) The issues are many about 15 errors major which sometimes come up suddenly and is not only related to the screens Of course an expert or someone who knows exactly and have enough experience will be something simple I don’t know yet what I know that I’m in trouble with my apps and of course i need to find an expert who know better where is the issue Highly appreciated Thanks 
Yes, it’s just for appearance - like white space in your code it isn’t actually necessary. 
Navigation bar will show if your view controllers are embedded in a UINavigationController. One option is to simply embed your popup in a navigation controller, however then your popup will also display a navigation bar.
Are you returning appropriate values in will and did finish launching per the discussion here: https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623112-application
Oh it seems it should work then.. because app returns to the foreground and viewWillAppear will be called again and URL will be provided. Am I correct?
It should, thought it would depend on exactly how you’re providing access to that url to your VC
I only access appDelegate in the viewDidLoaded. So it seems this is the reason... Simple as that. Thanks :) maybe any other suggestions?
It's got nothing to do with viewWillAppear. There are two app delegate methods you have to implement: You also have to handle the URL passed in the options dictionary in: application(_:didFinishLaunchingWithOptions:) 
Nope, checking it in will appear should fix that (though be mindful that will appear will be called much more often that didload, for example when coming back to the VC after displaying another)
Yes I will add checking for that :)
viewWillAppear won't get called when app switches from background to foreground.
Can you send a screen of the instructions, I don’t have an iPad
What book or playground are you reading?
Checkout my article about our company that is using server-side Swift (Perfect): [https://medium.com/@mikesilvers/server-side-swift-one-startup-story-bbe1f1788109](https://medium.com/@mikesilvers/server-side-swift-one-startup-story-bbe1f1788109) &amp;#x200B;
I'd like to add that the "shows intent" is very important. Most of a programmer's life will be maintenance, which means looking at code either he/she didn't write, or he/she didn't write recently (and has forgotten). Being able to clearly show the intent of the code can save a programmer a lot of time and aggravation. Guard just screams "these are preconditions."
Swift Playgrounds app
https://imgur.com/gallery/heCpf9g
These instructions are really not the best. Google should hold some good explanations. Basically the code inside a while loop repeats, as long as the condition is met. If there is another while loop inside the outer while loop.. well it gets executed as long as its condition is met. So as long as you dont hit a gem the inner loop repeats. When you hit a gem the inner loop finishes and the outer loop continues. The next iteration the inner loop starts again. 
Never done this before, but it looks like you’re on the right track. The outer loop condition will get checked the first time you enter, and every time after the inner loop completes. Am I blocked? No? Okay then go into the inner loop. The next loop is to keep moving forward until you hit a gem. So put some code to move forward. What do you do when you hit a gem? You’ll break out of our inner loop. You’ll need some code OUTSIDE of the inner loop, but still in the same scope of the outer loop. It looks like you’ll want to rotate left. Since you’re done with all of the logic under the scope of the outer loop, your code will jump back to the outer loop’s condition check. Am I blocked? No again? Gem time. Keep moving forward until you hit that bad boy. Exit the inner loop. Rotate. Back to the outer loop. Eventually you’ll get the last gem and rotate. At this point you’ll check the “Am I Blocked” condition and it should be true. Then your outer loop breaks and your code is finished.
Yeah, I'be done it numerous times, but it’s just been guesswork. I'm trying to fully comprehend what exactly is going on so the I can do it without just guessing until it works
Hey, maybe I can help, if I get a chance to look at the source code. I do have iOS development experience. Let me know if you need second opinion or something.
Hey, maybe I can help, if I get a chance to look at the source code. I do have iOS development experience. Let me know if you need second opinion or something.
\&gt; mostly for superficial reasons related to avoiding lots of indentation. I don't think of this as a superficial reason at all. Cognitive overhead grows with indentation level. As I've gotten older at least I've tried to keep code indented as little as is reasonable and I find it helps me to keep the code in my head.
Thanks. I think your explanation helps. 
Since you are on a nested loop page, I'll assume you already understand loops. So for example this will make complete sense to you: while !isOnGem { moveForward() // I'm guessing this exists } The above gets you to the first gem, then you have to turn left and walk to the next gem: while !isOnGem { moveForward() } turnLeft() while !isOnGem { moveForward() } And you have to turn left again: while !isOnGem { moveForward() } turnLeft() while !isOnGem { moveForward() } turnLeft() And again to the next gem: while !isOnGem { moveForward() } turnLeft() while !isOnGem { moveForward() } turnLeft() while !isOnGem { moveForward() } turnLeft() You see the repetition in the above? Loops are good for reducing duplication of this sort. while !isBlocked { while !isOnGem { moveForward() } turnLeft() } Hope this helps.
Thank you. My problem seems to be that my mind gets lost in the loops. I have trouble determining which code goes where. IOW, when does each code become active.
personally I would always favour a MacBook, but if you can make it work with an iPad now you might have a good workflow for when Xcode arrives on it.
Don't worry too much. I learned how to program about 40 years ago and I still find myself writing some code and then noticing I've written the same thing multiple times. Then I retroactively put the code in a loop. Just like with English or History papers, you code isn't done until you've written at least two drafts.
It's viewDidAppear, not viewDidAppeared. Come on. Get the method correct.
You can't. `Any` isn't compatible with `Codable`. You'll need to create your own `Codable` type that can store the types you need. 
Thank you :)
You must be a pretty confident learner if you're just now learning the thing you plan to teach a class about in a month.
But it states that app will be returned to foreground https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623112-application
Mac app I recently worked on we did nothing other than making the status bar template use light/dark/any in the assets. All the views and text change on their own based on dark/light mode.
It's weird but just reading that simple fact makes me feel *revulsion*. It's like seeing someone vomited on the sidewalk when you walk to work. I know that technically you could just not indent after an opening brace, but sweet heavens do I hope to never encounter such code. 
All good. Programming is programming.
It's a loop inside a loop. What's not to know?
Thank you very much appreciate that I can give access to GitHub account to have a look I need your GitHub Id probably for that I’m very curious if the source code is exactly the one which is in Apple developer account Can we compare this ? I’m very curious about that and obviously I presume that is not entire code in GitHub account or even in the Apple developer account it’s probably just the api part I don’t know that’s why probably are too many issues All the best and hope you can help me 
This specific example is bad to learn about loops because of the conditions. In this specific example, if you can finish the puzzle by just moving forward and if you arrive at a gem you turn left. The best way to learn about nested loops is to imagine a matrix. If you want to "traverse" a matrix though all it's indices you go like this: while (y &lt; max_matrix_size) { while (x &lt; max_matrix_size) { x++ Show(x,y); } y++ } In the example you gave they are using loops to solve a problem, but normally in games you don't use them like that unless the game plays automatically for you. In games you create the problem and give the player the controls to solve it.
`guard` guards further code, ensuring some condition has passed and it is safe to run, else that bad condition is handled properly. Unlike `if`, guard is for things which cannot be easily fixed, and so once their bad state is detected, there's no way to continue to later code.
This doesn’t help OP at all and basically asks the same question at the end of how to go about it. They change on their own? Magically? Or you made it change? Cue OP’s question again. 
This, absolutely. Swift is a great language because of its expressiveness; it expresses very well what the original writer intended
`viewWillAppear` and friends are reflecting the relationship of a view with its superview. App going in and out of foreground would not trigger these messages. You need to explicitly inform your screen logic about a valid incoming URL.
Detect early failure and exit. It's just syntactic sugar for an if. Otherwise you end up with "pyramids of doom" from all the nested ifs. 
It is difficult to appreciate until you code in a different language after using it. Guard statements allows you to easily indicate failure conditions in any scope, and write all of the code that follows the statement accordingly. Think about all the `if`\-statements you use to exit functions early: if you make them `guard` statements, the *compiler* can make sure they work that way. In general, `guard` statements are also the best way to unwrap optionals. Instead of implicitly unwrapping optionals that “shouldn’t” be `nil` after a certain point, you can use a `guard let` statement to *guarantee* they aren’t `nil`. You can do the same thing with `if let` statements, but those only unwrap a value within the corresponding block. A lot of seemingly redundant features in Swift are actually there for the sake of the compiler: the more errors it can catch, the fewer you have to deal with later.
I *highly* recommend using [Apple’s own guidelines](https://swift.org/documentation/api-design-guidelines/). You can supplement those with anything you want, of course, but those rules are extremely important.
Thanks for posting this; it may come in handy. I’m working on something that puts images in TableView cells and had really bad performance until I found the “use the cache first” setting. I’m wondering if it also would have helped to ask the server-side developers to change the cache headers, but I haven’t bothered yet. I’m also hesitant to use a lot of 3rd party frameworks, but I’m thinking about using one called Nuke. It looks to be updated frequently and quickly. I haven’t tried it yet, but from the documentation it looks like it makes it easy to resize the images before caching. The functionality you added in ImageView is a nice idea. I’ve barely done any work with Objective C, and not in a long time, so I’m curious about why you decided to subclass in order to add the functionality. I was glad to see this today. It matches my current interest. Thanks! 
If you aren’t interested in adopting more complicated asynchronous approaches like `NSOperation` or `DispatchQueue`, I recommend simply using `DispatchSemaphore`. It’s simple, reliable, and easy. If you want to coordinate more than one thing, `DispatchGroup` can be useful for that. Just be careful to make sure that it won’t ever be in a “finished” state before you actually start everything you need to.
Or, in short: in `else` section you must leave the `scope` the `guard` was put, and do not proceed any further.
Firstly: You should probably refactor your code to be less fragile in case of changes to your view hierarchy. That said, I think you probably want to use `viewControllers.first` instead of `topViewController` in your second line. I don’t know why you’ve embedded it in a navigation controller, but if you ever push something to the stack and change tabs, it’ll try to force cast the topmost controller in the second tab, rather than the root view controller. (But seriously, this all has code smell, I think you should refactor for better safety)
Ok, so the question I see is "Do I have to set every background color to black ? Or is there a shortcut ?" and my answer is "No you don't have to set the background color as the OS handles this for you." Am I missing something?
This is technically accurate, but I don’t think it’s a good explanation for a beginner because it uses concepts that a beginner wouldn’t necessarily understand. Also, the fact that they’re using Swift Playgrounds tells me that this person probably does not have a strong technical background. Here are several questions a beginner might have after reading your example: 1. What is a “matrix”? 2. What does it mean to “traverse” a matrix? 3. What are “indices”? 4. Where does `max_matrix_size` come from? 5. Why is`max_matrix_size` being compared to both `x` *and* `y`? 6. What does `Show(x,y)` do? 7. What does `x++;` do? &gt; In the example you gave they are using loops to solve a problem, but normally in games you don't use them like that unless the game plays automatically for you.In games you create the problem and give the player the controls to solve it. Maybe you’re not familiar with these programming lessons in Swift Playgrounds. The whole point of the exercise is to write Swift code to move the character in the scene. You aren’t building a game, you’re playing it. Your “controls” are a handful of predefined Swift functions like `moveForward()`, `turnLeft()`, and `collectGem()`.
If you don't know what a matrix is, you shouldn't event attempt programming. Go back to 8-th grade algebra, learn that well, and then start programming. Loops are by far easiest explained using vectors. A matrix is a bi-dimensional vector. If you ask questions like what is a matrix or what means traversing it, it's bad.
I made a simple mac menu bar app that shows your current ping to a specific website ( user can change this) in 2 hours, it now makes me money almost everyday, whereas other apps where I have spent weeks or even months...
Yep, I have a friend making 5.000$ / month with apps that cost him 2-3 days to do at most. And what you say is true for apps that have no major goal. People on their phone want apps that don’t require big knowledge or time to use. They want an app that does one thing and does it good. The story changes if your app is the entry point of a bigger idea. Like Uber, Tinder... There is where apps should be more complex.
Thank you. I ll try my best to figure out the issue. I am messaging you my GitHub Id. Checking the code and build he has provided is the only way to know how much he has actually worked on. But you can check when was the last time he commit/push changes in GitHub repo. 
Thank you. I ll try my best to figure out the issue. I am messaging you my GitHub Id. Checking the code and build he has provided is the only way to know how much he has actually worked on. But you can check when was the last time he commit/push changes in GitHub repo.
&gt; We are not on a sub-reddit where people are 10 year old I mean, the Swift playgrounds app was made for 10-year-olds. I wouldn’t be surprised if we got a few young developers on this subreddit.
It needs to be NSCoding for it to work which is different to Codable
Honestly, I wouldn't recommend anyone use these for new code, except for interop with existing frameworks. Just use RxSwift.
What’s the name of your app? Sounds cool
Its name is [SimplePing](https://itunes.apple.com/us/app/simpleping-menu-bar-ping/id1438310985?mt=12) (yes, Apple has a sample project with the same name 😅) 
That’s honestly a neat idea, no wonder people are buying it
Alternatively, set up a DigitalOcean droplet running Ubuntu and work with it on your iPad using Prompt 2. The cheapest server costs just $5 a month, and it’s really handy for running random things on. It won’t be as helpful as Xcode, but it will get the job done.
&gt;The functionality you added in ImageView is a nice idea. I’m curious about why you decided to subclass in order to add the functionality. I needed to store the url on the ImageView to check if it changed for optimization: [https://github.com/kgellci/Area51/blob/08f304bebb17596538fbeb0728c2a2d252267b1f/ImageService/Sources/NetworkImageView.swift#L18](https://github.com/kgellci/Area51/blob/08f304bebb17596538fbeb0728c2a2d252267b1f/ImageService/Sources/NetworkImageView.swift#L18) &amp;#x200B; You could accomplish the above by canceling current requests if the url changes but the ImageView would still need to hold some sort of reference to the request. &amp;#x200B; If you want to test out the behavior, you can add yourself to the Beta and try it out! [Area51 Beta](https://testflight.apple.com/join/V6vpApGX) &amp;#x200B;
I’ve already decided to just purchase a MacBook when I feel that I’ve outgrown Swift. Thanks for the workaround though!
One trick I’ve used is to make functions with a completion closure return a `DispatchSemaphore`, then have the closure itself signal it. It still feels messy and unintuitive, but it’ll do until async/await gets implemented.
There’s a lot to unpack here, but in general if you aren’t solving a problem for someone it’s harder to make money. If you want to do fun projects that’s fine. But your expectations should then be more like a musician. It’s really hard to make a living at it, and yet you should keep booking any gigs if that’s your goal. Ask yourself questions like, “Why should someone buy your puzzle game over another? How will they find me other than browsing the App Store? How can I engage those who have purchased to make them even happier, so that they might feel comfortable recommending my apps?” Long story short, you’re currently thinking like a dev wants making money easier (or more predictable). I get the feeling, life just ain’t that way for most. Try to think more like a business person and serve a real need, or at least with a delightful unique spin, and you’ll greatly increase the odds of success (however you define it). Tom Bilyeu has a great quote on this. “The struggle is guaranteed. The money is not.” Worth considering, as he started a billion dollar company. If you really want to make money I recommend taking the Tim Ferris’s approach here. Don’t build the product first. Test the market. Setup a landing page, or Facebook page, advertise, offer a pre-order discount if you’d like, and see if you get any traffic. I have no doubt if you stick with it, keep learning and improving your approach you’ll see a return and good growth.
All paths of your method must return an Int. Even the path where n is too big.
I removed that part and it still throws that error. 
If a function returns something, all possible execution paths must return the expected type. In your case, if you pass zero or less to the function, the loop is skipped and no return statement is executed. Keep in mind too, the return will break out if your loop, so this function may not do what you intend.
I completely got rid of the "if" part, but it's still throwing the same error.
What do you mean the return will break out of my loop? If you could explain a bit more please. &amp;#x200B; I'm trying to do exactly what I did in the "print" version of it, and return every multiple of 3 until a certain place. Putting the return outside of the "for-in" loop wouldn't work either. Kind of stuck.
Got it. Thanks for the beta!
You had me until eagles. Bear the FUCK down
So I found a workaround by reloading the 2nd tab's collection view data in its viewDidAppear instead of its viewWillAppear method. &amp;#x200B; I have no idea why this fixes the problem under tvOS.
It looks like you want to return an array of Int’s that are a multiple of 3. Instead of printing them, add them to an array and then return the array when the loop is complete. 
A function returns only once, so as soon as you hit the return the rest of the loop is ignored.
The *if* is inside the loop, so removing the *if* plays no part in the error. You still never hit the return if the loop is skipped.
LOL. I am not even a football fan. However, the most unlikely scenario is always what happens. Backup Qback Nick Foles will repeat again, after Wentz got injured. It is fate!! I am watching it now, just for this reason.
Thank you for your help!!! &amp;#x200B;
This is exactly what I did!! Thanks so much. Quick question -- I'm currently using a conditional statement, and if a set of numbers is less than or equal to "*n"*, it appends a set of numbers to a list. I'm having trouble with the else part. I want any other option to append "nothing" to the list. I've tried to use nil, but it isn't working. Any help? Here's the code.
 func findSum(until n: Int) -&gt; [Int] { var num1 = 3 var num2 = 5 var myList = [Int]() for number in 1...n { var threeMultipled = num1 * n var fiveMultiplied = num2 * n if threeMultipled &lt;= n &amp;&amp; fiveMultiplied &lt;= n { myList.append(threeMultipled) myList.append(fiveMultiplied) } else { myList.append(nil) } } "Nil" is where the issue is
By changing the status bar, all backgrounds change automatically you’re saying? This isn’t default behavior 
This is why I work for a company and make apps for our clients. I always get paid regardless if the app takes off or not and I can still work on personal projects subsidised by my salary in case they don’t make a profit - which when you factor in time spent and other costs is almost always.
Simply do nothing. You do not need the else statement. 
Simply do nothing. You do not need the else statement. 
You're looking at it the wrong way. It's not "good" vs "quick"; it's the amount of utility the app delivers.
Tell them it absolutely does not matter if they think it's working there; that's not what you're paying for. If it doesn't work for you, it doesn't work, period.
Thanks for the reply Yes of course , it’s unprofessional they obviously did something which is not ok That’s also part my mistake because I give them the project At least is not lost everything I probably can arrange with someone to repair the issues I know that’s not simple Cheers !
You can also just do: stride(from: 0, to: 15, by: 3) This will produce a `Sequence` which will have all the multiples of 3 from 0 up to, but not including, 15. let test = stride(from: 0, to: 15, by: 3) print(Array(test)) // [0, 3, 6, 9, 12] 
An easy way to do this is use a `Set`: let n = 100 let threes = stride(from: 0, through: n, by: 3) let fives = stride(from: 0, through: n, by: 5) // use a Set to combine them let combined = Set(threes).union(fives).sorted() // print all the numbers print(combined) // print their sum print(combined.reduce(0, +))
Does it need to be an array of arrays? Could you instead do an array of a tuple?
It can be anything. I am new to swift. So what ever is the best method. This is the struct I started with but hit a road block. struct datalist { var name : String var value : Double } 
How are you getting this data? What is this "process within a loop"?
This was very helpful thanks for sharing!
I’m really glad you liked it! Let me know what else you’d like to see :) I might write a follow up which shows the solution to the challenge 
If you're trying to associate the name and that number, you could make a struct like you did in another comment. For example, you could create an Account object like so: struct Account { var name: String var balance: Double } Then you can create an array of Account objects: var accountArray = [Account]() let mikeAccount = Account(name: "Bob", balance: 2.15) let chelseaAccount = Account(name: "Chelsea", balance: 3.05) accountArray.append(mikeAccount) accountArray.append(chelseaAccount) And to sort the array by the balance, you could do this: accountArray.sorted(by: { $0.balance &gt; $1.balance }) Let me know if I need to clarify anything :) 
So I got everything but the sort working.
Can i join ? 
The sorted(by:) function will return a sorted array that you can use: let sortedAccountArray = accountArray.sorted(by: { $0.balance &gt; $1.balance }) I'll update my previous answer to include that too 
Got it. Thank you. I had the sort in a separate function and called that function slightly to early. Appreciate it!
I started to learn Swift too on the SoloLearn app on my IPad. I am too broke to buy a Mac and my IPad was a gift. So far, I am liking it despite the fact I come from the Android development world. 
Void is a typealias for a tuple, and tuples are value types. It's not so much that it has only one instance, as this is a meaningless thing to say about any value type. Does the Int `2` have more than one instance in Swift? Yes and no. There may well be many places in memory that hold the bit pattern of the Int `2` in your program. You can't easily tell if this is the case, and it wouldn't do you any good if you could.
Huh, I thought calling `precondition()` was the way I was supposed to scream in Swift that these are my preconditions.
Thanks for the reply. Still fairly new to swift, haven’t even made it through the iBook yet. Will come back to this once I reach sets. Appreciate the help 
Try /r/iOSProgramming
Probably not, but you can avoid that entirely by just using the simulator to take the screenshot for you rather than using the macOS screen capture. CMD + S is your friend. 
Why you would need it to be? Why would you want it to be? It costs you little time to re-take a good picture without a cursor.
You can take the screenshot of the simulator screen by CMD+ctrl+C (copy screen, can also be found in the Edit menu)
I'll post there too, thanks!
Why are you forced to use the simulator? You should be able to load the app to your own phone, and then you can do one of two things. 1. Do a screen recording. The con is that the red clock will appear in it, and I'm not sure if that will fly. 2. You can use quicktime to record your phone's screen. I've used this for my app videos.
You can compile frameworks and submit to the store. Cocoa pods should setup your workspace in the right way for this to work. 
If I had an iPhone 7 + &amp; iPad 12.9", I would go for that second option in a heartbeat. However, I only have an iPhone 7 :P.
There’s always this... https://stackoverflow.com/questions/25797990/capture-ios-simulator-video-for-app-preview
Got it, makes sense. Also, Mojave has new options for screen-shotting if you press `cmd`+`shift`+`5` (this wasn't there in high sierra afaik). You can press `record selected portion` and under `options` you can uncheck `show mouse pointer`. Hope that helps. Good luck!
Welcome aboard my friend!
You can do it with Google's Maps SDK for iOS using KML: https://developers.google.com/maps/documentation/ios-sdk/utility/kml-geojson but it is a completely separate SDK for Google's map view, unrelated to Apple's MapView.
Are you trying to save custom object into UserDefaults? If so, you can try Codable and PropertyListEncoder : @IBAction func saveUserDefaults(_ sender: Any) { let player = Player(name: "Axel", highScore: 42) let defaults = UserDefaults.standard // Use PropertyListEncoder to convert Player into Data / NSData defaults.set(try? PropertyListEncoder().encode(player), forKey: "player") }
It means this property is readonly, you can not mutate its value. A read write property would be `{ get set }`.
Thankyou!
Also, how do you guys handle a tree if (from what I know) swift doesn’t give you access to its pointer? If it isn’t in the heap, how do you traverse a tree and add to it if need be 
Also, I’ve used a cocoa pod called “Fingertips” which can overlay taps on the screen for those recordings too. https://github.com/mapbox/Fingertips
Use the QuickTime Player, create a new video recording and select the simulator to be the source.
So I come from a C++ background, and Swift's treatment of "Void" is closer to functional programming than C++. It's still a compromise, but it's one focused around functional-correctness, rather than procedural-performance-optimization. &amp;#x200B; Consider the following template code for C++: template &lt;typename RetType, typename...Params&gt; RetType verbosely_call ( RetType (*any_function)(), Params&amp;...params) { std::cout &lt;&lt; "I'm calling a function and I'm too lazy to print a set of variadic parameters" &lt;&lt; std::endl; auto result = any_function (params); std::cout &lt;&lt; "I did it, and the result is: " &lt;&lt; result &lt;&lt; std::endl; return result; } This is very generic code, and maybe helpful! It also fails to compile if "any\_function" is one of the following two functions: int sqr (int x) { return x*x; } void do_side_effects (int y) { std::cout &lt;&lt; "I'm printing out " &lt;&lt; y &lt;&lt; std::endl; } Now, if I was a masochist, and really wanted my libraries to be easy-to-use, I'd resort to adding a specialized template for RetType=void, with which I avoid storing the result, avoid printing the result, and avoid returning the result. I then specialize all of my functions that rely on verbosely\_call's return type in the same way. If I'm storing the result as a lazy tuple, I have to specialize to avoid errors with things like tuple&lt;std::chrono::timestamp, void&gt;. IMO, it should be perfectly valid to write: &amp;#x200B; auto timestamped_result = make_tuple (system_clock::now(), do_side_effects()) But C++ does not allow this ( [https://godbolt.org/z/zLYI\_z](https://godbolt.org/z/zLYI_z) ) &amp;#x200B; Swift does not have this problem. &amp;#x200B; tl;dr; Every function in Swift returns a value that can be stored into a variable. And so there's no need to specialize generic-functions around "void" returns as there are in other, more procedural, languages. Less specialization makes for less duplicate code, and that's *probably* easier to digest. &amp;#x200B;
Guess as an exercise this is cool, but Coredata seems to do everything. Just does. One should know about the concept of searching. And what that really means. Kind of cool. :-0
maybe you can add a weak reference to itself in the class declaration
Does this help? https://www.raywenderlich.com/990-swift-algorithm-club-swift-binary-search-tree-data-structure
Happy cake Day! &amp;#x200B;
Well, Swift has the `Collection` protocol which models groups of items. Some examples are `Array`, `Dictionary`, and `Set` `Array` is an indexed group of values that have an order. You can access them in order or out of order by using a subscript. In fact, all collections can be accessed with a subscript but with `Array` you control the order directly. You might not have control of the order with other `Collection` objects. `Dictionary` is a group of key-value pairs that you can look up by key. The keys are unique and must be `Hashable`, that is they must be able to be distilled down to a single value that can be compared. Out-of-the-box common keys are `String` and `Int`, although others can be used. The order is not guaranteed, a `Dictionary` will order the key-pairs according to an internal algorithm. `Set` is similar to `Dictionary` but the values act as keys. So they must also be `Hashable` and unique. The order is also not guaranteed. A `Set` models a bunch of unique values that can be combined in different ways, using [set theory](https://en.wikipedia.org/wiki/Set_theory). So it has `union`, `intersection`, `isSubset`, `isSuperset`, and other ways of working with groups of items. In my code I'm using a `Set` because you want to combine two groups of numbers so that they don't duplicate. For example, both the `threes` and the `fives` will have the value 15, when we combine them there will be two number 15. In a `Set` there will only be one, by design. My last line involves something called functional programming. It applies an operation called folding which "folds" multiple values into a new form. In Swift folding is called `reduce`. My statement calls `reduce` on the `Collection` with an initial value and a way to combine all the values - in this case using the addition operator. It will start with 0 and apply addition to every element, producing an `Int` that represents the sum of all the elements.
Thanks, I’ll give it a look!
Hi imnitpa! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/adijfk/app_crashes_in_ipad_everything_works_on_the_iphone/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Continuing to develop/improve my first app in the App Store :-) Improving the current featureset for now, moving to add additional features later.... [https://itunes.apple.com/ch/app/smartreact/id1445349309?mt=12](https://itunes.apple.com/ch/app/smartreact/id1445349309?mt=12)
Hey everyone! I'm writing an application that uses Twitch for my capstone project this semester, and so I took to writing a library to do the heavy lifting for me. For anyone that is new to Swift, I included a basic example project using this library that displays Twitch videos from a user in a TableView. You can find the example in the linked repo. If you have any suggestions, I'm very much interested in learning them! Like I said, I'm going to be using this library as well, so expect continued development. :)
If the framework doesn't allow you to set it you could also decide to fork it yourself and update it to allow for it. Some cocoa pods are not well maintained (which would be a red flag to begin with) but sadly other cocoa pods have specific requirements that are hard to meet while using bitcode. Usually those are the ones that have a lot of low level code.
Well the core graphics api is the same so you probably don’t need to do much besides changing your syntax for the variable and function definitions. 
How can I check if I can set it? I have done a lot of various fixes and right now app with my framework has archived successfully... But the strange thing is I can't build it as release app.. only debug.. but how on Earth did I passed archiving? :D
👍🏼 good job op
Great work dude! I’m sure it’ll be very useful. 
Thanks buddy! :)
i love u 
I love him more 
Try the inverse of this: https://stackoverflow.com/questions/32640149/disable-bitcode-for-project-and-cocoapods-dependencies-with-xcode7/36174399 This will enable bitcode every time. Clear your derived data, `cocoapods install` again and see what happens when you build.
&gt; The ◊ operator can be found on Apple platforms with alt-shift-v. Found the (former?) Windows user!
https://docs.swift.org/swift-book/LanguageGuide/Protocols.html
oh wow, will try in a second. So I should change NO to YES? :)
Id did builded successfully!
It won't let me install as a Cocoapod or Carthage
But is the syntax Objective-C or Swift?
Getting these errors: [https://imgur.com/a/MsqXFXd](https://imgur.com/a/MsqXFXd) &amp;#x200B;
use the [swift syntax](https://developer.apple.com/documentation/coregraphics/cgevent/1454356-init) for CGEvent calls. I haven't used these APIs before so I don't know any more implementation details. Also, unlike Python, every property/variable needs to have 'let' or 'var' in front of the name, and tuples need to be defined in parentheses. let (x, y) = CGEvent.init… 
Did you read them? The first one literally tells you what to do...
Huh? And also: huh?
bump...just checking to see if anyone knows. &amp;#x200B; Thanks in Advance!
No, I did not say that. I said that on Mac the OS handles colours for you unless you have customized your UI colours. If you have artwork in an asset catalog, then you can configure the artwork for dark, light and any.
... so yeah you’ll have to configure which colors to use based on the theme. So back to OPs question. More than likely they aren’t using default colors because they are specifically asking about changing it for a theme
It's somewhat difficult because the same operation in different contexts may perform differently, depending on inlining and such. For example, this snippet would imply that several operations take zero time, when that's obviously not true: https://pbs.twimg.com/media/DC9EtIXUAAAQlgH.jpg:large
no, functions *can* return "something" but they don't have to. see the documentation: [Functions Without Return Values](https://docs.swift.org/swift-book/LanguageGuide/Functions.html)
The problem isn't even that it's lacking or untested. The problem is that it's nearly identical to the code in the article without giving it any credit. Link to the original article. Say 'inspired by \_\_' or 'adapted from the tutorial here:' at the very least. In the world of open source and coding tutorials there isn't *real* plagiarism, as most devs will actually want you to copy their codes and use them in your projects. However, if you really wanted to help people learn you'd link to it or add info about the source in the comments. I always do that in all my codebase, basically like citations at the bottom. Especially if it's from any kind of official docs. I'm not the code police and you don't have to apologize to me lol. 
Functions don't know what to return and don't always return something. So if you have a function that returns nothing (void in other languages) you don't need a return If the function returns for example an integer, you may return different values based on the inputs. So then you need to have a return statement or multiple to let the function know when to return If the function returns an optional you will need to tell it when to return a value versus nill for example. Functions may also return early. So you could be doing several operations and depending on the state of things, you return half way through the function so you don't need to do the rest. So you tell the function to return there.
You use `return` to indicate an exit point. If the function reaches the last brace and has nothing else to do then the `return` statement is inferred: func foo(bar: Int) { if bar == 5 { // early exit return } // do something else // end of function so return is assumed } You can also use `return` to pass information back to the calling point. In that case the `return` statement is not inferred and needs to be placed at every exit point, including the end of the function. func foo2(bar: Int) -&gt; Int { if bar == 5 { // early exit with a return value return bar + 2 } // end of function, supply a return value return bar + 5 } 
When going through the body of a given function sequentially and the return type is executed, the value after the return syntax is returned to whatever the function is being assigned to. i.e., func foo( ) -&gt; ReturnType { return ReturnType() } let isNowOfTypeReturnType = foo() //isNowOfTypeReturnType's Type is ReturnType When creating a function, there must always be a return of a type. And if there is no return type explicitly typed, it's inferred to be of type Void, which is a type. And if there is no return call, the return is assumed to be Void and at the end of the function's body. So no matter what, a type is always declared and returned. You could actually create a function as follows: func foo() -&gt; Void { print("Printing from a Void function") return } Which is the same as: func foo() { print("Printing from a Void function") }
There are different kinds of functions. I ll just state some example for better understanding: Example 1: func setColor() { View.backgroundcolor = .red // some more line of code for setting color to different views } When you call setColor() function, it ll change color of view’s background. Which means it performs some task but does not return any thing. Example 2: func addIntegers(a: Int, b: Int) -&gt; Int { return a+b } When you call addIntegers, it ll return an Integer value. you ll have to assign that returned value to a variable or a constant. let sum = addIntegers(a: 5, b: 9) Print (sum) // output: 14
Check with your library’s binary for bitcode supports with -fembed-bitcode.
I provided fembed bitcode in build settingss. Is that all?
Targets could have to override the project settings
I updated the post by adding screenshot. is this correct?
You'll have to check the docs for each operation: https://developer.apple.com/documentation/swift/array/1538872-append &gt; Complexity: O(1) on average, over many calls to append(_:) on the same array.
I haven't used it but https://github.com/davecom/SwiftGraph may be worth looking at too 
If you a serious about development, a 2013 device is not good. Slowness is the enemy of flow. 
Nice work and presentation.
Thanks for the feedback. Don't really understand why though. The MBP was pretty high end back then and shows decent numbers at Geekbench ([https://browser.geekbench.com/macs/344](https://browser.geekbench.com/macs/344)). About 2/3th in single core and about half in multi core. Additionally it looks like the hogging has to do with the behaviour of Xcode. Is there any way to tweak this?
This might not be very helpful, but that seems to be the same configuration I had on my old Macbook Pro, and it wasn't as bad as you described. That said, Xcode doesn't handle incorrect syntax well. If a big part of your code has the wrong syntax or type inference is really difficult to resolve, Xcode will struggle and hog your CPU to try while trying to understand what's going on with the code. You can either simplify the type inference process by manually defining types of variables and closures, or [try cleaning the SourceKitService cache](https://stackoverflow.com/a/39994699/3454741) and hope for the best.
Thanks for the feedback. It confirmed something was wrong. Figured it out. Turned out to be iCloud doesn't like Xcode projects :)
After 2 days still no help... it seems that all frameworks have not enabled bitcode... can this be a case?
I’m thinking of creating something dedicated to creating memes. Any thoughts or suggestions? I’m open to criticism 
Hey there, glad you figured it out! I’m working on a 2009 MacBook with max RAM (2019 resolution: get a new laptop) and didn’t see the slowness you described. Quick question though, I’m new to swift myself and I was curious about the course you were taking; is it good/have a link? Thanks!
The coupon code is **INVITEID107.**
that's right!
I’m planning of doing a lot of studying the coming year so I splurged and got the LinkedIn premium for a year (basically old Lynda.com). Lots of courses on development and graphic design (two of the things I want to learn this year). 
It still does not work... I get error that cocoapods dependencies don't provide bitcode. I tried remove my depedencies and add another pods but I got issues with every one of dependency. It seems it is impossible to compile a framework with other depedencies in it 
:O
I am working on my programming language called Swizzle. var vector = Vector4(0, 1, 2, 3); swizzle4(vector, "wxzz"); Swizzle is fast because it is in Swift and has a clean, familiar syntax. I am thinking of providing more vector types and implements a list. I am also focusing on traits. After those are implemented I will focus on compiling to LLVM IR for the best performance, but here I have no idea how it works LLVM has very confusing tutorials If you noticed, I used the words LIST and TRAIT. Should I rename these array and protocols? It can be any combination of these things. 
&gt;Turns out that storing your files on iCloud is not a very good idea. Did you seriously not know this? 
You can try this idea, but I don't know how advanced you are: 1. Get a database of memes. 2. Create a NaturalLaguage tagger. 3. Get the most common word patterns. 4. Then create a meme following the pattern. You are using AI to aid in meme creation. 
Yes, I knew it but decided to try anyway and frustrate myself into looking at anything but the file system. Twat. 
There's bits of HTML code in your Swift examples, just FYI.
Can someone please tell me the topics of the given talks? Because I don't want to attend Conference without knowing the topics...
Perhaps you have pushed to a different branch? GitHub shows the master branch by default. 
I’m working on a finance app. About time I learned to manage money. So hitting two birds with one stone.
⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠘⠃⠂⠄⠂⠐⠐⠓⠒⠘⠃⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠯⠾⠉⠾⠨⠿⠣⠇⠿⠁⠘⠏⠏⠾⠄⠷⠿⠩⠰⠆⠿⠻⠩⠘⠅⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣀⣀⡀⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠠⣯⣿⣼⠄⠄⠐⢀⠄⠄⠄⠗⠄⠄⠄⠄⣼⡧⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠁⠄⠈⠄⠄⠄⠉⠄⠄⠄⠄⠄⠄⠄⠄⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄ 
Unity3d 
I haven't made a game yet, but have you tried apple's libraries? I think GameKit lets you keep track of game state, SpriteKit can do 2D animations and physics.
LOL
What is an "idle" game?
It's surprising because you'd think Apple would've designed around the issue. Xcode has had known issues with working with projects synced with iCloud for a while now, with no real resolution. You'd think they'd at least detect the issue and tell you rather than let the system burn the CPU.
DI and storyboards don't really play well together. Ideally, you would want to pass dependancies into your VC via a custom \`init\`, but as you can tell, that's not possible when initializing VCs from Storyboards. Here is a decent stack overflow post: [https://stackoverflow.com/questions/35315404/custom-init-for-uiviewcontroller-in-swift-with-interface-setup-in-storyboard](https://stackoverflow.com/questions/35315404/custom-init-for-uiviewcontroller-in-swift-with-interface-setup-in-storyboard) In my code, every VC is created in a Storyboard, but I initialize everything in code using the sameish code that you used. Then I just manually set the properties on the newly created VC before manually pushing them onto the Navigation stack. I don't use segues and I create navigation controllers in code and manually push VCs. It works pretty well. With some fun extensions on your view controllers, you can make it work pretty well. I have a lot of code that looks something like this: \`\`\` **private** **func** pushPairingVC() { **let** pairingVC = PairingViewController.instantiate(from: .Pairing) pairingVC.pairingDelegate = **self** navController.pushViewController(pairingVC, animated: **true)** } \`\`\` &amp;#x200B;
Use unity. It’s built for this and plenty of tutorials 
Wikipedia say: &gt; Incremental games (also known as idle games, clicker games, or clicking games) are video games whose gameplay consists of the player performing simple actions such as clicking on the screen repeatedly ("grinding") to earn currency.
Did you do a git add, commit, and push?
yes, I did everything but it's constantly like new empty project pushed
Did you add the remote url?
EventKit is available on macOS too.
And here I thought it was just a misspelling of “indie”
I think this is what you are looking for [https://developer.apple.com/documentation/eventkit/creating\_events\_and\_reminders](https://developer.apple.com/documentation/eventkit/creating_events_and_reminders) &amp;#x200B; EventKit comes in 2 flavours EvenKit for OSX and EventKitUI for iOS. &amp;#x200B;
I know **swift** only, should i learn **Obj-C**
Usually the stuff that controls all that is on the server side. As for the graphics and stuff, you could use SpriteKit or Unity or something like that. 
Thanks! :D 
I see, thank you :D &amp;#x200B;
Good time to learn git and use GitHub! 😀
You need EventKit to access the event store, even in iOS.
Welcome to the fold.
Absolutely! For now I’m just using the playground, but will go the Github route once I’m starting to develop something interesting. Thanks for the tip anyways!
Had to Google what that means, but thanks man!
I believe what your looking to do requires you to implement and assign a UICollisionBehaviorDelegate to your UICollisionBehavior instance. First you want to add all the objects that can collide to the UICollisionBehavior instance either through the init or by calling addItem. Then the delegate will get called when collisions occur. In the delegate functions is where you add code about keeping and updating the score. &amp;#x200B; Here is a good tutorial. [https://www.raywenderlich.com/2326-uikit-dynamics-tutorial-getting-started](https://www.raywenderlich.com/2326-uikit-dynamics-tutorial-getting-started)
My thoughts exactly. I guess in large companies the right hand has no idea what the left is doing.
From the command line try "git status" from your repo folder. You should see something like `On branch master` `Your branch is up to date with 'origin/master'.` followed by output for any files that have been changed and not committed to the repo. Make sure the branch name you see in "On branch ..." is the same as what you're viewing in GitHub, you may be pushing to a different branch. 
I checked out, it is on branch master. After that, I went to github and checked whether branch is master - and it is, there is no other branch. It's really weird, I also tried making different repo, but issue is still there. 
yes, everything as you said, but still empty
I would delete the git folder and start over
Well, seems like it's only solution Thanks god it's not huge project or I would **commit -suicide** 
Try running these four commands: `touch readme` `git add -A` `git commit -a` `git push origin master` The first command will create a readme file, just so you're sure you have a file to test with. &amp;#x200B; Can you run those commands from the command line and supply any output you receive back.
Hi there, do you need any help? Will be happy to collaborate on your project. And study some new cool things together (at least how to collaborate on a finance app 😅)
Mostly they're about small numbers turning into impossibly large numbers. So, he might want a big-num library (but Decimal my be sufficient). The best examples of the genre are (from best to worst) Realm Grinder, A Dark Room, and Cookie Clicker. Honorable mentions for Candy Box 1 &amp; 2 if you can still find them anywhere.
Honestly, for an idle game, you could make it a text based terminal app.
I would say yes but I am currently on lecture 5/428 in my iOS dev course lol
Hello! I am also new and would love to be your buddy. Don’t be a stranger, shoot me a PM and we can collaborate!
I have a project that I have been working on provately and have been thinking of making it public to get collaborators in. If you are interested, let me know.
Here's a good article on the [math involved](https://gameanalytics.com/blog/idle-game-mathematics.html).
Great project. Using technology to identify warning signs can save countless lives. It’s sad that you have to spend millions in R&amp;D to release a medical device tho. 
Developing my first app, a HackerNews reader with a UX based off my favorite Reddit apps!
Objective-C wouldn't be my first choice for something new to learn. If you want something a bit lower-level and systems oriented, maybe look at Rust or modern C++. Rust has some similar syntax and concepts to swift (optionals, lambdas, higher-order functions, traits/protocols, memory safety). Modern C++ is getting better but is still a beast. If you want to learn something different and interesting, take a crack at haskell. It'll have some things that are familiar to you from swift but it will have you changing the way you think about programming too.
What course are you taking?
I’m a newbie too! Would love to learn more and get some friends while learning! I’m from the Netherlands so I’m GMT(+1). 
So, it didn't occur to you that accessing files over the internet (several orders of magnitude slower than locally-attached storage) would negatively impact a highly I/O intensive task like compiling code? &gt;Twat. Yes, you are.
I may be wrong, but when I was on starting lectures (with no experience in programming) there were so many things to learn that I don't have a minute to work with someone I believe it's depends on a person, but you probably want to dig up a little bit deeper before another junior brings another portion of a knowledge distraction 😅
Huh. How..
True
If only there were an article attached to the post that explained it.. :p
I don't know if it's still relevant but Cocos2D was a big one. 
Nice job OP. The only major thing I see is that you're using an essentially deprecated library Marshal instead of the new Codable API.
I am a full time C# programmer trying to get into Swift/iOS currently working through the free Stanford course from 2017 on itunes U. would be very interested to get something going. Slack/Discord maybe?
I'm very dissappointed in xcode as a tool in general. Swift is a great language, but the tooling is sup par. IMHO iCloud should not be a default. It's completely unnecessary considering 'git' is a thing. Let's just say you do want it, for whatever reason, it shouldn't be this laggy. If google docs can be responsive in a browser of all places, xcode can sync seamlessly with icloud in a playground. We're talking about text here. Just wait until compilation is done and beam it up! Just them pushing more useless features nobody asked for so they can push their services on you. I mean this is the one major tool people can use to build apple software besides appcode, I depend on it. It's almost as if their developers develop it on super computers and don't test it anywhere else. I have nfc what apple is thinking honestly. I have trouble with xcode, upgrades, crashes, bugginess, slowness every damn day even after massively tweaking my build settings and optimizing everything in the book. It's just a flat out PIA. 
Thanks for the suggestion! Originally all I had in mind was an free flowing editor for people.
I’m taking mark prices dev slopes course iOS 12 &amp; Swift 4 online. 
Hello, I would be up for this! I'm a junior as well but have two apps on the app store through a bootcamp. I am in Los Angeles (CA) so PST here too!
I assume that you're trying to rewrite `return CGSizeMake(view.frame.width, 150)` Which in "modern swift" is written as `return CGSize(width: view.frame.width, height: 150)` Hopefully that's what you're after. Happy coding!
dot conferences (dotSwift, dotJS, etc.) don't announce the talks ahead of time, but you can look at [videos from last year](https://www.dotconferences.com/conference/dotswift-2017) to get a general idea of the kind of topics that might be covered.
Thanks for the help man! Cheers!
Thank you for the offer, but I’m almost done with it. Will be sure to collaborate with you when I start a new pet project. I’ll let you right here in this comment stream.
 This will make all the data science jobs too accessible, we need more gatekeeping! /s
Thank you :) 
As you may or may not know, iCloud files are stored locally, then synced to the cloud. The latter caused the issue. Source: SAN/NAS system engineer for 15 years. 
Thanks for the feedback. I will definitely start using Git once I have some project in mind. For now I’m just, well, playing in the playground :). Also will learn some other languages, so maybe will walk away from Swift altogether. 
what is your process? is it something you can calculate the completeness of or is it completely random? case yes: just display the progress of your process. case no: i would suggest to use a loading spinner instead of a bar. you can display it after the process ran for more that 1s and hide it at least after a second being displayed (to prevent flickering)
Can’t calculate it. Is there any way to make a progress bar behave as a spinner? Basically the bar just keeps scrolling while function loads? 
Hi! Im junior iOS developer too, and not good at English too. So we stands similar position. I have recently worked at a company producing news media service in Japan as iOS developer. I think we are to be good friends, pls PM to me!
&gt;Modern C++ If I learn Modern C++ where can I used it beside from the gaming, I know C++ is used in Unreal-Engine and can I use c++ in iOS development Thanks For Replying 
Use a spinner. Progress bars are for where progress percentage can be calculated or at least estimated. If you can’t do that, then a spinner is the correct UX
Sure I’d be keen to chat. I’m still quite junior with Swift but I’m moving quickly - currently working on a project and would like to get your thoughts on some things. Always good to have someone to talk about ideas. PM me whenever :)
A normal progress bar is designed (from UI and UX point of view) to display a progress from 0% to 100%. Since you cannot estimate the progress, you cant show it on a bar also. Thought there are some progress bar designs out there where it is always full and simply shows the progress by blinking or moving somehow, it is not what most users are used to and would expect. The best thing would be to use a progress spinner.
Full time ios-dev (since aprox. 2 years now) in germany here :wave: pm me if I can help :) 
You’re GMT-8, not GMT+8. 
similar one [https://github.com/cruisediary/Pastel](https://github.com/cruisediary/Pastel)
`Counting objects: 191, done.` `Delta compression using up to 4 threads.` `Compressing objects: 100% (185/185), done.` `Writing objects: 100% (191/191), 203.75 MiB | 980.00 KiB/s, done.` `Total 191 (delta 40), reused 0 (delta 0)` `remote: Resolving deltas: 100% (40/40), done.` `remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.` `remote: error: Trace: f7aa64eda51baadad45a17dbe34ad7d3` `remote: error: See http://git.io/iEPt8g for more information.` `remote: error: File WhatFlower/FlowerClassifier.mlmodel is 218.53 MB; this exceeds GitHub's file size limit of 100.00 MB` `To https://github.com/bogdanbgd7/test_ml.git` `! [remote rejected] master -&gt; master (pre-receive hook declined)` `error: failed to push some refs to 'https://github.com/bogdanbgd7/test_ml.git'`
Thank you for the offer, but I’m almost done with it. Will be sure to collaborate with you when I start a new pet project. I’ll let you right here in this comment stream.
I think the [Swift book](https://docs.swift.org/swift-book/LanguageGuide/Initialization.html#ID217) is pretty clear on this: &gt; ###Designated Initializers and Convenience Initializers Designated initializers are the primary initializers for a class. A designated initializer fully initializes all properties introduced by that class and calls an appropriate superclass initializer to continue the initialization process up the superclass chain. &gt; &gt; Classes tend to have very few designated initializers, and it is quite common for a class to have only one. Designated initializers are “funnel” points through which initialization takes place, and through which the initialization process continues up the superclass chain. &gt; &gt; Every class must have at least one designated initializer. In some cases, this requirement is satisfied by inheriting one or more designated initializers from a superclass, as described in Automatic Initializer Inheritance below. &gt; &gt; Convenience initializers are secondary, supporting initializers for a class. You can define a convenience initializer to call a designated initializer from the same class as the convenience initializer with some of the designated initializer’s parameters set to default values. You can also define a convenience initializer to create an instance of that class for a specific use case or input value type. &gt; &gt; You do not have to provide convenience initializers if your class does not require them. Create convenience initializers whenever a shortcut to a common initialization pattern will save time or make initialization of the class clearer in intent. 10 second read vs 6 minute video…
The easiest way would be to use `NotificationCenter` inside your long-running method: // Set appropriate data into `object` parameter `NotificationCenter.default`[`.post`](https://nc.post)`(name:` [`Notification.Name`](https://Notification.Name)`("SetNotificationName"), object: nil)`
There is the problem. GitHub has a max file size of 100 MB. The FlowerClassifier.mlmodel is too large at 218 MB. You're going to have to figure out how the get that file size down or not include it in the repo. At this point the local repo has it so simply removing the file won't work. Easiest is to create a new local repo without ever committing the file. Or you can read up on removing the file from the repo history, but that gets complicated. 
Yes, I’ll try with Github LFS, there is no other option. Thanks Kraken! 
Kotlin is turning out to be a fantastic language. I'm not a huge fan of Android, but we use Kotlin for server side development and I'd definitely recommend it.
TIL about Charles Proxy. That could be useful for some reverse engineering. 
I have a command line Mac OS application. How can I add a Cocoa App to the same Xcode project? I want to have two separate apps, one is operated from the command line and one is a GUI that can use some of the classes and stuff already defined in the command line app.
But why? typealias ItemTypeTuple = (itemType: ProfileItemType, object: Any?) If you go with a protocol-oriented approach you can simply define a protocol for each `ProfileItemType` case and code to those. Then you can have associated data for each `enum` case and avoid using a tuple like this altogether: protocol ProfileButtonViewModel {} enum ProfileItemType { case button(ProfileButtonViewModel) } class SomeProfileButton: ProfileButtonViewModel { } let button: ProfileItemType = .button(SomeProfileButton()) You avoid the use of `Any`, a good idea in a strongly-typed language. It also removes a lot of unnecessary typing and visual clutter.
r/UI_Design
We just released [Bow](https://www.47deg.com/blog/bow-announcement/) \- an open source library for bringing Functional Programming concepts to Swift. It's a counterpart to the Arrow library for Kotlin.
I think I am creating demo for beginners along side talking about swift features. May be you missed first video:)
As a beginner, that’s incredible work. Thanks for sharing, and would be awesome if you can do it also for other type of apps. One question: I am working on a similar app, that has an home view controller. The different categories in your homeVC (most viewed, new, etc...) are one big collection view divided in sections or a lot of collection view one after the other? I use few collection view and sometimes the data doesn’t get fetched from my DV (firebase)
From the project you can choose File -&gt; New -&gt; Target... From there you can use the Utilities -&gt; File Inspector Panel to control which targets a specific file will be included in. When adding UI specific files you'd want to make sure they were only included in the Desktop Application target and not the command line target.
Thank you, you’ve saved me a ton of time. I spent hours trying to pull out the API and putting it in a framework target and then including that with my CLI and GUI targets which was leading to all sorts of problems.
Update Frames?
I suppose you could put it that way - using the kb shortcut. 
cmd option =
Command option enter
This was the one. Thanks, Silverado!
Wow, a lot of articles! Always exciting to see what's written here
I’m going to use a spinner that is approximately 35% of the screen. Would it be possible to present a view controller as a popup with the spinner rotating, dismiss the popup once the function is complete and finally segue to a new view controller?
He writes a lot of great articles. 
Yeah, typos :) Thanks for that
Great! Keep me posted
wow, looks like a great project already! 
Agreed. I guess what I meant is I'm used to seeing one per week, but in this case there are several
This is fantastic! Thanks for sharing
I am working on key value store. I want very small sized NSUserDefaults alternative, which is robust and works with Codable. Mainly because i have bad experiences with NSUserDefaults. Criticisms are much welcome. [github.com/metinn/kasa](https://github.com/metinn/kasa)
smart way of using Charles Proxy!
it was written by James Sherlock btw :) 
Thanks for your comment! This is a great example of where in the fuzz of everything and aiming to get as much done as possible you forget some basics and yes I fully agree with what you've said here. I use a very similar pattern in my work projects! Apologies about that, facepalm moment!
15.0 inches ≈ 38.1 centimetres ^(1 inch = 2.54cm) ^(I'm a bot. Downvote to remove.) _____ ^| ^[Info](https://www.reddit.com/user/Bot_Metric/comments/8lt7af/i_am_a_bot/) ^| ^[PM](https://www.reddit.com/message/compose?to=Ttime5) ^| ^[Stats](http://botmetric.pythonanywhere.com) ^| ^[Opt-out](https://www.reddit.com/message/compose?to=Bot_Metric&amp;subject=Don't%20reply%20to%20me&amp;message=If%20you%20send%20this%20message,%20I%20will%20no%20longer%20reply%20to%20your%20comments%20and%20posts.) ^| ^[v.4.4.7](https://www.reddit.com/user/Bot_Metric/comments/8o9vgz/updates/) ^|
Thanks for the comment, this is a little challenge I've done for a few years now (just this is the first one I've chosen to share!) - it definitely can be used for other apps! In this project I was trying to toy around with reuse of a single view controller for multiple purposes (though, as mentioned above, this specific approach wasn't the best given it lacks type safety). Having said that this project had a cell type which was a 'horizontal scroller' which was essentially a UICollectionView (horizontal) within a larger UITableView (vertical). So in the home page there is a bunch of collection views stacked on top of each other which isn't necessarily the best for performance!
16
16Gigz 
I have been developing on machines with 16 GB since 2011. Never needed all of it to this day.
I just bought a couple of months ago the exact MBP config you specified in your second bullet point (the 2.2Ghz), same gfx card, 512Gb SSD and 16Gb RAM. It flies with Xcode and I also use it heavily with Logic Pro. I think you'll be happy with either of those two configs.
Just go with 16. I often work on both macOS and win10 on a VM at the same time. I'v never had any issue. If you plan to do heavy video editing, 32 is perhaps the right choice by the way..
Charles Proxy is a fantastic tool, love it a lot! A lot of apps nowadays though are now validating SSL certificates though which means on some apps you don't really get a useful response! (For instance Twitter just stops working if you have Charles enabled) Another strategy I tend to use is decompiling the Android equivalent apps - A lot easier to get the information than on iOS but relies on having consistent logic between both apps. One thing you'll notice in my source code though is the APIs I use are actually specific to Android 😉I was unable to (in the time I spent looking) figure out the iOS ones as the Charles response was oddly formatted.
I have a 13” a MB (2018) with 8gb, use it for web dev, mobile dev and picture editing. I rarely use it mobile at home i have it connected with two hubs each with a single hdmi port for dual monitors and it works wonders. Dont even open it to turn it on just hit a key on my magic keyboard.
Thanks for your reply. I still struggle to put collection views into tableviews programmatically, as It quickly becomes a labyrinth of code. You said it’s not the best for performance. What would an acceptable solution be, when you have to create a feedVC like this, with different sections?
16GB is fine. I've had struggle with 8gb in the past. At most load I use 10-12gb and that's when I have all the 'big software' up and running as well Adobe software. For my use, the super fast nvme-storage has been a big help, but that depends more on the software.
You can never have too much ram (unless on battery.) The more you have, the larger your cache. You also have the option of running virtual machines without too much impact on the host OS. So if price isn't an issue I would go 32GB, especially if you can't easily upgrade the RAM in the model yourself.
Depends what you are doing obviously and which software you use for editing My advice would be going 16 Gab/ram and Radeon 560 if possible but if you can go for 32/ [compare video card ](https://www.notebookcheck.net/Radeon-Pro-555-vs-Radeon-Pro-560_8064_8066.247598.0.html) 
GB, not gb. The case matters. Lowercase b = 1/8th the size than uppercase B. 
I tried cocoa touch development once back in the day on a borrowed Macbook, but I found I didn’t like the approach of the designers or the programming model in general. Can you discuss your adventures with rxswift? How does it improve iOS development?
The rest of it looks pretty good, that part just stuck out like a sort thumb since it was awkward. So easy to happen when you are focused on getting a project done.
Make an optional init that returns nil if the condition isn’t met
You must be real fun at parties huh?
\[Person\].filter {$0.age &gt; 25}
obviously not with \[Person\] but persons.filter
I would just decode the array of structs then filter them using Swift's filter function. let people = try JSONDecoder() .decode([Person].self, from: data) .filter { $0.age &gt; 25 }
Interesting to find Apple has guidance for this. Not very substantial, unfortunately, though. Not all state is enumerable, and there are hand-in-hand concerns with state management: * project structure * persistence (and migrations in schema of the stored data) Arguably out of scope, but managing async state changes and reacting to state changes also goes unmentioned; would be nice to know Apple's suggested best-practices here.
If your spread the cost of the machine over 3 years, that $500 bump for the extra RAM won't really make a difference, but it will future proof your machine. Even if Xcode or whatever other apps you're running don't use the memory the OS will make use of it for disk cache.
I would say get 32. From 2011-now 16GB was great but I think we’re getting to the threshold for 16, so to get 7-8 years out of a new Mac today 32 GB is going to be worth it. 
Right now I have open: Android Studio with a huge project, Xcode with a small project, RStudio, and a few other apps such as browsers, Skype, Slack, Outlook, etc. Together, they consume 13gb out of 16gb I have.
And then is that state variable a global variable or something that just gets passed around?
Why would you create two functions that do the same thing? Just make the param optional and you can use a single function, with the logic inside one.
32gb is just overkill... You do not need such power... If you are not getting macbook air or 12” you are totally okay and ready for even hc projects... Usually devs do not need more than 16gb RAM unless they are doing something quite hardcore (VR or games) You are totally safe... Xcode will anyway find some way to consume 128gb of RAM if you have possesion of it 😂😂 Its like chrome, but worse 😂😂
IMO this should produce a compile time error. Probably worth reporting on bugs.swift.org
I would put that money towards the new radeon Vega video card over 32 gigs of ram. As the only time the 32 gigs of ram would really be useful in programming is if you want to run both OSX and Windows together in parallels at the same time. The video card will definitely come in handy with video editing.
Can you share screenshot or code of your screen? Looks like you have forced unwrapped nil object. First of all you need to understand what is optional and how to unwrap it. If you declare any variable with ‘?’ Sign, it means that variable could be or could not be nil. That’s what optional is. Check example below: Var a = Int? Var b = 5 Here ‘a’ is optional and ‘b’ is not. Let sum = a! + b Here, app ll crashes because ‘a’ is optional and its forced unwrapped by using ‘!’. Proper way to unwrap: If let varA = a { Let sum = varA + b } Here, if ‘a’ has been assigned with any value, it ll go inside the if condition n calculate sum. You can also use guard to safely unwrap the optional or you can use ?? To provide default value. Please look into optionals, how to use them n when to use them. Also avoid using ‘!’ 
Hey thanks so much! I spent a while right now trying to figure everything out, and managed to solve the issue and now it all works. I'll take the post down now. 
It's very good.
I'm looking at the tutorial you linked, and there are no optional values and no unwrapping of optional values. Line 23 of the tutorial is try statement, in which the AVPlayer TRIES to load the song PurpleRain.m4a from the URL. It could be the URL is wrong, it could be the song isn't there, it could be your line 23 is different from line 23 of the tutorial.
I’m a newbie and very confused how to learn. I started coding 30 years ago in Pascal. Object oriented is very new and confusing to me. I’m currently doing some training on Linkedin (old Lynda) and some online tutorials. My main problem is that stuff changes around a lot with new versions in a (for me) completely illogic way. If I go ahead with Swift, should I learn older versions as well? Potentially I will need to refactor or modify older code so that makes sense, but increases the (already steep) learning curve by a lot. 
Using Apple’s resources for anything Swift iOS 11 and newer. Also taking a couple online courses and staying active on Twitter. 
I try to use Apple's documentation on really new things sometimes. It isn't great as sometimes they have quite elaborate concepts you need to understand that are only underpinned by text and not by code examples. I remember trying to get RAW working in the iOS 10 beta (if I remember correctly that was the version it was introduced). That was pretty hard and when it worked (if it did?) the results were lackluster.
Thanks for that tool!
Yep. One thing I really appreciate about the Microsoft .Net documentation is the inclusion of code examples that show how things work and fit together in context. There are a ton of places in the Swift docs where that would be a huge help.
Is this a release? The README.md still says to use a snapshot. I didn't think this would be released properly until Swift 5 came out at the earliest.
This is huge! As soon as it’s fully implemented...
I need to cycle through all permutation 1,2,3,4,5 Check 1. If 1 doesn't work then 2,3,4,5 Check 2. If 2 doesn't work then check 3,4,5,1 Check 3. If 3 doesn't work then check 4,5,1,2 Etc.. There HAS to be a way to do this more economically. Or more 'correctly' Yes there are repeats but there is a reason. I don't want to get into it. I understand I am checking the same 'things' multiple times there is a valid reason. Just assume my example is correct. Is there an easier way to code this. Thanks for any help.
C family also mentioned. This would be very nice! I cannot wait for Sublime Text to support this.
Yeah, there hasn't actually been a release.
Apparently there is already support: https://github.com/apple/sourcekit-lsp/tree/master/Editors#sublime-text
In this case, it will `"Hello Mars"` because a function that takes no parameters is a better match than one with a default argument, but you really oughtn't make confusing overloads like this. Didn't even need to read the article for this one.
If the parameter is a generic type then you have to make two functions, but other than that there should be no reason to do this.
True true but yeah this post is meh
I'm working on my app I just recently launched [Bell](https://itunes.apple.com/us/app/bell-client-session-timer/id1385156159?mt=8) I'm working on adding invoices with stripe (a lot harder than I thought)!
This is cool. I'll give it a try. 
Here's what I quickly came up with: let actions = [1,2,3,4,5] let randIdx = Int.random(in: 0...2) var currIdx = randIdx repeat { print("Checking \(currIdx)") if actions[currIdx] == 4 { print("\tDo Foo") } currIdx += 1 if currIdx == actions.count { currIdx = 0 } } while currIdx != randIdx Basically I store the initial index and then increment it after every check, making sure to wrap around to 0 once I reach the end of my list. At the moment this code will continue checking even after finding the \`Do Foo\` action, but that's easily solved with a bool check. But I left it off so you can run this in a Playground and see that wraps no matter the starting index.
Wow... thanks. This is interesting. Never would have thought of this... I really appreciate this. it works. I just copy and pasted it in. Nice! Its actually for computer generated Hitori puzzles. Hitori is a Japanese Puzzle game. I will post a link with the completed game and this code solution... You will see how I used it. Thanks again!! I do appreciate the time spent. I couldn't figure it out, and was getting very frustrated. 
Awesome. When there’s an official release, depending on how well it plays with Xcode projects I’ll definitely have to give setting up Sublime as my main Apple platform project editor.
There is no dilemma, use the Swift Package Manager. It's officially-supported, simple to use, written in Swift, and already has a large following. The other ones are good but they are quickly falling behind in use. Why call it a dilemma anyways? Pick one and use it, just like any other technology out there. A dilemma implies that there is some serious consequence to the choice. That's not so in this case, each one will serve you just fine. Maybe way down the road you'll find a reason to switch but if you've written your software well you shouldn't have any hard dependancies built into it anyways and a switch should just be a matter of a bit of re-architecting. Smells to me like this is clickbait.
Swift is good about this. To react just use willSet and didSet blocks. Async is handled by enums being passed by value and COW. Whatever the structure of your project, you should usually be able to easily see the application object. Persisting state was made easy in Swift 4 with `Codable` and JSON
VSCode support for swift would be great. Apple will no doubt continue to be trounced by Microsoft the next decade in terms dev tools because they’ve become greedy and stupid.
https://github.com/apple/sourcekit-lsp/tree/master/Editors/vscode
&gt; To react just use willSet and didSet blocks. I don't believe anyone who says "just" about a programming problem, without showing me the source code to a complete program. Do you apply these at the top-level? At each level of the hierarchy? Doesn't this mean the *holder* of state must also be the *handler* of state, i.e., the opposite of a normal event handling architecture? Or do you stack notifications on top of that? &gt; Async is handled by enums being passed by value and COW. Not sure what that has to do with asynchronicity. &gt; Persisting state was made easy in Swift 4 with Codable and JSON `Codable` makes serialization easier in many cases, but it's not really JSON-specific, and using serialized bytes (in any format) will just make it harder to deal with in other contexts. My database isn't just a giant JSON blob. For one thing, if all you know is that your JSON blob changed, it's impossible to send targeted notifications. And not every place you store the state has the same semantics or performance characteristics (COW) as Swift enums. Swift has some neat features which can be used to build a solution to the problem of model state, but it's not *just* "willSet/didSet + enums/COW + Codable/JSON". That solution is neither simple nor complete.
It literally says "0 releases" right at the top of the page.
TIL people actually still use Sublime
&gt; I started coding 30 years ago in Pascal. Object oriented is very new and confusing to me. Object Pascal is more than 30 years old, so that's at least partially on you. :-)
100% true. I’ve always used Turbo Pascal, and they introduced OOP around the time I lost interest in coding. Did code it for a short while, but never really got the hang of it. This is the time where there was no internet for tutorials, and training was very expensive. 
Guy doesn’t update his software for what, a year?
People are downvoting you but their tools suck ass. 
Someone (maybe Steve Yegge?) once said that what was missing from most software documentation is a list of *assumptions* held by the designers of the software. This is absolutely true with Swift. The documentation tells you all the whats, but none of the whys. Once you've learned 90% of Swift, the last 10% isn't so bad because by then you've reverse-engineered the major design assumptions, so you can forward-re-engineer the knowledge gaps that remain. But that first 90% is a bear because you have no idea why Swift's designers chose anything they did. Apple made this especially difficult. Their original announcement declared that Swift was "Objective-C without the C!", but that's not even close. Anyone trying to learn Swift with that perspective will think that (a) it's stupidly weak because most of the dynamic features are crippled or missing, and (b) it has a ton of unnecessary complexity (which could be why the compiler is so slow). OTOH, if you were given the hint that it's like modern C++ with nicer syntax, or like most of ML's type system transplanted onto Algol syntax, then you're already halfway there. [PATs and how they got that way (maybe)](https://www.youtube.com/watch?v=XWoNjiSPqI8) is a brilliant talk precisely because it tries to go back to the literature and discover *why* one piece of Swift might have been designed the way it was. Once you see that, PATs are still confusing and painful to work with, but at least it's not just pointless pain. You don't need to go super deep or abstract here. A little bit goes a long way. For example: - "Swift is designed as a system-level language, akin to C++ or Rust or Go. It avoids dynamic dispatch as much as possible, uses fixnums for all math, and doesn't have a GC. It's meant to be easy for the compiler to statically optimize so your release builds go fast." Just reading those 3 sentences would have saved me a week of trying to understand why Swift sucked so hard at being "Objective-C without the C".
No, you can have others give you delegates or functions to call back when state changes, and dequeue them in the didSet. When I said "just" I meant it's much simpler compared to KVC/KVO in Objective-C. Holder can just broadcast that the state changed, and whoever cares can handle it, without spooky action at a distance. With PBV and COW, you can rest assured that asynchronous calls to the state variable(s) won't step on eachother, since it's not possible for multiple reads/writes to conflict, as opposed to the headaches you get with PBR. I meant to say that JSON encoding and decoding is basically free now; no boilerplate required like older Codable approaches. If the data you want to persist _can_ be JSON, then making it that vastly improves the experience of encoding and decoding. Since that can be done with structs and enums without boilerplate, the linked example is quite reasonable. If you know your JSON blob changed, and you're in Swift, by that time you likely know what changed and by how much, and can act accordingly. I'm not speaking to anything but the running app, so the performance of your storage solution is a separate concern. Of course my reddit comment isn't a Compete Guide to State Management in Swift on iOS :P But I do use it professionally, and now it's easier than ever to build a state machine that's fast, expressive, easy to maintain, thread-safe, etc. and use that as the basis for your app. For more complex state, I nest these. Maybe I'll write a blog post about this someday :P
I assume from the example it's in your app delegate or application object, which should be accessible anytime the app is running
Learn the latest Swift, if you do then the older stuff is pretty easy to pick up on.
Yeah. Can’t wait
I know that. Look at the title of this thread.
https://www.raywenderlich.com/71-spritekit-tutorial-for-beginners goes over the basics of working with SpriteKit. Should be a good place to start.
Thanks😁😁🙏
Last update was December 5, 2018 according to the changelog I'm looking at. I still use Sublime. It does what I need.
I think Apple has said that they’re going to replace source kit with the LSP
C++ is used exclusively where ever speed or being extremely low level is important. For example, Operating systems are usually in C or C++. You can use C++ in iOS development, but all UI has to be in either swift or Obj-C, since UiKit can only be accessed by Swift or Obj-C. Obj-C++ allows you to write everything in C++ and then mix Obj-C in places where iOS requires it, so it's possible to write almost everything in C++ on iOS, but not everything. 
September. May. October. December. Hum. 
No. Downvoting then because they are a moron. 
It's not. That's one of the main use cases for Firebase - it allows mobile developers to build end-to-end apps without running their own server instance.
You could use the region the touch occurs or this https://stackoverflow.com/questions/27880607/how-to-assign-an-action-for-uiimageview-object-in-swift good luck! Uplearnedu.com
Add a tap gesture recognizer on the image views **AND** allow user interactions on the image views.
dude, this is a dev sub, not buzzfeed, people appreciate factual news here....
… why are you telling me this? I was the one asking for the facts.
yes, it's early or late, sry. :'D
Can someone explain this to me like I'm five years old?
Language Server is used between a tool (the client) and a language smartness provider (the server) to integrate features like auto complete, go to definition, find all references and alike into the tool
You literally qualified your statement with “in terms of dev tools” in an obvious attempt to appease the fanboys and STILL your comment gets buried with downvotes. for shame, reddit. Everyone who downvoted you should be required to install Visual Studio and take a look at the MYRIAD packages it offers for developing... from pure C# to .Net, Cross platform mobile dev with Xamarin, Unity Engine, the list goes on ad infinitum. Very clearly it is objectively more useful, more customizable, and more powerful. And this is coming from someone who actually enjoys the simple and uncluttered experience you get programming for iOS in Xcode!
I didn't intend this post to be about the pros and cons of overloading functions, but IMHO there are use cases of overloaded functions. If you take a look at [UITableViewDelegate](https://developer.apple.com/documentation/uikit/uitableviewdelegate) for example, it contains dozens. [Here'](https://www.programiz.com/swift-programming/function-overloading)s a blog post that looks at this very question, "Why do we need function overloading?". 
The worst thing about the Apple ecosystem is the rabid fanboyism.
Software doesn't become outdated just because a software studio doesn't use "bugfixes and changes" development, where you have to release every 2 weeks so people don't forget that they have your icon on the homescreen.
eli5? ☺️
Never heard of it.
Yes I did once 👍🏻
Correctly done the server shouldn't matter much to the client. If they both use open standards for communication then you can code the client and the server using different technologies and they will still be able to communicate. Firebase has a REST API which will work with many platforms out there, as well as platform-specific API. [Firebase REST API](https://firebase.google.com/docs/reference/rest/database/) [Firebase iOS API](https://firebase.google.com/docs/ios/setup)
I've taken several. The one for Swift is problematic because it contains several wrong answers and even a couple wrong questions. The question database just cannot keep up with the changes that Swift is undergoing. The Objective C assessment has the same problem, to a lesser degree. I've been using Swift since V1, so I scored extremely high, but someone who is newer to Swift would be somewhat at a disadvantage.
But my client side is calling a lot of functions to access the Firebase etc.. isn’t it unsafe to put those code there?
Thanks! This can be helpful for my ebook voice reader app - Ector. 
Here's how I think about these: would I wish I could pay the price difference to "upgrade" the spec in question (RAM in this case) in a year or two years? If so, get it, because right now is the only time you can do it. If you're asking if you think you'll want that extra RAM, from my own experience on 16 GB doing both developing and video editing: I've never used all of it.
Why would it be unsafe?
Of course, that’s all possible. Just dismiss and segue from the parent view controller which presumably knows what is happening I don’t think you really need to present a view controller though - just use a sub view that contains the spinner. 
There are so many people in my office who swear by sublime.
Xcode is absolutely amazing for UI building though. I’ve not found another IDE that does it as painlessly. But I agree the other IDE features in Xcode get destroyed by VS and jetbrains IDEs
Currently, if you want to get back a value, you have to do this: ``` var r: Model? var e: Error? kasa.view { tran in r = try tran.fetch(Model.self, withKey: "key") }.onError { err in e = error } if let error = e { // error } else if let result = r { // use model } ``` You should allow this: kasa.valueForKey is (String, T.Type) -&gt; Result&lt;T, Error&gt; Now it is like this: ``` switch kasa.value(forKey: "key", ofType: Model.self) { case let .value(model): // use model case let .error(err) throw err // or such } ```
Forgive me for this but why would a developer even be asking such questions? As for video editing it is very hard to have too much RAM for that activity. 
SourceKit itself barely fucking works even in xcode, this will be a mess. 
They're outsourcing *screening*? Ouch. That tells you they have money, but not the capability to decide if applicants are worth their time. Either: - They have far too many applicants to screen themselves, and need to throw up a barrier to thin out the number before they get personally involved. - It's not about numbers. They're simply not qualified to screen applicants at all. Either way, it's not an endorsement of your resume. Sorry. You don't read a resume and decide someone is a worthwhile candidate, and then ask them to do an online third-party quiz. I'd respond by making a list of every job benefit I could think of, putting it in multiple-choice test form, and sending it back to them. If it's acceptable to treat a person that way, it's definitely acceptable to treat a corporation that way.
Im good!.... &amp;#x200B; [https://medium.com/@stasost/ios-how-to-build-a-table-view-with-multiple-cell-types-2df91a206429](https://medium.com/@stasost/ios-how-to-build-a-table-view-with-multiple-cell-types-2df91a206429) &amp;#x200B; Thank you!
FWIW, the company is eBay, and I found them through a recruiter. 
And?
Hmmm ok I’m still very new and trying to understand thanks for answering me with your time. So basically you only use server side swift with SQLite for data base right? Firebase basically does the same thing? 
Or, create your own `UIImageView` subclass and override the `touchesBegan` and `touchesEnded` methods.
Set up* setup = a noun meaning a configuration set up = a verb meaning to arrange or assemble
Well if you want I can give you the Sketch file for a component I need to make. 
/r/GrammarNazi Help is nice though 
But you really should use a tap gesture recognizer though. Overriding `touchesBegan`, `touchesEnded` and other event methods is more or less deprecated in favor of gesture recognizers.
No, you cannot run youtube-dl inside the app. My solution was to set up a server with youtube-dl that takes a url and returns mp3 url.
I highly doubt YouTube would officially allow this. The only way you could achieve it is by programmatically downloading mp3 from YouTube (this would take a while) then saving the file somewhere and playing it from there. Bear in mind, doing something like this would probably be rejected by apple if you tried to upload the app to the appstore
Specifically what parts are you referring to?
Because Objective-C verbosity doesn't fit Swift. Simple. If you want to keep using Objective-C, keep using it. Nothing's stopping you. Apple still develop it and their frameworks will remain in Objective-C for a long while to come.
It'll definitely be rejected, they've been cracking down on this quite severely lately.
Hey if you like Objective-C there is a lovely language you can use instead of Swift It's called Objective-C
I like the function name standard from swift so much better, I always hated that part in obj-c. The thing I hate they removed is ++, to this day my brain still tries to use it 
So override the methodson a UIGestureRecognizer Subclaas
Hey, if want to use javascript, use javascript...don't pollute the best parts of apple's software engineering with it. 
That verbosity is VERY unique and is GREAT and it is sad that apple made it such a mess going back and forth about what to do...keep it or toss the best part of apple software engineering...that verbosity. Was notably easier to remember what the function calls were before. OBVIOUSLY... prepare...prepare for....prepare for what???? prepareForSegue!!! From verbosity in Objective C comes VERY readable code and that verbosity should be SPREAD to EVERY language used in any sort of production situation. joeGoesToStoreToGetSome _______ thatCosts ______ Compare that with: x:String, y:Int WHAT are those params???
Yeah well if you only need to detect a tap that’s a hell of an overkill! The tap gesture recognizer literally does that: detect a tap.
Verbosity "fits" EVERY PRODUCTION SOFTWARE LANGUAGE. (Not saying to use a 300 char method call, but still code should be SOOOOO easy to read. 
True lol. 
Hi chopinrocks! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/af7y4a/this_is_a_shameless_promotion_and_is_coded_in_100/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
What an irrelevant comment. Looking at the rest of your comments, you just love the strawman fallacy. ```objc [joe goesToStoreToGetSome: ___ thatCosts: __] ``` translates to ```swift joe.goesToStoreToGet(some: ___, thatCosts: ___) ``` Similarly, `prepareForSegue:` is `prepareFor(segue:)` I'm more than slightly amused that your example is so committed to unnecessary verbosity that you can ostensibly cut it down even more in BOTH languages: ```objc [joe buysSome: __ costing: __] ``` ```swift joe.buys(some: __, costing: __) ``` It is equally readable and has the same meaning without wasting people's time. There is no readability sacrificed.
lol what? you could've just as easily written the objective c function with parameters x and y. this is the strawman-iest argument i've ever seen.
YouTube-dl can stream as well. It would take a more effort but you can make it. 
I've taken it twice now and experienced issues not unlike those described by @mobilecode. However, I'd argue the questions and answers aren't _wrong_ per se, as the test (APPLE iOS APPLICATION PROGRAMMING (SWIFT CODE)) doesn't restrict itself to any one version of Swift. (At least I don't remember IKM mentioning a specific Swift version). Consequently, you'll be presented with several questions addressing currently deprecated code/concepts. My test included 36 questions and IKM set a 90 minute time limit. Any one question may be followed by multiple correct answers, so always keep edge cases in mind. Finally, do not despair when the difficulty increases. IKM wrote the test to toe the line between taxing and impossible, reevaluating your performance following each question and altering the next question's difficulty accordingly. I don't think I can mention anything else about the test for fear of violating IKM's Terms of Agreement. I hope this helps, 
Swift isn't less verbose, it's less less repetitive repetitive
You can add a subspec to your pod. This will allow the additional framework to be added when needed. You see this often in podfiles. ``` pod 'Firebase/Core' // This is a subspec of the Firebase repo pod 'Firebase/Messaging' // This is a subspec of the Firebase repo ``` [https://guides.cocoapods.org/making/specs-and-specs-repo.html](https://guides.cocoapods.org/making/specs-and-specs-repo.html) Then in code you can optionally import and use the code when that framework is available. ```swift #if canImport(myFramework) import myFramework #endif #if canImport(myFramework) // Code here #endif ``` Refer to the link below for a more detailed guide: [https://www.hackingwithswift.com/example-code/language/how-to-check-whether-a-module-is-available-using-canimport](https://www.hackingwithswift.com/example-code/language/how-to-check-whether-a-module-is-available-using-canimport)
Really what I needed! I do however have questions with first part: With the above example a Podfile using pod 'ShareKit' results in the inclusion of the whole library, while pod 'ShareKit/Facebook' can be used if you are interested only in the Facebook specific parts I would like it in kinda reverse: 'Sharekit' should include general version(lite version) without library and 'Sharekit/Facebook' would add additional library on top and then whole combination would create premium version.
Your example isn't a fair comparison. It's also extremely contrived. If in Objective-C you write: ``joeGoesToStoreToGetSome: eggs thatCosts: 24.99`` The Swift equivalent would be: joeGoesToStoreToGetSome(eggs, thatCosts: 24.99) Both of those examples are contrived, because they should really be: ObjC: ``[joe buy: eggs atCost: 24.99];`` Swift: ``joe.buy(eggs, atCost: 24.99)`` Following the pattern that ObjC message names start with a verb (and usually the third person singular form), both seem about the same to me. Apple didn't "make a mess" about going back and forth on it. They had always intended to make things short and easy to read but hadn't finished implementing name mangling.
That is completely possible. Libraries like RxSwift do that same thing. RxSwift is the main library and if you want to use specific cocoa additions, you can also import the subspec RxSwift/RxCocoa which relies on you using RxSwift.
Rubbish. Verbosity is not the same as code being easy to read. Yes, I agree that ObjC's code was very self-documenting — but I would also contend this was not because of the verbosity itself but because the frameworks used clear and easy-to-understand names. The self-documentation came in Apple's choice to use plain English rather than complicated acronyms. Swift follows ObjC's suit here; sure, the naming might be a little more terse, but the conventions are still there. Also, do you think shouting things in capital letters wins arguments? It doesn't, it makes you look childish. I'm saying this so you don't do it again in future because I'm pretty sure that's where you're being downvoted for simply expressing your opinion.
&gt; prepare...prepare for....prepare for what???? prepareForSegue!!! It's still there: func prepare(for segue: UIStoryboardSegue, sender: Any?) You prepare for a UIStoryboardSegue. No need to duplicate the information and be redundant like: func prepareForSegue(for segue: UIStoryboardSegue, sender: Any?) 
If you just want to play it, do you need to download it? Would playing the video and audio but not showing the video work? I'm not sure if the question is stated correctly: &gt; I am just trying to play audio from YouTube. So that would mean you can play the video regularly and not show the video part, just play the audio? I'll let others answer on the YouTube TOS and Apple rejection stuff as I'm sure they know better than I do.
You clearly don't know much about Swift, Javascript, or both, if you think that the 2 languages are similar. The `{ }` brackets are pretty much the only similarity, by which logic, Swift is C, yet also Java. ||Swift|Javascript| |:-|:-|:-| |Compilation model|Ahead-of-time|Just-in-time| |Execution Model|Native|Virtualized| |Type system|Static|Dynamic, Duck-typed| |OO model|Inheritance-based|Prototype-based| |Default integer type|64 bit signed int|64 bit floating point| |Function overload support|By arg count, type, and return type|none| |Function arity|defined|undefined| |Nullability of fields|Explicit, opt-in|Always nullable| |dict syntax|`["a": 1]`|`{"a": 1}`| |User definable value type|Yes|No| |Extensibility model|Only types can be extended|Individual instances can be modified| You're being absurd.
You can write good code in Swift class Person { func goToTheStore(toGet item: Item, thatCosts cost: Cost) } And you can write shit code in Objective C - (void) withX:(NSString *)x y:(NSString *)y; What's your point?
The difference is that the apple frameworks were verbose enough to more easily know what things did in an autocomplete situation and so on. Really prefer prepareForSegue rather than the various ways the swift team haphazardly renamed and rearranged various primary method calls. 
Actually that was basically a statement about apple's intent with making Swift seem to be similar to javascript...to lure unsuspecting kiddies...that would later flee swiftly when seeing the other aspects of apple software engineering. 
And as I quite thoroughly showed, Swift is not at all like JavaScript.
I have a question, hoping someone can help. Once you learn a code such as swift, and want to develop an iOS application. How do you start testing/running your code to see if it does what you want it to do? Is there a software for this? Can you do this in a windows operating system (since I have a surface pro)? Anything helps, thanks! 
I am just trying to play only audio, not video. and I just don't want to download.
To noobs, it DEFINITELY looks A LOT more like javascript than Obj C does. That is the point. Regardless of it being more of a functional language. And yes, I have programmed in both...and yes sadly programmed in Swift 1 and 2 also. Stop trying to start and win a losing argument with ridiculous reasoning. 
I think it may depend on the mime type specified in the HTTP response header. Pretty sure the mime type should be audio/mpeg. Personally, I’d start by checking that. You might also want to try AVAudioPlayer. Since that is only expecting to play audio, it *might* work regardless. That’s just a guess, but worth a try (if you have no control over the mime type).
You normally wait for the Status of the playerItem to change and check that it's AVPlayerItem.Status.readyToPlay. As it's loading from a URL it may not be ready yet. But as @pete-morris said it might also be that HTTP doesn't know it's audio.
Ok. So in this case I should create additional module like RxSwift/RxCocoa and access that code from main framework by marking #if can import in the main framework?
Anyone have any sample questions from this test?
What do you try to achieve?
Segues or delegation patterns depending on the architecture is the best bet. I would try to stay way from singleton's especially with data sharing. Depending on what you're trying to accomplish a plist could be fine.
Any reasons that you dont want to use segue / delegate? Is the two view controllers not directly connected? If the two view controllers are not directly connected, UserDefaults might work
Speed while staying "proper" about the coding practices. 
Thanks. Is that mainly because of security to not use a singleton? 
I guess you could say that. Singletons are global classes and their variables are usually mutable (depending on what you're using it for). I usually avoid them due to a few reasons harder to test, violates SOLID principle, and tightly coupling code. I try to avoid any type of mutating variables as this could allow for unexpected behavior. Some instances as a logger class is fine.
i think using delegates *is* the proper way. if you want to pass from A to B without segues then: let v2 = UIViewController2() v2.someData = data self.present(v2) 
Right. Is that mutable though? Or only a plist in the documents dir is? 
Oh, right! Thanks. So instantiating a view controller that way makes a persistent view controller in the background until it is presented? 
So a singleton can be instantiated in the background using?: let singleton=someClass() If so, will that remain persistent and available in the background until the app is quit? 
You do realize that accessing the same file through the singleton FileManager is not different from having another singleton object that is keeping the data in memory, right?
indeed. unless you exit your function without presenting it it will stay alive. i program only in code and without storyboards and this is the way to do it.
Unless exiting which function? To be honest, I only recently started doing really pure text based GUI with no storyboards. Main hurdle seems to be aligning things properly. Really feels a little silly having gone through years of training to basically be making webpages in a native apple language. 
Happy Cake day!
At some level, you're either going to be pushing or presenting. If you're asking for a better design pattern than just sprinkling your code with 'present', then checkout "coordinator patterns". There are plenty of examples to be had.
i mean probably you would want to start a new view controller after pressing a button or something similar (some user interaction), so i meant that that code will be called inside a function that your button will trigger.
Take a look at [SwiftGen](https://github.com/SwiftGen/SwiftGen) 🚀
I believe if you use CMMotionManager you can use CMMotion's gravity component because it's in the device's frame of reference which _i believe_ is static. The documentation, of course, isn't particularly thorough. If you use attitude I believe the frame of reference is based on the orientation of the device when you started the app or the motion manager or something like that.
Thanks!
Thanks! Know about that. It's not mutable, but still cool. 
Thanks. Why? 
Looks interesting. Kinda trying to keep it pure and simple right now so really know the fastest ways to do things natively. 
I am working on new debugging tool for iOS and Android developers. It's called [appspector.com](https://appspector.com) it gives you remote real-time access to app logs, network requests, CoreData, sqlite database, screenshots, performance metrics and device location. Would love to hear your feedback guys.
Soooo....yeah...coordinator patterns look like an overcomplicated mess waiting to happen...disguised as an "easier" way. 
Segues. That is literally the problem they were made to solve.
Correct!
https://nshipster.com/cmdevicemotion/ ^Great overview of what your looking for, the reference frames might be useful. The motion data is all absolute, so need to calibrate first. The only exception would be compass orientation will sometimes need calibration, but that shouldn’t apply to what you’re asking about. 
Are you serious?
If you’re using Firebase, you’re totally fine. Firebase was designed for frontend mobile and web devs who want to cut out having to configure a server, so unless you’re making any mistakes within your Firebase usage, you’re okay.
Frankly I'm thinking the same thing. I really don't understand where you're going with this. From a technical perspective, I would actually argue that Objective C has way more similarities: it's based on the same Smalltalk-inspired duck typing that JS is. In early versions, all objects had type `id`. *Strictly visually*, to Swift is more JS-like than Obj-C... Sure, I can agree with that premise. But I really don't get your point. This was done as a marketing move? I have been in the Swift stackoverflow.com community for years, so I have a very good understanding of what new Swift Devs are like. I don't see many Swift noobs with JS backgrounds, practically none. The vast majority are coming from Android development in Java, or are brand new programmers just picking up playgrounds for the first time. How is "Swift" polluted by this (alleged) "move" (to allegedly appeal to JS developers)? What have we lost as a result?
Im not quite sure as i cant see the full error but, if you press the red circle in the error a 'Fix' button will appear and you can press it to change to what xcode thinks your trying to do
It doesn’t have a fix option but gives me what I have to fix but not really how to fix it lol 
Are you clicking on the stop sign with the dot in it?
Yes and it just tells me what the error is but it doesn’t have a fix button. 
Using SwiftGen is so much faster and you're far less likely to make mistakes manually typing out segue or view controller names as strings. They're all set as enums so you can't get it wrong.
Use bounds.insetBy
Thanks will try when I get home appreciate it 
Why thank you! I didn't even realize haha.
just for future reference, click the error circle and it (should) expand showing the fix button! 
I think you're wasting your time. Check out OP's posts. He's trolling.
Google!!
Thanks, that had some details I hadn’t seen before !
Sorry, post as text instead of images or put your project up on GitHub or similar. It's much easier to help if we have text.
Have you tried reading the error messages? They're very precise and tell you exactly what's wrong.
I’ve googled and tried fixing it with the error messages but nothing seems to be working. 
Your GameManager is just a class. It doesn't inherit from anything so there's nothing for it to override
Thanks for your response. How would I go about fixing that?
Don’t override the functions in that declaration. Also looks like you’re trying to access variables from GameScene class in GameManager but I don’t see you instantiate a GameScene.
Can you give me an example if possible? :P
You’re not inheriting from anything in the GameManager class. Remove the word override from your function declarations. I think you’re in a little over your head - you need to look up how classes work and inheritance and overriding functions
Could you post code and not a picture of code? 
I figured it out. Thanks for the help everyone! 
Man you guys act like I’m stupid lol if u read the comments i clicked the button it popped down with a description of the error saying “has been changed to this” did not have a fix button I did what it said and it gave me another error. I searched google before coming here as well. For future reference read the comments before you post stupid shit 
Wtf is this group for if you tell me to google? I did google smart ass all the things I tried gave me another error 
if you want to make it a bot more "safe" then you can use firebase rules. bit anyway it's absolutely ok and even designed this way. otherwiese you would lose the realtime part.
A lot of these tools fall into the domain of shell scripts. If you don't know bash, it's tempting to stay with Swift, but every engineer should really be able to navigate shell scripts. Pick the right tool for the right job. That said, if you need to something so complex it falls more into "software" than "script," this is appealing. I'd rather use this than Ruby, if only because there are so many "batteries included" as part of Cocoa.
Plus JavaScriptCore allows you to script your tool in good old JavaScript with a tiny amount of work with the ability to parse in the fly. 
&gt; Pick the right tool for the right job. Which for me is the language that I know by heart instead of a language where I even have to look up basics. 
After reading (App Architecture)[https://www.objc.io/books/app-architecture/], I've come to the conclusion that most view controllers shouldn't share data. Instead, view controllers should observe common data sources and be able to update based on observed changes. This worked really well for an app of medium complexity I wrote recently. It allows you to move controllers around, embed them inside of each other, anything you want, you just have to get them the data they need. This can be done using one of the Rx libraries, or your own observation layer (I wrote one based on `NotificationCenter`). I also really like combining this reactive pattern with [logic controllers](https://www.swiftbysundell.com/posts/logic-controllers-in-swift) and [model controllers](https://www.swiftbysundell.com/posts/model-controllers-in-swift) to full separate views from business logic and state.
Is the trying to set the foreground color to nil - is that what’s highlighted to the right of the second line there??? That could be it try .red Otherwise the exclamation on self.placeholder could be an issue if it’s nil
Thanks I appreciate it I’ll try what you said and get back with updates haha 
In my experience, bash scripts tend to grow to a complexity level that more fits a Real Language than bash, and people go to great lengths to replicate language features using bash primitives. IMO, skip the bash step if you’re not very comfortable with it. That said, Swift needs better primitives for shell command-y things to be able to compete with bash for scripting.
Are you referencing the same “placeholder” in your definition of the attributed string that you’re assigning it to? Could that be your issue?
Force unwrapping is a bad habit. In this case you are trying to get self.placeholder! before self is even created at the super.awake..() method call therefore it is nil. A simple if let will stop the crash but I don't believe it will go into the body of the if let statement. 
What about using an if let statement as opposed to a let statement (and don’t force-unwrap)? Otherwise, you could add in a conditional where if placeholder == nil, then placeholder = “ “
Writing Swift bindings to Vulkan. Hoping to create a cross platform UI framework after that 
This is the whole point of firebase so you don’t have to set up your own back and
Please post text instead of images of code. If you post a text example it's a lot easier for people to copy your code and try it out for themselves. Images just make it harder to help out.
But client side is directly communicating with Firebase through methods...
You communicate with Firebase directly back and forth. Yes. That’s how it’s supposed to be. 
Wouldn’t it be safer to add a server ? :|
Safe from what? Firebase encrypts data going out and stored in their servers. The point of Firebase is so that you don’t have to deal with your own servers and backend. They do it all for you. If you want to add an extra layer then that’s on you if you really want it. 
A cleaver hacker can trick the data base into giving it information that they aren’t supposed to get in afraid of that
Couldn’t they do the same with your server?
Thanks dad.
Google!!!
Have you tried google?
K
Does this require jq to format the data and pipe it to the script? Can the program fetch and do the json parsing on its own? (I’m on mobile and strongly suspect I’m missing something).
If VC A passing info + presents VC B, the just create an instance, send data through initializer or regular ol properties, then present it. Going back, you should use delegation. 
Thanks! I will likely have a look at that. Mainly wanted to know what is the most efficient way of doing it natively first. Then more comfortable using a framework that makes it easier to do that. 
Is this any different than writing everything in JavaScript because you only know JavaScript?
Yes. Obviously this is how sharing data between controllers in apps should always be done generally. That is the NORMAL style way that apps should be built...so why doesn't apple make that the standard? Is there any risk to doing it that way and happen to recommend a nice and very lightweight framework to do that? 
I do know bash -- which is why I will use literally any other language in the world, if given a choice. It's overly complex, underpowered, inconsistent, arbitrary, slow, non-standardized, has no standard library, has lousy tooling, and is just plain ugly. The only thing it has going for it is that it (some version of it, anyway) is preinstalled almost everywhere. I wouldn't even rank in my top 3 *shell scripting* languages. "The right tool for the right job" is a tired cliche. Using it to justify using a shitty language, just because that general category of language has been used for that type of program since the 1970's, is not good engineering. The world has moved on.
Is that Ektachrome?
There's a couple of problems here: * cellForItemAt indexPath will only be called for the visible cells so you won't see much progress * The progressView will only re-draw itself when the main thread gets called I doubt that this all takes much time anyhow, what is the progress you're trying to show? Is it slow loading over the network or parsing or what?
Hey man, I’m in Sunnyvale. I’ve been working with Swift for a while now. Let me know if I can help.
&gt; "The right tool for the right job" is a tired cliche. Using it to justify using a shitty language, just because that general category of language has been used for that type of program since the 1970's, is not good engineering. The world has moved on. Good luck with that fight. I'll be over here shipping stuff. 
Here's a good article that helped me learn this recently: https://roadfiresoftware.com/2018/02/how-to-parse-json-with-swift-4/
I'm trying to show the progress for the collectionView. You're right, it doesn't take long - it's a pretty big collectionView (4500~ cells) but it's simple and all local so on a modern device its only about a second or two. I could just throw up an activity indicator, but at this point I've spent so much time on this that I really want to know what I don't know, ya know? How and where would I call the main thread while the collectionView is loading?
maybe try joining a swift meetup. tho most of the ones i've been to are presentations and not workgroups. but maybe you can start one. 
cellForItemAt is only going to get called maybe 10 times for the visible cells, so the progress won't make any sense. The progress bar drawing will be slower than showing the cells anyway. You say it takes up to 2 seconds to read the data for 4500 cells? What is happening during that time? If the thing taking the time is the URLSession request then you should put that in a background thread but you don't know how long that will take so it's hard to show progress. All UI updating must happen on the main thread so anything time consuming needs to be moved to a background thread and it can set a variable with progress and call back to a main thread to update UI. I'm sorry I'm not giving you the simple answer you're looking for but I think you're coming at it the wrong way.
Are you simulating the same version that your iPhone is running?
i ran it on my iphone 7 as well with iOS 10.3 via testflight showing the same issue and the deployment target is also iOS 10.3
Did you set form row height constraint? It looks like you just set rows to be equal, but they all collapse because there's no height constant set. By the way, why wouldn't you use UIStackView for this kind of form?
[The documentation](https://developer.apple.com/documentation/avfoundation/avaudiopcmbuffer/1386212-floatchanneldata) looks pretty clear to me, do you have any specific questions about what it says there?
If I would act according to that I would write my iOS Apps in Turbo Pascal, Assembler, C, PHP, C++, sh, Objective-C, Ruby, Python or JavaScript. In that order. I learned sh scripting way before Swift. But like I'm no longer using Assembler for embedded programming unless unavoidable, I won't use sh unless there's an explicit requirement for it. If Swift gets the job done, I'll use Swift. Because that's currently the language I'm most comfortable and most knowledgable in. 
You don't have specified a placeholder in your storyboard. Hence `placeholder` of the textField is nil. But that's not really your problem. Your problem is that you don't understand the concept of optionals and you just sprinkle your code with `!` until the compiler stops to complain. Since a TextField doesn't need to have a placeholder text, `placeholder` can be nil. So your code should take that into account. For example like this: if let unwrappedPlaceholder = self.placeholder { // self.placeholder is not nil, and its value is now saved in the non-optional variable unwrappedPlacerholder let attributedPlaceholder = NSAttributedString(string: unwrappedPlaceholder, attributes: [NSAttributedString.Key.foregroundColor : UIColor.white]) self.attributedPlaceholder = attributedPlaceholder } else { // self.placeholder is nil, and the attributedPlacerholder should be nil too self.attributedPlaceholder = nil } 
Off-topic tip: use vertical StackView for those 5 UITextFields.
Thanks mate. The first question how is channel count and the stride related with the pointer address? Btw, one strange thing is when I start the recording by avaudiorecorder, the first 4100 samples are all zero. Current setting is 44100 Fs and 1 sec duration. Thanks for helping man. Having a hard day
If it's longer than about half a screen, if you use shell scripts, you're an asshole. Swift might someday be a decent language for this sort of work, but why? Python exists. 
Well it shows this example: let firstViewController = UIViewController() let secondViewController = UIViewController() let pagingViewController = FixedPagingViewController(viewControllers: [ firstViewController, secondViewController ]) Where is the problem?
This guy!! Thanks so much never thought of that. Again wtf are you in a group for if all you suggest is google. 
Have you tried a penis in the butt? Cause it sure seems like you like to suck ride on google for some reason. Don’t comment anymore with your stupid ass 
Thank you kind person I will do this as soon as I get off work
You can think of functions like sentences. Some of them are simple imperative statements ("go do this") that don't require a response. Some of them are like questions, that request a response. `return` is how a function "answers back".
Thanks! I looked at local meetups here and they seem to have fallen off in the last two years with no planned meetings. This community seems pretty active so I thought it was worth a shot. 
Swift handles all of that without any archaic tools like jq. It's beautiful 😍
Use Stackview for all text fields. It ll equally manage space between each text field. 
I agree, and for now python is the better choice for shell scripts, especially in projects that aren’t yet incorporating Swift. However, I still think it’s a noble goal to improve the Swift story for scripting. At the end of the day we’re still Swift enthusiasts, and we still want to find out what works and what could use improvement.
If you’re writing a game and plan to ever target another platform, yes, use C++. If app download size is critical, or have ABI related woes, stick with Objectice-C for the time being. The other languages you list don’t make sense in the client because they aren’t officially supported. But if you’re building a backend to support your app, it’s way more reasonable to use those than Swift, just because people actually use them. They’re going to be easier to hire for. When things go wrong, there.ms a larger community to seek help.
I am using stackviews look at the images, I ran the app on ios12 and the constraints were not distorter but on 10.3.3 &amp; 10.2 it is showing distorted constraints
Sell it to homeless people 
What resources did you use for building your portal?
I cannot see all the constraints and relationships between every UI element. So its hard to tell. But looks like you have some issues setting Y constraints/height constraint. If you can provide more info on your stackview constraints, it ll help. 
This was very cool to see! thanks!
i have given a constant height (40) to the text fields so the height of the stack view will adjust automatically with spacing of 10 and the stack view width is 80% of the screen width. Stack view is vertically and horizontally centered. In the first image stackview x &amp; y position and width is visible and in the second image the textfields height is visible
Define the height of the stackview and it ll adjusts the text field automatically. Set stackview’s distribution property to equalSpacing. You don’t have to manually set the constraints of each text field in stackview. Just set the proper constraints of stackview. If your stackview is horizontally and vertically centered, means you have provided x and y constraints. Your stackview width is 80% of super view. Now set the stackview height 50% or 60% of superview’s height. (Dynamic is better but if required you can set it to 50*number of text fields // Because you have 40 text field height + 10 spacing) This should work. 
thanks man, i only removed the equal height constraints from the other text fields and it solved the problem.
i see. well, i'm in the east bay and never go down to the south bay. it would be nice to have some people to work side by side with. i did join a game dev wrokgroup and even tho it's not a swift group, there was crossover enough to resolve a couple questions i had at the time. but even that group is dwindling. &amp;#x200B; &amp;#x200B;
call super first
UICollectionView
Would be awesome to create shelters just like this indeed.
I’ve coded the portal thanks to ARKit, and the room was done in Xcode, thanks to its 3D engine. Didn’t even need to use Blender. Xcode never stops to amaze me. For the howto, CS193P and Udemy
Thank you for your kindness !
Hello everyone, smashed and got a good grade! Thank you for your help xox
If you're going to store 700 animals, you should use NSArk.
The animals were just an example lol, they're words 
Is there a Unicode limit? 
There is going to be Latin based characters so I'll require UTF-8
I'm going to be adding reminders to my app [Snse](https://itunes.apple.com/us/app/snse/id1442747058). I hope to replicate the functionality of the Alarm app, in a new Notifications controller, but need to learn all about alarms/notifications and how to CRUD them. All my code is open source on GitHub: [https://github.com/BlakeBarrett/snse-ios](https://github.com/BlakeBarrett/snse-ios).
That's a great looking app! Good idea and good job!
So you copied from a tutorial? Yet again?
I’ve learned from a e-course yep
Very cool demo! I’ve been following the same Stanford course and similar sources to Udemy, how long did it take you to make this app/demo?
https://swiftjson.guide is my go-to when I need a refresher.
I recommend you start with the language guide: [https://docs.swift.org/swift-book/LanguageGuide/Protocols.html](https://docs.swift.org/swift-book/LanguageGuide/Protocols.html) The Codable protocol is a bit more advanced so you should at least have the basics down first.
A .plist file could do this. Also just a static json in the project would work too. I’ve seen both approaches in enterprise applications. 
Like, grep? What exactly are you looking for it to do?
Verify that the copyright statements on the code follow our company’s standards and are updated as code changes are done. 
Cool!
Cool idea. So far I only implemented the part of having a static reuseIdentifier variable in my class, even without defining a protocol. This takes this a whole level further. I’ll use it.
Using Swiftlint, you can validate that the header follows the pattern you give it. 
Very cool! Thanks for sharing!
Nice!
Thanks! I already use SwiftLint in our pipeline, but didn’t know about the header validation. I’ll give it a try.
Where do I put that? I'm a complete noob still learning how to use cocoa pods
Oh cool! I'm often in the east bay. I try to chill at Teance to do practice exercises. 
Thank you :) I would say 3h.
Thanks, my pleasure !
Thanks !
Wow
&gt;You say it takes up to 2 seconds to read the data for 4500 cells? What is happening during that time? There is very little logic happening, a couple calculations based on row/column to change how the cells are presented but that's about it. The only other thing that refreshes at the same time is a label, which is practically instant. ~~I have tried putting the collectionView loading on a background thread but that slowed it down quite a bit. The View itself doesn't need to be interactive while the collectionView is loading so I don't think it's necessary to put it on a background thread?~~ I misunderstood (I tried throwing a collectionView.reloadData() on a background thread, Xcode was unhappy), there is no network call being made, it's essentially a non-interactive spreadsheet with very small cells - I'm trying to visualize a lot of data points, but each individual point is little more than a true/false and is calculated locally. &gt;I think you're coming at it the wrong way Yeah, I think you're right. This was a blue sky *how could I do this* sort of thing, but it's probably not worth it in reality. Thanks so much for the help, I think I understand quite a bit better than I did.
Cool, light inside that room, How did u do that?
This is explained very clearly, I love it!
I used the built in scene editor in Xcode. Among all the objects, there are multiple light sources. The default one called “Omni” did the trick. I just had to changes some parameters and voilà =)
\`self\` doesn't exist, so neither does \`self.placeholder\`. The exclamation point in \`self.placeholder!\` forces a memory access anyway which crashes your program because the value isn't there. If you post a link to the tutorial maybe we can help identify what the intended behaviour is. &amp;#x200B; Definitely, though, that code should not happen before \`super.awakeFromNib()\` is called.
I’d be interested in reading more if you do write a post. 
Meta question, but what's the policy on relevancy on this sub? I realize that this is now the most popular iOS development subreddit. But I feel that mostly overshadows discussion of the actual language and/or coding in Swift. Like I see a bunch of medium articles that are just "how to do this cloud thing on iOS in Swift." Can we explicitly state what is and isn't allowed?
Unfortunately, Windows has very limited facilities for this kind of testing. Essentially, you need a Mac to test at all. You can develop iOS apps using Visual Studio (Xamarin), but you cannot test it. And you cannot write it in Swift either. :( As for when you want to test, on Macs there are simulators. You can test the app on your computer using a simulator (which Xcode will run automatically when you press ▶️), and for more serious testing you can connect an iPhone/iPad/iPod to your Mac and then Xcode will let you test on it, with full debugging, breakpoints and all that jazz.
That's not true on AutoLayout. Lots of companies use it. One of the major banks use it also. If you want responsive layouts AutoLayout is by far the most efficient. I cringe when I see someone who isn't using AutoLayout because adding controls becomes hell with all kinds of hacked algorithms beyond a simple screen.
&gt; One of the major banks use it also. Why do we care again what banks are putting in their shitty apps that no one uses? Like, oh boy, a 10-person tech team has chosen to use a technology, it must be good, huh? Apple, Google, Facebook, Uber, Lyft, Netflix, Spotify, Snapchat, Amazon—not a single one of these companies use autolayout. &gt;because adding controls becomes hell with all kinds of hacked algorithms beyond a simple screen. It's amazing technology has come so far over the past 70 years before autolayout existed, huh! 
This is an excellent list!
I am a complete beginner to Swift, so please excuse the newbie question, but I keep reading different answers so am quite confused. I'll try and explain my question as best as I can. See with the app "Word of the Day" for example, each day you open the app, it gives you a new word with its definition. All without you having to open the App Store and updating it from there every day. It just does it automatically in the background. So my question is, if for example you have a Word document with 100 days worth of words and definitions, how do you implement this into the app so that it automatically updates with a new word every day in the background without you having to do anything? Is this even possible? Or do you need to manually update the word every day through the App Store? Or something else? I hope I explained my question properly with the very limited knowledge I have on the subject. 
I'm glad you enjoyed it!
Is it possible to customize one of the default keyboards at all or would I need to roll my own from scratch?
Maybe using sorting and searching algorithms?
If you're only running this once and the array is unsorted then there isn't going to be anything faster than a linear search. `contains` should be faster than counting the results of a `filter` because the contains can stop once a valid value has been found, while the filter has to process every item in the array.
Haven't tried it myself, but looks like you can run a shortcut by opening a URL: "shortcuts://run-shortcut?name=\[name\]&amp;input=\[input\]" Source: [https://support.apple.com/guide/shortcuts/run-a-shortcut-from-a-url-apd624386f42/ios](https://support.apple.com/guide/shortcuts/run-a-shortcut-from-a-url-apd624386f42/ios)
Nice article. End result is pretty similar to what Vapor uses for DI: https://github.com/vapor/service/
What's the project about?
Lol I love that my article barely qualifies at 50 and requires its own section. I'll take it!
Right, forgot about fixing that already in the last post 👍
i think sorting would take longer. 
I would really like if we could keep more separation between this sub and /r/iOSProgramming.
Do have a different word every time you open the app you could have a list of words and pick one at random ``` let wordOfTheDay = words.random() ``` If you want a specific word per day you can have a dictionary with dates as keys and words as values. ``` let wordOfTheDay = words[date] ```
The inner block will be called with all elements of the columns array and you can reference to the current element in the block with the name currentColumn.
Declare Post and Body outside of your view controller.
Whoa, they even have more subscribers. Yeah, I don't get it then. We can keep this strictly Swift-focused.
Okay, I took them, but now the error is `Cannot invoke 'decode' with an argument list of type '([Post.Type], from: Data)'`
Its [Post].self i believe
A great first step towards making swift a friendlier scripting language. Though \~/Library/Developer/swiftsh-caches/ isn't really where I want these libraries. I'm hoping something more python happens and we get a \`/usr/local/lib/swift/4.2/site-packages/PromiseKit/libpromisekit.3.1.dylib\` type situation with support from the PM and language. 
Yep. [Post.self] is an array of `Post` types, `[Post].self` is the type of an array of posts.
The trick is using binary search: &amp;#x200B; ^(func existsInArray(\_ numbers: \[Int\], \_ k: Int) -&gt; Bool {) ^(var lowerBound = 0) ^(var upperBound = numbers.count) ^(while lowerBound &lt; upperBound {) ^(let midIndex = lowerBound + (upperBound - lowerBound) / 2) ^(if numbers\[midIndex\] == k {) ^(return true) ^(} else if numbers\[midIndex\] &lt; k {) ^(lowerBound = midIndex + 1) ^(} else {) ^(upperBound = midIndex) ^(}) ^(}) ^(return false) ^(}) &amp;#x200B;
You are correct, now is working, thks man
You are correct, now is working, thks man
I will try that
Just picking up Swift and iOS dev and I got a basic app up and running. However I would like to follow some good best practices and use some type of MVC/MVVM architecture. I found a pretty informative post on different iOS design patterns: [https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52](https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52) The post mentions RxSwift as a good way to build MVVM into your project without excessive boilerplate. My question is would this be worthwhile to learn/do? The article is a few years old, have things changed since then? I come from a JS/React background, so the UI paradigms have been pretty straightforward to pick up.
Try [Post].self
Sounds like you're getting there. As you've found, anything that touches UIKit must be on the main thread. Xcode will also give you runtime warning if you mess this up. You might try logging some timestamps to see where the time is being taken and also have a play with Instruments, you can capture and go back and look for hot spots (the heaviest CPU usage) in your code. Maybe one of your calculations is slow? Generally I find that network or file read is the slowest part of my code by far, followed by large string parsing jobs. Scrolling a table view, for example, is very fast.
Not sure what you’re doing but i’d guard that url cause Shortcuts isn’t installed on everyone’s device and you’ll prolly get nil in that case. 
Why validate, to keep it updated? Why not just make the build phase do the updating automatically?
Yes, automated updating would be nice too. Since I don’t know of such a tool, a recommendation would be really helpful.
You haven't provided source code, repro steps, debugger info (what type *is* it?), or even typed the error correctly (there's no such thing as "a sigabit error"). There's really no way to debug this remotely. Please provide an [MVCE](https://stackoverflow.com/help/mcve).
`Thread 1: signal SIGABRT` Yes there is. 
&gt; (because if the item is not in the array it is impossible to confirm this without checking every single item in the array.) I don't think you understood the problem statement. That's simply not true. 
Like, put it on a keyboard macro so you just hit key and it inserts `@objc` all at once? It's not clear what you're asking.
I'm working on a hobby app that is remarkably similar (Wheel of Choretune for my children to assign chores over a week - an arbitrary amount of chores that, when the wheel is spun assign a chore to a person - I even call it a wheelView and wedges :). For your issue I would probably make the VC a delegate of your UITextField onTextDidChange (or whatever) and the selected wedge could then receive updates based on what the current contents were. HtH
You're right. Seems like a Mac is the best way to go about this sadly lols. Thanks for the response!!
Thanks for your help! The second one with a specific word per day is what I was after, but it's good to know you can randomise it as well. Another newbie question: So if I'm using the second line of code, where do I put the list of pre-prepared words and definitions? In XCode? Or do I need a separate website where I store all the data for the app to pull from? I know I'm getting quite ahead of myself here for a beginner haha but any help would be much appreciated. 
I tried it for server side using [Vapor](https://vapor.codes), but since I'm not a backend developer, I never did more than just some simple testings. Recently I wrote some scripts for BetterTouchTool using Swift, that was fun, but I don't know if it falls into Mac OS dev. Other than that, not really.
I’ve seen it used for shell scripting. Yet to try it, but I’ve seen it used very nicely for that purpose.
I’m currently writing an API tool using Vapor; it’s great!
Besides iOS development, I used it in my programming classes. I would write out a solution in Swift first since I know way better than any other language, and then I would do the assignment in the intended language. 
I would start simple and go to more advanced options as needed. I would start by having the list of words as a dictionary in XCode. Then as a json file, and finally get the json from my webserver. ``` let words = [ "2019-01-15": "Think", "2019-01-16": "Play" ] let df = DateFormatter() df.dateFormat = "yyyy-MM-DD" let today = df.string(from: Date()) let wordOfTheDay = words[today]! ```
Care to elaborate? Say you have [5, 8, 3, 9, 12], how do you propose to know that 4 is not in the list without checking each element?
Any resources you can recommend to learn how to write scripts in Swift? New world to me
I try to write tools and scripts to automate my work using Swift. Sometimes I reach for python if I know there’s a library that’s well suited to my problem domain, though.
I followed most of [this post](https://krakendev.io/blog/scripting-in-swift) on KrakenDev blog and then just followed Apple Docs to know how to get data from AppleMusic which was what I wanted. Hacking With Swift has a great [post](https://www.hackingwithswift.com/articles/47/write-your-scripts-in-swift-with-beak) as well. It's interesting and it works well. But these were just simple tasks, it was more like a tech challenge than anything else, I don't really know how Swift will work with heavy tasks.
Yeah, I remember doing some Euler projects tasks in Swift when the page was still working.
If you just need to print out, doesn’t this work? For element in “arrayVariableName” { print([0,1,2]) }
You need to remember that Swift is a really new language so even if it wasn’t suitable for one person or team the story might be significantly different a year from now. In many ways Swift is about two years old due major overhauls and needed features arriving. Some consider the coming Swift 5 as the version to start serious development on. Currently I don’t use Swift for anything. For one iOS and Mac OS are no longer a big concern. Under Linux it still is suffering from teething pains. Beyond that I use Python a lot. 
Make something you want to use? Solve a problem you personally deal with.
Thank you so much! This was incredibly helpful. Appreciate it. 
I am learning and using it exclusively for macOS and iOS programs as most the other projects I have are for Windows platform, so using Visual Studio for one and Delphi for others. 
I use Swift + Perfect libs for almost every task I need. Starting to learn python though, it seems to be more suitable when you need to do simple thing quickly.
What sort of tasks do you do?
The most recent one was a basic (or not so) data massaging where I had to remote csv from a remote service, put the content to the local db. Based on db content I output another csv file with some calculations. PS: I have a memory leak in this program that bugs me. Swift doesn’t let me destroy objects manually and gc just loses something. I still didn’t isolate the leak though.
I think to get from these great articles out there into a realworld project with possible users is one of the Most difficult step in learning programming. I'm in a similar situation like you, i'm still searching for a cool project, which is not backed by any tutorial, since around one year. I dont have any great ideas.
Command line tools, for fun and learning.
&gt; If you just need to print out, doesn’t this work? Well, OP wasn't asking about printing, they were asking about the structure of for-in loops. &gt; For element in “arrayVariableName” { print([0,1,2]) } What that does is print `[0, 1, 2]\n` once for each element in the array named `arrayVariableName`, so it doesn't do what Cyberbeni did.
I use a bunch of Swift on my personal server. It hosts my website and blog, creates my JSONFeed, tracks podcast downloads, and hosts APIs for side projects. It’s a really powerful language, and having Foundation in the Swift libraries, with FileManager and other classes I’m familiar with, is great 👍 Would recommend
&gt; the use of "currentColumn" at the beginning of "for" statement, and then using it again in the "place" is messing with me. The use at the beginning go the for statement is where a value is assigned to the variable `currentColumn`. The use in place is where the value that was assigned to `currentColumn` is actually being used. it's similar to something like the following sentence: "For every student in the class, have the student write their name on the chalkboard." Basically a for in loop looks like: ```for var-name in collection-of-things { do-something-with(var-name) }``` And what that means is to take one-by-one each element of `collection-of-things` (in some order that will depend of the type of `collection-of-things`), and do something with that element where in the description of what you're doing you refer to that element by the name `var-name` that you chose right after the `for`. Hopefully that makes sense.
Nothing else. There are more efficient languages for most tasks you want to do outside of iOS/Mac dev and with a lot more documentation for the task you're trying to accomplish. 
Can't you just add the order of the modules to the module-data? ``` { "order": 0, "data": { &lt;whatever data you need to save for the module, type, content, whatevs&gt; } } ``` So for multiple modules in the same post you would just increment ```order``` by one. If you pull data for a post you just arrange the modules according to the ```order``` property 
I personally made an app that I felt was going to be useful to me (even if it had already been made). I loved the concept of pomodoro and made a gamified timer app. It may have been simple but I had free reign to add as many features to test myself with different things like tableviews, timers, CoreData, CoreAnimation etc. It pushes you to be a better developer as you're going to be using it so usability and design becomes a big part of it. One thing to keep in mind: There is no such thing as a unique app now. Rarely do people make unique apps. It's all derivative of some other app. I'm not saying all apps are crap, rather that you should look at an app that does something and think how you could make it better or have a Unique Selling Point. Example: There are tonnes of pomodoro apps on the store, but I added gamification to mine so it's not just another timer app. 
Everything I have written so far are apps for personal use. None of them would really be marketable. I work construction and I suck at keeping track of my business expenses. So I wrote a simple expense app that works the way my brain works. Last year was probably the first year I’ve kept accurate books. I do have a couple ideas for apps related to my trade but I’m still learning every day and am not sure I want to try tackling them yet. I’ll get there. My advice is to write something you need in your life. It will help you slog through the rough bits. If you are working on something purely for potential profits it will be easier to get distracted. That’s the way it works for me in any case, your mileage may vary. 
I’m just a few days into swift app dev. Currently reading a book on swift 4. Read 10 pages, an hour a day, and hoping to be able to write said app ASAP. I want it to be a hobby currently, but if I enjoy it enough, I wouldn’t mind iOS developing a future career. 
Check out [this article](https://www.swiftbysundell.com/posts/building-a-command-line-tool-using-the-swift-package-manager) by John Sundell for making command line tools. He also made an excellent framework for working with scripts on macOS really simple called [Marathon](https://github.com/JohnSundell/Marathon). [Here are a few examples of Marathon scripts.](https://github.com/JohnSundell/Marathon-Examples)
I've also been looking at learning Swift for scripting, and rewriting a python utility I wrote in Swift. These resources look like a great starting point, thanks.
+1 started learning swift then moved over to Python. Python does it all. 
First off you have to focus on your goal, glad to see that you've found that: &gt; Especially that I want this app to help me get a job in software development. What I did a few years back was look at the job boards and looked at the most common things they were asking for at that time and in my target areas. I had a list of about 15 things from Core Data and animation, to networking and multi-thread. I came up with an idea to do one app that would blend these things together, and it was also something that I wanted. This app was a very configureable RSS newsfeed reader. It involved pretty much all the things I needed to do, but it was ObjectiveC and Swift had come out, so I decided to go with Swift. I haven't re-written it, I'm not sure if I want to as I have many other ideas, but you can go to the job boards and look at all the common things they ask for and make up an app or a few apps that need all those things. One "eye opener" you might get is that when you define a project this way, instead of just following a tutorial, you have a LOT more question, design question, screen layout, etc... The larger (more complex) the project, usually the more of these eye openers you'll have. I thought I knew Core Data pretty well, then all the sudden I realized there was more that I never dealt with. This is what they'll be looking for, that you did things on your own, not just "copy and paste" from a tutorial. Maybe try an offshoot from a todo list and make an internal customer support ticket app. Allow groups to post issues to a database, have them color coded and have levels of permission and audit trails. Basically a group todo list with color coding and tracking. Then add in offline support thru data caching and summary graph charts.
I use it if I need to write a command line script. Why not? I'm already familiar with the syntax, plus you get all the power of Foundation and, if you're running on Mac OS, Cocoa too. [Swift-sh](https://github.com/mxcl/swift-sh) is a new tool for writing command line tools that looks pretty exciting - lets you easily pull in Swift packages as dependencies from git repos
What issue are you having that you can’t solve yourself? This sounds like pretty basic Google work.
I’ve never used it before, tried googling but couldn’t find an answer... do you have any ideas? 
You may want to do a bit of reading [here](https://developer.apple.com/documentation/swift/collection/2995109-randomelement) and [here](https://developer.apple.com/documentation/swift/range) and/or [here](https://developer.apple.com/documentation/swift/closedrange).
Thanks. Still not wrapping my head around it. But your explanation definitely helps. I'll just need to toy with it some to completely get my brain wrapped around. 
Done that already but unsure of how to generate the number using user input, thanks though 
```swift let a = Int(textboxA.text) // Transform textbox string into an int let b = Int(textboxB.text) // Transform textbox string into an int let random = Int.random(in: a...b) // Generate random function between a and b label.text = "Your random number is \(random)" // Set label text to be result of random ``` Nothing too complicated here.
There's easy ways and more advanced ways to do this, and it depends on how you plan on asking for the user input (ie will it be positive, negative values, integers, allow decimals, will the values always be passed as lowest then highest, etc) The easiest solution is to use something like func randomInt(between firstInt: Int, and secondInt: Int) -&gt; String { let lowerBound = firstInt &lt; secondInt ? firstInt : secondInt let upperBound = firstInt &lt; secondInt ? secondInt : firstInt let randomInt = Int.random(in: lowerBound ... upperBound) return "\(randomInt)" } Then use it as myLabel.text = randomInt(between: inputValue1, and: inputValue2) Where inputValue1 and inputValue2 are Ints. From there, you can modify the function so it can use generics, but that will help you get started
More Swift tutorials! Swift is such a great language to program with. 
First of all, (disregarding the fact that true random doesn’t exist). What do you mean by random? If the number is seeded by inputs, then it’s not actually random. Do you expect, in separate trials, if the user inputs the same series of text, the same “random” number is generated?
Everything it's like my Windex. I use it for everything :) WatchOS and Vapor. The only thing I haven't touched is tvOS. 
You might need to use a weak ref somewhere. You can also try using leaks to figure it out. 
I Use mostly for iOS development but for scripting is fun, I've to try to do backend. if you are learning check out this [link](https://medium.mybridge.co/learn-swift-from-top-50-articles-for-the-past-year-v-2019-2bec16352320) has some nice guides on swift
Created and deployed a big vapor 3.0 middleware for a massive app/website. Fantastic framework once you get your deployment/testing process under control. 
Works perfectly fine under linux.
Not bad article. For iOS, I love DI through initializers only, works fantastically when writing your UI in code since you are then able to create custom initializers for your VCs. 
Sketch is the best option imo — it’s expensive but worth it
&gt; My question is how did you get out of tutorial limbo and do you have any advice for making that first app? Twice a week I used a niche utility app that had one basic task and I quickly realised that the app was too complicated to use. So I looked for other apps that do the same, I tried three or four and they all had a completely stupid user-interface as well. So I thought how I actually want to use the app and what I could do to make a better app. Didn't take long and I started to make my own app. Took me only 3 or 4 weekends, because I was "toying" around with iPhone apps for a while, i.e. I was following every book and tutorial out there without actually creating something. Then I spend a couple more weekends on trying to design a proper icon. Then I uploaded the app to the store... &gt; and I think it's redundant to publish another app that is already out there in the App Store. ... it was like number 20 for that task. It launched as free with ads, a couple weeks later I added an in-app-purchase to remove ads. After a week or so I received an email congratulating me on making the first app that is usable. Okay. Back to my day job. After a month or two Apple and AdMob each sent me 100€ or something like that. Cool, but since it's a niche market that's basically all I can expect. Right? Nope. For some reason I have a low but basically constant amount of users that download and use the app and buy the in-app-purchase. On average the app brings around 150€ total per month, for the last 7 years. Not bad considering that instead of making the app I could have done another tutorial to improve my skills so I'll eventually be ready to make an app. 
I'm sure there's some people around who do both graphic design and programming, but maybe it would be best to ask this on a subreddit about graphic design?
Well not exactly. Long term Swift is a better play, I honestly believe it will replace Python one day! The problem is it will take awhile to develop mind share. Also Python has a vast library of ready made solutions. In time though Swift will become a huge part of the industry thanks to lucid syntax like Python and the ability to compile to native code. 
That depends upon how you define perfectly. It isn’t mature and fed wonky doesn’t have enough support of common Linux infrastructure. That will come in time but right now it has growing pains. 
Thank you!
Ui/Ux designer of 18 years. I don’t use any paper. I used to use a moleskin for actual meeting notes and very little sketching, but only use Evernote for notes now.
Specifically, what problem are you, or do you think other people are having with Swift on Linux at the moment?
To add to this, and regarding getting the data back and displaying it, you'll probably load it in a `Dictionary` which isn't ordered. So you'll have to sort it into an array. Something like (force-unwrapping for brevity): let parsedData = try! JSONSerialization.jsonObject(with: data!, options: \[\]) as! \[String: AnyObject\] if let json = parsedData\["field"\] as? \[String\] let orderedJSON: \[String\] = jsonModelos.sorted { $0.localizedCaseInsensitiveCompare($1) == .orderedAscending }
Do you find that the lack of types in Python make it really hard to maintain? I come from a JS background, and once I switched to TypeScript, it changed my life. I gravitated towards Swift because it's fairly similar to TypeScript in syntax. I wouldn't be able to give up the strong types and go back to a language like JS/Python for anything more than a small script.
If you need a real 3D coordinate system, use ARKit face tracking: https://developer.apple.com/documentation/arkit/creating_face-based_ar_experiences If that’s not compatible with your devices, look into using Vision face detection: https://developer.apple.com/documentation/vision Big difference here is that ARKit is giving coordinates in 3D by algorithmically calculating depth given 2 cameras, which can give you better angles and dimensions for your 3D overlay. E.g. Animoji. Vision is going to give you estimates of face locations using AI on 2D images. E.g. the camera app’s yellow-bracket face detection. You might have to do some work for estimating the user’s face angle (consider finding a .mlmodel you can use in Vision).
You can/should start by [https://itunes.apple.com/fr/book/the-swift-programming-language-swift-4-2/id881256329?l=en&amp;mt=11](https://itunes.apple.com/fr/book/the-swift-programming-language-swift-4-2/id881256329?l=en&amp;mt=11) :) 
Yep, this is what I use. The Sketch Mirror app for iOS makes it even more awesome with how it allows you to preview designs on your devices without first coding them.
It's cool to see people still trying to stick with BDUF, even after all these years. Someday it'll have a success, I'm sure!
Just go to bugs.swift.org and type "linux" in the search box. There's over 500 unresolved Linux-specific issues today. Some fun ones on the first page: - Substring.hasSuffix/hasPrefix doesn't exist on Linux - Several memory leaks in simple situations, like writing a func which relies on protocol conformance - Concatenating Strings and Substrings with `+` gives different (but arguably both valid) types on Darwin and Linux - Can't build Swift projects on Linux if the folder has spaces in the name - Lots of wildly different behavior (and occasional crashes) with standard library classes/structs like URL, URLComponents, DateFormatter, Calendar, JSONEncoder, and JSONDecoder I've tried porting some Swift code to Linux, and (last I tried) it's still a big undertaking. Make sure you have excellent test coverage, because things will break that you never imagined could break. 
IMO it depends on how you have structured your data in the Firebase Database. Firebase Database suggests you avoid nested data, so maybe go with something like this (Including the suggestion from /u/Timpi): // Posts contains only meta info about each post stored under the post's unique ID "posts": { "post-id-0": { "uid": "user0" "author": "username" "title": "My awesome post" "preview": "Some trimmed representation of the content..." "timestamp": 12345678... }, }, "post-bodies": { "post-id-0": { "module0": { "order": 0 "data": &lt;whatever data you need to save for the module, type, content, whatevs&gt; }, "module1": { "order": 1 "data": &lt;whatever data you need to save for the module, type, content, whatevs&gt; }, }, Then to get the sorted modules for a post, in this case **post-id-0**, query the database like this: var ref = Database.database().reference() let orderedModules = ref.child("post-bodies").child("post-id-0").queryOrdered(byChild: "order") Disclaimer, I haven't worked in this area for a while, and my Firebase experience is limited.
https://www.codeandquill.com/collections/notebooks/ I'm sure there's cheaper options, but i like having both lines and grids
I bought a load of small plain white paper pads and cut them down to similar size of a iPhone screen. Am not a designer but find it helps when doing layouts.
how is this BDUF? the only constraint is „use firebase“, which is an infrastructure choice, not even a design one
Great work, OP! The documentation is easy to understand and it's clear you put a lot of work into this. I'll absolutely be using this with my next twitch project!
What did you do for BTT, if I may ask? 
I'm sorry for the delay! My day job has been keeping me extremely busy. I have just finished importing the repo from Bitbucket to Github. https://github.com/mohitathwani/Panogram The idea behind the app is to allow users to select panoramas from their library, use machine learning to auto generate hash tags and share the images as an instagram multi post image. There's a lot to learn here, multi threaded image processing, UI development, ML, etc.. 
Similar situation. I wanted an app that did not exist so I wrote it.
Who's using Swift Package Managers?
I feel more comfortable using Swift than Ruby so nowadays I use Fastlane with Swift to automate deployment, uploads, etc.
Pity you already deleted it, I'd have asked what it said in Settings -&gt; Battery
The main reason I'm seeing to use Swift elsewhere is because you already know it. For every other type of program, besides Mac/iOS client app, I can think of a better language to use. Swift was clearly designed to be optimal for AppKit/UIKit. The further away from that you get, the less great it is. It's not a binary decision. You have to decide where along the gradient of "how much I want to avoid learning a new language" / "how much awkwardness am I willing to put up with from Swift in this other area" you want to stand. If you only need to write one 3-line script, ever, then it doesn't really make sense to become a Python expert first. 
How about an Asset package manager with Swift to be built like Xcode projects? Reinventing the wheel? 
I use it for language development because C++ never worked out for me. Swift is quite fast and is very interpolatable with Obj-C. However, if you want to do something outside the iOS app development scope the you want to learn C/C++. &gt; Low level programming Swift is the complete opposite of this. Even if you try to do something unsafe, like pointers, Swift makes it as safe as possible. ``` var str = UnsafeMutablePointer&lt;CChar&gt;.allocate(capacity: /* some capacity */) ``` The blaring `Unsafe` lets the dev know what is happening. However, in C you can reduce the code to: ``` char* str; ```
You might want to use the `min` and `max` functions so that the code is more readable. ``` func randomInt(between firstInt: Int, and secondInt: Int) -&gt; String { let lowerBound = min(firstInt, secondInt) let upperBound = max(firstInt, secondInt) let randomInt = Int.random(in: lowerBound ... upperBound) return "\(randomInt)" } ```
My first (and main) app was one for personal use and in a genre where everyone else had loads of impressive but time wasting skeuomorphic animations that made using the app basically like using the real thing, only with more particle effects. I didn't see the point, frankly, so I made an app in the same genre focused on speed instead of showing off.
As a sketchbook, I use GoodNotes 5 on iPad. As a design app, i use Xcode’s storyboard directly. I did buy Sketch but can’t really see the value compared to to it directly in Xcode. (I am a developer).
could you provide an example?
Would this not depend upon the project? Further the industry can be significant. Regulated (by the FDA for example) industries actually have legal requirements they must meet which can mandate paper laboratory notebooks. The same goes for R&amp;D on the bleeding edge in more mainstream businesses. Given all of that I can actually recommend project based paper notebooks. Given that you can read your own hand writing this is a secure way to keep a record of project activities. This is due to numerous bits of info going missing on me over the years, I really see digital as unreliable. As for digital systems: 1. E-Mail is sort of a logging system! However it can be very unreliable and subject to policies with respect to purged data. It is a good idea to backup important threads locally. 2. There are a number of open solutions for Electronic Logbooks. Google Electronic Logbooks. You may have to parse out many references to logging utilities and code of developer incorporation. 3. One of the bigger problems with software is finding apps that meet all of your needs as far as following text, graphics and whatever. I’ve never have found one I like. Apps like Evernote never did it for me. 
That's not a valid input. The problem statement says "the array is sorted".
Look into NSNotificationCenter. You can send messages between classes. Class A registers to listen to a message. Class B upon conditions sends a message. Everyone registered to get that message (ie Class A) will receive the message and trigger a function.
So this wheel was object lives within your viewcontroller? If that’s the case, then I’d say the cleanest way to call that method would be via creating a delegate, making your viewcontroller conform to that delegate, then setting a weak var of that delegate to the viewcontroller. Have you worked with delegation patterns before? Does this make sense?
Why not use delegation? Create a protocol that Main conforms to, add your method there, set Main as the delegate of the class that needs to make the call. Then just call ‘delegate.method()’
If you need more explanation, check out this article. [Delegation in Swift](https://www.swiftbysundell.com/posts/delegation-in-swift) 
NSNotificationCenter can solve a lot of problems, but if I’m understand this case correctly, it seems like the wrong tool to be using. It’s better to be using a delegate here, since you can actually see / force things to work in a more visible way, making things easier to understand. 
I actually started learning Swift as I wanted to create an app to help my son learn phonics. I looked around on the App Store for current phonics apps and they all seem overly complicated to use, or not very well made. I have been learning using an Udemy course and have come along far enough that I have all the tools necessary to start working on it now.
Can you change the tool via command line with the Swift PATH environment variable to change the toolchain for Swift 5.0 in Xcode 10.1?
This is my first app. Struggling with delegation... From the main view controller where the object lives in it. protocol methodToCall: AnyObject { func doSomething() } func doSomething() { print("DELEGATION SUCCESSFUL") } From my wheel class: class WheelDelegate: NSObject, SKSceneDelegate { func didSimulatePhysics(for scene: SKScene) { weak var delegate: methodToCall? guard let wheelScene = scene as? WheelScene else { return } if (wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &gt; 0.0 { print(wheelScene.wheel.physicsBody?.angularVelocity) if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &lt; 1.0 { wheelScene.wheel.physicsBody?.angularVelocity = 0.0 if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) == 0.0 { delegate?.doSomething() print("CALL METHOD FROM ANOTHER VIEW CONTROLLER") } // do wheel stopped stuff here } } } } The app runs but when the wheel stops, it doesn't do anything.
Thank you! I will also add it to my Castro app.
I’m working on notebook app. 
It's not showing up in Outcast yet. I had to click on the Outcast link on the [Swift Community Podcast](https://www.swiftcommunitypodcast.org/) link and sub that way. Then after I refreshed the Outcast app on my phone it showed up.
I have one that shows current song and artist playing, since I was never able to make the "native" one work. I also tried getting the album artwork but gave up after a while. Also tried to change the icon from playing to a pause one whenever a song was playing but this was harder than what I thought and I didn't have enough free time for it. I remember playing with other things like weather and calendar, but since the ones that come with BTT are good enough I just used those. Other than BTT, I also created a script that creates a plist out of a config file for Xcode, it was a very specific thing we needed for a project, I even created a tutorial on my personal blog.
Are you going to tell us what this unmentionable "initialization error" was, or shall we guess?
Right. The way I did this on Overcast was find the podcast by the RSS link above and it ended up working okay. Not sure how Outcast does things, but glad it worked out!
Here is a full code sample because this can be tough to learn on your own. ``` //here is what you need, a class protocol known as a delegate protocol SomeDelegate:class { func doSomething() } //this class, your view controller, will conform to UIViewController //and and also the delegate class SomeOtherClass: UIViewController, SomeDelegate { var wheel: Wheel! override func viewDidLoad(){ super.viewDidLoad() //the delegate is "you" because you satisfy the requirements wheel = Wheel(delegate: self) } //by adding the delegate conformance you will be prompted //by the compiler to implement this func //to satisfy the protocol's requirements func doSomething() { print("CALL METHOD FROM ANOTHER VIEW CONTROLLER") } } class Wheel: NSObject, SKSceneDelegate { //delegates are always declared as weak, so they won't leak in memory weak var delegate: SomeDelegate! init(delegate: SomeDelegate){ self.delegate = delegate } //.... func didSimulatePhysics(for scene: SKScene) { guard let wheelScene = scene as? WheelScene else { //I always print in a guard to make it easier to debug //just a personal choice. print("guard failed") return } //ftfy let angVel = wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0 if angVel &gt; 0.0 &amp;&amp; angVel &lt; 1.0 { wheelScene.wheel.physicsBody?.angularVelocity = 0.0 //using to for "optional chaining" off of the weak delegate //this is what will call the other VC delegate?.doSomething() } } } ```
good in a one to many scenario
The problem is that for absolute beginners, the problems they encounter with the language and the problems they encounter are inextricably bound. For example, it’s hard to separate “I am having trouble wiring up a Delegate” from “I am having trouble understanding how protocols work, especially Objective-C ones.”
Subbed
Anyone know where I can find some detailed info on how to properly configure a Bordered Scroll View? My issue: I have NSTextField(s) in a stack view. I have a class that causes the NSTextField to expand when/if a user enters more than 1 line, the stack view will dynamically adjust to the new width of the NSTextField however scrolling won't trigger if the stack view goes outside of the clip view. I can't seem to find a way to force and walkthroughs are not very abundant. Any direction would be great.
It didn’t when I wrote my comment. Hell I even specify as much in the first sentence. I also say what you could do if you do sort the array (which obviously also applies if it is already sorted). So I don’t see what your issue is with what I wrote.
I get that, but there should be a limit. We can allow beginners to ask questions but more discussion and randomly posted tutorials/articles that aren't about Swift and simply *involve* Swift should belong on /r/iOSProgramming.
We need this in apple podcasts!!!
I would like to thank you all for taking the time to share your experiences with me. I find your insights very helpful and useful and it gave me a much needed boost to continue my quest. 
Could you share the code for your mock firebase classes? That would be super helpful if you did :)
The idea behind calling super is in order to get the functionality of the class you have subclassed from. In the case of viewDidLoad for example. If you have a parent view controller that sets up all the views inside viewDidLoad with certain values, then subclass this controller and wish to provide different values a way to do this would be subclasssing the view controller. If you were not calling super then all the code setting up the views would not run and could lead to issues. There are cases when you wish to not inherit your parents logic but I won’t go over those here. Hope this helps. 
Thanks! 
You're aware that those frameworks are way older than swift, and are automatically translated to Swift APIs?
Woohoo! I have beaten apple at apple's game!!! I vetted apple's app!!! Hahaha!!! Now I should DEFINITELY be CEO at apple, because I have stricter standards than apple!!!
Good for you.
can be easily solved with extension. let cell = TableViewCell.dequeue(from: tableView, at: indexPath)
Are you gonna spam all day? Take your time, browse stackoverflow, and please write your questions in posts rather than all in the title
It’s not perfect but could be much more verbose with try, guards and the likes. It would be nice just to get a type using something like dequeueCell(type:TableviewCell.self). Since UIKit is probably never going to be swift specific you’ll have to do this yourself
Here is a full code sample because this can be tough to learn on your own. No guarantees, I wrote this off the top of my head just now. &gt; //here is what you need, a class protocol known as a delegate &gt; protocol SomeDelegate: class { &gt; func doSomething() &gt; } &gt; // this class, your view controller, will conform to UIViewController &gt; // and and also the delegate &gt; class SomeOtherClass: UIViewController, SomeDelegate { &gt; var wheel: Wheel! &gt; override func viewDidLoad(){ &gt; super.viewDidLoad() &gt; //the delegate is "you" because you satisfy the requirements &gt; wheel = Wheel(delegate: self) &gt; } &gt; //by adding the delegate conformance you will be prompted &gt; //by the compiler to implement this func &gt; //to satisfy the protocol's requirements &gt; func doSomething() { &gt; print("CALL METHOD FROM ANOTHER VIEW CONTROLLER") &gt; } &gt; } &gt; class Wheel { &gt; //I removed those conformances, not sure if they are needed &gt; //delegates are always declared as weak, so they won't leak in memory weak var delegate: SomeDelegate! &gt; //your init sets the delegate to the view controller's instance &gt; init(delegate: SomeDelegate){ &gt; self.delegate = delegate &gt; } &gt; func didSimulatePhysics(for scene: SKScene) { &gt; guard let wheelScene = scene as? WheelScene else { &gt; //I like to print in a guard to make it easier to debug &gt; print("guard &gt; failed") &gt; return &gt; } &gt; //ftfy &gt; let angVel = wheelScene.wheel.physicsBody?.angularVelocity &gt; ?? 0.0 &gt; if angVel &gt; 0.0 &amp;&amp; angVel &lt; 1.0 { &gt; wheelScene.wheel.physicsBody?.angularVelocity = 0.0 &gt; &gt; //this is what will call the other VC... &gt; //notice the question mark, "optional chaining" &gt; //prevents a crash if the delegate is unavailable &gt; delegate?.doSomething() &gt; } &gt; } &gt; }
It will automatically be included IF you don’t override. Once you override you’re saying, no, just use my (subclass) implementation instead. That’s why we need to also call the superclass method. 
While I'm all for writing UI in code, you can still use XIBs for VCs or views with dependency injection. It's just storyboards that are incompatible with it.
It is. Unless you override the function. It’s in the keyword, override. 
Know it is logical. 
Right. Thanks. 
Agreed, we should heavily scrutinize blog spam.
https://itunes.apple.com/us/app/kakurasu-5x5-10x10-grids/id1448427889?mt=8 Completing the rest of the Japanese puzzle games. Making them all computer generated. Kakurasu, the link above, is incredibly easy to program (and ironically one of the harder games to play) compared to the rest. I thought I would be able to complete a game ever three days, however, it looks like I will need to extend that to a few weeks. Best of luck everyone! 
Dude your app is awesome, I sent an e-mail asking for more specific informations. Will love to have that here where I work... kudos for the work
I checked there which showed playgrounds was utilizing 68% of my battery despite not launching it at all throughout the day. 
What does this question mean? Where? It's spelled `prepare(for segue: NSStoryboardSegue, sender: Any?)`. The only weakly typed parameter here is `sender`, and that's already a noun which describes its role. 
No, they're completely orthogonal. One is a long-lived reference that provides an interface for lazily fetching data from a source. One is a one-shot method that passes data from one controller to another controller. I don't see any way you could use one to do the other's job. Where's this question coming from?
You can't reduce it to 'char* str;' because this declaration does not allocate any memory by itself. You have to use 'malloc'. 
OP probably means that it should be `prepare(forSegue segue: NSStoryboardSegue, sender: Any?)` according to the Swift API design guidelines.
Thanks - I edited my answer
There you go: [https://www.raywenderlich.com/425-mapkit-tutorial-overlay-views](https://www.raywenderlich.com/425-mapkit-tutorial-overlay-views) Also is your app only for the US, UK, etc?? Mapkit has horrible support for anything that isn't a 1st world country
How do you figure? NSStoryboardSegue is a concrete class. The description of this guideline reads: &gt; Especially when a parameter type is NSObject, Any, AnyObject, or a fundamental type such Int or String, type information and context at the point of use may not fully convey intent. NSStoryboardSegue is not like any of these. There's not even any other method here beginning with "prepare" which it might be confused with. The guideline isn't saying you need to duplicate every argument noun in the parameter list -- nor does any of the Swift Standard Library suggest that they think this is the case.
Here you go. The delegate didn't work as there doesn't seem to be a delegate function called after committing an edit of a UITextField. Using Notifications does work. My storyboard setup is a standard VC with its view. An SKView and a UITextField are positioned and pinned appropriately. Here is the code... import UIKit import SpriteKit class ViewController: UIViewController { @IBOutlet weak var skView: SKView! @IBOutlet weak var txtField: UITextField! let scene = GameScene() override func viewDidLoad() { super.viewDidLoad() skView.presentScene(scene) scene.anchorPoint = CGPoint(x: 0.5, y: 0.5) scene.size = skView.bounds.size scene.lblNode.text = txtField.text // txtField.delegate = scene } } class GameScene: SKScene, UITextFieldDelegate { lazy var lblNode: SKLabelNode = { let n = SKLabelNode() n.fontColor = .yellow n.fontName = "Menlo-Bold" n.fontSize = 20 return n }() override func sceneDidLoad() { super.sceneDidLoad() addChild(lblNode) NotificationCenter.default.addObserver(self, selector: #selector(textChanged(notification:)), name: UITextField.textDidChangeNotification, object: nil) } deinit { NotificationCenter.default.removeObserver(self) } //Didn't work as there is no delegate on change - this one is pre-change // func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -&gt; Bool { // lblNode.text = textField.text // return true // } //This however does work @objc func textChanged(notification: Notification) { if let txt = notification.object as? UITextField { lblNode.text = txt.text } } } 
I don’t think your solution has the best ux. Might be better using an api (google maps) to determine the closest places as an ordered list. And just launch apple maps for that route
Yeah, I'm not saying it should be named that, just that that is probably what OP meant.
Can you use `NSString`? I think it has a function that does exactly that.
Has anyone tried using computers to crunch data to decide who to bet on?
Do we know the difference between this and CoreML for certain aspects of machine learning? E.g. On the website, Image Classification is listed as a feature, [but that is also something that can be achieved using CoreML](https://developer.apple.com/documentation/vision/classifying_images_with_vision_and_core_ml). Is the cloud-based background updates the defining difference? 
That's how the odds are set. Number crunching.
Thanks, I found a way
Yes: https://developer.apple.com/documentation/foundation/nsstring/1416784-capitalized
I know. I'm kinda pointing out how ridiculous your question is. 
 import Foundation "foo bar baz".capitalized // "Foo Bar Baz" It's important to import Foundation, as `capitalized` isn't part of the standard library.
[Project Euler](https://projecteuler.net/) is up and running, what do you mean exactly? &amp;#x200B;
Weird, I don’t know why I had the idea that they just removed all the exercises because people were cheating and I don’t remember what else. This is great! Thank you!
We actually use CoreML and it’s not cloud based it run your models on our platform and the we can push newly trained models to your device to run local. 
Ah, that makes sense! Thank you for the info. :)
Actually, I think they were hacked a couple of years ago which brought the site offline for a while, maybe that's what you remember. But they came back online and are still posting problems to this day.
We are working on a machine learning tool for iOS. http://Skafos.ai Just released as beta. 
It’s pretty straight forward but what data do you want to feed it? Player stats based on history? Then just feed it into the model until it gives you accurate answers.
yea....this doesn't work...
Thanks. I’ll try this in a few
It's only 4 years old, so I don't necessarily agree with you. Check out [this article](https://9to5mac.com/2018/03/09/swift-ranking-programming-languages/) talking about how fast it's growing.
You are embracing the meme
Swift was never planned to support Windows since the beginning. There are some efforts to compile Swift on Windows using various tools, but they're not official. On Linux, Swift is pretty much gaining enough attraction in particular for back-end web development. You may take a look at Perfect, Vapor, Kitura, and Swift NIO projects. However, the strongest platform for Swift is obviously Apple's own platform.
Because windows is trash. 
Im getting an error of: Missing argument for parameter 'delegate' in call Occurs at the line with `let del = WheelDelegate()` class WheelScene: SKScene { let wheel: Wheel = Wheel(colors: [.red, .blue, .red, .blue, .red, .blue, .red, .blue, .red, .blue]) let buttonw = SKShapeNode(circleOfRadius: 35) let innerC = SKShapeNode(circleOfRadius: 40) let spin = SKLabelNode(fontNamed:"Chalkduster") let del = WheelDelegate() // Missing argument for parameter 'delegate' in call override init(size: CGSize) { super.init(size: size) self.delegate = del self.scaleMode = .aspectFit self.physicsWorld.gravity = CGVector.zero self.backgroundColor = .white wheel.position = centerFrame(self.frame) wheel.physicsBody?.angularVelocity = 0 wheel.physicsBody?.angularDamping = 0.5 let scale = min(size.width, size.height) / (2 * wheel.size) wheel.xScale = scale wheel.yScale = scale wheel.zPosition = 0.4 buttonw.position = CGPoint(x: frame.midX, y:frame.midY) buttonw.zPosition = 0.6 buttonw.fillColor = .white innerC.position = CGPoint(x: frame.midX, y:frame.midY) innerC.zPosition = 0.5 innerC.fillColor = .darkGray spin.text = "SPIN!" spin.position = CGPoint(x: frame.midX, y:frame.midY-9) spin.zPosition = 0.65 spin.fontSize = 22 spin.fontColor = .red addChild(wheel) addChild(innerC) addChild(buttonw) addChild(spin) // print(atPoint(CGPoint(x: frame.midX, y:frame.midY+125))) } required init?(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } } class WheelDelegate: NSObject, SKSceneDelegate { weak var delegate: SomeDelegate! init(delegate: SomeDelegate){ self.delegate = delegate } func didSimulatePhysics(for scene: SKScene) { guard let wheelScene = scene as? WheelScene else { return } if (wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &gt; 0.0 { print(wheelScene.wheel.physicsBody?.angularVelocity) if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) &lt; 25.0 { wheelScene.wheel.physicsBody?.angularVelocity = 0.0 if(wheelScene.wheel.physicsBody?.angularVelocity ?? 0.0) == 0.0 { print("CALL METHOD FROM ANOTHER VIEW CONTROLLER") delegate?.doSomething() } } } } }
That doesn't match that style guideline though. 
Both can be used to pass data forward to a presented view controller. 
okay... I see what the problem is now. Here I did a revision. This one I checked in the REPL : ``` //new class UIViewController { func viewDidLoad(){} } protocol SKScene {} protocol WheelScene: SKScene { var physicsBody: PhysicsBody? { get } } class PhysicsBody { var angularVelocity: Double? init(angularVelocity: Double? ){ self.angularVelocity = angularVelocity } } //old protocol SomeDelegate:class { func doSomething() } class SomeOtherClass: UIViewController, SomeDelegate { var wheel: Wheel! override func viewDidLoad(){ super.viewDidLoad() wheel = Wheel(delegate: self) } func doSomething() { print("CALL METHOD FROM ANOTHER VIEW CONTROLLER") } } class Wheel: WheelScene { var physicsBody: PhysicsBody? { get { return PhysicsBody(angularVelocity: 0.8) } } var delegate: SomeDelegate? init(delegate: SomeDelegate){ self.delegate = delegate } func didSimulatePhysics(for scene: SKScene) { guard let wheelScene = scene as? WheelScene else { print("guard failed") return } let angVel = wheelScene.physicsBody?.angularVelocity ?? 0.0 if angVel &gt; 0.0 &amp;&amp; angVel &lt; 1.0 { wheelScene.physicsBody?.angularVelocity = 0.0 delegate?.doSomething() } } } //new var someOtherClass = SomeOtherClass() var someOtherClass2 = SomeOtherClass() someOtherClass.viewDidLoad() someOtherClass2.viewDidLoad() someOtherClass.wheel.didSimulatePhysics(for: someOtherClass2.wheel) ``` and by the way you can use sublime to reindent swift code with spaces quicly
I made alot of assumptions and created an arbitrary view controller. This is the general pattern of delegation tho. The code I made worked, it just had one fundamental flaw: it doesn't make sense to have a wheel inside of a WheelScene in that case. Well, the other answer is a complete answer. Here is a direct link: https://repl.it/repls/KnottyArcticTaskscheduling
presentActivity should belong to UIView subclasses, not UIViewController subclasses. That way you can not only call self.view.presentActivity() but also self.view.subview.presentActivity() and you won't have view code in the controller layer.
Every existing computing need has already been addressed by a language. In the case of Swift, the primary work was addressed by ObjC. So when a need is already addressed, there's already a body of work and getting people to switch is very hard. So you have new computing needs, that are open to adopting Swift if they want. IDK what new computing needs that have come up since Swift. That means it would have to be used for something that already has a language. I was waiting for Android to adopt it and it's been open source for a while, but still nothing. You have some making it work because they want Swift programmers on their platform, but getting people to switch isn't easy. Something like Server Side Swift, still doesn't seem to have much traction. Developers really don't have a big reason to switch languages, it's very expensive. People that had apps already done in ObjC had little or no advantage to rewriting them in Swift. Taking the time to learn a new language really isn't worth it and devs rarely want to spend that much time. Look at how many iOS jobs still ask for ObjC. Swift wouldn't have pushed out ObjC if it didn't have backing from Apple and if they didn't kill off ObjC. I think ObjC is still perfectly functional and will be for quite a while going forward.
Thanks for your feedback ;) 1. Nothing is stopping you to adopt this protocol to UIView's, you can add extension where Self: UIView. 2. UIViewController is responsible for UIView controlling and state rendering, that's why it is ok to have it there.
Actually if you consider the major overhauls and the lack of stabability it isn’t eve that old. Basically we have had 4+ years of beta releases. 
If UIViewController is responsible for state rendering then how come it doesn't have a draw function like UIView?
If IBM (or less likely Microsoft) starts pushing it with mature tooling and frameworks then it might gain some traction on Linux or Windows. For now the best editor is Xcode which only runs on macOS. They're improving the toolchain to make it more easy to adapt for different platforms but for now it's only mature on macOS.
As you can see in the name it is UIViewController it is controller for the view.
Swift does not offer that much compared to Rust, Go or C#.
Use this site to create a Codable model. https://app.quicktype.io/ Then try again.
Thanks, it worked!
Happy to help :)
Why every API apple creates have to be complex as hell? Why in the fuck not create an API like loadFuckingFile:myFile?
Well think about it, why would it be immediately attractive to anyone else? Is it simple to grasp? Is it portable and readily available on those platforms? Does it have strong standard libraries included for all platforms? Is the tooling decent on all platforms? Does it offer unparalleled performance compared to other languages? I think you'll find that the answer to most of the questions above is a definite "no".
Apple's [CreateML](https://developer.apple.com/documentation/createml) can be trained from Images, text or tabular data. I guess you should look at tabular data. It's pretty easy to use, start by watching the WWDC video introduction.
Wow, what an incredible resource. Thank you for sharing!!
No Cocoa/CocoaTouch. 
yes, right. no taction. sad
You’re getting a type mismatch as you declared “currently” to be an array of “stuff”. However, the JSON disagrees as it is returning a dictionary of stuff. 
I use Mac OS and Linux on a daily basis. When it comes to GUI work, I am more versed in Cocoa/Cocoa Touch. The good, I can use those toolkits with swift. Under Linux, I can write most of my work in swift, but I can't do any GUI work with it. I guess I could just write my console based tools in in swift, but eventually they will be integrated in some sort of GUI. Therefore C++ and Qt have been my number one choice of tools for Linux. Due to Qt's crossplatform abilities, I gain windows support for free (at least for the GUI side of things). As long as there is no GUI framework available for non Mac/iOS platforms, I think it's traction will continue to remain slow. If you are a backend developer, then you might not agree with this question. I am however, not a backend developer, so others would know how to better answer that.
:)
Which one? Ugandan Knuckles or not sharing the answer to your question when you figure it out?
Your code doesn't make much sense as-is. If \`Do foo\` actually is the same code every time, the random number does not make any difference.
What would you need pointers for, exactly? Your tree data structure should probably have a method for inserting/removing nodes if you want to be able to mutate it. So just iterate over your tree, and then call the insert/remove method on the whole tree?
Rust is about as old, but they have prioritised cross-platform and good tooling from the start. The Swift core team simply does not seem to understand how lackluster the package manager, the testing tools, the IDE/editor integrations etc. are, and if you browse this subreddit the community doesn't seem to have embraced anything outside of iOS apps (and maybe macOS apps) either. And even more importantly, it's just too cumbersome to install Swift on a Linux machine; you can get binaries for Ubuntu (but not for the current 18.10!), but good luck on any other distro (also it's not even a .deb package, so you have to muck around with dependencies and the PATH yourself). This isn't any good sign for anyone who's trying out Swift for the first time. To someone coming from another ecosystem and thinking about writing a backend service, Swift looks like a toy language designed only for Apple developers—not because of the language definition itself (which is fine), but because of all these tooling issues.
As u/tim_vermeulen said the simplest way is to `import Foundation` and use `capitalized()`. If you want to roll your own you can do it like this: let foo = "some text string" let fooCaps = foo .split(separator: " ") .map { $0.prefix(1).uppercased() + $0.dropFirst().lowercased() } .joined(separator: " ") print(fooCaps) // "Some Text String" 
The better way to do this would probably be to break down the function. There’s not ever really a need to have functions larger than 10 lines of code. I know this doesn’t help with your specific question but it’s really hard to read pork chop code
That's a fair point. All of our other functions are reasonably sized, but this monolith function is an exception. We want everything in it to be packaged together in a self-contained unit tied to the semaphore. If we break it up we're needlessly passing variables between functions that are exposed to the rest of the class when they should only be called by the previous function in the flow.
Cool thanks. Will dive in. :-)
Option B
You can guard several lines in succession separated by a comma if they all exit indiscriminately. You can also nest functions to break up the blocks without breaking scope
You could use a dispatchGroup. Call dispatchGroup.enter before your guard block and .leave if it fails. After your guard block call .enter numberTasks - 1 more times (since you already called it once) and .leave upon the success/failure of each of those tasks. Then in your dispatchGroup.notify block, put whatever code you want to guarantee to execute last—in your case “semaphore.signal()”
Before using solutions like that, it's important to know what went wrong. A problem, as the error says is that you trying to decode an array of stuff ( [stuff] ) and from the response, we can clearly see that it's just a dictionary. So replacing: let currently: [stuff] with let currently: stuff should fix the problem. Also, I know that stuff is placeholder name but all data types should start with capital letter. 
UPDATE: Wow! (thanks marxy): \&gt; You train a model to recognize patterns by showing it representative samples. For example, you can train a model to recognize dogs by showing it lots of images of different dogs. After you’ve trained the model, you test it out on data it hasn’t seen before, and evaluate how well it performed the task. When the model is performing well enough, you’re ready to integrate it into your app using [Core ML](https://developer.apple.com/documentation/coreml). \&gt; [https://developer.apple.com/documentation/createml](https://developer.apple.com/documentation/createml) &amp;#x200B;
&gt;We want everything in it to be packaged together in a self-contained unit tied to the semaphore. If we break it up we're needlessly passing variables between functions that are exposed to the rest of the class when they should only be called by the previous function in the flow. Have you considered extracting all this functionality into a separate class, and giving that class mostly `private` functions? for example, your original function becomes this: func myFunc() { let myWorker = MyWorker(semaphore) myWorker.owner = self myWorker.doWorkAsynchronouslyThenSignalSempahore() } All the dirty logic gets pushed down into a separate file, `MyWorker.swift`: class MyWorker { let semaphore: DispatchSemaphore weak var owner: MyOriginalClass? var sandwiches: [Sandwiches]! init(_ semaphore: DispatchSemaphore) { self.semaphore = semaphore } public func doWorkAsynchronouslyThenSignalSempahore() { try { try doSynchronousPart() doAsyncrhonousPartThenSignalSemaphore() } catch (let error) { semaphore.signal() } } private func doSynchronousPart() throws { guard let someVariable = someOptionalVariable else { throw someError } var porkChopSandwiches: [Sandwiches] = [] for foo in bar { some() functionality() irrelevant(to: theQuestion()) guard someOtherVariable = functionThatReturnsOptional(from: someInput) else { throw someError } porkChopSandwiches.append(someOtherVariable) } self.sandwiches = porkChopSandwiches } private func doAsyncrhonousPartThenSignalSemaphore() { someAsyncronousFunction(using: porkChopSandwiches) { (result, error) in defer { semaphore.signal() } if let error = error { print(error) return } hooray() } } } Without knowing much about your actual code (it's hard to tell what `myFunc()` is supposed to be doing in plain english), it's hard to say wether this is an actual improvement, but I think it's an option worth considering. You'll notice that `MyWorker` has a `weak` property called `owner`. This is there in case any of those methods (`some()`, `functionality()`, or `irrelevant(to:)`) need to be called on the original object, and can't be pushed down into `MyWorker` for one reason or another. In his book *Clean Code*, Robert Martin writes that functions should Do One Thing. He explains how you can identify functions that *don't* Do One Thing, and how to refactor your code until they do. If you haven't read that book before, I recommend it.
Do you want to call `stopAnimation`, instead of `startAnimation` the second time?
Did you meant to call `stopAnimation` in the `DispatchQueue.main.async`?
Swift is pretty easy to grasp. My background is in C/C++, so I fell in love with the simplicity and elegance of Swift.
Yes.. not the real code. The real code has stopAnimation. Anyway not working.
Of course when you're comparing it to C++ there is no contest, I agree with that. Most ObjC old timers I know struggled quite a bit when they jumped unto the Swift bandwagon. Granted, this was when 2.x was out, maybe with the amount of resources available nowadays it's easier. 
Yes I tried, a separated DispatchQueue, like: func showProgressIndicator(_ stop: Bool) { DispatchQueue.main.async(execute: { if stop { self.progressIndicator.stopAnimation(self) } else { self.progressIndicator.startAnimation(self) } }) } &amp;#x200B;
Your telling it to expect an array of `stuff` by putting it in `[]` brackets. You actually only have a single stuff, so remove those brackets and it will work. I recognise this API - it’s Dark Sky. For the hourly and minutely forecasts you do actually want to have an array of stuff, as Dark Sky gives you a forecast record for each minute and each hour. You can just add these as additional properties in your model ` let hourly = [stuff] let minutely = [stuff]` You should also use a more descriptive name for things than ‘stuff’! 
It's a timing issue. Add some logging after starting and stopping the progress indicator. You'll probably find that the stop is being executed before the start. Put the stopAnimation call in a DispatchQueue.main.async block just like the startAnimation call. You're working with threads so you need to understand the basic concept. What is happening when doTheJob is called and you dispatch to the main queue, is you're saying, queue up this block of code to run on the main thread, the call to start animation. The program then continues to execute the code that follows. There is no guarantee when the block will actually run on the main queue, it simply gets pushed to the queue to be executed in the future. By pushing the stop animation to the main queue you'll ensure that it is executed some point after the start animation is executed. 
[removed]
With the code you posted there is no guarantee that `start` will be called before `stop`. Since `start` is in a async call, `doTheJob` will continue running and may reach `stop` before `start` is event called. And if `doTheJob` is already being called from the main thread, then it's guaranteed that `start` won't be called before `stop`.
The effect is that it shows starting but when call stop animation it won't stop. My understanding was that I dispatch to the queue the start animation, it worked was intended, so I do what is need (meanwhile the indicator is running as it should) and after the job is done i call stop animation - exactly at the main queue, but it doesn't stops the indicator. The last function I did was another attempt without luck. 
Did you add logging as suggested by /u/Kraken_68? What did it say?
Everything about the code above seem a bit goofy to me. Maybe something like this? func doTheJob() { DispatchQueue.main.async(execute: { self.progressIndicator.startAnimation(self) }) doSomething() // Given this is blocking function and it's running on another queue? DispatchQueue.main.async(execute: { self.progressIndicator.stopAnimation(self) }) } 
Try this. &gt;**func** doTheJob() { &gt; &gt;DispatchQueue.main.async(execute: { &gt; &gt;**self**.progressIndicator.startAnimation(**self**) &gt; &gt;print("Started Animation") &gt; &gt;}) &gt; &gt;print("About to doSomething") &gt; &gt;doSomething() &gt; &gt;print("Returned from doSomething") &gt; &gt;DispatchQueue.main.async(execute: { &gt; &gt;**self**.progressIndicator.stopAnimation(**self**) &gt; &gt;print("Stopped Animation") &gt; &gt;}) &gt; &gt;} &amp;#x200B; What the order of the output statements in the Xcode console.
Try this and watch the order of the output in the Xcode console. &amp;#x200B; func doTheJob() { DispatchQueue.main.async(execute: { self.progressIndicator.startAnimation(self) print("Started Animation") }) print("About to doSomething") doSomething() print("Returned from doSomething") DispatchQueue.main.async(execute: { self.progressIndicator.stopAnimation(self) print("Stopped Animation") }) }
I would rewrite doSomething() to be doSomething() { completion_block }, so you can put the stopAnimation in the place where it actually needs to be. I've got an app with progress indicators everywhere, and that's how I ended up doing it.
I will try that too. I've noticed that it is really working BUT taking a lot of time to stop (about 10secs) and I was not waiting to see it finish.
I tried, actually very close to that I did and worked. I saw that it is really stoping, but taking about 10 seconds to hide the control, so I was always stoping the code before it completes, but I need now it stop animating more quickly. 
You need to look up what the difference between unowned and weak self is. 
That's a pretty high level question, so I'll suggest reading and working through some tutorials on how to implement tables. Here is a good one to start with. [https://www.raywenderlich.com/830-macos-nstableview-tutorial](https://www.raywenderlich.com/830-macos-nstableview-tutorial)
Noted. Thanks for the tip.
Unfortunatley, no. You can take a look at [the thread posted](https://forums.swift.org/t/how-to-set-swift-version-5-for-recent-dev-snapshots-in-xcode-build-settings/18692/23?u=leogdion) by @Skrundz but that would only affect command line builds (_xcodebuild_) not building from Xcode itself. That's essentially what [swiftenv](https://github.com/kylef/swiftenv/) does.
I'm currently finishing up a long-overdue update to my app [Countr - Quick Count](https://itunes.apple.com/us/app/countr-quick-count/id911664683?mt=8&amp;uo=6&amp;at=1001lEP&amp;ct=). 
I just recently did a major refactor of our location finder. (More like a total rewrite of the feature). I'd be happy to answer any questions you might have, but I can promise you that it's less complicated that it may seem.
[Unfortunatley not.](https://brightdigit.com/blog/2017/06/09/scriptingbridge-with-swift-communicating-with-apps-using-applescript-and-swift/) I wrote on this over a year ago but basically the only way to use AppleScript with is by running AppleScript and prompting the user to do so. Here's an [Craig Hockenberry on how](https://www.objc.io/issues/14-mac/sandbox-scripting/).
You don't subclass `MKAnnotationView`. You make a class that conforms to `MKAnnotation` with the properties you need. Then you have your map show those custom annotations. Then, in this delegate method, you can access your annotation view the `view.annotation` property. So, for example, if your custom annotation was `MyAnnotation`, you could do something like: ``` if let annotation = view.annotation as? MyAnnotation { // Access your properties here } ``` 
For the &gt;&gt;90% of us who aren't C++ programmers, "pretty easy compared to C++" is good for a chuckle! You're conflating [*simple* and *easy*](https://www.infoq.com/presentations/Simple-Made-Easy). In my career, I've used a dozen different languages professionally, and Swift is by far the most complex. Easy, for people who have used similar languages, but not simple. Even Chris Lattner doesn't agree with that characterization: &gt; "You’re unlikely to run into anybody that says that Swift is a simple language. Swift is a complicated language." 
What's the basis for this claim? What languages have been faster to gain traction outside their native platform in their first 4 years? - C# grew pretty quick, but it didn't have much traction outside of Windows until Mono, which was started 4 years after C#. - Java was perhaps the fastest growing language in history. 4 years after its introduction was still solidly in the Java 1.2 era. There was a lot of interest, but I don't know any shipping software which was written in Java back then. While it didn't really have a native platform, it's come to be a huge player on the web, but it took over 4 years for JSP 1.0 to appear. - Ruby is big today, but it was virtually unknown before Rails, and that took 10 years to first appear. - C was in many ways the first language designed for architecture portability. Despite its release in 1972, it didn't really take off much in the first 4 years. This is very pre-K&amp;R. `+=` was still spelled `=+` back then! I'm not sure anyone used it on any non-Unix system until at least 1977. I'd be curious to hear what barometer you're using for "slow", because I can't think of *any* other language in history which has gained traction outside its first platform faster.
Thank you for the reply and for understanding what I’m talking about. 
Protocols are neat, but I don't understand the specific issues raised here. &gt; 1. Our BaseViewController breaks the Single Responsibility Principle by implementing all these features in one place. Over time it will turn into Massive-View-Controller, which hard to understand and cover with tests. So, separate them. We've been able to split functionality into separate files since Objective-C. It's not hard to understand a piece of functionality when it lives in a file on its own, and doesn't depend on any other code. Also, the article never mentions testing again. How exactly does the proposed solution help with testing? I would think in order to get full test coverage, what you really want is dependency injection -- and once you have that, extracting a protocol like this (which is only used for this one class) doesn't really get you very much. &gt; 2\. Every ViewController in our app inherit from BaseViewController to use all these features. In case of a bug in BaseViewController, we will have this bug in all ViewControllers in our app even if ViewController is not using buggy functionality from BaseViewController. I really don't understand what this is saying at all. If we have a bug in the Base class, then every ViewController subclass still has that bug in it, even if it doesn't use the buggy functionality? That's true of these extension protocols, too. Any time you share code, you will share any bugs in that code, too. Or are you concerned that it's taking up memory in your objects? It's not actually copying the executable text with each instantiation. Can someone explain this problem to me?
It seems more like you would want to have views anchored to each other in a scrollView. You could possibly nest a tableView or collectionView in a table view cell but you would have to work around the independent scrolling.
It's a bleeding edge language from a company that has a history being very closed and anti competitive, and which has zero unique advantages. I really fail to understand why anyone outisde the iOS/mac ecosystem would be interested in it. Don't get me wrong, it's a a nice modern language that I'm happy to be working with every day, but it's only unique advantage is that it's one of the two native languages for iOS development. 
I'll preface this by saying that Swift is currently my favorite language. I'd really like to use it outside iOS. That said, the answer is simple: it's a bad idea. Nobody responsible would commit their company to an untested platform. No matter how good a new platform looks on paper, there will be unexpected issues. Why should your company be responsible for fixing them? Next, there's the ecosystem. A big reason Python took off was that you could find a library to accomplish just about everything. Swift is far from a ghost-town, but it's still not competitive with other platforms. Similarly, there are a number of Platform-As-A-Service vendors that can get you up and running with Go/Python/Node/Whatever with a few button clicks. There's no "Heroku" of Swift, last I checked. Then there's the switching cost. If your entire development team knows one language, why should they move everything over to another? The smartest decision with Swift was the ability to mix and match with an existing Objective-C codebase. Well, there's no such solution with Go or Python, or even C++. In the end, you can't be just a little better than what's out there. You need a compelling story, which I don't think Swift has yet.
Hmm, I'm curious about this. I do ask the permission of the user by using the sandbox stuff and entitlements, and I know of a few apps already on the store that use ScriptingBridge. I wonder if they're grandfathered in. I'll carry on using the ScriptingBridge for now, but thankfully I already have the code ready to just use AppleScript directly. Sadly it's significantly slower to call AS, so I'd rather not swap to it. I'll see what happens when I try to submit to the AppStore. :) Thanks
but is it any easier to grasp than kotlin or reason or typescript? And is it's really significantly better than any of those in any area outside Mac/iOS support? Maybe there is some area, but I'm not coming up with one.
Yup I figured it out. Thank you all so much!
Documentation is your friend https://developer.apple.com/documentation/uikit/uitextview
Indeed, I've read up on selectedRange, but I wasn't sure if that was the best way being you have to get a reference to the string range you want. But thank you
Sounds like a job for SpriteKit. physicsBody.velocity and SKAction.move can both handle it pretty easily. Or without SpriteKit you can just run Timers that update position per second. There are a lot of different ways to do something like that
Thanks for the response! So with that, I'm guessing I would be able to bind a particular movement property to particular sprite when that sprite is selected?
This code causes ALL SORTS of errors in the WheelScene where the wheel is created. 
&gt; Next, there's the ecosystem. A big reason Python took off was that you could find a library to accomplish just about everything. Swift is far from a ghost-town, but it's still not competitive with other platforms. Python also had a 25 year head start. When Python was the age that Swift is now, it was far less popular. 4 years after Python's first public, it was at 1.0 -- not a great language, either on its own or in comparison to others, and definitely not yet a successful ecosystem of libraries.
Definitely one to develop in spritekit.. I would recommend 1.Creating a custom class for the object with the movement variables speedX, speedY 2.Create enums for the modes the object is in. You essentially bind any properties you need altered everytime you switch to that mode. 3. Add an instance of your class onto the game scene, and call your object's update function on the GameScenes update function. enum Mode { case one, two } ... var speedX = 0 var speedY = 0 var mode:Mode = .one func switchPosition(position:Mode){ self.mode = position switch position { case .two: speedX = 8 speedY = 4 default: speedX = 10 speedY = 2 } } func update(){ self.position.x += speedX self.position.y -= speedY } 
No, it's not. But you can research the common reasons to get rejected and prepare.
even if you get rejected you just fix the reason it got rejected and resubmit at no extra charge. but they will put you on the back burner if you keep submitting and getting rejected for common reasons.
It sounds as if you have reasons to believe it would get rejected. Unfortunately, what you're asking is not possible. Read [this](https://developer.apple.com/app-store/review/guidelines/) very carefully, and I mean *very* carefully. You don't want all your work thrown down the trash because of a technicality (I've seen it happen!). You can read [this](https://developer.apple.com/app-store/review/) and [this](https://www.mobiloud.com/blog/avoid-app-rejected-apple/) as well. While you're at it, why don't you try asking here? Maybe someone has had an experience with what you're developing and can help.
What are you making? If you give us a general idea, you will get good advice on this subreddit. If you have a concern, I would certainly vent it here first, before you start programming! 
You can’t get pre-approval even if you *do* purchase a developer account. Also, getting one build approved doesn’t guarantee anything, Apple is well-known to reject update builds based on functionality that’s been around since day one. Long story short, if your app feels like it may be running afoul of a guideline or is even in the grey area somehow, I would not embark on building it without reasoning out what it would mean to be rejected. Mainly, ask yourself some key questions. How egregious or concrete are the possible violations? Are these necessary facets of the app or can they be worked around? Would you be able to change your app to remove features if Apple objects to them? It might not hurt to post a brief summary of your app idea here and those of us familiar with app review can do a gut check.
No.
The only thing I'd suggest about the above code is to modify the switch block. Replace "default:" with "case .one". You don't want to rely on default the way the above code does. Imagine if the enum was used throughout your code with multiple switch blocks like above. Then in a couple of weeks you decide to add a Mode.three. Your code would continue to compile and run but you wouldn't see the expected results. You'd have to hope that you remember where all your code needs to be update or you'll be doing some searching. You'd rather have the compiler show you where you need to update your code and add the new cases, which is what would happen if you remove the default. &amp;#x200B; There may be times you want to use default in the switch block, but I don't believe this is one of those cases.
Though it appeared quite simple ( multiplying two cells and adding cells) a first, it is quite complicated in fact. I will look into it and lets see how it goes. Thank you all for your insight .
That is precisely why r/simpleios exists.
I had no idea that sub existed, so I doubt beginners do.
Do you mean iOS custom keyboards? No, you can't just subclass an NSStandardKeyboard. You have to write everything from scratch. The API is pretty limited, too. Half the features of the standard keyboard aren't permitted.
Wow! I wasn't expecting such a a response. Thank you for the sample code. Reading through it thoroughly, it's beginning to make more sense. However, like I mentioned before, I'm looking at about 7-9 positions. I assume I'd just repeat this type of code within the switch block if I wanted more positions like so: enum Mode { case one, two, three, four, five } ... var speedX = 0 var speedY = 0 var mode:Mode = .one var sprite = SKSpriteNode(imageNamed:"image1") func switchMode(pos:Mode){ self.mode = pos switch pos { case .one: speedX = 10 speedY = 2 //update object sprite texture sprite.texture = SKTexture(imageNamed:"image1") case .two: speedX = 8 speedY = 4 //update object sprite texture sprite.texture = SKTexture(imageNamed:"image2") case .three speedX = 6 speedY = 6 //update object sprite texture sprite.texture = SKTexture(imageNamed:"image3") case .four speedX = 4 speedY = 8 //update object sprite texture sprite.texture = SKTexture(imageNamed:"image4") case .five speedX = 2 speedY = 10 //update object sprite texture sprite.texture = SKTexture(imageNamed:"image5") //... continue as many cases as desired below } } func move(){ self.position.x += speedX self.position.y -= speedY } I got rid of the default case like your response comment suggested. Also with my current rudimentary understanding of the basics of Swift, is my reasoning and thought process of how to execute an idea like this on the right track? I haven't written a program by myself yet and I'm only beginning to delve into the more intermediate portions of Swift like SpriteKit, so my understanding of how to formulate and execute ideas is probably rather ignorant and/or inefficient. 
I am not sure it will replace python as python and be written on any system. Correct me if I am wrong but I am pretty sure you need a mac to write and compile swift code. I hope I am wrong as my desktop is linux and I would love to write code on this machine instead. with that being said I love python and I am just starting to learn swift as of a few days ago.
No, you can't. The process sucks. You could spend hundreds of thousands of dollars developing an app and Apple can reject it for a myriad of reasons, many of which are non-obvious. Plus they change the rules constantly, so even if your app has been approved once it may be rejected the next time. Welcome to the club!
You can always do this the pro way: [here's a github search on SpriteKit and swift](https://github.com/search?q=spritekit+swift). ;) Also, there are YouTube tutorials (free) on spritekit. [I like Jared Davidson, though I haven't watched this video.](https://www.youtube.com/watch?v=LdL99CH23E8) I first saw his [AR Portal video](https://www.youtube.com/watch?v=uuxXHAKA1WY). [Ray Wenderlich got known for writing SpriteKit tutorials.](https://www.raywenderlich.com/71-spritekit-tutorial-for-beginners) So there are quite a few that are free, but you'd have to update some of them for Swift 4.2. You may also find [state machines](https://www.invasivecode.com/weblog/gameplaykit-state-machine/) helpful for keeping track of what state some object is in.
I just recently refactored our location finder feature, so I have a lot of fresh memories of MapKit. 
&gt;sergeyzenchenko Great idea! I also love your landing page. Good luck!
Great idea! I also love your landing page. Good luck!
This month I'm working on adding a couple of more Swift app templates to [https://www.iosapptemplates.com](https://www.iosapptemplates.com/). Going to take advantage of the long weekend to move a little faster :)
Please don’t do this. Look into the “Strategy” pattern. This will be a nightmare to maintenance. 
That has nothing to do with anything I was saying, but ok.
It takes time to get your location. You're asking immediately and while that might work if it already has a location, it's likely it won't be there. After you get permission, call startUpdatingLocation() and have a delegate method locationManager(\_:didUpdateLocations:) which will be called when it gets a location, then stop updating (unless you want to track the person - which eats power).