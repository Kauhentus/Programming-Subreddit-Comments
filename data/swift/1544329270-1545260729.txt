Are you using Playgrounds? Is the function within a class?
Issue was that my setLoc function was inside the video load. I changed the location of setLoc and it worked. Appreciate the help 
For the guys using storyboards, I built this tool some time ago, that parses the colors in the storyboard and create the colors in the Assets folder. It's an interesting concept, it can re-gen everything when you change the color in the storyboard / in the assets folder. Check out the gifs demonstrating it working: [https://github.com/fernandodelrio/SwiftColorGen](https://github.com/fernandodelrio/SwiftColorGen)
If I got that right, you're looking at the challenge of validating something like a hand of cards or the current deck when executing the validation (or "condition") functions? I'd say the best approach is supplying them as arguments, not using a global access. This has the great benefit of it being _easily testable_. You can write unit tests for each of your "conditions" to see if they yield the results you expect. In my current full-time project, I have a similar case with visualisation. Sometimes, an output requires context from some other inaccessible place of the app. I solved it by leveraging a store for certain items — like your _Hand_ — and handing it over to the visualising function. My store is a value-type (a `struct` without reference properties), so anything I pass it to gets a mutable copy but can not cause any side-effects when working with it. If your store/hand has further properties you _do not want_ accessed by the "condition" functions, you can use a `protocol` to only expose required properties. Once you notice that you'd pass more than one or two arguments to these, I would recommend grouping them into a struct just for this case, so you can add more data to it if necessary later on. Here's some thinking-out-loud: struct Hand { let cards: [Card] } struct Player { let id: UUID let hand: Hand? let effects: Set&lt;PlayerEffect&gt; } struct ConditionParameters { let player: Player? let deck: Deck? } Extending the previous example would give us something along the lines of: class ConditionValidator { typealias Validation = (_ parameters: Parameters) -&gt; Bool enum Identifier: String { case handIsEmpty case healthIsFull // ... more cases ... } struct ConditionParameters { let player: Player? let deck: Deck? // ... more properties ... } static let conditionClosures: [Identifier: Validation] = [ .handIsEmpty: { (_ parameters: Parameters) in // ... body ... }, .healthIsFull: { (_ parameters: Parameters) in // ... body ... } ] } Hope this is still helpful to you, these condition functions could be present everywhere — using string-based enum cases for keys here is surely a much better idea than using plain strings.
Damn this was so much simpler than what I did. Saved for next time. Thanks pal
Is this using SwiftyJSON?
&gt;json = JSON(parseJSON: jsonString!) Would assume they are.
Not a swift master, but in general the process would be read file to json object, make changes, and write it out to the file. Its unlikely that you're going to get away with append-only edits, so rewriting the file is most likely necessary. 
Yes! It is! Sorry about not including that.
This is what I thought I'd have to do... i guess my main problem is figuring out how to write to a file at all. But also knowing how to add to the json object would be great too.
The Swift Language Guide calls the syntactic construct a "closure", too: "Closures in Swift are similar to blocks in C and Objective-C". Yes, that's where the term "closure" comes from, but it still refers to the language construct.
This article should help: https://hackernoon.com/everything-about-codable-in-swift-4-97d0e18a2999
The thing is that JSON really isn't great for piecewise changing of file contents. If you change one part you pretty much have to rewrite the rest of the file since the closing tags will change too. For example: [ { "name": "Bill" } ] Now add an object: [ { "name": "Bill" }, { "name": "Drew" } And fix the structure: [ { "name": "Bill" }, { "name": "Drew" } ] You have to discard the end of the file, add the new text, and rewrite everything you discarded, closing the array. With a single array this isn't bad but when you get more complex you'll have to remember to recreate everything past the point you're changing. It's often easier to just write out the entire file again but that can be pretty slow if you making a bunch of changes often. If you find yourself changing JSON files often then you shouldn't be using JSON at all. Instead you should be using a database like SQLite or similar. Now I don't use SwiftyJSON because it's so easy to use `Codable` but here's how you'd do it with `Codable`: let encoder = JSONEncoder() encoder.outputFormatting = [.prettyPrinted] if let data = try? encoder.encode(yourCodableObject), let jsonString = String(data: data, encoding: .utf8) { try! jsonString.write(to: path, atomically: false, encoding: .utf8) // ignoring errors for simplicity } This will write out the entire file every time.
I've created **StoryPro** to create beautiful stories with gifs, text and a bunch of templates! Also includes the square format. The app is fully native (swift). [https://itunes.apple.com/us/app/storypro-create-stories/id1435518858](https://itunes.apple.com/us/app/storypro-create-stories/id1435518858)
I would love to see a solution to this as well. As far as I'm aware, you can't modify a file that was included in your bundle. You can read json from a file in the bundle, and you can create or modify files that your app creates by itself, but I don't think you can change something in the bundle. 
If it’s not going to be in the final version of the app I wouldn’t add it in. No point writing code that a) only a few (thousand) are ever going to use, b) isn’t going to be in the final release of the app.
The point is to have 10-100 times more beta testers for your app. They will be testing much more than the specific code you would write for this idea.
If the incentive is to reduce the time to respawn, then you won’t get 10-100 times more testers, who once again, would expect that feature to be in the released version of the app. You’ve seen these big game companies show trailers for new games with out of this world, stunning graphics right, only to play the game on release and have something equivalent to an old Atari game?! That’s where this could end up.
If the feature in question will not be in the release version, then this would be made perfectly clear to the beta testers.
I honestly don’t think you would get as big an influx in beta testers as you think by adding in a feature just for them. You could incentivise them another way - if your game uses some form of in game currency you could give them extra to start with or something when they download the release version. I wouldn’t be incentivised by a small addition like this, to a beta version of a game that expires in 90days. That’s not speaking for everyone of course.
like others are saying, you pretty much want to read in your JSON file, create an object/model from that, then edit that model, then rewrite the JSON file from your new model
did not worked... I even can't override these methods inside of UIViewController.. I don't use any NavigationViewControllers, just simple UIViewControllers
What about it didn’t work? 
Solved it :D will share later final solution. One more question : how can I clear data from Viewcontrollers? I have noticied that after opening new VC and going back to firstVC and then opening second VC data does not dissapear.. It is completely different from IOS
Hey, wellbranding, just a quick heads-up: **dissapear** is actually spelled **disappear**. You can remember it by **one s, two ps**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
hEy, WeLlBrAnDiNg, JuSt a qUiCk hEaDs-uP: **dIsSaPeAr** iS AcTuAlLy sPeLlEd **dIsApPeAr**. YoU CaN ReMeMbEr iT By **oNe s, TwO Ps**. HaVe a nIcE DaY! ^^^^ThE ^^^^PaReNt ^^^^cOmMeNtEr ^^^^cAn ^^^^rEpLy ^^^^wItH ^^^^'dElEtE' ^^^^tO ^^^^DeLeTe ^^^^tHiS ^^^^CoMmEnT.
Don't even think about it.
I needed to clear values from my class (singleton)
Why not just say if you beta test you get a special X on release like skin/item/code for something
Noice. Deets?
You should get it working on Solaris next. 
A nobile spirit embiggens the smallest man. 
&gt;If I can get vapor running, I’ll post an update. Why not just run a virtual Mac and then you know Vapor would work? 
I was watching a documentary about the British car industry and saw this logo briefly on screen. Here's some more info: https://en.wikipedia.org/wiki/Swift_Motor_Company
Do I even need to use YelpAPI? Can I just use alamofire to make a http get request? 
*Good artists copy; great artists steal.*
Swift is a bird and their [outline](https://www.rspb.org.uk/globalassets/images/birds-and-wildlife/bird-species-illustrations/swift_1200x675.jpg?preset=landscape_mobile) looks like that. 
holy shit. Was this a common theme to see birds and the concept of Swift? Sometimes I get returned results from google about a banking system called Swift so there may be some long term, previous connection.
A swift is a kind of bird. Those birds are drawings of swifts.
Oh okay. That makes sense.
Cuz it’s fun to win. Like a crossword puzzle. If I had time, I’d do the same.
i would also like to know
GitHub.com/compnerd got swift running on Windows. 
I feel there's a lot of opinions, but very little evidence based fact throwing around going on here. Both sides seem to do it to be honest. Let's see actual stats to back up what we say guys and gals.
ugh I'm starting to realize this. I've been searching around for hours and trying to think of workarounds but am coming up short.
`myVC` is belongs to my pod, and I can see that the bundle is not nil, still it can't load image from assets
:) For each pattern/image I store all random calculations into \[CGFloat\] array, so I can rebuild whole image at the arbitrary size -&gt; I only need to set UIGraphicsBeginImageContext scale property and I can reconstruct the image.
Would love to take a look, even if it's not working yet. Repo?
I learned most of it through Udemy, but there are lots of great videos on Youtube (which have the advantage to be free) 
I say chase your bliss, no matter what age. In the age of technology, we have access to a plethora of information at our fingertips, and all it takes is a willingness to access that information, retain the knowledge, and put it into practice. You truly can do anything you set your mind to. You don't need a degree to become an iOS Developer, and anyone who believes that you do must not be super familiar with the current state of obtaining a programming degree in the United States. 
Good luck and please share your progress! How did you start learning SWIFT?
Embiggens? I’d never heard that word before I moved to Swift
This...Apple often pays homage to classic design stuff ... [http://www.noleggiocose.it/wp-content/uploads/2013/03/braun-apple1.jpg](http://www.noleggiocose.it/wp-content/uploads/2013/03/braun-apple1.jpg) [http://farm4.staticflickr.com/3159/2871291116\_b29d1c5ef9\_z.jpg](http://farm4.staticflickr.com/3159/2871291116_b29d1c5ef9_z.jpg) ... and of course some of the original apple watch faces were copied, but can't find them at the moment, etc. 
Oh it’s working 🤓
On iTunes U there are some free Stanford courses for app developing in Swift
How?
I've started with treehouse but that will not be my only resource. Especially since some of the material is a bit outdated (which is a problem not just limited to them). Really it would be great if there was a one stop shop for everything, but that's never going to happen.
Hacking with swift is another one I've seen get a lot of praise.
Look into Lambda School. I took the leap, and loving it. :) 
But, newbie here, if possible it will compile what kind of binary? Windows api, MacOS, iOS, anything? 
Online course? 
iOS 11 &amp; Swift 4 by Angela Yu on Udemy has really helped with learning a lot of cool things. You get access to a bunch of cool projects to put on your resume. I know some people on this sub give praise to that as well
There is no complex UI that I’ve worked in that needs to be done programmatically. I have worked with storyboards for years with various levels of UI complexity. If it can be done programmatically it can be done in storyboard or xib. It’s just a matter of preference
Best Of Luck!!.
Yes, they are an online based school. It’s actually been doing great, and I’m finally grasping all the iOS concepts I’ve tried learning on my own. 
That was a little bit sensible while I'm reading it while high, but ```if true || false``` will only return true because either options has to return true to make the statement true. It's almost like saying a person is good, therefore anyone he knows is also a good person. I understand that the benefit of this is that false gets returned as true in a way, but the analogy remains the same. I stopped reading and scrolled to the bottom after that lol. Good job with the mind games.
If you get good no one will care about your age, experience, degrees... All you need is to prove that you are good and that's it.
I've checked them now, and they don't have iOS. Or maybe I couldn't find it.
I'm doing that right now and really enjoying.
Details? 
Well don’t just leave us hanging here!!
You can do it. I'm self taught too, currently doing macos dev on my own. I think you'll do better with Swift and Vapor doing web apps. Build an app a company could use and sell it. Easier said than done of course, but then you are your own master, no degree needed at all. Good luck and stay positive.
I’m using the Linux sub System on windows 10 (Ubuntu 18) to do all of the heavy lifting but it seems to be working right out of the box. So that’s pretty cool especially when you add vscode in the mix. 
Isn't the idea to NOT put projects you've done through treehouse, udemy, udacity, etc on your portfolio since you'll be competing with others who have done the exact same projects, and instead do something original. My problem though, I'm not very good with coming up with ideas. Like if someone says "hey I have this idea, could you build it?", sure. But if someone says "think of an app idea and build it" I think I'd struggle with it.
This is all about balance. Back when the DotCom era started, there was a big discussion about "everyone should learn java". The truth is that if everyone did know java, then how would anyone stand out? If everyone goes into web dev, then that market becomes flooded. IMO, you should look at a few things. 1. the growth of the market 2. how hard is it to get into that market 3. what you really like to do. I see native mobile growing fastest. I see two areas growing fastest in mobile: 1. mobile enterprise 2. B2C speciality apps Mobile enterprise is going to be the "client server" from the 90's, done on the mobile device. Specialized mobile software used in business. You'll see this market mature just like back in the DotCom days... They go from universal to specialized, this is where mid-sized businesses hire mobile devs for internal apps. B2C speciality is where the device is able to do more and more stuff. From health care to home automation to AR and education. The more demand, the better your chances of the "no degree" being overlooked. You can put out a great mobile app and that can prove your skills.
well, we might know that, but infantile /r/swift doesn't fancy much :D read some Apple history, kids....
I think it's a great idea and you have to keep learning and working. Congratulations for your motivation. If you want some other resources you can go on [https://www.raywenderlich.com/ios](https://www.raywenderlich.com/ios). There are some good tutorials for swift. And for your portfolio you can get some ideas from Github or some other websites. Here are some app ideas you can build for it : [https://github.com/tastejs/awesome-app-ideas](https://github.com/tastejs/awesome-app-ideas) [https://www.ideaswatch.com/startup-ideas/app#](https://www.ideaswatch.com/startup-ideas/app#) I hope it will help you ! And good luck ! 
Checkout Let's build that app on youtube for free tutorials. They are good. Also check his website for more advanced courses. Likewise, Sean Allen provides beginner tutorials for iOS.
Check out [raywenderlich.com](https://raywenderlich.com) . Their website says they have 2694 iOS and Swift tutorials, and, going by the ones I have used, they’re up to date, effective, and wonderfully descriptive. 
iOS is fun, so why not? As far as I see, being specialized in a smaller market means also you can earn more. If companies don't find developers, they will pay more. Way to many web devs == way to little money. More web jobs, doesn't mean you will earn more ;) Seriously go with what you enjoy. The job will show up by itself if you are in tech. To get you started use cs193p (if you have some programming experience). &amp;#x200B;
Is it worth to try and get vapor working on windows?
Yea it was super duper easy 
[https://lambdaschool.com/courses/cs/ios/](https://lambdaschool.com/courses/cs/ios/) Are tuition options like this common? This seems insane to me. - $0 up-front + 17% of salary for two years ($30k maximum total payment)
A lot of people with degrees, don’t have actual skills and have trouble finding jobs. So basically the limiting factor becomes skills and not the degree. If you can learn, gain new skills and know how to apply them you are set. As far as age goes, as they say it’s just a number :). Also I like to think about it like this, if your an engineer ( or in other words, you can build stuff) the world is your playground. Endless possibilities. Consider yourself one of the lucky ones, since most people in the world can’t code and are missing out.
I agree with the assertion that just returning nil on errors is bad. However, I'd like to plug (again) a library that I use in all of my Swift projects: [Result](https://github.com/antitypical/Result). This makes the failure case a first class citizen, eliminating exceptions.
&gt; but infantile /r/swift doesn't fancy much :D Well, it's because you are most likely wrong; the Swift logo wasn't copied from the motor company, but rather from the outline of the bird it's named after. 
Check to see if you have a LaunchCode near you with an iOS Track. They will also set you up with a job afterwards.
I say follow your passion. While there are differences between web and mobile you are better off picking one and diving into it than you are getting stuck making the decision. Learning this stuff from scratch is harder than switching between web or mobile.
-.-
Hacking with swift (free) Ray wenderlich (excellent but expensive)
Swifts are very fascinating birds. They are excellent flyers. And fast. They can easily cruise at speeds in excess of 70 mph, and can be airborn for \_years\_ without ever setting foot on the ground. They eat, sleep and breed in-flight. They can fly a distance equivalent of five times the circumference of the earth in a single year. In fact, they usually only land to lay eggs. Because of their highly specialized evolutionary traits, they have vey weak and small feet. So much so that their latin name literally means "no feet". They stumble and look quirky on land. Once they leave their nest for the very first time, they will immediately be airborn, and probably no set foot on land until they are ready to lay their own eggs, often three years later. In Scandinavian languages, and also in German, their name means "sailor".
Hey good on you for learning, I’ve always said you are never to poor, rich, old, young to learn coding. All you need is access to internet and everyone has smart phones these days. my guess is that you are comparing frontend job markets where the IoT expands way more than just frontend web and mobile. Please don’t limit yourself because you want to just learn mobile. Expand, pretty much the skills transfer and most of the time recruiters don’t know what they are looking g for so if you can check off skills then you get through the list. That said while swift is powerful and great, if you are looking for opportunities you will be starving yourself if you look for swift jobs only, swift is still emerging and a lot of companies code based are already built in objective c. Although you can write swift in those projects they would look for objective c devs. And even more so iOS job market is not as big as the android market simply because more android devices. Plus you get to learn java and xml so even more skills highly sought after. So that’s my 2 cents. Tl;dr: swift is great for the hobbyist but if you want to do mobile development as a career you will get more opportunities learning java and android development
That works, my meaning was the semantics of it all. Of course you'll be able to recover the images if you save the seed. The only issue is if they make a change in the algorithm, which does happen from time to time. They'll change some of the parameters or the calculation a bit in order to suit different needs. They can do this because they aren't guaranteeing exact numbers, just the size of the pseudorandom range. If you want repeatability then implement the algorithm yourself, it's simple enough to do.
I am a self taught iOS developer and with no experience and no degree I got a full time job at Google. Stick to your guns! Good luck.
But was it for iOS or for something else :P
Good for you man! I'm self taught as well, have been for the past 3 years, working in one of the most important tech unicorns in LATAM atm and it's awesome! The sky is the limit buddy! It's a hard long road, look for a mentor, never stop learning but most importantly, don't let anyone get you down, only you alone got yourself that far!
Adding a `Result` type to the Swift standard library was just approved. So this library will be obsolete in the near future, when a new version of Swift is released.
You've got this! I would recommend Udemy as well. They often have HUGE sales on their courses sometimes for as little as $10 and a lot of them have great content.
" I am a self taught iOS developer " 
I await anxiously!
It’s a reference from The Simpsons.
how bad you want it? make apps and give it a minimum of 2 years until you understand
Google makes iOS apps. 
Yes it was for iOS 
Wow people on Reddit always surprise me lol. The question was “Are we ALLOWED to...” and not “What are your personal opinions on me adding this feature.” 😅 As far as I know, there is nothing in the TestFlight terms that would stop you from implementing this. I would skim through their terms and conditions before taking the time to code this though. 
It’s very new. They are a start up honestly creating a smart model. I was spectacle and worried, but they have amazing people in the Iowa community teaching you everything. It’s amazing. Totally worth it, I’m two and half months in. 
Someone posted the link below. :)
Both are truly great and is what I used to get started. 
The degree thing doesn’t matter at all, fwiw. Unless you have a couple very specific degrees from specific universities, it will have little impact. My advice is to just start making apps. They can be relatively useless (they should do something but you don’t need to act like they are a business) but the best thing you can have on a resume is a bunch of apps in the App Store.
As long as you’re passionate about it and find joy in doing what you do, age does not matter. And there are plenty of mobile app development opportunities. That space as BOOMED the past couple of years and I only see it growing some more. Keep at it. You don’t need a fancy degree. The internet is yours for the taking. Use it to your advantage, there are endless resources. Best of luck :-)
Thanks. Apparently I cannot read in the mornings. 
Sounds like a lot, but knowing how education prices in the US works, seems like it is what it is. :(
Cheer up, little boy. I started learning Swift at 42 by myself. At 44 I got a full time job. Read a lot of Apple docs, watch Stanford University course on YouTube and study raywenderlich.com
Windows PE32+ binary that uses the console subsystem. No UIKit, no AppKit, no Windows GUI of any sort. Just a console executable. 
&gt;Send Message Hey sfgiantsfan79, I have two Hacking with Swift pro pack bundles, I don't use it anymore and want to sell it. if this is something that interests you, pm me.
This blog post isn’t just tautological, there’s incredible correspondences between topology and computability theory that lead you to some really bizarre results in the real world such as this. (If you accept the Continuum Hypothesis and squint at UInt until it becomes a script N) this result also says that equality between values in a space with as many inhabitants as the Real numbers admits a decidable equality. That’s absolutely freaky! In classical math, you can also adapt this to show that the Cantor space is the injective continuous image of the Baire Space, which makes the result less freaky, but still in the realm of *unsettling*.
Generally you won't find tutorials specific to company data APIs like this. What you do is read the documentation which tells you what API endpoints are available, what the responses look like, and what parameters they take. 
I'm a self taught developer been working in the industry 20+ years. The best developers I've ever worked with are the ones with the drive and passion to learn, weather they went to school or not. I feel like the biggest hurdle you are going to face is getting that first job as a Junior Developer at your age. Sadly it's going to be a factor, large companies who hire Junior Developers are hoping to get someone young they can mold and keep on to for many years. And Startups who are looking to take whoever they can get will be looking for someone who things 40hrs a week is slacking. &amp;#x200B; But keep at it, don't get discouraged by people telling you no. Hone your craft, learn everything you can, keep growing and the jobs will eventually come. As soon as you have 1 under your belt your age won't really matter any more.
Examples are tight but also it was like 4am when I wrote that and wasn't at my keyboard. So here's an open source example: https://github.com/xmartlabs/Eureka/blob/master/Eureka.podspec https://github.com/xmartlabs/Eureka/tree/master/Source/Resources/Eureka.bundle And they load their images like this: ```swift var bundle = Bundle(for: NavigationAccessoryView.classForCoder()) if let resourcePath = bundle.path(forResource: "Eureka", ofType: "bundle") { if let resourcesBundle = Bundle(path: resourcePath) { bundle = resourcesBundle } } var imageLeftChevron = UIImage(named: "back-chevron", in: bundle, compatibleWith: nil) ``` I will spare you my own code examples but I use an extension like this: ```swift extension UIImage { public static func fromBundle(_ name: String) -&gt; UIImage? { let frameworkBundle = Bundle(for: FoboStatus.self) let bundleURL = frameworkBundle.resourceURL?.appendingPathComponent("FoboCoreResources.bundle") let resourceBundle = Bundle(url: bundleURL!) return UIImage(named: name, in: resourceBundle, compatibleWith: nil) } } ``` 
Not to be that guy, but it's 'Swift'
Maybe others can weigh in with opposing anecdotal evidence, but iOS seems to suffer less from age-discrimination when compared against most other programming specialities. I'm 30 and I have been the youngest on every team in my career except one, and the other dev only beat me by one year.
You are not crazy, and you can do it. I don't know if you listen to the 'Accidental Tech Podcast' uh..podcast, but it is hosted by three two longtime iOS developers and one longtime Mac developer. They have a Q &amp; A section of their podcast, and a couple episodes ago they fielded a question asking "Can I switch to being a developer later in my career/life" and talked at length about it, each offering their learned perspective. The episode is [HERE](http://atp.fm/episodes/301), and there was a tiny bit of followup on the topic on the next episode, found [here](http://atp.fm/episodes/302). Also, as someone else mentioned, [Lambda School](https://venturebeat.com/2018/01/30/lambda-school-where-students-dont-pay-until-they-land-a-50000-tech-job-graduates-its-first-class/) is awesome and on fire right now. If you're fine being self taught, that's awesome. If you want a more structured and straightforward path to getting paid, they might be worth a look. 
We're at a point where every company needs a website AND an app. There is no lack of work, the trick is showing that you know how to build an app. Presentation is everything, build a couple simple apps that work and look nice. If you've got a well designed app in the store you're already past 80% of the people I talk to. I've been doing iOS full time for 8+ years, and still love the platform. Previous to that, my workload was heavy database and web frontend. 
Getting a free computer science education and not having to pay for it unless you score a well paying job seems like a pretty good deal to me.
App development with swift - book by Apple
Yeah I read it too. I still have to understand what the huge advantage is above using a hand rolled `Result` enum. But perhaps it's just good to have a clear Swift-y way of doing things.
I'm also amazed that he can write something at least half-interesting _every week_
Go for it bro, don’t let people put you off and you’re never too old to learn. Swift is an awesome language for mobile, utility and soon web 🤞🏻 good luck. 
I'm not saying it's a bad deal. Just that the price is very American. There are a few nice 4 year graduate courses in other countries that could cost less than 20k. So, for non-Americans, the price can sound a little too high. In Portugal you can get a developer por 20k/year, for example. Just a different perspective, though.
The time will pass anyway so why not use it to learn something new? 
I feel like I hate obscure acronyms 
The time will pass anyway so why not use it to learn something new? 
X2
Well, it gives a well-defined type suitable for public interfaces. A `Result` from one framework can be used as a `Result` in another. Without creating awkward glue code. There are more advantages as well, but this is pretty concrete and clear cut, methinks. 
LBTA: Let's Ban These Acronyms
My bad. Let’s Build That App is a fairly popular YouTube channel that covers a fair amount of swift topics. 
What are you taking about?
https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA
LBTA, iTunes Stanford courses, Ray Weinderleich, HackingWithSwift, the list goes on, just avoid any indians trying to teach you stuff
Just recently got into LBTA and I’m really enjoying his teaching style and his more advance teachings. I know or feel like he has a strong community on his website and on YouTube and I’m sure he is well respected overall in this community as a great IOS developer and teacher. I also can’t wait for more of his content!! 
All the best. I really hope that this works out for you. &amp;#x200B;
Never heard of it.
Ahh, that's why I never heard of it. I don't watch videos of people programming. It's never as good for me as simply reading a book about programming.
Great idea, I hope you connect with some people.
love it
Check out Bay Area Server Side Swift Meetup, Silicon Valley iOS Developers' Meetup, and then just generally searching Swift on Meetup can point you to some interesting events (AWS had the guy from Fastlane come in and talk at their SF Loft office recently for example).
You don’t need this. Udacity is better for the long run. 30k is absurd. I did it with a $10 online course. Don’t swindle yourself with these type of boot camps.
Did the same, then read through iOS Apprentice. Then did Udacity. Now I have both a full time job and a contracted position on the side. Stick to it, it’ll come. I have no CS degree too.
I should go to one of these 
Thanks 😊 
var a = \[1, 2, 3\] a.removeFirst(a.count - 1)
Thank you, that did the job 
i was able to do this using RXSwift. I had an observer that would wait for an image to be placed then adjust the background color based on that image.
I have a masters in computer science, but worked right beside a lot of people who don't have degrees and could out code me. In my humble opinion, the computer industry is the one place where if you have strong coding skills, you can still do really well without a degree. Code on and listen not to people who spew forth without knowing anything!
Good luck brother. I started teaching myself swift and everything I know about iOS at 53. That started 3 years ago
How on earth can i send variable X from apple watch to iphone? All tutorials I have found are massively outdated and do not work.
I found his stuff fairly useful learning the iOS frameworks, particularly since I wanted to avoid using interface builder. I ran through a couple of his paid courses and found them helpful. They are very practical. If you are new to programming, you should supplement with something that provides more details on the language itself and programming concepts. 
I dont support ios9 anymore. That's what I love with iOS is that you aren't bound to old versions for very long as you are on Android.
And if it's empty? Better check that too.
Ever heard about extreme programming?
Put a didSet ovserver on the variable and print the value to see if it is being set by something else.
Arrays are structs so any removal is going to recreate the array anyways, since it's copy semantics. The best thing to do would be: if let last = yourArray.last { yourArray = [last] } 
I prefer safe, sedate programming! :-D
Yeah, I think in general that's true. But unfortunately for me, I need a messenger component in my app and I can't invest in the time to learn how to build my own. So I'm bound to use a chat UI library of some sort. MessengerKit requires iOS 9 or later ... :(
Never heard of it and I have no idea what you're talking about.
If I understand you correctly, it sounds like you are supporting a minimum of iOS 9 because You believe you are required to support iOS 9 to use MessengerKit. You should have absolutely no issues (other than possibly a few compilation warnings about MessengerKit using deprecated APIs), setting your app’s minimum deployment target to iOS 10, and still using MessengerKit in your app. Library dependencies dictate the lower bound of the minimum deployment target version the app can have, but not the upper bound; in the case of MessengerKit, your app must have a minimum deployment target of &gt;=9, however setting the apps minimum deployment target version to anything higher than 9 is allowed.
I set a label in Main.swift. Returned 0.0
^ This is better than doing removeFirst - You can run this test in playgrounds and the first one has an average time of 0.504 seconds execute time on a repeating array of 1_000_000 integers, while the one provided above executes at average in 0.000146 seconds. import XCTest class PerformanceTests: XCTestCase { override func setUp() { } override func tearDown() { } func testFirstFunc() { self.measure { var array = Array.init(repeating: 0, count: 1_000_000) array.removeFirst(array.count - 1) print(array) } } func testSecondFunc() { var array2 = Array.init(repeating: 0, count: 1_000_000) self.measure { if let lastItem = array2.last { array2 = [lastItem] print(array2) } } } } PerformanceTests.defaultTestSuite.run()
plenty, of them! it would be crazy for google not to have a stack of iOS developers as their personnel
What a nice gist.
Hey, thnx for replying, but any ways, that's exactly what I end up doing in my own code, but I found a better solution, turns out that assets were present in bundle but images were not loaded, I don't know if it's a bug with pod script. So the solution was very simple one liner change in `podspec` file, you have to use `resources` instead of `resource_bundles` in your pod spec file and it worked, no hacking with bundle and appending it with image path. so I did something like this `s.resources = 'myPod/Assets/**'` where my asset catalog is inside Assets folder.
ViewController.swift is my organization. For a true answer, I generally create a group for Model, View, Controller(original I know), Constants, etc. I like folders/groups that climb similar files together. Sometimes the lines are blurred so I just make a judgement call on where it should go. 
Thank you for the answer. Do you know if its possible to do without an external library? Mainly because all I’m trying to do is pass an int to the cell, i wouldn’t want to include RXSwift just to do one thing. I was thinking about it and would a global int be a possible option?
Whoa, 🚨🚨🚨🚨racism alert 🚨🚨🚨🚨!!
Correct. This is a common point of confusing for deployment targets. MessageKit supports iOS 9 and up, that doesn't mean your OP's app needs to target iOS 9. In fact, OP said it themselves: &gt; MessengerKit [sic] requires iOS 9 **or later** I mean, it's not rocket science what "or later" means.
It’s possible the destination is a UINavigationViewController with your view controller as the root. 
Label? Main.swift? Returned?
SLUG happens once a month at Lyft office https://www.meetup.com/swift-language/
It'd be nice to give credit to the source: https://help.apple.com/xcode/mac/10.1/#/itcaec37c2a6
Just curious here: what would ABI stability mean for your personal uses of Swift?
Paging u/Catfish_Man...
You have opened tabs from Arduino LEDs to Python to Swift to Vapor lmao 🤔🤔🤔
I teach at Berkeley. So I’m all over the place lol
I had considered udacity since they teach swift 4. Treehouse teaches 3 and I've heard that isn't a big deal (and I do love their learning platform) but there's this voice in the back of my head still saying "you should be learning the very latest".
Thank you so much for taking the time to respond and point that out to me. It seems so obvious now, but it was something I was afraid to assume. 
Wouldn't work with my 2nd shift schedule
Which course?
People from Iowa teach this :O
I don't think Hacking with swift is totally free. And, it shouldn't be either.
The one advantage I have as far as age is I don't look it. Take note boys, start taking care of yourself early in life.
The first book is free (all you need to develop apps). From there on you can use other free tutorials or the docs. 
I'm a big believer in master of one &gt; jack of all trades. 
I've heard it's one of the most popular of the iOS/Swift groups. It's a bit of a drive for me, so I don't go. I'm still blown away that these things are echoed live on YT or something else. I've belonged to many different groups over the years and they seem to be pretty low tech.
In this case, you wouldn't want to include the storyboard as a resource file inside the framework because it will get compiled by Xcode into a .storyboardc version. Just send it in the raw xml // .storyboard format to the client along with the framework and make sure to adjust the code to access that storyboard from the main bundle. 
I wouldn’t worry about the version too much. The main reason I liked Udacity was because it taught me how to take any idea and make it a reality. It got me to the point where I felt competent for the first time. Pretty much everything I did leading up to it was in preparation for it. I’ve a few friends who completed the program too, all become professional iOS devs. But Udacity is just one way. Honestly you can get there a multitude of ways. Just be careful because time is your most precious resource, and it’s easy to invest it in things that won’t really matter when trying to land a job. Don’t get distracted and put your time towards things that will make you better but also will provide value to most prospective employers. I will say, if Udacity’s networking course is still free, I highly recommend it (if you haven’t learned about networking yet). Best of luck!
The question is a little tricky to answer because it’s not quite clear what you’re asking. So, your framework includes ViewControllers that are linked with a Storyboard. Are you asking if the client is able to initialise a ViewController but with their own view implementation? They could subclass your ViewController and link it with they own Storyboard/xib. IBOutlets would [apparently](https://stackoverflow.com/questions/36392079/override-iboutlet-properties-from-super-class) still be accessible so this might be workable. 
thanks for quick answer! Can you explain it a little bit more? I currently create assign storyboard like this: &amp;#x200B; **let** bundle = Bundle(identifier: "com.my.framework.package") let mainStoryboard = UIStoryboard(name: "Main", bundle: bundle) let vc = mainStoryboard.instantiateViewController(withIdentifier: "storyBoardid") as! ViewController self.present(vc,animated:true,completion:nil) &amp;#x200B; So I should call bundle: nil instead? :)
it would be absolutely perfect for it
Si the simulator won’t be too slow right? 
I think you'd have to check the card. Is that the 5770? There's a patch to make it work if it doesn't support Metal. Basically you need to run High Sierra or above and some will run High Sierra as the highest level because above that you need Metal support. The ram, SSD, and i7 should be fine. Try installing Mojave, if not, HS then you'll be up to current. At some point, you'll need Metal to go past where Xcode is now, but that's another day. Getting life from an 7 year old Mini for a few years should make it worth something. If you're buying this, I wouldn't spend too much.
I can clarify. I do link storyboards with VC. Clients should not be able access VC, only a file with all storyboards views :)
It will be pretty cheap to buy. Comparing to any other Mac with good specs I’ll spend at least half. By card you mean the gpu? It has an intel hd 4000
nope. in any case, even the best macbook pro won't beat it.
This is great. I’ll get this then. Thanks so much.
It should be real cheap. The quad cores are good developer machines and is why they where so popular on the used market for so long. However the utility of such machines is quickly coming to an end. You are at risk of a new OS or XCode release simply not running on the platform any more. For development work I’d avoid most of the dual core machines so that brings you up to the current machines. Sadly the new Minis are expensive at first glance but you are getting a massive upgrade that makes for an excellent developers machine. Basically you either buy the unit you are looking at or skip used for a new machine. By the way I never had a huge issue with the simulators even on a 2008 laptop. The simulators are native code running iOS apps compiled to x86. So you get native code speed more or less. Modern IDE’s demand lots of cores and RAM, these two feature have more to do with running smoothly than just about anything else. An SSD makes a huge difference also but that applies to every app and all of Mac OS. If you can swing it buy knew other wise accept that your purchase will be a gamble. 
Yes. I'd do the research on the HD4000. Here's the reality... The card is probably edge of useless. I have a card that was pretty high end at the time and it's not going to work with Mojave. I'm going to update to HS and stop. When I'm forced to update, I'll get a new card. Point: the card can be quite an investment, be very careful because you'll likely get chump change for selling that card and you'll pay quite a bit for a new one. If the cost of the card is going to be a net of $200 then you'd be best to pass and get something with a new card, or explain to the seller that it's going to cost you more to update that system to make it work. Just to put a compare on this... I just doubled my RAM for $10 and got a 240 SSD for $27. My system can take the Xeon and push 4.6G for about $50. However, I can't make my video card do Mojave. My system can compete with most any high end system you can buy today for a small amount of money, but my video card isn't going to cut it. I'd compare a system with a more modern card and then see if HS will install and work well. A quick google search suggest you'll have a few problems with HS.
My problem is that I would spend 4x more buying new. Unless I go for the i3 Mac Mini with standard specs.
I see what you mean.. then I’m wondering if buying a new gen intel nuc i7 and doing a hackintosh wouldn’t be a better/cheaper idea. I strictly need it for Xcode, for anything else I have a high end 16 cores workstation and a surface book 2 top gamma.
Why does a 2012 Mini have an i7 when the latest ones are i3 and i5? Kinda strange. Anyways, if you're getting that 1/4 of a new one, that's about $250 or so... hard to pass that up even if you end up having to upgrade the card. Just make sure when/if you upgrade the card that it's designed to work with a Mini. You can probably find a used on at that time if you even need one.
dude, it's SF, not Texas
I’m in Europe, so prices are quite higher here. But base model is i3, up to i7 if you want to spend a lot.
The thing is, I didn't see an i7 Mini on Apple's web site for NEW minis. I don't get it, I thought the newest Mac Mini was a BIG upgrade in performance. I remember the I7 back in 2012 was a top dog back then, so why is Apple selling the i3 today?
Oh! I’m not quite sure exactly what you want to achieve then. 
Here's what I did: Back in 2009 or so, I upgraded my system to the specs of the Hackintosh recommended specs. I got the exact cards, chips, board, etc... that was known to work. At the time, it was an i7 950 3.06G, 6G ram, 5770 video card with a GA X58A board. I'm still using that system today, some 9 years later. I doubled the ram for $10 and got dual SSD (one for OS, one for data) and this board will support the Xeon overclocked to 4.6G. Someone posted a build of this exact board with a new GPU card and 24G ram, he was editing some 4K HD video in several windows at the same time as a test and it was kicking a$$. The Xeon is about $50 and overclocks very well. These 10 year old boards are all over eBay and the ram can be found cheap too. I'd put my hackintosh up against any high end system and after some 10 years, the bang for the buck is unreal. You'd be hard pressed to out perform my system and you'd pay thru the nose to do it. The only regret is that the video card doesn't support Metal. Not a big deal, just need to upgrade whenever Apple forces Xcode to not work with High Sierra. Bottom line: I'd spend the money on a dual monitor hackintosh. The money I saved, I can go out and get a 2nd monitor and new video card and be miles ahead of the game. The hard part is the updates to the OS. For the last 4 days, I've been backing up and spring cleaning my system. I have years and years of files all over that I'm backing up to a 4T external drive using a USB stick to a PC laptop. It sucks, but I don't want to lose anything. Last year, I spent 2 weeks just to find out that my USB3 setting in the BIOS will wipe clean my BIOS and each reboot/restore of the BIOS takes about a 1/2 hour. Had to go thru tons of setting to find that out. Once you get the hackintosh working, you'll love the performance vs a true Mac. Someone compared a MacPro to a hackintosh and the hackintosh was ALL OVER the MacPro. It was sad. Pound for pound, it's hard to beat the hackintosh. This is far and above the greatest value for any computer I've ever had or ever heard of. Think about it... I'm running 10 year old hardware and you'd be hard pressed to beat it if I do a simple $50 upgrade to the Xeon chip. https://www.youtube.com/watch?v=T7MS0jID29c 
Cool I’ll think about it. I have an ultra wide 34 so I don’t need dual monitors :) I’ll think about setting up a mini it’s build, I don’t need a powerful gpu on this as I’ll use it for xcode only. My workstation has a 1080ti that I use daily for work. I’m not after a powerful system, rather a cost effective Xcode machine, to use at my desk or to hook up via teamviewer when out of home.
If it'll run HS well, then that should cover things. If my price guess was right, you'd be hard pressed to beat it. The old X58 boards are running about $200 alone, so you'd be in for maybe a $400 build by the time you get everything.
Yeah, the hardware is good for building and running emulators (on my 2017 iMac with intel core i5 and 8 gb of ram the emulator works fine and the buildings are fast) but the 2012 Macs will no longer be updatable. So maybe you will not be able to use the newer versions of Xcode. 
Just checked their site out. There's a whole lot there that I just don't see being asked for on job listings. &gt; C, Operating Systems, Hash Tables, Networking, and Computer Architecture Don't see OS, C and CA listed on job sites for iOS. Not bad to know, but don't see much use in iOS dev.
Apple wrote a good and complete book called "App Development with Swift" (on iBooks), the best resource (like the c lang) is by the author. But if you want a complete lesson, on iTunes U there is a free course by Stanford University called "ios 11 app development with swift" and it also have some slides and files. I recommend to follow both the methods to have a better knowledge of the language
The course I took was mark prices iOS course. There are plenty of options, it is best to choose one and stick with it. There was someone else recently that posted a great road map for things to learn for iOS development, take a look - https://www.reddit.com/r/iOSProgramming/comments/a27f3o/ios_navigation_101_getting_the_lay_of_the_land/?st=JPJOWW6O&amp;sh=576646a5.
No you cannot, here’s what you can use: https://swift.org/download/#using-downloads
Thank you 🙏 
**TLDR:** No - Depending on the version of swift you are running, you need to [download](https://developer.apple.com/download/more/) the version of Xcode to match the target Swift version and upgrade it incrementally. However, you can still use and older version of Xcode to build a project that have a newer version of Swift by [changing the toolchain](https://stackoverflow.com/questions/44884571/is-it-possible-to-compile-latest-swift-version-on-older-xcode).
Thanks. The thing is my mac can only go up to EL Capitan so I can’t upgrade to xcode 10. I found a Dosdude patch that will upgrade my system to Mojave. 
I dunno. I'm American and have my Bachelor's Degree. I paid more than 20-30k, but it's definitely paid off for me. I run a decently sized design team and feel like some of the extra things I took getting my Bachelor's have contributed to my success, but that could be more a side product of the field I'm in and how broad design is. &amp;#x200B; I can 100% say without a doubt that I wouldn't agree to a 17% salary model, nor would any of the devs I surveyed at the office. Just depends on the person I guess. The 20k up front isn't an option for most people though. My situation is significantly different than OP, but I'd go with Coursera over something like this if I were looking for a more formal education than say Udemy. I'm looking to learn Swift and have mostly just been playing around on Swift Playgrounds on my iPad Pro, but I've been enjoying it. I'm definitely going to dive into a Udemy course or two.
Extremely inefficient, though.
I do the opposite as you: I put all the FooViewController, FooModel, and FooViewModel, etc inside a Foo directory. Then the BarViewController, BarModel, and BarViewModel go in the Bar directory. My reasoning is that if I'm browsing my codebase, I'm more likely to want to change the FooModel and the FooViewModel, than to want to change the FooModel and the BarModel.
If its a small project with a few screens and just 1 or 2 models then I organise by View Controller/ Model/ View, however its a larger project I organise per feature/flow, for example if you had a checkout flow, then I'd put all screen/supporting files under that
I’ll try that method, it seems more efficient 
How can I draw a single pixel to a specific location on a canvas that is shown in a view? I've written an emulator and need to take a series of bits that are written in the emulated system's memory, and convert them to pixels on a canvas on Mac OS so I can see what's going on, but I currently have no clue on how to go about doing this. Pointers to any classes, or better still tutorials for this would be much appreciated! 
In main.swift I initialized an int with: var mWeight : int = 0. I then set a label to equal mWeight when a button was clicked. When I click the button, the label prints out as 0.0
I dont see an error here, 0 is 0...
It has the advantage of being very declarative and safe. You’re obviously reserving the last element, not some arbitrary index. Whether or not it’s more efficient is a side effect, most times a bit of efficiency or not won’t matter. 
Is it really popular enough that you thought you could get understood by the majority of people here without telling us what the acronym stands for? I know I had no idea
No.
May be a good point to actually mock without switching eviroments to lets say something like apiary.
You can get the main bundle with `Bundle.main`.
That’s totally valid and actually I really like that and might adopt it 😊
Agreed, sadly I don't have all the different screen sizes so sometimes the simulator is essential
Alternate one-liner: yourArray = [yourArray.last].compactMap { $0 } Does exactly the same thing, it just moves the check to the `compactMap` step.
All the utilities you could ever need for drawing raw bitmap data are gonna be in CoreGraphics. You can probably adapt [this example](http://blog.human-friendly.com/drawing-images-from-pixel-data-in-swift) from iOS to macOS. Specifically the use of CGDataProvider to get Core Graphics images from raw pixel buffers. It’s a lower-level C API, but I assume since you’re writing an emulator that you understand C 😅
They definitely do sell an i7 version of the Mac Mini, you just have to configure it with a card. But on top of that, an i3 today is way better than an i3 in 2012. Why would they not still offer an i3 version?
Hey, thanks again for the reply. I'm still pretty new to swift, so I got a few follow up questions. 1) To use the conditionClosures function I'd need to create an instance of the Parameters struct, so that should probably be outside the class so it's visible in other files? 2) Is there a reason you chose let instead of var for the struct fields? I'd think that var is the way to go since stuff like hand, deck and player all have properties that change throughout the game. 3) How exactly would I call the function? Previously I was able to call it like this: ```conditionClosures[condition]!(hand)``` Which allowed me to have a ```for condition in card.cardConditions``` loop. Obviously I need to use ConditionValidator.conditionClosures now, but I can't just use the string I get from my loop anymore.
For personal us I use swift and it’s 10x better than any language but large companies care about the next billion users so this doesn’t allow them to use Swift.
Hahah totally meant iOS community. Haha
Find the entire thread, in all its glory, at https://twitter.com/twostraws/status/1072546455989170178
thanks for sharing your Bitrise practises u/marcosgriselli
"You can do better than this, I know you can" Find (and respond to) this gem here: [https://twitter.com/twostraws/status/1072546455989170178](https://twitter.com/twostraws/status/1072546455989170178)
Yeah I understand 100% but buying new you will have something that will last 4x longer (probably closer to 6x). After 6 years you have to have real concerns about Apples support. Also with Marsipan and other Apple initiatives you may find that the latest OS and XCode will be required for your development efforts. In any event, if you like to gamble got for it. I just think the machine is really getting up there in years thus the word gamble. 
TLDR?
Another biased article saying cross platform dev is better with nothing to back it up.
&gt;I don't think this was a particularly strong effort: it comes across as biased, incomplete, and a bit condescending. I don't think many iOS devs will read it and say "I should try Flutter." Sums it up quite nicely, even though most of the joy is in reading the dozen+ Tweets he uses to tear into the article &amp;#x200B;
I went back and checked, seems the i3 and i5 were the base models. The page didn't list an i7 model but configureable up to the i7.
_getStringAtMarker is an implementation detail of NSXPCConnection; hard to say without more information whether it's a bug there, or a bug in something in some other framework using it. Definitely file a bug :) 
r/MurderedByWords
Actually it seems like a really in-depth, helpful and well-meaning critique!
Paul Hudson is a saint
as my 14 year old would say "why you roasting me?"
I saw that Dosdude path but it only works with real Macs, mine is a hackintosh. The issue is the video card not running Metal. IDK how good Mojave will work without Metal support, but I understand that HS (High Sierra) doesn't have the Metal requirement and still runs Xcode 10. I'm getting setup now for a HS upgrade from Serra. If your issue is the video card, I'd look into replacing it. I've been told good used ones are about $60. I'm holding out until next year as I want to do a few more upgrades to this system.
Yeah. I kid. 
I read this article from a post on Hacker News the other day, and these tweets summed my feelings up pretty nicely. Some on HN had noticed a lot of posts basically shilling Flutter lately, and this article read no differently, though I don't think it was an actual shill, just a shoddily-written piece.
Glad to help you out, GotDamned — this time, I'm not so late to respond: (1) When calling the condition validation closures in the example above, all you need is a case from the enum `ConditionValidator.Identifier`. The name was only improv and the class is used like a namespace here, it doesn't have anything to initialise, maybe something like `GameCondition` would be a clearer name for it, that'd make its children `GameCondition.Identifier" and `GameCondition.Parameters` which is much more comprehensible. Let's just call it that from here on out to be clearer. If we assume I have now read an identifier for a condition I'd like to check, the _game_ (somewhere central within your app) would need to supply me with an instance of `GameCondition.Parameters`, reflecting the current state of the game for the player I want to check. A setup to do this might be as follows: class GameCondition { static func validate(condition: Identifier, with parameters: Parameters) -&gt; Bool { guard let conditionClosure = conditionClosures[condition] else { // We land here, if an *invalid* identifier was passed, an identifier for which there is no validation function. // We may want to throw an exception instead of silently returning "false" as this is a special case. return false } return conditionClosure(parameters) } static let conditionClosures: [Identifier: Validation] = [ // ... ] } Are you familiar with `guard` statements? They are great for early returns and "guard" a statement to be true and return otherwise. The compiler enforces that the scope is exited from these statements, less room for accidental errors if you intended to quit there. (2) No, using `var` is fine for struct values. I just always start off with everything being as immutable as possible and only set things to be mutable if necessary. Though structs have the inherent advantage of being value-types, so you always only have a copy and accidental edits are not as easy as with reference-types. (3/4) Your last point about the use of `class` in my example, I scratched that in my first blocks in this comment; It is used like a namespace. Everything defined within — if `open` or `public` — can be accessed from the outside like `GameCondition.validate(...)`. If we wouldn't wrap our declarations like in the example, we'd have to probably choose some longer names to make it explicit as they will be globally available throughout our project. If we kept the name `Parameters`, surely you'd have another spot where `Parameters` might mean something entirely different. Here, it is `GameCondition.Parameters` which makes it distinct. A unit test could now also just construct its own copy of `GameCondition.Parameters` and pass it to the `validate` function to check correct results, no instantiation, no state. This can also be very helpful just doing some experimenting. At some point, you'll want to know if your validation functions work and how they handle certain edge cases.
on a number of open-source libraries - [https://github.com/maxvol/RxARKit](https://github.com/maxvol/RxARKit) [https://github.com/maxvol/RxVision](https://github.com/maxvol/RxVision) [https://github.com/maxvol/RxAVFoundation](https://github.com/maxvol/RxAVFoundation) [https://github.com/maxvol/GeoJSONMap](https://github.com/maxvol/GeoJSONMap) &amp;#x200B;
Well, the funny thing is, the author seems to think that their argument is so convincing that an expert in iOS will agree with them. It actually seems like they knew Flutter, gave native iOS a try, and found it to be harder, so Flutter must be better.
I thought this response was a bit harsh at first. Then I saw this: https://twitter.com/biz84/status/1072534647844810754?s=20 These kinds of clickbait headlines are lame and serve to mislead those who are either too inexperienced or too biased to know what they're talking about.
According to him he’s a hardcore iOS dev with over 10 years exp, that’s literally almost (if not all) all of iOS lifespan, from Objective c to Swift, I really can’t see someone so “pro” switching to something just to it makes their life easier, he should be good enough to get past all those issues, as us other devs do. Also who the heck working 10 years as a native dev randomly just switches to cross platform? Lol...
Regarding #7, I'm curious what benefits a language gets from having delegates and target-selectors when it already has closures and notification. In my (limited) experience with Objective-C and Swift, delegates and target-selectors are less flexible and more difficult to reason about.
Someone needs to call a burn ward. Ouch
See wall of text, close window.
Anyone else read the language as being named "Fluffer" and wonder if someone spent way too much time out partying the night before they named it?
\&gt; most complex UI is done using programmatic layouts. &amp;#x200B; I really don't think this is true. The "storyboards vs. programmatic" argument has been ongoing in the iOS dev world for years and doesn't show any signs of trending one way or the other. 
Why are people opposed to reading?
What this image really illustrates is **why Twitter sucks.**
I love to read, I prefer reading over watching videos. However, this wasn't formatted to be able to read it. This was a screenshot of a twittering conversation that is broken up into tiny pieces by that platform. It doesn't have a link to the original article so there's no context. It's not reader-friendly.
Can I vote this about 20 times?
A bigger problem then any one particular shitty article is the general trend of people writing blog posts just to write blog posts. Instead of actually having anything interesting or informed to say, they're just after some fake internet points on their social media of choice. Stop for a minute and realize that junior developers and other people just starting in the field are going to read your crud and take it to heart. Have reverence for the idea of putting your words into the public discourse. Just because it's so easy to publish your thoughts these days doesn't mean every thought should be published. 
I constantly heard a lot that “you must have a blog to promote yourself correctly” or “degrees won’t matter in the future, you will need a portfolio” or things like that... I guess some people are just getting a shot at it.
Backwards compatibility. Objective-C (for I don’t know which reason) based its entire API in selectors and delegates.
December is a busy month for me: - I'm running the Advent of Swiftmas, where I post a new Swift article every day along with a discount on something Swift developers would enjoy: https://www.hackingwithswift.com/articles/137/advent-of-swiftmas-2018 - I'm putting preparing a second beta of my app for teaching Swift on iPhone. You can try it here: https://testflight.apple.com/join/ROxI9xSR but you can also check out the source (and contribute, if you like!) here: https://github.com/twostraws/Unwrap - I'm still looking for folks able to help translate part of Hacking with Swift into other languages. It's an open effort, so if you use GitHub you can join straight away: https://github.com/twostraws/HWSTranslation - I've just finished giving my final conference talk for the year, so soon I'll write up an article of all the talks I've delivered, what I've learned along the way, and what my plans are for next year. - There are still one more episode of my [Swift podcast](https://anchor.fm/swiftovercoffee) to record before Christmas! 
&gt; I don’t know which reason 1. Because Objective-C didn't have closure support until it was over 20 years old. 2. It had notifications for almost its entire lifespan as well. While notifications are useful they're not the right fit for the types of situations delegates and selectors were designed for.
I've heard that a lot too, and frankly I don't agree about the blog aspect of it. Being in a hiring position, rarely have I been impressed or even placated by a junior candidate's blog posts. More often, I see lackluster explanations or straight-up inaccuracies. I don't count this as a ding against them, because I know that they're still learning a lot at their level, and I also know that many mentors push them to write these posts, as you mentioned. 
Flutter is the platform. Dart is the language (and it is not great). 
Curiouser and curiouser.
As an aspiring programmer myself (still in university), what do you recommend for starters like me to help me present myself better when searching for jobs? I am doing some small side projects and posting them on GitHub, but I guess my code quality is still subpar... the blog thing might backfire, but there might be other ways to show you are competent (in addition to the degree, of course).
I suppose because native platforms are "implied", and it's the languages that stick out - Obj C, Swift, Java, Kotlin. Whereas for cross-platform, the platform architecture itself plays a huge role along side of the language used, so you'll hear more about React Native rather than JavaScript, Flutter instead of Dart, etc. 
Wow - while reading your comment I found myself smashing the upvote button like 300 times. These might be the most valueable words I read on the Internet since social networks became „cool“.
Side projects and open source code are a major plus. I can't stress enough that we know and understand that everyone is at a certain level with their experience, we definitely don't expect someone new to the field to know everything right off the bat. But seeing that you can complete projects and have the beginnings of good instincts in your code is everything I'd need. 
Hmm, I guess so. It seems like they really should combine the language name and the platform name if they are going to refer to them as a single entity like that. Otherwise outsiders really aren't going to know what they're talking about and will tend to not bother with their technology. And Dart? Does anyone seriously use it? Last I heard it was failing to gain any traction at all.
Hey, thanks again for the quick answer. I guess I'll need to spent some time thinking about how I'll handle the gamestate then, ideally I want to be able to do something like this: for condition in card.cardConditions { if !validate(condition: condition, with gameState.getParameters()) { return false } } return true 
I'm going to push back a bit on this... Yes, there are a lot of blog posts poorly covering basic concepts written by entry level authors but one of the best ways to learn, IMO, is to try to teach. Attempting to articulate your understanding of a concept (for example in a blog post or SO answer,) well enough for another person to understand/critique is a great way of vetting and cementing the ideas in your head. In this particular case, the author has (hopefully) learned a lot about Rogerian style argumentation which will hopefully help him improve his writing ability for future articles. But yea, it does mean there are a lot of articles out there that are tough to stomach. 
Write the blog post and then ask someone to genuinely and honestly critique it like here on the screenshot. Having your buddies prop you up for the effort is not making you improve, someone pointing out mistakes will.
&gt; found it to be *different*
Definitely avoid blogging, it's so easy to put your foot in your mouth and just look foolish. I've done hiring and I can't tell you the number of times we've dinged a candidate because of stuff they've blogged. Instead work on sample projects, open source projects, and released apps. Show a willingness to grow as a programmer and an ability to work as part of a team. It doesn't matter that a project you worked on 3 years ago is a bit amateurish, that's to be expected. As long as you can point to newer work that shows your growth that will be a big positive. We're not looking for experts out-of-the-gate, we're looking for team players and people who can be taught.
So one person betters themselves a little by talking about a concept they don't have "cemented" in their head yet and they mislead potentially dozens or hundreds who mistakenly take them as someone who knows the concept? Doesn't that seem a bit vain and self-serving at the expense of others? I agree that discussing an idea with others is a good thing, however so many people present their ideas as the right way to do it and the next best thing in programming. If you're asking people about an idea then make that clear. If you truly have knowledge you want to share then it really should be the result of years of work and lots of real experience.
Big problem: very few people are educated in how to do strong, objective, critical analysis. You can breeze through a lot of curriculums writing essays just like this and never be challenged. Other big problem: people who do write essays like this are rarely presented with a good faith critique like this. They instead tend to get lots of back pats and applause from people who agree or very hostile responses from people who disagree. Articles like this have a place, but it's safer to keep an informal tone and make it clear you're opinionated from the start. I'm going to read "Flutter zealot analyzes Swift" with the same grains of salt I will use for "Swift zealot analyzes Flutter". Developers really like monocultures, and I've seen plentiful evidence of it in the 15 years I've spent in the MS ecosystem. Sadly it means if you want both sides, you've really got to go download the "other stuff" and try it yourself. That's part of why there's a 15 year MS veteran here in your Swift subreddit. ;)
I don't see that there's a need to make this combative. Andrea asked John and I for opinions, I took the time to read this article, and provided my thoughts. Yes, I don't think the article is a particularly great effort at providing fair and balanced views comparing the two platforms, but I did try to make it clear that: - "I welcome folks trying to provide clarity when it comes to platforms" - "I'm glad [Andrea] gave it a shot" - And "I hope some of what I've said can help you write a more constructive article next time." So, I feel it's pretty much the opposite of what you said: I think it was a good idea for him to ask for feedback, because he can now read what I said, decide which parts he agrees with, and hopefully reflect on and improve his writing.
Absolutely this. Find a group of people who are at a decent skill level, have them review the post before you put it up, then post it once you have it hammered out properly. This is why professional publications tend to be of higher quality than self-published ones, chances are they have a review process and several levels of vetting before it's published. There are rare cases where someone can self-publish and have a quality publication but those are usually people who are experts to begin with.
He was asking for opinions from people who were likely to disagree, which I think is smart – and brave, too. Andrea won't agree with everything I said, and that's OK, but hopefully it will give him some things to think about when he writes his next post.
You’ll have to persist the start of end date of the timer, and rebuild a new timer from the date when the app is relaunched.
Using closures is really nice when you're dealing with only a handful of things. But if you have many callbacks (Andrea cites a 40-method example!) delegates are significantly more convenient.
What have you done!? 😐
I agree with the core premise that learning to teach is important, but just as you wouldn't ship your very first "hello world" line of code to the app store, neither should you ship your very first attempts at teaching. Just like with any other skill, it takes time and practice before you can create something useful. 
Yeah, what your gamestate holds will ultimately dictate the make of `Parameters` in our example. This nesting of types I used is also something you can observe with aliases, specialisations or very specific structures. A few prominent examples of this pattern may be `String.Index`, `NSStoryboard.SceneIdentifier`, `Double.Stride` and many more in Foundation and Cocoa. Also some tips from your example on style: - You never write "get" in a getter-like method, it is only just the result designation with a prefix, like `layoutManager.attributedString()` and for the most part, it's just a computed property if no parameters are required. - Try to prevent repetition if context already provides an explanation. Instead of `card.cardConditions`, it'll be `card.conditions`. - If a function argument is clear by type or the method already implies its parameters, you should omit the parameter label. Instead of `func validate(condition: Condition)` you can write `func validate(_ condition: Condition)`. There are various examples for this practice in the more recent parts of Cocoa. One I just found: // Signature convert(_ rect: NSRect, to view: NSView?) -&gt; NSRect // Calls Like let myConvertedRect = myView.convert(myRect, to: myParentView) Or another example from auto-layout: // Signature func constraint(equalTo anchor: NSLayoutAnchor&lt;AnchorType&gt;) -&gt; NSLayoutConstraint // Calls Like highlightView.topAnchor.constraint(equalTo: view.topAnchor) This is one of the strong suits of Swift, I think, parameter renaming is one of my favourite "little-details" features, good to keep in mind. Also, as a bit of a follow-up on the use of `guard`, it'd be perfect for your example, within the loop: for condition in card.conditions { guard validate(condition, with: gameState.parameters) else { return false } }
My premise apparently didn't come through. My premise is that teaching to learn is important, not learning to teach (although that's important to.) The act of teaching a concept is a good way to learn it IMHO.
I just took a look at flutter.. How does it claim to be native if it isnt native? Does it mean that it will replace the code with obj-c or swift when you hit compile? ——— As a side note their “apple like interface” just has actual rounded rectangles and not proper iOS superellipses. =[ That feels extremely condescending. How is that native? 
Or use advanced debugging to send in mock data with less of the setup.
No, I get it and I agree, I’m just saying that authors need to be aware of the consequences of publishing a blog post with inaccuracies or poorly researched stances, the bar needs to be higher than “this is my scratchpad while I’m trying to learn.” If the reader has this knowledge going in that you’re teaching to learn, then all is well. But the next random person to come across your blog is not going to know that. They’ll take your words at face value because you’re writing as if you’re an expert in the field. Then, a hiring senior engineer comes along and sees that you’re teaching incorrect information, it’s not a good look. If you’re starting your posts with a disclaimer along the lines of, “I’m trying to learn topic X, this is me trying to explain it,” I’m 100% onboard with that, because now we’re all on the same page. But more often than not, the stance is “fake it till you make it”, and authors are willing to pretend they know everything about everything, and deal with the criticism later. All I’m trying to say is, don’t try to be something you’re not. Be upfront about your skill level and goals whenever you write something, so no one has the wrong expectations and we’re all that much better for it.
I’m trying to set mWeight to the weight in the slider class set by the slider
I have some resources that might help: 1. I wrote a whole book on coding challenges in Swift, which will be useful if you want to brush up on algorithms or expect any sort of coding test in the interview. It's available half price right now because I'm doing an "Advent of Swiftmas" series of articles – [see the link here](https://www.hackingwithswift.com/articles/141/8-useful-swift-extensions). 2. I wrote up a series of interview questions along with suggested prompts for your answers. [Visit here](https://www.hackingwithswift.com/interview-questions) – every time you refresh the page you get a different question. 3. I wrote a "be the compiler" test that might help you identify weak spots: [see here](https://www.hackingwithswift.com/test). Good luck!
It was objectively a trolling writeup. Why give a feedback and publicity to such a low effort content? &gt;"I'm glad [Andrea] gave it a shot" His name is Angela.
Your feedback was above and beyond what most people would have cared to provide. But in the end you took his “article” and destroyed every single point. I think he rubbed a lot of people the wrong way when he shared it yesterday on reddit and people just love your reply.
His name is Andrea. I didn't give it any publicity – I replied directly to him on Twitter. Someone else posted the exchange here.
Link to that Reddit thread? 
Quite shocking - I know Andrea Bizzotto personally having spent 6 months working alongside him at BSkyB so I can definitely verify he not a novice and did not 'give iOS a try'. Saying that, I can't believe the nonsense I've just read from him. I got about a third of the responses in before I recognised him. Feel quite sorry for his rather public roasting but hey, no one forced him to make such an ill informed post. Just wanted to clear up the fact he is (or was) a seasoned iOS developer.
Nah, Twitter just has a different strengths. Writing (and sharing) a lengthy critique of someone’s work is not one of them. But there’s a reason Andrea used twitter to reach out for feedback – it’s much easier to get the attention of someone you respect on that platform than on reddit. I use twitter to follow experts and leaders in the industry, and I use reddit to engage with the broader community. Different tools for different problems.
That wasn’t a burn. It was a critique. 
Learning Unity for a mobile games programming class I'm teaching in February. Ooo, they're going to hate vectors. Horrible mathy stuff. Heh, heh, heh.
It was definitely presented as a critique, but the subtext was very strong. It's not a burn in the "oh sick burn bro", but in more of a pride and prejudice proper burn reading between the lines. 
It's also a bit easier to reason about memory management when you can have a weak delegate too, which is a little more forgiving than forgetting to use weak self or unowned self. 
I think the issue with that is, generally when you teach to learn, you get some pretty immediate feedback on how well you actually know the topic. Writing a blog post for that purpose doesn't provide you with that. 
I'm curious. What got you back into it to suddenly apply for the job? Gratz on the interview and good luck!
Waiting for Swift 5 😔
https://old.reddit.com/r/programming/comments/a4vfjo/flutter_will_change_everything_and_apple_wont_do/ https://old.reddit.com/r/iOSProgramming/comments/a4vi45/flutter_will_change_everything_and_apple_wont_do/
You can use `Array.suffix(_: Int)` which returns an `ArraySlice` and handles the case where the array is empty
Thank you so much 
Recruiters started emailing me on LinkedIn. Some of the offers are really exciting
Any chance of a fresh invite link? That one's already invalid.
When the critique destroys every single word you wrote you might benefit from a visit to the burn unit
Holly fuck
Okay, so as a *huge* fan of Flutter... ...*wow* that's a terrible article. Like, if that were my first experience with Flutter I probably would've written it off...
Trunk Swift works on Android and Windows. 
I really like Brian's content; he explains things very well and also the apps he shows you how to build look nice and perform how a real world app should.
Mojave worked perfectly, I have a Macbook Pro 15” mid 2009 ( Model Identifier macbookPro5,4. ) Everything runs smoothly except for xcode 10. It takes long to compile, sometimes I get errors even though my code it correct or nothing happens at all. So I’ve decided to try Dosdude HS. 
Fair enough. I suppose for my purposes storyboards have been more harmful than helpful. I say that mostly because when it comes to theming, storyboards make it very difficult to update things. I can see how it's possible to have easily maintainable UI if you have good separation with XIBs and SB references. 
Here’s my last article about iOS Swift development. It’s about making testable and less monolithic an App based on singletons. Just to be clear this is not an article about good Swift architecture but it’s trying to give a tool to improve legacy codebases
Flutter team person here. When we say Flutter apps are native we mean it in the sense that while Flutter executes Dart in interpreted mode on the VM at development time to allow for subsecond hot reloads, when you compile a release build, that Dart code is compiled to native arm64/armv7 machine code and linked into the resulting app. You could think of it as native in the same sense that Unity apps are native, for example. The engine itself if written almost entirely in C++. All the hooks into the underlying platform are written in Objective-C (for iOS), C++ and Java (on Android) and C++ (on Fuchsia). Hopefully that answers your question. For what it’s worth, I’m glad folks are enthusiastic enough to write about what they like and dislike about Flutter, and I’m equally glad when folks with a ton of platform expertise and experience like Paul chime in with detailed, candid critiques. The world could do with more open, honest debate. I’m the first to admit that Flutter won’t the best solution for every app out there, but I hope we’re building something that provides a great solution for a decent subset. For those who need the pure UIKit experience, UIKit is a fantastic SDK and both Swift and Obj-C are great languages. I’m a fan of more choices for developers both on the language side and the Framework side. 
Be that as it may, this kind of a series of posts should have been delivered in private to the guy. Even if he asked for it himself.
&gt;For most cases, I'd just use a computed property if no parameters are required can you elaborate on that? I'm not quite understanding that sentence
I use delegates when the relationship is long-lived. I use notifications when it's very hard code-wise to pass a delegate. I use target-selectors because I have to, and there's no other way.
Why is that?
You don’t have to put them on your resume haha I was just saying that it’s a really useful and fun resource to get ya started with Xcode and swift. Really helped me learn more
What’s the interview process like as an iOS developer? I’m leaning more towards iOS development because I really enjoy it. 
This is just a guess, but maybe your system works with Metal but is just really slow. The other thing might be that Xcode 10 could be buggy. Getting good speed out of a 10 year old Macbook is a real long shot. The fact that it could be usable at all is an eye opener. I've got a PC laptop that same age and was just about to throw it away. I doubled it's ram and got an SSD for it, so it's usable for simple things. I was under the impression that Dosdude was all about getting a true Mac video card to work with Metal. If you run HS, do you still need Dosdude? I'd check into that first. The only reason I know a little about it is that my system won't do Mojave with the card I have, so I'm going HS. Are you certain your machine won't do HS? Like I said, I know very, very little about Dosdude, just found it the other day.
You can store to disk, user dictionary, Core Data, or others. Something like this, a simple user setting entry should work. This might help: https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults
Because being schooled in public like that is nice for nobody, even if it’s well intended by the other person
Computed properties are a great way to expose different representations of a given structure. Imagine having a player with a name and a level. struct Player: Codable { let name: String let level: Double } Now, each time you want to print out a player's name, you might want to include the player's level as a "designation" for easy access. For this, you can use a computed property that produces its value each time it is called without storing it. This way, they are also excluded from being encoded, conveniently: struct Player: Codable { let name: String let level: Double var designation: String { return name + " (" + level + ")" } } With this `player.designation` is read-only and will always reflect the internal stored properties; See https://docs.swift.org/swift-book/LanguageGuide/Properties.html#ID259 for more information.
I've created StoryPro, is the most creative and fastest app for creating your minimal Stories. You can create awesome stories to engage your followers through a bunch of templates, and customize them with text or gifs. I use AVFoundation in order to add text, gifs and templates in videos. &amp;#x200B; [https://itunes.apple.com/us/app/storypro-create-stories/id1435518858](https://itunes.apple.com/us/app/storypro-create-stories/id1435518858) 
``` DispatchQueue.main.async { [weak self] in guard let self = self else { return } } ``` Your closure is maintaining a strong reference to the VC so it’s not deallocated until after your closure runs. Use weak self to prevent this. Read up about ARC and reference cycles. 
This applies if I create requests from ViewModels or singletons? :)
The article may be crap, but tech is pretty good. I would recommend you to check it, as it's good to know your enemies. 
Rushing to finish the watch update for my fitness app [[Sweat Deck](https://itunes.apple.com/us/app/sweat-deck/id964201026?ls=1&amp;mt=8)] before the App Store Connect holiday shutdown 😬 Will also use any free time during the holiday for overdue iOS 12 &amp; Swift 4.2 updates for some older, neglected projects.
if you want to be good at flutter you have to: 1.be conversationally fluent in- 1a-java 1b-kotlin 1c-swift(since obj c seems to have been abandoned) 1d-kotlin 2.know how android does things for when you can't find a flutter plugin 3.know how ios does things for same reason as android 4.know how the web works if you want to make a web app 5.know how it works on "insert platform here" to get it work on desktop HOLY FUCK it irritates the fuck out of me. i thought the dependencies for mastering node.js based technologies was excessive. 
Break your question down.... How do i make a table of things. How do i asynchronously load an image Now google.
I'm creating an alternative for ReSwift (https://github.com/ReSwift/ReSwift) that seeks to replace other architectures (e.g. VIPER) as the way to build a SOLID app. This framework will feature automatic state injection, routing/navigation, seamless handling of asynchronous work and good testability, with as little boilerplate as possible.
reading data using NFC building app that uses coreNFC everything was set up correctly and worked the previous day, when i tested the application today i get the following. 1. Launch App, the read tag. 2. The phone indicates that it is reading the tag, vibrates with sound. 3. I get a "stack error" after separating the phone and the tag. The error function is never called and the readerSession is never called. CoreNFC\] 00000002 838b2f80 -\[NFCNDEFReaderSession \_connectTag:error:\]:418 Error Domain=NFCError Code=100 "Stack Error" UserInfo={NSLocalizedDescription=Stack Error, NSUnderlyingError=0x2818a2970 {Error Domain=nfcd Code=15 "Stack Error" UserInfo={NSLocalizedDescription=Stack Error}}} &amp;#x200B; i have tried setting invalidateafterFirstRead to true, this gets rid of the error however the readerSession never fires meaning i cant read data from the tag 
I know how to send asynchronous request and caching the images in a cache array and presenting them from that cache when required. My question was more about how to handle sending requests. Let say for example, if there are 1000 images and user sees the first screen and scrolls down to the bottom, so rather than sending request for all 1000 images at once, how can i make sure that the images on screen should be loaded first?
There are delegate methods on tableView/collectionView/scrollView when scrolling ended
So you mean, i should have a flag and that flag's value toggles according to scrolling start and stop. When the scrolling stops then only the request should be sent?
Yes. Just wait till User ended scrolling, check visible cells or the indexes of the visible cells and Start your request for this subset
thanks, I will try this out. 
You’ll probably be able to use the delegate method willDisplayCell to kick off a service call. That method gets called for a cell right before it comes on screen, so you’ll only end up making calls for the cells that will be seen by the user. Make sure you have a really good caching strategy for those images - you don’t want to download the same image twice if the user keeps scrolling around. There’s good libraries out there for image downloading, check out AlamoFireImage. 
Just a heads up, this sub is dedicated to Swift Lang, not the entity the OP is about. 
Could I perhaps ask for your cultural context, and whether you think your point of view in this matter is common in your culture? I’m just curious because we seem to see this very differently and that’s quite interesting. 
I’ve been working on an app that aggregates posts from the top 30-40 blogs on iOS and Swift development. You can scroll through all the most recent posts or save articles to read later. The iOS app is almost done. Then onto the companion Mac app.
The process included iOS specific questions and data structures and algorithms questions. It was the same process as most major tech companies.
Thanks for asking, of course I can! First of all, let me say that I really love Paul's work, and 95% of the time I think he's correct when he posts on Twitter. Also when a lot of people think he's being overly political, I rarely disagree with him. That being said, I'm from the Netherlands, but even more importantly I work at a company which IT is only part of the company. It attracts people that are not always "die-hard" computer scientists, but also seek the human connection in their work. Of course there's also sometimes conflict, and I used to be a really straight shooter and just tell people bluntly what I thought was obvious. Also, this is what people generally expect from people from the Netherlands, so in that sense that's in line with the expectation. Coming to my context however, I learned that situations can become downright unmanageable when people pull this too often, and in a big company, it accumulates over the years. Eventually, people will not want to work with each other anymore, and I cannot blame them. Lecturing someone in public (excuse me if this is not how you see it) is also part of this, it's super uncomfortable for the person on the receiving end, in our culture at least. Alternatively, it is super okay here to say: "let's take this offline, and discuss it there". I'm trying to think of why this is, and one of the things that comes to mind that we generally have a rather flat hierarchy, in which nobody is easily considered superior or inferior to someone else, so maybe that's a thing... I am a bit surprised that Paul did it like this, because one of his usual fundaments is not to intimidate people who are new or inexperienced with something, I really love that about him. From my perspective, if I were the writer, I wouldn't feel like writing another article and sharing it after this amount of criticism, and I don't think that should be the case. This makes me wonder if there is another reason Paul chose to do this, but I don't know. I don't know if this makes it a bit clear, I hope it does. Let me know otherwise :) Can I in turn ask you for your context?
Another option: Have a `configure` method that accepts the URL as a parameter in your cell which you call after it's dequeued. * Inside the configure method, you start the download. Make sure you save the download task. * Inside the prepareForReuse method, you cancel the download. --- Yet another option: Use UITableViewDataSourcePrefetching which is explicitly designed to handle these sorts of issues.
How about having the user pass in their own storyboard? You can make the parameter optional and if the user doesn't pass one in, you use the default one.
I have and use a 2012 Mac mini for hobby projects at home. Mine doesn't have the SSD though and because of that it takes _several minutes_ to launch the iOS simulator. Compiling is also quite slow. At work I have a iMac with 2.7GHz i5 and an SSD. Everything is fast and responsive on it.
Try IGListKit https://github.com/Instagram/IGListKit
But how does it run? The simulator I mean?
Check out [ASTableNode](https://texturegroup.org/docs/containers-astablenode.html) from asyncdisplaykit (now called texture). It’s by Facebook and used by Pinterest. It handles asynchronous calls and off main-thread rendering for smoother scrolling.
https://github.com/SDWebImage/SDWebImage
Have you heard of Redux? This kind of cross-component communications can be done very easily with this architecture.
Angela Yu's \[course\]([https://www.udemy.com/ios-12-app-development-bootcamp/](https://www.udemy.com/ios-12-app-development-bootcamp/)) on Udemy is very solid.
It was not user friendly, I’ll give you that.
basically what /u/kumonmehtitis said. Read the json into an object, modify the object, overwrite the json file with the edited json object.
If you mean some *Delegate protocol then it's just a simple inheritance. Base class is implementing default (mostly empty) implementation of protocol methods and the subclass (or extension) is overriding these methods. The base class is then simply calling these methods. If you are meaning some delegate fields then it's pretty simple as well. Some class knows that if the property is set then it will implement the declared protocol. It simply calls methods of this protocol on the property (if it's not nil).
Are you asking how references work?
Once the simulator boots up, it runs fine. It's just the boot up that takes so long.
This one has an ssd so it should be fine. Thanks!
Or, adding the different toolkits together. (Native, Xamarin, Flutter, etc.)
Appreciate it, thank you! 
Thank you so much for the thorough response - I very much appreciate you taking the time! I'm from Singapore, and culturally here it seems typical to correct people in private, through intermediaries, or not at all if it involves people higher up in the hierarchy. As an individual I am quite direct about pointing out errors and this causes no small amount of friction. It's something I'm trying to improve at navigating, hence my interest in the subject. The contention seems to be whether criticism should be delivered in private. If one makes a mistake and it is pointed out, ideally it seems like it should make no difference whether it is pointed out in public or privately. I do recognise that "ideally" is the problem in my outlook though. I think that quite a lot of cultures thrive on mocking people who make mistakes (there is some of that in this thread, I think) and that may be the root of the issue. In that context I do absolutely understand your suggestion that it is best to critique in private - in public it seems to attract many people who are prepared to mock someone for daring to post an imperfect article on the Internet and that adds a lot of noise to the signal. So I think that the culture of shaming and mockery are the problem, rather than public critique in and of itself. If we remove the shaming then there remains no reason to preferentially critique in private - it seems better to be able to just say, "oh yeah, I didn't think of that. Thanks!" and then make it so. I can only speculate as to @twostraws' intent, but I feel I should say that it does not seem designed to intimidate. If it is a lengthy list of errors that is just a consequence of thoroughly analysing something with many perceived flaws. It does not seem to me to be hostile or mocking, and I hope the writer takes it as a critique of work and uses it to improve his work where he agrees it is valid! Once again I really appreciate your reply, and also the consequential prompt to examine my outlook more thoroughly. :)
Hey I followed your article pretty well but I'm a little confused as to why you detached your protocol defaults from the shared instances and instead to a struct's static vars that point to the same shared instances. Am I missing something?
&gt; I don't see that there's a need to make this combative I would argue that the premise you were asked to respond to set the combative tone right out of the gate. You were exceedingly gracious in how you responded and I admire your professionalism. But I think when someone sets that tone in their piece they are inviting folks to have a laugh if they faceplant rather than land their attempted punch. I've no interest in participating in a public shaming but it's hard for me to feel pity rather than sort of a *well, what did you expect to happen?*
i haven't been to this one because it's mostly talks. i don't need a lecture presentation, i could just watch youtube videos for that. it'd be nice to have a meetup workgroup. 
You’re not going to find many YouTube videos that are as technically challenging as what is presented at SLUG, unless they’re videos from other conferences...
I think I asked the question in a poor way, so I will retract it for now until I can better express what I am looking for. Thanks again for your time.
true. what i wanted to say that for me personally it would be more beneficial to have a workgroup where once in while i can ask a question to a problem pertaining to something i'm trying to solve, instead of listening to many "technically challenging" topics i may or may not ever implement or need. chances are by the time i run into a situation where such a talk may be useful, i'll end up researching other solutions anyway because things might have changed slightly. or i might have completely forgotten about the talk because it happened many months ago. &amp;#x200B; as i have been getting old, i'm starting to regret gathering so much information i never implement, instead of just making something. that's just me tho. 
You asked about reference and protocols. For protocols see this [link](https://blog.bobthedeveloper.io/the-meaning-of-delegate-in-swift-347eaa9674d?gi=b873bee408b3) . For reference you pass data between view controllers or create other solutions like a delegate. Google pass data between view controllers and you should find a starting point. 
Wrapping up Hacking with Swift and then working on my first project. I have an idea for the app I want to build, just no clue where to start just yet. I'm also reading The Swift Programming Language and App Development with Swif 
I was busy finalizing [Swift in Depth](https://www.manning.com/books/swift-in-depth?a_aid=swiftindepth&amp;a_bid=04b4fbb6) and I’m excited to announce that it is released today! Furthermore I am going to do the advent of code challenges for fun.
There’s also this one [https://www.meetup.com/swiftdev/](https://www.meetup.com/swiftdev/) but I haven’t been personally 
Kingfisher is the most popular image caching library. You can just cancel the download in prepareForReuse() and start it when you pass your view model in tableView(_:cellForRowAt:)
You can fetch 10 images(assuming you have pagination) per row, check in willDisplayCell when the last cell was displayed by the collection view and do your logic there
Very nice! I found a fun new podcast to enjoy during my commute 😊
Hello! Thanks for your detailed comments, /u/chaotic_goody and /u/sjoes. Let me try to address what you've said. &gt; First of all, let me say that I really love Paul's work, and 95% of the time I think he's correct when he posts on Twitter. Thanks :) &gt; this kind of a series of posts should have been delivered in private to the guy. Even if he asked for it himself. I hope you can understand things aren't always quite so clear cut. As you say, he specifically asked for feedback on a public forum. If someone posted the article here on Reddit and asked for feedback from readers, would you expect them all to send direct messages? What I aim to do is send people feedback in whatever medium they've chosen, so when they email me I email back, when they message me on Slack I message them back on Slack, and so on. &gt; I am a bit surprised that Paul did it like this, because one of his usual fundaments is not to intimidate people who are new or inexperienced with something, I really love that about him. I think it's possible you're taking this in a different light than was intended. That doesn't make it any better, of course – the result matters as much as intention does. However, the author responded very thoroughly to me (still on Twitter), saying "I take onboard all your points", "You make a good point", "You're right", "I should elaborate more on this", and "Thanks again for your insight." That is, they took my feedback exactly as it was intended: a constructive criticism of the article, not a takedown or a burn. They specifically said, "this was my first attempt at a comparison, and as you pointed out, it fell short. Lesson learned." And that for me is important: Andrea did his best writing the original article, but has now learned more about the community and I am confident he'll do a better job next time. &gt; From my perspective, if I were the writer, I wouldn't feel like writing another article and sharing it after this amount of criticism Again, here's what the author said in response to me: "Regarding these and your remaining points, there is scope for one or more articles. So I'll see what I can do." So, rather than stopping him from writing another article it sounds like work is already underway. And it's not just the author – [one of the Flutter team posted below](https://www.reddit.com/r/swift/comments/a594se/andreas_you_made_a_horrible_horrible_mistake_when/ebm77jb/): "I’m equally glad when people with a ton of platform expertise and experience like /u/twostraws chime in with detailed, candid critiques. The world could do with more open, honest debate." &gt; This makes me wonder if there is another reason Paul chose to do this, but I don't know. I don't have an ulterior motive here. Like I said in my tweets, "I welcome folks trying to provide clarity when it comes to platforms", "I'm glad [Andrea] gave it a shot", and "I hope some of what I've said can help you write a more constructive article next time." Anyway, all the above is just a precursor for what I really want to say, which is this: I find this whole post disappointing. The folks coming from Flutter are saying "thanks for taking the time to write up a thoughtful response" and working to do better, but the folks coming from Swift are saying "BURN!" and similar. We ought to be able to discuss technical details frankly and openly without calling someone's work a "horrible, horrible mistake." The author tweeted myself and John Sundell asking for feedback. I removed John from the reply because it didn't involve him, but if I had known for a moment the whole thing would end up as a flamefest on Reddit I wouldn't have replied at all. It's not enough that my intention was to be constructive; if the outcome was to foster negativity then it wasn't a good idea – that's a lesson *I've* learned here, and I hope to do better next time too.
Awesome! I'm glad you're enjoying it 👍
Check to make sure your URL isn't forwarding you off to another location, or has http-https forwarding built in. curl -v -XGET &lt;url&gt; should help you here. 
Inside the struct there are static let that are not pointing to shared instance but a initialized service instead. In that way you don’t have any shared instance left to be invoked around your project and you can remove static let shared from (ex) singletons objects. 
But doesn't static let variables inside a struct act the same way as a Singleton? I know we don't have direct access to them but why are you separating the service class and the protocol defaults with a struct?
I tried but the problem is I create network request from specific **networkclient singleton** **class** and that class keeps reference across multiple VC... so it does not get removed after one VC is cleared.. If I call weakSelf = self inside that class i get reference of networkClient itself and not the ViewController which called the method
Delegation is just a design pattern, no special language features are used except protocols and method calls.
Limited spots? Lol, keep all of them.
If we could just ban crap course galore udemy at this point... yes, even Angela...
Do NOT use NSScanner. If you want to parse a C file, link with clang and such, see what already exists. There are million libs that know how to properly parse C, don’t do it yourself (you will fail).
A delegate is nothing more than an instance of an object. As such, it's the same thing that happens when you set any other variable on any other class. 
Agreed. C lexers and parsers are tricky, for [a few reasons](https://en.wikipedia.org/wiki/The_lexer_hack).
Yeah, no smart developer would do this. The operating system informs the user that the GPS location is being requested and they have to sign off on it. Any app that doesn't need the GPS location but requests it is just asking to be deleted. If you do it in some shady way and Apple finds out then your app will get pulled. Just don't do stuff like this.
Then something else has a strong reference to the VC. 
It's a good learning experience! :-)
NSRegularExpression isn’t a bad way of going. It might take a bit longer than a good lexer, but it will definitely teach you a lot about regular expressions 
you could set up some form of completion block. in depends how many ads your trying to render?
It depends how precise you want to be and the range of supported input. If you know the input fairy well and that it won’t change, simpler stupid options can work well... if you want arbitrary input or a multitude of dependent files, clang is more appropriate.
I would guess that would depend on the audience. The average kid isn’t going to care that their dumb game is requesting GPS
five might be too big; you'd have to experiment but maybe you could experiment with a custom view that you can pan left/right ?
&gt; It seems like they really should combine the language name and the platform name if they are going to refer to them as a single entity like that What, like Cocoa and Objective-C/Swift? It always seemed to me that when one talks about Cocoa, ObjC (and more recently Swift) was implied; so they are trying to do the same for Flutter.
Swift is Swift. When you say that you're talking about the language and not the platform. Cocoa, Foundation, and other frameworks are the platform. You can use them from multiple languages, Swift or Objective-C are certainly not implied at all.
&gt; Swift is Swift. And Dart is Dart. &gt; When you say that you're talking about the language and not the platform. Correct. &gt; Cocoa, Foundation, and other frameworks are the platform Just like Flutter is the platform. I mean, you just agreed with me. So why do you think Flutter needs to reference Dart in its name? Nobody's referencing one by the other's name. In the article, the only times Swift is mentioned relate to what Andreas generically referred to as "iOS tooling"; that Swift is great but didn't solve what he saw as the most major problem with iOS tooling — layout. So it was Flutter vs iOS tooling (read: Cocoa, Autolayout, Xcode, Interface Builder, etc.) The only person thinking they were being compared was you. &gt; Swift or Objective-C are certainly not implied at all Until you read the documentation and realise either you're dealing with the Swift version of the APIs, or the C/ObjC/ObjC++ versions. All the other languages that bridge to Cocoa go through C, so in the end you still wind up needing to understand the ObjC API. On that topic, Flutter doesn't imply Dart. You do use Dart for the cross-platform stuff, but Flutter also supports ObjC/Swift for iOS-specific code and Java/Kotlin for Android-specific code.
&gt; Just like Flutter is the platform. So do you use Flutter, the platform, with any language other than Dart? It's basically Dart-only from what I see, when talking about Flutter you are talking about Dart. That's exactly my point, it would help to include that aspect in the name since it is linked so tightly. When you talk about Cocoa you could be using it completely without Swift. Thus it doesn't make sense to tightly link the two.
You haven’t even done the course so keep your judgments to yourself!
I wish the same for your spam. :)
Just use numPy. You can run python in swift
Make a framework. Numpy is there just translate it to swift.
gross
Unity or unreal engine. 
Great read, I'd like to at my $0.02 to the discussion... The success or failure of any language/platform isn't just based on the product, it has a lot to do with the developers and how stable the current system is. One of the biggest factors is how much code is already written. One of the best examples was the ObjC/Swift battle. I think it was Uber that did a big write up on this a while back when they decided to move from ObjC to Swift and how much work it was. The business of developing software products is not just about the language, there's a HUGE risk in picking something like Flutter. It's not just a risk for the business, it's a risk for devs. Who would be willing to jump into something that has zero track record. Even WinPhone, WebOS and Black Berry were from huge, rock solid companies and where are they now? We've seen these kinds of products come and go, none of them have really become a standard except Unity and Unity is different.
So one way is to go head on and hard code everything with objects and condition and loops and pictures and all these things. This is faster in a tiny scale ... graphical games are not tiny scale,** text based games this would be perfect.** most games need more "things", thats why you create / use an engine :) like Unreal, Unity, Thats how everyone else does it!
Since nobody mentioned it, what you're looking for is Metal. Graphics APIs are the heart of what you were asking about and while yes, you personally should use an engine such as those suggested, "big games" as you put it use advanced graphics APIs like Metal. Even those fancy shmancy engines are programmed using something, Metal, OpenGL, Vulkan, DirectX. It's worth noting that big games are made with big teams too. While PUBG may look like it was made by a dude in an apartment who bought a bunch of Unity assets, it's the product of dozens of people and hundreds or even thousands of work hours. Infinity blade even more so. This is why it is recommended you use an engine, it reduces the workload it takes to make a game.
Not to mention that the makers of fortnite just released 12Million dollars worth of assets from Paragon completely free, no strings attached to anyone building in Unity.
One of the best things to do is to get some tutorials. I'd find out what tools they use on other games. Infinity Blade uses Unreal. You should find some good sales on the tutorials. Remember, if you go native iOS Swift, you still need an Android solution. That's a pretty strong argument for Unity.
Got it! Can you name one of these libraries? 
A music composition app called [ngrid](http://ngrid.io)
I’m really happy that you replied to me the way you did /u/chaotic_goody and /u/twostraws. I will gladly admit I stand corrected in this case. To be honest, I’m still a bit surprised by how this article, the feedback, and the response to the feedback went down, it’s just not what I’m used to seeing. That’s my lesson then, that I have to look a bit harder for how people really respond to something rather than applying blanket rules too easily. Thanks again!
Swift is great, but if you intend on making large scale types of games check out unity / unreal / cry engine. The heavy lifting of creating a base engine is done for you. Each have their own pros and cons ranging from available tutorials to community assets to the approach of each engine. The great thing about the time we are in right now is you can access all 3 engines for free. Wasn’t so a few years ago where you had to have a large studio and budget just to get access. Something worth checking out is unreal engines blueprint system. You can prototype games very quickly, and with their nativization option of blueprints, it gets performance “close enough” to coding it in c++. Unity offers a ton of tutorials and community assets available from the start. Unreal dropped millions of dollars worth of assets from their paragon (moba) project that are now available for free to use in your project (map, models, animations, fx, etc), and also are adding new optimization and functionality to the engine due to their success with fortnight. The more fortnite wins, the more the engine improves cross platforms. Cry engine just looks gorgeous. New ww2 FPS coming out utilizing it showcases it well for FPS style game. Forgot the name. Don’t skip out on swift, but if you intend on designing a game like pubg you can start today! 👍 A great place to start btw is a battle royale Template just to start studying what they’ve done to get to that point. Unity and unreal have one on their marketplace respectively. Just a tip. If you intend on going solo, simplify your plans and focus on the important things like game play functionality. Keep it straightforward. Starting too ambitious will just demotivate you. If you have a small group of friends or a team, it’s still important to stay laser focused on what matters. Art, animation, etc. can always be improved on later. Make it fun from the start with default characters and you know you have something to contend with. In general Quick prototyping 1. Unreal engine blueprints 2. Unity bolt plugin Already available assets / templates 1. Unity 2. Unreal Looks out of the box (my opinion) 1. Cry engine 2. Unreal 3. Unity Tutorials available for learning from beginner to advanced 1. Unity 2. Unreal 3. Cry Ease of learning curve (subjective to experience and if you lean more coding or visual oriented) 1. Unity 2. Unreal 3. Cry Best advice if you are stuck between them is to give them a trial run. Take 2 weeks with each engine. Run through a full tutorial to make a simple game. See how it feels. At the end, evaluate all 3 and you’ll be able to make a decision then. Hope that helps. Good luck on your journey! If you ever get discouraged making a game, ask yourself why you are making it and refocus on fulfilling that intention. Everything else is secondary. Focus on what will make you want to play it and keep playing it. Design that first. 
Don't you have to constraint the width for systemlayoutsizefitting to work properly?
As mentioned, libclang should offer you what you want. Clang can be used to dump the AST, which is what will give you a nice way to count things.
Learn to write your own engine with Metal. Start small and build up from zero to really get what’s 3d engines are about. There is good amount of info on OpenGL, it’s very similar to Metal. Don’t listen to unreal/unity guys. They never finish, they have memory leaks and tons of limitations. Do not waste time.
Paragon :'(
3. You can have as many UINavigationControllers as you want and switch between them as required. 4. Yes
Pretty dope writeup!
Yes they act in the same way, i'm using that trick just for making access to instances fileprivate
Isn’t it possible to run C natively in Xcode? I’ve had no dealings with this stuff but I once saw a chap run C++ inside his iOS project just by changing the file extension to .cpp. 
It’s important to keep a sense of scale. AAA games have an almost unimaginable amount of work put into them; for example, roughly 1500 people were involved in producing Witcher 3.
For some example code to look at, the `sourcekitten` project is written in swift and (among other things) uses libclang to parse objc source files.
Godot
How can I constraint the width when I have different different display sizes for different devices?
You get the collectionview and you can use it's widthAnchor minus it's left and right contentInset.
Hey Paul! I've just bookmarked this. Your reply is so full of valuable information for my future articles, thank you! Are you visiting any other conferences near me next year or was this year too much?
Flutter is a little bit like Unity, as in Flutter draws every pixel, ships with it own 2D graphics engine, Skia. &amp;#x200B; Their current focus is iOS and Android, but at the Flutter event last week they said "Our vision for Flutter is to be a portable UI toolkit, that can go wherever you need to paint pixels" &amp;#x200B; They have experiments with Flutter apps running on Desktop OSes, Raspberry Pi using Broadcom APIs directly and running in the chrome web browser. If you want to catch up on where Flutter is at, there is this 11 minute "Flutter Live Keynote Recap" [https://youtu.be/D-o4BqJxmJE](https://youtu.be/D-o4BqJxmJE) &amp;#x200B; and 3 minute video "Stories From Developers Using Flutter" [https://youtu.be/9WgQzB0UZOs](https://youtu.be/9WgQzB0UZOs) &amp;#x200B; Interesting when the chrome guys, who started Flutter, were looking to move on from JavaScript, they looked at several languages before going with Dart . Maybe we would of had a Flutter written in Swift, if it was open source back.
HTML doesn’t render newline characters like that. Try `&lt;br \&gt;` or an array of Strings and render each into a `&lt;p&gt;` using Leaf. Good luck!
Great explanation!
Doing Swift tutorials starting with swift basics, then gonna head toward teaching iOS and MacOS Development (Games and Productive Apps), Machine Learning, and Server Side Swift using Vapor. &amp;#x200B; [https://www.youtube.com/channel/UCnIjGOyiKEY4SZaYHpXwchg](https://www.youtube.com/channel/UCnIjGOyiKEY4SZaYHpXwchg)
The advent of code challenges are really fun. I highly recommend it!
How about Eigen? It’s a C++ library but Swift can integrate with C++. It’s header only so you can easily just pull the whole thing into your project, or treat it as a proper dependency if you want. http://eigen.tuxfamily.org/index.php?title=Main_Page
Most likely this is a problem with your database configuration. Is it MySQL? If so, convert the database to utf8mb4. See [this](https://medium.com/@adamhooper/in-mysql-never-use-utf8-use-utf8mb4-11761243e434) and [this](https://mathiasbynens.be/notes/mysql-utf8mb4#utf8-to-utf8mb4).
That did the trick, thank you!
You can add it programmatically (this is just one of many ways to do so so) reusableView.widthAnchor.constraint(equalTo: collectionView.widthAnchor).isActive = true
&gt; Don’t listen to unreal/unity guys. They never finish, they have memory leaks and tons of limitations. Are you implying that OP, someone who asked this question here in /r/swift, is capable of writing a *better* engine than unreal/unity? It's fine to criticize engines, but in this context, you're suggesting something that will definitely be even more limited and have worse memory leaks. OP said what his goal is, and your comment will not help him accomplish it.
You could use closures for asynchronous data flow as well as Grand Central Dispatch. More info here: https://www.raywenderlich.com/5370-grand-central-dispatch-tutorial-for-swift-4-part-1-2
That’s exactly how UTF-8 works. It breaks the wider characters into 8 bit pieces so they can be reconstructed when needed for viewing. As u/chriswaco said, look into your database configuration. It’s likely something is wrong server-side. 
Thank you so much this explains a lot!
This is a very high quality post!
Paragon/Fortnite was made by Epic games who make Unreal Engine, not Unity. Just a fyi
I haven’t heard of anything but then again I haven’t been looking. Frankly due to the major changes in Swift any lib of this type would likely be totally new code designed and built late after the 3.3 or maybe even the 4.x cycles. Effectively Swift is a lot newer language than some want to believe so the library situation reflects that. It makes but hell if you could be more specific about your needs. It certainly helps with Google searches. 
I'm speaking at quite a few events next year: iOSConf Singapore, Mobos, and iOSCon to name just a few. This year was intense, but I'll definitely carry on speaking :)
Cool! I’ll see if any of those are near enough. ‘Till next time
The alternative to passing Thread a closure is use a delegate/protocol pattern. Make a ThreadDelegate protocol that has something like -didReceiveNewData and have your view controller conform to the protocol by implementing that function. When the you make a Thread, assign the view controller as its delegate and when the Thread gets data it calls its own property, delegate.didReceiveNewData. 
Thank you!!
As usual, /u/twostraws has a way with making it fun to learn 😃 this was both entertaining and insightful, it sure makes Core ML look easy. 
You shouldn’t use “orientation” - it’s been deprecated for a long time now on everything except UIDevice. Either use traitCollection attributes and respond to that changing or use auto layout with clever constraints. Or viewWillTransitionToSize and check width&gt;height... which is the simplest but dumbest approach. You *can* use the UIDevice notification but that’s suboptimal.
If there was actually a site that made it simple to find well-paying projects from reasonable, communicative clients then there'd be a whole lot more people doing freelance work. 99% of the "good" freelance work (i.e. the aforementioned projects &amp; clients) is the result of referrals, personal introductions, pitches, and existing relationships.
I’m working on an interpreter for my basic Swift compiler so I can run it on iOS. I have an idea for an app using which people can learn Swift and play around without the need for the app to run the code on a server, so it can be used fully offline. Apart from that, I’ve been working on resolving some issues on the official Swift compiler - working on my 5th PR at the moment!
It depends on what you’re trying to do. I have an alarm app that keeps the phone on all night, but blacks out the screen when the phone is face down, and lights up again when not face down. Trait collections are fantastic for building “reactive” interfaces, but they don’t tell you when the device is face up or down. Orientations could also be used to alter UI if the device is upside-down, for example. As far as I’m aware, NotificationCenter is the only way to listen for orientation changes. Add an observer to listen for changes, handle changes appropriately. A lot of Apple stuff works like that: you have to just _know_ how the thing works, and their documentation doesn’t help much. I’d suggest searching questions like this on StackOverflow, if you can. They usually bridge the knowledge gap. 
Your use case is the 1% I note above. 😛 For most, the ideal solution for UI is to have autolayout constraints with priorities. In my experience, StackOverflow tends to have outdated or daft answers, especially for best practice recommendations such as this. Apple’s rotation API has changed at least 3 times and the top answer will say to use deprecated APIs. WWDC videos are going to be the best source of information, though I don’t think the documentation or header files are all that bad either - they just need experience getting used to.
Hi tnarg94! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/a5x4vv/made_this_imessages_app_in_swift_lets_you_create/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Without a good background in (x86) assembly building an OS is next to impossible. There are also issues using Swift as the compiler does not support necessary features (one of the reasons it is not written in Swift yet)
Unfortunately, NumPy is a very extensive project with hundreds of contributors and fairly complex optimizations. Each of the projects I listed in my original post is more or less an attempt at creating NumPy in Swift. As I won't be able to work on this project full time, I doubt I would get any further than any of them did.
Using Python within Swift is certainly an option for many projects. However, there are several drawbacks (performance, compatibility, etc). This might even be the solution to a first version of what I'm working on, but a real Swift framework will likely be important for many people.
This is probably the most promising option I've seen so far. Still being fairly new to Swift, I'm sure I'll have to go through a bit of work connecting C++ frameworks from Swift, but this will probably give the best efficiency along with fully functioning tools. Until Swift has a complete library of its own that is.
that's why I mentioned "handful years"
for the other 1% you can head over to Fiverr and be exploited for your work at only 5$ an hour :P
You’re paying someone to teach you to write code like this?
Neither was Torvalds, when he started, and he somehow figured it out. How much are you offering to pay?
&gt; Your use case is the 1% I noted above Sure, but that’s what OP was asking about. &gt; WWDC videos are going to be the best source of information Agreed, but they often skim over important details that make it difficult to learn if you don’t already know what you’re doing. Same with API docs
I can’t mentor you on that (if anything because I don’t have the necessary skills to). However I recommend you checkout this project, which is specifically designed to teach how to write a kernel: http://kaneton.opaak.org/
Look up game engines. The do the heavy lifting. But thats just the basic part. To do something like pubg, you need artists for all the characters and models you see on screen. You need sound designers for the sound of the weapons and some music. But still, you aren't even started. pubg is a networked game, so need a server that tracks the fights, the player levels, your loot etc. People who can do this reliably are network specialists and backend developers. Thats a special kind of dev, that mostly don't do "games", they do engineering work. And then you need all the stuff around the game, like lobby, download the clients, updating the client and stuff. On top on that you need designers who know how to make this a complete package, not just disconnected modules. There is a reason, that even big game dev crews usually give parts of this work to external companies of 100+ people. I would like to support your energy and motivation, but just the engine part is steep in learning, requires advanced math skills and graphics card technology understanding on some quite senior levels. Ready to use Unity Engine is not written in Swift, its in C# with parts in C++. Unreal Engine is in C++, as many others. The question is: do you want to write an engine in Swift for some month? to come, or do you want to make a game? You could get very far with ready build 3d plugins for Unity and there are even offerings for ready to use servers. But still, you would have to animate all the characters, weapons, make the sounds, make the gameplay. How about starting with something simple first, to see if this kind of work is even for you.
I know I'm not the OP but thought I'd throw my two cents in. They're a ton of ways to learn Swift or any language really. I'm currently using a course I found on Udemy. I'm taking this approach because the course is only 10 days and teaches you how to build an app, and while it's basic, it's still an app. This is an introduction to Swift for me and so far it's really helping me to feel like I can do something with my code. And for only 10 bucks, it's a great starter. Next I'll either get Hacking With Swift or sign up for a course in Udacity. 
I posted this on mobile. Is there something wrong with the code? I'm at a bit of a loss as to how to take your comment. I'm asking for feedback. I've learned quite a bit so far in the class. The goal of this exercise was to play with device orientation programmatically.
1 Why use an array of strings for orientation names and not say an enum (finite number of values) 2 Subscripting that array with the raw enum values coming from an Orientation enum, so basically reproducing the enum in a super unsafe way 3 if you want display values for an enum why not just extend the enum 4 why are you even using UIOrientation, that API has been deprecated for years in favor of trait collections I suspect your instructor is not a cocoa/swift specialist to any degree and judging from the code you’ve provided, they’re not very experienced as a developer either since that’s kind of bad code regardless of misuse of language features 
Polishing a news app with Firestore DB and Firebase push notification integration.
Google is now some? years in with Fuchsia, that's the possible next gen "Android" kernel. You can see how hard it is even with their army of senior developers to get that off the ground. There are some successful forks that had the luxury using mandecades of ready work, like Dragonfly BSD. Those are mostly done by people with companies/money who have unlimited free time or some sort of axe to grind (Fuchsia is basically Googles way to say goodbye to Java, because they don't want to possibly pay royalities to Oracle) I absolutely welcome you for the path you want to go, but I would be amiss if at least put the idea in your head, that you could "experience" some of your expected hurdles on something thats already there. If i had the time, I would go quite bullish with my Swift projects on Fuchsia, since it supports all languages first tier that are based off LLVM. Android will never do that, so thats the reason I want to go there. Much luck. 
Thanks for this reply. You mentioned that "orientation" is deprecated, but nothing in the Apple API docs mention that. Do you have a resource that says that one shouldn't be using this API? These are the two that I found: [https://developer.apple.com/documentation/uikit/uidevice/1620053-orientation](https://developer.apple.com/documentation/uikit/uidevice/1620053-orientation) and [https://developer.apple.com/documentation/uikit/uideviceorientation](https://developer.apple.com/documentation/uikit/uideviceorientation) &amp;#x200B; Also, when you say use traitCollection attributes do you mean from the class UITraitCollection? [https://developer.apple.com/documentation/uikit/uitraitcollection](https://developer.apple.com/documentation/uikit/uitraitcollection) &amp;#x200B; We've touched on constraints and alignment and stack views. I'm not sure if that's what you mean by auto layout. I'm still kinda learning about how to deal with constraints, alignment, stack views, and layout of objects. Anyways I appreciate your response. It really seems like dealing with different orientations is a bit of a pain in the ass. Even when they go over it, it kinda makes my head spin how you've gotta deal with it on the story board through container views and constraints, etc.
Normally I'm decent at googling (which yes, leads me to StackOveflow most of the time). But for this I was getting direct hits on the specific APIs my instructor mentioned to look at (UIDevice and UIDeviceOrientation) so I wasn't getting too many hits on the NotificationCenter stuff. That is really interesting that it's the only place to add an observer to listen for changes. Thanks for the tips.
Or you know, you could use DI. The protocol extension pattern isn't very useful when your service locator is suddenly hundreds of services, and it doesn't really make it easier to test or navigate the dependency chain. IoC (typically implemented as ServiceLocator + DI in Swift and other languages without reflection) is imo. a better approach, and scales much better. If you already have a massive singleton iOS app (think 300 singletons, not 3), then you need to think of this from a entirely different angle. And you, probably, need to consider Objective-C compatibility as well, as any big iOS app with legacy code is more than likely to have a large amount of Objective-C classes (and singletons) And sorry for ranting, but I'm really not fond of the community not wanting to use the otherwise de-facto design patterns that's otherwise applied in all major software engineering. Your article just gives people another excuse for not learning how to do proper Dependency Injection.
Or you can setup something like http://wiremock.org/ -- or even better, you can architecture your app so you can write 98% of the code without needing the network layer! If you can't mock your network layer, you're probably not testing a important part of your code (serializing/deserializing network requests), which of course, is _wrong_.
[https://discord.gg/HChJmwv](https://discord.gg/HChJmwv) That one in my post shouldn't be invalid, do you have a verified email? 
Stop making it as private...
There is one way. Respond to the notifications or events. If you must track and store the current orientation, then create an enum and a variable to track and store the orientation once it has changed. 
It really depends on what you’re trying to accomplish. I maybe jumped to conclusions about what you’re doing because I’ve fielded so many questions about crappy UI code. As both the other poster and I noted, UIDevice orientation has its uses, but it is in no way related to the interface orientation of a UIViewController. The concept of “interface orientation” was deprecated in iOS 9. https://developer.apple.com/documentation/uikit/uiviewcontroller/1621373-interfaceorientation Usually, when somebody asks this question, and is using UIDevice, they are getting those concepts confused. The device may be in landscape, but the user interface may be locked into portrait. So if you are making UI changes based on device orientation, you are likely to be causing UI bugs. So, if you want to respond to device orientation changes, you listen to the UIDevice notification through NotificationCenter. If you want to simply change based on size, viewWillTransitionToSize or constraints with different priorities is best. If you want to tailor your UI to the device type’s relationship to the pixel size, the trait collection and size class are the way to go.
Keep up the good work, BAW
So a rough sketch of my storyboard. The basic layout is a navigation controller. When I go to settings from main, I set the values. However If I go back to main and then go back to settings, the values reset. How can I address this? Both segues between main and settings are "Push." 
When the user changes a setting are you storing that change? When you initialize your settings view controller you can then retrieve the stored values and set them as the defaults for your settings fields.
I guess I should look into creating a file to store default values? That leads me to another question. So on the settings navigation bar, how would I access the default back button? Basically taking about the settings button in the top left of this screenshot https://i.stack.imgur.com/xT1MZ.png
That’s happening because every time you go from main to settings, you’re instantiating a new view controller. It won’t remember any previous settings - it’s an entirely new instance. Look into UserDefaults. It’s commonly used for storing small quantities of data like user settings. Instead of “setting the values” from main, your settings view controller can look to see if a particular setting is stored in UserDefaults. If it is, you can initialize it with that value. If it isn’t, you have a default value you fall back on. Once the user has toggled some settings, you save that new value into UserDefaults. This way, the next time you go to settings, it will read the most recently updated value. 
Checkout a library called EasyPeasy
Commenting because I too struggle with this. Would love any good resources. 
Have a look at this article by Matteo Manferdini: https://matteomanferdini.com/ios-auto-layout/
Is there anything in particular that you struggle with understanding? I learnt Autolayout from Raywenderlich.com but that was long time ago, don't know if its still the best resource.
I know this isn’t a tutorial, but maybe reframing it helps. At first, autolayout seems intimidating and magical, but it’s just math equations at the very basic level. Then you add in priorities - they’re kind of like triggering thresholds. Start with the equals relation only. Ask yourself “which view do I base *this* view’s position off of?” Then, “which view do I base this view’s size off of?” Old frame setting (without autoresizing) manifests as 2 position constraints related to the super view, and 2 size constraints related to nothing (only constants). Once you have the hang of that, &gt;= and &lt;= allow “and” logic, allowing multiple views to define a single view’s position and size. Priority kind of triggers “or” logic- the system tries to satisfy all equations but will prefer the higher priorities. For all constraints, the system tries to solve for the appropriate values; the variables solved for are the position and size of the views. The rest is mastering the APIs. Anchors and visual layout help make constraints easier. Call layoutIfNeeded in animation blocks. Etc.
Ok. I will look into user defaults. Am I correct in assuming that I’ll be able to read userdefaults from my main view controller as well? 
Auto layout is easy once you grasp the basic concept - for each view, the system needs to be able to determine 2 things about a UI element - its size (width and height) and position (x and y). So just think about that when you’re creating constraints for a piece of UI. Typically, that’s just eating a leading an trailing (x and y) and then width and height (size).
yep
You need to use a navigation view controller as the parent of the first view controller. 
Switched from System Administrator/System Engineer (10 years of experience) to iOS development at almost 30. No degree. No regrets. Wish u all the best :)
I to had struggle to grasp auto-layout with storyboards. It all fell in place when i completely abandoned storyboards all together and did the constraint in code instead. Such a relief to not work with the laggy buggy storyboard at all. After a while i installed SnapKit that enables you to set up constraint way easier. A basic example with SnapKit would look like this **let** box **=** **UIView**() superview**.addSubview**(box) box**.**snp**.**makeConstraints { (make) **-&gt;** **Void** **in** make**.**edges**.equalTo**(superview)**.inset**(**UIEdgeInsetsMake**(20, 20, 20, 20)) }
Long time ago I made one very simple but with most basic-stuff how-to youtube video. [iOS Autolayout - Simple TV Remote](https://www.youtube.com/watch?v=hQkW-uGQl88) &amp;#x200B;
Unless you want an element to be self sizing like labels typically need to be. Then instead of adding width and height constraints you add a top and/or bottom in addition to the leading and trailing 
You mean screen size? And by home page are you referring to splash? Either way, make sure you use auto layout.
See how others do this: https://github.com/CocoaPods/Specs/blob/master/Specs/a/d/d/GoogleMaps/2.7.0/GoogleMaps.podspec.json If this is binary then podspec should point to framework, not source files. Also keep in mind that Swift binaries are not compatible between Swift versions (yet) so you will have to publish new library version for each swift version.
Heya , I have struggled with Auto Layout too when I first started learning iOS Dev, I have wrote a series of article for solving common Auto Layout problem here : https://fluffy.es/making-sense-of-auto-layout/ , hope this helps!
Never pre optimize. NumPy is truly written in C it’s quite a bit faster than you think haha
SnapKit is great! Scales very well in a large app too, with 100% programmatic layout.
Updating my first Swift app;) Quantum Checkers - checkers with quantum theory based rules)
Yes, whole algorithm is mine so no problems with reconstructions. 
Is it possible to track objects from a video which is recorded. If it is, are there any places where I can learn to use that code?
oh really thank you! But how can I archieve that I support all swift version? :) Can you help ?
Wait for Swift 5 or rewrite in ObjC.
no that can't be a solution.... look at examples: [https://github.com/onfido/onfido-ios-sdk](https://github.com/onfido/onfido-ios-sdk) it is swift compatible and theirs spec: [https://github.com/CocoaPods/Specs/blob/master/Specs/c/9/3/Onfido/10.1.0/Onfido.podspec.json](https://github.com/CocoaPods/Specs/blob/master/Specs/c/9/3/Onfido/10.1.0/Onfido.podspec.json)
Thanks for explaining this. I understand what you mean and can see why my question may have led you to believe I was going down a bad path. In reality I think the goal is mostly just learning to work with the different Apple APIs (in this case determining device orientation) and finding ways to accomplish goals in different manners while understanding how those different solutions actually work. You made some really good points about designing an interface and expectations that I'll keep in mind as I continue learning the language and how to design apps. I looked at some of your recommendations earlier and decided to make use of `viewWillTransitionToSize`. My code: import UIKit class ViewController: UIViewController { @IBOutlet weak var orientationLabel: UILabel! override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. updateTextLabel() } func updateTextLabel() { orientationLabel.textAlignment = .center switch UIDevice.current.orientation { case .faceDown: orientationLabel.text = "Face Down" case .faceUp: orientationLabel.text = "Face Up" case .landscapeLeft: orientationLabel.text = "Landscape Left" case .landscapeRight: orientationLabel.text = "Landscape Right" case .portrait: orientationLabel.text = "Portrait" case .portraitUpsideDown: orientationLabel.text = "Portrait Upside Down" case .unknown: orientationLabel.text = "Unknown" } } override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) { super.viewWillTransition(to: size, with: coordinator) updateTextLabel() } } I was able to get the \`orientationLabel\` to report Landscape Left, Landscape Right and Portrait. But it doesn't report any of the other orientations which I find strange. Is that because \`viewWillTransition\` doesn't detect those sort of actions and therefore the method never gets called when it's Upside Down, Face Up, and Face Down? &amp;#x200B; The other possibility that occurred to me is that the height/width would be the same, but then if that were the case, then I imagine those size values would be the same for Landscape Right and Landscape Left and it clearly triggers on those rotations. &amp;#x200B; By the way, I found this other article on NotificationCenter that kind of helped me understand better what it actually does. I understand my instructor's code a bit better now. [https://learnappmaking.com/notification-center-how-to-swift/](https://learnappmaking.com/notification-center-how-to-swift/) The syntax and use of selectors are still kinda foreign, but I get that there's a target/action pattern happening there. &amp;#x200B; &amp;#x200B;
Hi bbelky! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/a64nzn/my_first_swift_app_checkers_with_quantum_theory/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
[https://developer.apple.com/documentation/vision/vnsequencerequesthandler](https://developer.apple.com/documentation/vision/vnsequencerequesthandler)
Thank you!
My ah-ha moment with autolayout was caused by a single sentence. &gt; Each view must be able to determine its width, height, x and y position from its constraints.
No, source code Swift frameworks are competely fine, 90% of pods use them.
The only nice way to do it is to use RxSwift. Otherwise, it is also possible with GCD and/or operation queues.
Yes, screen size. Where does one set that?
So that means if I distribute source code in framework instead of compiling it then it should support all swift versions despite of mine language? 4.2. also there are three swift versions : swift 4.2 swift 4 and swift 3.2. Am I right?
I highly recommend this book on auto layout https://useyourloaf.com/autolayout/ great resources will definitely worth the investment. You’ll also find a lot of small tutorials and tips on the website for free that can help too
The size and orientation are unlinked, so flipping the device 180 degrees, or placing it face down, may not cause the method to be called. It’ll only be called for view size changes. This will react specifically to device orientation changes: var observation: AnyObject? self.observation = NotificationCenter.default.addObserver(forName: UIDevice.O orientationDidChange, object: nil, queue: nil, using: { [weak self] _ in self?.updateLabel() }) 
Isnt that possible though auto layout? Or did you mean by code
&gt;...but if I had known for a moment the whole thing would end up as a flamefest on Reddit I wouldn't have replied at all. &amp;#x200B; I hope that there is a way forward which you'll be comfortable with continuing to help in the open, though I absolutely understand your position! I think that as a community we can learn to become less tribal about this kind of thing.
More of less: https://docs.swift.org/swift-book/GuidedTour/Compatibility.html
Snapkit is the tits
I agree NumPy is quite fast. It's the exchange between Swift and Python that I would have concerns about speed. More importantly though, compatibility and having to include an entire Python distribution with the project is difficult. However, I do think this is a solution for many projects.
You either have a splash screen image for each size or u can build a dynamic one with ib. 
Excellent response in my opinion. One day it just kind of clicked for me. I like to think, what's the minimum amount of constraints I need to make this work. And for whatever reason, that mindset helped make constraints more simple. 
&gt;Isnt that possible though auto layout? Or did you mean by code Where is auto layout? I thought it would be more accurate by code but if auto layout is realizable, that will work too
I am thinking heavily about doing a a-ha tutorial about auto layouts. What's important that you understand that there are two types of auto layouts: the ones you set and the ones the system gives you. You need to understand how `contentSize`, `compressionResistance` and `hugging` are related to each other. Also you need to understand why the main view of your view controller has it's size set but not the inner view of a scroll view or a table view cell. The same layout can be problematic inside a scrollview while it worked flawlessly in your root view. There are no surprises if you understand just a few things more, because most people understand the basic idea of what a layout constraint is.
That's one of the resources I tried. It just isn't clicking for me. Great resources here that I'm going to try out!
Last time I really had to do this I ended up using the gyroscope. [https://developer.apple.com/documentation/coremotion/getting\_raw\_gyroscope\_events](https://developer.apple.com/documentation/coremotion/getting_raw_gyroscope_events)
Delegates are an excellent example of the Strategy pattern.
I suggest you pick a platform like a raspberry and try to see how far you cam get, I know for rapsberry there were some os building tutorials on the internet, I doubt someone is willing to mentor you for a few years (for free) but you can always ask seperate questions on the internet. Found it: [https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/](https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/)
Hey, Xerxes249, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I suggest you pick a platform like a raspberry and try to see how far you cam get, I know for rapsberry there were some os building tutorials on the internet, I doubt someone is willing to mentor you for a few years (for free) but you can always ask seperate questions on the internet. Found it: [https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/](https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/)
hEy, XeRxEs249, jUsT A QuIcK HeAdS-Up: **SePeRaTe** iS AcTuAlLy sPeLlEd **sEpArAtE**. yOu cAn rEmEmBeR It bY **-pAr- In tHe mIdDlE**. hAvE A NiCe dAy! ^^^^tHe ^^^^pArEnT ^^^^CoMmEnTeR ^^^^CaN ^^^^RePlY ^^^^WiTh ^^^^'DeLeTe' ^^^^To ^^^^dElEtE ^^^^ThIs ^^^^cOmMeNt.
Don't even think about it.
The optimizer should illuminate most of, if not all of the overhead 👨🏼‍🔧👨🏼‍🚒 -o3 is a hell of a drug
It’s defined on run time. If you want to check on storyboard, there’s a device switch on the bottom of the storyboard, you can also get to see the live preview without having to run the code if the views are not reusable collections and have an intrinsic size
I'm having some issues dealing with a collectionView in a project of mine. The collectionview is pretty standard, all it has to do is load information from a JSON API that is parsed and load an image from the returned JSON API, fair enough. My issue is that the parsing, datatasks, setting up the collectionview, splitting off delegates/datasource is all fine, and the images load, but the first visible cells will not have the image load until I move away then scroll back. It's especially odd because it seems to me at least, that although they are using async datatask calls, this is immediately called by an override init in my datasource delegate and I can see it converting and spitting out the url for me to load. I don't have this issue when I implement the datatask in cellforrowat, but that means everytime I scroll the collectionview the data will keep reloading. I want to be able to load the data one time, then be able to scroll the collectionview. It all works except for the fact that the first visible cells are not loading until I scroll away then scroll back. My hunch is when the collecitonview loads the datatasks haven't yet retrieved what I need but I'm not quite sure how to approach making sure all the data is loaded first THEN displaying it on the collectionview.
Released a Network Abstraction layer for Swift called Prado. [https://github.com/robbroadwell/Prado](https://github.com/robbroadwell/Prado) * Simplifies network requests over URLSession and even Alamofire. * Supports multiple environments. * Caches responses for repeated calls. (Optional) Hopefully it can save you some time.
Can you give an example? It looks like what you're seeing *is* general guidelines. You're asking for specific techniques, but that's going to be difficult without seeing specific problems.
i’d check that you are updating all UI values on the main thread 
Ok here is my problem.The singleton I spoke of is named Repository and it has multiple objects in it. For instance 4 VC should inject this singleton and after receiving responses from API they call **Repository.shared.updateData(values) method**. After getting all necessary responses (*determined by Repository)* navigationController pushes last VC. Last VC **observes responses received from various network requests** and handled inside of Repository+MVVM, If particular error was received, navigationController should remove all 5 VC and clear stored **values inside** of Repository.
Well i am not an expert coder, just a beginner, but the tutorial i followed explained the auto layout and coding things. And prefered auto layout in combination with some correctly placed objects (with x,y). But you said where is auto layout? I assume you’re coding in xcode? 
Hey, MercedesC63AMG, just a quick heads-up: **prefered** is actually spelled **preferred**. You can remember it by **two rs**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
hEy, MeRcEdEsC63aMg, JuSt a qUiCk hEaDs-uP: **pReFeReD** Is aCtUaLlY SpElLeD **PrEfErReD**. yOu cAn rEmEmBeR It bY **TwO Rs**. HaVe a nIcE DaY! ^^^^ThE ^^^^PaReNt ^^^^cOmMeNtEr ^^^^cAn ^^^^rEpLy ^^^^wItH ^^^^'dElEtE' ^^^^tO ^^^^DeLeTe ^^^^tHiS ^^^^CoMmEnT.
Don't even think about it.
dElEtE
How big is the collection view? You likely DO want to implement this is cellforitemat. You should be using some library that caches the image response so that if you reload it, you aren’t actually redownloading the images - you just pull em from the cache. Unless I’m reading this incorrectly
I might be old fashioned, but what do we need this for? (not trying to sound mean, just pure curiosity). In general I tend to write easy stuff myself so I don't have to depend on other people to maintain their code.
I am, the text appears fine but the first cells do not.
Here's a thought - Build a protocol that conforms to your Singleton data type, and start using that in place of the Singleton itself everywhere the Singleton is used. For example - You have a class called UserDataManager and inside of it, you use a StorageClass singleton to retrieve data. Instead, create the StorageContainerProtocol, make sure it matches the required functions of your singleton class, and then conform the Storageclass to the protocol, and pass that into the initializer for your UserDataManager. Just like that, you've removed the singleton, and also given your UserDataManager a dependency that you can test with unit tests. 
Its about 40 cells large. Its two labels that contain text stored in objects already in a class. The only loading that needs to be done is through a JSON API url. I looked into Nuke and had success but I have my implementation working natively through URLSession so well and it really is not that bad except for missing the first initial 3-4 cells or so. Once the images download they are there and I have no need to redownload them since URLSession can cache the data (granted I’m testing URLSession with reloadIgnoreLocalCacheData for now just to see the speed and even without it it loads fairly quickly). Everything works well for now except these troublesome first cells. 
I'm whatever the level before beginner is, so please excuse my lack of knowledge. &amp;#x200B; I'm trying to figure out if I'm getting screwed by my developer, or if I just don't know what I'm doing (or both). &amp;#x200B; My developer sent me the final code at the end of a project. To build, the app requires "import Facebooklogin." Am receiving the error, "No such module "Facebook Login," and I don't see it listed in the Framework menu. &amp;#x200B; Should this framework appear in the code files he sent me, or do I need to install it on my machine? &amp;#x200B; Thanks very much for your insight.
Link?
You need to call `refreshController?.sendActions(for: .valueChanged)` after `beginRefreshing()`.
YAYYYYY
Yes, link please 
Define a protocol like this: ```swift protocol OptionalType { associatedtype T var value: T? { get } } extension Optional: OptionalType { public var value: T? { switch self { case .some(let value): return value case .nothing: return nil } } } ``` Then in your iterator: ``` extension LoopIterator where Base.Element: OptionalType { public func compactNext() -&gt; Base.Element.Value { // Do the unwrapping here. } } ``` So when you use in code: ``` let iter = LoopIterator&lt;[Int?]&gt;(...) let nextValue1 = iter.next() // This will be of type Int?. let nextValue2 = iter.compactNext() // This will be of type Int. ``` Check out [SwiftFP](https://github.com/protoman92/SwiftFP/blob/master/SwiftFP/Optional.swift#L17).
I personally use a network framework (Moya) simply because it just makes everything easier. Makes it easier to not only perform the calls but to also unit test them. The unit testing is the *huge* take away from it because honestly...writing out a request for Moya is only just a tad bit faster than URLSession. Its the unit testing that makes Moya worth it since you get your stub data in 1 line
Suspended on Medium, link doesn't work
&gt; medium.com/@swift... I can't fathom why. I literally just write Swift articles. Lemme just post the contents in the comments.
Many a times, when we write generic code in Swift, we encounter this situation: ```swift class GenericClass&lt;T&gt; { let value: T init(_ value: T) { self.value = value } } let gc = GenericClass&lt;Int?&gt;(1) let value = gc.value // This value is of type Int?. How to get Int then? ``` How then do we then extract the root type of value, which, in this case, is Int.self? Since Optional is not a protocol, we cannot do something like: ```swift extension GenericClass where T: Optional {} ``` The trick here is to define an extra protocol and then force Optional to conform to it: ```swift protocol OptionalType { associatedtype Value var value: Value? { get } } extension Optional: OptionalType { public var value: Value? { switch self { case .some(let value): return value case .none: return nil } } } ``` And then we can use it like so: ```swift extension GenericClass where T: OptionalType { func valueOrThrow() throws -&gt; T.Value { if let unwrapped = self.value.value { return unwrapped } throw ErrorImpl("No value found") } } func testGenericClass() { let gc1 = GenericClass&lt;Int&gt;(1) // gc1.valueOrThrow() - does not compile. let gc2 = GenericClass&lt;Int?&gt;(1) do { let value = try gc2.valueOrThrow() // This is of type Int } catch let e { ... } } ``` Or more commonly, in an Array extension: ``` extension Array where Element: OptionalType { // Short hand for the original compactMap: we do not need to // pass in a selector function - instead just unwrap each // element in the Array to its base type. func compactMap() -&gt; [Element.Value] { return self.compactMap({$0.value}) } } let a: [Int] = [0, 1, 2] // a.compactMap() - compile error. let b: [Int?] = [0, nil, 1, 2, nil] let c: [Int] = b.compactMap() // Returns [1, 2, 3] ``` Hopefully this trick proves useful for anyone trying to master Swift generics. Check out a more complete implementation [here](https://github.com/protoman92/SwiftFP/blob/master/SwiftFP/Optional.swift#L17).
Medium mistakenly flagged my account as spam. They restored it just now.
You need to reformat your code blocks. First line of code on the line after the three backticks, and don't forgot the closing line of backticks after the code block.
&gt;let iter = LoopIterator&lt;\[Int?\]&gt;(...) let nextValue1 = iter.next() // This will be of type Int?. let nextValue2 = iter.compactNext() // This will be of type Int. Hey, thanks, I think I learned a few things from your code. But in the end, I can't get it to compile. I've played with it for a while, and I went to grab your Optional.swift gist, but nothing helped. I did get one attempt to compile, but it did the same thing my original code did. If you get bored any time soon, and you feel charitable, could you take a look and let me know what's going wrong? Cheers [GenericsWillBeMyDownfall.swift](https://gist.github.com/GreatBigBore/068175ba0e9425bea1c1f6acc73d897a)
Can you try running this in Playground? https://gist.github.com/protoman92/90292322d5b49cb40350ba8243b68d24
I'm not very familiar with Reddit commenting in general. What should I do in this case? Alternatively, the Medium link is up now. They mistakenly flagged my account as spam for some reasons.
Also I just wrote this [article](https://medium.com/@swiften.svc/dealing-with-optionals-in-swift-generics-335c34efa82e) explaining the rationale in more details.
Awesome! Thanks so much, it works perfectly. And I know ten times as much about generics in Swift. Cheers
It is not allowed to add a link according to the community rules( Please look for Quantum Checkers in Apple Store.
I'll try https://apple.co/2rANn2u
I think links are just forbidden as the post itself but comments should be fine?
No probs :) Generics in Swift are really powerful. Hope you will be able to use them more in your code.
This is something I use OHHTTPStubs for. But I have to admit my project currently use 4 different languages, so having support for Obj-C ist quite a plus ;)
That blog post was made out of solid evil. 
this is really good solution! However, how should I access(conform to) the StorageContainerProtocol inside of ViewController or ViewModel? :)
Convert your date string format to a Date object using a DateFormatter. You can easily calculate difference between two Date objects.
It’s probably because I just woke up, but I literally have no idea what you’re trying to do.
Better wording... Haha I just woke up as well so maybe my explaining is terrible. Lol. But I have 2 buttons. The minus button and the plus button. If I click the minus button, I want it to minus 1 from the text field. If I click the plus button, I want to add 1 to the text field. But I need to know what number is already in the text field. So let’s say the text field has a 3 in it and I want to minus 1 from it. I’ll hit the minus 1 button, the click action will check what number is in the text field first and say oh here we have a 3, so we’ll take 1 away and boom, now your text field says 2. 
Thanks, so I can do that - it’s working out when the next pay day is that I’m struggling with.
You need to use NSCalendar: https://developer.apple.com/documentation/foundation/nscalendar/1409577-date
You want to calculate how many days until next month’s first Friday?
It's the number of days until the next pay day (not the 4th Friday in the month) We get paid on a 4 week basis (13 Periods in the year) so I basically need to calculate when the next Pay day is, I've done it in Excel using this: =CEILING(TODAY()+1, 28)-1
It’s even easier you just add time interval to today’s Date object Time interval is considered in seconds, so you add: 28*24*60*60 Something like: let today = Date() let nextPayDay = today.addingTimeInterval(28*24*60*60)
It’s even easier you just add time interval to today’s Date object Time interval is considered in seconds, so you add: 28*24*60*60 Something like: let today = Date() let nextPayDay = today.addingTimeInterval(28*24*60*60)
Thanks - I get that, but I don't think that helps. Current thinking is work out start date of the current Period.
Uh, yeah. This was brought up a million times when the language was announced. Allowing variable names et al to have unicode can be abused, but then again so can so many language features.
 import UIKit enum PayErrors: Error { case payDateIsNil, payDateHasNoHours } func findDaysTillPay() throws -&gt; String { var daysTillPay = 0 guard let payDate = findFourthFriday() else { print("Something went wrong") throw PayErrors.payDateIsNil } let dateTillPay = Calendar.current.dateComponents([.day, .hour], from: Date(), to: payDate) guard let hoursTillPay = dateTillPay.hour else { throw PayErrors.payDateHasNoHours } daysTillPay = hoursTillPay if hoursTillPay &gt; 5 { daysTillPay += 1 } return "\(daysTillPay) days till payday" } func findFourthFriday() -&gt; Date? { let component = DateComponents(weekday: 6, weekdayOrdinal: 4) guard let fourthFridayOfTheMonth = Calendar.current.nextDate(after: Date(), matching: component, matchingPolicy: .nextTime) else { return nil } print(fourthFridayOfTheMonth) return fourthFridayOfTheMonth } do { let x = try findDaysTillPay() print(x) } catch PayErrors.payDateIsNil { // Do something } catch PayErrors.payDateHasNoHours { // Do something } 
Key component is the using the nextDate till x. I was curious about it so I just tried it out. It is not often that I get to try out different Apis
It looks childish to me.
That's really cool code, but not quite what I meant :( sorry!!! It's not the 4th Friday in the Month, but the 4th Friday in the Period (Period being calendar year / 13 to get 4 weeks per Period)
&gt; What difference would it be if I deleted... I'm not sure but I suppose that when you remove the `parentCategory` property you wouldn't be able to access the category from an `Item` instance. So this would not work anymore: `let category = item.parentCategory`
Oh alright, thank you for the suggestion! 
Not sure if you mean tutorials or tortillas. If it’s the first one I’ve heard good things about the Starscream framework for Swift. For the second one, I find that small corn shells lightly fried on a skillet with a little sprayed oil give the shell a delightful, chewy structure. 
 import Foundation func nextPayday(from: Date, reference: Date) -&gt; Date? { let calendar = Calendar.current let elapsedWeeks = calendar.dateComponents([.weekOfYear], from: reference, to: from).weekOfYear ?? 0 let totalWeeks = elapsedWeeks + elapsedWeeks % 4 return calendar.date(byAdding: DateComponents(weekOfYear: totalWeeks), to: reference) } let calendar = Calendar.current let components = DateComponents(year: 2018, month: 10, day: 28) if let reference = calendar.date(from: components), let nextPayday = nextPayday(from: Date(), reference: reference) { let daysUntilNext = calendar.dateComponents([.day], from: Date(), to: nextPayday) print(nextPayday, daysUntilNext.day ?? 0) } 
Thanks! I'll look this approach for a first run prototype of my project!
Thanks! I can't seem to get it working correctly tho :( where do I put in my reference date? 
For everyone else to know there is a crosspost and I'm too lazy to copy my answers here. https://www.reddit.com/r/iOSProgramming/comments/a69am5/how_to_transform_singleton_pattern_to_dependency/
If you really want to go lowlevel go NIO
Here’s a good overview: https://www.raywenderlich.com/48-introducing-realm-building-modern-swift-apps-with-realm-database
Thabks for pointing to a source!
I need to incorporate a fortune wheel into my app. Would I be better off using a game engine or swift code to make the wheel?
I'm currently using [SwiftSocket](https://github.com/swiftsocket/SwiftSocket) and so far is easy to use and reliable.
They don't really have a tutorial, but the [IBM BlueSocket library](https://github.com/IBM-Swift/BlueSocket) has pretty decent documentation along with a nice bit of example code. Pair that with any socket tutorial using something like C, and you should be able to put things together.
 func nextPayday(from: Date, reference: Date) -&gt; Date? Second parameter.
Sorry I just be being stupid - but I don’t understand what to do!
I'll break down the usage part: // get the current system Calendar let calendar = Calendar.current // construct the DateComponents of the reference date let components = DateComponents(year: 2008, month: 3, day: 28) if // construct the reference Date let reference = calendar.date(from: components), // calculate the next payday from today with the function let nextPayday = nextPayday(from: Date(), reference: reference) { // format the printing of the next pay date let formatter = DateFormatter() formatter.dateStyle = .medium print("Next pay date: \(formatter.string(from: nextPayday))") // calculate the days let daysUntilNext = calendar.dateComponents([.day], from: Date(), to: nextPayday) print("Days: \(daysUntilNext.day ?? 0)") } 
[https://www.raywenderlich.com/537-real-time-communication-with-streams-tutorial-for-ios](https://www.raywenderlich.com/537-real-time-communication-with-streams-tutorial-for-ios) &amp;#x200B; You can search other tutorial through this website. I found they have the best and complete tutorials. Good luck.
Thanks! :) Entered a reference date of a previous pay day (16th March 2018), but the data it spits out isn't quite right - it think it's the 4th Jan 2019, when it's actually 26th Dec, then 23rd Jan :(
Here is the link: [https://itunes.apple.com/us/app/trip-tracker-gps/id1032770064?ls=1&amp;mt=8](https://itunes.apple.com/us/app/trip-tracker-gps/id1032770064?ls=1&amp;mt=8)
The new [Apple Network Framework](https://developer.apple.com/documentation/network) is one place to look. You can still use old-fashioned Unix sockets as described best by Stevens' [Unix Network Programming](https://www.amazon.com/Unix-Network-Programming-Sockets-Networking/dp/0131411551) book, but they don't reliably power up the device radios like higher level APIs do. As others have suggested, 3rd party APIs might be the easiest solution. 
The 26th Dec and 23rd Jan are on Wednesdays.
Paste this in a playground: import Foundation func nextPayday(from date: Date, reference: DateComponents) -&gt; Date? { let calendar = Calendar.current var payday = calendar.date(from: reference)! while payday &lt; calendar.startOfDay(for: date) { payday = calendar.date(byAdding: .day, value: 28, to: payday)! } return payday } let components = DateComponents(year: 2018, month: 3, day: 16) let calendar = Calendar.current let today = calendar.startOfDay(for: Date()) if let nextPayday = nextPayday(from: today, reference: components) { let formatter = DateFormatter() formatter.dateStyle = .medium print("Next pay date: \(formatter.string(from: nextPayday))") let daysUntilNext = calendar.dateComponents([.day], from: calendar.startOfDay(for: today), to: nextPayday) print("Days: \(daysUntilNext.day ?? 0)") } The output will be: Next pay date: Dec 21, 2018 Days: 6 
Actually I spotted a bug and fixed my code. Here’s the corrected line: let totalWeeks = elapsedWeeks + 4 - elapsedWeeks % 4
Actually I spotted a bug and fixed my code. I was calculating the remainder to round to the next period improperly. 
I wrote an answer that works, but I really hate the loop in it. So I worked out what was going wrong with your function. The calculation to round up the weeks was wrong: func nextPayday(from: Date, reference: Date) -&gt; Date? { let calendar = Calendar.current guard let elapsedWeeks = calendar.dateComponents([.weekOfYear], from: reference, to: from).weekOfYear else { return nil } // round up to next 4-week period let totalWeeks = elapsedWeeks + 4 - elapsedWeeks % 4 return calendar.date(byAdding: DateComponents(weekOfYear: totalWeeks), to: reference) } 
OMG works a treat! Thank you so much :)
From this reference date: 3/16/2018 You will have these pay dates: 4/13/2018 5/11/2018 6/8/2018 7/6/2018 8/3/2018 8/31/2018 9/28/2018 10/26/2018 11/23/2018 12/21/2018 1/18/2019
Yeah, I realized that myself and fixed it. The correct version is up now. Thanks!
I bought a team tree house subscription for 25/m and took a Swift course. It's mostly stuff from the free documentation Apple put out but with videos. https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html If you're coming from Python, Swift won't be so bad. 
I’ve learn a ton from people on YouTube. These channels in particular: - [Sean Allen](https://www.youtube.com/channel/UCbTw29mcP12YlTt1EpUaVJw) - [Lets Build That App](https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA) - [Mark Moeykens](https://www.youtube.com/channel/UChH6WbyYeX0INJjrK2-6WSg)
I tried your solution, it still did not work. The function continues to execute as before, and the tableView still will not reload. 
Really? I'd say I'm pretty proficient in Python and I hated the switch to Swift.
Can you post your code?
You can't make iOS apps without Xcode, which only runs on macOS. You need something running macOS, so maybe make more money by freelancing or consulting, or looking up how to set up a hackintosh. The dude from Snazzy Labs made a hackintosh for $450: https://www.youtube.com/watch?v=J-wHQEiDKr4 You could get a MacBook (Pro) from a few years ago on eBay. It'll be slower, but still capable and cheaper, and more legit.
Yes, Network.framework is far superior to using sockets manually. Definitely recommend them if you can run on iOS 12 or later. &amp;#x200B;
You don't. You have way too much responsibility on those View Controllers themselves. You create a separate model that conforms to the StorageContainerProtocol, and pass it into the UIViewController as a dependency (this is basically like a variable that helps it do something, but by using it in the initializer, you can keep the logic inside of it). 
Without seeing your code my guess would be that you're running into issues with cells being reused. When cells scroll above the top of the screen they get reused for new cells at the bottom. Because of this, it's important that you properly configure the cell in cellForRowAtIndexPath or willDisplayCell.
This is easily doable through Swift, I'd probably use [SpriteKit](https://developer.apple.com/spritekit/) to accomplish it.
Just a note, I originally wrote that just as you did but I realized it had a possible error. When `elapsedWeeks % 4` is 0 you'll get the next pay period automatically. This could be a bug or a feature, if you expect the days until payday to be 0 if today is a payday then it's a bug but if you expect it to give you the following payday in that case then it's a feature. I chose to go with the former case. Basically I only round up to the next payday if I'm between paydays.
I think you would be wasting your time till you can get a mac. The best way to learn is to make apps. I learned on a MacBook Air with 4 GB of ram, which was doable (more ram would be ideal though). As for resources I personally like Hacking With Swift, apples own resources, and some Programming IOS 11 (O'Riley book). Though I got a lot of use out of Lets Build That App when I was new to Swift. 
AppDelegate should handle this. You need a UInavigationController at the base and then build whatever stack you want on top of that.
Sounds like you need to override \`UITableViewCell.prepareForReuse()\` in your \`UITableViewCell\` subclass and reset the values of your fields there.
You could even use plain UIKit Dynamics for this. But yeah, explore SpriteKit, it's great fun!
Fun article. Can’t wait to make my coworkers hate me! ^^I ^^would ^^never
You can create UserDefaults to store a value for key, in your sign in method. Then use that key in view did load method to see if value is nil or not. If not nil, perform segue.
Assuming you’ve the information available via UserDefaults or CoreData or via a cloud service You can set the rootViewController for AppDelegate’s window or use a different Segue or Push a different controller programmatically
I think when you learn to program in your first language that will always be your favorite. I learned swift first then did some freelance in C# which is fairly similar but I like swift more because that’s what I learned it. So I know the intricacies of swift better. It was a fun challenge but as soon as that job was done I went right back to grinding on swift. But that’s just my personal experience 
I've programmed in Python, PHP, Javascript, Java and Swift. I liked almost all of them (Java, eh) I just really never liked Swift.
If I took the time to read the documentation and code it from scratch, how long do you think it would take?
I have no idea of your skill level. Someone who is pretty knowledgeable about SpriteKit and Swift could probably knock it out in a few days, depending on how fancy they get.
Raywenderlich.com has helped me a ton in building an app from scratch. You should try and check the website out, it's free
Swift works on linux. There have recently been post here about people getting swift to work on windows. You can lean swift without making iPhone apps. If you already know how to program, I suggest reading the quick tour in the [swift book](https://docs.swift.org/swift-book/). 
Thank you for the tip man, i usually buy them from udemy but this one seems way more promising. 
Hey, so the calculation for the date is working fab, but the 'days until' seems a bit off. E.g. next Pay Day is 21st but it's saying 4 days when it's actually 6. let daysUntilNext = calendar.dateComponents([.day], from: Date(), to: nextPayday) The code looks ok to me, any ideas?
Reddit code blocks are a bit tedious, each line is prefixed with four spaces.
I think you should just redirect to the desired webpage using `UIApplication.shared.open(url, options: [:], completionHandler: nil)` where url contains your desired url. 
You cannot code swift without a Mac so I would recommend buying a Mac mini (2018) or a used MacBook Pro. For resources, I would recommend going through YouTube and checkout this course in Udemy [course on Udemy](https://www.udemy.com/ios-12-app-development-bootcamp/) (I got it for 10 dollars ) and various other free resources. If you ABSOLUTELY CANNOT buy a Mac then I would suggest Android dev or working on your Python skills 
I won't get desired url from API. it does not work that way in this case :(
You should never shut down apps, that's not how things are done on iOS. As /u/Lars34 pointed out, you should simply redirect back to the browser. Your app, on the other hand, should return to a neutral state, ready to be used again. An app that does just one thing, though, might continue to be seen by Apple as not having sufficient justification. If the app could contain the entire workflow, it might have a greater chance at being accepted.
Truly bizarre post. Nobody would abuse Unicode in these ways because they would make for unclear code. There's no point ruminating about whether intents would be lost to time/the whims of whomever decides an emoji glyph should look different — so long as your code is *clear*, this isn't an issue. Clarity, in code, comes with not doing stupid things like anything outlined in the post.
got a 2018 base model in the end
Check out Vapor, it’s server side swift. If you want to make iOS apps, everything will be much easier if you just get a Mac - don’t fight the framework. You can get a cheaper preowned one.
I’m just a curious beginner: why is this post downvoted?
Trying to implement a good settings app in my app. Recently discovered Settings bundle which is interesting. The problem is that to view those settings you have to go to Settings.app, is there a way to use that plist file created and control my settings in my app?
Im wondering how to link a IUswitch action to another view controller. I am creating an app using the tab app format. I have a switch on one tab (view controller) and when pressed I want a picture on a separate tab to appear. I am able to succeed when the switch is on the same tab as the picture but I cannot figure out how to link a button from another tab. &amp;#x200B; Thanks for your time and thoughts!
Build hackintosh 
Don/t know why nobody suggested [https://www.hackingwithswift.com/](https://www.hackingwithswift.com/). There's free guides on the syntax and about 40 free projects for iOS development. I'm currently going through the projects and I'm very happy with my progress so far, I also think the creator is a reddit user here and there is a whole subreddit dedicated for the projects. r/hackingwithswift
Cool app, it would really be amazing if you added achievements to it. 
Yepp, I second Angela's course on Udemy. Mark Price at Devslopes has another popular one on Udemy. 
To add to this, I've managed to run a slightly older macOS version on my $350 Acer by following [this blog post](https://blog.jetboystudio.com/articles/hackintosh2/) (as my luck would have it, it was using the exact same laptop). However, I did have to use an external network dongle + a different touchpad driver. 
I'll third your recommendation for Angela's course. 
Can you run new Xcode versions on older macOS?
Ack, good catch, latest Xcode wants High Sierra, but this uses Sierra... Some people have said [they were able to work around it](https://reddit.com/r/iOSProgramming/comments/89p5hw/cant_install_xcode_93_on_macos_sierra_10126/) though.
You can’t perform a segue in `viewDidLoad`. You have to wait for the view to appear to do that. What happens when the user logs out? My recommendation is to have a Front Door view controller that is the initial view. It looks the same as your splash screen, and segues the user to the user based on whether they’re logged in. You might also need to load some data when the user is signed in, and if you do that, you can display an activity indicator on the Front Door while you’re waiting for it to load. Finally, if the user logs out, you can use an unwind segue that is handled by the Front Door, which then either displays a Log In button, or segues to the Log In view. (Just keep in mind you can’t perform a segue while another is in progress, you have to use the segue’s `completionCallback’ to do it once the unwind segue is done.) 
Why not
I have used '[CocoaAsyncSocket](https://github.com/robbiehanson/CocoaAsyncSocket)' with ObjectiveC before and about a year back I had to deal with sockets again and somehow couldn't get my head around SwiftSocket (I was in a hurry and somehow couldn't understand how to make it work for my needs) and ended up using CocoaAsyncSocket again. Great lib
There’s a tool where you can compile your Swift code on windows as long as its plain Swift, I don’t know if it works for your purpose, but you can try it. https://swiftforwindows.github.io
I've only used swift on Mac, but from what I hear it will run on Linux. JSON files are very simple, they contain data in both human and machine readable format. For example { "name": "mogsun", "greeting": "hello" } Look into using the Codable feature in swift with structs for dealing with data coming from JSON
Here is the [official guide for building Swift on Windows](https://github.com/apple/swift/blob/master/docs/WindowsBuild.md).
Thanks! By plain, do you mean no libraries? 
Just google, “macOS on VMware” or “macOS on virtual box” you’ll find plenty of articles that will walk you right through the whole process including giving you the macOS image to install. I’ve followed them personally and got it working on my pc. It’s not as easy as the articles make it sound though, definitely takes some tweaking. Here’s one link, but there may be others with better instructions. https://www.geekrar.com/install-macos-mojave-on-vmware/
Renaming my front most ViewController to “FrontDoorController” because that’s just how my brain works. Thank you for this.😀
Feel free to reply here or pm me if you can’t get it working and I’ll point ya in the right direction. I’m an iOS/mobile engineer for a VR company.... 
Mac on VM definitely works better on Linux 
To clarify, are you saying the website “camera view” doesn’t work so your having your users download an app to handle it instead? By camera view, on the web I’m assuming you mean using the webcam and on the mobile app you mean using the front or rear camera correct?
Compiler is not ready for easy installation on Windows. I'd get a Linux VM and run it in there. 
Not OP but what it probably means, is that all Foundation classes (names start with NS) are either not or poorly working. 
Ehh, maybe cause it would be best to just actually check it the user is logged in instead of saving some value in user defaults from last time they logged in? Honestly it’s not terrible though. 1000 ways to do most tasks in code, with experience you just learn which method to use for which job. 
You can use a browser based cloud editor, for example: Rept.it.
On my apps I usually use a splash loading screen for this purpose, show a loading bar, check the database to see if the user is logged in, do any necessary preloading of user information from the database, etc. Then, when it’s done a simple if/switch statement to route the user to the right page through a navigation controller. Handling page navigation through a navigation controller IS the correct way to go at least 90% of the time (could be some off cases) Swift4: ‘Let loggedin = someFunctionToCheckDatabase() If loggedin { let homePage = UIStoryboard.init(name: "Main", bundle: Bundle.main).instantiateViewController(withIdentifier: "HomePageViewController") as? HomePageViewController self.navigationController?.pushViewController(homePage!, animated: true) } else if !loggedin { //push the login view controller controller instead }’
Thank you. 
Only the Swift Standard Library :)
Haven’t tried it personally, but if your comfortable with Linux then ya, I wouldn’t doubt it’ll run better. Although it is plenty usable on my windows machine, late model i7, ssd, and 32GB ram. Honestly, doesn’t even come close to the performance I get on my latest model MacBook Pro or iMac at work though. 
For those interested, I’ve fudged this a little by subtracting a full day from Date() not sure this is the most elegant solution but seems to work: let date1 = calendar.startOfDay(for: Date()) let date2 = calendar.startOfDay(for: nextPayday) let nextDate = Calendar.current.date(byAdding: .day, value: -1 , to: date1) print(nextDate) let daysUntilNext = calendar.dateComponents([.day], from: nextDate ?? &lt;#default value#&gt;, to: nextPayday) print("Days: \(daysUntilNext.day ?? 0)") Is there a better way of doing this?
The hacking with swift books are good, plus the same guy makes a coding challenge book
The issue is that `Date()` gives you the current date and time. If you compare that to a date made with just the date components as I have done it will be set to the start of the day. Therefore there won't be a full day and it will round down. You can fix this by setting today to be at the start of day: let today = calendar.startOfDay(for: Date()) let daysUntilNext = calendar.dateComponents([.day], from: today, to: nextPayday) This will round up any partial days to full days.
Can you provide a link? 
you can see all the books at https://www.hackingwithswift.com
Ooh thanks, learning a lot here :) it’s very much appreciated!
Thank you 🙏 
JSON is pretty simple and exists everywhere, it's basically the standard way to send data over the internet. For what you're actually doing you should be able to just write Swift in a browser. Here's a website I just found that does that: [http://online.swiftplayground.run/](http://online.swiftplayground.run/)
Somebody has had it up and running on Cygwin for some time now, but that's a bit hacky and not actually supported by anybody but one guy. Swift 5 will have alpha/beta stage Windows support and (should) have downloadable binaries. 
Thank You! I understand now
I assume OP to mean that Safari can't show the camera in a view. This is correct; in iOS, you can only choose to upload a picture taken from the webcam, but the camera can't be shown live. The camera mightn't need to be shown live, but OP hasn't specified this.
Happy cake day! 
Then the API needs adjusting to accommodate the app.
The same point could be made for any framework, really. Use a graphing framework or draw the graphs yourself. Up to you. The intention here is more for beginners who need guidance with networking best practices, how to structure APIs.
But for: var parentCategory = LinkingObjects(fromType: Parent.self, property: “containingChildList”) why do we need ‘property’ from LinkingObjects if Xcode already know which class contains Item Class?
I won’t be able to help you on running Swift on windows, although I’m sure it’s possible. About reading JSON, Swift has great functionality for that using codable structs. Makes the whole thing extremely easy. [Here’s a tutorial on how to encode and decode JSON data in Swift](https://hackernoon.com/everything-about-codable-in-swift-4-97d0e18a2999) 
You could kind of learn Swift but you wouldn't be learning iOS development just as knowing Java wouldn't mean you know how to write an Android app. Learning Swift is probably going to be one of the easiest part about learning iOS development for you. It's pretty similar to Kotlin if you've ever worked with that before.
At the end of the day it's best to use a Mac. Honestly I find it time consuming and frustrating to try and go around not having the intended hardware or software. I have a 2012 MacBook pro- 6 years old and still working perfectly. Really worth the investment.
Hey, that's why questions are good! Glad to help.
Big nerd ranch has a free swift book / course I’m pretty sure. It’s really good. Also check Lynda.com. I believe there is also the Stanford course iTunes... Developing iOS 11 Apps with Swift by Stanford https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316
I agree. The point about frameworks is in this case as far as I can see 1 person is maintaining it. The basics of networking are quite simple, so there is no reason to use a framework which has a high likelihood of being abandoned (it decreases with the time it exists and the number of contributors). For me adding a framework is not only about ease of use but also about how much work will I have if it gets abandoned. There is also the point of it being in Swift and Swift not being ABI stable as of now. &amp;#x200B; If it's about guidance wouldn't be a good series of blog posts more helpful?
Blog post could be informative too. I just find it easier to demonstrate with code instead of explaining it in a blog post!
So make it do that. 
Or macOS 10.14 or later!
Here’s a step-by-step guide on how you decode JSON data to a Swift object, exactly what you want to do in your case. Chapter 5.5 of Apple’s own educational Swift textbook: https://itunes.apple.com/ca/book/app-development-with-swift/id1219117996?mt=11
I’d suggest posting on the official Swift forums.
Try using [Ubuntu on Windows](https://docs.microsoft.com/en-us/windows/wsl/install-win10) You can install the latest Swift with apt, use a GUI editor in Windows and compile/run using a Linux CLI.
Sounds an awful lot like this... https://stackoverflow.com/questions/38818786/safariviewcontroller-how-to-grab-oauth-token-from-url
But i gotta say. That snapkit example is a bit advanced and intimidating to follow for new people. And its equalToSuperview()
I learnt Swift with this book: https://store.raywenderlich.com/products/swift-apprentice Rays stuff is top quality and well thought out. Highly recommended! 
Do you own an iPad, cause with the “swift playgrounds app” you’re able to learn, write, compile, and “run” swift code
Nice little challenge. Does it need to scroll as well? Anyway, I doubt that there are tutorials for exactly this purpose. I'd suggest you try and divine which components this control is best served by, and then think of how to provide the data. I think I'd personally start with a vertical stack view of horizontal stack views. Generating the dates may not be all that hard. It's really a sequence of dates, you start with one by specifying its components (NSDateComponents) and then add one day component to get the next date. 
Does it have exercises and projects at the end of each chapter?
I second this Repl.it is amazing.
Assuming you haven’t done what precious users have suggested. You can do [swift on Linux ](https://swift.org/download/#releases) or run a vm with Mac OS. Nothing will compare to using swift in Xcode in my experience but whatever gets it done, get it done. Hope that helps!
Yes it does. You also download all the starter projects when you get the book and go through it with the authors (more than one author in the book) You’ll get challenges and the answers as well at each chapter in the book. 
Taught myself Vapor and built a [Nintendo switch game database and game tracker](https://redmushroom.club)
You could still use the Settings.app and setup a menu item that navigates to your app’s section in the settings.app The main problem with the settings.app is that it’s pretty limiting what you could do with it UI wise.
Ya OP, can you clarify on this a bit? Are you building an iOS app that has a web view to hold your site? Then you could just add another view controller for the camera and switch back and forth... 
I often use a VC + Tableview combo so i can resize the TV if i need views on the top or other elements etc. Etc. There is pretty much no difference apart from that advantage so I usually go with it.
Looks like you can use the camera now straight from safari... https://stackoverflow.com/questions/2607067/can-you-access-the-iphone-camera-from-mobile-safari
No, what I meant is on some IOS devices we could not found camera. It opens only one the ones which run IOS 12 and are the newest(iphone 6 or 5S) could not launch camera. Web is build in angular :)
I know you can "visualize" UI code by reading carefully, but this post could have used a screenshot or two.
The UITableViewController does provide some extra functionality for us: * auto safe area inset changes for notched devices * observations for scrolling content to be visible above the keyboard * some default gesture recognizers Also, to add other sibling/child views to the hierarchy, some devs recommend to add a UITVC as a child VC (with your other custom views being added to their own VCs as another child VC). Hope this helps!
I didn't know Apple had any sanctioned steps for Swift on Windows! 😮
You could use a UICollectionView with a custom UICollectionViewLayout. [Here's a tutorial](https://www.raywenderlich.com/1702-uicollectionview-custom-layout-tutorial-a-spinning-wheel) from 2015 that might help.
I'm curious as to why you would want to implement that kind of behavior. Is this switch related to a setting in the app? Anyway, if you want to access the child view controllers inside a UITabBarController, you can call self.tabBarController?.viewControllers. This returns an optional array of the root view controllers displayed by the tab bar controller. You could also keep a weak reference to the view controller in question. Another option is to use NSNotificationCenter to post a notification (when the switch changes its value to the desired value) that will be received by your view controller in question. You'll need to register your view controller to receive that notification. Then it can show the picture accordingly.
I plan on using the spin wheel found here: https://github.com/hsilived/SpinWheel Do I have to remake the app as a game? Or can I embed a view controller with the spin wheel in my main view controller?
Just a quick start for you, I did this in an iOS playground: import UIKit import PlaygroundSupport import SpriteKit func centerFrame(_ frame: CGRect) -&gt; CGPoint { return CGPoint(x: (frame.maxX - frame.minX) / 2, y: (frame.maxY - frame.minY) / 2) } class Wheel: SKShapeNode { let size: CGFloat let colors: [UIColor] init(size: CGFloat, colors: [UIColor]) { self.size = size self.colors = colors super.init() let wedges = colors.count let center = centerFrame(frame) let step = 2 * CGFloat.pi / CGFloat(wedges) for start in 0..&lt;wedges { let path = UIBezierPath(arcCenter: center, radius: size, startAngle: CGFloat(start) * step, endAngle: CGFloat(start + 1) * step, clockwise: true) path.addLine(to: center) path.close() let arc = SKShapeNode(path: path.cgPath) arc.fillColor = colors[start] addChild(arc) } } required init?(coder aDecoder: NSCoder) { fatalError("init(coder:) has not been implemented") } } class MyViewController : UIViewController { override func loadView() { let view = SKView(frame: CGRect(x: 0, y: 0, width: 1024, height: 1024)) view.backgroundColor = .white self.view = view let scene = SKScene(size: view.frame.size) scene.scaleMode = .aspectFill scene.physicsWorld.gravity = CGVector.zero let wheelSize: CGFloat = 250 let wheel = Wheel(size: wheelSize, colors: [.red, .blue, .green, .white, .purple, .brown]) wheel.position = centerFrame(scene.frame) let body = SKPhysicsBody(circleOfRadius: wheelSize, center: centerFrame(wheel.frame)) body.angularVelocity = 10 body.angularDamping = 0.3 wheel.physicsBody = body scene.addChild(wheel) view.presentScene(scene) } } // Present the view controller in the Live View window PlaygroundPage.current.liveView = MyViewController() This will show a wheel with different colors that rotates. It's rudimentary and a lot more functionality is needed.
Personally, I never use a `UITableViewController`. If you ever want to add a second view, or do anything custom, you end up having to change it this way. What you get for free is minimal and worth just implementing on your own, if you even want it.
I've used JTAppleCalendar in my app. They have couple of good tutorials on Youtube on how to use it. [github link](https://github.com/patchthecode/JTAppleCalendar)
Thank you for the suggestion. I have added [the question to the forum](https://forums.swift.org/t/swift-5-building-from-package-manifest-resulting-in-error-stating-an-incorrect-number-of-targets-for-executable/18869).
It’s open source, if they didn’t then someone would make them.
Apple has nothing to do with it. It's open source.
I cross posted to StackOverflow and got a pretty good answer. [https://stackoverflow.com/questions/53807470/is-there-a-better-way-to-build-many-different-urls/53808057#53808057](https://stackoverflow.com/questions/53807470/is-there-a-better-way-to-build-many-different-urls/53808057#53808057)
Thank you sir/madam. I will report back later. 
My preferred way of developing Swift on Windows is to use the new Ubuntu sub-system available in Windows 10.
Tip: you’re allowed to nest view controllers inside of one another! There’s no rule that says “each screen must be written as a single view controller” If you find yourself putting extra views above, below, or beside your table view, that probably means your single view controller is responsible for too much. This leads to the “Massive View Controller” problem. Try this on for size: create a UITableViewController that is concerned *specifically* about the content of your table view. In your main view controller’s `viewDidLoad` method, initialize the table view controller, add it as a child (using `addChild()`), add then its view as a subview (you also have to call `didMoveToParent()` on the tableViewController after you’re done)
Secure in what way? Just because it "turns itself off in production?"
Yea, I noticed that too. I guess the OP will have to decide how the calculator should work in that situation. And to all the new programmers, such situations are called "edge cases" and it's one of the big parts of the programmer's job to identify them and work with the designer to determine the best way to deal with them. Some other edge cases with this algorithm... What if the from date is before the reference date? What if it's the `distantFuture` value? Both algorithms return a pay day equal to the start of the "day" which is at midnight local time. So you have to be careful when subtracting `Date()` from the pay date. For example, if you use a Date() of noon on the day before payday the subtraction will give you 0 days. When dealing with just year/month/day, be sure to "normalize" your date object where necessary with `Calendar.current.startOfDay`. Dates and times can be very tricky things.
Thanks for the Introducing WebSwift. It will help the people who don't have a mac and learn to basic Swift.
In Objective C, you can wrap an arbitrary method call as an NSInvocation, which allows you to compare them to see if the are equal and where they differ. This is useful for testing. Undo is usually implemented by giving the undo manager an instance of something, asking it to return a proxy object, which appears to the original type, but which when you make a method call just stores an NSInvocation on the undo stack, to be executed at a later time. At runtime, an objective-C app can inspect all the classes that are defined, and even create new classes and new methods. If you give an Objective-C file a .mm extension, it becomes Objective-C++ which lets you freely call C++ api, naturally, and without overhead (except that you can't let C++ exceptions cross an Objective-C layer or vice versa, so you use @try and **try** blocks as needed to copy and convert the exceptions. Objective-C is the natural language of the iOS frameworks, most were written in Objective-C, they were written to talk to Objective-C, and tend to do so with less overhead. Objective-C is a very thin wrapper on top of C, so it's smaller, simpler, more regular, and faster to learn than Swift, if you also work with C or C++. Xcode is much faster and more stable in Objective-C than Swift. Your apps are smaller because they don't carry the Swift runtime. (Lacking a stable ABI, the swift runtime must be copied into each app.) 
There isn’t anything you need to do for app development that can’t be done in Swift. There are a few technical things that Objective-C can do that Swift can’t (and vice-versa) but these are not necessary as they represent just one way of approaching the problem. That said, learning Objective C for app development is mostly just syntax. Most of learning to code apps is learning the underlying Cocoa frameworks that Apple provides. It’s worth noting that all of those are written in Objective C and you’ll ocasionally run into it, it’s helpful to be basically familar with it. There are a few more points but basically while it’s not necessary to “learn objective c” and try to make apps with it, you should try to be able to read it. You’ll be limiting yourself if it repels you. 
Thanks, pak_lebah. Judging from the TLD it seems you are an Indonesian. Inferring from the name its seems related to a college named Beenus. Am I right? :)
It would be handy to understand enough Objective C to read examples as there's so much code out there not in swift yet. But yes, other than reading code examples, jump right in to swift 4.2.
I posted a screenshot in the thread but I think I’m just throwing code around too much and unsure exactly how to do this with UITextField. I did it with an array properly though. 
That SnapKit example is the first example seen on SnapKits website and yeah its equalToSuperView(), I guess they haven't updated their sample code for a while.
&gt;(except that you can't let C++ exceptions cross an Objective-C layer or vice versa, so you use @try and *try* blocks as needed to copy and convert the exceptions. Huh, I thought that was only in the 32-bit OS X run-time. Although that might explain some of my problems when trying to debug something that was throwing a low-level exception. &gt; Objective-C is a very thin wrapper on top of C[…] I know it's a strict superset of C (any valid C code is valid Obj-C code. The same can't be said about C and C++), but I wouldn't call it a thin wrapper over C. In fact, the main Objective-C library (not the Foundation framework, just libobjc.dylib) is over 27 MiB big! Even cutting it in half for being a 32/64-bit binary, that's still pretty big. (The C++ libraries are only around 1.7 MiB, 1.4 MiB for libc++.dylib and 332 kiB for libc++abi.dylib)
Swift, by default, is statically-typed, while Objective-C is dynamically-typed. The dynamic typing makes Objective-C more flexible, but also somewhat slower. As others have mentioned, you can create custom classes at run-time (some APIs, like AppleScript and the undo manager takes advantage of this).
Sorry, I meant to say that you need to modify the segue to be able to add a completion handler. I did this and named it `completionHandler`. 
For jobs 
This looks awesome - will give it a proper go later 
Hey, that looks pretty smart nice job! You might want to look into sandboxing it a bit more because I’m able to shell out and execute commands on the machine it’s running on.
Thanks will check it out!
Let myCell: UITABLEVIEWCELL = tableView.dequeueReusableCell(withIdentifier: cellIdentifier!, for: indexpath) Maybe try that?
Let myCell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) Does that change anything? 
on Linux it is definitely fully supported
I don't see why one should learn Objective-C if you start with learning app development. There may be things you can do in Objective-C, but in my experience these are very rare. And almost all new projects are started in Swift, so you'd do your career a great favor.
Plenty of legacy code out there, otherwise no good reason. Understanding Obj-C runtime can be useful though.
If you want to work for a company then you may need to know ObjC to support older projects. If you know Swift and UIKit then learning ObjC isn't really a big deal, it's just another language. 
Yes our APT support Ubuntu: 14.04, 16.04, 16.10, 17.04, 18.04 and 18.10.. We are currently working on some major changes to the APT, that will make it easier to support new versions and even prereleases.. We are also going to rename it to swiftlang to prevent duplicate names :)
That link literally goes to Apple's GitHub
You can't "make" open-source projects do something :P I mean you can fork it and do it yourself, but you can't compel the original author to implement something just cuz it's open-source
It's alright. It's just an empty VPS. All of its content is synchronized from my local computer.
You're welcome. :)
Yes, I'm an Indonesian. But, no I have no relation what so ever with Binus college. Bee (lebah in indonesian) is my nickname. :)
You're welcome. I should have published it long time age. I just didn't have enough confidence and I thought nobody would use it anyway. Turns out, I was wrong. Hence this announcement. :)
Am i paranoid or is this a bad idea
This will be review for the vast majority of Swift devs _until_ the last couple of paragraphs and then it actually gets interesting. ⌘-F for “unbreakable reference cycles” to get to the meat. 
This "will be review"??? What? 
If it’s not, you get even more out of the article, which is great! I didn’t mean to gate-keep, but I almost stopped reading multiple times because the surprising bit had so much lead-up. 
Thanks for the feedback, I'm still trying to understand the balance between making it accessible to everyone even having almost no knowledge of Swift vs focusing only on advanced topics for experts. I hope to get more feedback like this so that I understand whether it's worth to add more "let's make sure we're on the same page" content in these articles.
Wait, what? Unbreakable? No one talks about them? [Strong Reference Cycles Between Class Instances](https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html#ID51) [Weak, Strong, Unowned, Oh My! - A Guide To References In Swift](https://krakendev.io/blog/weak-and-unowned-references-in-swift) [Swift 4 Weak References](https://www.mikeash.com/pyblog/friday-qa-2017-09-22-swift-4-weak-references.html) Among a ton of other examples out in the wild. Talk about a bad title…
No, it’s a terrible idea lmao
See the discussion on the Swift forums [here](https://forums.swift.org/t/avoiding-unbreakable-reference-cycle-with-value-types-and-closures/18757/13). Summary of the explanation is that the `var i` itself has identity, so capturing it is in some sense the same as capturing a "mini-class," creating the reference cycle.
Thanks, that's what I ended up doing so far !
Awesome! Yeah swift for sure did it for Max &amp; Linux since there both Unix based. I could never do it on windows. I enjoy it on Mac OS a lot better but Linux works well. Good deal!
Hey ! Thanks for the offer ! I ended up using Linux, since I'm running out of time ( have to submit the results as fast as possible, and I have my finals at the same time!). But if they are satisfied with what I did, I will probably have to use a vm to use xcode, for compatibility sake and workflow. I tried the link on how to install on virtualBox(since vm ware doesn't seem to free ?) , but each time, the start of the vm would fail on "waiting for dsmos" ?
Reference counting in Swift is not thread-safe. Object headers remain consistent, but two threads trying to modify the same reference can easily end up in a crash. Also note that assigning an object to a second local does not necessarily increases its refcount. In general, you should think really hard about storing closures on value types *and* referencing that instance of the value type within the closure, because if you pass a copy around around, the closure won’t modify the copy. 
Yeah, programming swift on Windows didn't really seem to be a viable option haha. If I get the internship, I think I'm gonna have to switch to a MacOs on a virtual machine, just to get Xcode
I'm not quite sure about the thread-safety point. From [this research](https://www.mikeash.com/pyblog/friday-qa-2017-09-22-swift-4-weak-references.html) it looks like weak reference has recently become thread-safe. Do you mean reading and changing the reference count by "modifying the same reference"? Because all reference counting operations [use atomics for this](https://github.com/apple/swift/blob/master/stdlib/public/SwiftShims/RefCount.h#L696)
Objective-C is a different language that has different strengths. * You can change methods during run-time which is called "swizzling", you can replace it with blocks or function references in Swift but the big difference is you can swizzle almost everything including Apple's own API's. * It's easier to write (or "borrow") high-performance code in C or C++ and just wrap it an Objective-C function than to write C-level performance code in Swift. * Some Apple API's rely heavily on C-code and using them feels more natural from Objective-C * You're not required to check the shit out of everything * Calling a method on a nil-reference doesn't crash * It's like you know something awesome leet like LISP because the syntax looks all weird instead of some kind of boring C syntax copy. Makes everybody go like "Gee do you understand all of that shit???" while they gaze at your MacBook's screen.
This should crash almost instantly: ``` import Dispatch class X {} func foo() { var x = X() let queue = DispatchQueue(label: "crash") queue.async { while true { x = X() } } while true { x = X() } } foo() ```
hm, this is super-interesting. Has this been reported previously at bugs.swift.org or is there a confirmation from the Swift core team that this is an intended behaviour and not a bug?
ObjC is not dynamically typed.
It is documented in [this explanation of Swift's concurrency mechanisms](https://github.com/apple/swift/blob/master/docs/proposals/Concurrency.rst#swift-memory-model) in the official repository: &gt; This section describes the guarantees that unsupervised Swift provides when writing multi-threaded code and why the minimal guarantees of atomicity that Java provide cannot be implemented in Swift. &gt; &gt; Let's start by looking at reference counting operations. Swift objects include a reference-count field that holds the number of references that point to that object. This field is modified using atomic operations. Atomic operations ensure that the reference count field is not corrupted by data races. However, using atomic operations is not enough to ensure thread safety. Consider the multi-threaded program below. [...]
Well, still trying to solve this. Database is DB2 v.11. The server side is receiving that separated bytes and cannot handle it, other clients are fine as I guess they can communicate with another way. Is there any function that I could convert the double unicode to single? As the example I told my json file should send information like "ação" and not "ac,a˜o". 
I’ve read articles that sort of state upfront whom the intended audience is. I think it’s a good idea and allows you to really concentrate on the topic at hand if its a more advanced one. You can also link to more beginner level articles when you do so, to keep beginners included. 
UITableViewController does a lot of the stuff for supporting rotation and View Controller lifecycle for you, which can be really nice. 
I believe the 64-bit runtime unifies the exception model between Obj-C &amp; C++. I just checked the libobjc.A.dylib on my High Sierra system. It is 16748736 bytes with three architectures: x86_64 i386 x86_64h. So we're looking at around 5.3 MB per arch. 
If all else, you can buy a cheap used macbook or imac online once you save up or get a small loan and buy one if you really need it. I currently use Xcode for swift and it is nice. Also, if you need help with json or parsing just let me know. In your situation, you might have to write all your classes in 1 file I am guessing, if you are able to link different .swift files in 1 folder directory then that is awesome and will work as well.
Good and useful article!
I don't know anything about DB2. I think what you want is a "precomposed" string. In Obj-C I would try \`precomposedStringWithCanonicalMapping\`. Not sure how to do that in Swift. 
Just a thought, but you could split those topics into their own posts and just reference that post as needed. If someone isn’t familiar, they have a place to read up first 🙂
I am not sure why anyone would expect copy.x to be 3 in the last example. I would be surprised if copying a closure changed the code inside the closure.
 import Dispatch class X {} func foo() { var x = X() let queue = DispatchQueue(label: "crash") queue.async { while true { x = X() } } while true { x = X() } } foo() 
It's not about what can be done in Swift vs Objective-C. UIKit is written in Objective-C. That means it plays to the rules of ObjC and not Swift's. It's been shoehorned to look like Swift but it's not. If you want to understand how UIKit works then you need to know Objective-C. And as an interviewer and engineering manager of people who work with both, there is always an order of magnitude difference between the guys that understand UIKit and ObjC and those who don't. 
New Reddit [does not](https://imgur.com/a/fkfLMLh) (don't @ me)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/6pCB0lV.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20ebzobod) 
Incorrect definition of make.
Interestingly enough, if we take meaning of this literally: &gt;Each var is itself essentially a small class object. This means that `var` creates some special class objects that handle assignments in thread-safe manner. Take the same code and replace `class` with `struct` and crashes go away: import Dispatch struct X {} func foo() { var x = X() let queue = DispatchQueue(label: "crash") queue.async { while true { x = X() } } while true { x = X() } } foo()
Use a repeating timer instead of a while loop, your code executes faster than the frame timer.
Ah - I should have mentioned that I did put in a sleep(1) so it would be visible. That said, I'm not sure how to replace a loop with a timer... I'll post my code in a minute &amp;#x200B;
Why do you say "changed the code inside the closure"? Expecting copy.x to be 3 does not depend on any change to the code in the closure.
I think a single post would be fine, but maybe put the recap stuff with like a light gray background so I can see where to skip down to?
Once you get windows going, try out the SwiftyJSON library, it's a much more natural way to use swift and json together. https://github.com/SwiftyJSON/SwiftyJSON
Yeah that would be fine too, I was just thinking that separate posts can be nice for future posts too, you have snippets to refer back to as needed. 
``` var timerCounter = 0 Timer.scheduledTimer(withTimeInterval: 1.0, repeats: true) { [weak self] (timer) in guard let self = self else { timer.invalidate() return } if timerCounter &lt; 4 { timerCounter += 1 // Roll dice } else { timer.invalidate() } } ```
Ok - thanks - but I'm not that far into it yet... (I'll look up that code)... can you explain why my code spits out the correct numbers but doesn't update the images? &amp;#x200B;
When you change the image, that triggers a setNeedsDisplay() call which then makes the OS call the draw(_:) method when the next frame should draw. But since it would be called on the main thread that you are blocking with sleep, it won't be redrawn until your function ends.
Congrats on getting this up and running. Are there any differentiating features from [repl.it](https://repl.it) (which has Swift support) or is this more of a personal project that you published?
Not sure I understand what you’re saying. The crash goes away because the struct example doesn’t need reference counting. It does not make this operation thread-safe. 
The example given is an _impure_ function. In order to test this it will need knowledge of the environment it’s running in, and it will need to control all variables in its scope. This runs counter to what FP is all about, it aims for _pure_ functions which always behave predictably and receive all inputs as parameters. Pure functions always return the same result given the same input. Unidirectional architectures further expand on this concept of pure functions to provide predictable flow of state by controlling how/when you can update the model. It’s a feedback loop where the user performs an action, the state receives that action and applies a change, the listener observes that change and updates the view, then the next action is processed. 
As was [clarified on Swift Forums](https://forums.swift.org/t/avoiding-unbreakable-reference-cycle-with-value-types-and-closures/18757/13) instances of value types stored in `var` are captured in closures by reference and these newly created references are reference-counted. Specifically, as was mentioned by the core team: &gt;Each var is itself essentially a small class object. Although I'm not sure if this statement has any caveats with regards to compiler optimizations etc. Also, I'm not quite sure I understand why the first example with the `class` crashes, but the second example with the `struct` does not, while both do involve reference counting for references captured by the closure running in a background queue.
I just released my new app “AR Hanger” an interior design app that lets you virtually hang anything! Not just photo frames, it allows you to crop images in an irregular shape to accommodate for all kinds of decorations and then place them on the wall. I’d love for everyone to check it out and give me some feed back! https://itunes.apple.com/us/app/ar-hanger/id1446941760?mt=8
It’s not crashing because no object is being destroyed. The closure object is released, but its refcount never reaches 0. 
&gt; precomposedStringWithCanonicalMapping I will search for it! I was studying about Scalars but so far no luck. 
Exactly! You should have some ability to read Objective C but other than that I wouldn’t touch it with a ten foot pole. There is virtually zero uptake of Objective beyond Apple, Even Swift at this early stage is seeing more use beyond Apple and it is t even a stable language . Effectively it is a waste of time to invest in Objective C heavily. 
I LOVE YOU!! &gt;\_&lt; Simple! Deeply simple, just needed someone what could know the existence of the that magic method!! In Swift is it as simple as: newStr = str. **precomposedStringWithCanonicalMapping** print(newStr) Thank you!!!!!
While I can’t disagree that the people that know UIKit and Objective C are highly regarded your post focuses too much on the past instead of the future. For somebody learning today, Swift is where their energy should go. Apple has made it pretty clear that Swift is the way forward. Beyond that I’m expecting core parts of the OS to gradually transition to Swift or at the very least adjust the API’s to better work with Swift. This can be likened to telling somebody to learn 1980’s C++ instead of modern C++. You wouldn’t do that as you would expect a student to be educated in modern methods. Now the jump to Swift is different than the jump to modern C++ the reality is Objective C is a dead end. To think otherwise is foolish in my estimation. 
I'm not sure I understand your question, but I'll try to answer it. First of all, Xcode doesn't know anything. Xcode is just an IDE you use to write (Swift) code. The way a `LinkingObjects` list is populated is by a foreign reference property. So if you define it as: `var children = LinkingObjects(fromType: Child.self, property: “parent”)`, it means that `children` will contain all Child objects `parent` property is set to this Parent instance.
Thanks and i am sorry for being confusing, and i am also confused at what you said too.. sorry i am still new to this.. my question was: What is “property” in LinkingObjects used for and what is the point of it? (also what is a foreign reference property? and also is Linking Object a array type like ‘List()’ or no??) Wait... so LinkingObjects can be used outside of the object class... is what i seem to get from your code since it is setting a variable of type Child. Can you explain to me more about Linking Objects? Thanks! 
The free version of RemObjects Elements compiler has Swift. You can even use it for Android apps if you have the Android development kit installed.
I am not quite sure if you know what people could do with this. You can execute shell commands. This means that everybody is able to upload any script to your server. They could also manipulate your WebSwift code to distribute malware. You should really consider to secure your server.
So? Swift is not a purely functional language.
Correct me if I'm wrong but how is converting everything to `Any` turning it into a JSON representation?
You can cast any to a dictionary, array, or single value. Valid JSON does not mean it has to be key-value pairs. 
[Valid JSON](https://www.json.org) is a string, `Any` is not JSON.
I don’t think the downvote was necessary. My statement is basically what Crusty advocates in the POP presentation by Apple. You are correct in saying that, unidirectional architectures are only good to a point. At some point you still need to render something on the screen, run a timer, call the network or a database, etc. However, these can all be wrapped so they behave predictably rather than being a haphazard clusterfuck of semaphores, queues, locks, etc. 
There is a iOS style guide that does talk about this specifically and tells you to avoid doing this - https://github.com/Wolox/ios-style-guide/blob/master/rules/avoid-struct-closure-self.md
I'm working on adding location tracking to one of my apps, and GPS drift is really screwing with my results. Sometimes when in poor service areas, my phone will drift half of a mile away. What are some ways I can try and combat this? 
Building user generated UI framework is tricky although it’s actually simpler than creating a thousand screen custom app, one screen at a time :), for obvious reasons - let end users create a thousand screens using a framework you’d design. I’d suggest searching for form builders - these usually have very basic frameworks that are made up from components you’d want (a dnd designer, a layout engine, and a set of components that can typically be created by parsing a user created metadata/json file of some kind). There are a lot of these in JavaScript, although I don’t see any right of the bat in swift, but the concepts are all the same. Here is basic components you’d need: 1) a structure for user created metadata that you’d want to use to describe ui that user creates (typically it’s things like layout of ui, collection of elements, some places to contain user logic - validations, value enumerations) 2) a DND ui for users to create the metadata above - this screen designer would be the trickiest part of this project 3) and ui rendering/processing engine - the framework that takes the user created metadata, parses, and constructs ui. This is actually pretty fun and relatively easy to do. UIKit has plenty of abstractions to be able create these dynamic uis so it shouldn’t be a problem. Hopefully it makes sense and good luck! 
I think his point is that you can modify the reference count on multiple threads, not necessarily the object that’s being pointed to.
[removed]
I know. But Silver (Swift version of RO) is a bit different from the original Swift.
WebSwift is just my personal project. Of course, [repl.it](https://repl.it) does it better, a lot in fact. If you use [repl.it](https://repl.it), there's no reason you use WebSwift. :)
Thank you for your concern. I'll take a look what I can do to sandbox WebSwift.
You have to implement this table view data source method: https://developer.apple.com/documentation/uikit/uitableviewdatasource/1614933-tableview Note that you will need to have more than one section for this to work, but you should be able to modify your existing code to give each table view cell its own section. Then, just use the relevant delegate methods to eliminate the section header views.
Is just the lack of libraries or am I better off using Swift for Linux in a virtual machine until I can get a Mac?
In **UITableViewDataSource** add this method func numberOfSections(in tableView: UITableView) -&gt; Int { return 1 }
is the lack of 'self.' before timerCounter just pseudocode? And can you explain the point of \[weak self\] and guard let self = self? &amp;#x200B; Timer.scheduledTimer(withTimeInterval: 1.0, repeats: **true**) { \[weak **self**\] (timer) **in** **guard** **let** **self** = **self** **else** { timer.invalidate() **return** } **if** **self**.timerCounter &lt; 4 { **self**.timerCounter += 1 } **else** { timer.invalidate() } } &amp;#x200B; Timer.scheduledTimer(withTimeInterval: 1.0, repeats: **true**) { timer **in** **if** **self**.timerCounter &lt; 4 { **self**.timerCounter += 1 } **else** { timer.invalidate() } }
Not just pseudocode, you can strongly capture local variables like that counter, that way you could start multiple timers with different counters. Capturing self as weak means that if nobody else is depending on self existing (like if it got removed from the navigation stack), we don't hold back releasing the memory either. Capturing as weak converts the pointer to optional, so with guard let self = self, we are converting it back to a non-optional strong reference for the scope of our timer block and if that fails, we stop the timer. This way if we later decide to remove the 4 limit, we won't create a reference cycle between our timer and our VC and stop it when it's no longer needed.
I ended up just making all my entries as Sections. 
Like u/Timemc2 says, you need to search for form builders. I've built something similar, but I notice that your description there's some handwaving around technical details. The easiest way to think about it, is to split it up into parts, as follows. Part 1) First you define a JSON description of an app. This description would have labels, buttons, textfields, and action handlers that define what they do. And note, the definition of what they do, is fairly limited. It would have to be simple things like show, hide, store data, etc. (It can't be raw Swift code or anything, or otherwise you'd be recreating Swift playgrounds). Part 2) Create an app that generates this JSON description. This is not hard to imagine. It could be a drag-and-drop thing, or could be a more forms-like approach where the interface is simply a vertical list of UI elements. In any case, as a result it has to poop out the JSON description. Note that you don't have to build this first. You could easily write the JSON out by hand. Part 3) Create an app that READS this JSON description into a data model, and with some sort of UIGenerator class, transforms the data model into a UIViewController. There are libraries that do part of this, for example https://github.com/hyperoslo/Form
Good for you: That's the smart, easy, way to do it.
I think /u/aazav was confused about the sentence; I had to read it back a few times to understand what you're saying too. "This will be review for the vast majority..." -&gt; "This will act as a refresher for the vast majority..."
The closure adds 1 to i.x. Why would a copy of this closure add 1 to copy.x?
Sounds like you want to make Reaktor for iOS. 
Yeah, what I'm trying to do next is figure out how to have '5' indexes, and when someone pressed on the third one, it to section '14' or something along those lines. I just put ," ", in between the sections I didn't need and it works fine, just a little cluttered.
I need to share urls using uiactivitycontroller into sms/mail or similar. the url is pretty long as it has a lot of parameters that are necessary. is there a way to hide the url behind a shorter link name/label or image? &amp;#x200B; what I have in mind is something like the following html example: `&lt;a href="very.long.url?parameter&amp;with&amp;even&amp;more&amp;parameter"&gt;short label&lt;/a&gt;`
The reason I didn't use the term "64-bit runtime" is because the 32-bit iOS runtime uses the same run-time. In fact, when running the iOS simulator, the 32-bit compiled code would be i386 and use the "64-bit runtime."
The code is not crashing because of reference counting. It is crashing because you write with more than one thread to the same memory location. With your code you create more and more instances of class X. If you want to test reference counting you should actually assign the same instance to different variables.
The article was an eye opener for me. I learned a lot about closures in Swift.
Multiple threads writing to the same memory location is never a crash in itself. Why don’t you go read the document I pointed to somewhere else on this thread? It has compiled engineers stating that reference counting in Swift isn’t thread-safe. You won’t encounter issues if the refcount stays above 0. The deallocation path, which is called as a natural and expected consequence of reference counting, is what crashes the program. 
Sounds pretty simple tbh, have an enum that represents the pieces of UI you can make e.g. EditableUI.collection, .button, etc... Wrap the actual UIControl in a class that has details such as size, datasource etc. keep them in an array, make them conform to NSCoder or put the in core data. Donezo
Oh, I did not see this link. Interesting. But still I would not see this issue as part of the reference counting. You have the same issues in C++ with shared_pointers. The reference counting itself is atomic. But if you change the instance within a shared_ptr then you are responsible for thread safety. When I looked at your example, to me it was totally clear that this is not thread safe. If two threads set the reference counter to 0, then both will deallocate the memory.
Thank you, this is the first time I see this mentioned anywhere prominently. I'm highly surprised there are no mentions of this in the official Swift Guide or most of the tutorials I've seen on reference counting and cycles.
I tried this solution, but it does not work. It is true that I can access storyboard, but I get error this class is not key value coding-compliant
this looks like a big move to improving our tools!
Dark side of Swift
\*ambivalent shoulder shrug\*
I didn't downvote you. I really enjoy FP. The thing is this, this has nothing to do with FP, if impure closures are allowed in the language they shouldn't cause an unbreakable reference cycle.
If you're trying to open a storyboard file from a framework, you should specify the framework bundle, not Bundle.main.
No. What I meant is to add copy of storyboard to the app Target and reference that copy form the framework. Copy has design editions
True, I’m not discounting it’s an issue. However, it is an open source language and it hasn’t reached ABI stability yet. In theory someone could submit a bug report and anyone in the community could create a PR to fix it. I was merely saying, if you’re doing FP you’re going to want to avoid impure functions in order to make the important parts of your code testable.
Do you have any information at all about this new IDE? The website provides almost zero info.
I hope this is a nice, fast and lightweight alternative to Xcode.
Hey, just wanted to come back and say thanks again! I dug a little deeper into the topic and found this article: https://blogs.dropbox.com/tech/2016/05/going-deeper-with-project-infinite/ They explain that they tried to use FUSE, but they didn't like its performance. tldr: They created a custom kernel extension. It's a good read for anyone who's interested.
Once the Swift language server protocol takes off I think it’ll be tough to compete with VSCode 
¯\\\_(ツ)\_/¯ 
If you have no intention to create apps for iOS or macOS (or any of Apple's products), I think you're better off using Swift for Linux, either natively or in a VM. Otherwise, a Mac is a necessity.
The solution turns out to be that the package manager was expecting a \`main.swift\` file in its sources. Generating the package using \`swift package init --type executable\` would have created this file, or creating the file manually works. ([Related answer on the Swift forums](https://forums.swift.org/t/swift-5-building-from-package-manifest-resulting-in-error-stating-an-incorrect-number-of-targets-for-executable/18869/4?u=shianiawhite))
I assume you have a backend for your app, right? Why not simply add that function to your backend? Or am I overlooking something?
&gt;next generation IDE &gt; Has 3 buttons in the UI This ain't it chief.
I could do that but my concern is well 1 I am using firebase for backend currently and 2 if this small app still has just say 10,000 users and 100 people report something then I have an inbox filled with 100 reports each of which I must go through with data that is formatted different in each one. Like I was wondering if there was an API or service I could use that would allow reports to come in and be in a nice “neat” order that I can easily see and them take action upon accordingly. Maybe I’m being too picky here but if I could find something like that it would be awesome.
oh, should have 42, right :)
Wow, everybody’s cranky! Xcode’s syntax highlighting breaks every day for me, and it doesn’t meaningfully support plugins. Sublime and VSCode with Swift LSP is nice, but they can’t build &amp; run my Swift projects (that I know of). Having a lightweight editor with plugin support that focuses on Swift projects could be nice and I’m not gonna immediately dismiss this project. 
I'm under the impression that if you implement // tell table which section corresponds to section title/index (e.g. "B",1)) @available(iOS 2.0, *) optional public func tableView(_ tableView: UITableView, sectionForSectionIndexTitle title: String, at index: Int) -&gt; Int then the selection and scrolling happen automatically.
Here is the missing step https://forums.swift.org/t/how-to-set-swift-version-5-for-recent-dev-snapshots-in-xcode-build-settings/18692/20
I don't know if this is a small question but here: &gt;**import** Foundation &gt; &gt;**import** RealmSwift &gt; &gt; &gt; &gt;**class** Parent: Object { &gt; &gt;**@objc** **dynamic** **var** category = String() &gt; &gt;**var** containingChildList = List&lt;Child&gt;() &gt; &gt;} &gt; &gt; &gt; &gt;**class** Child: Object { &gt; &gt;**@objc** **dynamic** **var** name = String() &gt; &gt;**var** parentCategoryIs = LinkingObjects(fromType: Parent.**self**, property: "containingChildList") &gt; &gt;} &amp;#x200B; I was wondering what use does the ""property"" from Child class do? It seems to link to the variable in Parent class but isn't ""fromType"" all we need to know which type it belongs in? &amp;#x200B; &amp;#x200B;
Interesting, I will mess around with this and report back. Will I have to make new public functions for different index lists?
???
You are implementing a delegate method of UITableViewDataSource. UITableView will call it when the user taps and or pans in the index strip. The method just has to return the truth. In my apps, I just set the index strip to an array of all the sections, and let UITableView thin it out to the ones it wants to display, so my app just returns `index`. But, I'm doing something like the Contacts app, where I can just return the first letter of the section title.
Would you be willing to post an example code so I may see how you implemented it?
Here's every bit of the code that mentions SectionIndex. - (void)viewDidLoad { [super viewDidLoad]; [[self tableView] setSectionIndexMinimumDisplayRowCount:20]; [[[self searchDisplayController] searchResultsTableView] setSectionIndexMinimumDisplayRowCount:20]; [[self tableView] setShowsVerticalScrollIndicator:YES]; [[[self searchDisplayController] searchResultsTableView] setShowsVerticalScrollIndicator:YES]; } - (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView { NSMutableArray *a = [NSMutableArray array]; for (int i = 0; i &lt; sectionsCount_; ++i) { [a addObject:[NSString stringWithFormat:@"%C", sections_[i].label]]; } return a; } - (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index { return index; } 
Are you trying to do this at compile time? 
Looking forward to Swift LSP in Sublime myself. VS Code is a nice project but Sublime’s speed low memory footprint and is hard to say no to. Sublime also conforms to several macOS UI conventions that VS Code doesn’t.
swift's LSP in github has un-annouced vscode plugin written by apple that is pretty decent. I too fail to see what is so "special" about a textedit field with tabs.
need to ask Marcin.
I hope so too!
Swift devs still don't understand this?
If you don't prevent logging in production, you can tether the compiled, live App to a debugger and get the console printouts, widely considered to be a security vulnerability. 
Whys it not open source? Would love to contribute to something like this 
I can’t imagine that an employer would penalize you for having unfinished projects on your GitHub profile. Same with having outdated code. In fact, showing that you are willing to follow tutorials to learn new skills demonstrates that you’re self-sufficient and hard working!
MLImageClassifier is for building models. To actually run the model and get predictions from images I make a VNImageRequestHandler and look at the VNClassificationObservation objects that come back. In there you get an identifier ("cat" or whatever) and a confidence (0.8 or whatever). &amp;#x200B; I used [this sample code](https://developer.apple.com/documentation/vision/classifying_images_with_vision_and_core_ml) to get started. My simple code, for macOS, is written up [here](https://blog.marxy.org/2018/12/a-failed-attempt-to-recognise-postie.html). &amp;#x200B; &amp;#x200B;
It really helps to have good readme files for your repos to give context. For example, a readme with a quick “this was for course X to solve problem Y”, or “experimental app to learn about Z” goes a long way. 
Do they not proofread and edit these articles? It’s so painful to read grammar like this.
I think there is a huge misunderstood with Paul Hudson's posts. He perfectly told the advantages of the Swift, but there are no negative opinions for the guy who is currently asked that question. But I have to say that clearly, as experienced both React Native, Swift and a little bit Flutter, the best way for developing iOS is to use Swift (native way). For example, if you want to make huge changes on navigationBar your item in React Native, you will probably fight a bunch of tutorials &amp; difficulties, but in Swift or even OBJC everything is such a clear and described. So go native :)
I don't think people are cranky. I think people just want to see big claims substantiated. That's not a huge ask.
Complete newcomers mightn't if they've never used a language with syntactic sugar to deal with nullable values.
And? Anybody can contribute, and Apple can accept anybody's contributions.
&gt; Share new “amazing” IDE. &gt; doesn’t know features Boy oh boy
I would say having an active profile would definitely help you stand out and would be viewed positively as it will give them the opportunity to take a look at some of the projects you’ve worked on, and also demonstrate that you have some experience with git. There’s a lot of applicants out there that might not share their profiles out of fear of “not being good enough” or whatever excuse, etc. Sharing your profile will definitely put you ahead of others if the employer takes time to look at your projects and see that you’re learning/growing as a developer so I’d definitely encourage it!
I had the idea of expressing all my backend endpoints in a single enum, and it grew from there. I'm using it in a project at the moment and have been really happy with it so decided to publish. 
Can't stop working on SwiftObserver, a framework for reactive programming and dependency inversion... what a weird obsession 🤔 [https://github.com/flowtoolz/SwiftObserver](https://github.com/flowtoolz/SwiftObserver)
I haven't ever delivered a single forced unwrap. Not in commercial apps, not in open source frameworks. To make your life easier and your code safer: Just don't use `!` in that way.
Employers have different criteria when hiring people but where I work we try to hire for attitude rather than skill, esp graduates. Skill can be acquired, attitude not so much. Sharing your work openly is a good attitude imo.
At first glance it looks a bit like [Moya](https://github.com/Moya/Moya). I found that in large scale complex apps the single enum got a bit cumbersome, but it’s a pretty sweet framework.
Looks pretty clean, I'll have to dig into it a bit deeper and test it out. Thanks.
You should (almost) ever use `sleep` in an iOS or macOS app. When you call that, you're putting your current thread to sleep. If you're on the main thread, that means your UI won't update until the thread wakes back up.
&gt; Sublime and VSCode with Swift LSP is nice, but they can’t build &amp; run my Swift projects (that I know of). To achieve the same you can see on the website of the "next generation IDE" you basically only have to teach VSCode/Sublime to run "swift build" and "swift run" in your current working directory. 
Totally off topic, but my two cents as an iOS developer and sometimes hiring manager for other iOS developers. This is just what we look for, so ymmv. We don’t generally look at git repos. For developers with more experience, we’re interested in shipped apps in the store. For recent college grads like yourself, we’re looking for knowledge of the language, reasonable architecture skills and decent API/platform experience. Secondary skills/experience such as Sketch or working with analytics is also great. Communication skills is an excellent way to differentiate yourself. That’s email, text, phone conversations and on-site interviews. It also helps if your email is actually your name or something close to it.
Flying by with an opinion, i think it comes down to whether you like verbose or terse languages. Objective-c there's much more typing (ie code completion tabbing) but the results are subjectively much more elegant, more natural, and can be read like pseduocode. There's also a huge factor of alot less stuff being done automatically for you via the compiler.. which you could read a negative but has a huge inverse positive of not having to know that its going on before you start (because you have to type it). Swift.. well, my opinion is its great if your background is a web developer and started your adventure via some scripting language. Its basically what you know extended. But if you've had the pleasure of the joys of oo being drummed into you at university and any time working with java.. objective c is sexy! Also apparently swift has bombed in the tiobe programming language ranks.. objective c is a few ranks ahead of it. guess people aren't actually using it apart from influncers and apples conferences as much as people like to think.
Auto layout?
I use very similar approach but instead of one endpoint Enum I create Enum for each segment like CustomersEndpoint ArticleEndpoint etc. maybe it’s more complex approach but when single endpoint has 10-20 methods its more readable
Hey! I meant to reply to this yesterday but forgot. This looks really neat. I don't know a lot about 3D graphics but I've played around with Magica Voxel. When I was messing with the app, I made a voxel model and managed to export it and load it into SceneKit. I think I used something standard like .obj. Is there a reason to use .vox over .obj? Or did you just build it for fun? Either way, really cool and interesting code - I haven't seen much low level stuff like this in Swift. Also, could https://developer.apple.com/documentation/modelio be used to do this too?
Playgrounds... have issues. That said, it’s always good to check the console and see if it failed to compile. The console is displayed in a pane along the bottom of a window, and it’s collapsed by default. Sometimes code fails to compile or crashes when run, and the errors are displayed there. Good luck
Probably the iOS Simulator has crashed (Playground uses iOS Simulator under the hood if you choose iOS as the platform, and it often crashes). If you are not using any iOS specific stuff and just using Swift, I recommend creating a new playground and select macOS -&gt; Blank as the template. Like this : https://imgur.com/a/DUHAqay You can also long press the 'Play button* below and select 'Manual Run', then it wont auto compile and run after each keystroke, this make it crash less often. 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/MMyZ6pa.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Does it work on Windows, Linux, Android, and iOS? A next-gen IDE should be everywhere its devs are
I have started to learn swift :)
Apple can, but they don't have to. They carefully choose whose contributions to accept. That's how this works and that's why Swift isn't a compete train wreck. I'm not saying this was handed down from on high as the Word of Tim Cook, just that Apple has sanctioned a way to compile Swift on Windows... Didn't think my surprise would be this controversial
Do you mean https://swift.org/blog/ ?
Working on bugs and feature requests for my Apple Watch tennis app that this kind stranger from France requested in an email: https://github.com/AustinConlon/Deuce-iOS-watchOS/issues. He also volunteered French translations for every string, so I'm working with localization for the first time. In addition, I'm self-studying algorithms and data structures through MIT 6.006 on OpenCourseware.
Yup. Wondering if they just switched blog sites or are still committed to the old one, haven't seen Apple address this.
Thanks, I hadn't heard of Moya, it does look very similar. I opted to encapsulate all the endpoint data (path, body etc) in a single structure so the setup requires only one switch statement (in Moya it looks kind of a mess: [https://github.com/Moya/Moya/blob/master/docs/Examples/Basic.md](https://github.com/Moya/Moya/blob/master/docs/Examples/Basic.md)). I'm not a fan of returning an enum in the response closure as the consumer is required to write a switch statement which increases boilerplate. Also Moya does not seem to have JSON encoding/decoding built in as a default but I might be wrong about that(?). Moya also leans on Alamofire and supports Reactive extensions which GoldenRetriever does not (no dependencies). It certainly seems like a great library with some nice features but I've made some different decisions around the syntax which cuts down the boilerplate significantly.
This is a good idea, there's nothing stopping you from creating as many endpoints as you feel is best to split your code.
I prefer Sublime too. It’s nice
Swift is abandoned... Obj-C is back in the game, baby! :'D
🧐
Most voxel engines use .vox and use their own renderer and meshing systems (look up greedy meshing) to get optimal geometry out of the model. Thus, the .obj format isn't needed and would be a hinderance to their workflow. I have another project I'm currently working on that takes the imported model and remeshes it with ambient occlusion and smooth lighting, using OpenGL. I made this because it's satisfying and voxels are a good way to get started with your own world-building without needing to hire a professional artist and spending 100s of hours modeling/animating/texturing. There is a purity to it that I like.
Finishing off an iOS app for https://ticketsamaritan.uk
A girl can dream 
I heard that both Swift and Objective-C are out and that soon all programming for Apple platforms will have to be done in Java.
nah, they are switching to Flutter! *the Flutter jobs are coming!!!*
😂 please jokes aside
As an aside, a new TestFlight feature is that you can generate a link for people to go to for joining instead of relying on email invites. 
Doh, that's true - I'd not thought of that! I'll remember for next time - thank you :) 
Swift is not just abandoned, it's deprecated &gt;_&lt;
This is confirmed by the fact that I was just on App Store Connect and saw "webobjects" in the URL.
Apple never stopped using WebObjects. Pretty sure the websites still run on Solaris servers. Oh wither the Swift port of WebObjects!
Report as spam and move on, Flutter spam account.
When Swift was open-sourced, [the new blog's first post in 2016](https://swift.org/blog/welcome) made it clear that the then-new swift.org was the new home for everything Swift — since it stopped being an Apple-only project and became merely Apple-directed. I don't think they had to specifically address where the blog was; that was rather clear once the project moved to swift.org two years ago. 
Thanks! That's exactly what I needed. I ended up [writing a whole post](https://learningswift.brightdigit.com/swift-5-0-xcode-10-1/) on how to do it.
Don't believe you can use autolayout with the keyboard. Correct me if I'm wrong.
I was thinking of pinning it to the top of the accessory view
I tried that, I basically get an error saying it's not available.
XCode is a total horrorshow of an IDE. I've been fighting *all day* against constant storyboard induced IDE lockups. A problem thats been around since XCode 6 and now its XCode 10 and storyboards are still IDE killers. And its not just my old machine. Last job I had, we where on iMac Pros with 48gig ram, and even they'd lock up on storybords from time to time. All of which is doubly annoying because I'm TRYING to complete a job interview task that was due in about 5 hours ago :(
I second that. RayWenderlich.com is good too. 
*opens swift project* Xcode: half your project is **deprecated**
Good job on naming of the library... 🐕 
Try using a container UIView that has the main toolbar within it, and then when a button is pressed add the other UIView within the container view.
You forgot to add the "script" part of the name. Everything is turning into Javascript. How is it that the most popular language is the only one I know of that is logically inconsistent?
Uhhh, [this post is two *months* old.](https://swift.org/blog/swiftpm-repl-support/)
I think that it has simply been moved: https://swift.org/blog/
This might be explained by Sturgeon's law.
Early Mac OS X days Java was on par with Objective-C for Cocoa development until they consolidated on Obj-C as the main language.
Yes, along with the Xamarin and the PhoneGap and the Ionic jobs.
Great news! I really miss the square bracket mind fuck.
Xamarin wouldn’t be bad.
&gt; Moreover, whenever you wanted to modify the structure of your database, you had to write migration code so that your users’ data would be upgraded to fit the new structure. Wouldn’t it be nice if your database just did all that for you, automatically? That was what we thought when we designed ObjectBox. It'd be nice if my database wrote my application and deployed it and emailed my customers to tell them about the new features, too, but all of these problems are AI-complete. It's not clear from the minimal documentation but it sounds like ObjectBox only handles the most trivial case (add one field) automatically. For the other 99 kinds of migrations we do every day, we still have to write it ourselves, and ObjectBox has no system to help with those. You're still going to need to write or find/integrate a migration system yourself by about day 2 of your project. &gt; ObjectBox thinks the way a Swift developer does: You take your objects and stick them in a box. And when you're confused about how something works, you read the source co...oh, no, you can't do that. You should probably tell your marketing team to not try to translate a simple and well defined sentence like "ObjectBox has a Swift interface" into meaningless bullshit. // objectbox: index var name: String Aw **hell** no. A poorly documented DSL, embedded in comments, to declare indexes? That's a disaster waiting to happen. I don't even know what this means, and the documentation doesn't say. Is the index case sensitive? Is it diacritic insensitive? What type of index does this create? What queries will it help? Can I put it on the same line? Can I put another comment in between? Can it be a block comment? Does it have to be the only thing in that comment? Then every time we rename a field, I'm going to have to add and maintain this comment until the end of time? // objectbox: nameInDb = "USERNAME" The documentation for this is great, too: &gt; This allows you to rename the Swift field without affecting the property name on the database level. Note: To rename properties and even entities you should use @Uid annotations instead. This feature lets you do this! Here's what it's for! But never use it for that! 
Is there an easy way to use NPM modules with Swift code for an iOS app ?
thanks for the reply
thanks for the reply
thanks for the reply
Hi speedy\_999 - seems like you registered just today... Maybe this is a throw-away account? Fits in very well with your destructive tone. Hope we can continue more constructive or at least objective. So, let's see. &amp;#x200B; \&gt; ObjectBox only handles the most trivial case (add one field) automatically It's adding and removing fields and entities. During app life cycle this is the typical "migration" (90% of the cases according to my experience) &amp;#x200B; \&gt; You should probably tell your marketing team to not try to translate a simple and well defined sentence like "ObjectBox has a Swift interface" into meaningless bullshit. Seriously? 1) written by devs 2) "ObjectBox has a Swift interface" doesn't even make sense 3) languange &amp;#x200B; \&gt; A poorly documented DSL, embedded in comments, to declare indexes? That's a disaster waiting to happen. It's not a DSL. It's just trivial "annotations", and those are working very well. &amp;#x200B; \&gt; Then every time we rename a field... Actually, you found something real here. "nameInDb" rather slipped in; this uid thingy is preferred. Finally, a little detail we can improve on. Thank you. &amp;#x200B; Honest question: why are you so hostile? Is there anything you have seen you like about ObjectBox? &amp;#x200B;
it's read only. and it can't read computed properties or optionals.
They are placeholders in the interface builder only. You must draw an IBOutlet to a class and assign them a value. 
You may have customized the prototype cell in either code/storyboard and not rectified the other.
You have to set the notification center delegate before appdelegate's didfinishlaunching returns.
There is already a pretty active Swift discord going on at Swifttalk: [https://discord.gg/Dj7tWv](https://discord.gg/Dj7tWv) What would make yours any different?
I’m gonna side with them on this one. I’d like to meet the dev that WANTS transparent trivial migrations. 90% of the time migrations might just be adding properties or entities, but that other 10% they have to write real actual migrations. And honestly I’d rather have a place that ALL migrations live so that I can 1) see exactly what data migrations have occurred (especially in the case of generator bugs), and 2) Can look at the change to the schema easily via Git 12 months down the line. Programming should never be “magic” as far as I’m concerned, you should have helpers but everything should be explicit and opaque.