&gt; Ever wondered how your favorite apps are able to generate an image using your initials? Do these developers sit at their desks creating actual images all the possible 1-2 letter combinations? I have the feeling he went from one wrong believe to the next wrong believe. Why would one create an image with two letters? I'm pretty sure apps just add a UILabel as a subview to the UIImageView that is used to display the user image. And when there's no user image the apps create the initials locally. Basically doing what he is doing in his imageWith(name:) function but in the actual user interface. 
There are multiple ways to do everything, this is one solution. I personally don't see any reason to be rude, but that's just me. 
Sorry if I came through as rude. Even more so if you are OP and I caused you to delete the thread. That was not my intention, I just wanted to offer some sincere advise. A lot of possible solutions make little sense. And storing two letters in an image is one of these things. Depending on what exactly is done with these images it will even lead to a bad user experience. For example if you treat them as actual user images. Let's say a guy named Flucht (first name) Punkt (last name) doesn't add a user image in your messaging app. So you create an image with FP on his behalf. That image is then treated like a regular user image, you upload it to your server and make it available to other users. A friend of Flucht Punkt now downloads your app and adds him. In the settings of his phone he configured the display order of names as "Lastname, Firstname". That's why he expects that the initials read PF, but since you created a user image on behalf of Flucht Punkt he still sees FP. Try it out on your iOS device. Open the contacts app, select a user that has specified first and last name but has no image. Then go to Settings.app into the Contacts section and change the display order. Then return to the Contacts app. Et voila. The initials have changed. That would not be possible if Apple would create ad-hoc user images that are transferred to others. 
Check out SimpleMDM
That sounds like it'd work, but my deployment was direct to a few dozen devices.
Check out Disk, a framework for persisting structs to the file system: https://github.com/saoudrizwan/Disk
That is correct. You can also use hockeyapp or fabric beta to distribute it. Which will make the process easier for you and users. 
ref: https://stackoverflow.com/questions/29465205/how-to-add-minutes-to-current-time-in-swift import Foundation let calendar = Calendar.current var iniDate = Date() var endDate = calendar.date(byAdding: .minute, value: 300, to: iniDate)! while iniDate &lt; endDate { iniDate = calendar.date(byAdding: .minute, value: 30, to: iniDate)! print(iniDate) } \* Tested on the Swift Sandbox by IBM: https://swift.sandbox.bluemix.net http://swift.sandbox.bluemix.net/#/repl/597dd3e74b56e61c75091564
Thank you! I found a simple solution that solves this and just pushed it.
What's the error it's giving you?
Hey! This is what it looks like, working with local var: https://ibb.co/kzvZEk failing when using a property: https://ibb.co/cHpi75 
As far as I can tell the syntax looks wrong. `self.targetURL` isn't a valid variable name as far as I'm aware, and the `guard` statement tries to assign a non-optional value to a new variable. Also I'm seeing 2 ending parentheses? Try this var targetURL: URL? init(withURL url: String) { super.init() guard let target = URL(string: url) else { Logger.logURLIssue(url) return } targetURL = target } Does it work?
Thanks, you were right about the two parentheses (a mistake in my post here but not in the actual code). The above does work, but why can't I assign directly into my variable rather than use temp vars? Surely it makes more sense?
It actually does make sense. Consider writing a proposal to swift evolution?
When you use `let` it's trying to declare a local variable. You can't do that because `self.targetURL` is a property. So either set the URL after unwrapping it with `guard let`: init(withURL url: String) { guard let unwrappedURL = URL(string: url) else { // Logger... return } self.targetURL = unwrappedURL } Or since targetURL is optional, set it then log if it's nil: init(withURL url: String) { self.targetURL = URL(string: url) guard let _ = self.targetURL else { // Logger... return } }
I'm trying to find the commit, but I can't find it. Would you be willing paste a link to the commit? 
Sure, do I just go to Github and do it?
thank you!
Well, I'm not even sure how the process works honestly. I'm not sure if it'll be accepted as a single proposal even, as all of the proposals I've seen have been text-heavy (though I'm not sure if that's a requirement).
Ok, thanks for the help :)
You're right, I quickly reverted it since it broke some more complex code I had. :| Sorry! The problem I had was that adding synchronous-like routes to the async web server would make the calls ambiguous. And I fixed that by making Response Representables a "fake" type of future, thus making it a valid `Future&lt;Response&gt;`. However, the problem I then faced is that Swift found statements becoming too complex and needing explicit declaration of the response type, thus making `Future { "response string" } the better solution in the end.
Would you mind joining slack? I'm interested in your opinion regarding the possible solutions I have in mind. I agree that making this 100% async is the best way forward.
I'm not really sure how that helps me
edit 2: Turns out this is not the issue, the actual reason is quite interesting. ---- The error you should be getting here is ‘protocol can only be used as a generic constraint because it has Self or associated type requirements’. The `associatedtype` or `Self` requirement must be declared in Codable, which your protocol inherits from. A web search should find you more information about this error; I'm struggling to find one page which provides a good summary. edit: Here's an explanation from StackOverflow: https://stackoverflow.com/questions/39338692/why-do-i-get-the-error-protocol-can-only-be-used-as-a-generic-constraint-beca
The reason you get this is because the `encode()` method is declared as `func encode&lt;T : Encodable&gt;(_ value: T) throws -&gt; Data` That means that the value you pass in must have a concrete type — it cannot be an existential (like `let value: Encodable = 5; try plistEncoder.encode(value)`). When you declare your method in the same way, you are also passing in a value with a concrete type (instead of an `EncodableObject` existential), so it works.
`Codable` doesn’t have any associated type or `Self` constraints, so this isn’t actually the issue.
`Codable` is a combination of `Encodable` and `Decodable` so you should look into those.
Interesting. I don't really understand why an existential type couldn't be used, instead of a concrete type, but I assume that has something to do with how `encode` is defined by the Swift team. Thanks for the explanation!
Yes, but neither `Encodable` nor `Decodable` have associated type or Self constraints, so `Codable` doesn’t either.
Are you saying you don’t understand why it’s not possible to use an existential type instead of a concrete type, or why `encode` was written this way? If the former, you can see this with a smaller example: protocol P {} extension Int : P {} func foo&lt;T : P&gt;(_ value: T) { print(value) } let i1: Int = 5 let i2: P = i1 foo(i1) foo(i2) // can’t do this If the latter —
After they install, they have to go to setting/general, scroll down select something like "profiles" and hit trust This trust will last until all programs from that vendor are removed 
How much thought have you put into design/UX/UI?
Not so much to be honest, but I have tried to at least have some graphical elements. But this will never be the final version it is more to see if I'm capable at all:) But please what did you have in mind?
Honestly, it doesn't. First of all the syntax would not be `guard let self.foo = bar else`, because let declares a new constant. The syntax would be `guard self.foo = bar else`. And that will never make it into Swift. Because that would make both `guard self.foo = bar else` and `guard self.foo == bar else` valid code. In languages where both variants exist, many people consider assignments in conditions a code smell that should be avoided. This construct has lead to so many bugs that nowadays compilers even warn about using assignments in conditions, and then you have to place that whole thing in another set of parentheses. Swift won't copy that behaviour. 
Yeah, the second was what I was referring to. I didn't even think about the = and == difference, so I guess you're right. 
At this point (where you have a good bit of functionality complete) I would dive head first into design. The first resource I'd recommend is Apples Human Interface Guidelines. Then watch some WWDC/YouTube videos on animation. It's my belief that you can make the simplest app in the world (a calculator, for example), and it it's designed well, and *feels* good (that's where animations can help) then people will keep coming back to use it 
Xcode supports custom themes as well, here's a place to get you started: https://github.com/hdoria/xcode-themes
Trust me, I could agree more. And this is a natural step (To be frank, normally I would start off with Design first). But since I have been making webpages since for more than 20 years (as a hobby) I would be able to rethink that. This is more of a: "Im I even able to program on IOS", have tried a few times before without succedding. Now the firebase aspect is adding extra complexity, and I just think that since I dont have the experience, I dont see how it should be done. So I would love if someone could have a glance at the app from the url I posted. 
It was the latter. That makes a lot of sense, thank you!
You really should use an MDM to distribute the app, asking users to go to Settings and trust a developer is terrible user experience. How many users will you deploy the app to?
We automate Jenkins builds to deploy to Fabric. 
The problem you are seeing is that protocols do not conform to themselves. The only way this will work currently is if you use a constrained generic placeholder instead.
I do not see why you would upload anything to the server that you don't want to. I'm my app I have a chat feature and if it is pulling the Flunct person it would check to see if there was an image. If so it displays that if not it instantly creates it in whatever order you want. And just displays it in the absence of a proper picture. .. As to someone getting confused to FP vs PF having it be a label vs image would "look" exactly the same ... I've found numerous posts on people using similar code to create a custom class ... I agree you could do what you said, I can think of another. I thought this was a cool solution to something stupid I had done before (actually creating letter images ) Edit...I don't know what just happened it added some weird text to this 
The `let` syntax introduces a new, temporary variable that only exists if it takes on a non-nil value. In an `if let` statement, the scope if the variable is the body of the if statement, while in a `guard let` statement, the scope of the variable is _after_ the body of the guard statement. It's necessarily a temporary variable because of that limited scope. Since your `targetURL` is already optional, you could rewrite this to avoid using a `let` statement entirely: init(withURL url: String) { super.init() targetURL = URL(string: url) if targetURL == nil { Logger.logURLIssue(url) } } I removed the `return` statement because your example didn't have anything after it.
I understand there are multiple ways to do things in programming. This solution is not the only way, it might not even be the “best way” but I found it fun and if it helps somebody else ..great. To note: I would not upload the generated image to a database, I would only use this if there was not an actual proper image. I apologize if the images are too small for some people. If you feel you can optimize the code...please feel free to contribute to the GitHub repo ... https://github.com/mattmega4/ImageFromTextTutorial
A mentor of mine, who is an incredibly accomplished computer scientist said the following: "The only book you need to read is the SICP. 95% of professional programmers can't do this stuff. If you can do all the exercises in this book you can crush any coding problem with your brain vice." I've only finished the first chapter of exercises and it's already changed the way I program in amazing ways. If you're serious about software development there may be no better repository of fundamental knowledge. The main website is here: https://mitpress.mit.edu/sicp/ And there is an beautifully formatted and readable HTML version here: http://sarabander.github.io/sicp/html/index.xhtml 
A few things. In your initial example you say you are expecting 11:30. What about 11:45? If 12:15 is a valid slot, 11:45 should be one too, shouldn't it? And you should write some unit tests for your method. Because it does not work. Put the data of your initial example in and see for yourself, the output will be 0. Because when both dates you pass to `calculateAvailableSlotsBetween(_:and:)` are equal you are calculating (0/60 - 30)/30, which equals -1. In this case it neutralises the 11:30 appointment. If there would be no available appointments at all your could would then calculate -1 available appointments. Then change the existing appointment in your first example to 10:30, 12:15, 12:45, 13:15. If we use your requirements that new appointments can only be scheduled at :00 and :30 one would expect 10:00, 11:00, 11:30. Your code outputs 2. In both cases the problem is that you treat your opening date like the start of an appointment. But the opening date is actually the end of an appointment, the 30 minutes following the opening aren't actually blocked. Your code also doesn't handle the requirement that new appointments have to start at :00 or :30. If you have an appointment at 12:15 and one at 12:45, your code shows an available slot. ---- I played a bit around with the problem and I came up with this solution that tests each of the theoretically possible slots. It calculates the start and end of each scheduled appointment and each proposed appointment. And then checks if the two intervals overlap. There are probably better algorithms than this, I can't come up with one though. I haven't tested it thoroughly, so don't use it without writing sufficient unit tests first. I don't want to be responsible if your customer misses all his appointments on the day daylight saving time gets activated because the code fails in that case. //: Playground - noun: a place where people can play import UIKit func date(withDay day: Int, hour: Int, minute: Int) -&gt; Date { return DateComponents(calendar: Calendar.current, year: 2017, month: 7, day: day, hour: hour, minute: minute, second: 0).date! } let openTime = date(withDay: 30, hour: 10, minute: 0) let closeTime = date(withDay: 30, hour: 14, minute: 0) let currentAppointments: [Date] = [ date(withDay: 30, hour: 10, minute: 0), date(withDay: 30, hour: 10, minute: 30), date(withDay: 30, hour: 11, minute: 00), date(withDay: 30, hour: 12, minute: 15), date(withDay: 30, hour: 12, minute: 45), date(withDay: 30, hour: 13, minute: 15), ].sorted() let openMinutes = Calendar.current.dateComponents([.minute], from: openTime, to: closeTime).minute! // durtation of one appointment in minutes let appointmentLength = 30 // minutes. change this to 30 if you only want to be able to schedule at :00 and :30 let appointmentInterval = 15 // create a list of all appointments that would be possible throughout the day, regardless of actual availability var possibleAppointments = stride(from: 0, to: openMinutes, by: appointmentInterval).flatMap { Calendar.current.date(byAdding: .minute, value: $0, to: openTime) } // check which of the theoretic timeslots aren't available and remove them from the list for possibleAppointmentStart in possibleAppointments { let possibleAppointmentEnd = Calendar.current.date(byAdding: .minute, value: appointmentLength, to: possibleAppointmentStart)! if possibleAppointmentEnd &gt; closeTime { // if the appointment would end after closing time, it's obviously invalid if let appointmentIndex = possibleAppointments.index(of: possibleAppointmentStart) { possibleAppointments.remove(at: appointmentIndex) continue } } for existingAppointmentStart in currentAppointments { let existingAppointmentEnd = Calendar.current.date(byAdding: .minute, value: appointmentLength, to: existingAppointmentStart)! // see https://stackoverflow.com/a/5601502 for a list of relations between two interval. We are interested in "overlaps with" // // a interval overlaps a second interval if // - the interval starts earlier then the second intervals ends. And // - the second interval starts earlier than the first interval ends if possibleAppointmentStart &lt; existingAppointmentEnd &amp;&amp; existingAppointmentStart &lt; possibleAppointmentEnd { if let appointmentIndex = possibleAppointments.index(of: possibleAppointmentStart) { possibleAppointments.remove(at: appointmentIndex) break } } } } let df = DateFormatter() df.dateStyle = .none df.timeStyle = .short df.locale = Locale(identifier: "de_DE") let appointmentStrings = possibleAppointments.map { df.string(from: $0) } print("Possible appointments: \(appointmentStrings.joined(separator: ", "))") Results: Possible appointments: 11:30, 11:45 ---- And if I run my code with the data from your "solution" and slots possible at :00 and :30 (i.e. `let appointmentInterval = 30`), I end up with 12 dates: 08:00, 08:30, 12:00, 13:30, 14:00, 14:30, 15:00, 15:30, 16:00, 16:30, 17:00, 17:30 One more than the 11 you expected as correct answer. Again because your code treats the open date as the start of an appointment, so it calculates that there's just one available slot between 08:00 (opening) and 9:00 (first scheduled appointment). Write those unit tests. Because you were totally okay with 11 being the correct results. 
It would be better to create a Book class as a collection of Appointment class with properties like time, available, name, etc. so you can manipulate them at your convenience. Take the time to refactor your data before refactoring your code.
 guard let thing = optionalThing else { // failure code } // success code translates to if optionalThing == nil { // failure code } else { let thing = optionalThing! // success code } You're trying to write let self.targetURL = URL(string: url)! It does not make sense to use let there, so it won't work. Try self.targetURL = URL(string: url) guard self.targetURL != nil else { Logthing; return } 
I wish Swift had comprehensions for this reason. Also, "permute" is the wrong term. A permutation is mixing items of a set amongst themselves. Not generating the unique pairings of items from two different sets. 
(whoops, iOS app wasn't showing me the whole comment) Yes please, re: comprehensions in swift! Destructuring and comprehensions are my two favorite aspects of clojure, and swift has half of one and none of the other. Also, yeah. After the fifth time of writing "all the unique permutations of two sets" I gave up and went with "permute". I'm sure there must be an actual term for what I'm talking about here. Any idea what it is?
&gt; Try &gt; &gt; guard let url = URL(string: url), self.targetURL = url else { Logthing; return } Won't work. Fortunately Swift doesn't allow assignments in conditions. 
Oh oops, I forgot! I don't work with Swift anymore! Fixed.
Example of next steps: When you delete a challenge it also need to delete the attached tasks which is stored in a seperate node in firebase. How would you do that?
Yes and it's working well. You can generate app installer (ipa) from Xcode, use Archive to make a build, sign it with a proper developer certificate (also Xcode can provide a plist which you will need for itms:// link), upload file to internal web resource (keep in mind, it must be https) insert itms:// link to plist and it's done. Read official documentation for more details: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/DistributingEnterpriseProgramApps/DistributingEnterpriseProgramApps.html
Do yourself a favor and diarise the expiration date. 
We have 3000 associates but we think we will have 500-700 unique downloads. I will search what is MDM
I joined now, though I'm not sure how much time I have to help you. These days I feel a bit swamped by my own work.
Ordered pairs
I can highly recommend [this]( https://developer.apple.com/wwdc16/220) 2015 WWDC talk. It also comes with sample code for a fairly advanced drawing app. 
I finished my macOS app, Lungo. It's a menu bar app that keeps your Mac awake. https://blog.sindresorhus.com/lungo-b364a6c2745f
If you guys have an agreement with Microsoft, like the EMS, you can use their MDM for free
I've considered writing a micro-library that would implement comprehensions and calling it just that something just like that func comprehension&lt;A,B,C&gt;(of first: [A], and second: [B]) -&gt; [C] Though, TBH, I haven't thought enough about how to make it generic over an arbitrary number of `Sequence`s. IE is there some mechanism to make the generic argument an arbitrary tuple? func comprehension&lt;A,B&gt;(of arrays: A) -&gt; [B] where `A` is `([Int],[Suit])` and `B` is `String` where the operation is to map `1...13` and `[.heart,.spade,.club,.diamond]` to `["Ace of Hearts ...]`. EDIT: Turns out `A` can be a tuple, but it lacks type information to do anything with it. func comprehension&lt;A,B&gt;(of arrays: A) -&gt; [B] { // there's no protocol/struct/class/enum that corresponds to a tuple so you can't do anything here... 
Hey, I'm trying to get a better grip on your advice as I'm new to this stuff. Additionally, the other replies I got suggested that I build a full backend. What would be the pros/cons of querying YouTube for a list of new video IDs, storing them in a DB, and hitting that DB every time a user opens the app, VS. setting up a proxy w/ caching as you suggest? Thanks! 
Hey, I'm trying to get a better grip on your advice as I'm new to this stuff. Other replies I got suggested that I avoid building a full backend, and just set up a proxy w/ caching. What would be the pros/cons of querying YouTube for a list of new video IDs, storing them in a DB, and hitting that DB every time a user opens the app, VS. setting up a proxy w/ caching? Thanks! 
I tried building a sample app, and even though the storyBoard editor shows the caution symbol, the app still works: I connected the view to the NSViewController outlet first, then changed the type of the view controller to the correct type in the Identity inspector. I proved that it works by setting a breakpoint in initWithCoder of my custom view and verifying that the breakpoint is hit. I believe the problem is caused by the text of AUViewController.h in the CoreAudioKit framework: it uses #if to use a different base class for iOS and macOS, an I think the #if confuses the XIB editor.
I believe they are kinda suggesting the same thing, setting up a service with request caching, I haven't personally done and backend, just work with them and the people that do make them a lot. Request caching sounds fine if it expires every hour/day at the frequency you need
This is how closure capture works. It prohibits captured object(enclosing function with captured property) to be released until execution flow leaves the scope or ARC 'states' growBy() wouldn't be called anymore.
Looks great, am going to check this out when I get home!
 return UIGraphicsImageRenderer(size: frame.size).image { nameLabel.layer.render(in: $0.cgContext) }
OK. I haven't done it so I'm just not sure. I'm used to putting data into a database haha. I don't know if there's an advantage to caching it ..
Your links appear to have gotten messed up some how. I think some of the characters have been Uri encoded incorrectly.
Closure capture, under the hood, is interestingly tricky. I haven't looked into all the details of how Swift does it, but I can explain how ObjC does it, and it should be approximately the same. While the function that makes the closure is on the stack, everything behaves as normal: the variable is on the stack, and the closure references it. In order to return the closure though, you have to copy it to the heap, and it creates enough storage there to also copy the local variables it references. Without ARC, this is manual, you do something like: return [closure copy]; With ARC, the compiler takes care of this for you, and inserts the call to copy. If you want to read more, the computer science terminology for this is the "upwards funargs" problem: https://en.wikipedia.org/wiki/Funarg_problem#Upwards_funarg_problem
Looks nice ! I'll certainly try it in the upcoming version of Fluor.
I'm not seeing any errors, do you mean the following error handler?
Figured it out, apparently I had set a breakpoint without knowing it. I just had to delete the breakpoint. Now I’m running into other issues though... WatchKit is not as fun as fun programming as I thought it would be. :(
Well im quite sure you can still implement response caching if your doing a DB + API access.
\n means new line \r means "enter" but more like you finish your input and confirm. When you press "enter" on the keyboard, it either means "new line" or "return".
JAVA not so bad, and now there's kotlin
Oh ok I get it thank you very much for your quick reply 
These should be the working links: Github - https://github.com/jeantimex/CollapsibleTableSectionViewController Medium - https://medium.com/@jeantimex/how-to-implement-collapsible-table-section-in-ios-142e0c6266fd
The problem is that for proper type-safety, you need generic types for each of the elements in the tuple, and you can't make a function with an arbitrary number of generic types. You'd have to do something like what Apple has done with equality on tuples... just write a bunch of versions of the same function with a different number of type arguments. It's not pretty, but it works. Edit: well this is some of the dumbest code I've ever written. func comprehension&lt;A, B, C, D, E, F, R&gt;( _ map: ((A.Iterator.Element,B.Iterator.Element, C.Iterator.Element,D.Iterator.Element, E.Iterator.Element,F.Iterator.Element)-&gt;R), of lists: (A, B, C, D, E, F), where condition: ((A.Iterator.Element,B.Iterator.Element, C.Iterator.Element,D.Iterator.Element, E.Iterator.Element,F.Iterator.Element) -&gt; Bool)) -&gt; [R] where A: Sequence, B: Sequence, C: Sequence, D: Sequence, E: Sequence, F: Sequence { return lists.0.flatMap { e1 in lists.1.flatMap { e2 in lists.2.flatMap { e3 in lists.3.flatMap { e4 in lists.4.flatMap { e5 in lists.5.flatMap { e6 in (e1, e2, e3, e4, e5, e6) } } } } } }.filter(condition).map(map) } func comprehension&lt;A, B, R&gt;( _ map: ((A.Iterator.Element,B.Iterator.Element)-&gt;R), of lists: (A, B), where condition: ((A.Iterator.Element, B.Iterator.Element) -&gt; Bool) = { _ in true }) -&gt; [R] where A: Sequence, B: Sequence { return comprehension( { a, b, _, _, _, _ in map(a,b) }, of: (lists.0, lists.1, [()], [()], [()], [()]), where: { a, b, _, _, _, _ in condition(a, b) } ) } let test1 = comprehension({ ($0, $1) }, of: ([1,2,3,4], ["a", "b", "c"]), where: { i, _ in i &lt; 3 }) let test2 = comprehension({ $0*$1 }, of: ([1,2,3,4], [5,6,7]), where: { $0 * $1 &lt; 20 }) You can write four more versions of the second `comprehension` function so that you can use up to six parameters (any number of 'em). What would be also neat is to offer version where map is a closure that creates a tuple by default, and where is a closure that always returns true.
There's been many superior languages for the JVM for many years. 
Thanks for checking. However, in my case, i moved the view controller to a framework (like the sample AUs Apple provided) and the view outlet is no longer there (don't know exactly how it happened), so when the XIB is loaded the view isn't found and it blows up. I will try your changing the viewcontroller type trick in IB. Good idea. I'm sooo tired of OSX getting the short shrift. &gt;sigh&lt; 
Just a suggestion I would add some padding so your sprites don't get culled the second their center point crosses the screen. If your sprite is say, 30x30 do if spritePosition.x &lt; -30 { //Remove node }
Top stuff. 
sure I'm interested as have years of experience over swift technology and currently looking for some work. Also would like to tell you that $10/hr is fine with me to work for you, so please reply me to start
Great article! Something else that you could do is make a custom `Collection` when both inputs are `Collection`s as well.
Oh god, thanks man!! I'll check it out asap 
And the set of these is the Cartesian product, if I recall correctly? Let's see if I can remember what my math teachers tried to teach me... Given sets X and Y, an ordered pair is an (x, y) where x in X and y in Y. The set of all such ordered pairs (x, y) is the Cartesian product of X and Y. (Now I'll let the younger Redditors that are both younger and smarter correct the details.. :) )
Starred, will try it out later today!
Fabric is hands down the best IMO, after trying Flurry and a few others. They have a really snappy UI, great event tracking, and don’t require a lot of integration code to in your project. I also really enjoy their daily update emails, which give you a brief summary on new users, user interaction, and app stability. 
Thanks a lot! :)
Thank you so much!
Thank you so much! Let me fix them!
so the easiest solution, most maintainable, least error prone solution is to hit the Youtube API from the iOS app every time you need the data, right? But you said you'd hit the API more than your allowed limit. But also the requests aren't stale right away. So a proxy with caching is an extremely simple, low maintenance, possible 0 lines of code way to achieve what you want. You setup a proxy at foo.com (or whatever) such that instead of requesting "youtube.com/watch?v=WyGq6cjcc3Q" you request "foo.com/watch?v=WyGq6cjcc3Q" and that URL just returns it for you. That's a basic proxy. Then you setup 10 min cache at your proxy and now it only hits the youtube API once every 10 min at the most. You've solved all of your problems with 0 lines of code. Or, if you build the proxy yourself, it's like 15 lines of code. Building a whole backend would work but it's total overkill if what I described above is sufficient. You have to build it, debug it, maintain it in perpetuity, etc. Having a backend is great if you need it but if you don't need it then it's just a lot of work and ongoing work for nothing.
Correct
Great article. Didn't know there were Core Data notifications. Interesting.
Thank you! I'm glad you like it :)
Great idea!
Man, I don't know how I managed to both call out Descartes and call this the product of the sets, and then miss Cartesian Product. Updated! Thanks.
If you had a failable initializer, the guard let should work. for example: init?(withURL url: String) {}
No problem! Also your readme gif is beautiful. What did you make it with?
Like /u/dressthemonkey said above, awakeFromNib is called prior to the delegate being set inside of cellForRow.
Conditional conformance would be great for this :)
Thank you!!
LoL, that gif took me the longest time during the whole development. First, download a png/jpeg image that has iPhone in the background, then record the iPhone screencast with QuickTime which gives you a mov file, at last use Adobe After Effects to skew the mov using perspective tracking, see this tutorial: https://www.youtube.com/watch?v=GPvG5OKXPkI&amp;t=84s. Oh btw, I have to turn that static image to a mov first using After Effects. The last step is to convert the final mov to gif using Photoshop. :)
Any reason why u would use NSLayoutConstraint’s constraintsWithVisualFormat instead of any other conventional method? Anchors perhaps? 
Thanks for this! 
Email me at paul@hackingwithswift.com and I'll send you a free copy of [Hacking with watchOS](https://www.hackingwithswift.com/store/hacking-with-watchos) – it might help you learn a bit more quickly!
Good point! Actually in the pod's source code, I have ditched all the NSLayoutConstraint codes and used anchors. I have to update the doc for the other repo.
Great article! Really in depth! I can't wait to try this out with other datasets I've been toying with. 
Sorry I'm just starting swift, and someone more experienced please correct me if I'm wrong. But like the error in the console suggests you are unwrapping an optional that is nil. And because your code didn't specify what to do if the optimal is nil, there is a runtime error. 
Xcode is pretty good on fixing unwrapping errors. Click the red dot in the margin and apply the suggestion.
That’s the thing, there is no suggestion. 
Where is the error happening, Also, every time you call refresh tips you are creating another viewcontroller with viewcontroller() Is that what your trying to do?
No, I’m trying to execute the function RefreshTips at the end. If I take out the viewcontroller().RefreshTips() then it works, it just doesn’t refresh the labels to reflect the change that was made. 
(Just to let you know what I'm about to tell you to do is bad practice but I wanna see if this fixes the error) Outside of your app delegate function Below whatever import statement is there Right something like let myViewController = ViewController() Then replace everywhere you see Viewcontroller() with myViewController
Also, if your using story boards you should have an IBOUTLET of some type referencing the storyboard view controller You should be calling the refreshtips function on that instead of ViewController()
In that case, just keep adding question marks in random places until it works.
In the appdelegates.swift? 
This didn’t work :(
You should be using the IBOUTLET reference wherever you want to call a function for that view controller So if you are using story boards &amp; have a reference to the storyboard view controller, then yes exchange Viewcontroller() with the reference 
See my other comment Also, did it still crash? Or it just didn't update ? 
I think I've spotted the problem, but as an exercise can you describe what you expect the call to `ViewController()` to do? I think this will help you debug exactly what is happening. Edit: For instance, do you expect it to grab an existing `ViewController` that is already being displayed? Do you expect it to create an entirely new one? Do you expect it to do something else entirely?
From what I am thinking ViewController() is indexing the swift file ViewController.Swift and finding all the functions in that file, then I’m using the .RefreshTips to call on the function I’m wanting to use So when put together it is ViewController().RefreshTips()
It crashed. Same error code. So you’re saying that I need to put an IBOutlet into my appdelegates.swift file? (the one on the left in the screenshot.)
Yes, try that. Let's say you call it TestViewController So then where it says ViewController().refreshtips Do TestViewController.resfreshtips And if it still crashes Then what line exactly does it crash?
this is gonna be a super noob question, im sure... but how do i go about adding an iboutlet from my view controller into the appdelegates.swift file without it unlinking it from my viewcontroller.swift file?
dm me real quick
Ah I see. That's not quite the way that it works actually. What `ViewController()` is doing is creating a brand new _instance_ of a `ViewController` by calling its `init` method. It's the same as if you were calling any other `init` method. By point of comparison, what would you expect to happen if you called `Date()`? There can be more than one `Date` so what wold you expect to happen if you tried to pass that into another function? DateFormatter.localizedString(from: Date()) What value would that return? Instead of indexing the file and looking up methods, what `Date()` does is creates a new instance of a `Date` that happens to represent the current time when it was created, in the same way that your existing instance of a `ViewController` (abstractly) represents the state of your view at the current point in time. ---- So what is actually happening is you have an `ViewController` that is being displayed and then you go and create a completely different one and attempt to call the `refreshTips` method on it. But the problem is it's a completely different _instance_ of `ViewController` and doesn't share any of the values stored inside the properties of the `ViewController` on screen. Beyond this misunderstanding, the real core of the problem and the reason it's crashing is because you are using storyboards which need your `UIViewController` instances to be initialized a certain way and by creating a new one using `ViewController()` none of your `IBOutlet`s are being created so it's crashing when you try to update the labels. The fix is to save a reference in your AppDelegate to your `ViewController` (probably in `application:didFinishLaunching` and then call the `refreshTips` method on _that_ instance of your `ViewController`. Ninja: I know this might be a lot to digest at once but you should really try and dig into it and understand because you will definitely need to understand it eventually, so why not now? Google/StackOverflow is your friend, and you should read the Swift programming language book.
I think I actually understood the majority of that. So lemme ask you this, why is it that I can't just use ViewController.RefreshTips() in place of ViewController().RefreshTips()?
Calling ViewController doesn't reference any specific instance of a ViewController because there could be multiple!
So how would I actually go about calling the function RefreshTips in my appdelegates file?
Unless you have already made an object called *ViewController*, you shouldn't be calling the static method on the type, rather an instance of the class. Change *ViewController* to whatever the object's name is. Or you could use *self.window.rootViewController* if ur in the AppDelegate
You’re trying to use refreshTips as if it is a static method but it is actually an instance method.
Do you care to explain what that means? I’m new to swift. and how do I go about fixing it? 
 Read this, it should help. https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html
Wow, I admire your dedication!
i read through it, I still don't understand though.. when I changed the function to static it just gave errors on the ViewController.swift file
If your other shapes don't have fill, use the zPosition property on the layer. If they do also have fill then you will have to duplicate it, position one in the foreground (with your strokes) and then the fill's. you should take advantage of zPosition here too. You could always wrap up the two shape objects into a singular view so you can reuse the functionality. Hope that helps
That's the solution I came up with at first too, but I have a lot of CAShapeLayers being added to the view at the same time. Pretty much enough to the point where adding duplicates leads to lag. Is there any way to add a ton of CAShapeLayers to a view without too much CPU use? Sorry if these are stupid questions. 
Wow thanks a lot, this is gold, Seeing someone else rewrite my code can definitely allow me to see where I can clean things up better. A few things. In your initial example you say you are expecting 11:30. What about 11:45? If 12:15 is a valid slot, 11:45 should be one too, shouldn't it? Yeah sort of, but actually my end goal is to count the availability of 30 minute intervals between two times to show how many appointments can fit inside that time, rather than how many time slots are available. That being said, I actually wanted to find out the available time slots too at 5 minute intervals for elsewhere in my project, so this is super useful (and a lot more than I was asking for! :) ) `And you should write some unit tests for your method. Because it does not work.` - I think this has been the biggest eye opener for me for unit testing. I shall definitely be testing more often. Again, thanks a lot, not only for your help, but the time and effort put into writing this. Appreciate it.
Instance methods are functions that belong to particular types or classes. They can read and change the instance's proprieties and allow you to do stuff with that instance. Class methods (aka Type, or Static methods) are more general. They operate over the whole entire type. (And if you're wondering, class methods are indeed less commonly used) By way of an example, a Cat class may have instance methods that do things like meow() or run(). That is, they work on specific instances of Cat. The Cat class may also have class methods, too. These may be methods that tell you how many legs cats should have or information about all cats. In this confined example, instance methods work on cats individually and class methods work on Cats as a species. In your AppDelegate, the line `ViewController.RefreshTips()` is calling the method `RefreshTips` on the ViewController class. Swift is confused. There is a method called that which operates on instances, but this is a class... Why does Swift think it's a class? Because the ViewController keyword refers to the ViewController class. You need an instance of the ViewController class to call the instance method. A good place to get one from may be self.window.rootViewController. A good tip to not get confused between classes and instances is to only use capital letters for classes. When you assign your new instance, start the variable name with a lower case letter. It may also help to do that with your method names (eg refreshTips not RefreshTips). Hopefully this makes sense and isn't too patronising. Sorry I don't have any code examples because I typed this on my phone. Good luck!
Hello, this month we start with some cool AR lib so be sure to check it out! Like always we are looking for new suggestions and we are gladly promoting not so well known libraries so if you made some, be sure to send us link! :] 
Oh boi, exactly what I was looking for. Thanks a lot!
Extremely well written!
If the background color is the same for all of the shapes, and you don't the transparency to be additive, then it might be more performant to have a single CAShapeLayer that draws all of the backgrounds. You just need to make a more complex CGPath to contains all of the shapes paths. I don't know if that would actually help or not, but it might be worth a shot.
There are a few simple ways. You could add a `weak var viewController: ViewController?` property to your AppDelegate and assign this property in the ViewController's `viewDidLoad()`?
So in theory I can download 100 different pictures of every car made, put them in a named folder structure, and the process it per the article? Likely taking months (assuming I could find the images). I'd eventually get a model to identify cars? What about color differences. Is it doing identification by shape only or color too?
Great job. Very simple. So, enlighten me a bit please. With the StoreKit integration, the user can leave the review right from within the app correct? Is there text they can enter too or just a star rating? If they have already reviewed the app via StoreKit will the popup stay hidden? Lastly, is there a mode to say "Don't show this again"? Thanks.
With storekit, it obeys all of apples rules. So it may or may not show up: limited to 3x in a year, and it won’t show up at all if users have it disabled globally. If it does show and they have left a review previously, it will show the stars they left last time, and they will have an option to write/update a written review after the submit the star rating The prompt will only show up once per version. There’s no option to never show it again, and they have to press yes or no. 
Awesome. Thanks for taking the time to respond. I'll definitely look at using this in the redesign of my company's app. If I do, I'll send you a PM.
You bet. It’s not flexible in design as it relies on the default alerts, but it’s exactly what I needed for my apps and I haven’t found anything else that used StoreKit. 
"It defines that who ever conforms to this protocol, needs also to be an UIViewController. This is done by setting Self as UIViewController after the where clause. This way only objects that are also UIViewControllers can conform to the protocol." I believe this is wrongly phrased. What you did was extending the protocol and if the object conforming to the protocol is a UIViewController it will have the default implementation of the method that you wrote in the protocol extension. Any other datastructure are able to conform to the protocol you defined, but will have to implement the protocol method. In other words, the protocol itself isn't exclusively available to UIViewControllers, but since you have a protcol extension you wont have to implement the required method. Otherwise a great article! 
Awesome! I don't really use swift, but I wanna check this out just to try and learn some of this stuff.
Thanks aborren, good catch! I'll rephrase it
One way to do it would be to use the `window` property in your `AppDelegate` to dive into the VC hierarchy and do that. if let viewController = window?.rootViewController as? ViewController { viewController.refreshTips() } I'm not sure of what your hierarchy actually looks like, it might be under a `UINavigationController` or something in which you will need to look at the documentation for those to figure out how to grab their children VCs. Play around with it in the debugger or print out the values of the objects and see what you get. The best way to learn is sit in front of a hard problem and figure it out yourself. You'll remember it much better than having someone else tell you the answer.
Or another way to circumvent this entirely is use to [Notifications](https://developer.apple.com/documentation/foundation/notificationcenter) instead to notify your VC that something has changed, rather than keeping a reference to your VC and calling the method directly. But if you haven't learned about them yet you should try and fix the problem as you currently have it and then maybe try this as an exercise.
Please don't add an IBOutlet to your AppDelegate as someone suggested. As a matter of fact, why are u handling all that logic AT ALL in the AppDelegate?? Learn notifications, handle it that way if you're too lazy to learn that, just use UserDefaults, when tips are added? make a value true, then check if that value is true in the refreshTips() ViewController and after refreshing set it back to false.
also the other comments are true, you can't just randomly call ViewController() and expect it to work, its as you whistling HEY! in the street, no-one knows who you're talking to but they all turn around and look at you. 
I’ve been seeing a lot about notifications. What exactly are they? Do you know if any good articles on them? 
I like you, you explain shit to where I can understand and you’re straightforward. You should stick around! 
I went ahead and read the article beforehand, this should help you. https://medium.com/@JoyceMatos/using-nsnotificationcenter-in-swift-eb70cf0b60fc Long story short : In your AppDelegate or wherever you use to verify if a tip has entered? there should be a .POST Example: NotificationCenter.default.post(name: NSNotification.Name(rawValue: "refresh_tips"), object: nil, userInfo: remoteMessage.appData) and in the ViewController that calls the RefreshTips() function, an .ADDOBSERVER NotificationCenter.default.addObserver(self, selector: #selector(TaxiPriceViewController.serviceAccepted(notification:)), name: NSNotification.Name("refresh_tips"), object: nil) PD. Ignore the userInfo param, it's because the examples I'm showing you are from Push Notifications I used with Firebase. 
FAPanel.
Love these
Oh sweet, I'm number 1. 😄
That's cool d'Angelo
I need the backgrounds to be additive, unfortunately, although I have played around with the idea. Thanks for the comment. Is there any way to make it so that I can put many CAShapeLayers on my view without lag?
Hello, Friend! Generally I try to point people away from attempting to connect directly to a database over the internet from an app. Usually folks try to include the credentials for the db connection in their app and that can lead to problems. BUT, if you're heart is set on using a database from the app I have the following bits of advice: - Ensure that the credentials you include in the binary are for a user that has the minimum rights. This means if your application can get away with read-only credentials I suggest that you only use read-only credentials. - Use postgresql if you need an rdbms. (I'm biased (I work there) but I highly highly recommend Heroku postgres https://www.heroku.com/postgres). Usually you'll end up with some sort of background polling system that looks for changes in the DB. You can do this with directly queries looking for new data or writing a view (http://www.postgresqltutorial.com/postgresql-views/) that you can call and have it provide the desired dataset. If you want something with zero ops work I **highly** recommend looking at Firebase from Google https://firebase.google.com. It probably has everything you want. I generally point people there if they're willing to spend a bit of money ($0 for ~6 projects and one costs me $25/month but that's because the user count is high... good problems to have). 
You might try changing the [blend mode](https://stackoverflow.com/questions/2939324/how-to-render-a-calayer-with-a-different-blending-mode-like-screen-or-multiply/3241324) of your layers. 
From looking at your code I'm guessing that Count, TipArray and CountCurrent are class level instance fields/properties. Static methods cannot access instance fields/properties. So once you changed RefreshTips() to be a static method XCode then displayed a bunch of errors in an attempt to tell you that static methods can't access instance fields/properties. My guess is that you really want RefreshTips() to be an instance method and you want to call RefreshTips() on the current instance of ViewController which as another user states you can get via self.window.rootViewController. On a separate note, it seems that you need to learn the basics. The fact that you don't know the difference between static and instance methods indicates that not only are you new to Swift/iOS but it appears you're new to programming as a whole and going thru a few intro courses would do you a lot of good. I don't say this to be mean or discouraging as we all started out in your shoes at one point in our career. I would suggest you go to Udemy.com and find some Swift courses that not only teach how to make an iOS app but also provide an intro to Swift language constructs. Good luck! 
Unless you need all of the layers to be moving, you could try snapshotting the view, and then removing the layers you don't need?
Unfortunately, they do need to be moving. Do you think that drawing directly on the context will reduce CPU use? Do you think I should explore OpenGL? My main problem is really that I need to figure out how to add like 3000 shapes to my screen and move them. 
Thanks for the advice. I'll look into this. 
[Here](https://gist.github.com/zakkhoyt/9e4fe6a411ed7b5ed0618a162bd73cd6) is a little demo which uses CGContext instead of CAShapeLayers. I don't see a blending mode that will do what you are looking for (that I understand), but CAShapeLayer seems to have different blending modes available. 
Lol, itaiferber is the developer of Codable, so you're basically mansplaining how his own code works to him
Nice work mate!
Awesome! Always wanted to make a compiler. Also upvote for d'angelo
Your problem in this code is the capital V in ViewController. By capitalizing the V you are saying call this method on the Class, not the instance. Typical coding standard in iOS is Capitalized names are classes and lower case names are instances. If you don't know the difference between a Class and an instance you are going to need to do some reading. Looking at your code you seem to capitalize everything which will make knowing the difference between Classes and instances very difficult. Where is RefreshTips() coded? Are these pictures of your current ViewController class? If so you probably want to do `self.RefreshTips()`.
Care to show the console to see what the error ir? 
Also note the owner of that project is Michael yet your reddit username is AwkwardEngineerGirl xD 
Check the console. Could be a memory leak causing iOS to kill the app. Also try setting an exception breakpoint.
Actually what he's trying to do, I think, is launch a quick action from the home screen. Having said this you can't assume that the rootViewController is ViewController because ViewController could just be a UIViewController set aside that is only launched by the quick action. What he needs to do is decide the purpose of ViewController. If it's something you can't access through natural navigation flow in the app then all he needs to do is instantiate ViewController then call refreshTips() after he pushed it to the stack But if ViewController *is* a UIVIewController that you can access throuhg the navigation stack then he needs to determine how he wants to bring it back to the screen I noticed that the Messages quick action for sending a new message actually clears the app's state before taking you to the UIViewController for sending a new message. He should look into taking that same approach /u/Cdunn2013 I think what you could do is pop off every UIViewController from your navigation stack (assuming you have a stack) until you get to your initial screen and once there if the user selects the quick action you set up then instantiate a ViewController object, call refresh tips, then push this view on to the stack. This will give you what you need. I figure it'd be find popping everything off the stack because the user is probably looking to do something different than what they already have in the navigation hierarchy so it should be fine getting rid of all that and sending them directly to the controller they want But /u/zintjr is right. The code is looking a lil rough and you gotta check out some of the basics first. There are better ways to handle your data and persist data throughout the app and we're not helping you any by providing you bandaid fixes for your code.
[read this](http://www.vision.ee.ethz.ch/datasets_extra/food-101/static/bossard_eccv14_food-101.pdf)
I did the Swift series on TeamTreehouse.com shortly after Swift came out. I just took their most recent refresh of the course and absolutely loved it. Everything is explained incredibly well and there are quizzes and code challenges in between to make sure you’re actually understanding everything. Absolutely worth the price. 
Try taking out Viewcontroller.counter and replace with counter in your selector call
I’ve only been coding in swift for a week, I’m not really looking for a bandaid fix, I just like being able to see what works and then evaluate it myself and see why it works. But I am taking into account everything everyone said, I’m starting force myself to write my variables likeThis instead of LikeThis. Anything else that you can see that would help my code look better? Btw thanks for taking the time to describe what was going on! 😁
Ummmm [I think this might help you out](https://github.com/raywenderlich/swift-style-guide) Just a style guide helping you write stuff out I think it would help if you checked out MVVM. I would say Core Data straight up but Core Data works well with MVVM so you can save that for later. With MVVM principles I think it'll help you with designing your model layer so that way you won't have global data structures. Is this the first app you've worked on?
That is a super cool library!
Thank you so much! And yes it is! It’s always been one of my goals to be able to develop an app, so I finally took the splurge and went for it! So far I’m really enjoying programming in swift, and the support community is amazing! 
Thank you for the reply! I actually went about it a different way and got what I wanted, but I still wanted to know why it wasn’t working, this actually cleared it up for me quite a bit! And yeah, I’m fairly new to swift programming and I am trying to break the habit of camel case... I’m actually about to read up on an article from another comment on how to write swift properly. But to answer your question, the left side is the appdelegate.swift and the right is my ViewController.swift
[This is a good tutorial from apple that helps you create something from scratch kinda](https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html) [I think that was the first article I looked at to learn Swift and iOS. After I wrapped that up I then went to this and opened up a playground and played around with it](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html) [I think this will help you too because you need to know how to make network requests. Just gotta look up URLSession in general. I think this article also went into parsing JSON which is a good thing to know but Swift 4 will make things different so its kinda meh. If you just use a framework then you'll be fine but it's nice to know how to do this by hand since they'll ask you to do it for technical interviews](https://grokswift.com/updating-nsurlsession-to-swift-3-0/) [Next you'll want to look at dispatch queues. If you're going to do network requests by hand then you need to know when, and how, to update your UI from the network completion block.](https://www.appcoda.com/grand-central-dispatch/) [It's also worth checking out autolayout. Most apps I use these days are in portrait so you don't *have* to really focus on landscape BUT it's important to know autolayout because most iOS apps come with an iPad version so you'll need to know how to keep everything together](https://www.appcoda.com/auto-layout-guide/) [This is also autolayout stuff but this is how you do it in code](https://useyourloaf.com/blog/pain-free-constraints-with-layout-anchors/) [And this article on ownership. It's very important. I actually see a lot of people on here get this thing wrong so it's worth really focusing on this and understanding when/how/why to capture self](https://krakendev.io/blog/weak-and-unowned-references-in-swift) And I think for now that's some good stuff to read. I mean, from my experience you can only do so much with the code and most of your time may be spent on designing and tweaking but from what I've done the most essential things are autolayout, GCD, and URLSession.
Yes, I’m tracking who’s who on reddit. 
Yeah, I'm not sure what the deal is for enterprise deployment on tvOS. Thanks, this was exactly the answer I was looking for.
Thanks so much for the explanation! For production level apps, what does the tech stack generally look like? For web development, Node serves as the the server, with various front-end frameworks. For iOS, XCode storyboard seems to be the front-end, and then would you use a framework like Vapor or Perfect to act like the server and ping a remote database? Sorry for the questions. I've been Googling and going on Quora, but haven't found a comprehensive answer. If you happen to have any links on what the stack would look like, that would be awesome too!
Ok, thank you! That makes a lot more sense. I realized I probably want to install a remote database and not a local database.
Did you actually connect your IBOutlets to your storyboard? They look unconnected. 
Just replied on the stackoverflow post: https://stackoverflow.com/a/45451866/950505 Off to bed but will check in the morning.
Don't use ! In your function Params there's no point, only put ? If it's optional
Thank you. I replied. 
I had my old code like that and it worked fine. After updating to the new version of Firebase I get errors. I’ve been changing stuff and testing combinations with the optionals and I can’t get it to work. If you look at my comments on stackoverflow, after trying some of the answers I get weird errors like “cannot convert value type ‘User?’ To expected argument type ‘User?’ “
If you have a struct or class called User in your app, it will compete for Firebase's User class. You'll need to refer to a firebase user by using it's module with Firebase.User. Check the [migration guide](https://firebase.google.com/docs/reference/ios/naming-migration-guide) for more info on the changes they made.
But I can still use my struct for the user info right? 
Where ever you used to have FIRUser, you’ll want to use Firebase.User instead.
Aw man. I can't remember all of the changes I let Xcode fix by using the recommendation fix. I'll go over it and I'll get back to you as soon as I'm done. Thanks.
Dudeeeeeee it worked! I’ve been stuck there since yesterday and I haven’t been able to figure it out. Thanks for the help!
Fabric.
Prepare to have your dreams crushed :) best of luck though!
As to my question, do you have any advice as to whether it's better to stay solo, pay someone or find a partner? 
Wow, I've wanted to learn about SpriteKit for a while now. I'll have to take a good look at this when I get home!
If you are looking for a partner, I am also looking for a worthwhile project to work on. PM me if you want to work together.
Try and finish solo if you can. When developing any kind of app or startup it is best to minimise expenditure where possible (you might need it later). There are plenty of tutorials and resources out there. Any bugs or problems that arise can usually be solved with a quick Google or StackOverflow search. In terms of login functionality, I suggest you use Google Firebase. It's free until you get 100+ concurrent users and cheap thereafter. It is also incredibly secure and guarantees support as you scale. I picked up Swift pretty quickly. I think a lot of people are convinced they'll have to spend hours reading textbooks or guides, when in reality you can actually start straight away. It's always a challenge of mine to see just how far I can get without the help of others, and I find it a great source of motivation, too! Best of luck. Hope this helps you :) - and don't listen to the other guy. It's always worth the shot, even if the app doesn't work out you'll gain an immense amount of experience form developing it :D
Finish solo, learning the backend will be a huge attribute to you professionally, even if this app flops.
Thanks a lot, mate! Yeah I've implemented firebase for the login and it's working well. My app will involve videos and I noticed how quickly I'm nuking through firebase storage limits. I'm sure I read somewhere to use firebase to store links, but host the videos elsewhere, so I'll look into that! You're right I should probably take it as far as I physically can myself before seeking help. Do you know if it's possible to code logic to firebase as a backend, for example "if someone interacts with this video in a certain way delete it" etc?
Thanks!
I'll keep you in mind for this! A few other answers have suggested I fire on solo first for the experience, so initially I'll try that!
If you ever at a point where you hit a blocker just PM me and I will try to help! Make sure you try StackOverflow/Google before you do, though, because that's actually a large amount of development :P
Thanks very much that's much appreciated and I'll almost certainly take you up on that. Yeah, I've used stackoverflow a lot thus far!
I've only worked with the real-time database myself, but I'm sure it is possible to delete or update storage programmatically using the API. Check the documentation out. It is possible to store videos elsewhere. For example, you could purchase a web hosting plan or work with AWS. Perhaps you could then embed or reference the videos via HTTPS/URL. Just an idea!
That is not the purpose of share with. Share with is to allow users to share something from another app via your app but without leaving the other app. Even if you get it working there’s a good chance you will be rejected by Apple. Your share extension should contain all necessary ui and functions to complete the action itself. You should instead look into being a file handler for images so that you appear in “open with” if you really want it to be handled in your main app. 
Thanks for the reply. Is there any documentation you can share about a "file handler"?
no-one can give u advice on this question, it boils down to advantages and disadvantages. Solo -&gt; TL;DR Will take u longer to finish. Freelance -&gt; Need to pay out of pocket money. Partner -&gt; It's never good to add a partner 50 or 75% of the way into a project, you've worked more than him and he will most likely want half of the profits for himself. 
I've been coding for a year and half from when I first started my project and been riding solo ever since. Too me, it seems like the light at the end of the tunnel for you seems really far away or you've hit a slight wall. Keep pushing, don't give up and get shit done. I've been in this position plenty of times. Don't waste your money on developers. You'll need it for other things in the future too such as marketing, depending on what you're trying to achieve and how much money you have. Also, if something goes wrong somewhere further down the line, you don't want to keep forking out money to pay someone to do it. Instead, fixing it yourself will be much better of in the long run. Are you trying to create a business? Or get a job as a developer professionally and using the app as part of your portfolio? I'm interested in what your up to. Shoot me a message.
On mobile so I don’t have links handy, but you’ll need to add a UTI for images to your info.plist and in didfinish launching of your app delegate you’ll need to handle passed in URLs
Have you removed the breakpoint?
/r/titlegore 
The solution is: let hitResults = scnView.hitTest(p, options: [SCNHitTestOption:firstFoundOnly: true]) using firstFoundOnly also solves the performance problem.
Most likely Firebase updated their Objective-C markup to better indication nullable properties and parameters. You'll need to update your code to properly match.
And Haskell, and OCaml, and SML, and Gofer, and ... Why do you advertise for other languages here? This person is in *week 2* of an intro Swift course. They're probably not looking for other languages right now, and especially not other languages with the same features.
&gt; Also, if something goes wrong somewhere further down the line, you don't want to keep forking out money to pay someone to do it. As long as you have and own the source code, you don't need to pay someone to do it. It's always an option, but never a necessity.
Where's your program? Without the source code, we can only guess.
Maybe, or maybe not. Half my IBOutlets look unconnected, but actually are connected (if you inspect them from the IB side). It's a not uncommon Xcode bug.
I've been reading all of your Core Data articles. Thanks for putting them out there. :-)
✌🏻 I'm happy when I can help other people with these articles, thank you for reading it!
Almost all programming languages are Turing complete by design, so you can do whatever the fuck you please in any of them. It might be harder or easier, but it is possible.
You are starting too low. Every platform you're likely to program these days already has a TCP stack available. What you should do is take a basic networking and a tcp programming book out of the library and look through those. 
I know, but starting low-level is what gives me a better grasp of how things work. 
I'd recommend filtering the array so that you're only getting objects of type B in the loop, like this: for case let event as B in allEvents { event.blah = // guarantees the object event of type B has the blah property } Or you could put a simple type check inside the loop using the *is* keyword like this: for event in allEvents { if event is B { event.blah = // event is of type B } }
Thanks... If I do the second way, Once I get there I will need to cast the object to that type right to be able to set that object's specific variables? How do I go about casting it to that type?
Is the ViewController class in the main.storyboard exactly the same as your view controller.swift file? (case sensitive). If yes try so clean the project (shift + cmd + k) , close Xcode and reopen it again. I also get that error sometimes for no apparent reason and this solution always works.
This error drives me bonkers. Most of the time I don't think anything is actually wrong, but I think it can happen if the class is not set on the nib. Click file owner on the left sidebar of the nib and then in the right sidebar (think it's the identity tab) make sure it has your class there. Should autocomplete. Sometimes it's just Xcode. The usual methods might fix it (clean, clear derived data, or restart Xcode). Let me know if that helps Edit: nib is the .xib file
Actually do this: for event in allEvents { if let e = event as? B { e.blah = // } } The conditional *let* with the cast using *as* is what you're looking for.
Awesome thanks for your help.
Yeah, people say that, but it's very tough in real life. There's a reason most people don't start programming in assembly.
Yeah, people say that, but it's very tough in real life. There's a reason most people don't start programming in assembly.
I think you are mixing ideas, you are looking to see how networks work or how to make a network stack in swift? Making a LAN setup with servers/clients + applications running on top of it is even beyond the level of graduate programs final projects. One of the most fundamental ideas in programming is to not reinvent the wheel, which is what you are trying to do. You can write a simple app to use the things already made but you will need basic ideas and fundamentals first. One does not just jump into writing a full network connected chat client from the ground up with no real idea how to write code. As far as learning how networks function that is completely different than learning swift that is like LAN 101 those 2 groups don't really cross in knowledge domains 
I think Xcode can be buggy at times. :(
[Use Charts to make the chart](https://github.com/danielgindi/Charts). And just pull the data into an array and use it populate the chart..
I have been tinkering with that framework but I can't seem to get my head around it. Maybe it is still to complex for me :(
If you're new the best way to learn is to keep trying to make it work. Wether or not you end up figuring it out I guarantee you'll learn some new things along the way. That being said the Charts framework is a bit difficult to understand. Let's maybe look for an alternative, better documented, charts framework. Feel free to message me if you have some questions. Edit: Maybe try [SwiftCharts](https://github.com/i-schuetz/SwiftCharts). It's better document and appears easier to use.
I wrote a small tutorial on how to do this from scratch six months ago or so. [Here](https://medium.com/@tstenerson/lets-make-a-line-chart-in-swift-3-5e819e6c1a00) it is on Medium. The smoothing on that graph is a bit trickier, depending on how many data points you have it may not be necessary. The above tutorial is about 250 lines of code and doesn't use any third party libraries, just CoreGraphics.
Oh cool! Will read thanks. Can you set labels for the y-axis just CoreGraphics? For example y = 0.2 label is Light, y = 0.4 is Medium, y = 1 is Heavy.
Just draw your own using CoreAnimation or CoreGraphics. CoreAnimation much easier as it's just of Bezier paths and connecting points. Little bit of math needed though
The cool thing is you can actually do literally anything you want, you just have to figure it out. But for what you're asking, I would suggest creating three mask layers with bounds in the specific regions you want over the entire chart. Give them increasingly dark colours of blue. It'll look awesome. It's been six months since I've coded any Swift though, so I can't be much help.
Downloaded and ran. Simple, colorful and helpful for introspection. Going through some stuff right now and really took it seriously. I still need to get out the notebook and start responding to the cards. Keep up the good work!
Incredibly ugly syntax.
Sorry, can you elaborate?
I'm unconvinced by the syntactic sugar bit. Seems more like syntactic saccharin. The author defines a Then extension, (Is Then a protocol? I've never seen it before), and proceeds to use it in a way that's less clear in code than what was there before unless you've seen this extension, and even then it takes much more time to wrap my head around than what was there before. It complicates the code, and I will agree, looks ugly, not even that sugary as you have to define everything using closure argument syntax and it isn't reused. To me that looks like one small step forward and several steps back. Just comment your code and group things neatly and it is much more readable IMO
&gt; The author defines a Then extension, (Is Then a protocol? I've never seen it before) It's quite unclear as it's tucked into a link *after* the snippet, but [yes it's a protocol from an external library](https://github.com/devxoul/Then) the snippet actually comes directly from there. The sad part is I could see uses for it as it allows bundling non-trivial initialisation steps (for objects with "useless" constructors) in a single expression or pack complex sub-initialisation into their own block/scope (so they don't leak out) except: * none of the examples demonstrate that, they just make the original code more complex * it's weird as hell to use that as an example for a basic closures essay when you could use much clearer examples like HOFs/iteration or resource management * the gain over an IIFE or an external function/method is really small
Then saves some unwrapping with potential force unwrapping errors (a lot of developers just force-unwrap carelessly) but I don't find it as clear as normal code. I second your opinion. 
This is really great. Especially the type safe KVO
It was huge pain in the ass at my work!
This is the first that I've heard of DDD, so I don't think I'll be much help. But DDD sounds very interesting! Do you have any quick resources you could recommend for learning more about it? I just downloaded [Domain Driven Design Quickly](https://www.infoq.com/minibooks/domain-driven-design-quickly), which appears to be a distilled version of the Eric Evans book (unfortunately, I don't see myself reading a full book on this). It sounds like most of the material on DDD talk about its benefits as a way of mediating between the development team and domain specialists. I'm curious if it could also be useful when whittling away at personal projects that change or refine their business logic in the middle of being built.
On what platform are you planning to use Swift? If it's iOS (iPhone and iPad) you will not be allowed to talk directly to the hardware. TCP/UDP access is about as low as you can go.
Thank you all for your great feedback! I swapped out the section on [Then](https://github.com/devxoul/Then) and instead talked about immediately invoked closures since it can accomplish something similar using built-in functionality. I also commented on some of the more complex code examples, let me know what you think.
I guess that book could teach you much more than I ever could. :-)
How is this superior to the ExpressibleBy___Literal? It doesn’t actually express which conversions are possible... The point of each ExpressibleBy___Literal protocol is to express exactly which literals an object may be initialized from. 
Network stacks aren't (so far) written in Swift, though, so this isn't really how they work.
The idea here is that conforming to the protocol and adding initializers in this fashion allows for the lines at the bottom to work as intended. I had another idea with the same protocol, but with an `associatedtype ImplicitlyConvertibleType`. The downside to this approach is that you're limited to one type, at the expense of having a more "correct" looking API. I'm torn on which I prefer. I realize it's not ideal, because it doesn't allow for a way to specify the types (aside from implicitly via compatible initializers), but I'd love some constructive criticism on the idea. 
Why would the protocol need to exist, then? Since you're not declaring the types in the class header, isn't it just the presence of an "init(convertedFrom:X)" that signals a conversion? Wouldn't every type be ExpressibleByImplicitConversion, then, with possibly zero such initializers? I can see this being horribly abused: extension NSButton: ExpressibleByImplicitConversion { convenience init(convertedFrom x: NSObject) { self.init() self.stringValue = x.description } } let myButton: NSButton = myTextField // type-safe at last! If just one contributor or library does this, in the wrong way, then they have the power to essentially disable type-checking for the entire project. I think it's clever, but doesn't really fit in with the way the rest of Swift is designed. In the end, if you want a metaobject protocol, you know where to find it.
&gt; isn't it just the presence of an "init(convertedFrom:X)" that signals a conversion? Yes. &gt; Wouldn't every type be ExpressibleByImplicitConversion, then, with possibly zero such initializers? What? &gt; I can see this being horribly abused I don't see how your example is massively worse than something like this, which is already possible: extension NSObject: ExpressibleByStringLiteral, ExpressibleByDictionaryLiteral, ExpressibleByArrayLiteral, ExpressibleByIntegerLiteral, ExpressibleByNilLiteral { ... }
There's 1500+ lines of types and conversions, but it doesn't actually *do* anything, and that's what programs are for, no? There's a lot of code here that I see and I think "This will never be used in a real program, even in this domain" -- but without an actual program, who's to say? There's no there there. I'd say this looks like BDUF, but it even looks a little worse because it's implemented in code. I can't say I've ever seen a worthwhile program that was begun this way (and dozens that started this way and failed), but if it works for you, then great.
You have to find another way of doing it. 
Make another method `func getDataWithoutPreservingArrays()` and use that in the selector. Inside, call `getData(preservingArrays: false)`. If the desired behavior is the opposite, make a method `func getDataPreservingArrays()` and use that in the selector. Inside, call `getData(preservingArrays: true)`. 
In Swift 4 you could do: typealias ExpressibleByLiteral = ExpressibleByStringLiteral &amp; ExpressibleByDictionaryLiteral &amp; ExpressibleByArrayLiteral &amp; ExpressibleByIntegerLiteral &amp; ExpressibleByNilLiteral Then just do ExpressibleByLiteral wherever you want. At least it's shorter. But as for what you really want, pitch it on Swift Evolution listserv. I am curious what they would say.
You need to take another look at [the documentation for UIControl](https://developer.apple.com/documentation/uikit/uicontrol) which explains the target-action mechanism. Action methods need a very specific signature (well, you have three options); you cannot go adding your own parameters. (Hence enekoalonso’s solution.)
You seem to be experienced with MapKit. Kind of curious on how easy to place markers on Map to place 3D objects for later viewing during Photowalk?
The problem here is that tuples aren't first class citizens in Swift. I wish they were some sort of generic &amp; non-homogenous collection of objects. 
You can use Cloud Functions for Firebase that can be triggered on Realtime Database, or Cloud Storage, changes and perform actions based on those events: https://firebase.google.com/docs/functions/
This is exactly what I need, thanks!
No problem dude, here is a video to get you started: [Getting Started with Cloud Functions for Firebase - Firecasts](https://www.youtube.com/watch?v=EvV9Vk9iOCQ) Feel free to PM me if you have any more questions. 
Perfect thanks so much! I'll probably wait a week or two to do the above as I first need to tackle tableview and friends list functionality, then the firebase storage is virtually the last step! I'll almost certainly give you a shout at some stage soon, though! Thanks again.
Good luck dude, and no problem! All the best of luck!
There already is a protocol `_ObjectiveCBridgeable` which does the same thing but is limited to classes. By adopting it you can cast an object to its `_ObjectiveCType` and back. 
Not sure how others do it but I'll tell you how I worked out a somewhat similar problem. I have a game where there are players (with various attributes) and each player has a role (with various attributes). So off the bat I make a Player class and a Role class. Now, my initializer for Player is Player(name: String, role: Role. But I can initialize it however I want, really; ie. I can save a temporary name in there, as the instance itself will still exist whether it has the correct player.name or not. My particular need was to first select players (the names of the people playing), then select roles (the different roles they would have) and at a later phase in the game, I would have to assign a role to each player. It was a bit of a complicated situation in that I needed to start a game with a roster of players but I could not create the Player instances because I didn't have total information. So what I did was, from PlayerSelectViewController, pass an array of strings ["John", "Jakob", "Jingleheimer", "Schmidt"] to the RoleSelectScreen. Once all the role are selected, I instantiate the gameRunner instance as Game(players: [Player], actors: [String]). But where did I make the players? Simple. In SelectRolesViewController's startGame button, I call a function that does this: for role in selectedRoles { let newPlayer = Player(name: role.name, role: role) gamePlayers.append(newPlayer) } Thus, I choose to temporarily name my player until I have the information for which player name to assign to each player. And later on, when I have the information I need: gameRunner.livingPlayers[x].name = game.actors[x] This long answer is to demonstrate the following: there's no 100% right way to do it. Look at what you need in your specific situation, and come up with a solution (how you model data - classes, structs, etc - and how you pass and instantiate that data) that takes advantage of what you know and removes what you don't from the equation as much as possible.
Awesome! We really like it in our office :D
I would honestly prefer this over Kotlin.
Give it a try, and let me know what you think and/or if you have any questions!
Swift is by far my favorite language. What is the performance like on Android compared to a native Kotlin app?
The performance will be identical to Java or Kotlin, as, for the Android target, Elements compiles to the same JVM byte code (barring slight compiler optimization differences). Note that Elements *also* lets you compile extensions against the NDK as well, for the same kind of scenarios where you'd regularly use C/C++. Here too you can use Swift, or even the Java language, b ut it then of curse compiles down to native ARM (or whatever CPUs you target) code.
ok i understand
Why? Just curious. I wrote a small program in Swift (just for OSX), and haven't tried Kotlin yet. It seemed interesting.
Interesting. Thanks!
I love how simple they are, they'd be perfect if you could implicitly initialize any object with them like this :/ I'd kill for at least an `ExpressibleByTuple` protocol
I'm trying to make my first coding project which is to compute a 1D cellular automata.
This is awesome! I'm curious however, what's the app size of a given app written this way? I ask this because frameworks like Xamarin tend to bloat an app with added libraries (Mono Runtime) to be able to use it.
Check the outlets connected to your interface elements in Interface Builder by right clicking on them. I'm guess you'll see two connected where you only want one, removing both and reconnecting from your code should fix the issue. If it doesn't, post your actual error output so people can help.
I appreciate that you are feeling lost and don't even know where to begin to look for problems. However, you will have to appreciate that anyone reading this (me, for example) is way more lost than you wrt your situation! So, the only two suggestions that I can think are reasonable to make are: 1) set a couple breakpoints for when things go pear-shaped by going to the breakpoint navigator (View-&gt;Navigators-&gt;Show Breakpoint Navigator, then tap the '+' in the bottom left. Tap 'Swift Error Breakpoint', then tap the + again and click on 'Exception Breakpoint' (it'll bring up a little popup, just accept what it chooses, which should be all exceptions, by clicking outside the popup). Then, run the app, let it do its thing, it should stop when the SIGABRT occurs. With any luck, you will be at or near where the problem is. Then try to understand why it is crashing there, or maybe just comment some code out, just to get to a point where it doesn't crash, and then start adding things back carefully to regain functionality. 2) set this app aside, and follow some step by step tutorials about creating interfaces in swift. Given what you have described, you haven't actually got to the 1D automata (and my compliments to you for choosing to do this, because I think they are fascinating), and almost any Swift/UIKit tutorial will cover what you need to know to wire up buttons, labels and text fields. When you can do that, then blow the dust of this project, get that stuff working so you can get on to the really interesting cellular automata part. BUT: you've got to learn the fundamentals first. You know what they call people who try to start to learn piano by playing Beethoven sonatas rather than scales? Drummers! (all musicians are required to make a drummer joke every month, and I've gone 4 days without doing so, so there it is.) btw, thank you for not posting every line of code in your app as some people who are lost do. That doesn't help. Also, are you using source code control? it may seem like overkill, but it can really help when you are kind of trying this and trying that to make some branches for the trials...that way if you make a branch, delete a bunch of code, discover the problem and then realise that 98% of that code was actually good, you don't have a big regret, you can just get it back from your other branch. So, it seems like a lot of stuff to learn: debugging, source code control, swift, uikit..... well, that's the way it is. I can tell you that it turns out to be much easier to learn these things when you are highly motivated, as it sounds like you are, to create an app in which you have an actual interest, but it seems like you keep hitting these roadblocks to your progress, than it is to encounter the problems when making an app which you aren't even interested in having (such as the usual assignment in classes or textbooks: make a number guessing game...write a factorial function...and the big winner of all time: fizzzzzzbuzzzzzz!!!!!) good luck 
I've seen far too much disastrous code in C++ to be able to support this. I'm not a fan of the school of thought of "let's limit the language in order to prevent abuse", but this is one case where I can get behind it. Also, consider (time) complexity of the type checker. Chains of operators already suffer from exponential blow up from having to find what set of inferred operand types leads to a valid expression. The `ExpressibleBy____Literal` makes this worse, as not only polymorphism needs to be considered when looking for the set of possible types of an operand, but also the set of `ExpressibleByXXXLiteral` conforming types must all be checked in all cases where a `XXX` literal is used. E.g. if you're using `-`, all `ExpressibleByIntegerLiteral` conforming types are tested. Since no `-` operator exists for (for example) Strings, there's no reason to test against the set of `ExpressibleByStringLiteral` types. Since any literal can interact with this protocol, added a universal `ExpressibleByLiteral` means that the type checker needs to consider the case of every possible `ExpressibleByLiteral` conforming type, for EVERY type of literal.
I think this sort of thing only applies when passing the literal as an argument to an initializer or an assignment. It wouldn't apply in any other cases; that would be too complex for the compiler and developer alike. If `Foo` conforms to `ExpressibleByIntegerLiteral` for example, you must first cast it to `Foo` to access any members defined by `Foo`.
Yes, it does only apply for literals. &gt;If Foo conforms to ExpressibleByIntegerLiteral for example, you must first cast it to Foo to access any members defined by Foo. Not the case for literals.
Oh wow. Bad assumption on my part. You're right. This is probably a bad idea. I wasn't aware that was how it behaved.
This adds zero bloat, as you code against the exact same platform APIs you'd use when using, say Java. Essentially, on binary level, the Android executable can't be told apart from a Java (or Kotlin) app, and the iOS one can't be told apart from one written using Xcode. Elements is not like Xamarin, which basically ports and pulls in the full .NET runtime as extra overhead (in runtime and in binary size). We don't bring this iOS SDK to Android (or the Android SDK to iOS) — we just bring the *language* (and a set of (optional) APIs you can use to write easier sharable code — the Elements RTL that the article refers to).
Okay that's extremely worthwhile for me and something I'd be interested in. Thanks for the clarification!
Cool! feel free to contact me at any time, here or directly via mail (mh@remobjects.com) if you have further questions.
Not OP, and Kotlin looks pretty cool, but it runs on top of JVM, so it inherits some of its inflexibilities, like lack of value type support and type-erased generics.
Has RemObjects fixed the issue with collections being reference types instead of value types? That's basically the one thing I need before I'm willing to use Silver.
Wish they went with Swift for server-side as well
&gt; What? What exactly is the difference between conformance to ExpressibleByImplicitConversion, and omitting this? To allow the user to write "init(convertedFrom:X)" without opting in to implicit conversion? I'm not sure I see the point. Giving the protocol a name looks like primarily an excuse to throw a compile-time error at the user if they forget it. &gt; I don't see how your example is massively worse than something like this, which is already possible: Because that only lets you opt any of 10-or-so types into any type, and they're all primitive structs, and most (all?) have literal syntax. With ExpressibleByImplicitConversion, you can opt *from* any type *into* any other type. Today, if you abuse coercion, it is possible to compile this: var x: NSButton = "hello, world" but it looks obviously wrong to anyone calling it. Programmers are not going to accidentally fall victim to this. It doesn't let you arbitrarily assign any value to any other value. For that matter, what happens if a type is EBIC from its own type? Or a supertype? Or multiple types in the same hierarchy? There's all kinds of hairy corner cases here that basically require knowledge of the entire class hierarchy to decide if they make sense or not. The current system is severely constrained, and probably for good reason.
Where's the Swift stdlib, then? Using Swift adds a many megabytes to the app even on Apple's platforms.
I didn't explain this, but it would only work with literals or direct initializations (`... = Foo()`), not from assigning one variable to another. Given that, I still don't think your example is any worse than what is currently possible. 
yep, but this isn't Apple Swift ;)
they did. 
I too share this concern. I like me my value types.
I don't know that I can answer for you fully, but I can provide some amazing resources: https://buyersguide.macrumors.com/#Mac &lt;-- This basically shows you when a model was last refreshed, and what the average time to refresh has been. http://www.everymac.com &lt;-- Here you can look up every mac released, get some base specs and other good info, invaluable if you are buying used. Depending on what you are making, I would try to end up with as much ram as possible, which may rule out some models that cap at 8Gb (you can get away with 8, but ...) I would dive in, and get friendly on this, iOS programming reddit, stack overflow. You can also find free/cheap learning bundles that will get you familiar with swift, and the apis you will be using for the most part. I am a "find a pet project and slog through" type, and thats what I did years ago, and have been keeping my hand in as it were stying up to date with my one little app. 
But how is this "hacking"?
Thank you so much for the tips and advice!!
Wow this looks amazing. I will DEFINITELY be checking out Elements. I think I understand how it works. I can't wait to try this out!
Interesting! How easily can I start using Elements with an existing (published) app written in Swift/Xcode?
Data classes are value types. Why does it matter if the VM has special handling? Kotlin also has reified types for generics at runtime
As an Android engineer that loves kotlin, tried swift, hated iOS development, and is from Curaçao, I am all sorts of conflicted about this article. Also - weather is 30 degrees, breezy, and partly cloudy 360 days of the year there. This might be the least needed weather app ever
mm, I would say that reified types are compile time mechanism of language. You can only use them in inline functions and for each call of such function compiler generates a type-specialized version of code. It doesn't solve type-erasure in general way which is okay tbh.
It says .NET for server
don't forget to Google your questions! https://stackoverflow.com/questions/4119117/restrict-mkmapview-scrolling (bottom answer is rewritten in swift) https://stackoverflow.com/questions/5680896/ios-how-to-limit-the-mapview-to-a-specific-region https://stackoverflow.com/questions/21194769/how-do-i-prevent-gmsmapview-from-infinite-horizontal-scrolling 
&gt; The term “Hacking with macOS” means we are “playing” with the Swift language, and using it in unique and interesting ways.
This is very interesting. Can you explain how is this achieved? Are you using the Swift compiler or a custom one? Is this ecosystem mature enough to use in bigger production apps?
Depends a lot in the existing code base, and your goals. Notebthat Elements is not target at just recompiling your iOS app for Android. It "just" gives you the Swift language for Android, and the ability to share code that is properly arlhiectured. IOW, your UITableViiew isn't just gonna magically port over (nor should it, really). Essentially, you'd think of your app as there distinct parts (in the example of doing iOS and Android): (1) shared code that is not platform specific — business logic, server comm, etc. (2) iOS-specific code (mainly UI, some os-specific features) and (3) Android-specifici code (dito).
Silver supports value types. The standard collection types we provide are referenced based for one simple reason: due to platform limitations, it is literally impossible to write a value-type collection that performs well on .NET or Java, because the runtime does not expose the proper mechanisms to safely do copy-on-write (that does not break apart on corner cases). You can easily substitute your own collection implementations for [T] and [T:U] if your prefer value-typeless over speed, though.
Oh I know, I meant to just compile it on iOS. I don't use any external libraries, so would that be as simple as an import?
except on the days when you do need it. ;)
yes. with Swift.
We use our own compiler. The ecosystem is very mature; the core compiler has been and for going on 13 years now, with different languages added over time, the Swift front-end has been in the works since pretty much the day Swift was announced and is very solid as well. I myself work in it every day, including on a multi-million line-of-code project that is our IDE, which started out as a pure Cocoa project and now cross-compiles to .NET as well with 90% of code shared and just the UI layer being separate for Mac/Cocoa vs Windows/WPF.
Yes! Xcode 9 re-introduces this feature for all devices running iOS 11. It’s currently in beta and will be released with iOS 11.
Awesome, thank you!
Do you keep up with the latest Swift versions? When Swift 4 lands how long will it take to support it?
And the Android app looks like shit. They're not using the usual hamburger icon, no material icons (outline icons just look wrong on Android)
I just started learning Swift and so far I prefer Kotlin. The compiler is a lot smarter when it comes to nulls whereas in Swift I usually have to add an ! after checking it because the compiler doesn't do flow analysis for this.
&gt; Data classes are value types. No, they're not. You can copy them using the copy method but they're just regular objects with some generated methods otherwise.
My bad. I didn't know you could use .NET with Swift. Just have read about Silver. Cool stuff.
and I believe you do not NEED a paid developer account to download the current xcode 9 beta 
First and foremost, if you have to use the ! in Swift, you are probably doing it wrong. Second, I very much prefer the Swift way of unwrapping `guard let` and `if let` because it's more convenient than if optional != null { val notOptional = optional! }
You're right
We keep very closely up to date, both with weekly (usually production stable) betas, and also official releases. Most relevant Swift 4 features (there weren't;t really that many *language* changes, this time around, thankfully. v3 was the big one ;) are already supported in the current beta — including the new multiline strings and even the (afaik not implemented own Apple's side yet ;) line break escaping — and will ship with our 9.2 update later this month.
thanx for the constructive feedback i'll pass that on. Of course Elements is just the tool, you can use pretty and ugly icons with it ;) In this case, the developers wanted consistent iconography across the two platforms, a decision one can agree or disagree with. There's always a line that needs to be drawn when doing "the same" app for different platforms, for what you want to keep consistent, and what you want platform specific. You can find popular examples for both extremes — apps the look totally the same, damn all platforms conventions (like, say, Facebook), and apps that almost look nothing alike (take, say, Apple Music on Android vs the iOS counterpart). Each developer needs to find their own balance fo what they think works best for their app and brand. Elements would facilitate either choice.
thanx! i've got an article coming up in the next few days that talks more about platform vs language, FWIW.
[removed]
Thank you for this.
~~Almost. But look at what happens when i is 15, 30, 45, etc. You don't handle those cases properly.~~ Whoops, yes you do. Though to be even swifter, I'd use default values for the fizz &amp; buzz arguments and omit the argument label for the first argument.
oh man, they introduced this in... Xcode 7 or 8? But it didn't really ever work. Excited!
This sounds like hacking with asphalt by using it in unique and interesting ways to build 18 projects like a road, a four lane road, a parking lot and many other public works.
Since you already started going down the functional path slightly :) func fizzBuzz(_ i: Int, fizz: Int = 3, buzz: Int = 5) -&gt; String { switch (i % fizz, i % buzz) { case (0, 0): return "FizzBuzz" case (0, _): return "Fizz" case (_, 0): return "Buzz" default: return String(i) } } (1...100).map({ fizzBuzz($0) }).forEach { print($0) }
Please post a link on this sub once it's online. I would be interested in reading it :)
Just came in here to say that switch statement is sexy af
Nice work. 
Where the functional one liner at?
I'd prefer `case (_, _):` over `default:`, in this case.
Hard coded 3 and 5 instead of passing variables seems much more succinct to me. 
Enh, if you're going to do that, you may as well just call it like: (1...100).forEach { print(fizzBuzz($0)) } Even if Swift optimizes away the intermediate value from the `map`, it doesn't add anything to write it like you did
Fair. In this case it's mostly a taste thing – I think the `map` + `forEach` shows better what's going on (and invites further building blocks before the final `forEach`). Regardless, I wouldn't really think about optimizations in code that doesn't deal with neither deadlines (eg. animation) or large amounts of items until it presents itself as a potential problem.
Using `print(fizzBuzz($0))` seems a little dense for a single line closure. If you're performing multiple operations on an element, then you should use a multi-line closure. By using `map` the two operations are separated out into more understandable chunks, and only one operation is performed per closure.
Presumably this would be preferable because there are a finite number of cases, so it would be better to exhaust them, than just use `default:`, right?
I like the implementation proposed by /u/andreasblixt and /u/Nerdlinger of using default values (i.e.): func fizzBuzz(_ i: Int, fizz: Int = 3, buzz: Int = 5) -&gt; String
I still don't see why. If you want the named variables use local constants. 
This way lies madness: (1...100).map { $0 % 3 == 0 ? $0 % 5 == 0 ? "FizzBuzz" : "Fizz" : $0 % 5 == 0 ? "Buzz" : String($0) }.forEach { print($0) }
While hard coding 3 and 5 might take up less space, hard coding "magic numbers" is a bad practice for two reasons: 1. When reading old code, it is more difficult to understand what they do. By making them variables, the code is more expressive. So whether you are returning to an old codebase, or just want to change the values, using variables is better than hard coding. 2. With default values, the code gives more flexibility at the call site, without exposing any additional complexity. If the function's caller wants to change the values to look for, it can. But if it just wants the default behavior, it doesn't even need to know the other arguments are there. Tl;Dr: using default values makes for more readable, more expressive, code, without causing any inconvenience to the function's caller.
&gt; If you're performing multiple operations on an element, then you should use a multi-line closure. Why? What is the benefit of artificially reducing closures to one (apparent) operation? It doesn't improve readability (especially in this case), and you wouldn't apply this 'only one operation' restriction to regular functions. Is this somehow related to Python's ridiculous restriction of lambdas to single line expressions?
will do!
Python is where I first encountered FP. I had assumed that the lambda philosophy, if not the actual restriction, was present in Swift. Upon reflection, a multi-line closure wouldn't actually make sense in this case, as the relevant code would still be a single line. Admittedly, I would probably write `forEach { print(fizzBuzz($0)) }` in an actual program. That said, just because I would first think to write it like that, doesn't make it idiomatic. In Swift, are statements like `forEach { print(fizzBuzz($0)) }` commonplace? 
Yeah, I thought it might be Python related. I'd been using ML for ages to program and I remember being woefully confused when I first encountered the Python restriction. As for being idiomatic or not, Swift has never seemed to be as "one way to do it" as Python. I've certainly never seen anything to suggest that programmers are dissuaded from using that form. I do know that multi-line/multi-instruction closures are pretty common.
Why does it matter what the bytecode looks like? 
It's fizz buzz. Let me say that again in case you missed it: this is fizz buzz. And let's take your argument seriously even if it's silly in this case: why not just define two constants? Flexibility in this case means making the code fail at fizz buzz. Failing isn't very useful. 
I don't think your app will be rejected. Just ignore the message. To avoid this error, next time specify what firebase services you actually want to use. If you use cocoa pods, instead of pod 'Firebase,' use for example pod 'Firebase/Analytics' You can't of course submit the app for review without a build, how could the review it if they don't have the app?
Here's my take: extension Int { var isFizz: Bool { return self % 3 == 0 } var isBuzz: Bool { return self % 5 == 0 } } func printFizzOrBuzz(_ i: Int) { switch (i.isFizz, i.isBuzz) { case (true, true): print("FizzBuzz") case (true, false): print("Fizz") case (false, true): print("Buzz") default: print(i) } } (1...100).forEach(printFizzOrBuzz) 
you can shorten `map({ fizzBuzz($0) })` to just `map(fizzBuzz)` .}
I feel like you're overgeneralizing this. Not only are fizz and buzz not going to change, naming them actually obscures what's happening a bit. func fizzBuzz(_ i: Int) -&gt; String { switch (i % 3, i % 5) { case (0, 0): return "FizzBuzz" case (0, _): return "Fizz" case (_, 0): return "Buzz" case (_, _): return "\(i)" } } (1...100).forEach { i in print(fizzBuzz(i)) } 
I concur.
That's a fair point. I left it in with default arguments to keep the behavior of the OP, but this is very succinct, nice!
I'm really sad there isn't a https://developer.apple.com/documentation/foundation/numberformatter based solutiom in here ಠᴗಠ 
If you put `.lazy` right before `.map`, it doesn't store an intermediate array.
Swift had something like this for a while actually (spelled "func __conversion" if memory serves). It was removed for two reasons: * Each possible implicit conversion is another multiplicative factor for the type checker (this is why arrays of literals were so slow for a while; the multiple possible types for each one) * Sometimes there were extremely unintuitive results. For example, you can't use '===' on Ints in Swift because they don't have identities to compare. Buuuut… if Int is implicitly convertible to NSNumber, that *does* type check. It just doesn't do anything useful at runtime. The longer the chain of implicit conversions needed to find one that type checks, the less intuitive the result tended to be.
It's always interesting seeing the reaction to swift of those who came from other languages. I'd dabbled in Objective C but couldn't get my head around it, but Swift seems so much more natural to code and read.
Yes, Firebase seems to be where the root of the problem is. Thank you!
Cool stuff! Thanks for sharing. Seems like Swift is the language I chose for app development after Python. I am not a programmer, but learning to code bits by bits somewhat, I play a bit with ChucK, Processing, NodeBox and Blender nodes. I have a big curiosity on a couple of things: Can Swift Playground on XCode and maybe iPad generate SceneKit 3D contetns in a way like Processing can procedurally generate arts? Ok probably the answer is: of course you can! But after few hours browsing I got lost. There is even Swift Playground Book to add to confusion. I saw some YouTube videos with cool example where we can make our own Live View of some sort... but wow Playground is not as easy as actually playing with Playground setup by other developers. Playground itself is almost like an app builder in itself, without the convience of XCode. Anyway... Swift seems to be Python with lots of ability like interactive programming ala Processing. 
Sorry if this is not the right place. To be honest I didn't know where to put it and this is just something fun you can do with your kids which I wanted to share.
To me it's mostly the visual symmetry of it, because you've already got every other combination of 0 and _ in each position. But I'm in the camp that says `default` needn't be in Swift in the first place, because `case _` is functionally identical and generally fits in better in Swift (or seems more Swifty) as it's a natural extension of a more general syntax. Others prefer to use `default`, because it seems less ‘magical’ or (arguably) makes it easier to see it handles all remaining possibilities. It's very much down to coding style.
ITT: Can one play fizz buzz with other values for fizz and buzz? &gt; To make our new fizz buzz the very best fizz buzz, we had to define the underlying principals led us to create the original fizz buzz. Is it our values for fizz and buzz that make the game truly great, or is it the application of fizz and buzz in the elegant value replacement function that our customers adore?
Maybe xpost in /r/gravityfalls
This is way too vague for anyone to give an answer, so here's a [WAD file parser in Swift](https://appventure.me/2016/07/15/swift3-nsdata-data/).
Here is my revised implementation based on all of the feedback: func fizzBuzz(_ i: Int, fizz: Int = 3, buzz: Int = 5) -&gt; String { switch (i % fizz, i % buzz) { case (0,0): return "FizzBuzz" case (0,_): return "Fizz" case (_,0): return "Buzz" case (_,_): return String(i) } } (1...100).forEach { print(fizzBuzz($0)) }
I learned iOS development using objective c and didn't have a liking for it but now after picking up swift, I'm getting back into it 
Unfortunately, the available numberStyle options are too limited to do this without just subclassing, at which point you would override the `string(from number: NSNumber) -&gt; String?` method, with the same code as `fizzBuzz` currently uses. 
As far as I know, this is not possible. You should probably stick to the bridging header, because the Clang importer is responsible for inserting the bridging logic into things like NSLocale.Key.
What a nice read 
Sounds like you'll need to record the path and then set the image's center to points on the path after a delay?
Can't remember off the top of my head but swift just have some sort method that takes in a comparator closure
I was writing this mostly for programmers - but I guess posting this there make sense. Thanks!
 let sorted = myImageArray.sorted(by: { $0.timestamp &lt; $1.timestamp }) 
Nifty. I know Apple encourages use of other controls like UISwitch and UIPickerView because they are better Touch targets than checkboxes and radio buttons. But Apple has clearly made and uses their own implementation radio-button-like interface elements on iOS (e.g. in Reminders and iBooks) so much of the work has been done. I'm glad someone did a **very simple** implementation, though. I expect that someday Apple *might* make their UI implementations available on iOS and it's because of that possibility that I always want to keep the library as simple as possible. Thanks for this.
as i understand it spritekit uses scenes, so each level is a scene. scenes can be created by using the spritekit visual editor (.sks files) i think some youtube videos can assist on this `search for spritekit on youtube or spritekit levels
Swift switch statements are *always* exhaustive. Ones without default therefore are more specific and safe for this "class" of transformation problems. Think about what happens if you add a "Print 'Boop' for things divisible by 13" requirement. Default gives wrong behavior and it may not be obvious why especially if this requirement changes several disparate parts such as the display, some networking code, etc. This is *very* at odds with best practices in C based languages, but is neverless, the **case**, ahem, for Swift.
I'd probably consider any such solution to be from a Cocoa coder trolling Swift people. But good point.
Yeah, that is exactly what I'm trying to do
Actually, no, that doesn't work. It autocompleted for me but it doesn't compile. Can you show me a working example?
Install the app from Xcode again. Free provisioning through Xcode only lasts a week.
Thank you. I’m really glad you found some use for it. It means a lot. The other implementations out there have been huge and their drawing code tends to slow down compilation. An Apple supported version of this, complete with animations, and customisations would be very welcome.
You have a few choices. One, you could use a navigation controller because those will always position content correctly respecting the status bar. Second, you could just shift all your content down by 20pts, which is the height of the status bar.
Could you post a screenshot of your storyboard?
Or spring for a paid developer account. 
If you're using the "drag and drop" method in Xcode to add labels etc to your story board, you should get a guide for the boarders if you drag items towards the top, this indicates where the status bar (time, network carrier, signal etc) is displayed. If you keep any items below that guide you should be fine. Worth noting while dragging things around the story board, you'll also be presented with guides for vertical and horizontal centres to help you place things where you want. 
Until the user is tethering, or using navigation, or using Carplay or (what everyone seems to forget...) Carplay + navigation. 
Edit: here's some places to start, https://stackoverflow.com/questions/25973733/status-bar-height-in-swift
As with so many things in design, there is a technical aspect and a philosophical aspect. So, yes, technically, your view controller could reach into the player, pull out the role and madly start casting. But, philosophically, this is bad. It leaks implementation details of player and role into other parts of the app. Which then, technically, makes it very difficult to change things. Suppose later you decide that roles were a bad idea and you want to fold the attributes there into player or model them as 'traits' or 'habits' or 'superpowers' or whatever. You not only have to change roles AND players, but also hunt around everywhere that you have depended on players having roles and the contents of those roles in order to make the change. There are no hard and fast rules, and I think you will need to go through a couple (or more) iterations to get things the way you want them. The first thing I would do is try to adhere to the rule that one object is not allowed to 'reach into' another object and 'know' how it is implemented. So, in this case, the view controller may not directly access the player's role. In order to accomplish that, you need to recast the way in which the view controller views the character. Instead of grabbing its role and checking something or other, the view controller should just be asking the player, 'can you do x' or 'have you got the superpower to do y' or 'have you got the money/strength/knowledge to do z'. Then the player can consult its role to answer the question. Because, presumably, ultimately the reason the view controller is grabbing the role is because it is going to use one or more attributes to determine if the player can do something. I think it is better if the view controller just sends a method asking if the player can do the thing and the player method using the data in the player and the data in the role can answer the question.
Your convenience init? method must call a non-convenience init method at some point. You can get rid of the error by putting this line in it (however, this is not what you ultimately want there, i think!): self.init(title: "foo", text: "bar", timestamp: Date()) Now the convenience init is calling the other init. But, presumably, the convenience init should be doing something with the aDecoder? 
Tbh probably Lyft, Uber, and AirBnB.
yea, i mean 2017 most popular apps, created just this 2017?
In your storyboard select your view controller. After selecting it goto the property inspector, there should be a field for status bar. Set the status bar to none to hide the status bar. 
It's super annoying that even some of Apple's apps have 20 points for the status bar hard coded.
Inside your vc, use topLayoutGuide.length as your content offset. Source: I made many apps 
Which?
If I remember correctly, Uber recreated its app with new design in Swift this year.
Quick explanation why I deleted the post: I forgot a question mark in the property section of the class... Now it works!
photo is an optional parameter in your init (so the input can be nil) but the instance variable photo is not optional. You have a few choices. 1. make the init parameter for photo non-optional (photo: UIImage) 2. make the instance var optional (var photo: UIImage?) - This may be acceptable since you'll probably use a UIImageView to display the photo and it allows an optional UIImage. 3. Since the initializer is fail-able (can return nil) you can add to your if statement: || photo == nil. You'll then need to unwrap photo when setting it to the instance var (self.photo = photo!). You rarely, if ever, want to force unwrap without checking for nil. What you choose to do is predicated on what you intend to do with the image and the class.
Wow. This is a fantastic answer that I definitely didn't think about. It certainly puts a different spin on things. Thanks so much for it. As a self taught dev, these sorts of answers that expand how I think about coding are the most valuable. :D
in many cases, yes. just drop in the source and go.
Describe the problem. What causes it?
Can you explain it a little more please? What exatlly shoud i write into my ViewController code? topLayoutGuide.length = ? Thank you very much!
AutoLayout and align it with the top content guideline.
2) which backend do you guys find easy to use with swift when building a mobile app? I guess security and ease of use would be my top two priorities. Suggestions? Firebase, lots of videos on the subject integrating it with iOS apps 
Well done mate! Hope this will give your career a boost too. 
I created Bodybeat+ and Bodybeat
Annoying. I hope they remove that stupid restriction.
it's out now: http://blogs.remobjects.com/2017/08/07/platform-vs-language/
Thanks!
The programmatical approach: override func viewDidLoad() { super.viewDidLoad() let font = UIFont.systemFont(ofSize: 20) barButtonItem.setTitleTextAttributes([NSAttributedStringKey.font.rawValue: font], forState: .normal) }
I guess it depends what you mean by "popular", or "application". Apple says the Dock is Swift, and OS X has ~100M users. From some statistics I found online, Lyft has only ~3M users, and Uber ~40M. Or if you restrict it to iOS, Calculator is installed on every iPhone.
X-Post referenced from [/r/iosprogramming](http://np.reddit.com/r/iosprogramming) by /u/Palleas [How to use Sourcery to speed up your Swift development](http://np.reddit.com/r/iOSProgramming/comments/6s6fa1/how_to_use_sourcery_to_speed_up_your_swift/) ***** ^^I ^^am ^^a ^^bot. ^^I ^^delete ^^my ^^negative ^^comments. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
This is to stop people from installing apps that would never be on the App Store. 
 AirBnB uses react native
Apparently they have a mixed structure and a majority is native with Swift: https://medium.com/airbnb-engineering/getting-to-swift-3-at-airbnb-79a257d2b656
This kills the status bar. 
Agreed. Source: backseat iOS developer
Of course you can. But it will take a while :)
I'd say it'd depend on how complex the app is! If it doesn't need internet access or need to store data then it's probably very very realistic. The more complex the idea the more difficult it will be but you'd be learning along the way! Totally doable ether way just need to commit to it
It would have to be connected to the internet and store data for sure. Could you estimate a time frame for someone with no knowledge of code to become someone capable of writing a complex app?
It's really all about how long it takes you to learn some stuff and if you can find some easy to digest tutorials online. Amazon and Google both have great platforms for web services so I recommend checking those out for your "back end". I only have experience with AWS (Amazon Web Services) but the "essential" stuff for most apps would be: User login - Cognito Data base - DynamoDB Endpoints - API Gateway "Server Functions" - Lambda File storage - S3 Most of that stuff you can get a decent prototype out there for free for at least a year and assuming you aren't throwing a ton of data around it should be fairly inexpensive to host everything. Amazon has a "Mobile Hub" which gives you a sample app that has all of the login / sign up / forgot password done for you so you can get to just doing your app if that is appealing to you. For an estimated time frame, assuming this was your only job and you put in 40 hours and had no real programming experience I'd say 6 months to a year if it's a complex application and you're the only one doing anything.
First, off I'm new to swift (2 days old just starting to learn) but I have programmed before. For the how long it will take it totally depends on the complexity of the app. You could use things like Firebase to make it easier if you need to work with data. Even though I have some experience programming before I'm also literally just staring out on IOS. So if you want to work together or see how I'm learning IOS at moment just hit me up. 
I was starting to look at the books Apple wrote for swift with Xcode. I may look into tutorial videos. A graphic design Proffesor I once suggested the tutorial service called Lynda. Any suggestions of the best place to learn?
The new Apple Swift book is supposed to be really good (and free) so I'd use that for learning swift. Look in iBooks for swift and check out the ones published in 2017. We are just about to go into "Swift 4" but most of the Swift 3 information you find should be fine as well. AWS has tons of tutorials on using all of their tools (although not all of them are up to date / well designed) This blog posts looks alright for explaining how AWS and iOS work together: https://peterfennema.nl/exploring-aws-as-a-backend-for-a-swift-app-1/ Raywenderlich has tons of great free tutorials for just about everything iOS. As far as Lynda and really any subscription tutorial sites I haven't ever used them. There is so much free information out there and I've heard some of those sites may have some crazy number of tutorials and hours of video etc. but sometimes half the videos are out of date. I'd really stick to the Apple books for swift and just google around your problems at least at first. Then after a month or so if you still feel you need a better structured learning platform then maybe look at some subscription sites. Also check out stackoverflow.com for asking questions and finding answers. That's a great developers site for finding answers to your problems.
Thank you so much for all the info! Are you talking about the "Everyone can code" series that Apple did?
Might take you 5 months. Might take you 5 years.
[Read this](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Functions.html#//apple_ref/doc/uid/TP40014097-CH10-ID166).
I believe this is the ebook I was thinking of: App Development with Swift by Apple Education https://itun.es/us/SoKQib.l Looks like it's supposed to build on the "Everyone can code" series so check that out too. Intro to App Development with Swift by Apple Education https://itun.es/us/aVbRcb.l Here's a "beta" book for swift 4 but I'd look at this last since the others are more learning to program and this one is more what's new in swift 4 vs swift 3. The Swift Programming Language (Swift 4 beta) by Apple Inc. https://itun.es/us/k5SW7.l
Thanks a lot. After reading that, however, my question is what's the benefit of argument labels? When can they be omitted and when should they be used? Most functions I've worked with so far simply don't use an underscore and just don't write an argument label. For example, here they explicitly put an undefined arg label for the first, but don't put any label for the second: func someFunction(_ firstParameterName: Int, secondParameterName: Int) { // In the function body, firstParameterName and secondParameterName // refer to the argument values for the first and second parameters. } someFunction(1, secondParameterName: 2)
The _ means that when the function is called, the parameter is not named... For example: func pleasePrint(thisString input: String) { print(input) } would be called like: pleasePrint(thisString: "Some string I just made up") So the "thisString" part is what you use as the parameter/argument name, and then "input" is the shorter/clearer name for the same parameter/argument that you used in the code block when you wrote the function. If we changed the function to: func pleasePrint(_ input: String) { print(input) } then it would be called: pleasePrint("Some string I just made up") So the _ just means that when you call the parameter/argument, you do not give the parameter/argument a name.
I've seen developers start from nothing and learn how to program with data structures and following OOP principles using python within a year. I say it could take just as long with Swift
Putting a word before the parameter name will be the *external* name that will be required when calling the function: func addColorTint( r red:Int, g green:Int, b blue:Int) { } addColorTint(r:100, g:100, b:100) instead of: addColorTint(red:100, green:100, blue:100) Your API-users might insist on the short names for common-use cases, while you might want the longer parameter names in your code because you have other variables like route, glow, and brightness that *you* want to distinguish from. You use the underscore `_` in when naming could lead to confusion. For example, if you want to loop 5 times but never use the value 1...5, you might use: for _ in 1...5 { } Similarly, you can use the underscore in external parameter names if *HAVING* a parameter name would be confusing or redundant. func tryLoadingView( _ viewToTry:UIView) { } In this case, the function name `tryLoadingView` sets the expectation what it needs, and with Xcode showing the parameter type of UIView, it might feel much more usable when calling: tryLoadingView(myView) than the more wordy version: tryLoadingView(viewToTry: myView) Sure, you could also write your function so the object is clearly labelled as a parameter like: tryLoading(view: myView) But in this case, you might have many `tryLoading` functions and you want the distinction of having the object in the name. That was often the case in Objective-C naming so the first parameter was usually unlabelled and the method name contained the action as well as the object in the label that would normally be the label on the first parameter. Swift 3 made a big effort to customize the Cocoa names, but there's much more code written by folks other than Apple that's still in the Objective-C naming style. Naming is a trade-off. The underscore helps hit that compromise of verbosity and convenience.
Really can't thank you enough for this reply. Extremely informative and well-written.
I have done exactly that. Two and a half years ago, during my last year at school I began to get into coding as I was very interested in programming my own app for iPhone. So I started with the free book provided by Apple. I then went on Udemy and bought the Web Developer Course and the iOS developer course from Rob Percival (it was iOS 8 back then if I remember correctly). After that I thought I was proficient enough to start iOS development (little did I know). Anyway, I started to code my first app somewhere around Christmas 2014, I was finished, at least finished enough to satisfy my expectations, in August 2015. The app went on the AppStore in August 2015 and stayed online for one year. After that I didn't rebuy the Apple Developer Account so it wasn't available for download anymore. Last october, I started my Software Engineering degree and have since rewritten the app completely. To sum it all up, it is totally possible for you to get a working app in a timeframe of 1 year. But be prepared that you will make some mistakes, like I did, that will bite you in the ass in the future. (In my case I completely trashed the database design) But this will only be a minor setback and you will learn a lot. 
It is possible to refactor VC by VC as you scale, but in the end in order to switch to another architecture, you will have to rewrite most of your app, some times even more code considering you have to maintain your current product. But it’s often practicality decide which architecture you are gonna use for your product, if you don’t see your app used in a very large scale in the near future, I would say stick with MVC and refactor when you got the time and money for it
Learning Swift in my free time while working full time, I was able to start feeling really comfortable after about a year and a half. This is when I was able to write a lot of functions without having to re-google them, and I was able to figure things out without much struggle. Now, a little after two and a half years total, I feel more comfortable with programming as a whole. I understand some of the underlying concepts better, I can read and understand code documentation, I can understand what’s going on in other peoples’ code, even in programming languages I’m not familiar with, I can convert obj-c code to swift, etc etc. A lot of this was very tough. It was my first experience with a Mac, it was my first experience with Xcode, it was my first experience with swift, it was my first experience with programming as a whole (besides some basic MySpace html tinkering), Swift was a brand new language that had very little online presence, and I didn’t know anybody else who was a programmer for me to go to for advice. You can do it if you are determined. You will research simple problems for days because you don’t know what words to google or because you don’t understand what people are talking about on their StackOverflow, you will find tutorials that answer every question except the ones you have, or you will not realize that the problem you think you have is actually a problem with something else and you will be asking the wrong questions. There are very simple problems that I had to run into 5-20 times before I remembered how to solve them on my own. I’m not trying to scare you, but I want you to know how it was for me. But, because things were so difficult, it has been a rewarding experience every day and I still feel super smart whenever I do anything for the first time. It’s pretty awesome. 
What is considered large scale though? Let's say a decent large college
The restriction C++ rolls with to try to fix this is the "one user-defined conversion" rule. Granted, that doesn't help you with `std::vector&lt;std::string&gt; {{"one", "two"}}` Which creates a `std::vector` of `std::string` alright, but calls the `std::string` initializer that takes two iterators - naturally convertible from the string literals.
There’s a reason that Apple makes this info so difficult to access—if you need it, you are probably doing something you shouldn’t be. Your app shouldn’t be checking for specific device models and screen sizes. Instead you should be using methods that allow you to check for specific device capabilities and using auto layout to make sure that your app will work on *any* device with any screen size. Not only is it less bug-prone, but it will also make your app future proof to new releases. I’m reminded of Microsoft being forced to go straight from Windows 8 to Windows 10 because (supposedly) there was a lot of legacy code lying around that checked if a program was running on Windows 95 or 98 by checking if the name of the OS started with “Windows 9”. Apple has been careful to discourage hacks like that by obscuring these kind of checks in the API.
If you can see yourself dealing with requests such as “change this button’s look globally within 2 days” constantly or there are hundreds of reusable components in your app that can be changed at any second, more complex architecture might be needed. Or just think, is it worth the time to create 8 different files every time when you could create just one, only for the possibility that it can change in the future?
Yep. Everyone started somewhere. Except that guy that everyone knows who was fucking born knowing how to code. You bastard Frank. 
At this year's WWDC, Apple highlighted the story of an old lady (like 70+ or something) with zero prior experience who learned how to program using Swift and published an app all within a year. So like... it's doable! Of course I dunno how intricate her app was, but the point stands, you know?
Developing the client side of a mobile app will take some time when starting from no knowledge. Be sure to take into consideration the time it will also take to learn node.js and the ins and outs of heroku/AWS. After that you’ll need to learn how to write user Auth, and all of your endpoints. Get the hang of sql/no-sql. (Be sure to sure to take into account best practices. Auto scaling resources like AWS will be extremely pricey if you make mistakes and are inefficient in what you are doing) It is daunting from a high level. Break it all down into individual pieces and start tackling it one by one. You’ll get there eventually. 
A lot of work can go into a seemingly simple app. It is very commendable to want to tackle that yourself, but like any profession there is a reason why developers are paid for the work they do. If you happen to develop a passion for it (see what I did there) you will have a great time!
Learning to program is hard. Full stop. That said, some people take to it like a fish to water, others never really catch on. Remember that awkward kid trying to learn how to dribble a basketball...like that. Swift is not the worst language to start with, but it is high level. If you just want to learn how to program, I would start with something else. (Python, JavaScript). But if you want to feel better, Swift is much easier than ObjectiveC and C++.
Somehow I got it to work, even though I'm pretty sure I tried it this way before, but whatever.
Since OP did not mention if he wants to show the status bar, I just assumed he would like to hide it.
Specifically it will probably take 1-2 years to be useful, 5 years to start getting good, and 10 years to approach mastery.
Not yet. But keep pushing at it b/c otherwise it'll never get there.
Personally, I think if you write code in MVC while planning carefully and thinking ahead, MVC will scale indefinitely. This means not stuffing logic and data handling code into view controllers, and knowing when to split off classes in order to properly encapsulate functionality. Also unit tests will go a long way towards keeping your code functioning properly.
There are a few different kinds of initializers in swift. Convenience initializers must call "designated" initializers (aka regular initializers) before they exit via self.init, the same way a regular init must call super.init if a superclass exists. 
I have free access to Lynda through work, and it's pretty good. Simon Allardice is the swift teacher (as well as other general programming courses), and he's great. I've used Treehouse (teamtreehouse.com), and I think their iOS with Swift track is pretty good. You should also check out the Stanford iOS course that's available for free online.
This sounds extremely familiar. Part-time programming is really hard. It will also eventually make you hate your non-programming job ;)
Yes. And no? It depends on your needs. If all you need is a simple database, REST API, and the ability to serve web pages (like most services), definitely yes. I've seen a few edge cases where people have said it didn't serve their needs though. I also tried Perfect, and in hindsight, I think it was a horrible experience. I much prefer Vapor, which feels a lot more in line with traditional iOS development, but generally feels simpler and clearer. Check out http://Vapor.codes for more info, and I recommend joining their Slack, where people much more knowledgeable than me can answer questions about any specific needs you may have. 
Try Vapor. Perfect was.. not quite perfect
I'm running an app on Server side Swift, using Vapor and the SwiftKuery adapter from Kitura. I'm sure other stuff is work on progress but for a good number of use cases, Server Side Swift will meet your needs 
&gt; Recently I interviewed with a company and they assigned me a practical challenge. You asking us to write your job application?
No way.. does it sounds like that..? Title says code review.. also I already provided git link to my completed project.
very realistically. is started learning swift in may, beginning with this book (german): https://itunes.apple.com/de/book/einf%C3%BChrung-in-die-app-entwicklung-mit-swift/id1215105506?mt=11 the english verison ist 5x longer, so definetly more in depth: https://itunes.apple.com/de/book/intro-to-app-development-with-swift/id1118575552?mt=11 the books are free and made by apple. they come with excercises that helped me a lot. after i finished the book (1-2months) i imidietly started with my idea and quickly noticed that my skills arent good enough yet. i ordered this book: https://www.amazon.de/gp/product/1491970073/ref=oh_aui_detailpage_o02_s00?ie=UTF8&amp;psc=1 its super great, extremely well written and it answered so many questions that apple didnt. yesterday i enrolled in the apple developer program and im planning to submit my first app to the appstore end of this month. the app uses firebase, pushnotifications, a timer, has a tutorial (when opened for the first time) and some more functions. definetly get started! swift is fun! also connect to developers in your area through meetups for example. they are always happy to help! 
For anyone wondering.. don't misunderstand the post. I am not asking your help to write the code or to complete the project. ALL AM ASKING IS A CODE REVIEW, because I am unable to figure out what I should do to improve my coding practices.
I just pushed a commit of my Vapor app to a dokku instance running on linode. It's pretty badass.
you also need to realize that the types you have learned about so far (int, string, double, etc.) are not the only ones. every object in swift is a type, so every object in swift can be passed as an argument to a function. you can pass instances of a class to a function (like done with the first argument in your example), you can also pass functions into a function. same goes for returning. for the _, other people here explained it well.
In iOS, only specific app types are allowed to run in the background, and this case does not sound like it. [(info)](https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html) Either way, I would store the date/time when it was last reset, check it on startup and update the other bools you mentioned as needed. It’s more efficient over all, doesn’t claim your users’ resources and your app doesn’t break if the user decides to turn background tasks for your app off.
So say that I wanted to reset these bools once a week, how would I go about implementing this? I’m assuming it would be an if function in viewdidload, correct? But how do I go about subtracting the time since last refreshed? 
You don’t reset it weekly. You update whatever you need to after the fact; whenever the app becomes active and some updates are needed. Let’s assume you are working on some habit tracker that can show if they are on a streak and statistics about how they did in the past few weeks. User downloads your app, uses it for two days and forgets it. Your app is suspended indefinitely but you implemented a variable ‘amazingSuperShutdownDate’. Three weeks later user opens it. In your appdelegate you call a function that compares the current date to the date in ‘amazingSuperShutdownDate’. If it’s more than a week since whatever you kill his streak and update your database to reflect his horrible performance in the three weeks before. E: I wouldn’t do perform the check in a viewDidLoad() because it will be called every time you load the ViewController. I’d go for the app delegate. Read up here: [(link)](https://developer.apple.com/documentation/uikit/uiapplicationdelegate)
I tried Kitura, ran it on bluemix free-tier server and implemented a facebook login. Seemed stable enough for me. Didn't get to the database stuff as I was too thrifty .D
instead just store the BOOL with a Date, if the date has passed (one week from today or whatever) the BOOL is automatically invalid
Go to iBooks store and download “Everyone can code” series by Apple, start with Intro to app developme book, go through every quiz, exercise etc. And you will get a hang of it for sure. :) 
Cant you do it in the app transport security in the PLIST only whitelist the 2 websites, any others wont load? I dont think this will work if your using SafariWebView 
MVC is a framework for encouraging use of the Single Responsibility Principle. It's not something you have to either be doing or not doing, but it's something that helps you to split the responsibilities of your app in a reasonable manner from the get-go. If you decide you want to use a different architectural pattern, you can start using it in any new code you write and migrate existing parts of the code base as you change them. It's fine for MVC to co-exist with other architectural patterns. If you get the feeling any of your classes or structs are getting quite big, take a look over the code and see if the entity has multiple responsibilities. If it does, split each responsibility into a separate entity, and name the entity according to what its responsible for. MVC doesn't have to only consist of a 1:1:1 ratio of models:views:controllers - you can have multiple layers of controllers for example, a few controllers which each control a part of a composite view, and a controller to control those controllers. Same goes for models and controllers. As your project becomes more complex, you'll need more layers and entities to keep your code 'clean'. Don't be afraid to split existing entities into multiple classes/structs, since if you make the split well, it will help your project to stay scalable and maintainable. It doesn't really matter whether you can classify what you're doing as 'MVC' or not, as long as you've separated your responsibilities in a reasonable manner.
On the other hand, swift prevents you from making some stupid mistakes, which occur very often when one is just learning 
The description says pinterest but the code uses tumblr? Here are a few thoughts from a very quick read (I didnt try to build or run the app). I didnt look at all the code, but main thoughts are to work on style / readability (including names) and tests. I also found the heavy use of static / class functionality strange, but would be OK as long as it could be tested General: - Be consistent with styling, I wont say what is the correct style but pick one and stick to it (e.g. `{` on same line or new line) - Clean up unused code (Xcode template comments in viewDidLoad for example) - Spacing in arguments: `forFile:AnyObject,cost:Int,key:String` is really hard to scan while reading DownloadManager.swift: - `session` already has queueing functionality, not sure why you need another one - in `getCacheForFile` you return `AnyObject` but the docs say this returns `AnyObject?`. Then at point of use you check for `NSNull` which results in hard to understand code IMO - The only test for this class relies on using the actual network, so will fail if the API changes or the network is down etc - The class doesnt really add much to URLSession except for caching which is probably a different responsibility Model.swift: - `fetchImageData` returns only a flag, not the actual images or data? - watch out for force unwraps, even if you have checked for nil (which you havent in a few places) - You are using NS classes a bit, if its a swift task I'd try to use Swift versions (Array vs NSArray for example) - Back to optionals: on line 58 you check that something is not nil, but then force unwrap it as a String, which is not the same thing - completion being called before the cache is updated could potentially affect users of this class if they expected a successful download to update the cache - NS classes again: all of the do / catch check for `let error as NSError`. You get the let error for free so dont need any part of that - No tests!
You could implement a local notification to fire at a specific time and have the appdelegate to act on it. Just end the procedure with creating a new local notification firing at the next planned date
Vapor is the real deal
This is the most easy and clear way I think. I did it before on my project.
No, so far
Use a date instead of a book to do the checking?
That's what I've been looking at this time around. The key things I need are websockets and the ability to make outgoing requests. Last time I tried, NSUrlRequest didn't work on linux and I couldn't find a good workaround that did
My primary needs are websocket support, the ability to parse various data formats (XML, JSON, HTML DOM?), and the ability to make outgoing requests. NSUrlRequest didn't work on linux last time I tried 
I assume you could do a timestamp when last updated.
Myself for example: no programming background except a little VBA and tried to pick up java a while ago. Started learning swift 15 months ago. Feel like I'm getting hang of things and building my own Mac program at the moment. Some problems do take a lot of time to figure out but I usually resolve them with help from the Internet. I would consider myself as pretty smart though and have a good STEM background.
Vapor definitely supports making outgoing requests, and has included tools for parsing (and constructing) different data formats. I'm confident there are tools for dealing with websockets as well, but I haven't messed around with that yet. You should join the Vapor Slack and ask the community in the general channel. 
https://itunes.apple.com/us/course/developing-ios-10-apps-with-swift/id1198467120 I recommend this, but it requires you to have prior knowledge about OOP and basic programming concepts. There are other recommended courses on that link.
Yay Open Source! But don't forget to add a License!! It's super important since unless there is a License file people are legally not allowed to use your code. Create a new file on Github and call it "License" and it will already give you some templates to chose from. You can use the MIT License for example if you basically want to allow everybody to do almost everything with your code. Google the license names and you'll quickly see which one is suited for your project. 
I've got web socket servers on vapor, no problems yet but relatively low traffic right now. The community is really great, definitely join the slack 
Vapor has it's own HTTPClient. As should any decent web framework in Swift.
I'm releasing my web framework's beta this week. Just shameless self promotion. It's part of OpenKitten.
I'm currently in the same boat as you. I barely learned programming back in high school but found it interesting. Years later now I found myself really wanting to learn how to code for an app. I've been learning Swift for a month now and have been using Lynda the past 2 weeks and love it. There's an instructor named Todd Perkins and he teaches a great course. There's lots of great information on Lynda such as how to setup location based notifications, how to structure your app more efficiently, UI Design, etc. I would pay for 1 month on Lynda at minimum if you have the money available. 
Skip AWS for now - if you don't optimize code in terms of how often you access the service, you'll pay for it (literally). I racked up a huge bill in a test project back in the day setting up S3 buckets (an Amazon cloud service that hosts and serves static files). Definitely check out Firebase! It'll teach you NoSQL, JSON and data normalization. You get a pretty solid request and storage allowance without having to put down a credit card up front. 
Thank you dude
It's up to you to decide. Storing the value permanently will create it more quickly next time, but takes up memory. Also if the value is a reference type, you open up the possibility of accidentally assigning to one of the instance's `var` members. Returning the value from a computed variable will take more time for computationally intensive tasks, but does not store the value in memory permanently and does not allow any permanent modification.
Glad it helped. We're all new users at some point. :-)
SEGPHAULT?
…I have no idea what possessed me. 😅
I've been using Kotlin for my backend language of choice since you can use the solid Java server side frameworks. It's been a joy and is super easy to pick up with a background in Swift.
Honestly, I personally don't believe that Swift will ever be popular outside of the Apple ecosystem. I think you're better off with Node or even .NET Core. Hell, maybe even Kotlin.
If you're keen to give it a try again, email me at paul@hackingwithswift.com and I'll send you a free copy of my [Server-Side Swift book](https://www.hackingwithswift.com/store/server-side-swift).
Not a bad idea at all... Kotlin looks an awful lot like Swift now
I'm optimistic that it will become more popular as the open-source support improves. We'll see
I followed the VIPER philosophy for about a year but it never felt like I was doing it quite right. Like, the presenter layer never really seemed like it was actually doing anything and felt more like over-engineering. Eventually, I realized that Cocoa Touch is designed for MVC and that it probably didn't feel quite right because I was fighting the system. I now believe that MVC is all you need so long as you still follow other good design principles like encapsulation and composition of the layers. I think "massive view control" is symptomatic of bad practice rather than a bad pattern. However, if anyone has any experience that is contrary to my own then I would be most interested to hear about it. Perhaps I just never really was implementing VIPER correctly?
It seems that the core team will be busy delivering the ABI stability. I wonder if the community will step up to implement other proposals.
I think ABI stability is definitely coming from above, but I think the push back on it has been for the better. The concurrency model could be interesting, I have seen various arguments for and against different options, but I think the callback model in place at the moment is not the best.
Has its* own HTTPClient it's = it is its = the next word or phrase belongs to it. 
I know. Autocorrect makes typing too easy
&gt; It's part of OpenKitten. So, do we get to see all the organs functioning or what? 
I am not familiar with using Swift in VSCode, however in your tasks.json file you have an extra set of curly braces. Remove the first and last one.
Im using web sockets as well in a real time chat app. Ive only built the POC, were currently using PubNub, but 18Q1 I will migrate the data to Vapor and start using it instead of PubNub saving roughly $10k in expenses a month.
I would search through github. There are a lot of examples for beginners there.
Just finished my work on CardioBot 2.0 with TimeTravel feature for complication and iOS 11 design adoption. https://itunes.apple.com/app/id1149412984?mt=8
And finished collecting links for second issue of Swiftly Curated. http://swiftly.curated.co
You should checkout [swift lint](https://github.com/realm/SwiftLint). Helps with coding style and conventions!
Concerning "General" Unless the company has it's own style guide "Swiftlint" might be quite useful since it keeps your code consistent, for example all 3 of those things should be flagged by Swiftlint. @OP: - In [line 93 of Extension.swift](https://github.com/kedar18/tumblr-image-download-library/blob/2ca1e4c489fc504542c8deabfea47d4322f2f65e/DownloadManager/Extension.swift#L73), don't name your variables "erro", it doesn't explain what is, a variable should be self explanatory (at least to a degree). - If you will show this git repo to the interviewer, please clean up the commit history, (rebase) since there are spelling mistakes: "user can push thier commits" "[...] ,delete 2. adde clear" And there are numerous commits that don't explain what you commited: "missing commits" for example, it's better practice to write "Moved XYZ function/code from the VC to an Extension". Get what I mean? - Please comment your code! &gt;Please understand that this test becomes the showcase of your skills, so don't skip on professional programming standards. This means, documentation/comments are a must from what I know since maybe a coworker has to maintain your code, right now that would take some time since there are no comments that explain anything. 
I hope you're getting paid for this. It's an insane amount of work to ask an applicant in my opinion.
All concurrency models have different strengths and drawbacks, which is why the previous concurrency manifesto they published talked more about additions to the language that can enable safe concurrency using a variety of paradigms rather than just saying "We're adopting promises!". Swift 5 will likely have more work in that direction.
You can actually pin things to the topLayoutGuide itself. https://stackoverflow.com/q/19174451/2792531
&gt; documentation/comments are a must They're mostly not. What's important is that your [code is readable](http://importblogkit.com/2015/03/writing-readable-code/), and honestly, if you have to write tons of comments to accomplish that, you're probably messing up somewhere else. Don't get me wrong, I'm not saying you never include comments. You do when it makes sense. But your first objective should be making your compiling code readable. It's way easier to maintain when the code is written well enough to not require many comments.
Totally agree, you shouldn't comment every line but in OPs code it really gets messy on occasion so comments would be really helpful, and tbh they don't "hurt", nobody is going to complain that something is commented.
Nice video, goes a bit off topic with the UIView extension, but clear overall. 
topLayoutGuide.length will give you the exact offset amount you need. If you use frame base layout, you can use that as your origin.y. If you use autolayout then set that as the offset of your top constraint.
I agree they don't hurt. For me, reviewing code for a candidate, I'd just purely ignore all comments. They won't impact your chances for me in either direction.
Afaik you don't create a storyboard by doing that. What are you trying to achieve? You normally use that function for stuff like: NSStoryboard(name bundle).instantiateController where NSStoryboard (or UIStoryboard in the case of iOS) represents the storyboard specified in the "name" argument.
It's my first open source contribution. Open to any inputs! :)
I wrote [Ultimate FizzBuzz](https://codereview.stackexchange.com/q/91663/36366) over two years ago... I was going not for an exercise in writing FizzBuzz, but for an exercise in Swiftiness. And I quite like: let fizz: FizzBuzzRule = { value in return value % 3 == 0 } let buzz: FizzBuzzRule = { value in return value % 5 == 0 } let pairs = [(fizz, "Fizz"), (buzz, "Buzz")] for fizzBuzzValue in FizzBuzzSequence(start: 1, end: 100, pairs: pairs) { println(fizzBuzzValue) } 
Still no windows support ?
&gt; I wonder if the community will step up to implement other proposals. They'll have to. In order to promote better evaluation of ideas, Swift-Evolution now requires a proposed implementation to be submitted with the formal proposal. That doesn't mean the implementation submitted will be the one adopted, but it gives a lot more fodder to the discussion rather than just hypothetical examples. On the bad side, there will be fewer abstract ideas adopted (often like the ones Erika Sadun contributes) and probably fewer proposals submitted at all. On the plus side, there will be more *informal* discussion on Swift-Evolution, since people will have to vet a rough implementation in addition to the idea. It's therefore much more likely that formally approved code gets adopted.
The ATS whitelist is for listing sites that have poorer security, like out of date crypto. It's not a whitelist of all available sites.
The URLs that you load into web views should have no links out to other content.
You can learn and understand how things work on a low level without actually implementing them in code. 
I'm on mobile so I can't look up the link, but I saw a medium post a week or so ago about using CLion from JetBrains for Swift on Linux. You get completions as well. I could never find a VSCode with decent autocomplete.
What blog post? You never linked anything.
Thank you for your reply.
Oh, thank you for pointing it out.
No problem! Guessing you found it already, but here's the link: https://medium.com/@joscdk/develop-server-side-swift-on-linux-a9ea56e805cc Let me know if you go the CLion route. I'm curious how well it works.
I'm also working with time slots and your solution is beyond of what I needed. Thanks a lot for your support and effort. 
Yes I understand that I don't create a storyboard like that. I might not have worded my question well. I am asking If i created a storyboard programmatically with several VC's, where would they be stored? Are they stored in memory, or does swift make a temporary file in the app directory. Is there any way I would be able to access the xml code for the storyboard programmatically? Thanks for the response!
did it help?
Damn.. I think I pasted the link on the link field and then edited the text, but the link is missing completely...
In this post I'll show how to use Sequence and Collection extensions to write less code on the upper layers, while working with collections. I posted with the same title yesterday but somehow I missed the link to the blog, so here it is again with the link :)
The Project Islandwood user base has been clamoring for it for a while, but I think Microsoft is waiting for ABI stability before they start supporting it. That said, there are [instructions](https://github.com/apple/swift/blob/master/docs/Windows.md) for getting Swift to work on Windows, but they're rather involved (and possibly out of date). 
It looks like you're missing a few requirements. Readability: "Class and method names should clearly show their intent and responsibility." You have a class named "Model", which contains a "manager" as an inner dependency for fetching data. Testability "Please accompany your code with test classes." Tests are completely absent. At a time, you should only load 10 items, and load more from the API when the user reach the end of the list Absent. An image load may be cancelled The same image may be requested by multiple sources simultaneously (even before it has loaded), and if one of the sources cancels the load, it should not affect the remaining requests Absent. (This hints that if e.g. 5 sources request the same image, you shouldn't actually start 5 downloads, and you should cancel loading only if all 5 requests are canceled.) Really picky things: --- class ViewController: UIViewController { var refreshControl = UIRefreshControl() ... override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. refreshControl = UIRefreshControl() } --- unnecessary refreshControl initial value, kind of sloppy, but not a dealbreaker --- func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) { scrollcount = 0 } func tableView(_ tableView: UITableView, didEndDisplaying cell: UITableViewCell, forRowAt indexPath: IndexPath) { scrollcount = scrollcount + 1 } --- nononono what are you doing --- func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) { if scrollView.contentSize.height - scrollView.contentOffset.y &gt; 0 &amp;&amp; scrollcount == 2 { fetchMore() }else { scrollcount = 0 } } --- oh okay it's getting even worse --- func photoWith(imageUrl:String,andPlaceHolder:UIImage,key:String) { self.image = UIImage(named: "placeholder") let objectFile = DownloadManager.getCacheForFile(key: key) is NSNull ? nil : DownloadManager.getCacheForFile(key: key) as? UIImage if objectFile != nil { let img = objectFile self.image = img return } Model.getImageFromCacheDirectory(indexItem: key){ bol,localImageUrl in if bol { DispatchQueue.main.async { let img = UIImage(contentsOfFile: localImageUrl!.path) self.image = img! } }else { guard Reachability().isInternetAvailable() else { print("Internet not available") return } DownloadManager.downloadFrom(stringUrl: imageUrl, completion: { url,response,error in guard error == nil else { print("Error Occurred \(error!.localizedDescription)") return } do { let data = try Data(contentsOf: url!) DispatchQueue.main.async { let img = UIImage(data: data) self.image = img! let cost = self.costFor(image: img!) DownloadManager.storeCache(forFile: img!,cost: cost, key: String(key)) let name = key + "-" + imageUrl.components(separatedBy: "/").last! Model.storeToCacheDirectory(filename: name,data: data) } }catch let erro as NSError { print("error while fetching content of file",erro.localizedDescription) } }) } } } --- There's just too much random syntax/shorthand changes to make me believe that this was actually written by someone with thought in advance and not copied/pasted/modified until it worked. The random newlines for braces really drive it. Overall, my junior would do a better job in about a week.
Yeah honestly dunno what I was thinking lol
I know I'm older days you would use a WKWebview and the delegate would report the urls it's going to, there you could prevent going away from urls without your base path, not sure if you get the same delegates on SafariWebView
You don't create a storyboard programatically, you can create windows, views and all of these objects programmatically and bulild your app that way. 
Sadly, it didn't. Due to lack of experience and poor documentation I decided to use CLion with swift instead of Visual Studio Code. 
It worked wonderfully. Really appreciate the information. I would also like to point out that Linux users might find this route more convenient and easy to setup. Jetbrains is the company who made CLion and if you guys have .edu email address you can get it for free. 
No new dynamic features. Very sad. Still not good enough to use.
_No new dynamic_ _Features. Very sad. Still not_ _Good enough to use._ &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ^- ^cyancynic ------------------------------ ^^I'm ^^a ^^bot ^^made ^^by ^^/u/Eight1911. ^^I ^^detect ^^haiku.
The sweet, sweet sounds of async/await http://i.imgur.com/ueUOfgx.png
Yeah a lint tool is great, but I also think a single dev on a relatively small project should be able to maintain a consistent style 
Thanks! Sorry, I couldn't resist showing the type extension approach. :)
use animate with duration on uiimage alpha property
Maybe nicer than animating alpha is to use `UIView`'s `transitionWithView:duration:options:animations:completion` and use `crossDissolve` or `fade` animate option
Started working on an [IRC Client Library](https://github.com/fletcher89/SwiftyRC) a couple of weeks ago and stopped after a day. Recently noticed I really like to check off things from lists... now I'm using a To-Do app to manage development of this library and I'm more productive than ever.
One of Chris Lattner’s observations: &gt;A person or organization sufficiently motivated and able to push an effort forward can now do it, even if it is outside the scope of Apple’s current priorities. I get the feeling we may see some interesting contributions from IBM. 
Awesome! I'm going to have to try it!
Ah, I'm sorry to hear that. I have no experience using VSCode for Swift :(
The code I wrote in this screenshot might not be my best attempt. I've been trying various options for the last 2 weeks. I'm really frustrated. 
You're iterating using a `chicken` var but then you're manipulating [Chicken] (?). Then just check the `breed` and `temper` with a nice conditional.
What are you confused about? 
To add more context, here's my original for in loop: ​ for chicken in chickens{ switch Chicken{ case (.leghorn, .friendly): chickenOfInterestCount += 1 default: print ("Oh well!") } } chickenOfInterestCount I keep getting the error "Enum case leghorn not found in type Chicken.type. I get the same error for friendly or any other temper case I write. 
OK, first of all, when you write `[Chicken] (_: .leghorn, _: .hilarious)` what do you think you are trying to do with that? Next, do you know how to access the properties of a value? If not, [read this](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID82), in particular, the section on 'Accessing Properties'. Then, once you are able to access those properties, do you know how to use switch statements to match enumeration values? If not, [read this](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html#//apple_ref/doc/uid/TP40014097-CH12-ID145), in particular the section on 'Matching Enumeration Values with a Switch Statement'. Check those out and come back if you have further questions.
I'm confused as to why I'm getting the error that I typed above. I'm sure I'm not referencing it correctly. 
Thank you. I (think) know how to do that, but since I"m having trouble, there's probably something nuanced I missed. I'll go check those out today and get back to you. Thanks again. 
OK, this provides some needed context. So in the playground and the code you wrote, can you tell us what the difference is between `Chicken`, `chicken`, and `chickens`?
https://goo.gl/photos/UoYTsHrGdY7qxKdx6
Well, I wanted you to tell me in your own words what you think the differences are. I'm trying to go all Socratic method here…
I'm an educator. I'll go there with you. Chicken is the struct, containing the declarations (which are the 2 enums). chickens is the declaration containing the array of Chicken types. chicken is what I'm calling the instances inside of chickens. I'm pretty new to this, so if I used the wrong language, let me know.
Your language is pretty close, not bad for someone still new. You're doing good there. OK, so `Chicken` is the type. It's not an actual instance of a chicken, it's more or less the description of what a chicken is. `chickens` is an array that contains a number of instances of chickens. That is, it's an array of values that are all of the type `Chicken`. And `chicken` is just a variable that is holding one of those values of type `Chicken` at a time as you iterate through the array of them. The main thing of importance here is that it is the _values_ of type `Chicken` that have the properties you are interested in here, not the type itself (types can also have properties, but lets not worry about that now). So given that, when you write: switch Chicken { … } You're saying "look at the _type_ `Chicken`, and if it matches any of these cases I've listed, do the appropriate thing". But you don't want the computer to look at the type, you want the computer to look at the actual values. So something like this is closer to what you want: for chicken in chickens { // take each chicken from the array one at a time and do the following with it switch chicken { // look at the chicken value I pulled out of the array, find what it matches, and take the appropriate action case blahblahblah: … … } } However, there's an issue here. What the problem is asking you to do is actually to look at the _properties_ of each chicken and use those to decide if the chicken is interesting or not. So, what might you use for your switch instead of `chicken`? 
Yup, this is exactly why my company does a similar take home assignment. Would be harder to catch this doing whiteboard programming all day. 
You have to switch Chicken.temper Not switch Chicken And if u want to do both then do Switch (Chicken.breed, chicken.temper) { //Case &amp; default here // google how to switch two properties in swift } 
The Boolean statement is looking for a value of true or false. It doesn't look like your code is providing it what it wants, so it's telling you that.
Thank you for your valuable response. 
Sorting functions compare elements two at a time and use the result of that compare to decide which goes first and which goes second. In this case, you are providing your own compare function, so the algorithm calls that, and uses that for comparison. So if your compare function is backwards, so will the sort be backwards. 
Hi, I am sure you haven't even complied the code. Let me try to explain you 1.API does load limited resources. If you run the app you will understand my I have provided pull up to refresh. 2.https://github.com/kedar18/tumblr-image-download-library/blob/master/DownloadManagerTests/DownloadManagerTests.swift. I do have provided a test case, I am not much experienced in writing test cases, so I cant say much in that. As for the code that you have pasted.. If you compile and debug (which you won't do) maybe you too can understand what is does. For the conclusion.. yes am sure that you and your junior can easily write the code within a week. For me I was given 3 days time limit. Thank you. 
You can look into the compare function as this: Exactly after the line `var reversedNames = names.sorted(by: backward)`: * backward(reversedNames[0], reversedNames[1]) will return true * backward(reversedNames[1], reversedNames[2]) will return true, * backward(reversedNames[2], reversedNames[3]) will return true, * and so on .... In summary, sorting algorithm will guarantee that backward(reversedNames[i], reversedNames[i+1]) where i &lt; names.count - 1 will always return true, as long as your compare function is transitive. 
you 100% can do it. you NEED to have to PATIENCE though. took me about a month to understand the basics of swift to the point where i could start building something useful from scratch on my own. udemy.com is yo friend 
The function that you pass in to sorted should return true if, given two elements to compare, the first element should appear in the sorted collection before the second element and return false otherwise. So in this specific case we want one element to appear before the other if it is lexicographically greater than the other element. If we wanted, for example, the shortest strings to appear first in the sorting, we could pass it a function like: func shortestFirst(_ s1: String, _ s2: String) -&gt; Bool { return s1.characters.count &lt; s2.characters.count } and this would return `["Ewa", "Alex", "Chris", "Barry", "Daniella"]` as the sorted list.
Vapor has a lot of fans. IBM has put a lot of work into Kitura and is using it in their business. They're both solid choices being used in real projects.
That's not how it works. The XML format of a storyboard is only how it is managed as an editable file in your source code. When you compile your application, the XML file gets compiled into a more efficient binary format, and then, when the storyboard is actually loaded into memory at runtime, it's deserialised into instances of the objects it contains.
If you are after the file content, one hacky solution is to merge a branch of code that has changes in the storyboard. As you review the change during the code merge, the storyboard will be exposed as code.
You can try something like this: var node: Int? = nil print (node ?? 5) var node: Int? = 6 print (node ?? 5) 
However there are some features that aren't fully compatible with Linux. For instance any swift code that relies on objective-c may not be fully operational. I am talking about classes with NS in front of them. 
If you want to look up more, ?? is called the [Nil-Coalescing Operator](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID72).
After working on two iOS games, i did a collectionView for SpriteKit: https://github.com/bwide/BWCollectionView/graphs/traffic
How realistic is to learn playing the piano good? Very realistic, you just have to have a proper commitment. From my own experience: I've always learned programming "stuff" much faster if someone properly explained it to me directly.
I recommend the books in objc.io like Advanced Swift or Functional Swift.
Hi all, I've posted this before, sorry 'bout that. At that point apodidae was still in a very early state and shouldn't have been published... I spent some time polishing everything, switching out the source of packages and more. The basic idea is that it's hard to find suitable packages when writing a swift library or executable. There is no single centralized listing of all packages (packagecatalog.com and swiftmodules.com can only have so current data), so this tool queries GitHub's API directly for repos written in Swift that include a file named Package.swift. It offers ways to search for packages, display more info about them and add them to your package manifest. It conveniently installs as `swift-catalog` so that you can run it like a subcommand of swift itself as `swift catalog`. The basic interaction is also shown in the README in more detail. There's still quite a few rough edges and the code definitely needs some cleanup... I'm definitely open for all kinds of feedback! Got any ideas about possible additional metadata to fetch for packages?
This tutorial worked pretty good for me: [Parsing XML Tutorial](https://www.ioscreator.com/tutorials/parsing-xml-tutorial) It's not written in Swift 3 but can be easily converted. Essentially you need a class to conform to the XMLParserDelegate protocol and handle these three events: func parser(_ parser: XMLParser, didStartElement ... func parser(_ parser: XMLParser, foundCharacters string: String) func parser(_ parser: XMLParser, didEndElement ... The parsed string (foundCharacters) contains white spaces and new lines and can be cleaned up with: `let data = string.trimmingCharacters(in: .whitespacesAndNewlines)`
Great tool. Small typo in the readme: utilized
Is it possible to install it on Linux?
Thanks a lot!
Emmm... If you like to think more about lower layer system, maybe LLVM or SICP is also much better. 
Thanks :). I’m also interested in LLVM. 
Oh thanks, fixed :)
Haven't tried it yet, but as long as the libs all build I guess it should work. Afaik there's nothing specifically platform-specific. Definitely gonna try it out later. If it doesn't build I'd definitely consider that a bug.
I just had a chance to sit down and look at this. I tried using chickens but that didn't work. So, I tried to be more specific and use chickens.breed, chickens.temper, but that didn't work either. I read over Matching Enumeration Values with a Switch Statement, but that didn't seem to help with this particular case. 
OK, so what does your switch statement look like when you use use chickens.breed and chickens.temper?
All you have to do is implement the `XMLParserDelegate`. A small example written in swift 3 can be seen [here](https://github.com/dmamills/easyfeed/blob/master/easyfeed/FeedParser.swift)
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [dmamills/easyfeed/.../**FeedParser.swift** (master → 70b3d93)](https://github.com/dmamills/easyfeed/blob/70b3d933ed5bbe6477cca16b6ab1236d078057e6/easyfeed/FeedParser.swift) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dlfcwts.)^.
Thank you! Had no idea this existed
Thank you!
Oh my. 
*Pulls off glasses* *Smears hand around face* "I--" A momentary pause. Eyes indicating mind has drifted to a far away place. *Turns lamp off* *Rolls chair out from under desk* *Gets up* *Walks away*
There's lots of tutorials and sample projects out there for smoothing a line that was drawn. After a quick search, [this one seemed pretty good](https://medium.com/@ramshandilya/draw-smooth-curves-through-a-set-of-points-in-ios-34f6d73c8f9) (it's also one of the few in swift). As for the other settings, that's getting into more specialized features that you'll have a hard time finding a tutorial for. Since the brush options are what make a drawing app feel unique, they usually don't want give away their "secret sauce".
So, I think the threshold is the smallest distance between points that you want returned. 20 km means you'll only get major features. But it's been years since I've done DouglasPueker
the distanceFilter is actually meters, if it doesn't record the 20m in the accuracy set it doesn't save the coordinates. The issue is with the library, I seem to not know what I'm doing wrong :(, still working on it though :)
No joke...
iOS has its problems, but this post is too much to take seriously. 
The `tolerance` you're using is way to high. The library first uses `simplifyRadialDistance` which removed points is they are within `tolerance` distance of the previous point. The docs say the tolerance is &gt; in the same metric as the point coordinates So since your passing in lat lng values which are degrees, the tolerance is also in degrees. So it's filtering out all points that are within a 10 degree circle of the starting point. You'll want to look at using a mush lower value. All your lat values are with a range of 0.003 and the lng values are within 0.0015. I'd start with a tolerance of 0.003 and go down from there till you get a result you want.
Oh? Can u explain a bit more if possible? so in the end if im trying to get a tolerance of "10 meters" id probably be looking at 0.010? 
lol :( Using that tolerance still prints out 2 points :/ ugh. `[(37.33020998, -122.0271203), (37.33021589, -122.027357), (37.33022055, -122.02759074), (37.33022235, -122.02783534), (37.33024447, -122.02807693), (37.33029022, -122.02832125), (37.33037931, -122.02853297), (37.33043289, -122.028749), (37.33051179, -122.02895555), (37.33056893, -122.02917331), (37.33060766, -122.02940612), (37.33066301, -122.02965575), (37.33064294, -122.02989419), (37.33065274, -122.0301537), (37.33067331, -122.03040392), (37.33084605, -122.03054385), (37.33102738, -122.0306284), (37.33121643, -122.03066604), (37.33141771, -122.03066633)]` `[(37.33020998, -122.0271203), (37.33141771, -122.03066633)]`
It's not that easy. You can not convert between meters and degrees because the relationship changes at different latitudes. For example - At the equator, one deg of longitude == 110km. - At your latitude (~37.3), one degree of latitude == 88.6km. As you get closer to the poles, the distance will get smaller. So there is no single value you could use for the tolerance. Even one degree of latitude can be a different amount of distance since the earth is not a perfect sphere. --- You'd be better off just using your own filter if you want to filter by distance. CLLocation has a `distance(from:)` method that takes all of this into account. You just have to check for the current point being more than 10m from the previous one.
Can this simply not be working because I'm emulating from the apple campus? this is indeed an application im trying to get working in South America, but no clue how to emulate near the area...
I think the issue is that the tolerance you're passing is on a totally different magnitude than the degrees that your points in the line represent. When the algorithm runs, it's going to discard the entire line because all points fall inside that threshold. If you want to have the tolerance be in meters, you'll need roughly convert the 10 that you're passing as the tolerance into degrees (now, this is rough because latitude and longitude degrees span different distances (and longitude spans differently depending on what latitude you're at)) before passing it to the algorithm. If I was you I would just play with different values for the tolerance. Start low with something like .005 and work up from there.
I just released the final chapter to [Practical iOS 11](https://www.hackingwithswift.com/store/practical-ios11), completing the seventh project in the book. It's been fun to write, but I'm glad it's finished at last! Now it's just a matter of adding a few extra screenshots, correcting typos, and filling in any gaps. After that, I have what I think is a rather excellent idea for a SpriteKit book, but it's going to take a little more research – I want to have most of it finished before I even consider talking about it further, because I'm pretty sure the approach has never been tried before. Should be a busy month!
I'm building a cryptowallet for iOS! 
If you're using swift 4 it looks like you're almost reinventing the wheel with codable https://developer.apple.com/documentation/swift/codable
Codable is nowhere near as flexible as I want it to be. I'm going to play around with making my own encoder and decoder, though. I really just want to know how to solve this generic problem as a whole. I've run into it before in other areas. 
What does codable not do that you'd like it to? It's pretty flexible and it looks like it solves any use case I can think of when parsing JSON into an object. Can you post an example of your solution that compiles and illustrates where you'd like to apply generics?
Well, it *can* do everything, not but not very tersely. If you're not straight up decoding every single nested key into a new type and leaving it as is, your only other option is to implement init(decoder:) by hand, which is far from ideal. A lot of the time I don't want my object model to match the JSON structure 1:1, or I don't always want or need a whole new type for some nested dictionary. For example, is there a way to conditionally convert a decode a String value into an Int property, if say it's a number but the API is designed poorly? Not without implementing init(decoder:) yourself, AFAICT &gt; Can you post an example of your solution that compiles and illustrates where you'd like to apply generics? The one I mentioned that relies on NSObject subclasses?
You may be aiming for something similar to what I ended up with. Check out this https://github.com/andrewroycarter/Simply-Swift-JSON/blob/master/example.playground/Contents.swift specifically the generic bit is `func decode&lt;T&gt;(_ key: Key) throws -&gt; T` which is an extension on `Dictionary` where `Key: ExpressibleByStringLiteral, Value: JSON`. Basically you're trying to get something `T` out of a dictionary via a `key`, and it knows the generic type by what property you're trying to assign the result to. So you can end up with `self.name = try dictionary.decode("name")`. In that case, the compiler knows `self.name` is of type `String`, so the way I've written that decode method it can try to grab the value in the dictionary for the given key as the given type. 
This is good. MOAR please.
for chicken in chickens{ switch chickens.breed, chickens.temper { case .leghorn, .hilarious: chickenOfInterestCount += 1 } } But that still didn't work. 
&gt; it knows the generic type by what property you're trying to assign the result to That's not reflective mapping; I'm trying to avoid explicit assignments by adopting types so that I can support value transformers and stuff. I've used this sort of thing for other stuff in the past though, it's super handy elsewhere! Have you heard of [Mantle](https://github.com/Mantle/Mantle)? That's what I'm modeling this after (and what I wish Codable was…)
Yea! I used to use Mantle for all my Objective-C projects. It's funny because I've been going for that explicit assignment bit on purpose because over the years I grew tired of debugging the reflection maze that mantle could sometimes get you into. Mantle was for sure a great dynamic solution, but I love the easy to follow path of the more explicit solution. I haven't used codable in a "real project" yet so we'll see how that works out, maybe I'll migrate to that in my current project to see how it works out. I hope you come up with a nice solution, be sure to follow up! Just for fun check out `F#: Data` http://fsharp.github.io/FSharp.Data/library/JsonProvider.html . I've been playing with F# recently and this is one of the neatest most "Magic" JSON parsing methods I've ever worked with. It's fun to see how it's done in other languages now and then.
Continuing to work on a small iOS side-project: [Headcount](https://www.tryheadcount.com/) It's just a simple chat app that initiates groups with a temporary poll. Built in response to my frustration getting quick answers and making decisions in group texts / chat apps. More about the problem [here](https://medium.com/@spencerjohnson/headcount-re-thinking-group-chat-d85d3e0a870a) **Basics** * Start a group around a time-sensitive decision * Filter the chat based group members' responses (i.e. message only people who answered "Yes") * Start a new group from the answers given in a previous poll (e.g. Send a follow up poll to only those who answered "Yes")
Ah if you're familiar, then I can just say I want a solution like Codable but with Mantle's value transformers, and the ability to change the structure of the resulting object without doing it by hand &gt; F# stuff Interesting 🤔
Yep, you now found out the limits of view.layer.render(in: context) Basically, what it comes down to, is that there are two ways to create a PDF. The first is like you did: create a PDF context, then ask the view to render in that context. It's rendered exactly as on screen. So you can use AutoLayout or whatever, it's great. One big disadvantage of this method is that you have no further control; it's rendered as you'd see it on screen. The second method, which you'll need, is to create an empty PDF context, then use the Core Graphics routines to put every label, image and what have you there. Your code will look bizarre and not at all like the usual UIKit stuff. You're basically manually layouting everything, and you'll have to do it per page. For a comparison of the two, check out this sample project that I had to create some time ago: https://github.com/bvankuik/TestImageToPdf 
I also want to know how to solve this generics problem 😓
&gt; After doing all my web development in PHP since version 4.1 (the dark ages) I am gonna have to drop this sub and /r/programming because it's making me feel sooooooo old.
So this is how I'm saving the coordinates using Locationmanager. `&lt;+37.32756022,-122.01974095&gt; +/- 10.00m (speed 3.36 mps / course 179.01) @ 8/10/17, 2:50:19 PM Peru Standard Time` `&lt;+37.32737099,-122.01972170&gt; +/- 10.00m (speed 3.61 mps / course 179.76) @ 8/10/17, 2:50:25 PM Peru Standard Time` `&lt;+37.32718582,-122.01971872&gt; +/- 10.00m (speed 3.81 mps / course 178.85) @ 8/10/17, 2:50:31 PM Peru Standard Time` `&lt;+37.32697971,-122.01972916&gt; +/- 10.00m (speed 3.31 mps / course 175.40) @ 8/10/17, 2:50:37 PM Peru Standard Time` after that they are saved into CoreData, then retrieved again, anything I should do there, or just keep focusing on the algorithm solely, not how the location is saved?
I have zero experience with generating PDFs from views, but couldn't one either: 1) Create the context with the full content size of the collection view and/or 2) Temporarily resize the collection view to match the content size, THEN generate the PDF? The second, while kinda hacky, feels like it should work based on my past experience with collection views - in the cases where I've had collection views larger than the screen, cells don't seem to care whether they're on-screen or not, They still trigger reuse and perform as if all cells were visible, which presumably means that layout and drawing are still occurring as normal despite not being visible.
Built a system to store quotes/book notes. Digital notecards. Sort of like Evernote but less bloated and offline. [Commonplace Book](https://itunes.apple.com/us/app/commonplace-book/id1265604068?mt=8) Trying to figure out a way to add sync... Cloudkit? I know apple deprecating Core data iCloud sync. 
 [A Collaborative Music Queue](https://partytrackapp.com/) It's been a side project I've working on to allow me and my friends to control the music from anywhere in the house during a party or while riding in the car. Spotify isn't required to suggest songs, only for hosting a party.
Still writing a Swift book filled with tips and tricks from real-life experience with dozens of developers. Signed a contract with Manning so I am revisiting chapters and then the early access program starts!
Just released my second iOS app - [Lyric-Me](https://itunes.apple.com/ca/app/lyric-me/id1227303727?mt=8). I wrote about the process [here](https://medium.com/@robert.e.dippolito/how-i-designed-built-and-launched-my-mobile-app-from-scratch-23b4aa5bf25a) Lyric-Me is a music based trivia platform. Quizzes are assembled based on your facts and trivia associated with your favorite artists and challenges your musical IQ. Who's the biggest hip-hop head in your group? Who knows 90's RnB best? The more you play the more stars you accumulate which can be redeemed for trophies that customize the experience and put your skill on display for everyone to see.
Swift doesn't include the Apple libraries. Complaints like "[dealing with the async APIs] is not even a priority in Swift 5" is conflating two different areas. Progress in the *language's treatment* of concurrency *is* a priority for Swift 5, but you aren't going to hear even a whisper about changes to Apple's iOS libraries until WWDC 2018. Yes, even if you have a mastery of the language (like Swift or Objective-C) you've still got months of learning ahead to get used to the conventions and design-patterns in the commonly-used libraries. One of those frustrations is that Cocoa was implemented back when some design-patterns *had* to be used due to performance constraints (even if it meant compromising security or programmer convenience). It doesn't meant that those things are forever set in stone. ARC removed tons of issues in Objective-C with manual memory management even after Apple's first attempt to simplify by adding garbage collection created more problems than it solved. True, that was done way back before the public had even heard of Swift, but changes like that are being made. I won't comment on other platforms speed of development, but you'll more likely get more productive answers if you ask "Hey, what's wrong with my code here?" than proclaiming "I conclude that iOS is a poorly designed platform from the developer point of view."
Really cool! 
Working on starting to learn Swift! Using Hacking with Swift and a book called Swift for beginners. First programming language ever, will see if I enjoy all this and if I want to have a future career in this area.
OK, there are a few things wrong here, with the first thing that the compiler noticing being the one that has the least useful error messages. Thanks, Apple… So the messages you get when you try to do what you did are: Playground execution failed: error: chx.xcplaygroundpage:48:26: error: expected '{' after 'switch' subject expression switch chickens.breed, chickens.temper { ^ error: chx.xcplaygroundpage:49:14: error: extraneous '.' in enum 'case' declaration case .leghorn, .hilarious: chickenOfInterestCount += 1 ^ error: chx.xcplaygroundpage:49:24: error: extraneous '.' in enum 'case' declaration case .leghorn, .hilarious: chickenOfInterestCount += 1 ^ error: chx.xcplaygroundpage:49:9: error: 'case' label can only appear inside a 'switch' statement case .leghorn, .hilarious: chickenOfInterestCount += 1 ^ error: chx.xcplaygroundpage:48:44: error: braced block of statements is an unused closure switch chickens.breed, chickens.temper { ^ While none of those error messages actually address the issue, they do give you a hint that the problem lies somewhere in between the `switch` and the `{` that follows it. If you then do some reading on switch statements you'll see that when matching multiple values, you'll find out that you need to make those multiple values into what's called a tuple by surrounding them in parentheses (you need to do this in most places you work with multiple values, such as returning them from a function). Note that you need to do this for both the `switch` part, where you specify what you're looking _at_, and in the `case` part where you specify what you're looking _for_. So if you fix this by writing for chicken in chickens { switch (chickens.breed, chickens.temper) { case (.leghorn, .hilarious): chickenOfInterestCount += 1 } } You'll see that you get a different error, something like: Playground execution failed: error: chx.xcplaygroundpage:48:13: error: value of type '[Chicken]' has no member 'breed' switch (chickens.breed, chickens.temper) { ^~~~~~~~ ~~~~~ Note what type it is telling you there's a problem with and what it's highlighting as the offending value. That should give you enough information to figure out what the problem is, and how to fix it. Can you figure it out? Note that even if you fix that problem, you've got one more issue that will get in the way. If you fix it, you'll get the error: Playground execution failed: error: chx.xcplaygroundpage:50:5: error: switch must be exhaustive, consider adding a default clause } ^ The problem there, as the error message says is that the cases of a switch statement need to cover all possible cases, and you are only looking at one. In situations like this one, it doesn't really make sense to list every possible value to match with, so you would use a `default` case instead. As written in the document linked below: &gt; Every switch statement must be exhaustive. That is, every possible value of the type being considered must be matched by one of the switch cases. If it’s not appropriate to provide a case for every possible value, you can define a default case to cover any values that are not addressed explicitly. This default case is indicated by the default keyword, and must always appear last. &gt; This example uses a switch statement to consider a single lowercase character called someCharacter: &gt; let someCharacter: Character = "z" switch someCharacter { case "a": print("The first letter of the alphabet") case "z": print("The last letter of the alphabet") default: print("Some other character") } // Prints "The last letter of the alphabet" &gt; The switch statement’s first case matches the first letter of the English alphabet, a, and its second case matches the last letter, z. Because the switch must have a case for every possible character, not just every alphabetic character, this switch statement uses a default case to match all characters other than a and z. This provision ensures that the switch statement is exhaustive. All of this (and more) is covered in the Switch section of [this document](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html).
i've only used it some for IOS programming, but I'm assuming it has a lot of dependencies. Same reason c++ isn't often used for system programming, with dependencies on the stl libraries and all that. At least I'm assuming that swift has the same sort of thing.
First off, I really appreciate your time. I still don't understand why the compiler gives me that error. [Chicken] actually does have the member breed, as it does temper. I went ahead and added the default case. I remembered how to do that. So, I still don't understand why the error is there. 
I haven't tried making a game in a while, so this could have all changed drastically since when I last tried. When I looked at SpriteKit, it seemed like it is just for creating the 2D visual representations. SKAction seems like it's the triggers for making changes to those representations. e.g. `hideRabbit`. In the game it might be created by `castVanishSpell( )` or `strikeWithLightning`, but the result is the same (stop showing the rabbit sprite). GameplayKit seems like the place to implement logic about the game including things like computer opponents and so forth. Or, more so, it seems like a bridge between things like SpriteKit or SceneKit and your custom game logic. But with that said, it's been a while since I tried writing a game, so is there something in particular that just doesn't make sense?
Oh, cool! I’m the author of Hacking with Swift – let me know if you have any questions :)
`[Chicken]` doesn't have those members, because that is an Array ([_type_] is actually shorthand for the type Array&lt;_type_&gt;, which means an Array that contains things of type _type_), and arrays don't have breed or temper methods. The type `Chicken` has those members. You need to supply something of type `Chicken`, not `[Chicken]`.
I just tried it out. Fixed two small issues and now it builds fine, but there's still a runtime issue to work out. See here for more: https://github.com/kiliankoe/apodidae/pull/36
ALAS I got it working!! `tolerance: 0.00010` was the magic number. So with this app I've so far I've learned how to do the easy to do in Android methods of Simplify and LineString. First saving all the locations in CoreData with CoreLocation, retrieving them and turning them into a [CGPoint] -&gt; simplified with DoublePeucker -&gt; remaining [CGPoint] -&gt; String. Thanks all for the help!
The biggest issue with Swift right now for systems programming is its concurrency story... Basically, it doesn't have one. You *can* leverage Grand Central Dispatch, however GCD only runs in userland on Linux. It's a kernel module on MacOS which gives it an overhead advantage. There's talk about adding concurrency primitives in Swift 4/5, however there's a challenge right now in that Swift doesn't have a memory model, which makes things far more interesting. Given all of that, it works well and is quite performant. IBM has embraced server side swift with several projects. Check them out here: https://github.com/ibm-swift [BlueSocket](https://github.com/IBM-Swift/BlueSocket) is pretty svelte, though most devs are probably more familiar with AlamoFire. [Kitura](https://github.com/IBM-Swift/Kitura) has some potential to create an interesting "web stack". From a services perspective, there's some work going on, but it is still early yet, from my digging. Personally, I've been working on some basic service infrastructure in swift ( redis clones, etc. ) to get more familiar with the landscape. Breaking changes DO tend to happen between versions (2-&gt;3, for example ) however that's really slowing down as the team is solidifying the language primitives. It's my guess that after version 5, it will be quite stable.
I wish there was a subreddit for this -- just for code reviews. edit: Apparently there is: /r/reviewmycode Huh. who knew?
Firebase 
Been working on a small framework for declaratively laying out views. https://github.com/HotCocoaTouch/DeclarativeLayout If anyone has feedback let me know
I'm currently building something like a dependency manager that helps with discovering swift packages and adding them to your package manifest. It handles the basic stuff pretty well, but there's still a lot to improve. https://github.com/kiliankoe/apodidae
&gt; […] however there's a challenge right now in that Swift doesn't have a memory model, which makes things far more interesting. Could you go into any more detail on this? What work needs to be done to get a memory model in place for Swift? Not familiar with concept, and Wikipedia is very abstract.
For sure! [This](https://github.com/apple/swift/blob/master/docs/proposals/Concurrency.rst) is a pretty comprehensive explanation of the current problem set.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [apple/swift/.../**Concurrency.rst** (master → a25511f)](https://github.com/apple/swift/blob/a25511f6589bff1ac8b3779fbf2d434848cc8385/docs/proposals/Concurrency.rst) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dlg8dgf.)^.
I think the main thing that confuses me is that the entity-component thing doesn't give me anything. I still have to drive my game with the scene's `update()` function; I have to iterate through the entities and/or component classes and update them just like I would if I weren't using GameplayKit. Maybe it's just a way of standardizing game loops among games written in Swift?
Thanks I'll check it out. 
Shoot, that's too bad. Thanks for letting me know.
Kind of? The biggest problem is that Swift can't easily coexist with C: It usually has to take over, i.e. while Swift can import C functions just fine, C cannot import Swift functions directly. On macOS you can use the Obj-C interoperability to expose Swift to C, but on Linux it's disabled and you're screwed. Let me show you a practical example. This is a very simple swift library. func exposed() { print("Hello!") } Now I want to do two things: create a shared object and expose that function to C. Well, let's try the swift package manager first. swift build. We only get a .o file. So let's nm it: $ swift build $ nm ./.build/debug/example.build/example.swift.o 0000000000000000 r .L__unnamed_1 0000000000000000 V __swift_reflection_version 0000000000000000 T _TF7example7exposedFT_T_ [...] Swift Standard Library Symbols Here's our function: \_TF7example7exposedFT\_T\_. Now unlike C++ and Rust, there is no way to use the C convention. For closures, there is an @convention(c) (I believe) attribute that will make them accessible to C, but top level functions do not support that attribute. So fine, I'll bite the bullet. I can always rename it manually. $ objcopy ./.build/debug/example.build/example.swift.o --redefine-sym _TF7example7exposedFT_T_=exposed example.o $ nm example.o 0000000000000000 T exposed 0000000000000000 r .L__unnamed_1 0000000000000000 V __swift_reflection_version [...] Swift Standard Library Symbols Alright, that looks good! Now we can link that with a C file, let's say... extern void exposed(); int main() { exposed(); } Then you just summon clang and then try to do both of these and oops! The Swift standard library is missing. Now I'm aware I can continue to link the Swift standard library and that should be it but the point is there are too many hurdles at the moment: clearly this use case isn't quite at the forefront of the Swift team's priorities for the time being. Add other facts like that the ABI isn't stable, there is the concurrency/memory model thing /u/cuyler mentioned as well: look, Swift does have a ton of neat systems programming features, but in my opinion it should not be your first pick for this just yet. Let the language mature just a bit more. EDIT: Clarified some points. I'm tired EDIT 2: So /u/joanniso apparently clarified that there is an undocumented attribute that lets you pick the symbol name. NGL, this would be useful, but a problem is that it's really only intended for internal compiler user and you will need to handle how different OSes handle operating systems by yourself, i.e. Linux's main vs macOS's _main. But otherwise pretty cool I guess. EDIT 3: @_cdecl("function_name") exists. I think this is more specifically designed for this particular use case, I found it buried here: https://lists.swift.org/pipermail/swift-dev/Week-of-Mon-20151207/000265.html
Some games benefit from this more than others, but my take is that this is a way to make a game that emphasizes giving things in your game traits by composition rather than inheritance. Lets say you have a dungeon crawling game with fighters &amp; wizards. If you use inheritance at all, it's probably for things like: Is this a player-controlled character? But a wizard in the game might be a player controlled character, a computer controlled hero, or a computer controlled villain. That might be three places you're duplicating code about wizards when they should have the same abilities and constraints. Maybe you create a wizard enemy who is really just an astral projection of the boss so he can appear before the player, deliver a scary message, but cannot be attacked. So you might add an astralState (higher transparency, and adds sparkles) but has no collision detection component (so it can't be successfully attacked). Some games wouldn't benefit from this design at all, but if yours does, it's out there to try. 
I would guess the delegate isn't setup right.
I've been working with GamePlayKit in a recent project, and I'm liking it. Here are my thoughts: First, there's nothing particularly special about using it over rolling your own system. You can get just about everything you can get with GamePlayKit by subclassing SKNodes and other SpriteKit items. And you can of course roll your own entity-component system within SpriteKit, so really, it's not a very necessary thing. However, the entity-component structure *is* a quite powerful method for organizing game assets. You can look at the success of Unity to get an idea of how powerful it is, since that's the way that system organizes its gameplay structure. There are some real, tangible benefits to adopting the component system over a deep subclassing system, the most important of which being that is prevents the monolithic class tree that can get you into trouble. Using GamePlayKit's component system will encourage you to adopt those benefits, so it's good in that sense. There is some awkwardness in making it work, however, since the GKScene acts as a higher-level entity than an SKScene. The SpriteKit API is defined largely without respect to the GamePlayKit stuff, so it can be a little awkward getting it all set up. For instance, you will need to manually copy over entities to a scene if you want to emit update events to the components. The boilerplate for a GamePlayKit-enabled SpriteKit scene contains an example of this if you want to see it. However, there is one *huge* benefit to implementing GamePlayKit scenes, and that is the SKS scene editor integration. The editor allows you to attach components to scene elements directly. And you can expose numbers and strings to the components using the @GKInspectable tag on your components. This is huge if you intend to use the SKS editor to make scenes for your game. For instance, you could drag an enemy sprite into the scene, attach an enemy component to it, and set the enemy's name to "Goblin" and its health to 35. Without this, you'd have to come up with some other way of injecting those values into the sprite, which, while not too difficult, is a headache that you can skip with a rather straightforward component setup. Because of the disconnect between the components and the SpriteKit engine, one thing that I found myself doing a fair amount of is pairing SKNode subclasses and GKComponent subclasses, using the components to drive information into the nodes and letting the nodes handle presentation behavior from there. (As opposed to having the components themselves respond to update events and try to work within the scene their nodes live in.) For instance, you might have a Button class which is a subclass of SKSpriteNode. You could then have a ButtonComponent class that talks to that Button class to tell it what label to put on the button, what message it should send to the controller when clicked, or whatever. The functionality is largely contained in the Button class - responding to touches, drawing the label, etc. - with the component just the means by which you capture those values in the editor and get them to the Button at runtime. So, there are pro's and con's to this approach. It's a little clunky to set up, but pays dividends once you do. As with any technology, it would probably be best to do a little exploration with the system to see if it will work for you. I had a bit of trouble getting it set up the first time, but once I got it working, it shaved a lot of time off of the process of setting up scenes for me. How much of a time savings it will be will depend heavily on your particular game and how it is architected, but it's a worthwhile tool to get under your belt regardless. 
App Store link on site doesn't redirect anywhere 
Hmm. If it's complaining that it cannot find GameScene.sks, the problem must be somewhere else, because that code you have there would be looking for MainMenu.sks, not GameScene.sks. You probably renamed the GameScene.sks file that came with the boilerplate to MainMenu.sks, but some code somewhere else is still expecting to load GameScene.sks. 
I just released Apex in cocoapods. It's a redux like model management system. https://github.com/dtartaglia/Apex
Make sure you have specified that the view controller implements the protocol.
Dude!!! So helpful! I know you had to guide me a lot, but I finally got it! And this actually helped solve another problem I was having. Here's the final loop: var chickenOfInterestCount = 0 for chicken in chickens{ switch (chicken.breed, chicken.temper) { case (.leghorn, .hilarious): chickenOfInterestCount += 1 default: print("Oh well") } }
I just launched my first app there last week. It's a way to edit and share your clips from your Xbox to any other apps in your phone. Kinda annoyed me you can't do that in the official Xbox app, and it was a nice excuse to learn swift. [Game DVR For Xbox One](https://appsto.re/gb/k4PCkb.i) I enjoyed this project and I learned a lot during it. I'm a big swift fan now, can't wait for swift 4. 
One thing about real life puzzles that's hard to "connect" with kids is that the rules in the models seem abstract. The UPS trucks example is good, but do all of your students drive yet? Until they do they might not care about the differences between turning left &amp; right. One example that was interesting to model (way back, many years ago) was making a model of Monopoly. Pretty much everyone in the class understood the rules really well. But the goal was to make a simulation where the computer played the first X number of turns for Y number of players. Most everyone agreed that the most boring part of Monopoly was the initial first 5 or 6 turns where everyone always buys everything they land on, but before it's gotten to the point where they start getting monopolies or buying houses. The first exercise was simple dice rolling and moving a token around the board. It just had a text result like: * Player 1 rolled 2 &amp; 3 and moves to Reading Railroad. * Player 2 rolled 6 &amp; 2 and moves to Electric Company. * Player 3 rolled 4 &amp; 4 and moves to Electric Company. * Player 3 had doubles so gets a bonus turn. * Player 3 rolled 3 &amp; 3 and moves to Chance * Player 3 had doubles so gets a bonus turn. * Player 3 rolled a 1 &amp; 1 and goes directly to Jail. The next set of exercises added things like modeling purchasing. (just assuming everyone buys an unsold property they land on) The last set of exercises would use rules to "throw out" games that players didn't want to start with. Games where someone got a monopoly of one color, games where a player lost more than $X money in penalties (like Chance or Luxury Tax), or games where someone wound up in Jail early. The end result would be presenting a game that was still pretty balanced, but ready to play once everyone could agree who was Player 1, etc. You could ask for the simulation to randomly assign player names once everyone agreed the game was fair (before anyone knew who was going to be Player 1, 2, 3, or 4). True, folks might still be bored by the idea, but it does model a set of rules that are easy to understand and visualize. Dunno, if that's the sort of thing you'd be interested in, but I'd be glad to attempt to write up a Playground for you if you wanted.
Thanks! I will look into this!
Haha! But I am even older than this. I started with Lingo for Macromedia Director authoring CD-ROMs. 
Congrats on releasing your first app!
Just a helpful tip, no negativity: This question might be better suited for r/iOSProgramming. 
Is your UIViewController (on storyboard) set to the ViewController swift file? 
I vaguely remember having this issue when a UICollectionView was missing a height constraint so its size was effectively zero. I would double check the constraints/frame, and whether it's been added to a view hierarchy in the first place.
Working on my new app: 📊 InstaMetrics, the best app to show your Instagram stats. Fully created with Clean Architecture. It helped me to reuse different layers and create also the macOS app just creating a framework (sharing the same code across cocoa and cocoa touch) iOS app: https://itunes.apple.com/us/app/stats-for-instagram-instametrics/id1197883687?ls=1&amp;mt=8 macOS app: https://itunes.apple.com/us/app/metrics/id1214689455?ls=1&amp;mt=12 Some cool pods/frameworks I've used: IGListKit, RxSwift, Cartography, SwiftyStoreKit, Firebase, Crashlytics, CocoaLumberjack, etc. I'm gonna create some posts explaining all the things I have learned!
I'm working on learning Swift still. I'm only 2 weeks into learning and am loving it, it's just a little overwhelming realizing I have a lot more to learn. 
Thank you.
Getting ready to ship the first machine learning features in [ArcKit](https://github.com/sobri909/ArcKit). Basically the ML is for doing user activity type detection, same as iOS's built in Core Motion activity types (walking, running, etc), but using geographic location specific ML models that take much more information into account, thus have much higher accuracy, and can also classify samples as extended types: train, car, bus, motorcycle, airplane, or boat. (The models have awareness of train lines, roads, water vs land, etc). I've already got it all ready to go, and the demo app updated. I'm just holding back the release until I get [Arc App](https://itunes.apple.com/us/app/arc-app-location-activity-tracker/id1063151918?mt=8) updated to the new SDK version, to stress test it a bit more and make sure no last minute API changes are needed. 
Finishing books from Apples “everyone can code” and my first app “knot” which should be a all-free app for managing your expenses and showing them to you graphicaly. To be honest, learned more about swift while working on my own project than the books! Question: What is the best place to learn to work with databases, adding “facebook to login” etc. 
Heres a GitHub repository with a bunch of open source Swift projects, it might help. https://github.com/dkhamsing/open-source-ios-apps 
Firebase is a framework used by apps, not an open source app, although it would definately support what OP needs, I think he looking for a copy/pasta job lol
Got my First job as iOS developer three weeke ago!its a great deal for me. Beside that im crafting a framework that I hope to release one day to public. 
There are plenty of open source apps made by google and others that they can use to learn 
Hey, very interesting ! Where can we keep track of the release of the book? Thanks
Love the idea and I would be more then happy, if you could write it in a playground for me. 
&gt; couldn't one either 1) Create the context with the full content size of the collection view and/or 2) Temporarily resize the collection view I think you could. It does come with its own set of problems, though. Suppose there's an image in there. It'll be rendered to the PDF in its full retina size, taking up megabytes even for a small image. 
&gt; Anyone here uses Swift for system programming? : / Does anyone here use* Swift for system programming? 
&gt; Kind of? Huh? Kind of or not? Are you asking me? 
Haha that retrospect. That was the WWDC they removed extensions completely, right? Anyway Xcode is still garbage and extensions are even more useless than they were before. Xcode 9 looks promising though.
of? is an optional
you could make some imgur gallery with screenshots and everyone stumbling upon this post would think about some advice if willing. Now you wait for someone to write you PM to get peek on your app
Not completely true. In my tests I'm generating a normal C convention for functions, too. import Leopard @_silgen_name("register") public func register(_ server: UnsafeMutablePointer&lt;WebServer&gt;) { let server = server.pointee server.get { _ in return Future { "Hello aaddsaddasdasworld" } } } EDIT: Of course this is not completely fair, since the `@_` attributes aren't official and support may be dropped.
I'll easily give advice on any UI/UX. Edit in an imgur link or PM a link to the app in the store. 
And that's something I didn't know. This isn't tested on Linux yet since I'm only prototyping. Thanks!
I have some nice libraries too: https://github.com/TakeScoop/SwiftyButton Also I think that Swift is better than Objective-C, you can see it here: https://www.cleveroad.com/blog/swift-vs-objective-c--what-is-the-best-language-for-ios-development- For me it is obvious.
I'll check if they have some mailinglist for new books. Can I DM you?
Not necessarily related to your problem, but an easier way to do this would to just have targetURL be of type URL. That way your class doesn't need to worry about the validity of the string. Ask for what what you need in the constructor.
Added album link. Thank you very much!
Thanks so much! I think I'm starting to get it. I'm also beginning to understand that using entity-component makes it possible to use their agent-goal stuff, which definitely seems useful (if only I could get it to work!). Thanks again.
Quickly checked out the album and see a lot of things I would change right off the bat. Just so I can format my critiques correctly, mind adding some comments to each picture in the album so we know what each screen is suppose to represent?
I'm creating an iOS design and development course. The goal is to teach UI/UX design alongside Swift/iOS programming. A lot of current resources focus solely on the development portion of making apps, but successful apps need to visually appeal to users as well. Many interaction design principles can be taught really easily alongside iOS development, and I think people will appreciate building apps that work well and look good!
*I have to work, actually write code in order to make an app and I’ve never heard of GitHub*... Yes better make a shitty reddit post... iOS SDK is not a perfect SDK but none of them are. You should try to work with *professional* dev kit (let’s say SAP’s ones) and learn what pain really is. I didn’t occur to you that offering relatively low level APIs allows you to make more customizable things ? Leveraging the power of such APIs means learning a lot of things as well as working a lot to. Nothing’s easy don’t believe these $99 Swift online courses...
Of course you can !
Thank you. :D 
Added description. Forgot to add: Still not added images for buttons and this is my first app so still a lot of room for improvement, hopefully 
Great, I'll keep you in the loop!
i tried making a collectionview in another view controller and it worked. but it still doesn't work in the view controller that i need it to work in. and i have no clue why. do you have to do anything different when you want a uicollectionview of images? 
i tried making a collectionview in another view controller and it worked. but it still doesn't work in the view controller that i need it to work in. and i have no clue why. do you have to do anything different when you want a uicollectionview of images? 
i tried making a collectionview in another view controller and it worked. but it still doesn't work in the view controller that i need it to work in. and i have no clue why. do you have to do anything different when you want a uicollectionview of images? 
i tried making a collectionview in another view controller and it worked. but it still doesn't work in the view controller that i need it to work in. and i have no clue why. do you have to do anything different when you want a uicollectionview of images? 
Does your class conform to UICollectionViewDelegate? e.g. like this: class MyCollectionVC: UIViewController, UICollectionViewDelegate { } or in an extension? Maybe if you provided more of your code we would be able to help more. The small snipped you provided is not enough.
Are you putting a UIImage on top of the collectionView prototype cell? 
Is the new view controller of type UICollectionViewController? Because if it is, this is why your collection view is working. In your "broken" view controller in *viewDidLoad* set the collection view's delegate to the view controller by specifying collectionView.delegate = self. This will only work if your view controller directly adheres the delegate protocol or does so in an extension. 
Is it just Swift? Or like iOS/watchOS/tvOS in Swift?
It is focused on Swift. It will touch on some viewcontroller and server side stuff in certain examples. It has a lot of "you can solve X this way, but Y can be better" stuff. Lots of tools you can add to your Swift toolbelt!
ok so the problem was that i wasn't reloading the data after i fetched images from firebase. i just need to to put collectionView.reloadData() in one of my functions. Thanks for the suggestions! 
I just checked: Apparently Swift handles that, too! Now if they would only allow us to do that without some weirdly named internal attribute, haha. EDIT: APPRENTLY @_cdecl("x") EXISTS AND IT TOOK ME THIS LONG TO FIND IT
I'm curious about how you achieved a dark mode if you don't mind sharing. That's something I think the industry is slowly moving towards and I like it. Would love to do something similar. 
Ofcourse! I used NSUserDefaults to add a “bool” value that depends on the switch in the settings which sets it depending on its value (.isOn) property. And when I enter any other view it first reads that value from UserDefaults to modify its appearance. Hope I was clear. Feel free to ask any other questions! :) 
Definitely! Thanks so much. Best :)
Not really. The only option that would guarantee you to have a scheduled "wake up" event is to send a regularly scheduled push notification from your server. There's nothing client side only that will guarantee you a timed slice when in the background, at least up to and including iOS 11. PS: It's not mentioned, but I assume you mean iOS.
There isn't an easy way to accomplish this. With that said, you CAN have the app running in the background and constantly fetching GPS locations and have a timer set for 10 minutes to fetch new data. The BIG caveat is that it will kill the battery and you'll have a giant banner say "Your App is using your location". So that isn't a good solution. A better potential solution could be to create a backend service that will send a silent push notification that will fetch new data when it receives it. The other caveat with this approach is Apple may not deliver all of the silent push notifications. Long story short, Apple doesn't want App developers to do this easily. Your app may not be a big deal, but if Apple gave developers a way to reliably do this, it has potential for abuse that could lead to battery drain, users data getting eating and data tracking. You can thank Facebook for abusing a lot approaches you could do to accomplish what you want. They ruined a lot of things....
There's a difference between them, what is it?
The icon is nice :) Nice work and keep at it! I'll go through each screenshot: **Initial screen (dark mode)** * The green nav bar and blue text don't work, you should definitely change. Maybe a white? * The default blue text for buttons generally don't work, so you should find a colour that matches your theme. The buttons on the bottom are hard to see due to the background, so think about adding a background colour/gradient to your button's background. `layer.cornerRadius` is your friend here. * If text is in a button, it should generally be centre aligned unless you have a really good reason * The numbers in your 'finance graph' should be resized so they don't overlap * You should re-think the colour scheme. You can search the web for colour palates. E.g. here is one focused on Material Design: https://material.io/color/#!/?view.left=0&amp;view.right=0 **Dashboard (light mode)** * Same as above. You should change your label and button colours when the dark/light mode is changed **Settings view** * Unless you plan to have a ton of settings, it would be better NOT using a tableview and laying out your settings in a nicer way. Also the reset data button should near the bottom, since it is not a primary setting you want the user to focus on. * Look into putting these settings into the Settings.bundle instead **Add income + expense** * Same feedback as above applies * For expenses, the icons are not obvious enough for me. Are they buttons or graphics? Try to create a theme with UI elements so the user doesn't have to guess which is a button and which isn't. I hope that helps. edit: formatting
One very general critique I'd give you is to rethink your colour scheme. You have too many fonts/backgrounds that are subtly different, therefore hard to see for many users, especially those with any sort of sight difficulty. The examples being your white text on light backgrounds such as yellow on your finance graph. Your "Last updated" is also a grey colour very similar to the colour in the icons on the background, makes for hard reading. I'd usually stick with contrasting colours, theres a reason we use black text on a white background, it's very easy to read.
There was a podcast that Chris Lattner was on and he was asked a similar question. Long story short, until ABI and Concurrency are completed, it's not a useful Systems programming language. He mentioned even Apple doesn't use it except for user Application development since Framework/OS devs need a Stable ABI to build against.
We're probably similar vintage then. My first professional tasks were done in Delphi 2 &amp; 3 and Visual Studio C++ back when it had single-digit version numbers :)
I don't mind the concurrency issue as my specific use case has a single-threaded event dispatcher. Threads are used for specific and well-isolated jobs and will probably remain purely C. I don't even intend to import Foundation so GCD is not an option. 
Thanks! My summary of the answers so far seems to be "not yet, unless you are really an early-adopter type and willing to limit your expectations and live with some limitations and workarounds". In my uses case concurrency is not really an issue. Any hypothetical Swift code would live in the well-mannered main event thread and not in any of the high performance threads dealing with special jobs. I don't mind if exposing some non-mangled symbols is done by private APIs. I can deal with some API changes it that becomes an issue. Even setting up a struct full of function pointers is not out of the question. If Swift "should not be my first pick" what other options would you consider?
First I've been working on an app with my brother called [Kibbl](https://itunes.apple.com/us/app/kibbl/id1241433983?ls=1&amp;mt=8) that allows you to browse pets, pet shelters, and pet related events near you. The app also allows you to subscribe to shelters and receive notifications when new events or pets are added. If that sounds interesting to you, check out our [website](http://www.kibbl.io/) and download the [iOS app](https://itunes.apple.com/us/app/kibbl/id1241433983?ls=1&amp;mt=8). We also have an [Android app](https://play.google.com/store/apps/details?id=com.thehollidayinn.kibbl&amp;hl=en) just in case you're looking for that too ;] Second my brother and I have also just released a [podcast app](https://itunes.apple.com/us/app/software-engineering-daily-podcast-app/id1253734426?ls=1&amp;mt=8) for the podcast [Software Engineering Daily](https://softwareengineeringdaily.com/). The app lets you listen to new podcasts, browse through different categories, and even upvote/downvote podcasts to get more recommended to you. You should definitely check it out! Lastly after building the podcast app, I decided to take the player component I built for the app and abstract it to it's own library. So here's the [KoalaTeaPlayer](https://github.com/KoalaTeaCode/KoalaTeaPlayer), an extensible library to build your own player views. Right now I have a clone of the YouTube player. But with that example you can see how to recreate any other app's player view. Check it out and let me know what you think! I'll be working on all these projects continuously. So if you check any of these projects out, know that there will probably be an update every or every other week. Check everything out, let me know what you think, and please send me a message with feedback. Also send me a message if you'd like to see some tutorials/blog posts covering any part of my work! 
I kind of am, yes, but I'm going to add a few things to it. I can build it from scratch but I'm trying to save myself some time if possible.
i think most apps would just be hooks into something like PHPBB or invision ? if those are still a thing lol
https://techiedelight.quora.com/500-Data-Structures-and-Algorithms-practice-problems-and-their-solutions
I haven't tried it out yet since I just stick to C++/Swift (I'm a very aggressive Swift shill and will use it despite the hurdles), but I do believe Rust has a lot of potential. It's touted as a safe successor to C++, which is about as pragmatic as you can get when picking a language for this kind of stuff. But by all means: if you don't mind the mangling and the linking and whatnot, then try out Swift. It would be nice to have more people working with Swift for things that aren't iOS lol
Pmed you :)
I believe dark mode provides a better user experience to the user as it lets them customize the way they want the app to look like and also it's easier on eyes during the night. How I usually set it up is I make a singleton for my user interface color. Then I have a base color (the background color) which is manually set. Let's say for dark mode it is #191919. Now you can have computed variables for your other colors based on the base color, or you can use public libraries such as [Chameleon](https://github.com/ViccAlexander/Chameleon) that automatically extracts contrasting or complementary colors for text, buttons, and different layers of the app. Now to make it even more advanced you can find a weather API that also tells you the sunset/sunrise time and automatically switch from dark mode to the normal theme based on user's location. However, make sure there is a way to disable this future as it is likely to drive some users crazy haha. [Also, feel free to join our telegram group.](https://t.me/joinchat/B3EwvkH-Tw7e78Bl3hsLbA) 
&gt; but as I found there is problem that background fetch isn't repeat in regular interval isn't repeated* –––––– It's a bitch. There is a way. There are a few, actually. Use VOIP notifications. This sucks though because of the infrastructure you need to set up. Make sure that when the server gets the data, that it schedules another VOIP notification to be sent to the device in 10 mins. This is a pain in the ass. You can also schedule a notification to be sent to your app from your app, but I'd test this out first. We used a "long running task" to schedule events in the background prior to Xcode 8. Also, it is hard to know when the app has entered the suspended mode so that you would know to start this. Does anyone have a good method for detecting this? 
It can be done and I tested constant updating of the location in the background only using 5% battery per hour on an iPhone 6s+. It did require a LOT of work and lots of enabling/disabling location caching and update conditions.
Thank you! I'll check it out!
So, the structs themselves are on the stack, for all intents and purposes. But their backing storage is probably usually heap allocated. I know it is for runtime created Strings. 
leetcode
It's not available online for free, but I did write a book that might interest you: [Swift Coding Challenges](https://www.hackingwithswift.com/store/swift-coding-challenges). Contains 64 graded challenges for Swift developers, with each one stating a problem, providing hints, then providing a selection of solutions that are explained in detail to help you learn as you go.
What does this have to do with swift?
&gt; The thing is I'd like to improve my logical thinking/algorithm writing skills with some exercises (best if they're easy, then hard) I mean, the website for stuff like that is https://projecteuler.net but the stuff there is quite hard. I still suggest doing some of the exercises there. I did the first 12 when I was bored on a weekend and only that already helped me quite a lot since you start thinking in for/while loops way more which can be quite useful.
I've been working on my first app, [33 RPM](https://33rpm.io) which lets Apple Music users track their listening history, share what music they're playing to their followers, and recommends you new music based on your listening history. It's still in private beta but if you're interested, I would love for you all to try it out! 
Sephora was my first web app in Swift using Vapor, it powers http://swiftforums.herokuapp.com Code here: https://github.com/kuyawa/Sephora
Can you give some more insight? I'm a little curious.
I've looked at Rust. And so did the Swift designers. They took many of the good parts and made them more foolproof to use. They also looked at C#, D, Haskell and did the same. For example, in Rust and D a reference counted pointer is just another library type. While it's great that they are flexible enough to implement it as a library type, it also loses much of its appeal when it is not the default. 
Project Euler is my favorite. But codewars has been super fun these past few weeks
I liked Project Euler a lot, I managed to complete 5 exercises. I don’t think I applied the right approach though, that’s why I’m struggling with many exercises there. 
I’ll check it out, thanks! 
If you submit the correct answer you can just look at the forum thread and see how other community members solved the problem. 
Read "Cracking The Coding Interview"
Thank you. I thought that won't be easy to solve it. Based on information from this thread I decided to try implement server for silent push notifications with firebase and for update of gps location I will use background mode.
Here is [list of supported platforms](https://swift.org/about/#platform-support)
Thanks. Yes I meant iOS in my case.
Thanks and sorry for my bad English. 
&gt; For example, in Rust and D a reference counted pointer is just another library type. While it's great that they are flexible enough to implement it as a library type, it also loses much of its appeal when it is not the default. That's really not true for a systems language. There you want to precisely control allocations, their ownership and their scope, you may make use of RC but you really don't want that to be the default. Plus RC'd types have more overhead in both memory (they need a place to store the strong and weak counts) and CPU (even atomics will force pipeline flushes and limit throughput, you can work around this one with non-threadsafe RC but then you have to make really really sure your objects are really thread-bound, which most languages — swift included — don't help you with). Witness C++ which also has refcounted allocations as an stdlib type. GC'd default makes a lot of sense for applications language, which is why Swift does that. Swift has ways to become a systems language down the road and some changes/additions are planned for it (IIRC they're working on a variant of ownership which makes sense for the language), but that's not the current focus at all.
This probably isn't the most helpful of feedback, but I really love that kibbl icon (and the rest of the app as well)! Great work!
have you considered just making that into an app? 
Came here to say this. 
I'm really hyper about AR right now. I've just finished incorporating ARKit into my game [Marbles](https://github.com/UnalignedByte/marbles). Have a look if you're curious. Now I'm working on a new AR game, and hopefully will have something to show soon enough.
Awesome. Thank you. 
This looks like pretty much what I want to get started. Thanks!
The [Swift Algorithm Club](https://github.com/raywenderlich/swift-algorithm-club) is quite interesting.
Thank you so much! We worked with a fantastic designer for Kibbl. I appreciate you checking it out!
I'd love to sign up to codewars, looks like servers are busy though...
There are different kinds of system programming. I would not write an OS in swift, while Rust looks definitely up to the task. My use case is extending and supplementing a large existing C code base. The parts I would most like to do in Swift are configuration, management, alerts, interfacing to external orchestration systems that involve protocols with complex semantics but low bandwidth. It really sucks to write this kind of code in C. It may not be the "hard core" of system programming, but it is a big and inevitable part of it. Rust forces you to wrestle with its oh-so-clever lifetime and reference borrowing system for even the most basic programming tasks. With Swift things are so straightforward it almost feels Pythonic. Swift was designed to make non-sophisticated developers productive. It helps sophisticated developers, too, when they don't have to waste brain cycles in places where it is simply a waste of energy. Rust, D or Haskell seem to be targeted ONLY at sophisticated developers. 
There is also a Kitura version never finished but it's almost the same code base, so pick your Swift framework and onward!
Thanks. I'm going to use this to learn some cloud storage system as well. Not that you care lol
So with @cdecl it's fine?
TurboC++ 3.0
That's amazing - I already saw some posts / comments from you knowing you are active on reddit. I'm still working through the introduction because I have no background in programming at all, and it's working fine so far - I constantly look for confirmation of something I learned so I like how you summarise everything at the end of a subject in just 1 or 2 sentences. You are amazing sir :)
That Python code is literally a longer, slower and more obscure way to write "return 5"
It wasn't meant to be taken literally.. given two variables, one with a value and one nil/none, an "or" would be the fastest and cleanest way. 
Depends. That kind of code has gone wrong many times in production code that I've experienced. 0 is falsy, as is empty list/dict/set and that might be what you wanted but many times not. I'd suggest to use "return 5 if foo is None else foo" because it doesn't blow up nearly as often. 
yeah. it's undocumented though so the behavior is not guaranteed to stay the same
UIImage(named: "Your Image Name") Is probably what you're looking for.
Got working again on an old project I started about 2 years ago: https://github.com/tominated/Quake-3-BSP-Renderer It's a renderer for quake 3 maps - the results look great but the code needs a hell of a lot of clean-up. It reads a pk3 file (the main data file from quake3, a renamed zip) and parses the map file and "shaders" (quake specific effects before opengl/directx shaders were programmable), then builds Metal shaders and renders the map with all the textures and animations. It renders almost everything apart from some fancier effects. I added super basic panning and pinching for moving. I'm planning on optimising the rendering before adding dual virtual joystick controls, and potentially (aka if i don't get bored) making it work as a real game that can connect to a quake 3 server running on the network. If you wanna try it out, you'll need to get a copy of the shareware pak0.pk3 and chuck it in the "Quake 3 BSP Renderer" folder - no guarantees that it works, it's not very well tested Edit: [bonus video of it in action](https://youtu.be/EccTk48wt6U)
Did you set up the products backend on iTunes Connect?
Yep (i assume you mean the features - in app Purchases thing)
Could you be more specific? Are you loading the images from the assets folder? Or using an online database? 
There are two parts to what you want to do. 1) download the image data from the web 2) display the image in an image view in a table view cell you are allowed to do the first part on a background thread; you must do the second part on the main thread because UIKit works that way. If net.getIcons() is doing both parts, then you cannot improve your situation by using queues. You need to abandon or rewrite net.getIcons() so that you are able to do the two parts separately. Once you have the two parts separated, you want to do the first part on the background queue (after the first dispatch in your sample code), and you want to do the second part on the main queue (after the second dispatch in your sample code). 
This initializer makes a query inside the xcassets folder associated with your target using the passed name. So, if you have a foo.jpg image inside your Assets.xcassets folder you need to write this: UIImage(named: "foo")
Thank you for the kind reply and taking the extra time to explain your method AND pass along a few resources. I definitely agree it provides a better experience and can't wait to figure it out! Best,
Great, thank you all!
Thank you so much!
I've always struggled with staying committed to programming. As a kid I always tried out different programming languages and I would do them for a while but then I would start doing less each day and eventually not doing it at all. This usually happened when I would get stuck and couldn't find a solution online, etc. I was never good at thinking of ideas for things to make, I'm not very creative. So I would try a programming language, not really get anywhere, and then move on to another one and still have trouble. I also used different online tutorials, sometimes paid ones, and those are good if I just keep going through the videos cause then I don't have to come up with an idea for something to make or whatever, but still I would find myself not doing it after a while. I wanted to make apps and I tried once when I was younger but I don't think I was really grasping obj c, so when Swift came out I tried that. I did a couple different swift courses, but both times I did it for a while and then stopped and after a while I started forgetting stuff. I will say that swift is the only one I had retained some of the information, maybe because I was older when I started. So it wasn't super hard to get back into now, and I have been working on an app that allows me to trade cryptocurrency on Bittrex. Idk if it would ever be allowed on the app store, doesn't seem like any of the apps on the app store allow for actual trading, usually they are just a wallet app, but I mainly wanted it as something I can use myself. It was actually enjoyable to code, maybe because this is just something I'm actually interested in. Anyways, I wouldn't say I'm much further than I have been in the past, but I just need to stick with this and stay committed. I'm 23 now and don't really have much vision of a future job, I never really knew what I wanted to do (something with computers) but I think if I get good at making these apps, it can at least get me somewhere. Sorry for long post, but thanks if you read :)
That's awesome! I've been working on an app the is connected to Bittrex and allows you to buy and sell coins. I could also make it track the portfolio of coins, that shouldn't be too much harder. As for an actual wallet, I think that would be a lot harder. I definitely wanted to try doing that but I don't exactly know how to implement stuff like that yet. Hope it goes well for you!
Since he didn't reply, I'm not sure if you know what he is talking about or not, but a crypto wallet would be a wallet app to store cryptocurrency. This could be for a specific currency, or for multiple cryptocurrencies. There are numerous ones so it would be beneficial to hold multiple on one app, but at the same time it would be quite difficult to make, I would imagine.
So when I originally searched how to do this, I read that I should not update the UI on the background thread, so I was already aware of this. I do not believe I am doing anything like that. That function runs an alamofire request. It takes the response, and for each item in the array of dictionaries, there is a imgur url with the icon. So we simply get the url, and run an NSData(contentsOf: url, options: NSData.ReadingOptions.alwaysMapped) and it takes that NSData and sets my class's icon property to a UIImage with that data, which inside the class is then added to an ImageView. I guess UIImage could be the thing that I am not supposed to do...but the only other way I could think to do it is make my icon property an NSData property, and then create the UIImage at the same time as I add it to the ImageView. Also, I'm not sure if .alwaysMapped is the correct thing to use here, but I think it is what I should use. These icons are displayed in the main table of my app and should always be available. Edit: Tried doing that where I just set the NSData and not create the UIImage, but still I see the same result. I load the information for the table, and there is an UpdateDelegate that fires after that part is complete, and that is what sets off net.getIcons(). I assume it is quite a bit more information (some json data vs a bunch of images), but I'm not quite sure why it freezes the app. The only line I can comment out that stops it from freezing is NSData. Which is obviously where the downloading takes place. Either the background thread part is wrong, or something about the NSData is wrong.
I hope your group fares better than the App Development with Swift slack group that died pretty much as soon as it started.
I'll try to rephrase what DressTheMonkey said. UI updates only on the main thread. Updates TO IT from you, which you do from another thread may crash. At first you downloaded your icons on the main thread. Now you still download your icons on the main thread. It's simply what THIS CODE DOES. DispatchQueue.main.async { net.getIcons() } It executes async on the main thread meaning the cpu schedules it sometime. But sometime its running on the main thread and stops your ui till its finished. You simply told the scheduler to put it on the main thread, but dont block the current execution right here, but wait till its convenient for the scheduler. Solution: Download your icons from the background thread and update the ui in the DispatchQueue.main.async call. How you do that is up to you.
Thanks, I appreciate the aggregation and I plan on following up with some of these listed. 
Wanna be optimistic about this one. Beside, am already near the end of the book. The reason I want to start a group is because I want to impart my knowledge to the community. If nobody is interested, it's fine. 
I kind of get what you are saying, the first part is on the background and the main.async is on the main queue. So like this? DispatchQueue.global(qos: .background).async { net.getIcons() DispatchQueue.main.async { //do something } } because that does not make a difference. If this is not what you mean, then I have no idea how to access the background thread. Or something is just wrong in my function. 
Suppose you have a carton of 12 eggs. I suggest to you that you should give half to Joe and half to Mary. Would you give the whole carton to Joe? I rather think not, because that leaves Mary without any eggs. So would you then give the whole carton to Mary? Nope, still doesn't work because Joe is egg-less. The thing that makes this not work is the carton. You would have to abandon the carton; I think you would open the carton, take out 6 give them to Joe, then give the other 6 to Mary. The same thing needs to happen here. Your getIcons is doing TOO MUCH to use it in this set up. Because you either have to put the whole thing on the background thread (wrong because that then updates the UI from the bg thread) or the whole thing on the main thread (wrong because that stops the action whilst the downloading takes place). So stop using getIcons. If you have the source code for getIcons, you can probably deconstruct it so that it is doing the appropriate pieces in the appropriate places. But it is time to give up on getIcons as a single thing. It is not usable in the state it is currently in. Also, if you are using Alamofire to download the image AND doing NSData(contentsOf: url...), then you are downloading the same stuff twice. Either my understanding of what you are doing is faulty, or you need to check that.
Nothing against Slack but wouldn't it be better if it was less ephemeral, like a subreddit?
That can work as well. Even people without the slack invite can see it. So how do you think we should start?
I just realized he mentioned he had the images in the assets folder. I read the question too fast 😅 But yes you are correct. 
can someone sticky this?
No problem. Good luck with your app and feel free to ask me any other questions you have. 
I started to learn Swift today and found this link which was posted TODAY. Incredible coincidence. Thanks!
Okay so I did realize that my function was downloading more than it needed too, but it wasn't solving my problem. I'm using alamofire to download json data, and that retrieves icon urls, which are imgur links. So then I'm using NSData to retrieve the images from those urls, and adding it to a property for a class I already have initialized. Maybe there's a better way to do this with alamofire, idk. I'm not home to specifically check the function right now, but I'll look more into it. But I don't believe that I am doing any UI stuff in that function.
Happy we can help! You might also like [A Guide to Get You Started With iOS Development in 2017](https://juniordevradio.wordpress.com/2017/08/09/a-guide-to-get-you-started-with-ios-development-in-2017/)
How about opening a subreddit /r/LearnSwift or /r/SwiftDev (both are taken) or whatever interesting name fits the purpose and start posting stuff for beginners? It would need some dedication at the beginning since empty subs are boring so you would have to fill it with at least 25 posts and then people would join and post their questions or topics of interest. Then invite everybody and that's how you grow a sub.
Thank you SO much!
Thank you so much :)
Understood. Thanks :)
Learn and create! That's what seems to be working for me. There's a fairly cheap course offered on udemy though - i'd suggest you to take a look at it.
Definitely learn the basics first, if you have prior programming experience it shouldn't be too hard to learn Swift's basics. The best way to learn the basics is to download Apples Swift Book on iBooks. If you prefer a university learning environment check out Standfords iOS 10 course its free. You'll learn a lot about Xcode and Swift, but I would recommend reading Apple's book first. Once you think you have a good understanding start making simple apps like a Todo list, Timer, etc. If you have any more questions feel free to message me or check out the side bar.
Make sure you’re setting that constraint on the main thread.
Try this: DispatchQueue.main.async { self.heightAnchor.constraint(equalToConstant: 75.0).isActive = true }
I would say learn Swift first. I think learning how to use xcode and learning the syntax of the language at the same time can be a bit overwhelming. It won't take long anyway, assuming that you have prior programming experience. 
I'm just starting to learn swift (was a .NET developer before that, and now work as a project manager). I'm down to help with the moderation of the subreddit or whatever is needed.
This doesn't make sense, you want the other two buttons to open the settings screen? Do you mean you have two sub views from the settings screen and you want the tab bar to take you to those sub views directly?
Nope.. sadly.. and I request a feedback from the interviewer.. and thankfully he replied that he rejected my assignment because it had a crash at one usecase. And also the test classes are not effective.. 
Both buttons will open different view controllers that are already have segues attached from the settings view controller
Doesn't seem to make a difference.
Tried it out, got the same result.
You should post some more context then.
Do you need those views to have back buttons to the settings screen?
Let us know if you have any feedback on our article :) 
Alright well I'm not exactly sure what to post. I have a table view inside the main view of my app, and I have a custom cell class that contains several constraints to place all of the labels where they need to go. The class is definitely working, all the elements are in the correct spots, more or less, and the only thing that does not appear correctly is the height of each cell. This is my first time running into a difference between the simulator and my device. I also just tried adding the constraint in the cellForRowAt method, which works fine on my simulator, but again it is wrong on my device.
Are you setting your UITableView's rowHeight property to UITableViewAutomaticDimension?
Nope, I never touched the rowHeight property. I was simply doing a constraint. I wasn't even aware of this property, but you actually led me to the answer! I simply made the rowHeight property what I needed it to be. I think UITableViewAutomaticDimension is the default for that, so that would explain the problem. I'm also an idiot because this led me to finding that there is a simple heightForRowAt method within tableView that would probably make much more sense to use, can't believe I completely forgot about that! I believe this automatically overrides the rowHeight property. Thanks.
I’m commenting so I can read this later.
happy to know your thoughts after you read it :)
Yes, I was able to get to them but had no back button to either the settings screen or the master view controller 
I'm guessing you reloaded the data with each tap of the segmented control right? After each reload, you have to programmatically select the cell. As far as I can tell, you're only modifying its view property (the alpha right?) if the indexPath is present in your array. Simply doing that doesn't let the cell know you intend for it to be selected. 
make sure to stick around in the sub! I'm sure we would all love to help you out if you stumble into any issues :)
How's the height anchor being handled? is it a weak var? Edit: Why are people downvoting this? Legit question Imo.
Hey sorry for the delay, I'm building a crypto wallet that stores and analyzes your wallet activity (as someone says). I'd like to provide a different way of looking at your balance while giving a lot of analytic tools to go with the space. If you or someone else is looking to contribute, I'm in need of a UI/UX designer
I figured the problem was that the cell was not actually selected, but didn't know that cell.selected = true in cellForRowAt is not the way to do it. I've coded it in and it works perfectly now. Thanks so much. Have a great day!!! :D
if its a weak var, remove the weak ;) you should see it work.
But modern "flat" UX design is utter crap. Valuable context is lost. The user can not tell the difference between an item that is tappable and one that is static by looking at it, like they used to be able to. People are now forced to guess what is an item they can interact with. Also, animation now seems a trend for the sake of being a trend. Irritatingly, much of the animation simply can't be turned off. What should help the user get their job done now serves as a distraction, an irritation that can't be disabled. Be careful when adopting modern trends when teaching yourself UX design. Chances are you'll copy exactly the worst trends that don't help the user. Look at the cascading/rolling up NSOutlineView contents in Xcode. This serves no useful purpose to the user, who wants to see or hide the contents as fast as possible. In fact, it is counter productive and slows the user's progress and distracts him with startling and useless motion.
Progressing through the Swift book and gonna start some projects.
Not sure why it was downvoted, although I managed to solve the problem if you look at one of my other comments. Basically table views have a row height property which defaults to UITableViewAutomaticDimension , which makes it default height. If you use the heightForRowAt function of table view, it overrides that property, or you can just change the property. But I didn't know this was an issue before because I was using a constraint and the constraint worked fine on the simulator, just not on my device. Thanks 
Well it's certainly possible to do what you want but it seems like your use of the tab bar might be confusing for the user. Anyway one way you can achieve it by subclassing UITabBarController, overriding the tab did change and then when those tabs are selected, immediately select the settings tab, get a reference to settings viewcontroller and trigger the correct segue. That really is going against the point of a tab bar though. Can you provide some wireframes to show what you're trying to achieve?
Is there supposed to be a guide here? It looks like basically just a reading list. &gt; You work on the laptop, where every corner has a reason to be that specific share. [sic] Eh? &gt; You read Medium, which UI was crafted by the team of designers. [sic] Ugh. I only read it with Safari Reader Mode, which undoes the mess that Medium's "team of designers" tries to inflict upon me. It's clear that their goal isn't to help me read, but to get me to click around on Medium.com and paste links to Medium on other social networks. Every time I turn around, it seems, there's more annoying junk on Medium pages. There's good design in the world, but in software these days it seems to be mostly trying to hoodwink people into helping your particular product be just a little bit more viral.
&gt; But modern "flat" UX design is utter crap. That has nothing to do with the linked article, which doesn't mention any specific styles of UI, much less the "flat" style. (Or Swift.) &gt; Look at the cascading/rolling up NSOutlineView contents in Xcode. This serves no useful purpose to the user, who wants to see or hide the contents as fast as possible. In fact, it is counter productive and slows the user's progress and distracts him with startling and useless motion. Somehow, I doubt you've done as much user testing as Apple's research lab. In fact, animation like this serves a very useful purpose. The user's goal isn't simply to change screen states as fast as possible. They need to understand what is happening, too, and animation helps do this. People get confused when things simply appear or disappear without warning. &gt; People are now forced to guess what is an item they can interact with. You're simultaneously praising design that shows users more hints as to what it can do, while criticizing design that shows users more hints as to what it's doing. In a world without animation, people are "forced to guess" what happened to the item they just interacted with.
Sorry not a tab bar but a nav bar I wrote this while I was tired
1) Use [NSLocalizedString](https://developer.apple.com/documentation/foundation/nslocalizedstring) 2) Use [UserDefaults](https://developer.apple.com/documentation/foundation/) let defaults = UserDefaults.standard defaults.set("Josh", forKey: "name") print(defaults.string(forKey: "name") ?? "No saved name") 3) Use [UICollectionView](https://developer.apple.com/documentation/uikit/uicollectionview) 4) let image = UIImage(named: "sample")! let imageView = UIImageView(image: image) view.addSubview(imageView)
Don’t forget to add constraints to the added subview. That’s a whole ‘nother conversation itself.
In this month started to learn Swift for work and started to make chat app for iOS. Had so many problems with JSON which I receive from server and which is so hard to parse in Swift. Also tried to make responsive app so want to make view with max-width but after week with pain in Xcode understood that better to ignore this. But after all this time understood that Swift is really awesome and so friendly only with some "weirdnesses"
Watch "Lets build that app" on YouTube he doesn't things all programmatically and explains how to build certain apps 
I'm dabbling with swift for server-side code. Not sure about mixing it with C (never wrote any serious project in C since the ftp client project in second year of University). What I really like about swift: 1) Statically typed with support for closures and algebraic types 2) Compiles to native code 3) No GC 3) Copy-on-write means no need for defensive copying 4) Good support for immutable data (not perfect but good enough IMO). Statically typed languages used to mean no good support for functional programming (Java, C++). Other languages (like D and C++) rely too much on templates and overloading to the point that looking at a function call you can't really tell what's going on. Also in D you can pass a value by reference but looking at the call site you couldn't tell that a variable is being passed by reference. So this makes me feel that swift's design is more solid. Go lacks generics and other basic concepts so it's out the door for me. So in short, I really like Swift and think it can work really well for "system" level tools.
Original phrasing is also valid.
You seem to be confusing programming language vs app framework. All the points you mentioned have nothing to do with Swift per se.
Reddit has a save feature, ya know?
No, I'm talking about swift in iOS context.
SWIFT MEAT &amp;&amp; POTATOES INTERMEDIATE COURSE FREE FOR 48 HOURS in return for 5 star reviews! https://www.udemy.com/swift-meat-potatoes-an-intermediate-course-for-swift/?couponCode=SWIFTMPFOR10
Definitely in the View Controller. 
Read up on he basics of Swift and try them in playgrounds. After that, look into the CS193P Stanford course on iTunes U. You do need to know the basics of OOP though. 
If this was for iPad Pro... If only...
If you want a "Swiftier" UserDefaults (the answer to #2), I recommend the [SwiftyUserDefaults](https://github.com/radex/SwiftyUserDefaults) extension. Been using it in a recent project and it's fantastic.
If that mailinglist exists, mind adding me to it? Really interested in the book!
The buttons are part of that particular view, so do not couple them to anything else but the view controller. The actions can in turn invoke the controller if necessary. 
So I checked. Once the early access program starts (MEAP) you can start receiving updates. I can send you a message when it is up, sounds good?
&gt; It looks like basically just a reading list. This is the way we have been learning design: practice + reading good articles. There is no silver bullet. No one article, guide or video tutorial will teach you design. You need to talk to users, make shitty designs, then get feedback, then improve your designs, and read UX learning materials. &gt; There's good design in the world, but in software these days it seems to be mostly trying to hoodwink people into helping your particular product be just a little bit more viral. That is true. So we need to know that "design tricks" and make our software user-oriented.
It needs editing by someone who has English as a first language; there are many grammatical errors and examples of clumsy wording that detract from the content of the piece. For example, the very first statement 'I’m an iOS &amp; macOS developer at first place.' doesn't make sense, and would be better without the 'at first place', or a slight rewrite to 'I have been an iOS and macOS developer since &lt;insert time here&gt;.'
Attach the action to a button in your VC
thank you for the honest feedback! Indeed, we are not native speakers... So far, I &amp; my co-founder don't have the ability to pay for English tutors to edit our article :( 
Has anyone found out when in September will the interviews be taking place? What would you guys recommend for a foreigner in terms of accommodation in Naples? I don't speak Italian unfortunately.
I'm happy, that my list became useful and got so much attention :) 
Now developing chat app. Have so many pain with constraints
Default UserDefaults is also enough
Yeah, totally ready. I've been using Perfect/Swift in production on Ubuntu now for months, 100% stable, really fast. Yeah, there are some crappy bits still not great on Foundation, and TBH you're going to get that with any of the frameworks, and there are easy ways around those. The Perfect Assistant's Docker integration with Xcode helps me identify and sort those before I even go near deployment. As for the assertion that Perfect is not quite perfect, I humbly disagree.
Perfect is the most powerful Server Side Swift for All the time. Before reviewing how powerful it is, a quick reply to the vapor style `HTTPClient`: Perfect provides `CURLRequest` which can help you deal with all kinds of URL request - not only HTTP/HTTPS, but also FTP/FTPS and even websockets - Perfect SMTP is also based on Perfect-CURL. Now let's turn to an important topic. How do you define a modern Server? If you just want an API to access some databases then return a JSON, CouchDB can do it STANDING ALONE without any plug-ins, so why web servers and why web servers in Swift? Perfect simply has such a kind of powerful features, and most of them are unique: 1. Bring the future: Big Data and AI / Machine Learning. Yes, Perfect provides Perfect-Hadoop, Perfect-GridFS, and Perfect-TensorFlow which can help you place as much data as you want and extracting out valuable info or make predictions on big data like human beings. Hey, where is Vapor now? where is Kitura now? Are they really contemporary servers? If you don't believe AI is a big part of Swift, then why Apple brings CoreML and why Chris Lattner joins Google Brain? 2. Bridging to Legacies. Big data is not building in a single day but came from history. Perfect provides Perfect-LDAP and Perfect-SPNEGO to enable enterprises to access their accumulated historical data in a secure and Swifty way. Now tell me how Vapor and Kitura can do it? Can they make a single sign on to a Windows server as Perfect does? 3. Deployment Tools. Perfect has a very powerful Mac OS Native App called Perfect-Assistant which can help you build, test, run and deploy just right on your local computer. It supports at least AWS and Google Cloud, and also supports Vapor and Kitura dependence management !!!! No matter how many narrow people make unfair critics, Perfect is the Most Open Swift Server - actually, as far as I know, some users had already put Perfect into production servers and also adopted some vapor components to the Perfect servers - that's brilliant! Come on! Open the arms and hug the future. Lovers never fight.
[removed]
Generally attach actions to the viewController. If the action is visual only, without affecting application state, sometimes we keep it within the view - for example, moving the cursor. 
I have a question. What would you do with your product if user testing surfaces that your audience doesn't care about Rams ideals, or likes the opposite of minimal? Would you accept that and build a product they like, or would you continue with audience discovery hoping that the people you got feedback from weren't representative? Would you build a product you wouldn't use, or like yourself? Just for an audience?
You don't need to use NSURLRequest. Use PerfectCURL. Perfect has had support for CURL and WebSockets right from the start AFAIK.
The view controller is typically responsible for setting up actions and responding to them. The view classes are typically subclassed only when necessary for managing complex rendering and subview hierarchy and layout. So, if you don’t need to subclass a uiview, then everything can be done in the view controller. If you do subclass uiview then setup the button’s target to point to the uiview and use delegation to call up to the controller when necessary.
Slide into my DMs too champ.
The pictures you placed in the AppStore look awesome. Good job on the release! :)
Will do! As soon as the early access program starts (MEAP) I can share a nice page and you can start reading!
Thank you. A friend of mine did the designs for me. They're simple but I think they're effective and work well. :)
Upvote for not using storyboard
&gt; would you accept that and build a product they like, or would you continue with audience discovery hoping that the people you got feedback from weren't representative? We build already the product, which we think **was good**. That product took us 12 months and went to the trash. Why? Because we didn't talk to people while coding &amp; designing it. As a result, that product was far away from what we thought people needed. Audience discovery would show us those problems earlier... &gt; Would you build a product you wouldn't use, or like yourself? Just for an audience? I think, that it's always a combination of what you feel is right, what you like to do and what has a demand. **Making startup is hard. It takes a lot of time and emotions. You often face too many challenges, too many fuckups, too much work... So I it's just not possible to survive if you are not love, what you are doing :)**
Coming from a C background, it took a few resources to get up to speed, but it's a great language. What helped me out are the BigNerdRanch(BNR) books, [Hacking with Swift](https://www.hackingwithswift.com/read), and building a project along with them.
Swift libraries contain the metadata that would otherwise be stored in a header file in C. It's basically just all of the public types/functions/methods. Shipping a library without source isnt really viable in Swift yet, though, since the ABI isnt stable. You would have to have a version of the library compiled for exactly the language level you were using, which is quite fragile. Until ABIs are stable, you have to ship your libraries with source, so that consumers can recompile them for the version they need More to the point, I'm not sure why youre looking through header files (especially in C), which are a total shit show of macros and such. Why not just consult the API documentation of the library of interest (Assuming it exists)?
That's almost assuredly because you're trying to access the data outside of the handler before the request has been completed and the data/response has been received, thanks to the asynchronous nature of the call. Depending on what you want to actually do, you'll likely need to use something like a semaphore to wait on the completion of the network request before trying to access the data. Here's some (likely poor) code I wrote a while back that works to get around this and do what I needed at the time, but is probably not the best way to do things. func issueReq(_ req: URLRequest) -&gt; (Data,HTTPURLResponse?) { var respData = Data() var respResp: HTTPURLResponse? let flag = DispatchSemaphore(value: 0) let session = URLSession.shared let completion = {(data: Data?, response: URLResponse?, error: Error?) in guard error == nil else { print("error: \(error)"); return } guard let data = data else { print("No data"); return } guard let response = response else { print("No response"); return } respData.append(data) respResp = response.copy() as? HTTPURLResponse flag.signal() return } let task = session.dataTask(with: req, completionHandler: completion) task.resume() flag.wait() return (respData,respResp) }
A URLSession completionHandler closure may not always have data. It might help if you posted a snippet of your code, but in general don't just force unwrap an optional, use a guard let or if let statement to unwrap if they are not nil.
At least for system frameworks on iOS/macOS the header comments sometimes get updated faster than the docs do, and sometimes contain different/additional info. It's not unreasonable to look over them.
This is legit enough for op, imho. Use this and peruse the docs on nsurlsession. 
Where are you reloading the tableView? That should be on the main thread.
 A code snippet would help us understand what you're trying to accomplish but if you want to pass your data to a variable outside of `dataTask(with:completionHandler)` and you are calling this inside of a helper method then if you also have your helper method take a completion handler, you can pass the data object out of your method but not until the method is complete. func fetchData(completion: @ escaping (DataType?) -&gt; Void) { let task = URLSession.shared.dataTask(with: requestURL) { (data, response, error) in // parse your data here { completion(dataName) } else { completion(nil) } } then when you call this method your completion handler is merely a way to update your instance variable but doesn't run until the fetchData method has finished its tasks fetchData {(data) in if let data = data { self.data = data } }
Xcode can generate the public interface of any file.
Sure, for libraries that other people wrote, but OP is specifically asking what to do as someone shipping their own libraries. For that, a reasonable answer is: keep your own docs updated. There's no separate header files required by the compiler, so it shouldn't take any extra time. At worst, you'll spend the time you saved from not writing a header file writing a pseudo header file, and it all breaks even.
Ah, yeah, good point
&gt; Shipping a library without source isnt really viable in Swift yet, though, since the ABI isnt stable. That's true, but that doesn't justify the need for documentation. That was just a theoretical; assuming a stable ABI, how you you document without source? &gt; More to the point, I'm not sure why youre looking through header files (especially in C) _Especially_ in C looking at header files is how you get documentation. Not every header file, of course, but the public header files. The ones that are installed with libraries. The ones that tell programmers how to use those libraries. For example, `curses` or `libtidy` or or `curl`. Sure, some of them provide Doxygen projects, but those are a PITA compared to just looking at the public header. &gt; Why not just consult the API documentation of the library of interest (Assuming it exists)? In C, the public header _is_ the API documentation!
&gt; Sure, for libraries that other people wrote, but OP is specifically asking what to do as someone shipping their own libraries. For that, a reasonable answer is: keep your own docs updated. I guess that's the question I'm asking: lacking header files, what's the convention/ best-practice for keeping my own docs updated? This typically means keeping a public header file updated. Not having headers means duplicating docs, i.e., once in the source, and again in some other type of documentation system. 
I know, but that's not what I'm asking. Traditionally, C public header files are _documented_ public interfaces so that you know what you're supposed to do with the interface. Consider the curl public header file. It's a beautiful masterpiece that tells you everything you need to know in order to use libcurl. I'm not affiliated with that project, by the way. 
&gt; assuming a stable ABI, how you you document without source? The library vendor provides a dockset they generated from their source, either for download, or hosted online &gt; In C, the public header is the API documentation! No, I meant a docset like what Doxygen produces, javadoc, etc. Raw C header files are such a mess of macros, they have a lot of noise and very little signal. That's exactly why documentation tools like doxygen exist
I think this could've been written more clearly (then again I could've provided a code snippet like you said) but it solved my problem so thank you for that. I'm curious now as to what the pros and cons are of this approach vs. the one u/Nerdlinger posted.
You definitely have something amiss in your storyboard. I'd suggest looking for the "Adjusts Scrollview Insets" setting in the Attributes inspector for your view controller. Also, if your tableview isn't the view controller's main view, make sure that your bottom constraint is connected to the bottom layout guide.
That last suggestion was a life saver. This was killing me. For some reason I had my tableview's height set instead of the bottom constraint being connected. Thank you for your kind and quick reply! Best,
lol, sorry my response wasn't clear enough. I had a short amount of time to write it and wanted to give you what I felt was a more concise and efficient way of handling the problem. As for the pros and cons between the two approaches, my feeling is that /u/Nerdlinger 's approach, while perfectly fine, is basically re-implementing the completion handler already provided and possible adding some overhead but I am by no means an expert (and hopefully one will chime in to verify or debunk my "feeling").
Never said it wasn't...
Videos. Code with Chris was my start. 
[Document](http://nshipster.com/swift-documentation/) your source files properly using comments with Markdown-like syntax. Xcode will use your source documentation to generate useful quick documentation (as demonstrated in the above link), and when building a framework the compiler will generate a public interface that includes your documentation comments, public functions, etc. just like the header files you're used to. If you command-click a standard library type in Xcode it'll jump you to the standard library's generated interface so you can see what that looks like. You can also [view the interface for your own files](https://developer.apple.com/library/content/qa/qa1914/_index.html) in Xcode quite easily. If you want separate external documentation, use a documentation generator like [Jazzy](http://www.yudiz.com/generate-documentation-using-jazzy-for-swift/) to generate it from your well-marked-up source comments.
Document your source and the generated public interface will retain those comments.
If you do get a hang of the very basics, I highly recommend the CS193P course on iTunes U. It's a Stanford course on programming with Swift, and it's excellent. 
Basically, the difference is the way you've written the surrounding program and the nature of that program. I needed to have the data sitting there for me to examine and manipulate at the command line, so I was fine with using semaphores to block until my data was available to play with. This simplifies a lot of the surrounding code as it can be written in a manner similar to fully synchronous code. However, for a lot of applications, it will suck to use this method. Imagine a web browser fetching a billion things, but not rendering anything until all of the network calls had returned their data (or to fetch and render them one at a time). In cases like that, you should use something more similar to what /u/amikiri has shown. You make a request for, say, an image and pass it a continuation that says something like, "Oh, hey, once the response arrives, if it was successful, update this UIImageVew with the downloaded image, and if it failed, stuff this default image into it instead." At the same time you can fire off a request for, say, some text and pass it a continuation that tells it to update a specified label with the reply, and so on. It often takes more planning and thought to do things that way, but it's a much nicer way to approach some problems. And again, it depends on the nature of your surrounding program and what you need to do with that data that's inside your closure. Sorry, I should have included info about this when I wrote my first response.
&gt; Everything I try it feels like they miss out on so much of the language. The language or the Apple libraries? Because there's a difference between the two. And if you mean the latter, that's because any comprehensive resource would be fuggin' enormous. &gt; Also I can never find something that teaches the Xcode interface as well. I absolutely agree with you there. There are a couple of resources that touch on it a tiny bit, but I really would love a good Xcode book/tutorial. But as for resources for learning Swift programming, well… [read through these and go with a bunch of the top suggestions](https://www.reddit.com/r/swift/search?q=learn&amp;restrict_sr=on).
this is definitely a good course but yeah, a person probably needs to begin to get the hang of things first. 
Hello, I can suggest you to take a look on [We ❤ Swift](https://weheartswift.com/), where you can find really good tutorials and support for learning.
I tried to start with this course since i had some programming knowledge and it was to much for me to handle at the time with other commitments. However, you stated it perfectly and it is what I did. I picked up a few books and watched some tutorials. Once i had the grasp of the basics and felt comfortable with my knowledge, I went back to CS193P. Also had a bit more time on my hands so I was able to handle it much better.
Hey, If you've learned things before, math, physics, etc. You will recall that at first you had no idea what was going on. You worked problems and practiced things, read things, and none of it made sense and you felt like how could I ever learn all of this? Except, over time, day by day, with work of course, dedicated time and discipline. You begin to learn and understand some things. Still feels like pretty slow progress. Until one day you start saying 'oh yeah, I read about this before!' and you go back to your notes from the beginning of the semester and suddenly it is very easy to read and you understand mostly everything, not only that but you can see where it is going. That is how I would suggest you tackle this. Sure you can say 'man I don't understand this I give up.' I assure you however work on it and you will get it. With that said, 1 - iOS apps like playground (ipad), codeswift (my fav) and a couple of others will help you get somewhat familiar with the language itself. 2 - videos will help you in a number of ways, you can start with the the tutorial here if you want https://developer.apple.com/library/content/referencelibrary/GettingStarted/DevelopiOSAppsSwift/ Apple has some really good resources. 3 - once you kinda get oriented with all of the above, you're probably about ready to go to tutorials where you make apps. Could be simple ones at first or if you want to be ambitious go ahead. If you get stuck or simply can't figure it out no matter what, maybe leave that one (remember what I said at the beginning of this write up?). Move on to a more simple app tutorial. You can come back to the difficult one later. A major hurdle in troubleshooting is knowing where the trouble is so you can shoot it. ha. With all of that said, that gives you a lot to start with. Good luck. W/r/t xcode UI, again, learning by osmosis is best IMO. I'm sure there is a manual that explains every feature in detail if that's what you're looking for. Otherwise take a step back and take it all one small step at a time. In a week or two you will be much more familiar and in a month or two you will be amazed at how much progress you've made. I know it is overwhelming but if you just focus on small small steps and do that everyday, diligently, there is absolutely no way you will not make progress. 
Now I wonder, any example you can give of what you should be able to do? Before I start and it's too much. I have some programming experience too. Edit: I just saw the course thread, and people recommend knowing MVC and OOP and having used them :)
I went through 2 books and then started my third and realized that i wanted to take the course. So i did the course then went back to the book. While going through the books i made sure to watch videos and tutorials on anything that didnt make sense and i would not progress until i understood the concept
&gt; And if you mean the latter, that's because any comprehensive resource would be fuggin' enormous. But Microsoft did it for .NET. I find Apple documentation in general very lacking. Either it doesn't exist or it's out of date. 
&gt; But Microsoft did it for .NET. And what MS put together is both fuggin' enormous *and* incomplete.
Not a designer, but a fellow dev. Aside from the app icon (it's great), i can tell this was designed by a developer lol. It's okay though, it's hard to cross into another expertise in its own right.
Nope. It’s a separate app so you can use both side by side. 
Sweet, thanks!
Can confirm - I use both. 
Check out iTunes U - with Paul Hegarty - Developing Apps with iOS 10 - (the latest I believe) literally one of the best resources I found when I started back about a year ago. 
Multiple versions of XCode can coexist on a single machine. Be sure to rename the app in your Application folder to “Xcode 8.3.3” or something so it doesn’t get overwritten.
&gt; I have a question. What would you do with your product if user testing surfaces that your audience doesn't care about Rams ideals, or likes the opposite of minimal? Rule #2 is "Good design makes a product useful". Are you saying they prefer something which isn't useful?
Or create an Applications folder in your user folder and put it there. 
It's a little hard to tell what "RemObjects Elements" is from this, or their homepage. At first it looked like they're being cross-platform by writing everything as a (quad-)polyglot program, but I don't think that's it. It looks more like they've got compilers for Swift, C#, and Java, and also proxy interfaces for a bunch of common types. Then you write your program in any of these languages, and compile it for any platform. For abstract types like collections, you can use their special ("Sugar") names for things, and it builds with the native type everywhere. For cases where you want to access native functionality, you use the C preprocessor to implement it N different times. A couple things about this don't sit quite right with me. First, they talk about the value of [native](http://www.remobjects.com/products/native.aspx) development, and emphasize that this is for helping to create many native apps, not one universal app. That sounds great, but what about developers? They're replacing my native tools with their custom IDE, and the code is [6x as long because it's wrapped in #ifdefs](http://www.elementscompiler.com/images/fire/Fire-EditorSmarts-2.png). I thought that history (and C) taught us that using the preprocessor for targeting multiple platforms was a bad idea. The rest of the world figured that out by the time of Plan 9 (mid-1980's). This feels like a big step backward, on that front. Second, the standard libraries on each of these platforms accomplishes the same things, but in different ways. Each language/stdlib pair were built at the same time, for maximum interoperability. They have different memory models, and calling conventions, and error reporting, and concurrency models, and everything else. Even using Foundation types from Swift can be tricky, and that's about the closest non-native stdlib there is. It's *really* not made for C# or Java. I really have no idea how more sophisticated parts, like drawing, will work. Besides, as they discussed above, these platforms all have different UI conventions, so you can't just #ifdef the drawing API calls and end up with a good app on the other platform. It's an interesting idea and there seems to be some clever work here, but I'm not convinced this is a good way to do cross-platform development.
&gt; But Microsoft did it for .NET. Maybe, but if I had a dollar for every time I ran across something in MSDN that was technically true but completely useless, I could pay my rent with that. Microsoft gets a lot of credit for MSDN being so big, but there's huge sections which read like a freshman CS project: @function foo: Perform the foo action @param bar: The bar parameter to foo @returns baz: Returns baz on success It is technically documented, yes... &gt; I find Apple documentation in general very lacking. Either it doesn't exist or it's out of date. MSDN is that way, too. My favorites are the ones where the docs say function A is deprecated, and function B is not implemented yet. OK, Microsoft, then what am I supposed to use?
Can you post your code? This is rather vague.
You got the first two paragraphs right, thats exactly what it is. At face value Elements is "just" a compiler, that can compile to any of the supported platforms (.NET, Java, Cocoa, native) — just like C, says can compile for several platforms. Then there's (optional!) helper classes that provide common functionality in a way that works the same on all platforms *opposed to having to use each platform's APIs. (Those are there to basically address your "Second, ..." point) Having a million #fdefs and 6 times the code is certainly ONE way you could (ab)use this to write a cross-platform app. But the point of the article is, you dont end p doing that. with some few well-placed abstraction classes and.or #ifdefs, *a lot* of code can be shared without conditional defines. (as a side note, #ifdef in Elements doe snot use a C-like pre-processor, it is done by the compiler. in fact, in vNext we;'re gonna take that to the next level and eliminate the need for traditional #ifdef by making it possible to use those as part of your regular code flow. think (silly sample code): ``` if ThisFiileHasWindowsLineFeeds &amp;&amp; defined(COCOA) { ... do something cocoa specific } ```
What's the context? You say "Say I were distributing a static library without source" but as X... points out, you can't exactly do that right now, anyway, and expect it to work well for everyone. In practice, people who are shipping Swift APIs for proprietary code right now seem to be either writing in Obj-C and annotating the headers so it also works well in Swift, or just making the whole Swift interface open-source and keeping the proprietary parts on their server. 
Same, this guy has awesome videos: https://www.youtube.com/user/CodeWithChris/videos
you just need a base idea of MVC and OOP since the instructor actually goes over those things explicitly (not so much OOP I guess), but then OOP is pretty damn common so it's likely you already know enough as it is
This seems like the shortest, best-illustrated and 'correctest' write-up which I've found: https://littlebitesofcocoa.com/69-compression-resistance-content-hugging I would add that, in my experience, if a stack view doesn't 'just work' without adding additional constraints to the enclosed views, you will usually spend many frustrating hours fiddling with those additional constraints; and usually never finding the result you desire. In general, in such situations, I have found it easier to discard the stack view and constrain all the views manually.
Agreed, nested stack views have issues with intrinsic content size. Best to just set constraints one by one.
I typically display the following: Version 2.1.7 (build 2174). So the version is the public facing semantic version, the build is based off the public version, but incremented when beta builds distributed. So in this example the next minor release will be 2.2.0 (b 2200). 
You will need to save the URL to disk using what ever system you want, it is going to be a list that you will need to search or display, adding the URL to a dictionary with extra meta data would probably be a good idea. Then you can save the dictionary. Once thy have the dictionary make a function that converts the dictionary reference to a string then to a URL that is compatible with avplayer. So it would be quite a task, but I learned how to do all of that from YouTube and apple dev docs.
&gt; You say "Say I were distributing a static library without source" but as X... points out, you can't exactly do that right now, anyway, and expect it to work well for everyone. That's true and I only release open source anyway. It was meant more to constrain the limits of the answers. Say, if it _were_ a binary only library, how would I make the header available? &gt; ...or just making the whole Swift interface open-source This is kind why I thought that a protocol might be a great documentation tool. A protocol is simply an interface.
Yeah, yeah, I get that. One of the FOSS C projects I'm involved in uses Doxygen. In fact, I'm the one who maintains it, despite my hatred for it. So many people want to look at the Doxygen docs, whereas I guess we old folks prefer to look at headers. The purpose of my question was mainly to find out _other_ people's expectations in Swift, so I can kind of see where this is going: no one cares to browse source code any more. Maybe something like Jazzy is in my future, if it's compatible with Apple's Markup. 
Thanks. I've taken a look at Jazzy, thanks to your link. On the surface it looks a lot better than Doxygen (which I'm familiar enough with to despise), and more supported than AppleDoc, which seems to have stalled. 
It will indeed, as long as you remove it from parent and nothing else is referencing it. 
If the video is HLS, you will need to use AVAssetDownloadURLSession to save it to disk. https://developer.apple.com/documentation/avfoundation/avassetdownloadtask?language=objc
I think there is a push method on the navigationController variable
Ha! I watched a 6 minute video on NSLayoutConstraint and never looked back. It saves SO much development time, contrary to what many think.
Technically yes... you could compile it something else. Why would you want to do that though?
I've heard of [vapor](https://vapor.codes/), but haven't tried it yet.
It depends what part of 'web development' you are talking about. There are several server side frameworks like [Perfect](http://perfect.org/) and [Vapour](https://github.com/vapor/vapor) for doing back-end development in Swift At the moment, there's no real way of doing client side development in Swift. Keep an eye on [Webassembly](http://webassembly.org/) though...