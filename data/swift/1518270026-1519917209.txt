Ok, awesome well when/if Apple Music is supported I will 100% give the app another shot. I think the idea and even concept is awesome but the need for Apple Music support at least for me is a big one. :)
Haha yeah, I know. I'm not a fan of using that phrase either, but everyone seems to always instantly get on the same page and know what I'm talking about if I say exactly that. Appreciate your comments, please let me know if you have any suggestions for me after playing around with it. I know that the app is far from perfect at the moment, but I have a lot of stuff in the works right now, so stay tuned :)
The delegate model seems far superior than Notification Center for processing web requests
Hello! I'm posting every week a recap of hot articles, libraries and much more related to our beloved language Swift. Check it out and give me feedback please. Not only good comments, also bad comments are welcome so I'll be able to improve. Thank you everyone
Back when twitter and iOS were new I made an app like this that followed the hashtag #nowPlaying and when they tapped on a tweet it would search YouTube or iTunes sample and play that. Before Spotify haha. This is what we were going for the whole time. So yours is very fun to see work way better and I look forward to your updates! 
It would be nice with sharesheet integration 😃 or be able to detect if the user has a Spotify link in the clipboard 🙂 think Apollo for Reddit have this
Would certainly be cool to detect a Spotify link in the clipboard, will add this to my list of things I need to look into. Thanks! What do you mean exactly when you refer to a sharesheet integration? Something that you could share to other social media with links referring to the song on various music services?
haha, that sounds super cool. Did people use the service or was it too early for something like that? Btw., would you like to maybe beta test the new version? The beta will probably be send out on TestFlight sometime next week.
Oh it was popular enough that the idea was bought from me by a large company. So it was a win overall. And sure, if you want beta testers I'm always willing. 
http://imgur.com/O3zo1Th this thing 😃 just ideas tho
That sounds awesome mate. Thanks a lot! Could you maybe pm me your email? Will sign you up. 
I’m new to Swift so hopefully this will be somewhat helpful. 
Gotcha, thanks :b
Btw., if you could maybe also be interested in testing the next version, let me know :-) it's not available for test atm., but sometime next week
Can you explain why this is any better than KVO? I haven't had a need for this yet, but it's good to know which choice is best and why.
Actually, my KVO implementation didn’t work. Going to have another go at it though. From what I read however each is better than the other depending on the situation. KVO is used to observe specific properties in objects while nsnotification should be used for general purpose events - when a download is complete. That’s my understanding of it so far.
But from my understanding the delegate is only good for one to one communication or like a parent child relationship. In my case I need n objects listening to my websocket
Suggestion: don't assume that everyone knows enough about Instagram for your description to be useful. If it about sharing music with your friends, then say that here instead of forcing me to go to the App Store site.
In the delegate class, just keep an array of delegated objects instead of a single delegated object
Seems odd that they are only available through iTunes U - limited to the iPad or iPhone? Is this part of the "what's a computer?" conspiracy? ;)
Take a look at some of the reactive frameworks like RxSwift. You can create a service class that connects to your websocket backend and exposes Observables. In your service class you would setup the connection and monitor for web socket data, deserialize into objects and then push these objects as events into Observables. In your views/view controllers you would then subscribe to this observable and display the events/data as they come down the wire. Now up until there you pretty much have the same functionality as delegation or pub sub (Notification Center) but with Rx you get all kinds of neat features on top of this like throttling/debouncing events, replaying events, combining events, etc and that is really nice. 
Would recommend cleaning up the formatting a bit. I am on MacBook Safari and seeing double bullet points next to each other in some places.
I’ve never used it, and probably wouldn’t use it. There is so much prior art that it is hard for me to consider going to a new server-side language and ecosystem. 
That's a good point. Will be more descriptive from now on instead of using a phrase like the one in my title.
I'll then. thank you :)
Subclassing NSObject in Swift gets you Objective-C runtime flexibility but also Objective-C performance. Avoiding NSObject can improve performance if you don't need Objective-C's flexibility. Source: https://stackoverflow.com/questions/24057525/swift-native-base-class-or-nsobject/24067969#24067969 The reason the websites were not loading correcting in the UIWebView was because your constraints were incorrect for the UIWebView. If you updated your constraints to reset to suggested constraints, the sites would load in correctly. 
I find you lose a lot of the benefits of codable once you introduce computed properties with get/set defined since then you have to implement required init(from decoder: Decoder) instead of having it work automatically. I also found sometimes it expects JSON to be formatted differently than server will respond with. For example, it expected dates to be formatted as Double instead of ISO8601. Can still use Codable but you have to implement init(from decoder: Decoder in those cases.
That's one of the things I thought about it. It's interesting that they came up with it and had some big names behind it, but there's just so many mature choices out there already.
Dictionaries are Objects, but not all Objects are Dictionaries. (If you come from a JavaScript world, that is the case there, but not when using Swift.)
It’s only limited to iTunes U? I don’t even think I have iTunes U installed. I just open it up in iBooks. It’d make sense that they limit it to iBooks/iTunes U though since it’s iOS development in Swift. Wouldn’t make much sense to have it open to Windows or Linux. But I’m pretty sure you can just get it for iBooks so you could read them on your MacBook.
No, dictionaries are a type of object.
Yea I understand that I was just wondering what he meant by &gt;(If you come from a JavaScript world, that is the case there, but not when using Swift.)
In Javascript all objects are dictionaries.
An object is a group of values (instance variables) and behavior that acts on those values (methods) with an identity. Which instance variables and methods an object has is specified ahead of time by its class. A dictionary is an collection of keys and values, with the values indexed by the keys, and (in Swift) no identity beyond its contents. The number of key-value pairs in a dictionary is not set ahead of time, but their types are specified when the dictionary is created or declared.
There's some terms here which have multiple meanings depending on what direction you're approaching it from. In computer science an object can be any discrete value or block of values - including functions, data structures, variables, or so on. A narrower definition occurs in object-oriented programming. Here, objects are groups of related data and code that act on that data. They can be formal structures or loose groupings, such as a column in a relational database. Now it can get refined further when we talk about class-based object-oriented programming. In this the groups of data and code are wrapped up into a group called a "class". A set of values in memory is referred to as an "instance" In Swift a `Dictionary` is a collection of unique key-value pairs, codified in a structure. The `Dictionary` itself is a "class". It's called a `struct` in Swift because it has value semantics - it is always copied when transferred to another variable. Swift has several types of formal "classes", two of which are named `struct` and `class`. A Dictionary might hold a set of data which, if related, might be called an object in a broad sense. So you have an object (class-based object-oriented programming) holding values that are an object (object-oriented programming). Even if you wrote a set of values down on paper they might be an object. Say I record information about a person. They have a name, age, height, location, and so on. That set of information is an object of sorts. So you have have some context to understand what someone means by object. Do they mean a set of related values, do they mean a formal construct in a language, is it a row in a table, is it some other meaning?
No idea what *scratchers* is, but you’ll probably want to use a specific subclass of [UIGestureRecognizer](https://developer.apple.com/documentation/uikit/uigesturerecognizer).
https://www.reddit.com/user/jabernall24/comments/7wp6nd/loser_gif_lottery_loser_scratchers_discover_share/?st=JDI0D5KF&amp;sh=c6acf9e2 This is the effect I would want but instead of using a coin I would be using my finger on device for that effect
Something like this: struct CityStatus: Codable { let location: Location let current: Current } struct Location: Codable { let name:String let region:String let country:String let lat:Float let lon:Float let tz_id:String let localtime_epoch:Int let localtime:String } struct Current: Codable { let last_updated_epoch:Int let last_updated:String let temp_c:Float let temp_f:Float let is_day:Int let condition: Condition let wind_mph:Float let wind_kph:Float let wind_degree:Int let wind_dir:String let pressure_mb:Float let pressure_in:Float let precip_mm:Float let precip_in:Float let humidity:Int let cloud:Int let feelslike_c:Float let feelslike_f:Float let vis_km:Float let vis_miles:Float } struct Condition: Codable { let text:String let icon:String let code:Int } See how each level is represented by a new `struct`? Then when you want to include that new level you just add it as a property to the `struct`. Like in `Current` there is a property `condition` which has the type `Condition`.
I remember having seen a pod like that a few days ago. Check at cocoapods.org. On the other hand it's not that hard to do yourself. What you're looking for is: https://developer.apple.com/documentation/uikit/uiresponder/1621142-touchesbegan
No idea how maintained this is; I dug it up out of my archive of bookmarks: [ScratchCard](https://github.com/joehour/ScratchCard/blob/swift3.0/README.md)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [joehour/ScratchCard/.../**README.md** (swift3.0 → 4996260)](https://github.com/joehour/ScratchCard/blob/4996260ee3c4427245ebd36ca0de224f89eee225/README.md) ---- 
Thanks a lot for this really appreciate it!
It's not too difficult to convert the JSON to structs like this: * Pull out the JSON * Put each key:value on their own line by replacing commas with newlines * Convert each value into the appropriate type * Remove quotes around the keys and put a `let` in front of them * Pull out each level into its own struct and add `: Codable` to them. That's pretty much the entire process I did, took a few minutes in a good word processor program (BBEdit).
Isn't a dictionary more like a hashmap?
In the storyboard editor, in the ArticleCell section, you didn't connect your outlets to your labels, so at runtime, in dequeue... their value is nil. To fix this, control - drag your labels to the appropriate ArticleCell outlets.
Yeah, you just need to make your view controller the tableview's data source. Throw that in the `viewDidLoad`.
The confusion here, I think, is that both the concepts of objects and dictionaries are vast in computer science and can express and be expressed in many different ways. In js objects are implemented using dictionaries. JSON actually means JavaScript Object Notation. In swift instead objects are complex beasts and can be either structs or classes. In Swift dictionaries are implemented as structs and are objects.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/cv4jl3N.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20du27zrw) 
&gt; need to make your view controller the tableview's data source. i'm sorry i don't know what you mean by that i just started learning swift a little over a week ago so I'm not quite sure how to go about doing that...
Its already in there
**Hash table** In computing, a hash table (hash map) is a data structure which implements an associative array abstract data type, a structure that can map keys to values. A hash table uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ an imperfect hash function, which might cause hash collisions where the hash function generates the same index for more than one key. Such collisions must be accommodated in some way. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Ah ok, no problem :) Basically for a UITableView to be useful, it needs to have a datasource and a delegate. A datasource provides data for the tableview (the methods you have implemented such as `cellForRow`, `numberOfSections`) and the delegate generally handles actions. In most cases, a view controller is a tableview's datasource and delegate. To make your view controller do this, it must conform to the `UITableViewDataSource` and `UITableViewDelegate` protocols. You've done this already with your view controller, but now you need to set the tableview's datasource and delegate properties to your view controller so the tableview knows what its datasource and delegate is. You would do this by assigning it with `tableview.dataSource = self` in the view controller, and this is typically done in the `viewDidLoad` part of the lifecycle. Hope this helped :)
No it isn't. https://github.com/jasonyunjoonpark/techfetcher/blob/master/TechFetch/TechFetch/ViewController.swift
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jasonyunjoonpark/techfetcher/.../**ViewController.swift** (master → 9963454)](https://github.com/jasonyunjoonpark/techfetcher/blob/996345479e9123e1442b740de707df20d68fc9ea/TechFetch/TechFetch/ViewController.swift) ---- 
hey thanks for the response but i did that already and i stated in my post it works but im wondering why i have the constraint error and how to fix that?
I just downloaded your project and checked it out. You need to set your view controller as the tableview's delegate and datasource. The constraint issue is a red herring. To set the view controller as the delegate, you can either type this code in the viewDidLoad... tableview.delegate = self tableview.datasource = self or do this: 1.) Press command+1 to show the project navigator 2.) Select your Main.storyboard 3.) Expand the Document Outline (left pane in the interface builder window) and select your tableView (no keyboard shortcut for this) 4.) control+drag from the tableView to the view controller button (the yellow circle with a white square in it, that is above the view controller in the interface builder window) 5.) select 'datasource' from the menu that drops down. 6.) do the same to select 'delegate' from the menu that drops down The second way is probably how your first project was set up. Both do the same thing. Now - the constraints. Press command+5 to show the issue navigator. This shows your constraint issues.
Glad I could help!
You are right. I downvoted myself. I made my mistake because I was trying to read the storyboard as an XML file on the github website. Thanks for the correction.
Haha I remember this problem baffling me for hours when I just started iOS
hey could you help me out one last time please? i did everything you told me to do and it fixed the problem but when I try to change the text of the title label it changes the text of the imgView instead. I have no idea how that works.... i made a new repository because i dont really know how to use github.. It's on line 26 of ViewController.swift. I didnt have to unwrap textLabel in the original working version. Not sure why they require me to unwrap it in this new version.. halp https://github.com/jasonyunjoonpark/techfetcher2
I think you can get this one with a hint. Look at your articleCell.swift file. What's the name of the variable you have there? Now take a look at what you are referencing in your view controller. There's a difference.
oh hahaha easy mistake. I've been sitting at my computer all day with this simple project because swift is so much fun. I think it's a sign that i'm tired if i couldn't catch that :p thanks again for your help really appreciate it!
You are quite welcome. Good luck :)
u/tippr $1
Do I get mobi format
u/ToadieDevo, you've received `0.00082898 BCH ($1 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
Yes - The books in this bundle are available in PDF, ePUB, and MOBI
Thanks!
I was under the impression that Sketch doesn't import anything into Xcode. I thought that Sketch was just for mocking up the app so you know what it'll look like before you start coding anything. https://www.sketchapp.com/docs/exporting/code-export/ Looks like they have HTML exports but I don't know how that will help with Xcode. I don't know how you tell Sketch that something is a button vs pic vs label or what's supposed to happen if you pressure touch what the constraints are or those kinds of things that Xcode does. I always thought it was like a layout tool that you use in meetings so you can visualize your design while discussing it with others.
I doubt it’s possible without the accessibility API.
After further research it’s true that there’s no way to export the designs to xCode. You COULD however save the designs as an image and import the image to assets folder in xCode. For example I design a button on Sketch, save JUST the button design from the artwork if there’s other objects there too, upload the button design to xcode assets catalog, then just create a new uibutton and use that image as the button image in attributes inspector. Then repeat for any other stuff on your storyboard. Not what I was expecting but I guess that’s What I have to work with lol
I don't use Sketch, but hear about it all the time. What advantage do you get for the design of something like a button? In other words, how is Sketch any better for making the button than Gimp or any other drawing software? I get that layout is important, but I've never had a problem just writing things in code and skipping the whole Sketch thing.
Ok so I don’t leak the first instance on reassignment right? ARC just dereferences it? (Assuming there are no other pointers to it)
There is no leak. 
It’s even worse on High Sierra as iTunes forcibly opens if it’s installed
I found this but I don't use it. so you can try with demo I think. http://www.replia.io
🙏🏽 
Yep. You might even call your variable pointing to your memory a reference ;)
&gt;It’s more programmer’s preference I feel like it would be bad practice to literally put the statements back to back - to me it indicates a lack of understanding of reference semantics. I think it would be fine if you had e.g. a reset method that nilled followed by calling a setter
Cheers!
I feel like the biggest challenge is definitely libraries. It's already hard enough finding libraries that work on Linux; Windows is only going to be worse. 
Normally any settings you want to allow the user to control would be saved in NSUserDefaults. You could write your main ViewController to either poll the default on the action of the user, so it will always get the latest value, meaning it can be changes at any time. If the ViewController needs to be updated immediately you could add an observer as described here: https://stackoverflow.com/questions/1141388/cocoa-notification-on-nsuserdefaults-value-change Or fire an NSNotification for the ViewController to receive. 
How to remove duplicate characters from string ? updated again Thanks for all your support
Thanks! I was using UserDefaults already but hadn't come across the observer. Works Perfectly!
Isn’t that on us as developers to make the libraries we need that don’t exist yet? The power is in our hands here to make that happen
LOL yeah sorry I have a family to take care of. 
Some guy said that everyone can code is also on iTunes U and if that’s the case then the files are probably available there I didn’t use any tutorial files. I would just write whatever I needed, or whatever I thought I needed. For example: when working with UIImageView the book tells you to use these images they provide. I either a) used my own b) just didn’t use any images at all or c) used URLSession to download an image since doing that is great practice for iOS development So try iTunes U for the files and if you can’t find them there then just google for them and see what pops up. I don’t think any source code or resources are necessary tbh but if you can’t find anything then just lemme know what section it is and I can whip something up for ya
Yeah, but at the same time, few things are more frustrating than finding all the libraries you'll need for your next project, then you realize almost none of them work on your platform. 
just why?
Yes there is. Check out the apple documentation for more details. 
There was a compare of Swift and Kotlin then a compare of Swift and C#. Seems like if they really are that alike, we'd just use the native language. http://pietschsoft.com/post/2014/06/07/Basic-Comparison-of-C-and-Apple-Swift-Programming-Language-Syntax http://nilhcem.com/swift-is-like-kotlin/ BTW, didn't MS buy Xamarin and didn't they also have some C# to ObjC thing a number of years ago? TBH, I would see it like Server Side Swift, it's interesting but the platform is so damn mature at this point it'll be hard as hell to get a major change. So much code already written. Apple was able to move people from ObjC to Swift in pretty good numbers, but I doubt that MS will do that with C# devs, they've been around for a long time and have no reason to budge.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/1FfalDj.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20du3fwz1) 
Do you mind posting the project to github? I think that's the easiest way to fix this.
The similarity is a bit more superficial than it seems at first glance. Swift and Kotlin are, however, a lot closer to each other than they are to C#. I don't think Microsoft had a C# to Objective-C translator, but they do have their own [Objective-C runtime and a partial port of UIKit.](https://github.com/Microsoft/WinObjC/)
When I manually made my IBAction and tried to control-drag the button to it, it didn't allow me to connect. All I saw was the blue line disappear before I let go. I figured it out but don't quite understand. I was trying to create an IBAction under and extension ViewController (which was not working) but rather than doing that I just dragged it right under the regular class ViewController and it worked
Always paper first. Lots and lots of very quick concept designs / notes. I take the best ideas into either photoshop / illustrator / sketch and flesh them out. illustrator with the astutegraphics plugin bundle is unmatched and can make for extremely quick illustrations. Sketch if I'm purely focused on UI. For animation, I'll take those sketch and illustrator designs straight into Kite Compositor.
Make sure you set the view controller in storyboard to the view controller class that you want to control drag to. Check the element inspector.
They are the same 
I am going to try running Swift using the Windows 10 Linux subsystem... how many people have tried that? 
Prologue to Swift* lol phone autocorrect
that is so strange. I tried that multiple times before you told me and it didnt work. But when I tried it this time it worked... i didnt change anything weird...
In future you should write a script and read from it. These aren't live talks; there's no need to stammer. Also, Objective-C is ~34 years old now. It's actually about a year older than C++.
Well it Might work... just an experiment... managed to do sudo apt-get install clang and it worked... Downloaded the ubuntu swift package.... but my brain is fried ... my guess is that it should work fine for command line apps and even for XServer apps with some clever hacks... QT will be next... in about five years.... 
But Yes... It should work if you know how to deal with Linux stuff.... 
That's nice. I was just thinking to myself how easy it would be to automate this kind of thing.
You’re trying to match a struct with enum syntax. However, you can implement a pattern matching operator, which looks like this: func ~=(pattern: SomeType, value: TypeToMatch) { // implementation } And then you can switch on it quite easily. Here’s an [SO thread](https://stackoverflow.com/a/38372255) with more info. 
Thanks so much for your help. Is there anyway I can solve this in the body without rewriting the function. The struct is from Alamofire.
Of course. You’d want the first argument in the above function to be an enum with both `case success` and `case failure(Error)` — i.e. `Result&lt;T&gt;`. Then write an extension for that struct from Alamofire implementing the function. 
Is that the easiest way? I'm just bit of a noob. The only reason I don't wanna change the function is because it's part of an SDK. And creating an extension for Alamofire is a bit over my head..
Oh, right, sorry. That’s the easiest way to do it, but there’s no point in doing it if you don’t understand it. Just to be clear, did you write write the function shown in the first image? If you didn’t, you should probably contact the devs behind the SDK to report a bug. If you did write it, consider changing it to *not* switch on that value, but checking if there’s an error or a response and then continuing on as neccessary. E.g. : if response.error != nil { print(“oopsie”) }
Pro tip: don’t ask to ask, just ask.
Contact me on twitter @mdevsa. Always open to some questions. 
Just downloaded and test out your sample app, seems like you trying to add IBOutlet to an extension. The short answer to your question is: You can't do that! Extension can only have computed properties, however IBOutlet is a stored properties, that's why xcode is preventing you from doing so. The correct way to do this is to put your IBOutlet in your concrete class. (same like the outlet for your tableView). Hope clear your confusion!
This error is identified by a very old constant `kCFURLErrorCannotConnectToHost = -1004`, you can find it in the [CFNetwork documentation](https://developer.apple.com/documentation/cfnetwork/cfnetworkerrors). As you can see from the name, it simply means the connection failed. The reality is that this is normal and TCP connections can fail from time to time, and your app should be prepared to deal with that. If the request is not user-initiated, then maybe you can simply silently retry. If it is, then you can show an error to the user and ask if they want to try again.
How can I check for errors like these? 
You need to make use of the Alamofire error handling routines, which honestly is what turns me off about Alamofire, because I think this library complicates network requests way too much. I have found [this tutorial](https://grokswift.com/rest-with-alamofire-swiftyjson/) which explains how to use the method chaining in Alamofire to handle errors.
Did you start using something else than Alamofire if it was turn off for you? 
I'm open to ideas but isn't Alamofire using NSURL underneath as well? Isn't this more like Swift related rather then Alamofire? Would love to know how exactly the request to host fails.
Well, currently my preferred method is to simply write a wrapper class on top of `URLSession`, which is very capable. Especially now that the Swift `Codable` protocol exists, I can’t see a reason to use a behemoth of a library like Alamofire for RESTful APIs. You can even have some fun using some Enums such as: enum ApiResponse { case success(Data) case error(Error) } Use that as the parameter of all network method callbacks, and you have a pretty decent and strongly-typed connectivity library for a tenth of the cost.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [henrikra/swift-movies/.../**HttpAgent.swift** (master → ef87393)](https://github.com/henrikra/swift-movies/blob/ef87393094f0eb6f4cb47a839210dc044655903e/SwiftMovies/Helpers/HttpAgent.swift) ---- 
that is a SWEET link
Have you tried not using Alamofire?
Have you thought about using Instruments? 
I have (I'm not terribly familiar with it), but none of the tools struck me as doing what I wanted... I always thought of Instruments being more of a dynamic analyser of the running application instead of a static analyser which I believe a call graph would fall under.
Can’t call graphs be *both* static and dynamic? A static call graph would just record every possible dynamic state — i.e. UI testing. For a dynamic call graph, you can inspect the execution of a program fairly easily with the time profiler preset. You can even hide system libraries. There’s a quick rundown of Instruments in one of Stanford’s CS193P (iOS development) videos which is fairly informative, but I can’t find it right now. Check out the docs or WWDC videos. 
And if anybody goes down this route, you might want to use [RobRix’s Result!](https://github.com/antitypical/Result) You get functions like map/flatMap/recover, and then you’ll be ready to use [BrightFutures](https://github.com/Thomvis/BrightFutures) and be a composing wizard! 
Maybe a UML diagram would be useful. I found [this little tool](https://github.com/yoshimkd/swift-auto-diagram) in a quick google search, maybe it could help. Also, in case you don’t already use it, [Jazzy](https://github.com/sstadelman/jazzy-uml) is pretty amazing for documentation. Good luck :)
i was able to call the database using the c module, but when i use the Swift wrapper then it gives me that problem. Do you think this wrapper need to be updated ? https://github.com/h1257977/SwiftOracle.git
Do you use an other library for HTTP requests?
Protip, don't use IB. Take a few hours how to do it in code, throw away storyboards, and you'll be happier. (And easier to hire)
Any advice/project tutorials you know of that teaches how to make simple apps using IB. I'm a novice so it's pretty challenging for me to programmatically create interfaces. Thanks for the input
No one?
Any update? Curious about the solution if you figured it out. 
Not sure if this helps or gets you in the right direction but, to add an action to a button: (Assuming you build the button programmatically) `[buttonName].addTarget(self, #selector(selectorName), for: .touchUpInside)`
It was a dangling connection I had to delete. I just couldn’t find it because the error I got was during runtime and all of the assembly errors (8 memory leaks) getting thrown my way told me nothing about where to look. /u/QuantumHoneybees pointed me in the right direction. https://m.imgur.com/OawFvXU
Maybe you can also look on delegation pattern, it's way more clean way of writing code.
No. But even with Alamofire I'm having a hard time to replicate this error as it doesn't happen every time. So it's difficult to see what may or may not fixed it.
Thanks, this actually lead me to the solution which was to simply call `self.becomeFirstResponder()` in the set.
Meanwhile I cant even get a playground to reliably display a view with a single button.... Most of the time the view is just black. Sometimes the button shows up... No changes, just re running the playground again and again
:) Have you tried to reset the assistant editor? I've also had some problems with the editor but resetting it usually helps. Try to select "View -&gt; Assistant Editor -&gt; Reset Editor" 
Ray’s Vapor video series was quite helpful.
There’s an updated series for Vapor 3 coming out very soon
Sometimes when the happens the good ole’ quit Xcode and ~~quit your job~~ restart does the trick. 
Didnt know about that, will try when im back at the pc - thx
RAY RAY RAY RAY
Testing in Unity3D feelings... This is l33t for sure!!
Aaaand it’s out!
Hi jaspar1! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7xblz7/how_can_i_create_an_app_that_updates_live_data/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
So I’m about to board a flight but I would look into using a library such as CocoaAsyncSocket to do the socket listening. Just start by seeing if you can print out data to the console using that library and a dummy view controller. Set it up with cocoa pods. 
Apple really need to officially support hot reload or some other way of making changes at development time with reloading simulator every time. 
Hmm looks like it is possible to check cache with `URLCache.shared.cachedResponse`. I implemented it like this now in my movie app HttpAgent: https://github.com/henrikra/swift-movies/commit/00eb7208274024f663c918282302ad7f1508cd3e Image animation: https://github.com/henrikra/swift-movies/commit/e89b49cfcc8ae841a5589dba515a17c472652cdc Please tell me if you have better suggestion for this :) 
What exactly are you asking? do you want to learn basic math? do you want us to write your code? You haven't asked any specific question.
Not sure what you're building but that doesn't seem like a good idea. Think about an async, recursive functional method that takes a closure, gets input from the user via alert or some other modal presentation, pulls the next item in the array, performs that closure with the item as a parameter and calls itself again.
You would use CoreBluetooth or EAAssesoryManager. https://developer.apple.com/documentation/externalaccessory/eaaccessorymanager https://developer.apple.com/documentation/corebluetooth?language=occ Depending on the bluetooth for the device in question. 
What do you mean the "old way"? Just don't conform to the protocol. NSJSONSerialization is still available. 
Did you look at the link?
OK, first off, I realised I could literally just have the continue button call a method which dequeues an action, and passes it to a handler method, rather than messing with DispatchQueues and Semaphors and whatever. Also, I realise I didn’t give anywhere *near* enough info in my initial post. Basically, I’m making an RPG game, where the player selects actions, the engine runs the actions, and the user interface updates. Except I don’t want the user interface to update all at once - I want it to, bit-by-bit, reveal the changes made to the user, when the player hits a continue button. e.g. both players select attacks, the engine resolves both their turns, subtracting HP, etc. I want to queue up actions that will reveal the attack used, play the relevant animation, and updates the displayed as necessary for one attack, then waits again for the user to press the continue button to run the next lot of UI updating actions.
I did. "Can you help me?" is not a specific question. CollectionView is also not a Swift topic. You want to have a different cell size for iPads, then you need to set it to half the width of the screen minus spacing. Apple does not recommend looking at the device type anymore, you should change your math based on the horizontal size class instead.
import Darwin let e = Darwin.M_E
That was a bad article
Not exactly an article, mostly a link to a gist. Also this doesn't look very readable to me. I would use a custom struct to represent the titles with a dictionary. Have a `skip: [Int]` parameters in the init to indicate which indices are missing and offset the titles based on that.
&gt; UPDATE Okay, I hate this.. seems I always figure it just after I post the question Forming the question to post helps you solve it. I also agree that NotificationCenter is safest.
Some of the early benchmarks of Vapor 3 (which is still in beta so liable to change) are quite amazing. Better than Go amazing. So the “old big boys” are going to be blown out of the water!
Don’t use the idiom at all. Just the size class. This is not a swift question, this is an iOS question. 
Yeah Go’s coroutines help a lot with their speed but Vapor’s async work has closed the gap. Unofficially for a benchmark Vapor 3 was getting 131k RPS versus Go’s Gin at 99k (and Node down at 60k). Obviously real world is entirely different and affected by DBs and APIs but the non-blocking architecture should minimise it. Hopefully some better (and reproducible) results will be posted once Vapor 3 hits release
AWS Kinesis will accomplish this as well https://aws.amazon.com/kinesis/data-firehose/
That seems like odd behavior. Caching is just a performance optimization with unpredictable behavior. Why give the user different results based upon something unpredictable?
I realize this doesn’t totally answer the question but if you use the networking tool in instruments it’ll tell you. That might at least get you the right search term to go google 
Sorry for the shitty vid. I don't have time to edit properly.
Great! Let us know it turns out :) 
That would be great! I also think there is a lot of potential in the playgrounds. We just have to design our code so that we can use playground to test/develop parts of the app UI:s. I think that will also help unit testing to have the code structured like that.
Lol. Where do you work? 
Dallas
where in the video? :D
neo olivella's When he leaves for a break, there's a huge neon sign that says neo olivella's
Ohhhhh 😂
Diablo ftw xD
Thank you
somehow seems like a great way of debugging... needs to be tried.
I can’t see it anymore! Had a question, can't swift be used as a system programming language as well? Why? 
What's the "translating code"? Is that converting from one language to another with all those strings? What's the app all about? You probably can't say much.
To jump onto this train; you state your problem in this comment: you didn't have a clue what angle to take. You talk a bit about this, a bit about that, show some completely irrelevant code which has nothing to do with the article. Try to think about what you're going to write before writing. Write down some subjects, for example you can write down solutions to difficult programs as you program them and then do an article on that. Good luck :)
8 to 6:30, that’s some terrible hours
Is the viewcontroller is the storyboard set up to be your UIViewcontroller subclass that you are trying to put the IBOutlet in?
startup life bra
I believe so yes, https://imgur.com/a/m3Nbk
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/wvqiqu4.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20du8flpr) 
Put IBOutlet outside ViewDidLoad method.
That's a limitation of the API you use, not much you can do about that from the client side. You can try to find a resource where you are allowed more fetches or even a socket for a continuous stream of data. 
This. Am i missing something?
He tried all over the place. He didn’t subclass his controller. 
No, you can only use Xcode on a Mac. I would look into setting up a hackintosh if you don't own a Mac. https://www.tonymacx86.com/ Is a great place to start 
That viewController.swift file you have on the left side of the screen (the project navigator) is called a subclass (not sure how much you know. It is a subclass of the class UIViewController, which is the default class describing a screen or viewController. You'll most likely need a unique subclass for each unique view controller that you have in your app. I see 10 or so in your gif. viewController.swift (what your project started with) is just a simple boilerplate subclass that most project types start with in Xcode. You'll want to rename it something more appropriate -- like launchViewController, or firstViewController. So, go to *file* up top, and add some new Cocoa Touch objects, name each with a unique name, scheduleViewController, upcomingEventsViewController, etc... depending on what each of those controllers do. Make sure that they're a subclass of UIViewController. Then in your storyboard file with all your screens, click on each view controller and on the right side of the screen, select the first tab on the top. You'll want to write in the appropriate class name to match your views to their classes. If you've done all that, and you're clicking on a view on the left and have the correct corresponding class open on the right, you'll be able to drag an IBOutlet like you were originally trying to do.
ha-ha, love it 
Obviously there’s ways around it like a VM or hackintosh. You’re going to have the best experience just picking up a Mac. Grab a cheap Mac mini new or refurbished from Apple is always a good place to start. A bit more risky but there’s always used Macs for sale out there too. 
:D not sure what that means but thanks! :)
[reference](https://m.youtube.com/watch?v=0nel4qVTOgg) 
bra is a piece of clothing used to hold boobies still. If you meant to say the slang version of "Bro", then you should have put an H at the end. Brah
I’m willing to try, but I’ve asked people in the Hackintosh Discord if my specs were compatible and they said that it was unlikely. They said I should have an Nvidia graphics card, and I have Intel Graphics.
is that exactly what I put in my case
nah bra
Use `NumberFormatter`
&gt; String(format: “%.2f”, args: unitPrice+saleTax2) https://imgur.com/a/XCekD sry im too new
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/n6LHaa9.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20du91j7z) 
Basically anything after HD2000 works for intel. Just minor graphics bugs.
Hmmm I’m. Not in front my my Mac but what we are doing is initialising a string so you meet the replace the line above string part with this part also if you just type String( you should get auto complete and find the one with format: CVArgs: I think you have to delete the word args lol
Swift Algorithms and Data Structures is a short one but very good.
You need to setup the constraints on views which are within a common view structure. Adding the view after activating the constraints is a programmer error: &gt; If you try to activate a constraint whose items have no common ancestor, an exception is thrown
Obviously I'd recommend [the many books I've written](https://www.hackingwithswift.com/store), but I'm somewhat biased. You can read the first one for free [at this link](https://www.hackingwithswift.com/read) – it teaches Swift and iOS from scratch.
*More* Udemy spam? If only we had some sort of moderators who could delete these things as they appear.
This one https://shop.waynewbishop.com/products/swift-algorithms-3rd-edition
First of all if you are interested in a pure swift manual, apple wrote one that is very good. https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html But can you be more specific? 
I don't think this exists. Perhaps you can start such a project. Have a look at pandoc.org for inspiration.
Thank you for that link! I know some basics from learning some of it last year but I like to read books over online. But I’m after a book that will give basic info so if I get stuck I can go back to it. 
I fixed that already i believe
https://www.google.com/amp/s/9to5mac.com/2017/12/08/app-store-template-applications/amp/
Maybe you could implement the WYSIWYG inside a WKWebView and then use JavaScript and UserContentController to pass the source html from the editor to the app?
Is this for iOS or Mac? If you're looking for OSS iOS libraries, check out [YYText](https://github.com/ibireme/YYText). I've not used it, but I starred it a while back. It seems very robust. It is Objective-C, but you could use it from Swift. There's also [RichEditorView](https://github.com/cjwirth/RichEditorView), which is written in Swift. You can also use WKWebView + a JavaScript WYSIWYG editor. That could output HTML, Markdown, etc. depending on the editor. Going fully native, it wouldn't be too hard to wire up a [UI|NS]TextView and a handful of buttons to apply styles to the current selection. The harder part would be taking the attributed string from the text view and convert it into your desired format (though there are built-in serializers for HTML and RTF). 
Apple’s every own? 
So what you've done up until now is HTTP requests where a *client* (in this case your iOS App) requests data from a specific endpoint on a *server*. This way the client is making the decision when it needs up to date information. You're saying that you want "live" data, and this is where it gets tricky. Now instead of the client making requests to a certain endpoint, the *client* now needs to subscribe to events from a broadcaster *(server)*. This type of data transfer is called [PubSub](https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern). There are many protocols (ZMTP, XMPP, MQTT, Websockets to name a few) you can use to establish a publish subscribe pattern between a bunch of clients and a server. In the end what it all boils down to is a glorified TCP socket. Now I don't know the scope of your iOS application, if it's just meant for you to train to become a better iOS developer or if it's something you want to release on the AppStore. But in case it's the latter, I would recommend you to setup up your own server instance. 
[https://store.raywenderlich.com/products/swift-apprentice]( Swift Apprentice) is very good
Want to second this. I've read them partway, and I know a person who's completed Hacking with Swift. These are pretty fantastic! 
I just read “Pro Swift” by Paul Hudson. I liked it. 
Depending on your needs: I am writing [Swift in Depth](https://www.manning.com/books/swift-in-depth) aimed at the advanced beginner/ intermediate level and will be available in print this summer. 
No. *Xcode
You really should not be using floats for this. Instead, use integer amount of cents. Floats are not precise.
Thank you – I’m glad to hear you liked it!
Or better yet use the Decimal type or use a library specifically for dealing with currencies .
Bought your interview prep book. Really like it, but have a lonnnng ways to go. 
Awesome! Everyone has things they still need to learn, and that's OK – at least you're recognizing that and trying to focus your attention somewhere.
This! That’s basically how I started. Got an app idea and “hacked” it to act the way I want to. On the way I looked at tutorials for different problems. During this period I realized how bad my code is. So I learned a lot through making a lot of mistakes with my first app approach. I abandoned it and am working on another app right now which I enjoy doing and avoiding all the mistakes from the first try... just to make new mistakes and learn from those :D
Intel graphics work just fine
Beat me to it. Figure out what you want to create, then go research how to do that. Learning generic projects only goes so far
&gt;Restofire is a Protocol Oriented Network Abstraction Layer written on top of Alamofire to use services in a declarative way a framework written on top of a framework? all when URLSession is really fine as it is? this wreaks of overkill in my opinion.
AVAssetWriter? What are you using to get the video and live filter?
This is well put together, nice summarized list. Thank you for sharing!
The author here, big thanks! 
Its actually very light weight, only giving a structure to your API through Protocols. It saves you from the switch cases to avoid vertical growing of classes as you will find generally in other libraries like Moya.
Yeah you should be able to use AVAssetWriter, there’s and example called rosyWriter swift that takes video and passes it through an optional filter of many types including OpenGL and then writes it to disk
Geez dude, relax. It's his native language. At least he's confident enough to write an article in it!
If it's his native language (as you said), then there's no excuse. I spelled out how it works. Why do you think I'm not relaxed?
Whatever? Hah. You typed the exact opposite of what you were trying to say. Why do you think I'm angry? If you can't create sentences that say what you mean, focus on getting your own basics right first.
Go watch some WWDC videos with areas you are or aren’t interested in. I’ve gotten into a lot of the lower level frameworks by getting ideas from WWDC. They don’t even have to be new ones, the old ones are perfectly fine. From there you should have enough technical jargon to find relevant information online. 
UITableView is a scroll view. You need to read up on how scroll views work. You’re expecting the table view’s frame and contentSize to be the same, which is not true. You should be making your bottommost view, the table view’s footer.
if the content size were to change could the frame size not be updated as well? Then the parent view (the view in the ViewContoller) would be updated hence and auto layout update?
Yes, you could set the table view's frame to the same height as the content view. However, it would be wasteful as you would render the table view's cell recycling pointless. Additionally, what you're doing requires more code, more constraints, more CPU and more RAM, than if you set the table view's footer view to the bottommost view in your current setup.
I forgot to say, it's also a bad idea to have a scroll view within a scroll view (unless they scroll in different directions, e.g. one horizontal and one vertical).
PDF vector files will work for any screen resolutions. Otherwise you’ll have to export 3 files per asset: 1x, 2x, 3x. 
A lot of universities have macs for rent or a bunch in their computer rooms. Maybe you can use their computers.
Good to know thank you !
&gt; I forgot to say, it's also a bad idea to have a scroll view within a scroll view Works surprisingly well out of the box though. 
It’s upside down because the back side kinda messed up
Have you checked out [GPUImage](https://github.com/BradLarson/GPUImage) ?
I want it!
You can use your current locale, or if this is for an IAP SKProduct: let numberFormatter = NumberFormatter() numberFormatter.numberStyle = .currency numberFormatter.locale = product.priceLocale numberFormatter.string(from: product.price) 
Still looks good!
You can ignore him. He does this on every post. 
great list! I was thinking to get Design + Code as they promise to help both with iOS development and design. Looks like a very solid resource. Does someone try it or paid $50 for it? 
I'm not affiliated/related with any of these companies/resources (wish I was) so my opinion is not biased: Dropping 50$ on something which will completely change your life from a career perspective is a no-brainer. as far I know most of the time if you made a purchase and emailed a refund with an explanation, they will give you the refund. 
&gt; something which will completely change your life from a career perspective do you think, the employee will care that I learned this book? Is it popular for hiring people?
Does the employee card? Not really, you learn for yourself really. The employee wants to see past projects, these books/videos help you get to the point where you can start building apps without "hand-holding"
Accidentally capitalized can? I committed a felony
I’m honestly the most interested in SpriteKit at the moment. Honestly... I feel like it comes rather easy to me, but there are very, very few Swift 4 SpriteKit resources that I have found. Would I get value out of Swift 3 resources? Or do you know of any valuable Swift 4 SpriteKit resources?
Its really nice..👍🏻 
AppCoda also has a free 150-page eBook for learn the basics of Swift 4 
You should be fine with swift 3 resources. Part of learning to develop will be understanding a teaching resource and adapting it to your needs. As long as you're focusing on the concepts and not copy pasting code, it shouldn't be that much more difficult
Thank you!
If you want the STL files send me a pm!
Thank you!
How about just splitting the screen in half? Meaning, display the screen how it’s displayed on VR apps. That way we don’t need 2 cameras, just 1, and the same content is displayed on both left/right side of the screen. Like that we are able to use the VR headset 
So this is OK if it creates these build artifacts, weighing 5-10 times more than the app itself? Thanks.
Yes. That’s expected if you really think about it: as a programmer you just write text files. But the compiler has to analyze them for usage, change it into an optimized form for quick look-up, analysis, and auto-complete functionality, and probably do a dozen other things. Then it has to spit out the executable it compiled to, possibly in multiple architectures, generate headers, etc. If anybody else would like to chime in with reasons why artefacts are so large I would love to learn more as well. 
"Software development experience: - Less than a year - 1 to 2 years - 2 to 3 years - 3 to 4 years - 4 to 5 years - 5 years or more" Hilarious. Are you expecting only newbies, or do you think people stop learning after 5 years?
Thats a biiig raft
Honestly I know very little about simulator resources, or playground resources.. but since playground runs inside xcode there must be some difference :) I hope someone can give a better answer :)
You have a few typos in the article: "since if your already willing" corrected: "since if you're already willing" "there’s libel to be" corrected: "there’s liable to be" "offer the most flexibility while remove all of repetive code" corrected: "offer the most flexibility while removing all of repetive code"
"offer the most flexibility while removing all of **the** repeti**ti**ve code"
Hah, nice catch. This is why multiple proofreaders is best.
I like you mentioning this mistakes neatly and not down voting or leaving rude comments!
this begs a question. 1/ Why would I want to use swift/vapor over golang? 2/ Go complies extremely fast, and correct me on this if this isnt true, swift does compile fast? 3/ Gin isn't the fastest, httprouter,go-chi is a bit faster. I am not looking for speed, I am looking for expressiveness in code. 4/ Tooling is a core issue, XCode only? I happen to use vscode with go tools installed and it *has* VIM mode that xcode sorely lacks. I really like swift, but above are some hurdles. I would really appreciate if you would take time off your day and answer some or all these questions. Warmly, ILoveFreakingCake 
Maybe if you add them up... 😂
There’s no point in that, why be rude? We all make mistakes and it’s better to help correct them than be rude. 
Trying to break into a swift job as well. Glad it worked out for you. Could you pm your resume that got you your first swift job?
Thank you! Updates made 
Glad to help!
Ya sorry just saw this. I guess you could call it right place at the right time. But this company called Rego was badly in need of a one Jr and one senior iOS developer to make the iOS app of thier product. I sent my resume through indeed. After a phone interview. They invited me for an in person interview. At the time of the interview I was really into AR kit and word processing. So I sorta “dazzled” them with an at little demonstration of ARKit and AppleVision. Also had a walk through of a small app I released on the iTunes Store called “Know your note”. I made the app for the resume and I also thought it was a cool way to learn music notes. Working for them is wierd because we havnt found a senior yet, so it’s just been be building out an app targeted for a million people. Been rough lol 
I remember a few times where I have attempted to follow Swift 3 resources using Swift 4, and I was encountering a few errors. I’m not to the level where I can figure out ways around this, because my knowledge of Swift 4 compared to Swift 3 isn’t completely developed yet. I guess that’s something I will need to work on.
Thank you for the explanation. As a web developer primarily, i am familiar with all the hustle of bundling and building stuff, but that here was a little extra for my sight to stay unnoticed. 
The tutorials that I'm doing now I got from Udemy and they aren't bad. I didn't pay a lot and theres some good info in there. I've finished the RayW iOS 11 Swift 4 one and 60% done with Angela Yu's Swift 4 bootcamp. Some of these overlap, you expect that, but they all covered GitHub, Core Data, Realm, Firebase, Animation, some advanced Xcode stuff. Got the AR/AI/ML stuff coming up next... Overall, I think it'll give me what I need. I'm working on doing some group projects that are designed to try and pull things together and showcase the work. We'll probably be doing a "roast my code" kinda thing on this forum before we finish. You're welcome to join in, I'm finishing up the specs and we should be under way very soon.
Hey saurabhred, i don't have this folder, BUT in the Xcode one there is DerivedData, and it is... 2.5 Gigs! Holy f###. I guess if i am not going to use all these apps now (in simulator),so i can just delete these files? Always could recompile everything.
To me what makes it fun is that I am not an artistic or creative person; I’m a chemical engineer putting me in an extremely technical field and honestly that’s about the only way my brain works. Programming, specifically small apps and not databases and such is a way that I can express myself. It is the only way I can tap into any creative aspect of my body. From start to finish I’m in control of how an app will behave. Animations, design, feel, function, everything - the sky is the limit. Maybe I’m different than others but because of that it is more fun than work like. It’s a leisurely activity, not a stressor. It’s a way to wind down from a busy day while still keeping my mind active. 
Summarizing everything here, i got 2.5 Gigs of space back by deleting DerivedData folder inside ~/Library/Developer/Xcode. Big thanks to everyone who got involved.
Exactly. I’ve tried explaining that programming is literally art to me. I’ve always been a very logical thinker, but I also have a creative side as well. I presume that this is why programming interests me so much. I guess that everyone finds their own way to express themselves.
I just ask for a group of people to join in, if they show an interest, we discuss the goals, setup a project and do the work. The project is an open source for the purpose of showcasing, learning and making industry contacts. You can think of it like getting a job without getting paid. You do as much or as little work as you want. If you do anything, your name is on the credits. You setup a LinkedIn, eMail, etc... and we approve each others skills. This is basically setting us up for getting in the door for interviews, jobs and more projects, building skills, etc...
I consider myself “smart”, but I still wouldn’t want to learn carpentry if a friend of mine were to show me some of his work and told me how much enjoyment he gains from learning it — I have zero interest in carpentry. People have different interests, and you shouldn’t take it personally if someone doesn’t find your interests, well, interesting. Consider joining some forums or chat groups where you can easily meet people. Slack, Discord, IRC, etc. Meetups are also pretty good for socializing. 
I always go back to this for freeing up space: http://blog.neverthesamecolor.net/how-to-recover-disk-space-from-xcode/
http://appleinsider.com/articles/17/12/20/apples-project-marzipan-will-let-ios-apps-run-on-the-mac-in-2018---report
http://appleinsider.com/articles/17/12/20/apples-project-marzipan-will-let-ios-apps-run-on-the-mac-in-2018---report
Project Marzipan? There are lots of rumors, but no one has found code that suggests this is close to shipping (if it's even true). If it *is* true, the transition would benefit from a period of shoring up the system for inconsistencies and bugs before changing out the foundation. So the recent Apple announcement of a small feature release of Mac and iOS this year is the closest anyone has as corroboration. Even still, it's going to be two years before this would debut for third party developers.
I must admit that I’m not the best person to answer - my Go experience is very limited. I will say that tooling especially is currently an issue but improving. You don’t have to use Xcode, plenty of people don’t, but it does provide the best integration with LLDB and sourcekit at the moment. In terms of why to use it - for me it’s because o have an iOS background and know swift. I don’t want to have to master another language to write for the server (though learning other languages certainly isn’t a bad thing) and it opens up the possibility of sharing code between iOS and the server. At the end of the day it’s the same as choosing between python and ruby. They are different languages and have their pros and cons. Some tasks may be better to do with Go, and if you are experienced with it then go for it! However if you are an iOS dev who wants to write for the backend then why not stick with the same language? It is still early days for server side swift and there are lots of gaps - but half the fun is pioneering that and getting the chance to fill those gaps and influence the frameworks. Not many other languages offer that. However it is quickly maturing and I would say ready for production for 95% of use cases
I felt the same way about my friends and golf a long time ago. How can they not like golf?! I just joined some leagues, played by myself, and over the years, I have tons of golf buddies now. My old friends are still my boys, we do other things together.
I agree. At this point, I’d rather have bug fixes over a new framework any day. I’m more hopeful of those rumors. I think “Project Marzipan” is more of wishful thinking on Apple to recruit more iOS developers over to the Mac.
Z-Fighting?
I never noticed that, thanks! That’s also very useful!
Look for friends who are already interested. Don’t try to force your own interest on others; you’ll only annoy them, and potentially push them away.
Gotta post a project link or some code, otherwise people are just stabbing in the dark. Please don't post images of the code, post actual code, trimmed down to just what can be used in a small project or playground, and formatted in a code block.
Yes you can delete all the files, but don’t delete the folder itself
Had to build a networking app at work in swift and finding OS X material was so hard. Everything was for iOS. 
What specifically do you want to do? Phrase the task you're trying to solve in regular english, not in terms of translating from Node.
Sorry, I figured the code would help more than me trying to explain since I don't fully understand it, but I agree I probably should have explained too. In Node when you try to read a file without providing an encoding type it returns a Buffer object. I'm pretty sure this would be called the same thing in Swift so I'll be using that. What I need to do: I need to read my file into a buffer (and preferably not the entire file) and with that buffer I need to extract specific bytes. Specially I need to get a 32 bit byte at the offset of 8. We'll call the value from this `publicKeyLength` Then I need to slice the original buffer at index 16 and with a length of 16 + `publicKeyLength`. With this new buffer I need to convert it to a base64 string. Hope that makes sense...
To read a `UInt32` at offset 8 and then the public key, this may work: let data = try Data(contentsOf: url, options: .mappedIfSafe) let publicKeyLength: UInt32 = { data[8..&lt;12].withUnsafeBytes { $0.pointee } }() let metaOffset: UInt32 = 16 let publicKeyData = data[metaOffset..&lt;metaOffset + publicKeyLength] let publicKeyString = publicKeyData.base64EncodedString() 
Much clearer! Basically, you want to read in a file as Data and then extract certain slices of the data. Very easy. I don’t know how to do it but if you google it using “data” I’m sure you’ll find something.
Thank you so much!! I don't have any better way to thank you so enjoy the month of gold!
Lol I've googled like 20 different variations of "data", have so many tabs open right now. Thanks anyways! Other comment worked out. Can finally close those tabs.
I guess you’re right. I feel like from all the people I have met and interacted with that at least ONE of them finds Swift somewhat interesting
I like that idea. I don’t feel that my code is ready for that, yet.
It’s so weird how human interest works. I would never find golf to be something I find enjoying... and I’ve been a few times.
I’m definitely not pushy about it. I guess I just need to find people who already have it’s a hobby. Quite difficult to do 
How so? It’s really all very similar, just different APIs for UI but same concepts.
You can’t bridge storyboard or nib files without code, only within a single file.
Thanks. Yeah while I was googling I found out a string of issues regarding this dating back to Xcode 7. Seems like the only solution is to disregard the collection view item in storyboard, probably the reason why Apple doesn’t include the visual item along with the collection view?
Hell yes. I got about 5 GB back after I looked in various folders and cleaned stuff out. It ALSO saves all of the installers for anything you updated. 
Around there, you will ALSO find the actual .dmg files for installing the simulators and the documentation. They aren't thrown out after installing them : / Also, if you publish IPA files often, you'll want to clean out your past year of old crap as well.
There's more to it. Check out my other comments that explain that.
The two halfs are not identical. They are representing the difference is length between your eyes. About that 6-7 cm difference. Thus revealing more to the left for the left eye and more to the right to the right eye. Giving a sender of three dimensions. 
&gt; new to programming here when asking for help the best first step is to show what you've done, as you get better often this act of writing down the problem and steps you've taken might make the problem clear Since you can do something on a tap, I'll assume the gesture recogniser is working correctly so in order to change the view colour you can do something like: ``` theViewIWantToChange.backgroundColor = UIColor.red //can just be .red if you like as well ```
There just wasn't a lot of material. When you search something it always came back for iOS. If I recall correctly the APIs for a lot of the things I needed to do were quite different. I had to monitor network status and be able to change networks on the fly. I can't remember what for but I remember having to bring in a bridge for something because there was no swift equivalent at the time. 
That would be awesome! 
Numerics for Swift would be great, but FYI NumPy isn't just a C library. It wraps BLAS and LAPACK, which are Fortran. 
Maybe the issue can be worked around for Swift on Apple platforms: aren't BLAS and LAPACK already in the Accelerate framework?
Yes, they are. I didn't mean to imply there was a problem that needed to be worked around. I was simply pointing out that the task perhaps wasn't quite what it first appeared. The approach depends on one's goal. Do you want to bring BLAS/LAPACK-like functionality to Swift for all platforms? Do you want to put a nice NumPy-like interface on Accelerate.framework? Do you want to make it easy to call arbitrary Fortran code from Swift? These would all be interesting and worthy projects which could be described as "wrapping NumPy with Swift".
How would I find the old speed? If I set highestSpeed to be the currentMPH then it will always be the same speed? (sorry to be so stupid)
Oh, okay. Thanks!
So my issue is that when I press my button, the app crashes. What’s supposed to happen is when it’s pressed the information entered into the two text boxes would be added into myTable view. After doing some research on the error according to [SO](https://stackoverflow.com/questions/43546497/swift-error-signal-sigabrt-how-to-solve-it) it’s usually because of a disconnected outlet, I’ve checked all my outlets on the view and everything seems to be fine. After checking through this sub Reddit I found helpful blog on adding an exception breakpoint, I’ve done that and it’s showing me where the problem is but I’m not exactly sure how to interpret the result being shown in the console. Anyone have any ideas how I can sort this out? Any help or suggestions would be appreciated ! 
Now would be a great time to learn how to use the debugger by setting a breakpoint on your function and stepping through your code!
Off the top of my head - you need to update the tableview datasource first, then do the inserting. look at: https://stackoverflow.com/a/31870301 you should probably store the pocketMonsters array as a class variable, then use that array rather than calling the appDelegate method. Of course, I don't know if you are persisting the new monsters somewhere. 
Check your outlet names as well. I’d bet you renamed one of them. If you can’t figure it out just delete the outlets on that view and redraw them. That should fix it
I’m guessing your having an issue with outlets. Side note. Your new Pokémon variable is being created through looking into the app delegate? That’s a terrible idea. Your model should be absolutely separate. 
I’ve deleted the outlets and re added them, still getting the same error... 
Oh shiz... I didn’t know ( relatively new to this ) do you know a better way I could do this? 
I’ve tried the solutions in the SO post but no luck... and okay I’ll look into how to store it as a class var. thanks 
Can you try cleaning and rebuilding? And can you post the specific error message in your console?
Sigbart Screams outlets without looking at the actual code. That's where I would start looking.
Not useful to you yet, but — [SE-0195](https://github.com/apple/swift-evolution/blob/master/proposals/0195-dynamic-member-lookup.md) should one day make it easy to interface directly with Python for this kind of thing.
https://github.com/xmartlabs/XLPagerTabStrip
It is available on cocoapods and you can use it.
Questions to investigate: What is the lifetime of your “task” variable? When does it get created? When does it get destroyed? Also, are you familiar with using the debugger and stepping through your code? If not now would be a good time to learn!
Your code in fetchData() works just fine, but I noticed you're not calling it anywhere in that view controller.
oh woops i didnt even notice. thanks a lot for your help!
You should only be setting the highestSpeed variable to the current speed when the current speed is greater than highestSpeed. So something like: ``` if currentSpeed &gt; self.highestSpeed { self.highestSpeed = currentSpeed } ```
Well if it’s a sigabrt error it definitely has something to do with outlets. If it’s a different error what I’d do is wrap your variables in if statements to make sure you’re not passing nil in, which would cause a crash. You could do something like If (image your passing) != nil { ImageView = image to pass } 
Haha these experiences are what makes us double and triple check our code before asking for help 
For my Deep Neural Network explorations I wrote MatSwift lib. It’s not even close to numpy but maybe somehow it will help you. https://github.com/jknthn/Matswift
Hey man sorry about the wait sending over my resume. Every time I remember to send it over, I’ve been in bed on my phone. Remind me in the morning and I’ll send it over. Until then I also had a portfolio made you can see at Wylan.me
Absolute legend, thank you!! 😊 
I doubt he’s doing any multithreading at this point 
Check out at this video series and you won't need any external libraries for such a trivial task https://www.youtube.com/watch?v=ZxIAT7f-yh8 :)
Video linked by /u/Heka_FOF: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Swift: YouTube - How to Swipe between sections horizontally (Ep 12)](https://youtube.com/watch?v=ZxIAT7f-yh8)|Lets Build That App|2016-07-03|0:26:17|527+ (99%)|32,201 $quote Today lets go over how to enable swiping between different... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/Heka_FOF ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=$comment_id\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
Omg, thank you so much, that's worked! 
These are both Google apps, so I’d check Google’s Material Design Components repository: https://github.com/material-components/material-components-ios
Would you be happy to use a library or looking to learn how it’s done? Either way, that’s a Googley component, and their official iOS implementation is here: https://material.io/components/ios/catalog/app-bars/
And how exactly do you abstract dependencies?
Let’s say you are using a CoreData framework named CDAwesome. In your project you have lots of CDAwesome.save() functions exist. It would be very time consuming for you to change that dependency if it ceases to exist. Instead abstract it by wrapping inside your own class like DataKit and inside that class use CDAwesome.save()
This would definitely solve the problem as far as not needing to modify as much code. But it does make it a little harder to unit test or keep multiple implementations at the same time since you can only have one version of the class existing at a time. 
I generally extend classes with protocols and use factory approach. Inside DataKit I have CDprovider. It is easy to mock and test later on. However I should say no matter how you plan things, something usually breaks lol.
Dear god, please don't do that. All this overuse of animation is nothing more than a distraction. IT doesn't help the user.
This isn’t actually an animated navigation bar. The nav bar is currently translucent. What’s going on is that there is a UIView at the top of the view controller whose bottom constraint meets the top of a scroll view. Then, by listening to the scroll view’s delegate methods you can animate the top view’s height constraint based on the direction the user is scrolling. 
Animations bring you app to life. The users can really "feel in" into your app. Animations divides good applications and great applications. Now you might feel this as a distraction - fine, don't do it in your app - I will do this in my app. I am asking how not for opinions on its looks.
What you have to do is implement the scroll view’s delegate method scrollViewDidScroll. Since the scroll view has a pan gesture recognizer, you can use that to determine which direction the user is scrolling. So to get the users finger location it would be: let currentScrollLocation = scrollView.panGestureRecognizer.location(in: scrollView) let userFingerPosition = scrollView.convert(currentScrollLocation, to: view).y Based off the userFingerPosition you can tell whether the user is scrolling up or down. Then use that to decide whether or not to change the height constraint of that view. So if they’re scrolling up and the view’s height is not yet at the value you determine to be the minimumHeight, update the height constraint. 
You don’t have any obligation to send me it so it’s fine haha. But if you have the chance i would appreciate it! Thanks!
You don’t have to explicitly be using threading. The vast majority of code needs to specify when the main thread should be doing something, otherwise I’ll happen on a background thread.
Um, no, that’s not how it works. By default everything is running on main thread. You need to explicitly run stuff on other queues if you want it to run on some other queue. You should generally only be using this when you have to do some hard work, dealing with some IO or networking. I’m not sure how exactly are you imagining that would work, since almost anything that happens in the app is a result of a user interaction, so that means UI would be dispatching stuff to background thread almost all the time, significantly decreasing app performance.
Delegate methods run in background threads and that’s likely at least half of the code.
That’s certainly not true. Delegation just offsets work to another object, not to another thread. It would be a developers nightmare if that was happening.
In the past there have been problems where you might want to upgrade to a newer version of Swift but one of your many dependencies was still using an older Swift version. Hopefully this will be less of an issue for Swift 5 onwards, but it will still happen.
Xcode doesn't change colors specific to each project, but I've seen cases where the Swift compiler or its related processes (SourceKit) crash, and Xcode can't provide syntax highlighting. It happens a lot if you have invalid code (which you do in the second project), or if there are just some really complex expressions that the compiler is having issues parsing. Your best bet would be to fix your code and rebuild. If that doesn't work, clean your project and maybe try relaunching Xcode. It's pretty bad at recovering from this.
First things first, make sure you’re using the correct API. As per Bitstamp’s website: “Do not make more than 600 requests per 10 minutes or we will ban your IP address. For real time data please refer to the websocket API.” [Bitstamp Websocket API](https://www.bitstamp.net/websocket/) - This uses Pushes to provide real-time data streaming. 
“The main thread is sometimes referred to as the UI thread, because any code that modifies the UI must run on the main thread.” URLSessionDataTask runs the completion handler on a background thread, "asynchronously" from the main thread. "self.priceLabel.text = price" This line modifies the UI but is being run on a background thread, you need to force it onto the main thread. You can do this by wrapping it in OperationQueue.main.addOperation{} Good luck! :)
Thanks but my intention is just to practice parsing json so no need for the websocket. And I didn't make more than 600 requests in 10 minutes I'm just trying to figure out how to make this work faster when I press the button.
I didn't release, but I had a version of an app that used MR (Magical Record) for Core Data. I did an update of MR and they changed something that crashed the app all over the place. 100's of errors, really. It had to do with their includes being in quotes or how they were searched for. I tried of the longest time to find the settings in Xcode for where to search and couldn't get it to work. Ended up having to change 100's of lines so that the includes would look in the right place. Point: Make a FULL static copy of everything you need to make you app over again EXACTLY as it is when you release. You need to find bugs and people will have THAT version of your app. So maybe you have a 1.0, 1.1, 1.2 etc... maybe you have different users for each version and have to remember what was used for each one. I'm pretty sure Git or others will help with this as it can get complex, but you still need those unchanged versions of EACH thing you're using. This is one of the advantages of frameworks method vers Cocoapods. Others will comment on the legal stuff...
Within Apple's ecosystem, and particular brand of MVC, using a notification would be the most obvious approach. It should be the view controller to receive the notification and to trigger the view to update/render. Sometimes, it's good to say fuck it, though. enum UIMode { case light case dark } protocol UIModeRenderable { var mode: UIMode { get set } } extension UIView { func set(mode: UIMode) { for subview in self.subviews { if var subview = subview as? UIModeRenderable { subview.mode = mode } subview.set(mode: mode) } } } window.set(mode: .light) 
Here is a list of threads in other subreddits about the same content: |Title|Subreddit|Author|Time|Karma| |---|---|---|---|---| |[iDevReport • Week 7, 2018 – China to be the leader in A.I. – iTunes connect will be offline](https://www.reddit.com/r/iOSProgramming/comments/7yiawg/idevreport_week_7_2018_china_to_be_the_leader_in/)|/r/iOSProgramming|/u/reddioment|2018-02-19 07:28:02|1| ---- I am a bot [FAQ](https://www.reddit.com/r/DuplicatesBot/wiki/index)-[Code](https://github.com/PokestarFan/DuplicateBot)-[Bugs](https://www.reddit.com/r/DuplicatesBot/comments/6ypgmx/bugs_and_problems/)-[Suggestions](https://www.reddit.com/r/DuplicatesBot/comments/6ypg85/suggestion_for_duplicatesbot/)-[Block user (op only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20user&amp;message=reddioment)-[Block from subreddit (mods only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20subreddit&amp;message=swift) Now you can remove the comment by replying delete! (op only) 
or... use UIAppearance
WTF are you talking about? If you didn’t want to deal with a new version, use CocoaPods to revert back and everything would work just fine. That’s the main advantage of a dependency manager like CP. And are you honestly saying you couldn’t figure out how to do a project wide search and replace to update your imports?
wouldnt it be simpler just to use DispatchQueue.main.async {} ?
it will take atleast as long as it takes the api to return a response. it might not be possible to have it load instantly although you can indicate it is loading with a spinner or something
You can check your pods into your repo very easily. But part of any dependency manager is the ability to use particular versions until you’re ready to upgrade. So whatever issues you had there were of your own making and would’ve been no different no matter how the library was integrated. Imports are pretty standard, and Xcode can do regex search replace, so it’s likely you could’ve automated it. So this isn’t really an issue with CocoPods, not that you’ve really explained what your issues are. 
So what's the difference between a copy and a repo? Is there some amazing advantage to not self hosting? What exactly is the gain? You're whole assumption is that there was a consistent text to "search and replace". You weren't there. Why don't you tell me exactly what you would search for and what would you replace it with? I've actually written editors, and you're telling "so it’s likely you could’ve automated it"... really? You have no clue what I did, you just jump in a start barking at someone like a drunk sailer.
Use a didSet to cascade the new UIMode to subviews instead of a specific function.
Can you include some code?
Check this out https://academy.realm.io/posts/architecting-a-robust-color-system-swift-tryswift-2017-ragone/
This isn't really about MVC, but rather basic separation of concerns. (So, yes your view and controller) Think about the components and what they should know. Your custom Table Cell knows how to render itself. It should hide the specifics of applying the UIColor to that process based on some well defined interface - as suggested `UIModeRenderable`. Effectively, it needs to know "Am I dark or light?" Your Controller should be listening for the application state change and translating to that interface. "When I see the signal, tell any UIModeRenderables whether they are dark or light"
The second one - The controller shouldn't know that setting the table to "dark" changes the background color. That's not it's concern.
Yeah I thought that as well. In my implementation of this only my view subclasses respond to my `.themeChanged` notification. 
Interesting thanks! Funny we regularly set cell appearance in cellForRow, guess that breaks pure MVC. You know what I mean? 
You can find online about the major changes from 3 to 4. Also they published the changes from 4 to 4.1 IIRC. I suggest start learning. Xcode should tell you that the function or the class you are using is deprecated and you should use the new one. Don’t wait for the “perfect, up-to-date” tutorial. Improvise Adapt Overcome
You can use Swift 3 tutorials. Some of the syntax will have changed, but it's stuff that either XCode will very explicitly tell you about or you should be able to easily google an answer to.
Swift is a very new language and the community are trying to make it better. Its first few versions are naturally going to see the most changes. 
you will be fine. If something doesn't work, just look up how to ... in Swift. Good luck!
There are _lots_ of Swift 4 tutorials and courses out there. [All 14 of my books have been updated](https://www.hackingwithswift.com/store) (including all 39 projects of [Hacking with Swift](https://www.hackingwithswift.com/read), free to read online), plus my [Swift Knowledge Base](https://www.hackingwithswift.com/example-code) has almost 600 tips, answers, and code examples to help folks get started. Later today I'll be launching another new Swift 4 course, this time on YouTube. All that is just my contribution, but I know of so many others out there. So, I'm sorry to hear you're frustrated – I hope in the future I can do better at making discovery a little easier!
This is terrible. So many mistakes. For one, Swift is also available on Linux. ‘Code lengths’ -&gt; ‘Requires extensive coding’ gave me a good chuckle tho.
Sweet pictures!
at least they promote a brand you can avoid based on this kindergarten level comparison...
Thank you! So I guess if I have a func inside my cell class that changes self to night mode, and I can call that from my ViewControllers cellForRowAtIndepxPath? Is that the right approach? VC gets notification --&gt; VC calls reloadTableView --&gt; CellForRow fires and calls cell's night mode update func... That sound right?
Just so you know that website is flagged as harmful on F-Secure Freedoms VPN.
"Supersede" is clearly the wrong word choice, in addition to all of the other errors.
I have created a blog post on how to do this. Have a look: https://ivancantarino.com/2017/12/29/applying-themes-to-your-app/
You must be new here, the iOS subs are flooded with Flawless app blogcrap...
Not new, just sick of the lack of moderation just sitting back and letting the obvious spam live
Core Data has nothing to do with it. Judging by your question, I'm afraid you're mixing up some concepts. You need some backend to implement remote notifications. Your app should obtain token by calling `UIApplication.shared.registerForRemoteNotifications()` and send this token to your backend which should associate this token with that user. When your backend wants to send notification to specific user, it should use their token to communicate with APNS (Apple Push Notification Service). Remote notifications are always delivered to device (not counting device reachability issues and so on), even if app is not active or closed. 
That's voluntary work for you. :) Could be worse, I'm quite fed up with the Flawless people, but that's our relationship from that one, so... :)
Ah, fair point - I see now what you mean and why you used the set function.
Simple, show them your bank account.
Don’t worry, we’re past the breaking changes that occurred with v2 and v3 now.
Glad I'm not the only one that is tired of flawless and their useless app
The app has a nice concept, it's that they are pushing it on a daily basis to a somewhat constant audience...
You've never developed (or followed the development of) a programming language before, have you? Swift is only 3 years old. In 2011, C added 10 new keywords, and it was 40 years old at that point. The entire purpose of new language versions is to change syntax. If programming language designers only wanted more functions, they'd let people handle it by writing libraries. Or the more direct answer is: because the Swift community process requested it.
Most apps on the AppStore rely on CocoaPods these days. Publishing them is not an issue, but don’t fall into a trap of using library for every simple task. You’re going to have trouble sooner or later.
[removed]
Try using the 'isSelected' property on the buttons.
thanks i just restarted xcode and it highlighted everything properly. weird. not sure what was wrong but sure is annoying. thanks again.
You can start from here: https://www.raywenderlich.com/150073/ios-unit-testing-and-ui-testing-tutorial Small advice: don't underestimate it.
I really recommend the The Art of Unit Testing. It is a grail for software engineers. There's a pdf floating around somewhere.
Thanks. Will look at that.
Will check, thanks.
[removed]
Unit testing allows you to test your code without having to run your app and test it yourself. You can easily make comparisons of how it should behave and you will know if your code is working as intended. It makes debugging way faster and easier. If you want a job later as an iOS developer, knowing unit testing is a must. 
Have you tried using a segmented control? It seems like that is the uitype you may be looking for. 
And by must I mean they might code review you to make sure you used unit testing. 
Wow I did really underestimate it! 
Awesome dude love your stuff
Bookmarked! I don't suppose you fancy doing a bash to swift tutorial at some point? I'd love to convert a load of my shell scripts over to swift as a learning experience but every time I try I just get stuck. The most basic task seem incredibly difficult in swift and it's probably my inexperience with the language, or more probably lack of proper programming experience, showing here but I'd honestly love something like that.
That's not something I had considered before, but there are various tools that might help make it easier – I wrote about [Beak](https://www.hackingwithswift.com/articles/47/write-your-scripts-in-swift-with-beak) last month, for example.
I’ve been using Xcode for over 10 years. It’s always been buggy. The key is to accept its flaws and keep a flask of scotch in your desk. If you put it in an old Apple juice bottle no one will know.
Man I just started the hackingwithswift tutorials on the weekend. Absolutely loving them, very well written and more entertaining than Taylor's lyrics. :P Once I finish all the projects I'm gonna buy the SpriteKit book and develop my own game, release it onto the app store and probably not make any money. But it'll be fun.
YouTube sometimes plays havoc with the video order, even though they were all manually arranged in a playlist, so the easiest thing to do is start here: https://www.hackingwithswift.com/sixty
I knew about hacking with swift, but I didn't really look into it. I'm glad you brought your new book up to light, because now Im looking with your free Hacking with Swift. Its exactly what I need, and I'm loving the in-depth explanations so far! Some people have the thing for teaching well, and you're definitely one of them!
&gt; “This course only just launched, so I'm writing this here because I hate empty spaces” &gt; --The Author This cracked me up lol. :) Thank you!
Watch WWDC videos.
Well, since 6 when I started using Swift. 
Agreed. I don't consider myself a programmer by any stretch of the imagination, I've hacked my way through bash but everything else just confuses my poor little brain. I was kind of thinking that as I have stuff that works in bash porting it over to swift would be a good learning experience. I appreciate the the code would balloon in size but I just thought it would be an interesting way to learn. Maybe...
Sounds like youre Background is not connected. You are force-unwrapping it and the error says it's nil.
My Background is connected.
Loved your materials and blog! 
Take a look at Reactive programming. Like RxSwift!
Is Background your UIImage?
Really wish people would stop making beginner tutorials, there are literally hundreds of them now, wish there were more high quality med/senior content
Yes it is.
Are you subclassing buttons and adding your stuff? Are you marking your elements IBDesignable so you have an idea of what they’ll look like? You could start by looking at some libraries that do cool things (github.com/trending/swift). Try to use vector based graphics wherever possible, shadows and padding can be important and go a long way towards polish. Good luck! 
First off, should be lowercased. Second, try setting background’s alpha property to 0 instead of using the ishidden call. It technically controls the same thing but if that doesn’t work you are having issues with your ABOutlet. 
Thank you for both projects. It might just get me out of my funk and get my idea finished. 
pay for it
It's a topic more related to architecture than UI. I wouldn't. recommend you to learn about it at this point, since it will only cofuse you. If you want to make custom controls, UIView is the class you need to know the most about. UIView + some gesture can help you make almost any control in the world. Show me a control you would like to implement and I can guide you to the implementation if you want. 
Could you find more unrelated Swift topic than Rx?
https://itunes.apple.com/app/id1345096630
Like I said in my post, I’ve already made a huge amount of intermediate and advanced content. I’m pretty sure I have written the only book on macOS, the only book on Kitura, and the only book on Vapor, for example – I really don’t think it’s that bad if I do one beginner Swift series once every two or three years. 
So you're saying, you've locked down your Pod versions and maintained the same IDE version? Clearly one of the two above was violated. 
guard is very useful combined with let to ensure you’re working on non-null types. One of my favorite features of Swift!
Hi guys! My goal is to append the array of tags with the name when the struct is initialized. I am using JSONDecoder to init instances of my struct and I had to make tags optional as only some data in the JSON does have extra tags. I have also tried to put some code into init() in the struct but I had no luck with that. Check the picture for more info. 
That’s a property getter, not an initializer. I encourage you to look up those terms, but for now, you need to make an “init()” method in your struct, then initialize the array however you want in there
Please post text, not pictures and some more code context would be great.
It's hard to give specific suggestions because we can't see what your stuff looks like or where the problems are. Maybe look into getting a critique on a design subreddit. Or if you have a specific control you'd like to reproduce, post it here.
What part of the code?
How complex are the interfaces you are making? Can I ask which two tutorials you used? * Many tutorials have trouble teaching Interface Builder and simply leave a lot as an "exercise" to the reader. Since it's often not the focus of the tutorial, it's similar to explaining Photoshop while focusing on teaching HTML &amp; CSS. * After dealing with corrupted IB files, I tried to stick to programmatically creating my interface. You have to be okay with it being ugly while learning how to code it. I'm not even certain all of the same features of IB are accessible just from code, so I eventually gave up and went back to IB when I had to do an interface overhaul. * Don't try to mix and match. Creating some interface screens in code and others as IB is asking for extra integration work that there aren't a lot of tutorials for. Having been burned a few times, my gut is to stick with one or the other. * The vector app of choice seems to be [Sketch](https://www.sketchapp.com ). It's not cheap, and it crashes a lot for me. But it does seems like the authors want to appease programmers' needs, rather than trying to appeal to all graphic designers (unlike Adobe Illustrator). It's a frustrating app that I want to like better. It's frustrating, but it all takes time and some artistic skills you may not be accustomed to stretching. Stick with it :-) 
var model = YourModel() model.tags.append(“newTag”)
Assuming that's true, then (like most questions I see posted) the error is in the part of your program that you didn't include. Post a *complete* example.
`DispatchSemaphore` synchronously waits for all the asynchronous tasks to complete before continuing on with your code. When you call `wait()` on a `DispatchSemaphore` instance, your code will stop running while it waits for the other tasks to complete. When that happens, your code will resume, and the next statement after `wait()` will execute. On the other hand, a `DispatchGroup` will not block your code like that. When you call `notify(queue:work:)` on a `DispatchGroup` instance, it tells the group what it should do when the group's tasks are complete, but then your code will continue after the `notify` call. When the group's tasks are finished it will asynchronously run the code you told it to.
UIKit is a UI Framework that contains the front-end parts of development for iOS. Foundation is a framework with a base layer to provide basic functionality that do things like sorting, date/time methods, data storage stuff, and networking.
What exactly can break in UI?
Okay thanks that makes it pretty simple.
One example I've found is UISearchController on device rotate while active can act a little odd with custom implementations, but anything custom will in some way act weird until things are ironed out anyway. UITest helped me sort that out eventually.
Cool. Thanks.
Whiteboard code - func viewDidAppear { if(cameraAvailable){ Do Camera Stuff } Else { Display message } }
The main problem as I saw it was dealing with the asynchrony of the AVCaptureDevice.requestAccess handler. brendan09 provided a good answer.
&gt; How do I get to this level? Are there any tutorials that teach this more "advanced" stuff? For the Mac? Not that I know of. For iOS you have for example [Design &amp; Code](https://designcode.io), which tries to teach you some design basics. A lot of the stuff applies to the Mac of course. &gt; When I look at other apps, they are usually quite beautiful, have an amazing UX &amp; UI to them etc. but my apps just don't look or feel like this. Can you show a screenshot of one of your apps and highlight what you don't like? Try to analyze the apps you like and figure out how they accomplish that polished look. Is it the color scheme? The fonts they use? The placement of and the spacing around the controls? Try to replicate these elements in your own apps. In the past I've replicated some of the apps I like to a 100% to get a feeling for what looks right. No need to implement the business logic, use fake data and just replicate the UI and the controls. &gt; I also don't know how I would go about creating custom controls from scratch, say if I wanted to create a control that is very specific to my app and which I couldn't just grab from the cocoa list of controls. On a code or design level? 
FYI, for the "current project I am working on seems like I didn't even use foundation once" part of your question, UIKit itself needs foundation and imports it. So I'd guess you probably used pieces of it not knowing you were using it. I don't think I've ever done a iOS project that did not use it in some manner. 
UIKit also imports Foundation for you. There’s a word for this but I forget it.
inheritance?
Also note that UIKit is just iOS, whereas Foundation is used by all apple platforms.
I was going to say dependency
Excellent, thank you. One of my goals was to learn a programming language this year, but I have trouble getting started because of the time commitment. This will help me get started, because of their brevity. And once I've started, I won't mind putting in the time. I realize that doesn't make sense, but as long as it motivates me, who really cares! Thanks again.
So are you aware how? lol Whoops (_laughs out loud._)
When you `import` a file you get every file that is imported in that file. If you look at the file that gets pulled in with `import UIKit` (command-click on the word "UIKit" and select "jump to definition") you'll see all the files it imports. The first one is `Foundation`. Thus, UIKit includes everything in Foundation. It's a good practice to only import what you absolutely need, since you can have name clashes and importing takes time and memory. For example, I have a project with a file that does `import Foundation.NSGeometry` because all that I use in that file is `NSPoint` and `NSRect`
I very rarely see any moderators here any more – I usually have to name-check them specifically in order to elicit a response. We need some sort of Bat Signal for /u/wuddersup.
rip
That seemed to be a pretty good bat signal just now.
Last month I released my latest book, [Swift Design Patterns](https://www.hackingwithswift.com/store/swift-design-patterns), which teaches not only *how* to build great apps but also *why* Apple APIs work the way they do. If you're interested, I created a $5-off discount for Reddit users: [click this link to activate it](https://gumroad.com/l/swift-design-patterns/reddit). As for this month, yesterday I just released a new (free!) video series for Swift beginners called [Swift in Sixty Seconds](https://www.hackingwithswift.com/sixty) – it contains 95 videos, each teaching a distinct Swift concept in a minute or less. I also added 270 new articles to my [Swift Knowledge Base](https://www.hackingwithswift.com/example-code) – you can see the list of new articles [here](https://www.hackingwithswift.com/articles/54/expanding-the-swift-knowledge-base). In between those two, I wrote an article about the new [keyDecodingStrategy for Codable in Swift 4.1](https://www.hackingwithswift.com/articles/52/swift-4-1-improves-codable-with-keydecodingstrategy), and another about the [dynamic member lookup feature that’s hopefully coming in Swift 5](https://www.hackingwithswift.com/articles/55/how-to-use-dynamic-member-lookup-in-swift). There are still quite a few days left in February, so I still have a couple more things to work – top priority is a small update for my [Vapor 3 book](https://www.hackingwithswift.com/store/server-side-swift) to take into account recent changes, but after that there’s something new I’m keen to try before the month ends!
Thanks! You can get back to forking Swift for your employer now ;)
I’m continuing work on [Silt](https://github.com/silt-lang/silt) with @CodaFi. We’re focusing on Graph IR, a middle layer between Silt’s type system and LLVM IR.
I’m trying to get a job
The thing about "more advanced" stuff vs "generic" stuff is that generic stuff is good for accomplishing generic things, and advanced stuff is good for accomplishing specific things. I think the first thing you want to do is hone in on something specific you want to accomplish - perhaps try to replicate part of an app with some UI you admire - and try to tackle it piece by piece. Once you are asking specific questions, you will start getting more specific answers, and from there you can extrapolate and make things your own
If it's any consolation, my previous company [Bryx 911](https://bryx.com/products/bryx911/) uses Kotlin for both their Android app and Web API, and we absolutely loved it. It's very stable and very mature.
I did an update of one of my projects to swift 4 (kind of late, I know): https://bitbucket.org/drk4/blog_web_api Ended up also adding tests to it, so that update took more effort than I initially planned, but hey its done so, on to the next thing!
There's a _little_ UIKit in there, but it's more focused on application architecture. How do you make MVC not suck? How can you arrange your code to reduce coupling? Etc.
A new app. Very simple - just a couple of table views - and with a strictly limited possible feature set so I imagine it will be utterly feature complete in less than a year. Interestingly, it's a app that doesn't already exist on the store, which doesn't happen very often these days. Also an app with a niche market, mind you.
Very simple and quick; Good stuff! 
I just tried your code as is and got this response back: `{\n \"userId\": 1,\n \"id\": 1,\n \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n}` It's strange that you cannot get it to work.
Gonna have to give us more if you actually want help. 
Yes except, I edited the print statement to ‘print(rdata, String(data: rdata, encoding: .utf8))’
iPhone 8 simulator. XCode 9 There isn't much to the project; tab bar controller into a scene, whose text field has: Content type: postal code Keyboard type: number pad Auto-enable return key: true That's about all there is. I've updated the original. 
Trying my best to learn Swift and create my very first iOS app! 
If I might recommend, /u/twostraws has some amazing introductory material at hackingwithswift.com!
Oh cool. I’ll check it out. Thank you for the recommendation! 
Entering the craigslist challenge from uplabs! https://www.uplabs.com/challenges/craigslist-challenge
Are you in a playground? I wasn't able to see output in a playground until I added this to the top: import PlaygroundSupport And this at the bottom: PlaygroundPage.current.needsIndefiniteExecution = true
Thank you so much! I'm new so I honestly never would have found that :)
I’m working on tutorials for vapor on my site, www.vaporforums.io (and of course the backend is vapor). vapor 3 is coming out in ~1 month, so should have quite a few coming up. 
Adding the core features to my carpooling app and trying to get some design inspiration for my tableviewcells in terms of text placement, text size, coloring. Also adding a couple really cool google maps features like getting the route overview and using the map view delegate to interact with the markers. Lots left to do but really coming together. This is my first app and I feel like as my programming skills get better I’m getting so much faster at diagnosing the problems and coming up with better solutions. 
Don't fight the language. Avoid these kinds of side effects. 
I’m starting my first major app! Doing all the front end / backend work after spending the last 6 months on books, articles, and tutorials.
I think you usually get this error when you've a stray outlet somewhere. I'm guessing if you select the view and check the connection inspector you might find you've doubled up on a connection when renaming or something like that. You can delete old one's directly in the connections inspector.
I bought it
Sounds interesting, can you inform us when it's done?
The UI vs. all the other crap behind it. 
Nice! thank you
I was looking for actual code. If you don’t post it I can’t help. Set a breakpoint and see where it is unexpected.
Thanks for the interest (although, unless you're in the niche, you'll probably be disappointed). Alas, I like keeping my name seperate from my Reddit account and don't want to link them by posting the app. Sorry.
Doesn’t work with the “new” swift 4 version
Still learning swift and trying to find a junior position so I can learn more from a mid-level or a senior. Fingers crossed! 
This week, a client wants to include barcode scanning in an app. First I wanted to get that working standalone. So I created an example project that shows how to scan barcodes and QR codes in Swift: https://github.com/bvankuik/ExampleBarcodeAndQRScan
I'm working on a [chess engine library](https://github.com/hexe-rs/Hexe) in Rust and creating [a Swift wrapper](https://github.com/hexe-rs/Hexe.swift) for it. It's pretty far from release but I'm using the Swift wrapper to explore interoperability between Rust and Swift. The API can be smoothly translated if certain constraints are held on both ends, while using potentially very unsafe C code in between.
Curve percentage? What's that? It's a flat screen. There's a ton of specs at: [The source.](https://www.apple.com/iphone-x/specs/)
If you mean the radius of the edges, it’s not a straight radius. Apple [doesn’t use circular curves](https://medium.com/tall-west/no-cutting-corners-on-the-iphone-x-97a9413b94e). 
https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf#page92 This should help with any measurements of anything related to the iPhone.
They're not directly animatable. In the past I've used the following approach, take a snapshot view of your key window, put that on screen, then update your custom view's UIAppearance, then re-add your view hierarchy so it updates, and lastly animate the snapshot view away.
A flat screen with rounded corners. That's the curve they're asking about.
Kinda easier just to roll your own theming with notifications and UIview animations, no?
I guess it must be, there's not much information to go on to understand OP's question. Your thought seems to be closer than anything I could come up with.
Just test it out. Implement [`NSCacheDelegate`](https://developer.apple.com/documentation/foundation/nscachedelegate) and log when the objects get evicted. When I last used it the cache did empty soon after the app went into the background. I don’t think it’s guaranteed behavior though, might dependent on the device and/or other factors. 
Pretty much. 
I looked into it and by documentation it states "temporary storage is subject to eviction when resources are low". That sounds very vague :/ edit: to clarify it's documentation on 'NSCache'
The best place to start is anywhere you feel like starting.... Swift Playgrounds is great, but just give it a try and see if suits your way of learning, and dial it in from there! And welcome!
I personally started learning iOS and Swift from Udacity's Nanodegree. But I checked Swift Playgrounds and even though it is for kids, I think it's a great source of basics. From there I would suggest reading the entire official Swift Developer Book from Apple. I know it has like 800 pages and many people would suggest searching for a different source of information - but I think everything is covered there in a healthy manner and it IS NOT HARD to understand.
Try https://designcode.io/
Thanks, I have an idea for an app, but I figured I should learn something before I even try to take it anywhere
This one - make sure you always read the latest updated version (currently 4.1). It is available in iBooks as well. [SwiftBook!](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/index.html#//apple_ref/doc/uid/TP40014097-CH3-ID0)
Cheers! Thanks
I started with iOS dev in a command line app! Learn the basics first :) Making a class, printing to screen, arrays etc. If you have any questions or would like tutorial over Skype (for free) gimme a shout :)
I've completely removed all connections asides the original ones connecting the tab bar controller to the separate scenes, and removed the class name from custom class of the scene I'm working on. Unfortunately without the custom name being changed, and left with default, I can only get action connections on every object within the scene. I've never faced this before.
I'm pretty much a beginner and don't know where I can find the code to supply you. I've only placed objects on the Main.storyboard and then changed the attributes of those objects. I know that has to translate to Swift code somewhere, but it's neither in AppDelegate.swift or ViewController.swift. Sorry.
It’s not possible
Swift playgrounds is a very impressive tool for learning, you can use it to learn, but Apple also have books on iTunes U where you will build several projects using Xcode.
 It sure about you, but when I’m jogging, I find it hard to use one app, let alone two. 
There's great advice on how to design for the iPhone X here: [Human Interface Guidelines: iPhone X](https://developer.apple.com/ios/human-interface-guidelines/overview/iphone-x/) There's also some downloadable templates you can use in your design: [iOS App Design Templates](https://developer.apple.com/design/resources/#ios-apps) Here's a great non-Apple article on this topic, with some more templates: [The Hunt for the Squircle](https://applypixels.com/the-hunt-for-the-squircle/)
What do your structs look like?
You should rephrase your question and be a little more specific. 
Nice try Angela.
I have been taking this course, and I agree that she does a great job explaining everything. She covers a wide range of material, and I like that she uses food concepts as her examples. I bought the course for $10, so I feel like it is a good value for the amount of material provided.
Actually it doesn’t get translated into Swift :) storybords are their own little world. Anyway, as best I can find out, the console error you’re seeing looks like it might be a red herring and unrelated to your problem. What I’m unsure about though is exactly what problem you’re seeing: what do you mean by “when the keyboard comes down”? If I had your program open and wanted to reproduce this behaviour what steps would I have to take? More generally, Storyboards aren’t really capable of making functional apps without writing some Swift code to support them, so it’s not necessarily a huge shock that it’s not behaving as expected!
I second this, great course!
Try out swiftyjson, makes parsing deeply nested data super easy. Also the reason you’re not getting a value is because menuitems returns an array.
Not a great idea, what if a value has the word "value" in it? What if other fields also introduce a "value" key? Parsing like your saying can be very fragile and introduce all sorts of bugs.
Try https://app.quicktype.io/
Using structs: you might be missing a struct for the menuitems property, to which I've assigned an array of 'Element'. Using structs: from what you describe, you might be assigning an array of MenuItems to itemDescription; I think you should add another struct (I added an 'Element' struct) and assign an array of this to the 'menuitems' property. Here is the playground where this works out: import Foundation let json = """ { "Name": "SomeName", "basicAttack": { "itemDescription": { "ddescription": "", "secondaryDescription": "1", "cost": "", "menuitems": [ { "description": "Damage:", "value": "34 + 1.5/Lvl (+20% of Magical Power)" }, { "description": "Progression:", "value": "None" } ], "rankitems": [], "cooldown": "" } }, "ret_msg": null } """.data(using: .utf8)! struct SomeStruct: Codable { let basicAttack: ItemDescription } struct ItemDescription: Codable { var itemDescription: MenuItems } struct MenuItems: Codable { var menuitems: [Element] } struct Element: Codable { var value: String } let decoder = JSONDecoder() let something = try! decoder.decode(SomeStruct.self, from: json) dump(something) 
Kinda sounds like you’re dismissing the keyboard by calling ResignFirstResponder() To make it come back you need to make the keyboard comeback by setting the textfield to become the first responder. 
Yep. I originally wanted to write that it was a hack, don’t know why I didn’t. I’d only use it for a quick and dirty personal project. 
I second this.
Similar to what u/anrv posted. However, you should make sure to unwrap the `Optional` values properly to avoid run-time crashes: import Foundation // Raw JSON text let jsonText = """ { "Name": "SomeName", "basicAttack": { "itemDescription": { "ddescription": "", "secondaryDescription": "", "cost": "", "menuitems": [ { "description": "Damage:", "value": "34 + 1.5/Lvl (+20% of Magical Power)" }, { "description": "Progression:", "value": "None" } ], "rankitems": [], "cooldown": "" } }, "ret_msg": null } """ // Structs struct Full : Codable { let basicAttack : BasicAttack } struct BasicAttack : Codable { let itemDescription: ItemDescription } struct ItemDescription: Codable { let menuitems : [MenuItem] } struct MenuItem : Codable { let value : String } // Decoding if let data = jsonText.data(using: .utf8), let full = try? JSONDecoder().decode(Full.self, from: data) { // print all the values found full.basicAttack.itemDescription.menuitems.forEach { print($0.value) } // output: // 34 + 1.5/Lvl (+20% of Magical Power) // None } 
It can be a useful trick but I've gotten very weary of using it with JSON, it'll break at the worst possible times in my experience.
Does anyone know anything really...
Yes, at least I believe so. I was using Codable and decoder with SwiftyJSON with the deeply nested Foursquare API. You shouldn’t need to do any extra work in addition.
tried this by putting in the JSON-data I get, but when I try to run the code Xcode just crashes without warning edit: nevermind, one symbol in the right place can make all the difference, lol now I just need to figure out how I handle values that are rarely nil, for example, the "value" there: { "description": "Progression:", "value": "None" } So far it seems I have to mark my basicAttack property as optional instead of just marking the value-property as optional
Do you have any pointers on how I could use SwiftyJSON in combination with the code from https://app.quicktype.io/ ?
yea, the website that theOneyouseek posted suggested the same. Only problem now is figuring out how I handle values that are rarely nil (see my reply to theOneyouseek)
Though I would come back to give you some more feedback. I just tested our your app again after the recent update. I must say - this is a huge improvement. It’s really so much better now. First page explains easily how the app works. Then once done you’re straight into your stand hours. Settings page is really great and the Apple health import export pages are also excellent. Great job mate. I gave you 5 star review in App Store. 
I’m working on a Pokédex like clone as my first app, next thing I’m gonna look at is data persistence and how to access the phones photos...
What’s considered basics? I’ve seen people talk about java 
Unfortunately, I haven’t looked at QuickType yet. I will when I get back to my laptop.
Playgrounds is great. If I were starting now and looking for advice I would do this: Get a fast computer with plenty of ram and then add some more ram and SSD :D If you can get a 2 monitor system, great, code in one screen sim in other, docs in others video tutorials in another area. Once the sim loads, it's actually pretty fast and my machine isn't the fastest in the world. Playgrounds is great for learning quick things, I've never used it for database debugging and other things, but it might be able to do much more than I know about. 
I’m about 3/4 through myself. I like it a lot. I’ve also been diving in to hackingwithswift.com. It’s been awesome to find such informative and affordable content. 
Wow guys if you're gonna spam at least do it LESS OBVIOUS!!
I know most of you find this annoying, especially since it’s paid promotion acc but for what is worth, new programmers such as myself find this useful. A few weeks ago I was completely lost and it wasn’t till I ran into a post like this one that I found out about Udemy and their courses. I highly recommend her course. 
Holy hell dude. This is a massive undertaking. 
Wow... that's very interesting. A code generator for JSON, in every language imaginable. Super duper helpful, thanks!
You start simple and do it one step at a time. First figure out how to draw something on a view. Next figure out how to create multiple layers that can be drawn to separately and then composed together. Then figure out how to let the user interact with the layers, select which layer is the current layer, re-order layers, etc. Then figure out how to let the user undo and redo their actions. I would not worry about opengl or metal at this point. I would use the simplest api which (as much as I can gather at this point) is core graphics. 
Hehe, you are the guy with the dark theme. :) So, best is to have some framework to do the hard work, we use [StyleKit](https://github.com/146BC/StyleKit). After you set it up, you will need custom ui classes to make it work, like _class MYView: UIView_ Now MYView can have a custom functions or variables with computed value. There you can do whatever you wish for. A rough example: DarkStyle.json: { "MYView": { "animatedBackgroundColor": "#ff00ff" } } setter in MYView.swift: func setAnimatedBackgroundColor(color: UIColor) { self.animate(withDuration: 1.0, delay: 0.0, options:[], animations: { self.backgroundColor = color }, completion:nil) } 
"code a social media"? What the hell?
I'm working on cleaning up my Swift Notes for Professionals book Link: http://books.goalkicker.com/SwiftBook/ 😊📚
Hi Swift Devs! I converted the best Swift snippets on Stack Overflow Documentation to create this free Swift PDF book, any suggestions for improvements are appreciated as it will help me improve the PDF book; which will then benefit everyone 😊
The screenshot showing the feedback looks absolutely amazing! I'm the author of the python mutation tester mutmut, and I'll give my take on one of the open questions part of the readme: &gt; Can mutation testing actually detect serious errors in the real-world programs? I have yet to see it. We've done mutation testing on libs but we've yet to find a real bug. But getting to 100% test coverage has exposed lots of bugs, and that's a prerequisite for mutation testing (ish)... Take a look at mutmut for some inspiration on more mutations: the mutations should be fairly straight forward: https://github.com/boxed/mutmut/blob/master/mutmut/__init__.py I've added mutations when we've found bugs that the system didn't generate mutants for.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [boxed/mutmut/.../**__init__.py** (master → 01f15f9)](https://github.com/boxed/mutmut/blob/01f15f950f068c327b32b16d8741b8600d94ebae/mutmut/__init__.py) ---- 
appreciate the hard work. I know it takes a bit of time. /salute 
You can do this even natively with the new Decodable protocol 
Ok great! Thanks for the insight 
If you’re asking that I’m guessing you’re gonna have an extremely difficult time doing the rest of the app. Short answer. Yes. 
This looks amazing. Thank you very much
Amazing 
This might be a bit better and is more generic than what is at that link. It looks like that's a naive implementation of [this pseudocode](https://en.wikipedia.org/wiki/Merge_sort#Top-down_implementation_using_lists) The code I'm posting here. - Is updated to Swift 4. - It replaces mutating arrays with using indexes, possibly saving creating a new copy with every mutation. - It will also work on anything that adopts `RangeReplaceableCollection`, not just `Array`. - I avoided using `inout` since that just makes a copy and returns a copy, not a reference. Thus there is no real savings over simply returning the new object, it really just makes the call more difficult to grasp. A few things still bug me: - The need to have all parameters be `RangeReplaceableCollection`, it's a real pain to just use `Collection` because there's no way to construct an object through that protocol. - The need to explicitly construct a new object instead of passing on the split in this sort of call: mergeSort(list: T(list[..&lt;mid])) This is because, for some reason, `list[..&lt;mid]` returns `T.SubSequence` and can't easily be turned into `RangeReplaceableCollection` or `RangeReplaceableSlice`. func merge&lt;T: RangeReplaceableCollection&gt;(left: T, right: T) -&gt; T where T.Element: Comparable { guard !left.isEmpty else { return right } guard !right.isEmpty else { return left } var result = T() var leftPos = left.startIndex var rightPos = right.startIndex while leftPos &lt; left.endIndex &amp;&amp; rightPos &lt; right.endIndex { let (leftValue, rightValue) = (left[leftPos], right[rightPos]) if leftValue &lt;= rightValue { result.append(leftValue) leftPos = left.index(after: leftPos) } else { result.append(rightValue) rightPos = right.index(after: rightPos) } } result.append(contentsOf: left[leftPos...]) result.append(contentsOf: right[rightPos...]) return result } func mergeSort&lt;T: RangeReplaceableCollection&gt;(list: T) -&gt; T where T.Element: Comparable { guard list.count &gt; 1 else { return list } let mid = list.index(list.startIndex, offsetBy: list.count / 2) let left = mergeSort(list: T(list[..&lt;mid])) let right = mergeSort(list: T(list[mid...])) return merge(left: left, right: right) } let unsorted = [1, 0, 2, 5, 4, 3] print(mergeSort(list: unsorted)) // "[0, 1, 2, 3, 4, 5]" 
IMHO this would be much more useful as a website where you could jump to code examples. The [lodash docs](https://lodash.com/docs) are a good example.
Bro.
If the sample pdf is any clue, it seems like a great book!
Oh so in a large company this work is **usually** allocated to a backend developer rather than an iOS developer?
Do you maybe mean Cordova or Electron?
No, the project I'm thinking of didn't have any UI stuff in it. It was only the model code that was cross-platform, not the UI. 
More like **always** than **usual**
Some companys use Microsofts ASP.NET. For chats u would use the Signal-R package.
No clue. I googled using your terms and found this. No idea if it is what you want. https://github.com/ReduxKit/ReduxKit https://www.google.com/search?client=safari&amp;rls=en&amp;q=redux+store+in+ios&amp;ie=UTF-8&amp;oe=UTF-8
Facebook Messenger uses a distributed, service-oriented architecture: https://www.facebook.com/notes/facebook-engineering/scaling-the-messages-application-back-end/10150148835363920/ As of 2014, SnapChat was being run on Google App Engine - http://www.businessinsider.com/snapchat-is-built-on-googles-cloud-2014-1?IR=T Not sure if there are specific applications in wide use for chat back-ends, but I would say that "service-oriented architecture" is probably the closest to a generic "best practice" that is common across all large tech companies. At this large scale, there's no monolithic back-end powering everything - each part of the pipeline gets broken into smaller self-contained services that pass data between each other and for each service to have a dedicated team assigned. SOA allows services to scale in a 'mesh' formation where each service can be scaled up and down independently, as needed. It adds a lot of complexity that is required at large scale but is just overhead if you don't need it - stick with a simple, monolithic, off-the-shelf back end as long as you can &amp; throw more (cheap, commodity) hardware at the problem until it becomes cheaper to hire a (expensive, hard to hire &amp; retain) development team to refactor the application to a service-oriented architecture. If Google App Engine is good enough for Snap it's good enough for you.
And it's pretty much never node.js
Generally, you would have a fully custom solution (not Firebase or anything like that). Now the language of implementation can be pretty much anything (including Swift, although none of the big ones use it), but an emphasis must be put on modularity (somebody already mentioned microservices). Generally you would have: - Multiple independend backend systems that can be spun up on demand (these days Docker containers running on AWS or whatever) - A fast, powerful database (very important to optimize this step - if searches are rare SQL might not be the best solution because of lookup times) - Load balancers and CDN (Content Delivery Network) endpoints with heavy caching. Without having all of these things working perfectly in tandem, you won't be able to scale anything to Snapchat, Messenger level (and even then - what I've mentioned is just scraping the surface)
Some companies look for "full stack" and that would be the full backend. Some even ask for "full stack, dual platform"... that means iOS/And and backend, which is a LOT to learn and keep up on. There's a few choices for backend, some even use Swift. (Server Side Swift).
Check out this link: https://www.appsight.io/ This gives you what frameworks apps are using. 
The kernel will notify apps when memory is running low, and NSCache will respond to that notification by evicting items.
Wow, this is great. I really like that examples of things are really laid out.
Twilio also has a solution for building this without having to create your own backend. I’ve also used signalR and sql server.
Working on fix my first app which has been rejected 3 times due to minimum functionality. I working on integrating new features on 
Maybe not the answer you were looking for, but you can use any language that compiles to C in Swift. So you can do Javascript -&gt; C -&gt; Objective C -&gt; Swift. All you need is a good Javascript -&gt; C transpiler and a lot of willpower. 
There is the JavaScriptCore framework that is built into iOS, which allows execution of JavaScript and interfacing to Objective-C / Swift
It could be that the library I'm think info leveraged that. All I remember for sure is that it was installed npm.
WOOOOW! DAMN. Some of those apps use a LOT of 3rd party stuff. Just looked at one and it had a TON of aftermarket stuff. https://www.appsight.io/app/zumper-apartment-finder
The [docs](https://developer.apple.com/documentation/swift/string) are always helpful. Relevant methods: String.hasPrefix(_:) String.hasSuffix(_:) String.contains(_:) 
I don’t know what your knowledge level is but I am currently taking a course on swift iOS development at a university and we are using the official Ebooks provided for free on the Apple bookstore. I already know how to code in other languages and I am finding it to be a very good primer on Swift 4.
The ebooks from Apple are pretty good, https://www.hackingwithswift.com is a good option too.
There are a lot of things you could mean by “backend”. Since others took one approach, I’ll take another. Many chat only apps use something called XMPP as the messaging protocol. I know a little bit because I worked for a chat app and we researched a lot of competitors to figure out how they resolved the problems we faced. As far as hardware and language stack, it’s entirely customized. Some pull an xmpp open source project and customize it. Some build from scratch. AWS or whatever could be the cloud hardware. I actually don’t think xmpp is the greatest for chat protocols. It’s slightly dated and bloated (kinda like SOAP). I think Apple provides the push framework for this but it will only work for iOS apps. But it should be possible with minimal backend dev. 
As someone who has only worked with storyboards, can you point to some resources for getting started with XIB?
This is the best place if you want to get started with code https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA Hope this helps you :)
Look at firebase back end. Ray Wenderlich has a good article about using it to make a shopping list, it has a feature to show in real time how many people are connected, you could use this as a starting point 
thank you will definitely take a look at it!
I don't think you mean what you typed. XIBs are simply a data structure that allows you to visually build a view in Interface Builder. In a storyboard, if you remove the top level view from any view controller scene, you can think of the entire contents that would go there as one XIB. * Note: I often use this approach. It lets you use the storyboard as a skeleton and each scene has its own XIB that loads automatically if the top level view is missing. Doing it this way prevents multiple team members from editing the storyboard at the same time and creating a merge conflict. Previously, each view controller was represented with its own XIB through `initWithNibName: bundle:`. But there's no reason why you can't use an XIB for any view. Just create a class that represents the specific view and within the init method, make sure to make a call to a method that will load the XIB. Call it loadXIB, if you must. Then within that function, use loadNibNamed() like so: `Bundle.main.loadNibNamed("myXib", owner: self, options: nil)` And then add this subView to a top level view property in the class you wrote for it. ####Two Approaches and Examples: https://stackoverflow.com/a/13534688/1058199 https://medium.com/@brianclouser/swift-3-creating-a-custom-view-from-a-xib-ecdfe5b3a960 ####Reference: https://developer.apple.com/documentation/foundation/bundle/1402909-loadnibnamed
&gt; The pros outweigh the cons Would you like to elaborate? Unless your layouts are trivial I don't see many benefits to doing things in code. The lack of variables is probably the one of two major drawbacks that I've found in practice, and that mostly only matters during prototyping. I have xibs with 100k+ lines, I can't imagine how unreadable that would be in code. God forbid you need to use basic auto layout features that the VFL doesn't support, like centering. The other major drawback is the opaque id attributes making merging an utter bitch. Again, unless your layouts are trivial, that's not going to be all that much easier when your layout is in the form of a monstrously huge source file
Storyboards are lame.
FYI, there are built in functions for these. But, if you want to do your own, what happens when you step through the debugger? What do the variables report?
Personally I find layout far more readable in code than constraints nested beneath various views in a storyboard hierarchy. VFL is useful for certain things but 90% of the stuff I write uses anchors - they’re really easy.
I create a storyboard for every viewcontroller, that way I don't have the issues of having 1 huge storyboard and I have the cons of storyboards. The name of the storyboard and the viewcontroller are the same, this way I can create a function in my viewcontroller, storyboardInstance() which will fetch the storyboard by using the name of the viewcontroller. I really like this approach. If you have more questions regarding this, let me know. 
Any opinions about layout libraries? Some time ago I wrote an experimental one, but it didn't gain much traction: https://github.com/szotp/Arrange The point was to have shorter syntax and make the view hierarchy more obvious. Would appreciate opinions if that kind approach actually makes any sense.
If you have experience programming in other languages, I’d check out the official Swift programming book. I treat it more as a reference guide than a book that I read cover to cover. It’s focused only on the language. I suppose you could find a book that goes through the details of the standard library, concepts like type erasure, and other design paradigms. A book like this might be useful depending on your background or learning style but you can certainly learn this stuff on your own, too.
&gt; God forbid you need to use basic auto layout features that the VFL doesn't support, like centering. There's at least 2 other ways to add constraints in code besides VFL. One is usually even more concise.
&gt; each scene has its own XIB that loads automatically if the top level view is missing Can you explain this in more detail? Let’s say I have a storyboard with a single controller. I delete its top level view. What xib will automatically load in its place? Bear in mind I am know the techniques described in the links, but I’m quite confused by this “remove the top level view”.
&gt; I delete its top level view. What xib will automatically load in its place? The XIB with the exact same name as the view controller class. Try it out with a simple case. It's automatic. It's been that way for about at least 9 years. Here are the comments from the Objective-C header file for ViewController.h, but it should also work in Swift: UIViewController.h /* The designated initializer. If you subclass UIViewController, you must call the super implementation of this method, even if you aren't using a NIB. (As a convenience, the default init method will do this for you, and specify nil for both of this methods arguments.) In the specified NIB, the File's Owner proxy should have its class set to your view controller subclass, with the view outlet connected to the main view. **If you invoke this method with a nil nib name, then this class' -loadView method will attempt to load a NIB whose name is the same as your view controller's class.** If no such NIB in fact exists then you must either call -setView: before -view is invoked, or override the -loadView method to set up your views programatically. */ - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil NS_DESIGNATED_INITIALIZER; 
No, I did not try any libraries. arranging views and applying constraints literally depends on the developers perspective. Some start from left to right, some the other way around. The UIKit is quite powerful in this. I usually write some View Extension to reduce my code. Especially the constraint code has a lot of boilerplate code. a simple extension or a util method did the trick for me. Good luck with the library. I will give it a try and comment there.
Doesn’t work in swift. So. Storyboard with 1 view controller. Delete view. Create xib with same vc name. (Added fileowner, tried with and without) The viewcontroller.swift file doesn’t contain any code. I checked and the initWithNibName is not called
You don't need to call initWithNibName at all. I'll test it now. 
&gt;3.) I feel the most "noobish" when I'm coding and XCode tells me something about unwrapping so I just stick an exclamation point at the end of it. Does everyone do this, or do I need to study a lot more so I know when they are used on my own? No, definitely do NOT do this. Unwrap the optional using an `if let` statement or a `guard let` statement.
The view outlet on the XIB's top level view needs to be set to File's Owner. 
` If no such NIB in fact exists then you must either call -setView: before -view is invoked, or override the -loadView method to set up your views programatically.` From the Swift UIViewController header file: @available(iOS 2.0, *) open class UIViewController : UIResponder, NSCoding, UIAppearanceContainer, UITraitEnvironment, UIContentContainer, UIFocusEnvironment { /* The designated initializer. If you subclass UIViewController, you must call the super implementation of this method, even if you aren't using a NIB. (As a convenience, the default init method will do this for you, and specify nil for both of this methods arguments.) In the specified NIB, the File's Owner proxy should have its class set to your view controller subclass, with the view outlet connected to the main view. If you invoke this method with a nil nib name, then this class' -loadView method will attempt to load a NIB whose name is the same as your view controller's class. If no such NIB in fact exists then you must either call -setView: before -view is invoked, or override the -loadView method to set up your views programatically. */ public init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) 
You could use Xcode and the uibuilder tool inside it with very minimal coding. A nice site I like to use is Ray wenderlich, covers lots of different things. When I first started coding I was learning website and server development languages. W3schools uses JavaScript for examples and has a lot of simple demos. That knowledge of knowing what a for loop or a closures are for instance will take you a long way with any language.
Thanks for recommending Hacking with Swift! As the author, I also think it's rather good :) /u/bzhar93: feel free to ask me any questions either here or on [Twitter](https://twitter.com/twostraws).
Like this? Wishbone - Compare Anything by Science Mobilehttps://itunes.apple.com/us/app/wishbone-compare-anything/id836071680?mt=8
Alternatively, if it's a new-ish project, you can consider switching to Carthage, which allows you to use the `--no-use-binaries` flag, and build the library from source.
You’re right that not *everything* needs to be safely unwrapped, but not unwrapping your own code is not a good general rule, either. There are lots of things that can fail even if your code is perfect. For example, you might be parsing an Int from user input. Or you might be using data that may or may not have been set, depending on which parts of your application have been interacted with so far.
I don't think that's a good practice. Best case is that your app just runs as usual, worst case is that your app will crash. Especially when using code you didn't write you have no way of knowing if you can just force unwrap. using `if let` or `guard let` literally takes 5 seconds more and makes sure your app won't just crash. When using code you wrote yourself, I could understand using `!`
Haven’t tried it myself, but maby this library could point you in the right direction: [fuse-swift](https://github.com/krisk/fuse-swift) 
&gt; fuse-swift I am currently using fuse swift and finding is very slow for large volumes of records
Ah, sorry. I’m on mobile. Is it out of the question to use an online search engine service?
Firebase can be ridiculously slow when dealing with high concurrency. It’s fine for little starter projects and stuff FWIW
Not sure why this is being downvoted. .NET core is free, runs on a Mac, and you case use visual studio code as your IDE next to Xcode. That’d be your API, then you can use Entity Framework or any other ORM to connect to a database. That’s the open source route, a lot of companies will use the paid versions of .NET, which can get pricey. C# + intellisense is the most mature programming language I’ve used, it’s modern, fast, and contextual. (Looking at you Xcode and your 5 second wait times after I type ‘.’)
DONE! Sorry I had to do some work first. I love it! Absolutely great! Thanks a lot! Gab
Looking at your code at a glance (sorry just waking up), it looks like you’re pulling the data from your Bundle and parsing it every time the function is called, in addition to searching for matching text. Maybe try loading your search list and parsing it into a CoreData database only once and then calling your search function to find possible matches using predicates. Just a thought. 
I didn’t say I’d force unwrap. I meant that for code I didn’t write I will unwrap using `if let`. But for code I did write I’ll more than likely force unwrap. Not sure why I’m being downvoted when I’m the Apple books they pretty much say to do just that lmao
Pretty sure this could be done with the Spotify API. Research something called PlugDJ. It has been discontinued now but was quite similar in principle.
well, that makes more sense now. I guess the downvotes are because it sounded like you'd force unwrap code you didn't write, at least it sounded like that to me
Found the answer: Seems like there's a few ways to solve this. I was doing a tutorial for Realm that used Pod for update an Realm didn't work, yet others did work using Pod. The solution I used was to download "the latest" which wasn't for Xcode 9.2 / Swift 4.0.3. So the error with the Pod was saying the Command Line Tools were not from Xcode and I couldn't find a version reference and every update didn't address it. The solution that worked was found here: https://stackoverflow.com/questions/46726077/module-compiled-with-swift-4-0-cannot-be-imported-in-swift-4-0-1?rq=1 &gt;Or just go into Xcode preferences -&gt; Locations and check/change the command line tools to Xcode 9.1. You should be set then. It works, I'm going to rework the project to get rid of the manual frameworks. I guess the manual frameworks method isn't so safe without the source code. I wonder why Swift is so sensitive to these minor version changes. Going from 4.0.0 to 4.0.3 breaks everything?
Swift isn't ABI stable yet, so minor changes can break binary compatibility. No one should really be shipping precompiled Swift binaries for that reason. Should be better with the stable ABI in Swift 5.
How is code better? Without examples, you're just stating an opinion.
NO NO NO. Create 1 storyboard, remove the top level view in each scene and use the storyboard as a *skeleton* and use an XIB for every view controller. Read my other comments on this.
I remember hearing about that, but TBH, I was an ObjC guy for years. I skipped Swift 3 and waited for Swift 4, so I'm not really used to all these things. I like a lot of things about it, but some of these things should be a bit easier to find answers to.
Not really looking for an opinion on this. This is how I implement my views. 
hey thanks for the response but i made a new post explaining the app im trying to recreate in this post: https://www.reddit.com/r/swift/comments/7zoovc/how_can_i_recreate_this_app/ I'm wondering if this type of concurrency would be good. Let's say hypothetically, 100 people are voting at the same time. Would this be a problem for concurrency with firebase? Do you know better alternatives to firebase for this? Thanks
Thank you, i have experience in java and python and android development, I’ve searched for a book to cover every detail of swift language and I couldn’t choose any of them, i think i’m going to try Apple’s official ebook 
Since there’s only one ridiculously low rate anchor here, I’ll chime in that my rates are $150-200 per hour, and while I’d be happy to take on a project like this, I wouldn’t do it for a fixed sum. I will happily estimate and talk through decisions that would make the total amount of work greater or less, but as it’s your app I don’t think many top devs would want to take the financial risk of developing it for a fixed fee. (Note: I am not currently available until 2019)
ITunesConnect won’t let you upload a binary with the same version and build number as an existing binary. You need to increment the build number of the app inside Xcode, then rebuild the app, then upload it to iTunesConnect. You cannot delete builds as far as I know.
I have done that. I have submitted new build with different build numbers, but it won’t let me change the third party content setting. (Which I have previously set as yes) Is there a way I can change it? 
Yes, you should be able to reject your current developer build, from the same screen where you submitted the app for review. The option should also be available on the resolution center, where you saw the app review ejection notice. After you have rejected the binary, you can create another app version, and use one of your later binaries.
Sorry I’m a little confused here. I’ve have tried to create new app versions but I’m not able to since it’s not an app update, it’s initial release. 
The build numbers in Xcode mean nothing. Change it to whatever number you want then change it on the portal after it’s uploaded. 
&gt; If I help you, my fee is generally $10 US an hour, with a minimum fee of $20. Yeah hire this guy. He's a fucking Walmart greeter or something. I'm sure he'll be under deadline and his code will be maintainable.
You can add storyboard references in storyboards to provide UI flow logic without having to hard code it into your view controller layer.
You can use an embedded view to abstract the nested views. Makes it easier to view in a storyboard.
XIB was the file format before storyboards. They should be extremely rare in a new project. Storyboards added new features and UI flow design that XIBs couldn't use properly.
I'm looking for the same thing. Most of it can be implemented easily with AttributedText besides the bulleted list which is a bit more of a headache and will probably not convert to HTML. The library I found uses UIWebView which is now deprecated. Hoping to find something with WKWebView instead of building it myself.
A few hundred is fine. When dealing with a couple hundred K the load graphs get ridiculous and the onus is on you to optimize your data structures. 
I see why cs fundamentals are so important thank you
You don’t have to pay 150 usd / hour to get a good developer. Keep in mind a lot of people living in developing countries do not run on the same standards. Myself, I’d charge 35 usd / hour, but it’d be too expensive for local projects. 
The Facebook Swift SDK is up to date. If you check https://github.com/facebook/facebook-sdk-swift/releases you’ll see that it is Swift 4 and Xcode 9 compatible. And here’s Facebook’s tutorial for implementing login with the Swift SDK: https://developers.facebook.com/docs/swift/login
Thanks but that was exactly what i was looking at all day. I just can’t get it to work
No hourly fee. A flat $10 million and I’ll even throw in some of these other clowns. I know how this works, I’m almost through season one of Silicon Valley.
There are some rules regarding versions and build numbers. The build number needs to increase for each upload with the same version number. The version number must increase after each release to the App Store.
Sorr I read this message late and it will not be possible in the weekend. I’m do it monday morning. Have a noce weekend
I had a lot of issues with the Swift Facebook SDK so I ended up switching to the Obj-C version. It sucks having to deal with all of the implicitly unwrapped optionals (always unwrap them with an “if let” anyway), but at least the SDK has been stable. 
Adding in-app purchases to my jigsaw puzzle app for iOS [Jigr](https://itunes.apple.com/us/app/jigr/id991209096?mt=8). Been putting it off since November last year, finally got some time to work on it.
I think the point being, hiring someone from a developing country who doesn’t “run on the same standard” is a great way to buy really bad, unmaintainable code for bargain basement prices. Every project or feature I’ve dealt with that has been contracted from developing countries has been a mess. Buggy, poorly functioning, unmaintainable, junk that we’ve had to trash and completely rewrite. I’m sure you can find good developers in developing countries, but the market there is so flooded with bad developers good luck finding them. 
You might as well end up with unmaintainable code hiring 200 usd hour developers. But my point is that not every developer charging 30 bucks is a mess. If you are in a position to pay 5 times more that’s great. For those that don’t it still is a good arrangement, as long as they can separate the good from the bad, like in everything. Gotta admit it makes it harder for the ones that try to keep learning and actually care about the correct way to do stuff when we try to land a gig abroad. 
Not to mention that you really shouldn't price by hour. Instead you should bid the app out and see how much it will cost to complete the project, including costs for additional features, maintenance, bug fixes, and so on. It's generally up to the developer or a good project manager to come up with a time and price estimate. Someone commissioning an app might not know all of the issues involved in creating that app and therefore can't come up with the correct amount of time involved in creating it. Charging per hour is just going to end up to be extremely frustrating for all, unless you're contracting for a company with an excellent project manager.
$30 an hour? Wow, you're really lowballing here. I certainly would look very hard at anyone who would program for so little. The industry rate is more like $100 an hour and could be much more depending on the skillset. The key is not to get it done as quickly and cheaply as possible, you want a bug-free, well-designed app which is extensible and has a user-friendly interface. At $30 an hour I'd worry a lot about the quality of the work.
I totally agree with this. I've worked with developers from these types of countries and the standouts charge much more than $30 an hour because they can. Someone charging that little just doesn't have the experience to understand they can charge a lot more for quality work. It's a pretty good sign that they are inexperienced in at least one way and probably also in many others. I'd worry that the end product would be very difficult for another developer to understand and would require a ton of rework down the road. Not to mention the differences in language and custom can cause tons of project delays and issues. Most of all, get code samples, examples, do a proper interview where they code something in front of you. It's so easy to show off something as your own, then take the cash for "working" on the project, and either hand over a crap result or just abandon it. Pay in installments, once per milestone and leave a good chunk for the final product. *DO NOT PAY HOURLY!*
I might have to jump on this. Thanks man!
Yes, `Optional` can be confusing and when you're teaching you should try to hand out information in manageable chunks but please please please do not [teach this sort of construct](https://www.hackingwithswift.com/files/hacking-with-swift-sample.pdf): let items = try! fm.contentsOfDirectory(atPath: path) So many people abuse the forced unwrap operator because they don't know better or they don't care. Teaching this to them from the start is setting them on the path to bad behavior and teaching bad habits. It takes so little to handle it correctly, teach it to them from the start. That will avoid a ton of run-time crashes and headaches later. guard let items = try? fm.contentsOfDirectory(atPath: path) else { fatalError("Directory not found: \(path)")} The simple use of `guard`, `?`, and one extra line and the error is handled properly. ##### Edit: I want to add that I read through your Hacking with Swift sample PDF and there's a lot of great information in there. I'm sure it helps many new Swift developers and gets them on the right course for working in the language. You do explain `Optional` properly and give warnings on the usage. I only comment on this small part because of the prevalence of `Optional` and forced unwrap abuse in the wild, a lot of new developers overuse forced unwrapping.
Thanks for your comment! This situation you’re citing is reading the resource directory of your bundle; if that fails the app should crash, and adding more code around that merely obfuscates the issue. I encourage readers – and everyone, really – to force unwrap optionals in a handful of situations and I’m not alone in this practice – the objc.io writers do exactly the same. Elsewhere in the book optionals are unwrapped normally. 
The difference is that with the use of `fatalError` it's crashing with a sensible error message and not just an anonymous crash. I'd encourage that at every possible source of crashes, it makes debugging the issue much more straightforward. Yes, this should not crash and it indicates a deeper issue with your program or build system if it does. However, we're talking about new developers here. They need to learn that the `!` symbol is not to be taken lightly. It's there for a few reasons but the use of it is a bad code smell and should be treated as such. If you look in any forum where new Swift developers are asking questions quite a few of them are having problems simply because `!` is liberally sprinkled throughout their code. `Optional` is a key design feature of Swift and it should be addressed early and taught thoroughly since it avoids a lot of pitfalls that other languages fall into.
I agree with this so much. Do you have any tutorials available? :D
I did read more and I saw your discussion on the usage. I'm glad you have that disclaimer. I simply worry when I see the usage in any teaching materials. I participate in Swift help on many forums, including Reddit and Stack Overflow, and I see forced unwrapping constantly abused by new developers. I feel that opportunity should be taken to discourage its use, unless you are a fairly advanced developer and have a very good reason to use it. As I've said, forced unwrapping does have its place but the misuse of it is incredibly prevalent in new developers seeking help on their code. Clearly, many are learning bad habits and ignoring the alternatives. We have to hammer home that mishandling `Optional` is a huge source of many crashes and odd program behaviors.
Unfortunately I haven't written any, I tend to give direct assistance on questions and code that people post. I've toyed with the idea of writing a few but there's so many good ones out there and if I did do one it would have to cover a new angle rather than duplicating other's efforts.
I think we agree! I’m going to add a comment to that particular line doubling down on why it’s being done here and why force unwrapping will cause problems unless you’re careful. It’s something that can’t be reiterated enough when folks are learning.
Would it make sense to you give FULL access to first project for free that is being build here: https://www.hackingwithswift.com/files/hacking-with-swift-sample.pdf There are 39 projects totally so giving out 2% of the content would help me to make buying decision :)
Yeah, it can't be emphasized enough. Like all programming languages there's many ways to shoot yourself in the foot. Swift does a great job setting up an environment where the right thing is mostly done automatically but no matter what there are sharp corners, otherwise the language would be too weak to handle some of the more difficult tasks. Enjoy your cakeday and good luck on your sale!
Nice, a GitHub link for the projects. That's perfect if you know how to use git and can clone the projects while reading the books. Great choice.
Great. Do you go in depth with cell dequeing? Because I sometimes have problems with table view cells which have remote images 
dont know if this is relevant but, when I have worked with images in tableviews I have noticed that there is a huge lag inside of the cellForRowAt fuction if you are modifying those images in ANY way. If you are downloading a 1200px wide image and resizing it to 300px to render in the cell this will block the main thread and cause a variety of issues as cells enqueue and deque
Well I am only downloading 152px wide image without doing any modifying :) And notice that for demo purpose I set my internet connection to slow to more easily demo the problem
This is one of the trickier parts of dealing with tableviews/collectionviews IMO, and so it’s one of the times when i think it’s ok to use a third party library (such as Kingfisher, Heneke, etc) because they handle all of this for you as well as caching the downloaded image, too. If you want to do it without any dependencies then you can take a look at their source code to get an idea of how to fix this. Also, you might want to consider moving the network requests from cellForItem to willDisplayCell because Apple states that a cell is not guaranteed to be shown to the user, just because it has been dequeued. This means that images may be downloading images that the user never sees. 
$50-150/hour seems reasonable. There are a lot of outsource companies in Europe who charge clients 50/h.
Actually I am doing network request in cell's didSet https://github.com/henrikra/swift-movies/blob/master/SwiftMovies/MovieSectionItem.swift#L18 Does that make any difference? I have never seen anyone use willDisplayCell, can you show some example where you found it handy?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [henrikra/swift-movies/.../**MovieSectionItem.swift#L18** (master → 13cde84)](https://github.com/henrikra/swift-movies/blob/13cde8423ef9f6c37733600f0f6fc9dbff17e55c/SwiftMovies/MovieSectionItem.swift#L18) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dursa15.)
Agreed. And in many iOS jobs, implicitly unwrapping is a big no, and will make your code get rejected during review.
Okay nice. Where I can find source when you referred to "Apple states that a cell is not guaranteed to be shown to the user, just because it has been dequeued"?
That's great, I hope it's helpful! I tend to over-scope every project I spend time on and never reach release; I made a goal of getting the basic functionality out the door before adding features.
Manual Login Flow + Webview is a million times better. No way am I putting a Facebook "SDK" in my app. You realize that that SDK runs at the same permissions level as your app right? With a webview they sign in and you get a redirect with a token. Send that to your server to validate and generate your own Auth token from that. 
The cake is a lie.
Blame Realm for that. They seem to be using Swift in a way that doesn't make a whole lot of sense right now. (Do you trust them with other technical decisions?) Competent companies are shipping Swift SDKs by writing in Objective-C, and adding Swift annotations. It's a bit more work for them but it won't break everything when you upgrade.
appreciate it but I managed to figure it out so all is well now but i really appreciate it
No problem at all
Very interesting. Gonna be honest, after years of the insane Swift safety circlejerk where you’d get hanged for even using a plain string without wrapping it in fifty constants, structs and enums backed by a micro-framework of extensions to make it “safe”, this feels weirdly out of place. But I’m excited what people will create with it. 
 parseCard(call: str) { card in //// use the card here }
Be thankful swift does not force that on UITableViewCell reuse identifiers AppKit says hello
*Yet.* Given the changes to `NSImage`, table view cells, storyboard identifiers, and so on, I suspect it will happen in UIKit next. The only way to avoid riots will be if Xcode steps up its codegen game.
Yeah I really feel like they're testing the waters with AppKit. Glad to see fellow macOS devs here :)
[Have you tried something like this?](https://www.google.com/amp/s/makeapppie.com/2015/01/27/tab-bar-controllers-in-storyboards/amp/) If you’re still having trouble shoot me a PM and I’ll boot up my MacBook and try to help you further. 
I don't think so. Try this https://www.youtube.com/watch?v=iSszeW1aH6I it's work for me :) 
&gt; Swift Evolution proposal SE-0195 is an attempt to bring Swift closer in behavior to scripting languages "Scripting"? That's a cute way to say "their previous compiled general-purpose programming language"! The SE introduction even begins by mentioning the analogous features in C#, Scala, and Objective-C. Static-typing proponents will take any opportunity to take a swipe at dynamic typing. :-) I never understood quite how we were expected to build a dynamic system with Swift -- like the cool NeXT demos from 25 years ago -- short of writing our own dynamic runtime. Now we're finally starting to get an answer.
I think if you try to contact the dev for MIKMIDI he will get back to you. I asked him once about initial set up and he responded I think
Honestly, this is a classic iOS interview question, so it’s not too hard to solve. First thing, you will need some sort of local cache of images so that you aren’t requesting the same image every time the cell comes on screen. To start this can be just a dictionary of the NSURL for the remote to the UIImage instance. Make it a class property on the cell class. When you need to load the remote image, first check the cache to see if you have it already. If so, set the UIImageView image and you’re done. Otherwise, you need to request it. Use a NSURLSession data task with the appropriate URL and supply a completion block. But before doing so, store this URL as a property on the cell class so you know what URL this cell is currently fetching. Now, inside the data task completion block, you need to check that the URL the cell is loading is still the same by comparing it to the URL in he NSURLResponse. If they are the same the. You know you can set the image to the UIImageView. If not, then you know that the cell has been reused before the response was received. Either way at this point you can save the received image into the cache mentioned above. This should get you off the ground, but there are a few more things you can do to make this more robust: * implement this functionality as a category on UIImageView. That way you can use it for other cell classes and what not * synchronize access to the cache, since this is mutable state shared between threads * bound the size of the cache, using LRU or some other metric
Really wanted to give it a go but wasn't able to because of the project version. What version of XCode did you use for this?
Xcode 9.3 beta 2 because my phones are currently running iOS 11.3 beta, in order to test the app I had to use Xcode 9.3. But I it works on the stable version of Xcode 9
Yeah I'm on 9.2 and I'm getting a `failed to load project... incompatible project version`.
You mind documenting here briefly how you achieved it?
Oh right - I misread that! Thanks!
Check out my microframework called Webmidikit https://github.com/adamnemecek/WebMIDIKit
thanks, that looks promising but what is "Swift Package Manager" ? can i just download it and stick it in a folder? 
that looks complicated, you have to realized i've only been at this for 3 weeks. 
perfect time to learn
i just dragged the midikit folder to my project, it works. :P
Neat stuff, could've saved me some time last week! :)
I feel like I’ve seen dozens of these. Not sure why no one finds the ones people have already made 
Recently I saw one of these, https://app.quicktype.io/
That's the best one out there, IMO. I particularly like how it's able to figure out which properties are optional and which aren't.
You could set up a background timer and just call your update function from within the timer. 
Wrap it up in another object which handles the repetition. Any time you have some very specific duty, don’t try to shove it in a subclass or into your view controller; consider making a new class which will be responsible for this task, and this task only. ``` class LongPollingRequester { func poll(url: URL, every interval: NSTimeInterval, onCompletion completionBlock: CompletionBlock) func stopPolling() } ``` Internally this class will just set up a new NSTimer. Every time the timer goes off it’ll shoot off a request and when that completes it’ll call the provided handler with the response. Before starting a new request it will check if it has been stopped. Implementation is left as an exercise to the reader. 
Okay, any tips for running it after the app closes in the background?
You have a 10 minute limit (iirc) in which you can do background work. Essentially it’ll just require that the long-poller class create a background task but not tell the AppDelegate that it’s done after the request has completed. In order to be a good iOS App Citizen, you should still terminate eventually (_before_ the OS kills your app) and consider polling less frequently if subsequent requests don’t show any new data. I can give you a more detailed response when I get into work (in roughly an hour). 
Thank you. I wanted to make an app where the user could go about their business while it does a task for them while they are connected to WiFi, but if it is only possible to do 10 minutes then I will probably have to evaluate different options.
A Things3 todo generator. they announced the URL and swift library so I made an app that will automatically add the weekly todo items with a little more detail than the repeating todo option in the Things3 app will allow. here is the GitHub link if you would like to take a look: https://github.com/WillCraig/Things-Generator 
This might help to acquire the coordinates: https://www.youtube.com/watch?v=RjVrSfQNkbM&amp;t=77s
Ok I'll talk a look later, thanks 
So you are going to want to look into [background tasks](https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtask). Essentially, you begin a background task and iOS gives you an identifier for that task. Say you refresh every 30 seconds. When your app gets backgrounded, you can have your AppDelegate inform the LongPollers that it has entered the background, at which point the LongPoller will mark the Date at which it entered the background. From there you can check if you're within some time frame, say 7 minutes, of the backgrounded time. If you exceed your own limit, your LongPoller can now `endBackgroundTask(identifier:)` allowing the OS to gracefully shutdown your app and end the updates. If you have a server, one work-around is to not long-poll at all, but instead send a "Silent Notification" to the user when an important change has happened. This will allow you to briefly reload some data in order to stay up-to-date. You can read about [Silent Notifications here](https://stackoverflow.com/questions/36694963/what-is-silent-push-notification-when-does-the-device-receive-it). One of the benefits of this is that you move the reload logic to the server and don't force the user's app to send of redundant network requests. Unfortunately there is no simple way of going beyond the 10 minute mark. Moreover, why is that necessary? I don't intend for you to spill the beans on your app too much, but why is it important for an app to stay up-to-date when it's not open? 
I am not asking to be hired. He asked for ball-park price information and I gave him my price. The $10 US hour rate is in addition to my other rate, and it would only be applied if I had to help with the design document.
Writing new articles! Just published [What's the biggest mistake new iOS developers make when coding](https://roadfiresoftware.com/2018/02/whats-the-biggest-mistake-new-ios-developers-make-when-coding/) and [How to parse JSON with Swift 4](https://roadfiresoftware.com/2018/02/how-to-parse-json-with-swift-4/). Hoping to help people become better Swift and iOS developers.
Interviewers always want to see experience, so releasing an iOS app is great. The CocoaPods libraries wouldn't matter very much to me, but it'd be nice to be able to see how you structure your code, whether you [make big mistakes](https://roadfiresoftware.com/2018/02/whats-the-biggest-mistake-new-ios-developers-make-when-coding/), whether you use good method and variable names, and everything else you get from seeing someone's code.
Just adding onto this part of the discussion, what if I want it to be nonstop? Is it really wise to set a timer with 0 wait? Any way to have a callback and ensure that the async is finished?
Are you sure that IBOutlet set in correct place? Can you provide screenshots of IBOutlet in Interface Builder and code where myMapView placed?
Posted some images here: https://imgur.com/a/ZXkAB
Posted some images here: https://imgur.com/a/ZXkAB
Try typing in the type again - the module shouldn’t be empty. If that doesn’t work maybe try giving your view controller a better name. Although I doubt that would compile if it was possibly conflicting. 
Try typing in the type again - the module shouldn’t be empty. If that doesn’t work maybe try giving your view controller a better name. Although I doubt that would compile if it was possibly conflicting. 
Thanks, I just added the module manually and it worked :)
You get 177 seconds of background time currently, in all recent versions of iOS. This can be cut short at any moment though
Sorry for the late reply - yes I used the Firebase API. The HTTP API works as well, but it's VERY clunky for retrieving all the posts and comments. The Firebase API was much faster and more performant.
Backslashes signal a Swift keypath. They were introduced in Swift 4 ([see here for the basics](https://www.hackingwithswift.com/swift4)), and, by curious coincidence, I wrote an [article just today](https://www.hackingwithswift.com/articles/57/how-swift-keypaths-let-us-write-more-natural-code) about how they allow us to write more natural Swift code.
Hey, I learned Swift from you! Thanks mucho
For anyone wondering about the weird syntax excluding the backslash, it’s the [CoreStore](https://github.com/JohnEstropia/CoreStore) library. Basically, but not neccessarily, a high level wrapper around CoreData. I’ve used it in the past, it’s pretty nice. 
Here's my code that gives an example of what you want.. **self.mapView.camera = GMSCameraPosition(target: location.coordinate, zoom: 15, bearing: 0, viewingAngle: 0) self.placeMarker(latitude: location.coordinate.latitude, longitude: location.coordinate.longitude, marker: self.userMarker, imageName: userMarkerImage) } override func prepare(for segue: UIStoryboardSegue, sender: Any?){ if let destination = segue.destination as? LocationDetialViewController { destination.coordinate = locationManager.location?.coordinate } else { return } } func getLocations(){ print("entered getLocations") let ref:DatabaseReference = Database.database().reference().child("locations") ref.observeSingleEvent(of: .value) { (snapshot) in if let snapshot = snapshot.children.allObjects as? [DataSnapshot]{ for snap in snapshot { if let data = snap.value as? [String:Any]{ let lattitude = data["latitude"] let longitude = data["longitude"] self.placeMarker(latitude: lattitude as! Double, longitude: longitude as! Double, marker: self.locationOfInterestMarker, imageName: self.locationOfInterestImage) }//end if else{ fatalError("Can't get a snapshot") } }//end for }//end if }//end ref }//end getData func placeMarker(latitude: Double, longitude:Double, marker: GMSMarker, imageName: String){ let myMarker = marker myMarker.map = nil myMarker.map = self.mapView myMarker.icon = UIImage(named: imageName) myMarker.position = CLLocationCoordinate2DMake(latitude, longitude) } func mapView(_ mapView: GMSMapView, didTap marker: GMSMarker) -&gt; Bool { performSegue(withIdentifier: "locationDetailSegue", sender: self) return false } }//MapViewController** 
Here is my code that does what you want.. Notice here I'm making use of the coordinate.latitude and coordinate.longitude.. &gt;self.placeMarker(latitude: location.coordinate.latitude, longitude: location.coordinate.longitude, marker: self.userMarker, imageName: userMarkerImage) 
The easiest method for swift/xcode is to use cocopods. xcode will report some WARNINGS that are just backward compatibility issues that can be ignored. 
Really well explained and makes perfect sense.
nvm i got it to work. I used firebase facebook login authentication but thanks for the help
If you don’t want to re-clone it try running git clean -ffdx that would clean all the files which are not in GitHub. Make sure you committed everything you need. Than open it again. 
when u press button, just add this code; `if #available(iOS 10.0, *) { let generator = UIImpactFeedbackGenerator(style: .medium) generator.impactOccurred() } ` 
&gt; backslash in any language should mean “escape the following character” and nothing else Not sure I agree. In Haskell, for example, [backslashes are used to declare anonymous functions](https://wiki.haskell.org/Anonymous_function) (since it's the closest thing to a lambda on a US keyboard). I think that's a natural use for it, and their syntax is unconfusing. That said, I think the use in Swift is less clear. Backslash shouldn't be a value on its own.
Xcode
That is a terrible chunk of code. I honestly can't decipher what might be happening after reading it like 12 times. A class named `From&lt;T&gt;`?
If you have the .xcworkspace bec u have cocoapods, you can delete the xcworkspace file and pods folder then run ‘pod install’ again
&gt; let agent = transaction.fetchOne(From&lt;VAgentEditor&gt;().where(\.uuid == uuid)) It's from a database wrapper for CoreData. I've only been using it for a couple of days, so I'm no expert. But a quick glance at the source suggests that From&lt;T&gt; is a wrapper that sort of acts like a token that can be passed around. I didn't know that it was ugly code until you guys started mentioning it. I guess it's all what you're used to. This stuff is nothing to C++ STL code for pure ugliness.
Perhaps "any language" is hyperbolic, but Haskell is notably not on [this list](https://en.wikipedia.org/wiki/List_of_programming_languages_by_type#Curly-bracket_languages), and nobody expects it to look anything like any of them.
"jobs" is already a command on the Mac. Is "gates" a command on Windows yet?
I'm a fan of [AlecrimCoreData](https://github.com/Alecrim/AlecrimCoreData), which allows you to use normal Swift style filter syntax. let redCars = context.cars.filter { $0.color == 'red' } let redSportsCars = context.cars.filter { $0.color == 'red' &amp;&amp; $0.type == 'sports' } let modernRedSportsCars = redSportsCars.filter { $0.year &gt; 2000 }
That’s a big part of the design of Swift. To not look like hideous C++. If your Swift is gibberish then it’s wrong. 
You're correct but I believe the author is getting to that. He notes in future articles that he'll explain why DI is important is testing and (hopefully) why testing is important.
Backslash isn’t a value on its own, though? It needs some term after the backslash. 
&gt; "Segregation": Sounds good in theory r/nocontext 
All the project source code for [Hacking with Swift](https://www.hackingwithswift.com/read) is [available on GitHub](https://github.com/twostraws/HackingWithSwift). Projects 11, 14, 17, 20, 23, 26, 29, and 36 all use SpriteKit, so perhaps start there!
I don’t think `willDisplayCell` is the reason there’s double-loading; you set `lastCell` to be `photos.count - 1` which should evaluate to -1; there’s no IndexPath with that row number. Chances are there’s bug in your `viewDidLoad` or wherever you call the first reload. As an aside, personally, I use `willDisplayCell` for preloading logic, but there is something you should be aware of: if your user scrolls to the last cell you’ll initiate a new fetch request; if they then scroll up past the last cell and scroll back to the bottom, `willDisplayCell` will get called again and, if the current request hasn’t completed, you’re going to fetch more images again, which means (assuming you’re not loading images randomly) you’ll have the same data twice in a row—unless you stop new requests while another one is in progress. 
One day ima learn swift from him too
So I tried that but it doesn't work because the coordinate variable is the one i',m using for lat and long, so It just says I cant use the same variable within.
Isn’t udemy the place where folks just plagiarize free YouTube videos?
No, It is the place where you can learn from best Instructor !
I thought [this](https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316) was pretty good. Learned a decent amount about iOS architecture, and some tips and tricks. But if you're going to get serious about development, start reading about basic data structures and design patterns
No, I’m pretty sure it’s the same thing. And I know for sure you are just shilling udemy courses everywhere you post. We have enough trouble with Russian bots on here and you keep posting this garbage. 
Is it because one is for casting the actual type and the other is only for upcasting/downcasting?
Yes, the `as` operations are for up/down casting only, not for type conversion, which is why the former is.
Thanks dude!
The Stanford iOS course (available on YouTube) is by far the best way to get started with iOS development. ~17 hours of lecture, if you understand it all you are ready to be a professional iOS developer. 
I personally think that debugging a complex program is an awesome and overlooked skill. Logic, multi-threading, things like that. Quite a bit is knowing the APIs and there's always all the tools from Github to Xcode.
I run the iOS program at DevMountain. I also have an engineering degree. If I had it to do over again, I’d still go to college. But my motivation would be less about getting a job, and more about getting exposed to experiences and ideas that are hard to get anywhere else. I had a scholarship, and was able to go to college without any debt. It’s a very different equation if you’re going to go into significant debt to get a degree. At DevMountain, you’ll learn practical skills, with a focus on getting you ready for a job as a junior iOS developer. You’ll miss out on all the “extra” stuff a college degree gives you, including general eds and CS theory (we do cover some CS topics, of course). However, you’ll only be there a few months instead of years, and will learn a ton about how to actually develop real software, which is something that University CS programs have typically not been great at. For whatever it’s worth, I’ve had a number of students come to DevMountain after getting a CS degree, because they wanted to learn the practical iOS dev skills we teach. I think that tells you that a CS degree doesn’t fill the exact same niche as a bootcamp. I’m happy to answer any questions you have about DevMountain. You’re also welcome to DM me.
If I were hiring a developer the last thing I would look at is their degree. I would want to see what apps they've created. Same thing is true if you were an artist. I could care less what kind of art degree you got. I want to see your art. What can you do with what you learned. A degree just means you did enough to stay in school and paid the tuition. Why don't you try this. Find a bar, tell 20 adults over 35 in there you do iOS App development and see how many of them offer you a job. 
&gt; is the facebook access token the never changing? Read up on how Facebook tokens work here: https://developers.facebook.com/docs/facebook-login/access-tokens#usertokens In the case of the Facebook app SDKs, the access token you work with is a 'Long-Term' token and has a life span of up to 60 days. &gt; Because when I logout of my app or uninstall and reinstall it, the app still recognizes that I have signed in with facebook That is correct. The Facebook SDK writes the Facebook access token to the iOS keychain and that value persists across app installs. As for logging out of your app, you have to also make sure you call the logout method from the Facebook SDK, otherwise the token will still be persisted. I can't speak to what additional affects Firebase adds to the mix, but I would suspect there isn't much to it -- Facebook Auth should return a unique Facebook User ID. I would speculate that is a unique identifier in the Firebase database. 
I'd rather just define my program in terms of data and functions that operate on that data, then test the functions directly.
But a `switch` ain't one.
I believe you can do this with SwiftLint
Sounds like a terrible idea. There’s a reason the ‘!’ operator exists. There are proper use cases for it. 
A compiler flag to completely remove part of the language syntax? No, thanks. It's not hard to crash Swift even without "!", and it's possible to use "!" without causing any problems at all. It's not some evil character that's always bad, or they never would have put it in the language. It's a convenience, and if you choose to abuse it (or any other language feature), that's your prerogative.
Close, though initializers aren't technically method calls.
Most ask for a degree, but I don't know if they get it or how much it applies to iOS dev. I discussed with the guy that posted on YT about interviews and how trees and sorts and other things really don't have much value in iOS dev. I've been a professional programmer for many years and have never written a sort or tree. I've setup the database system for large companies, but never hand crafted a tree.. IMO, the skills for iOS could best be learned by just doing projects, not just simple ones but complex ones. Debugging, making an API work, etc... IDK what value dev mountain would have, it really depends on how well you're doing with learning by tutorials. You can do the Udemy stuff and learn quite a bit. I wouldn't do it as a complete noob because it's a waste of money. Reading a few books, hand full of tutorials, can really save you some money. 
I can't think of a single instance where I wouldn't block a commit and require `thing!.doSomething()` be changed to guard let thing = thing else { fatalError("Some more descriptive message.") } thing.doSomething() 
I watched talk from Uber and they added lint rule to disable force unwrapping
Er, initializers are methods with additional semantics and restrictions; there’s no difference at the language level besides the fact that initializers are the only methods you can call on yet-uninitialized objects and structs, and that they have restrictions like calling into other initializers and requiring that all variables be initialized at the end.
The compilation time
Yeah you can use Firebase on this since you need a realtime data update. But Im not sure about Spotify limitations but you can check their SDK if they have an API to fetch all of their music to display on your app and add it to queue.
 if self.thing == nil { self.thing = Thing() } thing!.doSomething() or worse, perhaps you "know" thing is not nil, but can't use !.. guard let thing = thing else {return} thing.doSomething() And now the 'thing being nil which "can't happen" bug' is cauterized. Or even if there is proper error handling as you suggest, now much useless code has been added to the code base, as opposed to: thing!.doSomething() which is functionally the same. (And personally, if I see a crash on thing!.doSomething(), I don't see it as some great mystery as to what is happening or how "Some more descriptive message" is going to help at all)
Autocomplete 
Xcode sucks.
How long ago was this? Android Studio is built on IntelliJ which imo is leaps and bounds better than XCode. Now just regular development is another story, horrible docs, an interface builder that doesn’t quite work right, and the entire app/activity/fragment/view lifecycle is just completely fucked.
As a Swift noob could you give an example?
Don't know if it's still this way but the too much changing of core syntax. But tbh it's been years.
Sometimes a more descriptive error is just unnecessary overhead. If it just crashes on a particular line, that's often enough. Why bloat the app with another string?
The general consensus up to this point has been not to create dialects of the language thru diagnostic flags like this. That said, I support the underlying vision behind this 110%. If you can force-unwrap it, either you can afford to make it non-optional, or you can take the time to fatalError with a decent message.
So you just bloated the code and got nothing out of it. If the value is nil your fatalError is going to crash anyway and you’ve just added complexity. 
Learn about MVC, MVVM, dependency injection, RESTful APIs, data structures and algorithms
I tried Visual Studio yesterday. In comparison to Xcode this is a Pacific Rim sized Frankenstein's monster with tentacles that hogs resources like some hillbilly preparing for the next nuclear war. So, really, of all IDEs I've tried, Xcode feels like a charm.
It’s not old enough yet. The community has done a brilliant job of creating an extremely clear, consistent and attractive syntax, as well as making the language extremely safe and easy to use. However, the language only came out just over 3 years ago and is still very much unfinished. It’ll get there, but for the next couple of years it’s just not going to be as stable or robust as older languages like java etc. 
 guard let weakSelf = self else { return } Can't imagine how often I typed this line.
What's it for? Like when/why would you type that line?
Not that line exactly, but lines similar are good for unwrapping optionals and throwing them in the same variable. It means you don't have dummy variables running around for only a line or two just to play nicely with optionals.
&gt; Android Studio Holy shit I'm trying to get into it and even with a physical device, AS is a complete nightmare.
this sub :D
no good IDE for linux which supports sourceKit.
really? Have you tried any of Jetbrains' tools? Every time I get an error and for one second I forget that I am using Xcode and press Alt+Enter to quickly implement some boilerplate code or fix an error (be it signature change/ refactoring/ type change/ whatever), I get rewarded with Xcode staring at me like a moron he is :D 
I agree that the JetBrains IDEs are also very nice tools. Worked with PyCharm for a certain amount of time and couldn't complain. ;)
&gt; Unlike C-based languages (including Objective-C) where casting is the primary way of converting between types In most C-based languages casting will not usually perform conversions outside of specific cases (integrals &lt;-&gt; floats) though. Casting a char* to int in C will just give you the pointer value, C-casting an std::string to int will probably do something really weird (or fail to compile entirely), casting a String to Integer in Java or C# will be a compile error (and possibly a runtime error if you first erase the source type by casting to Object), ...
For this particular case, it's for avoiding strong reference cycles in closures, for example. You can avoid this by declaring the reference in the closure as "weak" in the capture list of the closure, but then, "self" becomes an optional and you have to treat it as such. (Compiler will fail when calling self.foo in the closure instead of self?.foo) Thus, the guard for weakSelf. There is a more detailed description here (chap. "Strong Reference Cycles Between Class Instances"): https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AutomaticReferenceCounting.html Some people also like to just declare self "unowned" in the capture list. Guess it depends on yours and your colleagues' taste what to call best practice. ;) Anyway, while I like the idea of capturing closures, which saves some time and pain, I find it a little bit too easy to make such a reference cycle when you don't know what you're doing. :/
Deciding between `weak` and `unowned` isn't matter of taste. You should use `unowned` only when referenced object will always outlive your closure / other object which references it. Weak should be used when object can be deallocated before executing the closure. Other way you might end up with `EXC_BAD_ACCESS` when accessing unowned reference to object which does not exist anymore.
Debugging.
The community. Always looking for the silver bullet and advocating the newest hype. Not doing functional programming? You're doing it wrong! Even though there are 30-year-old papers which already state that functional programming is not the solution. Same stuff over with every other hype. Swift in itself is fine (though it could use some help in concurrency), but the people advocating at just always blow my mind. 
And the complete assets catalog being part of them.
You can use `self` to make your life a little bit easier.
Jan, do you have any papers to recommend re: "functional programming is not the solution". Would love to get a hold on those.
For me it’s not so much the compile speed as it is just the dev experience. Especially with regards to setup and the emulator vs simulator. 
I’m just a beginner but working with JSON in swift seems unnecessarily complex to me. Doesn’t mean it actually is, I probably just suck at it. 
Inspections are only slow for Swift code. It is dozens of times faster for Objective-C code and I started coding more in Objective-C again after I realized that. Admittedly, that's what was asked, but just mentioning, because I think this will improve with time.
Compare it to like python. The string eating machine. 
Subscribed!
Yeah swiftyjson is the only way I ever could get json parsing to go. I know the new Swift now ships with a parser. I am meaning to try that out. 
The last time I tried, AppCode's interface builder was mediocre at best. Nibs and Storyboards are such powerful features of iOS/macOS programming that I just don't think it's worth replacing Xcode.
I heard Marshal is good. 
Depends how you define "painful". I consider memory reuse a massively important feature. Try dealing with UTF-8 text in NSString (with stuff like Emojis and accented characters). That's much more painful in my opinion.
Does AppCode have an Interface Builder now? I let my subscription lapse because although it was great for editing code, the dependence on Xcode for everything didn't impress me. I do keep my RubyMine and PyCharm subscriptions active, though. _Great_ tools. 
I agree with you. In my defense, when people ask why I advocate for Swift, my main point is always because Swift makes it easy to write safe code. So much so that you will get paranoid about null deferences when you go back to languages like Java. I say without a shadow of doubt that coding in Swift has improved the quality of my PHP and Java code a lot.
The language has gone through significant changes in each iteration and I feel like I can’t really rely on any stackoverflow answer over a year old.
Hmm I don't know anymore. That was a couple of years ago. Maybe they dropped support for it? I'm not sure. And oh don't get me wrong. I have a subscription for IntelliJ and I adore that thing. I keep showing off its code refactoring and multi-cared editing support to my coworker who loves Eclipse (despite the fact it runs at 12fps on his top-notch MacBook Pro) and I think after a few years he's finally started considering it haha.
I'm certain there are lots of places where the substring advantages are huge. But, there are also lots of places where they are negligible; that are still required to deal with the added complexity. Unfortunately, I haven't come across the former.
I spend a lot of time writing function parsers and other parsing code. Having to deal with indexes greatly complicates the code. Of course, I have "fixed" everything using extensions, but why did I need to do this? And of course I had to rewrite all my extensions for Swift 4.
I have no complaints. I love it. ...But I'm a masochist. 
I like how Swift reads, but I find it difficult to write without auto completion. And the auto completion state in Xcode, while much improved since the early days, feels quite dire. It often keeps me from using it for random one-off scripts, because I really do not want to open Xcode and whatnot for what feels like it should be a couple of minutes of work. 
Also, here is another random thing I ran into recently: for c in string.unicodeScalars { if range.location == 0 &amp;&amp; i == 0 &amp;&amp; !NSCharacterSet.letters.contains(c) {return false} if !NSCharacterSet.alphanumerics.contains(c) {return false} i += 1 } For some reason, I can't check if something is alphanumeric as Char, but have to use unicodeScalar's instead. Which, again isn't that big a deal. But, it just seems that every time you try to do something with a String in Swift, the answer is unintuitive and ugly.
The recent issue actually looks interesting. Nicely done! Giving it a shot. 👍 
How do you prefer to do that then?
What you don't like about it?
Here is my current extension: public extension String { public subscript(i: Int) -&gt; Character { // [a] return self[index(startIndex, offsetBy: i)] } public subscript(r: CountableClosedRange&lt;Int&gt;) -&gt; String { // [a...b] let start = index(startIndex, offsetBy: r.lowerBound) let end = index(startIndex, offsetBy: r.upperBound) return String(self[start...end]) } public subscript(r: CountablePartialRangeFrom&lt;Int&gt;) -&gt; String { // [a...] let start = index(startIndex, offsetBy: r.lowerBound) let end = endIndex return String(self[start..&lt;end]) } public subscript (r: PartialRangeThrough&lt;Int&gt;) -&gt; String { // [...b] let start = startIndex let end = index(startIndex, offsetBy: r.upperBound) return String(self[start...end]) } public subscript (r: PartialRangeUpTo&lt;Int&gt;) -&gt; String { // [..&lt;b] guard r.upperBound &gt; 0 else {return ""} let start = startIndex let end = index(startIndex, offsetBy: r.upperBound-1) return String(self[start...end]) } public func loc(of string: String) -&gt; Int? { for i: Int in 0..&lt;count-string.count { let test: String = self[i...(i+string.count-1)] if string == test { return i } } return nil } public var capitalize: String { guard let first = first else { return "" } return String(first).uppercased() + dropFirst() } func toInt8 () -&gt; UnsafeMutablePointer&lt;Int8&gt; { return UnsafeMutablePointer&lt;Int8&gt;(mutating: (self as NSString).utf8String!) } func toCString() -&gt; [CChar]? { return self.cString(using: .utf8) } public static func uuid () -&gt; String { return UUID().uuidString } } 
At least it’s an option but not a fan of Swift linters, yet something else to slow down the build.
Some of us have inherited other people’s code who were newbie Swift devs and didn’t write good code, and have to support this in stricter enterprise environments where crashes are critical, so having an optional feature would be helpful. Seems proper are as if I’m saying this should be forced on. Not at all! I totally understand some good uses for it. To me it’s akin to Google adding a flag to disable C++ exceptions instead of just saying don’t use it.
It's too unstable, in the sense that it changes a lot. This means your Swift code today will probably not compile in a year or two, so you'll have to spend time and effort in making it compatible once again. And if you're working with external libraries that haven't been updated, then you would lose the ability to compile the project at all given that it's not always an option to go back to a previous Xcode version.
So then those uncommon projects wouldn’t use the flag? Not difficult.
I agree, I haven’t yet seen a place where it was required. Would like to see an example.
Not sure why you got downvotes. Seems like there are people in this thread who don’t understand I’m suggesting an optional flag to make the language safer. Kind of the point of using a strongly typed language with optionals... why ignore built-in safety.
Released apps are a good thing for interviewers from company management. But libraries are more interest for interviewers from developer team whose will be work with you. So I think both apps and libraries are important for successful interview.
I just want multiple cursors. There was an extension, but extensions no longer work since Xcode 8.
Autocomplete? How is that part of Swift?
The objective-C
Yeah but they don't have the unicode capabilities Swift has.
True — I was thinking primarily of C(++) and Objective-C(++), which natively have no real representation at runtime of primitive types. C-style casting (and C++-style static_cast/reinterpret_cast) does truly “convert” certain types (as you mention, int -&gt; float), but in general, no change happens to the underlying bits, so you can cast nonsense to nonsense. I meant “conversion” in the type-system sense, where in C I can change the type of a variable to almost any other type statically (regardless of whether it makes sense), but in Swift and other languages, there’s runtime checking associated with the static type system conversion.
It wouldn’t be so bad if the compiler generated Type erasures for us, for any protocol it finds with an associated type. 
I can’t disagree that Visual Studio is kinda like an amalgamation monster. But once you are familiar with it I think it is a great and very powerful IDE. The problem with Visual Studio is that it can do so much which is what makes it a bit of a monster. If you can’t remember where something is good luck finding it. 
The Android community is 10x worse. Same with the front end web devs.
preach!
You will need to create a `UserType` object from your `User1` object in your function and return that. 
The syntax has been stable for now, but core data structures (Dictionaries, Strings, etc) are still changing a lot. Good news is that is more of adding new features than changing what is already in there.
I am thinking about looking into Jetbrains alternative.
No macro language (C like or lisp like)
Le substring
I think ditching C-style for-loops was a bad choice and makes swift hard to recommend as a first language. If you can't teach it to beginners and can only bring in people who know other languages, it's hard to see how it grows beyond iOS dev.
return r as UserType wont work. But I added this: let a = SessionTaskHandler&lt;BaseResponse&lt;UserType&gt;&gt;() r.success { s, re in let ree = BaseResponse(data: re.data as UserType, message: re.message, error: re.error) a.onSuccess?(s, ree) } r.failure { a.onFailure?($0) } r.complete { a.onComplete?() } return a and it works. I thought higher of Swift tbh...
Obviously you've never used SwiftLint. It's extremely fast, to the point where your files are processed in parallel. And you don't have to integrate it into your build process, you can call it separately or as a CI step.
How does not including a feature from a language that a beginner wouldn't know about inhibit teaching that beginner? Wouldn't it be the other way around? Especially since beginners usually learn basic loops that can be covered with something like `for i in a...b {…}`. 
You ever get the feeling that any language that makes dealing with something as simple as json so awkward and difficult can’t be good for productivity?
Autocomplete in Xcode is so bad that it intrudes upon lists of the worst aspects of unrelated concepts. “The sickest I’ve been this year was when I had the flu and I spent the better part of a week dry heaving into a bucket, but worst than that was I had to use Xcode autocomplete.” “My worst restaurant experience was when the sandwich I ordered had matted hair and toe fungus laden fingernail clippings in it, but really that wasn’t so bad compared to Xcode autocomplete.”
Right, but Xcode is not remotely Swift. Yes, it can be used to code Swift but they are two very different things. Saying that autocomplete is a bad part of Swift makes no sense at all, since the Swift language does not have autocomplete.
“That’s nice that you are upset that Donald Trump is the president, but are you aware of Xcode autocomplete?”
No. Python 3 changes the base type, so it makes things easier that were possible with Python 2, but doesn't really add any new capabilities. Implementing grapheme clusters, the fundamental Character of Swift, was [discussed last year](https://bugs.python.org/issue30717), "missed [the] 3.7 train", and now they're suggesting it be implemented as a third-party library so they can shake out bugs before thinking about merging anything. Swift is a very new language designed by people who care deeply about international text. The only other language I know of which has comparable Unicode support is Perl.
Thank you so much! 
Ever worked on a team with other people? Not so easy to enforce.
No, don't. That's taking advantage of [a bug in the current version of the compiler](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160118/007425.html).
"With Swift's Optional, I can guarantee there's no nil in my 10 line program! Now I'll just call a few functions in this 100,000-line C library. Safety first!"
C and Lisp macros are very different. If you just want C-like macros, nothing's stopping you from using a preprocessor on your Swift code. The Swift stdlib even has its own: `gyb`.
Compared to what? I can't think of any language that had less churn in its first 3 years, and Swift has even included syntax migrators with each version (that sometimes even worked).
What I FUCKING HATE are all these god damned animations in the UI that are FUCKING USELESS and you can't turn off. Why the HELL do the contents of a group in the Navigator pane have to roll down when you expand a group? Just fucking display the contents. Why, when clicking in a search field must the contents slide left? Just keep the crap in the correct position. It's useless animation that's a distraction when I have a task to perform and that makes the programmer wait a split second when they are trying to work as fast as possible. The fact that they put the priorities on this rather than on programmer productivity shows how fucked their priorities are.
My current working hypothesis is that this is a useful feature hidden behind the world's worst documentation. The PAT section of the Swift manual flat out lies in many places, and that makes it hard to understand how PATs are meant to be used.
Thank you for reply. You helps me a lot :)
The lack of standardized trig and random functions. Using Glibc/Darwin is a pain in the ass. We need a larger standard library, and support for submodules. I hate Java, but they got this part right.
I like Autocomplete but when Xcode is lagging or not working as it should and the autocomplete stops working I can get thrown off by thinking maybe the code I’m writing isn’t right..
&gt; unicodeScalar's unicodeScalars* No apostrophe on a plural, son.
The reason is that "alphanumeric" is a union of categories (L, M, and N, according to the docs), and categories apply to codepoints, not grapheme clusters. That's a Unicode issue, not a Swift one. It's just different than most other languages because they don't support grapheme clusters at all. But really, this is a perfect case for regular expressions. Their interface isn't the nicest in Swift, yet, either, but it's straightforward and concise and probably even runs faster. 
&gt; That's a Unicode issue, not a Swift one. Well, the Swift issue is in retaining the name CharacterSet rather than giving it a better name.
Sure it is, it's up to the administration to enforce. Make a rule that any forced unwrap needs justification, have a script that parses submissions for the "!" character and flags them, then review those hits. There should be few enough of them that they can all be reviewed 100%. If the administration doesn't care enough about it to do that then there's not much else you can do.
Don't merge the PRs that have force unwrap?
Codable in Swift 4 makes this all a breeze (speaking as someone writing a Kitura server with a JSON API). You just encode and decode objects and never have to deal with JSON directly, though it does require that you define your API rigorously, which is a good thing to do anyway.
Swift Xcode autocomplete is worse than Objective-C Xcode autocomplete.
Horrible UI. Android's XML layout paradigm blows constraints/IB out of the water. No serious devs use IB, so using shit like SnapKit is the best option, which is still crappy.
There are several discussions on the Swift forums right now about adding new API and properties for Swift 5 to allow for better ergonomics and features.
You cannot tell when using a type whether it has value or reference semantics without looking up the definition/documentation.
String ranges. Especially using NSAttributedString and using NSRange and Range together, ugh
The compiler wouldn't do it for free either. You can configure swift-lint to only care about `!` so no other rules apply. Should make it faster.
At least AS has real tabs and a sane navigation system not hidden under a sidebar with tons of nonsensical icons. And a dark theme!
Enums not being enumerable
Ugh. I was typing out a comment and the editor crashed. Android Studio is better than Xcode at a lot of things. I’ve been going back and forth between both for the last few months and there are certainly some areas were Xcode is lacking. AS definitely takes some getting used to but I think people confuse being unfamiliar with something (and the resultant discomfort that causes) with the product itself being inferior. Some things that Android studio does better than Xcode: 1. Refactoring. It’s fast and it works really well. 2. Automatically imports things for you, organizes imports, removes unused imports. 3. Localization: 1. Autocomplete from localization file. 2. It tells you if a localization exists but you’re not using it anywhere. 3. It won’t let you create duplicate keys in the localization file. 4. Syntax highlighting and autocomplete don’t fucking die all the time. 5. Doesn’t autocomplete image literals like an idiot. 6. When you create a new class, method, or variable the compiler is aware of it immediately. 7. EDITOR TABS! It handles editor tabs the same way as every other goddamn editor instead of Xcode’s “replace the contents of the current tab” bullshit, so you don’t end up with four tabs opened to the same thing. After coming back to Xcode this was driving me crazy. There’s tons of areas where Android studio totally sucks. Android development itself is a mess, the community is worse, Google’s docs are terrible and often outdated or wrong, blogs and articles on Android development are almost universally ugly and badly done, all the app compat stuff is annoying “don’t use `android.app.fragment` use `android.support.v4.app.Fragment`!! There’s a ton they could do to improve the coding experience in Xcode but I’ve pretty much lost faith that they’ll ever do it. 
Define accented characters? I’ve never had any issue using UTF8, in fact it’s specifically designed to make accented characters easier to deal with, at least for European characters, since it’s single byte. Now, UTF16/UTF32, aka Emoji-land / multibyte, that’s a different beast.
Agree. I prefer Android Studio to XCode. Also, agree about the activity/action/fragment BS. I've finally got the hang of it, but it was an uphill battle the whole way. Make heavy use of interfaces, and a lot of issues with communication can be alleviated.
Either user fits inside theBaseResponse but the generic should be UserType. E.g. BaseResponse&lt;UserType&gt;, instead of BaseResponse&lt;User1&gt;, because that is what the function returns. Then you can stick either user in the BaseResponse. The reason is that UserType isn’t resolved until runtime in this case, Only at runtime do you know if User1 or User2 is inside the BaseResponse. Since it is runtime, you may have to cast to see if either User1 or User2 is in the BaseResponse.
Where are you doing this setup? it could be that `view` does not yet have a non zero bounds You could confirm by logging the `loadingView` after setting bounds + center
It's not, but the question specifically included "the environment around it". Most of the answers here (like most of r/swift) have nothing to do with Swift the language.
To add to the above comment, make sure you are not in a background thread since you are adding a view. Without more context we can't know exactly what is happening.
There's far too much to put in a comment. The [PATs video](https://www.youtube.com/watch?v=XWoNjiSPqI8) goes over many of the issues. For example, the "Protocols as Types" section of the manual says "Because it’s a type, you can use a protocol in many places where other types are allowed, including:" and then lists 3 places that protocols with associated types *cannot* be used. It's probably easiest to think of PATs as completely distinct from protocols. Reusing the word "protocol" seems to have been much more confusing than helpful. &gt; How are protocols with associated types supposed to be used in your opinion? When using an interface in the standard library that requires them.
I'm doing it in the viewDidLoad Function of the mainview
Where does the line get drawn then? “My chair is uncomfortable and the table is crooked.” Complaints about an IDE and complaints about a programming language are very different topics. It doesn’t make much sense to include autocomplete as a failing of the Swift environment.
So, I am not 100% sure what you are trying to achieve here, but I would recommend putting constraints on the loading view to match the desired output you want then animating it out of the way or hiding it when it is done loading. I was working in a Playground to try and see if maybe it was because you were not using `view.bounds.size`. height/.width, but that doesn't seem to be the issue. I can try it on a actual project later on to see whats going on but here is the Playground: ``` //: Playground - noun: a place where people can play import UIKit import PlaygroundSupport class TestViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() let loadingView = UIView() loadingView.bounds.size.width = view.bounds.width - 20 loadingView.bounds.size.height = view.bounds.height - 40 loadingView.center = view.center loadingView.alpha = 1 loadingView.backgroundColor = .red view.backgroundColor = .green view.addSubview(loadingView) } } let testViewController = TestViewController() PlaygroundPage.current.liveView = testViewController PlaygroundPage.current.needsIndefiniteExecution = true ```
&gt; What don't you like about the Swift programming language or the environment around it Read, do better. Be a better Internet commenter!
The syntax and its decision to move farther away from proper Smalltalk rather than closer to it. Also, optionals suck.
What do you mean by achieve? I'm trying to display a loading-screen until the data has loaded, the view has has constraints already, forgot to mention that as far as I know the difference between `view.bounds.size.width` and `view.bounds.width` is that the later is read-only. does the playground work for you?
The playground works. Your constraints might be the problem. Can you show them?
Understood. I don't like it when I'm programming in Swift and the smelly guy sits next to me.
Are `!` the majority of your crashes? Does your strict enterprise environment also prohibit calling any C or Objective-C code? Or using `Never`, or `precondition()`? Even if they were, they're easy to track down. Just grep for `!`. What's the benefit of a compiler flag? This seems like picking one thing that burned you in the past, and going to extreme efforts to avoid it. (I overflowed an Int32 once, so I'm going to add a compiler flag to ban them.) &gt; Seems people think as if I’m saying this should be forced on. I don't think anyone was thinking this. &gt; To me it’s akin to Google adding a flag to disable C++ exceptions instead of just saying don’t use it. I'm not aware of a Google C++ compiler, or how they use clang/gcc internally, but they did simply write "We do not use C++ exceptions" in their [style guide](https://google.github.io/styleguide/cppguide.html#Exceptions). That, too, seems easy to spot without a special compiler flag. 
just tested the playground too, worked for me as well. [my constraints](https://imgur.com/a/waw9U)
1) Likely it's an outlet to something made with Interface Builder if it's an implicitly unwrapped optional. Avoid it if you can. 2) A chapter of reading in The Swift Programming Language. Further convinced by some WWDC videos that came out by the time Swift was rolling out. The advantages can probably be summarized with safety. It's also nice to have a declarative notation for when something is, well, optional. 3) Class references in the codumentation. 4) Classes prefixed with NS come from Objective-C. More specifically they come from NextStep. You'll encounter fewer of them as the language evolves and the core frameworks are ported or have their APIs bridged in a nicer way. You'll also see CG like in CGFloat from CoreGraphics and CA like in CADisplayLink from CoreAnimation. They'll probably disappear with time. 5) I find the web version of the documentation a better source but it might just be my habit. Also, Option-clicking or Control + Command-clicking entities in Xcode will be useful a lot of times. 6) Interface is a very bleep bloop AbstractProxyBeanFactory way of saying declaration of how communication should be done. In human we call it a protocol.
Just had a quick look but you have a dictionary and are trying to deserialise it, is that correct? Why not just access the dictionary’s values?
 1.) Don’t use Variable. It’s deprecated and will be removed in one of the next updates. Use BehaviorSubject instead. They behave the same way (but have small differences in the syntax). 2.) Your VM should interact with your status Subject. That is either subscribe to it and depending on the incoming Event push Events onto Subjects that are defined in the VM and meant for the View (you might for example show a different icon for each state or update a String or something). The VM could also just .map the status Subject for the View that then uses that resulting Observable as a Driver. 3.) As for translating between your enums: That's probably how you'd go about it if their rawValues don't match up, yes.
Type safe enums with the option of associated values. Error is a protocol and to represent them you can use Enums. You can also use anything else but Enums provise a simple way to switch on the types and get the associated value if needed. Check out the generic Result enum if you haven't. Also the Navigator pattern on Sundell's blog. Enums are really powerful.
1. You declare a property like that because you need to defer its availability to start until after something else has happened, but by the time it's in use it will be completely constructed and available. In other words, the `Optional` property might be `nil` at some point but it can be treated as non-`nil` by the time it will be used. Thus, it's an `Optional` that can be used just like a non-`Optional`. For example: @IBOutlet weak var bigRed: UIButton! It's declared like that because the class that contains it might be instantiated at any point, before or after the `UIButton`. However, you guarantee that the property will only be accessed *after* the button is instantiated. This is often the case when using the Interface Builder, you'll create a storyboard or NIB with some objects that get loaded and you can't guarantee the order they will be loaded. However, by the time you get to your view's `viewDidLoad()` everything is guaranteed to be in place. 1. Not long, they are basically along the same lines as start pointers in modern C++ or how people with discipline handle C pointers. You have some rules to access a pointer that helps you avoid using them when they are set to nonsensical values - objects that haven't been allocated yet or which have been deallocated. It's really not that much baggage and they save you *so* much time in safety. You'd understand what I mean the first time you have to debug some bad pointer leading you off in the the realm of undefined behavior... 1. Like this on [`String`](https://developer.apple.com/documentation/swift/string)? 1. Anything with a NS or UI or CG or whatever is there because of namespacing. If you have two types with the same name then they can clash so by putting a few letters in front you make them unique. It comes from the old days of Objective-C. In fact, NS stands for "NextStep" - the original operating system and environment that used those frameworks. When they came up with Swift they mostly dropped that convention for the core stuff but they allowed it to be "bridged" to the older names for compatibility with Objective-C. So Swift has a type `String` that can be "bridged" over to `NSString`. When you do that the compiler translates between the two types for you. There's a few reasons to use `NSString` over `String`, a few methods declared on one over the other or maybe you have to convert to pass a value to an Objective-C framework. You should stick to the non-NS types if they do the job for you. 1. I'll have to think on this one. It's probably just a matter of time and exposure, eventually you get used to the way Apple does it and the other ways might seem foreign. 1. Protocols and Interfaces share some ideas and have some similarities but they do things their own way. One name is not necessarily better than the other and I wouldn't assume that's why the name "Protocol" was picked. The idea of a protocol is a pretty old one in programming and the term has been in use for many years before Swift came along.
&gt; How long did it take you to "get" Optionals? I struggle to see an advantage that's worth the trade-off of the baggage. It seemed like the logical simplification of what other languages did. What exactly do you propose instead? The Java situation, where all reference types are forced optional, and no value types are allowed to be? The C situation, where every type is just some naked memory? No null values in the language at all, and everybody has to invent their own context-dependent placeholder, like NSNotFound? &gt; Browsing official documentation. It would be nice to just have a page with a bunch of methods on it (like how Ruby does it). Where is that? [SwiftDoc](http://swiftdoc.org/v3.0/type/String/) may be more to your liking. Also, a (generated) *.swift file on your Mac generally contains all the methods of a single type. &gt; Why are there so many variants of basic classes? E.g., you have not just String but NSString and other kinds. The major difference there is that String is a struct, not a class. Also, NSString was, like many NeXTStep classes, designed back in the 1980's. Things have changed a bit since then, and there's only so far you can stretch an API before you need to overhaul it. &gt; Lastly, Protocols are just Interfaces, but they couldn't call them that, because it's ambiguous in an environment where Interface Builder, etc. exist - correct? Funny -- I thought it's because [that's what they're called](https://en.wikipedia.org/wiki/Protocol_\(object-oriented_programming\))!
Try cmd + Shift + K to clean Xcode and reset the simulator or delete the app if you are testing on your phone. See if that helps cause your stuff looks fine imo.
The `enum` keyword is used for anything that has concrete and fixed number of values. They're basically an upgraded and codified version of constants. One of the main advantages is that since you can write down every value you can write stuff like `switch` statements that are guaranteed to cover all cases. The compiler can check every case and make sure they are covered, giving you an error if one is not or you don't have a `default` set. This is great for error classes. If you have a list of errors you can put them all into an enum and then make sure each one is handled properly. There's more to `enum` than that but this explains the core concept of the keyword.
How can I access the nested value of “url”?
You’ll get back your internet-points when you discover gists
**Are Protocols and Interfaces the same?** `Interface` is a very overloaded term in computer science (physical port?, user input?, code declaration?). But if we just limited things to computer languages, what language `interface` are you familiar with? Java, Objective-C, or something else? I don't know why they changed the name for Swift, but it doesn't quite serve the same function as just declaring the public face of your classes to the rest of your code like Objective-C programmers may be familiar with. Perhaps the renaming was meant to say these may not be quite used the same way you may be accustomed to.
tried that on both real device and simulator, didn't help. Guess I'll just try to do it in code only
Also check your image size and how it is set in the VC. You might need to adjust the size of the image or the why it is scaled. 
the image was set to fill the vc, though with or without image didn't make a difference
here's my updated question: https://www.reddit.com/r/swift/comments/80zp81/i_cant_properly_parse_json_from_facebook_graph/
So I made this really quick but It works for me: import UIKit class ViewController: UIViewController { @IBOutlet var loadingImageView: UIImageView! override func viewDidLoad() { super.viewDidLoad() loadingImageView.alpha = 1 } override func viewDidAppear(_ animated: Bool) { super.viewDidAppear(animated) let deadlineTime = DispatchTime.now() + .seconds(10) DispatchQueue.main.asyncAfter(deadline: deadlineTime) { self.loadingImageView.isHidden = true } } } Constraints for loadingImageView are Leading Space to Superview, Trailing to Safe Area, Bottom to Safe Area, Top to Safe Area. Also, just noticed you are adding the loading view to the subview but since you have it in the storyboard you don't need to do that. 
remove this: view.addSubview(loadingView) 
Code isn't just written for compilers to read, it's written for humans to read too. `!` used to intentionally crash and `!` used because the developer was lazy and cut corners are indistinguishable when reading code. The `fatalError()` makes the intent of the developer clear, so when you read that code you know it's doing what it's supposed to be doing. It's also a bad habit to get into – `!` is `!` because it's a warning that something is dangerous. If you use it liberally, you train yourself out of seeing it as a warning. It also robs you of a lint rule. Having a rule that warns you about `!` is no good if it's littered all over your codebase.
If you just want to play music with minimal changes to it go for AVFoundation or MediaPlayer. The rest is for more sophisticated stuff (MediaLibrary is not needed except you want to access the iTunes entries).
I have the subview in my Storyboard, but not in the same scene (I prefer to keep them seperate so I can change stuff more easily) I found a different solution that works for me, instead of adding it to the view I'm adding the subview to the navigationController view.
Ah yeah that will fix it! Didn’t realize that was what you were doing! 
Yeah that will do it! Didn’t realize that was what you were doing
Looks like you set the corner radius but never masked to the bounds you set. Call `cell.imageView?.layer.maskToBounds()`
Also, it is terrible to do this type of thing in the cellForRow method. You should be doing something more like creating a custom cell and then just dequeueing that cell at cellForRow
1. The ! Is saying this value will equal something later, so we will always forget wrap or access the value it’s equal to each time the variable is used. 2. Optional took me a day to learn. And if you want a job as an iOS engineer, you better make sure to understand them and know how to safely access their values. Your code can get rejected during code review if you don’t access optionals right. An optional is basically a variable that might be equal to something or not. 
Would be interested to know how many of these have gone under a proposal
More photos of code though. Sorry, can't help.
The error you are getting in that image refers to exceptions thrown from JSONSerialization not being handled. You can handle those with a do {} catch {} block. But in cases like this is easier to do a guard and use try? when deserializing. guard let json = try? JSONSerialization.jsonObject(dictionary)... Extracting optionals from nested dictionaries is not easy in plain Swift, that is why Codable/Decodable was introduced. I recommend you taking a look, it is pretty cool.
Pasting your JSON in [quicktype](https://app.quicktype.io?gist=3c77ecab216bc674ea8707c1ba71a877&amp;l=swift) gives the following `Codable`: struct Attack { let name: String let basicAttack: BasicAttack let retMsg: NSNull } struct BasicAttack { let itemDescription: ItemDescription } struct ItemDescription { let ddescription, secondaryDescription, cost: String let menuitems: [Menuitem] let rankitems: [Any?] let cooldown: String } struct Menuitem { let description, value: String } [Here's the full code](https://app.quicktype.io?gist=3c77ecab216bc674ea8707c1ba71a877&amp;l=swift) that makes it trivial to parse and get the value you want: let attack = try Attack(""" { "Name": "SomeName", "basicAttack": { "itemDescription": { "ddescription": "", "secondaryDescription": "", "cost": "", "menuitems": [ { "description": "Damage:", "value": "34 + 1.5/Lvl (+20% of Magical Power)" }, { "description": "Progression:", "value": "None" } ], "rankitems": [], "cooldown": "" } }, "ret_msg": null } """ let values = attack.basicAttack.itemDescription.menuitems.map { $0.value } 
I went through that with C++, then Java. Its all bullshit. Like C++, everything in Swift can supposedly be "fixed" by just writing one more derived type or generic or specialization or something. The truth is there are no rigorous studies or evidence to show that Swift's approach to typing constraints provides any tangible benefit. The claims kind of seem sensible, but if you take real defect metrics, you find that dynamic languages are no less reliable in practice than more rigid languages like Swift. But Swift imposes a lot of overhead and clutter that tends to obscure the real meaning of the program.
Following this!
I don’t have any concrete documents to cite right now, but early on in Swift’s design, it was decided that Swift’s de-facto main integer type would be `Int`, and that integer types wouldn’t be directly castable to one another like they are in other languages. Existing frameworks (like Foundation) which had APIs written in terms of `NSUInteger` (`NSArray` indexing, for example) would by default import into Swift with `UInt`s all over the place, which hindered usability as previously unsafe but easy casting between signed and unsigned integers was made impossible. For the benefit of general usability with the rest of Swift, it was decided that the importer would translate `NSUInteger` into `Int` for some frameworks when importing the APIs into Swift. IIRC, we do it for Apple frameworks which have Swift overlays, but not for user code (I’m not at the computer right now to try it out, but that should be easily verifiable).
That is actually hilarious. And totally contrived. Funny the author picked beer. I happen to be working on something around beer marketing and to do this I'm processing a lot of json that represents...beer. Here's a query from online brewery database. { "brewery": { "brewery_id": 1149, "brewery_name": "Sixpoint Brewery", "brewery_slug": "sixpoint-brewery", "brewery_label": "https://d1c8v1qci5en44.cloudfront.net/site/brewery_logos/brewery-SixpointBrewery_1149.jpeg", "country_name": "United States", "brewery_in_production": 0, "is_independent": 1, "claimed_status": { "is_claimed": true, "claimed_slug": "sixpoint", "follow_status": true, "follower_count": 35722, "uid": 109429, "mute_status": "notmute" }, "beer_count": 154, "contact": { "twitter": "sixpoint", "facebook": "http://www.facebook.com/sixpoint", "instagram": "sixpointbrewery", "url": "http://sixpoint.com/" }, "brewery_type": "Micro Brewery", "brewery_type_id": 2, "location": { "brewery_address": "40 Van Dyke Street", "brewery_city": "Brooklyn", "brewery_state": "NY", "brewery_lat": 40.6739, "brewery_lng": -74.0119 }, "rating": { "count": 293837, "rating_score": 3.702 }, "brewery_description": "", "stats": { "total_count": 541332, "unique_count": 120297, "monthly_count": 20030, "weekly_count": 4684, "user_count": 90, "age_on_service": 1527.3521527778 }, "owners": { "count": 0, "items": [] }, "media": { "count": 1, "items": { "photo_id": 25856310, "photo": { "photo_img_sm": "https://d1c8v1qci5en44.cloudfront.net/photo/2014_12_14/de30a1bfa94290015cb1e7d6f5c272c3_100x100.jpg", "photo_img_md": "https://d1c8v1qci5en44.cloudfront.net/photo/2014_12_14/de30a1bfa94290015cb1e7d6f5c272c3_320x320.jpg", "photo_img_lg": "https://d1c8v1qci5en44.cloudfront.net/photo/2014_12_14/de30a1bfa94290015cb1e7d6f5c272c3_640x640.jpg", "photo_img_og": "https://d1c8v1qci5en44.cloudfront.net/photo/2014_12_14/de30a1bfa94290015cb1e7d6f5c272c3_raw.jpg" }, "created_at": "Sun, 14 Dec 2014 22:38:52 +0000", "checkin_id": 137623625, "beer": { "bid": 489629, "beer_name": "Hi-Res", "beer_abv": 11.1, "beer_label": "https://d1c8v1qci5en44.cloudfront.net/site/beer_logos/beer-_489629_sm.jpeg", "beer_style": "Imperial / Double IPA", "auth_rating": 0, "wish_list": false }, "brewery": { "brewery_id": 1149, "brewery_name": "Sixpoint Brewery", "brewery_slug": "sixpoint-brewery", "brewery_label": "https://d1c8v1qci5en44.cloudfront.net/site/brewery_logos/brewery-SixpointBrewery_1149.jpeg", "country_name": "United States", "contact": { "twitter": "sixpoint", "facebook": "http://www.facebook.com/sixpoint", "instagram": "sixpointbrewery", "url": "http://sixpoint.com/" }, "location": { "brewery_city": "Brooklyn", "brewery_state": "NY", "lat": 40.6739, "lng": -74.0119 }, "brewery_active": 1 }, "user": { "uid": 1323484, "user_name": "TBoyle34", "first_name": "Teddy", "last_name": "B", "user_avatar": "https://d1c8v1qci5en44.cloudfront.net/profile/068001959c1ead20ea27ee6431db2da1_100x100.jpg", "relationship": "none", "is_private": 0 }, "venue": [] } }, "beer_list": { "is_super": true, "sort": "", "filter": "all", "count": 1, "items": { "has_had": true, "total_count": 99829, "beer": { "bid": 117064, "beer_name": "Resin", "beer_label": "https://d1c8v1qci5en44.cloudfront.net/site/beer_logos/beer-_117064_sm.jpeg", "beer_style": "Imperial / Double IPA", "beer_abv": 9.1, "beer_ibu": 103, "beer_slug": "sixpoint-brewery-resin", "beer_description": "'Resin' is named after the sticky ooze that secretes from the lupulin glands of the hop cone.", "is_in_production": 1, "created_at": "Fri, 06 Jan 2012 06:20:54 +0000", "auth_rating": 0, "wish_list": false, "rating_score": 3.991, "rating_count": 44717 }, "brewery": { "brewery_id": 1149, "brewery_name": "Sixpoint Brewery", "brewery_slug": "sixpoint-brewery", "brewery_label": "https://d1c8v1qci5en44.cloudfront.net/site/brewery_logos/brewery-SixpointBrewery_1149.jpeg", "country_name": "United States", "contact": { "twitter": "sixpoint", "facebook": "http://www.facebook.com/sixpoint", "instagram": "sixpointbrewery", "url": "http://sixpoint.com/" }, "location": { "brewery_city": "Brooklyn", "brewery_state": "NY", "lat": 40.6739, "lng": -74.0119 }, "brewery_active": 1 }, "friends": [] }, "beer_count": 160 } } } and here is roughly the same kind of data from another data source I'm working with. { "status" : "success", "data" : [ { "servingTemperatureDisplay" : "Cool - (8-12C/45-54F)", "labels" : { "medium" : "http://s3.amazonaws.com/", "large" : "http://s3.amazonaws.com/", "icon" : "http://s3.amazonaws.com/" }, "style" : { "id" : 33, "category" : { "updateDate" : "", "id" : 10, "description" : "", "createDate" : "2012-01-02 00:00:06", "name" : "American Ale" }, "description" : "", "ibuMax" : "45", "srmMin" : "5", "srmMax" : "14", "ibuMin" : "30", "ogMax" : "1.06", "fgMin" : "1.01", "fgMax" : "1.015", "createDate" : "2012-01-02 00:00:06", "updateDate" : "", "abvMax" : "6.2", "ogMin" : "1.045", "abvMin" : "4.5", "name" : "American Pale Ale", "categoryId" : 10 }, "status" : "verified", "srmId" : "", "beerVariationId" : "", "statusDisplay" : "Verified", "foodPairings" : "", "srm" : [], "updateDate" : "2012-01-02 17:10:00", "servingTemperature" : "cool", "availableId" : 1, "beerVariation" : [], "abv" : "6", "year" : "", "name" : "The Public", "id" : "O3tmVI", "originalGravity" : "", "styleId" : 33, "ibu" : "", "glasswareId" : 8, "isOrganic" : "N", "createDate" : "2012-01-02 00:02:15", "available" : { "description" : "Available year round as a staple beer.", "name" : "Year Round" }, "glass" : { "updateDate" : "", "id" : 8, "description" : "", "createDate" : "2012-01-02 00:00:06", "name" : "Tulip" }, "description" : "The Public™ is a delicious easy drinking pale ale made from a simple recipe of quality grain and top notch American hops. Tawny hues of caramel and amber are a trademark of the Public ale as well as a delicious spruce crispness resulting from a beautiful abundance of hops! This beer will be produced throughout the year and serves as the foundation of our product line." }, ... ], "message" : "Request Successful" } I need to normalize these (and a few other) data feeds into a relational database to do some analysis. I'm using Ruby because the magic methods make cherry picking this stuff easy and ActiveRecord (which you can't even write an implementation of in Swift) is very efficient from the standpoint of wasting my time on useless activities. I could have used Python, or I have a really decent ActiveRecord library in ObjectiveC that I wrote and with KVC cherry picking all the stuff I want into the format I want is dead easy. That page you linked is a joke.
&gt; That is actually hilarious. And totally contrived. As you like. I have also just converted one of my apps to use JSON. I had no trouble. &gt;Here's a query from online brewery database. Do you honestly think I'm going to read that? &gt;That page you linked is a joke. Shrug.
Signing in and logging in are two different things. Logging in doesn't naturally write data to the database. 
Wow, that is exactly what i did and it works
YES! That is what i figured out too and it worked
Yes, string is shit. So hard to use.
Wow, that helped sooooo much
Try looking at my code. It works https://github.com/bbookman/BMap/tree/Alpha It is in the MapViewController.swift
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [bbookman/BMap/.../**3a97746090992dfc803d60864779d54e75b560ed** (Alpha → 3a97746)](https://github.com/bbookman/BMap/tree/3a97746090992dfc803d60864779d54e75b560ed) ---- 
I FEEEEL you. I still don't really get ! and ? and . ?? .. I'm about 2 months in
So your code is what is doing the storing of the user's data right? So if that code is called when a user presses say a login button... then yes it gets stored again. Your question is dependent on implementation. So does YOUR code delete the user info on logout? What code is doing this?? Not firebase, not google. "The first time the user signs in with facebook authentication through firebase, firebase stores the user's info (name, email, and profile picture url) into the firebase live database via a facebook graph request" I am doing something similar but I choose not to store that stuff in firebase. I grab the social data for the user because i want to display it . let the user know they have logged in and are super special because of it. 
If you are sure that self is not nil. Use unowned
There are prepare methods that he should be using.
You should reformat the text, it's just blended together. Another option is to make a link and post the full code somewhere.
The latter is Android though, not Android Studio. Debugging, dealing with auto complete, Linting and otherwise most of the aspects of development related to actually writing code are a dream on AS because of IntelliJ. Writing code in Xcode is like playing a dart board prize game where the prizes are all shit: will I need to erase my derived data today, delete all my profiles and licenses, will SourceKit crash with a useless error that doesn't tell me why? 
You’re preaching to the choir here. I guess I wasn’t clear that that’s what I meant by “Regular development”. Xcode is hot garbage that is simultaneously way too complex to use and overly simple in its feature list. 
Post it somewhere like Paste Bin
Can’t get out? What does that mean? The array does contain the values you added to it. Add a breakpoint to make sure that line of code is even getting executed. 
Well considering your example was like 4 attributes and you took 20 feet of web page to explain/code it - I'm just giving you a little sense of scale. Problem with toy problems is they are toys.
What you’re doing in code is valid, but it doesn’t look like it’s valid JSON data considering that there is nothing separating url and the text around it. 
I don’t recommend this for beginners. That class, at least for the students attending it, are junior/senior level students. The class assumes you have programming knowledge already. Beginners, if OP is one, might struggle with it really. That class is not designed for beginners. It’s designed for students in junior/senior level classes. 
Glad to help!
Are any web frameworks for Server Side Swift already using this?
No; it was literally only just released. 
&gt; You control both ends of the protocol? Sure, if you say so.
I guess you could follow the Vapor or Kitura developers on Twitter? I'd be curious to hear why you're interested – these frameworks ought to be able to make their connections however they please without it affecting you in the slightest.
Vapor is planning (right this second actually) to replace their already quite similar code with this for the Vapor 3 release.
Maybe it‘s also a good idea to use [weak self] in closures when self is being referenced. But that’s a bit offtopic i guess.
When is Swift 4.1 going to be released?
Isn't number 8 kind of like Codable, is it? Codable conforms to Encodable and Decodable.
There’s [Swiftalk](https://discord.gg/g9u8vQn). It’s not *that* active, but I don’t know of any other. There’s also [ios-developers](https://ios-developers.io/) on Slack, which is *really* active. 
Codable is not a protocol its an alias for Encodable &amp; Decodable
I'm not familiar with firebase, but this appears to be similar to the problem of getting data "out" of the dataTask that handles an asynchronous URL request. To do that, you're going to need to force synchronization in your code via semaphores or whatever before you can use the values in `ratings` (though in most cases you probably don't want to do that), or you need to capture a completion handler that will run and process ratings once all of the data has been appended to it (or just do the processing in your closure if you can). You can read a bit more about both approaches [in this thread](https://www.reddit.com/r/swift/comments/6twrtw/using_the_urlsession_method_datatask_that_takes/).
That was a question but apparently you’re too butthurt to reply. Enjoy your busy work. 
Your guess is as good as mine.
Shrug.
This is very interesting, thank you for the explanation! In general I really like how Swift requires manual casts, because it forces you to think about what types you really want to use. One example of a method where I use `NSUInteger` is this category method I wrote for `NSTextStorage` called `- (NSUInteger)locationOfNextSubWordBoundaryFrom:(NSUInteger)location`, which searches for start and end boundaries of subwords in words using "CamelCase" or "snake_case". Since it is a basic "search" method, I figured it shouldn't have to deal with ranges, so I just use locations instead. I will look into apinotes to see how I can customize that =)
- `!` is a forced unwrap. It means you either know that the `Optional` is non-`nil` or you don't care. Not the best thing to use since it can result in some very bad run-time crashes if abused. - `?` is an `Optional` if put on a type or tests for an `Optional` with a non-`nil` value. `Optional` is for values that might not be present when you set them. For example, you write a method that converts text into a number. `func convert(text: String) -&gt; Int` What if it won't work because the text makes no sense as a number? Do you return a default value? What value makes sense? Any value you return could be a possible number too. You could return two values, one that is the converted number and one that says whether the conversion worked or not but that can be clumsy. `func convert(text: String) -&gt; (Int, Bool)` Now you have to still return a number but you check the `Bool` to see if you should use it. What if you forget to check? Huge source of errors. So we use an `Optional`: `func convert(text: String) -&gt; Int?` This means you either get a value or you get a `nil` `Optional`. You have to unwrap it to use it (or be very bad and ignore it by force-unwrapping), if you can unwrap it then you get the actual value. This is very safe! `if let value = convert(text: myText) then { ... }` - `??` lets you unwrap and provide a default value if the `Optional` is `nil`. Sometimes you know the value you want even if the conversion was no good: `let value = convert(text: myText) ?? 20`