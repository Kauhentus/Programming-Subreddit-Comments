Hi! A few things - firstly, it's not a string of integers that is the input, but an array of integers. Two different things, and might sound silly, but is an important distinction. With an array of integers, you can loop through the array with a for loop, using the value as the key, and incrementing the value in the dictionary. Something along the lines of the following should help a bit func buildHT(arr: [Int]) -&gt; [Int : Int] { var results = [Int : Int]() for num in arr { if let r = results[num] { results[num] = r + 1 } else { results[num] = 1 } } return results }
u/khaledam Since you're obviously working on it and not having success I'll show you two compact ways to do this: The first way is like this: Dictionary(numbers.map {($0, 1)}) { $0 + $1 } I'll break it down: // generate a sequence of key-value pairs // the values represent one occurrence of that key let pairs = numbers.map {($0, 1)} // make a Dictionary of all the keys // adding up each occurrence when there's a repetition Dictionary(pairs, uniquingKeysWith: { $0 + $1 }) And the second way: foo.reduce(into: [:]) { $0[$1, default: 0] += 1 } Which breaks down like this: // iterate over numbers // creating an empty Dictionary to hold results numbers.reduce(into: [:]) { // read the key $1 in the dictionary $0 // if the key doesn't already exist add it to the Dictionary with a default value of 0 // then add 1 to the current value $0[$1, default: 0] += 1 } This one iterates over each key in `numbers`. It creates an empty `Dictionary` and if the key does not exist in the Dictionary it inserts that key with a value of 0. Then it adds one to the value associated with the key. So the first time a key is encountered the `Dictionary` gets it with a value of 0, then adds 1 to it. The second time it adds 1 again, and so on. 
I can say from the camp of worthless beginners (cross comment from r/iOSProgramming): - FAQ is important. r/learnprogramming has one that quickly routes you to resources and shuts you up from asking dumb questions. - there’s already a mildly hostile environment (occasionally) towards newbies that I’m ambivalent about. On the one hand it is easy to find some info and on the other hand it’s difficult as a beginner to know what to search for when you may not be using the appropriate jargon and may not be able to discern the value of information you find. I say that because early 2015 I tried jumping back into self-taught programming (day job as a healthcare administrator) on my own from google searches and ended up very frustrated and gave up, until last month when I found resources on reddit. - I found my resources by looking at other newb posts where people respectfully routed newbs directly to available guides/FAQs. - I’m sure in a few months I’ll be excited to see more intermediate topics floating around. I know I read a bunch of crap I vaguely (or completely don’t) understand now, which is really cool when you can see yourself beginning to understand more and more.
You can replace your `if let…else` with this: results[num, default: 0] += 1 It does the same thing. func buildHT(arr: [Int]) -&gt; [Int : Int] { var results = [Int : Int]() for num in arr { // iterate through the array, referencing each value in arr (at the time) with the variable num results[num, default: 0] += 1 } return results }
Here: https://github.com/raywenderlich/swift-style-guide
What exactly are you trying to achieve?
I've had the JetBrains Ultimate suite for years, and use it on Ubuntu, Windows, and now my Mac. If you're a noob, I'd stick with Xcode until you feel comfortable with Swift. It's really important to know AppCode actually throws you over into Xcode to work with story boards. Pro's: The editor is awesome, and has a vim mode for us older hacks. Unit testing platform is great. If you're coming to IOS/swift from android development on Android Studio, you'll feel more at home. If you've grown tired of Xcode nagging you that the variable you just created hasn't been used anywhere **AND YOU NEED TO DEAL WITH IT NOW!!!!!** You'll really like AppCode. Con's: Noobs will feel lost. Every training program I've seen focuses on Xcode and have never had one even mention AppCode. My current workflow: Create new projects in Xcode. Work the storyboards, and get IB connections laid out. Do some basic coding. Switch to AppCode and write Unit Tests, and start serious coding. Use Atom to edit and create markdown files. Use GitKraken to publish and manage the repo. I don't use the repo tools in any apps, only in GitKraken. 
Dat git integration, tabs, refactors and customization. I curse every time i have to open xcode...
I've mostly used Swift to write MacOS apps; very little iOS -- I'm not that interested in it and my focus is mostly audio and MIDI. My preference of Swift over Python as languages probably has to do with debugging. Swift as a language helps one avoid writing bugs; Python, not so much. 
Nice!
Hey you mentioned there's a vim plugin for Xcode - I could only find only for older versions of Xcode, is there a good one for Xcode 9? 
Yeah it's at https://github.com/XVimProject/XVim2
&gt; "Length of Learning Swift?" About 5. Don't you think?
&gt; "Length of Learning Swift?" About 5. Don't you think?
To add onto this, if you have an edu email you can get all of Jetbrains IDEs for free.
Roughly the time it takes for a caterpillar to traverse a piece of string.
print out something from the printer using swift code on linux
Xcode has all of this?
Only in theory... Appcode is years ahead
I’d stay away from AppCode for now. With all my love and respect to JetBrains and their products, AppCode is difficult to make work well in big projects, especially ones that mix not Swift and Objective-C. Indeed, all the good and nice refactoring features we know and love from IntelliJ are there, but at the price of an unnecessarily heavy IDE, which 50% of the time does not even show you hints and completions, unless you rebuild from scratch every time. I am saying this not because I think it is JetBrains’ fault, and neither doe I think that Apple is 100% to blame for this. The truth is that as much as we try to stay away from XCode, there is no moving forward without it, and this is the state of affairs at the moment. Just my 2 cents. 
This is a very efficient way to do a permute. It's pretty functional, the only thorny part is the `temp` I had to create to carry over the result to the next iteration. I'll have to look at it further, I have a few ideas how to trim that down and make it much more functional. // Heap's algorithm extension Array { private func permute(end: Array.Index) -&gt; [Array] { precondition((self.startIndex...self.endIndex).contains(end), "End index out of range.") guard end &gt; 1 else { return [self] } var temp = self return (0..&lt;end).reduce(into: [Array]() ) { $0 += temp.permute(end: end - 1) if end % 2 == 0 { temp.swapAt($1, end - 1) } else { temp.swapAt(0, end - 1) } } } func permute() -&gt; [Array] { return permute(end: self.endIndex) } }
This is exactly the kind of response I was looking for!! I’ll have to peek more at it later. I thought if you passed self through a closure then it would maintain the reference, is that not the case here? I like what you did, especially making it an extension of Array. Thank you so much :). 
I had one error in the code which I corrected. if end % 2 == 0 { should be if end % 2 == 1 { In this case I'm not passing `self` through a closure. Instead, I'm recursively calling `permute` on a new `Array` every time. The `self` then refers to this new `Array`.
Try changing occurences\[num\] += 1 to occurences\[num, default: 0\] += 1. This seemed to work in the REPL on Linux. That is a very broken installation of Swift though. My guess is that Swift can't figure out what is going on so barfs on your code. By the way if you are only dealing with the digits 0 - 9 it might make more sense to use basic data structures unless the goal is to work on a bit of code using maps. The digit would just index into the array and the array element would act as an accumulator for that digit. You might be surprised at the performance differences. In this case I see the high level abstractions as adding complexity when it isn't needed. This wouldn't hold true for other types of data so only default to complexity when it makes the code and data usage easier to swallow.
Wow, that sounds awfully useless.
One other thought, the REPL is golden when it comes to learning swift. That and a good text or two. It is one reason why I can see Swift replacing Python in many applications.
Thanks! I was trying to understand the other solutions you gave me, but they're a bit too advanced for my level right now. Much appreciated either way.
How does AppCode work for Swift backend like Vapor? That is what it makes me think about buying it. Can someone give me some highlights?
Plot twist - most employers DGAF about how well you know swift. Employers want to see a strong base in CS fundamentals and understanding of apis. Language is trivial to learn. Design and engineering sense is not. There is no shortcut.
As others have mentioned, it's hard to do ONLY AppCode. I use it pretty extensively, but always also have Xcode running for things like storyboards and view debugging. I do mostly iOS development, and a networked application at that, so one of the other features that I like about it is that you can run or debug multiple copies of your code on separate simulators at the same time (which you can't really do in xcode). Other things that I really like are he refactoring and the quick way to do implements/overrides methods/variables. There's a UI to look for existing methods and it will fill in the \`super\` calls for you (which because i'm a dope sometimes, I tend to miss that). Lastly, the find/replace is much more streamlined than XCode, and doing a replace across the entire project even dips into the project.pbxfile, so it's super helpful when refactoring class and file names.
Do already have programming experience? Where are you struggling? What did you already try? Please give more information when you want to get an answer, as I think you might be interested in learning something or are you only interested in the solution?
A "stack"?
No, I mean something like MEAN - MongoDB, Express, Angular, and Node So something like that but Swift must be one of them
Ahh, an acronym. I'd call it Swift.
What would it stand for?
Swift.
And what?
Nothing else, that's all I need. Anything else is just some framework or module I really don't need to name.
You can build a whole website or web app with Swift alone?
Sure, why couldn't I?
I'd call it a waste of time.
No kidding, I have more important things to do than try to cobble together a name for the technology I'm bundling together. That sort of crap is for middle managers who go to meetings all day and need to make themselves feel important. Swift, my code is written in Swift. It uses some other stuff but you don't need to know about that since I have nice interfaces that hide the implementation details from the rest of the world. Just as it should be.
https://stackoverflow.com/questions/31927604/call-python-code-from-an-existing-project-written-in-swift
thanks
I posted this as a "maybe useful to you," rather than an endorsement. I don't know these folks at all.
&gt;Theoretically it could extend `Collection` but then I'd have to code around the loss of `swapAt()`. This isn't true, you really do need `MutableCollection` – types that conform to `Collection` aren't required to have the ability to change the order of its elements, which a permutation requires. You don't need \`where Self.Index == Int\`, though :)
Web development continues to baffle me, but i'm sure they have a reason for over complicating the basics with acronyms. Anyhow Vapor is a server side framework written in swift, [repo](https://github.com/vapor/vapor). But you are confusing languages with frameworks. Node is a framework, not a language. Vapor is a framework, not a language etc. Don't over complicate it when trying to learn how to program.
Not sure why this is down voted, its true. Yeah you need to know the language (which doesn't take long when you already know a few), but ones ability to problem solve and architect is 95% of the job
I needed that in order to do: return (0..&lt;end).reduce(into: [Self]() ) { Or I get: Binary operator '..&lt;' cannot be applied to operands of type 'Int' and 'Self.Index' If I use: return (startIndex..&lt;end).reduce(into: [Self]() ) { I get: Value of type 'Range&lt;Self.Index&gt;' has no member 'reduce' And so on. So it's down the rabbit hole without the `where Self.Index == Int`
Yeah, sorry, I meant to say that having integer indices isn't inherent to doing a permutation. I've read up on Heap's algorithm, and I wonder if it even matters whether you do `if end % 2 == 0` or `if end % 2 == 1` – in both cases the function seems to produce all permutations of the collection, the order is just different. Or have you found that one doesn't always produce the correct output? About your `var temp = self` issue, you could avoid it by making the function (with is private anyway) `mutating`. You'd have to create a copy inside the non-private `permute` function instead, but it is expected that you need to create a copy since you're swapping elements and the collection you're calling it on isn't mutable. Having the copy made in the non-private `permute` function makes sure that you're only creating a single copy instead of multiple.
Because this is the Swift forum and its largely infested with wannabe highly paid iPhone programmers that think you can spend a week and boot camp or read a book and then deserve $100k a year.
Hey I am a college student currently in Las Vegas, Nevada and I’ve been looking for Junior level iOS Positions here and any internship opportunities. If you could post some that you find in the area that would be great! 
&gt; Employers want to see a strong base in CS fundamentals sure, believe that fairy tale. nothing is as important as experience and the skill to get stuff done. most programming jobs are about wrangling APIs and frameworks. the jobs where you really need "strong fundamentals" are rare. 
colleges don't teach problem solving. fresh CS graduates are useless.
who needs a certification if you just could prove your skills by releasing an app or two?
Yes, I definitely saw errors when they were swapped. It ended up generating some of the combinations twice and missed others. I’ll have to investigate further why that happens, it’s possible I made an error in implementing the algorithm. I’d like to stay away from any kind of state in order to be more functional. That means no mutability at all, each combination is immutable. So no `mutable`, no `var`. It can be done, although it might be a bit convoluted. 
nit pick: I think `var permutations:[Self]` might be a more Swift-y name for this?
`MutableCollection` and `swapAt(_:_:)` are inherently mutable – my take on this is that even in a functional paradigm it's fine to make use of this, as long as it doesn't leak to the outside world. I even suspect that there is no way to return `[Self]` if you want to completely avoid `var`, I think the best you'll be able to do is `-&gt; [[Element]]`. Moreover, having `permute(end:)` return an array and combining them using `+=` causes some unnecessary copying of permutations from one array to another, because the permutations aren't stored on the same buffer to begin with. You could improve this by passing an `inout [Self]` parameter that the function appends to directly, but again, you'd have to be okay with (internal) state :) Here's my implementation: extension MutableCollection where Self: BidirectionalCollection { private mutating func permute(indices: Indices, flag: Bool, result: inout [Self]) { guard let lastIndex = indices.last else { result.append(self) return } for index in indices { permute(indices: indices.dropLast(), flag: !flag, result: &amp;result) swapAt(flag ? index : startIndex, lastIndex) } } func permute() -&gt; [Self] { var copy = self var result: [Self] = [] copy.permute(indices: indices, flag: false, result: &amp;result) return result } } This looks fairly optimal to me, bar some micro-optimisations that the compiler might do for us anyway.
This is pretty subjective, but people often expect computed properties to have O(1) time complexity.
Maybe Swift should just do away with `var/let` syntactic sugar in that case.... no more confusion!
A person that's never written a program before can cut and paste their way thru a tutorial and release the app. The only apps that are useful are the ones that aren't found in tutorials.
Hmm, yeah this aligns with some thoughts I had. I was going to take another pass at it and make sure I kept the copying to a miniumum for speed reasons. As to mutability, I agree that there’s degrees of it. Having some mutability might not be 100% functional but as long as it doesn’t leak out it’s a good step in the right direction. Avoiding it entirely might just be too convoluted to be worth the bother. When I get back to a computer I’ll take a look at your implementation and see how it works. 
Perhaps, I was going along the pattern of `map`, `reduce`, and so on. 
Depends on the classes you take. The engineering classes I took have been very useful.
ah yes... but those take argument. fair enough.. I was thinking along the lines of `.reversed`, `.byAppending`, etc
This is an ad, and not a story. :-|
yeah, no shit
I think your confusing 'Web Development' with more Backend dev, you have devops which is setting up the server, docker, nginx etc, then the backend API and DB production, but these days they come as 1 person referred to as a 'Full Stack' dev. You can be a full stack with swift, which would basically just swap out nodeJS/php/ruby/python for swift
Probably the only way is bind with c library. I have experience. I want to know if there is a class inside the foundation library that I can use. I have seen python strandand library provides the class.
\`reversed\` is a method though, not a property :)
PS: Sometimes I really hate the random syntactical additions to the swift language. 
AppCode is amazing, I’m using it for years. For Objective-C it’s absolutely must have! But Swift support is not perfect =(
this sub is even more nooby than the iosprogramming one.
lol this is not valid swift, if you are asking about https://github.com/fotock/Developing-iOS-8-Apps-with-Swift/blob/master/Lecture13.md then writer was to lazy to write: var accelerometerAvailable:bool var magnometerAvailable:bool So {} is like pseudo template engine as a exercise for the reader.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [fotock/Developing-iOS-8-Apps-with-Swift/.../**Lecture13.md** (master → d9e32db)](https://github.com/fotock/Developing-iOS-8-Apps-with-Swift/blob/d9e32db7b388dacc91dd4bebe1768872d395f2e3/Lecture13.md) ---- 
You add a navigation bar programmatically. You have to push or present the view controller with whatever method you want to use(segue, button, etc)and then add the nav items like leftbarbuttion, rightbarbutton, title, etc in addition to the bar. Then when you want to press back, you popviewcontroller or dismiss depending on how you showed the one scene viewcontroller. You can also just simply add it through storyboard, but you have to select "simulated metrics" in the attributes to have it show on the storyboard with a setting of top bar: translucent navigation bar. The rules for it actually showing up in your app and how you use it depend on the way you showed the view controller through pop or push. Otherwise, I wouldn't even consider it a REAL embedded navigation controller(it still is technically) if you're just using it for one view controller. Im assuming you googled this already and know how to add the bar, but dont understand the concept.
Lol I started learning programming through web development. You just replace the A or R with an S. MEAN stack is old and what people used many years ago. MERN isn't really a big thing as MEAN because nowadays you probably wouldn't even use the MongoDB in M for MERN or MEAN. You might replace the M with like some other database option like Postgresql. Then it would turn into PERN or whatever. Web development is changing all the time so the options are greater now and there wouldn't really be anything related to Swift in a stack sense.
\&gt;Xcode alternative Not really, the app still needs Xcode to run.
&gt; How does AppCode work for Swift backend like Vapor? Alright-ish. It doesn't support the SPM, but neither does XCode (supposedly, SPM support in AppCode is on the radar, though). When I started using AppCode it would just randomly crash the build system a lot. For some reason that changed after an update, so now it almost never crashes. Sometimes it still has problems finding tests... so in some situations it tends to be a bit fiddly, but so does XCode. The default project layout doesn't make a lot of sense, but luckily you can build your own one where you can define what should be shown and what shouldn't. Also, if you do Cmd+Shift+O (quick open), you'll have to configure some filters. But if you configure a couple of things, it's actually quite nice. Can't really imagine going back to XCode, last time I checked it didn't even have a way to display a README...
We often find it useful to always have one and just hide the navigationBar until a particular viewController needs it. It allows us to reuse viewControllers in apps that always have navigationBars and ones that don’t. 
Have they remove the SAS model? If no, no thanks. Regarding Jetbrains itself, they have top 1 for other languages, no doubt. But AppCode add a innecesary steps in my workflow. Xcode have a lot of longterm bugs and missed features but still, you can find your way to work more or less "stable"(Xcode versions x.2 and up, not 0, betas, etc)
Making up your own pseudo syntax in beginner language tutorials, because you can't be bothered to type 4 lines, sounds like a good idea ^^/s
Thanks! Was on a slide on the last stanford ios 11 lecture. I know swift pretty well and was saying wtf is that?! Had gotten used to wacko changes from swift 1 to 4. Thought it was that sort of thing. 
Still in OBJ C world
Never heard of Titanium before. Some kind of framework?
[Swift API Design Guidelines](https://swift.org/documentation/api-design-guidelines/) 
I’ve seen that but it doesn’t seem as extensive as other documents I’ve seen for other languages. Do you think it’s more than enough or would you say it’s kept really minimal?
About 10% of phones in the world run at least one Titanium app. Its a framework that lets you write Javascript code and then translates that to native. Although I am not sure how. 
It's basically the lesser version of React Native/React.
If you have programming experience, you should do fine. Javascript was fairly simple for me when I build my app using a framework similar to Titanium (4 month period). And that's coming from guy who switched from Swift to Javascript, so I had no prior experience to Javascript whatsoever. If you understand logic in programming, i think it's very easy to pick up a new language/framework. By the sound of it, since you have have prior dev experience, you should be more then capable of picking it up. You might have to put in extra work then everyone else at first, but once you start walking, running becomes easier. 
The mods on this sub are absent and it shows. It’s totally ok if they don’t have time to run the sub properly and create tools to help the discourse and reduce redundant easily answerable questions but if that’s the situation please give up your position to others who are interested and have time to do this for the benefit of this sub.
You can learn the basics of programming with both languages, but if you want to focus on AI you should definitely go with python. Despite all this, you should note that deep AI programming is not really beginner-friendly.
My experience tells me: You will learn more about programming with swift. But you can do way more with Python. Not in the broadest sense - they both can do a lot. But if I need to transform some data around and produce some JSON files or receive some API output and look at it, Python is the best. I definitely prefer Swift for a number of reasons but I use Python almost every day at work and I am not a developer.
So I did a time test with the permutations of 1 to 7 inclusive and got these results: &gt; time for heap's algorithm: 7.404415011405945 &gt; time for my algorithm: 4.81871497631073 Here's the pastebin of the timing code: https://pastebin.com/49qmu5yA Any guesses as to why? I'm struggling to see why the heap's implementation is running slower.
Cool! Yeah I'm just searching for a language that i can use to create small programs to make my life easier. I think I'm going to finish my swift course and after that i will probably start learning python. Just out of interest, for what kind of things do you use python almost everyday even tho you prefer swift. 
Yeah i know that it definitely isnt something for beginners but I'm just thinking ahead haha. Thanks for your reply 🙌🏻
Yeah, I'm pretty sure it's the addition operator, along with return values. There are too many copies going on and it slows things down a ton. I have to go through and trim them down, especially since we already know how many spots there are in the final array - it's the factorial of the number of items. I should be able to pre-allocate the array and populate it as we go, reducing the number of copies made.
Thank you for the reply. I was also wondering if these frameworks let you convert code from JS to native. They have said that the goal would be to make all the apps native since the internal apps run on Ipads. Is there anyway to access the code the app runs on the phone? Or is the compiler inside of the phone? 
To be independent on the platform, go with Python. Even more for AI stuff. Source: app developer that learned Pyhton way too late and regrets it.
What do you mean with that you learned it too late? 
I'm in the same situation OP so I'd be interested to hear how you get on. Part of my new job will be maintaining an old iPad app (remember iPads?) written with Ti. The Titanium slack channel is open to join, is where the small Ti community hangs out if you have questions. You'll need them because the docs are terrible! The actual Titanium code is open source if you want to try and figure out what it's doing (I'm too dumb haha).
He/she wishes they’d learned it sooner
Well it's a windows machine so it would be a pain to set up Swift. Writing little scripts in Python is super simple. So if I need to transform some data or do simple analytical stuff. If you work with data, spreadsheets and stuff like that, knowing Python is like steroids. 
I tried this last week and honestly, it needs a more of an explanation of what it does and doesn't do. Once something in the demo is scanned, is it stored? If so, where? Does it or doesn't it do OCR? The docs need much more of an explanation of its capabilities. In Africa on a shitty connect at the moment, which makes finding out just what this does and doesn't do more of a PITA.
Programming is pretty much a skill by itself, programming languages and frameworks are just extensions of the basic knowledge of programming. If I don't program in PHP and I start programming again 5 years later I'm a better PHP programmer than before because I kept programming in Swift, Python, F#, Elixir and other languages. Every language you use gives you new insights and another way of thinking about code, tooling, IDE's and frameworks. For example Elixir isn't a completely new designed language, it's built by someone who took his Ruby experience, removed the ugly bits and applied it to a functional programming language. This rich experience is what you get by being a polyglot programmer. If I were you I would do this: * Create an app in Swift using UIKit * Create the API for the backend in Python using Flask
AFAIK Titanium does not compiles the JS code to native, it relies on a JS interpreter (quite different per platform) to do the heavy work. Anyway, you should be able to port the code with the business logic to Swift, but you should have basic JS knowledge to maintain the current apps.
The README has a *features* section which explicitly lists what this library supports. Its not hard to do a tiny bit of reading
This looks good! The only recommendation I have is to make a `ScannerView` so people can embed this inside their own custom View Controllers instead of using the preset.
There are more courses on playgrounds, like “Hour of Code” and “Code machine”. They are more for practice, but I am sure it will help you out.
stacks usually include a database and web server. Generally a built-in web server or database server in the swift runtime is not ideal or best practices - if it even exists.
It's* for it's = it is or it has : /
&gt; AFAIK Titanium does not compiles the JS code to native, does not compile*
It happens relatively often with xCode, clean the project and restart xCode, it’s usually enough 
Forget about Xamarin unless you want to limit your future mobile app development to a few niche employers. If you are serious about iOS go with Swift. 
You can try using KVO
Most every programmer learns a number of languages. Trying to do much with just knowing one is pretty hard. I've learned about 12 so far. I didn't want to learn JS, but it's now my latest because of Node.js. I think I like JS better than Python, but after a while, it's just syntax. After a while, you don't care anymore, you just have to adjust your thinking when you switch from one to the other. The downside to Swift is that it changes a lot (maybe it'll slow now) and it has all these "special things" that you have to remember that I haven't seen in any other language. I like to keep the language simple and focus on the features the customer will see.
I just want to add to this thread that you can create backend using Swift with Vapor or Perfect.
Pick a book and start reading. Ray Wenderlich's books, Big Nerd Ranch books, Hacking With Swift books. All three are good options. Buy one and start reading. 
wrong sub. you're looking for /r/iOSProgramming
wrong sub. you're looking for /r/iOSProgramming
You will regret spending time on xamarin. Get things done properly and do swift 
swift is super easy, if you know c# you can easily move on to swift. the hard part is learning all the cocoa frameworks which xamarin won't make it any easier
Don’t bother replying to this kind of question. In the last month he basked how to start learning 3 languages. I don’t get these people
What.. the fuck? That's the most idiotic thing I've ever heard. If the guy wants to ask questions let him fucking ask questions. 
Disclaimer: Appcelerator (the original company behind Titanium) was an angel investor for one of my previous companies. I worked closely with them in that time period with things regarding the core Titanium design. Titanium is a cross-platform native app SDK which allows its users to write in JavaScript. It provides JavaScript language bridge with a large set of libraries. You can write in JavaScript to write native-ish apps. The library APIs you call are accessible in JavaScript, but they use language bindings to cross into the platform’s native language (Objective-C on iOS) to call the correct APIs. On iOS, they use JavaScriptCore as the JavaScript VM. (On Android, they used V8, but while I was there, the plan was to switch to JSCore for all platforms and I helped them port JSCore to Android. But I was recently told they never switched so they still have different VMs for each platform.) Language bindings aren’t new stuff and this technique has been done many times before for many different languages. Apple used to have first class support for PyObjC and RubyCocoa back in Mac OS X 10.5, where you can write native Cocoa apps in Python or Ruby. (There was even Interface Builder integration.) I wrote the world’s first full-featured full Lua bridge called LuaCocoa using the same techniques as PyObjC and RubyCocoa (thanks to some kind help from the RubyCocoa creator to point me in right direction). There was even a JavaScript bridge years before Titanium called JSCocoa. And today, there is yet another JavaScript bridge called React Native (which sadly didn’t learn from Titanium’s hard lessons, like with thread design). Titanium’s first distinctive feature was they created a large set of (mostly) cross-platform APIs in JavaScript that would work on iOS and Android. Unlike PyObjC/RubyCocoa/LuaCocoa/JSCocoa where you would call native Cocoa APIs directly (akin to how you call Obj-C Cocoa APIs in Swift), they invented an API abstraction layer so their APIs could work on iOS and Android (but conversely look like neither iOS nor Android). Cross-platform API abstraction layers aren’t a new thing either. There are lots. However, *natvie* cross-platform abstraction layers for GUIs (those which call native widget sets) are fairly rare. So this is the other distinctive feature of Titanium. (React Native makes a lot of noise in this area, but when you get into the devil of the details, it becomes debatable, like TableViews.) But there are some. I’m currently implementing new backends for a C based library called IUP, which is designed with the intent that it can be used by almost any language (not locked into a single language like JavaScript). So for the most part, forking Titanium probably won’t do what you think it does. It already calls native Cocoa deep under the hood. There is a some what thick JavaScript layer between you and native though. If your goal is to remove/replace the JavaScript parts, that is not going to work as it is inseparable. (Again, this is one of my motivations for working on IUP because I’m sick if these massive, inseparable, dependencies.) There is a little confusion and ambiguity on the “compiled” aspect of Titanium. Another project I was somewhat involved with at Appcelerator was their Hyplerloop compiler. This would allow you to write directly in JavaScript code but call native Cocoa/Obj-C APIs without writing any language binding code. The Hyperloop compiler would automatically generate the language binding code. This is somewhat closer to PyObjC/RubyCocoaLuaCocoa/JSCocoa where you now write directly to the native platform APIs which can be more efficient (a big problem when I was there was their homegrown language bridge was very thick and slow). But it still must interpret all the JavaScript at runtime, so you still have the JSCore VM. But the generated binding code should be close to as efficient as you can get within the limitations of runtime language bindings. As for your job, you should find out what you are going to be doing. If they need people to continue writing/maintaining their Titanium apps, then you will be writing in JavaScript and against Titanium’s custom APIs. In this case, you will not be using Objective-C or Swift, and you will not be directly calling CocoaTouch APIs. (But an understanding of CocoaTouch will at least give you a mental model of how the Titanium APIs work.) If they need people to write iOS Titanium modules with Hyperloop, then your CocoaTouch knowledge will be more handy. You will need to learn JavaScript and you will have to write in JavaScript, but knowledge of the CocoaTouch frameworks is crucial. If they need people to write native iOS Titanium modules by hand, then your CocoaTouch and Obj-C knowledge will be useful. (Swift modules won’t be viable until after the Swift ABI becomes stable. It will also depend on Titanium’s support for Swift.) If your job is to help them figure a migration path away from Titanium, then there are probably a lot of opportunities for you to do lots of different things. As for whether you should take the job, unless you have a better offer, you should probably take it. If you want to be good in this industry, remember that your job is to solve problems, not be a code monkey tied specific language or framework. Take advantage of any opportunities to grow to be a better engineer/problem solver. 
For fun, I remembered we hosted a @codinginswift meet up once at Appcelerator and we got Chris Lattner to show up. https://twitter.com/ewingfighter/status/499748660658200576 
Why are you stressed? How much do you earn?
If it's a hobby, create with joy, if they sell well, it's just a plus. If you go with paid apps and you do a sale, like free for a week, aggregator sites will pick your app up and you will get some extra publicity, which can translate into money. Don't stress on it if it isn't your primary income, experiment with sales and check your stats.
Best resource for learning Swift is http://raywenderlich.com. Best Swift tricks and practices I learned from thier books and articles.
Making money from the app store isn't much about making apps, it's about marketing apps. Because you're one of 2+ million apps out there, it's very, very unlikely that you'll ever get seen without a great marketing setup. Most just do FB, landing page, eMail, YT, etc... The problem is that's what everyone is doing. The way things work is that whatever is new, usually becomes common very soon. Having a great UI is just going to put you on par with everyone else's app, because they all see each other and whatever UI you did will be or already is a tutorial in YouTube. It's a damn hard business model because it's so easy for someone to get into it. With an investment of maybe 2K, you buy a computer and read some tutorials and you have a product out on the market for millions to see. So everyone does it, and now it's all flooded.
It depends. Just because it’s a hobby, it doesn’t mean you should do it for free! Just focus on a user target (the users you created this app for). If for example you created a very useful app that could save them time or help them achieve a difficult goal in a very simple way, they would pay anything for it. This also mean that maybe you designed your app to be an everyone-app, which, trust me, doesn’t exist. On the business side, try to think of a smarter business model. For example, if you developed a game you might let users download it for free and play the first 5 levels. This gives them the opportunity to try it out, so that if they like it enough they might even want to pay to unlock more levels and play more, while also incrementino your app’s popularity.
This is a good point. I created a ticket to make sure this gets thought about. Thanks for the recommendation!
Maybe put the TL;DR in the beginning? lol Anyway I have never used python in an app before but a quick google search and I found this: https://pybee.org/project/using/ios-app/
Yeah, I've seen this, but there's no documentation, so no clue on how to implement it.
Hmmm, I see. I would assume that it’s a library and you just add it as you would any other framework (didn’t really read the article yet so not sure!). I don’t have much time to check it out now! But if you’re not in a hurry I could take a look at it this weekend
Maybe this is helpful: https://developer.apple.com/library/archive/technotes/tn2328/_index.html 
Thank you so much!
I never added monetization to apps in the first place.
I so want to downvote you just for that title.
Pretty much the same question that was asked yesterday. My answer then: https://stackoverflow.com/questions/31927604/call-python-code-from-an-existing-project-written-in-swift
Hmm, this doesn't sound like trivial stuff. If he was supposed to make the app, what was your part in the project? I estimate this app , for a competent iOS dev, would take roughly: API: 4 hours (including parsing and what not) Image capture and watermarking: 6 hours Map + overlay (unkown for myself I have done too much map stuff, assuming you could just use custom 'pins' and make a UI out of it to look like zones (10 hours) Saved data: 2 hours. General project setup and stuff 4 hours. Could be a good project for someone looking to just get an app on the store?
Does this actually work?
it kinda does, but you can always google around on the subject.
I think my biggest issue is lack of ratings. Maybe I should just list it as free for a week, post it on a few subreddits, and ask people to rate it
Hey dude, I'm currently working with Xamarin, despite having programmed mostly with iOS for most of my career, and here are some insights: \- Xamarin is used mostly for Hybrid development, like some people have said in the thread: there aren't that many employers for Xamarin compared to other technologies, but still, you might want to be a niche, it's nobody's business but your own. \- Xamarin projects differ from one another, I've seen many approaches. You'll have to get yourself familiar with architectural patterns, and those don't really depend on a specific language. You might see very commonly people using MVVM on Xamarin, along with tools such as MVVMCross. If you know what's MVVM, MVP and MVC, you'll be fine. \- Xamarin has a tool called Xamarin.Forms, that is used to write the code for the interfaces only once. If you're not using Xamarin.Forms you'll probably be using iOS functions in C#, and most of these functions are translations of their Swift/Obj-C counterparts. As you can see, it would be very interesting for you to learn more about programming before making a compromise and sticking to a single platform. As you said, you're a baby dev, you should be taking and creating the opportunities that are most beneficial for you at the moment. Would you say no if someone offered you a job working with Xamarin and C# right now? Well, in any case, I'd tell you to go and learn Swift before Xamarin as it'll give you a better understanding of the design and architectural patterns in iOS. As well as get yourself familiar with the functions available in the platform, as you'll be mostly using their translations in Xamarin. Besides, Swift is a great language, if you take your time to have lots of different experiences you'll have no problem learning Xamarin and C#.
I'd also recommend watching this video explaining some of the current status of Hybrid development: [https://www.youtube.com/watch?v=-n5G48o2bxQ](https://www.youtube.com/watch?v=-n5G48o2bxQ)
Depending on your printer, there will probably be some CLI program that can schedule print jobs for you. Find one that works. Then, invoke it inside of swift by using a `Process` which is part of Foundation. https://stackoverflow.com/questions/26971240/how-do-i-run-an-terminal-command-in-a-swift-script-e-g-xcodebuild#26973384
Also another alternative are the iBooks material for Swift. Not as deeper as the resources you mention but for getting the very basic of the language, these can help as well. Plus, these are free and it can give the opportunity to evaluate if OP buy those amazing books because like swift or not.
Got any suggestions for how to properly advertise the app (like other than the ones you said everyone uses like fb)? Is apple’s ad campaign thing a good option?
Transition to in app purchases. If you get one random guy who decides to buy a $10 IAP you will probably make more money than a month or more of users looking at ads. Plus ads make apps look really old and outdated now
Same. This is really the only sensible way to make money on the App Store these days.
I haven't used Apple's ads, but if they are effective, they'll get flooded as well. IMO, it's going to boil down to either someone has made an awesome app or they have a budget to really flood the market with PPI (Pay Per Install). The real issue is how many people are doing things. Meaning: everyone jumped on YouTube, Insta, FB, etc... so every one of these gets flooded out. Ask yourself, when's the last time you downloaded any app from an ad? I can remember all these company saying they had the magic formula, for $X they could make your app soar... years later, where are they? Apple blew the discoverability of the app store by allowing too many low end apps, too many knock off clones and trying to make everyone on the planet an app dev. The app store has become a spam dump.
Agh hate hearing it but i gotta agree. I suppose if you can setup some per-organization type app where you personally advertise to one organization (like a local bakery) and then try to slowly add more client you could probably start making revenue. 
I'm not stressed in any real-world way but even making mere pennies a day - its something new to consider. The drive before was to create helpful apps that would have been nice to have if I wasn't the developer but now the focus for me has changed - which, unfortunately, brings less joy.
Ha! I love all the assumptions you are making about me. I would say that's a perfect reflation of yourself onto mjTheThird. And also technically and in theory, the scientist can print a bigger dick with 3D printers. [They even printed a functional human heart :)](https://techcrunch.com/2017/07/13/researchers-3d-print-a-soft-artificial-heart-that-works-a-lot-like-a-real-one/) When you are finish printing the biggest dick in this world, I promise I will buy it off from you. And that's the most freedom and capitalistic thing I can do. Wish you well on your endeavors :)
Mission Control in Houston is in charge of flight, not launch. They wouldn't address lift-off to Houston. Until the rocket clears the tower, it's the responsibility of the controllers at Cape Kennedy.
&gt;the hard part is learning all the cocoa frameworks which xamarin won't make it any easier So true
Is your button outlet actually connected to a UIButton?
your button is probably not connected to a nib or storyboard view. Also if you are using storyboards or nibs just connect an action rather then adding the button action programmatically, unless you have a specific reason for doing so. 
Please post code as text instead of images, it helps people to debug it since they can copy-paste it into a playground or project.
Yeah, I had done that, but I'm following through the App Development with Swift book and it said to remove the connection and try re-adding it programmatically. I followed the instructions and it gave me this error :( guess it doesn't matter since it worked fine when I did it the other way, but wanted to understand. 
I'm kind of confused about what you're trying to do. Are you trying to have an image and have people add text based notes anywhere on the image (similar to tagging a person's face on a Facebook photo)? If not, can you try to explain a little more? Maybe with a picture?
Oops - it wasn’t connected to that specific button, no. Such a dumb mistake. Thanks!
Okay. Ignore the picture part. I want to have many TextViews on a view. Let's say when the user first opens the app there are three text views, one under the other, kind of like if they were cells. The user can write stuff there and it'll remain there, as if they were notes. But if the user wants to add another textview, he can, and it'll show up under the third one and he'll be able tow rite stuff there as well. And he can do that with as many textviews as he wants. Is that better?
Thank you! Agree with Objective-C :)
So that is the reason for radio silence :)
basically that error means that the object you called upon was marked as non-nullable at compile time but at runtime when unwrapped it was actually null. I would suggest reading up on Optionals in swift to get a good understanding on how this works. In your case, the button is added from interface builder to your file, so by default xCode marks it with a "!" meaning that the button is forced unwrapped. Again this is all better explained once you read up on Optionals in swift. So back to the button, what xcode did the for you was tell the compiler "hey don't worry about this button not being initialized with the view controller", since its coming from a Nib we can "safely" say that it will always be there once viewDidLoad is called, thus allowing us to have 1) NOT have to write a custom initializer or 2) giving it a default value ( which wouldn't even work in the case of this UIButton, because you would then have a reference to a button that may not even be part of you view tree. ) Hope that helps a bit, let me know if you got other questions
Thanks so much! I'll read up on Optionals. 
Just a tip for the future: Sometimes deleting elements in a Storyboard won’t also remove any connections. I’ve had occasions where I removed something from a view, and also deleted the declaration code, but there was still a fatal error as the Storyboard kept a reference to a supposed element.
UserDefaults isn't meant to store large amount of information. Try looking into CoreData, it's a database and would be much more suitable for your need.
Okay. I will, but what about the rest?
That fix worked because of this specific situation. In general, you don’t want to explicitly unwrap optionals like that, you should use “if let” to safely unwrap them. 
Really great tip - I’m reading up more on Optionals as we speak. 
I would store the text as an array of Strings, then use that array to populate a table view with custom cells. When a user adds a new text view, append a new string value to the array and refresh the table view. You can also use the document database for storing the data, Core Data can be a bit daunting to learn. 
Have you looked into stackviews?
Jesus Christ kid. Pay attention next time. Also asking people for solutions is not what this sub’s about. Noob posts are ruining this sub
Optionals are badass. Super useful programming constructs. Versions of this same concept exist in other programming languages like C#. Although they are inherently mutable type, and in the case of interface building they are somewhat of a necessary evil. When you start working on the backend logic, the “model” in the MVC, model-view-controller, you should start learning to avoid mutable type in as many instances as possible. Swift supports super powerful functional programming capabilities and can work in a similar manner to a true functional language like Haskell or Clojure. If you want to be a really badass Swift programmer, you need to learn [functional programming](https://en.m.wikipedia.org/wiki/Functional_programming) 
**Functional programming** In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data. It is a declarative programming paradigm, which means programming is done with expressions or declarations instead of statements. In functional code, the output value of a function depends only on the arguments that are passed to the function, so calling a function f twice with the same value for an argument x produces the same result f(x) each time; this is in contrast to procedures depending on a local or global state, which may produce different results at different times when called with the same arguments but a different program state. Eliminating side effects, i.e., changes in state that do not depend on the function inputs, can make it much easier to understand and predict the behavior of a program, which is one of the key motivations for the development of functional programming. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
You should use an array and populate the tableview with its content.
I actually prefer screenshots as that keeps the code highlighting. 
This gave me so many headaches when I was learning I g Swift.
Your data source should be your networking delegate, IMHO. But you should perhaps think about alternatives to delegates: closures and notifications. Here's a nice article: [https://cocoacasts.com/references-delegation-and-notifications](https://cocoacasts.com/references-delegation-and-notifications)
Isn't the point of my ViewController to coordinate between my views and my data model. So the data model should interface directly with the networking layer instead of the view controller? 
I have whatever state you're changing in the button also trigger `sendActions(for: .valueChanged)` so that you can use an `@IBAction` to catch the changes in the VC. 
First of all, let me warn you that there is no perfect / unique / better solution to that problem. It's very good that you're trying to solve it but you should have clear objectives about what you want to achieve (in your case, lighten the View Controller and separate responsibilities). So, one example of what you want to achieve is (assuming your table shows Cars): * Car * CarDataSource * CarTableViewController * ~CarTableView~ (I don't know if you use Interface Builder or not... If you use maybe you have your @IBOutlet in your VC instead of a view...) -&gt; I will assume you use, because that's what most people do. Just know that you can play a lot more with architecture if you do views by code. Your ViewController is basically a connector. It is a delegate for everything but just passes info around (try to avoid having complex logic in the VC): ```swift class CarTableViewController: UIViewController { let carDataSource = CarDataSource() var cars = [Car]() override func viewDidLoad() { super.viewDidLoad() self.tableView.delegate = self self.tableView.dataSource = self self.carDataSource.delegate = self self.carDataSource.fetchCars() } } extension CarTableViewController: CarDataSourceDelegate { func onFetched(cars: [Car]) { self.cars = cars self.tableView.reloadData() } } extension CarTableViewController: UITableViewDataSource { // ... fill the tableView with the cars array } extension CarTableViewController: UITableViewDelegate { // handle things like didSelect, etc... } ``` ```swift struct Car { let name: String } ``` ```swift protocol CarDataSourceDelegate { func onFetched(cars: [Car]) } struct CarDataSource { weak var delegate: CarDataSourceDelegate? performApiRequest(callback: @escaping () -&gt; [Car]) { // a lot of code... } func fetchCars() { performApiRequest() { cars in self.delegate?.onFetched(cars: cars) } } } ``` From what I realise is pretty much what you have now. Remember, the ViewController has the responsibility to control (orchestrate/connect) things around... Don't try to remove *EVERYTHING* from the View Controller just because medium.com said so. They should be light but they exist for a reason.
It would be difficult to learn one without the other imo 
Exactly. That way you have 3 "separate" layers: \`DataSource\` &lt;-&gt; \`ViewController\` &lt;-&gt; \`View\` You can easily test your network code (DataSource), because you have no external dependencies.
That's a good way of seeing it. I'll try what you suggested.
I am doing a course on udemy that is great! Its called iOS11 &amp; Swift 4 The Complete iOS App Development Bootcamp with Angela Yu. It does cost money but it is really helping me learn. Do not pay the full price for it though. I googled promo codes and only paid $10 for it. I'd highly recommend starting there. 
Since you are using Nib files or Storyboards it is also possible to bind actions directly with IBAction as pointed out by a few other commenters. But, it's partly for this reason I like to simply do all layout programmatically. I'm sick and tired of the XML horrors.
I don't think "there's room for the community to improve" justifies a post like this being approved
That’s fair. The post is insulting, I’ll remove it.
❤️
&gt; In Xcode there are some indicators telling you if everything is connected. They're pretty broken, and have been at least since Xcode 8 (and most likely sooner - it was Xcode 8 before I could be assed to report the bug). If I open a project, the indicators are always empty. If I visit the storyboard / xib, and go back to the code, they're filled in appropriately. (rdar://32608296, rdar://27324445)
What do you mean "inherently mutable". If you have, say `let string:String? = nil`, `string` will only ever be `nil`
Reddit Markdown should support ```Swift ... ``` 
BTW, it's easy to reach for the `!` to make Swift shut up about Optional values... but that will lead to a lot more crashing...
Love the enum idea, thanks. No misspelling. And I have no idea what "import RCS statement" means. Can you elaborate on that? Thanks
At the top of your unit test code file ensure that the import RCS Or whatever the module you are testing is called. *Note: I’m not certain about this.*
As a follow-up, this is probably a more correct way to do what you are attempting: /// Mutable collection with safe getter protocol ContainerProtocol: MutableCollection { /// Safe access to an index which may not exist func get(_ position: Index) -&gt; Element? // Mimic Array append mutating func append(_ newElement: Element) // No-parameter init init() } /// Generic implementation of ContainerProtocol struct Container&lt;Element&gt;: ContainerProtocol { typealias Index = Array&lt;Element&gt;.Index var startIndex: Index { return items.startIndex } var endIndex : Index { return items.endIndex } func index(after i: Index) -&gt; Index { return items.index(after: i) } subscript(position: Index) -&gt; Element { get { return items[position] } set { items[position] = newValue } } func get(_ position: Index) -&gt; Element? { guard position &lt; items.count else { return nil } return items[position] } mutating func append(_ newElement: Element) { items.append(newElement) } init() { self.items = [Element]() } private var items: [Element] } This gains all the free goodness of a `MutableCollection`, just like the internal `Array` does. It forwards the appropriate calls to the internal `Array` and those calls can be intercepted and modified as needed. This can be seen in the `get(_:)` method where it checks for the existence of an index before using it to get the value contained at that index. Doing it like this leverages all the default implementations that come with a `MutableCollection`. It also works with any code that expects a `MutableCollection`. It's safe, fairly straightforward to extend, and it follows the conventions of most of the rest of the Swift codebase. This is the Swift way of doing things.
iosprogramming at least asks questions about apis in iOS.
What exactly do you want to know?
THis is a better way of doing it in protocol oriented programming. Its only if you want your wrap your array or a new one.Hey, am not trying to reinvented the wheel here.
I got 2010 MacBook Pro with 8gb ram and ssd. It works fine with Xcode I am very impatient and never got angry with it so I guess it’s enough
Xcode benchmarks on different hardware
Ok cool that’s great to hear, what type of apps do you make, if I may ask?
Thanks for the link! Even though I didn’t see the iMac I’m trying to get, this helps me a lot!
Yeah, not all hardware as managed by users but can give you a hint what kind of boost you can get and on what parts of hardware dependant
Just make it a ‘plain’ style table view with 1 section and a header? With plan the header sticks
Good example of closures vs delegates usage is UIKit. UIAlertController uses closures, but UITableView uses delegates.
Social and smart watch apps. We don’t create any games as such but Imho if you get 16gb ram and ssd you are ready for almost everything
Yeah, because you have a variable number of actions. In that case I agree that it is more elegant to use. There are cases in which you should use them, but they are quite rare (compared to how much you should use delegation), IMO. And I’m talking about inter layer communication... because otherwise I love closures and use them all the time :)
The reason for crashy crashy crashy is due to the fact that i didn't employed Optional. So have modified the code, and you can check it for yourself. 
You’re right, you could instantiate it as a constant but then there is really no point to having an optional value. It would be correct to say they are almost always mutable value because of the nature in which they are used. Thank you for clarifying that. It’s always risky speaking in absolutes. Almost turned into a sith. 
A 2012 Macbook Pro should be ok for Xcode unless you're working with large, complicated codebases. What model is it? How much RAM is installed? You may be running into the Playgrounds bug which slows Xcode down quite a bit. You should set any Playground to run manually when you first create it or open it by holding down on the play/pause button in the bottom left corner and choosing manual. Then save it and quit Xcode. Make sure Xcode actually quits, if not then force-quit it. Re-open the Playground and it should be paused. Only run the Playground when the code is at a stable point, when it's on autorun it sometimes runs while you are typing and gets Xcode into a bad state.
Oh shoot, didn’t know there is a bug in playground (I’m new to coding), I just thought my computer is crap (it still is haha) my MacBook is an i7 2.9 ghz 8gbs of ram. It has problems building a project I make (it doesn’t load the iPhone). No matter what, I plan on getting a new computer for work, I just want to make sure I get the right one :)! Thank you!
Xamarin is just not a good way to go, even for basic apps. You can tell what apps are built with it (and similar tools) because they're generally sluggish, have weird glitches, and just poor user experience. The place I previously worked actually originally hired me to rewrite Xamarin, Titanium, and PhoneGap apps to native code because of the sheer amount of problems with them. A lot of places were wooed by the idea of "build once, deploy everywhere" but in reality it simply doesn't work well for anything over the most basic of apps. Xamarin and similar apps are actually banned where I work now and at my previous place and native only is the rule. Some people may find success with Xamarin, but I don't know anyone who is in favor of it. 
Is there a reason your not using the begin/end updates technique?
I only have room for one SnapKit in my swift app.
I’ll keep in mind your advices, thanks!
Hi - Nib files with dynamic behaviors in code
I have a Mid 2012 MacBook, 2.5GHz i5, 8GB Ram and HD4000 GPU from ebay, the preowner installed an SSD sometime. The OS is also installed on that SSD. I think it was some Kingston SSD. It runs pretty decent. Also with three different simulators running, some browser tabs open and sometimes Sketch in the background. Nowadays I would never ever buy a laptop or workstation with harddrives. SSDs are the best upgrade you can get for any device. I only use harddrives for backups. When I am finished working I make sure to close projects and completly close Xcode. I do not know if that has any performance advantages but feels better when the system is not cluttered with windows. Because you asked someone else: I am also currently not into game programming.
Hey, roboknecht, just a quick heads-up: **completly** is actually spelled **completely**. You can remember it by **ends with -ely**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
https://kit.snapchat.com
&gt;Also, is a fusion drive acceptable or should I get a SSD? Without explaining how slow 5200rpm Fusion is even for a hard drive, get the SSD. The only reason you see the Fusion drive being responsive is because it uses a small SSD-like cache to save commonly used files like bootup ones. If the particular app is not cached, it uses the spinning disk hard drive to process it and that is super slow.
This should just work out of the box — that’s how navigation controllers work. 
Sorry about the title mis spelling 
your undokeyboard needs to be a lazy var I believe. 
Of course there's a way. The language is Turing complete.
I got something working with the UITextView its own UndoManager, as follows. For full project, see [https://github.com/bvankuik/TextViewWithUndoManager](https://github.com/bvankuik/TextViewWithUndoManager) class ViewController: UIViewController, UITextViewDelegate { @IBOutlet weak var textView: UITextView! @IBOutlet weak var undoButton: UIBarButtonItem! @IBOutlet weak var redoButton: UIBarButtonItem! @IBAction func hideKeyboard(_ sender: UIBarButtonItem) { self.textView.resignFirstResponder() } @IBAction func redo(_ sender: UIBarButtonItem) { self.textView.undoManager?.redo() self.refreshView() } @IBAction func undo(_ sender: UIBarButtonItem) { self.textView.undoManager?.undo() self.refreshView() } private func refreshView() { guard let undoManager = self.textView.undoManager else { return } self.undoButton.isEnabled = undoManager.canUndo self.redoButton.isEnabled = undoManager.canRedo } func textViewDidChange(_ textView: UITextView) { self.refreshView() } override func viewDidAppear(_ animated: Bool) { super.viewDidAppear(animated) self.refreshView() } }
Excluding from Time Machine had a MASSIVE impact in running speed for me! Time machine wasn't even set to on at the time.... Tedious fro running backup of the machine and projects now.
Hi Nib. Good to see you again I guess. Still not interested but I promise to call if anything changes.
This might be a better way: protocol SafeArray { associatedtype Index associatedtype Element /// Checked subscript subscript(safe position: Index) -&gt; Element? { get } // Default value subscript subscript(_ position: Index, default value: Element) -&gt; Element { get } } extension Array: SafeArray { subscript(safe position: Int) -&gt; Element? { guard self.indices.contains(position) else { return nil } return self[position] } subscript(_ position: Index, default value: Element) -&gt; Element { guard let result = self[safe: position] else { return value } return result } } let test = [1,2,3] print(test[safe: 10]) // nil print(test[10, default: 20]) // 20 
Custom cell? Do you mean it's in a UITableViewCell?
Redoung?
That’s how I’ve done it in the past, works great
I have updated the code to meet that guarantee. Start and end index both return in constant time now. You *can* walk the array count times and distance is the same as `count`. I don't need to supply an implementation for the indices property, because the default has the correct behavior for this type. Remember, this type is supposed to mimic a javascript array in the way it handles indices.
A few years ago, it was known that Swift ran on an ObjC runtime. I figured this was that iOS was written in ObjC. I can't see any reason to rewrite Cocoa Touch, which is actually the same argument over Swift vs ObjC. Swift seem much more about getting people into iOS dev because so many didn't like ObjC.
That's becoming less true over time; more and more of the metadata about Swift types is present at runtime, there just aren't great ways of getting at all of it for now (though Mirrors can get a decent amount of it). Once it's all present and in a stable format, exposing APIs for a lot of dynamic stuff should be possible. One caveat with that is that Swift allows a lot of optimizations that make this hard, so things like the 'dynamic' keyword and marking things as non-inlinable would likely be required for some things.
Swift has several ways it can compile a function call depending on the type of method it's calling. Regular Swift function calls don't use ObjC messaging, but bridged ObjC calls of course do.
I think it’s less because people didn’t like ObjC (though that played a part) and more that there have been significant developments in programming languages since 1980, and Objective-C’s backwards compatibility with C caused a lot of headaches and unfortunate undefined behavior. Swift can rethink a lot of the core model with memory safety first and foremost.
The text view is but the undo button is on a toolbar in The ViewController 
You can do that stuff in Swift on Objective-C objects (i.e., those which inherit from NSObject) but not on pure Swift types like structs or classes which don’t have NSObject as a base class.
Some background: The Objective-C runtime is perfectly capable of being used in C. ObjC is syntactic sugar atop C, more so than any other popular language I know of. You could write ObjC-using C code without giving yourself a headache or knowing intimate details of compilation. This is mostly accomplished, as you note, by the ability to just call methods with a string name. It’s full dynamic dispatch in that method calls are more like messages rather than traditional function calls to an address. Objective-C is more like a scripting language in that sense. Swift is more like C++ and most other modern compiled languages. Even when virtual dispatch is used, it’s done via pointer arithmetic and indexing. Symbols are “mangled” to encode type information. You can’t really use Swift or C++ types from C unless you are a masochist. So, since the compiler’s native lookup system is not useful to humans, a “reflection” library is necessary in these types of languages. A reflection library allows developers to access members and type metadata at runtime. In order to support this, you need a stable interface to make certain assumptions about- compiler and library need to be in sync. Since Objective-C’s compiler uses the same thing a developer would (libobjc functions), it’s a lot more straight forward to get working reliably. For every other language, dynamic calls through reflection will be very slow compared to compiled calls. For ObjC, it’s typically slower than a compiled call in other languages but faster than a reflection call. Now, Swift acts mostly like C++ unless it is inheriting from NSObject or calling a method on an NSObject. To make things more complicated, it chooses static or virtual dispatch based on context for performance, and allows non-objc methods on NSObjects. If you don’t want interop to ObjC, or you use unsupported argument types, Swift forgoes ObjC dispatch. Here’s a great article on it: https://www.raizlabs.com/dev/2016/12/swift-method-dispatch/ Now circling back on the questions that prompted this: Swift supports everything ObjC did *as long as you are only using ObjC functionality*. No generics, etc. To complicate this more, a major caveat is Swift auto-marshaling types to and from ObjC. An Int array property will become an NSArray populated with NSNumbers. ObjectiveC only captures the NSArray part in its runtime type encoding (it uses generic type erasure like Java). Swift hasn’t implemented runtime reflection very much yet for two major reasons. 1. The language is still changing and to keep it in sync with the compiler would be difficult. 2 Because Swift does such a great job with generics and conveniences, runtime reflection isn’t needed as much, and that makes it much faster for the tasks you would normally use reflection for. See Codable for an example.
&gt; based on it's string value based on its* string value it's = it is or it has 
If there was, I’m sure Apple would figure out how to stop it pretty quickly.
Ofc it’s apple 🤦‍♂️
What sort of *purposes*?
Like a reddit bot 
Question was already answered. FYI Apple doesn’t lock down swift. https://www.google.com/amp/s/amp.reddit.com/r/swift/comments/6lk7wo/could_you_write_a_reddit_bot_in_swift/ Hope this helps.
From apples own description of swift: “one of the most exciting aspects of developing swift in the open is knowing that is it is now free to be ported across a wide range of platforms, devices and use cases” There are plugins for atom and vs code, and core libraries like foundation are being actively ported to extend cross platform support 
Thanks man 🙏 
Except there is, and they dont
You can download the swift compiler (without Xcode) from https://swift.org/download/#releases (Download "Toolchain" below "Xcode") and do whatever you want. However, I suspect that is not what you actually want to do, if you really want to do something like a reddit bot, then why do you not want to use Xcode (Are you working on another OS than macOS or do you just want to use another editor?) With Xcode you can build ordinary command line tools as well...
Oof, Google's horrible AMP service is taking over. Here's a straight link: https://www.reddit.com/r/swift/comments/6lk7wo/could_you_write_a_reddit_bot_in_swift/
Are you working in Swift? We are using xcodegen tool and don't worried about xcodeproj file ;) [https://github.com/yonaskolb/XcodeGen](https://github.com/yonaskolb/XcodeGen)
Choose the one that makes sense the most ( recent, bigger...). Xcode generates most of this folder automatically everytime you open the project so you don’t have to worry about it much
Thank you! I use both objc and swift in a project.
Great Tip. :D
Good point. But when stack view arrangedSubviews has hidden then It forces animating cell height. Is there a way to set animation false?
Swift the language itself has never “run on ObjC runtime”. It has its own runtime for everything of its own. Imported ObjC entities and `NSObject` subclasses rely on the ObjC runtime on subjects that are visible to ObjC no doubt, but that’s ObjC interoperability as a language feature.
I'm removing google map to use MapKit so that chinese users can enjoy our apps.
I’ve been doing Swift for four years and I feel like we’re in the same boat 😆 I’m not sure if you are interested in books at all, but for me “Advanced Swift” by the objc-io folks has been fantastic, if a little hard to understand at times. I would highly recommend all their books if you can swing it. They have supplemental videos and code you can look at as well. In terms of videos I would highly recommend going through old WWDC videos in the subjects you want to know more about. I do this and it has given me substantial benefit. Last suggestion would be to try to surround yourself with people that know more than you. At my current position I’m probably the weakest on the team in terms of my Swift (I’ve been doing Objective-C for a while) but that has given me a fantastic opportunity to take what they know and make it mine. If you don’t have people at work, you can join a meetup for devs or something like that. Actual last suggestion is to go to the Swift.org forums and read through some posts. Most will be over your head, but knowing what you don’t know is the first step to knowing it
Hmm I dont know why you wouldnt want the animation but you can try to wrap it in UIView.performWithoutAnimation { }
There's https://github.com/venmo/synx too. Can't vouch for its quality, just saw it mentioned in the Raizlabs cookiecutter project: https://github.com/Raizlabs/ios-template
I use \[xUnique\]([https://github.com/truebit/xUnique](https://github.com/truebit/xUnique)), and mostly just remove the merge conflict markers and sometimes fix the groups that got cut in half by the merge(when both branches add a group that gets placed in the same spot in the project file). And then xUnique removes the duplicates and removed files. xUnique also makes it harder for a merge conflict to occur.
It means you are trying to access a position in your array that does not exist. For example, you might have 10 items in an array and if you try to access the 11th item then you will receive this error. Always keep in mind that indexes are 0 based. So the first element is at position 0
Index out of range means that you were trying to access an index of an array that exceeds it's capacity. So if you're array has capacity of 81, any access of that array that is less than 0, 81 (because arrays start at 0), or higher will give you that error. Look at the line where the error is happening ( the line highlighted by xcode). Which array is it trying to access? What index is it using? How big is the array? These are the questions you need to ask yourself to fix this problem because I can guarantee you will see this happening many times in what we do. For your situation, it looks like your trying to access arrPosition - 9 in mapNormal. Check what number that comes up with. If it's less than 0, then you know the problem. Also I would advise you create a function that handles your check for array position. Try one that takes an array of numbers as a parameter, and compares them to see if they are equal or not to arrPosition (use a for loop). If they are all not equal, you can return the proper boolean. It will clean up your code a bit and make these kinds of if statements less error prone.
Extreme overkill, but it’ll certainly get the job done! I’d take it over a MacBook Air certainly, just for the faster compile times.
A bit overkill, since you have no experience and actually would do fine on a MacBook Air starting off. But since you already bought it, it doesn’t really matter, at least you don’t have to worry about upgrading for a while.
Yep, it's definitely overkill. I have a 2010 MacBook Pro that has very little trouble running Xcode and compiling moderate-sized apps. The advantage of a new system is it probably will also last you 8+ years and so the value is spread out over that time. And it can do other things in the meantime. I also would not get any laptop for gaming, you'll get much more value out of any desktop system for that purpose. Use the MacBook Air for programming and get a desktop for gaming.
Thanks for the reply buddy. At this point I'm thinking about getting some cash together and hiring a private tutor. Rather than spend hours reading off a large textbook and trying to make sense of it, I think a private tutor will give me a complete picture of Swift.
I'm reluctant to go down the path of watching WWDC videos because from my experience, they give a surface level explanation of things. These are public conferences and they seldom give an in-depth explanation or follow up with examples lest they bore the audience.
😂We just resolve it in Sublime 
UITextView inherits from UIScrollView, and UITextViewDelegate inherits from UIScrollViewDelegate. So, you should be able to implement the delegate method, `scrollViewDidScroll(_:)`. This gets called whenever the textView is scrolled, so you can calculate the contentOffset and determine the fraction of the maximum contentOffset. Use that to set the current slider position. 
I think you bought an excellent machine for that. The big plus is the screaming fast SSD in it and the fact it has 6 cores. You could turn of hyperthreading and not be aware you did that. Excellent machine that is lovely to work with if you ask me. 
What happens if index == 8?
You can do this much more easily by leaning on some of Swift's features such as `switch..case` combined with a `where` clause. You should also test to make sure each index is a valid one: /// Safely set the direction func mapToDirection(position: Int, directionKey: Int, value: Int) { // Make sure the indices are not out of bounds guard mapNormal.indices.contains(position), direction.indices.contains(directionKey) else { return } guard mapNormal[position] == 0 else { return } direction[directionKey] = value print(position,directionKey,value) } func freeDirections() { switch arrPosition { case let test where ![0,7,14,21,28,35,42].contains(test): mapToDirection(position: arrPosition - 1, directionKey: 1, value: 1) case let test where ![0,1,2,3,4,5,6].contains(test): mapToDirection(position: arrPosition - 9, directionKey: 0, value: 1) case let test where ![6,13,20,27,34,41,48].contains(test): mapToDirection(position: arrPosition + 1, directionKey: 2, value: 1) case let test where ![42,43,44,45,46,47,48].contains(test): mapToDirection(position: arrPosition + 9, directionKey: 3, value: 1) default: break } }
I think you have a fundamental misunderstanding of a specific key core programming principle which is: all programming languages are built directly from other programming languages. To understand Swift as you want to, it would be a lot easier to just learn how things work with C or C++ because they all directly apply to swift. 
I think you have a fundamental misunderstanding of a specific key core programming principle which is: all programming languages are built directly from other programming languages. To understand Swift as you want to, it would be a lot easier to just learn how things work with C or C++ because they all directly apply to swift. 
I just open it in vim, the differences are pretty simple once you get an idea of what’s going on unless you’re doing a huge pull in. 
You can still do some gaming in that machine in bootcamp. Its not buttery smooth but you can get decent framerates with some games. I am playing CIV6, call of duty frequently in 2015 macbook pro, so i don't understand why the new macbook pro with discrete graphics can't game
How it's an overkill, if big stroyboards will lag even on iMac pro?
Well their audiance is composed of the kind of people can pay $100 for the ticket, and thousands all in with flights, hotels, meals, etc. It's a selective process that filters for people who are already quite serious about programming, so there's absolutely no point to delve anything that's "assumed knowledge". They do go very in depth, but in very specific things
Errr, the error handling has a complete different mechanism
It's luxurious but not overkill: 256GB would mean deleting stuff too often 8GB RAM would mean harder to run VM's or parallels You could easily get by with a lighter processor, buying the 2.2 myself.
Starting to build out the iOS client for our multiplayer trading game. Pushing to release December 1.
Obviously yes. But I’m talking about the underlying principles of how the language executes - threading, etc. 
I second the objc.io books
If your storyboards are so big that it starts lagging you are doing something wrong 😅
If you want to program the following is important in this order - a fast disk. Faster is better. - a lot of memory. More is better, faster is better - a large good quality screen - a fast processor Why? Compiling and linking is in fact mostly IO bound. IDE and compilers can munch on memory like there is no tomorrow. A big screen is good to be able to display code and documentation beside each other. And a fast processor? Yes nice but not really a dealbreaker. Multi core is nice. So, would the latest MacBook Pro suffice? Yes. It gets better if you upgrade to 32G and a 1TB flash drive. The screen is perfect. And an i7 is quite apt at doing what you ask from it. The storage and the memory are I think one of the fastest currently on the market. 
Go Swift. Xamarin basically is a non-entity on iOS. Native apps are almost always better suited and better quality on the respective platforms than cross platform stuff. 
Just fyi, tickets alone are $1500
Thanks 🙏 
I don’t think you’ll get much out of a tutor. You’re better off trying to code things up on your own and then figure out what you did wrong. I think you’d retain the information better that way rather than if you had someone telling you about it.
Thank you very much for this! In my case, a build phase was writing some useful build info (like git commit cash) to the Info.plist. I think this was causing the issues in some cases. I've now changed it to use a separate plist. Thanks!
Oh so are you building both apps natively or only the iOS app? 
Building the iOS one, (project)managing an Android developer and the client.
Awesome! Yes, it's called Goblin's Vault. I will try and remember to post it when it's in beta.
I've been doing that for a year and a half now. Up until now I've learned through trial and error, through reading source code, through online guides, but it has left me with gaps in my understanding. I'd like answers to very specific questions like where in memory do static methods live as opposed to instance methods and how memory is partitioned similar to the video shown above. Presumably a tutor would fill those small gaps I have.
I'll give it a look, thanks.
Put this on .gitattributes file: `code` *.pbxproj merge=union 
I didn't know this was a thing. I guess what I'm looking for is some combination of Swift and Systems programming. Very interesting, thanks :)
Started contributing to [google/xi-mac](https://github.com/google/xi-mac), mainly working on a sidebar/file explorer. Also am still working on my modern markdown editor for macOS [Twig](https://github.com/lukakerr/twig), and trying to add some more features to my super minimal music player [plyr](https://github.com/lukakerr/plyr)
I have started a similar quest, though I’m far from complete, I’d reccomended learning about the swift compiler and the llvm. Here is one interesting video to give you a taste: https://youtu.be/ctS8FzqcRug
Keeping your xcodeproj files sorted will significantly cut down on tricky merge conflicts. I use this script: https://github.com/WebKit/webkit/blob/master/Tools/Scripts/sort-Xcode-project-file 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [WebKit/webkit/.../**sort-Xcode-project-file** (master → 93ec791)](https://github.com/WebKit/webkit/blob/93ec7919670bdf0ef8ae4992059382206375649b/Tools/Scripts/sort-Xcode-project-file) ---- 
Those are more runtime questions and not specific to Swift. The language just dictates syntax and basic data structures. It’s up to the compiler and runtime on how to place and find things.
I see: \&gt; Cancelling and resuming uploads Will there be the same for downloads? IDK if there's a solution out there or not, but a broken download with resume sounds like a nice feature.
This will generate an xcodeproj to work out of based off the folder structure. So then you can ignore the xcodeproj from git all together. Can’t have merge conflicts if it doesn’t exist. I’ve been using that lib for a few months now and it’s worked out amazingly 
Here's what I've come up: | **Java** | **Swift** | |--------------------|-----------------------------------------------| | Constructors | Initializers | | Finalizers | Deinit | | Interfaces | Protocols | | Lambdas | Closures | | Primitives | Certain stdlib types (Int, Array, Bool, etc.) | | Garbage Collector | ARC | | Packages / JARs | Modules / libraries | | Instance variables | Properties | | Setters + getters | Properties | | JVM | Swift runtime (pretty small) | | Exceptions | Errors | Keep in mind that while some things may seem close to equivalent, they might have pretty different features or use-cases. For example, Swift protocols can have default implementations of methods, or extensions on the protocols themselves. A Java Interface is just a named set of methods. Similar thing with Java Exceptions vs Swift Errors. They have surface-level syntax similarities, and they are used for the same purpose (propagating errors back to the callers of a method), but they work in a totally different way.
Working on Bitcoin exchange platform. 
It blurs the line between a Google search and the actual website. That subverts a lot of browser functionality. For example, I search Google for some information, click on a link, view it, then hit the back button. It doesn't work. Why? Because I never left Google, the content was presented inside the search page even though it looks like I went on to another page. It also anonymizes content. Because the content is stripped down and hosted on Google's server it's harder to tell good content from bad content. Phishing stories and fake content are more easily hidden. It also makes it more difficult to filter out the bad content, since it's all on Google it's tougher to write rules to block certain types of content or certain sites. Another problem is it ties websites even more tightly to Google. Google is in control of the analytics, in charge of how your site is displayed, in charge of its ranking in search results, in charge of your ad revenue. If Google decides to change anything you're at its mercy. In the short term a lot of sites are signing up to AMP because Google is giving them sweet deals to hook them, once they have them hooked it's going to be very tough to stand up to any changes Google makes. Some articles: [The Problem With AMP](https://80x24.net/post/the-problem-with-amp/) [Scott Gilbertson: ‘Kill Google Amp Before It Kills The Web’](https://daringfireball.net/linked/2017/05/20/gilbertson-amp) [Google AMP is Not a Good Thing](https://danielmiessler.com/blog/google-amp-not-good-thing/)
Part of the problem you're running into is that Swift tries to be higher-level, so a lot of it is left up to the implementation and runtime. For example, In C++, you can say for certain by looking at a program which objects are allocated on the stack and which are allocated on the heap. In Swift, you can't. The specification doesn't even say "stack" or "heap", and the implementation is welcome to use either structure (or something else entirely) as long as it follows the required semantics. Right now, it happens to put smaller structs on the stack and larger ones on the heap (I don't remember the threshold), even when they're used in exactly the same way. But the next version might not. You just don't know, and that's by design. To some extent, you're just going to have to get comfortable with knowing the semantics, and not necessarily the mechanics.
The video [here](https://www.youtube.com/watch?v=XWoNjiSPqI8&amp;t=28m38s) has a table with common object-orientation names across many languages, including Swift.
If you architected your program in a manner that is slow on every computer in the world, have you considered the possibility that the fault may lie not with every computer in the world, but your program architecture?
Has Apple yet fixed the bug where [the Swift compiler runs *slower* with more cores](https://mjtsai.com/blog/2017/03/16/swift-compiler-not-optimized-for-lots-of-cores/)?
Interesting. So what would happen a commit remove a file from the project? That file will come back. And if a setting was changed, will it appear twice with this?
I'm on day 21 of learning programming via Swift.
Kind of? They’re still primitive, it’s just abstracted away a bit. Structs are a bit more complex, especially if they’re filled with classes. A good answer to primitives: https://stackoverflow.com/questions/36822136/are-int-string-etc-considered-to-be-primitives-in-swift
+1 for the "Stored" vs. "Computed" properties. -1 for primitives &lt;-&gt; Structs. Java "primitives" are things that are not representable as Objects, similar to primitive C types. Swift doesn't really have a primitives in this sense. Win some lose some, I guess. :)
Ya I know the struggle of fitting a side project in when you have a day job, but anything’s possible so keep on going. 
Oh nice is this your first programming language?
Wow the editor you’ve made is impressive 
Thanks for you interest! For now, we're not planning on adding file downloading to the API or SDK.
In the book that i'm reading it says that you can up- or downcast an object for it to have certain properties in terms of Classes for example. Why would one use this for example while creating a program instead of just creating a "property" if you will to accomodate that specific object without the need for typecasting.
Hey, dutchveteran, just a quick heads-up: **accomodate** is actually spelled **accommodate**. You can remember it by **two cs, two ms**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
&gt; Of course with something like your idea, things get kind of weird if the array contains an Optional type. Not really. It simply returns a `T??` (`Optional&lt;Optional&lt;T&gt;&gt;`) which is exactly what you'd expect.
So are you talking about typecasting (is) or downcasting (as)? They both work on types but they do different things. Typecasting only checks what type the value is, downcasting casts the value to another type. For example, I always use downcasting when I create custom CollectionView/TableView Cells. In the case of a basic collection view cell, the cell is of type UICollectionViewCell. Now if I was to create a custom cell to have an image view or a label inside, I would create a custom cell like so: class CustomCell: UICollectionViewCell { @IBOutlet weak var imageView: UIImageView! @IBOutlet weak var label: UILabel! [...] } So when you try to use this custom cell in a CollectionView you need to specify the Type of the cell, in order to use its properties. Here's an example of how to declare the cell in a CollectionView: func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell { guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cellIdentifier", or: indexPath) as? CustomCell else { UICollectionViewCell() } return cell } This method is used to tell the collection view how to setup its cells. In order to use the properties inside of CustomCell I need to tell the collection view that it has to use a CustomCell cell. To do that I use guard to ensure that the cell can be of type CustomCell, that's why the downcast is optional, if not the function returns a cell of type UICollectionViewCell Of course there are many uses for it. For example if you have a value of type Any you can downcast it to another type (this might be the case when fetching objects from CoreData).
Aside from a little Basic and Visual Basic in the 90s, yes.
It looks like you are using the gyroscope. You might want to check out the accelerometer as well. [https://stackoverflow.com/questions/3089917/gyroscope-vs-accelerometer](https://stackoverflow.com/questions/3089917/gyroscope-vs-accelerometer) The gyroscope will help if a user tilts or rolls the phone. The accelerometer will help if the user stands up or kneels. Its been a while since I made a motion app but using both solved my initial problems.
awesome thanks for the help! 
The documents directory is never deleted unless you manually take care of it. Reddit may have implemented some cache cleaning themselves. But using anything other than the cache directory is bad practice. Use the Cache directory. 
It would be totally nuts to randomly delete documents directories of random apps if the storage runs out. That would delete user defined data that may then be irrecoverable. 
Makes sense. Thanks for the help. 
I've written a small framework for force directed graph drawing a while ago ([here's a link](https://github.com/palle-k/Graphite)). It doesn't handle tap events by default but you can drag nodes around, zoom and pan. Documentation is nonexistent though. You basically have to create a `Graph`, create a `WeoghtedGraphPresenter`, pass the graph and a view, in which you want to embed your graph view, implement a `WeightedGraphPresenterDelegate` and set the delegate property of the presenter. Implementing tap events is trivial because you can specify views for each node and you can add tap recognizers to them in the delegate. 
You might try looking into the [‘Encodable/Decodable’ protocols](https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types)? Though I’m not quite sure why what you’re doing wouldn’t work — maybe try inspecting the bytes manually on send and receive. Another resource would be [Apple’s multiplayer AR example app](https://developer.apple.com/documentation/arkit/creating_a_multiuser_ar_experience), they’ve got some really good networking going on in there. 
Yeah, you'll want accelerometer data. The approach I'd probably take is to build a ML model, from a few days of recordings of standing / sitting / walking / etc. Record all the accelerometer data, find some way to define motion event boundaries, then classify each motion event as the kind of physical activity that you performed at that time. Then you'd have an ML classifier that you can feed raw accelerometer data into and get out an answer about what kind of physical event it was most likely to have been. That's pretty much what Core Motion's activity types engine is doing. It's feeding the raw accelerometer data into an ML classifier that's trained on walking, running, cycling, etc. 
What is the source of your data being sent? If you're sending data from another language, it may not coerce well into swift types directly. So if your buffer offset is wrong you're not going to get great results. If you're doing it across language, have you considered using protobuf to encode your data? Then you should be able to expand it into any language you like much easier. 
Try this func convert&lt;T&gt;(count: Int, data: Data) -&gt; [T] { let array = data.withUnsafeBytes { (pointer: UnsafePointer&lt;T&gt;) -&gt; [T] in let buffer = UnsafeBufferPointer&lt;T&gt;(start: pointer, count: count) return [T](buffer) } return array } 
I'm getting the data from a game. Also I only receive it, I don't send anything. The struct is actually made up one many UInt8 and Float values and only one property which is an array of another struct (which is also made of UInt8 and Float values). Just to clarify it is something like this struct Packet { let property1: UInt8 let property2: Float let property3: [SecondPacket] // contains 20 elements } struct SecondPacket { let property1: UInt8 let property2: Float } The problem here occurs for that array, since I can't manage to convert it. To convert the Data into that struct I used this function inferring the type Packet only for the data before that array (I counted the bytes length). extension Data { func to&lt;T&gt;(type: T.Type) -&gt; T { return self.withUnsafeBytes { $0.pointee } } } Then for the second part of the data I used the function above in the post description. It does work for the first element, but then it actually crashes with this error: "UnsafeMutablePointer.Initializer Overlapping range"
That's a fairly complex data structure, and you didn't mention what platform and language the game is written in. Even basic types in languages aren't necessarily the same size as in other languages. Again, I'd recommend trying to use an encoding layer like protobuf for the data instead of trying to manually break apart a packet.
&gt;maybe try inspecting the bytes manually on send and receive. How can I do that?
I'm not sure because I'm not developing the game. The only things I know is the packet I receive should be 1289 bytes, which it is, and the struct I have is indeed 1289 bytes. I will check out protobuf though, thanks!
Interesting. I can unpack Data to [Uint32], [UInt64], and [MyBytes] as follows: struct MyBytes { let a: UInt8 let b: UInt8 let c: UInt8 let d: UInt8 } func convert&lt;T&gt;(count: Int, data: Data) -&gt; [T] { let array = data.withUnsafeBytes { (pointer: UnsafePointer&lt;T&gt;) -&gt; [T] in let buffer = UnsafeBufferPointer&lt;T&gt;(start: pointer, count: count) return [T](buffer) } return array } Then with some known data we can run some tests: let data = Data(bytes: [0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0xDE, 0xDE, 0xDE, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF]) do { let num: [UInt32] = convert(count: data.count / MemoryLayout&lt;UInt32&gt;.size, data: data) for i in 0..&lt;num.count { print("break here, then in debugger: (lldb) p/x num[i]") } } do { let num: [UInt64] = convert(count: data.count / MemoryLayout&lt;UInt64&gt;.size, data: data) for i in 0..&lt;num.count { print("break here, then in debugger: (lldb) p/x num[i]") } } do { let num: [MyBytes] = convert(count: data.count / MemoryLayout&lt;MyBytes&gt;.size, data: data) for i in 0..&lt;num.count { print("break here, then in debugger: (lldb) p/x num[i]") } }
Shouldn't you be passing newData into your convert function? You are passing data. 
Yes it was just a typo.
Can you tell the name of the game? That might help a lot.
Don't you want a closed range? Assuming an array size of 1 let arraySize = 1 let offset = 337 let newData = data.subdata(in: offset ..&lt; offset + arraySize) // gives data[337..&lt;338] which is 0 bytes let newData = data.subdata(in: offset ... offset + arraySize) // gives data[337...338] which is 1 byte 
Well not sure it’ll actually help, but Data has an iterator that will give you each byte, you could print it out and go from there. But looking at your other replies, I would say you need to make your struct adhere to Codable and use the corresponding decode and encode methods to create byte arrays from your structs. That, or protobufs. They’re really just ways of describing how an object is turned into and created from a blob of bytes. If this were C++ what you’re doing would absolutely work, albeit not very “type-safe” ;) but with swift, I think there’s something else going on in the structure of the memory representing your structure. If that makes sense? Like, you can’t just take the data at the memory address because it may be reference counted, or heap allocated (with a side table), etc., etc. 
This makes sense, but the subdata function requires a Range, it gives me an error if I use a closed range. Also the resulting packet is 900 bytes according to the debugger, which is right.
Yeah, I already tried it but it gets me an 901 bytes packet. Thanks anyway for the help!
F1 2017
Yes I tested (very patiently) and yes that's the struct. This is one packet as an array of UInt8 and two elements of the Array I get with the function I wrote in the description (as you can see the first is correct, the second is not) [82, 33, 46, 193, 172, 221, 85, 64, 150, 238, 1, 68, 56, 16, 178, 66, 245, 93, 94, 67, 128, 14, 178, 66, 0, 0, 0, 0, 0, 0, 0, 0, 163, 55, 162, 69, 34, 2, 15, 3, 2, 1, 2, 0, 0, 127, 216, 14, 196, 123, 79, 130, 64, 161, 7, 46, 196, 0, 0, 0, 0, 239, 58, 217, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 48, 190, 68, 16, 0, 19, 1, 1, 0, 0, 0, 0, 249, 167, 85, 65, 112, 77, 84, 64, 85, 193, 7, 68, 24, 237, 171, 66, 192, 133, 14, 65, 80, 104, 171, 66, 0, 0, 0, 0, 0, 0, 0, 0, 172, 52, 161, 69, 0, 1, 2, 6, 1, 1, 2, 0, 0, 72, 13, 149, 65, 240, 81, 84, 64, 101, 6, 9, 68, 0, 0, 0, 0, 46, 66, 151, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 252, 160, 69, 6, 1, 20, 1, 2, 1, 2, 0, 0, 170, 250, 16, 194, 47, 95, 84, 64, 18, 170, 247, 67, 56, 184, 177, 66, 64, 230, 154, 67, 160, 84, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 112, 75, 163, 69, 7, 11, 8, 6, 2, 1, 2, 0, 0, 64, 83, 92, 194, 174, 90, 86, 64, 248, 166, 238, 67, 48, 241, 179, 66, 108, 221, 151, 67, 72, 229, 179, 66, 0, 0, 0, 0, 0, 0, 0, 0, 168, 24, 164, 69, 18, 5, 17, 4, 1, 1, 2, 0, 0, 191, 247, 19, 65, 124, 93, 85, 64, 198, 199, 6, 68, 168, 12, 176, 66, 113, 205, 151, 66, 168, 12, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 60, 96, 161, 69, 5, 6, 7, 6, 2, 1, 2, 0, 0, 64, 115, 90, 67, 106, 6, 106, 64, 131, 141, 78, 67, 80, 1, 176, 66, 254, 231, 92, 66, 64, 79, 175, 66, 128, 10, 239, 65, 128, 108, 192, 65, 64, 202, 78, 69, 2, 2, 5, 4, 1, 0, 2, 0, 0, 194, 207, 186, 191, 29, 199, 85, 64, 235, 49, 4, 68, 48, 189, 176, 66, 28, 85, 49, 66, 48, 189, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 237, 210, 161, 69, 35, 7, 9, 2, 2, 1, 2, 0, 0, 235, 237, 234, 65, 113, 171, 96, 64, 43, 70, 61, 196, 120, 186, 177, 66, 176, 126, 44, 66, 76, 231, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 208, 239, 9, 69, 3, 7, 11, 5, 1, 0, 1, 0, 0, 83, 227, 226, 66, 27, 214, 118, 64, 255, 17, 204, 195, 208, 104, 178, 66, 9, 21, 48, 66, 136, 89, 178, 66, 64, 104, 236, 65, 0, 0, 0, 0, 208, 196, 33, 69, 14, 11, 16, 5, 2, 0, 1, 0, 0, 104, 107, 103, 66, 25, 224, 97, 64, 22, 141, 204, 65, 228, 236, 177, 66, 200, 138, 114, 66, 32, 68, 177, 66, 0, 0, 0, 0, 0, 0, 0, 0, 132, 129, 63, 69, 1, 8, 14, 3, 2, 0, 1, 0, 0, 140, 82, 201, 195, 94, 100, 67, 64, 139, 63, 170, 65, 224, 193, 176, 66, 59, 226, 11, 65, 224, 193, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 224, 140, 14, 68, 10, 3, 10, 3, 2, 0, 0, 0, 0, 82, 172, 44, 68, 74, 17, 118, 64, 59, 167, 74, 68, 144, 237, 176, 66, 231, 105, 136, 66, 144, 237, 176, 66, 0, 62, 234, 65, 128, 159, 189, 65, 204, 245, 131, 69, 20, 3, 12, 2, 2, 0, 2, 0, 0, 124, 26, 55, 68, 122, 204, 106, 64, 217, 118, 58, 68, 208, 40, 176, 66, 41, 68, 131, 66, 216, 183, 175, 66, 64, 255, 232, 65, 128, 225, 187, 65, 248, 74, 129, 69, 33, 6, 6, 5, 2, 0, 2, 0, 0, 101, 202, 54, 196, 25, 225, 67, 64, 114, 83, 190, 195, 160, 127, 174, 66, 160, 41, 130, 65, 106, 144, 173, 66, 0, 0, 0, 0, 0, 0, 0, 0, 32, 226, 136, 68, 22, 0, 4, 4, 2, 0, 0, 0, 0, 245, 239, 5, 66, 0, 210, 84, 64, 218, 151, 12, 68, 144, 103, 171, 66, 196, 127, 192, 67, 244, 255, 170, 66, 0, 0, 0, 0, 0, 0, 0, 0, 22, 93, 160, 69, 9, 4, 1, 4, 1, 1, 2, 0, 0, 244, 74, 204, 193, 51, 156, 84, 64, 54, 211, 252, 67, 0, 0, 177, 66, 111, 203, 157, 65, 40, 250, 176, 66, 0, 0, 0, 0, 0, 0, 0, 0, 110, 214, 162, 69, 23, 8, 13, 4, 2, 1, 2, 0, 0, 157, 12, 27, 66, 41, 210, 84, 64, 234, 220, 13, 68, 80, 241, 171, 66, 66, 211, 172, 66, 160, 220, 171, 66, 0, 0, 0, 0, 0, 0, 0, 0, 109, 36, 160, 69, 15, 4, 3, 3, 2, 1, 2, 0, 0, 88, 54, 71, 194, 176, 90, 86, 64, 32, 49, 241, 67, 8, 76, 180, 66, 122, 101, 135, 67, 112, 69, 180, 66, 0, 0, 0, 0, 0, 0, 0, 0, 252, 222, 163, 69, 31, 5, 18, 5, 2, 1, 2, 0, 0] DriverData(worldPosition: (x: -10.883135, y: 3.3416548, z: 519.7279), lastLapTime: 89.03168, currentLapTime: 222.36702, bestLapTime: 89.02832, sector1Time: 0.0, sector2Time: 0.0, lapDistance: 5190.9546, driverID: 34, teamID: 2, carPosition: 15, currentLapNum: 3, tyreCompound: 2, inPits: 1, sector: 2, currentLapInvalid: 0, penalties: 0) DriverData(worldPosition: (x: -1.5243477e-37, y: 3.0838665e-11, z: 2.75e-43), lastLapTime: -3.2885706e+15, currentLapTime: 9.4e-44, bestLapTime: 0.0, sector1Time: 0.0, sector2Time: -0.17210388, lapDistance: 1.616389e-27, driverID: 1, teamID: 1, carPosition: 0, currentLapNum: 0, tyreCompound: 0, inPits: 0, sector: 249, currentLapInvalid: 167, penalties: 85)
oh alright thank you for letting me know about it. 
Check out [this article](https://benscheirman.com/2017/06/swift-json/). It’s pretty extensive and there is a section that deals with this specifically.
You just parse it as a Dictionary&lt;String, Item&gt; and then get the values property of it to convert it to an array.
And in the xcodeproj is not stored anything relevant for App Store Submission?
The app itself was all built programmatically. The images are being served from an API being generated through a Django Rest framework which generates a jwt for authentication and access of user data. 
Take the delegate method for the UIDatePicker that is called when a row is selected and set the time from that. On mobile so it’s difficult to post code.
There are plenty of online Swift resources available that answers this question. Here’s one of them: https://www.programiz.com/swift-programming/if-else-statement
Thanks for the article
As far as I know SceneKit does not create the physics body shape exactly like your tube and it certainly does not respect any holes your object may have. The body shape will wrap around the exterior only. When you pass in tubeShape for your body shape, SceneKit will return an optimized version for better performance. And so when you create your bouncing objects, it is being placed inside the tube's physics body. Since you have collisionBitMask turned on, they will repel from each other (you may have noticed a slight acceleration perhaps?) You can verify this by turning on the debug option for physics shape. //sceneView.debugOptions = .showPhysicsShapes To get the body shape you want, you will have to use SCNPhysicsShape.concavePolyhedron Also according to documentation, if you're using a static body for your tube, you can't be rotating it using SCNActions. You can't move it at all https://developer.apple.com/documentation/scenekit/scnphysicsbody/1514791-static See this for additional help https://stackoverflow.com/questions/47288636/scenekit-concavepolyhedron-body-shape-on-scntorus-strange-effects-on-physics
Thanks so much, I’ve been struggling with parsing a Trie out of JSON, couldn’t find an article like this! 
Can you learn to play the piano without buying one ? Just reading books ? Sure, you would know the theory but practice matters !
IBM Sandbox was the option but it dont work now :( 
Anything back to 2012 would work. Even a mac mini. You can write swift on Linux and maybe windows now with the general implementation. Most of “swift” is usually inferred as UIKit and AppKit though. Really spending $1k isn’t crazy when iOS developers make $100k/yr or $100/hr in most markets.
What I meant to say was that you should probably err on the side of caution and not move your static objects using SCNActions. One thing I learned the hard way was that things will appear to be working fine for the first 20 runs, and then it will unexpectedly crash the 21st run. Or better yet, ask around to more experienced programmers. Good luck:)
USA $1000 is equals to $2000 in Pakistan. 
Let's say you have different event types: class Event {...} class MouseEvent {...} class KeyEvent {...} You might have an event handler callback, like this: func handleEvent(e:Event) { } In this case you would use down casting (converting from a less specific type to a more specific type--you can remember the "subclasses" are usually shown below (down from) their superclasses in class diagrams) func handleEvent(e:Event) { if e is MouseEvent { handleMouseEvent(e as! MouseEvent) // forced downcast to `MouseEvent`, we used the `is` operator to determine that `e` in, in fact, a `MouseEvent` instance } if e is KeyEvent { handleMouseEvent(e as! KeyEvent). // forced downcast to `KeyEvent`, see above } } 
Basically, what you are doing is creating a linear relationship between the slider's position and the textView's vertical scroll position. To determine this relationship, we'll need to know the minimum and maximum contentOffset of the textView. This is because we want the slider to be at its minimum position when the textView is at its minimum scroll position and at its maximum position when the textView is at its maximum scroll position. To save you some time, I created an extension on UIScrollView that has two computed properties, both the min and max contentOffset: extension UIScrollView { var minContentOffset: CGPoint { return CGPoint(x: -self.contentInset.left, y: -self.contentInset.top) } var maxContentOffSet: CGPoint { return CGPoint(x: self.contentSize.width - self.bounds.width + self.contentInset.right, y: self.contentSize.height - self.bounds.height + self.contentInset.bottom) } } For a nice explanation on this, go [here](https://stackoverflow.com/questions/44192007/uiscrollview-max-and-min-contentoffsets#). This will enable us to determine how much of the total available scrolling the textView has currently scrolled, which will be used to determine the current slider value. Mathematically, this is the following: `let offsetFraction = (scrollView.contentOffset.y - scrollView.minContentOffset.y) / (scrollView.maxContentOffset.y - scrollView.minContentOffset.y)` `let sliderFraction = (slider.value - slider.minimumValue) / (slider.maximumValue - slider.minimumValue)` Now, since we want the slider to be at the value that represents the same fraction of the total scrolling of the textView, `offsetFraction == sliderFraction`. So, if we set some variables for readability, we can say: let diffOffsetY = scrollView.contentOffset.y - scrollView.minContentOffset.y let totalOffset = scrollView.maxContentOffSet.y - scrollView.minContentOffset.y let sliderRange = self.slider.maximumValue - self.slider.minimumValue and then rearranging, we can get an equation for `slider.value` (which is what you will be setting): slider.value = slider.minimumValue + Float(diffOffsetY / totalOffset) * sliderRange Keep in mind that when setting the scrollView's contentOffset for value changes of the slider, you can use the same exact principle. I know that was a lot, but I just wanted to explain the entire logic I took to arrive at the final conclusion. Enjoy! :)
You could try using [this online Swift playground](https://iswift.org/playground) to get a feel for the basics. I’ve never used it so I can’t say how well it works.
Basically, what you are doing is creating a linear relationship between the slider's position and the textView's vertical scroll position. To determine this relationship, we'll need to know the minimum and maximum contentOffset of the textView. This is because we want the slider to be at its minimum position when the textView is at its minimum scroll position and at its maximum position when the textView is at its maximum scroll position. To save you some time, I created an extension on UIScrollView that has two computed properties, both the min and max contentOffset: extension UIScrollView { var minContentOffset: CGPoint { return CGPoint(x: -self.contentInset.left, y: -self.contentInset.top) } var maxContentOffSet: CGPoint { return CGPoint(x: self.contentSize.width - self.bounds.width + self.contentInset.right, y: self.contentSize.height - self.bounds.height + self.contentInset.bottom) } } For a nice explanation on this, go [here](https://stackoverflow.com/questions/44192007/uiscrollview-max-and-min-contentoffsets#). This will enable us to determine how much of the total available scrolling the textView has currently scrolled, which will be used to determine the current slider value. Mathematically, this is the following: `let offsetFraction = (scrollView.contentOffset.y - scrollView.minContentOffset.y) / (scrollView.maxContentOffset.y - scrollView.minContentOffset.y)` `let sliderFraction = (slider.value - slider.minimumValue) / (slider.maximumValue - slider.minimumValue)` Now, since we want the slider to be at the value that represents the same fraction of the total scrolling of the textView, `offsetFraction == sliderFraction`. So, if we set some variables for readability, we can say: let diffOffsetY = scrollView.contentOffset.y - scrollView.minContentOffset.y let totalOffset = scrollView.maxContentOffSet.y - scrollView.minContentOffset.y let sliderRange = self.slider.maximumValue - self.slider.minimumValue and then rearranging, we can get an equation for `slider.value` (which is what you will be setting): slider.value = slider.minimumValue + Float(diffOffsetY / totalOffset) * sliderRange Keep in mind that when setting the scrollView's contentOffset for value changes of the slider, you can use the same exact principle. I know that was a lot, but I just wanted to explain the entire logic I took to arrive at the final conclusion. Enjoy! :)
thanks Ill look into this.
Your options are Mac, hackintosh or iPad. Mac best option, if can't afford try buying second hand. Hackintosh works but its a pain in the ass to install and then to update but this is what I did when was poor. With iPad you only can't compile apps and it's very limited and a pain to write on. I recommend just buying a Mac, even second hand. But try to buy a recent one so you get all the updates.
Your options are Mac, hackintosh or iPad. Mac best option, if can't afford try buying second hand. Hackintosh works but its a pain in the ass to install and then to update but this is what I did when was poor. With iPad you only can't compile apps and it's very limited and a pain to write on. I recommend just buying a Mac, even second hand. But try to buy a recent one so you get all the updates.
You’ll get that if you do what he said
ok thanks
First you have to understand the difference between the Objective-C programming language and the Objective-C runtime. The runtime is a library written in C that you link to. As are all libraries, the runtime is just a bunch of machine instructions that doesn't have any remaining Objective-C code. Swift code that uses Objective-C objects is compiled down to a format that is interfacable with the objective-c runtime. This is one of the things that people refer to when they say ABI. So for example, the Swift `UIViewController` subclass that you write is going to have calls to `super.viewDidLoad` and what not that compiles down to machine instructions that calls the Objective-C runtime library via the same `objc_msgSend` that the Objective-C programming language uses. You can se this easily by just making any app and then setting a breakpoint on some method and going to Debug-&gt;Debug Workflog-&gt;Always Show Disassembly and noticing all the `objc_xyz` symbols that are being `callq`ed. 
You can't do iOS development without Mac OS but Swift itself does run and compile on Linux.
I started with a VM of Snow Leopard and installed xcode to learn iOS.
I suggest checking out the whole [Swift Language Guide](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html), especially the [Control Flow](https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html) section for `if` statements.
Yes and no. &gt;**Can I learn Swift Programming without Macbook?** Yes, you can. You can install Swift on a computer which runs Ubuntu ([download it here](https://swift.org/download/)) to learn Swift. The programming language isn't tied to iOS or macOS programming, and you don't need macOS to learn it. &gt;**Please guide me I am interested in iOS Development.** For that part you'll need Xcode. Keep in mind you don't have to have the latest Macbook model for that :-) All you need is a Macbook which is capable of running the latest macOS version (so you can install the latest Xcode).
Macbook 2012 (used) cost $600
Might work, honestly, not worth the effort 
If you cant suggest something then dont ask foolish questions. At least I am trying my best. 
I am thinking about Hackintosh, probably better than VM, nah?
I think you can hack a solution by just ignoring the tube geometry for the physics and adding invisible planes that the physics does interact with. So it looks like the tube ID is doing it.
Well go for a Hackintosh 
Do you have a hackintosh? 
I have a MacBook as well as my Hackintosh
&gt; Don't believe the hype from people who've never done it, they haven't any idea what they are talking about. So they should listen to you, instead, because you've succeeded with sample size N=1?
1. Don't begin a request with "URGENT!". 2. Post your source code.
IIRC, the userland IOKit exposes a C interface only, but I rather meant that none of the frameworks are Swift. 
&gt;sample size N=1 Yes, I'm the only person in the history of the world who has successfully put together a hackintosh. /s As long as you stick with known components (tonymac and insanelymac publish lists of hardware) it's easy peasy to get working.
So. True. 
Probably they mean someone who has an experience with objective c, or they just lacking of informations about iPhone apps development.
Yeah. That's where I am going. I already enlarged the tube and blades I have to accommodate clear boxes for some interaction
If that’s the case just apply because the talent scout is probably stupid. If you get to talk to the engineers give them the skinny if they ask for your stats. 
Swift is currently implementing Machine Learning into the native library so Swift would still be good for AI
And a few years back: - Senior iOS Developer required with 5+ Years of Swift development experience -How many years do you know/work with swift? -Around 3ish. -Sorry but we are looking for someone with a higher seniority...
Get another used Mac then. Anything used from 2011 and on with 16 GB of RAM is good. And it's development, not Development. Randomly capitalizing words is bad.
I'm currently kearning swift and planning a live list that can be synced between iCloud users.
Technically swift is 8 years old. Publicly 4 years old. So Chris Lattner has 8 years of switch experience
On my resume I just write Swift programming experience versions 1 through 4
https://developer.apple.com/documentation/foundation/datecomponents/1779629-hour You’re trying to assign a `DateComponent` to a property of type `Int?`.
Apple configurator also doesn't work as it only works if you are about to update the app.
Had same thing happen to me a few years back. Wanted 7+ years and had been out roughly 5 which was a hard limit. The manager argued up and down to me about this. I was obviously rejected and recruiter told me they found someone with the required years experience in it. Dodged a bullet for sure!
But... how? If(x &gt; y) { run this code } else { do this instead }
Then I'd have said I'd had 25 years of experience working in Swift/ They clearly don't know what they're talking about 
Was thinking about doing this while I am building our products, Android, iOS and API dev. I would have my sprints and times up for what languages I’m coding and the tasks. Still on the fence. 
thanks maybe I just mist it
Yah hadn't done swift in a wile and I'm trying to get it back, but ifs seem to be mocking me for some reason...
To get the action of a button you need an @IBAction function tied to the button. Command/control-click (it changes on you so I aways almost never get it right on the first try) the element and drag to your code to bind the control to the function
That's a lot of talk. Can't you just paste the source code?
Tried didn't get it to work.
&gt; Sighhh... It's not a bug. It's a feature! What is the purpose of this feature? It seems to violate the Principle of Least Surprise. Just because something is documented doesn't mean it's not a bug. The CPU in my Mac has 50 pages of errata. &gt; By moving the implementation to the base class or protocol confinement to the subclass, Yes, the article says that. &gt; that will solve the problem. So you see that it's a problem.
Thank you for reminding me about that channel! I had seen it a while back, but never really explored the content. Will start there.
I think that would be great. Though for selfish reasons I hope you focus on a single topic like Swift :).
Exactly this. When you're in doubt about the type that you're dealing with, you can usually "Option-Click" it to see both the type and the available documentation.
Scissors! ✌ I win
No, not by using the public APIs at least. You may be able to hack your way through some private API usage, but its not something that would be visible on UIActivityViewController itself (UIActivityController only knows what activity is selected, not the contents found in said activity). 
That’s pretty much what I thought. Thanks!
It sounds like one of two things: - you have a problem with your data refreshing after the delete (it’s best to sort your data that’s being presented to verify this) - you have cells that are being reused and they’re not being reset properly before they are re-presented (override prepareForReuse in your collection view cell and reset to a default state so that old values are cleared out). Otherwise, post sample code so people can give you better advice. 
They never do
I had the same situation and after considering and trying all options already mentioned in comments I decided to find additional job and save for Mac. Three months later my Swift journey began. Good luck!
I think everyone learns in different ways, and if the other course works well for you then carry on using it!
Nice :) 
Reminds me of when DHH posted a recruiters letter mentioning they’d heard he was good with RoR. 
What are you going to do with the serialization? Persist to file storage? Send data across a network? Bluetooth? There are tons of serialization schemes that make sense for each scenario.
I hear they have sockets on MacOS these days, too.
No, literals are orthogonal to primitivity.
Java primitives are value types, just as Swift structs are. It's not a perfect equivalency, but it's closer than TGC/ARC or interfaces/protocols or finalizers/deinit.
This will be for local user storage only. I’m planning to implement CloudKit storage later and JSON serialization at some I’m sure but for now, simple local storage.
Hmm, how so? I wouldn't really map primitives to structs simply because structs imply composition and being programmer-defined. A primitive would be probably be something that is system or language-defined and which, conceptually, can't be split into other types. For example, in C-based languages you would have `char`, `int`, `float`, and so on. A structure built out of those primitives wouldn't be considered to be a primitive. In Swift we have `Int`, `Float` and more but those aren't primitives. Instead they are structures that wrap and extend the true primitive data. There really isn't a true primitive in Swift because of this except, perhaps, if we talk about pointers to memory and the data there. That's why I said literals might be close because at least they are simply data and not a structure.
Hi taiomi! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/952ffr/my_first_app_written_all_in_swift_is_an_app_that/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Downloaded, thanks for the heads up! 
Not really, from my limited Swift understanding those are more for behavior and not encapsulation/initialization like happens with the getters and setters in java.
With the exception that closures don't need any interface to run, like happens with the Lambdas and the java 8 functional interfaces.
&gt; A Java Interface is just a named set of methods. For Java 8, there are default implementations as well, just by marking a method as default inside an interface.
I don't think it has to be planned too much. There are plenty of step-by-step tutorials out there for short/concise teaching. I think the community would benefit from just seeing someone doing real/everyday coding work... with some commentating as to the thought process or what it is you're trying to achieve. IMO, one of the best aspects would be getting to see someone try to solve problems, fail with attempts, etc. For example... "Ok, here are the three steps I think I'll need to take to achieve X... my first guess is to try out Y code OR to research Z solution...". I'd love to see that thought process in a natural/organic way instead of just a polished tutorial.
Is that like the Twitch version of just standing over my shoulder? LOL I'd be interested to see how this is setup and structured.
What I'm trying to say is **Swift: When Unused Code Is a ~~Bug~~ Problem**
I was going to do this a few months ago, but didn't get enough people who were interested. I'd gladly start if enough people would watch :D
If he found it easy, and the process is replica le why would you need more than 1 data point?
I don't want to sound like an asshole, but I doubt that. That's not something you forget, it's like "I haven't written in a while, and I just forgot how the letter 'B' works". It's so fundamental it's practically unforgettable
Handling an optional is like 9001x more convenient then handling a thrown error. Optionals can be conditionally unwrapped, force unwrapped, nil coalesced, mapped and flatmapped. Thrown errors... Can't. Using a subscript operator is more appropriate for this than a function (for one, because the the 'get' and 'set' syntax is consistent, just a[i]
This protocol is of dubious value. You would be much better off just implementing the subscript on `Collection`
Thrown errors can also be conditionally unwrapped, force unwrapped, nil coalesced, mapped and flatMapped. Just use either `try?` or `try!` depending on your needs. Thrown errors can do everything that optionals can do, *and* they allow the calling code to distinguish between different failure modes. In this case, if the Element type of the Array is itself optional, a thrown error is the only way for calling code to distinguish between a nil result because the object being held is Optional.none or if it's because the index was out of range. The subscript operator is already implemented on `Array`. `a[i]` will cause a runtime error if `i` is out of range. The `at` function doesn't have that particular problem. If the developer knows that `i` is in range, then by all means use `a[i]`, otherwise `try? a.at(i)` or `try a.at(i)` are safer. I wouldn't force unwrap the at method because that defeats its purpose.
[https://www.twitch.tv/scottxthexgamer](https://www.twitch.tv/scottxthexgamer)
I think the line is a bit dangerous, but I'll still try to explain. IDK your background, so I'll start at ground zero. \&gt;(currentCam?.position == .front) means: *if the optional var currentCam.position is equal to .front* the var currentCam is an optional and has a property call position. If it's equal, newCam is assigned rearCam, if it's not equal, newCam is assigned frontCam I'm kinda wondering why the rearCam and frontCam aren't .rearCam and .frontCam ... maybe assumed, but maybe it doesn't have the benefit of being checked by Xcode like a enum would, IDK. If that's your code, I think if the currentCam is null, you crash, a guard or if let might be a better choice.
to add to karljay. that's ternary operator not an optional. the first ? is an optional because the currentCam may be nil. the second ? is not an optional, it's part of the ternary operator, (a ? b : c). basically a condensed if else statement 
Nice! Only edit is that if `currentCam` is `nil`, the first expression will evaluate to false, setting `newCam` to `rearCam`. There is no danger in crashing here 👌🏼 To OP: this is called a ternary expression - there are good examples of it in the Swift docs,
It's equivalent to this: let newCam: NewCamType if currentCam != nil &amp;&amp; currentCam!.position == .front) { newCam = rearCam } else { newCam = frontCam } I agree with /u/Te_co, I think you're conflating the ternary operator with an optional. 
Fixed the nil/null part. I didn't know the if would be the same as if let. So it has safety built in, that's cool.
Optionals are used to prevent your app from crashing among various other uses but this is the most simplified reason for beginners. When you specify a variables type and make it optional(?) you’re saying that if for whatever reason your variable doesn’t have a value it has this “backup value” of nil. These are for circumstances that you’re not 100% a value is attached to your variable. For what you’re working on though I imagine it has little to do with optionals.
I made an example in a playground. You make an image context, set the clip to a circular region, draw your image in your image context, then copy the result into a new image. I put it in a category on `UIImage` import UIKit import PlaygroundSupport PlaygroundPage.current.needsIndefiniteExecution = true extension UIImage { /// Return a version of this image cropped to a circle. /// Assumes image is a square to start with var rounded:UIImage? { UIGraphicsBeginImageContext(size) UIBezierPath( ovalIn: CGRect( origin: .zero, size: size )).addClip() self.draw(at: .zero) return UIGraphicsGetImageFromCurrentImageContext() } } let url = URL( string:"http://hypewallpapers.com/images/400x400/landscape_001-1010088400400620.jpg" )! let data = try! Data( contentsOf:url) let roundedImage = UIImage( data: data )!.rounded! 
Look into [NSOperationQueue](https://developer.apple.com/documentation/foundation/nsoperationqueue) they have the architecture to be canceled.
Thank you! 
I wasn't sure how to cancel a dispatched thread, so I looked it up and found this: [http://jordansmith.io/cancelling-background-tasks/](http://jordansmith.io/cancelling-background-tasks/) &gt;On a final note - once a dispatch task has started running, neither cancelling or suspending the task/queue/work item will stop it. Cancelling and suspending operations only effect tasks that haven’t yet been called. If you must do this, you will need to manually check the cancelled state at appropriate moments during the task’s execution, and exit the task if needed. Seems you can't cancel, but if I'm wrong, plz let me know. One thought that comes to mind is to use the observer or callback type approach where you get a notice when something is completed. The callback (completion block) would probably be the easier of the two. Basically you have a block of code that executes when the job is complete. You can have all of them call a common function that kills off the others inside the completion block. I haven't read this one, but there's several examples out there: [https://blog.bobthedeveloper.io/completion-handlers-in-swift-with-bob-6a2a1a854dc4](https://blog.bobthedeveloper.io/completion-handlers-in-swift-with-bob-6a2a1a854dc4)
Clearly an issue of HR not having a clue. I applied at a company years ago and never got a call, a friend knew a friend and I got the job that way. I was the most qualified IT person there because I worked for their competitor, but the HR people were clueless. I was talking with a recruiter years ago, I was the SQL server manager and was going down the list of my skills. I mentioned that I setup the server from ground zero, he said "most companies already have running servers...". He couldn't understand that I was listing my skills and he thought that I only knew how to install a server. These people are usually clueless, like a used car salesperson.
It's not the same as `if let`, it's just that `currentCam?.position` is `nil` if `currentCam` is `nil`. And `nil == .front` is `false`, of course. 
`rearCam` and `frontCam` are the same type as `currentCam` (ignoring optionality which we don't know). That type has a property `position`, and that has a value of some enum with `.front` and `.back` cases (probably, we only see `.front`). But `frontCam` and `rearCam` are just some variables/properties that store a camera object, so `.frontCam` wouldn't make any sense, cause it's not an enum.
Neat! That code is shorter than I expected it to be. Good to know about `addClip()`.
- Unicode handling with grapheme clusters which means if you have a mad emoji that is usually comprised out of two or more emojis, it'll be represented as one, and count on that var will be one, unlike other pleb languages such as c# that will break everything trying to represent something simple as emoji. 
[JSON parsing in Swift 4 via Decodables](https://roadfiresoftware.com/2018/02/how-to-parse-json-with-swift-4/) is pretty dope. Eleminates the need for a 3rd party lib to do that
I wouldn’t say that’s a lesser known feature tho...
In fact, it's gotten a ton of attention since it was just released.
Auto generated struct initializers. https://medium.com/@sergueivinnitskii/easy-struct-initialization-in-swift-8ee46b8d84d5
In terms of the history of computer science I believe that does apply, yes.
I would. I see projects that include 3rd party libs just for that almost on a weekly basis
Oh thanks for the history lesson! Another history lesson, Swift was released 4 years ago, decodable was released a little over a year ago. so that means its been around for 1/4 of its lifetime. 
Bit salty today?
I found it useful; thanks for mentioning it.
No :)
Because what they have works, why spend the time to switch it over if there are no benefits. Anything from scratch I would say needs to start with the Codable protocol however, anything that didn't use it originally can stay. Unless you want to cover that tech debt. I have projects that use ObjectMapper, however I won't switch it over since it would take a day or two that I don't have. 
Then why quibble over the "just released"? Yes, it wasn't yesterday but it also wasn't a decade ago. No need to make a big deal over it, it's a feature that's fairly fresh in people's minds. Basically, I was agreeing with your statement of it not being a lesser known feature...
&gt; Because what they have works You know what projects I have recently reviewed? Interesting. Could you do that in the future for me then? &gt; why spend the time to switch it over if there are no benefits. Wait a second. You mean cost and benefits should be reasonable and balanced? Someone call the news. &gt; Anything from scratch I would say needs to start with the Codable protocol however, anything that didn't use it originally can stay. Go on, give me more overgeneralizations I can make fun of.
I did the option click with the question mark and both types said data component but all in all thanks guys I took the suggestions above and got it working 
&gt;Go on, give me more overgeneralizations I can make fun of. Let hear them lol, I deal with this on a daily basis. Teams have more important things to do than worry about switching there encoding/decoding libraries. 
Yep, this is a great feature that's not a game-changer but is still pretty cool.
No sure exactly what you’re trying to access with the no spacing? However, Let’s say you have textfield1 and textfield2, you want to check if the text of 1 is greater than or lesser than 2. Though, before you can accomplish this, you need to convert the text from a String to an Int so you can compare the two. let a:Int? = Int(textField1.text) let b:Int? = Int(textField2.text) if a &lt; b { //The value of textField1 is lesser than the value of textField2, so allow user to edit textField3 } else { //The value of textField1 is greater than the value of textField2, so don’t allow the user to edit textField3 }
What I mean is, let’s say I have 8 labels with numbers 1 -8 each. What I want to achieve is that the user must type in the text field an input of 12345678 and i want to check whether the user does it 
CaseIterable, is a cool protocol your Enum's can conform to. [https://github.com/apple/swift-evolution/blob/master/proposals/0194-derived-collection-of-enum-cases.md](https://github.com/apple/swift-evolution/blob/master/proposals/0194-derived-collection-of-enum-cases.md)
For your use-case, I would recommend Firebase for your backend. It's supported across multiple platforms and its very easy to get started with. I would suggest however, taking the long route and learning Python, Django Rest Frameworks as well, but that takes a lot more time. 
How do you want the PDF to be formatted? Just a normal pretty-formatted JSON?
The end-result PDF (I've got one as an example) has a defined structure and style. Selectable text would be great, but an image is acceptable. 
Where's the example?
Oh, I see. So you're receiving an actual serialized binary PDF in an array of integers. Any idea on the serialization scheme?
The content in this PDF is confidential, so I won't share an example, but the one I'm looking at here is the exact format I mentioned in the description. It's got 271,537 numbers in the array.
I'm sorry let me rephrase that, I meant to say I didn't quite know how to in the first place, and now I'm trying to do it, it seems that I didn't know anything before. which is why I asked
as in I know If and Else, and all that, but I don't quite remember how to make them respond in the way I want them too.
Ahh alright, thanks!
How do I achieve this and next post will be: I want make a multimillion selling app in AppStore, in 5 simple steps
Instead of using a framework why not learn how to make it yourself? You will learn a ton more, and its fairly easy to implement. [https://developer.apple.com/documentation/uikit/uicollectionview](https://developer.apple.com/documentation/uikit/uicollectionview)
Thanks! Changed to OperationQueue and used a delegate to notify on completion. Its a bit longer than the original but at least I'm not calling DispatchQueue...async all over the place. Its certainly more able to be re-used with a bit of effort. I had to add the "whoa" method as operations that have already started don't have their cancel method called and aren't in the operations array. in your opinion, how does this compare to the prior version? Also, I think I handled retain cycles appropriately (I wish Playgrounds had access to Instruments; I'll test it in a project with Instruments) - any thoughts? class LongRunning: Operation { let intervals: Int private var _name: String = "" override var name: String? { get { return _name } set { super.name = newValue; _name = newValue ?? "NIL" } } private let sleepTime: TimeInterval = 0.001 private var startTime = Date() private(set) var lostRace = false private(set) var runTime: TimeInterval = 0 private(set) var sleptTime: Double = 0 private(set) var completionHandler: (_ op: LongRunning) -&gt; Void ///Just something to take a certain amount of time /// /// - Parameter name: The name of the object /// - Parameter intervals: The number of times the sleep routine will loop /// - Parameter completion: Will only run if first to finish on the OperationQueue init(name: String, intervals: Int, _ completion: @escaping (_ op: LongRunning) -&gt; Void) { self._name = name self.intervals = intervals self.completionHandler = completion super.init() } override func cancel() { lostRace = true super.cancel() } override func start() { super.start() if !lostRaceOrCancelled { sleep() } } var lostRaceOrCancelled: Bool { return isCancelled || lostRace } func whoa() { lostRace = true } ///Sleeps for intervals * sleepTime func sleep() { startTime = Date() runTime = 0 var sleptFor = 0.0 for _ in (1...intervals) { if lostRaceOrCancelled { return } else { sleptFor += sleepTime Thread.sleep(forTimeInterval: sleepTime) } } sleptTime = sleptFor runTime = Date().timeIntervalSince(startTime) if !lostRaceOrCancelled { completionHandler(self) } } override var description: String { return String(format: "LRP: '%@' = %d, Lost Or Cancelled: %@, Finished: %@", _name, intervals, lostRaceOrCancelled.description, isFinished.description) } } protocol TestQueueDelegate { func didFindWinner(_ winner: LongRunning, queue: TestQueue) } class TestQueue: OperationQueue { private let multiplier = 1000 private let numLRPs = 5 lazy var dict: [String: Int] = { return Dictionary(uniqueKeysWithValues: (1...numLRPs).map{ i in ("#\(i)", i * multiplier) }) }() private(set) var lrOps: [LongRunning] = [] private(set) var winner: LongRunning? { didSet { if let winner = winner { delegate?.didFindWinner(winner, queue: self) } } } var delegate: TestQueueDelegate? override init() { super.init() self.qualityOfService = .userInitiated dict.forEach { (name, intervals) in ///Retain cycles??? let lr = LongRunning(name: name, intervals: intervals, { [unowned self] winner in self.cancelAllOperations() self.lrOps.filter({ $0 != winner }).forEach{ loser in loser.whoa() } self.winner = winner }) lrOps.append(lr) } } func findWinner(delegate: TestQueueDelegate) { self.winner = nil self.delegate = delegate self.addOperations(lrOps, waitUntilFinished: false) print("Started") } } struct Runner: TestQueueDelegate { init() { let test = TestQueue() test.findWinner(delegate: self) } func didFindWinner(_ winner: LongRunning, queue: TestQueue) { print("WINNER:", winner) print() queue.lrOps.sorted(by: {$0.intervals &lt; $1.intervals}).forEach { print($0) } } } let _ = Runner() 
Thanks! I've updated my code and its posted [here](https://old.reddit.com/r/swift/comments/9559bk/help_with_gcd_specifically_cancelling_long_ops/e3rrhsc/). Please let me know what you think.
but isn't it only for iOS and OSX ? i want to use it for swift in linux
That looks strange? Really only integers in there? Just a wild guess(never seen this before) perhaps somerhing like bson? https://stackoverflow.com/questions/1443158/binary-data-in-json-string-something-better-than-base64
I've run across BSON in my search, however nothing seems to fit the bill - it's definitely just numbers (here's a sample) [https://imgur.com/oN2Ooon](https://imgur.com/oN2Ooon)
This may help you? https://stackoverflow.com/questions/11860830/byte-array-to-nsdata
If you don't make a GCD call here, does it deinit right away?
Any database can work with any front-end. Based on no requirements, we'd just be picking one at random. 
Correct - it deinits right away if I remove the GCD call 
I am very happy to say that this worked. Surprised equally by the ease of implementation as well as my inability to find this answer on my own! Thanks a lot!!
I’d report somebody to HR if they submitted a diff with a high Unicode char. 
Here's a thought: \&gt; build a generic, data-drive mobile app. Your demo app in the App Store along with all the white label versions can execute the same code against DIFFERENT data. Rather than a different build for each white label version - create one single build for all white label versions. Each build is customized based on the data that it executes against. Imagine each white label app runs against a config.json This json contains: \- launch screen info \- extra tab info \- etc. Each white label version of the app is: \- base app \- custom config.json Update your app to retrieve the config.json from a server you manage AKA "the cloud". This is the \*data driven\* part of our solution. Need to update White Label App #7 for Client A?? Update your config.json and let the app pull it down from the cloud.
Seems like some pretty simple logic you could run on your ui
Yeah, it’s a neat feature but there aren’t many serious uses for it. At least in programming with native English speakers. 
Are you dumb? I am beginner and just learning how to code to solve certain situations. I have no intentions to release it or whatsoever. Just for my personal learning
You can put your code into a framework and use that in each and any custom company for each company can live i each app target
Control + p gives you `π` without having to open the picker. Since at least System 7. :P
Control? Do you mean option p? Also, these can depend on the keymap used. 
Google targets. It’s specifically for this. One code base one target for each instance. You will make your update and then create archives for each target. 
It’s sounds like you are asking for someone to be an unpaid intern? That doesn’t really fly in CS, especially if you yourself are making money off the app. Anyone with the skills to provide you any value will either have tons of ideas/people pitching them ideas, or a paid position/internship 
Not looking for an intern. Just someone to work with. :/ don’t have to be an ass about it
Honestly, end goal would be a self sustaining project paying everyone (what projects goal isn’t aiming for that?). But I’m just looking at it more realistically, less then 15% of Indy apps generate a profit.
Yeah, it’s definitely a hard thing to pull off. Before the turning a profit phase you really need people passionate about the idea who can spare time. I guess, where I was coming from is that, your description looks extremely similar to the application posts for paid mobile dev interns. In that case, I’d always recommend that the younger dev go to a paid position where they get the same professional experience and they get paid. Passion is a different thing, if they are passionate about the app then they should definitely work on that instead 
This is why the title says “side job” and “portfolio project”, as well as unpaid in the description. I’m just looking for someone to partner with to help me complete a swift iOS project. I’m just running out of steam is all. It’s really up to the person how much they contribute, and what they seek post project finish.
Will fastlane help as part of the build/upload automation?
I worked at a company that did this years ago. Pretty much all of it was handled with version control and setup files. I don't know if there's better solutions, but one of the Udemy tutorials a section on targets. Between version control, targets and setup files, you should have it about as covered as you can get. Personally, I like the idea of a universal framework with all the code you can get in there, then have the specialized code as small as you can get.
So would you always want that image to be that size - wouldn’t it scale based on device?
I have almost 31 screens, I want to design these UI designs programmatically, I am looking for help.
I’m just saying doing so with that sample code is going to lead to a real pain - that image will always be that same size, the views, etc won’t adapt to different devices. So many reasons why storyboards or xibs would be a huge help here. Can designs and constraints be done programmatically - sure... but you could easily generate what you have with a xib/ storyboard without a single line of code and have much greater flexibility using auto layout, etc. 
Yes, sorry. Brain fart. Option+P.
I'm working on a bookmark app that is really just that. An app that saves your place in a book. No name ideas at the moment. MarkIt? It'll ask you to input the number of pages the book has and what page you are on. Once that's collected it'll let you know how many pages are left. That being optional because knowing how many pages are left gives me anxiety. The feature I'm going to love incorporating into it is notes. On each page you should be able to jot down notes that you had of that page. I usually use my notes app for that but having a dedicated app for it is going to help me tremendously. From there you have the option to create a customizable profile for the book. \- Profile picture of whatever you think relates to the book. \- a background image of your choosing. And that's it so far for personalization. thats it, do I need this? No. Will it keep me stuck to the app? maybe. I like personalizing things. It keeps me attached to it. And lastly, there should be a "books" tab that'll let you add/remove books from your list. This is all I have in mind for now. Might add or remove things depending on what inspires me. 
It's less Xcode that you need, and more a GUI library (on iOS that's UIKit, on macOS it's AppKit). You could likely use the ability to call into C from Swift code to use a library like GTK, though I haven't looked into whether anyone's tried it yet.
I realize that but you would learn much more figuring out on your own using knowledge got from for example Apple books, it is free.
You could use the shouldChangeCharactersIn method of UITextFieldDelegate. But I often prefer to make it by myself in this way: I add a target to the text field with .editingChanged option. The method is called every time input text changes. Hope it helps 😊
textStr.forEach { char in if char == ‘1’ { doSomething() } }
Oh forEach is a property of a text field?
No, it’s a function on a string. So you would do textField.text.forEach { ... } Like the previous poster said, you can use the textfieldDidChange event to know when the textField updated. 
It might help to look at some of those autocomplete textfield examples, they should show how to work with the text in the field. [https://medium.com/@aestusLabs/inline-autocomplete-textfields-swift-3-tutorial-for-ios-a88395ca2635](https://medium.com/@aestusLabs/inline-autocomplete-textfields-swift-3-tutorial-for-ios-a88395ca2635) [https://dzone.com/articles/implementing-auto-complete-with-uitextfield-1](https://dzone.com/articles/implementing-auto-complete-with-uitextfield-1)
I heard that with the Swift 4 version that you have to know the whole structure of the JSON just to grab out a few fields, whereas with SwiftyJSON, you can just grab the fields that you want. I haven't confirmed this.
You said client which makes me think someone is paying you to do this, but you have literally 0 idea of what you are doing, you will not be able to achieve what the client wants in a reasonable amount of time
From the wording of your post it sounds like you are the intern and you want someone to do the work so you can learn and earn from it?
https://github.com/rhx/SwiftGtk
Does Swift work the same way with different OSs the same way it works on macOS?
There has actually been a resurgence in using code to create UI's since there are disadvantages with both UIStoryboard's and Xib's. Since you are using Swift in your application I would recommend you to take a look at [SnapKit](https://github.com/SnapKit/SnapKit). It helps take away the pain of Autolayout with a domain specific language.
Just to be clear this is a function on any sequence type, not just strings. 
With a good autolayout constraint library, like SnapKit, you can make layouts just as fast as with storyboards. The main advantages of it is that you will use way less force unwrapped optionals and you can make custom initializers, so if you change/add/remove something important, you will get buildtime errors instead of runtime crashes. It's also way easier to modify or extract ui components if you are not working in waterfall model.
Upvote for snapkit - 100% agree on that. The above, just looks like a real pain is all one saying.
Exactly the same except some libraries might be changed or missing. Also, some things are platform-specific such as word size and byte order. 
Hey, I am currently working as an iOS Intern at Practo Technologies Pvt Ltd ([App Store link](https://itunes.apple.com/in/app/practo-doctors-and-medicines/id953772015?mt=8)), situated in Bangalore, India. My internship is due to end by the end of September. I am still unsure if the company will convert my internship to a full time employment within the next two months and I am on the lookout for other opportunities. I am open to relocation and/or working remotely.
Also, you could build web applications using [Vapor](https://www.digitalocean.com/community/tutorials/how-to-install-swift-and-vapor-on-ubuntu-16-04). 
&gt; Using an optional cuts right to the chase. It's the preferable choice for single-case errors in most situations. I agree with you completely in the above. However, this isn't a "single-case error" situation. In this *particular* case, there are multiple reasons a `nil` might be returned and sometimes `nil` doesn't even represent an error. It makes sense to use `try` in this particular case because of that. As for the rest of your comment, you are just nit-picking on syntax. I don't really care if the function is named `at(_ index: Int)` or `subscript(safelyIndex: Int)`
I teach Swift for my day job. I know this language and how to build things with it. That’s not the problem. I’ve just been building this on my own for a while now and running out of steam.
I would love to join you and learn in the process. But I have to inform you that I work as an iOS Intern at a company too and will only be able to devote time other than what I spend at work. Also, o would love to checkout your GitHub profile.
Did you know that '*' and '+' have different semantics in Swift than they do in most other programming languages? [&amp;+](https://developer.apple.com/documentation/swift/uint64/2884386) and &amp;* - versions of '+' and '*' that don't throw overflow errors. (That is, they behave like '+' and '*' in C, C++, Objective-C, and Objective-C++, and shader languages.)
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://developer.apple.com/documentation/swift/uint64/2884386) - Previous text "&amp;+" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Not "exactly the same" at all. Lots of functionality is still quite buggy on Linux, or simply different. For example, [strings don't sort in the same order on Linux](https://bugs.swift.org/browse/SR-530), in any stable release of Swift (though it looks like that will finally be fixed in the next release). Lack of Foundation bridging is technically an omitted framework but injects itself into lots of strange places, such as [`FooStruct as? AnyObject` being different on Linux](https://bugs.swift.org/browse/SR-6715). Even a fairly straightforward self-contained wrapper library like SwiftyJSON has had a "Linux support" request sitting in their bug tracker for years. There's a 6-month-old PR in the queue that claims to add Linux support, by adding a dozen or so `#if os(Linux)` blocks. I've tried to run the same Swift code on both Linux and Darwin, and in my experience, they're quite distinct. Darwin Swift code doesn't run on Linux, and Linux Swift code doesn't run on Darwin, without a fair amount of work. There's very few libraries where someone has put in the effort to make it run on both. 
Definitely App Development with Swift. It is a more practical approach to learning how to develop apps while still explaining some programming theory. The Swift Language guide is a more in depth guide on all the Swift features as a programming language. 
&gt; Lots of functionality is still quite buggy on Linux, or simply different. Which is why I said: "except some libraries might be changed or missing" The language is absolutely the same across platforms. However, there are differences in some of the libraries, as well differences in bugs between implementations. The `String` sort issue shows this. The code calls down to the native Unicode comparison libraries and they produce different results on different platforms. This has little to do with Swift, it's due to the environment where you're running the code. The same goes for interacting with frameworks which are Apple-only, there's going to be some differences due to Linux not having them. This is not really a language thing, it's an environment thing. Yes, to make your code cross platform you're going to have to do some work. That's true for many languages out there.
There actually seems to be a quite up to date wrapper for the C library on github https://github.com/rhx/SwiftGtk/blob/master/README.m @OP: I don‘t particularly have experience with this since I usually do Swift exclusively for Apple platforms and Java or .net Core for cross platform applications, however if you want to build a GTK+ app that works on linux as well as on macOS, you might also want to look into this: https://www.gtk.org/download/macos.php
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rhx/SwiftGtk/.../**README.m** (master → e4bbfcb)](https://github.com/rhx/SwiftGtk/blob/e4bbfcb1dbb046bdd2523cb9712492c2b1f5c790/README.m) ---- 
Completely agree. Especially working in a team with multiple people on the same storyboard will *always* end up in merge conflicts since there is quite a lot of magic happening in the storyboard xmls. I haven‘t used SnapKit yet, but thx for the recommendation, will take a look!
I am also going through the Swift Playgrounds app (trying to get my head around arrays at the moment!). I was wondering now that you’ve finished Swift Playgrounds (or almost!) how much do you feel you’ve learned? 
If I were you, I might just think of freelancing. That's what I plan on doing and that way you wouldn't worry too much about jobs. Plus, you can easily earn $50 USD an hour on a site like Upwork which is a lot of money especially in Bangalore.
Super weird, I tried rerunning the code today and this time I crashed correctly with: **Fatal error: Attempted to read an unowned reference but the object was already deallocated2018-08-08 16:51:02.422817-0500 AnimationTest\[31948:585775\] Fatal error: Attempted to read an unowned reference but the object was already deallocated** I'm a little mind blown because I didn't change anything so I'm not sure why I wasn't crashing yesterday. Nevertheless, thanks.
Fixed the link for you: https://github.com/rhx/SwiftGtk/blob/master/README.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rhx/SwiftGtk/.../**README.md** (master → e4bbfcb)](https://github.com/rhx/SwiftGtk/blob/e4bbfcb1dbb046bdd2523cb9712492c2b1f5c790/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e3unw8m.)
I think you really have to clarify what's wrong with the code and what you want to do, right now it doesn't make much sense.
Angela Yu's Udemy course is excellent!
I recommend Hacking With Swift, it’s a free resource online (just google it). The series has you make a variety of apps, all while learning different concepts of the Swift language that you can use to make an app yourself. Highly recommend it!
If you don't want your `tags` object to contain the `piste` object, you shouldn't be using a keyed container. Use a single value container instead, like this: enum CodingError: Error { case decoding(String) } init(from decoder: Decoder) throws { let container = try decoder.singleValueContainer() if let piste = try? container.decode(PisteTags.self) { self = .piste(piste) } else if let dragLift = try? container.decode(DragLiftTags.self) { self = .dragLift(dragLift) } else if let chairLift = try? container.decode(ChairLiftTags.self) { self = .chairLift(chairLift) } else { throw CodingError.decoding("Couldn't decode \(dump(container))") } } func encode(to encoder: Encoder) throws { var container = encoder.singleValueContainer() switch self { case .piste(let piste): try container.encode(piste) case .dragLift(let dragLift): try container.encode(dragLift) case .chairLift(let chairLift): try container.encode(chairLift) } } 
So use `weak` :-P
Friggin lovin’ it
Go for App development, you will learn the language with a purpose and the many concepts this language have will be memorized by practicing.
I’m just finishing the Pro Swift and I have learnt a lot of those advanced concepts with this language, just to put my hand in Vapor and build a little backend project.
That's awesome. Have you checked out [swift-nio-http2](https://github.com/apple/swift-nio-http2) yet? I've been messing around with it the last few days. It's in early beta right now and is still missing a lot of documentation but it's cool to see Apple's approach.
Can’t recommend Angela’s course enough, and I tried several. She hits the sweet spot of explanation through good analogy and never lost me through the content. Too many others are friendly enough, but not great teachers. Definitely a skill to be able to revert to a “beginners mind” when conveying concepts. 100% dive into that next on Udemy.
Do you know where the doc for Swift class implementation using protocol witness table? I watch the WWDC video r freed to in the article again. It only talk about struct implemented with PWT. Is there doc somewhere stating Swift class use the same PWT inside?
This is lesser known?
Question: what exactly is the server about? I'm not really sure based on your post...
Thank you! . It's code from a Medium blog on how to implement a simple camera. [https://medium.com/@ashikabala01/how-to-create-a-stop-motion-animation-camera-using-avfoundation-in-ios-12d1a67b70ab](https://medium.com/@ashikabala01/how-to-create-a-stop-motion-animation-camera-using-avfoundation-in-ios-12d1a67b70ab)
Awesome! We'll all be happy to meet you!
I can also recommend iTunes U. Developing iOS with Swift. It consists of a lot of videos and slides by Stanford university. And also completely free. 
Did you try on a device or the simulator?
Sounds like a fun tutorial, glad I could help. I guess the line isn't dangerous, so we both learned something :D
Yes - this is really good. I re-watch it every year a new one comes out, and learn something new every time, even though I’m an experienced iOS and Swift developer. 
The concept of arrays is very straightforward, however the Swift Playgrounds app is a little confusing when explaining how they can be used. I’ve progressed through the section now, however might have to come back to them if I want a refresher!
Is it possible for you to provide sample code or some link to a tutorial? I’m kind of a beginner in swift so I would like to see the code in a more clearer sense 
For this purpose I have used a very good library : https://github.com/gavinbunney/Toucan
Do you require members to Swift experts? I'm quite new and it would be nice to talk to people who know their thing.
At what point did you realise you felt competent enough in Swift to start applying for jobs?
Thanks! CloudKit should work fine. But how to I restrict a list to a specific iMessage group? As my previous example, say I have a conversation with A and B, how do I restrict the list to only A and B? Does an iMessage app automatically restrict to individual groups?
I've been going back and forth, lately, on whether I prefer to init the properties where they're declared or to do so in the initializer. Usually I do what is described in the article: struct Foo { let bar: Bar { let bar = Bar() bar.title = "Bar Thing" return bar }() } But one down side of that is that the initialization logic of your `Foo` struct is spread around in a bunch of different places. It's also harder to just see a list of its stored properties at a glance. Then again, it's still nice to see exactly what [`Foo.bar`](https://Foo.bar) is going to be right where it's declared. I don't know...
How does this work vs firebase? sorry noob here.
Have a look at the CKShare class, that’s how you would achieve shared access to records. https://developer.apple.com/documentation/cloudkit
My friend, you are a legend, thank you!
PS: Previously I posted a video of how the app works. I've added more since then, but it still gives you a good idea: https://www.dropbox.com/s/atzhip7esxeszwt/Unwrap.mp4?dl=0
I'm using an ios device. Memory usage is only 3% so it's not a resources issue.
Firebase
This is great! I’ll have a look and see if I can help.! Thanks for your continuous contributions to the Swift community. 
Generally, if you have a lot of one kind of data you would want to store it in an array. For example, if I was trying to keep track of students in a classroom, I would have an array containing all of the students. One of the benefits of using an array as opposed to making an individual variable to store each student is it makes it easy to add and remove a student from the class. Like if a new student is enrolled, you could easily just append that new student to the array. You'll also always know how many students are in the classroom, by getting the count of the array. Another benefit is you can easily sort and search the array. If you wanted to sort all the students by alphabetical order of their name, you could do that. If you wanted to access Bob and change his grades, you could search for Bob in the array and once you find him, modify his grade. Some other examples: You can have multidimensional arrays. For example, if you wanted to make a Tic Tac Toe game you could make a 3x3 array. A multidimensional array is an array of arrays, so you would have an array containing 3 arrays of 3 numbers. (lets say 0 for empty, 1 for x, 2 for o). Now you can easily access each square on the board with its coordinates. If you wanted to keep track of a store's inventory, you can have an array of items in the inventory and easily add or remove the items when you sell them or get new stock. If you wanted to do a physics simulation in three dimensional space, you could keep track of an objects position using an array of three numbers, corresponding to the object's x, y and z coordinates. Let me know if this helps.
Awesome! I’ll check it out for sure :)
Hi, this is awesome of you! I've been coding with Swift for a while now (just getting back into it), so the content of the app itself is quite easy for me, but I love going through the source code. Thanks for releasing it to the public, and good luck for the app launch!
Not sure if I'm doing anything wrong, but when building the app I get the following error: "No such module 'SwiftEntryKit'"
For someone who hadn't written a 'single' line of code until just a couple of months ago, I believe I've learned a fair amount from Playgrounds. It does a SOLID job of introducing you to not just Swift, but, a lot of the core concepts in programming in ways that you will probably never forget. I read an article some time ago about Apple's unique teaching philosophy as demonstrated in Playgrounds: The lessons are deliberately designed in such a manner that you are thrown in at the deep end and are required to figure out 'on your own' how to solve problems. That's an amazingly effective teaching strategy. Granted, it makes you want to gouge out your eyes, at times, but when you figure out the solution, with NO outside help (very important), after a day, even two days (sometimes) of wracking your brains, you feel awesome. (Until you move on to the next challenge, that is. Ha ha). The best way to learn is to teach yourself. The biggest take away from Playgrounds, imo, is that it obviously won't make you a star coder or anything (it was never meant to) BUT it cultivates a 'programmer mindset' in you and you find you're just not happy knowing as much as you do.. You want more.. You constantly feel the need to broaden your coding horizons and learn more and more and more. And that's what being a programmer is all about, I suppose. I still hear about programmers with decades of experience still learning something new. So you know.. You never really learn enough. And that's a good thing. PS: I had a rough time learning arrays. But when I did figure them out and was able to create my own different projects (with considerable ease) in the final challenge, that was a real confidence booster. ✌️
Sweeet, I'd like to test it when it's out! 
No! In fact, at least half of us are only here to learn. You're welcome to join anytime!
Awesome! We'll be happy to see you on the server!
You mean the colon? //: is the beginning of markup comment. If you go to menu Editor-&gt;Show Rendered Markup, those comments turn into rich text. This is how you have rich format text inside the playground. These comment use markdown syntax like the syntax for reddit. Here is the doc about this: https://developer.apple.com/library/archive/documentation/Xcode/Reference/xcode_markup_formatting_ref/index.html#//apple_ref/doc/uid/TP40016497 
Thanks, that was it!
That was actually something I considered at one point.. A Udemy course in conjunction with Apple's Intro to AD guide. But I read that Udemy courses are just walk-throughs &amp; mainly involve copying code, not leaving much room for learning by applying your own thinking. So I kinda backed out of that. But if Angela Yu's course isn't like one of those dime-a-dozen Udemy courses, I'd very much like to give it a shot. What has your experience been like in that regard? 
I would like to help. I think I may have purchased a book or two of yours. I'm still relatively new to swift but i'll I'd love to help you out. 
That makes a lot of sense.. Thanks for the reply ✌️.
Absolutely.. That's what I feel is the best way to go about it. Just had to be sure. Thanks for the response 🙂
Wow thanks, I'll join! 
question.characters
Isn't it greetings.contains(question)?
The App works with cocoapods. You have to install the third party library’s via the terminal in the project folder an type „pod install“. Off course you have to install cocoapods first on your machine.
I believe you're talking about setting a lazy var.
Xcode 10 can run on High Sierra 10.13.4+
I was able to build it by using the workspace file instead of the project file 
I'm on Sierra right now and what I understand is that the new ARKit requires an upgrade or will require an upgrade once it's released. So going to Sierra now wouldn't help with that. Here's the deal: I run a hackintosh and some of these upgrades are a PITA. I just upgraded late last year and it took me weeks to get things working. I have to go buy some more backup drives before I risk another upgrade and I have too many projects going on right now for that.
If you are only possibly mutating it in the initialiser of the enclosing class, you could use an optional let. Then to access it use the nil-coalescing operator: if isOn ?? false { // true } else { // false or not set } Otherwise I’d be doing the class/struct based approach, possibly using a function to set whether it’s on or not. That way the function can throw an error if the value is already set—results of actions should be either predictable or handleable, if you don’t know wether attempting to flip the switch will succeed, you probably want to handle the case where it fails.
It depends what you want to accomplish. The most Swifty way is to just use a `let` binding on a value type and initialize in the owning object's initializer, but you probably already knew that. If that's not satisfactory, then what you're doing is pretty much the only way. But the idea of ignoring what appears to be a valid write to a variable makes me very uncomfortable. A more clean version of yours might be: ``` struct LockingSwitch { // Why not use a struct instead of a class? private _hasBeenSet = false var isOn: Bool { didSet { if _hasBeenSet { _hasBeenSet = true } else { isOn = oldValue } } } ```
Flip that if greetings.contains(question)
That, `///`, and `//!` are documentation comments
`if greetings.contains(question)`
This is a lot of questions in one... The process is called Database Querying. Have you every built an app before? If you have, I'd be glad to help by relating your past experiences. If not, I suggest you start with something simpler, like a calculator or music player.
Thanks. It worked! :D
Firstly, I thought the opposite but now, I understand! Thanks :D
Right. My fault. Snap Kit (with a space) and not Snapkit ;)
Glad to help ^^
How about trying my Udemy Swift Course for half off ;) [https://www.udemy.com/ios-11-swift-4-zero-to-app-store-in-6-months-or-less/?couponCode=HALFOFFIOS](https://www.udemy.com/ios-11-swift-4-zero-to-app-store-in-6-months-or-less/?couponCode=HALFOFFIOS)
On my way :)
Awesome! You're probably on by now, but hope you find it fun, educational, and engaging!
Definitely need some example code, more information, the types involved, and so on. Please don't post pictures, post the code as text.
*var steve : String = myTextField.text* Forgive me if I'm wrong. I'm still a learner.
Is there a quick guide for first time contribute to open source? I would love to contribute. So far I have cloned the repository to my computer and loaded the app on my phone. Keeping it simple, let's say I found a spelling mistake in a label. How do I get get this code back into your project? Do I need to create a new branch, then submit a pull request? Do I fork the project first?
That's unfortunately wrong for what he's trying to achieve. Remember that the `=` works right to left. This would create a variable `steve` and initialize it to the current text value of `myTextField`.
Thank you for explaining. Wish I could give you some gold but I'm broke right now.
Don't even mention it, glad I could help. I love helping new coders when I can, just like other people helped me when I was just starting out. Good luck on your coding journey!
Can you post the whole function? I think the beginning is missing
This looks like an error from the swift compiler itself. “Serialization” refers to reading declarations from a generated .swiftmodule file. Next time you see it, I would file a radar and attach the full build log.
You might have to update ruby on your machine
Are you able to access https://rubygems.org from your web browser? Some country seems to block rubygems website
Seems like the playground is using a module from the Poker xcode project, have you tried moving the playground to the project and open from there?
I am. I live in the United States so it most likely isn't blocked.
Hmm, could it be the ruby version on your machine? Try updating it : https://stackoverflow.com/questions/19150017/ssl-error-when-installing-rubygems-unable-to-pull-data-from-https-rubygems-o
How would I be able to update Ruby?
Can you see updates of command line tools in App Store.app? If so, please try to update them. Another option is to install [Homebrew](https://brew.sh) and then install the latest version of ruby `brew install ruby`.
Make sure ruby and rvm if your using it is up to date Try installing or updating the OpenSSL gem Update all your gems 
I think so too, if it was an error in the code itself, it won't build despite changing the simulator. 
You want people to set it just to on? Or to off should stay stuck as well? ```var isOn: Bool = false { // default to off? didSet { if value == false || isOn { return } isOn = true } }
it's generally a bad idea to replace the macOS system ruby wholesale. use rvm or rbenv instead
So basically you need to get the subviews for the segmented control and set the tint colors for those individually var subViewOfSegment: UIView = mySegmentedControl.subviews[0] as UIView subViewOfSegment.tintColor = UIColor.blueColor()
Are you asking us or telling us? /r/titlegore
Regardless of implementation, I would use an optional bool, with `nil` meaning it wasn’t set yet. That would reduce any extra vars tracking set or not. Though, if you can set it *during* initialization, use a `let`.
"In this particular case, there are multiple reasons a nil might be returned" What other reasons are there, besides an out of bound index?
No problem, a segmented control with two choices has two sub views, one for each choice. You want to take the subview and apply your tint color to the subview instead of the segment control as a whole. In your apply theme function do something like this: Let subview1: UIView = segmentedcontrol[0] as! UIView Subview1.tintColor = uiColor.blue() Let subview2: UIView = segmentedcontrol[0] as! UIView Subview2.tintColor = uiColor.red()
"Standard Markdown" was the original name of CommonMark, so you'll probably have more chance if you look for "swift commonmark".
Will look it up. Thanks. 
That does help a lot. Thanks.
If you open the project, it's missing Poker.framework under Products, but the code seems to be there under Poker. The thing is, I can't import it because I don't know how to setup a custom module in playgrounds. That's really the question, I haven't used playgrounds much so I have no idea how to import a module. I moved the playground to the same dir and it still doesn't see it. I can't tell if it's missing something that it needs, I just assumed all the code was there.
Hi Luk4s0842! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/968oer/my_new_game_is_now_available_on_the_app_store/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
https://github.com/iwasrobbed/Down
I create this repo to prepare for upcoming job interviews. I will update it daily in the next couple weeks. 
That makes sense. I also am running one. Haven’t had to go through a major update yet though. 
Huh?
🤡
It was, don’t worry - haters gonna hate.
Swift Two Sum: extension Array where Element: Numeric { func twoSum(_ target: Element) -&gt; (Array.Index, Array.Index) { guard count &gt; 1 else { return (self.endIndex, self.endIndex) } for i in startIndex..&lt;index(before: endIndex) { for j in index(after: i)..&lt;endIndex { if self[i] + self[j] == target { return (i, j) } } } return (self.endIndex, self.endIndex) } }
👍👍👍 I'm following Google's Swift Style Guide here. [https://google.github.io/swift/](https://google.github.io/swift/) And I'll try to add some useful comments from now on. 
Quick solution: \`AVPlayer\` has a property \`allowsExternalPlayback\` whose default is \`true\`. By setting to \`false\` external video playback is disabled. From docs: "External playback" is a mode where video data is sent to an external device for full screen playback at its original fidelity. AirPlay Video playback is considered as an "external playback" mode.
No
No
Looking it over, there's an issue with using a `Dictionary` like that. Suppose you have an array like: [1, 2, 2] If you create a `Dictionary` where the keys are those values you'll have a clash at `2`. The requirements state: &gt; You may assume that each input would have exactly one solution, and you may not use the same element twice. Which doesn't preclude duplicate values in the input.
Do you have an MP3 file that you know works on Apple TV? If so, try that through your app. Try using your MP3 file that is causing problems through a standard service and see if it works. GL.
I don't actually have an iPod to test with and XCode doesn't provide iPod simulators, so I can't speak much to the iPod handling. However, everything should work perfectly on the iPod (as long as it's iOS 10.0+) since the keyboard was built from scratch.
Buuuut I said iPad, not iPod. Xcode does have iPad sims. Anyway, I'm off in Africa at the moment with an old iPad that won't run the new Swift, but I'll try it out on an iPad sim and get back to you.
Ah, yeah the built-in iPad numeric keyboard is atrocious for purely numeric tasks.. In this library. the keyboard is custom-built, and I've tested it on an iPad and can guarantee that it's working. No more headaches there! 
Reread your first comment
Yes, you are right! I just updated my solution. func twoSum(_ nums: [Int], _ target: Int) -&gt; [Int] { var dict: [Int: Int] = [:] for (idx, num) in nums.enumerated() { let complement = target - num if let complementIdx = dict[complement] { return [idx, complementIdx] } dict[num] = idx } // each input would have exactly one solution fatalError() } The Dictionary should be generated on the go. So that the elements with the same value would not be ignored. Thank you very much!
[Pods Installation Result Here](https://drive.google.com/file/d/14Aq6lhF8V569axoB_RkrR9yh9DMgkbuV/view?usp=sharing) This has the contents of the Pods installed; you'll need everything under "ClingConstraints", "PrettyButtons", and "NumericalTextEntry" to run this library. Both "ClingConstraints" and "PrettyButtons" are smaller, lightweight libraries that I made for my own developing purposes, so you don't have to worry about them clogging up your application.
Hmm, I believe that does cover all the cases since it appears the only way you could have duplicates and yet not violate the rule of "exactly one solution" would be to look for a target that is the sum of two duplicates and have a maximum of two duplicates. Thus: [1, 2, 3, 2] With a target of 4 would have the single solution of `[1,3]` (assuming order doesn't matter, otherwise all answers would be pairs of solutions). The other advantage is it shortcuts the entire algorithm by ending once a solution is found. This is probably the most efficient way to do it, although I'd throw in a call to [`Dictionary.reserveCapacity(_:\)`](https://developer.apple.com/documentation/swift/dictionary/2893237-reservecapacity) to fend off the `Dictionary` resizing as you add elements.
reserveCapacity(_:) is actually of O(n) (For Array https://developer.apple.com/documentation/swift/array/1538966-reservecapacity, not mentioned for Dictionary but should be about the same). So for input like [1, 2, 3, .... 1000] -&gt; 3 it won't be optimal.
Got it. Working around build errors now. ld: warning: directory not found for option '-F/Users/zav/Library/Developer/Xcode/DerivedData/NumericalTextEntry-gpxbzansyrgvxjdtkbfjzqkyketz/Build/Products/Debug-iphonesimulator/ClingConstraints' ld: warning: directory not found for option '-F/Users/zav/Library/Developer/Xcode/DerivedData/NumericalTextEntry-gpxbzansyrgvxjdtkbfjzqkyketz/Build/Products/Debug-iphonesimulator/NumericalTextEntry' ld: warning: directory not found for option '-F/Users/zav/Library/Developer/Xcode/DerivedData/NumericalTextEntry-gpxbzansyrgvxjdtkbfjzqkyketz/Build/Products/Debug-iphonesimulator/PrettyButtons' 
Pretty good list. Just keep in mind that stuff like garbage collection and ARC are how each language manages memory, but completely different approaches. And Java designs can be heavily based around abstract classes which don’t have a swift equivalent. 
Of course it is O(n) for each time it's called. The point is to call it once since you'll never exceed that capacity - you already know the maximum amount of elements in your `Dictionary`. Allowing it to follow a geometric (exponential) growth strategy is good when you don't know what the final size might be, however every time it has to grow the storage it has to do a much larger allocation, plus potential copying and referencing. Since it's geometric that means you'll have this pattern: Size|Total -|- 10|10 100|110 1000|1110 And so on. Now, suppose you only needed 101 elements - at the end you'd be paying for 1110 allocations as opposed to 101 allocations. If you know you'll have a fixed size you can set that size at the start and avoid any new allocations.
*rxswift* *simplicity* **triggered** 
You may want to look into server side languages and frameworks as well. My personal preference these days is NodeJS but there are many to choose from. May also be worth taking a look at React Native or Xamarin if you’re looking to build a cross platform mobile app. Good luck.
Thank you! I definitely will look into these! 
Any advice on how to go about doing this? This is really helpful. Thank you.
Decide how you want people to connect to your social network. Web, app, whatever. Do you want there to be instant messaging or more like a wall of posts? Write down some key features and pick the first few to try to implement. Then try implementing one.
Agreed. Don't jump off a boat to learn to swim. Pool first.
I am a fan of https://github.com/SnapKit/SnapKit
Same here, I saw one tutorial where he was making USD (US Dollars) appear in front of the amount so that you know what it's in. Back in the day, there was no key to exit the keyboard like the alpha had. The Stanford 193 had a "calculator text entry" kinda thing a while back... I don't remember how he did it. I kinda assumed that someone created a good solution before now, but maybe not.
I’ve only taken a intro to c++ and Data Structures&amp;Algorithms course. I’m very much interested in learning more. 
No. BTW - developers do look at the keyboard. 
Get another keyboard? Or are you talking about a macbook?
Yeah, specifically the macbook. Amazing piece of engineering with a terrible, terrible keyboard.
Are you open to desktops? Your almost always going to get better performance out of an iMac than what you would with with a Macbook Pro. 
I'm a desktop developer all the way. I work on several large projects where compile times can be slow. A MacBook Pro can't even come close to my iMac with a 4.2Ghz quad core processor and 32GB of RAM :-)
Talking about a Mac Pro, not a macbook pro. It has a hexacore 3.5Ghz processor and 16GB RAM. Reason why I took it over the other options, it just sucks that the 'latest and greatest' mac pro does not have hardware video decoding, even though the device has \_2\_ GPUs...
Currently, I have a maxed out Windows Desktop.. It does everything at light speed. Hell that Fat titan XP even ran a little neural networking stuff pretty quickly. I'm searching for a laptop for general use. I've noticed I do my best work in particular environments, and home is not one of them. I also work a TON at a job with a 6 of my 10 hour shift being down time. A laptop would be awesome to have. Its also my introduction to swift 'n IOS dev, so I'm not fully onboard for that reason. I'm just trying to make sure there isn't a huge problem with 8GB where someone is being bogged down by not enough memory. Like my desktop at home I have 10+ windows of whatever I want and an intense video game running in the background, and it doesn't break a sweat. For dev I want to be able to have open Xcode, safari, chrome, terminal, and maybe 2 smaller programs and not be TOO slow. I'm thinking memory over the better CPU tbh. 
reactive programming has one of the (if not the) steepest learning curves of anything in iOS. 
Sounds like you would do well with a Hackintosh. I've been using one for some 9 years now and once it's setup, it works like a champ. The upside is that it's just a high end Windows PC, converted to a Hackintosh and with the money I saved, I can buy SSDs and more ram, better video card, overclock, extra monitor, etc...
I'm not in that market yet, but I wouldn't mind a high end laptop: [https://bytesout.com/best-hackintosh-laptop/](https://bytesout.com/best-hackintosh-laptop/)
No. I don't. Also, it's can't, not cant. A cant is a religious sermon while can't = can not. Upgrade the RAM.
While OS X tends to be more efficient than Windows at memory management, you’ll almost always notice the impact of memory before CPU. Also, don’t forget that with the newer MacBooks and MacBook Pro’s, nothing is upgradable once you’ve bought it, since everything is soldered directly onto the logic board. I spent about a month trying to decide on the specs for mine, and finally decided that RAM &gt; Storage &gt; CPU. I’m using it for DevOps (mainly python based right now, so using PyCharm with it’s Java memory requirements), the occasional VM with 4-8G memory, and I’m also learning Swift for OS X and iOS. I settled on the 2017 MacBook Pro with 16G RAM, 512G SSD, and whatever the base CPU was at the time. Last night I had a 8G Windows 10 VM running, a 4G OS X VM upgrading to the latest Mojave beta, Xcode, an iPhone simulator, a udemy video running, and about 15 Safari tabs open and I not only did I not feel any slowdowns, but the fan didn’t even start. I used to use a Dell Inspiron 2-in-1 with virtually identical specifications on Windows 10 and the fan would be running just idling at the desktop, it would never have handled that kind of load. I’d say you’re on the right track - definitely prioritise memory, but if you’re happy to carry external storage with you, feel free to prioritise CPU over storage, though obviously it’ll tend to run a bit hotter. I wasn’t willing to, but I was willing to sacrifice CPU for the 512G SSD... One last thing - Apple laptops do not have discrete graphics, so you’ll be relying on the integrated graphics in the CPU, so any gaming you do will be over to the casual end of the spectrum.
I agree this may be a *very* good option, though for a person keen in hardware and who wants to have control and freedom over it. IMO, for most people out-of-the-box solutions work the best.
RemindMe! 2 days
I will be messaging you on [**2018-08-13 11:39:51 UTC**](http://www.wolframalpha.com/input/?i=2018-08-13 11:39:51 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/96d8yd/extension_vs_conditionally_conforming_to_a/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/96d8yd/extension_vs_conditionally_conforming_to_a/]%0A%0ARemindMe! 2 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
&gt; Most of it will be lightweight IOS dev/swift dev... 8GB of RAM will be plenty. &gt; ...along with web dev. You need 32GB of RAM and a half terabyte SSD for your node_modules.
So, take the following code: protocol FieldProtocol { var field: String { get set } } protocol Saveable { func save() } extension Saveable where Self: FieldProtocol { func save() { // Do complicated saving things here print("Successfully saved \(field)!") } } class MyObject: FieldProtocol, Saveable { var field: String let someOtherVariable: String init(string1: String, string2: String) { self.field = string1 self.someOtherVariable = string2 } func doInterestingThing() { field = field.uppercased() save() } } We define a class,`MyObject` that conforms to `FieldProtocol` and so defines a `field` property. Note that `MyObect` also conforms to `Saveable`. Now, we place an extension on `Saveable` and add the constraint `where Self: FieldProtocol`. No we can access the `field` property of `FieldProtocol` inside the extension! This is super cool because now `MyObject` can get saving behavior for free as long as it simply conforms to the necessary protocols. Imagining `field` were a more complex object and `save()` were a more complex function, you can see how conditional conformance and extensions can save a lot of code. `MyObject` can of course define its own implementation of `save()` outside of the default implementation as defined in the extension on `Saveable`. Does any of this help at all? :-) 
Maybe try something like this? https://stackoverflow.com/questions/41026514/swift-viewcontroller-ignores-status-bar-style You could also try subclassing UINavigationController and override childForStatusBarStyle https://developer.apple.com/documentation/uikit/uiviewcontroller/1621433-childforstatusbarstyle
Ahh ok gotcha. Yes that is correct. 
That actually works. Thank you very much. I was going through Stack over flow but couldn't find anything. So thank you again! 
Don't regret shit, moron. You landed me my first job and now I have a house 🙏🤠
You are absolutely RIGHT! I find that #19 always gives me COMPILER ERROR. I plan to report these problems to LeetCode and let them fix it. My "first" language is C++ and I know python. But I really fell in love with the elegancy of Swift.
I had the same issue a few weeks ago and used the same solution as /u/door_to_nothingness pointed out. In our case we had many stacks of view controllers and navigation controllers. I don't know why there isn't an easier way to change this, or at least set a flag for the status bar to change automatically based on what's underneath it. Apple do it with a bunch of their other overlays.
They don't have discrete graphics internally but you can easily add them externally: [Use an external graphics processor with your Mac](https://support.apple.com/en-us/HT208544)
You may be limited to laptop only, so disregard this if that's the case. I'm not saying a Mac Mini is a good option for everyone, but *if* it is an option for you, you might consider waiting 2-3 months or so to see what the update looks like. Who knows, could be decent for the money. 
Yeah man, I’m typing from mobile, and let my phone do most of the contractions as I’m on reddit. If I were emailing a colleague, or turning in a Uni paper...I’d probably proof read at least a little! I think you can tell that I know contractions at least a tiny bit by using the correct “you’re.” The fatal one. Anyways! I went with the extra ram!! Thanks 
Intermediate programmers always say that singletons suck but beginners and experts know if the top level VC will always be an NC just make it a singleton on itself once it loads for the first time (or during init): viewDidLoad() { super.viewDidLoad() instance = self } BaseBavigationController.instance.changeTheStatusBar(to: .something)
If you had a subscript operator like `subsript(safelyIndex: Int) -&gt; T?`, and it was on a collection of say, `Int?`, then the `T` becomes `Int?`, meaning the subscript operator returns `Int??`. Optionals can be nested like this, with very clear semantics: switch optionalInts[safelyIndex: i] { case .some(let i): print("found Int: \(i)") case .some(.none): print("found nil") case .none: print("index out of bounds") } This is exactly what happens in other cases, such as getting the `first`, `last`, `max`, `min`, etc. of a collection of optionals. Nested optionals.
Playgrounds suck. Sorry. You have a typo, it's `\` for `()` when doing string interpolation. So: switch success { case let .result(sunrise, sunset): print("Sunrise is at \(sunrise) and sunset is at \(sunset).") case let .failure(message): print("Failure... \(message)") } To answer your q's: 1. I'm not following why it would return 0. You really oughta run the code and see it. The above outputs: "Sunrise is at 6:00 am and sunset is at 8:09 pm." 2. Your enum `ServerResponse.success` takes a tuple of two strings. The switch statement gets those two strings in order. `let success = ServerResponse.result("6:00 am", "8:09 pm") ` sets them. And the switch syntax `case let .result(sunrise, sunset): ` gives you access to their values.
There’s a good chance you may be able to hackintosh your PC. It’s something I’ve done for years with great success. 
Yeah I’ll stick to my windows desktop for gaming. That’s exactly how I ended up prioritizing. I did get one of the external hard drives offered by Apple as well. Thanks for the input man! Really appreciate it
Hmm I don’t know about that. It’s usually better on intel. It has been done on AMD but I can’t promise anything. 
Yeah that’s what I read when I was looking into them. I’ll probably come back around to them this December when I’m looking to build a small form factor pc
(Note: I’m on my phone so I don’t promise my syntax will be 100% complete just going off of memory) That enum is using associated values so it isn’t like the classic c enum where it represents a raw value like an Int but instead represents a tuple with a typing In this case .result will return an instance of ServerResponse.result(String, String) The switch statement is switching on the typing of the object you passed into it as well as copying local values of the tuples arguments It could also be represented like this If let result = success as? ServerResponse.result, let sunrise= result.0, let sunset = result.1 { //... the rest } else if let fail = success as? ServerResponse.failure, let message = fail.0 { //... the rest } else {} // since it’s an exhaustive enum this else case isn’t needed switch statement lacks a default case // etc 
Reddit's version of markdown doesn't support using three tick marks for a code block, instead you should preface each line of code with four spaces.
In Facebook for developers you can setup test accounts that behave like real accounts. They have feeds and friends and what not. So if your uncomfortable with using your own u can use that. But even then I dont see why u cant use ur own personal account. If someone can hack the FB SDK then they prolly wont be abusing the FB SDK. They got bigger fish to fry.
Speaking of playground, you seem to have a lot of answers... can you take a look at this when you get some free time? I haven't done much with playgrounds and have no clue how to import a module. [https://www.reddit.com/r/swift/comments/95tmzk/help\_playgrounds\_no\_such\_module/](https://www.reddit.com/r/swift/comments/95tmzk/help_playgrounds_no_such_module/)
It’s not necessarily a tuple, it’s associated values that are stored with the `enum` case. It’s no more a tuple than are the arguments to a function. 
That code is very out of date and needs to be updated through several major versions of Swift. Then follow these directions: https://useyourloaf.com/blog/adding-playgrounds-to-xcode-projects/ I believe the project already is set up like this.
It's surprisingly easy to use \`libpq\` directly from Swift. [https://github.com/solidsnack/CLibPQ](https://github.com/solidsnack/CLibPQ)
You can also use iCloud, which will provide you with an account ID without any user interaction. This only works, of course, if the user is signed into iCloud–but most are.
Try setting *extendedLayoutIncludesOpaqueBars* to *true* in your view controller.
Sorry for saying that but then no privacy-minded person will ever use your app if Facebook or google account are required. Just because something is easy, it don’t has to be the best solution. 
[https://stackoverflow.com/questions/48039046/ios-11-large-title-navigation-bar-snaps-instead-of-smooth-transition](https://stackoverflow.com/questions/48039046/ios-11-large-title-navigation-bar-snaps-instead-of-smooth-transition) I came upon this post, I tried both answers and one of them is same as yours, but still doesn't fix it. I will try to change my view controller to a collection view controller to see if there is any difference. 
Thank you for the detailed reply! I understand the container use such as the classroom and store inventory examples. However it's more the coordinate example and multidimensional examples that my mind is struggling with. Over the last few days, I feel like i'm getting there with it, and it may just be the way that the Apple iPad Swift Playgrounds app has been positioning it, along with introducing creating random integers and random booleans too. I think I just need to practice and repeat to ensure it sinks in. Thanks again for the really detailed reply, its nice to know there's a community here if I ever get stuck! 
Thanks for the reply! Great to hear that there's someone else out there who started with Swift Playgrounds. Yes, I know how easy it is to want to try and teach YouTube for the answers to some of the puzzles, however I've done my best to try and refrain from doing that. What I sometimes do, once I've completed a puzzle, is check YouTube to see how else I COULD have completed the puzzle, as one thing i've been finding out since playing with Swift Playgrounds, is that there's not always one answer to a problem, there's always multiple, it's just finding the best route. It's always a good feeling when you check YouTube and you find that the way that you did it was just as logical as the way that other people had done it. I think with arrays, i've found it difficult as everything else up until now, although sometimes took some time, I always got the logic, but with the more complicate coordinate arrays, it has been harder to get my head around them! I'll keep persevering though! So what have you decided to focus on next now that you've posted this thread? I'll be in the same place in around a month I reckon, so it would be great to know! 
This might help you: https://github.com/codepath/ios_guides/wiki/Creating-a-Custom-Tab-Bar
I just wish I did closer to half of that paper you stalking piece of shit.
Its funny that I was exactly where you're right now. I'm still working on that app for over a year (since I work on my own, no previous developer experience, had to learn on my own, now I'm dealing with Databases queries, storages, iOS and design). If you really decide to start working on this, start small and build your way up. It could get extremely complex. You'd probably need to know some Obj-c (if we talk about iOS only). If you don't know anything (no previous developer experience), get your hands dirty with courses and understand how things work. Speaking from personal experience - it's hard when you dont know how to swim and jump in the middle of the ocean.
Quick question, what keeps you motivated? Doing this alone sounds daunting. I’m actually thinking of grabbing a couple of CS majors from my school to help me implement this project. 
If the button is meant to be inside the collectionview cell, set the tag when configuring the cell after dequeing it. ie: let cell = collectionView.dequeueReu.......// cell.image = ... // cell.title = ...// cell.button.tag = buttonsArray[indexPath.item] return cell
I have tried it, but it's not working
Thank you so much :D
I appreciate that! Thanks :)
You'd be better off with partners, I can asure you. It's a lonely and very frustrating journy, but you have to learn to love it. It's a process, it's not always easy, but you shouldn't stop when you reach a point of *"I how no idea how to solve this problem"*. You need to be persistent. **And do what you said you would when the mood you said that in is long gone.** As to what keeps me motivated ... I'd say the idea behind my app, it's not about the money or if it gets popular, my app would connect people with similar interests (not a dating app) and if just 1 user writes me back saying they found their best friend or girlfriend/boyfriend, or understanding, acceptance, or made them less lonely, it would mean the world to me. It's that thing that pushes me keep going despite ALL the difficulties. It's making life better for at least one person... it's very rewarding. You just need to find your own "WHY". I'm just someone who craves to bring back humanity... it just touches my soul (as weird/cheesy as that might sound) when I'm the reason behind someone's happiness or just joy in their life (including complete strangers). That's my motivation really. Nothing extraordinary, not your "I wanna work for myself, earn a lot of $$$, etc", no, not really. I mean we do live in a material society, so some income is a must to live a normal live, but aside from that, im not in for the material stuff. They don't matter nor bring happiness anyway. Sorry for the long blabber. I hope this anwers your question
This. This was so. Wholesome. Wow. 
I really wish you luck, hopefully you do achieve your dream. Thank you. 
The button itself should only be part of your cell and not overridden from outside like you did here. In your cellForItem method you can pass a block that you want to see executed when the user presses the button. In your cell itself you then just wire up the action of the button to execute this block. 
Thank you! Good luck to you as well! :)) 
Indices*
I don't know why it's not working, I would guess it's because you need to call layoutIfNeeded or something, but I can give you more simple elegant solution. -create protocol outside of class (if you don't know what protocol is, I would suggest to look it up) protocol MainDashBoardCollectionViewCellDelegate{ func buttonTapped(index: Int) } -create var index = 0 in your cell, where it will be remembering at what index the cell is -create var delegate: MainDashBoardCollectionViewCellDelegate? in your cell now in your cell's function pressedAction call delegate?.buttonTapped(index: index) now you need your CollectionViewController to conform to this protocol so do this (outside your class) extension CollectionViewController: MainDashBoardCollectionViewCellDelegate{ func buttonTapped(index: Int){ //do what you want to do at this index print("button tapped at index \(index)") } } -next assign in collectionView(cellForItem...) cell.index = indexPath.row cell.delegate = self (!!! this is very important) and that should be it, I would also recommend put view controller and cell into separate cells and use more extensions to make the code look better. And importing things such as import UIKit should always be at the top
Just like you would use any other `UIControlEvent`, you add a target to your object for any event e.g. ```swift neatColorPicker.addTarget(self, action: #selector(editingDidEnd), for: .editingDidEnd) ```
Thank you for your honest opinion. I’ll look into Allowing users to create an account without fb/google 
Thank you! Good point :) 
Interesting!! I never thought u could do that. Thanks!! 
Have you tried HDMI out the display to a screen?
I thought about it but I do not have the HDMI adapter, so for the moment I prefer to find a free solution if there is any 
Try screencast using air play? Or something similar to [this](https://www.airserver.com/) 
Thank you so much, I haven’t worked with UIControlEvent too much so thank you again!
Yes I will use this, thanks !
I do this and connect a wireless keyboard to the iPad. This provides a much better experience!
I do this and connect a wireless keyboard to the iPad. This provides a much better experience! 
Thank’s for pointing that out, it’s been fixed 
If you really need power build a Hackintosh. It's sad but Apple has pretty shitty offerings for people who need high performance. Having said that: My 2013 MBP still does the job and I have a large C++ code base to maintain.
Can you clarify what you’re asking. I don’t think I understand. 
I believe they mean mousing over something within the simulator, and the code block or object property being highlighted in the editor. 
In your cell's button setter, you must remove the old value of button from its superview, and self.contentView.addSubview(button) as it stands now, this isn't happening.
If this is the intention then that is possible by using the side-by-side feature, having the storyboard on one side and the code on the other. By hovering over the circles in the code gutter you can see which element the code is referring to. Think you can also click/hover over the element in the storyboard to do the reverse 
I can't remember where I watched it from. It was from a YouTube tutorial. I thought you guys would know, but apparently this is a pretty obscure feature, I guess.
do you mean this? https://medium.com/@dmytro.anokhin/overview-of-developer-tools-for-ui-debugging-122e4995f972
Wait so just to get an understanding of what you‘re trying to achieve: You create your second VC and presumably you transition to that. Which one is your parent VC and which one is the one you transition to? I don‘t really see why you would use a delegate/datasource at the moment, as far as I understand your code and what you want to do I‘d rather co figure my child VC through its constructor ir a designated configuration method, also to not link two VC and create an unnecessary dependency between them.
Okay, so what I wrote in the post is pretty oversimplified. Lemme give u a thorough overview of what I'm trying to do. 1. I made a TableVC that has a list of school subjects. Has sections. I don't wanna add anything new to it, so I just made it so that each row has a label that shows a string from a two-dimensional array, divided by category and specific course. 2. I added that TableVC as a child controller of another VC because I needed to add a fake navigation controller. 3. Now, I have a VC that has a disclosure button next to an empty label by default. When I tap the disclosure button, it will present that TableVC. 4. If I select a row from that TableVC, it should ideally dismiss and the previously empty label shows the string of that TextLabel from that row. 5. I don't know how to achieve this with delegate and protocol.
When you say "However, I cant manage to save these data into an array as it gets deleted after closure", you mean that the array is empty when you execute \`self.tableView.reloadData()\`?
Array is empty when it gets out of closure
This is where the issue is, you are assigned the delegate to the wrong memory address. `SubjectsTableViewController().selectionDelegate = self` Instead when you segue to the new controller use prepareforsegue to set your delegate from the parent (You have the correct memory address at this point) . [https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue) If you want to send the data back make sure to use an unwindsegue: [https://developer.apple.com/documentation/uikit/uiviewcontroller/1621473-unwind](https://developer.apple.com/documentation/uikit/uiviewcontroller/1621473-unwind)
Sounds like you’re talking about the debug view hierarchy in Xcode. It works with both devices and the simulator. 
&gt;https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue Sorry, how would I achieve this procedure programmatically? I did not use the storyboard at all.
At this point I think it is hard to tell how to actually do this since I don't exactly know where you're coming from. Would you be able to post the two VCs on gist or pastebin? We'd probably be able to help a lot quicker then.
Always think of closures as “outside” and “inside”, there is no “after” a closure in code. Everything outside the closure runs first, then code inside the closure may run. I’m on mobile, so I only had a short look, but it looks like you’re not calling tableview.reloadData() inside the closure. You’re also doing something with a new user in parallel with calling the data. 
This line makes no sense: &gt; SubjectsTableViewController().selectionDelegate = self You’re creating a new SubjectsTableViewController instance, assigning a property on that new instance, then throwing it away. The SubjectsTableViewController instance will be deallocated as soon as this line finishes executing. 
Judging by code you posted, you’re setting delegate to new instance of your table view controller to instead of your table view controller. `SubjectsTableViewController().delegate = self` creates new table view controller, sets its delegate and immediately destroys tnie view controller, as it isn’t assigned to any variable.
&gt; SubjectsTableViewController().selectionDelegate = self You're creating a new view controller and setting THAT controller's delegate. You're not actually setting your real view controller's delegate. 
My favorite way is to open the debugger window on the left and then click on threads. Once you've done that, you can select the hierarchy by right clicking and you will see the entire app in 3D. You can rotate the view and see each layer as well as see the instance variables of objects etc 
 var sum = 0 for i in 0 ... arr.count() { sum += arr[i][i] sum -= arr[i][arr.count()-1-i] } return sum &gt; 0 ? sum : -sum Try smth like this for the func (not tested just as a little tip)
Well, I got less errors now, but I still receive these errors; - compiler.swift:10:37: error: cannot convert value of type 'Int' to expected element type 'Array' let test = diagonalDifference(arr: [1, 2, 3, 4, 5, 6, 7, 8, 9]) ^ [] compiler.swift:3:21: error: cannot invoke 'count' with no arguments for i in 0 ... arr.count() { ^
Thank you for your reply, how would I go about achieving the blip in the middle of the tabbed bar?
Thanks for your reply mate. Will have a look.
“Keep in mind this code will have a lot of false positives (protocols, functions, and system delegates) and false negatives”
This might be useful if this is solely your own codebase but if it's something you're sharing with someone else, I could see it causing a lot of problems. Like commenting out code they were planning to finish or worse yet, deleting something they we're counting on still being there when they got back to it. So if it's all your own code, go for it. But if you're working as a team. Maybe communicating with the team ahead of time that you're looking for unused code is the best approach. 
Got it. Here: SubjectsTableVC: [https://pastebin.com/brXmkjB4](https://pastebin.com/brXmkjB4) SubjectsVC: [https://pastebin.com/rHJjXp6p](https://pastebin.com/rHJjXp6p) Protocol: [https://pastebin.com/ZHMH2yhV](https://pastebin.com/ZHMH2yhV) RequestMainVC: [https://pastebin.com/ZV52bmmS](https://pastebin.com/ZV52bmmS)
No
[[Int]] is an array of arrays of Ints. It's a two-dimensional array. You can access it like this arr[row][column]. `let primaryDiagonal = arr[0][0] + arr[1][1] + arr[2][2]` 
Agreed! This is best used in a collaborative manner and after your team finishes a sprint. 
A lot of people struggle with multidimensional arrays when they first get started (myself included). A good way to think of it is an array of arrays because thats literally what it is. So if we go back to the tic tac toe example, we would have an array size 3 which maps to the y values (i.e. the top row is at index 0) and that array holds 3 arrays of 3 numbers that maps to the x values (i.e. the left row is index 0). So, to get the value of the centre, you would access the item at index 1 of the first array, which happens to be another array, and then access the item at index 1 of the array you just accessed, which would give you the value of the centre.
I’m not super sure what you’re asking but I don’t think there is an API to directly interface with smart devices that work with Alexa. If you need some pointers on where to continue research, look into Amazon Web Services (AWS) and specifically the AWS iOS SDK. You might want to look directly at the smart devices documentation to see if there is an API you can use to interface directly with that device.
Won’t the compiler do this for you? Seems kind of useless, unless its just for cleaning up your source (which is probably best done manually anyway)
Nope and I hope there never is one. There really is no need for certificates in programming languages, a certificate is more about understanding a certain field such as networking or security. The programming language shouldn't matter at all.
Thanks! Looks like I have to do some more reading. I should be able to work it out on my own now. Thank again! 
Why, would you want to Apple to become Microsoft or worse, Oracle.
Why you dont use AVFoundation? It's built-in, no need use 3rd-party lib Follow this tutorial: [https://www.hackingwithswift.com/example-code/media/how-to-scan-a-qr-code](https://www.hackingwithswift.com/example-code/media/how-to-scan-a-qr-code)
In a large codebase the incentive is even higher to delete stuff that slow down compile times unnecessarily though. 
Need to know what the manager initializer looks like 
Why are variable names blacked out in this article? Also, process seems worthless...
Right, this is a great option. Here's the types of codes it can handle: [Machine Readable Object Types](https://developer.apple.com/documentation/avfoundation/avmetadatamachinereadablecodeobject/machine_readable_object_types) It's a decently-comprehensive list.
For anyone wondering(or googling later on), how I managed to solve it. Here’s my, not so elegant, but fully working solution: ( Thanks again for the tip /u/[ `func diagonalDifference(arr: [[Int]]) -&gt; Int { let primaryDiagonal = arr[0][0] + arr[1][1] + arr[2][2] print(primaryDiagonal) let secondaryDiagonal = arr[0][2] + arr[1][1] + arr[2][0] print(secondaryDiagonal) let difference = primaryDiagonal - secondaryDiagonal print(«The difference is \(difference)») return difference } let testingSomething = diagonalDifference(arr: [[11, 2, 4], [4, 5, 6], [10, 8, -12]]) `
Hello All i actually have updated this a bit and made a Cocoa-pods and a new gihub the links are down below thanks. [https://cocoapods.org/pods/rxObservableCollectionWithObservableElement](https://cocoapods.org/pods/rxObservableCollectionWithObservableElement) [https://github.com/izzy5455/rxObservableCollectionWithObservableElement](https://github.com/izzy5455/rxObservableCollectionWithObservableElement)
Why did they make this "opt-in"? That's a guatenteed way to make sure that the third party library's enums you most need to iterate, won't be iterable. Guatenteed. Why isn't it just the default for all enums without associated values?
try `.pointee`
that just returns an UnsafeMutablePointer&lt;Float&gt;
Are you ever going to stop posting this?
There is no length or count for `UnsafePointer` or `UnsafeMutablePointer`. They point to a location in memory which may or may not hold zero or more instances of the contained type. In fact, the only reason it has a type is for pointer arithmetic and alignment and such, you can easily use any type for any memory.
Actually my code is a bit more complex than this but at it's foundation it's really not so different. Forgetting about VC hierarchy and navigation makes everything so much simpler.
This is tagged as beta / Xcode10.0+ in the Apple’s documentation. If you’re on Xcode9 you can’t use it as it’s not implemented on your SDK version.
I noticed Apple changed the callback’s behaviour when introduced Swift 4. Before of Swift 4 it worked like you said
 let str = "Greetings, friend! How are you?" let splitArray = str.split(separator: " ") let firstSpace = splitArray[0].count + 1 //11 
As an array of characters, a string has many of the same functions as any other array. A big difference is it’s based off String.index rather than an integer index though.
In what context are you trying to do this? One of the design decisions of Swift was that assignments should not be expression—that is, any assignment does not itself return a value, so there is in fact no way to get the `-=` on the same line as the `if`. Could you give a little background about how you’re trying to use this? There are a couple alternative in Swift that vary depending on your specific use case.
1) 16gb ram minimum, bc you are a dev you will have xcode and and bunch of sites up, reading and videos to learn from, there is a price to having a bunch of tabs going.. and the simulator. 2) 2015 and up is very good and safe. Apple is bad at depricating old macbooks ie osx 10.12 need macbook pro 2010 and up, osx 10.14 need 2012 and up etc. Try to just look of the ones with no dedicated gpu bc they are cheaper, good luck.
Got it working, thanks! I now know a lot more about playground :D
Here's the actual function from some older code. It's part of a poker routine the detects a straight (5 cards in sequence). I'm using it as a framework to learn some gaming. You can see inside of the for loop, you have and if then another if... All I did was comment out the line using -- and replace it with the two lines below it. I guess the code is about 3 years old now and I didn't write it, I was just looking for a poker routine to learn from. func detectStraight(_ numbers: [Number]) -&gt; (Bool, [Number]){ // Beware of the ace. It can be used in A2345 and 10JQKA let sortedNumbers = numbers.flatMap { $0.straightValues }.sorted() var allowedErrors = sortedNumbers.count - numbers.count guard sortedNumbers.count &lt;= numbers.count + 1 else { return (false, [])} var lastNumber = sortedNumbers[0] var straightNumber = sortedNumbers[0] for i in 1..&lt;sortedNumbers.count { if sortedNumbers[i]-lastNumber != 1 { //if allowedErrors-- &lt;= 0 { . // OLD CODE allowedErrors -= 1 if allowedErrors &lt;= 0 { return (false, []) } } else { straightNumber = sortedNumbers[i] } lastNumber = sortedNumbers[i] } return (true, [Number(rawValue: straightNumber)!]) }
Download Xcode from the store. 
Check out his video series called "Swift in 60 Seconds". Then do "Hacking with Swift". They're both free and take you from beginner to intermediate level by using example projects. Pro Swift has lots of video content and takes you through more advanced Swift methods. He also has a video series which you can buy too. The guy has a great manner when he talks and explains things extremely well. The examples are meaningful and well thought out. He deserves your money. 
value-- basically means: "read the value, afterwards subtract" so if you do "value-- &lt;= 0" it compares "value &lt;= 0" and then subtracts 1 from value afterwards. So the correct code would be: if allowedErrors &lt;= 0 { } allowedErrors -= 1
Could you do &amp;nbsp; if mynumber -= 1 &lt;= 0 { .... Honestly I’m not sure if that would work or not and I’m not near Xcode to truly test it. 
&gt; if mynumber -= 1 &lt;= 0 { Error: Cannot convert value of type 'Bool' to expected argument type 'Int'
Does that still work with Swift? I thought swift strings were WAY more complex than that because of all the different character sets. I thought the old standard of assuming an array of chars was over.
What about wrapping it in (..) If (mynumber -= 1) &lt;= 0 { .... 
They re-simplified it. I assume by dint of great effort and complexity behind the scenes.
Thank you for your comment. I'm very new to Swift, and am not sure how I would go about using the code in my Xcode project...Is there a part of the code that does the image processing that I could simply copy and paste? I'm sorry for the trouble. Appreciate your help.
Binary operator '&lt;=' cannot be applied to operands of type '()' and 'Int'
It's implemented, it's simply called `index(of:)` before Swift 4.2. They're adding `lastIndex(of:)`, so `index(of:)` was renamed to `firstIndex(of:)`.
&gt;Like commenting out code they were planning to finish or worse yet, deleting something they we're counting on still being there when they got back to it. This code should arguably not have made it to the main branch if it's unfinished.
That looks interesting, I did the Udemy course last year, covered MVVM. I don't know if your's would cover much more. Can you tell me if you cover more than this one does? [https://www.udemy.com/mastering-mvvm-for-ios/learn/v4/overview](https://www.udemy.com/mastering-mvvm-for-ios/learn/v4/overview) I'll go thru you link and see what's there. I've had [Lynda.com](https://Lynda.com) courses years ago and they were great quality.
 public enum Number: Int { case Ace = 1 case Two case Three case Four case Five case Six case Seven case Eight case Nine case Ten case Jack case Queen case King } extension Number: Sequence, IteratorProtocol { public func next() -&gt; Number? { return Number(rawValue: self.rawValue + 1) } } extension Number: Comparable { public static func &lt; (lhs: Number, rhs: Number) -&gt; Bool { return lhs.rawValue &lt; rhs.rawValue } } /// Tests if it's an ordered Number Sequence. private func inOrder(_ numbers: [Number]) -&gt; Bool { var last = numbers[0] for current in numbers[1...] { guard current == last.next() else { return false } last = current } return true } /// Returns highest value if it's a straight, nil if not. func isStraight(_ numbers: [Number]) -&gt; Number? { let sortedNumbers = numbers.sorted() switch (sortedNumbers[0], sortedNumbers[4]) { case (.Ace, .King): // possible Ace-high straight guard inOrder([Number](sortedNumbers[2..&lt;5])) else { return nil} return .Ace default: guard inOrder(sortedNumbers) else { return nil} return sortedNumbers[4] } } This turns the `enum` into a `Sequence` where each case is an `Iterator`. If you call `next()` on a case it will return the next case in the `Sequence`, calling it on `.King` will return `nil`, indicating the end of the `Sequence`. We can use this to test for order. First we sort, if there's an `.Ace` it will be first due to the raw value being 1. Then we account for a possible ace-high by seeing if the last element is a `.King`. If so we test elements `2..&lt;5` to see if they are in order by comparing each element to the `next()` of the one before it. If they match then they are in order. If there is no ace-king combination then we can test for order with the whole hand.
If you have indicies then give [`swapAt(_:_:)`](https://developer.apple.com/documentation/swift/array/2893281-swapat) a try. 
Like all of us did: added it but most probably won't ever actually study from it :-)
So, I’m stuck. Any tips? /u/blladnar I was thinking of a way to iterate through each array, picking the first number in that array and have it offset by +/-1 accordingly for each array. In the end the numbers picked should add up to make up the primary diagonal or the secondary diagonal. Here’s the Code so far, which consists of some of the old solution. `func diagonalDifference(arr: [[Int]]) -&gt; Int { let totalRows = arr.count - 1 print(totalRows) let totalColumns = arr[0].count - 1 print(totalColumns) // Checking if the 2D array is a matrix for col in arr { if col.count &gt; arr.count { print(«Error! Rows and columns can’t be of different sizes. Please use 3x3, 5x5 or simmilar.») } else if arr.count &gt; col.count { print(«Error! Rows and columns can’t be of different sizes. Please use 3x3, 5x5 or simmilar.») } } // Was thinking of a way to iterate through an array, pick the first number in that array and have it offset by +/-1 accordingly for each array. In the end the numbers picked should add up to make up the primary diagonal or the secondary diagonal. // let primaryDiagonal = arr[0][totalRows] + arr[1][1] + arr[totalColumns][totalRows] // print(primaryDiagonal) // let secondaryDiagonal = arr[0][totalRows] + arr[1][1] + arr[totalColumns][0] // print(secondaryDiagonal) let difference = primaryDiagonal - secondaryDiagonal print(«The difference is \(difference)») return difference } let testingSomething = diagonalDifference(arr: [[11, 2, 4, 7], [4, 5, 6, 3], [2, 10, 8, -12], [1, 3, 7, 8]])`
Yes thanks but on the app Swift PlayGround iPad there are plenty of tutorials to learn Swift and that's what i'm looking for. Not just the xCode Playground
[removed]
This is why I always prefer extension findings over global ones 🙌🏼
Cs193p by Stanford 
Hey Folks, Every time a graphic changes, it seems tedious and cumbersome to export, build, and include several different resolutions for basically the same image in Xcode. With Speculid, I've created **a tool to automate the process so only one file is needed for each asset.** Speculid is a macOS app which **takes a single high-res raster and vector images and automatically render them to Xcode image sets and app icons.** Include one script to call Speculid in your build and there will be no need to the included bloated graphics in your repo, any more. At each build, Speculid will read your App Icon or Image Set metadata and **automatically convert and resize your SVG or PNG file to multiple resized PNG or PDF files to your app.** Give it a try and let me know what you think. Thank You 
Why not?
Thank you very much for your time. BTW! I have fixed my issue :)
I've spent quite a while attempting to do something similar without much luck. Information is sparse and the community doesn't yet seem to have the collective knowledge that other languages have developed. The attempt that got me the furthest was to use installTap and write that data to buffers ie: ``` audioInputNode.installTap(onBus: 0, bufferSize:frameLength, format: format, block: {(buffer, time) in let channels = buffer.floatChannelData let floats = channels![0] for i in stride(from:0, to:Int(self.activeBuffer.frameLength), by: Int(self.audioMixerNode.outputFormat(forBus: 0).channelCount)){ self.activeBuffer.floatChannelData![0][i] = floats[i] } }) ``` this is done in the init() for the audio class. After installing the tap, attaching nodes, etc, I ran scheduleBuffer with a completion handler ``` // setup audio engine audioEngine.attach(audioPlayerNode) audioEngine.connect(audioPlayerNode, to: audioMixerNode, format: format) //attach mixer to output audioEngine.connect(audioMixerNode, to: audioOutputNode, format: format) try? audioEngine.start() // play player and buffer audioPlayerNode.play() audioPlayerNode.scheduleBuffer(readyBuffer, at: nil, options: .interrupts, completionHandler: NextBuffer) ``` notice im using multiple buffers. Also notice the completionHandler. The completion handler also runs scheduleBuffer and runs itself as a completion handler so it will continously swap out buffers and schedule them. ``` func NextBuffer(){ if audioActive == false { return } readyBuffer = audioBuffers[activeBufferIndex] activeBufferIndex += 1 if( activeBufferIndex &gt;= audioBuffers.count){ activeBufferIndex = 0 } activeBuffer = audioBuffers[activeBufferIndex] print("scheduling next buffer at:\(CACurrentMediaTime())") audioPlayerNode.scheduleBuffer(readyBuffer, at: nil, options: .interrupts, completionHandler: NextBuffer) }``` It was difficult to even figure this out, but unfortunately it does not work properly and I've got a noticeable "jump" between buffers that I haven't been able to eliminate - running benchmarks I discovered there's a .1-.2 second delay between completing my buffer-write and scheduling the next segment. Also, please note that installTap ignores your format frameLength and will set it to 17408. I only put up code fragments so it won't run by itself, but hopefully it will give you a place to start. If you manage to get any further than I did, give me an update - I'd be interested to know how to go about this properly. For the time being, Im going to try out AudioKit. Hopefully it can handle buffers better than AVFoundation.
I'll just give you this much. With an *m* x *n* matrix, the standard way to iterate through it would be: for row in 0 ..&lt; m { for col in 0 ..&lt; n { // This block will hit each row/col combination exactly once } } Now, all you really have to do is figure out the pattern that determines whether or not a row/column pair is on the diagonal. The primary diagonal is the easy one (I think you can figure out this pattern: `[0][0]`, `[1][1]`, `[2][2]`, `[3][3]`, etc.), but can you find the pattern for the secondary diagonal? That ones a little more difficult, but if you visualize the diagonals, you'll notice they are straight lines. And straight lines can usually be represented with some kind of linear equation (*y = mx + b*). Your *y* and *x* will be `row` and `col`, respectively. Now you just have to think about how that line is positioned, and what that might mean for the *m* and *b* constants. For the flatmap solution, it is again about recognizing a pattern for the diagonals. It just uses a one-dimensional strategy, rather than a two-dimensional one.
There are lots of great books and resources out there, but I just noticed your comment and thought I might comment and recommend my own book, "*iOS development with Swift*" published by Manning. [link here](https://www.manning.com/books/ios-development-with-swift) Here are a few reasons why you might like my book: * It assumes you have some programming experience, so if you're coming to this from another language, don't worry, we won't be wasting time on what a variable is... Instead it discusses what's new, exciting and different about Swift compared to other languages. * It goes pretty lightning fast through what you need to know about Swift over just two chapters and then gets stuck into iOS development. You'll find other Swift sidebars sprinkled through the book as they are relevant. * It looks at the process of building an app using a case study, following its journey from the germ of an idea right through to publishing it on the app store. * If you like video tutorials there's a related video course too, which you can find [here](https://www.manning.com/livevideo/ios-development-with-swift-lv). Good luck with it!
Hi man looks very good since you also cover local and iCloud state. I want to build an app I already mocked up and I need to create a folder structure and store pictures in it that will be preserved. I will check it out. Greets from Austria 
"Intro to App Development with Swift" is a lot shorter. If you have less time just use the intro. If you want to learn more read "App Development with Swift", in that case you don't have to read the Intro. Yes, the third one you found is more a language reference. If you've followed one of the two App Development books you will be ready to write your first own app. 
Thanks man, that was exactly I wanted to know about. Appreciated!
There are definitely some design flaws here, but I'll answer your questions without touching any of the code. A1. `deck.cards` A2. A struct (`Deck`) that contains a single property, which itself is an array of structs (`Card`). A3. Since cards is immutable, you would have to use a non-mutating shuffle function, then initialize a new Deck with your shuffled array. A4. I don't know how a multi-dimensional array would accurately model a deck of cards. 
OK, here it is: // Finding the diagonal difference in a Matrix - by Håkon T aka Celvin_ with the help from the Reddit community in r/Swift - A big thanks to /u/moyerr /u/blladnar and /u/sh3rlock97 -- also, I won’t lie, a big thanks to Google :) `func diagonalDifference(arr: [[Int]]) -&gt; Int { let maxRow = arr.count print("There are \(maxRow) rows.") // Checking if the 2D array is a matrix and that the amount of rows matches the number of collumns for col in arr { if col.count &gt; arr.count { print("Error! Rows and columns can’t be of different sizes. Please use 3x3, 5x5 or simmilar.") } else if arr.count &gt; col.count { print("Error! Rows and columns can’t be of different sizes. Please use 3x3, 5x5 or simmilar.") } } var primaryDiagonal = 0 var secondaryDiagonal = 0 for i in 0..&lt;maxRow { primaryDiagonal += arr[i][i] secondaryDiagonal += arr[i][maxRow - i - 1] } print("The primary diagonal is \(primaryDiagonal).") print("The secondary diagonal is \(secondaryDiagonal).") let difference = primaryDiagonal - secondaryDiagonal print("The difference is \(difference).") return difference } let makeSomeMagic = diagonalDifference(arr: [[11, 2, 4, 7], [4, 5, 6, 3], [2, 10, 8, -12], [1, 3, 7, 8]])`
Try adding some accessibility elements to the items in the table view that might make it easier for the test to find the elements it needs. Also, tableview should be enqueing and dequeing so the performance will be good no matter what the size. I’d double check that this table isn’t genuinely leaking and also that it scrolls smoothly and renders cells properly.
Awesome, it worked ([deck.cards](https://deck.cards)\[index\]) A3, that makes me question why it was setup this way, if you can't shuffle (and he does have a shuffleCards()), then why set it up that way? A4. I was thinking along these lines: `var list = [ ["a", "H"], ["2","H"], ["3","H"], ["4","H"], ["5","H"], ["6","H"], ["7","H"] ]` Or a struct, this would have the deck there and you can sort, shuffle, copy, list, map, and extend as you wish. Maybe this design is why it was never finished. Even one of the forks went a very different direction.
You really shouldn’t use a multidimensional array there. Instead, make each card a struct and use enum to represent the value and suit properties. You’ll be able to extend the card struct and add all sorts of useful functionality. Not only that but you’ll have much better semantics and the properties will be more easily accessible. 
Just a quick note on po, I've had the worst luck with it. I just stop the program, put in a print and run with that. po is a slow dog that gets lost... IMO, Xcode debugging is sad because I'm using tools (print, log) from years ago. Second note: the number of cells doesn't matter, they aren't in memory (I hope). You are using the recycler, reuse system right? So you only have 10\~20 on the screen at any one time. Are you putting work onto other threads or can you remove some of the workload for testing? Let's say you have 5s of work because it's some large data, what happens if you make a small data batch and test it again when it only takes 0.5s of work? Try it with smaller data and without using PO. Double check the instructions you send are valid, example: The [XCUIElement class](https://developer.apple.com/reference/xctest/xcuielement) allows gestural interactions, are you telling it to do something that can't be done or is it doing it too fast so it has to wait for something else to finish like the loading of data? Example: you tap on a cell before the cell has loaded.
Hi Celvin, how long did it take you to finish two books? I am on a similar journey.... thanks!
You're very close, but the Hackerrank requirement says **absolute** difference. *a - b* does not necessarily equal *|a - b|* for all integers *a, b*. Also, do you understand why the indices of the secondary diagonal are what they are?
Thanks for the info on po, I agree with you, but I mostly use it very rarely to check if something exists. Also, there is another screen in the app with a table of 25 cells or so and I’m able to send the tap event to cells off screen and it automatically scrolls and taps it. That’s why I was wondering if this table with 7000 or so Cell’s would choke it. As far as doing actions that aren’t available yet, simply tapping the screen during a record session will peg the CPU at 200% . If I add a print statement printing the amount of buttons, or cells, then it returns 0 which I know is wrong. If I try to print a debugDescription, then I get the main thread error included in the original post.
If each card is a struct (which I agree with) then how do you group them together? So you could have an array of structs. This would give all the functionality of an array.
An `Array`, `Set`, or even some form of ordered set like `NSOrderedSet`. The latter would be best although I might do a native Swift version of it or a wrapper around it. 
Hmm, care to explain the difference? I was really proud to have solved the diagonal difference, although it happened when playing around with the snippet you gave me. I was probably guessing more than I was reasoning, and noticed that it printed the correct amount. I couldn’t figure out the secondary diagonal on my own and had to cheat(google it). Most solutions out there was for C++, Java and Python. I happened to reckognize a snippet of code that were almost identical to how I had coded the primary diagonal. 
Enums are meant to represent items that can have a limited number of possible values. Card ranks and suits fit this description perfectly. If you just used an array of strings to represent those, you'd have to do a crazy amount of error checking to make sure your Cards weren't being assigned invalid strings (i.e. `["8", "Spades"]` might be valid, but what about `["Spades", "8"]` or `["Hello", "World"]` or even `[]` for that matter). Swift is a very type-safe language, and it's always beneficial to use that powerful type system to your advantage. Don't fall into the habit of making things "[stringly-typed](http://wiki.c2.com/?StringlyTyped)".
So it works with the 25 cell one, but not the larger one. Where's it getting the data from and is it on the main thread? What happens if you make up some fake data and have only 20 cells?
There's the ViewDebugger in Xcode. That's probably the closest you'll get to what you want. 
If you just want to read, and have the time, it wouldn’t take you that long. Depends on what kind of book you decide to pick up entirely. Actually, I decided to the read the official Apple handbook at first. Which I wouldn’t recomend at all, because it was really out of my comprehension. Pretty much skimmed through most of the book. Then I decided to take a more practical approach. I’ve picked up several video courses, books and apps at once. Decided to take one subject at a time and switched back and forth. I’m a thorough, which makes the process slow, If you’re a hands on kind of guy, I’d get a good introductionary book like Hacking with Swift, or even Swift in 60 seconds(I purchased the videos which included the book, but you can access the videos for free) and finish the Intro to App Developlment with Swift alongside those. The good thing about that last book(Intro to App Dev...), is that it does a very good job of getting you into the mindset of how coding ties in with actual day to day tasks. That was a blessing for someone who has no coding background like me. 
I haven’t seen a proper answer in the comments yet so I’m going to chime in. Intro to app development assumes you have a very limited understanding of programming in general. It’s a resource to learn *programming* using swift. It covers some aspects of iOS, but very little. App development with swift assumes you already have a solid understanding of basic programming concepts; it focuses more towards swift and iOS development itself. It’s a resource to learn *swift/iOS*. It covers much more of the iOS ecosystem than intro to app development, and goes much more in depth. If you aren’t experienced with programming, I recommend you start with intro to app development with swift and move on to app development with swift. If you are experienced with programming, you can jump straight into app development with swift. CS193p is a great resource if you want to really learn iOS, but keep in mind it is a university course and is fairly fast paced and can be difficult. Even I struggled with it. I’ve mentioned before I think these books are very well written and highly underrated. Give them a try. Keep in mind whichever you use, there will be assignments. These are not optional. Actually implementing what you’ve learned will not only help you solidify and understand the concepts in each chapter/section, but will help you become a programmer, not just a book-reader. Disclaimer: I work at apple and may be biased. There are many well written resources/books/courses out there that have different flavours and different styles of teaching. I think these books are very good.
From scratch I’d say 4 hrs a day learning swift or java for android for 2.5 months, orrr pay someone, orrr rely heavily on premise tutorials. It’s more of a time consuming thing than how “hard you try”.
The difference between *difference* and *absolute difference*? The absolute difference is just the absolute value of the difference. If you don't know what absolute value is, I can point you to the [wikipedia page](https://en.wikipedia.org/wiki/Absolute_value) to read up on it, and the [Swift documentation](https://developer.apple.com/documentation/swift/2885649-abs) for how to calculate it in code. Now, for the secondary diagonal, the reasoning is just to find a pattern or a *mapping from rows to columns* from the rows to the columns. Consider a 5x5 matrix. The values themselves don't matter. For simplicity, I'll label the rows and columns, and mark the secondary diagonals all 1, with all other values 0. 0 1 2 3 4 --------- 0 | 0 0 0 0 1 1 | 0 0 0 1 0 2 | 0 0 1 0 0 3 | 0 1 0 0 0 4 | 1 0 0 0 0 In row 0, what column contains the element on the secondary diagonal? The last one: column 4. What about row 1? That one is in column 3. And so on. So every time the row increases by one, the column decreases by one. Look at it in terms of the size (*n*) of the matrix itself (in our example, *n* = 5) row 0 -&gt; col 4 (this is n - 1) row 1 -&gt; col 3 (this is n - 2) row 2 -&gt; col 2 (this is n - 3) 
You can use AVFoundation and Vision to detect barcodes, it is much more accurate - https://github.com/hansemannn/iOS11-QR-Code-Example. *This is not my repo 
Depending on how much time you have and how much effort you want to spend, you can go a few different paths. One path is to simply find a tutorial that matches what you're doing. That might be a long shot, so you might have to take the app and break it down and do several tutorials to cover most of it. The other option is to buy the source code from one of those "apps for sale" sites. You pay a bit of money (usually &lt; $150) and you get the app with source code. Another option is to get as close as you can with books and tutorials, then ask for help or pay someone on Fiverr / Upwork for a fixed bid to finish off what you're having trouble with. The skill of being an app dev is great to have but takes quite a bit of time. You can go here and see if you can find a tutorial that matches your needs. [https://www.raywenderlich.com/ios](https://www.raywenderlich.com/ios) I would start with taking the app in question and outlining every thing it does, button by button, screen by screen. Get screen shots and make slides and notes on every step. Show the flow of info and events. You'll find that many apps have a lot of things in common. Things like data storage, communication with other apps, displaying data, etc... I'll give you an example of what I did. I saw an app that uses AI in poker and wanted to have a modified version of it. So I found some poker engines and I'm playing with them to understand them. One of them collects stats about the odds of types of hands you'll get pre-flop by running a number of simulations. This is cool, so I learn how they do these things. There's TONS and TONS and TONS of source code out there on GitHub and most are free for the taking based on the lic they have. Each one has a lic file/notice with them.
We're maintaining PHP code at the moment, with an aim to move to Swift, using Vapor, for a lot of our stuff.
Interesting. Thanks for the reply :D
2 of 3 apps rewritten in Swift in the last 18 months. The last will probably get done in the next 6 months. 
What is your map framework? Is your framework like a MapBox?
Doesn't switch change so often that it needs to keep being updated?
Mostly Objective-C transitioning slowly to swift. New features are almost always written in Swift, but we won’t convert everything to swift yet.
One bootcamp isn't going to do much to get an employeer to look at you, it's absolutely no substitute for a CS Bachelor's degree. You'll need a bunch more experience - work on other projects, code samples, example open source work done, serious apps on the store (not just simple little games or utilities). Even better, go to a local college and enroll in a CS course or two. Even having just a few of those under your belt may be enough to get a junior position in a company. They show that you can do work in an accredited setting. You may even be able to enlist the help of the CS department in finding those kind of starting jobs.
We re-wrote our main app entirely to move from Objective-C to Swift. The code base is now entirely Swift except for a few external libraries.
Our own mapping
In the earlier versions it changed quite a bit. ABI stability is coming with Swift 5 sometime next year, and that should be the last time an upgrade breaks code. The changes have generally been less and less each version– going from Swift 3 -&gt; 4 probably broke more things than the transition from 4 -&gt; 5 will be.
Our app is somewhere between 90-95% Objective-C, with the app having been converted/rewritten over the past year. What Objective-C that remains will be replaced by Swift when it comes time to work on features written in it (soon) and some of it is just stuff like files full of constants that need to be converted. Swift can be a little awkward at times, but in the same places where we face awkwardness in Swift, there’d most certainly have been some kind of gymnastics going on in Objective-C too.
I hate that mentality. I get it but accruing tech debt and never paying the bill is frustrating. Do you peeps keep lots of documentation? 
I disagree. Its not tech debt unless it hinders productivity. We have plenty of ObjC systems which are stable with clean API's that work. Refactoring them often introduces bugs, even for straight ports. We take the opportunity to refactor when you ultimately need to make changes to the system and can justify the risks involved.
There are lots of projects out there made in Objective-C which won’t be translated to Swift unless Apple decides to discontinue it. I’m betting that Apple itself has lots of projects in Obj-C as well
We wrote most 50% of our code so that it would support the react native front end. But management decided to redo the whole UI in swift. So, 50% is now swift. No plans on touching the objc code as very less developer working in the application and it would mean a huge loss for company. 
Our code is almost 95% in objc. My boss is not willing to learn swift so i think we will have 5 years old difficult to maintain objc code which was done by some really angry developer.One of the shitty codebase i have seen in my entire ios Developer career. Its over 2+ million code
There is big security issue with your ‘solution’. You bloody store passwords in the scripts. Are you for real? Why would you ‘script’ the setting of an ENV variable of a password? This article is an example of an implementation where the passwords are to be found on Github. There are way better solutions to exposing the password on the build system. When using Jenkins expose the password via the job as an environment variable. Then use the variable from within your scripts. Also make sure you harden access to the Jenkins instance. Else you could run into the same issue as Brew had a couple of weeks ago.
That’s good to know I might go back to switch now. I stopped after all my code broke twice and the internet became useless as everything was about a previous version. 
Just finished a complete re-write in Swift. It's bliss. 
Thank you for all your help! It’s much appreciated! I think I vaguely remember from school. Although, I pride myself on doing well in school, it’s pretty obvious that math was never my forte. I updated my code with this chunk of code: // updated the code to take the absolute difference into consideratiok if difference &lt; 0 { difference = difference * -1 } I’ve never touched the function ‘abs’ before, but upon reading the link you provided I realize now that it’s best practice to use that function in this context. It looks a lot more elegant as well: print(abs:(difference)
Check out Swift NIO
As a self employed dev in the last 2 years I have worked on 1 obj-c reskin 1 obj-c maintenance which I was then asked to rewrite the whole app in swift, 1 obj-c app with new features in swift and 5 brand new apps in swift.
This highlights the beauty of the Objective-C/Swift situation; you can almost effortlessly switch to Swift in the same project. I don't see a way to start adding Swift to a PHP project. 
Context: Where I work, we have a suite of 40+ apps (client and server) that runs in a mission-critical environment. All written i Objective-c (since it's from 2008). When Swift came out, we had to redesign one of our apps. Swift was the obvious choice, since it was brand new and we all wanted to give it a try. It worked fine, but when the first update to Swift came (1.2?), we got hit really hard, by refactor and extensive test that we did not have time to perform, but we needed to do it. This happened again with 2.0, and since then, we have not written anything in Swift, because of the overhead we have experienced. The project will live on for some years, but I doubt we will write any new Swift apps. 
We have been converting our ObjC codebase to Swift in the past 2 years, but most conversions are initiated by complete redesigns of flows from our UX design team. It is a long process since we also have to develop new features &amp; iterate on our Swift infrastructure in parallel.
&gt;Also make sure you harden access to the J Thank you for your valuable feedback, I hope you have gone through the article and understand that article provides a help to the people that how to implement the CI/CD job. Regarding the password thing I hope most of the people knows how to secure the password through environment variable in Jenkins and nobody will write the password in fastlane script which will expose company's or organisation itunes connect account , though I didn't want to make things complex for starter/novice users by showing more steps. But I missed writing up the things to avoid people not to add password in fastlane script . Though I will add it in the article so that people doesn't follow the same thing as I did it for tutorial purpose. Thanks again.
My biggest concern is that you claim it to be a complete guide to ci/cd, and the fact that you do store the password in the script as an example shows me a lack of security foundation. When you write an tutorial, never assume the reader is able to know that he/she should never store password in scripts.. You give an bad example. &gt; though I didn’t want to make things complex for starter/novice users by showing more steps Really? Are you that stupid? Your explanation is sooo bad, I’m fully lost for words.. Even for tutorial purposes, you never should store passwords in scripts. If you want to write a complete tutorial, take the bloody time to write a complete one. And these ‘complex’ steps are not that complicated in the first place. &gt; Though I will add it in the article so that people doesn’t follow the same thing as I did it for tutorial purpose. Thanks again. So your article is something along the lines: ”Let me explain you how it’s done, but do not do the same since that is bad practice” So what is the point in writing the article in the first place... Either write a complete one, or do not do it at all. Your article and your response tell me you are a junior developer yourself..
Like every iOS system framework.
Fellow framework developer?
What’s the compile time like? That’s an incredibly large project - curious about what happens when a dev accidentally cleans the project. 
+3M lines of Swift code? That project is either massive or some bad architecture was implemented! Wondering the compile times of that. My project has roughly 190k lines of Swift code and it takes around 60s to compile the first time.
&gt;though I didn't want to make things complex for starter/novice users by showing more steps. But I missed writing up the things to avoid people not to add password in fastlane script . Though I will add it in the article so that pe First of all, learn how to speak with people in proper manner. I really don't care who you really think me " junior " or "senior" dev or how my words are ...as you are really nothing to me. I appreciate that you are reviewing this article and I will keep in mind about the changes in my future article. Meanwhile you can carry on with gibberish comments on this post, I am at-least proud of myself that I may have helped few developers to do **" complete " CI/CD job** on their own with simple steps and the rest they will sort out their own by the help of best industry practices or asking question to my article. **Peace** 
This has literally nothing to do with Swift.
I think perhaps you’re missing some nuance here in your choice of words. A “complete” article should cover everything you need to know about the tools, including security concerns, even if that makes it complex. Maybe you mean this is more of a beginners “end to end” tutorial, where you end up with a basic implementation which uses all the tools and processes in a simple but functional manner. 
If you don't have a clean boundary between what's done in Swift and what's done in Objective-C it's going to end up in a big mess. I tend to keep projects pure in Objective-C until a significant and well separable chunk of work comes along that could be done in Swift. Pure Objective-C is so much nicer to maintain than a hodgepodge of Swift and Objective-C. The cleanest Swift patterns often fail if you need to consume from Objective-C. If they are my personal projects I like to keep them in Objective-C as I use it rarely lately and want to keep a bit of a feel with the language.
I objected against Swift + Objective C here at the company, so they gave our team a chance to create a new version from scratch, taking the opportunity to add lot of features and improve performance.
I find Medium tends to host very low-quality content. There's a few gems but overall the quality of the posts is lacking, they are usually pretty short and advocate bad programming practices. I'm always looking for interesting content though so I'll check out Toptal and see if it's any better. Thanks!
We finally finished transitioning to Swift this year. Was a long, hard road.
I recall doing a course on Udemy with Angela Yu as the instructor. I think during the CoreML, Realm or IBM Watson lessons there is an app you build that lets you snap a photo of a plant, and then with machine learning identifies it. Is this what plant nanny does? If so go to udemy and take Angela's course. Either way you wont regret it and for the price the course is fun and fair--should be around 20.00USD. 
Is bet most of their Obj-C code hasn’t even migrated to ARC yet. Did you know they’ve added new ARC features to clang in Xcode 10 for Obj-C? Obj-C will be around for a long time.
Now I know about optionals it makes writing Obj-C feel like a minefield.
Our company implement new functionality in Swift while maintaining the old code in ObjC. However if some part of the code makes more sense in Swift (e.g for security) we'll convert it into Swift. ObjC still has its own beauty for all those runtime feature.
 import Foundation let text = Optional("[{\"question\":\"q1\",\"awnser\":\"a1\"}]") struct QuestionAnswer: Codable { let question: String let awnser: String } if let text = text, let data = text.data(using: .utf8), let decoded = try? JSONDecoder().decode([QuestionAnswer].self, from: data) { print(decoded) // [QuestionAnswer(question: "q1", awnser: "a1")] } 
I believe your JSON string is an array of dictionaries and not a single dictionary. Try casting the serialized JSON object to an array instead of a dictionary For example try replacing: ‘... as! [String : Any]’ with ‘... as! [Any]
Please detail why. 
Our company implement**ed*** new functionality
It’s multiple projects, at a big company
Easiest is to use my code and replace `print(decoded)` with print(decoded[0].awnser) Of course you really should check first to make sure there is at least one element in the `Array` before you use that subscript.
Oh okk thanks so much!!
Since objc just passed right over nulls I found my code would just degrade instead of crash, which is better obviously. But c++ can feel like a minefield. Staying on the topic here: when bridging objc-&gt;Swift NS ASSUME NON NULL has caused more crashes in Swift than anything else. Why wasn't it written as assume null?! 
Sure, for single references, `nil` all day every day. But every time you pass that around, the API may not correctly handle. And if you try to add it to a collection, well fuck you, this `nil` safe language doesn't have `nil` safe collections.
Start times are already better, especially if you use a static framework. Obj-C has the worst startup times of major languages on Apple's platforms.
I wonder how memory is affected when zooming in the scrollView is implemented, and you transform, and translate, the corresponding labels.
The fallback on using a UICollectionView is that you are stuck with a single scroll orientation. This code appears to be able to allow the user to scroll 2-dimensionally
Unfortunately not even. App 
There isn’t one. The PHP code we’re maintaining isn’t compatible with PHP7 at all, so it’s due a rebuild anyway. We’re just doing the rebuild in Swift. 
With a custom layout, you can scroll both direction.
Part of the reason is that Medium seems to be all over the place. TBH, I didn't even know Toptal had anything there. I know who Toptal is, but didn't know they had these kinds of posts. That's the thing about the Internet is that you can have all kinds of great things, but if nobody knows about it, then it doesn't become popular. It's much the same as the App Store where things are so flooded that only the most popular ones get seen.
Hey what a fun project! I downloaded the code off gitHub, and played with it a bit. First, I scrolled in one direction for about 15 minutes and watched the memory. It was slowly creeping up. It got up to 56Mb - most likely normal usage but you might want to dig into it and see if there's an issue. I really like how smooth the scrolling action is: vertical, horizontal, and diagonal scrolling. It's very smooth. While I don't think there's anything wrong with your approach, I had another thought. Let's say you're just scrolling up: Your process is to create a new tile outside the visible area on top and destroy a tile out of view on the bottom. What if rather than constantly creating and destroying tiles, you did something like this? [TileRotissery.png](https://github.com/fossfool/thoughts/blob/master/TileRotisary.png). If you imagined having several of these "tile rotisseries" making a toroidal "donut like" shape [like so....](https://en.wikipedia.org/wiki/Three-torus_model_of_the_universe#/media/File:Bryan_Brandenburg_Big_Bang_Big_Bagel_Theory_Howard_Boom.jpg) You would update the label for vertical movement on the inside of the donut for the entire inner ring as it rotates around the poloidal axis, and for horizontal you would update an entire poloidal "ring" segment. [This pic](https://github.com/fossfool/thoughts/blob/master/ToroidalCoord2.png) might explain what I'm thinking a little better. You'd end up with a finite set of tiles, and reduce the work a bit. Again, awesome job! I'm sure there's all sorts of issues with what I'm proposing, just another thought, but I'd be interested in what anyone thinks.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [fossfool/thoughts/.../**ToroidalCoord2.png** (master → 3f1bffe)](https://github.com/fossfool/thoughts/blob/3f1bffe39a42f595126fb0b4e5bbece97cdce922/ToroidalCoord2.png) * [fossfool/thoughts/.../**TileRotisary.png** (master → 3f1bffe)](https://github.com/fossfool/thoughts/blob/3f1bffe39a42f595126fb0b4e5bbece97cdce922/TileRotisary.png) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e49qtmm.)
Its a very long function, I can add it if you want.
Please post text, not images. With text you can copy-pate it into an editor and have a better look at it. 
updated the post, added the code.
Ok, first off you shouldn't post a "wall of text or code" and ask others to find the bug. At least put in some break points and isolate the offending call. Asking someone to examine that many lines of code is just unreal. Even something as simple as putting in some print() calls or something to narrow it down. You mentioned Swift 2 -&gt; 4 conversion, can you at least indicate what lines were changed? Do you have to original and a converted of the code? Think about the amount of work you're asking others to do for you.
I know and I am sorry but the function is not showing any errors i thought the image would be enough I looked stackoverflow to solve it (the said to remove derived data from prefetences&gt; locations&gt; clicking the grey arrow) but nothing changed
Most of the time I use [Jazzy](https://github.com/realm/jazzy) from Realm, it support both Swift and Objective-C 
Ok, do you know what a break point is? Do you know how to put a print("your text here") into the program? Put a print("you are on marker 100") print("you are on marker 101") print("you are on marker 102") and so on all over the code and watch for which one is the last one before it crashes. You saying: \&gt; I know and I am sorry but the function is not showing any errors What does that mean? It means there are no errors? how exactly would a function ever show an error, it's it the runtime that shows an error? What does that have to do with you putting in a breakpoint or print() statement in order to narrow it down? Think about what you're doing and what you're asking. You have WAY too much code there and you don't seem to understand what a break point is. Have you bothered to take any debugging tutorials? Hint: click on the left side of the code, that inserts a breakpoint. or from the menu in Xcode: Debug-&gt;Breakpoints-&gt;Add breakpoint at current line [https://www.youtube.com/watch?v=SzSw-LkoQYY](https://www.youtube.com/watch?v=SzSw-LkoQYY)
Hi, thank you for your in depth answer. Actually I started with the "App Development with Swift" and I love it. I'm at page 200 and can't wait to learn more of the swift eco system. I'm an advanced javascript beginner. So most of the things so far are pretty clear to me. Altough some features aren't in javascript, such as dictionaries and tuples but they are pretty cool. I will finish the book and then start on my own app. You work at apple? Lucky you :) Have a nice day!
Not sure what you are asking. If you are asking, "Will Jazzy create docs for .swift files, yes it will on public properties, and functions found within the project files. It will also include [README.md](https://README.md) files as the index page if you configure it that way. 
I looked around github for Fastfile examples last week. I found SOO many API tokens and passwords. I made an issue on the first repo i found, but I quickly found that they were not alone.
I did not know that, thanks!
Worth searching for 'swift' on the NativeScript GitHub project. People have been murmuring for years about the possibility of bridging the Swift runtime to JavaScript, and tools similar to the ones you need would be involved. Not so sure about the documentation aspect, mind.
It's also not really great at generating Obj-C docs.
The predicate syntax in this case is simple: `"age == 45"`. If you want to use a variable for the age you use NSPredicate's predicateWithFormat method and the string `"age == %@", age`. Predicates don't have a SELECT statement, like SQL does, so you don't indicate that you only want the name in the predicate. A fetch request usually returns NSManagedObjects or their appropriate custom subclass if you've set them up, in this case Person objects. If you're really only going to use the name property you can set your NSFetchRequest's propertiesToFetch attribute and that'll save a tiny amount of time when fetching. For people using CoreData I always recommend they install mogenerator and run it every time they update their data model. It implements the 'generation gap' design pattern by machine generating a subclass of NSManagedObject for each of your entities with accessors for each property so that you can do things like `person.name`. It also generates a subclass of the machine generated class that you can modify with custom code that won't get overwritten. For example, if you have a Person entity defined in your managed object model mo generator will create `_Person.swift` where it will put machine generated code and `Person.swift` where you can put your own code. On the next run `_Person.swift` will be overwritten to reflect any changes you've made to your MOM, but 'Person.swift` will be left untouched.
That is correct. %d works as well.
I know that code is really big and xcode was also unable to detect it fully and the developer who wrote it was from some outsourced company the only option left was the internet and i was stuck on it for almost 4-5 hrs the only option left wit me was to post it here. I thought the pic would be enough since I didn't want to upload the code but someone commented for the code (I have mentioned that the code is very big and unprofessional) so I tried to clean and build it multiple times so that i can post specific errors but nothing happened so the only thing left was to upload the full function I know that you guys are really pissed and i value your suggestions and special thanks to u/thisischemistry for helping but i was also helpless as there is no other swift developer in office whi could guide me through. 
I knew there were passwords around, but I didn't think it could be that bad.
Seems the TLS v1 certificate expired...basically, your version of Ruby is using an OpenSSL versions that's too old. See here for more info: http://blog.rubygems.org/2018/02/24/tls-10-and-11-deprecation-notice.html
Here's the documentation: https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Strings/Articles/formatSpecifiers.html
Predicates are the red-headed stepchildren of SQL statements. They are not very robust because CoreData isn't really a database. func Update(identifier: String, name: String, nickname: String) { let startDate = "1900/01/01" let endDate = "1901/01/01" let context = (UIApplication.shared.delegate as! AppDelegate).persistentContainer.viewContext let request:NSFetchRequest&lt;NSFetchRequestResult&gt; = NSFetchRequest.init(entityName: "STUDENT") //let predicate = NSPredicate(format: "ID = '\(identifier)'") // is equal to object //let predicate = NSPredicate(format: "name = %@ AND nickName = %@", argumentArray: [name, nickname]) // is equal to array //let predicate = NSPredicate(format: "name contains[c] %@", txtFieldName.text) // if contains object //let predicate = NSPredicate(format: "name contains[c] %@ AND nickName contains[c] %@", argumentArray: [name, nickname]) // if contains array let predicate = NSPredicate(format: "(date &gt;= %@) AND (date &lt;= %@)", startDate, endDate) request.predicate = predicate request.fetchLimit = 1 // don't forget the fetch limit do { try results = context.fetch(request) //blah blah blah } catch let error as NSError { print(error.localizedDescription) } } 
Great write up! Really glad to see SourceKit is working well for you! &gt; The transformation isn’t always perfect Can you give some examples of times where ObjC interface generation is lackluster? We’d really appreciate some bug reports, if you have the time to file them. Interface files are a big focus right now.
I’m more pissed off for you, not at you. No developer should write code like this and leave it for someone else down the line, as has happened to you here. It’s unprofessional and downright hostile. Whoever wrote this was not a professional programmer, they were some hack pretending to be one. It hurts the entire profession when people write this kind of code. If you need any more help feel free to ask. I’ll do what I can to help out. 
You can probably remove the mutable part of those too, they don’t seem to be mutated anywhere. Such as using `NSDictionary` instead of `NSMutableDictionary`. In fact, I’d try to use `Dictionary` instead of either of those. 
And what’s f.lux?
Sorry! I should've linked out to it. I assumed it was popular, but that was my bad. Here's the link: https://justgetflux.com/ Its basically like iOS' NightShift, but far superior (but desktop/android only).
Ahh, I don’t even use NightShift. There’s been a bunch of studies showing that it has little positive effect on people. It’s one of those things that someone assumed would be helpful without doing the research. I didn’t realize someone had made a stand-alone version of it. 
Flux isn’t any desktop app: it’s tied pretty deeply into the operating system itself. If you want hints on how you might make Flux on iOS, looking at the stuff here is a good start: https://github.com/thomasfinch/GammaThingy/blob/master/README.md
Do you have links to the studies? Everyone I know who uses f.lux or similar, has reported less eye strain. I know my eyes feel much better personally when I'm working late with it on.
I'd like to recreate flux on MacOS, not iOS because apple's app store rejects anything that mimicks what nightshift does. I did find this old repo from 2009 called Shady, which is an objective-c program that "dims the screen" but this person essentially does a full screen overlay, with just changes to the pixel opacity in the overlay itself. [Link to the Shady repo](https://github.com/mattgemmell/Shady)
I've got to disagree there. The people behind f.lux have been working on f.lux for ten years and base a lot of it off of tons of research https://justgetflux.com/research.html
I think the core is figuring out the API's to use, most likely some C API. I would send an email to the folks behind f.lux and ask for pointer.
Perhaps. As I said, the research I had seen said that varying it based on the time of day didn't do much. I'm not somewhere I can find that research right now but if I can find it I'll post it.
Try putting the whole operation inside parentheses, cuz it looks like your sending the division as the parameter instead of the result.
import Foundation class Concentration { var cards = [Card]() func chooseCard(at index: Int) { } init(numberOfPairsOfCards: Int){ for _ in 1...numberOfPairsOfCards { let card = Card() cards += [card, card] } // TODO: Shuffle the cards } }
sorry: { lazy var game = Concentration(numberOfPairsOfCards: (cardButtons.count, +1) / 2) var flipCount = 0 { didSet { flipCountLabel.text = "Flips: \(flipCount)"
Take the comma after count and parenthesis after +1 and try.
I found this article: [iOS 9.3: The new Night Shift feature probably won’t help you sleep better](https://www.macworld.com/article/3047121/iphone-ipad/ios-93-the-new-night-shift-feature-probably-wont-help-you-sleep-better.html) Some interesting points in there. I'll have to poke around more and see if I can find any of the other articles I might have seen on the topic.
My [other comment](https://old.reddit.com/r/swift/comments/97u8g1/swift_binary_operator_error/e4az2pb/) explains it a bit.
Good job, I was like... that’s just all wrong
Yeah, it's important to note that there is a unary `+` operator, just like there's a unary `-` operator. let positive = +1 let negative = -1 So if you forget the space between the `+` and the value then you might get an error but not the one you were expecting.
Yep. He’s also probably better off exporting it as a variable to make it a bit clearer what he’s trying to achieve. Plus, swiftlint line limit..? :D
&gt;http://blog.rubygems.org/2018/02/24/tls-10-and-11-deprecation-notice.html Thanks, I ran a script they gave and it did confirm that it's outdated. [https://bundler.io/v1.16/guides/rubygems\_tls\_ssl\_troubleshooting\_guide.html#additional-help](https://bundler.io/v1.16/guides/rubygems_tls_ssl_troubleshooting_guide.html#additional-help) So they say to run this: **gem install bundler** and it fails for the same reason. So it's in a loop where it can't upgrade because it needs to upgrade. **gem update --system** Says it's already on the latest version. IDK what the update process is, but at least I've confirm that it's outdated.
Hmm, perhaps. I tend to not create another variable just for a single use, if the line is too long I'll just split it: lazy var game = Concentration(numberOfPairsOfCards: (cardButtons.count + 1 ) / 2) vs lazy var game = { let pairs = (cardButtons.count + 1 ) / 2 Concentration(numberOfPairsOfCards: pairs) } Personally, I think the parameter name is a bit long. Maybe just use "pairCount": lazy var game = Concentration(pairCount: (cardButtons.count + 1 ) / 2) 
Stanford!
That’s true. It’s like you see what “they” want you to see, only the mainstream, though there’s great content everywhere to be discovered. 
No, just no. Don't even mention it, it's a bad idea.
There’s a chance for reuse such as showing a “pairs remaining counter”. I’m more for readability than bloat. I used to oversee a lot of junior/intern developers and when I asked them what it’s doing I usually get blank stares. Then I rewrite it so it’s readable and it instantly clicks for them. Plus when it’s compiled I probably makes no difference if it’s one or two variables nowadays
Readability definitely counts for something. I'd rather do it in a closure than create extra properties but whatever works for the situation.
From what I've seen it's not actually the color that's causing the strain, it's the light level and difference between ambient light and device light. The automatic brightness settings in iOS and macOS seem to help a lot with that, as does the True Tone settings. I've found that when the device color mirrors the environment I have less strain. If you think about it, that makes sense. Reading a piece of paper will mirror the environment because it's reflecting the light from the environment, both in level and in color. If your display does a similar thing then you'll have to adjust less to differing light levels between the environment and your device. I still think that there's a good amount of research to be done here but these ideas seem to be a move in the right direction.
I'll try to get a concrete example later but I seem to remember that callback/block definitions have some unsightly name mangling going on.
Absolutely. That’s why I did it :)
If this a real SmallTalk environment this would apply to every program in the environment as well. And yet somehow SmallTalk didn't really took off?
just to preserve the diagonal scrolling. 
Awesome and very useful! I'm going to have to play around with this one over the weekend! Thank you.
I writing this in a couple of hours so the code is pretty messy.... I did some days with TERRIBLE code and failing attempts before I came up with this failry simple solution (which you can find in my messy earlier commits). So since I wrote this in a couple of hours it probably contains lots of bugs. Please help find them :)
Lol. Cool. 
This... is amazing! You’re awesome!
While of dubious value, this really demonstrates the beauty of the Objective-C runtime and its flexibility + power. Thanks!
Awesome to hear, hope the process goes well. Vapor is a fantastic framework and will only get better as Swift improves.
Thanks. Bit of a steep learning curve. But we’re getting there. 
When you said that you populate the table view with 100 cells, are you creating the cells statically or are you recycling them in `tableView(_:cellForRowAt:)`? Are they UITableViewCell objects or instances of a subclass? It’s hard to say without seeing the code, but it sounds like you are adding a subview to the cell and it is remaining when the cell gets recycled. Try using a different UITableViewCell subclass for your different cell configurations (one for the configuration with the subview, one for the one without). Or, try using a different reuse identifier based on the configuration (again, one for the configuration with the subview, one for the one without). You could also have a look at `UITableViewCell.prepareForReuse()` if you need a place to “reset” the cell (removing the subview) before the cell is recycled. 
If you are adding your subview in the delegate method cellForRowAtIndexPath make sure to update it's "tag" property to some odd number of your choosing. You can then use this method: [https://developer.apple.com/documentation/uikit/uiview/1622429-viewwithtag](https://developer.apple.com/documentation/uikit/uiview/1622429-viewwithtag) Example: `mySubView = cell.contentView.viewWithTag(90210)` This will return your UIView subview and you can then do this: `mySubView.removeFromSuperView()` To remove your subview from the view hierarchy. You will need to perform the above process before adding your subview in the first place so a good thing to do is to test using an if-let statement: `if let myView=cell.contentView.viewWithTag(90210){` `myView.removeFromSuperview()` `}`
I also think it's annoying that extensions that declare conformances can't be made public. Is it because that syntax would suggest that you could choose whether to make a conformance public or not? I don't quite get it.
`prepareForResuse` is your best bet here. This is your opportunity to clean up the cell from its previous usage. `UITableCell` objects are recycled, so if you are scrolling down, as soon as one goes off the top of the screen, the same `UITableViewCell` in memory (now representing the data of a different object) might come back on the screen at the bottom. The system doesn’t know how to clean that cell up from its previous user, so you can do that in `prepareForReuse`
Make a program that creates display color profiles and sets your display profile to them. Pro photographers use apps like this app the time to color calibrate monitors for printing. 
Languages don't always take off because of good or bad, it's like Microsoft's operating system. How many of MS's OSs have been great? Maybe Win95 or XP were fine, but look at Vista. It's about popularity, windows came installed on the system so others didn't do as well.
So does objc\_getClassList() get all the classes that are written in Swift as well? I remember all the tricks of ObjC, I should go dig those up and see what I can do with them.
Did you take a look at the test target? I have pretty many Unit Tests. Why did you assume I didn't?