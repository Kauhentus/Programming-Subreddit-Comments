Hmm I'll double triple check in the morning bud
You can also watch [over 400 video tutorials on Swift](https://www.youtube.com/playlist?list=PLxwBNxx9j4PUpjCEVwjqFvNecNvQ6Dj6G) on YouTube channel The Swift Language..
Yeah, that will make sure you have enough space and may be a little easier. This problem isn't about programatic vs IB, or using springs/struts vs auto layout. It's about you being able to look at your layout and say, "If this phone was smaller or the text was twice as long, can my layout account for it?" Along with that is scaling things up to an iPad size and saying "How stupid would this look on an iPad?" 
&gt; does to make me look like I go from one thing to another quite easily? What's wrong with that? If anything, knowing about more things is a plus. If some interviewer asks you about it, you should frame it as wanting to learn more and expand your skill sets and not be stuck doing one thing only forever.
Using many storyboards with fewer items in each has a lot of the positives of both. You often will need a Xib or two somewhere, but otherwise, it works.
There are a lot of free icons online that only require credit to the creator. If you want to punch up the look of an app, that's an easy way. I'm not an artist although I can do technical work using CAD software so I've used it plus GIMP to create a few icons.
I wonder if this approach will still work with the new Xcode 9 editor. To add to why someone might want vim bindings: If you're used to vim bindings, then going to an editor without them is like writing code in Notepad. Sure, you probably could do it, but it feels like something is missing. When I use Xcode, I have to use the arrow keys and the mouse so much more than I would, were there decent vim bindings. It's one reason why I really hope AppCode becomes a viable alternative for swift development, as JetBrains' vim bindings are top notch (and easily installable with a plugin, rather than having to cryptographically re-sign the binary). 
The regular Xcode editor doesn't support any Vim key commands, so you can't do Vim style navigation or editing. Vim is basically a power user mode for text editing. And once you're familiar with it, doing code editing without Vim keys feels awkward and slow. So basically you end up wanting to be able to use Vim style editing everywhere. Almost every IDE either has a built in Vim mode or can have it added via a plugin.
The plugin doesn't work for Xcode 9 yet, and it'll be quite a large job to get it working, given that Xcode 9's editor was rewritten from scratch in Swift. But the plugin dev has started exploring the possibilities, at least.
&gt; JetBrains' vim bindings are top notch Disagree. There's a persistent bug in their Vim bindings that gets you stuck in insert mode and you need to tap Escape multiple times to get out. The bug has been around for years, and reported by many people on the bug tracker, but there seems to be no interest in fixing it. 
I use the main storyboard that has the window and menu with only the main view, then call xibs on demand.
One thing that's quite different (in a positive way, IMO) is that in general, when developing for iOS one leans on third-party libraries FAR less often than with front end web dev, and a great majority of the third-party libraries that we do use are sugary wrappers around Apple-provided APIs. This is because UIKit and family are incredibly versatile and deep. One can build a many kinds of full-featured, highly polished apps with them alone, which is more or less unheard of on most other platforms‚Ä¶ only other thing that comes close really is *maybe* C++ or Python w/Qt, but even that has notable holes. Naturally this lends to a more calm, steady ecosystem. Sure, things change, but many tutorials written two years ago are going to still be mostly relevant today. Hell, there are times when I've found nuggets on blog posts and mailing lists from the early 2000s (back in Cocoa's pre-iOS days) that still apply. That churn found in front end web isn't present at all, and I personally love it. On that note, I would recommend against starting with React Native for the simple reason that compared to Swift w/ UIKit, what you can do with it is limited. Those who are the most productive with RN have extensive knowledge of UIKit and can deal with the various quirks and leaky abstractions present in it. Dunno if that's helpful, but to me it's one of the biggest differentiators between the two platforms and I felt it worth pointing out.
Yeah, that's true because the condition is also just evaluated if the build is in debug mode üëç
The idea came into my mind when declaring a function with a parameter that should be both, @escaping and @autoclosure which looked extremely verbose for the functionality it should represent. I think there are more good use cases for auto closure beside the standard library. Maybe not in app development, but Swift should be more than that. 
Not to mention non-IDE software. Vimium in your browser, bindkey -v in zsh (or set -o vi in bash) and endless frustration in practically everything else. Speaking of shell vi bindings it annoys me to no end that the REPL prompt defaults to insert mode. Every time I insert k instead of traversing my history I feel like forking a bitch. XVim is great. I'm still not sure how to handle Xcode 9.
I tried to get Vim keys into everything, some years back. But I ended up so frustrated with the varying and unpredictable levels of consistency, not to mention each different plugin's quirks and bugs, that I just gave up. It sounds like the XVim guy might be able to get his plugin working for Xcode 9, which will be great. But it could be delayed quite a bit after Xcode's final release, given the probable complexity of the task :( It really seems silly that Apple aren't building a Vim mode into Xcode itself. Vim keys are a programming institution, and aren't going away. And surely there must be a reasonable percentage of Apple's own dev staff who live by Vim keys. Are they really using a third party plugin internally, and one that requires resigning the binary? It seems a bit absurd. 
&gt; And surely there must be a reasonable percentage of Apple's own dev staff who live by Vim keys. Then why'd they get rid of the goddamned esc key on the new MacBooks
I can only conclude that their hearts are full of hate and evil. There's no other explanation really. 
 Having an "@" sign followed by some word is the syntax for adding an attribute to something in swift. You may have to look up what an "autoclosure" is, but having the word is way more descriptive than no word at all. So there really isn't any additional syntax in the way this is currently handled. On the other hand, the `-&gt; Type` really is new syntax for declaring an autoclosure. By knowing the existing signatures for closures, there's no way to infer that your proposed syntax indicates an autoclosure. (For example, it wouldn't be unreasonable to assume that `-&gt; Type` is the same as `Void -&gt; Type`). You just have to know that an arrow without anything before it creates an autoclosure. It doesn't really matter that `-&gt; Type` is shorter in terms of characters, there's more syntax for a developer to know. (You, knowing Scala, already know this syntax, so it seems simple to you, but it's not simple for the "general" swift developer).
Very helpful thanks. The churn you mentioned is something I'm not fond of in front end dev. I had spent a weekend and built a wallpaper generating app late last year and I certainly enjoyed working with Swift.
I do keep forgetting that the industry is accustom to frequent changes, this is an older mindset of mine where in the past it could come across as indecisive or getting bored easily. Thanks for your advice!
Did my response send to you? I can see it in "my comments" but it doesn't appear in the post when I open it! Thanks!
It kind of is true actually. Programmers get bored easily.
Thanks for the explanation, that makes sense. That's also the reason I posted this story, to get feedback before starting the big effort of writing a proposal :)
ok, thanks for the explanation.
First release published, you can try it out now if you're on High Sierra ;)
Thank you to all of you, I've managed to do it after a while!
Yeah it's just difficult to tell at this time it would have probably been better to use a collectionview but you may as well continue with how it is, I would colour your views and make sure the scroll view is going the width of the screen, when you layout each of the views in the scroll view did you make them fixed 375x667 or like 0 to supervise ?
Usually sketch, figma, or framer if I need to design a more unconventional interaction.
Just a reminder: you can have private cocoapods which are stored on your git and are only accessible to people from your company
You can build two frameworks separately and use them with $(CONFIGURATION) without stripping ala http://www.addthis.com/blog/tag/cocoa-touch-framework/
I‚Äôm sure he appreciates your constructive and specific insight. 
Yes, it can. Did you have troubles as well?
I used a UIWebView but many people said that it works with WKWebView as well, you just have to evaluate javascript to inject the cookies or send them in the HTTP request.
How would a user not use HealthKit?
Thanks for tip :)
Oh I see. You should probably just make the app unusable at that point. I can‚Äôt imagine a user disallowing HealthKit but being ok with the app storing that kind of data.
Swift 4 &amp; WWDC :)
Okay I'll see if I can get that changed on the specs - also if we want to pull only our data from HealthKit, how would we go about that? Thanks a lot for helping 
Context?
You can query by source, the source being your app. 
I'd love more discussion of how to write the sort of dynamic code that was easy in Objective-C (and Smalltalk -- and lots of other modern languages, like Ruby, Clojure, etc), but which seems difficult-to-impossible in Swift. For example, suppose you wanted to write Interface Builder in 100% Swift today. Is it even possible to serialize/deserialize arbitrary objects with arbitrary fields, whose classes and slots aren't known until runtime? The modern approach seems to be to just say "well, static typing is just Better¬Æ, so hardcode what you need, and disallow the rest", but I for one am not entirely happy with a new paradigm that prohibits exactly the kind of flexibility upon which the platform's success was built. Like everyone else today, I'm making API calls across the network, so even if 100% static typing were desirable (and I'm not convinced it is), it's just not realistic. 
 Alamofire.request(nyTimesURL).responseJSON { response in print(response) } Their documentation is pretty complete, you should be able to figure out what to do from there.
Thanks, I may have to resort to that! Bounds width and height is identical to frame width and height so the code to set them equal is working - I just need to figure out why the bounds are smaller than I'm expecting! If I can figure that out that should be it! 
noticed some diffs having to do with non-strong properties; any major changes coming, or would you say they're just tweaks?
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/3AaKfLc.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djj1i9y) 
I can see your issue, you are making 2 video layers, 1 in viewWillLayout and 1 in playVideo... try ONLY setting the frame in viewWillLayout
You need to keep a reference to the layer, build it in playvideo, then adjust its frame in viewWillLayout
https://stackoverflow.com/questions/8449040/why-use-weak-pointer-for-delegation
Okay brilliant thanks for your help! 
no its because you have 2 layers being made
This is how it should be: Obviously add in your video player code and stuff but this is the layer stuff. import UIKit import AVKit import AVFoundation class ViewController: UIViewController { var videoLayer: AVPlayerLayer? var player2: AVPlayer? override func viewDidLoad() { super.viewDidLoad() buildVideo() } override func viewDidAppear(_ animated: Bool) { super.viewDidAppear(animated) playVideo() } override func viewDidLayoutSubviews() { super.viewDidLayoutSubviews() videoLayer?.frame = view.bounds } func buildVideo() { videoLayer = AVPlayerLayer(player: player2) videoLayer?.videoGravity = AVLayerVideoGravityResizeAspectFill view.layer.inserSubLayer(videoLayer!, 0) } func playVideo() { player2?.play() } } 
added some code in another comment 
As long as you're reusing the cells and managing data correctly I wouldn't worry too much about memory/performance impacts especially not if you're running on the simulator. I've used text views in table cells on multiple occasions with link detection (even custom data detection) and the performance is fine. If you're worried you can share some code so we can help further
Looking forward to playing with tomorrow. üëçüèº
tomorrow i will add some code and screenshots, thank you!
That's awesome! I haven't released anything but I've been making games. I made a Dragonball Z game but having trouble getting license cleared to release it. All my friends who've tried it enjoy it. I'm working on a platformer now and also starting ideas for a arcade style game. Hardest part is doing artwork takes me forever haha I'm like super amateur at it. 
Generally, apps like instagram use TTTAttributedLabel, you basically create a regex and enumerate a string settings callbacks on touching certain things, to make it optimal performance create one complex regex instead of 2+ simple ones.
This! It's such a great course and is great if you know some languages beforehand.
I am learning about ScrollView and Collection View to create better UI for my App.
Not sure if this is relevant, but I wrote an article about he most optimal way to handle links in textviews in cells. Give it a read! https://medium.com/@sdrzn/swifty-approach-to-handling-uitextviews-with-links-in-cells-d89e0e4b83d1
Does it highlight-selected-word ? I wish this natively-supported feature so much. 
I have a similar problem, and am thinking of rotating the table view and cells 180 degrees with the reversed order of items. So it kind of starts at the last item, but since the view is rotated the item is at the bottom, but the item cells need to be rotated as well. Here is the way to rotate a view: https://stackoverflow.com/questions/6813899/is-it-possible-to-programatically-rotate-the-view-by-180-degrees I haven't tried it the entire way, it's still something to do, but should work ;)
Download the html and just use a regex to get the number out. Is this a shitty solution? Absolutely, but it‚Äôll almost certainly work for your use case.
Thanks, this looks like an interesting approach!
Ok, thanks for clearing that up for me :)
okay, thanks
If you're going to do it programatically, why not just use the tools Apple gives you verses some third party framework? 
Back in January I started the swift itunes Stanford course but I only did about three lessons with the calculator app. Now that summer started I have been slowly grinding my way through it and now I'm on lesson 11. I really like that we're making this twitter related app cause it's something I can show off to people. Right now we're learning core data and it seems very tough. But I know it's very powerful and necessary if I want to be a real developer so I'm trying to tackle it. Paul heartegy is a great lecturer and I would highly recommend his course.
OK, full shutdown on Mac and then restarting Xcode worked. Perhaps this is a known issue? https://forums.developer.apple.com/thread/74872
David.Li920@gmail.com
Thanks 
you're awesome 
You need to complete a questionnaire at https://developer.apple.com/contact/network-extension, and then you can use NEHotspotHelper to return a list of hotspots.
Cool I'll look into it. I only have experience with python and swift. But will check out unity. It's an arcade style shooter. I would say Galaga is closest to it 
I think I‚Äôll improve it a bit later today :) would be great if there was support for iOS.
I started my course on Udemy a week or 2 ago and I'm really enjoying it so far. I have zero programming background which sometimes gives me the feeling they're going a bit to fast. But I think if you already have a programming background it's going to be very doable. I'm doing the "iOS 10 &amp; Swift 3 from beginner to paid professional" one. If you're up for it we can add eachother on skype and learn together. GL and HF with learning Swift :)
Don't be surprised if Xcode does not work as expected, this is expected.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/CpqKVpL.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djls741) 
Hey, I think you was meant to merge your code with mine lol, sounds like the layer wasn't being added, if you just added the layer it probably woulda been fine, the key point I was making though was that previously you were making 2 layers
You are still making multiple layers, you make one then make another in play video...
I've been struggling with the same problem for quite a while. But I want to mention that a basic UI that does the job is probably the best. So keeping it simple might actually be a good idea. In my opinion there are two challenges when you want to come up with a creative design. 1. Finding the right colors and making them match with the topic and with each other. 2. Developing an interface design which looks unique and beautiful but still serves the purpose of the app. For finding the right colors I usually visit https://color.adobe.com/explore/?filter=most-popular&amp;time=all. I try to pick a color set which matches the purpose of my app. Also googles color palette may be a good resource for a nice color set (https://material.io/guidelines/style/color.html#color-color-tool). For the second problem I try to get inspired by apps which are already available. Beautiful Pixels seems to be a good place to go for getting in touch with nice interface designs. (https://beautifulpixels.com/iphone/) When I see something I like I will think of a way to implement it within my app. When you have a basic idea of how your app should look like, it does not matter which tools you are using for making it a reality. But when you create an interface please also consider the guidelines provided by apple. https://developer.apple.com/ios/human-interface-guidelines/overview/design-principles/
I'll look into this in more depth. As I say, when I try implement this without repeating the layer code it doesn't function as intended. Watch this space! Regarding your code, I did amalgamate what you suggested with my own code but it didn't work as I'd have hoped!
Thanks!
added the missing line view.layer.inserSubLayer(videoLayer!, 0) 
I'm learning from Apple's own resources mostly, their free 900 page iBook "App development with Swift", and the documentation on their site. The way the book is structured seems to reflect on the concepts Apple promotes through the Swift language itself. 
Just added support for iOS icons per your request.
A web service like Parsehub? It needs to be free because I don't intend to make money with the app.
Cool. I want to work a bit on your app if you don't mind :) I created my own fork and will make a pull request later today so that you can integrate my changes if you want. I'm doing some refactoring right now. Link: https://github.com/tomaszpieczykolan/AppIcons
Do whatever you want, it's WTF-PL licensed. You can even repackage it and sell it on the App Store if you want to make some money. Have fun.
yeah there's no lighting applied here at the moment. This was just a demo was an exercise for me objects to track in 3D space using ARKit. I can post a prettier update in a bit
I'll fix a few things first and post an update
That would be cool. Does ARKit support shadowing real world objects and/or matching lighting?
I just created pull request. I did some refactor and bugfixing. Also changed file naming and now the app renders just for selected platform (if you don't like this feel free to revert!)
oh, I was suspecting that. I was hoping the device could be able to record movies from AR live events... :( Thanks
the image is broken... :( raised to infinity
&gt;:( [Here is a picture of a kitten to cheer you up](https://i.redd.it/x3kdiz7u9u2z.jpg)
Solution 1 would work if you added one moveForward() instruction right after turnLeft() instruction. The reason the second solution works is because it uses two if statements, not an if and an else-if. Else-if statements will only execute if the if statement before it did not execute. So if you take a look at your Solution 1, at iteration #5, the character moves forward because !isBlocked() is true, but then the character stops and doesn't do anything else in iteration #5 because the else if statement will not execute after an if statement is executed in that iteration. Solution 2 solves this by having the character moves forward once in iteration 5, and then while still at iteration 5, the character turns left since the second if statement can execute (which works because it's an if statement, not an else-if). I hope that makes some sense... I'm typing from my iPhone so I might not be writing the best answer.
Thank you! That makes much more sense now. It's counting the turn as an iteration in itself, because of the else if, and that's why it's stops short. Edit: spelling 
I have a follow up question if you don't mind... What is the difference between using if/else if and two if statements?
Can I just share a sample project I threw together? I made it as barebones and simple as possible, so you can easily see how the search bar works with the tableview. EDIT: I uploaded my simple project to github. [Take a look. It'll be helpful any time you want to create something like this in the future.](https://github.com/knakamura13/swift-searchbar-tableview-sample/tree/master)
An else if statement can only be executed if the if statement and all else-if statements before it return false. Basically, if you have an *if* followed by an *else if*, **only one of them can return true**. On the other hand, an if statement can always execute even if it follows another if statement. If that doesn't make sense, take a look at this example: let num: Int = 15 func exampleOne() { if num &gt; 5 { print("The number \(num) is greater than 5.") } if num &gt; 10 { print("The number \(num) is greater than 10.") } if num &gt;= 15 { print("The number \(num) is greater than or equal to 15.") } } func exampleTwo() { if num &gt; 5 { print("The number \(num) is greater than 5.") } else if num &gt; 10 { print("The number \(num) is greater than 10.") } else if num &gt;= 15 { print("The number \(num) is greater than or equal to 15.") } } print("Example one:") exampleOne() print("\nExample two:") exampleTwo() ---- Example one: The number 15 is greater than 5. The number 15 is greater than 10. The number 15 is greater than or equal to 15. Example two: The number 15 is greater than 5.
Awesome thank you! From here, is it possible to populate that array with object name strings, and get it to add the object that matches that string name to the table? So I search for the name of something, it finds it, but it adds the object of the same name to a list?
Yeah, of course! You would replace the *var names: [String]* variable with an array of objects. I do this all the time with arrays of people. So now instead of *names* you use *var people: [Person]*. Then, on the line where you're checking if the search string is in the name of a cell, you instead loop over the array of People and check *if person.name.contains(searchString!) { filteredPeople.append(person) } else { etc...* Lemme know if you have any other questions, but I trust you can play around with it and make it work once you have an array of Objects instead of just the array of Names.
Okay I'll give it a try! And thank you, this is my first project in Swift so I'm a little over my head I feel. I wrote the idea in Java to console thinking it would be similarish except with UI but I was soooo wrong. 
In short, it doesn't. I'm sure you could get around it by doing a green-screen type thing, where everything of a certain color could interact w/ the screen. 
Interesting read! I must say I really like Swift but I honestly wish Apple would put even more effort into it. Swift could really use the libraries and support Python has. Apple is in the right position to move Swift into the world of scientific computing. Swift needs analogs to the likes of NumPy, Pandas and even a good graphing library Having such supported by Apple would entice a lot of researchers into using Swift instead of Python. It is another direction for Swift to move in that isn't on the server per say.
Thank you for the examples. Makes a lot more sense now. Appreciate the help. 
[mp4 link](https://g.redditmedia.com/98zanOoiLcKAEqzzjJYJHGp7lhAZYfpbp4PkosuohqQ.gif?fm=mp4&amp;mp4-fragmented=false&amp;s=b3fb01987a6dcf1df682548e793fbba5) --- This mp4 version is 94.28% smaller than the gif (829.16 KB vs 14.16 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
Code with short explanation: [HERE](https://github.com/RPasecky/CubesInSpace)
Self refers to the current instance of the class, when accessing a property you can usually omit it. Both do the exact same thing. The swift coding guidelines recommend to omit self when it is not needed, though.
Self should be used in 3 instances: When using *closures* (which are similar to objective c blocks), you will need to use it to acknowledge that self has been captured When you are writing init functions to clarify you want to write to the instance variables from the similarly named init parameters When you're assigning self to a variable, such as when assigning this object as the delegate of something else Other than that, it should almost always be avoided so that it sticks out during the closure case.
Ok thanks!
Ok thanks! 
Why should Apple be the one supplying these tools? Scientific programming is a highly specialized niche. You could make the same argument that the Python standard library should include those libraries (actually, in this case, develop their own implementations, which is what you're asking Apple to do), and it'd be just as difficult to justify. Just because it's important *to you* doesn't mean that it's important *to everyone*--and I say this as someone starting a physics undergrad in the fall. Also, that's not how you spell "per se".
That‚Äôs just amazing! I am just starting with ARKit and could never ever recreate something like that! As a beginner, from where do you think I can start in order to understand better the functionalities of ARKit? 
This stuff is only available for 6s and 7 right? Can I do this on 10.5 iPad pro?
but swift.org has downloads for ubuntu?
If by "Run Swift", you mean write swift code that runs on Windows, then yes. https://swiftforwindows.github.io/ If you mean write iOS apps on Windows, then no. 
Yes you can. If you have the iOS 11 beta
Dang
looks great man! quick question though, is ARKit only able to be used with Spritekit, Scenekit or Unity?
If it can be compiled for Ubuntu, it's possible it can be compiled for Windows if you install a GNU dev environment for windows like MinGW or CygWin. I've never tried it however so you're on your own.
Google produced these links: https://www.reddit.com/r/swift/comments/400zab/is_there_still_no_swift_compiler_for_windows/ https://github.com/apple/swift/blob/master/docs/Windows.md
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [apple/swift/.../**Windows.md** (master ‚Üí cb38983)](https://github.com/apple/swift/blob/cb38983f86ba7c236e7f3b22a3fbf327b87d53ef/docs/Windows.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djnc0gz.)^.
The most relevant links seem to be https://swiftforwindows.github.io and http://www.elementscompiler.com/elements/silver/
Only? That seems overly restrictive. Part 3 of your list should be just any case of "you need to refer to self as an object". It also includes putting self in a tuple, passing it to a method, using it with an operator or subscript, using it in an interpolated string, switching on it, and so on. You can also reassign self from a mutating method. You also need self when calling self.init from another initializer in the same type. There's probably several others I'm forgetting.
I would just download some of the other projects on github that come up when you search ARKit. I mention two in the readme for this code. They mostly do a great job of showing how to get started. [Look here for idea inspiration](http://www.madewitharkit.com/)
Those are the only 3 that I personally know of. I think you can build custom engines as well if that's your thing. 
It's my personal pet peeve, so I have to point it out, omitting the 'self' reference is a bad practice, and can cause problems with newbies, and when reading back your own code weeks/months/years later. It's far easier to read and immediately see what's going on when included. Forget what the coding guidelines say, if you're referring to a class element include the 'self' reference. Future you and/or a future dev will thank you.
Most style guides go the other way and say to omit it unless required. I say do whatever is easier for you to read/understand, just be consistent. You can use SwiftFormat in your build phases to enforce the style throughout the source. - https://github.com/nicklockwood/SwiftFormat - https://github.com/realm/SwiftLint
Yeah, I'll put my years of experience against those style guides any day.... I'm sure it's a future tabs/spaces argument.
Hi, I literally did not say only. I said "almost always" as well Signed, Person who said what OP needed to know
No. It is super important to know when capturing self. That is why it should be shown only when necessary.
The github is now updated with a bit more info if you wanna walkthrough of making an app like this
I think another valid point is that Apple is smart and is a for profit organization that only invests money and manpower towards a profitable venture. They‚Äôve done a solid job integrating Swift into the iOS ecosystem and overall culture, and they are making leaps and bounds with it‚Äôs integral role in app development for years to come. At the end of the day, an OOP is an OOP, and scientific research oriented libraries and programming complexities is an effort that is noble but not immediately profitable for an organization like Apple constantly trying to meet investor expectations. 
Yes, you can. I've built several social network-ish apps in 100% Swift.
Yes you can, I build and maintain large scale apps in the education sector. As of this month they are now all in swift, and more stable. White less code.
I was just trying to do this last night!
You most certainly can. If you haven‚Äôt started on either, then you should definitely go the Swift route. Swift 4 comes out soon. You can start using it now if you download the Xcode beta. You can even do server side Swift now which is a really exciting area ATM.
Thanks for your reply. Which learning source should I start with? 
Great work ! 
Hacking with Swift is a good source, and you can always check the Swift book written by Apple self.
Hacking with Swift and the Apple provided book are good sources like @hermanklaas mentioned. I'm personally a big fan of the https://www.raywenderlich.com/ site. They have great articles with great editing on specific topics in iOS. Their Swift Apprentice books are top notch as well.
Great guide! Thanks!
It's creating a string with 3 parts, each with a separate style. And that's how you do it with NSAttributedString, and that's how you work with an attributed string composed of multiple parts of differing style. At the end, you have a single NSAttributedString that you can stick into a label. How would YOU do it otherwise?
This is very cool. You would think that these frameworks will need to add some better tools for content creation to fully explore this sort of thing. Boolean operations on the primitives, for example.
My favorite quote: "What irritates me is when people say classes are bad. Or subclassing is bad. That ºs totally false. Classes are super important. Reference semantics are super important. If anything, the thing that ºs wrong is to say, one thing is bad and the other thing is good. These are all different tools in our toolbox, and they ºre used to solve different kinds of problems. And the bad thing is to say, classes are awesome and should be used to solve all problems, or structs are awesome and should be used to solve all problems. I think a lot of people that say subclassing is bad are reacting to the ‚Äúoverclassification‚Äù of Objective-C."
I'm not a beginner, but I'm no expert either so I don't mind helping you get started. I'm 23 and live in Westwood so lmk if you want to study, I can make time on Fridays/weekends.
Not being a bitch but snapchats UI is a clusterfuck. Maybe I'm just not cool anymore, but as a 33 year old developer and computer engineer I find it hard to use. 
Agreed, it‚Äôs fucked 
You can use SceneKit, SpriteKit and Metal. I guess that Unity and Unreal are built using Metal.
I feel thatr every part of the snapchat app has been done a million times, the only tutorial worth doing is the filters ....
should have used footballs (soccer) :D
You mean the AR? The filters are literally a UIimage extension. 
What parts? I find it pretty alright, if a little bit extraneous. 
It's pretty bad. However, nothing as bad as he facebook UI.
Well, I doubt they use CIFilters and probably use openGL filters, but yes I guess the AR aspect of what people refer to as 'snapchat filters'
Check out [UIMenuController](http://nshipster.com/uimenucontroller/). It's the copy/paste menu that you're used to on iOS. You can even add your own custom menu items.
ok i found this link: https://www.ioscreator.com/tutorials/use-context-menu-with-table-view-tutorial-ios10 perfect solution for me. I just had to disable the selection style in the storyboard and now it looks perfect!
Awesome! I'm doing a project, which takes a lot of inspiration of snapchat. When will you post the next part OP? Super interested in the animations part and thanks for sharing! 
I'm trying to make a scanning application for a project at school... But I'm so confused. I have a database set up and if I search a barcode via url it's there but when I scan it, it just says it's not in the database...? I did have this working but it's just broke now and I don't know what I've messed with to do this :( 
You seem sad :( ... Here's a picture of a cat. Hopefully it'll cheer you up: http://random.cat/i/ODD9FR6.jpg ^The ^internet ^needs ^more ^cats. ^It's ^never ^enough..
&gt; "Why should Apple put in more effort to implement feature X when swift is open source? The problem is that there already is a programming language (+library) that supports that feature. Besides mac/iOS development there is no urgent need to use swift. You can use some other language instead. Sure, there might be some interest to use swift which might eventually result in the community implementing such feature but that takes time, and the quality might not be good enough. Look at the windows support. As far as I know you'd have to use either the linux subsystem or some linux enviroment like Cygwin. The later option doesn't have up to date swift support (their branch is usually behind). This will probably not change in the near future. Althouh Swift has been open source for 1,5 years I don't see much of a community effort in creating first class support for windows.
You should start by checking the actual URL being requested by your app ‚Äì if typing the URL directly works but your code doesn't, you probably got the URL subtly wrong.
Working on this! https://github.com/nathantannar4/NTComponents
yes, you're using swift.
I'm also working through this material. Do you know of any discussion forum(s) for this? Would love a study group!
What?
Are you running the App on iOS 10.3.1? If so I would suggest trying a different version and seeing if that fixes it. - [Stackoverflow link for similar error](https://stackoverflow.com/questions/43211890/mobile-gestalt-support-error-on-ios-app-using-swift) (unfortunately no answers but the comments indicate 10.3.1 may be to blame.
Very helpful! I'm looking forward to the next segment in the series. 
I don't remember where or when this was, but Snap's CEO Evan Spiegel once said that the UI is constantly updated and made confusing on purpose. Snapchat intentionally tries to make UI updates and changes in an effort to make users feel as though they are getting the best, latest, and greatest new features, when in reality, all they added was a new option to draw with emojis, for example. But, combining a tiny feature with some UI updates, the users feel like they have the latest and greatest social media features.
Whats the url you're trying to get?
Maybe subclassing? And using drawing code?
Have you tried sending the api stuff in the header? It is often the way to do so
Have you already looked through the https://github.com/danielgindi/Charts API? I've used it rather extensively and it _usually_ has what I need. That said, I did need a stacked horizontal bar chart like what you're describing (a year ago) and it wasn't something they offered (that I was aware of) so I just built it myself. That said, maybe this has been added to the lib since.
Here's another great resource for landing an Apple feature: [App Masters](http://www.appmasters.co/how-to-get-featured-by-apple-with-a-cold-email/) I've learned most of my marketing skills from Steve Young, and I'd highly recommend you check out his podcast and blog. (Not affiliated just a recommendation) 
I quickly came across this in my research. And I discarded it just as quickly, as I noticed that it didn't offer what I was looking for. But if it's the way you describe it, I will have another look at it! Do you have any documentation of how you got to build your stacked bar at the time?
In your book class change var books: [Book] = [ Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] to var books: [Book]!, and then within the init I would actually set books = to the above. I think that's the issue, it's trying to initialize the books before a book is initialized. 
Thanks for your response! I changed the Book.swift file to the following: class Book { var title: String var author: String var books: [Book]! init(title: String, author: String) { self.title = title self.author = author books = [Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim")] } } Is this what you meant? This didn't fix the issue, unfortunately...Thanks for your time anyways!
It's not so weird. The only thing is that parameters have labels and you can ~~override~~ overload methods not just by varying types but by varying labels. (actually I'm not sure about the ~~override~~ overloading here but I think the label is part of the function's signature).
Yeah, just took a closer look, try moving var books = [Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim")] to the top of your view controller, instead of within book. var books shouldn't be in class Book really, see if that works.
Hey - I think that the issue is that "books" is not in the scope of your view controller. You need to have an instance of the "Book" class in your view controller. The other issue is that your "books" variable should be a class variable, if you want it to be the thing initializing the books. Change to : class Book { var title: String var author: String init(title: String, author: String) { self.title = title self.author = author } static var books: [Book] = [ Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] } Then, in your cellForRow function call Book.books to access the two initialized books. Essentially, the difference is one between instance variables and class variables. Instance variables are variables of specific instances of a class, while class variables are called on the class itself. Hopefully this helps! 
While moving both "var books: [Book]!" &amp; "books = [Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim")]" outside of the class did get rid of the "unresolved identifier" error in the BookTableViewController.swift file, I got an error on the line "books = [Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim")]" saying "Expressions are not allowed at the top level." Any ideas?
Hi! Thanks for your response! I moved the entire class into the BookTableViewController.swift file under "class BookTableViewController: UITableViewController" -- this got rid of all of my errors, but when I ran the application, my table view was blank. Here's my BookTableViewController.swift file: import UIKit class BookTableViewController: UITableViewController { class Book { var title: String var author: String init(title: String, author: String) { self.title = title self.author = author } static var books: [Book] = [ Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] } override func numberOfSections(in tableView: UITableView) -&gt; Int { return 1 } override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { if section == 0 { return books.count } else { return 0 } } override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "BookCell", for: indexPath) let book = Book.books[indexPath.row] cell.textLabel?.text = book.title cell.detailTextLabel?.text = book.author return cell } } I didn't know where you wanted me to add Book.books -- I added that in line "let book = Book.books[indexPath.row]", however, this still resulted in an empty table (though with no errors / warnings). Any ideas?
I recently added nickname collision resolution and channel key support to [OrangeIRC](https://github.com/ahyattdev/OrangeIRC), an open source and Apache 2 licensed IRC client written in Swift. 
Correct, it's not even overriding, different parameter labels make it an entirely different function. 
"text field, should change characters in (range), replacement string" 
Just finished an EDI Mapper, a Randomizer, Altcoins ticker, and an AppIcon Generator. I'm on a roll and looking for a remote job. https://github.com/kuyawa/Altcoins https://github.com/kuyawa/EdiMapper https://github.com/kuyawa/Randomizer https://github.com/kuyawa/AppIcons
Currently working on biggest update ever to my game. Working on an all new store section and the inclusion of monsters into the game! You can check it out here! ‚Ä™https://itunes.apple.com/us/app/gravity-mr-blocks-downfall/id1212146483?mt=8‚Ä¨
After creating apps since 2008 and some of them reaching #1 on Photo and Video for weeks, and after that keeping on the top 50 for months in dozens of countries, it is not enough to have a good app and comply with the rules. It is being liked by a hand full of people that review the apps. In other words, you have to please a small group of reviewers and that is something completely objective, meaning that no rule you make you be pleased by them. If you create an app that is downloaded millions of times, like mine, but they don't like what the app is about, even if the app is outstanding, they will not feature you.
Working on a very cool creative writing app, if you are interested you can visit www.cursyv.com It‚Äôs still in development :) Hell even that website is still in development!
Does "Hacking With Swift" include videos?
In the new app store in iOS11 there's a form where you can message Apple to check out your app
Just downloaded it! I‚Äôll report back with my opinion:)
method overloading or function overloading, is the term you are looking for.
I think he includes some practice questions on videos for the paid version. If you do just the free version he only includes texts and graphs for you. 
Please do! 
Would you like any assistance with the website? 
Think of how this will read at call site. let range = ... let myTextField = ... let newText = ... textField(myTextField, shouldChangeCharactersIn: range, replacementString: newText) 
What if you create an app that predominately features the API from a competitor. Like Spotify? 
what do you mean? I cannot answer that but If you create something that compete with them or somehow expose some weakness of them they will not feature you. In fact they will destroy you. As soon as iCloud was launched I created an app that was basically what iCloud Drive is today, but better. I got approved fast and the app reached top charts, then I had to fix some minor bugs and upload a new version. Then the nightmare started. Someone noticed my app down there and started imposing conditions for approval. They never said that but it was obvious that they realized that the app was filling an iOS weakness (that was the ability at the time to exchange files with iCloud) and exposing a weakness of MacOS too, that was the ability to exchange files with iOS devices. To make the long story short, they forced me to change the app to make less evident that the app was filling a spot that both iOS and MacOS were not able to deliver out of the box at the time. Obviously I refused, because that would destroy the app and I was never able to upload a new version again. 
Hey in your original code I believe your problem is you have no instance of your "books" array. In the Book.swift file try this out: class Book { var title: String var author: String init(title: String, author: String) { self.title = title self.author = author } class func generateBooksArray() -&gt; [Book] { var books = [Book]() books.append(Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel")) books.append(Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim")) return books } Then in your BookTableViewController.swift file, add books = Book.generateBooksArray() And now you will have an instance of that array anywhere within your BookTableViewController.swift file. Basically what it's doing is creating a function to add those two Book elements to an array, then since you return that array you can use it in your BookTableViewController.swift file. Lastly make sure you have outlets to the labels you are changing. And in the numberOfRowsInSection function, all you need to do is return books.count, it won't give you an error but you don't need to type all that other stuff out since you only have one section. Hope this helps! If you have any questions let me know!****
Why use this over `fatalError("Unreachable")`?
Perhaps you can also use the depth info of the 7 Plus camera, or some other ML depth-tracking technique.
So for example I have found this guide, and this seems like the thing I am thinking of. https://www.raywenderlich.com/110393/auto-layout-visual-format-language-tutorial So I think that I should just use this as the way I am creating my view, and then update the labels and such when information has been received.
You're welcome to point your pet peeve out, but you'll have to give me some really good reasons why it's "far easier to read and immediately see what's going on". You can't just assert that and proceed to ignore Swift conventions. I don't want to be mean, but I think your "years of experience" argument translates to "I've gotten used to it, and don't want to change my habits".
What version of iOS are you targetting? if its 9 or up I would use the anchor style, e.g.: `someView.topAnchor.constraint(equalTo: anotherView.topAnchor).isActive = true` IMO its a shitload nicer than the visual format language As for where you would do this, interface builder is one option (avoids setting up the constraints in code at all) but if doing it in code then `viewDidLoad` is most likely where it would go (it could be `loadView` as well, if the view hierarchy is setup there)
If you have a controller subclass, `viewDidLoad` is where you add any customisations to your view (including constraints, if you choose to create them in code). If you have a UIView subclass, create your constraints in `updateConstraints`. Beware that this method can be called more than once, so if you have "static" constraints which don't change (which is usually the case), make sure to only create the constraints once (I add a variable `private var requiresConstraintSetup = true` to my views, check if it's true in `updateConstraints`, and then set it to false once I've created my constraints). For creating your constraints in code, also have a look at the anchor-based API for Autolayout, if you haven't yet. It's a bit more verbose than VFL, but the compiler can catch more errors. It'll read something like this (to make the centers of two views equal to each other): `view1.centerXAnchor.constraint(equalTo: view2.centerXAnchor).isActive = true`.
I am not targeting anything particular but 9 and up would be fine. So in the example given you set the top anchor (the middle of the top line I suppose?) to be the same position as the "anotherView" top anchor position? Lets say I have this layout I want to realise (not the one I am going with though, just an example) [image](https://cdn.dribbble.com/users/21845/screenshots/2341434/4_3.png) Then I would have the top view that would have a top left anchor which would be equal to superview.topLeftAnchor (don't know if topLeftAnchor is a thing). But how would you deal with the other constraints? Would the be placed according to the superview, or the views above it? A nice guide would be equally as helpful. If you know any :)
topLeft isnt a thing, so you would align top and left separately, e.g. for the "London, UK" part I would do something like this. Aligning to topLayout guide helps to avoid the status bar or nav bar if it exists, then align the leading edge. I added a constraint to trailing to prevent the label from overlapping the right edge but that might not be needed. Height is provided by the content size class ViewController: UIViewController { let placeLabel: UILabel = { let label = UILabel() label.translatesAutoresizingMaskIntoConstraints = false label.text = "London, UK" return label }() override func viewDidLoad() { super.viewDidLoad() self.view.addSubview(placeLabel) placeLabel.topAnchor.constraint(equalTo: self.topLayoutGuide.bottomAnchor, constant: 10).isActive = true placeLabel.leadingAnchor.constraint(equalTo: self.view.leadingAnchor, constant: 10).isActive = true placeLabel.trailingAnchor.constraint(lessThanOrEqualTo: self.view.trailingAnchor, constant: -10).isActive = true } }
So with these constants you are creating a label which has a margin of 10 to the top, left, and right? really nice example btw. Really helpful!
There's a quite fundamental misunderstanding here. Look at your class `Book`. Initially, it has the properties `title` and `author`. This makes sense, a book has both a title and an author. But then, in step 6, you add another property, called `books`. This does not make sense, for any normal type of book at least. A book does not have "books" in the same way it has a "title". Basically, you're saying that a book contains two books. And each of those books again contains two books, and so on, to infinity. Turtles all the way down. What you probably do want to do is to say is that your BookTableViewController has a property called `books`. This makes sense: It's very reasonable something that displays books in a table has an array of books. To do this in code, just move your `var books: [Book] = ...` line to the BookTableViewController class. 
yeah, there are also layout guides for center, so for example the main weather label you would align leading and trailing, and do this to center vertically: `weatherLabel.centerYAnchor.constraint(equalTo: self.view.centerYAnchor).isActive = true`
Sorry to hear that I‚Äôve had so many times where Apple made me change something after it had been approved before. very annoying
&gt; Do you have any documentation of how you got to build your stacked bar at the time? Oh boy. You're really testing my memory here. If I remember correctly I simply adjusted the width constraints of X number of `UIView` segments. I believe my requirements were a set number of segments so I didn't need to work out anything too dynamic. Mostly done programmatically. 
I think I'll give that a try. Thanks!
Working on my new app: Virtual Trees (working title) A location based massively multiplayer tree planting simulation: - Walk around and collect Seeds near you - Plant Trees! - Take care of your trees and watch them grow. - Visit other people's trees, and leave messages on them. - Find rare seeds &amp; other goodies along the way https://gfycat.com/ContentLightAlligator --------------------- Quick Update: Website is up: [www.naturilla.de](http://naturilla.de/) Naturilla is the app name Some screenshots from the website: [Map Screen](http://naturilla.de/img/screenshot1.png) [Seed Collect/Loot Screen](http://naturilla.de/img/screenshot2.png) [Plant Tree Form](http://naturilla.de/img/screenshot3.png) [Inventory / Backpack](http://naturilla.de/img/screenshot4.png) 
I agree. Totally annoying and specially annoying when you feel they are inventing a reason out of thin air to reject you. It was clear that to me. Even friends of mine told me "I was surprised that was approved in the first place, because this is something that should come with iOS"... :(
You seem sad :( ... Here's a picture/gif of a cat. Hopefully it'll cheer you up: http://25.media.tumblr.com/tumblr_luwzb9lH7A1qzrlhgo1_250.gif ^^The ^^internet ^^needs ^^more ^^cats. ^^It's ^^never ^^enough..
Rock it! You got this.
As far as I understand it: The first parameter name (_, shouldChangeCharactersIn, replacementString) are external. You will see them when you call the method. The second parameter name (textField, range, string) is internal. That's how they're referred to inside the method. The _ parameter means it's unnamed, and won't show up in your call. Everything after the colon are type declarations. One of the reasons for this is readability when calling the method. Using external parameter names allows us to better understand the purpose of a method, and the internal ones allow for easy readability inside the method. let range = ... let myTextField = ... let newText = ... textfield(myTextField, shouldChangeCharactersIn: range, replacementString: newText) Reads a lot better than: textField(textField: myTextField, range: range, string: newText
In bocca al lupo!
This pizza! Is it from "The Crust" in Naples!? :D
Added an explanation [here](https://github.com/nvzqz/Unreachable#unreachable-vs-fatalerror). Basically, `assertUnreachable()` will behave the same as `fatalError()` in debug builds but will allow the program to be further optimized when compiling with optimizations.
My main tip for getting featured: find your local worldwide developer relations person at apple, contact them and tell them about your app. Especially out of the US, these people want to promote locally made apps, even if its not broad appeal you might get a regular banner in a category page or something 
&gt; to build apps that make use of sophisticated, stable algorithms What does that really mean? Swift is more precise in expression of logic than Objective-C but Objective-C can use C which allows for the fastest code possible. If you are an advanced Swift programmer you will use a lot of methods coming from functional programming, prevent mutable states and exploit all goodness that enums and switch / case give you. The logic flow in my applications is really tight because I force it to be so. I can do the same in Objective-C but I need to do a lot more pre- and post-checking, write a lot more code and deal with optionals all of the time while in Swift it's much easier to limit the the things that can go wrong. "If it compiles it works" is more or less possible in Swift if you have a certain discipline, in Objective-C things are never that tight.
I've been working on a new Podcast app for macOS. Using Xcode 9 and Swift 4 and loving it so far. One of the best betas I can remember!
Wow. Yeah I am working on a social music platform. But am worried that since it predominately uses Spotify instead of Apple Music that they will just ignore it and not allow it to climb the charts. Trying to figure out if I should put more time in it or not. 
Working on week 2 of the Stanford CS193p course and reading The Swift Programming Language. I decided to look at Swift on a whim last weekend and I'm really impressed by what I've seen so far. I've never understood Optionals in Java like I have in Swift. Multi-case statements, pattern matching, type safety &amp; inference, computed properties, enums with associated values, unicode support etc are neat features and I just got started! 
Also put together a quick iOS demo for using UIViewPropertyAnimator that also visualizes the curves and shows an animation for each. https://github.com/gdavis/GDI-Animation
I hope you write up something about your experience ‚Äì I'm really curious what's in the test!
I don't know about that but if what you do start to compete with Apple better do 3 things: 1. create an app they cannot call as similar to theirs or you will be blocked. 2. offer something theirs don't or they will say your app has no value for the app store... irony for a store polluted with fart apps... 3. if the app has something that is genius, build a large base of users and profit as fast as possible, before their next version, because they will rip the functionality of your app and incorporate it on iOS. See the flashlight and the night shift? They started as apps. [see this](http://www.idownloadblog.com/2016/01/14/f-lux-responds-night-shift-ios-9-3/). In my opinion these guys should sue apple. If you create something genius, register your shit, so you can act if someone rips you.
I did as you told, and still got an empty table view (though with no errors). I went through the process again and noticed that while my prototype cell's reuse identifier was present, my tableview's custom class (which I would type in to be "BookTableViewController") would always disappear as I entered the text, and the default, gray place-holder text of "UITableView" would fill the textfield. Could this be the root of the problem?
Good article. Using enums to hold state and relevant data for it is a great use of swift features. 
Not sure what that is, but running any kind of web service that isn't already provided will cost some money since you'll need to pay for hosting and compute time. You can use AWS for free for a year as long as you stay within their window, others are fairly cheap as well. Heroku charges $7 a month for their basic hosting.
Yep, alright so generally speaking nested classes are unnecessary and kind of confusing. I'd recommend undoing that and separating your BooksTableViewController and your Book class. Your cellForRow function actually looks fine. The issue now is that your numberOfRowsInSection function still references the ```books``` variable. Change this to ```Book.books.count```, and you should be off to the races. The fundamental issue here is an understanding of what scope is in iOS. When you create a new class with stored variables and properties, what you are actually doing is creating a *template* from which you can create associated objects. For example, you have a Book class. This is great, but when you tried to reference ```books``` (a variable from the ```Book``` class) on a view controller, the compiler didn't recognize what ```books``` was. As far as the view controller is concerned, it doesn't see any *objects* in it's scope [meaning defined within the ```BookTableViewController``` class] with the name "books". I advised you to go about this by changing ```books``` from an *instance variable* to a *static variable*. This difference is important: *instance variables* are accessed on already created objects. For example, to access your "books" variable on the "Book" class, you would need to initialize a Book object first. For example: let newBook = Book(title: "This is your book title", author: "I wrote the book") let allBooks = newBook.books // NOTE: This is how you would access "books" if you DID NOT implement it as a static variable. A static variable (or a static function, for that matter) is accessed on the *class* level. So instead of accessing a variable on an instance of a specific class, you can access it *on the class itself*. These variables exist independently of any specific instance of the class. For example, you would access your "books" variable by now writing: let allBooks = Book.books //NOTE: This is how you access "books" if you implemented it as a static variable. The reason that I suggested changing "books" to be a static variable is because if you think of the *class* ```Book``` as a template, it doesn't seem like it makes a lot of sense to create a list of new book objects through a variable on an already existing book object. This type of functionality is confusing. However, if there are a finite number of books that you want information about, then storing all of their information in a static variable that can be accessed throughout your application is perfectly fine. In summary: * Move the Book class back out of the BookTableViewController, and make a mental note to avoid nesting classes, generally speaking. * In your numberOfRowsInSection method on your BookTableViewController, change the ```return books.count``` to ```return Book.books.count``` * Understand what scope means in iOS, and what the difference between instance and static variables is Hopefully this helps! Let me know if you have any other questions. 
I hope that I managed to explain what's going on, if you just copied the hint of the last line that wouldn't be so good. About your problem, it's again a basic misunderstanding: A UITableView is not a table view controller. A "...View" class displays something. In the case of UITableView, it displays a table of some sort. A "...Controller" class "controls" the view, that means, it gives data to the view (e.g. sets a label's text to the title of a book), and handles logic (e.g. controls what happens when a row in a table is tapped). So what happens is that interface builder doesn't let you set the table view's class to your controller, because that does not make sense. A controller is not a table view. You could write a custom table view subclass, and change your table view class to that, but that's very rarely necessary. What you need to do is set the view controller's class to BookTableViewController (you can do that in interface builder by setting the class of the top-level object, that is usually the view controller). You also need to set the controller as the table view's delegate &amp; data source.
daje!
So what are you doing after graduation? Have job offers yet?
That pizza looks amazing. Also, good luck! You got this!
Tbh the test was really easy - Im waiting for results, but it took me maybe 10 minutes of the given 60.
Well if I'm accepted I won't graduate until somewhere in 2018, so it's a little early for that.
Don't want to say too much because they're testing until the 10th, but you can check out Annex A section 3 on their website (https://www.developeracademy.unina.it), link at the bottom. In general it was more about basic OOP principles, some design concepts, and logic. I could write up a little thing about how I prepared, HwS was a big help!
No it's from Alberto's on Via Ferdinando del Carrretto. To be fair, you have to really try to get a bad pizza here it seems.
Thanks! I think it went well.
Nice! Good luck! 
How would you work with those variables in your examples?
How was it for you?
I'm currently reading App Development with Swift and going through a [Udemy Course](https://www.udemy.com/ios-10-xcode-8) with Aaron Caines.
Working on my BIG update: üìä InstaMetrics, the best app to show your Instagram stats. Fully created with Clean Architecture. It helped me to reuse different layers and create also the macOS app just creating a framework (sharing the same code across cocoa and cocoa touch) iOS app: https://itunes.apple.com/us/app/stats-for-instagram-instametrics/id1197883687?ls=1&amp;mt=8 macOS app: https://itunes.apple.com/us/app/metrics/id1214689455?ls=1&amp;mt=12 Some cool pods/frameworks I've used: IGListKit, RxSwift, Cartography, SwiftyStoreKit, Firebase, Crashlytics, CocoaLumberjack, etc. I'm gonna create some posts explaining all the things I have learned!
* You could write a switch-statement with a case for every type they could be. The nice things about or-types as opposed to using protocols is that their switch-statements can be exhaustive, just like with enums. * You could cast them to a single type, like so: func foo(bar: Float | Double) { let bar = bar is Double ? bar : Double(bar) // from now on, bar is determined to be a Double } * You could write if-statements and guard-statements like `if foo is Int { /* the compiler now knows foo is an int within this if-statement */ }` or `if let foo = bar as? Int { ... }`. * There's probably more you can do, I don't know yet. Their advantage over enums is that they're less verbose, because you don't have to write names for the cases. Their advantage over function overloading is that with function overloading the amount of functions you need to write to cover all cases can grow exponentially. And their advantage over protocols is that protocols don't guarantee that your variable will be one of a very specific set of types. ## edit How the hell do you make reddit format multiline code inside of a list correctly?
No lol, this doesn't make sense at all and you can just use Any Or AnyObject for whatever you might use this for. Then you could use "if this is kind of class..." to determine the logic.
There were posts about study groups recently on this sub, you'll most likelly find it through the search function or going back a few pages :) 
&gt; No lol, this doesn't make sense at all and you can just use Any Or AnyObject for whatever you might use this for. Then you could use "if this is kind of class..." to determine the logic. That's way worse than what I'm suggesting. Because I'm talking about the case when you know absolutely sure that you only want to accept a **very specific set of types**. So since I know that for sure, I want the compiler to be able to enforce that. As soon as you use `Any` you get zero help from the compiler.
I see what you're saying, but it's not possible. What is possible is to declare something as anyobject. Then just use a switch or something to determine if it's this class or that. 
Pretty similar, took me about half an hour I think. Wasn't too difficult, we'll see. 
Thanks for asking really! We‚Äôre actually two persons doing the app and we kind of like making it and the things around, I‚Äôll send you a PM though!
I've done it using Firebase and JSQMessageViewController. Works well for me!
 &gt; The problem is that there already is a programming language (+library) that supports that feature. This is an entirely unrelated discussion. What you are describing here is not a problem. I don't see what relevance this point has to the discussion of *Apple* providing scientific programming tools for Swift. &gt; Look at the windows support. Do I have to? Windows ruins everything forever.
Oh, cool! I'm glad to be of assistance :)
&gt;:) I am happy that you are happy. Spread the happiness around. [This doggo demands it.](http://cdn-www.dailypuppy.com/dog-images/cecelia-the-poodle_64452_2012-02-14_w450.jpg)
:) | Mods, please ban this bot and /u/doggobotloves you. Help us fight spam across reddit /r/antidoggobot ^pm ^me ^to ^get ^your ^subreddit ^blacklisted 
I love John Sundell's blog. He posted solid articles very often. 
Did you downvote me? Just curious why I went out of my way to help a stupid asshole when what you're trying to do makes ZERO sense. Christ learn to architect an app, you have way more problems than determining what kind of object something is. Also use the deep web for "drug sourcing", I honestly (not even being facetious) can't think of anything stupider than buying illegal drugs on the open web under a reddit username like you're trying to do (other than also connecting it to my OKCupid profile). Here's a life pro-tip, get an adderall prescription, you desperately need it, you're so far behind this programming game you're gonna get run the fuck over by us professionals. Also don't be such a dick when someone goes out of their way to help you, it's infuriating. EDIT: maybe try some dmt instead of your pussy 2cb which only produces insufferable assholes that think they're enlightened.
2cb is for faggots you fucking dickhead. 
I completely disagree with /u/trump_is_precedent - there are a wealth of reasons that a user might choose not to use HealthKit. But even if there weren't: iPad doesn't support HealthKit. So if you want to ever consider supporting iPad (or any of the other reasons that HealthKit isn't available) then HealthKit only isn't the way. Even if everyone did use HealthKit you'd still want to seriously consider using your own database: the data types and structures in HealthKit can be restrictive and might not correspond with your business requirements. I'd definitely suggest using your own database where relevant objects store a reference to their HealthKit object, then use a few lines of logic to update the HealthKit data store when you insert/update your main database. CoreData is a fine solution, but you could go with Realm etc. as well. (But be sure to check data protection laws if you're doing something cloud based)
Just published my first app! Please check it out. https://itunes.apple.com/us/app/reflection-cards/id1254906833?mt=8
Dude, I did not downvote you. Calm your tits man. ### edit Regardless of who down-voted you, I'm honestly shocked anyone could become so damn furious because of 1 downvote. I hope you read this before you decide to make my life miserable, because I imagine you could.
How has The MacBook Air been in the development path? I mean... Is the air enough for development?
The only reason it's not possible *now*, is because it's not a language feature *now*. It totally could be. Other languages have it too, so that kinda proves it's not impossible, right?
&gt; This is an entirely unrelated discussion. What you are describing here is not a problem. I don't see what relevance this point has to the discussion of Apple providing scientific programming tools for Swift. It's not only about scientific computing. It's about areas besides iOS programming in general. If Apple wants the same thing as Lattner (Swift's "World domination") then they have to provide some solid foundation on which the community can build upon. The package manager was a start and the concurrency rework will be nice, but that will probably not induce the community to push Swift beyond iOS/macOS (+linux server), &gt; Do I have to? Windows ruins everything forever. Windows is the most used development enviroment. How are people supposed to get in touch with Swift if they can't even try it out on thier machine? For about every other programming language you can just go to their website and download an installer for the compiler (+toolchain)...
You can make your own classes if you want.
&gt; but unfortunately I forgot when exactly I missed them. Sounds like "or-types" are not that useful afterall. :) I can't think of any useful case either. It never occurred to me to have a single function that should handle multiple very distinct types in the same way. For not so distinct types we have protocols. 
Or your own OrType. struct Or&lt;X, Y&gt; { let x: X? let y: Y? init(_ x: X) { self.x = x self.y = nil } init(_ y: Y) { self.x = nil self.y = y } func value() -&gt; X? { return x } func value() -&gt; Y? { return y } } let string: Or&lt;String, Int&gt; = Or("FooBar") let int: Or&lt;String, Int&gt; = Or(42) func doTheOrTypeThing(or: Or&lt;String, Int&gt;) { if let string: String = or.value() { print("String: \(string)") } if let int: Int = or.value() { print("Int: \(int)") } } doTheOrTypeThing(or: string) doTheOrTypeThing(or: int) 
I want to get started with learning Swift and trying some things, but I don't know what types of apps I can try making yet. To learn, I'm currently using [this website](https://www.airpair.com/swift/complete-guide-to-swift) and a book about Swift, but I'm struggling on what I can work on this summer. 
&gt; Other languages have it too Which ones?
Typescript for example
Hi LisaDziuba! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because ‚Äì generally speaking ‚Äì compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6l2poy/core_image_for_swift_book_is_available_for_free/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Goodluck 
Good luck! And, your pizza look fabulous!
Working on an "import from website" feature for my grocery shopping list app. https://pivotlistapp.com/ : ) (Parsing an HTML page to extract recipe ingredients is proving pretty challenging. `NSRegularExpression` helps a lot though!)
About your last function signature example: your function signature is short in comparison to the number of overloads, but how would the implementation look? It's not really possible to use an or-type directly, except for a function that accepts a more general or-type, but in the end, you always have to switch on it or check it's type to actually do something. So it's pretty likely you'd get something similar to the overloads (in amount of code) in the implementation, just as a huge 3-level nested switch structure. And I personally like that less than the overloads. I think enums cover or-types well enough. I didn't have a problem with enums being too verbose so far. Edit: Also, those types are called "sum types" (or tagged union, variant, variant record, discriminated union, disjoint union according to wikipedia), but not "or types".
Bots are taking over!
Sweet you get a water bottle?! Time to finish my machine learning ND. 
Good luck, you got this! :)
Man that Air has seen some days. Break a leg!
I was asked my shirt size after the course. They sent a water bottle, though! The machine learning course looks awesome. 
Probably you've suffered from JavaScript syndrome not long enough ago. Seems like a pattern coming from weaker typed languages. But I can imagine you want to pass in some kind of value to a generic method for getting stuff by an ID. And the ID can be either a GUID string or an int ID. So you need to make only certain types worthy of being an ID. In this case you create the Identifying protocol and extend String and Int implementing Identifying. Doesn't need to do anything, but I guess whatever you tried to do in the switch case on type is better implemented as a function on the protocol. -------- Wow Reddit really wants you to use that app....this mobile site doesn't even have double click guard
Congrats on finishing the course! I'm at about the halfway point myself. May I ask about how long it took you to complete? I'm finding that I'll get through a large chunk of the material and then step away for a few days and then return. I wish I had the focus and mental stamina to just knock it out over the course of 30 days. 
Thanks! fixed.
I like parts of it, but it's really weird curriculum. Some quizzes are way too easy and some are really challenging. My employer is paying for it so it's not bad, but I feel like I'd be slightly disappointed if I was paying $200/month for it. 
I dig the simplicity. I do not like that my fingers hide the bottom (which I need to see what‚Äôs coming), I tried moving them upwards so they don‚Äôt hide the bottom and it worked well although it feels less ‚Äúnatural‚Äù. I am not sure how the things I collect affect my score nor what they actually are haha, and I still need to figure out how to get extra lives! Overall a it‚Äôs a great little game. I do not feel compel to play it on a regular basis, maybe the challenge isn‚Äôt just there as it‚Äôs a tad repetitive with no moment of intense satisfaction; adding monsters or other game mechanisms might change that. Playing a bit with the map could go a long way as well I think. Good luck!
Thank you so much once again for such a detailed response. I appreciate your time and effort very much. Unfortunately, I still haven't got it to work. By that I mean while there are no errors, the presented table view in the iOS Simulator is empty. I did as you told -- Here's my Book.swift file: class Book { var title: String var author: String init(title: String, author: String) { self.title = title self.author = author } static var books: [Book] = [ Book(title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] } And here's my BookTableViewController.swift file: class BookTableViewController: UITableViewController { override func viewDidLoad() { super.viewDidLoad() // Uncomment the following line to preserve selection between presentations // self.clearsSelectionOnViewWillAppear = false // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem() } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } override func numberOfSections(in tableView: UITableView) -&gt; Int { return 1 } override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { if section == 0 { return Book.books.count } else { return 0 } } override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "BookCell", for: indexPath) let book = Book.books[indexPath.row] cell.textLabel?.text = book.title cell.detailTextLabel?.text = book.author return cell } } I've made sure the tableview is connected as a delegate and a data source. Though, the custom class for my tableview is blank -- could this be an issue? I want to thank you once again for helping me understand this whole system at a much deeper level, and thank you for tolerating my questions which only seem to change ever so slightly. Thank you. 
Yes, you did a very good job of clarifying what I originally misunderstood. I thank you for that. &gt; What you need to do is set the view controller's class to BookTableViewController I don't have a "view controller" in the default sense, nor the file ViewController.swift. I have a navigation controller, and a table view -- what should I do in this case? I really appreciate the time and effort you are putting into helping me understand this whole system at a much deeper level, and want to thank you for tolerating my questions which only seem to change ever so slightly. Thank you. 
Don‚Äôt worry! The update in September will fix all of that! The chips you collect will be used as in game currency. You‚Äôll be able to buy lives and Armor. Oh, did I mention Monsters are also going to be in the game play. Haha. I‚Äôm rebuilding the game to give it challenges and give it a reason to collect things. What you have, is an outline of what I vision. You and everyone else will love what‚Äôs coming! Thanks for the input my friend! 
I'm finally doing a course, trying to properly get my head around Swift (and application development in general). I'm doing the iOS 10 course by Rob Percival (to put into context how long I've been putting it off, his iOS 8 and 9 courses are in my Udemy account and I never looked at them). I'm enjoying it though! A bit overwhelming at points, but I'm remembering a lot of things/concepts that had gone over my head before.
It's something that's been discussed on Swift Evolution before. See the [commonly rejected changes](https://github.com/apple/swift-evolution/blob/master/commonly_proposed.md) list: &gt; [Disjunctions \(logical ORs\) in type constraints](https://lists.swift.org/pipermail/swift-evolution-announce/2016-June/000182.html): These include anonymous union-like types (e.g. (Int | String) for a type that can be inhabited by either an integer or a string). "[This type of constraint is] something that the type system cannot and should not support."
That's an expensive water bottle...
"C# 60 in a nutshell" *10,000 page book*
Thank you! It ended up taking me about 6 months. It definitely can be finished faster if you stay consistent and focused. It's easy to wander off sometimes. 
Not for real world projects. Xcode and SourceKit will boil your MacBook Air
Glad to help then! In your OP you write that you have a "class called BookTableViewController as a subclass of UITableViewController". That BookTableViewController is the controller I'm talking about. A navigation controller's task, is (pretty much) to manage a list of other controllers, where you can go forward in the list by "pushing" something onto it (eg. by tapping a contact in the contacts app), and can go back by "poping" the top controller (by hitting the back button). The navigation controller only manages the navigation bar though, the rest of the screen is managed by the controller that is the current page in the navigation controller. One such page in your app is managed ("controlled", if you want) by the BookTableViewController. The view used to display that page is a UITableView. So, to summarise: you can't use a table view with a navigation controller directly. Instead, you have a controller to navigate to (the BookTableViewController). And that controller has a table view that it populates with data.
Ah I see. That makes sense. As you may have noticed in my comments above, I still have not been able to get the table view populated with data. This is extremely surprising to me, as this is Apple's official tutorial I'm following for a basic table view, which, along with multiple suggestions from Reddit, have yet to populate my table view. Do you have any other suggestions as to why the table view may still be blank, despite moving the array to the BookTableViewController.swift file, making sure the data source and delegate is connected, etc.? Once again, thank you so much for your time and effort. This is what really makes Reddit such an amazing community. 
What did you think of Udacity? And what was your background before starting? My gf was thinking of doing one of the courses but doesn't have a programming background 
Here is iBook format: https://itunes.apple.com/gb/book/core-image-for-swift/id1073029980?mt=13
Wait... they send you stuff after you're finished?
I actually confused some guys at the hostel with your Psychic app, so thanks!
My daily driver is a Windows desktop with MacOS VM, but the Air gets the job done. It's not pretty, very frustrating and slow but I'm able to build some basic projects. This one is a late 2010 model so it's on its last legs, I would imagine a later model will get you pretty far. 
Unfortunately that's pretty hard to say without seeing your project... You could try putting some `print`s in viewDidLoad and some of the tableView data source methods to see if the code is executed. (Or, if you're feeling fancy, try out setting breakpoints).
Could I send you my project through Dropbox? Would you be willing to look at my project?
I've completed two Nanodegrees. AMA!
Which ones? And what do employers think of them (based on your experience)?
Beginning iOS Developer Nanodegree and Become an iOS Developer Nanodegree Plus. I just stated applying for jobs so I have no idea what they think yet
Anchors all the way IMO.
Doing this like "takes about 2 seconds" gonna make you cry later. The best way would be to start animation, make call to api, in completion handler stop animation and segue to next vc. You didnt show what animation you want and how you fetch data so I can't provide much more help for now
Do you feel like a ND is good enough to get hired as a programmer, even if you have no prior Comp Sci experience?
Yeah sure why not.
What you said makes total sense, it can be much faster or much slower if the internet connection is insanely fast or extremely slow. Ok, the logic makes sense in my head, but I don‚Äôt really have the knowledge for that right now, I will google it as soon as I can (I‚Äôm on mobile right now) The animation is based on [this one](https://github.com/cfdrake/easy-diceware/blob/master/README.md) (basically a 4x4 grid of emojis, that are being updated randomly from a list) , and the code fetches text from a URL, which I then parse to get the final result. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [cfdrake/easy-diceware/.../**README.md** (master ‚Üí 196e8c2)](https://github.com/cfdrake/easy-diceware/blob/196e8c2b50261573feaa36f44bd96372fc1c9d54/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djrir7f.)^.
This is exactly what map is for. "for" loops should be avoided if you want swifty code. 
 We will have to find out. I think it depends on the availability of developers in the marketplace in your area as well as how those individuals are trained.
On one hand, it's there. On the other hand, I see that map is often used to *transform* and not to collect a bunch of stuff. So I wonder what other developers' expectations are when they see map being used.
Holy shit c# is 60 already? I only barely caught up with 3.0 for a while.
What you're doing is a transform by definition. Anything you do with map is a transformation. If I would be reviewing your code and I would see that for loop, I would reject your pull request. If you're declaring a var, manipulate it inside for loop and then use it, it's essentially wrong. It can and should always be either mapped or reduced to result.
Cool...best of luck!
I got one too when I completed the iOS Developer Nanodegree.
I'll just ask fast here: These courses like Udemy, Treehouse, CodeCademy and Udacity; are they really good? I want to get into Swift development and I still haven't found any free courses that are good and helps me understand the subject.
Your use of map is perfectly fine, and it is a transformation (from a MyObj to a string). I also prefer the use of map, but I wouldn't be as strict with the for-loop version... swift allows both functional and imperative coding styles, so having a for-loop isn't exactly a huge deal. One thing that is a huge no-no is abusing map for `for`-like iteration: var items2: [String] = [] _ = collection.map { item -&gt; () in items.append(item.text) } let control2 = UISegmentedControl(items: items2) Technically works, but it is some real messed up code-gore. Please don't do that, otherwise you're good to go. (/u/poisonedslo probably has a heart attack just seeing this).
6.0?
What exactly is being taught in this article other than click-bait ‚Äúmarketing‚Äù?
Do u have a server or backend already set up to handle pushing those notifications? Or are you just talking about local notifications based that gets pushed by a timer/ date? And by enrolled, do mean the free account? Or the 99$ a year account?
https://www.raywenderlich.com/156966/push-notifications-tutorial-getting-started
Even Swiftier: let collection = [(true,"ja"),(true,"jawohl"),(false,"no")].map { MyObj(enabled: $0, text: $1) } let items = collection.map { $0.text } let control = UISegmentedControl(items: items)
&gt;"for" loops should be avoided if you want swifty code. That's way too far. "Swifiness" prioritizes readability and clarity. You can do some really contrived stuff with functional tools that `for` loops would make abundantly clear. And also for this same reason I'd like to see Swift have Python style comprehensions. There's things you can do with comprehensions that `for` loops and functional methods leave confusing.
If it is an open source library then you should look into supporting one (or more) of Cocoapods, Carthage, and Swift Package Manager (in rough order of importance based on how common they are but if you want it to be cross platform pure swift SPM is probably the best bet) These dependency managers work differently but basically the idea is you provide the code, and some rules about how it needs to be built. As usual, raywenderlich.com has good tutorials: SPM: https://www.raywenderlich.com/148832/introduction-swift-package-manager Cocoapods: https://www.raywenderlich.com/126365/ios-frameworks-tutorial And here is one covering carthage if you want to try that: https://robots.thoughtbot.com/creating-your-first-ios-framework
I believe you may have misunderstood the post.
If you are planning to use a package manager so other users can import your library and keep track of the latest changes then this is my suggestion: 1. Install cocoapods 2. Open Terminal, move to an empty directory and type: pod lib create MyNewLibrary 3. Answer the questions about language and frameworks This will create a template project where you can enter your own classes. Other users will only have to add your library to their podfile and that's it!
The question is literally "How do I create a library". What question are you answering?
Yes they are good. I'm currently on the Treehouse basic plan as I enjoy the freedom of switching topics. Their embedded compiler is helpful to get started and how I first learned Ruby. Udacity's courses can all be accessed for free: [Intro to iOS](https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585) While I enjoy their teaching style a little less than treehouse, they still provide a great curriculum to get started. The main benefit of paying for Udacity is project feedback. I would recommend treehouse for the price and they have a great course on learning Swift. 
No problem - Since you are still having issues getting the tableview to display values, my guess is that there is something amiss with the cell itself. Adjust your cellForRowAt function as follows : override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "BookCell", for: indexPath) let book = Book.books[indexPath.row] cell.textLabel?.text = book.title cell.detailTextLabel?.text = book.author print(book) print(cell.textLabel?.text) print(cell.textLabel) return cell } When the compiler reads this function, it will output the contents of the print statement in your debugging console. If your book is nil, there is your issue. If the text label is nil, that means that the cell doesn't have a text label on it. If nothing is printed, that means that the functions is not getting called as you are expecting, which would result in a predictably empty cell. See how that goes :) Also - I'm not sure exactly what you mean about your custom table view class. A UITableViewController is still a view controller, but with a tableview built in and already hooked up. So that -shouldn't- be the issue, unless there's another tableview floating around somewhere else in your project that you might be displaying instead?
I thought it was a great start to learning the iOS development ecosystem. I was a web designer before starting, knowing the basics of HTML and CSS is helpful but not necessary. There is a learning curve and I definitely got stuck sometimes. There are a ton of resources for when it gets confusing. My best advice is to just keep pushing and it eventually starts to click. You'll feel defeated for a little and the next day the solution seems obvious sometimes! You can access all of Udacity's courses for free: [Intro to iOS ](https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585) The Nanodegree provides project feedback, community support, and career advice like resume and interview guides. I would say it's not a requirement to pay for the full course as 90% of what you want to learn is available for free! 
I'm not sure for 100% but Storyboards and working with UI from code should have equal capability. Just need to figure it out what fields/methods to use... Storyboards themselves sometimes are easier to use, but if whole your project is already in code I don't think it make sense to move from it to storyboards.
Yes it's been through some shit. 
Sure there are cases for for loops, but they are very rare and far between. Especially for traversing sequences.
Create a Cocoa Framework if it will be used in mac Apps, or Cocoa Touch if it will be used in iOS apps. Name it MyLib Create a file named Math.swift: public class Math { public init() {} public func sum(_ a: Int, _ b: Int) -&gt; Int { return a + b } } Compile your library In the project explorer, right click products/MyLib.framework to show the file in finder Now create a new project Add the library to your project structure (right click, add new file MyLib.framework) Just for testing, go to your viewcontroller file and enter this code somewhere after initialization: import MyLib // Your library // view controller stuff override func viewDidLoad() { super.viewDidLoad() let math = MyLib.Math() // Your class print(math.sum(1, 2)) // Your method } That's it. Share your library with the world.
Thanks! Indeed, I thought I was abusing it, but that's not the case.
Excellent, got it.
It wouldn't take you long to get the hang of storyboards, but there is really no advantage unless you're curious or want to compare for yourself. Not that there are no advantages to storyboards, but if you've learned one way already, switching to the other won't dramatically improve your project or app. However, if you're worried about being able to convert what the tutorial says into programmatic code, then maybe it would be worth it to spend a little bit of time looking into it so you know what the various storyboard features translate to in code. 
Ah, yeah that's exactly what I was thinking. I suppose I'll learn just to expand my resources, I'm just afraid of burying myself into something gigantic. Thanks! :) 
Would love to help out with this! Are you on any slack channel? This is *exactly* was I needed. The code quality is slacking, but I could clean it up, helps me understand the codebase, too.
I could use people in [OpenKitten](https://github.com/openkitten/). There's always more to do! If you're interested I can list a bunch of projects you could help with. You can join the slack [here](https://slackpass.io/openkitten) if you're using that.
A high performance webserver and framework. Just finished WebSockets, and am working on Multipart form parsing, only files aren't easily readable yet.
Thanks for sharing this, looks useful!
Can you elaborate on the quality issues you found? The framework has an extensive test suite with 100% coverage and several performance tests. The code style is checked with swiftlint and all public methods have full documentation. Of course I am open for improvements - you can reach me on Twitter (@weichsel) or via mail (see https://thomas.zoechling.me)
I am a collaborator to a Hyper plugin named [Hyperline](https://github.com/hyperline/hyperline), we use React, ES6, and Webpack mainly. Another fun one is Next.js or Now. 
You should learn storyboards so you can work with teams that use them. They are faster than code for a lot of purposes.
Hey there, I'm just going through the iTunes U lectures about swift right now (total beginner to iOS dev, but have programming experience), so take what I'm about to say with a grain of salt. In about the 4th-6th lecture there are good demos of using MVCs with different types of views and view controllers. It might be worth looking at the slides at-least to see how that design pattern is used. (Separates the view from the logic, etc) General gist I've got so far is make a view controller for every view, then prepare how to transition between views through this. So for example, when you press "Skip" this will prepare the view of logging in again. When you press "continue" it will process the info then prepare and segue to the Loading view controller. This would then prepare to transition to the login screen when done processing (closure or callback or something, not sure on implementation here). Apologies if this is too low-level, you might have been assuming this but wanting something higher level.
I was thinking about using a View Controller for every view, but I'm not sure if it's the ideal way to go because then I'd be making a view controller that is responsible for subviews (or sub-subviews..) The way I have it arranged is I have one main view with a bunch of subviews, and this is an attempt to reduce duplicate code. (I don't want to recreate a view that is very similar to another view, but with a different label.) Maybe I should try this, though. I'll check out the slides and try to see how it goes. Thanks!
Whaa? That's quite a strange claim, since the syntax presented above comes straight from ML, a language which is both over twice as old as Javascript, and is the canonical example of a *strongly*-typed language. It was actually the first language to implement Hindley‚ÄìMilner, and (via Haskell) a strong influence on the type inference seen in Swift today. There's nothing weakly-typed about it. Essentially, OP is complaining that Swift took some of ML's useful features, but wrapped them in C-style syntax, which is rather verbose in this case. There are reasonable arguments against OP's idea -- you could argue that the verbosity isn't a big deal, or that a different language feature in Swift would be a suitable substitute, or that a different high-level design would obviate the need for such a feature -- but I don't see how one can argue that someone writing ML pseudocode is suffering from "JavaScript syndrome". To write in a JavaScript (or weakly-typed) style would involve passing everything as "Any?", which is exactly the opposite of what is being proposed here.
Interesting. I wonder what he means by "cannot and should not" -- if the former is true, then the latter is irrelevant. But other languages do support it, so I'm not sure why the former would be true. In any event, no support is provided for either claim.
I have a pretty moderate understanding of some more common compiler optimisations, like generic specialization, devirtualization, in-lining, constant expression pre computation, etc. But I cant think of any optimisations that this statement could enable. Can you give an example?
With this, you can tell the compiler that a condition won't ever be met. In doing so, the compiler will be able to make more assumptions about your code and optimize it further based on context. Normally, in Swift, you place a `fatalError()` when a certain condition won't be met but the compiler thinks otherwise. What's different with `unreachable()` is that it doesn't emit abort instructions. It gets a similar job done at the higher level (appeasing the compiler) but in a much better way. In [this](https://github.com/nvzqz/Unreachable#unreachable-vs-fatalerror) example, calling `assertUnreachable()` instead of `fatalError()` greatly reduced the number instructions emitted for the calling function. It now simply returns `true` if the value is below 55296. Also, in debug builds, we can catch bugs where the value isn't in either of those two ranges. Obviously, unless you're creating a `UnicodeScalar` with `unsafeBitCast()`, the value will always be within those ranges. But what if a bug crawled in and let illegal values appear in a legal context within your own checks? In debug mode we can check but when compiling with optimizations, we assume that'll never happen.
I have just bought a MacBook Air. I'm on low budget and the MBA is twice the price of my VW bug. It was the cheapest option that I had for Swift programming, and I had to buy it this week because I have to do a project on it. I'm on college, CS. Do you think I will be able to work on it? Could you please give me some advice?
Ooo you updated the readme since I last looked at. Good stuff, thanks for taking the time for that write-up
If you have any suggestions for what more can be done with this, please let me know. :)
It should be fine for any college project.
Post what you currently have for the Podfile and we can help
You'll need to post more details like specifically what steps you have tried, error messages you're getting, or what your pod file looks like. Based on what you've posted, theres no way to pinpoint what went wrong other then guessing, which doesn't help anybody. Here's the steps I go through to setup cocoa pods for a new project. 1. Run `pod init` in the project folder. This will create the Podfile. 2. In the Podfile, add pods under the `# Pods for TARGET_NAME` line. It should look like `pod 'Alamofire'` or `pod 'Alamofire', '~&gt; 4.4'` if you want to limit the version. 3. Run `pod install` 4. Open the .xcworkspace file and that should be it. Also, here's what a pod file should look like. https://guides.cocoapods.org/using/the-podfile.html 
pod looks like this: platform :ios, ‚Äô10.1‚Äô target 'CocoaTest' do source 'https://github.com/CocoaPods/Specs.git' use_frameworks! pod 'ActionSheetPicker-3.0' end 
So I've done the steps above. It's given me no errors when I run 'pod install' just tells me there are smart quotes that it ignored. Then when I go to import the ActionSheetPicker like it says to do it says "no module found".
The smart quotes warning your getting is probably because the file was edited with TextEdit which inserts smart quotes. Using Xcode, Sublime, Atom, vim, or any other programming editor shouldn't cause that to happen. I just tried with a new project and it seems to work. Here's the podfile. # Uncomment the next line to define a global platform for your project # platform :ios, '9.0' target 'TestTarget' do # Comment the next line if you're not using Swift and don't want to use dynamic frameworks use_frameworks! # Pods for pod pod 'ActionSheetPicker-3.0' end The import needs to be `import ActionSheetPicker_3_0`, incase your just putting `import ActionSheetPicker`.
The union types found in ML are tagged unions, which are equivalent to Swift's enums: http://courses.cs.washington.edu/courses/cse341/04wi/lectures/07-ml-user-types.html My understanding is that the untagged union types described here as "or-types" are mainly found in type systems that describe dynamic languages (e.g. Dialyzer for Erlang/Elixir, Typed Clojure, TypeScript and Flow in the JS world, etc).
Edit: Oops nevermind no it hasn't fixed anything unfortunately.
I did as you advised, and nothing was printed to the console -- this as you suggested, means that the functions is not getting called as I am expecting, which would result in a predictably empty cell. I tried thinking about how this issue could be resolved now that we know a little more, but couldn't come up with anything. Do you have any ideas?
Thank you. Here's the link: https://drive.google.com/drive/folders/0Bztg_MH6jm5OTG1zelZUZUp3WUk?usp=sharing
This is excellent! Thank-you for posting. I have been using all sorts of non-swifty methods to open zip files in a small file scanning application I built. Once I move to Swift 4 I will check it out.
Looks pretty good from here, aside from some stylistic things like you be averse to vertical whitespace. There is one issue where you mark an init as `thows`, but then you don't actually let it throw by using `guard try? { return nil }`. In general you should try to always return error state instead of nil when something fails. The code also has this habit of marking some things as public, but leaving off the access specifier for others. You should always try to make everything as private as possible. Thanks for making this available, I'm sure a lot of people are going to find it very useful. 
While I don‚Äôt see why you can‚Äôt use str... change the variable name and see what happens 
A second note. There are a lot of magic numbers literals in the implementations. It's recommended that you pull these out into some kind of namespace, and reference where they came from at that point in the code. An example of this might look like // RFC 1212 compression header offsets struct ZipOffset { static let anachronComptometers = 4 static let bubblyWibbleBobble = 16 } Here the struct is just acting like a namespace for the constants to live so one can understand that they are all related. HTH!
You have to build the project before the inspector will recognize your pods. Go to Product-&gt;Build in Xcode.
YOU'RE KIDDING ME. That's what it was. Thank you thank you thank you
Good luck, mate. By any chance are you studying through Apple's group in Naples?
Implementing this is my job, so here goes: `owned` is the current default for any non-self argument passed to a function. As the manifesto notes, you can't actually "spell it" today, it's just a default. An owned argument is (usually) passed directly (no indirection needed) into the function where ownership over its lifetime transfers as well. This is a marked difference from Objective-C where things like refcount management for non-initializing methods occurs in and around the call site. `shared` is new hat. Its semantics are meant to mirror the C++ type `const T&amp;` - or Rust's "borrow" concept. By marking a parameter shared we can pass it *indirectly* by constant reference. For value types, this enables us to elide a copy before we make the call and instead pass a reference pointing right at the memory we allocated for the struct (usually in the caller). SIL calls this convention `in_guaranteed` for (`in`direct reference with `guarantee`d lifetime). It's currently the way we pass `self` in non-mutating functions. So, from your perspective as a Swift user, a `shared` parameter looks and feels like a straight up `owned` parameter does today, but under the hood it lets us know that we can share the memory for a parameter value without fear of arbitrary mutation or escape. As for your gist: shared is an optimization for value types. All the values in that gist are passed indirectly, and hence cannot and will not benefit from any `shared` optimizations the manifesto concerns itself with.
Thanks for the explaination! So `shared` doesn't affect ARC at all?
You're welcome.
Read the apple documentation. It's worth it. Then get the big nerd ranch book. 
Yep. The ownership manifesto in a nutshell is *copy less, smile more* (Hamilton music begins playing)
Ah, dang. I for some reason thought it was about manual memory management of some kind, regarding ARC.
I think Navigation Coordinators are exactly what you will need. Here is a good start: http://irace.me/navigation-coordinators Having just one view controller that manages all the different views seems very bad from a design standpoint. Each view should have its own controller. Definitely check out the navigation coordinator design.
Thanks for your feedback. Vertical whitespace: I am using the default ruleset of swiftlint to get a somewhat consistent code style across the project. swiftlint enforces a 120 char line length so I decided add line breaks at parameter boundaries where necessary. But you are right, the alignment looks a bit strange because of that. Do you want to create a PR or issue for the `throws` issue? If you don't have time, I'll fix that tomorrow. I tried to use the right access modifiers, but I had to make some constants `public` because some inlined methods ( via `@inline(__always)`) weren't able to see them.
That should probably be an enum, just so you can't instantiate it.
To learn : Youtube iTunes U Courses Books / Ebooks To use Swift Get a Mac Book Get Xcode You can start a playground to test things
Remember this? &gt; What you need to do is set the view controller's class to BookTableViewController That is exactly what is missing. Open your main storyboard, it shows the navigation controller and the table controller in which you want to display your books. But the table controller's class is not set to your BookTableViewController. As it is set to the default - UITableViewController - it just displays nothing. (As mentioned, you don't have to change the class of the table view itself, but the yellow-thing above it, called "Root View Controller" in your storyboard. It is just named like that automatically because it's the first controller in the navigation controller). Also, none of your print statements were called, because the whole code wasn't used anywhere. 
I like to use extensions on Int for my constants like that. 
Not sure what you're asking but the Academy is Apple sponsored, yes. 
Wrong subreddit? :P
A lack of comments primarily. I found it difficult to keep up with most of the code.
fileprivate or internal, I assume?
Ahhhh....I didn't notice the difference between the Root View Controller and the Table View. This worked perfectly. Thank you so much once again for all your time and effort! You not only helped me get my code to work (which honestly was my main intention of this post), but helped me gain a much better understanding of what exactly I was doing. Thank you. Keep doing this, you don't know how impactful a single comment can be in a beginner who has been struggling for days' journey! :) 
App Store clone for shits and giggles. Apples app store is horrendously bloated and slow
Huh. I was under the impression that when guaranteed self went in, it allowed the optimizer to remove some retains in common cases.
It looks like you're trying to use a variable defined in one method in another method? That's not going to work if so; you'll need to make it an instance variable of the class these methods are in. If you already have an item instance variable, then you'll need to remove the 'let'. Also you probably wanted "displayViewController.item = Item!" to be "‚Ä¶ = item!" instead, i.e. not an uppercase I.
Oh yeah. Taking self as a const reference allows caller-side retain-release aggregation, just like you'd expect. For those that aren't familiar, for long tracts of e.g. self-applies we can retain self once before the first call, pass it guaranteed through each call, then release it at the end when done. All this versus passing it in +0, retaining and releasing it in the callee, then doing this dance all over again for each call. I've clarified the original, but I'll put it here too: You may benefit from optimizer work as long as we're thinking about this again, but a lot of the manifesto is about reducing expensive/needless copies.
There are certainly tricks we can do with ARC - the first part of your gist lays out an existing ARC optimization for guaranteed parameters. But for reference types we're not concerned about copyability so a lot of complexities just disappear. That last example where you append to an array is just going to retain the original value - which is what you expect. If you tried to do the same with a value type we would insert an implicit copy to "cast off" the `shared` attribute.
I don't think so... which other languages support it?
Why all this, why not just an enum?
There are no compiler errors in the code you posted. `invalid redeclaration of 'str'` means you are trying to declare a variable with the same name twice in the same scope. Most likely you already have a `var str` somewhere? Or like the other comment said try changing the names to trigger a rebuild, I've noticed playgrounds sometimes has issues noticing changes 
Thank you so much, yeah I new to all this and have no idea what I'm doing, I want two buttons doing different segue. But thanks for helping 
The problem is in your if-statment. When you use integers everything is fine and dandy because the condition for the if-statement is able to take an Integer and make it a float (so it can easily turn 9 into 9.0). That's all you're doing if you input only Integers. But you can't turn Floats into Integers. You'll get nil every time. Just think about it. If you have the number 8.2 how would you turn it into an Integer? Should you round up to 9.0 or round down to 8.0? With one input you have 2 different outputs and this will return nil on you [So I'd do something like this instead](http://i.imgur.com/MG47K4w.png) Use the guard statement at top just to make sure all things work out as planned then immediately floor the number. So if you have 8.2 then of course you'll floor it to 8.0. 9.9 floors to 9.0. Basic stuff Then you subtract the Float from the floored number. If the remainder isn't 0 then you know you have a Float so perform your logic based on that. If it *is* 0 then you know you have an Integer **tl;dr** Int(text: String) can't take a Float and turn it into an Int because it wouldn't know how to round it. So instead, floor the number you get. If you floor an Int then you'll end up with the same number you started with. Using this logic you should be able to proceed without error
You need to capture self within the closure of the Alamofire call. So it would be Alamofire.request(....).response { **[weak self]** response in ....... And a weak self is optional so you need to first perform a nil check before using it. As for the first error, it looks like it isn't in any function no? You close the braces for showDisplay before you perform this logic
You have an extra } at the top, so the code with the if statement that gives the first error is actually in the class body, and not in a method. 
https://i.redditmedia.com/e8FIrLFawV9WetN5p2cxsyv_0V9S-_dvqh-lBmZPtbs.jpg?w=529&amp;s=d5d6262bf65c77925629a40a5e5035ff
He can capture self strongly but he's gonna have some reference cycles without doing [weak/ unowned self]
Congratulations on your new low.
 var items2: [String] = [] items2.reserveCapacity(collection.count) for myObj in collection { items2.append(myObj.text) } let control2 = UISegmentedControl(items: items2)
Yeah you're right, I just always do [weak self] so it's burned in my brain as the way to capture self
Could work!
I don't think he'd get any reference cycles in this case since the block is likely going to be released after it's called, but it's a good idea to use `[weak self]` here regardless.
In any case he'd get a null pointer exception if the view controller were to be deallocated before the block were called
No, that's only if you do `[unowned self]`. With a strong capture the view controller wouldn't be deallocated before the block was called, since the block keeps it alive.
Have you programmed before or not?
I'm a big fan of the Ray Wenderlich tutorials. There's plenty of ones for complete beginners, and tons of sample projects as you grow your skill set. https://www.raywenderlich.com/category/swift
Ah yeah. Memory leak. It's early. Can't think straight
There are many good courses on udemy and some very good tutorials on the site hacking with swift. Definitely check out some of Apple's iBooks too though
It's 3PM here, so I had an edge :) Not necessarily a memory leak though ‚Äì the closure will just keep it alive until it's called, and then it will likely get released. But I don't see why you would ever want a closure to have the only reference to a view controller.
It wouldn't be the only reference but it does increment the reference count and retains it after its intended lifecycle
So after the view controller is dismissed, it would be the only reference, right? And then it would finally (too late) be released after the closure is called.
Yeah, exactly. I think we're saying the same thing haha
üëå
Code with Chris https://m.youtube.com/watch?v=2OZ07fklur8
i'm guessing you accidentally deleted the signature for "prepareForSegue", as the line (and steps after) "if segue.identifier == 'Disply' {" would normally go in there. Also, note that the identifier for the segue you're triggering in showDisplay() doesn't match the identifier you're checking for the line I described above ("Display" != "Disply").
It's really a "Rick &amp; Morty" joke. So you will probably become more popular around people that watched the series than around recruiters ;)
It irks me that they still use the /r/fffffffuuuuuuuuuuuu style memes in their tutorials. Just looks tacky as hell now.
In addition to the other answers I'd just like to point out that you should be careful when using string literals like that. Store the segue name in a constant somewhere and compare against that. In your example code you're comparing "Display" and "Disply" which is certain to fail but would be easy for you to miss if you didn't notice the misspelling. 
Say I call `uppercased()` on `foo`, which has this hypothetical `Int | String` disjunctive type. What should happen if at runtime make that call, and `foo` turned out to be an `Int`?
There are loads of fantastic tutorials out there, and there's also good reference material for the language itself. My advice would be to come up with a project that you actually want to work on, and go with that.
If you have an iPad you can use Swift Playgrounds. :)
I learned in team treehouse. I was an absolute beginner though. For an existing dev I‚Äôd recommend Stanford courses
 extension Data { enum DataError: Error { case unreadableFile case unwritableFile } } It's common practice to write `enum Error: Swift.Error` here instead, since then the type is `Data.Error` what and not `Data.DataError`.
What's the difference between doing the nano degree and just doing the courses on Udacity? Apart from the 1 2 1 mentor?
If you need to learn how to code give https://www.weheartswift.com/swift-programming-scratch-100-exercises/ a look before you start making apps. 
Yep - So first, how are you calling your BookTableViewController? As someone else here pointed out, a UITableView != UITableViewController. So, you probably have a navigation controller with an embedded view controller. So to ensure that you are using the correct class for your tableview, do these things in order: * Go to the storyboard of your project * Open the righthand panel (if it's not already open) * In the bottom portion of the bottom panel, you should see four symbols: A page, a pair of braces, a square in a circle, and a rectangle with dashes on either side. Click on the circle with a square in it. * In the textfield below this panel, search for a UITableViewController, and drag in into your storyboard. Set the class name for this tableviewcontroller to BookTableViewController. make this view controller the initial view controller of the project. * Run it again and see how it goes, or if things are printed in the console 
So the compiler would stop you from making that call before you narrowed the type down to something that is guaranteed to have that method. So a call to `uppercased()` would not be allowed by the compiler before you casted the type to a String. However, access to the `description` property would be allowed, because iirc that property is defined on both types in the same way. 
Yeah, usually fileprivate. 
So how is that any different from an enum containing 2 case, both with associated values, one of type Int, and another of type String? And in the case of `description`, how does the compiler pick between the two available implementations?
Currently working on building a fun little game using ARKit. New to iOS programming (I'm a webdev Ruby/JS guy) so it's been fun digging into Xcode and Swift, though I miss my text editor theme.
No, he won't. (at least not here) That block is not getting permanently saved anywhere, it's a specific callback block for a specific request.
Please don‚Äôt store data in text labels. Have a data backend that the labels reflect.
I like this project a lot, something like Android's APKMirror but with better visuals would be an instant hit.
[removed]
If the data is not going to be shared with anybody then you may store it locally using Core Data. https://www.raywenderlich.com/145809/getting-started-core-data-tutorial https://videos.raywenderlich.com/courses/60-beginning-core-data/lessons/1
Yes, Alamofire's `response` closures are kept in `Operation`s on a queue owned by the relevant `TaskDelegate` subclass, which is owned by the `SessionManager`. Since you can't pull that queue out on it's own and store it, there shouldn't be a cycle. Even then I'm pretty sure it's not a permanent cycle, since the `Operation` is deallocated after it's run, so you'd have to keep a reference to that as well to create the cycle.
In c++
Thank you, i will start to do that
Thank you, i will check them out
Im a beginner as well
Open a playground and go with the swift handbook
Apple Swift book and documentation, raywenderlich.com books or video, hacking with swift, Stanford course, that's all you need to learn iOS development...and also add few good youtube channels like Lets build that app..
NSApplescript has been leaking memory for *years*. It's a long-standing issue and hasn't been addressed to my knowledge. My workaround was to create a small external app that was essentially the script runner. It could leak to its heart's content because it'd be killed regularly. I can share some code on Github if you're unfamiliar with XPC or related technologies that make this stuff much easier.
Ok will do, thank you
[removed]
Coming to the finish line of my app Memori Twyst. Currently having trouble implementing turn-based online multiplayer, but I will figure it out eventually. www.memoritwyst.com for those interested, but I haven't touched that site in a *long* time
Thanks for the info, I wonder why nobody ever tried to fix it. Concerning your solution, that sounds really useful since I have to use NSApplescript quite a lot. It'd e awesome if you could share the code on Github!
Look up tuples. 
Thank you! Whilst this information doesn't live within the Tuples section under 'The Basics' in the docs, the explanation can be found in the Language Reference Guide under Expressions "Explicit Member Expressions": &gt; The members of a tuple are implicitly named using integers in the order they appear, starting from zero. There's so much to learn!
Yeah, looks like that's malfunctioning. Fortunately, it's easy enough to replicate. I put a quick hack [here](https://bitbucket.org/!api/2.0/snippets/JimDabell/XqqnKE/cc02103634721e5f617ee4064800a5c0f0ae6248/files/OpenRestaurant.py). Save that file as `OpenRestaurant.py` in the same directory as the JSON file, and run it at the command line with `python OpenRestaurant.py`. Oh, and there's a mistake in the JSON as well ‚Äì you've got a trailing comma after the last menu item. If you plug it into [JSONLint](http://jsonlint.com) you'll see what I mean.
You'd be better getting the big nerd ranch IOS book and working through that. 
Is this a situation for using the where clause? I'm having difficulty wrapping my head around how to implement this. Any help would be fantastic.
Your function signature says your asking for an argument called `items` which is an array of collections, and an argument called `find` which is a collection. Do you see the problem now? ### edit This is what you want: func findAll&lt;S: Sequence, E: Equatable&gt;(_ items: S, _ find: E) -&gt; [E] where S.Iterator.Element == E { return items.filter { item in item == find } } But since the function is a one-liner, you might as well use the one line.
I wrote up a small program on Github a while back on how to send [data between multiple processes](https://grayson.github.io/InterprocessCommunication/). It's more than you're likely to need, but you might get something out of the parts on building a small helper app and sending XPC messages.
I was wondering the same actually. And also, what is the best thing to do after app development with swift? 
I want the function to accept a generic Collection and return the indices of what I'm searching for. So if I have this correct, you restricted the arguments to match the associated types in the Collection protocol?
Looks super cool, yeah I'll probably use it. Would you mind if I PM you if I have an occasional question? I just recently started with Swift and there isn't really much documentation of some parts so yeah.
Well, if you want to return the indices, you would have to return an array of Ints as the type. It also looks like you're only passing a single element for the find variable. You could definitely return the indices where that one value appears, but are you looking to pass in an array of things to match?
Sure, PM away. I may be able to answer some additional questions. I *might* be able to point you towards some documentation as well. I'm hesitant since I'm afraid some of my documentation is way, way too old. For example, I found one potentially promising URL in my old bookmarks (https://cocoadev.com/NSAppleScriptMemoryLeak), but it looks like CocoaDev is long dead (didn't survive a remodel in 2013). Which is a real shame. When I started Mac development 15 years ago, it was a go-to source for information and advice.
&gt;When I started Mac development 15 years ago Holy shit, I was 5 yo at that time lmao. Thanks man, help is always appreciated. Coming from Python/Java, Swift is really ehhh "unique" with all the mvc-type stuff. 
Wow, and I was just starting to research how to create a functional Kitura, for serving and storing images no less! Thank you for an informative write-up!
Attempting to program my first app! It's a relatively simple billiards score analyzer. Since the goal is to become proficient enough to land a Jr Dev role, I'm skipping Interface Builder and doing it all programmatically with the help of SnapKit. I'm doing this with the help of the Big Nerd Ranch books for Swift Programming, and iOS Programming. Some days I have to convince myself harder than others that I'm capable of competing this. I tend to get hung up on thinking the code will be too sloppy. 
If you're just returning indices, the return value (as well as 'var found') should be an array of Int values. It shouldn't be generic. Edit: I'd also add that this function will just return all indices of the collection. There's no comparison happening to try to find the object. 
The problem with making things an enum for what he wants is that he'll have to splatter Enum.case.rawValue everywhere, which is not pretty. As it's an empty struct, instantiating it will quickly lead you to the fact that you can't use it for anything. So it's not so much of a source of bugs in that sense.
I‚Äôm trying to do the Gold challenge here. I completed the Silver challenge already by returning an array of integers. But modifying it to meet the Gold criteria is what is causing me difficulties. http://imgur.com/a/DlEX6
Something along these lines should work. func doSomethingAsynchronously(withParameter parameter: ParameterType, andThenDo someAction: (ValueType) -&gt; Void) { DispatchQueue.global().async { let value: ValueType = someCalculation(with: parameter) DispatchQueue.main.async { someAction(value) } } } let parameterValue = ParameterType() doSomethingAsynchronously(withParameter: parameterValue) { theValue in print("The value is \(theValue).") } Edit: I tried to format on mobile and it went poorly.
You'd be at 1.78
Take the iOS course on iTunes U CS193P
What is the source of this challenge?
Swift Programming 2nd ed. Big Nerd Ranch Guide
Ah, I think I see what they're getting at. What you want is to take in a collection type (a type that conforms to the protocol Collection) and return an array of whatever that type uses as its index. Array is a collection type, and uses Int as its index associated type; that was the Silver challenge. This is the generic version for any collection type. Take a look at the protocol for Collection here, and note the associated types. http://swiftdoc.org/v3.0/protocol/Collection/ I set up a template for you to work with: func findall&lt;T : Collection&gt;(_ items: T, _ find: T.Element) -&gt; [T.Index] where T.Element : Comparable { // Do stuff here } EDIT: Added the where T.Element : Comparable clause you probably need for this.
Thank you very much! Don't you think Apple should be informed about it so that they update their IBook ?
That's all I was getting at. Cheers.
Correct. So I guess you should be able to rewrite it to make it do what you want. 
What? No. I'm talking about an empty enum with just a lot of static lets in it. It's basically a pure namespace at that point. The compiler won't let you instantiate an empty enum. There's no rawValues, because there's no cases to begin with.
Yes absolutely. Reddit has an API so you can read and reply to comments using that. Then you would need to write some logic e.g. every time there is a comment with `:(`, reply with a picture of a kitten The simplest way to do this would be a command line app running on your local machine that checks at some regular time interval (something less than whatever rate limits the reddit API has I guess). I'd assume some of the bots you see a lot of are hosted remotely, but that is also possible with swift If you know other languages (especially python since that seems very common from the quick google I did) you should be able to follow along one of the existing tutorials to understand the steps a bot needs to take: http://pythonforengineers.com/build-a-reddit-bot-part-1/
In the storyboard, did you set the class for the cell as the custom class you created?
Yes.
Have you checked that all your targets are correct?
I'm sorry, I am not familiar with the term 'targets'. What do you mean by that? How would I check whether all my targets are correct? 
Why do you have a tableviewdelegate function in your custom class? The cellForRow function belongs in the delegate class (most of the times the view controller), not the custom cell. Also, remember to set the delegate and datasource of the tableview to your viewcontroller.
Which TableViewDelegate function are you talking about? Are you referring to files in the Google Drive folder? I do not have a view controller file -- I have a TableViewController file, and the table view's delegate and data source are connected to it. 
 Edit: Just move your cellForRow function to your viewcontroller. Im on mobile so I cant help that much with code atm.
Serious?
Thanks for your response. I've been following Apple's "App Development with Swift" book, and my code reflects the code in the book. Part of the process was deleting the ViewController.swift file, and creating a TableViewController.swift file to control everything. Would I move the cellForRow function to the TableViewController.swift file? 
Yes you should. 1. Remove lines 34 to 47 from your BookCell 2. Uncomment lines 62 and 63 in your BookTableViewController
If you are the author, then please share screenshots (multiple, if appropriate) of what state the app is is currently in. Those screenshots can act as visual checkposts and gives the user an idea of what exactly he is building before investing their time in learning something. If you do, I would be very interested in reading and following the tutorials.
Thanks much for the comment. I have getting comments to add gifs and more screen shot. I'm relatively new to blogging. So I'm definetly learning much in terms of writing and I'll add more in my upcoming blog post. 
The way you defined it makes this property "computed". That means the code inside braces will be executed everytime you access it. Properties in extensions could not be "stored", so neither they can be "lazy". You have to rely on associated objects or other mechanisms to make a property in extension which would behave like lazy 
[removed]
So 'array' is like method? What's the difference then?
Do you have any idea when we‚Äôll have the results? I‚Äôm waiting for them too! 
Yeah, to add to this, it's basically just sending and receiving JSON requests back and fourth. So just find a decent JSON library for Swift and you should be able to start making request. 
You should use AR Kit so people can see the trees in real life. Unless you are already doing that. 
`array` is not like a method at all. It's called a [Computed Property](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-ID259). Computed properties don't store values , they generally provide a getter to get some other property. You can also implement the setter (not required) to have more functionality.
Build apps, ignore ‚Äúgeneral‚Äù intro tutorials and books. I‚Äôve seen too many new developers get stuck in an endless cycle of tutorials and books thinking the next one will be the last, just fucking do it. Read specific resources as you need them of course, but genuinely just jump the tuck in and get ya hands dirty. Edit: https://m.youtube.com/watch?v=ZXsQAXx_ao0
That won't work for this case: &gt; Is there any way to do this in Swift if there is not a custom parameter built into the callback function? You've put a parameter into the callback function.
Can you give a bit more background on what it is you're trying to do?
It uses property syntax, that's all. You also can implement setter if applicable.
Lol how is that not like a method?? 
That's right. Can you say what will work? What I've got so far is that it seems I had a misconception about placing the callback routine into a closure. I thought the variables local to the function would change according to the asynchronously calculated result of the routine that gets called on a thread. But now I think I've realized that local variables are local for that execution context of that asynchronous callback if it's placed into a closure so you can just use local variables and they work as you'd expect them to if you didn't know much about asynchronicity.
Yeah, that sounds like the right thing to do. How about books that focus on creating specific type of apps, Im thinking for example "Hacking with Swift" that has about 20 projects or so. Where you focus on creating apps, without all the intro stuff? 
For starters: you call it without parentheses
I‚Äôd say beginner. I‚Äôve been doing iOS for 2 years (development for 3 1/2ish) and definitely still consider myself beginner-intermediate personally! 
No shit Sherlock 
I like how you purposely put the space in : ( to make sure that bot did not post:)
Here is an library someone has made, not for a bot but still swift + api https://github.com/sonsongithub/reddift
Most of the projects look like they‚Äôd fall under ‚Äúspecific resources‚Äù, like I‚Äôd read and complete Project 38 if I was working with Core Data for the first time, or Project 19 if working with maps etc. Key thing for me would be using them as a reference though, not a guide, i.e. let the apps you‚Äôre building drive which Hacking with Swift project you reference, not the other way around. If you‚Äôve completed App Development with Swift, you‚Äôre more than capable of doing it like this imo üëç Always remember as you‚Äôre going through them, or any tutorial though: you‚Äôve already done a 900+ book on the basics. You‚Äôve got the basics, now exercise them and keep moving!
I put it in backticks to make it clearer, but I was hoping the bot would still post :( 
I mean it‚Äôs literally a method that is purposefully treated like a property so I don‚Äôt know what kind of explanation you were hoping for. The literal main difference is that you call it like a property instead of like a method. 
I did not complete this. But check this open source Swift Game: https://github.com/woguan/Legend-Wings
Not only is it ‚Äúonly‚Äù created when it‚Äôs called, it‚Äôs created every time it‚Äôs called (as it isn‚Äôt stored for future use like non-computed properties)
Honestly, local storage is a huge pain. I'd look into Firebase storage, particularly if you want to let multiple people use the App. Their data can be stored on Google's servers for free. Add a variable within your data for the date. If you add a text field to the interface then you can trigger a function that loops through all the data and appends it to a search array that will be displayed. Let me know if you want some help with this and I could check out your project on GitHub.
&gt; array is not like a method at all. This is what I was objecting to. Its actually exactly like a method minus the method() syntax. Its a pet peeve when people start out an answer with "no," when it should start with "yes,". 
Hi, there are couple ways to load sprites. In my case, I have separate sprites then I create a SKAtlas and I preload them. You can check my free open source game written in Swift and SpriteKit framework. https://github.com/woguan/Legend-Wings
The mentor/project reviews, access to the community (forums and slack), plus an interview and resume review. I would recommend just the courses as the idea behind the nanodegree is to become proficient at learning and expressing your talent through a portfolio on github/App Store. All are things that can be done without paying for the additional push. 
I'll preface by saying it has been a lot of years since I worked with Firebase. However, there are several ways, you can do this. Having a groups-xref "table" or a (users-xref) that has a reference link to whichever table you need to have available to the members in the group will be one of your cleaner options. 
Thanks! I'll look into trying firebase and let you know !
Thank you very much for the input. I'll definitely consider this learning Swift! 
It‚Äôs officially called a computed property. Helpful for googling.
I'll gladly help you explain where you went wrong in your code, but only if you actually give us your code. I'm not going to waste my time transcribing pictures Here is how I would do this: extension Collection where Iterator.Element: Equatable { func indices(of item: Iterator.Element) -&gt; [Int] { return Array( self .enumerated() .lazy .filter{ $0.element == item } .map{ $0.offset } ) } }
The book hasn't gotten to extensions yet. Here's my best attempt so far: func findAll&lt;T: Collection, U: Equatable&gt;(_ items: T, _ find: U) -&gt; [U] where T.Iterator.Element == U { var found = [Int]() for (index, item) in items.enumerated() { if item == find { found.append(index) } } return found } EDIT: I feel like I'm getting closer with these newest changes.
Updating my app for finding public wifi hotspots in NYC using city provided data. Trying to get it ready for iOS 11 and make sure its up to date on the latest accessibility features. If your coming to NYC any time soon give it a go! http://appstore.com/publicwifinyc
This is much better. The main issue is that you're returning an Array of `U` (the element type of the collection). But you're not returning the elements, you're returning their `Int` indices. After some renaming for clarity, you get: func findAll&lt;C: Collection, I: Equatable&gt;(_ collection: C, _ item: I) -&gt; [Int] where C.Iterator.Element == I { var indicies = [Int]() for (index, element) in collection.enumerated() { if element == item { indicies.append(index) } } return indicies } You could even add a `where` clause to the `for` loop: func findAll&lt;C: Collection, I: Equatable&gt;(_ collection: C, _ item: I) -&gt; [Int] where C.Iterator.Element == I { var indicies = [Int]() for (index, element) in collection.enumerated() where element == item { indicies.append(index) } } return indicies } In practice, using an extension would be a much simpler and more natural choice, and the use of `filter` and `map` could speed up and simplify this code more. I can explain those (which I used in my solution above) if you have any questions.
Totally 100% possible. You could use an existing Swift Reddit API wrapper (I've seen a couple) or you could write your own with just the HTTP library and JSON parser.
Thank you very much for your help. I feel like the wording of the challenge was a bit misleading when it stated that the return type would have to be changed from Int. http://imgur.com/a/DlEX6 EDIT: So after testing it with some collections other than arrays, it doesn't seem to work. Which I understand. Strings do not use integer values to index their characters. So to return Int won't work for generic collections. That's what the challenge was getting at. The return type also needs to be generic, but must be an associated type of Collection.
Thank you, think i've mistaken
From the looks of it, you won't be able to use `enumerated`. I think you'll need to use a while loop and manual advance an index variable
I've attempted it, but I still cannot get this to run. func findAll&lt;T: Collection&gt;(in collection: T, equalTo element: T.Iterator.Element) -&gt; [T.Index] where T.Iterator.Element: Equatable { var results = [T.Index]() for index in collection.indices { if collection[index] == element { results.append(index) } } return results }
You need a node with a list of user ids (defined by uid) that can access it. This list can only be written by the owner of the recipe that he wants to share. Give the recipe a 'read' rule for people that are in a list. See the docs for all types of authentication.
while possible, imo you'd have an easier time building something like that in Python. Swift is great for a lot of things, but Python crushes big data applications. As an added bonus someone already wrote a Python wrapper for their API https://github.com/praw-dev/praw. Python syntax is pretty Swifty too so if you're new to it it wouldnt be too jarring. just my two cents
Define "to be able to see on my app"
It is almost exactly like a method when it comes to what actually happens, the difference is in the semantics. A method performs an action. A property is a value / object associated with the object. They may be implemented the same behind the scenes and very similar in terms of syntax, but they are different conceptually.
For my example, what do you think fits better, property or method? Tnx
* `T.Index` doesn't exist. We actually need `T.Indices.Iterator.Element` * You can't use the `[Type]` array syntactic sugar with an initializer call `()` when using nested types (such as `T.Indices.Iterator.Element`) * You either need a type alias, `typealias I = T.Indices.Iterator.Element` ... `[I]()` * Or you can spell it out without the syntatic sugar: `Array&lt;T.Indices.Iterator.Element&gt;()` * Per the documentation for [`Sequence.enumerated()`:](https://developer.apple.com/documentation/swift/sequence/1641222-enumerated) &gt; When enumerating a collection, the integer part of each pair is a counter for the enumeration, not necessarily the index of the paired value. These counters can only be used as indices in instances of zero-based, integer-indexed collections, such as Array and ContiguousArray. For other collections the counters may be out of range or of the wrong type to use as an index. To iterate over the elements of a collection with its indices, use the zip(_:_:) function. Here's what I came up with: func findAll&lt;T: Collection&gt;( in collection: T, equalTo desired: T.Iterator.Element ) -&gt; [T.Indices.Iterator.Element] where T.Iterator.Element: Equatable { var results = Array&lt;T.Indices.Iterator.Element&gt;() for (index, element) in zip(collection.indices, collection) where element == desired { results.append(index) } return results } And my way of doing it: extension Collection where Iterator.Element: Equatable { func indices(of item: Iterator.Element) -&gt; [Self.Indices.Iterator.Element] { return Array( zip(self.indices, self) .lazy .filter{ $0.1 == item } .map{ $0.0 } ) } }
I need for them to see if the application is running correctly. I'm making an application that queries data from multiple websites at specific intervals. I want the users to be able to see status codes, and other logged properties while they are using the app to see if they need to stop and update the settings of the app.
I think either works, but if I were implementing it, I'd probably go with a computed property as well. The important thing is that you use a more descriptive name, `array` doesn't really cut it. Maybe `digits` instead?
There are no errors in the function when written like that. So I think that's close. But when I throw anything other than a standard array at it, it throws errors.. http://imgur.com/a/EANBG *Edit: If this this is supposed to work with Collection generically, it should work with String, Dictionary, etc right?*
Really nice dude 
`numbers` isnt a collection, and in Swift 3, neither is String.
Thanks!
Neat, though I am conflicted about it being layered on top of AWS.
Sometimes xcode behaves weirdly. I saw the thread last night and expected people to say this: Clean it before building/running it again. I don‚Äôt remember which menus it‚Äôs in the top bar but it should be somewhere... I think the shortcut is cmd+k. If you haven‚Äôt found the clean option tonight, I‚Äôll be home so I‚Äôll be able to tell you where it is. Edit: You could also try to delete the tableview and make the connections again!
Ok cool, if you have any questions let me know. I don't know if I'll be of much help, because I've applied for the program starting later this year.
No idea, keep calm and don't panic.
Why are you conflicted?
Just finished **Expenses** for iPhone, a very simple app to keep track of daily expenses: https://github.com/kuyawa/Expenses I'm on a roll!
Ah ok, Dictionary should work though right?
Core Data is not a bad option for apps with local storage and simple get/set methods. For not many tables and not many complex queries is more than enough and way simpler than sqlite or any other sql/nosql flavor.
Because it's a layer of abstraction.
Thanks for the tip
In the first line you created an optional string and assigned it the string "Hello". In line two you created a print statement that will print a Boolean (either true or false) depending on whether or not the optionalString is nil (doesn't contain a value) or some value. In this case it will print false because the string you created contains a value. In line four you've created another optional string and assigned it a value. In line five you created a variable and assigned that a value. In line 6 you're saying if optionalName contains a value (meaning optionalName is not nil) then assign that value to name and update the value of greeting to include the name. Optionals are useful when there may or may not be a value present. Which is one of the reasons why Swift is considered a "safe" programming language. With optionals you can handle scenarios when a value might not be there. If you need anymore help or that didn't make sense. Feel free to ask follow up questions. 
Thank you very much, I was mostly getting confused as to how the if let worked and what made it print out "Hello, John Appleseed"
That's what I thought it was and actually came here to see if people are working with ar kit and what they think 
Glad I could help. The important thing to note with if let statements is that whatever value you are assigning to the temporary constant (in this case optionalName) is nil then what's inside the brackets will not be computed. But since optionName contained a string it continues with the computation. 
It‚Äôs the coolest thing in the world of iOS dev right now
Gonna jump in and see how it works this weekend hopefully. So you have played with it?
Thanks for your response! Your first suggestion gets rid of the content of the custom tableview cell that I laid out in the Main.storyboard file. Your second uncomments the lines that provided the contents for one of the default table view cells, in this case Subtitle. I was trying to fill out my custom tableview cell -- how would I do this? As I said previously, commenting out the entire BookTableViewCell.swift file had no effect on the result in the Simulator -- what may be the issue here? Once again, thanks for your time and effort.
Thanks for your response! I cleaned the project before running it again -- this unfortunately did not change what the iOS Simulator showed. I made sure the connections were as they should be...Any other ideas?
According to the [docs](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html): &gt; Lazy properties are useful when the initial value for a property is dependent on outside factors whose values are not known until after an instance‚Äôs initialization is complete. Lazy properties are also useful when the initial value for a property requires complex or computationally expensive setup that should not be performed unless or until it is needed. They are useful when it's not feasible to initialize a variable *at allocation* but rather any time after initialization. This is most commonly useful when proper initialization requires other properties to be initialized. They are also useful when a reference-type property (`class`) is defined but is rarely or infrequently used under common operations. This helps to avoid unnecessary memory allocations (initializing that class). I should warn that I've almost never found this latter case to actually be problematic. This isn't usually a benefit for value types since those allocations have already been made. You're just delaying the copy that populates that memory. The docs (and others) recommend delaying initialization for performance reasons ("computationally expensive setup"). This is, in my opinion, an almost universally bad idea. In my experience, lazy initialization just delays performance concerns and often makes reasoning about these expensive operations more difficult. Rather than making these expensive tasks explicit, they are hidden behind benign-looking properties. It doesn't resolve the performance issue, but it often masks it my moving it to a time in which the performance degradation is less noticeable. This is a time bomb for any future refactors since moving around that call to the property *could* make that performance hit felt. There may be good reasons to hide performance concerns in lazy properties, but I've found that making those concerns explicit leads to more maintainable and performance-guaranteeable code.
Yep
I'm slightly confused about what you're going for exactly, it sounds like an inout parameter.
You should switch on `tripDestination ` and not on the array (and on `mascot `).
Would you please tell me how to get these exercises?
Probably, although you might want a more mature language for any server side code 
what would you recommend for the server side and whith these 2 i should be covered?
Thank you so much! I changed it, and it works perfectly now! :)
I got these exercises from the "Intro to App Development with Swift" book in iBooks. These ones, specifically, are from lesson 19/20 on enumerations and switches. In the beginning of the book, they give you a link to the project files you need for the course, and the playground files have exercises at the end of each lesson. [Here is a direct link to download the project files.](https://developer.apple.com/sample-code/swift/downloads/app-dev-curriculum.zip)
Thanks a lot 
You're welcome! :)
Nicely done! UI looks great. I literally just watched the lecture on core data last night. Hope to muck around with making an app soon. 
I've been learning Swift since the end of May, and I've been using the "Intro to App Development with Swift" book and the "The Swift Programming Language" book in iBooks to learn Swift. Assuming you have little-to-no programming experience (in my case, I had a little bit of experience with Scratch and Java in school), I would recommend you start at the intro book. It explains everything really well and has exercises for you to practice a bit. The other book explains the whole entire programming language (basically like a guide book or like a manual for the programming language), so you can use it for reference, reviewing, or learning different parts of the language. Right now, I'm on lesson 19/20 on the intro book (and will start 20 soon), so it's taken me about 6 weeks to get to lesson 19. However, I have been going pretty slowly to make sure I understand everything (and there were some times where I skipped a week or a couple of days of learning anything), so if you devote a lot of time and effort into going through the intro book, I'm sure you could finish at a much faster rate than me.
Why is this in /r/swift? 
Because this service lets you very easily deploy Swift code to the cloud.
And yet this probably makes it a lot cheaper and more reliable than if they'd have their own servers.
Why use Vapor over Heroku?
Oh that's interesting. I didn't know there was an Intro version too. I downloaded the one without the intro. Do you know what's the difference between the two? The one I downloaded without the Intro says it's for complete beginners too. 
I also downloaded the one without the intro, but I haven't used it a lot. From when I was looking through it, it seemed a lot more like the programming language book than the intro book but in a more organized and easier to understand format than the programming language book. I think that the intro book is better to go through, though, since it's more straightforward and it helps to guide you better than the other one. They're all great books to use, but I think you should start out with the intro book.
Absolutely, you need nothing else except Swift and imagination. Here is a Poker game developed in Swift using Vapor, all it needs is some WebSockets to make it multiplayer with no sweat. http://pokerduel.herokuapp.com/play
can i make it as an app also?
Of course! You could make it an iOS or Mac app and have the server do the syncing using websockets, all in Swift. I am working right now in a multiplayer Dominoes app for the Mac that will have an iOS app in the future. Server, desktop and mobile in Swift, that's the beauty of it. [Dominoes app](https://github.com/kuyawa/Gallery/blob/master/Dominoes/dominoes.png)
Anything dawg. Python is great because it's so easy. With python and swift you can build the world
Why not buy it myself from Amazon? 
I did something like that for my **Invoices app** so users could see if something went wrong (even send the log by email) in order to provide better customer support, unfortunately never went live so don't know if it was useful or not. Here is the repo: https://github.com/kuyawa/Invoices Go right to the Logger: [Utils/LogUtils.swift](https://github.com/kuyawa/Invoices/blob/master/Invoices/Utils/LogUtils.swift) [Views/LogView.swift](https://github.com/kuyawa/Invoices/blob/master/Invoices/Views/LogView.swift) [Views/LogView.xib](https://github.com/kuyawa/Invoices/blob/master/Invoices/Views/LogView.xib) Then I added a "Log" menu item to the Window submenu so the user could see it. It used different colors for errors, warnings, data and info entries.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [kuyawa/Invoices/.../**LogView.xib** (master ‚Üí 66d809d)](https://github.com/kuyawa/Invoices/blob/66d809d11f0ca8b44c66d12def7225df99ea101f/Invoices/Views/LogView.xib) * [kuyawa/Invoices/.../**LogView.swift** (master ‚Üí 66d809d)](https://github.com/kuyawa/Invoices/blob/66d809d11f0ca8b44c66d12def7225df99ea101f/Invoices/Views/LogView.swift) * [kuyawa/Invoices/.../**LogUtils.swift** (master ‚Üí 66d809d)](https://github.com/kuyawa/Invoices/blob/66d809d11f0ca8b44c66d12def7225df99ea101f/Invoices/Utils/LogUtils.swift) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djvvfty.)^.
Okay thanks for your help! I really appreciate it. 
This is easier. But if you'd rather buy it directly, by all means :)
You gonna put this up on the store?
Haven't decided yet. Still needs more work before it's ready.
Hello, If I were to create an iOS multiplayer game, I'd do this: 1 - Create an IaaS - I.E: Amazon AWS EC2. 2 - Create a NodeJS web server, so I can use it for API calls. 3 - Create a database (such as mySQL ). This database I can use to retrieve informations such as Players' positon, hp, inventory, etc. Also, I use it to download assets. 4 - For Swift, first, I would download all assets. Then retrieve the informations needed to render the "scene". And constantly making API calls to update the scene. Well, feel free to give a feedback about my approach. :)
His courses are amazing. I‚Äôve worked through his iOS 9 and 10 courses and learned tons. I would highly recommend you go through them and then periodically use your projects as reference/study material to better retain what he explains! 
Vapor is a Swift web framework (ie server side Swift). 
I recommend using Swift for the server side as well. Much better than Python. It's statically typed and compiled. 
Big Nerd Ranch published a Swift Programming book that is a great introduction to the language https://www.bignerdranch.com/books/swift-programming/ Amazon also has a Kindle version if you prefer e-books.
Ah, right. Totally forgot about the enum namespace hack. I kinda wish they would add an actual proper namespace, oh well.
Just finished two apps, the same app but one for iOS the other for Android. I used core data for iOS and Realm for android. I think I liked Realm better just for the ease of making queries, none of that predicate shinanagjns. 
I'm an absolute beginner too, and currently learning the non intro book. I had a look into the intro one as well, and it seems like the structure, how the topics build up is a bit different in the non intro book. The intro book seems to compress everything more and teaches you a bit of everything quicker, whereas the other one gets into topics more thoroughly, more reinforcement. It's by no means advanced Swift as far as I can tell, but explanation of the basics. This way, once you start a new chapter, like going from structs over to classes, you can apply what you've learned already and focus on the differences between the two. Another thing I noticed is that the non intro book also doesn't only focus on coding, you'll learn the ins and outs of Xcode, and some UI/UX stuff too, basically preparing you to be a well rounded developer. 
That‚Äôs why I use Realm too. Started using it in Android, now I use it wherever I can. 
Hmm that's interesting. I only have limited time to learn one material and I think I rather learn it more thoroughly. I will go with the non intro one thanks! 
Just FYI: Shift-Cmd-3 makes a (full screen) screenshot. With Shift-Cmd-4 you can select an area to screenshot.
Note that `lazy` is not thread safe.
From a quick look it seems all main thread, but if you start doing background mapping / operations a good tip is to add `-com.apple.CoreData.ConcurrencyDebug 1` to Arguments Passed On Launch in your Run scheme. You'll start getting asserts on core data threading violations 
The first suggestion removes lines that do NOT get called anyway (it is a delegate function of the tableview, your cell does NOT conform to that protocol, which is good!). The second suggestion does not provide content for default cells but for whatever cell you are dequeing from the tableview with the identifier you set. I just noticed that you are indeed dequeing a default cell but thats because you are missing the following: 1. In your viewcontroller, you are assigning text to 'textLabel.text' and 'detailLabel.text', two attributes that you actually do not want to set. 2. add "as! BookTableViewCell" to the end of line 58 After step 2, you can now access the properties that you declared in your own custom cell (number, author and book label) Your google-drive folder does not contain the storyboard so I can't look into your adjustments there. However, make sure that: 1. Your storyboards cell is set as BookTableViewCell (class) 2. Your storyboards cell identifier is set to "BookCell" By the way, while apple provides good documentation, you really shouldn't start your learning there. A UITableViewController already does too much 'magic' where you don't know why something happens (delegate, datasource, tableview itself). Try to do it with a UIViewController first. Later you can use UITableViewControllers to skip all the boilerplate code.
I did the same exact app in Android too but using SqlLite and to be honest I prefer the power of raw SQL over everything else, but for simple apps like this one Core Data is a perfect fit.
It's also horrifically unstable and things tend to go wrong in crazy, unexpected ways--speaking as someone who's used AWS as a sysadmin, a developer, and a customer of companies that use it. AWS is *not* an admirable quality in my mind or the minds of people I respect. It's something to be wary of.
Thank you for sharing. As a n00b, I can learn from this.
You have read 0 stories on Medium. Wonder why? I don't have Facebook or Twitter and I can't login with email. Because guess what Safari and Reddit don't share the cookies. Edit: For the ones who don't get it. You can't read Medium articles from Reddit anymore. You have to login with Facebook, Twitter or Email. They don't have login by email instead they send you link. But in order to open that link you must open Safari. Wonderful product experience!
Core Data is super useful and it's good to know. Once you know Core Data like the back of your hand I'd recommend looking into Realm or Magical Record.
Just rewrite the few lines. 2.3 and 3 are pretty similar. Xcode will suggest most fixes. Why not just build with Xcode 8 then? Shit you could likley build with XCode 7 too. Just because you target a previous sdk doesn't mean you won't support future OSes. 
We can't do the migration right now, it's a 100k+ lines of code app and the migration project is not to be done beforte end of year... I played a bit with the auto migrator results but it created a mess so we might have to do a code freeze to focus on doing the actual migration. As for your answer, thanks! I'm not very experienced with builds so I just wanted to make sure I was making a proper assumption by thinking that we could build for iOS 11 with swift 2.3. Thanks for your time! (I'm not the one calling the shots on migration timing. It should have been done last year TBH)
I will copy the main test with our results: On June 21 we launched our tool on Product Hunt. It was a part of our marketing-without-budget strategy. Our product, [Flawless App](https://flawlessapp.io/), is a tool for iOS developers to compare original designs with the real app in the iOS simulator. That doesn‚Äôt sound like something the startup community would be clamoring for. Usually, PH community like startup-oriented products. We thought Product Hunt would not be the place to get many trial users, sales or traffic, but we could receive honest feedback. Anyway, we decided to try. The preparation process, guides, PH rules and all screenshots with our statistics I organized in a comprehensive Medium article. Please, check it **[here](https://medium.com/flawless-app-stories/flawlessapp-on-producthunt-7db3e561ce7a)**. These are very short result &amp; highlights from our long Medium article: * **#1 for 24 hours** We were #1 the whole day and also had the most upvotes. Unexpectedly we got 1300+ upvotes, which was a huge surprise for us. Most of the upvotes came from PH community, from people we didn‚Äôt know personally. As a result, we were featured in the daily and weekly PH newsletters. * **Feedback storm**. We got really a lot of feedback in the live chat, PH comments, Twitter, email. Unexpectedly, iOS developers appeared on PH and started writing us very long comments. We were bombed with messages in live chat! During that non-stop support we found out minor bugs in the product, missing features, problems with our website, got interesting feature ideas and tons of positive emotions. * **Growth** Site Sessions: 3.2K visitors on the launch day. Sales: 3 sales on the PH launch day. Next day, we got 6 more sales. Trials: 35 trial users on the PH launch day. Next day, we got 62 more trial installations. So, 97 new active users in total. * üò§ **Non-stop work for 23 hours.** All main launch activities were done by 2 people ‚Äî Ahmed, my co-founder &amp; me. I woke up at 8am and kept working until 7am next day. This was the longest ‚Äúworkout‚Äù I‚Äôve had since I was a student. Ahmed worked for 17 hours that day. It was more difficult than we expected. * We shared the direct link. Some people think that sharing a direct link will hurt your PH ranking. This is a myth. We shared direct links to Flawless App on PH in almost all communities. * **We spent $0 on our PH launch.** Yeah, you can calculate our work hours, but we didn‚Äôt pay for promotion. * **We didn‚Äôt get PR-explosion** (for now). There is a myth that after you get into TOP-1 you will become super popular. We didn‚Äôt get emails from cool journalists or big tech media. Instead, we got many sponsorships proposal or other ‚Äúbuy-from-us‚Äù proposals. To summarize: it was useful for Flawless App. If somebody of you is thinking about Product Hunt, feel free to ask me questions!
Unless you absolutely want an iOS 11 feature you don't have to compile against that SDK. Keep running older versions of XCode. They're usually supported for a generation or two. I don't think you'd want to build against the iOs 11 sdk anyway really. There is no gain unless you use iOs 11 specific features. Also since you have an apple dev account you have 2 support incidents. If you want official word if how long XCode 8 can still ship binaries then you can call them.
How is this swift related?
Swift 4 is only compiled with Xcode 9+
Tool chains are not supported for app store binaries. https://twitter.com/UINT_MIN/status/874359078314582016
Then I'm confused why this post exists I guess. It seems you've answered your own question :]
Possible stupid question: is enough of the Foundation framework done for Linux to make Swift a legitimate choice for backends? I started looking into Vapor and Perfect and all those but then read Foundation is still being implemented and I kinda bailed in favor of Java/Kotlin.
There's a book on Swift 2 to 3 migration by Erica Sadun. You guys should read it. I wish I read it before I did the migration.
Thanks, I'll take a look at it!
This is a higher level of abstraction. It's a Platform-as-a-Service, like Google App Engine, where you write to the specific supported framework and then don't need to worry about individual servers and containers and running a separate database.
Yes you can. Just read it from the Reddit app (safari) 
It looks like it's built with programmatic views too if people needed examples of that as well.
I am curious about this as well since I am looking into using Swift on the server. Hoping someone can chime in.
&gt; I was wondering if, considering we cannot use xcode 9 with swift 2.3 code, we could still release fixes after the official release of iOS 11. From what I understood, to build my app for iOS 11, I just need to point xcode 8 to xcode 9 build tools. I just want to make sure that this work around also allows us to submit the app to the store, with ios 11 compatibility on swift 2.3 code. &gt; It is not only about the code itself but also the dependencies that you are using. I've migrated several projects from Swift 2.3 to Swift 3 / 3.1 and it is not truly difficult. However, the projects are not that big. Btw, how can you count how many lines are there in a project? 
We have iOS dev tool and we wanted to share our insights with other developers, who have side projects and need to get beta users üòä
No you can't. Here is a picture from Reddit app from iOS. http://imgur.com/MBzBLs0
Yeah - put it in the schedule, bid it out, and do it right. Conversion just to update the syntax is not conversion. If you can probably make your code more concise and efficient, it'll be a win, rather than just trying to stay afloat.
Both are good. But Vapor Cloud was built specifically for Vapor, meaning you don't need to mess around with buildpacks, manually configuring DBs, downloading Swift w/ each deploy, etc. You should see deploying to Vapor Cloud is extremely fast and easy. 
While Foundation is not entirely implemented yet, Vapor has filled in all of the pieces you need to make a web app. (And IMO done a better job than Foundation could). As Foundation continues to improve, Vapor will slowly start to adopt pieces of it. Especially when https://swift.org/server-apis/ are ready. However, 95% of this is going to be behind the scenes / behind Vapor's public API. No reason to not start using it today. 
For sure. It appeared as though you were asking the question :] which is why I answered. 
You could technically get rejected due to &gt;2.5.1 Apps may only use public APIs and must run on the currently shipping OS. Learn more about public APIs. Keep your apps up-to-date and make sure you phase out any deprecated features, frameworks or technologies that will no longer be supported in future versions of an OS. Since Swift 2.3 support is deprecated. They just expanded on this point recently at WWDC, so it‚Äôs anyone‚Äôs guess. Also the part about running on the current OS can be interpreted as having to be compiled against iOS 11. Or it can be interpreted as the iOS10 app running without issues on 11. Point is you open yourself up to rejection. Edit: You could get Xcode 9 and download the Swift 2.3 toolchain, theoretically you should be able to compile against the iOS 11 SDK and submit it. They reject development toolchains, but stable ones should be fine (haven‚Äôt tried it).
Why would I lie about that? 
Thanks! Maybe I'll give vapor a try for a small, unimportant personal project I'm going to start working on soon.
&gt; downloading Swift w/ each deploy Sold!
Its for a phone app..
Come on you buzzards 
I'm here to make some money.
Anyone who's ever told anyone they're a developer has heard the "I have an idea for an app" pitch. Learn to make it yourself.
And the whole "will you build it for a portion of the profits?" bit too
That's a flawed train of thought.
How much money do you have?
Technically you aren‚Äôt supposed to even submit Swift 4 code to the App Store with Xcode 9 yet. You‚Äôll get a warning about publishing content made with beta software. 
I have an idea for an app too. I just need a computer guy to help out. You'll need to build something similar to Facebook (timeline, messaging, etc.), image recognition to identify different breeds of dogs, and I want to use NLP to translate barks and whimpers into emoticons and image macros. I will of course keep 75% since this is my idea.
The problem is that there are quite a few people who come to this subreddit with brilliant ideas to make be the next startup unicorn with the next [Uber/AirBNB/Facebook/Snapchat/younameit]. They offer a portion of this future pot of gold (that will probably never come) for us to build their app. If your serious you‚Äôre better off finding a cofounder in your own circles or trying to build connections. Otherwise you‚Äôre not going to find much help here unless you‚Äôre willing to pay going rates of contract developers, easily $80+ hour for US based developers.
I am asking the same thing. I wrote what I have experienced with Medium and you said "yes you can" and implied that this problem is non existent. Medium is well aware of this problem btw. You can email them if you want.
Adding onto that, if you Shift-Cmd-4 you can hover over a window and press space and screenshot just the window
Troll, maybe? Coming into a subreddit like this, pitching an idea we know nothing about in a way we've heard a thousand times, and then calling us buzzards is not the way to get developers. You've just marked yourself as the kind of person none of us wish to work for or with. Let me to direct you to developer.apple.com and www.swift.org Have fun reading and learning!
I'll check it out
Thanks mate! Huge update coming in September! You and everyone is going to love it! 
You can get ~95% of the profits. But not you personally. Your attitude is trash.
No money. Only a great idea and potential investors.
Asking about the idea would have been the smart idea. 
I'm a mathematician and a chemist. I figured y'all were computer scientists. I got an idea in your area, how about inquiring instead of being lame.
Yea, but my idea is great.
Get this trash out of here
Are you all this useless or is it just you?
I'm *potentially* available, but you'd need to write me an *actual* check.
Here's a riddle for you. 
Yea, for how much.
I have a great idea for a building, but I'm ass at architecture. Would anyone like to make it happen? I have no money but it's a really great idea.
I'm an Electrical Engineer. You shouldn't have any trouble learning the language, considering your background.
Duh 
You must not like money. 
Wouldn't you feel like a dope if someone with no coding knowledge were able to make this app (Which you've asked nothing about), and the app were successful?
I don't want to learn the language. I hate computers. I came here because people here like computers and know about coding. And not one of them has asked any questions about the app. 
How much does it cost on average for an app to be made?
Depends on what you want + backend and the cost varies from there. 
Did I hurt your feelings?
How busy are you? May we speak in private, as a consultation? See if you think my Idea is good or not, and if you'd be interested in a project?
Not in the slightest, I'm done replying to you. Have a good day
Sure, I‚Äôm not opposed to discussing ideas. Feel free to PM me whenever you want, have you taken an opportunity to try making the app yourself though? Have any UI mock ups you can refer to? Makes the planning process simpler in discussion and organization. 
Read my original comment, mate. This isn't the approach you should be taking. Don't just take my word for it; check out the feedback you've been getting.
Get your idea put together completely, in writing, and in great detail, and then get a developer to go over the realities of developing it with you (potentially pointing out flaws in your idea since you may not understand the technology behind your idea), and to give you an estimate on the number of hours it will take to complete (you may have to pay someone for a few hours of their time for this, but if it's a great idea, you shouldn't have any issue putting a bit of your own money into it). Then you go to your investors and get the money worked out and hire or partner with a developer. You may be able to find a developer to partner with for a split of future profit and some compensation now, but you aren't going to find someone that knows what they are doing that will just do all of the work with a promise of profit that may never exist. Ideas alone are worth nothing, only the finished product has the potential to have value (but most have little actual value). Do a search here, every week someone comes in with a great idea, and they want a developer to do all of the work, and take all of the risk, without any compensation other than "part of the profit" (that's likely to never actually exist). 
Just downloaded it, great start! I love the app icon, so simple and clean! One suggestion, I think you should be able to swipe right to a new card while flipped over. 
To print the values of x and y, concatinated, you could use print("\(x)\(y)") In a string literal, placing the name of a variable in the slash-parentheses formatting prints the value. For example, you could do something like print("The value of x is \(x).") It's also worth noting your else statement doesn't need to say else if x != y You can simply say else, as that is the only other option besides x == y from the start of the if statement. 
Wow! Thank you so much!!!
I luv it
When you wanna print a variable with string you gotta use like that let myName = "yusuf" print("hello, my name is /(myName)")
Trick question. It's you right? You would like to make it happen. 
üçª
Cool and better than the application shown on WWDC
that is very strange problem :(
I usually click "Open in Safari", which redirects the app to safari which then redirects to the Medium app
I really don't understand the "problem". In one section, it's claimed that "foo(bar, baz)" would be better written as "foo(bar=bar, baz=baz)", and in the next section, that improvement is defined as a class-1 problem. Which is it? I don't see why either one is a problem at all. Depending on context, either one might be better. I see no way to automate deciding which is clearer. I certainly don't think it's worth making the syntax of a fundamental task (func calling) even more complicated. We've already got one way for callees to shorten it (_) in cases they think it'll be worth it. Allowing abbreviations on both the caller and callee sides, with completely different syntaxes, sounds like a recipe for confusion. &gt; The problem with labeling everything is verbosity. If that's really the problem, then you could go further and get rid of most variable names entirely. Forth is infamously concise. Why stop at argument labels? Answer: because the more you take away, the more the programmer has to track in their poor head.
Op did you make this video ? 
Perhaps use a tableView, and call the insertRow method?
How about putting the code you have in the button in viewDidLoad?
Tried that, it just displays a white "blank" page.
Did you make an App Transport Exception in the info.plist? https://stackoverflow.com/questions/30731785/how-do-i-load-an-http-url-with-app-transport-security-enabled-in-ios-9 
No, I'll try checking that out, thanks!
Ya anytime you're using a URL with 'http' you'll need to Allow Arbitrary Loads from your App Transport setting. If the URL is 'https(ecure)' then you don't need to change App Transport Also, It also looks like your force-unwrapping the URL. Maybe try assigning the URL(string "") to a different constant with a 'guard let'. So that the URL is unwrapped before being passed in as an argument 
Sorry, meant to put it in viewDidAppear. Just tried it and it works.
Stop your capture session, remove the back camera input, then add the front camera, then start your session again
Are you interested in getting comments or critiques on your code?
Will try thanks. Is this a new function I just create in ViewController? Think I got it to work thanks :)
Will look into this further, thanks for the explanation :)
i had to also remove the camera output then it worked. thanks babe
Best way is to make one Table View with two sections, one section for the post and one for the comments underneath
Yup!
That's an odd thing to do. May I ask why you're adding a pinch to zoom? By knowing why you want to do it maybe we can help you better. 
I'm adding text over an image and would like to zoom in and out like Snapchat/Instagram, etc.
You‚Äôd need to increase the bounds and the font size instead of messing with the transform. What you‚Äôre doing is essentially capturing an image of it at its original size and stretching it out (hence the blurriness). 
I believe the way Snapchat does it is it adds the text to the actual image itself instead of having a text view on top of it. Perhaps you can use a text view to let the user write the text and then when they're done typing have it be added to the image and make the image zoom able. 
String has a `draw` method. Why not use that?
Right, this is just for the editing part, where you can move the text around, rotate, and zoom in/out. 
Oh! Yea sorry I was thinking of when you save an image. I'm not sure how they do that. Perhaps instead of actually zooming when you pinch they actually just increase the font size. That's probably how I'd do it. 
That's what I tried but that doesn't change the size of the textview. It's doing both at the same time that's giving me an issue =/
Trying [this](https://paste.ofcode.org/kwxFatmm8TXsTPr4vaJt4V) but get weird behavior. 
What is your high score? Mine is 43
Score or Chips? In the upcoming update, chips will no longer be used as part of your score. They will be used as in game currency. You‚Äôll be able to collect them and save them for things in the upcoming store! My chips for the version you have is 56. My score is 32,000. 
You‚Äôre not modifying the font size, so that will just result in changing the area available (although then sizing to fit will likely get rid of the extra space)
Also you‚Äôre multiplying by the full scale each time, so you‚Äôll be getting larger/faster growth than you want, you need to reset the scale to 1.0 if you‚Äôre modifying things directly
I just gave a review asking them to be used for something lol and nice
Haha! Thanks for the rate! Can‚Äôt wait to launch the update! 
I have some exposure to programming (beginner level JavaScript) and I too am using Apple's book (the non-intro one, App Development with Swift). I'm interleaving this with the first (free) projects from Hacking with Swift. It's early days, but I have built the Light app and also the Storm Viewer, so if anyone needs a dev to switch their phone screen color or show one of an array of photos, I have these essential job ready skills ;). Seriously, what's nice about going back and forth between the two sets of materials is that I feel the Apple one is a thorough intro not just to Swift but to programming and dev in general, whereas the Hacking projects just launch you right in, so you really are using Xcode and making stuff.
I'm able to adjust the textview size but would you adjust font size with it?
I love that app. Just downloaded it. 
You don‚Äôt need to explicitly declare an initializer. When your code compiles it will create an empty initializer for you that does nothing. With that being said, if your class contains any uninitialized variables then you must specify an initializer and initialize your variables there. 
Code looks decent. In AppDelegate.swift: // Use Firebase library to configure APIs. FirebaseApp.configure() Consider losing the comment since it doesn't actually add anything to this code. In `ScoreManager.swift` Declaring the players as global variables is a bit odd. `incrementSetScore()` has a huge switch block. You could clean up the logic in that and reduce the size. In `ViewController.swift` Theres many times where you update both player's score label to the same string. Consider having one function that updates both labels to one string, and calling that instead of having two lines everywhere. Overall decent code, thanks for sharing your project with us. How long have you been developing for?
thanks for your reply! 
what types do you need to and dont need to explicitly declare an initializer for? for func and struct do you not need explicit initializers, but for classes you do?
Yes, it is my video, and my real voice. Thanks for watching
Classes and structures must initialize their variables properly by the time an instance of said class or structure is initialized. You can think of an initializer of a special type of function that simply gives your object a default state. Say you declare a ‚Äòclass Foo { x: Integer = 0 }‚Äô. You don‚Äôt need to explicitly declare an initializer because you‚Äôre setting the value of x during its declaration. Check out [Swift‚Äôs documentation](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Initialization.html) on initializers for more information.
Wow! Thanks for spreading my talk!! üòÉüòÉüòÉ I‚Äôm so glad you found it interesting!
And what should the non-optional members‚Äô values be?
Looks like you‚Äôre meant to just call it once.
I've done this before, major headache. Scale the text view while the gesture happens then when they're done, set the scale back to 1, reSIZE the text view and increase the font so that it looks the same as it did when it was scaled. This is how Snapchat does it, you can see it's blurry until you let go and then renders. Getting the resized version to look exactly like the scaled one is the hard part, their are a lot of measurements in a text view that you have to consider. 
Unfortunately calling it once wouldn‚Äôt solve the lesson. Looking at others solve the same lesson gives them a congratulations message on creating a function and the function is called multiple times. I wonder if this is due to my iPad running the iOS 11 beta. 
In a language like C, you might declare a variable, which makes space for a value, but separately assign an initial value. In which case, it would be undefined what was stored there until you assigned that initial value. It's basically whatever was using that space before. In Swift, you are required to have an initial value, which greatly reduces undefined behavior and thus, bugs. What might be confusing is that the language supports a lot of ways of assigning that initial value. For instance, you can specify it when you declare the var: 'struct Foo { var bar = 1 }'. Optionals are a special case; they default to nil implicitly, but the compiler is basically adding ' = nil' after it. But anything that doesn't have a default value must be specified in the initializer, which is kind of like a dynamic default value. This all bubbles up every level. A struct may specify all of its default values, but when you go to create a var to hold the struct, you still need to assign a default value there, which means initializing a new instance, which uses those default values.
Hi there! I get this: https://imgur.com/a/beJrK when I open the link. Looks like skilled.io is blocking requests from specific countries(I'm trying to access the video from Nepal). I get the same message in the other Skilled.io videos as well; I emailed them about this a while back but didn't get any response. I don't know if there's anything you can do about the problem but just thought you'd be interested in knowing. In case anyone else is facing the same problem: looks like `youtube-dl` can download the video. 
If I understand it correct you should write a whole new function, which solves the puzzle. Try: func preparedWay() { Grabby() grabby() ... } If this won‚Äôt work try to loops (for, for each, while). This will repeat commands while a statement is true or false. As I am a for loop guy: // Same as for ( i = 0 ; i &lt; 4 ; i = i + 1) for i in 0...3 { // i=0; I=1...;i=3; grabby() // as you only want grabby repeated 4 time. } Edit: You shouldn‚Äòt need a loop, just define your own function and paste the commands you need in it.
Any way to make the page displayed, "scale to fit"?, or does it do this automatically for all pages (youtube, google etc. seems to scale to screen) . I have one page that displays incorrectly.
Thanks for your response! Here is what my current project looks like: Book.swift import Foundation class Book { var number: String var title: String var author: String init(number: String, title: String, author: String) { self.number = number self.title = title self.author = author } } BookTableViewController.swift import UIKit class BookTableViewController: UITableViewController { var books: [Book] = [ Book(number: "1", title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(number: "2", title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] override func viewDidLoad() { super.viewDidLoad() // Uncomment the following line to preserve selection between presentations // self.clearsSelectionOnViewWillAppear = false // Uncomment the following line to display an Edit button in the navigation bar for this view controller. // self.navigationItem.rightBarButtonItem = self.editButtonItem() } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } // MARK: - Table view data source override func numberOfSections(in tableView: UITableView) -&gt; Int { // #warning Incomplete implementation, return the number of sections return 1 } override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { // #warning Incomplete implementation, return the number of rows if section == 0 { return books.count } else { return 0 } } override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "BookCell", for: indexPath) as! BookTableViewCell // let book = books[indexPath.row] // cell.textLabel?.text = book.title // cell.detailTextLabel?.text = book.author // cell.showsReorderControl = true return cell } BookTableViewCell.swift import UIKit class BookTableViewCell: UITableViewCell { var books: [Book] = [ Book(number: "1", title: "Introduction to Computing Systems", author: "Patt &amp; Patel"), Book(number: "2", title: "Schaum's Outlines: Digital Principles", author: "Tokheim") ] @IBOutlet weak var numberLabel: UILabel! @IBOutlet weak var titleLabel: UILabel! @IBOutlet weak var authorLabel: UILabel! func update(with book: Book) { numberLabel.text = book.number titleLabel.text = book.title authorLabel.text = book.author } func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: "BookCell", for: indexPath) as! BookTableViewCell let book = books[indexPath.row] cell.update(with: book) cell.showsReorderControl = true return cell } override func awakeFromNib() { super.awakeFromNib() // Initialization code } override func setSelected(_ selected: Bool, animated: Bool) { super.setSelected(selected, animated: animated) // Configure the view for the selected state } } My storyboards cell is set as BookTableViewCell (class), and my storyboards cell identifier is set to BookCell. I do not understand why I'm still seeing "Label" as the text in the cells in the simulator, and not the title or the author. I apologize if I misunderstood your comment, but I'm completely lost. Do you have any ideas? Thank you for your time and effort once again. 
The basic answer to your question is that initializers are important when you have a class or structure that has properties without default values or values that need to be set at a later time. This way we don't have variables that don't contain any data. To go more in depth: Swift provides a default initializer for any class or structure that provides default values. A structure instance automatically has a memberwise initializer if a custom initializer isn't there. A memberwise initializer allows you to initialize the variables of new instances of that structure. In other words, you don't have to explicitly include an init() method if you don't want to. As for classes, you must explicitly include an init() method to initialize the member variables that don't have a value until the instance of a class is created. 
&gt; we've already got one way to shorten it That's removing it, not shortening. &gt; allowing abbreviations on both the caller and callee sides Not what I suggest. I just suggest a shorter syntax for the normal labeled case, on the call site, and no change to the declaration or the semantics. Again: look at OCaml. 
I didn't see this in skimming the other posts, so I'm going to try and cover this here. I'm a massive fan of Swift initialization, and I'd offer [this](https://stackoverflow.com/a/32108404/2792531) and [this](https://stackoverflow.com/a/36612507/2792531) as some recommended reading on the topic of Swift initialization. Let's suppose we're making some sort of social media app. Our server has a database of users that we want to display as friends or whatever to the user of our app. None of this data makes a lot of sense to be mutable, right? We're not going to modify it. We might let the user edit *some* of their own information, but it certainly doesn't make sense to edit their friend's information. So perhaps we make a class like this: class User { let id: UInt64 let displayName: String let profilePictureURL: NSURL? } And potentially other properties of course, but let's keep it simple for now. So, what are our options for this class? The above won't compile because none of our properties have any values. We could naively set those values later: let topFriend = User() topFriend.id = json["id"] topFriend.displayName = json["displayName"] topFriend.profilePictureURL = json["profilePicture"] *Note: This is simplified. We'd actually need to verified these are the correct types, etc.* But this has multiple problems. First of all, we now have to change our class definition: class User { var id: UInt64? var displayName: String? var profilePictureURL: NSURL? } Now `nil` is *always* an option for our properties and they can always be set at any time after initialization. That's not good. Our code isn't as clear. This indicates that it's *okay* to mutate our properties (which it isn't and could lead to problems) and `nil` is an okay value to set these properties to (which doesn't make sense for 2 of the 3 properties), and there's not a great way to tell whether or not the user has been properly initialized. When we use the original implementation of the class I put toward the top, we avoid all of these problems. The values are set in the initializer, which means we never have access to an object that isn't completely ready to use: let topFriend = User(id: id, displayName: displayName, profilePictureURL: profilePicture) And we know for sure that we have a valid `id` and `displayName` or we would not have been able to initialize the user. And those properties are immutable so for the lifetime of that user object, they'll always be valid. So from the simple definition of the class and use of an initializer forcing our object to *always* be in a valid state, we're replacing tons of safety checking code we'd either write or omit and let bugs through and instead letting the compiler enforce the validity of our object.
I'm going to agree with /u/applishish This article is poorly written. It's not whether or not I agree or disagree with whatever point the article is trying to make. The problem is the article isn't even remotely clear. It's not clear to me what the actual problem is. It's not clear to me what the actual recommended solution is. I came into this article considering myself exceptionally knowledgeable in Swift and with zero knowledge of OCaml or Python. And you've posted this link in /r/swift, so presumably I'm not the only person who will read this that knows nothing about OCaml. What I'd recommend you do, for a Swift reader, is post an example of _exactly_ what you're talking about in **Swift** that you consider a problem, and _exactly_ what your solution would look like. That would let me, as a Swift reader, determine whether or not I agree that the problem is actually a Swift problem and then determine whether or not I agree that the solution is a good Swift solution. Right now, I'm just completely lost. My best guess (which is probably completely wrong, but perhaps shows you just how poorly you're communicating your idea), is that you want to take a Swift method like this: doAThing(foo: Int, bar: Int) -&gt; Bool and instead of having to call it like this: let result = doAThing(foo: foo, bar: bar) you want to be able to call it like this? let result = doAThing(f: foo, b: bar) Is that what you're recommending? If that's the case, you are aware that you can always write wrappers and extensions for anything you consider too verbose, correct? class Foo { func doAThing(foo: Int, bar: Int) -&gt; Bool { // actual implementation return true } } extension Foo { func doAThing(f: Int, b: Int) -&gt; Bool { return doAThing(foo: f, bar: b) } }
Build process is all command line scripts so there's got to be a way.
Expert is the variable type you are assigning, while expert is the name of the variable that you are allocating memory for to be used in your program. Most of the time it's not a good idea to name your variable the same as the type it is. Try, let gameLevelExpert = Expert() now any methods that are in the Expert class, you can use for gameLevelExpert, assuming those methods are public.
The Expert with a capital E is a type. A type is like a blueprint. Let's take a player. A Player type is the blueprint for all players. And a player has a score. So in the definition of the Player type, all values and actions are mapped out. When you create a player (like registering one), you create one using let joannisO = Player() "let" defines a variable, a constant one, one that cannot be changed. "joannisO" is the name of the variable, and "= Player()" means that you're creating a new Player and putting the result into the "joannisO" variable. A variable could be seen as a post-it. Like a shopping list. One could make a shopping list with values, every product you want to buy is on the shopping list. So you can create a shopping list like so: let shoppingList = Array&lt;String&gt;() the "let", again, means creating a new variable (or post-it). And the post-it's name is "shoppingList". Then comes the equals sign "=" to mark that you're giving it a new value. And "Array&lt;String&gt;" is an array (list) of Strings (text). So whenever you read your shoppingList, you need to refer to the variable, and not to "Array&lt;String&gt;", because "Array&lt;String&gt;" is just the type of content in the variable. The same goes for expert, although as you might now see, the naming of the variable is a little confusing. "let expert" created a new variable or post-it called "expert". And then "=" is used to assign it a value. "Expert()" creates a new expert and writes it to the post-it. The variable is the post-it, but until you write something on the post-it it can become any kind of post-it. It can become a phone number, your colleague's home address, an email address, a shoppingList or an "Expert". It's just a holder of information. Finally, "let" is a constant variable, it can not be changed unless it's a "class", which is a special type of information. "var" is used in scenarios where you want to edit the information, like someone's age. If a user's profile has an age that cannot be changed, on their birthday the number cannot go up. 
Thank you for the in depth reply! Most answers I find regarding swift are short and not very helpful for someone who doesn't really understand it yet.. The wording in the game definitely could've been a lot better in this instance.. but using your example, basically joannis0 is the var (or constant?) that I'll be calling up. And Player() is basically just defining what joannis0 is? Like calling up the shopping list instead of every item on the list. In the games case I don't really understand why it's necessary to declare expert = Expert(). Why can't I just leave that out and use Expert()? I'm assuming, using your Player example that more than one var can be declared as Player() and you call joannis0 or another variable to specify which player you're calling?
I agree it'd be a lot less confusing if they weren't named the same.. -__- I think I understand the basics of it now. I assume it'll go more in depth later it just kinda threw me into it without really explaining for this first level. I've used variables and I understand that well, the type is just a new aspect
Cool! I've been getting into MVVM lately, coincidentally, but on C# not Swift (yet). That said, I have a few notes about the code, specifically about RxSwift usages 1. Is there any reason you're not creating `DisposeBag`s to dump these [bind(to:) results into?](https://github.com/andzuz/MvvmExample/blob/446e19c37759b3b941eb28eb3b88ef5cfce06a5e/MVVM%20example/ViewController.swift#L24) This would create observers that'd be retained indefinitely after the view controller has been deallocated, I fear. Read [this section](https://github.com/ReactiveX/RxSwift/blob/master/Documentation/GettingStarted.md#disposing) of RxSwift's documentation about disposal of subscriptions, retain cycles in RxSwift can be nasty to track down, I'd know that firsthand :/. 2. It'd probably be a little more verbose, but a little bit more encapsulated to [cover these Variable&lt;T&gt;s into private fields and expose them as read-only Observable&lt;T&gt;](https://github.com/andzuz/MvvmExample/blob/446e19c37759b3b941eb28eb3b88ef5cfce06a5e/MVVM%20example/PostViewModel.swift#L7) using `var userId: Observable&lt;String&gt; { return _userIdVariable.asObservable() }` or similar, that way you ensure that clients of the class can only observe mutations propagated by the view model itself. Thanks for sharing! Hope you have a blast w/ Swift and iOS programming (:
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [ReactiveX/RxSwift/.../**GettingStarted.md#disposing** (master ‚Üí 38552d5)](https://github.com/ReactiveX/RxSwift/blob/38552d566cd72607642a7abe6709304b6deb6b87/Documentation/GettingStarted.md#disposing) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djznpxz.)^.
Thanks m8! I'll definetly consider what you've said, I find those good pieces of advice.
Ha! How did I know you were going to just parse from a String, and avoid the whole stream situation in Swift? Cute.
1. Completely agree. Definitely use a `DisposeBag` for the bindings in the ViewController. 2. I would be careful about creating observables with computed vars. Every time you reference `userId`, it will create a new observable, and you really only ever want one. In this case it's inconsequential, because you're only using it once anyway. But I don't think it's great practice to do that. If you really want to make those variables read-only for the view, I would do it one of two ways. Using a constant: let userId: Driver&lt;String&gt; init(apiController: ApiController) { self.apiController = apiController self.postDto = PostDto() userId = _userIdVariable.asDriver() } or using a lazy var: private(set) lazy var userId: Driver&lt;String&gt; = self._userIdVariable.asDriver() Since the sole purpose of this observable is for UI updates, I think it's best to use `Driver`. EDIT: added `private(set)` to the lazy var
I recommend you watch a video on object oriented programming. It will help you out significantly.
Create the text view at it's maximum size, then scale down instead of scaling up. Note that fonts don't often scale as images do--they change stroke widths etc as the font size changes. Depends on what you're trying to do. Hm, another option might be to change the underlying layer's rasterization scale? I'd have to try it to tell you more.
The underlying rule (for safety reasons) is that access to uninitialized variables is never allowed. So Swift will force you to initialize all your variables in some fashion. You can provide default values, make your variables lazy and provide an initializer that way, or initialize your variables in an init() funciton. (I realize that doesn't directly answer the question)
Technically you _can_ call Expert().moveForward() - and sometimes that's the correct move, if you don't want to keep a reference to that specific player. This creates two _different_ instances of an expert, and tells each of them to move forward. You're creating two objects here, one after another, and instantly calling a method on them: Expert().moveForward() // initializes, calls, then deallocates Expert().moveForward() // Initializes, calls, then deallocates While this creates one instance of an expert, and tells that instance to move forward twice: let expert = Expert() // initialize and store reference expert.moveForward() // tells reference to move expert.moveForward() // tells reference to move // when the calling function ends, expert is deallocated. The difference here is that only ONE object is initialized in the second example. Another difference is that the expert created in the second example will last for the entirety of the scope that it's being called in, while the first example deallocates (See: remove from memory) each of the two created objects directly after it calls moveForward() on them, since nothing is _maintaining_ a reference to those objects.
[I forked the project and made some changes and comments.](https://github.com/SamHFrancis/MvvmExample) I've never used `Swinject`, so I didn't mess with that stuff. Let me know if you have any questions/concerns. Hope this helps! EDIT: Added `private(set)` to the view model's lazy vars to make them read-only.
I find your changes amazing, as a beginner. It would never occur to me that I could simplify this code that much. Thanks to you I have much better template now, thank you!
That's great, I'm glad this is useful to you! I've been using RxSwift for about 5 months, and I've written some really crappy code along the way, haha. It's been a struggle trying to work out some best practices for myself, so I like to share what I've come up with when I can. I also highly recommend [Ray Wenderlich's RxSwift book](https://store.raywenderlich.com/products/rxswift). It solidified a lot of concepts and practices for me, after poking around in the dark for a couple months.
That's the book our company has bought for us, haha. After your recommendation I think it's definitely worth taking a look into, I think I will have quite good understanding of RxSwift in general because of the experience with RxJava/RxAndroid. 
[Hacking With Swift](www.hackingwithswift.com)
thanks a lot for the answers everyone. this was very helpful.
Do you think this r/swift is a fitting place to ask that question?
I would think so, but if it is not I'm sorry I can take it down
I mean the question has nothing to do with Swift. The only connection might be that you want to write a game for iOS and would maybe do that in Swift but the question itself is completely generic. I think a game-dev related subreddit or maybe one of the pages in the stack overflow network would be a better place.
Yea sorry I worded it wrong, should I edit it or take it down and ask in a different subreddit?
It kind of depends what the revised question would be i think. If it is something specific to Swift, this subreddit is the one. If it's general game-dev, r/gamedev looks like a good place. People also post iOS-specific stuff on here, although I think /r/iOSProgramming is more suited to that.
Ok, thank you I will proceed to post it to a different subreddit; sorry
stanford's course. The instructor worked with steve jobs and he's amazing. https://m.youtube.com/watch?list=PLPA-ayBrweUz32NSgNZdl0_QISw-f12Ai&amp;v=ilQ-tq772VI
Thank you will check it out
Thank you will check it out
ew this looks like some kind of homework. I can't tell what your question is. If a function returns something then it has a -&gt; and the type of value that it's returning and then xcode bitches at you until you write something that returns that kind of thing. If there is a chance you won't have that kind of thing to return then you make it optional and return nil when it can't come up with the goods. I don't know why they say you can only return one. You can return -&gt;(myRifle: Double, myGun: Float, forFun: [String: Any]) or some crap like that. But that is returning a "tuple" and thus a single compound value. So I guess they are technically correct. You can think of it as the arrow points to the type of thing you want to get out of the function. 
I'd say keep learning the basics, but at the same time, try some of the system APIs and learn storyboards as well.
Basically. I have 2 VC... Lets call them VC1 &amp; TableVC. I have an alert prompt with text input in VC1 and I want to save the text inputed there as a new row (append) in TableVC. The above code is in VC1. [New to SWIFT]
Append the new entry to whatever you're using as your table view's data source and reload the table.
Learn the language first before making apps. 
Ok make a public variable like this : var dataArray = [String]() append the text from the textfield to the array like this : dataArray.append(field.text!) use the array to display the data in the table view -------- Check out this demo and see if it help https://gitlab.com/devzaid/for-reddit-user
How well should i know it? 
Understanding classes (subclassing, overriding, inheritance, etc). As soon as you make your first Xcode app, you will be presented with a class file, override keyword, super keyword, etc. things that will be confusing unless you understand classes first.
Ok thank you, are classes in swift similar to classes in c++?
I'd say no. Swift classes do not have header files (which means no separate file for method or property declarations). They also do not have separation of sections in regards to public and private. Swift classes also don't have getters and setters automatically (I think Objective-C does, I don't know about C++). I don't think classes can be friends either like in C++ but they can be subclassed. Swift is a lot cleaner in terms of classes from what I remember of C++. 
Oh ok, well I will get to learning all that before I jump into developing an app. Thank you:)
Not for everybody though! I'm somebody who learns programming languages best by trying to achieve something and learn on the way. Ofc this only works if you got experience in at least one other language but after that you notice soo many similarities that most of the new stuff are frameworks or special quirks of the language. 
Np. I'm talking from experience by the way. I have 5 apps in the App Store and just finished my 6th app. I tried making an app while learning Objective-C at the same time and I do not recommend it. I didn't do that with Swift. I learned Swift first and then started with apps. It made the whole process a lot easier.
Oh nice, what are the names of the apps so I could check them out and see if they are of any use to me.
I don't recommend that. I've learned while creating and it's not a good thing because you think your approach is valid only until you learn more you realize what you did is bad design, etc. With Objective-C, I started making an app and learning the language. I knew nothing about MVC or architecture patterns, wth delegate/protocol meant, etc. because I thought what I was doing was right. The problem was I didn't learn more about app development and the language like I should've before starting an app. Once you start an app, you don't seek out ways to learn more about development, you seek out ways to make whatever task you're coding to work.
Probably not. 3 of them are games (I only make games to take advantage of trends but I don't like making them), 1 is an Apple Watch app for Yu-Gi-Oh duels, and the non-game app was my first app that was written in Objective-C that I'm going to replace soon with a new app. My 6th app is a super simple budget and expense tracker that is clean, and that's it. Nothing too complicated. I'm still working on it. [My website](http://jozemite.org/)
Well i do like games and I saw one that looks interesting, chomp'd Adan Ramirez is your name in app store correct?
Yup, those are mine. Chomp'd was my first game. Took 6 months to make with a full time job and school. I wasn't as experience in Swift. Wall of Trump took me 3 months, and my 3rd game, Infinite Spinner took me 4 days.
Great, im downloading the game right now. And wow just 4 days for the Infinite Spinner.
Once you have experience, it makes things a lot easier. Plus, making the graphics for that game was a lot less time consuming. I'm only a single developer so I have to make all the graphics, code, project, sound editing, etc.
I totally agree, it's not for everybody and there are risks, in my case it works because I have an absurd amount of time right now and I try to research as much as I can on what is good/bad design, or especially how to be as ressource-friendly as possible. &gt;I knew nothing about MVC or architecture patterns, wth delegate/protocol meant, etc. because I thought what I was doing was right. I think you can kinda prevent this by doing your research right, in my case I had to inform my ViewController that something happened in AppDelegate and I found out that I can use NSNotificationCenter, after further checking out NSN.C. I saw that there are way more ways to "transport" data around your app like delegates for example. Doing that for everything I need in my app got me an alright overview about how to use the language. Also being critical of your own code is one of the best ways to learn imo, for example if your app (I'm currently working on a os x menubar app) uses 19mb of RAM you shouldn't say: ah well that's fine, but try to shrink this down to the minimum by researching what functions are best suited for the task and how you can shorten and improve your code Btw, I highly recommend using SwiftLint for every beginner, it helps getting used to a lot of things like not force unwrapping or casting. 
&gt; I think you can kinda prevent this by doing your research right The thing is, in general, people who learn a language by building a project don't do additional research because they think what they're doing is right. If they had an issue like yours (especially beginners to programming), they might make global variables instead. &gt;Btw, I highly recommend using SwiftLint for every beginner, it helps getting used to a lot of things like not force unwrapping or casting. I was a beginner but not anymore. I started learning Swift the same day it came out and have 5 apps in the App Store and about to release a 6th one. I'm more experienced now of course. I even got a job as the lead iOS instructor here in San Francisco for the summer. 
&gt;I even got a job as the lead iOS instructor here in San Francisco for the summer. Damn sounds cool! Congrats! &gt;they might make global variables instead. Luckily Python taught me to never use those :D
It is an amazing job! Working with students between 13 to 25 to learn how to code and make apps is very rewarding. But I'll be sad when the summer ends because then I have to come back to Texas jobless lol. But it wouldn't be hard to find another job in my field. I've never used Python but once I learned protocol/delegation and singletons a long time ago, I never did global variables again.
Clearly I failed to explain yea. What I suggest is to call your example like this: let result = doAThing(:foo, :bar) namely, when the argument label and the argument matches exactly one can skip the label.
Python is awesome as long as you don't have to do UI, it's great to get something done fast without having to worry about memory leaks (looking at you C++ ). Oh and matlab/numpy are super fun to mess around with when you have to handle data and graphs. I was curious about a slotmachine-bot on a discord server so I just quickly remade it in python, automated it and threw the stuff into matplotlib resulting in pretty graphs: https://i.imgur.com/jnu8nE0.png [code](https://pastebin.com/MaVXAJLt) Highly recommend checking it out for anything not UI, super fun to work with and learning it doesn't take long.
Hi Swifters. Recently I released my (until now) most complex iOS App: [Sophia - Photo Transformer](https://itunes.apple.com/us/app/id1241606097?mt=8) Some of the examples of transformed photos can be seen in original link. Sophia doesn't use machine-learning algorithms, instead it transforms photos with the help of fast-procedural algorithms. Every photo transformation is done almost **completely randomly**. Almost innumerable combinations are possible. Every transformed photo can be **reconstructed** to a desired size (currently limited to max 4000x4000 (CPU, RAM)). I've achieved that with remembering every random calculation (**it can go up to 5.000.000** random calculations) PER photo transform. I would like to hear your opinion? **EDIT: If anyone is interested, I can explain methods how Sophia transforms photo.**
Awesome stuff man! Id go for a breakdown
It was already posted here :) https://www.reddit.com/r/swift/comments/6mcyuy/how_to_write_less_code_with_swift_protocols/
This. It's a nice balance between just getting stuck in and building stuff and actually learning about the concepts and features of swift/iOS. The projects work almost like code katas, building up muscle memory by repeating the same fundamentals as you are introduced to new concepts. Once you have done this, you should have a really good idea of what you want to learn next and which concepts you are struggling to understand.
Oh wow, this is a very useful article. I always wanted to learn how to think in terms of POP!
So can you explain how to implement the presentIndicator method following this protocol extension structure?
I'm interested as well. It seems like a big hole in the article
&gt; st weekend and I'm really impressed by what I've seen so far. I've never understood Optionals in Java like I have in Swift. Multi-case statements, pattern matching, type safety &amp; inference, computed properties, enums with associated values, unicode support etc are neat features and I j Same here! I finished the first two lectures and may need to re-watch parts of the second one since there was so much material covered. I'm moving very slowly though since I'm working full time + getting a degree in CS and don't have much time. Have you been doing the assignments/readings with the lectures? Also, do you know what practical skills we will have by the end of the course? 
Whoa, you're doing a lot there! I am doing the complete course- lectures, reading material and assignments. Taking it slowly, writing notes. The suggested reading assignment is really useful. I believe it is important to know idiomatic Swift before I delve into app development.
Hello! I'm actually an author of this article ;) That's one way to do it: https://gist.github.com/bartoszkaminski/fc9f24228050618d225b8be1e0f1ebd6 Ideally you should create your own subclass of `UIActivityIndicator` to make sure you don't remove some other indicator when calling `hideActivityIndicator()` ;)
&gt; pattern matching, type safety &amp; inference, computed properties, enums with associated values, unicode support etc are neat features If you like these, you may enjoy Rustlang as well.
I don't think this is a bug. You should be creating your Range as: Range(data.startIndex...data.startIndex.advanced(by: 4)) The Data.Index for the start of a Data is not guaranteed to be zero.
Thank you! I think I understand it now, so if I want my ViewController to adopt both ErrorPresenting and ActivityIndicatorPresenting protocols I should create the class like this: class ViewController: UIViewController, ActivityIndicatorPresenting, ErrorPresenting { } 
Exactly üòä
Learning ARKit so I can build some music apps with it! https://medium.com/@gmcerveny/how-im-learning-arkit-baee5376a6a2
You can call functions for optionals: var middleName : String? middleName?.uppercased() If you want to have the optional unwrapped outside of a block, you can use `guard`.
But isn't that as bad of an idea as calling middleName!.uppercased() only that I'm getting *nil* as a return and not an compile error, which depending on the behaviour might be okay, but still defeats the whole purpose of an optional?
if you explicitly unwrap an optional and it is in fact nil, your app will crash. Doing something like middleName?.uppercased() is the same thing as sending a message to something that is nil inside of objective-c, nothing will happen. Re: your questions... 1) if you did this: "var firstName: String?" it would compile perfectly fine. The "?" makes it so that it is an optional variable, which also happens to mean that it is nil. 2) In my experience with swift, I like the first scenario better (unwrapping it and then doing what you want, it's more explicit and you can follow along with what potentially is going on if there are errors you aren't expecting. You COULD also do exactly what i was saying above.... middleName?.uppercased() and that is fine as well. 3) I'm not sure exactly what your concern is here? 4) https://developer.apple.com/swift/blog/?id=10 &lt;&lt; Read that, should help
This is really informative! How do you think reading the documentation compares to watching videos? 
In the case of `middleName!.uppercased()`: * If `middleName` is `nil`, the application will crash. * If `middleName` is not `nil`, the line will return `String` (non-optional) (because that's what `uppercased()` is defined as returning). In the case of `middleName?.uppercased()`: * If `middleName` is `nil`, the application will not crash. The line will return `nil`, but the type will be `String?` (`uppercased()`'s defined return type wrapped in an optional). * If `middleName` is not `nil`, the `uppercased()` method will actually execute and return whatever it'd return, but because of the optional chaining, we'll wrap the return type in an optional, so we'll have a `String?`. So... let bigMiddleName = middleName!.uppercased() // bigMiddleName will be defined as String // app will crash if middleName is nil versus let bigMiddleName = middleName?.uppercased() // bigMiddleName will be defined as String? // bigMiddleName may or may not be nil // app won't crash (I am realizing now that `uppercased()` might be defined as returning `Void` and mutating the string it's called on... but for the sake of this argument, let's assume it's a method that returns a `String`.)
Optionals are meant for the compiler to warn the programmer, not for the programmer to warn the compiler. You will always have to verify the nullability of types but the compiler will warn you if you try to use them without checking. That's called type safety.
Neat! Most of us end up with a complex app because the client required we scrape a website instead of allowing us to build a JSON API.
You kind of hit the nail on the head with 3. the compiler forcing you to handle it is better than you forgetting to do a nil (null) check. Either you deal with it at compile time or run time and I prefer my app not crash!
If you have an Objective-C background, the closest match to Objective-C's *actual* behavior is to make ALL of your variables for class-types as optional (full optional, not implicitly unwrapped) and use optional chaining on all of your calls, then for all your variables of non-class-types, don't allow optionals at all. If you would get an optional non-object (for example, `array?.length` [and yes, I know array in Swift is a struct]), then use the nil-coalescing operator (`??`) to default it to `0` (or `false` in the case of booleans). That's what you get with Objective-C (minus the syntax you'd have to write in Swift to mirror the behavior). In a tl;dr fashion, Swift optionals do two very powerful things that are sorely lacking from Objective-C: 1. Swift optionals allow me to define object types that cannot be set to `nil`. 2. Swift optionals allow me to define non-object types that can be set to `nil`. I can't do either of these in Objective-C (or other programming languages that don't have some sort of optional/nullable pattern). For example, I want to get some integer from the server indicating the count of something. In Objective-C, I'd have to do something silly like use -1 or something to indicate I haven't yet received this value. In Swift, I just make my variable optional and set it to `nil` until I have a good value. The difference here is that the `nil` is inherently more readable and cannot possibly be confused for receiving a bad value from the server (what if the server somehow sent you -1). And now I could even use an unsigned int. Or what if I have a class that depends on some sort of object. And maybe it is or isn't okay for that object to change, but what's not okay is for that object to _ever_ be `nil`. I can't prevent that in Objective-C (because ALL Objective-C objects are actually optional and fail silently when `nil`). But in Objective-C, I don't have a great way (outside of comments that will be ignored) to document that the property shouldn't be `nil`. Swift's optionals give me a built in way to not only document but to also let the compiler ENFORCE my code's rules of nullability.
I don't see how most of this even remotely relates to optionals or any of the OP's questions.
Just for future reference, simply posting a picture of your debugger and a random json payload is not going to be helpful for anyone potentially trying to help you out...
Retain Cycles.
Swift is smart. The reason for a strong type system is that programmers are not smart. Swift is making sure that *you* know it‚Äôs an optional. Obviously Swift knows, otherwise it wouldn‚Äôt be able to provide a compiler error.
ok but because it knows it should wrap and unwrap automatically.
How do you imagine that working exactly? Declaring something as an optional means the compiler will allow it to hold a `nil` value. Declaring something as non-optional means the compiler will not allow it to hold a `nil` value. How can the compiler just automatically unwrap an optional if you have to frequently write alternative logic based on whether you just unwrapped a value or nil...?
Apple should open source Core Data. A swift rewrite would really do wonders.
Theyre not named the same, as identifiers are case sensitive. It's in fact very common instantiate a new instance of a type "Foo" and naming it "foo". It works much more nicely than arbitrarily different names that people come up with, like " myFoo", "_foo", and the like
In general, I find it helpful to consume different types of media: videos, books, tutorials, building my own projects, asking questions. In this specific case, when Apple releases a new API, often the video sessions have more content than they've put into documentation. 
What have you tried so far? 
The exercise description you've copy-pasted and italicized doesn't line up with your description of the exercise. &gt; Create a for‚Ä¶in loop to process the aliceMessages collection. It sounds like `aliceMessages` isn't a `String`, but is instead a `[String]` (an array of strings). Based on the italicized description, you're given an array which is already broken into sentences or lines or whatever. You just need to iterate over the array of strings, check whether each string contains a specific substring, and print it if it does.
OK, I'll play devil's advocate. The article says (of using a plain extension): &gt; Cons? Well, the function is available in all your view controllers, even ones that don‚Äôt need it. It‚Äôs always better to have control over your code‚Äôs access scope. That sounds vaguely good in theory, but I'm having trouble understanding how it could ever be an issue for extensions (which store no data) -- especially here, where an extension provides perfectly generic functionality. It may be the case that some view controllers don't need this method today, but in what case would you ever be helped by *prohibiting* it? This actually looks anti-DRY to me. In order to indicate that they want to use this method from their VC, callers have to (a) call it, and also (b) extend your protocol. I no longer have to `#import` all the junk I want, but with this approach I have to extend protocols for all the junk I want. That doesn't seem like progress. The article's intro says "best code is no code at all". This solution is about 5+œ¥(n) more lines than the plain extension. Is that worth the cost, in lines and complexity? Why, exactly? Has anyone here ever run into an issue that was caused by an extension (or category) being available on every member of a class?
Fuck it. I tried building the hello world app and failed. This is clearly not for me.
I haven't, in practice, run into an issue, but I can easily imagine one. CocoaPod #1: extension UIViewController { func doACoolThing() { // TODO: cool things } } CocoaPod #2: extension UITableViewController { func doACoolThing() { // TODO: different cool things } } But... the solution in the article doesn't really help us out here any. However, I don't think there's an argument against implementing it in the protocol and just having the base class extended to conform to it. There are still advantages to implementing it as a protocol.
1. The second line, when you use it, will give you an error if you haven't initalised it with some value befor. But it will give you an error at compile time, and not crash while running. 2. Yes, but the simpler version, as mentioned by others is `middleName?.upperCase()`. This translates to `middleName.map { $0.upperCase() }`, or, to English: "If middleName is `nil`, stop and return nil. Otherwise, make it upperCase() and return that." Basically, when you read a question mark, you should know: The thing preceding the question mark is an optional. The thing that comes after the question mark behaves just as if the thing preceding the question mark were not an optional, except that if it is nil, the whole result is also nil. Therefore, the result of this expression obviously also has to be an optional (because it can be nil). The point is, that - with some very concise syntax - you can see that the code deals with an optional a certain way. You know for sure nothing can crash (only `!` crashes when dealing with optionals). When reading code, it also allows you to see that an expression is an optional, by the mere presence of the question mark. 3. "Since I still need to ask the object if it's nil or not [...]" - The "still" part of this sentence is not true. In Objective-C you do not HAVE to ask the object whether it has a value, you can just use it, call methods on it, etc (they all return nil or 0 or false, but still - the compiler does not complain). As another example, in Java, you also do not have to ask the object whether it has a value. It'll just crash at runtime, but the compiler won't complain. (In a certain sense, Java uses Swift's "!" as the default). So, in fact, Swift is different in the fact that you really have to check if an optional contains a value. If you don't do it, the compiler will complain (This, by the way, is the primary reason to have optionals). Of course, you can bypass this by using `!` everywhere, but that's very easy to spot when reading the code. This helps preventing unexpected behaviour when an object does not have a value. In Objective-C, if a value can be nil when you don't expect it, the behaviour can be very strange. The nil value propagates to some place where it becomes visible, or crashes the app. In Java, it simply crashes the app right away. Both of those things cannot happen in Swift. 4. No. Especially not "huge". In This specific example, the performance cost of uppercasing an UTF8 string is dominant for sure. The performance/memory cost is probably immediately outweighed by the less-efficient method calling you'd have in Obj-C. Also, you should put some trust into the compiler. I'd expect it'll optimise the above code in a reasonable fashion (even though I haven't checked to say for sure). In any case, I have never seen code where optionals cause a performance issue.
Yes. Use swift and firebase. Done
also, you should practice swift function method naming convention like for your func lookUpCode(_ code: data) {} better is func lookUp(code: data) {} 
Don't worry I hit this too. Some of the magic of SPM 3 was removed in version 4, so you have to be more explicit now. As if Swift 4, SPM requires that you specify which "dependencies" are used by which "targets". Previously SPM assumed all dependencies were used by all targets. Practically speaking, if you plan to use Kitura in your target named "sampleproject", you will need to add `"Kitura"` into the `dependencies` array. Like so: .target(named: "sampleproject", dependencies: ["Kitura"]) And so on for all dependencies used in the target. It's unfortunately redundant, but I imagine it's to help with compile times. The core team gave their rationale in a Swift Evolution proposal somewhere...
Here was an email detailing the changes to Package Manager for swift 4 https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20170605/037002.html
There's a blog post about the manifest changes, too: https://swift.org/blog/swift-package-manager-manifest-api-redesign/
Anyone who writes software and tells you they have never felt the exact same incredibly frustrating and demoralizing feelings you are experiencing is full of shit. Don't sweat it. The only thing separating you from people who are creating apps is they forged on, regardless of how dumb they felt.
I'm currently having trouble with this problem...Can someone please help me out with it? 
I finally made that dumb first app. But still I can't find anywhere how to make a simple notepad that just stays there in the today view of the NC.
I don't think `.prefix()` is the method you want.
Wow! Thank you so much for the tip! It worked right away.
Wrong again! Your post interprets the question as: &gt; So what they want is to find 'messages' to the Caterpillar and print only those sentences. But this is obviously wrong. The question says: &gt; check whether each message contains the string "Caterpillar" The keyword here is "contains".
Thank you so much. Worked really well. :)
You are welcome :) 
Those kind of clients should be denied before the work starts.
Thanks for the great talk! :-) I've really enjoyed the flow, BTW -- and loved this part "I want to get to the more important part, which is code generation"! :-)
Thank you!! If I‚Äôm honest, parsing is the least interesting part of the compiler. However I‚Äôve recently become enamored with approaches like Roslyn and Swift‚Äôs trivia-preserving syntax trees. In fact, I‚Äôm gonna be giving a talk in September about Swift‚Äôs new source-accurate syntax tree and how we can use it to make great tools!
Question 3: You're correct that the main benefit here is the compiler forcing you to check your work, but there's a subtler benefit too: it gives you better *conceptual* tools for thinking about your work. In Objective-C anything can be nil, so if we wrote "this is a string", then implicitly we were actually writing "this is a string or nil", *even if in practice that wasn't true*. Being able to describe your program more accurately leads to being able to think about it more clearly. Another thing to consider is that ideally you won't actually have many optionals. There just aren't all that many concepts that logically produce "nothing" as a valid result (use error handling for invalid results). Question 4: Arrays will share the actual item storage between multiple variables behind the scenes. Assigning them to new variables is only expensive if a) there are two or more *active* array variables sharing that item storage, and b) you change one of them. At that point, the item storage will be copied ("copy on write"). The compiler's optimizer can also eliminate temporary variables in many cases.
&gt; The primary reason we chose to use Swift for our backend was that we (as frontend developers) lacked the time to completely learn a new language and framework for this purpose to a level that we could use it in production. Ouch. It seems like the language is going to be the least of your issues... &gt; we went live and clubs started to actively use our service. And‚Ä¶ not everything worked immediately. Yup. With iOS, Apple could swap out ObjC for Swift, and good iOS developers in Swift were the same people who were good iOS developers in ObjC, because the language is such a small piece of knowing how to make iOS apps. Knowing the target platform is the other 97% of it. As such, what can we learn from this article? It doesn't (and can't) compare Swift backends to Ruby or C# or anything else, because the people involved had no significant experience with those. We saw that programmers with no backend experience could, with some effort, eventually make something that mostly worked well enough, but that was never in question. That's possible with literally any programming language. Even writing your own web server is not difficult. As a backend person and a Swift person, I'm left with the same impression as I started: I can't get a concrete comparison to anything else, but it still seems like Swift is not at all on par, yet, with its competitors in this space. For example, despite thinking "it perfectly fit us", the ORM was apparently unusable for what looks like a simple CRUD app. That's not a good sign. It does reflect what I've seen when I looked at these Swift web frameworks, though. They advertise a lot of features on their webpages, but when you look deeper you discover many of the features lack the sophistication necessary for them to be generally usable. My conclusion from this article is that Swift on the server *can* be a good fit in 2017 *if*: - Your team has no backend experience, so the language doesn't really matter (the gain/loss of productivity from the language is negligible compared to everything else you have to figure out anyway) - You're writing a simple web app (and can simply ignore any features that aren't usable yet, and build your own) If these don't both describe you, then stick with something mature -- or wait a few years until Swift on the server is.
&gt; trivia-preserving syntax trees Wow! I've just looked this up, didn't even realize this was possible! Definitely looking forward to the talk (hoping it will be recorded)! :-)
Swift is as capable and mature as any language out there and the only reason to use it is if you feel comfortable with it. They were and they chose it, reason enough. There is absolutely no difference at all in coding any backend in Python, Ruby, PHP, Go, Swift or whatever language du jour. So what's the moral of the story? If you know Swift from iOS or macOS then you can use it for your backend needs. Now, can you code your mobile apps in Ruby, PHP, Go or Python?
Do you mean something like if #available(iOS 9, *) { } or #if os(iOS) //something goes here #endif or something else?
No, more in the direction of "lite" and "full" apps. Two apps (targets), share the same code, but different features.
Not done that before; I'm hopeful someone else can assist with your query.
If you use Xcode: https://stackoverflow.com/a/38813907
I recommend using size classes as much as possible, you have more flexibility and less duplicate work.
That means the compiler doesn't recognize Size and Color (it hasn't heard of those types). You can change them to be type `CGSize`, and `UIColor` instead. You may need to add `import UIKit` to the top of your playground file.
What you using for the backend?
The line right before that example says &gt; ‚ÄúThe Size and Color types define a group of available options, called an enumeration, which you'll learn about in a future lesson. ‚Äù &gt; Excerpt From: Apple Education. ‚ÄúApp Development with Swift.‚Äù Apple Inc. - Education, 2017. iBooks. https://itun.es/ca/SoKQib.l Enumerations are covered in lesson 3.5 on page 325.
I feel the same way he does about StORM. It's not nearly nice as it needs to be.
Thanks for the reply. I have 'import UIKit' at the top of my playground. In the tutorial from Apple they are written exactly as Size and Color... it mentions they are 'enumerations' but nothing else. 
Thanks for the reply. I had a brief look at the enumerations section but I expected the code used as an example in the section I'm on to compile in the playground. I guess I'm wrong in this sense - I can't use the code in my playground and should just read the examples at this stage? 
if anyone is really looking to challenge themselves, Ruby and Go do have iOS capability. Ruby Motion is a ruby bridge for iOS. Go does have a primitive gxui you can compile to iOS. I would recommend neither for actual release development.
Correct, some code examples are a snippets of a larger project so they may not compile on their own.
Yep, you're right, it was connected to the wrong IB, dunno how the fook I did that! Found it via Connections inspection and fixed it. Cheers bud!
A lot of power can be gained by combining the Frameworks, e.g instead of using an ORM you could leverage SwiftKuery and then use it with Vapor 
If you are using the free developers account the the app expires after a few days. You have to have a paid developers account in order for it to stay permanently. A paid account is $99/yr 
Like CleverError mentioned, the code examples are usually snippets of larger projects. So in this case Color and Size were defined somewhere else. So it doesn't work when you run the code because you never defined those two types. 
I thought you were talking about server side Swift. What difference does it make if you can or can't write a mobile app in PHP? It's incredibly naive to say "absolutely no difference at all". Have you tried? In fact, it's quite different writing in one framework vs another in the _same_ language.
&gt; Have you tried? All of them including Kotlin, and no, there is no difference at all. Here, take a look: http://swiftforums.herokuapp.com So, what is there for 90% web apps if not databases, authentication, cookies, sessions, routing, templates, web sockets, etc? They all have them so no, there is no difference at all. None.
That's exactly the point, the greatest advantage of Swift is that you can go from server to desktop, mobile, watch, TV, IoT, without having to change languages, so when I asked the rhetoric question if we can do it in any other language from the server to mobile the answer is no (except Java and Kotlin on Android). So knowing the server language is a great advantage even if the learning path is going to be hard, the same could be said if he started writing server stuff on Erlang without knowing it.
Use size classes. You don't want to support iPad vs iPhone -- you want semantic size information, e.g., "wide enough for a Split View Controller to show both panes, or not". Size Classes give you this info.
Just to elaborate a little for OP, If you don't pay the $99/yr, Your app expires when your provisioning profile expires, Which is 7 days at a time. Your app maintains it automatically if u set it up that way, so if you re install it, it doesn't give you 7 days from there, it just still goes by when your free provisioning profile expires And then it updates it when u re install the app
I don't have my laptop with me, But if you message me tomorrow I can share a bit of my code from my current project that can give a similar effect :) If of course someone else doesn't help by then, but I'm more than willing to help!
It‚Äôs literally the dumbest thing ever that they charge for you to be able to run your own apps. Such a PIA for me at work trying to get people to adopt and green light doing full time iOS development. 
The language itself can make things different. Check out Elixir/Phoenix and "Elixir OTP" - the way you design backends with that is completely different than Swift/Go/Rust. Also, earlier you said something like "Swift is as mature as any other language". I wish that were true but it's not yet. We still don't have ABI stability, which means a lot of Linux distributions won't include Swift. This is a roadblock for Swift world domination. I do think Server-Side Swift looks nice, and I personally would use it. ----------------- Apologies for any inaccuracies regarding the ABI stability - It's not my area of expertise, Ive just listened to a lot of podcasts discussing it.
Ok, I will write it in more detail how it is done. It is really easy - as I see it now :). 
The blog post covers mocking models using extension only for testing target, mocking network layer and also what should be tested in a viewmodel.
I was wondering this also. Good question, OP!
I find it harder to write in the same language but without the same framework. Server swift breaks on stuff you‚Äôre used to have working (hi, most String extensions). By changing languages, I can change my mental model and work faster. Changing Foundation withthe same syntax is harder. Also, while Server side swift looks promising for a couple of reasons, I think that you‚Äôre doing it a disservice by telling that it‚Äôs advantage is that you don‚Äôt have to learn a new language, and can share some code with iOS. You have to learn a heavy backend framework vs foundation and cocoa on the other side. And learning a language should never be too much for a dev. Learning most languages is pretty easy, and opens your mind about other ways to do what you‚Äôre used, etc... they come and go: by not being afraid to learn a new language and use the best for what you want to do, you become a better programmer. Don‚Äôt be one of these JS devs who try to fit their language everywhere.
You‚Äôll find that server java is WAY different than Android Java. Apps are just not made the same way, even if the language is the same.
Yeah that happens sometimes. Glad you made it work! :-)
&gt;Swift is as capable and mature as any language out there That is simply not true. The language and its libraries are still in flux. I would never choose Swift for a server at this time. When Amazon offers an elastic beanstalk configured with Swift I'll give it a second look. Maybe. As to: &gt;the greatest advantage of Swift is that you can go from server to desktop, mobile, watch, TV, IoT, without having to change languages This is the nodejs pitch. It turns out that this isn't nearly the advantage they tout because writing a server and writing a client are very different tasks and there is virtually no reasonable code sharing that occurs. Finally, this article is full of stuff that anyone who wrote a server in any other language would know by now and has virtually nothing uniquely Swift in it. This stuff might be a revelation for a novice, but there is nothing new there for anyone with any non-trivial level of experience. 
I split storyboards for 2 reasons (not only for iPhone&lt;-&gt;iPad, but sometimes for user stories and workflows): * performance (opening, operating) decreases as my storyboards get bigger * working in a team through a cvs is easier; if you only have one storyboard with all views and several people working on them at the same time, merge conflicts are pretty much guaranteed It depends on the size of the application though. Size classes are good for "smaller" projects.
I‚Äôm Working in my New app [letssurfapp](https://itunes.apple.com/app/id1222334943) I‚Äôm working no this app only to learn swift, widgets, messagekit, watchOS and maybe iOSTV.
Instead of using the delegate methods, you can, in the cell subclass, use the `isHighlighted` property. I achieved something like this by using an overlay view of `alpha` 0 (with `isUserInteractionEnabled` set to `false`). So something like: override var isHighlighted: Bool { didSet { UIView.animateWithDuration(isHighlighted ? 0.3 : 0.1, animations: { self.overlay.alpha = isHighlighted ? 0 : 1 }) } } (0.3 for de-highlighting because I noticed the fade out in the calculator app lasted longer than the fade in). 
&gt; 7 days at a time Huh? I'm not paying anything and my profile expires in a year for all my apps.
https://macminicolo.net/
Any idea if this will continue to be supported in Swift4?
 if let middleNameExists = middleName { middleNameExists.uppercase() } The reason that you would want to do the above, is if you DON'T want to change middleName (if it is not nil), and you want the value inside of middleName to be all uppercase, so you can do something with the value being uppercase. However, if you do want the middleName variable, to always contain the uppercase value, then you need to do this: if(middleName != nil) { middleName = middleName!.upperCase() } The reasoning that you would want to do the above, is so that you're not creating a temporary variable, and not even using it (as their is no point). Therefore, you would need to explicitly check if the value is not nil (as you are), and if it isn't then you can do what you want. However, as you showed, you do need to add the `!`, because that tells the compiler that you know that middleName does have a value, and that you're going to use that value.
I know you can VM a cracked MacOS
Yeah, but that brakes Apple ToS and I can't find a reliable cracked MacOS. I'd be fine doing that during app construction, just don't see how.
I'm saying that there *are* differences between languages, and those are good. Did you mean to talk to the OP?
Yeah, sorry, I agree with you.
FYI, Alamofire doesn't work on Linux, if you plan to deploy Kitura there.
I don't see anything offhand that would cause the problem, but here are some things to check: * Check that you're only running the above code once per segment. Laying multiple move actions might be problematic. Also check that some other code is not also running some code that is affecting the node from elsewhere. * You might also need to remove existing move actions if any are lingering from earlier animations. You can do this with a removeAllActions() call. * Make sure you're not changing the action's speed property elsewhere. The speed property acts as a multiplier on how fast the action goes. * Similarly, check that the node tree going up to the root doesn't have speed values other than 1.0. An SKNode's speed property also acts as a multiplier, and it applies to any action that node runs or any of its descendants run. Also, actions might be slightly off from a tightly-timed animation if the FPS is running slow. You might just be trying to push too much stuff each frame, which could cause stuttering or other problems. Actions *should* line up almost exactly to the time, but it's possible to slow things down to a crawl with poorly planned or overly ambitious scenes. *Edit:* Also, if you're looking to just animate it continuously, perhaps a better approach would be to wrap a MoveBy or RotateBy action with a RepeatForever action, and just apply it once.
Can‚Äôt agree more. Split screen on iPads is best reason for size classes. App in smaller pane is displayed in compact size and should look different than normally on full screen iPad
What if you have absolutely different designs but with same elements? Size classes will create huge amount of turned off constraints, which is hard to modify. When you are asked to switch some items place, it will be tough not to ruin everything. 
Retail works fine. No reason to get some infected, cracked version from the pirate sites. 
&gt; Check that you're only running the above code once per segment. Laying multiple move actions might be problematic. Also check that some other code is not also running some code that is affecting the node from elsewhere. i have a repeat forever rotation. and i believe that is the only other action running. this is just a demo. would it matter if have many sprites "rotating" and "moving to" at the same time, considering "moving to" will all be called in the update? &gt; You might also need to remove existing move actions if any are lingering from earlier animations. You can do this with a removeAllActions() call. i will try that, but what i am going for is the perfect clockwork where the next action comes just as the previous action is completed. considering 60fps, 60 updates a second, is this actually consistently possible? especially with multiple sprites? &gt; Make sure you're not changing the action's speed property elsewhere. The speed property acts as a multiplier on how fast the action goes. &gt; Similarly, check that the node tree going up to the root doesn't have speed values other than 1.0. An SKNode's speed property also acts as a multiplier, and it applies to any action that node runs or any of its descendants run. i didnt touch the speed value. does it default to 1? I will go check. &gt;Also, actions might be slightly off from a tightly-timed animation if the FPS is running slow. You might just be trying to push too much stuff each frame, which could cause stuttering or other problems. Actions should line up almost exactly to the time, but it's possible to slow things down to a crawl with poorly planned or overly ambitious scenes. Edit: Also, if you're looking to just animate it continuously, perhaps a better approach would be to wrap a MoveBy or RotateBy action with a RepeatForever action, and just apply it once. like i said, i was thinking of calling animations in the update function because that is what i was taught in game design school. does this actually provide consistent bahavior in swift? i understand the repeat forever and i am considering switching to that, but i am reluctant to complicate stuff by implementing a path for the nodes to follow. and i have to test if repeat forever provides the clockwork operation i am going for. also, thanks a lot for replying!
As far as I know there is only one way to achieve it: PushKit It's used primarily for VoIP apps, this way you can receive whatsapp calls even though the app is not open.
How do you do it with retail?
What should the trigger be for this? Location? Time? Push notification?
Time
This blog is always a solid place to start: https://www.raywenderlich.com/145318/spritekit-swift-3-tutorial-beginners
Thank You.
I personally used MailGun for a project when I was still pretty new to development and it seemed overwhelming at first glance. I think it helped that I had my own domain to route the emails through and I don't know what other options they have but you can figure it out if you take the time. 
Follow a YouTube tutorial series or copy a project online and look through the code and comments. That's what I'm doing and if you already know swift a little it definitely helps 
Currently working on a daily motivational quote that tells the user the quote, but it also tells the user how to apply it to their lives. 
Play around with it by yourself first to see what everything does, then you should follow a tutorial. 
Check out ray wenderlichs tutorials, brilliant 
SNS does this pretty easily, lots of ways to send it out.
https://github.com/Awalz/SwiftyCam/blob/master/README.md
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [Awalz/SwiftyCam/.../**README.md** (master ‚Üí 7aee7f5)](https://github.com/Awalz/SwiftyCam/blob/7aee7f5f1b6221ca417935ab05058fa842d50c06/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk4uqkv.)^.
I don't know about others, but with Workstation you just need to find the Workstation unlocker, which prevents it from not working with macOS. That is, Workstation by default simply refuses to work with macOS, and the unlocker modifies config files to prevent this. 
The SNS portion appears to be part of the free tier. I'm literally presenting it for a project and then it will never be used again. Is it a fairly easy setup?
Start all your queries with "swift" so... swift game tutorial swift game levels swift game turn based swift game engine
`.forEach` if there is a single thing being done to them. `collection.forEach { $0.doSomething() }` Otherwise, `for in`. That way you don't have to worry about capturing `self`, and I personally find it nicer to read when there are multiple lines inside of it.
The unlocking process is not considered to be a crack?
Awesome, this is almost exactly what I was looking for. Thank you!
I did get the answer I needed, but I'd always be open to seeing an alternative method, if you don't mind!
Read the documentation, for starters.
You cannot execute code in the background (with some specific exceptions which don't apply to your case), but you can schedule a notification to be displayed at a certain time. Look into the `UNNotificationRequest` documentation, you can pass a `UNCalendarNotificationTrigger` to that that displays a notification at a certain time. If you use the older `UILocalNotification` API, you can set a `fireDate` on your notification object, which does the same thing. Of course, this assumes that you know the contents of your notification ahead of time. But, since you don't download anything, that might not be a problem?
.forEach if you a have function that takes an argument of the same type of element in the array and for good one liners that don't depend on self or on the index. Otherwise for in. That being said, the code has to achieve its goals. In our case it needs to be readable/maintainable. For some it needs to be compact, super memory efficient, super processor efficient, etc. 
I know a lot of people dislike PHP but sending an email is very easy. (And if developed correctly it can even send text messages to devices) The function is mail() You can look up the parameters and sample uses. If you need a simple solution I can try and send an example of what your looking for. The app would just call the PHP script (located somewhere on a public domain) and pass in the parameters such as to, from, subject, and message. 
I like this philosophy. 
Totally forgot about the terse single-arg function syntax!
Not sure why I have yet to build a watch app. The small screen size feels like an appropriate limitation to keep it simple. Anyone have anything they want to see/build for the watch? 
I will once I buy an Apple Watch, which will probably be relatively soon. You have anything in mind you want to build? 
I currently only use my watch for calendar reminders and passively for fitness. Using the accelerometer for something other than fitness could be fun.
I am kind of wondering how this watch can talk with other device or using iPhone to remote control etc. I have a feeling I will buy the next Watch app. 
&gt; would it matter if have many sprites "rotating" and "moving to" at the same time, considering "moving to" will all be called in the update? Shouldn't be an issue, unless you have a *lot* of them, in which case I'd expect you'd see the FPS starting to chug. You can check if this is the case by turning on the FPS display and watching it. &gt; i will try that, but what i am going for is the perfect clockwork where the next action comes just as the previous action is completed. considering 60fps, 60 updates a second, is this actually consistently possible? especially with multiple sprites? Generally, you don't want to rely on your frame rate being constant in order for your game's timing to work. A better approach is to let your game state keep track of the current time, and then just update whatever frame you are on with the correct information. The SKActions already do this - if you set an animation to play over one second, and your game is running at 15 fps, it will complete in 15 frames. If your game is running at 60 fps, it will complete 60 frames. In your case, what I'd do is decouple the animation from the game logic - if something is lagging behind on the display side of things, it's okay - just have a plan in place to jump to the next segment of your animation when the previous one completes, regardless of where the old version is. Of course, the fact that your one-minute animation isn't taking a minute is a sign that something else is not right, so you'll want to figure out what's going on and get it resolved anyway. But if you were planning on the animations driving the action, you should consider going the opposite direction. &gt; i didnt touch the speed value. does it default to 1? I will go check. Yes, it should default to 1. If you haven't written code to change the speed of anything in your game, I wouldn't expect it to do anything other than work at the expected rate. &gt; like i said, i was thinking of calling animations in the update function because that is what i was taught in game design school. does this actually provide consistent bahavior in swift? That should be fine as long as you're not creating new animations every update or something. Think of SKActions as a baked-in way of updating something every update that you don't have to worry about. You should try to make them as "fire and forget" as possible - if you're updating a sprite with a new SKAction every frame, you might as well just be updating the item directly in update. &gt; i understand the repeat forever and i am considering switching to that, but i am reluctant to complicate stuff by implementing a path for the nodes to follow. and i have to test if repeat forever provides the clockwork operation i am going for. Well, if you're looking for "clockwork precision" and SKActions aren't cutting it, you might consider making an SKNode that tracks and draws the time you need every frame instead of using an SKAction to animate it. 
I like this idea, but iirc the closure parameter to `forEach` is not escaping so you don't need to worry about capturing `self` either way.
Yeah but that also really limits the number of instructional sources. I can code in multiple languages I am just stuck finding an updated version of swift that helps and isn't in playground mode 
You're right, I was mistaken. You also can't break out of `forEach`, but I suppose that's not much of an argument unless you need that feature. Maybe I'm convincing myself I don't really have a strong preference. 
I don't think so, but even if you and I do think so, we're not cracking macOS; we're enabling VMWare Workstation. This does nothing to macOS; it's running on commodity hardware, which is what VMWare emulates, except when it's looking for macOS and refusing to run. I should point out that I have several macOS and otherOS devices, and don't feel guilty running a test version of macOS on a Windows PC, even though I acknowledge that I'm violating the license. Damages? Yeah, sue me for the price of the crappiest, lowest performing Mac there is. I'll settle out of court for that price. 
As pointed out by /u/Ahti333 , it is non-escaping so you don't have to worry about `self`. And you can always say `ary.enumerated().forEach` if you need the index I think.
I'm up for anything, really. I'm more than willing to check out whatever options are available.
In the app delegate class, you can check if you have a token stored however you want to store it, and if you don't then go through the sign in/up screen, and if you do then go to the first "main" screen. It doesn't matter what you have as the root view controller after this, you'll be opening the screen you need. If you don't do anything in the app delegate then it automatically fires the RVC.
This is what I use: class MailComposer { var recipients = [String]() var carbonCopy = [String]() var blankCopy = [String]() var subject = "&lt;no subject&gt;" var content = "&lt;no content&gt;" var attachments = [URL]() var sendAsHtml = false func send() { guard let mail = NSSharingService(named: NSSharingServiceNameComposeEmail) else { print("Mail service not available") return } var items = [Any]() if sendAsHtml { let options = [NSDocumentTypeDocumentAttribute: NSHTMLTextDocumentType] let data = content.data(using: .utf8)! let html = NSAttributedString(html: data, options: options, documentAttributes: nil) items.append(html) } else { items.append(content) } mail.recipients = recipients mail.subject = subject if attachments.count &gt; 0 { for url in attachments { items.append(url) } } mail.perform(withItems: items) } } 
Interesting, got me motivated to develop my first Watch app.
While helpful, I'm not trying to have user interaction. Won't this prompt for user input? 
What time? A time after closing the app? A time of day?
At a time of day.
I hate to say it, but with no programming experience, don't start with a specific short term goal. Don't jump straight into the thing you want to make. Just find and consume all of the beginner tutorials you can. Learn about the language, not the app you want to make. Along the way you will see things and say, "I think this would be useful in my notepad app." Keep them in mind, but just learn the language and general programming concepts first. Programming is hard. Even things that seems simple as a user have a LOT of moving parts and complexity that you can't imagine is there. As you learn the basics, you'll start to learn where to branch out and look at documentation for things like a Notification Center extension. I don't mean this to discourage you, in fact the opposite. It is incredibly rewarding, but before most people start making there own fully-featured apps (even if there aren't a lot of features) they take months of learning. It also only gets easier. Even learning new languages takes a matter of days or weeks rather than months once you understand the concepts, but you have to put in the work first.
Don't have time to answer properly but have you looked at these? https://stackoverflow.com/questions/35388086/is-the-a-way-to-wakeup-suspended-app-in-ios-without-user-or-server-intervention
The sales updates once a day, you can check the status here: https://appfigures.com/itcstatus