Why cant we use flair's? would love to filter swift server side articles based on flair's. 
I partially agree. While I am in fact an iOS Developer, I totally agree that there's way too much content in here that should be in /r/iosprogramming. We should point people in the right direction though and not just dismiss them, chances are they have no idea what they're doing and don't even get why /r/swift might not be the right place. Personally, I don't mind questions of the /r/learnswift type, maybe they even help the sub stay more active. Just flair them.
You need to be more specific. But to show the contacts that also have the app download you can implement an facebook login. Facebook sdk give you the list of your friends that also have the app installed.
you are not the only one! And I have tried everything too!
$5
Amazing, thank you! 
Paging /u/twostraws Edit: tl;dr : hackingwithswift.com
My best advice would be to use the search function. This question has been asked (and answered) dozens of times here.
Flairs would be best. There is a Swift on Linux reddit, though its not very active. /r/SwiftOnLinux/ This does come up every few months.
I start with https://www.raywenderlich.com, this site have a lot of free material for beginners.
Full agreement. Separately, what do subscribers think about Swift evolution discussion? Does that fit here or is that what the mailing list is for? Separately again, perhaps with basic UIKit questions gone, perhaps /r/swiftonlinux can merge in here?
Thanks! I'll try my best not giving up 
I don't think you can have a conversation about Swift without having an over abundance of iOS question, it seems that that is the biggest target for Swift right now. 
To learn the language, I just read apple’s docs. I find that they do a great job. For app dev, Ray Wenderlich is fantastic. And obviously there’s StackOverflow.
No, little subs shouldn't filter
The [Stanford iOS class](https://itunes.apple.com/us/course/developing-ios-10-apps-with-swift/id1198467120) is pretty good if you are already familiar with some programming concepts. 
I am pretty new to programing in swift but i am working on a simple game where you are running away from "zombies" with your fingers. I have one problem, when I die in the game I dont know how to go to another viewcontroller from my gamescene. If anyone knows I would be thankful for some help.
Without the passcode no one can add new fingerprints.
Yeah, I'm running through things in my head and I think it's secure. It just feels disconnected to me. The only way I see a breach is if the bad user guesses or discovers the device passcode. It'd be nice to still be able to lock out the user from the app. It'd be nice if the touch id success would tell you the date the fingerprint was registered. If it's a new print then you could fall back to passphrase access, and then update your own date to this newly entered passphrase. I realize this is probably overthinking things, but it all feels a bit disconnected to me and created some alarms in my head. 
 /* sendEmail.php This is an example script of how to send a simple email in php. No error checking. The $headers can be XSS scripted! There is no check for if the POST variables are set © 2017 Joey Costa */ $emailFrom = $_POST['email']; $emailTo = $_POST['to']; $subject = $_POST['subject']; $body = $_POST['body']; $signature = $_POST['sign']; $headers ='MIME-Version: 1.0' . "\r\n"; $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n"; $headers .= 'From: '.$emailFrom.'' . "\r\n"; $message = ' &lt;html&gt; &lt;head&gt; &lt;title&gt;In Class Example Email&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt; '.$body.' &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;br&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; '.$signature.' &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; '; if(mail($emailTo, $subject, $message, $headers)) { echo 'Email sent successfully!'; }else{ echo 'There was an error sending the email... Try again.'; } 
This is an example of the PHP script you may want to use. Then your iOS app would simply call this script and send the correct $_POST variables.
Does this focus on teaching standalone Swift, or Swift in concert with iOS?
https://developer.apple.com/swift/playgrounds/ It looks like it's mostly Swift/Programming basics and nothing too complicated. I guess it's great for absolute beginners who haven't programmed anything before.
And for non-beginners there's the awesome: https://itunes.apple.com/nl/course/developing-ios-10-apps-with-swift/id1198467120?l=en
I personally found/find the Stanford classes WAYYY better since the guy teaching knows almost everything there is about swift and teaches at a good speed when you are already have programming experience. https://www.youtube.com/playlist?list=PLPA-ayBrweUz32NSgNZdl0_QISw-f12Ai
Thanks for the link 
I'd say the Stanford classes are better, the guy teaching you worked with Steve Jobs and knows incredibly much about the language and does a great job of teaching it to his students/you. The only drawback is that previous programming experience is encouraged since he doesn't explain every small detail.
I never found the Stanford podcasts very useful due to their focus on the language and general overall programming approaches instead of the more practical projects. And as you mentioned an experienced background in programming is assumed. But they will work for some people.
Imo it's important to understand the paradigms and language first and then implement that knowledge into your personal project. Ofc it depends what the goal is, learn the language or build an app quickly. 
Just finished my first watchOS app: **BitcoinWatch** to keep track of BTC price at any time with the turn of the wrist. I'm on a roll. Enjoy! https://github.com/kuyawa/BitcoinWatch
I think I'm on to something new, an application that could revolutionize the way people interact with local stores. I'm looking for someone that could help me implement this idea I have. If you would like to collaborate with me just dm me. 
I started on Swift Playgrounds a few weeks ago and it’s fantastic. I’ve tried learning how to code many times and this is the only way that stuck with me because I’m a hands on learner and really appreciate the instant feedback if I’m doing something wrong. Depending on how quickly you pick up Swift though, you might move on before finishing the Playgrounds app on iOS and switch the books once you have a better understanding. Swift Playgrounds definitely doesn’t teach you everything. 
The base levels aren’t intended to teach you everything. It is made in such a way that third parties can create additional content. Congrats on finally achieving your goal. 
Maybe you should search about auto layout
if i'm coming to reddit to ask this question - there's a reason. 
You don't set the size of a VC in mobile apps, it auto adjusts to the resolution of the device. What you have to do is to set the "springs and struts" of controls (Size Inspector/Autoresizing handlers) so they resize or stick to the position you want. You can play with the positioning using different devices in the storyboard and once you run it be careful the device fits on your screen since it may be too big and cause scrolling, for that you go to Window/Scale and select a lower percent like 50% or 25% if you're coding on a laptop. I usually have to set 7S to 25% in order to fit in my MacbookAir.
I absolutely agree the way you’ve laid out is more secure. But, what’s standard is what you describe in those tutorials
Here: http://i.imgur.com/8zurHzu.png Play with that little tool, that's the most convenient way to stick/resize controls to fit your needs. If you want them to be centered, just unclick all handlers. If you want it to stick to the bottom, click the bottom handler and unclick the rest. The same applies for sticking to the left or right, or if you want them to stretch to fit the device resolution then use the inner handlers for width and height. Play with it, it's definitely a godsend.
Great, good to know I'm not thinking too crazy. For now, we'll probably be fine with trusting that nobody has discovered the device passcode, and periodically ask for the app passphrase like apple does with the device passcode. 
Use Realm Mobile Database 1. write contacts to realm file 2. query all contacts with predicate contactsDownloadedApp == true 3. Use Results&lt;Contacts&gt; to populate your UITableView 
Check the functions in the AppDelegate file in your Xcode project. 
Can you explain a little more of what you're trying to accomplish? And what you mean by 'alert box ' &amp; 'alert view' Why not just pass textField.text into message parameter of UIAlertController's constructor? 
I ended up cross-posting on Stackoverflow and got the answer I was looking for. Apologies for not updating this! [https://stackoverflow.com/questions/45067336/alert-which-displays-input-from-a-text-field-after-hitting-a-button?noredirect=1#comment77110775_45067336](https://stackoverflow.com/questions/45067336/alert-which-displays-input-from-a-text-field-after-hitting-a-button?noredirect=1#comment77110775_45067336)
The problem I have with this "Everybody can Code" meme is that not everybody can code. Lets face it not every student in high school is a wiz kid. I'd rather see a program that weeds out potential programmers for further development of their skills. focus the educational system on those students that have a chance in hell of being successful.
I've never used a phone number to authenticate via firebase, but it looks like it is getting to the sign in with credential method and then printing out the error in there. The only issue I could see there is that the verificationID or code are wrong. Try printing them out to console once you assign them and ensure they are what values you think they should be before creating the credential with them. Good luck!
I forked your code and made some modifications: [My fork](https://gist.github.com/colgraff/864f9b8055782ae54eab1d9367eb4119) I modified the original by removing the `DiceRoll` class. There was no need for it since most of the methods were essentially free functions and the state could be contained in two objects: a `RollValues` struct for the parsed roll values and an `Array&lt;Int&gt;` for the results. I added a `roll()` method to the `RollValues` struct so that it could easily generate results from the stored values. The regex validation string was unnecessary because it wouldn't take much parsing to uncover an invalid string and the benefit is that you can have custom error messages rather than just rejecting the string. Thus, the string is now validated during parsing, avoiding a complicated and potentially-buggy regex in addition to avoiding validating the string twice. In addition the casts from `String` to `Int` are now checked and errors are appropriately handled. If the cast fails a message is output and no roll is performed. The call to the `exit` function now uses the `EXIT_SUCCESS` constant rather than a value of `0`. This aids in readability and guards against future changes (however unlikely they may be).
Why have a HTML version without a plaintext alternative? It's easy enough to include and many people still have their email clients set to toss HTML-only emails. I would only use HTML if I had to and I would still include some sort of plaintext alternative.
I completely agree.
try this: its works for checking if the device is locked or not. to check if the device is running you can check: app open: - (void)applicationDidBecomeActive:(UIApplication *)application; is close: - (void)applicationDidEnterBackground:(UIApplication *)application;
 UIApplication.shared.applicationState There's an enum for active, inactive (Foreground but stopped, probably due to a system dialog or it transitioning from background to foreground or vice versa) and background. If the device is off, you won't be running. The UIApplicationDelegate callback methods will inform your code with these methods: optional func applicationWillResignActive(_ application: UIApplication) optional func applicationDidEnterBackground(_ application: UIApplication) optional func applicationWillTerminate(_ application: UIApplication) I suggest you read further into how each of them are used. You should be able to schedule a local notification to the user in one of those. If you meant a notification as in notification centre, then there are equivalent notification names such as: NSNotification.Name.UIApplicationDidEnterBackground
I also: * consolidated the error messages into an `printError` method * added lowercasing of the input string to support both "2D10" and "2d10" as well as quitting with "Q" or "q" * changed the `split` method calls to not omit empty subsequences Without the latter an input of "2dd20++10" would be valid since there would be ignored empty subsequences between the multiple separators.
Well, there's only one person with more than three years of Swift experience, so this is a bunk ad.
Why would you say that?
[I assume because of the whole being released 3 years ago thing](https://i.imgur.com/6a7VtsC.png)
I’ll test this in 5 hours. I’ll let you know how it goes :)
I would think that they were wanting an app developer with 3+ years xp and xp with Swift... but I have had interviews with companies that were asking for 5 years of xp with Swift... so who knows. 
https://developer.apple.com/videos/play/wwdc2015/218/
Please send feedback, I'm planning on using the crown to scroll the top ten coins in version 2.
So, maybe you've already tried this and it doesn't work but the thing that made the difference for me being able to add a tab bar which I STRUGGLED with is this. Go to the menu Editor &gt; Embed In &gt; Tab Bar Controller. Man, when I figured out that was a thing I was hella pissed that I had tried and failed to do it in code off and on for like a month before finding out about that feature.
There is not a thing called Embed in my version of Xcode (8.3.3)
Sorry, my fault. I forgot to mention you have to be in the storyboard editor and select the view you want to embed to get the option to show up.
So I have to use the storyboard? I can't just program my way out of it :) Still early in the process so I am still learning about Swift :)
You most definitely can but off the top of my head I don't know of any resources for it. Someone else will have to chime in with that.
Your best bet is to customize the keyboard and provide them yourself in a separate area
I think the idea is that programming will be so important in the future it needs to be teached in similar manners such as math and English. For certain not everyone will be proficient at them, but at the very least everyone need to know the fundamentals. 
so if you create an instance of a class, is that the same thing as initializing them? or creating variables with values assigned to them?
Thank you so much for your feedback! I feel like it's difficult to improve my code without others taking a look at it. The reason that the original has a DiceRoll class is because the file is part of a package created with Swift Package Manager. However, this was the only file with logic in it, so I didn't think I'd need to publish the whole thing. I followed [this tutorial for building a command line tool in Swift](https://www.swiftbysundell.com/posts/building-a-command-line-tool-using-the-swift-package-manager) which uses a class. Any downside to not using a class in this context? I downloaded your fork and tried it with the rest of the package in a different branch. I got it to run by just calling run() from the main.swift rather than creating a DiceRoll() object and calling its run().
I don't deny the importance of this particular occupation. What I'm concerned with is the idea that everybody can learn to program. Just as we can't teach advance math to everybody we certainly can not be wasting our time on programming.
For sure man! I do something almost exactly the same, except I create a custom class to make it more readable and easier to subclass in any cells. class GenericTouchCell: UICollectionViewCell { override init(frame: CGRect) { super.init(frame: frame) //SetupCodeHere } override var isHighlighted: Bool { didSet { if isHighlighted { didTouch() } else { didRelease() } } } func didTouch() { } func didRelease() { } } And all you have to do is now implement that in any subclass! class MyCell: GenericTouchCell { override func didTouch() { //Touch Code Here } override func didRelease() { //Release Code Here } } This is how i implement it for easier readability when the touch and release actions get complicated, but u/okoroezenwa 's answer is perfect!
The app is good. The loading time is almost null on the 1st generation Apple Watch. It's like 1 second of waiting or something like that. Nice work! 
If you want to see: https://vimeo.com/225618318
Placing the code in a class like this can be a form of namespacing. It allows you to have several different objects that all have a `run()` method and you call the method from particular class you need in order to perform the task needed. Although if that's your aim you might be better off making the code into a [module](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AccessControl.html) and using that as your namespacing. If you do use a class as a namespace you'll probably want to avoid instantiating it. Instead you would turn the [instance methods](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html) into [type methods](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Methods.html) and not store your state in the class. Another other reason you'd put this code into a class is if you wanted to persist state in an object. Then you could create an object, call methods on it, store it in some way, and so on. You could potentially have several objects all with their own state. However, I would keep the objects as spare as possible. Only add stored values and methods that are absolutely necessary to the state of an individual object or task. Use a class only when you need reference semantics and a struct when value semantics make more sense. 
Try deleting your derived data?
Awww such a beautiful baby. Thanks for the video. Gonna start working on version 2.
The Swift channel on Freenode does just fine. You just have to be diligent about keeping any OS-specific or framework-specific discussion off the language channel.
I don't expect to turn r/swift around overnight, but as a first step, maybe we could get rid of the "How can I learn Swift?" questions. This is not just the first (of only two!) questions in the FAQ, but this exact same question is asked [*every* day](https://www.reddit.com/r/swift/comments/6n0a0s/best_way_to_learn_swift/). No, there have been no revolutionary breakthroughs in how to learn Swift since yesterday when this question was last asked.
You may have been hanging out with programmers too much. Among my other circles, it's rare when someone remembers the fundamentals of math. They can add and subtract, but anything taught in high school or beyond (if they never used it again, like by studying math or science in college) is usually lost. It's pretty rare when I run across someone who can do long division or square roots by hand, or remember the trigonometric identities. Look how many smartphone apps there are for computing tips (15%). Or doing simple conversions, like feet to meters (divide by 3, roughly). That's literally elementary school arithmetic. I also know several successful professionals who can't put 4 or 5 sentences together into a coherent paragraph, but that is somewhat less common -- probably because almost all English speakers use English a lot every day. I would agree that people need to understand more about computers than they do, in this brave new world, but I don't see what teaching for-loops in a game is meant to accomplish. It's too micro-level. Even if they master that game, they're not going to really understand any algorithms. It's like teaching someone to appreciate art by having them sharpen colored pencils for a month. Yeah, that is a tool that professional artists use, but it's not at all the level that they think about their work. You still won't really know what they do, or why. What I'd like to see are high schools that teach, for example, the principles of cryptography, and its applications to government and citizenship. You don't need to know how to write if-statements or for-loops to understand why public key cryptography is important, or why it's OK to publish one key and not the other. Or what DRM is, and what it tries to do, and what it can (and can't) actually do. Or how the web works, and [the difference between a search engine and a web browser](https://www.youtube.com/watch?v=o4MwTvtyrUQ). Teaching someone to collect gems by writing an if-statement in a game is not going to help with any of these issues. These (crypto and DRM and networks) are the new fundamental issues. Programming language constructs are just implementation details. You might as well give lessons in silicon doping.
Video linked by /u/applishish: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [What is a Browser?](https://youtube.com/watch?v=o4MwTvtyrUQ)|Ji Lee|2009-04-30|0:02:33|2,535+ (93%)|995,074 &gt; What is a browser? was the question we asked over 50... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/applishish ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dk8h4ux\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v1.1.3b
[removed]
Very good, I actually didn't know the difference between the two, thanks.
You can break out of `forEach` with `return`. However, you can't break out of a parent loop with `forEach`.
Count me in!
Sure, Swift 3?
Count me in!
I'm in! I've only built small simple apps in swift (todo lists and such) so his seems like a good next step 
RemindMe! One hour
I will be messaging you on [**2017-07-15 02:10:17 UTC**](http://www.wolframalpha.com/input/?i=2017-07-15 02:10:17 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/6na7sx/login_screen_leading_to_tab_bar/dk8kvct) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/6na7sx/login_screen_leading_to_tab_bar/dk8kvct]%0A%0ARemindMe! One hour) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dk8kvt3) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Would love ti try!
Cool, would love to check it out!
Me too!! Thank you!!
I'm interested
When you create an instance of a class, you are also initializing the values. If you take a look at the example below you will see that I created a Rectangle class with length and width as different properties. Then I created an initializer to give those variables values when I create an instance of that class. class Rectangle { var length: Int var width: Int init(length: Int, width: Int) { self.length = length self.width = width } } var someRect = Rectangle(length: 5, width: 7) When I created an instance of Rectangle I also have to initialize the values. 
There is the UITextChecker class. I think it's more for adding things than a complete swap. I seem to remember reading about doing a complete custom dictionary in Objective-C though. If so, there is probably a Swift way. 
Yes Swift 3!
Yes It is, I hope you enjoy it!
I'm interested :)
I'm in!
Count me in! Thanks!
I definitely would be interested 
Hey! I'm interested :).
Hey everyone: I'm Getting a lot of messages in my Inbox and I don't have a lot of time to reply to all of them. Here is the Link for the free coupon there is 40 spots left: https://www.udemy.com/build-a-powerful-ios-chat-app-pagination-included/?couponCode=JSM020736
I'll definitely need to look through the section of the book on access control. I cannot express in words how helpful you've been. Thank you so much!
No problem, ask away if you have any other questions. You might want to also visit [Stackoverflow](https://stackoverflow.com). It's a great community with a ton of helpful people and the [Swift tag](https://stackoverflow.com/questions/tagged/swift) gets a lot of excellent questions and answers.
I'm assuming your AppDelegate has its window?.rootViewController set to your LoginController. In order to transition to the WeatherController, you simply do delegate?.window?.rootViewController = WeatherController(). To animate this, do the following in your AppDelegate: func transitionToMainView() { if let window = self.window { UIView.transition(with: window, duration: 0.5, options: [.transitionCrossDissolve, .curveEaseIn], animations: { let oldAnimationState = UIView.areAnimationsEnabled UIView.setAnimationsEnabled(false) self.window?.rootViewController = TabBarController() UIView.setAnimationsEnabled(oldAnimationState) }) } }
what if you didnt have the init method in there. if you only had the properties declared at the top and the someRect var. would it not be initialized then? i think where i am struggling is im not sure when something is initialized and when something isnt. what is an example of initializing something without the init keyword? thanks a lot
Definitely in.
If you didn't include the init method from the way the example is above then the compiler would give you an error. In that case I had to have an initializer because my member variables (length and width) did not have a value assigned to them. Here is an example of when you wouldn't need an initializer. class Rectangle { var length: Int = 5 var width: Int = 7 } var someRect = Rectangle() print(someRect.length) // Prints 5 print(someRect.width) //Prints 7 I don't need an initializer in this case because I assigned values to length and width. 
I'm definitely interested, thanks!
To download a file you could use **[URLSession](https://developer.apple.com/documentation/foundation/urlsession)** or a framework like: * The popular Alamofire: [https://github.com/Alamofire/Alamofire#downloading-data-to-a-file](https://github.com/Alamofire/Alamofire#downloading-data-to-a-file) * A lightweight framwework: [https://github.com/daltoniam/SwiftHTTP](https://github.com/daltoniam/SwiftHTTP) &amp;nbsp; **Simple solution:** Put a .txt file on your server that you can update, download the file in your App and store it in a string, then parse and format the string and update the textView (or wherever the text should be changed). &amp;nbsp; **More elegant solution:** If you need to update multiple layout elements you should store the variables in a JSON file on your server, then download and parse it with * https://github.com/SwiftyJSON/SwiftyJSON * https://github.com/SwiftyJSON/Alamofire-SwiftyJSON &amp;nbsp; **Some useful links for URLSession:** * http://sweettutos.com/2015/11/06/networking-in-swift-how-to-download-a-file-with-nsurlsession/ * https://stackoverflow.com/questions/42883276/swift-nsurlsession-downloading-files * https://www.raywenderlich.com/158106/urlsession-tutorial-getting-started 
"In that case I had to have an initializer because my member variables (length and width) did not have a value assigned to them. " "I don't need an initializer in this case because I assigned values to length and width. " this made it click for me. makes perfect sense now. thanks so much man.
Could also be useful in your case: #[EverLayout](https://github.com/acrocat/EverLayout) EverLayout translates JSON/XML data into iOS layouts which can be downloaded, reused and updated at runtime. **Features** * Create comprehensive layouts without the clumsiness of Interface Builder or view controllers bloated with layout code. * Downloadable layouts - Layouts written in JSON/XML can be downloaded from a web server, meaning an App UI can be updated without having to submit for App Review. * Build layouts with real-time update using a simple HTTP server (or EverLayout Bridge). * A/B Testing - Testing multiple UIs with your users is easy when building a layout is just loading a file. #Usage Example **Layout file** (on your server) { "name":"ViewController", "root":{ "views":{ "exampleButton":{ "constraints":{ "center":"@super", "width":"+120", "height":"+80" }, "properties":{ "text":"Tap Me!" } } } } } **Swift** import UIKit import EverLayout class ViewController: UIViewController { private var layout : EverLayout? public let exampleButton : UIButton = UIButton() override func viewDidLoad() { super.viewDidLoad() let layoutData = NSData(contentsOfFile: Bundle.main.path(forResource: "ViewController", ofType: "json", inDirectory: "Layouts")!) as! Data self.layout = EverLayout(layoutData: layoutData) self.layout?.build(onView: self.view, viewEnvironment: self) } }
I've been using [Kanna](https://github.com/tid-kijyun/Kanna) to parse web pages, I'd highly recommend it
I would love too...been learning swift for the last 2 months...this will definitely help. 
Better off taking hackingwithswift free lessons. And then Apple's Intro to App Development books. Paul Hegarty's CS193p on iTunes U.
Count me in, I'd love to learn this stuff
Thanks, I‘ll get to it!
Actually right now I am using the storyboard for my loginController to state that it is the initial view. But of course I would like to remove everything from the storyboard and only do things programmatically. All of the layout is done in code already. I will try to implement this. So when I do: self.window?.rootViewController = TabBarController() how does this know that it should open the WeatherController? Where should I put the array of UIViewControllers that the TabBarController has? And why am I supposed to put the abovementioned code into the AppDelegate?
I'm interested!
Thanks, very nice, going to check it out.
If you only want to show the card names you could just create a view that looks like the predictive keyboard view and set that as `inputAccessoryView` of the UITextField or UITextView. I just tried, looks like this: http://i.imgur.com/6KsQtRX.png, http://i.imgur.com/xhGTzfv.png // // KeyboardSuggestionControl.swift import UIKit protocol KeyboardSuggestionControlDelegate: class { func keyboardSuggestionControl(_ control: KeyboardSuggestionControl, didSelectSuggestion suggestion: String) } class KeyboardSuggestionControl: UIView { var suggestions: [String] = [] { didSet { if suggestions.count &gt; 3 { fatalError("'suggestions' must contain between 0 and 3 strings") } refreshButtons() } } weak var delegate: KeyboardSuggestionControlDelegate? private var labelButtons: [UIButton] = [] override init(frame: CGRect) { super.init(frame: frame) addAndConfigureViews() } required init?(coder aDecoder: NSCoder) { super.init(coder: aDecoder) addAndConfigureViews() } private func addAndConfigureViews() { self.backgroundColor = UIColor.darkGray for _ in 0..&lt;3 { let button = UIButton(type: .plain) button.translatesAutoresizingMaskIntoConstraints = false button.backgroundColor = UIColor.lightGray button.setTitleColor(.white, for: .normal) button.titleLabel?.adjustsFontSizeToFitWidth = true button.titleLabel?.minimumScaleFactor = 0.5 button.addTarget(self, action: #selector(didSelectButton(_:)), for: .touchUpInside) self.addSubview(button) labelButtons.append(button) } let views = ["l0" : labelButtons[0], "l1" : labelButtons[1], "l2" : labelButtons[2]] NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "H:|[l0]-1-[l1(==l0)]-1-[l2(==l0)]|", options: [.alignAllBottom, .alignAllTop], metrics: nil, views: views)) NSLayoutConstraint.activate(NSLayoutConstraint.constraints(withVisualFormat: "V:|[l0(==40)]|", options: [], metrics: nil, views: views)) } private func refreshButtons() { for (index, button) in labelButtons.enumerated() { if suggestions.count &gt; index { button.setTitle(suggestions[index], for: .normal) } else { button.setTitle(nil, for: .normal) } } } @objc private func didSelectButton(_ sender: UIButton) { guard let text = sender.titleLabel?.text else { return } delegate?.keyboardSuggestionControl(self, didSelectSuggestion: text) } } // // ViewController.swift import UIKit class ViewController: UIViewController { @IBOutlet weak var textFIeld: UITextField! var inputAccessory: KeyboardSuggestionControl? override func viewDidLoad() { super.viewDidLoad() inputAccessory = KeyboardSuggestionControl(frame: CGRect(x: 0, y: 0, width: 320, height: 40)) inputAccessory!.translatesAutoresizingMaskIntoConstraints = false textFIeld.autocorrectionType = .no textFIeld.inputAccessoryView = inputAccessory! textFIeld.reloadInputViews() textFIeld.layoutIfNeeded() inputAccessory!.suggestions = ["Hello", "Bonjour", "Moin Moin"] inputAccessory!.delegate = self } @IBAction func textFieldDidChange(_ sender: UITextField) { if let string = sender.text, !string.isEmpty { if string.hasPrefix("/") || string.hasPrefix("Hello") { inputAccessory?.suggestions = ["/r/swift", "/r/iOSProgramming", "/r/ObjectiveC"] } } else { inputAccessory?.suggestions = ["Hello", "Bonjour", "Moin Moin"] } } } extension ViewController: KeyboardSuggestionControlDelegate { func keyboardSuggestionControl(_ control: KeyboardSuggestionControl, didSelectSuggestion suggestion: String) { self.textFIeld.text = (self.textFIeld.text ?? "").appending(suggestion).appending(" ") self.textFIeld.sendActions(for: .editingChanged) } }
I’m also interested!
URLSession is all you need.
I joined the class. I'll be going through the course and providing feedback today or tomorrow. :)
RemindMe! 5 hours
Read the book Apple has published on the ibook store 
Me too!
Deleting derived Data worked, Thanks for the help!
Man no more coupons 😰 should of checked Reddit before bed...
It's either should **HAVE** or should**'VE**, but never should **OF**. See [Grammar Errors](http://www.grammarerrors.com/grammar/could-of-would-of-should-of/) for more information.
Slots are gone :(
I'm figuring out how to write a distraction free text editor with typewriter scrolling. You know, the stuff that's been trendy for a few years in minimal text editors. There's no free open source component and I'm going to fix that. After 2 weeks of fighting TextKit, I got some things working already and am shipping part of this in a private beta to get real-world feedback. The open source progress so far: https://github.com/CleanCocoa/Typewriter-Modes/
I'm aware of Rob Percival's courses (he covers many topics i.e. android, web development, etc) and I would say you would do much much better by going with Hacking with Swift and Paul Hegarty's class as the other answer suggests. 
Dammit 
You can't use a modulus on a floating point number, so no Float, Double, CGFloat, etc. It can only be used with Int's. Also the explicit unwrap in the function signature and the return is unnecessary, unless you are passing in an optional.
Sorry, just learned about a new method that I didn't know about. `truncatingRemainder(dividingBy: )` on floating point numbers. So you function would be: func calc(num: Float) -&gt; Float { let numMod2 = num.truncatingRemainder(dividingBy: 2) if (numMod2 == 0) { return num / 2 } else { return num * 3 + 1 } }
Thanks!
I don't know why that didn't format right, :/
in your completion handler capture self by adding &gt; [weak self] right before the (data, response, error) in then make sure at the moment you hit the completion handler that self actually exists so do this &gt; guard let strongSelf = self else { return } right before the if let data = data then in the if let stringData = ... block add &gt; DispatchQueue.main.async { strongSelf.myTextView.text = stringData } Why you would do this: You capture self in the completion handler because you intend on using self in another object. Your closure will contain a weak reference to self. In most cases you don't even need to do this (you're not storing the closure as a property so you don't really need to do this) but it never hurts to get in the habit of this. Then you use a guard-let statement to unwrap the weak self. You do this to make sure self actually exists when this completion runs. Then in the if-let stringData block you use DispatchQueue.main.async to make sure you're back on the main thread when you decide to update your UITextView. URLSession.shared.dataTask, to my knowledge, runs asynchronously **including** its completion handler. So everything in your completion handler right now is on a thread different from the main thread. This is fine for doing background tasks but in this case you want to update a UIView and UIView updates should be done on the main thread.
Thank you!
Wonderful! While I'm here then, let me take a moment to plug [this](https://github.com/dfreniche/xc-launch) script I came across awhile back. If you've got extra RAM lying around, keeping derived data in a Ramdisk can be handy for things like this, as well as speeding up indexing. When I feel like Xcode is acting up, I simply run the script again to wipe everything and start fresh. 
Looks like it. Makes coding much more difficult when you don’t have an API entirely memorized. It’s a bit annoying for me as I literally just bought this thing, installed iOS 11 beta 3 right away to discover this.
Hey, I felt bad so I made more free coupons: here you go https://www.udemy.com/build-a-powerful-ios-chat-app-pagination-included/?couponCode=JSM011875
&gt; Hey, I felt bad so I made more free coupons: here you go &gt; https://www.udemy.com/build-a-powerful-ios-chat-app-pagination-included/?couponCode=JSM011875 
Same here, though I used to have a paid dev account, so that might be the difference. 
I took his course, I had no knowledge of swift only had knew python. It was great. and gave me the confidence i could code just about anything in swift. After I completed it and went into coding my own apps and learning more and more I could see where there were flaws and learned better practices. But I recommend it. It's a good course with a lot of help on the forums on Udemy. I have never tried hackingwithswift so I couldn't comment if its better or not.
Just after your print(stringData) stringData is the text you're looking for
Use four spaces in front of every line. Reddit doesn't like triple ticks.
hmmm... better go to terminal and enter 'pod lists' instead :-P 
I dunno, I think it was easier in the ‘80s. Cocaine, loose women, and easy file writing directly from a network stream. 
As someone who has been trying to do this with my first swift program and app ... halle-fuckin-lujah. I haven’t been able figure this out hardly at all
You have no idea how happy it makes me knowing I helped someone in the community. Let me know if you need help with anything else! 
Why archive the `Data` you get from encoding as JSON through `NSKeyedArchiver`? You can just write it to disk directly and skip the double encoding.
I’ll add a bit about writing the JSON file to disk with file manager, but both ways work!
As someone who has worked heavily with Firebase, I don't believe anything of that sort exists. You're best best is designing your own functions to better handle database and storage reading/writing.
Check out [this segment](https://www.hackingwithswift.com/read/7/3/parsing-json-data-and-swiftyjson) of Hacking with Swift. Should be helpful!
Ive tried over 20 courses when it comes to programing. The best and worst answer is as long as you finish the course it will be valuable. Theres only so much content, eventually you see it repeated or stated in different ways. My favorite resources are devslopes, ie Mark Price (for video tutorials) and Ray wenderlich (for written). For me the biggest thing when looking at tutorials was I needed to build a specific thing so id look for a tutorial that did just that. If your looking just to learn, rob should be fine its a big course that covers everything that all the others cover as well. now get off reddit and just jump in.
Are you planning on eventually displaying this data? If so then I think you can just not call the push or pop and simply create the VC instance and set the variable. But you would need to maintain an instance of the VC you are trying to pass data to so the data is not loss when you do need to transition. If this VC you are passing the data from is the only way to go to the other VC then you can keep that instance in the source VC. If not, you would have to either let app delegate maintain that instance or have app delegate maintain that data if it could be used by other VCs. IMO I don't like to polute app delegate without non essential info, I would create a Singleton that is initialized in app deletegate or anywhere and use that singleton to either hold your data or hold the instance of VC that you want to pass to with the data already configured. 
I would do a wallet object/struct and store the Cash total and the [Transactions] in there. Each player has a wallet on them.
Sorry if I am bothering you, but do you have any input on my questions :)
You should be able to get the tab bar from the current view controller and just find the view controller you want and call methods using that. Or maybe you can use the delegate pattern or notification center
Hey Saoud, thanks for the article. It was helpful to me. I'd love to see this demo expanded to handle the other REST methods. Perhaps a future article could cover them all in a simple UITableView app.
I think this is coming in swift 4, or maybe 5. There was a wwdc video about where swift is headed and raw memory manipulation was I think going to be handled by a new "volatile" type. 
Which iOS version are you running this on ? I think NSPersistentContainer is available since iOS 10. If you're running your code on an iOS 9 simulator / device, this is likely to happen. Though, that would imply that you lowered the deployment target, and I think you shouldn't be able to compile this. Seems weird. Could you copy/paste the entire content of the AppDelegate.swift file ?
I can definitely make a part 2! I’ll PM you when I’ve finished it :-)
Though this Codable protocol seems like a real game changer to everyone, I can't figure out how to apply it to NSManagedObjects with Core Data. Every sample code I see out there deals with Structs.
I can think of a couple ways to do this easily. Let's say that the controller containing the text field is called FirstViewController, and the controller you want to pass the information to is called SecondViewController. **Using NotificationCenter** In FirstViewController, when you press the button that refreshes the labels values : NotificationCenter.default.post(name: Notification.Name("TextFieldHasBeenSet"), object: yourTextField.text) In SecondViewController : override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. NotificationCenter.default.addObserver(self, selector: #selector(textFieldSetNotificationReceived(_:)), name: Notification.Name("TextFieldHasBeenSet"), object: nil) } deinit { NotificationCenter.default.removeObserver(self) } func textFieldSetNotificationReceived(_ notification: Notification) { guard let textFieldValue = notification.object as? String else { return } [do whatever you want with the received value, like myLabel.text = textFieldValue] } This has a major downside : the SecondViewController MUST have been loaded in memory by the time you fill in the textfield in FirstViewController and press your button ; else, it won't be registered as an observer of the notification we're sending, thus it won't receive the text. Still, if you're sure that the SecondViewController will be initialized by the time the user inputs the text, you're good to go. But there's an even easier solution : **Using UserDefaults** In FirstViewController, when you press the button that refreshes the labels values : UserDefaults.standard.set(yourTextField.text, forKey: "TextFieldValue") UserDefaults.standard.synchronize() // Not mandatory, but still... In SecondViewController : override func viewWillAppear(_ animated: Bool) { super.viewWillAppear(animated) myLabel.text = UserDefaults.standard.value(forKey: "TextFieldValue") as? String } Of course, there are other solutions, like the one where you could declare a public String property on your SecondViewController, and set it directly from FirstViewController, by grabbing a reference to SecondViewController via tabBarControllers or whatever. Still, that's a bit of overkill for what you're trying to achieve and is generally not good practice. I should probably warn you that UserDefaults is generally used to save app-wide settings, like a user name, or the current location of the device, or some data here and there... Still, it will do the job just fine for the issue you're having. If you plan on saving, like, a thousand different text fields values, it is probably not the right tool to do it. Hope that helped a bit ; please ping if you got any more trouble. **TL;DR** : UserDefaults and viewWillAppear: should get you through it.
Why not use UnsafeMutableRawPointer or memset from C ?
Why not use storyboard for this issue ? I think I would set the UITabBarController as the initial view controller of the storyboard, then create a segue to your Login controller (make it modal, non-animated), and perform this segue if the user is logged out by the time the first controller contained in the tab bar loads. This should be invisible to the user and you won't have to burden yourself with changing the rootViewController of the window.
I think it was an issue with my xCode version. i updated it and then the error went away. thank you for the help though.
I'm not sure what you're asking exactly. The exclamation mark is there to check that the following statement is false. Basically, the following forms are equivalent : if !number(year, isDivisibleBy: 100) and if number(year, isDivisibleBy: 100) == false When you don't put the exclamation mark, it is implied that it should check that the following statement is true. With the exclamation mark, it should check that the following statement is NOT true.
Alright, thanks! 
The good old Logical NOT Operator. More information here https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html
I made a Part 2 for this topic where I discuss how to make a POST request using structs, and alternative ways of persisting structs to disk! https://www.reddit.com/r/swift/comments/6npsmg/networking_and_persistence_with_json_in_swift_4/
Hey man! So to give you a bit more perspective, Codable just gives a struct the ability to encode into JSON and decode from JSON to a new instance of itself. So when you have JSON data representation of a struct, you can do all sorts of cool things with it like store it on disk as a .json file, send it in a POST request to an API, etc. You can't really "apply" it to Core Data, because Core Data is just a way of storing object models to disk. I'm sure you can use structs one way or another with Core Data, but the Codable protocol itself doesn't pertain to Core Data. I hope that helps!
I actually talk about writing/reading structs from streams in Part 2 :^) https://www.reddit.com/r/swift/comments/6npsmg/networking_and_persistence_with_json_in_swift_4/
`memset` will do what I'm already doing, which is having a zeroed out value. That's _not_ what I want. I don't want to waste time zeroing out the value when it's going to be overwritten anyway. Creating values with `UnsafeMutable[Raw]Pointer` is done with heap allocation, which isn't what I want either. It's a waste of time to allocate a value on the heap only to push it onto the stack and deallocate the heap value right after.
Working on copycat(retyping) some macOS Apps. Had some iOS experience, followed some tutorials to learn about macOS. Already done some, now decide to slow my step and read books in the remaining half month. link below: https://github.com/KrisYu/swift14macOSApps 
&gt; time is wasted zeroing out This time is not wasted. This is time spent making some aspect of your application unambiguous. That's a *feature* of Swift. Swift also provides a feature that a variable may be declared `let` with *late initialization*. The caveat is that the variable *may not be used* prior to initialization, there is *no reassignment or mutation* after initialization, and *no paths in which the variable is not initialized*. With that in mind, you might consider doing something like: let x: Int /* ... */ x = randomValue() foo(x) Swift has been happy pretty early on (since 1.2, maybe?) to let uninitialized `let` variables just kind of hang and be assigned at leisure provided the code path is unambiguous. I don't think you *need* an explicit `uninitialized` for this use case. You might need to reconsider other aspects, though.
Agreed. I know Objective C consistently zeroes out all uninitialized variables. Besides the convenience and consistency of uninitialized pointers being nil, this is also a security feature - letting an app developer read arbitrary memory from uninitialized values on the stack could potentially leak sensitive memory
ObjC zeroes out *member* variables. Values on the stack have standard C-style expectations. That's... problematic as you've pointed out. And an issue that's at stake here. I just wanted to clarify that ObjC doesn't zero out all memory. Just the memory associated with new object instances.
This is an unbelievably good idea. You should be working on this idea tonight even if it's close to what the OP is doing. 
Here too, would love to join. Have sent a PM with email addy.
I was literally thinking of making this work in swift3 the other day lol it may not have been with Codable, but having a class that prints its elements to JSON would work just fine
I would suggest using protocols
In the mean time, `SecRandomCopyBytes` anyone? 
Neat. I think your final API is a little complicated to use though, with operator overloading, currying, and the like. Also, there is a built-in way to accomplish the same thing in Swift - `lazy`. You can do the final example like this: (0...10).lazy.map { $0 + 1 }.filter { $0 % 2 == 0 }.reduce(0, +) This also doesn't create any intermediate arrays (even though you can't check because you can't "look into" the implementation). When you write you next post about performance, it would be very interesting to compare your implementation with Swift's `lazy`!
Thanks for the input. I was going to write about `lazy` on the next blog post haha! Look at the updated post for a sneak peak performance measurement graph! All measurements were done using `lazy` by the way. 
I don't think there is a public API available to read Notes contents. I guess your only option is to write a custom parser, (try to find out where Notes stores it's data maybe), and output it to a format that is accepted by Numbers.
The player has an "account" object which holds their cash (balance) and does simple credit and debit functions. I like the idea that the account (or wallet) has transactions array and I can say; Factory A sells 3 units at $2 / unit = $6 Player.account.transactions.add( TransactionObject ) I'll try it out on Swift playgrounds and go from there. The player's account is itself a class/struct so I'm not sure if I want to put the transactions specifically in the account struct But I'll give it a go
Thank you so much for providing us with free coupons to try your course out. I tried following the course yesterday and so far, got to the middle of the sixth section. If you don't mind, I'd like to offer some feedback, or rather, some things that could be improved in the future. * First, I'm probably way too pedantic about this but let's talk about code aesthetics: * There's indentation missing frequently (or just being inconsistent) right after function start, making the code seem messy, unsightly. A few examples of this: `TextBuilder.createViewModel(decoratedTextMessage:)`, `ChatLogController.handleSend()`, `ChatLogController.handlePhoto()` and more… * The amount of unnecessary empty lines doesn't help as well – I think the intention here was to make the code seem more clean on video and separate different parts of the file but I don't think anything of the sort was accomplished. Furthermore, the empty lines are highly inconsistent as well, sometimes function begins with an empty line, sometimes it doesn't. * Overall, I think I would recommend looking into `swiftlint` or similar tools. Quick run of `swiftlint` (default configuration) results in 125 violations, most related to whitespace. * ~~Instead of relying on combination of `senderId` and `timeIntervalSinceReferenceDate` for message identifier and hoping user won't submit two messages in a rapid succession, resulting in non-unique identifier, why not use `UUID().uuidString` for guaranteed uniqueness?~~ I see that this was done in order to… sort the messages properly… in Firebase. Sigh. I really hate Firebase. * As for `ChatLogViewController.createPresenterBuilders()`, it's mentioned several times in the video that `TextMessagePresenterBuilder` and `PhotoMessagePresenterBuilder` absolutely require `interactionHandler` – is that really the case? I haven't tried myself but the constructor is defined as `public init(viewModelBuilder: ViewModelBuilderT, interactionHandler: InteractionHandlerT? = nil)`, marking `interactionHandler` clearly as optional. I understand it'll definitely be useful later in the tutorial, but maybe the actual creation of the `interactionHandler` might be postponed until really needed. * Let's talk Storyboards and user interface for a moment: * All of your `IBAction` method names begin with a capital letter. I really don't think that should be the case. * Is there any reason why you define manual segue from sign in screen to sign up screen, instead of linking the Sign Up button's action directly to the sign up screen? That way, no code is required to achieve the same functionality. Your way of doing it is not necessarily wrong but since you don't actually use the segue in any way anyway, there's not even a point of defining it. * Similarly in sign up screen, you create segue to messages screen, but you don't actually use that segue in any meaningful way. I'd name the segue in Storyboard (let's say, `ShowMessagesScreen`) and then replace the last two lines of your `SignUp` method with `self?.performSegue(withIdentifier: "ShowMessagesScreen", sender: nil)`. * I feel like this is something that this might also get fixed down the line, but just in case, I'd like to present alternative way of going about the application's navigation structure. Let me break it down into a few more bullet points: * What you have right now is initial view controller being the sign in view controller. This way, if you want to preserve user's session in between app launches, you'd always have to remember that messages view controller is never root view controller but always on third position in the view controller stack. Or second position? Well that depends on if the user signed in or signed up. So confusing! What about this approach? * Have the messages view controller the root view controller. * When messages view controller is presented (or rather, whenever it appears: `viewWillAppear` is a good place for this logic), check with Firebase if the user is logged in. * If user is logged in, you're done, you don't have to do anything! Well, except of loading the data this screen needs, of course :&gt; * If there's no valid session for the user, present the login screen modally, in its own `UINavigationController`. That way, user won't be able to dismiss the login screen without actually logging in. * If the user signs in or signs up successfully, dismiss the navigation controller with login view controller and continue business as usual. I've been doing login screens this way since forever and found this to be the best approach so far. * I understand the reason for using Firebase (the focus of the tutorial is to create the iOS app, not the backend) but I really don't have good experience with Firebase. Its iOS SDK always seemed truly horrible to me, full of stringly-typed methods, and its database never seemed to me as anything more than glorified remote-server hosted real-time JSON. It would be interesting to see how one would write own backend in Swift, let's say, in [Vapor](http://vapor.codes) or similar framework. Firebase's real-time features could be replaced with WebSockets, I'd like to think. * Way bigger issue I have with the backend is the structure so far (I'm in Section 6, Lecture 31). Maybe this gets fixed down the line but when adding a contact to my contact list, contact's e-mail address and full name gets also copied. What if the original user decides to update real name? Searching the entire database for occurrences of his old name and replacing all of them for new name seems like less than ideal approach. Wouldn't it be better to have the `contacts` field structured in such a way that it would contain only truly immutable properties, that is, user's `id`? So instead of `{ "contacts": [{ "&lt;ID&gt;": { "email": "&lt;EMAIL&gt;", "name": "&lt;NAME&gt;" }}]}`, you'd get something like `{ "contacts": [{ "userId": "&lt;ID&gt;" }]}`. Yes, it'd require additional fetch anytime you want to find out user's real name (but I think it wouldn't be such an issue thanks to Firebase's caching mechanisms), but you'd get the most up-to-date information and eliminate data inconsistencies. * I think you should always pin the version of pods you're using in your `Podfile` – especially if you want your students to follow your course in a month or in six months, pinning would assure they're on the same version of third party dependencies as you are. Also, it's just a generally good practice when working in a team. I think there was few more points I wanted to comment on but I already forgot them, apologies about that. I hope I don't come across as overly negative, I tried to write all the points as politely as possible with no intention of doing any harm or causing any offense. After all, we all just want to become the very best we possibly can, right? Edit: just remembered one more. `self` is definitely needed in closures but should be omitted anywhere else. Edit 2: just got to the Lecture 34 that's fixing a memory bug – interesting thing to notice is that `swiftlint` I mentioned previously actually caught up to this earlier than the lecture, warning me that I probably (always) want to declare `delegate` as `weak`. Good boy, `swiftlint`!
Change your code to - let numMod2 = Num.truncatingRemainder(dividingBy: 2.0) read here for explanation : https://stackoverflow.com/questions/40495301/what-does-is-unavailable-use-truncatingremainder-instead-mean
I found hacking with swift one of the best resources on the web. I have also followed the Stanford CS193P - but found I learned a lot more but following the Hacking with Swift tutorials - as suggested by the author - in order. Also note that if you have a problem - you can contact @twostraws on twitter and get additional help. the hacking with Swift website is now my first port of call when I have an issue - with over 200 knowledge base articles - clearly explained with great examples.
Not a question for this sub. Try the iOS sub or similar.
You need to create another ViewController subclass for 2nd view
The best way I learn (any framework or language really) is to jump in. Have your project in mind and to search up your questions in StackOverflow as you run into them. Apples source code and open source projects on GitHub are also great ways to see how other people do it and you can adapt to your needs. As stale as documentation can be, it's important. Try and jump in. You'll learn a lot from each bump you run into
You need to create a new file Cocoa Object class (name might be a bit off) create it as a sub class of view controller and give it a new name. On the storyboard change the class to the new one you just created. P.M. me if you need. I can show you how, later today when I get home 
Notes.app is AppleScriptable, as is Numbers.app. While there is a native Apple event bridge for Swift, [SwiftAutomation](https://bitbucket.org/hhas/swiftae/), I don't provide much support for it so strongly recommend sticking to AppleScript, which is well documented with an experienced user community who can assist when OP gets stuck. (Great automation technology; shockingly poor application-specific documentation.) If you need a book to get started with AppleScript, there are several on Amazon, including one [I co-wrote](https://www.amazon.com/Learn-AppleScript-Comprehensive-Scripting-Automation/dp/1430223618/). Not perfect (none of them are), but thorough.
You can do it in C with `alloca` since there is no overhead calling C code from swift. void test() { // alloc on stack char *p = (char *) alloca(sizeof(int)); int j = 0; // do what you want with bytes while (j &lt; sizeof(int)) { p[j] = j; j += 1; } // print number printf("%d\n", *((int *)p)); // print by bytes unsigned char bytes[4]; unsigned long n = *((int *)p); bytes[0] = (n &gt;&gt; 24) &amp; 0xFF; bytes[1] = (n &gt;&gt; 16) &amp; 0xFF; bytes[2] = (n &gt;&gt; 8) &amp; 0xFF; bytes[3] = n &amp; 0xFF; printf("%x %x %x %x\n", (unsigned char)bytes[0], (unsigned char)bytes[1], (unsigned char)bytes[2], (unsigned char)bytes[3]); }
Great information. Thanks!
I've been coding in Swift for about two months now (from little-to-no prior coding experience), and I started with the Intro to App Development with Swift book in iBooks. I think that, for a complete beginner, that is the best place to start. It's very straightforward and explains everything very well. I would also recommend checking out the App Development with Swift book and the The Swift Programming Language book in iBooks. If you have some prior experience in coding (but in a different language like Java), you might want to just go to the App Development and the Programming Language books to figure out how Swift is different and to learn how the syntax works. Otherwise, if you're a complete beginner, it's probably easier to start with the Intro book. Also, check out [The Swift Guy](https://www.youtube.com/channel/UC-d1NWv5IWtIkfH47ux4dWA), [Swift 3.0 in One Hour](https://www.youtube.com/watch?v=dKaojOZ-az8), and [Learn App Development](https://www.youtube.com/playlist?list=PLxvooGgpi4Nf1LKQtI6A-kXuJvB_PhAer) on YouTube. They're pretty helpful.
Also check this out, it's awesome...: https://itunes.apple.com/nl/course/developing-ios-10-apps-with-swift/id1198467120?l=en
Does Apple allow an app with this feature into the app store? What about dynamic app store buttons which update in the background (like the clock app)
Apple does allow this in app store apps (ex. [Narwhal for Reddit](https://appsto.re/us/39bzY.i) ). It is a new API released in iOS 10.3 and tvOS 10.2. You *could* make adjustments to your app icon based on events (such as the clock), but due to the restricted nature of how much (and when) your app gets execution time in the background, you wouldn't be able to do it very consistently, and you can only change to a fixed set of icons (not dynamically create them). Apple does not want people using this feature to replace notifications (such as badges on the app), but instead offer "alternative" icons. [API](https://developer.apple.com/documentation/uikit/uiapplication/2806818-setalternateiconname) 
Why do you need to handle all codes? Alamofire can check the base codes for you using its `.validate()` method. Check their documentation. Also, don't call `invalidateAndCancel`.
Thank you. No idea this API existed.
Just found `.validate()` inside the documentation, kind of what I was looking for originally. Thanks for that. As for the `invalidateAndCancel`, see here: https://stackoverflow.com/questions/39984880/alamofire-result-failure-error-domain-nsurlerrordomain-code-999-cancelled
The best way is to implement seperate `UIWindow`s for the `tabBarController` and the `LoginViewController`. I'd say its a bit of an intermediate to advance thing to do. Without actually posting code, how you'd do it is have a router or navigation manager that handles presenting `UIWindow`s. `UIWindow`s present themselves when you set `isHidden = false`. `UIWindow`s are `UIView`s so you can do `UIView` animations on them as well. One `UIWindow`'s rootViewController would be the login view controller that when done tells the navigation manager to present the TabBarController in a new `UIWindow`. Do not forget to dealloc the LoginViewController's `UIWindow`. I'll let you read up all about `UIWindow`s on StackOverFlow.
You should properly manage the lifetime of your manager, not just put random code from SO into your app. `invalidateAndCancel` means you can't use your manager for other requests, which is a terrible pattern. You should be creating one manager for all of your requests, just like you would `URLSession`s.
`You should properly manage the lifetime of your manager` Whats the best way to do this? I thought the most optimal solution would be to keep a reference to the manager so it doesn't fall out of scope and become denit'd. What's the cons of my current method?
Usually you'd put it in a singleton and use it for all of the requests you need to make to a particular API. You don't want to create a new manager for every request, as that's against both Alamfire's and Apple's best practices. 
I think that's what I've done? Unless I'm missing something. I've added some more code above. All code above is part of a single class, with obviously more requests to be added.
In that case your manger's lifetime is exactly as long as the containing class' and you don't need to retain it longer than that. If the class is being `deinit`ed then you need to actually make a singleton or store the manager somewhere it can always be accessed. I usually just make a Communicator (or whatever you want to call it that has a singleton manager with other static API.
I'm having a similar problem with organization in SceneKit. You can write functions that initialize/mutate nodes outside of your primary ViewController. You could also organize your code with extensions on the ViewController class.
Yeah that makes sense, I'll get to it. Thanks for your help :)
Structs FTW
That's really cool
if you put the zoom action into an SKaction it will be smooth
Okay that is one way to do it. I think I will try to do it with a storyboard, but I don't like having a modal for a Facebook login button. The idea is that it is a screen you only see once (I have an API that creates jwt tokens from the facebook access token, and refreshes it if it has run out) or if you for some reason log out like a crazy person, you will see it multiple times.
So let's say a game updates to add Halloween themed content and then updates a week later just to change its icon back to normal. Using this API, would it be able to just change the icon on a set date instead of updating in the App Store?
Awesome, thank you!
MLB app does this to let you use your favorite teams logo as the icon. It's a meh feature. I haves really seen an innovative use yet. 
Yes. It could alter its icon (based on the date) anytime the app was open. So if the user didn't use the app until December, they may still have the Halloween icon on the home screen. Also, the icon presented on the App Store would be the primary (default) one. So you might just want to update the icon through an update to keep things consistent.
Yes. 
That's a clever use. The API is very specific so I agree there's not many good uses of it.
I find it makes harder to find the app because you have to relearn the reflexive tapping on a particular image for a desired app. Not bad if you change it statically. But an icon that changes by itself and doesn't remain mostly the same is asking for problems. 
It's surprising that the API exists considering Apple's other ideologies surrounding the sanctity of a single focused app icon.
Per the [HIG](https://developer.apple.com/ios/human-interface-guidelines/graphics/app-icon#user-selectable-app-icons), it could only _prompt you_ to change the icon. A later app update could then remove that feature and replace the icon.
Congratulations on the library! As a quick note, you should avoid using the UI prefix on any classes as that prefix is reserved by Apple. Additionally, since your library is written in Swift, you don't need a prefix at all. 
Good to know! I'll refactor it as soon as I can, on that note though, do you know why you can't rename variables in swift through the editors refactoring options? It seems strange that it only refactor objective-c code.
This is finally fixed in Xcode 9 (currently in beta and a bit buggy)
In general it will be a big advantage to have experience in multiple languages. Swift is still relatively narrow, where most paid jobs will be new iOS projects. Python and JS are used in many different kind of projects. So for strictly swift only I would say it is a bit harder.
Coordinate is your custom class, whereas [Coordinate] is an array of items of your class. You need to select which item in the array you want to use before you can treat it as a Coordinate.
Just looked through your "how to use." I'd consider rendering your view with a ViewModel class or by using the builder pattern instead of the config dictionary. If you do want to use the dictionary, make some static keys so the values are compile time checked :) always assume the next guy using your code is clueless. Edit: if you want, I can walk through your code with you. Just PM me
If you want to get into iOS development, it's almost a must to know both Objective-C and Swift. Even if a company only does Swift development going forward, very often there still is an Objective-C codebase that needs to be maintained, and you need to be able to understand it. However, if you know Swift, learning the essentials of Objective-C shouldn't be too hard.
&gt; No instances of UITapGestureRecognizers This seems like a bad thing, because that means you can't use that API a lot of the time. What if you want to customise the gesture recogniser or set its delegate? Also, warning: With an API like this, it's very easy to create reference cycles! For example, `someView.addTapGestureRecognizer { someView.doSomething() }` create a reference cycle, because `someView` now holds a reference to itself through the closure. You have to be careful and keep in mind which objects are captured in the closure. (In this case, the solution is doing `someView.addTapGestureRecognizer { [weak someView] in someView?.doSomething() }`). This is a major disadvantage of closure-based APIs overt target/selector, where this kind of thing cannot happen.
It's a really handy extension for simple cases but as others point out, having a direct reference to the recognized might actually be desirable in more complex scenarios. Sure, you could iterate trough the gesturerecognizers array to find a specific instance but this becomes cumbersome. I guess it depends on the case. Circular references are an issue in a lot of cases where closures are applied but I would call that a simple occupational hazard and nothing to do with this implementation specifically. 😄 It's great you can bend the code like that though, right? 
Anyone had issues with this feature using iOS 11/Xcode 9? My code works fine in iOS 10.3 but getting a blank icon in iOS 11. 
I just finished my first game, ipsy, using 100% Swift and SpriteKit. It's free to download: https://itunes.apple.com/us/app/ipsy/id1259870473?ls=1&amp;mt=8 ipsy is a 2D physics-based puzzle game. Feedback is welcome!
You could always use the nil-coalescing operator like this: let filteredJobs = activeJobs.filter { parentJobsAsCodes.contains($0.code.components(separatedBy: ".").first ?? "") }
A small update. I figured out what was wrong. Apparently the background color was back initially. This did not occur when just using UIViewControllers.. So that is what tricked me. Now I need to figure out was is the best way for me to do the login screen together with the tab bar controller. It is a Facebook Login that sends information to my own API which responds with a jwt token that I store in the key chain.
Here's the new post I wrote about transducer's performance https://www.reddit.com/r/swift/comments/6nzp7l/transducers_in_swift_part_2_performance/?st=J59K2L2D&amp;sh=01b8b024
Addendum: If you need to call AppleScript from within Swift, here’s a helpful how-to on using AppleScript-ObjC in Swift: https://medium.com/@an23lm/applescript-and-swift-meant-to-be-ehhh-cbe03883a59#.w18mqaxxo ASOC takes away most of the pain of calling AS in Swift/ObjC, allowing your code to work with AS script objects and handlers as if they were native ObjC classes/instances and methods. AppleScript strings, dates, lists are fully bridged to their Foundation equivalents. AS records are partly bridged to NSDictionary (user-defined property names only—any keyword-based names are silently discarded). Booleans, integers, and floats need to be cast/boxed as NSNumber. And the bridge is two-way, so AS code can call back into Cocoa. No multithreading support, but that's usually livable with. The one glaring omission is lack of support for ObjC blocks, which mean some of the newer Cocoa APIs need to be wrapped in ObjC code if you want to use them from AS. Documentation's thin, but search around for "Shane Stanley" as he's the leading ASOC guru. Some other links of varying usefulness here: http://appscript.sourceforge.net/status.html
The code I put in the article was really just for explanatory purposes, I especially wanted to point out how you could store closures as associated objects in extensions. I wouldn’t treat it as an API necessarily. And you’re right, not having access to the UITapGestureRecognizer directly has its disadvantages, but you could always customize my extension to fit your needs! 
Yeah the code example was just a basic example, it sure beats doing it the normal way though. 
Good stuff. nice clean examples. Thanks!
Great, honest followup! The comparison to the iterative version is hilarious. 0.02 nanoseconds per element :-D Nice job by the compiler to optimise the whole thing to constant runtime, it's just unfortunate that it can't do it for the functional version.
I think that just means the benchmark is flawed, i.e. not complicated enough for the compiler to not optimise.
 import UIKit struct Job { var code: String var parentCode: String? { return code.components(separatedBy: ".").first } func isChildOf(_ parent:Job) -&gt; Bool { (parentCode ?? "") == parent.code } } let parentJobs = [ Job(code: "A1154"), Job(code: "A1155") ] let activeJobs = [ Job(code: "A1154.0003"), Job(code: "A1154.0001"), Job(code: "A1155.0007"), Job(code: "A1158.0058"), ] let childJobs = activeJobs.filter{ activeJob in parentJobs.reduce(false){ $0 || activeJob.isChildOf($1)} } print(childJobs) 
Ah, thinking about it, the compiler probably just optimises the whole thing away, since `res` is not used, and it knows that the loop has no side effects. I also missed that the inputs are random. I thought it'd be something like `1..&lt;1000000`, for example, in which case the compiler could theoretically generate code the computes the sum in constant time. In that case - OP, could you add a `print(res)` at the end of your imperative version? This way, the compiler can't avoid summing the integers. That would be a more interesting comparison. (I expect the iterative version to be a lot faster than the functional one anyway).
I don't see why the functional version would be slower :) Shouldn't the compiler be able to generate the exact same machine code from both versions? /u/mkchoi212 Could you have a look?
nothing wrong with public repositories, but then again if I was the owner of clash of clans I wouldn't put all my code as public as theres algorithms or proprietary things I want no-one to see. Long story short - only make a repo public if u think the code you are showing is freely available anywhere/learnable elsewhere and you just want to provide extra help, to whoever stumbles upon it.
It's for an app I intend to publish, but not one I think I'll be making much money off of or anything.
well its your own work and time, at the end of the day it comes down to your personal decision, but most interviews I've read or learned from they are satisfied with seeing an app physically and maybe you walking them through the code you use verbally, instead of reading code from a repo.
I would skip the `components` and just use `hasPrefix` which returns a Bool. let filteredJobs = parentJobs.flatMap { $0 }.map { parentCode in activeJobs.filter { $0.code.hasPrefix(parentCode) } } **edit:** Note that with long lists of jobs, it'll often be quicker (albeit less clear) to perform a partitioning on sub-arrays of decreasing size rather than constantly filtering the full array. E.g. let (startIdx,filteredJobs2) = parentJobs.reduce((activeJobs.count,activeJobs), { (base,parent) in let isChild: (Job) -&gt; Bool = { (child) in child.code.hasPrefix(parent.code) } let bound = base.0 var partitioned = base.1 let pivot = partitioned[0..&lt;bound].partition(by: isChild) return (pivot,partitioned) }) print(filteredJobs2.suffix(from: startIdx))
Swift only allows calling instance methods once the instance is initialized – when all properties of the object are set. In your example, `bar` has no value at the time you're calling `reset` in `init`. One option would be to set the default value of the property in the property declaration. Admittedly, it still duplicates the default values to the `reset` method. Though, if you always call the `reset` method in `init`, you kind of only need to care about the state set in `reset`. Doesn't _seem_ like the _greatest_ solution, but... tradeoffs, tradeoffs everywhere. 
In many cases (such as this one) you can use a struct, and then you don't need a reset() in the first place: just make a new instance.
Get a bitbucket repo and share a link with potential employers. I personally would just create some example apps highlighting some of the key features that people are going to be looking for in a candidate.
Class is a reference type, and Struct is value type. In Swift, we prefer struct over class, and I believe you will achieve what you want by using struct. Since you are coming from another language, I want to let you know that whenever you have choice between class and struct, always choose struct unless you really have a strong reason. 
I'm trying to use https://swift.godbolt.org/# and compile [this source code](https://pastebin.com/U9feFtuX) I put together from OP's samples with optimizations and whole-module turned on (`-O -wmo`). Looking at the functions spit down at the bottom, seems like the compiler does a nice job of inlining the closures, but the resulting instructions seems very similar to just using `source.lazy` before using the old way. I have to advise I'm no expert in compilers or ASM, however.
A stackview is just a bunch of views. If you want to order it you have to remove the old view and add the new view. The easiest would be to remove all views or simply set up the whole stack view for this purposes 
This is a super difficult course if you're going into it with no OOP experience
You could, and should because of good coding practice, simply write `var bar = 0` where you are declaring the variable. That would satisfy the initialization of the variable and allow you to use it.
Putting your work in a public repo could be very helpful. I know a lot of teams are fanatically open-source, like the folks over at Artsy for example. 
Count me in! Depending on my schedule I may not be able to participate in all of a cycle, but it sounds like a ton of fun.
Thank you man!
Cool! I'm going to try and update this post to include everyone's name...
Nice guide! Also don't forget to validate IAPs server-side ([See here](https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html)). Otherwise Jailbroken devices can get IAPs for free, which depending on app can be very bad if it affects other user of the app.
I was thinking something similar. I tried it but it looks like Attabench runs the closure more than once. Therefore, the `print` statement is called multiple times and IO taking forever, screws up the results. But thinking about it, other version's results weren't used as well... hmmm I uploaded the asm code here https://github.com/mkchoi212/Transducers
Wish I was good enough to join you guys. I'm a total beginner. Good luck all. 
This could be a great learning experience honestly. Just join in and watch for the first cycle and see where you could fit in. Also honestly, I have never done development with other people, so it will be new for me too. Come give it a shot!
**BitcoinTV**, my first AppleTV app that shows the current price for all altcoins using Cointmarketcap API. https://github.com/kuyawa/BitcoinTV I'm on a roll, enjoy!
Man sounds like something that I would totally do but I'm a complete beginner :( Barely just finished intro to app development with swift 
I'm in.
I am a minor version behind, but does debugPrint("Path to realm file: " + realm.configuration.fileURL!.absoluteString) not work anymore? 
Correct, thanks for the suggestion. I was focusing only on the client side in this tutorial, but I might extend it and add the server side validation. 
App for tracking who you loaned money to or other way around. If it was buying something for them what the item(s) were, the price(s) etc Going to link that app with my previously released app: Lynked
Wow, interesting technique!
Hi, thank you again for great feedback, we really appreciate it :] . Also thank you for great suggestions! Here is top 5 iOS libraries for this month by COBE team! We are very proud to be part of this awesome community. :] Again all suggestions are very welcomed, so if you have your library and think it's awesome and need a bigger audience or you tried some awesome not so well known library just write it to us! :]
I would go with "Intro to App Development" published by Apple in the iBooks Store. It's free.
Regular or Teacher's Guide? Or both?
Regular
I've added your name to the list as a "possible" -- give it a shot! If you GitHub/open source your project, I'll help out, and I'm sure other people will, too!
Added!
I love how everyone can code the exact same thing in extremely different ways. Personally, I'd use an array of enums {empty, x, o} with a "didEndGame" method that searches for a win or full board. This could actually be a fun project!
You can very easily modify the extension as public func addTapGestureRecognizer(action: ((UITapGestureRecognizer) -&gt; Void)?) And pass the recognizer in the action.
Any of you guys recieved a mail from developer academy? They requested my cirriculum vitae. I think they sending these mails to people who passed the test. It would be absurd if they requested from everyone. 
According to the creator of Attabench, https://twitter.com/lorentey/status/887646044229521409 the loop is fine.
Not sure whether this is the place to post this, but I've just released my first iPhone app called 'Carculator' its on the App Store now after many many hours! It tracks your drive and shows you your drive on the map and a colour changing polyline depending on the speed, plus it gives you statistics of the drive and then calculates the cost of the journey.
Anywhere relevant, I'd say. Also, ~~r/iOSProgrammers~~ r/iOSProgramming seem to enjoy seeing people's finished work.
oh sweet thank you! so r/Swift is okay? 
/r/iOSProgramming/
**Here's a sneak peek of /r/https using the [top posts](https://np.reddit.com/r/https/top/?sort=top&amp;t=all) of all time!** \#1: [HTTP connection vs. HTTPS connection](http://imgur.com/RtpGxQD) | [0 comments](https://np.reddit.com/r/https/comments/2q5r1v/http_connection_vs_https_connection/) \#2: [Create a self-signed SSL Certificate using OpenSSL.](https://blog.knoldus.com/2016/10/18/create-a-self-signed-ssl-certificate-using-openssl/) | [0 comments](https://np.reddit.com/r/https/comments/583mds/create_a_selfsigned_ssl_certificate_using_openssl/) \#3: [Naviguer plus sereinement, HTTS.](http://www.appy-geek.com/Web/ArticleWeb.aspx?regionid=2&amp;articleid=81310260) | [0 comments](https://np.reddit.com/r/https/comments/5l35vw/naviguer_plus_sereinement_htts/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Hi tsg212! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6o85dk/first_app_release/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
This, and if you are getting familiar with Swift and your goal is to start developing apps you should watch the iTunes U course from Paul Hegarty (Stanford 193p) afterwards.
Congrats! It's a great feeling.
How about a link to it?
Great idea! Although I am still fairly new as well, it will be interesting to see what approach others take in going through this process. Thank you for setting this up!
Apologies, forgot that bit haha https://itunes.apple.com/gb/app/carculator/id1255646549?mt=8
It isn't available in the Dutch store. Any reason?
Swift 4 doesn't make you lose support for older versions. It just makes it so that you can support newer ones. So I definitely suggest swift 4 because you'll have to update it to that eventually. 
How do you determine "top"? Is it something dumb like the TIOBE index's "language popularity"?
Hello, folks! Feel free to share any comments you have. Do you find these tips useful?
Ok that's good. Is there a way I can test it on my iPhone 7 running iOS 10? I get crazy errors in xcode when I try to. Or is this issue because I'm using beta 9?
You should be fine to do that. You should be able to use either xcode 8 or 9 but only 9 supports swift 4. 
Hopefully this helps keep people motivated! I know that my problem is I often start a project, then get distracted and eventually just delete it from my desktop. If we're all in the same phase, maybe it will keep us all moving forward?
I'm in the same boat. I have this awesome idea that I want to create on my own from start to finish but knowledge and time is very limited. Hopefully we can keep each other accountable and get through phase to phase. 
I figured out why I was getting so many errors, I was playing around with a pod NotificationBannerSwift and it was working fine when I had it in swift 3. I've removed it for now and I'm able to use it on my phone. Ok great well thanks! If there is any advice I'm all ears lol
Hi, Please try: https://cocoapods.org or https://github.com/Carthage/Carthage
About 4.5 months in, about to realease my first app within the month
The Swift Package Manager is the officially-supported solution: https://github.com/apple/swift-package-manager/
About 7 months. Wasted a lot of time getting it approved, I didn't have a restore button so it was rejected. Then after I added it I kept sending them the original build in error, which kept getting rejected - doh. I spent about another 2 months refactoring after I had red more tutorials on MVC for version 2. 
If you're intending on using a lot of pods, you might be better off with Swift 3 (but then you'll probably need to do some rewriting in a few months when everything switches over to 4). Many times the issues with the pods can be fixed just by downloading the pod, doing Xcode's migrator from swift 3 to 4, and then point your pod file to your swift 4 fork (that's what I generally do for dependencies during the summer months)
I look forward to these posts every single month
Should I update to BETA 9? I am currently on 8.3.3
If I read the problem correctly it would help to read a tutorial on MVC. Your data is model and your display is your view. Your first view controller populates your model and the second vc reads the data and displays it. I always send my data to a vc using a delegate. So if you add say a name to your model it will probably have something like var name: String{ didSet{ delegate.nameDidChange(newName: name) } } Then the VC will implement func nameDidChange(newName: String){ outletName.text = newName } If this is close to what you want but not clear - I will try to help futher
Mine is on Kindle and I decided hate the kindle Mac app so I never really looked at it beyond one chapter. I don't recall it being designed for beginners though. 
Really depends from the scope of your app. I'd say at least a few months 
You can install it alongside your current installation. I'd recommend using it and if it doesn't behave well for you just switch back.
Are you saying that's how long it took you to build and launch your first app from the first time you saw Swift? 
6 months. But had to take a break to do my final exams. Had experience with web development (PHP/JS), and C++ before I started learning Swift.
Designer and coder here. I'd like to be a part of this. Been learning Swift and iOS for about 1-2 years already. 
while true, this caveat is still a pain in the rear-end: &gt; Note that at this time the Package Manager has no support for iOS, watchOS, or tvOS platforms. 
Thanks I'll check it out. 
Thanks! 
If you do end up going with swift 3, its usually really easy to update to the next swift. I had a bunch of swift 2 projects that autoupdated to 3 and it took me like 30 minutes to fix the things that didn't update right
You can do some of the tricks on 8.3.3 as well. These which comes from simctl command. Also, you can install Xcode 9b3 beta and switch between Command Line Tools with the xcode-select command. Typically you'd have the following workspace setup: xcode-select -s /Applications/Xcode.app/Contents/Developer (for release version) xcode-select -s /Applications/Xcode-beta.app/Contents/Developer (for Xcode 9 beta) And to watch your currently selected Command Line Tools just use this: xcode-select -p So yes, to use Simulator in full-screen mode with Xcode, launch multiple Simulators at once and resize Simulators you should have Xcode 9b3 installed.
Yup, consider that I wasn't doing it 8 hours a day and that if you don't have a programming background already it's gonna take way longer.
Awesome -- I added you to the list! Let me know if you see anything in the "phases" section above that I need to edit...
Not on my terminal it doesn't (again will work if you're not doing this in XCTestCase). I decided for unit testing my current practice of having all my tests work off one realm was not appropriate. What I'm doing from now on is overriding setUp() (in XCTestCase) and assigning the test case name to the defaultRealm's inMemoryIdentifier property, like so... **Realm.Configuration.defaultConfiguration.inMemoryIdentifier = self.name** Now I have a unique realm (in memory only) for every individual test. The realm gets wiped out each time the test is executed. This is way more productive and much less soul-wrenching especially if you're doing TDD, imho. 
We already answered this question few months ago. It's not THE BEST or something like that. We just want to promote work from other developers and give insight on some not so popular libraries. This is not a competition, this is just a list. :]
Thank you very much &lt;3
I wasn't around the sub a few months ago, and wasn't really interested in digging through your post history to maybe find an answer. That said, thank you for responding and answering my question. :)
Which does not help if you want to customise the gesture recogniser. I guess you could do `func addTapGestureRecognizer(action: ((UITapGestureRecognizer) -&gt; Void)?) -&gt; UITapGestureRecognizer` and return the created gesture recogniser. But then I'd rather have a `init(action: ((UITapGestureRecognizer)-&gt;Void))` for UITapGestureRecognizer instead. 
I have a hard time believing that. Just using some napkin math this means that the loop can sum 50 billion integers a second? That is, like, 15 integers in a single CPU cycle? Might be possible, but it just seems extremely fast to me. The suspicious thing is that the graph has no hint of hitting a plateau, but it has to do so at some point (i.e. there is a minimum time required per element). Can you run the benchmark, with eg. 10 billion random numbers? If that is still on the line that the benchmark hints at, there is something wrong here. (Sorry that I'm too lazy to just try this myself, I don't have enough spare time :-P)
Oh, I forgot to write that both x and y axis are in the logarithmic scale. The "amortized" option was also turned on; I saw the creator of the app use it to better show differences but I'm not entirely sure what that means though :D
I'm doing an online course [How To Make An App with No Programming Experience](https://codewithchris.com/course/how-to-make-an-app-with-no-programming-experience/) and I'm happy with my progress as an almost complete programming noob. It's not free but he has a [YouTube](https://m.youtube.com/channel/UC2D6eRvCeMtcF5OGHf1-trw) channel with many video tutorials for free. 
Looks good to me. Would be awesome if we had a slack channel for this!
Here is ok as long as it's not blatant spamming like WINCASINO!!! or TEENCAMS!!! Also subreddits like: /r/apps /r/iphoneapps /r/goodguyapps /r/suggestapps for those having an idea
Start right now using Swift 3, upgrading to Swift 4 will take you a couple of minutes.
Thanks but it's not available in my country. 
if you have Swift 4 installed, go for it. Otherwise, stick with Swift 3. I've been facing some crash on Swift 4. A small advantage is that you can build slightly faster than the previous version. If your project need to handle JSON, then use Swift 4 without thinking twice. One line JSON parser is very useful
This month I opened source to my iOS SpriteKit Game. https://github.com/woguan/Legend-Wings
Yes. Thank you.
If ur just trying to do it for development (not programmatically finding it) you can check a variable's type by starting to type it into the editor, and letting auto-finish suggest the var name. It displays the type to the left of the name. This is a horrible work around but it works so 😉
I know I'm a little late to the party but the guy teaching it grates on my nerves primarily because of his language / choice of words. I feel like I'm being marketed to -- not taught. I absolutely can't stand that. His knowledge is great and the course, itself, is fine but when he speaks it's one of the more annoying things. If I had to be specific it's how he claims Swift is the best thing ever -- as though it offers things *no* other language does, as though it's revolutionary. I feel little, if none, of that is true relative to what a new person is going to care about. I say that, I got about 3 lessons in and I couldn't handle him anymore. I decided to break off and go Nerd Ranch. I've been pretty impressed with them so far. I do agree with you in that it's important to understand paradigms and language first -- primarily so you avoid pit falls in the middle of your project that force you to either start over and force your code into spaghetti.
This seems like a bug. I'm not aware of Swift 4 removing the implicit use of the Swift package.
No I want to print out the type in a log message
**Webshot** is an app to take screenshots of web pages, nothing fancy but I like to make my own tools. https://github.com/kuyawa/Webshot I'm on a roll. Enjoy!
I originally implemented `type(of:)` in Swift 3 with a rather dirty parser hack that pretty much made it impossible to name anything else `type(of:)`. Joe did it right this time around by giving it magical type checking semantics and putting it into the Swift Standard Library. It not being a parser hack means people have started overloading on it, so the migrator has to be conservative and qualify it with its owning module: `Swift`. You can safely remove the `Swift.` in most cases.
Why not just actually go to the webpage and use the keyboard shortcut for taking a screen capture of a window?
&gt;because of his language / choice of words. I feel like I'm being marketed to -- not taught. I absolutely can't stand that. Do you mean the simplification of the things he is teaching? &gt;Swift is the best thing ever -- as though it offers things no other language does, as though it's revolutionary Swift is actually pretty awesome in it's own way, it's super easy to read compared to ObjC and lets you develop apps really quickly using frameworks like cocoa. I think the WORST thing by far is the lack of documentation and the constant changes which make any tutorial/guide/question older than 2 years almost obsolete. Especially when it gets to rather obscure stuff. &gt;I say that, I got about 3 lessons in and I couldn't handle him anymore. I decided to break off and go Nerd Ranch. I've been pretty impressed with them so far. It's definitely not for everybody, it's still a Computer Science class so it's not focused on productivity right away or how to quickly do things. But around lecture 4-6 when he starts with mostly slides the whole thing really gets meaty, please check out the lesson on protocols/delegation and tell me if you think it got better or worse. One more thing, the guy teaching, Paul Hagerty, was a friend of Steve Jobs who was the Senior Software Developer (iirc) at NeXT Comptuters. I think it's pretty fucking awesome that somebody who worked on laying out the basics of what the language uses is teaching it now to students. 
You can't ship any app made from an Apple beta tool, so be careful.
cmd + shift + 3 cmd + shift + 4
I think u can just use type(of:)
Moving the parent code into the struct was the way to go, thanks.
Features 1. Implementation with code &amp; storyboard 2. Left, right and center panel supported 3. Change left, right or center panel 4. Open left, right or center panel 5. Supports Animations 6. Multiple Panel configurations 7. Supports status bar preffered style for all panels
Edit: I noticed that I misread the scale. It's picoseconds, not nanoseconds. If you have a CPU that can sum an integer every 0.02 picoseconds, I'd like to have it, because afaik no such device exists. My takeaway is that the creator of Attabench has to be wrong in this case. The results are just impossible. (I noticed the scales of course). I'd assume that for the "amortized" option, the software simply does multiple runs and averages the resulting times, which decreases variance in the graph?
&gt; SnapKit If you want to learn, then the programmatic way is great. But I wouldn't use a library, AutoLayout is fine nowadays without some library in between.
Very, very nice!
You could switch on the segmented control property selectedSegmentIndex when setting or updating the button title, as well as the logic for each of the 3 states. This works well for an easy implementation. https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618575-selectedsegmentindex
It's all about what works best for you. The link you provided is a really good tutorial for the basics of iOS development. I would highly recommend going through that tutorial. In general, don't worry too much about which method is "best", as long as you are learning and putting in effort you will see results!
constructive feedback; - Looks good from the screenshots, very clean graphics. Personally I find paying for a utility app a bit of a turn off. I think giving the user as much as possible for free but asking them to pay for a feature is likely to generate more revenue - but there is no way to be sure - thats a whole area for debate. Good luck, hope it goes well. 
Whenever you develop, you'll be sourcing your documentation from all sorts of places, it's just normal development. I would say if it looks too fast, stick with the book for now then revisit that link in a few chapters. You'll get to reinforce what you learned. 
&gt; Do you mean the simplification of the things he is teaching? I don't have it downloaded with me but it was phrases like "best ever". I remember showing it to my girlfriend and her asking "what's he selling?" It's like he was brainwashed to use a certain set of words instead of letting the language sell itself. It felt like my former boss who learned a language the night before and it was the best thing ever and it does all these super cool things (that every other modern language does but he doesn't use other languages that are modern). I've been around that kind of person too long to be willing to sit through another class with that kind of attitude. &gt; Swift is actually pretty awesome in it's own way, it's super easy to read compared to ObjC and lets you develop apps really quickly using frameworks like cocoa. I think the WORST thing by far is the lack of documentation and the constant changes which make any tutorial/guide/question older than 2 years almost obsolete. Especially when it gets to rather obscure stuff. When you're comparing to Objective-C then Swift is amazing but I'd argue that'd be an unfair comparison. It'd be more fair to compare to to Java for Android or C# -- those are pretty modern. Compared to those Swift isn't anything unusually spectacular or innovative. That's not a bad thing -- it's just regular and, in our case, it's what we use to program for iOS (or ObjC but eff that noise, given a choice). &gt; One more thing, the guy teaching, Paul Hagerty, was a friend of Steve Jobs who was the Senior Software Developer (iirc) at NeXT Comptuters. I think it's pretty fucking awesome that somebody who worked on laying out the basics of what the language uses is teaching it now to students. That is, indeed, great, but he's a Steve clone. He seems to lack his own personality and is more Cult of Mac personality - this is what pushed me away from that course. I'm not saying he's not smart -- he absolutely is. But I think you're right -- he, as a teacher, isn't for everyone and there are other teachers out there that match up better for me. I'm loyal to no company. I don't care "how great" something is -- does it do the job, yes or no? For shits and giggles I'll check out 4, 5, and 6. Again my problem isn't the meat -- it's him and how he's **very** Cult of Mac and just How Great Swift Is (TM) and how often he feels compelled to repeat that (or something similar). I'm pretty jacked up on meds right now so I'll try and get to it sometime this weekend or, if I'm lucky, tomorrow.
Couple things here going forward for making tutorials: 1) You're literally just showing exactly what could be found in the documentation if a person took the time to look at it. Perhaps do something with the view controller that is a little more advanced? 2) Since this is marked as a tutorial, you may want to be a little bit more cautious about showing people lines of code that will 100% cause a crash. Case in point, you're unwrapping the optional URL and while yes, you may know 100% that the url that's being created there is (should) open, you or anyone else using your code snippets in the future may not have said luxury. You should wrap it in an if let/guard let and handle issues where for whatever reason the url doesn't get created in a non-crashing manner. Just my 2 cents but ultimately you'll be happier with yourself as you don't have to track down random/weird crashes in the future.
The "timeline" of the intro book, the one that came before the 900page is also slightly different. I stick to the 900page one though, and often "sidequest" chapters, digging up stuff on Apples site, Googles or in Videos I find about the topics, and some "fun" projects in Xcode with what I currently know, before moving to the next chapter. I also compare completed chapters with the teacher material. It's useful seeing how the stuff is solved the easy way I think. I find that the 900page ones structure makes the most sense to me, you learn about arrays before you learn loops e.g., makes sense if your loops run through arrays which you already understand. Or structs before classes, and then when learning classes you just "inherit" what you learned in the struct chapter. Other courses might have a different order. Not that this would be problematic, but the 900page ebook seems serious, something thought out for schools. 
&gt; &gt; Apples site, Apple's* site Apples = more than one Apple Googles* Googles = more than one Google &gt; 900page ones structure 900page one's* structure ones = more than one one At least you spelled It's correctly, but Jesus, that's a pain to read. Your code has to compile, why don't you take the same care with your English? You're not typing for yourself, you're typing for others to read.
Thanks for the feedback. I'm almost inclined to make an open source swifty layer on top of Firebase, since it's such a pain to work with
yes of course. and thanks for the reply. what i mean, is that when i go through the extra (related) materials, i should only learn that single one lesson that's linked to the chapter of the main book? and maybe later learn the extra material in full
I personally liked "Intro to App Development with Swift" before starting thr one without the "Intro"
Started learning Swift 2 in December of 2016, then I started working on the app that I'm just adding some finishing touches to. I gave up on the idea for over a year and revisited it about four months ago. Long story short: about four months. Even though I feel like it's ready for initial release, the small bugs are stressing me out a bit and I feel like the more I play with the current build, the less likely I am to ever release the app. Did anyone else go through something similar? Would I be stupid to knowingly release an app with a couple of bugs that aren't showstoppers?
Um, are you sure you are learning from apples ebook? I'd say learn on the basis of projects, check out udemy a lot of good courses and they are 90% of the time on sale for $10. Def worth the money. 
&gt; It'd be more fair to compare to to Java for Android or C# -- those are pretty modern. I find it a lot better than Java or any other language I've used (Java, Python, webtechnologies a bit too), especially when it comes to GUIs since that's whats Swift was designed around, Cocoa/AppKit/UIKit. Swift isn't super spectacular but tbh there isn't really much going on in the programming language business. &gt;He seems to lack his own personality and is more Cult of Mac personality - this is what pushed me away from that course. Wat, he has to teach iOS programming, he even said multiple times he'd love to teach Haskell and functional programming too but that's not his job and he really has no time for it. &gt;it's him and how he's very Cult of Mac and just How Great Swift Is (TM) and how often he feels compelled to repeat that (or something similar). I honestly don't care much about that, I think a good chunk of it is getting the students excited for the whole shebang. His slides are pretty awesome since he doesn't go over every single detail like a lot of books which on one side is great for total beginner but on the other one takes way too long for people who are already experienced. &gt;For shits and giggles I'll check out 4, 5, and 6. Thanks for giving it another chance, like I said the lessons consisting of slides are less advertisy and focus more on the language itself so you will probably enjoy them more than when he uses the calculator lol. Oh and get well soon!
I personally use the RealmModel directly. I can't see why you would separate them. Maybe someone could give me some insight why this would be favourable. 
As far as the use of Realm goes, I sincerely doubt that their intention is for developers to _have to_ write another layer to separate Realm from the app. Realm is engineered as a _mobile-first_^1 database, after all. I believe the separation is there to isolate the persistence solution from the model objects your application works with. Motivation being that if you decide to change your persistence solution down the line, you don't have to _potentially_ modify objects working with the model. At least that's what's most appealing to me about the idea – the persistence solution doesn't leak into the application code. Another benefit to having a separate, plain, model layer could be that it doesn't come with the baggage that Core Data, Realm, etc objects have, as the base classes contain a lot of machinery that makes the persistence magic work. If the solution is closed source, you may be unaware of what is going on behind the curtain. As a side note: perhaps amusingly, one could argue that Realm is actually more transparent than Core Data in this regard, courtesy of being entirely open source. It's been nice on occasion to be able to check the Realm source when in doubt about something. As for what you're meant to do: I don't know. I do see the appeal in a plain value (structs and enums) model layer – avoid surprising changes to your model, much easier to reason about. But I'd be loathe to suggest that _values all the way down_ is a reasonable approach. For what it's worth, I have some apps where I use plain Realm, and I'm very satisfied with it. On the other hand, I've a couple of ideas where I feel I'll be better off with a plain SQLite table. If at all feasible – try stuff and take note of what works and what doesn't. Experience is good. ^1 - I doubt that's an exact phrasing from the Realm team, but I recall that being the intent. 
Took me a month. Then 2 weeks after my first app I put out another one. My first app wasn't anything pretty design was and the coding was a little rough but that's to be expected for your first app in most cases. Also, it's very easy for me to look back on things now and see how rough my beginning was since now I've had a good year of hardcore studying this material with a mix of personal and professional practice in app development. I actually took 2-3 years off programming as I switched my major from Comp Sci to Mathematics. I like math more than programming but having completed the math degree I now see my strength is in programming. Doing all that math though has made me a better programmer I believe and I believe thats why I picked up Swift as easily as I did. Swift + iOS together just makes sense and it'll eventually just click for you. Once it clicks...it'll be like you just know everything Swift and iOS has to offer. 
&gt; Swift isn't super spectacular but tbh there isn't really much going on in the programming language business. I agree, which is why it annoys me how he acts like it's special in his tone and choice of words. It's great *relative to ObjC* which isn't a high bar to pass though. &gt; Wat, he has to teach iOS programming, he even said multiple times he'd love to teach Haskell and functional programming too but that's not his job and he really has no time for it. Perhaps I'm not communicating right. He's *very* Apple Fanboi'ish. As in "you have a little something on your chin" kind. I even asked my girlfriend about it and she agreed (although she knows fuck all about programming, except I did have a fun conversation with her about null terminators in strings and how they are the bane of a programmers existence). He's smart, the content itself looks fine. He, as a person, on the other hand... is annoying. I've met two people like him in my life and can't stand either of them. One had an erection over Linux and the other over Microsoft. Both of those people left me with very emotional reactionary scars with personalities like this -- which is why this was significant for me. His point is to teach me how to program in iOS. Not market programming in iOS. It *feels* like he's building up to sell me something at the end. If I didn't know any better I would expect him to sell me XCode by how he starts off teaching. XCode is, of course, free and I do know better -- this is merely an example. &gt; I honestly don't care much about that, I think a good chunk of it is getting the students excited for the whole shebang. Which would be great if Swift actually did offer something unique but it doesn't. I mean, nothing that's significant. In fact all modern languages have caught up with each other for the most part. Fuck, even PHP isn't such an evil heathen anymore -- the bastard child it once was. &gt; Thanks for giving it another chance, like I said the lessons consisting of slides are less advertisy and focus more on the language itself so you will probably enjoy them more than when he uses the calculator lol. I really thought the calculator was a great example to start with for the language and the goal. It's a simple example that one can relate to and shows a few things that one wouldn't have otherwise had naturally thought of. Example being instead of making each button refer to a unique method/function. &gt; Oh and get well soon! Thank you! It was a tooth problem, among other issues. Apparently getting an infection there is bad juju. Pain killers ftw.. speaking of.. time to dope up.
&gt; Python and JS are used in many different kind of projects. In all cases, you're paid for the expertise in the realm of the project, not the syntax of the language.
Mix your learning via reading and coding. If some of the code is over your head, go back and read related sections.
Hi actuallymrj! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6oke18/miney_mo_a_friend_and_myself_started_a_software/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Try Realm. They very good and simple and fast.
Turns out you were right! The compiler is apparently very aggressive about unused variables and was just optimizing the loop away and making it O(1). I updated the blog with the new graph. I guess I should be more realistic about my Macbook's performance capabilities :D Thanks for all your helpful insights!
This will depend greatly on what your requirements are, but to keep it simple, you could just write to JSON.
Core Data would be suitable, particularly because of its powerful change tracking. If you create a new Xcode project with the Master-Detail template and tick Core Data, the created application has a basic implementation of Core Data CRUD to get started, if Core Data is new to you. 
Firebase is a pretty awesome backend data store
I’m on 9b3 and the simulator won’t move into full screen Xcode on my 13” mbp. Is there a setting that needs to be turned on?
Absolutely amazing. Takes about 2 lines of code to save or retrieve data from it. 
I've seen a fair number of articles on that subject. Here are some useful resources: * [swift.org - Migrating to Swift 4](https://swift.org/migration-guide-swift4/) * [What's New in Swift - WWDC 2017](https://developer.apple.com/videos/play/wwdc2017/402/) * [The Swift Programming Language \(Swift 4\): Document Revision History](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html#//apple_ref/doc/uid/TP40014097-CH40-ID459) * [Swift Evolution: Implemented \(Swift 4\)](https://apple.github.io/swift-evolution/#?version=4) * [apple/swift CHANGELOG.md](https://github.com/apple/swift/blob/master/CHANGELOG.md) 
Okay, that puts my mind sort of at ease. I think its just better for me to get the project done more than trying to get all the seperation of concerns correct first time.
As I understand it, as @Uupis suggests, the reason why devs separate them is because if you change the persistence layer later on you don't need to break anything to switch it around. This query on stackoverflow goes over it too; quote; &gt; "A lot of other developers have wrapped Realm in their own classes in order to hide the API from their business logic code" https://stackoverflow.com/questions/43775056/should-i-use-repository-for-realmios A couple of github repos I've seen that separate them * https://github.com/sergdort/CleanArchitectureRxSwift * https://github.com/noxt/ViperExample * https://github.com/RxSwiftCommunity/RxRealm 
&gt;Your code has to compile, why don't you take the same care with your English? Lack of compiler warnings I guess. But true, I should care more, thanks for "warning" me.. 
Reminds me of a quote by Donald Knuth. "Premature optimization is the root of all evil in programming."
It really depends, but I see no reason why Firebase won't be suitable for your app.. Read more here: https://www.airpair.com/firebase/posts/structuring-your-firebase-data. It might help you understand how Firebase DB works, as long as you 'flatten' your data you should obtain good performance too. There is another post I saw some time ago, which explains a bit how Firebase DB tree looks like, but I can't find it now. LE: here you go, Firebase data model explained: https://howtofirebase.com/firebase-data-modeling-939585ade7f4
Hi theoriginalyoakki! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/6omtvb/made_my_top_paid_sticker_app_free_today/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Thank a lot for your views on that. Will be considered in further posts.
Nice tutorial!
Funny. Not quite the answer I wanted to get. On a serious note, what's the best way to go about it for a complete beginner? How can I pick up programming? Aside from what you just told me.
CloudKit?
&gt; although after some research it looks like MySQL isn't a great solution for iOS apps. It is a perfect solution for iOS apps, go with it or Postgres and you'll be done in no time. Premature optimization is the root of all evil.
Million dollar question - can someone use this to create a CAD like app that automatically builds out a map of your rooms/home? Would be amazing to auto-scan your room and build a CAD file so you could have blueprints or 3D models to work on renovations. 
Nice, but WebView is (unofficially?) deprecated.
It's true though. You write it and submit it. Or keep it for your own use. It's not voodoo. As far as learning programming, a tutorial would be a good first step. Just work through the examples. I'd recommend a dual monitor setup and a PDF or website style tutorial that you can keep on one screen as you write on the other. 
This will be my next project. But I've not started it yet. I was expecting to find this tutorial useful: [Tutorial](https://www.raywenderlich.com/85900/arduino-tutorial-integrating-bluetooth-le-ios-swift) But let me know if it is. 
I don't know how to capture the page using WKWebView so I had to go back to WebView for this particular task. As soon as I find out how to do it I'll change it. This is what I got for the capture as an extension of WebView: func webshot() -&gt; NSImage { let doc = self.mainFrame.frameView.documentView! let rect = doc.bounds let size = NSSize(width: rect.width, height: rect.height) let bitmap = doc.bitmapImageRepForCachingDisplay(in: rect)! doc.cacheDisplay(in: rect, to: bitmap) return NSImage(cgImage: bitmap.cgImage!, size: size) } If I use WKWebView webFrame instead of mainFrame, it crashes, don't know why. [WKWebView webFrame]: unrecognized selector sent to instance So what's the equivalent of mainFrame in WKWebView?
Full page screenshot? I'd be happy to learn that shortcut.
Yes, I did use arduino + hc-11 bt module
Maybe you have a startup idea worth billion !
I too second the request. Would love to check out well-written open source code, that follows design patterns and shows typical use of Apple's inbuilt APIs.
Not worth the effort. "Good code" is only good code to those knowledgeable enough to derive what it means. I.e. If you are new to Swift, "well written Swift" wouldn't be as understandable as ugly, verbose code. Just read, write, learn and refine continuously. It's just something you get a feel for. 
The issue with tvOS local persistence is that the system may reclaim the space on behalf of the user when the app is inactive. Anecdotally, however, it has never been an issue for me, but I don't have a tvOS app on the App Store, so it's 1 datapoint at best. From a user perspective, I have something along the lines of 25GB of videos locally in VLC on tvOS, and they've been there for a solid year now. Of note: my Apple TV is of the 64GB variety, and I only use three apps: Plex, VLC, and YouTube – so the pressure for local storage space is somewhere between minimal and nonexistent. Again, of course, one data point. As for suggestions for a solution fitting your needs, unfortunately, I have none. 
For well over a decade there have been photo to 3D mesh programs. Where you take multiple photos of an object and the program turns this into a mesh representation. AutoDesk has a nice one. I find they aren't great for most CAD applications. Although I imagine combining that with augmented reality will make it even more accurate and solve some hurdles. 
It's not possible. Protocol inheritance is not class inheritance, so you don't get a super. 
as someone who uses mind maps, thank you. 
You will have to restructure your code, but your example is too abstract to really give you good hints. The smallest modification I can think of is putting `doThing`s implementation into another `doThing2` in the parent. Then you can just call `doThing2` from both the parent and the child. But there might be a different approach that makes more sense.
Kickstarter open-sourced their iOS app. [It's available on GitHub here.](https://github.com/kickstarter/ios-oss) They use some reactive patterns and custom operators, which can make the code look odd at first. They also use playgrounds as part of their development process, which is pretty unique.
I agree with this, but there is value in trying to follow best practices and common object-oriented patterns. When I was learning Swift, most of the code examples I found online were fairly basic, but once I saw some good code (in the Stanford CS193p lecture videos), many of the concepts in Swift started to make more sense.
In general, code quality transcends individual languages. If you follow good design patterns and use them *where appropriate*, and avoid anti-patterns/code smells, you’re like 90% there. Easier said than done. Besides that, google “swift programming conventions” and try to follow things like naming, commenting, and documentation conventions. 
A shot in the dark: `(self as Parent).doThing()`
I'm not sure where all this negativity with respect to reading good code comes from. By the way when has verbose and idiomatic code been considered bad? Granted excessive verbosity is not good either but we don't need to go back to the days of 3 letter variables. Frankly some concepts are hard to learn unless you have a bit of code to tear apart and debug to see how it all works.
I've just released the first version of **Reading List** - an app to track personal reading lists: book recommendations, reading start / finish dates, etc. App webpage: https://andrewbennet.github.io/readinglist/
Oh, right! I'd say this is the nicest approach.
Why not just download Apples example code from their WWDCs?
This is awesome! Thanks so much 
That's a custom method in your view controller.
Ohhhh I feel dumb now lol
Thanks 
In my personal experience Apple's sample code is not always the highest quality. Many of the engineers that work on Apple frameworks use Objective-C, so they often break common Swift conventions because they aren't as familiar with the language.
From my experience any good company will see a developer for more than their primary platform. Many companies nowadays are looking for full stack engineers. So if you pick iOS as a starting ground just make sure you gain experience using things like AWS and all that good stuff. Think companies look more for how you solve problems and your approach rather than do you know how to write code in a language.
This is not the case for the Apple Music project I am looking at. They use guard, and structs and protocols and everything swift. And write very clean understandable code. 
Just took a look at the MusicKit sample code, and I agree it's pretty good. This is the first Apple-provided Swift code that is like this. Maybe more of the WWDC 2017 stuff is like this. Thanks for sharing!
Not if Lattner has anything to say about it. The ultimate goal of Swift is world domination. It's already on the server, and he'd like to be able to replace C++ with it. 
That's strange. I have this ability enabled by default. Try to enable the Apple internal menu (I've described how to do it in the article) and check if the item "Allow in full screen" enabled. If it's not, you should enable it and try again.
In case anybody is looking for the link to the MusicKit sample code, it's under the "Get Started" section of https://developer.apple.com/musickit/.
Yeah, in the case of Music they've since switched to Swift for both the app and examples so I'd expect high quality code at this point. 
&gt; If I need to restructure my code, what would be the best way to do this? use OOP
I understand. I'm sure I'll work on some solution
Yup, got the email. Looks like there will be an interview in September. I would've liked to have it sooner because I want time to find a place there, but still, happy to be moving on to the next round!
If you want to learn the concepts behind machine learning, CoreML is not the right thing for you as it's goal is just to integrate already trained models into an app. If you want to get started with high level concepts of machine learning, use one of the popular machine learning frameworks (Tensorflow, Keras, etc.). There are also wrappers around them to make it easier for beginners to work with (TFLearn)
That was it, thanks!
FFS, I just wasted a fair amount of time writing a struct to coredata method. Thanks for this.
Glad I could help!
You can learn Swift in a few afternoons. Same as any language (other than C++). The libraries and frameworks you focus on will matter far more. This is true for every language. 
I just downloaded Xcode 9 to play with this. But my structs aren't limited to primitives so they apparently don't conform. So maybe I didn't waste as much time as I thought. At first read, I thought I could box any struct into an easily stowable object. As it is now, I basically convert them to a [String: Any] dictionary and back. This would still be the route to take?
Everything needs to conform to Codable. If you make the other associated objects/structs conform to Codable it should just work (tm).
Doh! Thanks. Still doesn't like structs with UIBezierPath or UIColor though. I could work around that.
This. If you say, focus on just using iOS frameworks, you will learn Swift and all the ins-and-outs of those frameworks, which is the valuable part. If you focus on writing server-side code, you will get a different useful tick on your CV. 
I converted my app from Objective-c, and being a spare-time project it took my ~6-8months. I ended up re-writing almost all of it, just using the old code for reference on features and some algorithms. 
I have had people suggest I put all or part of my app up on GitHub, but I always feel that since I have been writing it by myself, and it's free, it's almost embarrassing the shortcuts I take with documentation and error catching. Thy insist others will clean it up if it gets used, but I am not so sure. I think the takeaway from that ramble is I personally would make sure it's code I would want others to see and critique if thats the purpose.
Adding A-&gt;B Repeat to my music player app. http://imgur.com/a/8lMU8 shows the progression, currently testing and getting those corner cases taken care of.
You can extend those existing types to conform to Codable, though you'll have to write the code for it manually (still not too much work, compared to another solution which may involve manually encoding your own, more complex types).
^ I used to charge Tier1 (.99 us), and barely made any money. I switched to a free, no ads, model with a pay what you want screen... not much change in what I make but the app is in a ton more peoples hands. Doubt it will ever get huge, but really getting any sales these days requires some luck and good advertising.
cmd + shift + 4, that will give you the crosshairs, then click space, then use your mouse/trackpad to click on the window you want to take a screenshot of
You don't need a Mac to start coding in swift. Install Linux or use a VM and use server side Linux. A Mac and Xcode is only needed for swift if you want to target iOS or MacOS. 
That's what I'm planning on doing. I would like to try out app making on iOS which is why I'm considering buying a Mac. I've also heard that running a VM causes hiccups and glitches which knowing me would get annoying very quickly. Thanks for the input though.
Ah yea if you want do iOS - you need a Mac or a hackintosh. I did iOS dev and even submitted apps to the App Store with a hackintosh.
Srsly? And there were no submission or compatibility issues on either side? 
There used to be some but haven't run into issues in the last few years. All the basics run fine: Xcode, code signing, etc. The only real issue I had on my hackintosh is getting iMessage to work reliably and not doing automatic macOS updates from the App Store. Just wait a few days for tonymac to release an update and you can do it from there. 
Looks like I'm going to be setting up a hackintosh tomorrow. Thanks for the verification! 
Its a good time to get into the hackintosh community because Nvidia recently released Mac drivers for the 10XX cards. 
Too bad I'm running on an rx 470 lol.
I'd check out https://www.tonymacx86.com/buyersguide/july/2017 for compatible hardware
Full page? From top to bottom? Like the 25 articles on the front page of reddit? Without scrolling? Like this page with all the comments?
The 32u4 is a BLE terminal by default. You'll need to connect, initialize, and communicate with it using CoreBluetooth. It's not a one line setup, but if you are familiar with the delegate pattern it's not so difficult. Here is a general overview. I'll give you the broad way first and mention some things to shorten it afterwards. I'm going off of memory here, so syntax beware. * Create an instance of CBCentralManager. This is what you use to search for and communicate with BLE devices. * Implement CBCentralManagerDelegate methods. You don't need to implement all of these methods. You'll be interested stateDidChange didDiscoverPeripheral didConnect didDisconnect didDiscoverServices didDiscoverCharacteristics didUpdateValueForCharacteristic * Before you start scanning, you **must** be sure that centralManager.state == .poweredOn You can query centralManager.state and you will be notified via CBCentralManagerDelegate.stateDidChange as well. * To begin scanning, call scanForPeripherals(nil, options: []). CentralManagerDelegate will call didDiscoverPeripheral as it finds BLE devices. * As devices are reported back, you'll want to inspect the devices to see if it's your 32u4 and filter out others. There are a few ways to do this. A solid way: if peripheral.advertismentData[CBAdvertisementDataServiceUUIDsKey] == Tx * Connect to the peripheral by calling centralManager.connect(peripheral, options: nil) * You are now connected to the device, but there is still more work to do to read/write. * First, you have to define where to write and were/how to read. Call peripheral.discoverServices(nil) CentralManagerDelegate will call into didDiscoverService for each service that it finds on the device. * In that delegate method call peripheral.discoverCharacteristics(nil, for: service) Which will cause didDiscoverCharacteristicsFor(...) to be called. Iterate through the characteristics comparing UUIDs for Tx. The Tx Characteristic is where you will write data to, so store a reference. You will want to look for Rx in the same location. * Now that you have discovered the Tx and Rx characteristics, you will want to register for notifications on the Rx characteristic so that you will be alerted when the device sends new data. Register by calling peripheral.setNotifyValue(false, for: rxCharacteristic) There is a delegate method which is called for this change. This is optional, but probably a good idea to verify. You can also query the characteristic. Note: Notifications depends on the BLE device's firmware. If it supports Notifications, I recommend using them. The alternative is to poll the device. I'm positive that the 32u4 does by default. Setup is now complete * Now you should be good to go. Write a value to the Tx characteristic like so: peripheral.writeValue(data, for: Tx, type: .withoutResponse) Notice that it takes a Data argument. * Assuming your BLE device is set up to echo commands, you should receive a callback on the Rx characteristic now. The payload comes as Data, so you'll need to decode it to the appropriate type. Now, the (little bit) shorter way * When you scan for peripherals, you can pass the serviceUUID of your BLE device. let serviceUUID = CBUUID(string: ...) scanForPeripherals([serviceUUID], options: []) CentralManagerDelegate will filter out all other devices. I advise passing nil when you are getting started with CoreBluetooth. You will see all sorts of BLE devices. Put a break point there and inspect them to see how they are configured. * Similar to the step above, you can pass a UUID when discovering services. let battery = CBUUID(string: Battery) peripheral.discoverServices(services) Again, I advise passing nil at first to inspect and learn. I am sure that 32u4 must come with a sample program. Good luck! 
I think those are both classes (UIColor certainly is) so you should be careful storing them in a struct – you’ll pay the performance cost of ARC because your struct will be copied and the copies will require doing ARC for the UIColor.
Hey it would be cool to add a quick description for the people on mobile. But from a quick glance this looks cool if it works properly. 
I have both this book in paperback and the AppCoda ebook "Beginning iOS 10 Programming with Swift". I learned more from the Appcoda book AND they update their PDF books to keep current with the latest versions of Xcode and Swift. BUT having said that, keep in mind that a lot depends on your learning style! Appcoda is more geared to the learn by working through the example style of learning, IMHO...
So you said you learned more, but did you actually apply it, or just learn it? Does nerd ranch or appcoda give you project examples to work on after each lesson?
How would this differ from something like KingFisher?
For me 5% of downloaders pay for the feature. 
Just user a timer with 10 seconds delay and stop capture in the callback function. 
Big Nerd Ranch has two books: "Swift" and "iOS Programming." The former teaches you the fundamentals of Swift while the latter uses Swift to teach you more complex iOS development. If you know the basics of Swift, you can jump into the iOS Programming book; it's not for "advanced" programmers or anything. Source: I have both. Worked through the Swift book and am about 3/4 of the way through the iOS Programming book. 
How recent is recent? I had a Yosemite build but since upgrading to 1070 I had to stop using the hackintosh. Is there an update for Yosemite, or is it only for Sierra/High Sierra ?
Buy a second hand Mac Mini 2012 edition and upgrade RAM/SSD (if required). That's how I started. Though if you are serious you might be better off buying a second hand MBP.
KingFisher is more for images, while this one is more general use, it can take any object that subscribes to the Cacheable protocol, and any key that subscribes to CacheableKey.
Yeah only when you use it wrong
My bad, I fixed it now.
I'm halfway through App Development with Swift, what did you think of the book as a whole? PM me, I have some suggestions! 
Seems like a good idea. My only worry for the mini is that apple usually cuts its product updates after 7 years so that I would be unable to update the mini in a year or two. As for the MBP, any recommendations for what year and model?
The mini was a good way to dip my toes into MacOS without splashing too much cash. However, after a year or so of coding and learning I decided I could commit into getting a MBP. I got the 2015 MBP with 512GB SSD and 8GB RAM, for &lt; £1,000. Works like a treat. That was the oldest model I was happy to settle with, and was at a good price range. 
I’ve used Nerd Ranch and it does have project examples, but tbh they’re pretty bland and not as practical as the ones in AppCoda. I looked into the appcoda book and it looks a lot more in depth.
You can start playing with Swift from any operating system with the IBM Swift Sandbox.
Is the location not already IN the metadata? It should be there by default if I'm not mistaken. 
The accelerator has great sessions by Apple engineers on latest technologies introduced by Apple and hands on labs in new technologies. The requirement to attend is you must have an Apple developer account.
life saver
[removed]
This is the EXIF I'm being returned { DPIHeight = 72; DPIWidth = 72; Orientation = 6; "{Exif}" = { ApertureValue = "2.27500704749987"; BrightnessValue = "4.216709248523421"; ColorSpace = 1; DateTimeDigitized = "2017:07:23 3:16:38 pm"; DateTimeOriginal = "2017:07:23 3:16:38 pm"; ExposureBiasValue = 0; ExposureMode = 0; ExposureProgram = 2; ExposureTime = "0.0303030303030303"; FNumber = "2.2"; Flash = 24; FocalLenIn35mmFilm = 29; FocalLength = "4.15"; ISOSpeedRatings = ( 32 ); LensMake = Apple; LensModel = "iPhone 6 back camera 4.15mm f/2.2"; LensSpecification = ( "4.15", "4.15", "2.2", "2.2" ); MeteringMode = 5; PixelXDimension = 3264; PixelYDimension = 2448; SceneType = 1; SensingMethod = 2; ShutterSpeedValue = "5.060000179460458"; SubjectArea = ( 1631, 1223, 1795, 1077 ); SubsecTimeDigitized = 278; SubsecTimeOriginal = 278; WhiteBalance = 0; }; "{MakerApple}" = { 1 = 5; 14 = 0; 2 = &lt;5a005e00 74009a00 c100a000 cc00e701 f7002a00 b4007702 da021b03 5b039703 64003c00 40008600 9d006800 6600b102 b800fd01 64015500 2a002f00 39005c00 69009100 41006900 9f006000 4600f802 7a019001 b5003200 23002700 2d004000 5a002700 40005400 b5011203 1a035603 35036d01 5b003800 3d002900 26002a00 7e009000 86003a00 7e027e03 60030502 a301e900 67004c00 99002500 25002800 77005800 2c002600 97000801 3f011f01 9301b700 af003600 b2002600 26002a00 58004200 1e001e00 16001800 2100e400 09022802 fa013a00 d0002400 27002d00 5b004d00 24002100 1f001900 5500d000 d5001502 3c022700 f5002400 28003000 59004a00 0e000e00 0e000f00 47009f00 6500c301 17022f00 f6002400 27002e00 4c003e00 0a000b00 0d000e00 22008100 4a00a301 ec013000 61002400 27002d00 48004800 0f001100 0e000d00 18006d00 4800cb01 a1012d00 1e001e00 27002d00 40004400 0e001000 10000e00 2b003300 c5007b01 a8002400 17000f00 20002a00 39003c00 19001900 16001700 23001e00 5d01ec00 2d002400 13000d00 11002900 39003800 3a003700 33003000 18001a00 3001b601 9d002300 11000d00 0d001400 3b003f00 30002200 35004e00 4d005800 7200ea01 29011d00 10000e00 0e000e00 51005900 4d004d00 64004b00 50004e00 3e009900 4b001700 11001100 14001400&gt;; 20 = 4; 3 = { epoch = 0; flags = 1; timescale = 1000000000; value = 117272798981583; }; 4 = 1; 5 = 128; 6 = 139; 7 = 1; 8 = ( "0.05730847641825676", "-0.9581149816513062", "-0.2685952186584473" ); 9 = 275; }; "{TIFF}" = { DateTime = "2017:07:23 3:16:38 pm"; Make = Apple; Model = "iPhone 6"; ResolutionUnit = 2; Software = "10.3.2"; XResolution = 72; YResolution = 72; }; } 
Well English is not my first language So I'm not fluent in the English And for trust issues i have not posted some fishy link out there in the internet It's Apple's own site so you could either trust it or not it's your call
He used in instead of with. I’d wager English isn’t his/her first language. Might want to investigate some sort of anti-anxiety medication because you seemed to get really worked up over it. Also a link to something isn’t really “advice” and can be judged on its own merits without needing an appeal to authority of the sharer. 
[removed]
Got it. Thanks!
He said English isn't his first language. Also, you write like a 14 year old. You're the perfect candidate for /r/iamverysmart/
Interesting. Looks like apple stripped the location data. I bet there's a way to get it though. If you inspect any photo taken on an iPhone you can see location. 
What are you trying to accomplish? What problem are you trying to solve?
Yeah I've double checked on the photo library and it is saving with metadata and can be displayed there. Just not to sure where it's living. 
Start by reading the sidebar/wiki, [then look here](https://www.reddit.com/r/swift/search?q=Learn+resources&amp;sort=relevance&amp;restrict_sr=on&amp;t=all).
doesn't work in US [edit](https://m.imgur.com/a/zlAKK) 
I am recording video. So right now the video starts recording when the finger is pressed to the screen. And the recording ends when the finger is lifted from the screen. What i need help with is making the long press gesture end after 30 seconds while the finger is still pressed to the screen. Thanks
The title says it is in Bengaluru and so does the page linked.
the title is not clear that this is exclusive to India. it just says Bengaluru
It is a physical location for guidance regarding apps. Of course, anyone is welcome.
Create your gesture in an accessible scope in your class. Create a timer that fires after 30s, calling a selector that runs the following: ( longPressRecognizer.isEnabled = false ; longPressRecognizer.isEnabled = true ). Be sure to call timer.invalidate() one way or another. 
no, only Indian app developers. [I tried.](https://m.imgur.com/a/zlAKK) 
Then I guess it is only a matter of creating a new developer account. ;) 
ok fair enough, but not everyone wants to do that. it would be nice to have some information indicating [Indian Devs Only] or something in the title to not mislead other people in this sub
I will give you that. (I wasn't aware that it was limited to Indian devs only).
Working on programming problems (Project Euler) to learn basic syntax and control flow. Haven’t quite figured out the right way to structure this project since it isn’t an app but just a collection of scripts.
Oh I see. Yeah no it just is whatever is on your screen
i understand. I'm just trying to help people not click through and get frustrated like i did. that's all 🤷🏼‍♂️
Sure! :) 
From what I can gather, you can capture CLLocation when you take a photo and use it separately. No need to parse metadata. Sorry I'm not as helpful as I'd like to be. I'm looking for a solution to this as well for my own use. 
https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Compatibility.html#//apple_ref/doc/uid/TP40014097-CH45-ID561 says, 'This book describes Swift 4.0, which is the default version of Swift included in Xcode 9. You can use Xcode 9 to build targets that are written in either Swift 4 or Swift 3.' 
Nice idea! But I think it's completely unusable for now because of broken error handling.
is there any way you could give me some sample code? this isn't working. it says that the gester recognizer has no member ".isEnabled"
1) calculate your seconds: minutes * 60 + seconds 2) let your timer substract one from seconds 3) calculate seconds: seconds % 60 and minutes: seconds / 60 4) update the UI with minutes and seconds calculated 
Well done, the API is clean
The **Documentation** section calls the framework "Dance" instead of "Disk".
class myController:UIViewController { var timer:Timer! = nil var lpr:UILongPressGestureRecognizer! = nil override func viewDidLoad() { super.viewDidLoad() lpr = UILongPressGestureRecognizer() lpr.minimumPressDuration = 0.5 lpr.numberOfTouchesRequired = 1 // any other gesture setup lpr.addTarget(self, action: #selector(doTouchActions)) self.view.addGestureRecognizer(lpr) } func createTimer() { if timer == nil { timer = Timer.scheduledTimer(timeInterval: 30, target: self, selector: #selector(cancelTrouchFromTimer), userInfo: nil, repeats: false) } } func cancelTimer() { if timer != nil { timer.invalidate() timer = nil } } func cancelTrouchFromTimer() { lpr.isEnabled = false //do all the things cancelTimer() lpr.isEnabled = true } func doTouchActions(_ sender: UILongPressGestureRecognizer) { if sender.state == .began { createTimer() } if sender.state == .ended {// same for other states .failed .cancelled { cancelTimer() } } // cancel timer for all cases where the view could go away, like in deInit etc deinit { cancelTimer() } }
I whipped this up in a playground no clue if it runs 100%, but hopefully it gets the idea across. Some things to keep in mind: Timers are not guaranteed to fire off at their exact time (though they are usually really close unless something is going on that prevents it). They run on another thread, and there are other kinds of timers that you can manually tell which to run on. Also, theres lots of things you are not supposed to update in timers, though documentation will tell you.
If seconds &lt;= -1 And also don't forget to reupdate the label in there when you change seconds to 59
https://www.reddit.com/r/swift/comments/6o57w8/ppap0_start_from_scratch_code_a_swiftios_app_with/ :-)
I updated the post and we're going to try and start tomorrow -- check it out: https://www.reddit.com/r/swift/comments/6o57w8/ppap0_start_from_scratch_code_a_swiftios_app_with/
Check out the updated post: https://www.reddit.com/r/swift/comments/6o57w8/ppap0_start_from_scratch_code_a_swiftios_app_with/ I'm sure everyone would love some help once we get started!
We can help each other? I don't have a good answer, let's just try and see what happens! https://www.reddit.com/r/swift/comments/6o57w8/ppap0_start_from_scratch_code_a_swiftios_app_with/
I got this from the included links, I use it in my app. Switch to using a TimeInterval (well you don't have to, but it could make things easier), and you can inline, or use this extension, to get a string in any hh:mm:ss.ss you want. https://developer.apple.com/documentation/foundation/timeinterval but basically if you wanted to countdown from 3 hours you would start your timeinterval at 3 * 60 * 60 = 10,800 (in seconds). Then you set your label.text = mytimeinterval.hourMinuteSecondMS and you get a nicely formatted string. //https://stackoverflow.com/questions/30771820/swift-convert-milliseconds-into-minutes-seconds-and-milliseconds //https://stackoverflow.com/questions/40495301/what-does-is-unavailable-use-truncatingremainder-instead-mean extension TimeInterval { var minuteSecondMS: String { return String(format:"%02d:%02d.%02d", minute, second, millisecond) } var hourMinuteSecondMS: String { return String(format:"%20d:%02d:%02d.%02d",hour, minute, second, millisecond) } var minute: Int { return Int((self/60.0).truncatingRemainder(dividingBy: 60)) } var second: Int { return Int(self.truncatingRemainder(dividingBy: 60)) } var millisecond: Int { return Int((self*100).truncatingRemainder(dividingBy: 100)) } var hour: Int { return Int(self / 3600) } }
Great to see great work being done in Server side Swift. 
I actually planned on making all of Disk’s function throw, so then you would have to use do, catch, try blocks or try!/try? wherever you used Disk. The goal of the framework is simplicity and ease of use for the developer, so I opted to throw fatalErrors instead. Do you think I should go back to the do catch try implementation?
Thank you!
Fixed, thank you
Because who doesn't like a freshly opened kitten?
Looks like a great project. Just have a tiny critique that might result in cleaner use. Right now the type of the completion closure you have for `load(from:key:completion)` is `(Element?, Bool, Error?)` However there are no cases where you would have an element and also an error, or no element and also no error, correct? Also the Bool is useless if you have an error. It might be a good idea instead then, to switch to an enum. That way you could switch on the result, and then there would be only two possibilities, an element a bool, or an error.
Thanks for posting this announcement. Very exciting news, and looking forward to seeing what kind of APIs you come out with. Do you have a link to the benchmarks you reference?
I will be messaging you on [**2017-07-25 05:44:49 UTC**](http://www.wolframalpha.com/input/?i=2017-07-25 05:44:49 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/swift/comments/6p5qw7/what_are_the_pros_and_cons_on_becoming_a_swift/dkmzbab) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/swift/comments/6p5qw7/what_are_the_pros_and_cons_on_becoming_a_swift/dkmzbab]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dkmzbep) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
I'll upload the link here in 2-3 hours. I do have benchmarks on my laptop
As a side note the problem is it in the lack of existing controls to do this, it's that what you want is bad user centric design. 
Running the following command: wrk -d 5 -t 4 -c 400 http://localhost:8080/path All without middleware or other fancy add-ons. Just plain routing and HTTP parsing/serializing. **Vapor on debug mode in release environment** Thread Stats Avg Stdev Max +/- Stdev Latency 6.36ms 14.06ms 302.91ms 97.15% Req/Sec 9.76k 3.57k 31.87k 81.96% 195128 requests in 5.07s, 15.82MB read Requests/sec: 38452.81 Transfer/sec: 3.12MB **Vapor on release mode in a release environment** Thread Stats Avg Stdev Max +/- Stdev Latency 3.34ms 1.16ms 46.22ms 93.16% Req/Sec 17.73k 1.62k 24.31k 78.00% 353721 requests in 5.02s, 28.68MB read Requests/sec: 70457.97 Transfer/sec: 5.71MB **Leopard debug mode (no different environments):** 4 threads and 400 connections Thread Stats Avg Stdev Max +/- Stdev Latency 4.14ms 440.69us 34.08ms 91.91% Req/Sec 14.92k 1.12k 16.51k 75.00% 302807 requests in 5.10s, 23.97MB read Requests/sec: 59336.25 Transfer/sec: 4.70MB **Leopard release mode** Thread Stats Avg Stdev Max +/- Stdev Latency 2.01ms 304.31us 10.59ms 77.92% Req/Sec 30.43k 3.02k 37.29k 66.67% 617733 requests in 5.10s, 48.90MB read Requests/sec: 121041.50 Transfer/sec: 9.58MB The source: https://drive.google.com/open?id=0BzMJ8IcRvifSbXJvU3R6RkNDN2M EDIT: Updated statistics
Java is a pretty terrible language. The jury is still out on Swift but it's looking good. That's about it. Switching languages if you need to for a job is fairly trivial. 
That sounds even worse quite frankly. 
Wonder why transferred data is bigger from Vapor even though request number is much lower ?
Now that you say that, Vapor sends 2 extra headers by default I believe. I never had a good look at that. Let me benchmark with Vapor's headers and update it :) I've updated them
Ah I see, at least that's a fresh path to explore. Thanks I'll check it out tonight and will report back if I have any luck.
Swift is just an amazing language, I can see it top every chart. Memory usage is good, it generates fast and optimised instructions, provides high level and low level APIs, can be optimised heavily and has a syntax that makes programming a tonne of fun! I/we are so lucky to be able to influence a language and it's ecosystem like this so early on.
I just revamped Disk and it now handles errors quite nicely. Any common FileManager fatal errors are taken care of by Disk automatically. The only time Disk ever makes an error known to the developer is if there's a big problem on the developer's end of managing their persistence structure. So for example, if the developer tries writing a struct to disk with the same name/location as another object he previously created there, then Disk prints: `❗️💾 Disk: File with name "message" already exists in Documents Directory. Removing and replacing with contents of new data...` And takes care of the error itself that way. If you could check out the "Debugging" section of the README, please let me know what you think. Disk takes care of almost any error that could happen. Thanks for the feedback, please let me know if you think I can improve it any further.
In addition to this, if you use the asynchronous API things get even better when interacting with databases. Currently MongoKitten is getting support for the asynchronous API, of course. And asynchronous calls have proven to be 3-6x faster than the synchronous API in simple situations. Complex operations such as bulk-email or other bulk/heavy operations are especially going to make on impact on async. The entire webserver is async by design, and synchronous routes can co-exist with async routes. This makes development simple when the requirements are simple, and slightly less simple when complex operations become part of the codebase, without influencing the rest of the codebase. I've written an async library based on swift principles like `map`.
if its IOS focused it will be completely centered around xcode no?
snapchat has the same feature. all i'm trying to do is replicate that. 
That’s not a bad idea
Thanks!
Yes, that's a great solution. One suggestion would be to change the name of your array of colors from `lastColour` to `colours`. When you use the name `lastColour`, you are implying that object is a "color" but it's actually an array of colors. If you were to use the `!` instead, your code would look like this: print("\(shapesAndColours["Colours"]!.last)") Force unwrapping is generally considered a bad idea because it can lead to app crashes if the unwrapped value is nil.
Thanks for the advice, greatly appreciated!
If you want to see the implementation in full, here is a link to the open source code on GitHub: [JSONEncoder.swift](https://github.com/apple/swift/blob/master/stdlib/public/SDK/Foundation/JSONEncoder.swift)
 [apple/swift](https://github.com/apple/swift) &gt; *Description*: The Swift Programming Language &gt; *Stars*: 39553 &gt; *Forks*: 5987 &gt; [Issues](https://github.com/apple/swift/issues) | [Pull Requests](https://github.com/apple/swift/pulls) *** ^(This is Earth radio, and now here's human music ♫) ^[Source](https://github.com/anaskhan96/github-stats-bot) ^| ^[PMme](https://np.reddit.com/message/compose?to=github-stats-bot)
Hacking with Swift is my personal favorite. I like it because it teaches you what you need to know as you're working along the projects vs hitting you with every feature and nuance of the language right off the bat. For me it felt easier to retain vs other books. You can buy it or read it free online. 
You can technically code in something else (Xamarin) but you need a mac to compile the binaries, and submit them to apple. If you get an older mac, make sure to get something thats at least like 2 generations out from the last set of computers that is no longer compatible with the latest osx release. In general, a macMini is the best bang for your buck unless you find a really good deal. 
Aside form programming fundamentals, the real gain is familiarity with the api's. 
Your artwork isn't the type you are force unwrapping it as. On mobile so coding isn't an option. You should combine your if let's and say if thisArtWork =artwork as? Your type , let ... } else { handle it not being your type here}
What's the crash?
I can’t tell. I just have the stack trace. 
Thanks, I’ll try that out.
Works for me: class ViewController: NSViewController { @IBOutlet weak var table: NSTableView! override func viewDidLoad() { super.viewDidLoad() table.allowsColumnResizing = false; table.allowsColumnReordering = false; } and of course, you can do it with the checkboxes in the storyboard editor. 
A clean way to achieve this would probably be something along those lines : if let colours = shapesAndColours["Colours"] as? [String], let lastColour = colours.last { print("The last colour is \(lastColour)") } Just to clarify these bits : if let colours = shapesAndColours["Colours"] as? [String] This checks that the "Colours" key of the shapesAndColours dictionary has a value, and that this value is an array of String. let lastColour = colours.last This checks that the newly bound "colours" array does indeed contain a last element ; "last" and "first" properties of Arrays are optional because the Array could very well be empty. As said in an earlier comment, force unwrapping is considered a bad practice. Please avoid using it when you can ; there are some cases where you should use it, typically when declaring your IBOutlets variables, but you'll get to it !
I don't quite understand what you're saying; is it that my Xcode (8.3.3) version isn't compatible with the Guided Tour? In which case, why would they release a guided tour with an Xcode beta version? Is there a compatible tour for the App store version?
Honestly Swift has allowed me to understand all the APIs in iOS dev so much more than I ever could with objective-c. 
That doesn't "take care of the error". That hides the error and causes severe data loss. 
I would recommend AppCoda and iOS Apprentice over BNR
If you are new to programming and still in school learn as many languages as possible. Languages are tools and they all have their pros and cons but you will never be turned down for a job for knowing too many languages. 
yes, you've got it exactly: version 9, which the playground requires, is 'later and greater' than 8.3.3. Of course, it is the version of Swift (v4 is in Xcode 9 and v3 in Xcode 8) which is equally or perhaps more important. As to why Apple would do it this way, unfortunately, as with so many questions, only Apple could say. My _guess_ would be that they want to generate excitement for version 4 (much like we see one minute clips for films, months before the film is released, showing all the thrills, chills and spills that one can look forward to when the film is released). You could always download Xcode 9 (I think it is at beta 3-ish now), and run the playground in that. You can have both v9 and your current version on your computer at the same time. I don't know if there is a previous guided tour available.
Definitely start building your own project. Tutorials are helpful but only get you so far. 
How would you describe your personal experience in building your first app? 
Lots of frustration, lots of stack overflow, lots of learning. Fun, but difficult. 
Cool - did you start off with any books or go to resources besides stack overflow? What are you working on nowadays?
But AppCoda is like $150 no? BNR is only $30 on amazon
Thanks for the awesome reply; very helpful!
Read Apple's swift book twice, Stanford iOS courses, ray wenderlich tutorials mainly. Upon finishing Apple's book the second time is when I realized reading books wasn't as efficient as actually coding. Personal project now is a color app to help developers... the ones on the App Store don't do quite what I want them to 
Build your own project for sure. No amount of tutorials can match the learning you get from building your first application. Make a simple idea (who cares if its not unique), block out the pieces you need to do, and start building those components. 
:D
Could you be less specific?
Swift is cross platform, but if you want to do any UI development you'll need to sign up for [SCADE](http://www.scade.io) frameworks. If you want to use Cocoa, you will need a Mac.
oops, So i wrote a program to which returns the power ((pow(y, n) - pow((1-y), n)))/(sqrt(5)) so when i input huge values like 8181, the number which should be returned is 2 * 101709. But thw swift compiler just prints inf Now is there any particular data type or method which I can use to get the exact value instead of inf ? 
Well if the number is too large to fit double then take the logarithm of this whole expression and print out the solution that way.
if let artwork = metadataA?["artwork"] as? MPMediaItemArtwork {} see if it goes in the if statement. Let me know what you find out. 
So, although I don't like Java personally, I don't see a problem with using it. The key thing to consider is what you enjoy. I myself spent a few years doing web development work and I absolutely hate it, I can do it without a problem, and for the most part from other developers that look at my web code its pretty good. But for some reason I just didn't like it. For me I love the Swift language because it reminds me of Python. I would say that the pro's for me are: 1) Xcode is self contained and if you include a library it is painless using cocapods or workspaces. 2) Swift is a type safe language and it is easy to read, understand, and code in. 3) Swift can be applied to Server work (This is still a new concept and a bit difficult to ramp up on depending on where you work as most companies will have their own framework or be using one of the big ones.) 4) layout is relatively simple compared to my limited experience with Android layouts. 5) Once you get experience finding a job or working remote is easy. Cons: 1) Finding a jr/first job is hard, like really hard. I spent months finding my first position last year, and after about 50 interviews it can become draining. 2) Leaving iOS, macOS and Swift Server you really have no other practiced skillset. So, if you decide in a few years you want to get a job doing something else you are very limited on prospects. (Your degree will help, and your determination to where you want to go/do but that is true to all development fields.) 3) location, location, location.... Trying to find an iOS job in some states, countries, regions is impossible. For example the majority of the US is a no go for iOS jobs. They either hire contracting companies, use some hybrid development platform, or just pay freelancers. I have moved across the US 2 times now to land a good job in iOS. ( I have been doing it for 4 years now) So if you don't mind moving or living in the valley then you are golden and this doesn't apply to you. I hope this helps, and it is based off of my last couple of years experience.
Yeah that's what I'm using as you suggested. Since I could never reproduce it, I'm just pushing it out to some users to see what happens. 
I've found in most cases, developers intend to overwrite data to a file location when they try writing to it again. Do you think it might be better if the dev first has to check if there's data at the location, and if there is remove it, then write to it?
 dude can you also just have basic documentation like Kitura to get started because I would assume right now, having documentation at Vapor level you won't have time. At least from Kitura level we can contribute to the docs as we to use the framework. 
I have my app idea picked out, have a general idea of who my users will be, and believe that I can make something they may be interested in. How are you all doing?!
log(a*b) = log(a) + log(b). So you can do all of your work with logs and then you can add smallish numbers instead of multiplying large numbers.
I am actually finding out Fibonacci series numbers and i wanted to find out a very huge term of the Fibonacci series, so i cannot apply logarithm.
This is awesome. We are using KIF and our UI tests take nearly 25 minutes to run. I'm hoping this can cut our times down. Cheers
&gt; I am actually finding out Fibonacci series numbers and i wanted to find out a very huge term of the Fibonacci series, so i cannot apply logarithm. 
Then use a BigInt library.
Apple provides all the frameworks to build this, IIRC Photos gives you access to the images / videos then a uicollectionview to present them, use the basic AVPlayerViewController for showing videos 
Maybe start rebuilding tutorial projects your own way, without having the reference always in front of you, but accessible as orientation if you get stuck. Basically using and applying the tools you already have in your toolbox.
Do you only do UI tests or also unit tests? If you do unit tests are you using just what comes default with Xcode or do you use another framework like Quick+Nimble?
Hello :) I've uploaded the docs already, should've mentioned that in the main post: http://openkitten.org/beta/site/index.html I don't think Vapor has very well worked out docs, to be honest. It's specifically their weak point as far as I'm concerned. It's their community in slack that's active in getting people started.
Reading and writing should throw errors. There's not only *mistakes* as you say but also real problems like disk full or data corruption that a serious application will have to handle and present to its user. This one will then understand why the app doesn't work as expected and what to do to fix it. Error handling is like car insurance you always hope you won't need them and barely be sure you won't but when the need arise you're happy having *wasted* some resources on it. Better safe than sorry.
Damn, only seeing this now, I would definitely like to see your progress and maybe come onboard in the next iteration or a similar project. Currently finaalising my first app and making it ready for submission
Cursory look tells me you are potentially sol with standard libraries. I found this project https://github.com/githotto/osxgmp ( https://stackoverflow.com/questions/25471876/use-huge-numbers-in-apple-swift ) , and I suspect there are others it's just I probably am not using any of the right CS terminology to find them. Best of luck!
Working link: https://blog.hypertrack.com/2017/07/24/creating-binding-swift-frameworks-xamarin/
&gt; but i would need to declare each Dictionary while appending I'm not sure what you mean by this, can you not parse input an array using `JSONSerialization`, e.g. ``` let parsedJSON = try JSONSerialization.jsonObject(with: input) as? [[String: Any]] ```
By this I meant that my original idea was to skip the JSON part, create the dictionaries directly in swift and appending them to my array, but in this case I would need to manually write each Dictionary, and I have 200 of them. By manually I mean something like: let myArray = [sourceDictionary1, sourceDictionary2] And so on. Anyway, I'll take a look into it, this is something new for me so I need to play around with it :) Thanks!
Swift 4 is still in beta right now, but if you're just doing this for learning you might want to look into that as it supports Coding much better now. 
Thanks! Let me know if you have any issues and I'll try and help out
worked, thanks (:
We have ~650 tests in our project. About 75 of those are "KIF UI Tests" and even with animations sped up to 4x they take quite a while to run. We don't use quick and nimble, but we do use Stencil + OHHTTPStubs in our test setup. 🤙🏼
What do you mean by better? Better parsing from JSON or something else?
Easier, the compile can take care of most of the work. https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types
Swift 4 includes a new API for encoding and decoding to various serialization formats, including JSON and plists: [Encoding and Decoding Custom Types](https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types) 
This is a very interesting project you are undertaking. Are you going to be posting updates of your progress? I would be very interested in following this project, and how it moves along. 
When I build apps for work I start by getting the functionality working first. That way if there are any road blocks or changes I didn't invest a lot of time on the UI. My apps are very ugly to begin with. Once the core functionality is working then I move on to UI dress up and UX, animations, etc. Try using what you know and put together the minimum core functionality of your app. Get it functionally working. Have some fun with it and watch tutorials as needed. Building an app while learning is one of the best ways to learn. You have a purpose and what you're learning is relevant!
Did you have a background in programming or did you have any present background knowledge in Swift / OOP / Programming in general when you made your first project? 
use UIPanGestureRecognizer...
I'm not exactly sure what you mean, but the JSONSerialization is how I would do it. Then the parsedJSON property would be your array of dictionaries. 
I have a background in programming (C, C++, Objective-C, various web languages, x86 Assmebler, etc) but Swift was actually kind of hard for me to pick up. It seems easy now looking at it but it's wildly different from most languages I've used before. I used to program in Objective-C for iOS so I was already familiar with the iOS frameworks. Basically what you want to do is start simple. I cannot stress that enough. You'll learn far more creating and polishing a simple app than you will struggling with a more complex app. I'm not sure what kind of project you want to make but starting off with something like a "NASA Photo of the Day Viewer" where you can put in a date and pull back the NASA photo of the day is usually a popular one. If you were to make something like that you'd want to break it into pieces: -Design the UI -Make a component that can use NASA's web APIs to pull back an image (you can start by just pulling back data in general, then move to the image). -Create a picker view that lets you enter a date that you can pass to NASAs web service. -Add an extra feature that lets you save the image to the camera roll. The app may be simple on the surface, but you're touching a wide array of skills while you're creating it. Best of all, it's something small you can finish and learn from. 
Hmm... Alright, I actually did something similar to the NASA project you mentioned. Any other project ideas that touch up on some core concepts in iOS that are worth working on and building up?
This is what I've come up with, but still no movement: func charMove (_ dragRecognize: UIPanGestureRecognizer) { let hero = self.hero let xPos = Float(dragRecognize.location(in: scnView).x) SCNTransaction.begin() hero?.position.x = xPos SCNTransaction.commit() }
have you attached the gesture recognizer to the node? [See this](https://stackoverflow.com/a/31981078/316469) you have to deal with the several states of the pan gesture, begin, changed, ended... Every time you move you have to reset the gesture recognizer because it delivers relative move.
That's one big waterfall.
Should have posted this sooner, but yes I agree with all of your guys' points. For the sake of simplicity I thought printing any errors to the console would be best, but a lot of people seem to dislike that. I'm actively working on an update where every one of Disk's methods throws custom errors and errors from File Manager. 
Excellent! Not only do the benchmarks look great but from looking at your docs, your APIs look really good too.
Thank you :) working really hard on it
If there isn’t a setting that just does “hot dog” and “not hot dog” that app is a POS. 
[removed]
Do you have any Accelerator program for 🇨🇦?
Accurate statement. Will be very upset if there isn't some tribute to the show. 
Im not new to programming but I am new to iOS and swift development. So my first app was a hacker news reader ( pretty basic app but it hits on some good iOS dev points ) It's open source if you want to see it. I have a few years programming but just moved to Seattle so I'm currently looking. [iOS hacker news](https://github.com/nexes/hackernewsiOS) 
I was a student on my second year doing computer science courses. I was going to planet fitness at the time and I don't carry any keys so I hated having to carry the little check in tag to get in. So I made an app that just generates a barcode from your tag so you can check in from your phone. I know they have their own but it's glitchy and takes a while to launch. 
There’s already a hotdog not hotdog app
lmao! nice work
Set `animationSpeed = 100` for max speed animations. There's a good PSPDFKit blog post about speeding up KIF tests.
We do speed up animations, but we keep them just barely low enough so we can see at least some animation for video recordings of KIF tests. 👌🏼just to ensure animations are indeed happening. 
Not in the UK there isn't!
Have you tried just changing the frame of the UINavigationBar in viewDidAppear?
I made it a month ago :) https://github.com/trusk89/VisionCoreMLSample Edit: and it already was published by HBO using tensor flow. This is the next 'Hello World'
Double is bad for this in general, because it can't represent integers exactly when they get very large; you might be off by a few. (And at some point, you end up with `inf`). So you want to use an Integer type, but the built in ones are way too small. I suggest you use a library for that, like https://github.com/lorentey/BigInt?
Yes, I did, it kind of seems like a hack to me, additionally, for some reason it does expand the navigation bar but it moves every element a little towards the top of the viewport, which makes no sense to me, I would assume it totally destroys all the alignments. If I can't figure any other fix out, I will most likely go this route and fix all the elements manually.
Yeah, but ask.fm allows for other users to see your messages and also allows for the message sender to send something without anonymity. 
One option is to check if your laptop is hackintoshable, but for iOS development, something running OSX is basically a must because of the superior experience. 
I'm gonna check everything out, but seems like I found a solution for what I need, I will update the post shortly.
Thanks, I'm gonna check that out, but meanwhile I have found another solution for it. Will update the post shortly :)
Once you are past the complete novice stage (which most beginners courses will get you past), having a personal project is a great motivator and a good way to continue your learning. Start small and don't be afraid of cloning or re-inventing something that already exists. Apps like hacker news / reddit readers are a good start if you don't have any ideas of your own that you like. You should aim to incrementally boost your skills and confidence rather than taking on too much early on and getting lost in the sea of your own ignorance (which can be extremely demoralizing)
I pertained my own model using a food based dataset. It wasn't a simple plug and play and definitely not as trivial as 'Hello World'
I wasn't trying to dismiss what you've made, just pointing out that everyone trying to get into coreML and Vision starts with See Food.
I can give you informations about french market. There's NO iOS dev, companies want somes but there's maybe 5 candidates for 25 companies at the same time, so you find the job you want easily with some of the best salaries for juniors. But you will little by little hates apple and Xcode that is really buggy when working on big project xD
Will check it out, thanks
Will check it out, thanks
When I was in your shoes I spoke to recruitment consultants, on the assumption you want a job. In those days - early 90's - it was all about VB. I learnt c++ at uni and other languages were easy after that. Unless the recruitment people give you a very strong steer I would learn a generic language , Java, c. There used to be a lot of work in csharp. 
self.broadcastViewController! probably isn't initiated Look for the unprotected exclamation marks
Swift 4's biggest changes are in the String API and the Codeable protocol. Other than that and a few other things (for loops have some additional features), they are identical.
I'll check that out too, but I'm pretty sure it has to be for this class to exist. I'll check. 
Now can you estimate the number of calories and macros in the amount of food shown? If so, you've got something you can sell to MyFitnessPal for a pretty penny.
Great! Thanks. I will get stuck in (again - have had about 5 false starts).
Cool! I might just work on my own client to practice then. What key iOS points did it hit for you? How did you break down the project?
My first projects where all kinds of small apps exploring various kinds of iOS. Camera, spritekit, core location, just what I was interested in. I decided to make somewhat more finished apps afterwards (I remember one game, almost finished, never published, a wintersport-snowboard-trakcing app, testflighted one winter with friends, never published). I got an interview somewhere as iOS developer after like 1.5/2 year of experience on my own. Previous experience in the field was programming in c/c++, my programming skills where quite alright however I didnt have any iOS/OS experience. Currently I am iOS developer / general software engineer at that same company.
You might like this https://youtu.be/hfxfx-XXLEo
&gt;[**ARKit: Augmented Reality Food Nutritional Value [0:19]**](http://youtu.be/hfxfx-XXLEo) &gt;&gt;The fourth demo of my ARKit dataviz tool/api, adding some image recognition for displaying nutritional value of food. &gt; [*^napkinmoments*](https://www.youtube.com/channel/UC4IUfEi-3zbFGBgdNlBimRw) ^in ^Science ^&amp; ^Technology &gt;*^6,735 ^views ^since ^Jul ^2017* [^bot ^info](/r/youtubefactsbot/wiki/index)
Imagine a row of boxes from amazon. Some have things in them, some do not. Lets imagine we have a function called barcode(). If you pass barcode the upc symbol on any piece of mech it will give you the amazon URL for it. If you scan the inside of an empty box it will return "BLERk ERROR" We have an array of these amazonBoxes Flatmap opens each box and uses barcode on the thing inside if there is. If there is not, *it doesn't scan" Flatmap works on containers and collections of containers. It alternately could be called "unboxThenReturningResult" Map works on collections. It calls a (side effect free) function on each thing in the collection and returns what the functions results. It could be call "callFunctionOnEach" so when you use it on the line of boxes, you'll get a mix of amazon URLs and BLeRK ERROR. Obviously, the flatmap answer is more useful a *lot of the time* especially when chaining higher order functions. 
Map: Applies a function, which returns a new value, to each element in an array. This results in a new array of your applied function's return type. This can be used with optionals. For instance: let mappedArr : [String?] = arr.map { str in return functionReturningOptionalString(str) } This will return an array of optional values. FlatMap: flatMap actually does a few things. First, it will take a multidimensional array and flatten it into a one dimensional array. Second, it will strip out all nil values if the resulting array type would be optional with a regular map. Instead, the resulting array will now be non-optional. Third, it will apply a function to each element in the most-outer array. For instance, if you have a 2d array, the function will only be applied to each inner array, not the elements inside those inner arrays. Examples: let arr = [[1,2,3],[4,5,6]] let mappedArr = arr.flatMap { $0 } // [1, 2, 3, 4, 5, 6] let optionalArr = [nil, "hello", nil, "world"] let mappedArr = optionalArr.map { $0 } // ["hello", "world"] let arr = [[1,2,3],[4,5,6]] let mappedArr = arr.flatMap { array in array.map { $0 * 2 } } // [2, 4, 6, 8, 10, 12] The major difference between map and flatMap is flatMap's handling of optionals and multidimensional arrays. Regular mapping doesn't care about optionals, it simply applies a given function to each element, and maps the return of each application to a new array. This new array can be of any type, even optionals. flatMap does the same as map, but it also flattens the array to be one-dimensional and filters all nil values. Hope this helps!
When you're confused about something like this, write your own implementation and unit tests that compare them. IE func myMap&lt;U&gt;(_ transform: (T) -&gt; U) -&gt; [U] { var new: [U] = [] for ele in self { new.append(transform(ele)) } return new } func testMyMap&lt;T,U: Comparable&gt;(on array: [T], with transform: (T) -&gt; U) { assert(array.map(transform) == array.myMap(transform)) } And call it a bunch of times. The key, in my opinion, is to not understand the high level abstraction (map &amp; flat map) but the code that does it.
Yes, Swift 4 is closer to Swift 3.3 in other languages that don't follow Apple's one-major-release-per-year versioning model. 
Working on my side project app, Hoodchat - https://hoodchat.io
Just don't start a framework in XCode 8 with Swift 3 and expect enterprise customers to understand why their project fails to compile in Xcode 9.
[removed]
TL;DR: Someone found part of a comment in the runtime source code that suggests it's safe right now, but it's not guaranteed in any doc or spec. Do you want to make your program subject to race conditions, if the compiler team ever happens to change the semantics of some internal function? Just spend an extra line and capture it properly.
Well, the rh access happens before the lh access, so "no here" for sure It is easier to reason about the code if you instead guard if let x = self and then use that non optional value
This certainly looks more complex than it needs to be. Is the 2nd line doing anything at all?
I'm not sure. I'm checking to make sure it contains a valid object, although I guess dictionnaires do contain those by default right? Like in Objective-C?
I hit a problem recently by (trying) to keep my project set to Swift 3 and using Xcode 8 &amp; 9 interchangeably. I created a view transition protocol for my UIViewControllers to get the views to animate (same views on different view controllers, perfect!) Wrong. I was doing this as such, `guard let fromVC = transitionContext.viewController(forKey: .from) as? UIViewController &amp; MyTransitionViews else {return}` Unavailable in Xcode 8! Appears to be a part of Swift “3.2” which is in quotes because it’s a ‘step’ between Swift 3.1 and Swift 4 that Xcode 9 uses. So there are other unnoticed so far differences, be careful! I wish I was ಠ_ಠ 
Perhaps change your `loadNib()` function to use generics. I did a similar loader using generics, [see impl here](https://github.com/neoneye/SwiftyFORM/blob/develop/Source/Form/Bundle%2BLoadView.swift) Usage: let cell: ContactPickerCell = try Bundle.main.form_loadView("ContactPickerCell")
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [neoneye/SwiftyFORM/.../**Bundle%2BLoadView.swift** (develop → 5741fa4)](https://github.com/neoneye/SwiftyFORM/blob/5741fa459e41eb493937e3c1cd56c8c5f862a700/Source/Form/Bundle%2BLoadView.swift) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkr4bt6.)^.
Try thinking about it without arrays/optionals/etc and maybe that'll help you see the pattern map: Box(A) + function A-&gt;B = Box(B) flatMap: Box(A) + function A-&gt;Basket(B) = Box(B) Note that Box and Basket can be any container type(array, optional, set, whatever), possibly even the same type(depending on usage). Literally the only difference between map and flatMap is is that flatMap's transformation function returns a B in a Basket, and flatMap discards the basket before putting the B in the box. Some examples: [[1], [2],[3]].flatMap {$0} // result: [1,2,3] // Box is array, // A is [Int], // Basket is Array // B is Int // function is [Int] -&gt; [Int] flatMap applies the function to the first element of Box which is [1]. The function just returns [1]. Then it discards Basket(the array) leaving just 1. Then it puts that into the box(the outer array). Repeat for each element in Box Now optionals [1,nil,3,nil,5].flatMap{ $0 } // result: [1,3,5] // Box is array, // A is Int?, // Basket is Optional // B is Int // function is Int? -&gt; Int? for each element(Int?) flatMap applies the function(which just returns its Int? input) and discards the Basket(optional) yielding Int. Then flatMap puts that Int into the array. Of course when Basket(B) is Optional(nil) there is no Int in the basket so it does nothing.
Codility is nice for job interview algorithms
I am going to be completely honest. I'm assuming you looked up tutorial apps and followed along and eventually made a few changes and made the apps into your own? I only say this because you said you've built 6 apps. That is a lot of experience you should of gained from knowing fundamentals stuff, especially OOP and delegates. Those type of ways of executing an app would not get you far. The best way to learn fundamentals is really is by building you're own projects from scratch, and you WILL learn from you're mistakes and WHY they work.
A lot of the udemy courses that I've purchased that focus on swift 3 are updating their courses to swift 4. They also offer fairly cheap coupons if you buy the new course ($10 - $25 for the swift 4 course). That being said, my best advice is START! I've started about 5-6 of these courses, but have yet to finish any of them. I get too distracted.
Nop, all were done from scratch, obviously after learning from tutorial apps or courses I've taken. I use polymorphism, delegates, inheritance, OOP all over my app, but simply because I know how or was taught how or thats how it works, I understand at a very basic level what each of these things do, but I can't give a straight answer on the meaning of each of these in themselves.
Awesome! I'm interested to see what you did!
Apple's own book on Swift is great. It does not touch iOS at all, just the language. Go with Swift 3 for now. There are no major source-breaking changes in Swift 4, so you won't have to re-learn much As for the server side Swift, try Vapor. I've just started using it. So far so good.
I would recommend looking at Kotlin. It is very similar to Swift but a bit more mature. It is also interoperable with Java which gives you access to a lot of good backend libs. When you know Kotlin it is really easy to change to Swift.
Map does not discard any outputs. Flat map discards nil values. Flat map can operate either on an array of optionals or on an array of non-optionals with a function returning an optional.
Swift 4 is actually better IMO. It fixes a lot of the small oddities in Swift 3. Not only is it the future (soon to be the present) but it’s much more enjoyable to work in.
You should be able to at least give them an example of how they work by the apps you've made. Don't have to get caught up with the actual definition term of them because yes, they would be annoying to memorize of what the exact meaning of the words. However almost all the interviews I have ever done, having to show them examples of how they work should be good enough. 
Seconding what mystical_bicycle said. If you don't intend to ever use Swift for iOS or macOS I'm not really sure why you would learn Swift. The selling point on SSS is that iOS and macOS devs can write server-side code without learning a new language. Kotlin is probably a better choice. Or even just learn plain old Java. From the research I've done into using SSS it's still got a ways to go before it's ready for large production projects.
Headfirst Java is an excellent book that would teach you the basics of what OOP is, how, and why they work. They are iOS articles out there like Raywenderlich that would teach you the OOP concepts but honestly; I believe this book would teach you in a way you would want to learn them. https://www.amazon.com/gp/aw/d/0596009208/ref=mp_s_a_1_1?ie=UTF8&amp;qid=1501095615&amp;sr=8-1&amp;pi=AC_SX236_SY340_QL65&amp;keywords=head+first+java&amp;dpPl=1&amp;dpID=51Gsycdh-TL&amp;ref=plSrch Also as for Algorithms the best algorithm course I have ever taken was from Coursera, Algorithms part 1. With the headfirst Java book, you should proceed with this course nicely. Cracking the code interview book as well would be great after learning the algorithms/data structures fundamentals. https://www.coursera.org/learn/algorithms-part1 
How does that work? Is it some sort of websites like Facebook that is completely open, or an app through a backend like parse that happens to have a website?
First of all, look into what stack you wanna use. Comparison [here](https://medium.com/@rymcol/benchmarks-for-the-top-server-side-swift-frameworks-vs-node-js-24460cfe0beb). Benchmarks aren't everything, vapor, the worst-performing one, has really nice syntax, and perfect, the fastest, isn't very swifty. &gt; Is it a bad idea It's just gonna be tough to find work that does have you use serverside Swift unless you're a startup or something &gt; Swift 3 or 4 3, 4 and 3 aren't that different, but some public packages might indeed break. &gt; Resources [Apple Language Guide](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID309) is not iOS-oriented and works fine. 
Agree with the comments made here. If you do go with SSS I recommend vapor as well, very well done and the community has been unbelievably kind and helpful on slack
The clients or employers opinion here has to count for something. If you are independent and your clients don't care I'd strongly recommend going to Swift. 1. Bad idea? Any language can be a bad idea if it doesn't fit the tasks at hand or goes out of style in 2 years. From the standpoint fo being around for a long time Swift has already established itself. 2. Swift 4. Why? Well anything you are developing now would likely come on line about the time Swift 4 is considered stable. I look at it this way you have guys that still develop new software in Python 2.x, I can only see that as completely stupid as the language will supplanted by Python 3 and later. I just don't see using old versions of a programming langue in anybodies best interest for new work. You just set yourself up for a lot of maintenance work in the future. 3. Apple computers Swift manual is excellent. It concentrates on the language and not much else. 
&gt; First of all, look into what stack you wanna use. Comparison [here](https://medium.com/@rymcol/benchmarks-for-the-top-server-side-swift-frameworks-vs-node-js-24460cfe0beb) . Benchmarks aren't everything, vapor, the worst-performing one, has really nice syntax, and perfect, the fastest, isn't very swifty. It's worth noting the linked article is from 2016, and Vapor and Perfect have seen a lot of changes since then. Also, Swift itself has gotten a lot faster since then. I don't know of any recent server-side Swift benchmarks.
Honestly I see Kotlin as a bit of a joke. Maybe it is the circles I travel in but it seems like a very niche solution. Contrast this with Swift which has developed as a programming language out side of Apples IOS and Mac products lines. Swift has already grown massively (surprisingly so for a new language) in part due to Apples commitment and in part due to people searching for a programming solution that gives them the advantages of languages like Python in a compiled performance oriented solution In the end you need to evaluate based on what you =know at he moment and what you can project into the future. I just don't see a huge demand for Kotlin down the road, in fact it could easily die out like so many other languages have over the years. Another flash pan language if you will. 
&gt;Seconding what mystical_bicycle said. If you don't intend to ever use Swift for iOS or macOS I'm not really sure why you would learn Swift. The selling point on SSS is that iOS and macOS devs can write server-side code without learning a new language. Actually this isn't true at all. The major selling point with Swift is that it is as easy to program in as Python and other scripting languages but has the potential for high performance via compiled code and new technologies. &gt;Kotlin is probably a better choice. Or even just learn plain old Java. From the research I've done into using SSS it's still got a ways to go before it's ready for large production projects. Frankly this is valid with respect to Kotlin also. In fact until Swift supports language native features that make threaded server side programming easier it won't be a "perfect" language for server side development. That doesn't however mean that it isn't usable now. Further it takes time to learn modern features of any language, the sooner one learns Swift the sooner he will be able to leverage later revisions to the language. 
https://itunes.apple.com/us/course/developing-ios-10-apps-swift/id1198467120 A free Stanford course. The teacher is really good and the course is amazing. Be sure to follow as much of the reading and assignments as you can and you'll be all set. 
Due to Google's recent 1st party acceptance for Kotlin in Android, it won't die out anytime soon.
Spend the time and learn how to convert from objective C code to Swift. It’s really not hard. Basically, [x y] becomes x.y
This thing really loves spring rolls
I'm a 100% Server Side Swift developer, and I couldn't agree less. Swift has many strong selling points for the server.
Any reason you aren't using SFSafariViewController?
Cause I didn’t know it existed ;)
The differentiating factor is the Java interop. No matter how you try to frame it, Kotlin is far superior at the moment simply because of that. I didn't say that Swift is unusable. Just that it makes little sense to learn it *at this time* for the *primary purpose* of using it on the backend.
There's a reason Swift 4 has a Swift 3.2 fallback mode.
CS50 is great 
I just released v0.1.1, now Disk throws in all of its functions, so you can better handle any errors that arise. Thank you for the feedback Pyroh
Had completely forgotten about CS50, thanks for the reminder!! 
Thanks!
Thanks for the input bud, still gonna get my head in the game and study more :D
Will check into it, thanks
Dont forget the cool drag &amp; drop feature! Just dont forget to take time and watch the videos in peace and make notes and try it out before expecting of yourself to know it perfectly and giving up in frustration once you find out its not that simple. The only problem with learning I have is not enough time :)
Go on..?
Awesome! Thanks a million. 
https://www.youtube.com/channel/UC2D6eRvCeMtcF5OGHf1-trw Great video series teaching basics of swift then developing apps
Find a good textbook and use it as an opportunity to learn another language whether it's C/C++, Java, Python, etc Doing it this way will help reinforce what you know in swift by having a better understanding of what the code you've been writing actually represents.
I started with a Udemy Course and now I’m reading Hacking with Swift Online. Apples iBooks are comprehensive and a good place to start as well. 
I've been self-teaching myself Swift for a while now, I do improve but I'm still far away from building a fully functional well designed and complex app. How did you learn iOS development? I mean did you learn everything by yourself or did you attend bootcamps/online courses? 
I personally used Devslopes and every possible source online to learn, but I also had help from Senior iOS developers who I've worked with that have helped me slot in learning, they pretty much just helped and taught me to do more complex stuff, the rest was self taught.
I personally used Devslopes and every possible source online to learn, but I also had help from Senior iOS developers who I've worked with that have helped me slot in learning, they pretty much just helped and taught me to do more complex stuff, the rest was self taught.
Sadly not. It's mind-boggling, frankly: it's the one thing that keeps Swift from being 100% interoperable with everything else. At this point I'd use Objective-C. The alternative would be either to use closures or to manually write down the mangled Swift names, which is gonna be a headache. 
Hi there! I'm currently self-teaching myself Swift too. I think this Youtube channel might help you out a bit https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA this guy is VERY good. He taught me many important things and gave a boost to my programming skills, seriously. I think the most important thing he taught me was to just leave aside the Storyboard and do everything programmatically. That changed my approach to iOS development and allowed me to do many things that I couldn't do before. It also made me understand deeper what I'm doing when I'm coding. JaredDavidson has a nice Youtube channel you might want to check out, he explains stuff quite quickly sometimes and some videos are old but if you can put up with it there are interesting videos on his channel. You probably already use Stack Overflow (https://stackoverflow.com/) but if you don't please use it, I learned so much stuff thank to it! It is probably the best tool for a programmer
ask.fm is a website, but there is an app for it as well. It's kind of a social newtork where you can ask people stuff and you can choose whether you wanna do it anonymously or not. It's full of idiots, frankly. People use it to run their mouths and mind other people's business
Less memory, and ....?
Awesome, thanks for the suggestion! 
Brilliant, thanks! 
That's not true. &gt;[The assignment is part of the optional chaining, which means none of the code on the right hand side of the = operator is evaluated.](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/OptionalChaining.html) Having said that, I wouldn't use it either.
Apart from Harvard [CS50](https://cs50.harvard.edu/), there are also great: MIT [Introduction to Computer Science and Programming](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/index.htm) and [Introduction to Algorithms](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/), and Stanford [Computer Science 101](http://online.stanford.edu/course/computer-science-101-Summer-2014). More online courses you can find [here](http://www.computerscienceonline.org/courses/).
I got a ton of positive feedback about this being a good explanation when I wrote it, so maybe it helps: https://github.com/JaviSoto/Blog-Posts/blob/master/Functor%20and%20Monad%20in%20Swift/FunctorAndMonad.md
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [JaviSoto/Blog-Posts/.../**FunctorAndMonad.md** (master → 767fcbc)](https://github.com/JaviSoto/Blog-Posts/blob/767fcbc9886457d09272a6188846cfc3512969a7/Functor%20and%20Monad%20in%20Swift/FunctorAndMonad.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkru73y.)^.
Check out the [Swift Language Resource Center](https://swiftlang.eu/) and their [YouTube channel](https://www.youtube.com/channel/UCml4lCH0xdl6Jm91RiPPIig) with Stanford University &amp; Udemy Swift language courses and a collection of over 400 Swift video tutorials.
First, SHA256-HMAC isn't encryption, it's a message authentication code, it's used to ensure that a message hasn't been altered and also to have some assurance of who sent it. It (usually) is sent along with the message You'll need a key in addition to the message to compute it, do you have the expected key? To do it, you'll want to use Apple's Common Crypto library. I've not used it before, so I can't give examples, but you can to a bit of searching online for examples (unless someone here has more info). 
I just dealt with this last night! I believe you are looking for dispatch groups! Take a look here: https://www.allaboutswift.com/dev/2016/7/12/gcd-with-swfit3
Okay well when I tried to look it up, it was talking about encryption and stuff. I'm just surprised that when I searched online there was nothing specifically talking about how to do it. But your answer helped and led me to another stackoverflow post that might be the answer. After importing CommonCrypto, there is a function someone wrote that should work. I don't have a chance to try it now but thank you.
Security. Good performance even though it is highly portable. A lot of idiot proofing while still remaining a flexible language. It's close enough to Java that most college grads can pick it up quite easily. Being tied to LLVM and Clang also offer a lot of ridiculously neat tricks.
If you are familiar with syntax already, then just find something interests you and start hacking. Best way to learn any language.
Plural Sight has a good course if you're willing to drop some money down.
In iOS if you click on the share button, there’s an option to “add to home screen”. Should do exactly what you’re trying to achieve without writing an app. 
It's not uncommon to forward a callback to another async func. If you want a solution way bigger than your problem you could look at PromiseKit or RxSwift (or ReactiveSwift).
I would say Swift is more mature than Kotlin. It’s been under development longer and has more features. Kotlin is basically a copy of Swift but for Java interop. Btw, Swift 4 comes out in a couple months and Swift 5 in a year will have full ABI stability. 
Just finished **WebRequest**, my last app of the month: https://github.com/kuyawa/WebRequest Roll is over.
You can accomplish this by writing a two-level wrapper. First, write a wrapper in Swift that is callable from Objective-C. Then, write a wrapper for that in Objective-C that is callable from C. Something like this: // SwiftWrapper.swift @objc class SwiftWrapper { class func wrappedFunc() { // call Swift code } } // ObjCWrapper.m extern “C” Func() { [SwiftWrapper wrappedFunc]; }
This sounds like something good to bring up on the swift-evolution mailing list! I don't see why it couldn't be added—and without too much work, I should think!
Nesting will end in tears. If you can keep it as flat as possible, you'll end up happier. I'd recommend trying something like PromiseKit. It's simple, and solves the one specific problem you have, without burdening you with a mass of other complexities you don't need (ie the various over engineered "reactive" frameworks). 
Exactly. Many people switched to vapor, it has more stars on GH and recently there was an update to Vapor2. 
You're welcome. You made a good piece of software. Keep up the good work ! 
I believe in using the right tool for the job. Swift is the right tool for iOS development. It doesn't shine on the server. There it is strictly convenience. The best tool for the job is likely a combination of things. Consider ruby and rails.
The Mark Price course on Udemy is good, in doing it at the moment. It can be expensive but they have deals quite often where you can get whole 50+ hour course on their site for about £10, so well worth keeping an eye out for the deals.
Apple's* books Apples = more than one Apple. Learn this.
What is idé?
Low memory usage, which is a big pro for cloud hosting. Insane performance when optimised correctly, as I have proven with the OpenKitten libraries. A simple API designed for people. The biggest example is labels. How often have you seen a function in a language with 3 numbers (coordinate X, coordinate Y and the measurement distance) and wondered whether measurement came before the coordinates or after. Swift solves that with labels and tuples. Swift also helps here since it's got official API design guidelines, which really help building good and "swifty" APIs. They're a good influence. Type-safety (looking at you, PHP!). In PHP, one of my biggest worries is variables. I can have trouble finding out how a function is spelled like `strlen` or `mysql_real_escape_string`, two obviously different APIs. But not knowing the type of a variable is the worst, like with JavaScript. It's an uncertainty that, with a bit of bad luck, can have severe implications on security and stability. Swift is designed to not make many mistakes, and help programmers at the same time. Examples are `guard`, named parameters and type-safety. Where type-safety falls short in productivity, protocols, generics and a clever compiler help a lot. The standard library functions as a perfect example of how you can design your code effectively for many use cases. Swift is an enjoyable language to write applications in, the syntax is simple and friendly, readable. In addition to that, it has C interop, which brings many existing and crucial libraries within reach. It's accessible, especially with playgrounds, the huge amount of language oriented resources. Many tutorials for iOS are reusable for the Server to some degree. It's a friendly and enthusiastic community, it's unlikely you'll be put on a stand for everyone to laugh at you like Linus Torvalds and many communities do to some degree. It's got good Linux support, clear goals, and a high amount of dedication from the community as well as Apple. Everyone can leave their opinion and contribute in Server Side Swift. The more macOS/iOS oriented projects like CryptoSwift for one are less accessible to contribute to from my experience. In Server Side Swift, people are open, welcoming and happy with contributions. If you've even been in the Vapor slack, you'll know that the docs are lacking, but the community makes up for it by supporting each other. It's flexible in interesting ways, thanks to protocols. Protocol oriented programming adds a lot for experts without taking away from beginners, as with most parts of the language. Swift has some nasty bugs in the core, but you won't find them until you *really* dive deep. Like creating pointers to variables in the initialiser of a subclass where the property is part of the parent class. These scenarios are not worked out yet but are clearly edge cases.
I've added a comment above
[Swift is fast.](https://www.reddit.com/r/swift/comments/6p4dr5/the_openkitten_ecosystem_is_joining_the_scene/dkn4ig2/?utm_content=permalink&amp;utm_medium=front&amp;utm_source=reddit&amp;utm_name=swift) Even Vapor in these benchmarks is proving to be really reliable for performance.
I agree about that you should use the guard, but you're wrong about rh vs. lh access. Rh is only evaluated if Lh is not nil.
What /u/applishish says is true though, but you have to take a little more more complicated example so that problems can arise. Consider this (couldn't think of a very concrete example): foo?.property = bar().baz(foo!) The problematic case is: `foo` is initially non-nil, with a single reference to it. `bar()` is a function that removes the last reference to `foo`, which will cause `foo` to be deallocated. `baz(...)` just uses `foo` to do whatever. So, what would happen without the "part of a comment in the runtime source code" that was found, i.e. foo is not retained? It would be deallocated after `bar()` is executed, and `foo!` crashes. So, the "always safe" assumption would be wrong. But, because `foo` is indeed retained for the lifetime of the expression, `foo` will not be deallocated after `bar()`, so everything goes well. The point being that the answer to the question in the OP does indeed depend on the Swift compiler's internals, and you should not depend on those working a certain way.
map transforms each element to a new element (potentially of a new type), creating a new collection. flatMap transforms each element to a collection of new elements (potentially with a new types). These collections are then put end-to-end and ‘flattened’ into one collection, hence the name flatMap. Optional is essentially a collection of either 0 or 1 elements. The designers of the language didn't want to go all the way to make Optional conform to the Collection protocol (which would also let you loop over Optionals, for example), so flatMap is actually overloaded to flatten a set of Optional results.
I second Brian’s youtube channel. His lessons were invaluable to my learning iOS. 
The link to [Swift](https://github.com/jstpcs/lnxpcs/blob/becf4b6d6f53f31dfaeb64e3a4c4dd56878c6433/cards/swift-card.png) card in hi-res, all other [cards](https://github.com/jstpcs/lnxpcs/tree/master/cards) and all other [prints](https://github.com/jstpcs/lnxpcs/).
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [jstpcs/lnxpcs/.../**cards** (master → becf4b6)](https://github.com/jstpcs/lnxpcs/tree/becf4b6d6f53f31dfaeb64e3a4c4dd56878c6433/cards) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dksdvt0.)^.
Q1: for case let obj as MySubObj in dict.values { obj.enabled = false } Q2: Filter and map are not the right approach for what you're trying to achieve here. It's best to keep it simple with a plain loop: for obj in dict.values { if obj.enabled { return } } 
I have worked extensively with both languages and base my opinion on that. You don't seem to know much about either..
I have worked extensively with both languages, have you even tried Kotlin?
How did you go about creating these? What was their original purpose? They're very beautiful - thank you for sharing! EDIT: Wow, looked at your GitHub and ALL of your art is beautiful. I would love to see a book illustrated by you.
For calls that need to be ordered, yes, nesting is a good approach. If the order of the callbacks does not matter, however, you can always use a counter. This way, all calls can go out simultaneously, but they will only callback when all have been completed. For instance: function fetchData(completion: (StructuredData) -&gt; Void) { var structuredData = StructuredData() var numberOfCallsRemaining = 2 asyncCallOne() { str in structuredData.str1 = str numberOfCallsRemaining -= 1 if numberOfCallsRemaining &lt;= 0 { completion(structuredData) } } asyncCallTwo() { str in structuredData.str2 = str numberOfCallsRemaining -= 1 if numberOfCallsRemaining &lt;= 0 { completion(structuredData) } } } This can increase performance when calls are not dependent on each other since they can all go to the session manager at once. You can also mix both of these techniques together as needed to accomodate both your dependent calls and your independent calls. This way you avoid having giant nests of code. Hope this helps!
Thank you so much everyone for your explanations. I will have to read them all after I get more sleep :) 
Which framework are you using? Vapor?
Thanks for your kind words. It's just a little hobby and a way of relaxation after working hours. I don't make my living from it and can easily share the pics in hi-res with community. So no any original purpose, I just make something I like myself and I'm glad if someone else likes it too. Most of the prints are related to open source world which usually lacks marketing materials and I spread the word about open source with these pics. Also many people from all over the world who can't afford buying a tee or hoodie with the print use the pics for self-printing and I don't mind. 
Thanks for your kind words. It's just a little hobby and a way of relaxation after working hours. I don't make my living from it and can easily share the pics in hi-res with community. So no any original purpose, I just make something I like myself and I'm glad if someone else likes it too. Most of the prints are related to open source world which usually lacks marketing materials and I spread the word about open source with these pics. Also many people from all over the world who can't afford buying a tee or hoodie with the print use the pics for self-printing and I don't mind. 
This is an interesting approach. I never thought of something like this, but I like it! I'll give it a go; thanks!
Yeah, I was just trying to avoid dependencies for something like this
Excellent, I'll look into this!
So you feel that Swift is *currently* as capable on the server side as Java? Because for all intents and purposes when we talk about Kotlin we're talking about Java. I want to reiterate that I'm not saying server-side Swift is bad or unusable. It's just not as ready as Kotlin and Java. I have yet to see any sort of large-scale project that widely boasts being built on Swift.
Q2: let someEnabled = dict.values.contains { $0.enabled }
No, it's not at all as usable. Things like PDF and XLSX are still missing. But I'll gladly redirect you to http://www.clearbluetechnologies.com to show you one of my old sponsors for MongoKitten (Swift MongoDB driver). For many projects, it's definitely usable. CSV, TSV, etc are definitely dare. Basic web tools, for sure! But when you're getting into specific complex formats you're out of luck for now. Although you can always bind to C.
I used to be an active contributor there, currently working on [Leopard](https://github.com/OpenKitten/Leopard/). [docs](http://openkitten.org/beta/site/leopard/) and [reddit](https://www.reddit.com/r/swift/comments/6p4dr5/the_openkitten_ecosystem_is_joining_the_scene/)
Well that works but opens it in safari. I was hoping to keep it as it's own app but that's turning out to be difficult. 
You want Data, not a string, right?
I'm open for anything! At this moment I'm trying to store a String in Firebase so I can retrieve it again and turn it into an image again, I'm not sure how I can store Data in Firebase. Any help is appreciated :)
Data is a primitive type as far as iOS databases go, so you should have no problem storing Data in Firebase
//creates kickstarter campaign ...
Q1: `dict.values.forEach { ($0 as? MySubObj)?.enabled = false }` Use `forEach(body:)` to perform an action on each item in a collection. Q2: `let someEnabled = dict.values.index { $0.enabled } != nil` This benefit of using `index(where:)` here is that it will stop iterating through values at the first item to satisfy the closure.
It's called the ternary operator. If the expression before the ? evaluates to true, it returns the value between the ? and the :, otherwise it returns the value after the :.
Awesome, thanks a bunch! 
Great article :)
Just that i'm absolutely clear: if "." == digit, display.text will be set to "0.", and if not it'll be set to digit. Right? 
something = &lt;if&gt; x == y ?{then} &lt;if expression = true&gt; :{else} &lt;if expression = false&gt; 
Correct. 
Or like this: dict.values.flatMap({ $0 as? MySubObj }).forEach { $0.enabled = false }
Why bother with foreach instead of just doing both in flapmap?
Your code examples don't actually work. In the very first one with Entity and uid, you're calling print(order.uid) when uid is a method, not a property. More importantly, you're generating a new uid every time the method is called.
Thanks for catching this! I forgot to sync the text with the actual sample code.
Liked the article, but i really wish people would write some articles about "practical POP programming". Examples of what i consider practical: (dont write on these as they have already been done) animated such as a shake protocol. Error presentation protocol to present an alert view. You know, UIKIT things that can be extensively simplified with a simpler protocol
I would make sure it's a Pro. I have a Mac Mini that is six years old that just can't process quickly anymore. The many updates to the OS and Xcode have made it unbearably sluggish. If you plan on having the computer for a while then I'd recommend getting something that may be over-the-top. I know the computers in retail stores are usually base models so try building one on Apple's website. Apple doesn't discount anything so you can rest assured you won't find a better deal anywhere. I'll probably purchase my next computer through SkyMiles shopping when they have a deal to get 2x or 5x the miles for every dollar on Apple's website. At least that way I benefit more from my purchase. I say this because it could help your travels earning ~3000 miles or more.
Reads very natural, like it.
Interesting use of that index benefit.
I have about a $1,500 budget right now, and I can push it to $2,000 if need be. Are there any specs that you recommend I should get that are worth the price?
Have you tried putting an SSD into your Mac Mini? I can do without anything on my 2009 iMac with an SSD in it. 
I haven't looked at what's on the MacBook Pro specifically. I hope someone who does have one reads this and can comment better. I would at least suggest an update to RAM and possibly a SSD. The SSD could make it quite a bit more expensive.
I didn't get the SSD. I do have almost everything that isn't used while coding on an external though.
You can get a refurbed MacBook Pro like the 2012. As long as it is with 4-5 years old. 
I'd get a large screen. I tend to use dual displays anyway. One with xcode (even that is usually with the alt split window) and the other for the simulator, notes, browser, etc. Mine is the previous gen macbook pro. 
I used to configure my projects similar to this, but I feel like it's much better to use a single target with multiple build configurations to do this now.
Yeah sorry about that. I have the MBP (non retina) from late 2012 with 16 GB RAM 1TB SSD works fine and not bogged down really with compiler performance in Xcode 9. 
SSD is 400% faster than HDD with large 4MB random reads/writes, and 27,000% faster with random 8kb reads/writes. I highly recommend it. 
That's awesome! I'll be sure to upgrade.
Thank you for the advice everyone!
How?
Animations are a good example. Been meaning to refactor an app of mine from having unnecessary UIView extensions to POP. https://blog.bobthedeveloper.io/protocol-oriented-programming-view-in-swift-3-8bcb3305c427 
Well I was hoping for something like that, but now that I try it in Playground it doesn't work: `dict.values.flatMap{ ($0 as MySubObj).enabled = false }` But this does work with just forEach: `dict.values.forEach{ ($0 as? MySubObj)?.enabled = false }` Maybe I'm missing something... Why does it behave this way? 
Because Sequence's flatMap is modifying, not terminating operator.
forEach is a terminating operator?
 if "." == digit { display.text = "0." } else { display.text = digit } It's just a shorthand way of writing the above if block. As others have pointed out it's called the ternary operator. Please only use it for very small and easily understandable situations like this one.
I would love to see this! Anyone?
Check out google firebase. It allows for easy realtime cloud messaging.
The biggest one you can affford 
Flatmap is not for side effects
I have never done Hacking with Swift. I highly recommend Stanford's iTunes U course on iOS development, though. It's free! About the overwhelming part... do research into already existing APIs before ever thinking of writing a single line of code. I've felt overwhelmed before until I found an API that solves my problems and then some! 
I’m doing the same, except with Nick Walter’s iOS 11 course on udemy, covers CoreML too
That’s an interesting app idea :) 
What do you mean by side effects?
Link to a tutorial please?
filter,reduce, map and flatmap (among others) should never cause changes in the objects they look at. Side Effects are any changes in the world caused by running a section of code.
Thank you
&gt;Does anyone else Probably
Cocaine- If you know of the already existing Mac app, Caffeine, you already know what it is. This may be an inappropriate name for the program, but I thought "What keeps you awake? Coke." There is already a Mac app that does this, but I want to make an iOS version of it. Mainly for iPads.
Love it! Im a stickler for protocols i think they have their place, but if used everywhere they can get very convoluted, complicated, and just overwhelming.
1. Just use the YouTube API. They will have far higher availability than you can handle with your backend. 
The issue with that is that every user opening the app would be making requests, and I think the API has a daily limit..
Hey, You need to convert an Int to a String. ``Current.text=String(TipArray[CountCurrent])`` More about: https://stackoverflow.com/questions/40198220/swift-3-conversion-from-int-to-string
I’m just curious what people are doing with all these frameworks there’s been tons of downloads and lots of things going on but what is actually being done why is there no showcase look to see what’s possible
There is no API for that. Why do you want to inform the user in the first place? What is it doing in the background? Are you using the appropriate background modes?
is it always the same request/query? Could your back-end just be a proxy with a cache?
Yes, it's always the same query. 
I wouldn't bother with a whole backend with a database. Just setup a simple proxy with caching. I'm sure there are tons of services that will do this, certainly any CDN will. Or you can do it with nginx on a server.
Yeah for one line if/else situation you mean? Still, I think I'll stick with the more verbose way while I'm learning. 
Firebase is ok but if you get medium/big and your still free then you will start getting bills but then the only alternative for real time is setting up your own socket based backend which will cost you money also but less on the larger scale of things
You are totally on the right course of haveing your own backend aggregate the videos into an easy to serve api for your users, this will increase speed and decrease chances of you hitting a YouTube api request limit, you could use firebase which you can write scripts on to aggregate the YouTube video links into your api or you could use iCloud which is available to android which you can write cloud code on to achieve the same result.
Does it have to be developers already or can it be people learning swift? 
Ditto. I’m about to release my first app in the next 3-4 weeks. 
Hi 👋, I was missing a tool to search a database of packages known in a similar fashion from other ecosystems. And whilst packagecatalog.com exists, it's frustratingly slow to actually use. So I wrote a small tool to interact with it. The original idea was to be able to add packages directly to your Package.swift, but I left that out for now. Please hit me (or the project's issues) with any kind of feedback. I'd love to hear it. And if we can turn this small experiment into something actually usable, all the better. Thanks!
Go Pro
I'll see if I can make the other sides if you haven't.
That's exactly what I'm looking for!
The new iOS will take care of that on its own
Maybe try reaching out to the guys who did the Swift Talk series at https://talk.objc.io I like their stuff, but some of the stuff they mention is quite hard to understand. For example, how do they seperate the navigational stuff from the view controllers when they use an App class but then the app class acts like a singleton? 
Can you post an example of the website where it says somestring in the context of your original query? I don't know what is meant by somestring Thanks
That's a description of a singleton. Make the game object a singleton and you're fine
POP in Swift is a cool way to designing your system. Once you wrap your head around it, it becomes your best friend. :) 
It looks like you define dichomoticSearch2 twice, with different arguments each time. I don't think you need to "embed it in itself". Just copy exactly your original function, but with a numberOfIterations argument and a numberOfIterations++ at the beginning/end of the function definition. Then when you call it, call it with a zero for that argument. http://swift.sandbox.bluemix.net/#/repl/597b2d102f72c1127dbd6358 13 iterations!
There are lots of options for storage. If it's very little data, like some user preferences, UserDefaults works. For small amounts of secure data like auth tokens, use the Keychain. It's it's a little more data but you don't need a real database, you can use NSCoding (or Codable in Swift 4) then read/write to files. For a vanilla RDBMS, the most common choice is SQLite. This tutorial is Swift 2 but shouldn't be too hard to update to Swift 3: [Getting Started with SQLite in Swift](https://www.raywenderlich.com/123579/sqlite-tutorial-swift) Beyond that there are persistence frameworks. Most still use a DB under the hood. In Core Data you can even debug by looking at the generated SQL queries. Apple's framework is Core Data. There are tons of 3rd party options such as Realm (Realm provides a web sync option but you can use it as just a local database). For something like FitBit, there's a database holding that data. What the code looks like to work with the database depends on the framework that the developers chose. You could definitely do it with SQLite without using a persistence framework though they may have chosen to use one. This article gives a pretty good explanation of why you might want to choose Core Data over SQLite for an app: [What's the Difference Between Core Data and SQLite?](https://cocoacasts.com/what-is-the-difference-between-core-data-and-sqlite/)
No, I define `dichomoticSearch2`, and inside that function I define `_dichomoticSearch2` (note the underscore); this allows me to call the actual function (`dichomoticSearch2`) without having to specify a superfluous parameter (`numberOfIterations`). Edit: Also, I know I can do it another way, but that's not the point. I'm trying to figure out if this code shows a bug in Swift and why it throws a segmentation fault.
U
I see - but you have the 'superfluous' parameter in the second function anyway, so don't you have a superfluous parameter AND a superfluous function now? If I cut your _dichomoticSearch2 and paste it outside of dichomoticSearch2 the code works. Not familiar enough with Swift spec to know if it's a 'bug' or a 'feature' or an actual problem with your code. Edit: So I'm entirely no help.
For local databases you can go with Core Data or Sqlite. For remote databases anything from MySQL, PostgreSQL, Oracle, DB2, even NoSQL flavors are ok.
Check out api.ai
is that Swift 4? What's the version of Xcode? 
The version of xcode is 8.3.3 :) concerning the version of swift yes it is swift 4 though I think this command exists for quiet a while no?
It's only in Swift 4 which *I think* you need Xcode 9 for. I'm not aware of 8.3.x supporting Swift 4.
Multiline string literals only work in Swift 4, so you need to use the Xcode beta. If you're using Xcode 8 / Swift 3, then you have to put in the line breaks yourself using *\n*. You can use *+* to combine strings so you can split it up over multiple lines in your code: let string = "line 1\n" + "line 2\n" + "line 3" 
Hey, thanks for your comment anyway! And to answer your question, the goal is to not have a superfluous parameter in the function that is exposed to the global scope. So when you use the function, you don't have to add a `0` parameter.
Yeah I just installed the beta and everything works like a charm thank you very much for your help
I would be very interested in doing this. Started reading the Docs last week and I am currently working on creating my first real iOS app
Apple's Swift book is actually really readable. I have skimmed through a lot of C++ books and they can get really hard to read, but the Swift 4 programming language book on iBooks is really nice.
The app is meant to prevent the phone from falling asleep. Like the Mac program Caffeine. This feature might no be necessary, but I thought that it would be something useful to add.
Unless I'm missing something: Settings ➞ Display &amp; Brightness ➞ Auto-Lock ➞ Never
I've only been working with Swift for a year, and all my big projects have been Swift projects, but so far I've got 3 apps on the app store (2 iOS and 1 iMessage) and I have one sitting in TestFlight right now (iOS + watchOS) and I did a contract gig for a pretty big company as the solo developer and that was tvOS. Not sure how these things go but it'd be worth a shot maybe? Right now I"m just rounding out my learning on random frameworks for iOS. Yesterday I did CoreMotion. Few days ago I did CoreML. I'm just having fun and going to start machine learning/deep learning with Keras pretty soon :)
Does it really matter whether you’re ignoring the associated value though? Why would that need documentation?
Sometimes ignoring the associated value would be a bug. For example, maybe the case should only apply when the associated integer is positive.
Any compiler crash is a bug — if your code is invalid for any reason, the compiler should warn or produce an error, and not crash. You can file this as a bug on [bugs.swift.org](http://bugs.swift.org) (show your code, just as you did here).
try dict.values.forEach{ ($0 as? MySubObj)?.enabled = false } Flat map's closure needs to return a boxed array element, which is why it's probably complaining about your closure not returning anything. You ought to be able to do what you want with just forEach and let it short circuit where the as fails. It's not terribly functional but it's swifty. Where we want a side effect, not a new array, it's probably a better choice than flatMap. 
Would I need to wear pants? 
Not really bothered. Declaration of the emperor case without an associated value should be documentation enough. 
Great job, that’s awesome! Here goes my ⭐️
What doesn't work with (note the default value for numberOfIterations): func dichomoticSearch2&lt;T: DichomoticSearch &gt;(range: ClosedRange&lt;T&gt;, isUpperBound: (T) -&gt; Bool, tolerance: T, numberOfIterations: Int = 0) -&gt; T { (I'm not at a compiler to check)
Why are you not using default parameter values?
Okay, will do!
Thanks!
If you later add an associated value but not update the case in the switch to use it, you could have a bug. If you had appended a "()" before, you would get a compiler error.
I like how your first sentence identified you as not being part of the audience OP was trying to address. Reminds me of those /r/AskReddit, "Ladies of reddit..." and every reply is "Not a lady, but..." 
Looks like we both didn't make a meaningful contribution to this thread
I know it's a late answer but you can go all the way back to the Mac Mini mid 2011. I have a MBA 2014 and Mac Mini mid 2011 and there's not a lot of difference once you swap the Mini's HDD with an SSD.
Yours being a top level comment was a reply to the OP, while mine was calling you out. Np man you'll learn 
So that means you've made absolutely no contribution to this thread. Therefore my last response still holds. Simple logic, you'll learn
Negative. This is my last reply to you. You provided no assistance to OP by disregarding him, while I attempted to call you out for blatantly ignoring him. There's a contribution there if you weren't so prideful and dense and willing to admit you're original lack of reading compensation. Have fun man! 
You're both assholes.
There's definitely value in recommending alternatives or additional resources when the person is starting off and may not about that alternative.
And how! Lines of code shouldn't be preserved at the expense of clarity...it's not like you'll run out.
Just released my first app written in swift. Hopefully more to follow! https://ampoule.io 
Agreed. 
There are tools like quartzcode and paintcode that allow you to create a vector animation then export it to swift
That's what I thought, so I actually filed a ticket before going to bed yesterday; I just woke up and got a reply: "Seems to be fixed in Xcode 9!" For reference, [bugs.swift.org's ticket](https://bugs.swift.org/browse/SR-5571).
Cheers I will take a look. Perhaps what was really missing is the Flash paintability and timeline. Which is something that XCode may or may not have in the future as authoring tools. I am only a beginner with app development and finding lots of interesting thing in Swift that I want to do without having to use Unity.
Shut up you pretentious fuck
This is pretty impressive/well written. Wish I understood half of what you are talking about in it.
Sorry dude. I got carried away
Oh no problem man, I was a dill hole bigger than the statue of liberty's butt. Love you 
Impressive! Well written. Worth the read. 
Yes, TestFlight is your only option. But TestFlight now allows you to access old builds instead of just one build at a time, so it’s not too bad. And the beta app review for external testers is extremely quick. Still, I’m surprised hockey app hasn’t added tvOS support. We do exactly what you do for iOS
Not trying to insult you, but write with better grammar. I read your message twice and still don't know what you're asking. 
Use the debugger to set breakpoints at the line in the ViewController where you set the delegate and at the line in TableViewCell where it prints the delegate2. I believe you discover that you reach the second breakpoint first. Which means that awakeFromNib occurs before the ViewController gets a chance to set the delegate, in which case the delegate2 is still its initial value of nil. 
You need to set the table data source in your `viewDidLoad` `tableView.dataSource = self` Also as the other guy said it's possible `awakeFromNib` is called before delegate is set 
u/viralsharkmedia, could you please provide an example of what you are talking about. Without additional information, It is difficult to see the specific connection between 'initializer' and selectors and closures that you are referring to.
“In Objective-C, a selector is a type that refers to the name of an Objective-C method. In Swift, Objective-C selectors are represented by the Selector structure, and can be constructed using the #selector expression. To create a selector for a method that can be called from Objective-C, pass the name of the method, such as #selector(MyViewController.tappedButton(sender:)). To construct a selector for a property’s Objective-C getter or setter method, pass the property name prefixed by the getter: or setter: label, such as #selector(getter: MyViewController.myButton).” Excerpt From: Apple Inc. “Using Swift with Cocoa and Objective-C (Swift 3.1).” Check out this book on the iBooks Store: https://itun.es/us/1u3-0.l
Make clean and rebuild. Swift suffers from fragile base class and can mis-dispatch calls if not everything is up to date.
We got approved for external on our iOS app in less than 2 hours last week. For following submissions you can lie and tick the "nothing major has changed" checkbox to skip external reviews. I did this in my last app forever without them forcing me to eventually get a review.
Some people like me learn best by just DOING something, in my case I programmed a macOS app that lets you control spotify from the menubar. The Stanford courses also helped alot! Just think of a programm/app that you think is missing in your life and then just try to do it yourself!
Hey man, I'm excited to see what you're making. I have a question about Leopard's synchronous routes vs async routes. If async has only a tiny cost for the simplest APIs, but have big benefits for anything more complex, why not make all routes async by default? And secondly, why would an async route need to explicitly return a `Future`? Couldn't the framework automatically wrap the return value in a `Future`?
Would love more pictures in the readme, but here, have an upvote 
Hey there. I have been learning Swift for over a year now. It was the first programming language I have ever learned (other than a few short programming course in high school). I have released a few apps, of which only one is still in the app store as makings apps is hard and with Apple releasing AR Kit one of my projects is now redundant. And I am currently working a new app with a lot more experience in hand. I have focused mostly on apps that rely on Core Location and Core Motion heavily, but have recently moved into iMessage apps, and WatchOS apps. If your looking to know more just send me a message. Cheers!
I know it's a 'I totally had that idea first' thing but about 2 weeks before AR kit came out I was trying to figure out a way to put room-tracking into existing AR using the motion of the environment through the camera, then Apple went and did it! Apparently it's called visual-inertial odometry, but I feel like Apple made that up as I couldn't find any reference to that before ARKit was announced. Apple made it better than I ever could but it's still a big 'What if' for me if I'd made it work.
You can check if a CGRect with the dimensions of the screen contains the node or intersects with them, while this is true you can show them.
Thanks :) I think both should be regarded equally since async comes at a slight API cost. Although if your second point is being addressed, you're completely right in that async is a higher priority. I don't know how to address the explicit return in a clean way, I might have to duplicate the API for async, I think you're right there. I'm adding it to the issues
Using physics to detect if the nodes are off screen is very inefficient and sprite kit physics is notoriously unreliable. Just check the position x and y to see if they are off screen. Identify assumptions you can make to cut the number of checks you have to do. E.g if the nodes are moving from right to left and don't overtake each other, you only need to check the oldest node in the on screen group of nodes to see whether it's x position is &lt; 0 
Also, make the delegate weak. Otherwise you have a retain cycle.
i didn't feel insulted by this , it's just very hard to ask a programming question about a concept i don't understand. in my initial question instead of saying "you get the option to write a line of code directly into the initalizer" , i should've put "you get the option to write a **FUNCTION** directly into the initializer" an example of this would be when initializing a new UIViewPropertyAnimator. **init(duration: TimeInterval, curve: UIViewAnimationCurve, animations: (() -&gt; Void)? = nil)** the **"animations"** parameter is the focus here. i believe it could take either a closure or i could use a #selector to point it to a function i've already created elsewhere in the code. 
I think you want to look at these to get search result data. Then implement a view for it somehow. https://stackoverflow.com/questions/28263182/searching-for-files-using-nsmetadataquery-does-simply-nothing https://developer.apple.com/library/content/documentation/Carbon/Conceptual/SpotlightQuery/Concepts/QueryingMetadata.html https://developer.apple.com/documentation/foundation/nsmetadataquery
I believe the DateFormatter class has this built in
How would I go about using that exactly? Im new to swift. 
Google DateFormatter 
In general you should never write this sort of functionality on its own. Calendars and dates are incredibly complex and you should use Apple's built-in functionality wherever possible. What you're looking for is in the [Calendar](https://developer.apple.com/documentation/foundation/calendar) class. I believe it's something like the following: let index = Calendar.current.component(.weekday, from: Date()) // this returns an Int Calendar.current.weekdaySymbols[index - 1] // subtract 1 since the index starts at 1 This will work for any calendar supported by Apple. There are many more other than the Gregorian calendar, which is why you shouldn't ever build this functionality yourself (also, you know it's well-tested so less chance for bugs). If you're going to be doing much work with dates you should really check out Calendar as well as Date and DateFormatter documentation. P.S. this was mostly from memory so make sure I'm correct about the off-by-1 stuff in my comments.
From my notes: // How do I find the day or week of the year? // DateFormatter lets you do this with "D" &amp; "w" let dayformatter = DateFormatter() dayformatter.dateFormat = "D" dayformatter.string(from: Date()) let weekformatter = DateFormatter() weekformatter.dateFormat = "w" weekformatter.string(from: Date())
This is exactly what I needed, thank you so much!
No problem! A really great way to learn things once you know the basics is to be able to read the documentation for something and understand how to use it. Apple has built some really powerful libraries that are integral to the day-to-day lives of Swift developers. Make sure you can read and understand documentation even if it's sometimes a little dense.
In the example you list here, the `animations` argument is a *closure*, aka. a *block*. As you hinted to, this is a small piece of code that is stored and can be executed later. *Selectors* are a different type (see previous commenter) and generally aren't compatible with closures. That being said, one of the powerful features of swift is the equivalence of closure types and function types. So if you're just using swift functions, you don't need to use the `#selector` syntax: func someFunc(_ body: () -&gt; Void) { body() } func anotherFunc() { print("hello") } someFunc(anotherFunc) edit: formatting and typos
I haven't followed Hacking with Swift (don't get angry with me, /u/TestHumor!) but I did *write* Hacking with Swift so I hope I can contribute some useful answers to your questions based on what I hear from other readers. 1. Some people have managed to complete it in less than a month, but I don't recommend it. I'd suggest you aim for about two to three months, particularly if you're following the guide book that comes with the premium pack. 2. The main thing people complain about is finding it hard to retain the information that gets taught. To address this, each project ends with homework that encourages you to write some code yourself putting new techniques into action, and there's also a guidebook in the premium edition that adds revision notes and challenges – both are helpful to help you remember how things work. 3. Most people seem to follow the course because they have a specific app they want to build, so I guess when they finish that's what they do. At the same time, many people who buy Hacking with Swift also buy my follow-on book Pro Swift. 4. If you complete Hacking with Swift fully – all 39 projects and homework – you are above most junior developers I've met. If you want to progress further then you should look at Pro Swift or Swift Coding Challenges, both of which are bundled alongside Hacking with Swift in my Swift Power Pack bundle. My goal in writing Hacking with Swift is to give you enough confidence in a wide variety of iOS frameworks that you can start new apps quickly and easily. This means going for breadth (table views, collection views, stack views, Core Graphics, Core Image, etc, etc), but also lots of repetition – we use so many table views that you should almost be able to do it blindfolded by the end! I hope that helps; feel free to message me if you have further questions.
This isn't really intended for everyone, I wanted this so that I can prevent sleep without messing with settings. I understand that this sounds dumb, but it is more for one off things. 
Never boilerplate date/time.
Ha thanks for writing this reply out and making hacking with swift. Again, I was a dick above, all on me. 
You are not. The app is not something I plan on distributing, more something that I felt a need for an wanted to make for myself.
I added more links to gifs in the README =)
Hi, you may contact me at fvimaginationapp@gmail.com if you want, i'm an iOS/Android developer and here's my portfolio, just for your reference: https://codecanyon.net/user/fvimagination/portfolio Cheers! 
are you available now?
Working on a news app template, it's actually ready and publish on codecanyon.net: https://codecanyon.net/item/younews-ios-universal-news-app-template-swift/20318157
Thanks! This is exactly what I needed to know. 
omg thank you!!!! you made it so clear! i think i actually understand this. i just need resources (preferably) videos to get me up to speed on closure syntax.
so basically what I am trying to do is every time that someone presses the submit button, the variable SaturdayTot is assigned the value of variable Total. This is then saved as a UserDefault, which is then passed on to a separate view controller (WeekViewController.swift), and is there after pressing a refresh button. The problem that I am running into is that it doesn't seem to be saving, I still get a value of 0 when reopening the app and pressing refresh. any help is very appreciated.
Do you have any prior coding experience? Or are you literally days into coding in general?
I have prior coding experience, so I know what I’m looking for and basic terminology 
Because the save will only be called on day 7, when the if statement is true.
I doesn't look like you're setting total to a value other than 0.
...but it is Saturday (day 7)
UserDefaults.standard.synchronize() is needed after the .set. Also do a switch and not a bunch of ifs switch dayOfWeek { case 0: .... }
Where are you setting the value of Total? Also, it seems like Total is probably an Int, but you cast it to a String when you read the number out of the UserDefaults. You don't need to cast it there, since you use a String() constructor with it anyway. 
This is just a style preference, but it’s the first thing I saw, too 😝 I’d also convert all the totals vars into an enum with associated values 
Synchronizing like that is not required (or desirable) on iOS 8 or later, or the corresponding macOS.
I agree, you shouldn't have to call it directly but I think the issue is that the UserDefaults is not saving fast enough so calling synchronize would be required in this instance https://developer.apple.com/documentation/foundation/userdefaults/1414005-synchronize
I think weekday is a 0 based array isn’t it. So 0-6 and not 1-7? Set a bunch of breakpoints and see where the flow goes. 
Not to discourage you, but in my experience being able to answer your own questions by using stackoverflow / online tutorials / github is a skill in and of itself. You learn more that way.
IBInspectables are fine. Designables though have a lot of baggage and cause a lot of recompiling. Use them sparingly.
Glad to help out :)
If I recall from some code I did recently it is actually Sunday == 1, Saturday == 7.
Can you provide the project via github or bitbucket ?
You are never changing Total to anything other than 0. UserDefaults are fucked on Simulator, you will always read the value that was first assigned to the key.
I already addressed that issue, still having problems. If you wanna Skype me and help me figure out where the problem lies I’ll give you $15 via PayPal. 
Try using UserDefaults.standard.string(forKey:) instead of UserDefaults.standard.object(forKey:) when accessing the data.
so basically what is supposed to happen: Total goes into SaturdayTot on Saturday (DayOfWeek==7) "SaturdaySave" is cleared to make sure that there isn't a previous value there. the value of SaturdayTot is then saved to "SaturdaySave" and lives there happy for all of eternity (or until next week rolls around, in which case it will be cleared to make room for the new value) What is happening: I enter the value, press submit, and hit refresh, and am then greeted with N/a. PLEASE help, been at this for 3 hours now and still haven't figured out what is wrong. 
Unless I'm misunderstanding, you press submit, which calls removeObject, then refresh, which tries to load the object you just removed. Seems like you should trigger the SaveButton function in between.
Throw the project up on github or something and I’ll sort it out for you. No need for the cash, either. 
I thought the same thing until I removed the remove object and still got the same result.
you sir, are a gentleman and a scholar. Project posting now, I'll reply back to you within minutes with the link. Are you sure I can't send you enough to at least cover a beer?
Can confirm, I was playing about with dates today. 
You're saving SaturdayTot as an Int into UserDefaults, and trying to retrieve it as a String. No money necessary.
But you've never saved it in the first place. Try moving the contents of the save function after the delete line. (Also, quick note: I feel mildly uncomfortable with the fact that you're offering a reward for an answer, because that sets a bad precedent in a community built on open source and free information sharing. Feel free to do whatever you want, but that's not the way things are usually done.)
https://www.mediafire.com/?hakqqgfjdl15606 there you go!
I’ll take a look. On my way to my apartment now. No need for beer money. ;)
Actually just got it figured out. But thank you so much for offering to help! 
You sir, are the man. Thank you so much! Question while you’re here, is there a way for me to have the values update as soon as they press submit instead of them having to press refresh? 
By its nature, querying through a raw JSON will be inefficient and more complicated than you'd like. This is why Firebase's queries are limited. Try Realm. Although it may seem complicated at first, it is at the moment the easiest local database framework to work with. It allows for robust queries using NSPredicates and will fit your needs. To get started, create two models: 1. Message, which contains a string and an int. 2. Conversation, which contains a list of messages. You will be able to query through the message objects in the conversation using the .filter method, which accepts an NSPredicate to filter with. Side note: you don't have to turn off persistent storage in Firebase if it's working fine for you. Just make sure that the conversations are stored in Realm so you can query through them. You may want to consider moving _all_ data available locally to Realm in the future, as it will perform much better than Firebase.
You have to have some mechanism in order to notify the WeekViewController to update his values on a save from the ViewController. I'd read up on the Delegate pattern. Apple uses it everywhere and it's a very useful concept when you're first starting out (assuming you're just starting). I'd also try and not use global variables. Makes things a lot harder to debug.
Can you give me an idea of how the memory usage works? As I understand it, realm doesn’t explicitly have read and write operations. Does it employ caching to load objects, or does it load them from disk each time? If I use realm managed objects, will access times be significantly different from accessing something in memory?
Figured it out! Anything put in the function: Override func viewDidAppear(_ animated: Bool) Will automatically load with the page! Thanks again for your help man! 
Oh god, I've had this error myself.
All iPhones have have sql lite built in have you explored that option 
You can take a look at couchbase-lite, I haven't tried it myself but it looks promising
Core Data gets a bad rap😔
I've seen a few ports of lucene to ios. If you're looking for full text search why not one of those?
CoreData really isn't that complicated. Just learn it.
+1 to this, on a project using Realm right now and it's great to work with.
UIView inherits from UIResponder. Look there for details. Override touchesBegan, touchesMoved, touchesEnded, touchesCacncelled. That gives you the touchEvent. From that, you get the X and Y coordinates of the touch. Append that as a CGPoint to an Array. call setNeedsDisplay as you add each point. Override drawSelf. Given an array of CGPoints, use UIBezierPath and moveTo the first one, and lineTo for all the others. Stretch goals: Once you have that working, add NSUndoManager support, so shake-to-undo works. Do more sophisticated curve fitting to make the curve look better.
You can use NSJSONSerialization to convert dictionaries of arrays of simple built-in types back and forth between JSON in an NSData and native structures. Once you have an NSData, you can write the NSData to a file in your app's Application Support directory. How much data are you trying to store locally? If it is only a few kilobytes a single file will do. If it's more you'll need to think about how to break up your data into multiple files so you can start your app fast by reading only what you need.
Nobody has time to watch anyone code and give realtime feedback, it's not effective and would be a waste of your money instead you might want to finish your work to the best of your ability and then request a paid code review where you pay for a solution to every issue they find in your code.
[removed]
Wonderful! Chart of happiness - off the charts.
I actually just started working on my 2nd app that has a realtime chat feature in it on the side. I was told to look into JSQMessagesViewController, but it is deprecated So I guess I would say you will get better at Storyboard..learning how to make a chat bubble is fun. The bubble could auto fit to the amount of text, could be rounded, could have that little tail ..so many things Firebase is good, thats what I use..mostly because it has great documentation and a good community of other people using it. But you will have to start paying if you get lots of chats... You should be doing some sort of design pattern like MVC