Why did you post this on r/Swift????
I don’t have experience with Core Animator and unfortunately it seems like most animation programs that are worth it are subscription based. What kind of animation were you thinking of making? Smaller things like scaling, fading, glowing, moving, drawing simple shapes etc are pretty simple to do in code. 
Did you look at the documentation for UIView.animate?
brutal truth! Swift developer market ain't strong! if you wanna starve as a junior, keep referring to yourself as a swift dev! otherwise, pick up any languages that's either pleasurable and pays hint ... either ES6 | Python 
AppKit is for OS X. UIKit is for iOS. Core Animator can export for either. 
Thanks for your reply again. Can you explain how to store the completion handler as a property? I know about completion handlers and closures, however I'm not sure on how to store the completion handler as a property. The network service will make the call to the location service, however locationService confirms to the CLLocationManagerDelegate property which has func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) { } I'm just not sure how set up the completion handler while maintaining indecency injection for both classes.
I have seen a lot of code samples come across my desk lately where they did not understand protocol-oriented programming or when to use structs vs. classes. Use Swift Codable, demonstrate that you understand SOLID and INVEST, write good docstrings on everything, and have some UIAutomation tests and Unit Tests. Can’t imagine you won’t get hired if you did that. They’d probably go “this guy is overqualified”.
Make sure to follow good coding standards such as object oriented programming principles, DRY, and SOLID, and Swift syntax rules. For iOS, generally use MVC architecture. I’m an iOS engineer and when I was getting a job as an iOS instructor, they told me to make an app. It was to retrieve data from the iTunes API, load movies into a table view with some data, and present further information when selecting one. I followed MVC architecture, OOP, SOLID, Swift syntax, kept it neat, and even used source control. They did check if used 3rd party libraries but I said no. I did get the job. Also, I recommend buying a book called the iOS interview Guide by someone named Alex, if I remember.
Thanks for the heads up. 
If you have other work that show what you can do, bring those.
Problem is the reading list goes on and on. I don't even like looking at my bookmarks or reading lists because it goes on forever :D
Does *diagnosticd* process CPU hogs? Restart Xcode or OS x.
We really can't help that much without some more info, but there's a few concerns. 1. you're in California and I imagine NorCal somewhere near Silicon Valley? That's where I am. 2. you have no pro exp. Having an actually paying programming job makes a difference. 3. California doesn't have much to offer a Jr dev, Silicon Valley want's degree + 3~5 years and several complex apps. Show us your apps and a name-addess stripped resume. 
Try for example [SnapKit](http://snapkit.io)
I've been programming for many years and one thing I always do is go back to prior code. That means that I hardly ever do a project from scratch. If someone wanted me to write an app from scratch, I'd look a bit awkward because I spend most of my time learning new code and working on old code, not making apps from scratch. Practice making 10 different apps that do 10 different things each from scratch. I know it's like practicing for a driving test or whatever, but it reminds you of all those little things that you don't do very often unless you make a bunch of new apps all the time. Go back an look at the models MVVC, MVC, and general review of things. Do some small app that has all the "bells and whistles", unit testing, multi thread, state restore, user defaults, etc...
Looks good! Have you used this in a work project with more than one people?
Thank for your kind response. There're 2 diagnosticd processes, one takes around 4% CPU, another takes around 1% CPU. I have restart OS X and Xcode multiple times. I know the problem does not come from code because it happens with multiple projects. This iMac has 16Gb ram and GTX 780M, so it is really strange to having this problem.
I sometimes have problems (Xcode 9.2) with diagnosticd process taking +150% CPU. After restarting Xcode it is ok again.
Actually I prefer Layout Anchors over Visual Format Language. 
Studying for interviews does not work. You should be as natural as possible. The same way you would be every day at the job. If you know the answer, you know it. If you sweat and panic and try to recall what you memorized last night, it will show, and will be a giant red flag (against you). If they are hiring for a junior position, they are not expecting a super star; they just want to make sure they are not hiring an idiot who will waste their time. If they _are_ expecting a super star but labeling the position "junior", they probably don't want to pay a decent salary and you don't want to work at such a place. If that's how they treat their super stars, how do you think they will treat their juniors? 
Are you sure you didnt turn on animation slowing for debugging animations ? cmd+ T or simulator options &gt; debug &gt; slow animations
I'm pretty sure it's off. When it turns on, the animation is even worse 
Its cray the number of people I've interviewed who cannot do this. Jr. &amp; Sr. developers.
I did, really great library, easy to use, no problems if many developers work with it
I covered some of these questions in a blog post: http://artsy.github.io/blog/2016/01/30/iOS-Junior-Interviews/
Thanks I will double check if I exported properly 
Hope? https://blogs.remobjects.com/2018/01/12/webassembly-swift-c-java-and-oxygene-in-the-browser/amp/?__twitter_impression=true
E.g. myView.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true containerView.topAnchor.constraintEqualToAnchor(topLayoutGuide.bottomAnchor, constant: 8.0).active = true containerView.bottomAnchor.constraintEqualToAnchor(bottomLayoutGuide.topAnchor, constant: 8.0).active = true It's just very clear and fast to write in my opinion. Also mentioned [here](https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/AutolayoutPG/ProgrammaticallyCreatingConstraints.html#//apple_ref/doc/uid/TP40010853-CH16-SW5). You find a lot of tutorials when googl'ing it. It's more natural to refer to anchor points and e.g. say left anchor of View 2 is 10 pixel away from right anchor of View 1. And View 2's vertical center anchor is equal to that of your screen's view.
Easy integration of chat, voice, video calling function by simple integration of **Apphitect IM** [Unified chat API and SDK](https://medium.com/@sujan_patel/a-unified-messaging-api-and-chat-sdk-integration-for-businesses-78cf1b00744f0. Makes easier, satisfies quicker!
On addition to this, révisons the codable protocol and a dependency manager to import à Library suce as alamofire would be a good idea.
I think what you’re looking for is parallax scrolling. Check that out - I think Hacking with Swift has a small tutorial on it. 
Please let me know if it works.
Because it's bad code and impossible to code review? You cannot build real, large software with drag and drop playtime things.
Can you do it without google ?
The app I'm working on has the same issues. Not too worried about it because it still runs fine on our test iPad Air which is the slowest device we support
Only free in US, sadly. Unless you can VPN thru US address 
This is great! Very good read
Be upfront about particular parts of the code you're not familiar with or parts you want to improve your knowledge of. Nobody is expecting you to be an all-knowing Dev. It's good when a potential develop points this out as it shows that they will ask for help when they need it. Potential employees want to see a good attitude and willingness to learn above all else. 
I wouldn't even expect a junior dev to have heard of SOLID, let alone be good at it. 
They would if they went to school. But I agree. Someone self taught probably hasn’t.
Hey EskimoEmoji, I'm one of the developers of Core Animator and it sounds like sneeden hit the nail on the head. Make sure you're selecting 'iOS' as the 'Platform' in the export screen. If you need any direct help please don't hesitate to ask.
Started last year but it’s been mentioned in an OOP class and a C class that I know. Even though it’s for a junior dev position, that’s not an excuse to know the basics such as OOP. 
I'd second SnapKit. I've used it on multiple projects of solo, pair and team-based projects and it works great. No hesitation bringing it into every project I greenfield. I prefer it over PureLayout (I've used both professionally) and it is dead easy to use.
Rock on! :)
This. If AutoLayout Engine is fast enough for what you're trying to do you can't do better than anchors. It's clear, concise and doesn't rely on third party code.
I use https://github.com/jmfieldman/Mortar because it gives you a type safe VFL style syntax without a lot of the limitations of apple's VFL and without its surrounding boilerplate. It also gives you a type safe and extremely concise anchor/equation style syntax which can create multiple related constraints readably in one line. The two styles can be mixed seamlessly(each is best at what the other is poor at) and have made autolayout a joy to use. I find them to be extremely readable because they eliminate so much of the boilerplate that obscures what you're actually trying to do. I'll also use stack views occasionally(with some convenience methods to cut boilerplate) mostly for their ability to show/hide views on the fly without having to re-constrain them.
I didn't say anything about not knowing OOP. The SOLID principles are principles used within OOP, they don't define OOP. In fact, OOP isn't even something you as a developer actively think about or make decisions on, it is part of the language that you use to program. Whereas SOLID is more about architecture decisions. 
Probably because they learn a little bit and want to make big money quickly without knowing the core basics of iOS development. 
Remove it and add a new one. 
Something that I'm doing is looking for any "iOS interview Questions" videos or podcast and while commuting I've listening to those. Pausing the video when hearing the question (if I know the answer) and then answering the question to myself. Then, I listen to the answer. 
I'll try this but I wonder if performance will suffer with remove and adding AVPlayers for each cell.
You should avoid using multiple AVPlayers where possible. If you must use more than one, then you should try to create a small pool of them (so they can be reused). If you have to create and destroy many of them, may god have mercy on your soul.
What does your app look like? Can you show us? Maybe it's not as impressive as you think? How long have you been programming? Do you have a computer science degree?
VFL or StackViews, but it really depends on the app. You can usually get 80% of the way there with StackViews. I worked on a project where we manually calculated out view placement. It worked but there were far fewer screen sizes then.
Here is a list of threads in other subreddits about the same content: |Title|Subreddit|Author|Time|Karma| |---|---|---|---|---| |[Swift Forums officially open](https://www.reddit.com/r/programming/comments/7rmnwd/swift_forums_officially_open/)|/r/programming|/u/andradei|2018-01-20 02:55:59|1| ---- I am a bot [FAQ](https://www.reddit.com/r/DuplicatesBot/wiki/index)-[Code](https://github.com/PokestarFan/DuplicateBot)-[Bugs](https://www.reddit.com/r/DuplicatesBot/comments/6ypgmx/bugs_and_problems/)-[Suggestions](https://www.reddit.com/r/DuplicatesBot/comments/6ypg85/suggestion_for_duplicatesbot/)-[Block user (op only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20user&amp;message=andradei)-[Block from subreddit (mods only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&amp;subject=remove%20subreddit&amp;message=swift) Now you can remove the comment by replying delete! 
Nice. Just ran across this tool that might be a nice addition to your tools list: https://app.quicktype.io/#l=swift So much JSON in the world today it's nice to have an easy way to make it native.
Look into `CustomStringConvertible`. 
This, use one video player, insert it into cell you are going to play, use replaceitem(nil) when you remove it, aka either override removeFromSuperlayer and do it there, or do it manually.
I wonder if the forum code, itself, is written in Swift. 
For my IB Computer Science class I am creating an app for my school, but even if it wasn't for class I would do it, it's so much fun to use Xcode to make apps. 
I can't find any references to "codeview" or "code view" in those posts. Seems like they are just advocating for writing your creating your views in code rather than using Interface Builder.
No, it's using Discourse (https://www.discourse.org). Made with Ruby and Ember.js (JavaScript framework)
Correct me if I'm wrong but there is no reference to 'codeview' at all in the article. It would appear that the author's article is about programmatically creating views which he refers to as "View code".
2nd paragraph under the pic says: &gt;I've become very interested in the subject, after talking with several developers that were adopting view code in there’s applications, claiming several benefits. He links to a github for code, but I haven't gone over all of it. He mentions in the 1st paragraph: &gt;Nowadays view code is becoming the new hype inside iOS community. https://medium.com/cocoaacademymag/migrating-an-app-to-view-code-ffe3f1510408 He really makes it sound like an actual product.
Ideally what I'd like to do is just use one active AVPlayer at any time and just switch the video but I haven't figured out how to do it like that. The way I have it right now is cells are created with AVPlayer in the awakefromnib and they are reused by using didset when the avplayeritem is changed in the cellforrowat. This ends up being about 3 avplayers that handoff the videos needing to be presented when reused. 
It doesn't solve the issue
Seems legit. I just updated my specs in the post
[removed]
Seems so! You can now `==` two `[[T]]`! [[1, 2], [3, 4]] == [[1, 2], [3, 4]] // Now possible!
The API returns an array, and you are force down-casting to a dictionary.
So what would I do to fix it?
I’ve been using the playgrounds app for a while to learn swift but I’m nearly ready to learn how to make actual apps in Xcode on my laptop I don’t know what my first app should be, do any of you guys have any suggestions for a simple app I can make?
Ain’t nobody got time for that. They just used an existing solution.
Try using JSONDecoder() again, but make these changes: Add protocol conformance (to Decodable at least) like so: struct Api: Decodable {...} let decoder = JSONDecoder() Then when you get your data from URLSession: do { let decodedResult = try? decoder.decode([Api].self, from: data) } Your struct definition and JSON decoding code is correct, but as u/nullnox notes the API is returning its data as an array of a single entry: the data you want is the dictionary wrapped in {}, wrapped in []. If you declare Decodable conformance on your struct type, that makes Array&lt;Api&gt; decodable as well, so you can supply that to the decoder and it will output an array of [Api]. Then, as the server is just returning one entry in the array, you can get the single entry out with decodedResult.first().
:(
This is a great feature though Swift’s type system is still quite limited.
I agreed 100%. I am really surprised he got some five stars rating at all on the website. Probably the worst course I ever taken. 
Are you able to compile on your machine? If so I’d say the file count isn’t the issue. Have you tried to compile using the commandline on the build server? Maby that would give you any clues. Also, maby try the new build system? [Some new and useful terminal commands for debugging](https://gist.github.com/ddunbar/2dda0e836c855ea96759d1d05f086d69) 
In my do i have this do { let doge = try? decoder.decode([Api].self, from: data) print(doge.price_usd) } But there is an error that says Value of type [Api] ha no member 'price_usd', but there is a member called price_usd.
As I mentioned in the last paragraph, when you have decode([Api].self) it returns an Array of structs, reflecting the array of JSON the server is providing. You need to access the array element first, so like: let dogeArray = try? decoder.decode([Api].self, from: data) if let dogeArray = dogeArray { let doge = dogeArray.first! print(doge.price_usd) }
func name&lt;T: CustomStringConvertible&gt;(...) {...}
can you recommend some good courses?
I just created my first app and it's in review in the app store. It's a remote PC Volume Control application. It's not available for download yet but will be soon. Right now, you can check out my code on git. Be nice. I am a swift n00b. https://github.com/PcVolumeControl/PcVolumeControliOS The idea is you can remotely control your PC volume for *individual applications* with this app. So when you're gaming and you are full screen, you can tweak sound in the background. I'd love to have someone else help me smooth out this code and fix the enhancements we want. Mostly, we need to get parity with the Android version of this app, which my friend wrote.
Nice work. This is a great idea. As another first-timer, this is promising. I'm going to give it a try.
When talking about clarity and conciseness it's obvious who wins. let v = [ container.layoutMarginsGuide.topAnchor.constraint(equalTo: title.topAnchor), description.topAnchor.constraint(greaterThanOrEqualTo: title.bottomAnchor, constant: 8), count.topAnchor.constraint(equalTo: description.bottomAnchor, constant: 10), container.layoutMarginsGuide.bottomAnchor.constraint(equalTo: count.bottomAnchor), title.leadingAnchor.constraint(equalTo: description.leadingAnchor), title.leadingAnchor.constraint(equalTo: count.leadingAnchor) ] ---- let views: [String : UIView] = ["title" : title, "description" : description, "count" : count] let v = NSLayoutConstraint.constraints(withVisualFormat: "V:|-[title]-(&gt;=8)-[description]-10-[count]-|", options: [.alignAllLeading], metrics: nil, views: views) 
So all widgets positions and properties are stored in the storyboard file even for multiple views?
The storyboard is basically a generated XML file. If you right click on the storyboard you can click view as source code and see it your self. That would technically be the view source code 
When I hire devs I never do live coding. We just talk about programming concepts to know how far he/she is in the programming journey. For example if someone claims to know OOP ask them about interfaces and design patterns. Not only the *what* but specially the *why*. You'll be able to spot people who understand these things very quickly. &gt; If you can't explain it simply, you don't understand it well enough. Albert Einstein
Ive always felt like it should have been there from the beginning
thanks, although those prerequisites are really outdated, at least on itunes u.
Thanks a lot!
Oh I see! Thanks!
Array of CLLocationCoordinate2D?
Right so if I do this... let coordArray = [CLLocationCoordinate2D]() How do I actually add the lat on long for into the array?
You need to transform whatever locations you get from Firebase into `CLLocationCoordinate2D`, from whatever types they're stored in (I'm assuming raw `latitude` and `longitude` values). Without know what that code looks like I can't really give you exactly what you need, but here's some general code: `let coordinates = somethingFromFirebase().map { CLLocationCoordinate2D(latitude: $0.latitude, longitude: $0.longitude) }` 
you can initialize a CLLocationCoordinate2D with CLLocationCoordinate2D(latitude:_,longitude:_) then you coordArray.append(:_) https://developer.apple.com/documentation/corelocation/cllocationcoordinate2d/1423703-init
Compared to Swift's generics manifesto.
It's not that easy to implement. But it was worth the effort, it'll make code much more elegant.
By default, Xcode uses the system provided UIView or NSView class. If you open the storyboard and look at the view properties you should see it specified. It’s possible to replace it if you want. You would have to create a subclass of it (similar to how you subclass UIViewController or NSViewController), and then change the class type specified in the view properties. Generally, though, you should never have to.
There’s a swift podcast? I may be just nerdy enough for this.
&gt;iOS MVC is generally bad, keep your business logic out of the VC, because it'll get bloated. Literally that is what MVC says. Keep your business logic in their own models. The view controller should only be responsible for UI things and connecting models and views together, such as loading data from a model class into a UITableViewCell and connecting them in the view controllers cellForRow(...). MVC isn't bad and neither is using IB. Don't act like you're better because you don't use the easy way, like IB outlets.
Check out Spotify’s iOS SDK on GitHub. They also link to a tutorial to get you started. It’s on Objective-C however, so be ready for that. 
I went through it, but the library they provide don't allow me to modify the playback speed.
You could use [UIPreviewInteraction](https://developer.apple.com/documentation/uikit/uipreviewinteraction) and [UIPreviewInteractionDelegate](https://developer.apple.com/documentation/uikit/uipreviewinteractiondelegate) to do this. Fortunately, like the regular peek-pop APIs, it’s pretty straightforward to use. I found [this tutorial](https://krakendev.io/uipreviewinteraction/) pretty useful when I was trying to do something similar. 
Not sure on the number of files but I suspect Kickstarters IOS app would count as a large project https://github.com/kickstarter/ios-oss 
Yes the clock and tick emoji are a little crowded on the screen. Maybe a progress view which shows the target / current hours and uses colour coding might be better?
Ah, that’s unfortunate. 
Haskell, not really, I’d say but.. I guess you could model the same. Or how do you mean?
Ok but that’s a pretty silly comparison. “Man, the type system is pretty weak compared to what it could end up being.” That’s just natural evolution. 
They're kinda everywhere, check out https://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Eq.html and scroll down. Everytime you see "=&gt;" in an Eq declaration, that's conditional conformance. The simplest: Eq a =&gt; Eq [a] Where a is equatable, a list of a is also equatable. Doing it ourself: data MyPair a = MyPair a a instance (Eq a) =&gt; Eq (MyPair a) where MyPair a b == MyPair c d = a == c &amp;&amp; b == d 
The Kickstarter project is a nice example of an iOS project. Great place to find inspiration.
Usage: let u1 = URL(fileURLWithPath: "/Users/Mozart/Music/Nachtmusik.mp3")! let u2 = URL(fileURLWithPath: "/Users/Mozart/Documents")! u1.relativePath(from: u2) // "../Music/Nachtmusik.mp3" Surprisingly neither `URL` nor `FileManager` has a function for this. Ruby has [`Pathname.relative_path_from()`](https://ruby-doc.org/stdlib-2.5.0/libdoc/pathname/rdoc/Pathname.html#method-i-relative_path_from). Java has [`Path.relativize()`](https://docs.oracle.com/javase/7/docs/api/java/nio/file/Path.html#relativize). 
Swift doesn’t have higher-kinded types, something many languages have. Once Swift has them it’ll have a decent type system. 
Any real implementation of MVC will have a VC that is entirely too bloated for real testing - it's a failure of MVC architecture. The VC is responsibly for too much in this model. Also, getting personal, cute. "better"? Grow up kid.
I don’t know what kind of MVC you’re using, but you might be using it wrong. Who’s to say that a single view controller should only have 1 file? You can add a separate file for extensions if you want. Also, on top of MVC as the underlying architecture, you can still make layers on top of it such as the network layer. Sounds to me like you put too much in your view controller. 
This is great, I hope this really takes off. 
So I take that that UIkit has always favored a declarative approach as opposed to using swift or objective-c for views creation. I also get that I could use xib/nib files to break down each view on individual files if I need to. 
Yes, the project can be build on the machine, but the build bot (running on localhost) is failing if the number of files is exceeding some number. xcodebuild on the command line is working. Nevertheless: I've build a demonstration project in the meantime with which I'm able to reproduce the issue I'm observing in my real-world project: https://github.com/chkpnt/ManyFiles. And I've submitted a bug report to Apple.
Thanks for the hint: I've checked it out, but unfortunately this project is too small to reproduce the issue I'm observing. But I could reproduce the issue with a demonstration project (https://github.com/chkpnt/ManyFiles) :-)
Neither does .NET AFAIK. I’ve made those from time to time as well :p.
Neither does .NET AFAIK. I’ve made those from time to time as well :p.
A 2017 Macbook Pro, 16GB RAM and a 2TB SSD. Needless to say this overkill machine is used for gaming using my external 1080. I set up a bootcamp for that and is more than capable of VR so far.
Show us your code
I'm a fscking total n00b but a few things stood out to me. * Drop some comments in the code here and there to describe what your functions do and why. Just a sentence or two. It helps readers with context on the purpose of the function so we can review it a little better. I guess this would apply to all other languages too. * Be consistent in MovieSections.swift where you are overriding functions from collectionView and put the 'override' keyword in all functions explicitly being overridden. * You have a couple places where you're repeating yourself, like the spot where you're doing a cell.moviesCollectionView.reloadData() in both cases of an if/else. Just do it once after the block. * Keep viewDidLoad() from getting too busy by moving some of that stuff out to functions. It encapsulates the code a bit better and makes it easier to troubleshoot.
 func editTransaction(dateString: String, alertTitle: String, actionTitle: String, placeholderText: String, placeholderAmount: String) -&gt; (date: String, tag: String, amount: String) { var dateTextField = UITextField() var tagTextField = UITextField() var amountTextField = UITextField() let alert = UIAlertController(title: alertTitle, message: "", preferredStyle: .alert) let action = UIAlertAction(title: actionTitle, style: .default) {(action) in } alert.addTextField {(alertTextField) in alertTextField.placeholder = dateString dateTextField = alertTextField } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderText tagTextField = alertTextField } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderAmount amountTextField = alertTextField } alert.addAction(action) present(alert, animated: true, completion: nil) return (dateTextField.text!, tagTextField.text!, amountTextField.text!) }
C++ has them, for example. But if you mean Java and C# then you’re right, their type systems are weaker than Swift’s. Higher-kinded types would greatly simplify all the flatMap implementations. 
Welcome to the world of event-driven programs! The alert doesn't appear when you call present(...) because all UI actions are actually *requests* for some thing to be done in the next cycle of the run loop. The run loop is, at the highest level, an infinite loop that reads inputs from the environment (touches, mouse clicks, network events, timers you configured, and anything else that might happen "outside" the program) and figures out what to do about them. So, when you call present(..) on the Alert, the UIKit framework gets the request to show an alert sent to it. That request won't do anything until the current iteration of the loop ends and the run loop can read that request, figure out what it is, and send it to the UI system to be handled. That's why the next line gets empty values from the alert. It's using a thing that hasn't even been shown to the user yet. The next step is to move the code that makes use of the values to the {(action) in ... } section. But then.. how do you return them from the function? You don't. Because that function no longer is running, and the thing that calls the closure is something from the system that won't understand those return values. You'll have to write *another* func that takes those values as arguments and call *that* inside the closure instead of returning the values from it. This is probably the most difficult idea to get your head around, but once you do a lot of the design of UIKit and its patterns make a lot more sense. 
How about the Swift one from [GoalKicker](http://books.goalkicker.com)? 
Yeah, I was gonna ask if you meant templates. I wouldn’t really consider that higher kinded types. &gt; And no, “simplify” isn’t relative Yes it is, because we are talking about two different things. &gt; it would result in way less code in libraries Sure. &gt; which is always a good thing Mostly, but not at any cost. &gt; In now way would it do writing code more complicated. I assume you speak for all programmers, then? Concepts such as monads, higher kinded types etc. are very abstract for a lot of programmers and will make programming more complicated and reading code harder. 
No, templates per se aren't higher-kinded types. What I'm saying is that static polymorphism in C++ can be used to implement them. It's still somewhat restricted but definitely more expressive than other type systems (such as we find in Java). As for Swift, higher-kinded kinds would make life much easier for those who know how/when/where to use them. Average and great programmers would benefit from them, and the rest - who cares...
[Hacking With Swift](hackingwithswift.com) 
They serve different purposes. This sub will still be very useful for consuming news about Swift and its ecosystem.
Quick Google search for ARKit compatibility shows the minimum phone supported is the iPhone 6s https://developer.apple.com/library/content/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html ArKit requires more than just an IMU. The IMU needs to be tested to be reliable in a wide array of situations but also there needs to be an accurate camera profile done and a high enough camera sampling rate.
I did not fix everything I think you should improve, but this should work: func editTransaction(dateString: String, alertTitle: String, actionTitle: String, placeholderText: String, placeholderAmount: String, completion: @escaping (_ date: String, _ tag: String, _ amount: String) -&gt; Void) { let alert = UIAlertController(title: alertTitle, message: "", preferredStyle: .alert) let action = UIAlertAction(title: actionTitle, style: .default) {(action) in let fields = alert.textFields! completion(fields[0].text!, fields[1].text!, fields[2].text!) } alert.addTextField {(alertTextField) in alertTextField.placeholder = dateString } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderText } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderAmount } alert.addAction(action) present(alert, animated: true, completion: nil) }
That would not even come close to mimicking the dynamic dispatch behavior used by the objc runtime. Sending a selector is basically (in pseudocode) `object.getClass().getDispatchTable().getMethodForSelector(selector)`. Swift function variables are pointers to one function in memory. 
I haven’t had any problems with my 6S test device in the ARkit environment. Compared to my X they handle it equally well
I think a lot of these are mostly non-issues (but beginners tend to obsess over them, because [bike-shedding][0]) [0]: https://en.wikipedia.org/wiki/Law_of_triviality Re: code duplication A little bit of repeated code is often a good thing, because the alternative creates very high coupling. See: https://www.sandimetz.com/blog/2016/1/20/the-wrong-abstraction Re: extract "busy code" to function There's nothing wrong _per se_ with a function that does "a lot" of things sequentially. Sometimes, extracting parts of that sequence to functions creates confusion because you lose context of where the code is running. 
**Law of triviality** Parkinson's law of triviality is C. Northcote Parkinson's 1957 argument that members of an organisation give disproportionate weight to trivial issues. He provides the example of a fictional committee whose job was to approve the plans for a nuclear power plant spending the majority of its time on discussions about relatively minor but easy-to-grasp issues, such as what materials to use for the staff bike shed, while neglecting the proposed design of the plant itself, which is far more important and a far more difficult and complex task. The law has been applied to software development and other activities. The term bike-shed effect or bike-shedding was coined as a metaphor to illuminate the law of triviality; it was popularised in the Berkeley Software Distribution community by the Danish computer developer Poul-Henning Kamp in 1999 and has spread from there to the whole software industry. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
The min is the iPhone6S. This is what I bought as my test device and didn't even know it was the min spec. I got it for the 3D touch screen and got luck on the ARKit. If there's a way you can cancel your order, the 6+ and 6S might be the same price and the 6S+ might not be that much more. You also get the 3D touch and I think a lot of apps are expected to have that now (just a guess).
I think we'll all agree the code we're looking at is pretty simple here and it's not really that bad. I just threw a dart at the first three our four things that looked remotely off about it. The comments would probably be the biggest issue, IMO. They're easy to add.
Are you a millionaire?
Does it include sweet tips and tricks?
I second SnapKit, I use it professionally on all my projects and I require incoming iOS developers to learn it
What I noticed from quickly skimming. It is idiomatic to let view controllers‘ names end with “controller”. `MainView` should be named `MainViewController`. `MovieSections` should be something like `MovieSectionsController`, `MovieSectionsViewController` or `MovieSectionsCollectionViewController`. That way you make it easier to find the entry points in your program. Same for views. `MovieSection` usually would be `MovieSectionCell`. `MovieSection` sounds more like a model type. Making the cell the data source for the collection view is usually not typical but I think it’s fine in this case since you’re modeling nested collection views. 
My experience is it sucks on the 6s, and bearable on the 8 plus. It has to have a really ideal environment to work properly.
&gt; But I prefer not writing code and use Storyboards &amp; XIBs most of the time. If it wasn't for that nasty git conflicts :&amp;
Go ahead and try both. I started with VFL, and having do define string names, remembering the syntax etc didn't fit me. Sure in some situations you need more lines, but it's very fast with autocomplete.
It's been a while but I finally took the time to [write a bit about Baya](https://medium.com/wag-it/baya-a-layout-framework-for-swift-d9fc5203fe56) Check it out if you're still interested. (I'll probably make a separate post for this too) 
ah ty
In .NET there's the handy [Uri.MakeRelativeUri](https://msdn.microsoft.com/en-us/library/system.uri.makerelativeuri\(v=vs.110\).aspx), which works with file system paths, too
There are a LOT of problems with playing media songs right now. What is your self.mediaPlayer referencing?
Can’t say I disagree. I spend a lot of time to make every render cycle count for the fastest performance, which requires a lot more dev time. It would be nice to just support 8 and up. Speed wouldn’t be nearly as much of an issue
Ah, I see. I never used URI classes when dealing with file names. There is nothing in IO.Path.
Nope? Far from. 
Howdy! This is my first pod and would love to hear what y'all think. Check it out, break it, suggest improvements, etc. Any and all feedback is greatly appreciated &lt;3
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Reposting from r\/swift. My first pod SFStaticNavigationBarController &lt;3](https://www.reddit.com/r/iOSProgramming/comments/7s6t9q/reposting_from_rswift_my_first_pod/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Keep in mind this will be impossible to activate on all iPads and many iPhones. SE (less than two years old) and 6 (four years old but still supported) don't have force touch.
That's what I like about MortarVFL, just use your views directly without any of that string/macro garbage. Plus somewhat simpler syntax that'll complain at compile time if you get it wrong. container |^^ title | ~~1 | description | 10 | count title.m_leading |=| [description, count]
Hi, when you say a lot of problems do you mean with my code or swift in general? The self.mediaPlayer is referencing a property above my ViewDidLoad which is let mediaPlayer = MPMusicPlayerApplicationController.systemMusicPlayer
In swift in general. Try using the application player. Also try resetting the queue and preparing it again. So when you hit your play button. Set the queue. Prepare to play. When the complete handler is called and no error call play() Also are you ever setting the queue to an empty list? (Sorry didn’t look through all the code)
Im at work so I cant fiddle TOO much but I tried MPMusicPlayerApplicationController.applicationMusicPlayer Quick basic tests seem to be working a lot smoother. Ill try the rest after work. THANKS!! I had gone from trying the AVAudioPlayer but there was issues with DRM protected songs vs non DRM protected songs and this MediaPlayer seems to play all of them just fine. 
The AVAudioPlayer does not have these problems. So if you plan on using only user owned non DRM tracks use AVAudioPlayer for SURE. If you run into any more problems message me. I have spent months learning about how bad MediaPlayer stuff is in iOS 11
I tested it on the songs I own which are a mixture of everything. And I tested which songs weren't playing by printing the song name and then going to iTunes and getting info. I actually found a StackOverflow post where somebody posted a conditional where it checks if the song is DRM or not and chooses a player based on whether it is or not. Thanks I appreciate the offer. Its difficult because theres very few tutorials on this where theres so many tutorials for other things.
You have to use the Spotify SDK. Like the other guy said, it’s in Objective C, but you can still write your project in Swift. I don’t believe you can change the playback speed on Spotify playback. Unfortunately the SDK is very limited and I don’t think Spotify has spent much effort on it for years.
I see you’ve used Realm =P
Looks interesting! And I might have a use case for it. Let me try it out and get back to you :)
/u/inscrutablemike is correct your problem is that the alert is presented asynchronously. If you want data back from the alert you need to pass in a callback block and call it when the user closes your alert. Here is a quick and dirty pass at changing the code you posted in this thread. func editTransaction(dateString: String, alertTitle: String, actionTitle: String, placeholderText: String, placeholderAmount: String, callback: @escaping (_ date: String, _ tag: String, _ amount: String)-&gt;()) { var dateTextField = UITextField() var tagTextField = UITextField() var amountTextField = UITextField() let alert = UIAlertController(title: alertTitle, message: "", preferredStyle: .alert) let action = UIAlertAction(title: actionTitle, style: .default) {(action) in callback(dateTextField.text!, tagTextField.text!, amountTextField.text!) } alert.addTextField {(alertTextField) in alertTextField.placeholder = dateString dateTextField = alertTextField } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderText tagTextField = alertTextField } alert.addTextField {(alertTextField) in alertTextField.placeholder = placeholderAmount amountTextField = alertTextField } alert.addAction(action) present(alert, animated: true, completion: nil) } This code takes in a callback block that expects 3 strings returned to it, and the callback is called after the user touches the action. It would be called like this: editTransaction(dateString: "", alertTitle: "", actionTitle: "", placeholderText: "", placeholderAmount: "") { (date, tag, amount) in print("\(date), \(tag), \(amount)") } 
Thank you /u/ElectricNudibranch, Looks like it was the X/Y coordinates. I can't believe how much time I stared at this (periodically over the last few days) and never saw that. I just changed the types in my struct from String to Double and it works now. I did try with: var location: [[String:Double]] that didn't work, but var location: [String:Double] ...did work.
https://developer.apple.com/documentation/swift print: https://developer.apple.com/documentation/swift/1541053-print swap: https://developer.apple.com/documentation/swift/1540890-swap
You might want to give [quicktype](https://app.quicktype.io/#l=swift) a try. Here are the types it produces for your JSON: ``` struct UTLocation: Codable { let result: Result let status: Int } struct Result: Codable { let location: Location let score: Int let locator, matchAddress, inputAddress, standardizedAddress: String let addressGrid: String } struct Location: Codable { let x, y: Double } ``` It will also generate code for encoding and decoding, so all you'd have to do is call one method.
Thanks, that will definitely come in handy as I need to use data from my first call to make a subsequent call to a different service hosted by the same source. I'm sure this will speed things up for the next call.
Cheers!
Awesome! Sounds good
The “ page view” is just a standard UIView. The controller holds the indicator and the behaviors. 
Turns out, I had it all correct except for the type of two of the elements, which I just overlooked. Is there a way that you could recommended that I could have debugged my problem? I feel that the error provided didn’t really help and I searched for all kinds of ways to figure out which element (or the whole thing) was the problem. 
Thanks for taking the time to explain it to me, but somethings still not clicking. Maybe I’m just not understanding why the behaviors in a collection view can be controlled in a viewcontroller but the behaviors in a page view can’t.
Collection views cannot be controlled in a view controller unless that viewController conforms to the collectionViewDelegate therefore actually becoming a collectionViewController. You can make a viewController work with pageViews by implementing the pageViewDelegate method. These allow for default behaviors for what Apple engineers think are what you as a developer would want but you can instead create your own with different behaviors if you prefer. Nonetheless, a viewController conforming to the page view delegate methods will be able to control an array of uiviews. 
Thanks! That helped a lot, I understand what you meant about the array of uiviews now. I really appreciate it!
If you're on a Mac using Xcode you can go to Xcode's Help menu -&gt; Developer Documentation. The documentation window has a search bar at the top you can search those functions with. If you show the left-hand side navigator (make sure it's set to "Swift" at the top), you can get a table of contents of sort for all the Apple APIs. Under the top section "App Frameworks" you'll find Foundation and Swift Standard Library.
Big Nerd Ranch is my goto. Here's there [Book Page](https://www.bignerdranch.com/books/).
1. According to the doc, BT queries can take a while. 2. Have you made your devices discoverable? By default they are not.
Make it child of another node and use parent node as pivot and transformation proxy.
easier to use a stackview/scrollview combo these days, depending on the number of controllers
Give an example please. 
 let boxGeometry = SCNBox(width: 1, height: 1, length: 1, chamferRadius: 0) let boxAxis = SCNNode(geometry: boxGeometry) // This will rotate around is center boxAxis.runAction(SCNAction.repeatForever(SCNAction.rotateBy(x: 0, y: 2, z: 0, duration: 1))) scene.rootNode.addChildNode(boxAxis) let sphereGeometryNode = SCNNode(geometry: SCNSphere(radius: 1)) // Additional container node to use let sphereAxis = SCNNode() sphereAxis.addChildNode(sphereGeometryNode) // place your axis node sphereAxis.position = SCNVector3(0, 0, 0) // place your geometry node relative to your axis sphereGeometryNode.position = SCNVector3(2, 0, 0) sphereAxis.runAction(SCNAction.repeatForever(SCNAction.rotateBy(x: 0, y: 2, z: 0, duration: 1))) scene.rootNode.addChildNode(sphereAxis)
I'm missing entries like `Array&lt;Element&gt;` where `Element: Hashable` - I'd expect those types to conform to `Hashable`, too. Footnote 2 isn't entirely correct I think - surely, an Array of optionals where the type wrapped by the optional (i.e. `Array&lt;Optional&lt;T&gt;&gt; where T: Equatable` is `Equatable`, too. If `T` is not equatable, neither is the array of optionals of `T`. The point about enums with associated values should get a Footnote, too - in Swift 4.1, enums with associated values will get automatic support for Equatable and Hashable, but through opt-in instead of by default (https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-evolution/.../**0185-synthesize-equatable-hashable.md** (master → 25ec303)](https://github.com/apple/swift-evolution/blob/25ec3030b7b656e5d7df7c150ab6f53723cdc0a2/proposals/0185-synthesize-equatable-hashable.md) ---- 
&gt; surely, an Array of optionals where the type wrapped by the optional ... is Equatable too That's what I assumed as well but wasn't able to get Equatable behaviour in a playground using `[Int?]`
I tested these in the Swift Playground in Xcode 9.2. &gt; I'm missing entries like `Array&lt;Element&gt; where Element: Hashable` - I'd expect those types to conform to Hashable, too. 1) Arrays with Hashable Elements do NOT get free Hashable conformance. You can't even add Hashable conformance with an extension (that is part of the SE-0143 proposal). One can add a `var hashValue: Int` to an `Array&lt;Element: Hashable&gt;`, but the compiler won't see it as Hashable. One could get the hashValue property but you can't use those Arrays in a Set or Dictionary. &gt; Footnote 2 isn't entirely correct I think - surely, an Array of optionals where the type wrapped by the optional (i.e. `Array&lt;Optional&lt;T&gt;&gt; where T: Equatable` is Equatable, too. If T is not equatable, neither is the array of optionals of T. 2) In Playgrounds one can't get Equality conformance for two Arrays of optionals. You can make a `static ==` function that will work but the compiler won't see that type as conforming to Equality. IE: one can NOT use the easier `anOptionalArray.contains()`, one must use `anOptionalArray.contains(where:)` which requires passing in your own function for checking containment. &gt; The point about enums with associated values should get a Footnote, too - in Swift 4.1, enums with associated values will get automatic support for Equatable and Hashable, but through opt-in instead of by default 3) Thanks for the info on [SE-0185](https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md)! I've updated the table. 
I tested these in the Swift Playground in Xcode 9.2. &gt; I'm missing entries like `Array&lt;Element&gt; where Element: Hashable` - I'd expect those types to conform to Hashable, too. 1) Arrays with Hashable Elements do NOT get free Hashable conformance. You can't even add Hashable conformance with an extension (that is part of the SE-0143 proposal). One can add a `var hashValue: Int` to an `Array&lt;Element: Hashable&gt;`, but the compiler won't see it as Hashable. One could get the hashValue property but you can't use those Arrays in a Set or Dictionary. &gt; Footnote 2 isn't entirely correct I think - surely, an Array of optionals where the type wrapped by the optional (i.e. Array&lt;Optional&lt;T&gt;&gt; where T: Equatable is Equatable, too. If T is not equatable, neither is the array of optionals of T. 2) In Playgrounds one can't get Equality conformance for two Arrays of optionals. You can make a `static ==` function that will work but the compiler won't see that type as conforming to Equality. IE: one can NOT use the easier `anOptionalArray.contains()`, one must use `anOptionalArray.contains(where:)` which requires passing in your own function for checking containment. &gt; The point about enums with associated values should get a Footnote, too - in Swift 4.1, enums with associated values will get automatic support for Equatable and Hashable, but through opt-in instead of by default 3) Thanks for the info on [SE-0185](https://github.com/apple/swift-evolution/blob/master/proposals/0185-synthesize-equatable-hashable.md)! I've updated the table. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-evolution/.../**0185-synthesize-equatable-hashable.md** (master → 25ec303)](https://github.com/apple/swift-evolution/blob/25ec3030b7b656e5d7df7c150ab6f53723cdc0a2/proposals/0185-synthesize-equatable-hashable.md) ---- 
Thanks! This is what I needed to refresh my Swift knowledge. 
Ah, I think I misunderstood your table a little bit, I thought this was already including conditional conformances. I still don't quite get it, because without conditional conformances, Array, Set and Optional don't conform to Equatable, they just have an implementation for `==`.
First off- the table columns are not right on my iPad (in Reddit app). I made this on my Mac. So I think I’m finding out that Markdown tables in Reddit might show different layouts on different platforms. The two rows under “enum” should be blank (maybe that’s what’s wrong? First column shouldn’t have blanks?). The table is intended to show where you get free conformance to a protocol. That is, the compiler both implements the ‘==‘ or ‘hashValue’ functions for you, and the compiler understands that type is Equatable or Hashable. At this time, one can add functions (like ‘==‘) to generic types with constraints; but one cannot make the constrained generic type conform to the protocol. IE: I can write an ‘==‘ function to test equality in two [Int?] array's, but the compiler won't see the type [Int?] as Equatable. If I make two [Int] array’s, I get the ‘==‘ function free and Array of Ints is Equatable to the compiler.
There's a difference between conforming to the `Equatable` protocol and having the an implementation for `==`. Currently, Array is never `Equatable`, but it does provide an implementation for `==` if the elements are `Equatable`. You can easily verify this: create a function `func foo&lt;T&gt;(bar: T) where T: Equatable { }` and call it with, for example, an Int array: `foo(bar: [1])`. You'll get a compiler error: "Argument type '[Int]' does not conform to expected type 'Equatable'".
Glad I could help :) 
When I debug web services basically what I do is if an error is thrown I comment out everything and just start adding parameters one at a time until I find the culprit. 
Wish you the best
Exactly this. Lately, I subclass UIStackView instead of UIView. This makes it very easy to lay out parts of a custom view. 
Added to favorites and looking forward to see the product! Good luck
Thank you! I was under the impression they were documented all in the same "category" a la Python.
I 100% agree. I was more-or-less just trying to explain that one point. I do agree with you though. I see too many new programmers get trapped into their intro udemy courses which neglect any architecture. The courses I have seen all jam everything into one controller which eventually becomes habit for the new learners. 
Good luck! I'm extremely excited to see the outcome and your discoveries.
Thanks for your support! I’ll switch to .com soon too 😃
Thank you very much! I’m super excited to share my articles with you 😊 
Hacking with swift has “Pro Swift”. Ray Wenderlich also has courses that get down and dirty. Most importantly you should just keep building stuff that challenges you which in turn requires you to seek out the non beginner concepts. 
Pivot is in world space IIRC
You've already subclassed UIButton which itself derives from UIView. So MyButton is a UIButton which is also a UIView. MyButton can reference its own view through self.view. Unless your button contains another button the IB reference to 'view' is unnecessary. Also if you really mean to have a button inside another one you might want to call the internal one something other than 'view' (like 'insideButton') so it doesn't collide with an existing property name. Finally, you usually don't need to subclass a standard control unless you want to override some of its behavior (like add custom drawing or touch behavior) and reuse it in a number of places.
The free 'App Development with Swift' book provided by Apple takes you through some of the basics of swift and how it applies to creating an App. It will show you many common practices used in iOS development, so I think it's a good place to start. [Hacking with Swift](https://www.hackingwithswift.com/read) also has some free tutorials.
Thanks, but If I try to reference with self.view Xcode complains: Value of type 'MyButton' has no member 'view'
There's a couple of books from Apple. [Intro to App Development with Swift](https://itunes.apple.com/us/book/intro-to-app-development-with-swift/id1118575552?mt=11) [App Development with Swift](https://itunes.apple.com/us/book/app-development-with-swift/id1219117996?mt=11)
If you look at the docs UIButton derives from UIControl which is based on UIView. All properties and methods of the base classes are available to derived classes: https://developer.apple.com/documentation/uikit/uibutton#relationships You might have cross-referencing issues because of your outlets in IB. Suggest you go into IB and remove all outlets and connections, maybe even delete the control and recreate it, then clean the project, restart xcode and try again. Sometimes the indexing gets confused. Cleaning and rebuilding helps fix things up.
I haven't read any but I believe [objc.io](https://www.objc.io) is another resource that has books covering advanced topics.
Yeah, did remove the outlets. I'll try recreating it from scratch, cheers.
It’s not your fault, that’s just how MPMusicPlayerController is. If you have no DRM files you can always use AVPlayer, which doesn’t have this issue. 
[App Development with Swift](https://itunes.apple.com/ca/book/app-development-with-swift/id1219117996?mt=11) The first 50 pages are an introduction to the Swift language, the remaining 850+ pages dive into app development.
I imagine most people's music library are like mine which is a combination of DRM and non DRM. The applicationPlayer seems to have fixed the lag so far. I did find this SO post answer let itemUrl = targetMPMediaItem?.value(forProperty: MPMediaItemPropertyAssetURL) as? URL if itemUrl != nil { let theAsset = AVAsset(url: itemUrl!) if theAsset.hasProtectedContent { //Asset is protected //Must be played only via MPPlayer } else { //Asset is not protected //Can be played both via AVPlayer &amp; MPPlayer\ } } else { //probably the asset is not avilable offline //Must be played only via MPPlayer } or if #available(iOS 9.2, *) { if (targetMPMediaItem?.hasProtectedAsset)! { //asset is protected //Must be played only via MPMusicPlayer } else { //asset is not protected //Can be played both via AVPlayer &amp; MPMusicPlayer } } else { //Fallback on earlier versions //Probably use the method explained earlier } This answer found here https://stackoverflow.com/questions/5571036/how-to-detect-if-an-mpmediaitem-represents-a-drm-protected-audio-track-on-ios
So, I've looked up a few tutorials on this, everybody seems to creates the outlet to reference the view in the window, so I don't think this is the problem.
Yes, `let` and `var` are actually both variables in Swift. This is confusing at first since `var` is short for `variable`. You use `let` to create an *immutable* variable (cannot be changed later), and you use `var` to create a *mutable* variable (can be changed later).
If you are completely new to coding in general, it might be a good idea to step away from learning app development and focus on learning programming fundamentals first, like variables, types, conditionals, control flow, and loops. Then more complex topics like functions, closures, structs, classes, objects, and the MVC design pattern. Once you've got the basics of that down, you can start learning how to make some iOS apps, and start learning more advanced Swift features like closures, enums, value/reference semantics, protocols, and generics. If you already know some other programming language like Javascript, it's possible to learn Swift and iOS app development at the same time. But for people learning Swift as their first programming language, it's not very possible to also learn iOS app development at the same time in my opinion. You could follow tutorials that show you step-by-step how to build an app, but you won't have the foundational knowledge to understand what you're doing, so you won't learn a whole lot. You can still build some really cool things just with Swift though. A book that I would recommend for learning Swift programming is "Swift Programming: The Big Nerd Ranch Guide".
What should I do then?
Update: they say it's a scrubbing of a rendered animation... 
Wow this one looks awesome thanks for sharing it! 
Raywenderlich.com has a lot of amazing tutorials if you are interested in that sort of thing! Most of the tutorials are free but they do sell rather good ebooks too!
The book "[Swift Programming: The Big Nerd Ranch Guide](https://www.amazon.com/Swift-Programming-Ranch-Guide-Guides/dp/013461061X/ref=sr_1_1?ie=UTF8&amp;qid=1516740676&amp;sr=8-1)" is a good one. It teaches you how to write Swift code in Xcode, so you still familiarize yourself with Xcode, but not mobile app development itself. The book is for Swift 3 though (the current version of Swift is 4), so you might have to download Xcode 8 instead of Xcode 9. (There isn't a big difference between Swift 3 and 4.) "[Swift Apprentice Third Edition: Beginning Programming with Swift 4](https://www.amazon.com/Swift-Apprentice-Third-Beginning-Programming/dp/1942878435/ref=sr_1_7?ie=UTF8&amp;qid=1516740572&amp;sr=8-7)" is probably a really good one, and it's for Swift 4. I'm sure there are good online courses out there too, but I don't have any recommendations.
I'm learning also, but I have a bit of background in coding (and was still shocked with how quickly the iBook "The Swift Programming Language" jumped into harder concepts). Nonetheless, you might look into the Playgrounds app. It has a companion podcast/course called "Swift Playgrounds: Learn to Code 1 &amp; 2" which *really* starts from the ground up. 
Hello, I have a quick question. I wanted to try filtering out all the songs by the the current artist. I used func getSongsWithCurrentArtistFor(item: MPMediaItem) -&gt; MPMediaQuery { let artistFilter = MPMediaPropertyPredicate(value: item.artist, forProperty: MPMediaItemPropertyArtist, comparisonType: MPMediaPredicateComparison.equalTo) let predicates: Set&lt;MPMediaPropertyPredicate&gt; = [artistFilter] let query = MPMediaQuery(filterPredicates: predicates) return query } I am reading the Apple Docs and I am trying to use func removeFilterPredicate(MPMediaPredicate) however I am a little stuck. 
The problem is the code you're using is designed for 'container' views. Meaning it's derived from a UIView and also contains other subviews. Since you're directly subclassing UIButton then MyButton itself is a view. So to solve the 'no view' error when referencing self.view all you have to do is reference 'self' i.e. instead of self.view.frame you would reference self.frame in a subclass method. But that will cause you a different problem in the loadViewFromNib assignment. Since MyButton is a view, the line: view = loadViewFromNib() as! UIButton! would have to become self = loadViewFromNib() as! UIButton! But self is immutable so you can't assign another view to it. But you can set the bounds properly and addSubview the returned view to self. A simpler solution may be to wrap a UIButton inside a UIView, depending on what you're trying to do.
 Thanks for pointing that out! When testing in Playgrounds I thought I was accessing the generic functions that work with Equality / Hashable. Now I don't know if the function it pulls were from a different protocol implementation or a static type implementation or what. So this is still confusing to me. So questions for anyone on the thread: 1) Is there a way to directly test conformance to a protocol that has an associated type requirement? (without building a function?). One cannot use `is` and `as` operators (get error "protocol 'Equatable' can only be used as a generic constraint because it has Self or associated type requirements"). 2) Any easy way (easy like option-clicking a type or a quick print()) to find out what standard library function the compiler chooses for a particular type when there's protocol and static implentations of the same function names?
What that means is they’re basically playing a video and scrubbing through that like you would through a video, yet instead you use a pageview to do so :)
this: https://www.bignerdranch.com/books/ios-programming/
[start here](https://m.youtube.com/playlist?list=PL84A56BC7F4A1F852)
You can also get help inside Xcode: open the Utilities pane on the right side. Choose “Show Quick Help Inspector”. Then in the source editor, place the text cursor on the function name print or swap, help shows up on the right. 
I think we need more information. Have you done any object-oriented programming before and in what language? If you don't have some prior object-oriented programming experience, I'd follow /u/eugeniu/ 's advice on this [other thread](https://www.reddit.com/r/swift/comments/7sg86v/new_learner_need_advicehelp/):
Yes. I'm familiar with JavaScript 
I’ll let you know when i get something. Thanks for your support😊 
Sounds like it's your fault that your app looks horrible, not Apple's.
Does this still work for you? I'm now receiving "SSLHandshake: Received fatal alert: unknown_ca"
O'Reilley books. iOS programming
Shameless plug here but I happened to blog about this the other day if anyone wants an alternate read: https://trevore.com/post/the-self-conundrum/
&gt; Lottie framework https://github.com/airbnb/lottie-ios
There's quite a bit of freedom in how you make your app look, it's kind of an issue of artistic design. You're asking for "something that is easy to work with". We don't have any idea what app you're working on, but I'd start by looking at some of the designs of some common apps. Here's a few tutorials that build clones of popular apps. https://www.youtube.com/channel/UCuP2vJ6kRutQBfRmdcI92mA 
How do I bridge it? I did #import &lt;CommonCrypto/CommonCrypto.h&gt; at the beginning of my code and it says that its not a module.
You need to create a bridging header and import it there. Easiest way to get one is to add an Objective-C file to the project, say yes to the "Create a Bridging Header" prompt, and then delete the `.m` and `.h` files.
Apple’s defaults are just that — defaults. If every app used them, you would hate using your phone. The key fact is that they’re modular enough for you to insert your own design while retaining the great default *behavior* of the built in components. So, you need to come up with a good design.
Wow thanks! Can you link some Swift documentation to it? I can't find any.
Good write-up. And it got me to rewatch the [WWDC 2015 Krusty talk](https://youtu.be/g2LwFZatfTI) again. That video is mandatory watching for anyone on this sub.
if you use FireStore, you can probably assess the location values via GeoPoint. Because the value types are the same (`Double is CLLocationDegrees`), you could directly initialize as gestapo suggested. https://firebase.google.com/docs/reference/swift/firebasefirestore/api/reference/Classes/GeoPoint
Lottie was the most popular guess when this tweet first went around, but it isn’t listed in Waze’s licenses page so that’s most probably not true. My guess would be it’s SceneKit. Seems perfect for the problem at hand.
Good one. I think Classes and Closures would make it more complete? Although, you'll never run out things to put.
I'm looking for a way to implement this into my own app. Any help and tips would be very appreciated. What components to use, what frameworks to use (if any) etc.
Thanks! 
&gt; Variables "Constants" might be a better title. &gt; Calling a functions Drop the s at the end &gt; Creating a struct &gt; Creating an object from a struct I don't think that's the correct way to say that. The first should be "declaring a struct" and the second should be "creating a struct" or "instantiating a struct"
It can be done without problems with a SceneKit scene, and use timing with a scrolling gesture. I have done it with SpriteKit. As orher people said, the hard part is the whole assets and composition.
Awesome, thank you! :D
You might find [Design + Code](https://designcode.io/) is a a great introduction to UI / UX design that also provides some guidance in implementing it in Swift. Some good rules of thumb that should be easy to pick out and run through quickly, and then able to jump back in for more detail if necessary.
Thanks for the suggestions! Yeah, the language for structs you suggest sounds a lot more natural. Also, I don't know why I had it in my head this whole time that the preferred terminology was "immutable variable" and "mutable variable". Looks like it's "constant" and "variable" instead, so I fixed that too. 
Thanks man!
Classes would be one of the first things I would add if I had space. Closures is probably out of scope because although they're super interesting, it's not something the average person just getting started in iOS development is going to bother with. Although in Swift, functions are a special type of closures, so technically it does have closures! :)
After looking at this more, I realized I was wrong. The preferred terminology is "constants" and "variables" instead of "immutable variables" and "mutable variables", so you had it right the first time. I'm not sure how I had that wrong. Sorry about that!
People (me included) use the word "variable" loosely to also include constants. So to be 100% clear you might want "constant" and "mutable variable". That is at least unambiguous.
Brilliant, thanks! 
I honestly think you need to put the Guard statement in there, because it's SUCH a powerful tool in Swift!!!
Thank you! I will look into this. 
Ok Thanks! 
Yeah. I always get confused with guard. It's just a reverse If right?
Sorry I know I’m not the one who posted this but I have the same issue but when I did it I did use the .xcworkspace file and it still says “no such module”. Any more ideas? 
There's a little more to it than that. It is like the reverse of `if`: if the conditional is not met, then the code inside `else` will execute. However, `guard` has an extra requirement: the code inside the `else` “must transfer control to exit the code block in which the guard statement appears”. From ["Control Flow"](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID120) in "The Swift Programming Language": &gt; If that condition is not met, the code inside the else branch is executed. That branch must transfer control to exit the code block in which the guard statement appears. It can do this with a control transfer statement such as return, break, continue, or throw, or it can call a function or method that doesn’t return, such as fatalError(_:file:line:). So a function like this would be valid: func someFunc(someBool: Bool) { guard someBool else { print("Oh no someBool is false") return } print("someBool is true") } But this would be an **invalid** function: func someFunc(someBool: Bool) { guard someBool else { print("Oh no someBool is false") } print("someBool is true") } The compiler would not allow this code to be compiled, because it's possible that code inside the `else` could execute, *and* the code after the `else` could execute. Maybe I should make a page on iOS Ref specifically for control flow...
This pops up randomly for me as well. Same with Realm. The project builds fine though and everything works as expected.
"they" And it could totally be pre-rendered with some Core Animation controlled overlays.
Dammit I was hoping for Xcode 9.3 
As mentioned in another comment, if you used cocoapods make sure you are working on the xcworkspace file and not the .xcodeproject file. After installing new pods I always like to build and clean to make sure it complies. Also makre sure to import the library/framework on the file you are working with it. In this case 'import Alamofire'.
There are some [interesting changes in Swift 4.1](https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1), so I wrote up a brief summary.
Also check that timer executed in the main thread. All UI needs to be updated on main thread. 
Build. Quit XCode. Reopen .xcworkspace. Basically it should build just fine, but that error message still lingers on for some reason.
For my app, it now takes much longer to compile in release mode. Anyone else have this problem?
Nice one 
So true... OP this is best advice that you can get here.
You’re correct that it’s because of the default parameters of print. Also there are actually two print functions, which may further complicate things. You’ll have to use a closure.
It means you have a serious bug. What’s the error it gives?
(/u/neoneye funny how we both have our oold handles as user names here ;) )
Yes. Indeed. They ooold nicknames are great.
Anyone encountering much longer compile times for release builds?
https://www.youtube.com/playlist?list=PL0dzCUj1L5JEfHqwjBV0XFb9qx9cGXwkq You can skip the Firebase stuff, I’ve used this playlist to piece together my implementation. 
https://i.imgur.com/qYCgXea.png
Ok thanks for your answer.
&gt;You can skip the Firebase stuff, I’ve used this playlist to piece together my implementation. Can you explain the "skip the Firebase" part? Do you use something in place of Firebase, or do you just not need something like Firebase for a chat app? I did see a post a while back where someone used all cloud to do a chat type app, is that what you're thinking about? 
9.3 now recommends another whole module optimization setting for Release builds. Perhaps it got turned on? Check your settings. You should be using whole module anyway, but it does slow things down. 
It's great that Equatable and Hashable can now have those methods synthesized. We are currently successfully using Sourcery to auto-generate the code for us but great to see it supported out of the box. 
i am not planning to use firebase, in fact i read that it was used for push notifications, which requires a paid developper account (which we dont have here at school) so yeah, i was looking for some sort of chat ui specific tutorial! Thanks a lot for the link, i will do it!
What were you doing when this occurred? I seem to sometimes run into breakpoints that appear to be set inside of private frameworks when I work with audio/video stuff. 
Perhaps I am not understanding correctly but couldn't you use a for loop? That looks like an array of Int . So for each in theArray { print(each) }
Uhhh. The link you have in the post is wrong I think.
The problem goes away when I change the breakpoint to only catch Objective-C exceptions. I'm not sure why this occurs. Do you know if this will prevent my app from being accepted for beta app review and eventually the app store?
It shouldn’t, unless this is a symptom of something else that would. 
https://www.natashatherobot.com/xcode-debugging-trick/
HODL
It's for a work still in progress. Think of a 3D scanner. Imagine a machine that holds multiple iOS devices, all at precise angles, where the accelerometer allows the devices to auto-adjust, each with its part of the interface.
Firebase offers a lot more than push notifications although it’s really good for that. I’m assuming the reason they used firebase in the chat app was for user authentication and the real-time database (you set an observer on the database and everyone’s chat gets updated in real time). The websockets you’re using will be used in place of that. Sorry I don’t have a specific tutorial for chat UI but there’s gotta be tons of resources out there a google search away. 
Still not ready.
When i use the command po $arg1, the output is just : (lldb) po $arg1 105827995288088 What does this mean?
Thanks for the help everyone. I've been opening the .xcworkspace and have even built it, but it still doesn't work.
This is not very satisfying, but you could do this: let p:(Int) -&gt; Void = { print($0) } [1,2,3].forEach( p ) 
I went through Udemy's "iOS 11 &amp; Swift 4 - The Complete iOS App Development Bootcamp" which has you making different apps, then jumped straight into making my own app. When I get stuck I just google. It's worked really well so far and I've picked stuff up rapidly. The important part is not to just do tutorials. You have to start doing your own projects.
This is a UIPageViewController, https://developer.apple.com/documentation/uikit/uipageviewcontroller
Breakpoints are removed for the App Store build, I fully expect.
You don't have to use the whole screen, you can make the controller with the desired width and height.
It might be better if you made a video of what you have and how it's done. A table view and collection view can do quite a bit, it's mainly a difference of what you get "out of the box"... collection view has the greatest flex, but there's also the issue of what good would it do for what you're doing. I'm thinking your system is like one of those song pickers with the album covers on a swiper that previews the next/last. IDK that a table view has anything specific that would do state control of each cell. I'm thinking you'd be writing that code custom where you control the state management of each one. Table view and collection view really just offer the framework, don't think they have any state control.
Yeah you’re not far off! Essentially I need a handful of videos to be loaded simultaneously, such that a user can swipe back and forth between them. I’ve managed to achieve this so far, I was just wondering if there was a better way, but as it’s a finite number of finite length videos maybe I’m better to get the loading out the way initially then have them all sitting ready for viewing? 
Think I'd go with the container view, it seems safer. But you should experiment and decide for yourself. :)
If it's a chat app, it would make the best sense to go with tableview. You can use collection view to modify it to look like a tableview but that's one more thing to do. In terms of UI, you set up constraints differently, depending who sens a message. I recommend you to watch the youtuve series mentioned above to get the general idea of what needs to be done but it lacks the organization like he seems to put everything into a single view controller which you shouldnt do. 
From what you say, the difference that I would see would be the reuse/queue system. You can write that yourself, or use the stock one in collection view. However, if performance is your concern, as well as state control (start/stop/restart) you probably should look at caching and multi-threading. The state control might be easiest with a collection view, I haven't tried it, but I'm thinking an array with markers and having only one being active. I've seen some pretty good examples of caching, but it was so long ago, I have no idea where they are. I remember some of them use Core Data for caching.
I have my app doing exactly what I want (with regards to the starting and stopping etc) but with local videos, I guess when I adapt it for firebase we’ll see if it holds up! 
How would you like to see closures be incorporated in the cheatsheet? (Like what example would you like to see?)
This is purely speculative, but the language is still very young, and they are focusing on ABI stability at the moment. I believe this is one of the milestones, that is holding the langauge back, from becoming more adopted on the server-side and in general. Swift have the opportunity and ambition to make the language equally suitable for client and server side development. As I see it, only Java shares this ambition and is far more mature at this point, but they suffer from a lot of baggage. In other words, I believe the best days are ahead for Swift and behind Java. It is only a matter of time.
`.forEach(print)` is shorter, avoids the need for an arbitrary name for the temporary variable, and works better with long chained operations
I made a [Swift evolution pitch](https://forums.swift.org/t/variadic-generics-discussion/2817?u=alexanderm) for exactly this! 
See https://forums.swift.org/t/variadic-generics-discussion/2817?u=alexanderm
Is it actually failing the build? Xcode has a bad habit of not clearing errors, so it could look like you have an error when you built successfully. As an aside, this is a hugely annoying and stupid Xcode behavior every time you build a project for the first time. Of course you can't see external dependencies yet, you haven't compiled them FFS! Yet another example of Xcode's UX being shit.
####[Open-sourced **StackFlowView**](https://github.com/vladaverin24/StackFlowView) It helps building UI flow where order of the events matters. By enforcing stack behaviour for any custom views you push into it, it gives precise control over **past**, **present** and **future** state of user interaction. This, for example, can be used to build multi-step input forms where every next set of options presented to user depends on his/her previous choices. Give it a try if you wanted something like that in your projects! [**Get the code!**](https://github.com/vladaverin24/StackFlowView)
When the breakpoint hits, go to the lldb console and type `breakpoint list 1.2` it should print out enough information to show you where the breakpoint is set.
I know this is super wishful thinking but code folding doesn't happen to be back in the beta is it? (And yes I know it works kind of with the keyboard shortcuts but I miss the way it worked with the ribbon). 
Can anyone tell me why this is happening?
How about a MacPro 3.1 with a SSD? Officially they only support up to El Capitan, but they can run High Sierra flawlessly too. I use one as my daily driver and it's great!
I’d only be guessing without knowing the constraints on the stack view. If those constraints are goofy it doesn’t matter how those labels and switches are placed. 
He's showing a storyboard there's no translatesAutoresizingMaskIntoConstraints
I'm really new to all of this. Is this what you need? Fair warning, this is my first code not typed directly from an example, it's bound to be ugly. https://github.com/FuzzySideUp/iPaid.git
I can access the project but it appears you haven't pushed any code to origin / remote / github. 
Does your container view have constraints set in the view controller it’s in?
No large iOS project can use IB, it is a mess for code review and version control. Using WYSIWYG for UI is amateur hour.
&gt;No large iOS project can use IB Except they can because I’m an iOS software engineer for 1 of the big 4 banks in the US for their bank app. Huge project that takes 6-10 minutes to test. Over 1500 files and over 2,000,000 lines of code. And it has a lot of storyboards that use IB’s and also a lot of Xibs. We use Source Tree version control with many different branches and over 10 teams for a total of 50 people that commit and push into the project daily. Seems all good. 
I get these all the time, in a published widely used app, so you don't have to worry about being rejected for them. While I don't have any proof, I believe these come from UIKit as it attempts to process the storyboard. Hitting continue moves me past this breakpoint and I'm able to run and debug my app normally. Other than being a nuisance there is no harm. Typically I just don't turn on my breakpoints until after the app has launched (unless I need to debug something earlier), so I don't have to deal with the stoppage. 
This is probably the correct answer. There's nothing inherent in the view holding it to a size, so it collapses. Set it's h/w or constrain it to its superview and you'll be fine.
Find some tutorials on YouTube! That’s how I first learned some 6+ years ago. Between that and school got me at a good spot. Also check out RayWenderlich.com Not only are their books pure gold imo but they have TONs of free articles and tutorials. I haven’t tried their subscription so can’t vouch for that though. Happy coding 🙂
There's a good chance he's spinning it up, and adding it as a subview. If he did, and he forgot to set translatesAutoresizingMaskIntoConstraints to false, then you could experience something sort of like this.
Look up how to use the visual debugger and you can see why it’s not doing what you want. 
I’m sure there are both classes and in-struct-ions out there. 
App development book from Apple on iBooks is pretty great. It is free and interactive
The apple Swift documentation is pretty good to get started. [Ray Wenderlich](https://www.raywenderlich.com/143771/swift-tutorial-part-1-expressions-variables-constants) has all sorts of tutorials and helps, from beginners to advance, highly recommended. If you have experience with object oriented programming, you can check out [Stanford course](https://www.youtube.com/watch?v=71pyOB4TPRE&amp;list=PLPA-ayBrweUzGFmkT_W65z64MoGnKRZMq) which helped me greatly to get started into iOS development. Hope this helps, and happy coding.
I created a new cell, manually recreated the layout, deleted the old one and now it works. No idea what I could have done differently, I copied it as close as I could. I'm not angry I spent a good chunk of the day on this, I'm angry I spent a good chunk of the day on this and didn't learn anything... Actually that's not 100% true, I didn't even know that visual debugger thingy even existed. That will come in handy. Anyways, thanks for all the help. 
I would start with the Stanford course on iTunes U. It's free and there is a lot of good info. There is also Udemy. You can pick up most courses for $10-$15 when they run sales and they run sales about every other week. I have a bunch of them... 
Gonna try this out! If it works, you just cured my ibuprofen addiction. :) In any case, thanks so much for taking the time.
You could make `AnyStruct` an enum like so: struct A: Codable { var name: String } struct B: Codable { var age: Int } struct InvalidEncodingError: Error { } enum AnyStruct: Codable { case a(A) case b(B) public init(from decoder: Decoder) throws { if let a = try? A.init(from: decoder) { self = .a(a); } else if let b = try? B.init(from: decoder) { self = .b(b) } else { throw InvalidEncodingError() } } public func encode(to encoder: Encoder) throws { switch self { case .a(let a): try a.encode(to: encoder) case .b(let b): try b.encode(to: encoder) } } } Then you could tell what struct it stores by matching on it's case. I'm going to assume you're going to use completely different names for all of these. Especially `AnyStruct`, which sounds like a box that can hold anything that isn't a `class`or an `enum`.
I would start with using something like a phone as the "lost" thing and play with bluetooth beaconing.
This is almost certainly it. 
Ok I’ll look into beaconing
Add your constraints programmatically. Much easier. 
There are a ton of sources in the [Swift Wiki](http://www.reddit.com/r/swift/wiki/index). I really like this [Udemy course](https://www.udemy.com/ios-11-app-development-bootcamp/learn/v4/overview) with Angela Yu. 
Pretty sure they are not adding views programmatically
2. It is a fuller font and compact. And is easier to read, than the others imo. 3 feels too light and 1 wider kerning. Will the text appear as paragraphs like you have it? Cause that makes a difference. 
Missing a constraint on the left side between ‘2018’ and the left side of the view. Most likely has a width of 0 (because of this) causing the layoutting issues here.
Check out MessageKit for the UI. It’s a young project, but I’m already using it in production. https://github.com/MessageKit/MessageKit
https://www.reddit.com/r/tutor/
There are many ways to develop such view. In my company we generally use collection view with uipagecontrol to make such views
Not helpful.
Oh hahaha I’m making an app in swift and xcode - and I was wondering which font looked the best! Sorry for the confusion :)
I know it's pretty pivotal to learn how to build UI through code but in my opinion, it's not better than via the storyboard. it can be pretty redundant since you have to run it over and over only to see how it looks. if you don't like the way it looks, you will find yourself to repeat it which won't happen if you use the interface builder. Another downside to using code for UI is it will clutter your code. like a lot which will kill the readability of your code. 
Hello! I’d be using it for all promotional, headings, text, UI and more. But I’m conflicted between these three fonts for my app, and which looks the best! Thank you :)
Thanks!
Yeah I might stick with storyboard later down the road, but I feel like everyone should still learn how to do it in code that’s why I feel like I must learn even if I only do storyboard in the future
Actually, it's not really different from using the interface builder. if you know how to do it with the interface builder, you will find it pretty easy to do it in code. If you've done it several times, you will get the general idea of how it should be done. 
Omg, so many answers from people just writing to write something. Set your constraints like this stackview - top to superview, trailing to superview yearlabel - left to superview, top to superview 
Array is a generic struct, with the generic type representing the objects being stored You need to let the compiler know what the array element is, e.g. `let resultsArray: Array&lt;String&gt;`
Make A and B conform to a protocol that inherits from Codable (say, CodableStruct) and implement it on both?. Then change the type of data to CodableStruct
Array is a generic. If you're experienced with other languages, in C++ that's a template. If you're not, basically it's a type that encompasses another type. In your case here, it should be Array&lt;Type of Object in peopleObject&gt;, or [Type of Object in peopleObject] for short, for example, Array&lt;String&gt; or [String]. We're gonna need a bit more code than that to give you an exact answer.
You should stick to code for layout. It's easier to reuse views and work in larger teams. If you stick to creating your views in loadView and keeping your controllers dumb there's no reason layout should clutter things. 
Recently had this shared with me, which makes an argument for working with code only. One of the main points is that, in their experience, purely building their interfaces with code improved their teams understanding of AppKit and UIKit -&gt; https://blog.zeplin.io/life-without-interface-builder-adbb009d2068 
This guy not only creates great UIs but has a firm grasp on even complex programming concepts. 
Only thing that I don't like about Brian is that he does not explain much why he does something. Many times he just says "Don't worry this too much now" and moves on.
I guess I have not noticed since I’ve seen all this stuff before. I more or less just watch them to see how others are learning now. 
&gt; but I feel like everyone should still learn how to do it in code that’s why I feel like I must learn even if I only do storyboard in the future NO. There's NO POINT in learning how to create the UI via code. Really, there is ZERO REASON to do it that way. It's an anti pattern, it's a horrible practice and really just bad. If your new your code will get messy even faster. If you see some guy on YouTube/Udemy/wherever doing it, it's safe to assume that he either had not enough time to do it properly or just don't know his stuff. Coding your UI also won't get you anywhere regarding a professional level. A coded UI simply doesn't fly in a team.
[See my comment from above](https://www.reddit.com/r/swift/comments/7t2plt/what_are_some_good_resources_to_learn_how_to/dt9s0xt/). I was right, those guys don't know anything: &gt; When you’re writing your views in code, it encourages you to reuse bits and pieces. On the contrary, while using Interface Builder, you find yourself copying and pasting views you built before — and you don’t even feel bad about it! What the fuck? Create a nib, create a class for it. Reuse it.
I guess that's an ideal situation for us. I guess it's more of preference than what's better or worse. I used to be a big fan of hard-code but now I prefer the other. But there are cetain situations where going with pure coding is much better than interfacr builder.
&gt; It's easier to reuse Ever heard about creating a nib? &gt; and work in larger teams Please defend this argument in a team that does have a full-time designer. 
Arrays in Swift are homogeneous, therefore you must declare the type within the Array. e.g.: Array&lt;String&gt; or even [String]
It’s a bad error message. What’s the type of `peopleObject[results]`? Did you try just 
Those merge conflicts are a killer. Deleting all storyboards tonight and rewriting them. 
use instantiateViewController. Like this DispatchQueue.main.async { let vc = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "(identifier)") as! UINavigationController self.present(vc, animated: true, completion: nil) } and before that, just give that particular storyboard an identifier to reference.
Thank you so much!! I’ll try that shortly when I get a chance!
WOW WOW great Referunces thanks a lot buddy 
thank you I started reading it ,it's good 
thank you ,seems it's great book. 
thank you, I will try to the manger pay for it😂
I haven't run into this issue using Mapbox but generic solutions like cleaning the build folder (Command+Option+Shift+K) or reinstalling the pods usually does the trick for me with errors. Did a quick search and found [this](https://github.com/facebook/facebook-sdk-swift/issues/154). Hope this helps!
Codementor.io
&gt; I find it more difficult to reuse views and theme them when using IB. Yeah well, too bad for you. Looking forward to hear from all your successful apps!
 if let theVC = self.storyboard?.instantiateViewController(withIdentifier: "storyBoardVCIdentifierHere") as? TheViewController { self.navigationController?.pushViewController(theVC, animated: true) }
This is simply bad advice. Very few large companies do their layouts with IB. It's good to know both but code is the preferred method if you plan on working in a team. 
Those Notification Center keypaths are just strings; they aren't the same as Swift 4 keypaths.
How would you use a KeyPath then? From my understanding is KeyPaths biggest benefit is being used in KVO 
Which skill level is needed to use this book properly? Is it okay to get it after I finished your Hacking with Swift?
Came here to recommend this guy, definitely a great resource. The best part is he teaches you how to recreate apps like YouTube and Twitter and I think it was really helpful in figuring out how certain things are created that before I was like "how would you create that?"
codementor.io But be warned that "affordable" means "low quality." I wouldn't want to add to my workload unless you offered a price so high that I still wouldn't take it on because I don't think I'd do well enough to earn the money.
[removed]
That sounds cool. Please post again when it’s done! 
You could implement it either way. If you want the PHP approach, you could build a Swift CGI service which would spawn a Swift process to handle a request, or you could build an Nginx or Apache plugin which did the same. Conventionally, the popular Swift server solutions (Kitura, Vapor, etc.) take the app-server approach, where you have a long-running application instance which listens for requests and serves responses.
You could probably do quite a good job at it, but for some of the harder challenges you might want to read Pro Swift first.
KVO is hideous in Swift, and best avoided.
I'm working on an encrypted chat service called CryptoChat. It uses AES and hashes messages. So far I'm working on logging in and signing up.
Probably first thing you need to do is check on the server the hash for the password it generates and compare it to the one you have. Maybe there is a mistake. Check how the data is expected. 
SpriteKit provides an easy way to detect and respond to contact between nodes. Have you looked at the documentation?
Not sure what you mean but I'll research xocde documentation when I get a chance. Thanks
I would set the current date that was reset to zero in UserDefaults. Then setup an NSTimer to fire at whatever interval to check current date vs date stored in defaults. 
Hands down the best part about Swift. The clarity of the language is an absolute blessing that desperately miss when you have to go back to working on less civilized languages such as C and C++. I've developed a tendency to try to read the code in English after focusing on iOS + Swift my first two years as a SWE. Now I no longer do Swift or iOS and try to read C++ and it's just trash.
Hey OP - I've travelled the same journey so can comment somewhat on this. I'd drop Treehouse pretty quickly. They are *awfully* slow and you seem really to slog through mud just to cover simply terrain over there. Remember, this stuff isn't going to be stuff that you don't return to over and over and over again, gaining further understanding (with further active learning) iteratively as you progress. I feel their approach is just very bogged down and you lose the forest for the trees. The main thing is get to making projects asap. I found Udemy was the best for my progression. Far from perfect but you'll come up the curve a lot quicker than just doing theory over on Treehouse. Pick one of those "Build 10 things in Swift 4 and iOS 11". Many people like Mark Price, I personally didn't like his style and would recommend s/o else. YMMV but you'll find good courses there for your next step. Next, hit up some YouTubers who will help take you up a level further. Jared Davidson (sp?); Brian Advent; and the master of them all Brian Vuong. The latter does not use storyboards but does UI programmatically; that will be a hurdle for you to overcome (or not, as you choose), but he operates at a very high level and puts out quality code. Somewhere around the Udemy course and exiting that you're going to have to build your own stuff, and hone in on specific parts of the iOS SDK you want to use. There is nothing like building your own thing to really test you. At this point, stackoverflow and google will come into their own. It is also at this point that I would consider mentoring from codementor.io for bigger issues eg: design or architecture, or a code review. Simple bugs and simple how to's on discrete problems, you should not be paying for, because it means you didn't search SO or YouTube or Google properly. I have personally struggled the most with the bigger picture stuff - particularly some tricky object design decisions, and also a bumpy grasp of design patterns that is the kind of thing where I really think of paying a mentor. But the rest I have been able to slug it out on my own.
Thanks a lot I will definitely get to that when I can. Really appreciate it. Good day
Would you guys know where to find a good course for free or not too expensive online?
I hate how Udemy pretends anything on their site ever cost more than $10. $199 my ass.
xcode bro
Slack. https://ios-developers.io
Twitter, in my experience. Used to be irc (could be still, I had to cut back on irc due to arm injuries). Back in the day the cocoadev wiki was a big one, but it and so many other communities from that time eventually died.
I’d very much doubt it...
I just finished the RayW one from Udemy, it was $10 and really covered quite a bit.
Is that actually a thing? Sounds like a good name for a chat room plugin 
There's a swift channel at Macadmins.slack.com
As Swift is a compiled language, instead of an interpreted language like PHP, in server-side Swift each application is usually compiled and will handle all of the routes itself rather than Apache/Nginx handling the route and calling the route code. (Note that in almost all instances the Swift binary will be behind something like Apache/Nginx anyway to allow the normal privileged ports (80 and 443) to be used.
I don’t agree with this at all but it’s good to see a different approach.
The model employed by Perfect for example is that the entire server is one program written in Swift and compiled to an executable, so it's running all the time and responding to requests as they come.
One solution would be to pass a block into your currency method and pass the response through that. static func currency (withLocation location:String, completion: @escaping (data: AnyObject?, error: String?) -&gt; Void) { let jsonURLString = basePath + location + basePathEnd guard let jsonURL = URL(string: jsonURLString) else { return } URLSession.shared.dataTask(with: jsonURL) { (data, response, err) in guard let data = data else { return } do { let cryptoCurrency = try JSONDecoder().decode([CryptoCurrency].self, from: data) print(cryptoCurrency[0].name, cryptoCurrency[0].price_usd) completion(cryptoCurrency, nil) } catch let jsonErr{ print("Error serializing error:", jsonErr) completion(nil, "JSON Error") } }.resume() } 
Wow thank you I totally forgot about iTunes U I’ll look into it tomorrow 😁
Thank you 🙏 I’ll have to have a look into that 😄
Shameless self promotion: I created r/macosprogramming The cocoadev wiki (mentioned by u/Catfish_Man) moved to github where you can contribute with PRs.
I know Tradingview, but it's only for ploting chart. I would like to do all computations inside my application and only plot using some charting library, which allows candlestick chart, area series, line series and annotations.
&gt; my other question is why is the json function delayed ? You're doing an asynchronous network request. The closure you pass to `URLSession.shared.dataTask` is only executed when the response is received, and that is long after your method has returned. &gt; What is the right way to make the json data accessable ? As /u/boboguitar says, pass a closure. 
You ment AppCode...xcode is crashing shit
I believe it's your calculation line at the end there is a much easier way to code this separate double from the string don't calculate them together Example: If(argument){ amountMoney.text = Double(amount) }else{ amountMoney.text = String(str1) } Don't go back and forth between string and Int and String and Double will make your life easier in my opinion 
I did that before and I still got the same reason for app rejection.
Dang - I would ask them to clarify further what they mean. I had an issue similar to this - but it was that last option I just mentioned. In most of my experiences, the review team is much better at explaining things after you get past that first automated message. Good luck!
[Is it this one?](https://github.com/cocoadev/cocoadev.github.io)
I mean [this one](https://github.com/jnozzi/cocoadev.com), but it seems yours is just as good 🙃 I offered [Joshua](https://twitter.com/JoshuaNozzi) (current maintainer) to move to [jekyllrb.com](Jekyll). His idea also was to update the content through PRs. So maybe the things will start moving soon.
I don't have the time to write the code to show you and all the source I have is from private commercial projects. Spend some time to think about what I said. See if your design needs to change or if my suggestions do not apply to your design. In short tying the view controller to the network code is a bad idea and encourages bad habits, BUT sometimes it gets the job done. In a network call, the call itself can error out or succeed. When data is returned, it can fail to parse, have incorrect data, fail in other ways. The network operation should be done within objects outside of your view controller and the view controller should be structured to call another object for the network request. That other object that performs the operation, stores a the fact that it completed somewhere, stores the result of the operation, (error or success) and if the result is a valid value, also stores it somewhere. The network operation can return the valid value in case the operation does not fail and in cased the parsed result is valid, but then, you are ignoring handling the 2 failure cases. Please reread my previous reply. I corrected the poor formatting.
[@JoshuaNozzi's latest tweet](https://i.imgur.com/GhQ9X5u.jpg) [@JoshuaNozzi on Twitter](https://twitter.com/JoshuaNozzi) - ^I ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
Generally this is handled by a delegate pattern, or a closure. Your get data method could take a closure, that closure could then inform your UI it needs to refresh.
What is it?
How do you deal with scrolling? UIScrollView?
Twitter I guess. When I’m at conferences, it seems like I’m the last macOS dev in the world, everyone is all about iOS. Even at WWDC I had a hard time finding fellow macOS devs 🤔
what "what is it"?
I would recommend adding “if case”. That’s one that people tend to get wrong. Also, switching over multiple values: “switch (x, y)”.
[removed]
Nice list bud
gesture recognizer to redraw the chart as the user drags across the view 
I'm confused as to why you have: - useless methods in your protocols - no new functionalities deriving from your protocols - methods that do nothing except perform a unknowable side effect *somewhere*
RSI?
So if I show the screen when the app is run on an iPad (by checking for HealthKit availability), this will be accepted by Apple Beta review?
I mean, yeah. I'm not going to say you're wrong about that. In these specific cases I loaded up that object for illustrative purposes.
Hi! For this post I was more concerned with the structure of the code and use of extensions to split up implementation in a single source file. The empty methods I used for illustrative purposes and I left them empty because what they might do was outside the scope of what I wanted to write about.
They’ll probably want some kind of functionality, but I really have no idea. 
*sigh* Why read when you can do? What do any of these books have for me that I haven't already figured out shipping to &gt;1 mil devices and following awesome guides like: https://www.hackingwithswift.com/ ? Seriously, who reads books to learn how to code? Get started, run into a wall, and find a solution to that wall. Climb it. Keep going, and then some day you realize you're climbing walls 100x the size of that first wall and you're like "wow I've come so far" In a way no "book" could have ever catapulted you too. 
&gt; Twitter, in my experience. hopefully none of the productive ones, twitter has been circling the drain for a while. The real quality is in private discord groups.
The problem with that logic is that it's possibly the worst way you could ever look at programming if you ever want to be more than just a person who codes. If you *only* care about coding then your logic makes sense but honestly how hard is coding really? Coding is by far the *easiest* thing you could ever do when it comes to computer science/engineering or software engineering simply because you can grind it out on google and end up with a project. I think right now most 10 year olds could figure out how to create an app. That's how easy coding is. You can run into a wall, run to google, find a solution, and then you're back in action Here's the thing: These books give you the tools to figure out solutions to problems that aren't on Google. If everything you have an issue with is something you could find on Google just by trying the search button really hard then you're not doing anything difficult at all. I'd also argue that going that route also kinda kills your critical thinking skills because instead of trying to figure out how to solve problems you just run to Google and look for someone to solve them. And even if you *don't* do that first, at least you know Google is there when you need it most. It's not a good way to go about things. There may be some books on that list that don't make sense to read if all you care about is just creating apps but at some point (hopefully) you start wanting to branch out and actually learn things that will challenge you. Like data structures and algorithms or the processes involved with creating software. Just coding can only take you so far and honestly it makes you replaceable. Understanding the material in these books makes you valuable. That's why reading is important if you really want to see how far you can go in the programming world. It's in no way shape or form required since *anyone* can just google enough to make a decent app...but I promise you there are things beyond just coding that you just can't google. There are some things you're just gonna have to create a system for and do right on the spot without any help in the specific line of work you're attempting, and for that you're gonna need to be a well read man or someone with a ton of immediate (in-person) help around you. 
&gt; programming if you ever want to be more than just a person who codes. Well, when I write a book because I cant make money from coding anymore I'm sure people like you will defend me. &gt;If you only care about coding then your logic makes sense but honestly how hard is coding really? Coding is by far the easiest thing you could ever do when it comes to computer science/engineering or software engineering simply because you can grind it out on google and end up with a project. I think right now most 10 year olds could figure out how to create an app. That's how easy coding is. You can run into a wall, run to google, find a solution, and then you're back in action Then why do you need a book? Oh wait... &gt;Here's the thing: These books give you the tools to figure out solutions to problems that aren't on Google. Lol a book didn't teach me how to figure out the various bullshit of Apple APIs. In fact, most of what I really struggled with wasn't even documented in the CoreLocation docs. But then again I've probably worked on stuff way more advanced then you have. &gt;Just coding can only take you so far and honestly it makes you replaceable. Easy there greybeard. &gt;That's why reading is important if you really want to see how far you can go in the programming world. I'm skepitcal that you know more about "the programming world" then I found out in 15 minutes on 4chan. You can talk a lot, meanwhile I'm shipping salable apps full of async code using shit you'll read about in 10 years to millions of users. So please, lecture me how I'm doing a bad job while I get paid to do one hell of a job at a scale you haven't approached. 
I don't seem to be able to use Swift 4.1; I'm stuck on 4.1. Anyone know how to fix this?
Yup. Much better than it was before I did PT and changed a lot of habits, but it’s a helluva thing :(
You sound a little insecure (and possibly a little threatened) as you’re trying your hardest to justify not reading a book. That’s probably the saddest thing I’ve seen in a while Hopefully new developers see this and realize this isn’t the kind of developer they want to be. There’s nothing wrong with trial and error *or* books. I do think there *is* something wrong with saying fuck books in general though. All I can tell you dude is if you lived the life you claim you live, and you’ve done all these successful things you want to brag about as a way to shoot me down, then you should probably know that I don’t really care about what you’ve done. You should be in a point in your life where you do things for yourself and not so you can try to brag to others about what you’ve done. You’re saying I’m inexperienced and trying to poke at my youth for all these things, but you don’t know my resume and there’s no way in hell im gonna entertain you by trying to counter brag. What I do know, and what you will hopefully understand, is that I can say I’m in a place where I don’t need to talk myself up a certain way to make others feel bad or jealous. I’m happy with my career and one day you’ll be happy too. 
If using Interface Builder in the tableview controller property inspector try unchecking "Adjust Scroll View Insets in Layout."
Extensions add functionality. If you want to add properties as well there's always good old subclassing.
Yeah I feel you... had to get a ball mouse to do anything for work, it was awful. Not to mention not being able to work out, or pick certain things up, fix anything, (my hobby is fixing computers) and so much other crap, it sucks. Hope your wrist feels better
Are these not mutually exclusive? I haven't used SPM so IDK. Is there a specific conflict? Seems like Apple/Swift wouldn't have created something that would conflict with CocoaPods. https://www.raywenderlich.com/148832/introduction-swift-package-manager
Well, from what I understand, when you use CocoaPods, you have to use the workspace file to open the project, but using SPM you have to use the .xcodeproj file, right? So I'm having trouble wrapping my head around how to use both. 
Yep, this is exactly the reason. In order to allocate memory for a type (say, reserving enough room for a `struct` on the stack), you need to know how large the type is. This is done at compile-time for efficiency: it would be rather wasteful to have to dynamically look up the size of the type every time you want to use it just for a stack allocation. So, as you mention — you either have to hunt through all modules for any and all extensions on a type in order to calculate its true size and only then compile (or recompile) them with that in mind, or you prevent this from being allowed in the first place. It *might* make sense to do the first one until you consider what happens when you dynamically link against a library not available to you at compile time which also has such an extension; to support that, you’d need to go back to runtime lookup, which is slow. Much easier to prevent it in the first place.
Not quite. With SPM, there is no requirement whatsoever to use an Xcode project, because the whole idea is that it’s independent of Xcode. The `swift package generate-xcodeproj` command exists to create an Xcode project so that you can use Xcode with SPM, but essentially all it does is call `swift build`. Because workspaces are simply containers that group together multiple projects (CocoaPods uses this to group the original projects of your dependencies with your project and build them together), they’re not mutually exclusive at all. The workspace simply takes precedence: you open it because CocoaPods needs you to have the other projects open too, and in the process that opens your project inside it. I haven’t tried the particular combination of CocoaPods and SPM, because I personally prefer Carthage. I have used Carthage and SPM together, and while it’s more complicated than using a single one of them on its own, it’s certainly doable. I would suggest you check out Carthage, and see if you can use it instead of CocoaPods for the dependencies that you were going to use CP for. You may even be able to use Carthage for the projects you were going to use SPM for (*iff* they contain Xcode projects), because the design of Carthage means that essentially any Xcode project that contains a framework is compatible with Carthage. Either way, though, Carthage is likely to play better with SPM than CocoaPods is.
Dude, be careful who you’re talking to, he mapped a lat/long in a map *just for fun*, he’s the chosen one.
I just noticed that you included links to the libraries in your post. SpreadsheetView supports Carthage, so my suggestion would be that you try using Carthage for that and SPM for the other one.
Closest thing right now is [this](https://swiftforwindows.github.io/). I wouldn't expect anything official on this until after ABI stability rolls out.
Aside from memory allocation, you need to consider that stored properties require initialisation.
I dont agree, successful problem solving comes from breaking that problem into multiple smaller and more manageable problems. Then solving them one at a time until you break through the initial problem. Aka you can usually break down an extremely complex potentially even unsolved problem down into sub problems that ARE GOOGLABLE. This is something that I have done, and continue to do time and time again. Also its naive to say that the key to success is achieved via a book. I would argue there is no one way to be the best developer. Each person has a unique way of learning and one way isnt better than the other. Hell i bet there is some prodigy out there who somehow just manages to program like a god.
&gt; twitter has been circling the drain for a while Huh? Like reddit, the quality of content on Twitter depends on who you follow. I follow a bunch of Foundation/UIKit/Swift/macOS/iOS peeps on Twitter, it's been an awesome resource just eavesdropping on convos.
Fork MongoKitten and make a pod from it.
Unfortunately, just saying, "It didn't work!" doesn't really help anyone in knowing what happened. You'll need to go back and edit your post to better explain what's going on, and say what errors you're getting. You could also just use the iOS crypto libraries directly.
Would anyone recommend the books that the $1 bundle brings?
Not really. Packt books are like courses on Udemy - most of these are trash and created to make bogus bargrains.
yup, it's all good stuff. i recommend going for the highest tier though since you want all the books as a mobile app developer(unless you're gonna pirate)
It would be awesome if you created a list with those accounts and shared it.
I've given an answer on StackOverflow. If that doesn't help out, I'd suggest halving the number of lines in your JS code file until you find a bunch of lines that work, then start adding the original lines back in until you can identify the problematic chunk.
I can see one issue with the name: One-star review: "I downloaded this app to talk about Crypto with people, but it turned out to be just another chat program!"
Basic intro books, would be nice if there were some in-depth advanced books. I guess those don't go on sale very often :D
The Noun Project is a great source for generously licensed assets. I got two icons for my app Conjugar from it. https://thenounproject.com
In order to go into a container that is implemented as a hash table, an object must be hashable.
I could the iOS crypto but I need a cross platform encryption library to encrypt and decrypt properly on both devices. I get an error saying unresolved identifier CryptLib(). Its probably because it doesn’t recognize the code in the CryptLib.h. Do you know what I should do? Even better, if you know a good cross platform encryption library, I would really appreciate it if you linked it or something.
Want to use it as a dictionary key? You’ve got to implement `Hashable`. It gives you constant time lookup whereas `Equtable` gives you linear time lookup.
What's funny is that I've had to implement it only once in the last three years of Swift development. And I think I deleted that code because I can't find it anywhere on my drive.
repost, also ref link, ayyyy
Yep. Apple removed it from the gutter. For methods/functions and types it's possible to fold and unfold using shortcuts (Option+Command+Left/Right arrow). But they completely forgot about closures. At least there's this Command+Click on the opening curly brace.
Yeah this was so annoying to figure out and to be honest the new functionality is not an improvement on the previous way to do it. It’s a lot worse.
&gt; Is that correct? If not please explain, also how does one use the Hashable in a real world situtation Hash maps and hash sets (Dictionary and Set in Swift parlance). These provide average O(1) insertion, deletion and lookup. The primary alternative is to use balanced-tree-based maps and sets, which provide average O(log n), require that the items be Comparable and have more pointer-chasing and data locality issues. Tree-based maps &amp; sets have the advantage of being ordered &amp; more suited for immutable data structures. Hash array mapped tries provide an excellent alternative for the latter case, but also require hashable items.
&gt; Two different objects (i.e. objects that are not equal) can have the same hash value, even though its unlikely. It's much more likely for hash-based data structures as they'll look for a bucket at `hash % buckets.count`.
OH MY GOD YES FINALLY COME TO PAPA 
The published app is a part of the key path. I've been in the programming business for many years and I've seen people come from all over. English majors, no degree, CS/MIS degree, etc... Self taught is a key. Here's what I would do: 1. pick a path within iOS. 2D games, 3D games, AR games, business apps, utility apps, whatever... You're in the Swift forum, so you're probably Swift games/utilities. 2. work on Swift + stock APIs. Mapkit, Core Data, UI, networking, etc... 3. work on a project as a team with people. This is what I'm doing now. Use common tools in an advanced way, version control, GitHub, etc... 4. get advanced on things like Xcode, core data, Firebase and networking... 5. get your code published so that it can be evaluated by companies. If you're interested in a quick project, I have one that I'm starting this week. It's Swift and probably extensions, open source. I don't think it'll take more than a few days work and will be published on GitHub. You'll be learning GitHub, version control, and a few stock Apple APIs. Let me know if you want in. Otherwise, just keep doing the tutorials, make the most advanced apps you can, learn all the common professional tools.
Can you use `freopen()` to redirect to a file reference? 
Never considered that, I'll try playing around with it and seeing if it does the job!
Can you use `freopen()` to redirect to a file reference? Edit: upon re-reading, I better understand your issue. You’re trying to use a console application directly via its text API. But if it’s an actual _game engine_, doesn’t it have a C API? In which case, yes, link to it directly and do exactly what you suggest in your first bullet point. The C API will be documented in one or more header files, usually in the project’s `include` directories. It can be a PITA to link to C code with Swift, though. I’ve got a WIP that does it fairly successfully, if you want a reference. As it’s a WIP I prefer not to just post it here. 
Sure I am still pretty novice to swift but please let me know the logistics of the project and if any way I can assist or just learn more. Thanks
Damn you guys should try AppCode
Link your c from objc and then use obj from swift. Easy peasy 
This has nothing to do with `Decoable` - Swift's structs do not have inheritance. If you want to do that, you'll have to use `class` instead of `struct` (and implement some initializers, probably).
I understand, but I'm asking why it's like this.
Swift strings don’t do inheritance. But you can do containment instead: struct MovieDetails { let genres: [Genre] let movie: Movie } 
It's horrible. I hate the new editor. It has half the functionality of the old one…
Lately it sounds more and more appealing haha. I just hate that the text editor doesn't behave like a native one.
Yup, that's something. I come from Linux/Windows and now Mac when I need to develop something for it. So for people with this background is really awesome, it feels always the same hahaha.
&gt; print("Your macOS is too old to run this thing, must be at least ver. 10.12") You can also use a "middle" Encoder like: PropertyListEncoder or JSONEncoder if your target is lower than macOS 10.12 or iOS10: let data = try PropertyListEncoder().encode(codableObject) let success = NSKeyedArchiver.archiveRootObject(data, toFile: path) 
Why not the keyboard shortcut?
I've just released FirebaseHelper on Cocoa Pods. It provides safe and convenient wrappers around common Firebase Database functions like get, set, delete, and increment. Please feel free to check it out at https://github.com/quanvo87/FirebaseHelper. Thanks!
Re: your edit, I sort of am. There are no include directories and I had to manually build a C++ static library from the source code and include in my own project. I can interface with it but the source code used a `main` function as its entry point. The looping function called uses a while loop that reads in from stdin. I'm thinking of altering that function somehow to somehow dynamically accept new commands but not from std input. 
The short answer is no. The long answer is you can’t fork processes on iOS, the call is there, it may even work in the sim (it’s been a while since I tried) but it errors every time you call it on device. 
According to whom ?
But AppCode has Vim emulation! (Apple broke the Xvim plugin recently by changing their plugin architecture.)
I am very much interested in what you’re explaining you will be doing. Do you think you could maybe do a few small tutorials of each step? Especially GitHub, version control, and the path you take in the design of the project from the very beginning? I’m not asking for anything major, but I’m interested in learning how to do basically what you’re doing. I’m not asking to be involved in your project, however. I am definitely not that far along yet.
&gt; Mybridge AI ranks articles based on the quality of content measured by our machine and a variety of human factors including the number of shares and minutes read. Straight from the third sentence of the article. 
PM sent.
It's alt cmd left/right I think
Extensions in Swift formalize what was a very useful ad-hoc feature in Objective-C known as "method swizzling" which allowed developers to inject their own code into a standard class. What it lets you do is add extra features to a base class like String without having the overhead of subclassing which needs to allow for one or more levels of inheritance and method dispatch. What inheritance gives you, however, is the ability to add variables and storage to a base class. In other languages if you want to add ONLY functionality the only way to do it is to subclass. Swift lets you do it with both inheritance or extensions. You use extensions when you don't need extra variables. Another area where extensions are handy is in implementing default implementations for protocols, essentially allowing protocol methods to be optional and allowing classes to be created through composition vs inheritance. So you can define a protocol Foo with methods A and B. Then define extension Foo with methods A and B (which could be just { } empty methods). Someone implementing the protocol can implement just A without having to implement B. Also if there's a protocol Foo and another one Bar the extension mechanism allows a class to adopt both protocols and only implement the parts they need without having to deal with multiple inheritance.
I tried it and unfortunately it does not work :/ Because the response object I am getting from API does not have `movie` key. So I guess structs are pretty useless as models for object from API if you want to extends them. Which I see as common use case
There are lots of ways you could solve this using structs, including writing custom decoding. But how about using just one struct instead of two where ‘genres’ is optional? 
To add onto this: comparing hash values is an optimization as opposed to calling equality functions in the case of the hash values being different. 
That's fantastic!
Not for closures. For methods/functions and types it's possible to fold and unfold using shortcuts (Option+Command+Left/Right arrow). But they completely forgot about closures. At least there's this Command+Click on the opening curly brace.
Yeah. Like I said in another comment, they left a lot out.
These robot-generated articles mysteriously always start with affiliate links to Udemy courses. 
What is the actual structure from the API?
**Hash table** In computing, a hash table (hash map) is a data structure which implements an associative array abstract data type, a structure that can map keys to values. A hash table uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ an imperfect hash function, which might cause hash collisions where the hash function generates the same index for more than one key. Such collisions must be accommodated in some way. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Thank you captain literal. I’ll be more explicit: Who the fuck is Mybridge that I should care about their opinions?
You could do this: let qrCodeProducts = appleProducts.filter { if case Barcode.qrCode(_) = $0.barcode { return true } return false } 
Oh, brilliant. Thank you. I tried doing something like this before, but I think I was using `==` instead of `=`, and it wasn’t working. That’s so useful! Thanks!
It is same but in JSON. {"id": "123", "title": "hello" } etc Or what do you mean?
Working with UITableViews is one of the first topics you learn when starting iOS development. It is one of the most understood topics and already easy to work with. What are the advantages of this? A quick look through the readme and I can’t see how it makes it easier. Maybe it’s just because I’m so familiar with tableViews already. 
Yeah, it's technically an assignment with a pattern match so that's why it uses `=` instead of `==`.
Another little trick, if you define a custom pattern matching operator: func ~=(lhs: (String) -&gt; Barcode ,rhs: Barcode) -&gt; Bool { if case .qrCode(_) = rhs { return true } return false } then you can do: let qrCodeProducts = appleProducts.filter { return Barcode.qrCode ~= $0.barcode } I don't know how to get it any more succinct than that! Maybe someone can figure out how to call the default pattern matching operator without having to define a custom one yourself.
So you have a JSON structure like this: {"id": "123", "title": "hello" } and another like this: {"id": "123", "title": "hello", genres ["One", "Two"]} And you'd like to somehow "inherit" the second structure from the first so that you only have to adhere to the new element or elements?
Exactly :) I am using two endpoints - first return little about of fields of the movie - second details from a movies and it has same keys as first but also extra ones
Updated 
Nice. Have you thought about including a `while let` loop?
It will be great to create reminder for all pattern matching cases.
you sure your if else output is correct? 
I haven't thought about that. Does `while let` have practical uses in iOS?
Looks good. I especially like the footnotes with extra data and links out to the swift-evolution entries that contain more information. As far as readability goes it might look better/read easier with a bit more white space. I added `padding-top: 50px;` to your `H3` tag and it made the groupings really stand out and kept focus on the section I was reading. Gave a good indication of when the next example was of another subsection. 
Both `if case` and `case` in a `switch` statement call `~=` in order find a match.
I ended up doing this! I just added `genres` as optional to existing Movie model :)
Great list! Does SourceTree works with github?
Well, it is not rocket science, just to save a bit of coding - for me at least :-)
I can't think of anything that's specifically iOS, but try this: Consider you're using some object `file` that reads in lines from a file. And it has a method `readLine` that outputs a `String?`: while let line = file.readLine() { print(line) // Or some other handling } The loop will finish the first time the method returns `nil`
Hi I just wanted to say thank you, this is exactly what I was trying to achieve and you nailed it with an excellent example. I really appreciate you taking the time to do this.
Hegarty mentions prerequisite courses, if I remember correctly. Start with those. 
[removed]
Yes 🙂 I’m using it more than 2 years with github. 
It is now! :)
Good catch!
I assume you need it for an iOS app. The timer is OK if your user uses the app at midnight. But most probably the app will not be active at that time. And therefore unable to update in the background. The solution I see is to store the date when you last changed the variable in your persistent storage *NSUserdefaults or a database). When the user starts the app check the stored variable and compare the date to the current one. Change it if the date is different. Keep in mind that it’s possible that more than one day will pass. In this case, you’ll probably need to append a couple of new 0s to the array. 
Strong Swift fundamentals are superrrrr important before you tackle the iOS SDK
You are already familiar with programming. I am not at all except that I started Swift few months ago. "Intro to App Development with Swift" is like super easy to go with. I guess it was aimed at kids/teens but fck it, as a 28 years old full bearded guy I enjoyed it, it was pretty nice introduction to the language and iOS programming in general. Then, "App Development with Swift". It starts with same things like what are variables and constants and stuff like that, but in more depth, just adding onto existing knowledge. You can get both books via iBooks and they are free. P.S: I just saw that you prefer watching over reading. Oh well, not going to remove this now (it may also help others), maybe you will change your mind. Good luck!
thanks for your input. I actually might choose to read but do you think I can just skip the 'Intro to App Development with Swift' and just begin reading 'app development with swift'? 
I think you will be just fine. I haven't gone through whole book yet (unit two at the moment) but it seems like you will not have any problems. Also from the book (page 3): “This course was designed for students with no prior programming experience. But if you already know something about Swift, Xcode, and iOS development, you might want to jump straight into the labs and guided projects to practice your skills.”
My pleasure! Yeah, it's pretty easy to follow things. Not too much text, all said to the point. I think I noticed a typo or two that messed my code but it's fine. :)
It depends on the size and importance of the data you want to store. You shouldn't use NSUserdefaults for something important or big. If you need a multi-device experience, you may consider some back-end solution. CloudKit for example.
I skipped Swift 3 and jumped back in with Swift 4 and found a number of things just weren't covered in tutorials. It sucks. I'm doing Udemy RayW now and I was hoping for more in depth Swift 4 stuff. What I'll suggest is this: Stick with CORE Swift. Don't get into "extras", just stick with the basics of flow control, API calls, etc... Very powerful programs can be made with basic flow control and knowing the APIs. Spend time in the playground, it's great for learning. Use the debugger to follow the flow of the code.
I’m attaching it is a URLQueryItem for an API call to receive data. Whenever I take say say HexCode = 004FY6 It attaches to the url as http://myurl.com/hex=4FY6 Then it returned a 400 error cause the url is not formatted properly 
What are we looking at here?
Oh, sorry. I thought it posted with the text. My question is: Is there a way to change the Xcode refactoring for "extract method" to place the extractedFunc below the method from which I'm extracting?
Is [this](https://www.hackingwithswift.com/example-code/wkwebview/how-to-run-javascript-on-a-wkwebview-with-evaluatejavascript) what you need? 
Cast as string and prepend?
thank you for doing this! :)
Casting as string fails
Fails as in inadequate or your implementation is lacking?
Thanks! And as mr-br1ghts1de said, SourceTree works with Github. It works with all git repositories :)
[removed]
I used to visit MacRumors forums and their programming sections daily, but now I’m on Reddit. Don’t really visit Mac specific subreddits much but may subscribe here as I’m doing Swift at my new job. Did Obj-C for 15 years before :). There aren’t much Mac-only devs anymore, far for iOS jobs available but I prefer Mac dev. More liberating.
Is this an RGB colour value hex code instead of an actual hex value integer? If so, it’s a string. Take it from input as a string, store it as a string, and append it to your URL as a string. It’s a string. (Unless you want to make an RGBCode struct so you can do arithmetic with the three components)
Excellent question
Are you planning to do any math with your hex codes? If not, you could consider just storing them as `String`s.
Good question; I don't know the answer. But you could try experimenting with Instruments to see if you can tell. Thats what I would do. 
Yes it will otherwise how it would restore the previous ViewController on back navigation? It will be cleared if you call dismiss view controller manually.
I'm a lot like you, and have a LONG way to go (I'm older and have less programming experience), just at the basics, but have found Ray Wenderlich's tutorials to be the best for me. 
Of course, that'd be possible. But than I wouldnt have just one big number label I can just swipe on
And I'd be more than happy to see the code!
Cool. I’ll create a git repo and respond with the link later this morning 
You should keep the cause close to the effect, it shouldn’t be in another function
Simply beautiful! Congratulations!
This was one of my earlier POC projects so I apologize in advance for any poor coding. It’s a pretty basic project though, the code you’ll want to take a look at is in ThermostatMainViewController.swift Touches are tracked with “touchesBegan”, “touchesMoved”, and “touchesEnded” When “touchesEnded” is called, a timer is set to call the decay function, “slowRotationToStop”. Inside “slowRotationToStop” the position is updated based on the initial velocity (I refer to it as angular rate here since the wheel is rotating) and the time since touches ended. If the calculated position change is less than a preset value, the animation completes otherwise the timer is reset and the process repeats https://github.com/jmb2k6/SmartThermostat.git 
If you don’t want to keep it in memory, set the rootViewController instead.
There's a weekly listing at the top of the page. https://www.reddit.com/r/iOSProgramming/ The other thing is DICE, CL, LinkedIn, Indeed and others. In your ad, say "no agents"
Very cool! Great work and congrats. 
If you use a UIPanGesture Recognizer, you get the velocity for free.
Very cool, thank you!
Hey, thanks for the reply, but it's not what I'm looking for. I'm hoping to do the opposite, basically. The mechanism above would be so that the browser can tell the WKWebView that something happened (and pass some data to it), which I can then pass to the application to handle. 
The code in the example is intentionally meaningless. It’s just something to illustrate the behaviour of Xcode. 
Haha I'm taking that course as well. But honestly, after reading a bit of Apple's "App Development w/ Swift" I think it's one of the best resources to learn Swift fundamentals over any other. I strongly recommend it. I know. It's a book and you might be disinclined to using this resource because videos are a lot more appealing (trust me I understand). But trust me, it teaches the fundamentals WAY better.
Thanks needed this!
I don’t know about any legal ramifications but I’m not a lawyer. My only comment is that maybe Google or Apple offer an API that suggest public locations rather than private ones. For example, you probably don’t want to drop pins on someone’s backyard or house.
You should take online lessons via Udemy, I've learned Swift 4 via Udemy, and I'm working as an iOS freelancer at the moment.
That’s awesome how long did you study before working as a freelancer? And have you considered working as an iOS developer for a business ? 
Start learning on your own, there are plenty of meet ups you can attend in New York. I’d go out there and network. You’ll learn a lot from others and it could help your job search. 
Lost me at sign in. How do I know this isn't a phishing attempt.
Everyone has a different preference for how they like to learn but a few good resources to bookmark as you start off are http://raywenderlich.com which has free online tutorials and they sell books and https://www.bignerdranch.com and https://stackoverflow.com for general help questions. These are good sites just to have around if you do a bootcamp or not. There's also a sale on some Packt books over at Humble Bundle if that helps https://www.humblebundle.com/books/mobile-app-development-books One idea to keep yourself on track during self-study is to have an app you want to build in mind. If you have a goal or problem to solve you'll have to force yourself to learn the skills needed to build it. Bonus is you have a project that can go on your résumé on completion.
Hey man I am on a similar boat. I have a degree in Computer Science but they never taught us a lick of mobile application development. BUT I did learn a lot about OOP, Data Structures etc. I am currently teaching myself iOS development with Swift. I HIGHLY RECOMMEND THIS DUDE https://www.letsbuildthatapp.com His tutorials are the best. He teaches how to programmatically create UI and explains everything SO well. I have learned more through him than I have with other folks on the tubes, Udemy and internet. I am currently taking his Instagram Firebase Course and man he blows my mind when it comes to how proficiently he writes his code. He also has a facebook group that you can be a part of which is quite nice. I also plan on taking his Core Data Course after I am done with the Instagram course. Best of luck my friend!
definitely will look into these thanks! But do you think I can dive into these without knowing to much swift to begin with? I'm thinking maybe go through the guided projects in Apple's "app development with swift" to grasp basics/fundamentals then try letsbuildthatapp unless i can dive right into it
Without going into much detail, you want to make a Pokemon Go Clone? Go ahead, the don't own the AR technology or have anything patented, just don't look exactly like the game and you're good.
yea not worried about infringing on that, more worried about lets say someone uses the app, crosses a street to get to an annotation, and then gets hit by a car because they were using the app.
Write into your terms &amp; conditions that the user cannot hold you liable for their own safety whilst using the program, and ensure that the user agrees to be cautious of their own safety during gameplay as one of the terms of use. *Disclaimer: I am not a lawyer, and this is not legal advice*
In U.S. cities, that’s a reasonable price range for low-level, junior H1-B contractors sent out through a body shop like Tek Systems. Agencies will ask more than double, especially in NYC, which is why this poster wants to get someone directly. 
Are you serious?! I’m in Buenos Aires, Argentina, and its almost impossible to find anybody willing to pay 35 USD / hour here... guess if I offer my services for that price over there it’ll be easy to land a job?
Yes serious, but the employees/contractors will only see a fraction of that. I worked with a team from Costa Rica not too long ago that was mostly remote. IIRC the contracting company itself was charging around that price for the workers, then taking a decent cut. I don’t think the problem for you would be the direct cost. It’s more the time/cost/risk to legally pay someone overseas then have support if something goes wrong or doesn’t work out. That’s why they’ll pay a premium for onsite, already holding work visas, along with guarantees of quick replacement or managerial support of folks who aren’t producing.
yea that's basically what i was thinking. thx.
It’s best that you learn either with a mentor or on your own. Boot camps can be very hit or miss and they charge an arm and a leg.
Let the variable outside of the loop. It should be a var then, so you can set it later. Or implement a completion block, and return it from a function.
How would I do that when In JSON, you need to have the variables inside the do?
Makes sense... it’s always a tricky relation(ship?) between client and developer/designer/whatever... Even more complicated when in different ends of the world. Also makes sense according to cost of living I imagine. 30USD is a lot of money here, but probably not so much over there. 
Sudo code: var jsonData: [String: Any]? do { jsonData = try! JSONSerializati.... } catch (let error) { print("Error!") } print(jsonData) //Weeeeeeee
There are several ways to go about this. One is through protocols. Initial protocol: protocol MovieProtocol: Codable { var id: Int { get } var title: String { get } } Supplemental protocol which inherits from initial: protocol MovieDetailsProtocol: MovieProtocol { var genres: [String] { get } } Conforming to initial protocol: struct Movie: MovieProtocol { let id: Int let title: String } Conforming to supplemental protocol: struct MovieDetails: MovieDetailsProtocol { let id: Int let title: String let genres: [String] } By setting up protocols you get the benefits of inheritance but can use the safety of a `struct`. Wherever you would specify that you need a certain type of object you can instead specify the protocol and use any object that adheres to it. Another alternative is to use composition and custom decoding to handle the new keys: struct Movie: Codable { let id: Int let title: String } struct MovieDetails: Codable { let movie: Movie let genres: [String] // Custom decoding, grabs the new keys and decodes them then // hands off to the old struct to handle the rest init(from decoder:Decoder) throws { let values = try decoder.container(keyedBy: CodingKeys.self) self.genres = try values.decode([String].self, forKey: CodingKeys.genres) self.movie = try Movie(from: decoder) } } Now your old struct handles the keys that were present when it was created and the new struct contains an instance of it, along with any new keys. Personally, I like the elegance of doing it the first way with protocols but the second way might have less boilerplate. You could also do all this the more traditional way and use a `class` and inheritance but then you'd have a reference type and all of the extra stuff that comes along with them.
Ray is good, but I personally don't like that a lot of their tutorials start out with a "download this starter project". When learning something new it's frustrating to be handed a almost completed solution that doesn't talk about how they got there. Don't get me wrong they do a great job most of the time, but brand new concepts are sometimes hard to grasp when they start you out on 3rd base.
for a monkey like me it's been helpful. Totally happy to learn about any other tools. It really sucks feeling so helpless when trying to learn.
I would reconsider your exceptions of your timeline. Without having prior programming experience, an irrelevant degree, and difficulty studying on your own becoming a useful developer even at a junior level would be a tall order for 6-months or whatever you consider ASAP to be. If you want to get to junior dev in a short time frame you need to code, a lot, plus self-study plus whatever tutor strategy you choose. 
Sorry I forgot to mention I have programming background so learning isn’t going to be completely from zero 
You are right about the do block but lets break down the error first. The error may sound funny at first but if we pick it apart piece-by-piece it should start to make sense. Public is a special access level and it doesn't necessarily mean that it makes the variable's value available to other files in the way you think it would. It isn't like in Javascript and attaching a value to the window object for example. The next part of the error has to do with scope. The do block is creating its own [scope](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html#//apple_ref/doc/uid/TP40014097-CH14-ID263) called a local scope. So any variables created within its curly braces are specific to just that. If you try to access them above or below the do block the complier will complain because the variable was created just inside those curlies. That is what the second part of the error about non-local scope means. Assuming token is a String you could do something like this var token: String? = nil do { // parse JSON token = postData.token } catch { // handle error } print(token) The key is the variable is create outside and above the do block first with some initial value which in this case is just nil. Then you can use it below the do block to print it when the JSON work is done. I should mention that now that the token variable has some value in it that doesn't mean its going to be seen by other files. You still probably don't want to use the public keyword here. Usually with JSON you're telling the function that called the initial parsing to also provide a callback for when it's done. Thats a pretty common way to pass some asynchronous values around. From there you can use dependency injection or even singletons if that is suitable in this case to continue passing that value around.
I appreciate the paranoia. The developer is http://krzyzanowskim.com/. You can trace some snippets of him working on it on his twitter timeline. As for how you could've found out without following him on twitter: the twitter link at the bottom of the page leads to his twitter account. 
Thanks for the really detailed response. My question is what would I need to do so that the variable can be accessed by other files?
It's amazing the world we live in, where you would be responsible if someone was stupid enough to walk into traffic and get hit by a car simply because of a Map Annotation... I feel like writing a ToS would solve most of these problems, you could probably even look at what is in the Pokémon Go ToS and build from that.
i have reported you for spam -, this is the second time you have posted this terrible course on /r/swift: https://www.reddit.com/r/swift/comments/7tct97/free_course_ios_11_swift_4_the_complete_developer/
Well, you can adjust the height and width of the pickerview. Here's an example: import UIKit class ViewController: UIViewController, UIPickerViewDataSource, UIPickerViewDelegate { let fontsize: CGFloat = 50 func numberOfComponents(in pickerView: UIPickerView) -&gt; Int { return 1 } func pickerView(_ pickerView: UIPickerView, viewForRow row: Int, forComponent component: Int, reusing view: UIView?) -&gt; UIView { let label = UILabel() label.font = UIFont.systemFont(ofSize: self.fontsize) label.text = String(describing: row) label.sizeToFit() return label } func pickerView(_ pickerView: UIPickerView, rowHeightForComponent component: Int) -&gt; CGFloat { return self.fontsize + 25 } func pickerView(_ pickerView: UIPickerView, numberOfRowsInComponent component: Int) -&gt; Int { return 10 } override func viewDidLoad() { let pickerView = UIPickerView() pickerView.translatesAutoresizingMaskIntoConstraints = false pickerView.dataSource = self pickerView.delegate = self pickerView.showsSelectionIndicator = false pickerView.layer.borderColor = UIColor.red.cgColor pickerView.layer.borderWidth = 2.0 self.view.addSubview(pickerView) let constraints = [ pickerView.centerXAnchor.constraint(equalTo: self.view.centerXAnchor), pickerView.centerYAnchor.constraint(equalTo: self.view.centerYAnchor), pickerView.heightAnchor.constraint(equalToConstant: self.fontsize + 25), pickerView.widthAnchor.constraint(equalToConstant: 100), ] self.view.addConstraints(constraints) } } 
Check the annual stack overflow survey. 
I wrote a library that was needed by our app in Objective-C. Like learning a spoken language, forcing a real life scenario on yourself is a big helper :)
**iOS 11 &amp; Swift 4 - The Complete iOS App Development Bootcamp** is probably one of the most informational classes I've ever taken. I have taken several iOS and Swift courses but none is as effective and well-organized as Angela's course. She explains each topic clearly and efficiently. Would highly recommend! [https://www.udemy.com/ios-11-app-development-bootcamp/](http://www.udemy.vip/ios-11-app-development-bootcamp)
I was already an Objective-C dev when it was released so just started to write little bits of functionality in one of our apps in swift, then full on features, then the next app we wrote we started in swift 2, never read any books or done any tutorials.
Maybe as a means of some light deterrent? The project is probably a money-loser. It is just a guess, though. 
[removed]
Apple's Swift book to start. For advanced learning this book https://www.objc.io/books/advanced-swift/
Have you had the chance to go through any of their other books/videos? I’m thinking about subscribing as objc.io is one of the very few sources I could find for more advanced topics.
I used the official Swift book from Apple – not because it's a particularly pleasant way to learn Swift (it isn't), but because it was the day Swift got announced so there wasn't much choice and it allowed me to ship a Swift app on the very first day of iOS 7. Since then I've written a lot of my own tutorials and books because I want others to have an easier time of learning than I had. So, today it's my full-time job running [Hacking with Swift](https://www.hackingwithswift.com/read/), and I think it's a pretty good way to learn :)
Thanks for sharing your code! Project looks interesting but I obviously skipped too many math courses to properly extract the concepts I need :(
I read and purchased your book I think.
You're quite right actually. Despite the fact that I want to offer the online service for free, the hosting isn't free. If I'll figure out how to get money to pay for the infrastructure this won't be necessary.
I think you mean iOS 8
No. iOS 11 had Swift 4, so 11 - 4 10 - 3 9 - 2 8 - 1 Oops. Well. Arrays start at zero…
I’m doing it now and absolutely love it. No programming experience, and she’s explaining everything clearly enough that I can understand what’s going on, and later apply it myself. It’s a really great course.
You're absolutely correct! Wow, I wrote Hacking with Swift earlier than I realized…
IIRC, I've seen Robert Half and maybe DICE have stats. Some look at the language popularity and guess by that. TBH, they're all going to be guesses, probably based on iPhone sales.
Swift Playgrounds for iPad, no kidding. Just to get the head around the basics. Then learning by doing in Xcode, one small app at a time.
I built a companion Apple Watch app for the company I was working for at the time. I shudder to think what that code looks like now but the App is still going strong. Didn't look back from there and slowly phased out doing Objective-C and use Swift completely now.
Http://learnxinyminutes.com Then I googled stuff I couldn’t figure out, mostly going off Apple’s Docs. Then I find out what optional chaining is 1 month later and need to rewrite a bunch of code.
I’m interested in their Architecture book too; think I might go for the early access as well. Not sure whether the video option is going to add much that isn’t already in the book, though. The only reason I like their videos is their style, it’s basically a pair programming session.
This is a partnered link, this means by default you'll be giving money to the '**indiekings**' partner. If you don't intend to give money to this random person visit: https://www.humblebundle.com/partner and opt out. Additionally posting partner links without disclosing that it is a partner link is a violation of Humble Bundle's partner program and you can report this partner by filling out a quick ticket here: https://support.humblebundle.com/hc/en-us/requests/new
Apple’s documents on swift aren’t too bad if you already understood cocoa / OOP
Learning a language is easy. Before I ever looked at Swift I’d already learned C, c++, VB6, Delphi, Java, C#, SQL, ObjectiveC, Python, and others. Swift took couple hours. Couple hours and a few beers. What took a while...a long while...the api. All the quirks of uitextview, uiscrollview, uitableView, and the like. I’m still learning all of that.
Not sure if an API but, interested in trying to help. 
You mean make it accessible to classes within your own module? You wouldn't have to do anything other than make it a property of the class. The default access level is `internal`, so if you don't add an access modifier at all, it will be accessible within your module by default.
In a way yes that's true they are. But don't focus too much on "files" since that isn't how a Swift app is actually constructed in the end. Our code is organized and packaged in files but in memory we're passing values and instances around. So these libraries can help teach you ways of passing values from one object instance to another, especially when there is a delay like waiting for a network request to finish. If you are finding it a tough nut to crack on how to organize your app code theres a few patterns out there that can help you. MVVM + Coordinators, MVCN, VIPER, Clean, there's so many to research and pretty easy to find on Google. They take some time to wrap your head around but it'll help (piece-by-piece) illustrate how you get one value from one part of the app to another without creating a mess.
It’s a reference guide, not a tutorial. Reference guides are important after you’ve learned something, but aren’t designed to be a structured introduction to that thing. It’s a bit like learning English by reading a dictionary – I’m sure it works, but it puts a lot of extra work on the learner.
No, what i mean is i need to make it accessible in different classes.
Congrats
Nice job. Must be a great feeling.
Implementation is finished and pending review here: https://github.com/apple/swift/pull/14048
This is how I learned from scratch as well. Start with the basics, nothing more. Work everyday even for a few minutes. Realize some days will suck, feel like you are making no progress. Just remember it is all part of the process, making the unknown known. 
No sweat! Just remember - to pass values around use callback functions (where necessary) mixed with dependency injection. That gets the majority of the job done. There's a lot more to it than that but this should get you on the right path.
I want to know why the hell we have to type "let" when the default should be simply to assume that is the case instead of "var". 
yea i looked at the Pokemon GO ToS and it is really extensive lol. so it kind of freaked me out. I agree that is ridiculous that we even have to think about this kind of stuff, lol. thanks!
But I’m tracking touchesMoved as well. I’m assuming UIPanGestureRecognizer is only triggered after a swipe completes? 
Nope! UISwipeGestureRecognizer is discrete, but UIPanGestureRecognizer is continuous. So it calls the action method every time it moves. You just have switch over the gesture's state (.began, .changed, .ended, etc.).
Why are there advertisements when clicking on the tab bar images? 
``` "Thread 1: Fatal error: Unexpectedly found nil while unwrapping an Optional value" ``` This usually means a value is nil when it was force unwrapped with `!` (If you use `!` you have to be sure it cannot be `nil`). In your case this means either `inputTextView` or `outputTextView` is not connected in your Storyboard or Xib.
?
CMD + F And replace everything in their ToS with your information :P
Because people dislike when their existing code changes meaning because unrelated code is changed. An example. You have this function: func foo() { for i in 0..&lt;10 { x = i // let is implied doSomething(x) } } What happens if someone defines a global variable x or if someone adds `var x = 1` before the loop? 
show your backtrace?
You are subclassing `UISplitViewController`, but you didn't add your subviews. Maybe change it to use a plain `UIViewController`? 
oh thats easily avoided with a warning beforehand, you can't control stupidity.
How are you creating your DetailViewController instance? When using outlets, you need to use UIStoryboard.instantiateViewControllerWithIdentifier .
I'm taking this now and would definitely recommend it as well!
Slack really is the best place, particularly as Vapor 3 is staying in beta a little longer. I've nudged Tanner on Twitter.
I haven’t noticed any? I always use safari with a content blocker, but it might be the site I use to host the videos! If that’s the case I’ll use something else in the future!
This same problem existed in AppleScript and Lingo in the 1990s. The author of Lingo simply made the "set" be optional and the only thing that the programmer needed to know what to make sure that they understood the scope of the variable they were using. This also has been solved in other languages many times. Bear with me for one second please. The reference to a global is not declared anywhere, so it can't be a global. If it was declared as a property earlier on, we would know that. Also, there should be a prefix on the name to indicate the intended scope of its use, but I digress. In other languages, with your example, the external x is not declared until it is within the for loop. When the loop exits, x would leave scope and therefore not exist. In Objective-C, we would declare x outside of the loop so that when it sees x inside the loop, that loop is within the scope of the function where x is declared. Thus, it knows to use the version declared in the higher scope, which the loop is within. So, I'll give you that. That the let is required for the declaration and prevents accidental declaration and assignment which could cause unpleasant and unintended consequences. For me, I just always kept track of what I was using and why I was as well as its scope, so didn't have to worry about that. Naming conventions also help to make it painfully obvious to me what the scope of each was. No formal prefix indicated a local. And using globals? I stayed away from that because it meant that I didn't understand how to properly scope variable instances.
You can take advantage of the rename tool (under refactoring).
I think that Xcode does this automatically in the same file. For project wide search you can rightclick the variable and select something like Show selected symbol in workspace.
Thanks!
Ease up. Gah. 
Good. Emoji icons look terrible
The link is now up and running again, you should be able to get an invite from https://vapor.team
Great achievement!
Allowing this would set a difficult precedent if an app that uses an Apple-owned emoji art becomes popular and more associated with the emoji than Apple themselves. Even though emojis are a Unicode standard, that only applies to the character addresses. The visual art is still owned by Apple, just like Android emojis arts are owned by Google (or the manufacturer, like Samsung). So while this might sound weird at first, it makes complete sense. Apple would behave the same if an app used any other Apple-owned art in their interface.
I approve of this change.
Do you disagree with their stand on privacy?
Why? How does this help app developers?
Cmd + shift + E
&gt; their stand on privacy? The main reason I have an iPhone, not some Google phone, but if Apple were genuinely serious about privacy, my shit would be encrypted with my key(s), not theirs. 
Or you could just use IBM’s sandbox that’s been out for a while https://swift.sandbox.bluemix.net/restricted#/repl
It could be but then most of the people don’t care about privacy and want Apple to handle all of this. 
Heh, I bought your Hacking with MacOS book some time ago.
Swift is ridiculously easy. If you know a C based language you should be able to understand 90% of what you read in Swift.
I was ranting. I'm just pissed Apple doesn't accept other browser engines in iOS and other ridiculous policies.
It's the best version of Xcode but unfortunately that isn't high praise. 
If you've never programmed before Swift may not be very difficult, but Apple's frameworks will be. I'd say before considering iOS/macOS dev you should spend a couple of months with something easier like Python.
Xcode 3 was the last great version in my book. Xcode 9.2 is ok, par for the course since &gt;= Xcode 4. I’m a bit ashamed to admit I use VS Code for anything *not* iOS, but it’s pretty close to my ideal IDE real now.
Glad I could help!
[removed]
This subreddit is about Swift, a cross-platform programming language. This is not /r/iOSProgramming.
Fair enough.
Timing code in this way doesn't feel like an intended use case for Timer (vs. firing at a time). I'd be interested to know what setup you use to time code with Timer though.
They aren't super active, but there is a user-run forum https://www.vaporforums.io/forum
Thank you! I’m a beginner and this is so perfect!!!
Yep, I agree. I came here to leave the same link. There is also a [duckingswiftblocksyntax](http://fuckingswiftblocksyntax.com). But I never used it, unlike the objective-c one. :)
Basically you would just update you’re completion handler to take an optional of whatever you’re dataType selection is. Then when dismissing from selection you would pass in the selected item to the handler vs. nil when nothing. Sample code would make it easier to point out exactly where to make these changes. Also, sounds like you’re putting your completion handler in the wrong place
Thanks! I hope you've been getting the free Swift updates as they are released :)
&gt; I was ranting. I'm just pissed Apple doesn't accept other browser engines in iOS and other ridiculous policies. What’s so ridiculous about not allowing third-party browser engines? It’s more of a security risk than anything else. Browser engines are super complex, and the chances of letting a security hole through are “too damn high”. The last thing you want to happen is have your iPhone hijacked by a website. Now THAT would be ridiculous. 
I'm using AppCode and Xcode together and man, Xcode sucks! It's by far the worst IDE I've ever used, it can't do simple things without crashing! Sometimes I just want to drag some folders or reorganize the projects order on my workspace and it crashes! I actually had to edit the XML to reorganize the projects... I hope Apple someday releases a good Xcode, but I don't have any hopes...
Try to checkout TinyConstraints library.
If only it weren't deprecated and still functioning normally.
Well, it does have some problems because new stuff was added into. What I complain more is the pair Xcode 9 + macOS High Sierra (which for me is the worst macOS I’ve ever worked with, by far). HS makes Xcode 9 even worse - I’m mad with Apple not for the Xcode 9 hangs and some bad UX; I’m mad because of High Sierra. Half year has passed and it still sucks. 
I like how the thumbnail shows Ted Kremenek and not OP.
Everything on your phone is, that's a start. As for backups, I'm sure it's coming. It's more complicated because then, if people lose their keys, all cloud content, which could be several years of photos etc., would be lost.
Yes. We still deploy using 8.3. Both are a disgrace but 9.2 is just awful, my font changes as I type, autocomplete quits. Compile errors on random files but builds normally etc. 
And might I say a pretty useful one. Great job.
That site is very out of date. 
“Dive right into”. 
Depends what you mean. If you don’t think great GUIs are worth anything then you are right. 
The main problem with the fuckingswiftblocksyntax site is that it has not been updated since Swift 1.0 beta 1 in 2014, so the examples are outdated and don't compile.
Oops. Looks like they want you to use this one now https://www.weheartswift.com/swift-sandbox/
I think a lot has improved, but there are enough different ways to write the same closure that it can be confusing for new programmers. And writing closure parameters in function definitions in my opinion is still pretty confusing. Especially so, given that Swift maintainers keeps changing their mind over stuff like @noescape vs @escaping and whether or not closure argument labels are part of a closure's type, which affects syntax.
It all depends how you want the UI, and how many levels of children you want to support. Typically the cleanest way would be that you tap on a parent and it pushes to another tableView of children. Or if you’re ever only going to have one set of children you can do a UIpicker, or you could adjust you’re tableView where the parents are the sections and the children are the cells
Well let me put it this way. I know how I could pass a variable into a new vc that I'm going to then present, but I don't know how I could pass a variable backwards, into a previous vc. I followed the RayWenderlich for a custom transition, and at the end of the transition class, it has the actual part where the animation takes place, and in the completion handler for that it basically says if dismissing, then run dismissCompletion. The dismissCompletion is a class variable and I set it from the vc that is presenting this transition. UIView.animate(withDuration: duration, delay: 0.0, usingSpringWithDamping: 1.0, initialSpringVelocity: 0, options: [], animations: { photoView.transform = self.presenting ? CGAffineTransform.identity : scaleTransform photoView.center = CGPoint(x: finalFrame.midX, y: finalFrame.midY) photoView.alpha = self.presenting ? 1.0 : 0.0 }) { (success) in if !self.presenting { self.dismissCompletion?() } transitionContext.completeTransition(true) } Appreciate the help, let me know if I need to provide more details.
Right on. Good tip, I need to use a content blocker. I like the article, I created my own bar view due to the needs of our project. Thanks. 
The less you try to make XCode do for you the happier you’ll be. Don’t use interface builder, don’t block edit, use refactoring with caution, things like that. The debugger is ok, does the job, but deploying to your device will fail half the time for no reason. Inspecting variables is fraught with tension. Debug the view hierarchy will fail most of the time (but amazing when it works). App code is better, but is slow to adopt the latest version changes in Swift.
Yeah, I wasn’t trying to be an asshole. 
Yep! BTW do you know a good macOS devs community?
Oh and you think Safari is fool proof? 1) Safari for iOS is probably the worst of the modern modern browsers. A simple example, as of 2018 you still can't set the height of an `&lt;iframe&gt;` which has been possible in every browser since the tag was invented (even old IE versions). 2) The fact that there is no competition for browsers in iOS allows Apple to linger on bugs and new features forever. I've reported a number of bugs and when I only got an answer from someone after a year and bugging Safari devs on Twitter. 3) The fact that the browser is coupled with the OS makes updates more difficult, so it can be argued not allowing third party browser engines makes iOS less secure.
What do you have to do to encounter these things? I never had any of these issues.
Xcode is shitty since 4.x. It is a tradition. I pray to Our Lord Saint Hexadecimal for the day Apple will buy Jetbrains, using some coins from the 270 billion they have on the bank, and give us AppCode. On the mean time, fire the leaders doing Xcode today and put Jetbrain team on command. On my prays I ask for the documentation team to be fired too, because 99% of all docs created by Apple are created by satan himself, responsible for Xcode and iTunes Connect too.
It would be something like Title Parent SubContent SubContent ... It needs to be shown at load so gotta skip the expandable option. Some parents will have 0 to n amount of children.
I say this every time. Buy AppCode, throw Xcode in a dumpster, give us AppCode and put their team commanding the development part. On the mean time, throw iTunesConnect on a dumpster too and hire book authors to write their documentation with fucking CODE EXAMPLES, like PHP documentation. Not that shitty vague crap they write.
My major beefs these days are around 1) stability/bugginess and 2) lack of real plugin support.
You know, I've never really understood the loathing for xcode. Maybe it's because I learned gui programming on pyqt with a text editor. Sure it's a bit unreliable at times, but you get so much more that adds to your productivity in exchange. What specifically do people hate about xcode?
Trying to design with NSStackview is super buggy. Controls don’t draw in the correct location, inner stack views draw incorrectly. Super frustrating.
When they charge $200 for it, they will.
That has always been the biggest failure of Xcode 4 integrating Interface Builder: Unfinished and buggy features. Apple also doesn't dog food their own code, so things like StackViews are never tested with proper support for Xcode. I make my own controls and always make sure they work with full IBDesignable and IBInspectable support.
This has nothing to do with whether or not emoji should be used outside of things typed with a keyboard. This is about apple saying you can’t use their drawings of emoji in those scenarios. They could use an open source emoji pack or make their own icons, they’re choosing not to.
Whether they look good or not has nothing to do with Apple’s ruling. 
I knew I wasn’t alone!
What's your setup for pointfree.co? Your Swift app sits behind nginx or something? What's your develop cycle look like? How would you recommend someone who has never heard of applicative parsing before get familiar with it? 
http://fuckingclosuresyntax.com is the up-to-date Swift version.
Oh yeah the plugin support absolutely sucks, it would be awesome to have vim bindings in xcode or similar useful things!
http://andrewmarinov.com/building-an-alarm-app-on-ios/
Many thanks! I will implement these ideas and report back on what works. 
that and the new build system breaks a bunch of stuff because the clean functionality doesn't actually work. 
if the closure is the only argument in the fuction, you can completely omit the parenthesis. i.e.: doSomething { $0 * $1 }
If you call startUpdatingLocation, just remember the last value passed into your delegate. If you don’t call it, call requestLocation instead. 
Ah yeah, so the Int value there is the return value of `calculateSomethingWithInts`, not the time it took to execute. I should name that function something more obvious...
Is this bundle worth it for someone trying to add Swift programming to their toolset?
Right but I’m guessing there is no way to simultaneously have the updating and request a one off when the user requires? 
Is there a way to perform transition animations when setting the root view controller like you get when pushing new views onto the nav controller?
It sounds like you’re needing the data to be ready before the user is presented with your TabBarViewController. What I would do is fetch the data you need before performing the transition from the Sign In screen. The user would see a spinner on that screen for a little longer, but everything would then be ready when the transition is performed. Since it’s probably not wise to make fetching this data the responsibility of the Sign In screen, I would make a higher-level “coordinator” or “flow controller” object that handles this data dependency and navigation logic between screens. 
This is fine. Just make sure to show your activity indicator when data is being loaded. In your array of data have a didSet that reloads your tableview (don’t forget to jump back to the main thread). Network requests shouldn’t take that long. Also, think of a way to skip login after they’ve logged in and then allow them to logout somewhere in the app. Do you have access/refresh tokens? If so, make sure to force log them out if say the access -&gt; refresh -&gt; refresh fails. If you want that data right when they log in, you could do it how the person above states, or if you want it to be filled for multiple VCs, I’ve made splash screens before that make all my calls and then inject the data into each of the VCs. Also consider using a db like core data or realm to sort of cache the stuff from these network calls so the user has data from the last time even without a network connection. 
Every time I bitch about Visual Studio being a lumbering behemoth I think about Xcode and VS doesn't seem to bad. Apple and Microsoft both need to ship just an "IDE SDK" and let third parties integrate it into their editors.
I believe the method is ‘sorted(by: ‘.. that fix it?
Yup it works but it's not a mutating method. So the resultant array needs to be reassigned, rather than sorting in situ. Why am I getting that error in one code snippet but not in the other? check it out: https://imgur.com/a/vMCWH
Oh okay gotcha! Can you supply the error message one more time? It seems to have disappeared from your post. 
sorry here is the error: https://imgur.com/7te4lFO
Okay I’m a little confused now. What error are you getting? Are you talking about the warning? That’s because you’re using the sortED(by:) method which returns an array of the items sorted which you’re not assigning to a variable. So you want to simply return competitionArray.sortED(by: {$0.id &lt; $1.id})
I believe you already found an answer gor your question, so I just wanna offer some cleaner syntax which you might find cool. When a computed property is get only, you may omit the get: var orderedCompetitionArray: [Competition] { var arr = [Competition]() for keyValuePair in self.validSeasonsForCompetition { arr.append(keyValuePair.key) } arr.sort(by: {$0.id &lt; $1.id}) return arr } If your return value is a copy of another array, you can use `Collection.map(:)` like so: var orderedCompetitionArray: [Competition] { var arr = validSeasonsForCompetition.map { $0.key } arr.sort { $0.id &lt; $1.id } return arr } Finally, you may omit the assignments entirely and inline the whole thing: var orderedCompetitions: [Competition] { return validSeasons .map { $0.key } .sorted { $0.id &lt; $1.id } }
Sorry wrong link!! https://imgur.com/7te4lFO Check that out...
It shouldn’t matter too much. Behind the scenes Swift has copy-on-write optimizations for value types, you’re essentially just *forcing* it to do a copy. If you’re really worried about performance, do both and profile it. Personally, switch is a bit cleaner for me. Also, mutability itself isn’t bad, abusing it is.
My hunch is that you’re using if LET which means that variable is now immutable yet you’re trying to change it. Use the sorted by method to assign the new array to something or a guard statement to use the original array. 
Ah, sorry, what I mean is that the mutable version of the function has case .oneWithCounter(var counter): counter -= 1 self = .oneWithCounter(counter) as the case, and the other, non-mutating one has case .oneWithCounter(var counter): counter -= 1 return .oneWithCounter(counter)
This is the correct answer. Another option is to just call sort on the optional array. secondaryComponentArray?.sort(by: { $0.id &lt; $1.id })
That makes sense now, yeah. I’d still say it’s just a matter of preference. If you want, you can also just keep both, name the first one `countUp` and the second one `countingUp`. That way you’re honoring the official Apple API Design guidelines. Use whichever is appropriate :)
Is the seasonsArray declared as a let? I had this problem the other day. It occurs when it can’t overwrite the array. 
It depends what you want to represent with your value and your function. If you want to represent "global state" then the mutating version makes sense because it would be easier to manipulate (you wouldn't have to reassign your global variable to the new décrémenter value). For example if you have a global counter that you display on the screen On the other hand if you want to represent local state transitions were you compose differents transformations on your state successively without really having to read it, then returning a new value makes more sense. For example as the accumulator of a call to `reduce` on array By the way I would rather write case .oneWithCounter( let c): return .oneWithCounter(c + 1)
It looks like they’re constraining the stackview to the margins. When you set your leading constraint, select the constrain to margins option. 
Cool! Thank you!
Weird thing! That doesnt work! https://imgur.com/FA2wv6k 
I tried this and it’s still very close to the left :(
Could be a bug in xcode9, it looked fine in my IB but i didn’t run it so if it’s broken just let me know and il give it a run. 
Ahhh, total brainfart on the `counter += 1` thing on my part. That’s great advice, thanks!
I figured it out. It is a bug in Xcode 9. It had to do with Safe Area. I solved it by going to View &gt; Utilities &gt; Show File Inspector and deselected the checkbox for 'Use Safe Area Layout Guides'. But thanks a lot for your help
If you mean something like Visual Studio's Find All References, no, Xcode doesn't have that functionality
I did Took me over 100 resumes though.
Swift has copy-on-write optimizations for _some_ builtin value types (`Array`, `Dictionary`) but enums and structs do not get the behavior for free. I really wish people would stop saying this without qualification.
Thanks that’s good to know, were you building on an iphone X out of interest? 
Hey, I went there too! When did you go through?
What job?
I am a junior iOS dev at an online marketplace. Great company, I love the work, and they are super patient with me still learning a lot as I go.
Yea it's possible. You'll do yourself a huge favor learning some side chunks of knowledge. Bash scripting, python, objective-c etc are very easy to learn the basics of. 
Went March 24, 2017 - mid June of 2017 Ended up “deferring” one cohort because I could, so my 3 month class was closer to 4.5 months
I think the fact that you've coded from personal interest, but don't have a computer science background, will be a bigger hurdle than only knowing Swift. Even though it's slowly going out of style, interviewers still like to use computer science algorithm questions. Furthermore, unless you have projects you can present or open source projects you've contributed to, people will be weary of your capabilities. And even if your job will only require you to write in Swift, people like knowing that you're flexible, because circumstances change and they may need you to write a script, or work on a backend API. That being said I think it's useful to know some basics about objective-c and how it interops with Swift, because even if your code base is 100% Swift (which is still rare), some Apple APIs may still be in Objective-C.
Vapor 3 (Beta) seems to be it.
Autocomplete takes upward of 1 second average most of the time for me.
Use Snapkit, by far the best syntax unfucking library.
Not from a jedi.
Our game is in swift, and i know no Objective C (do know other languages though). No problem, great job.
Xcode 9.2 is good, but it could be a lot better. Debugging in Visual Studio is far better/easier, etc.
Check out the implementation in Github: https://github.com/jdisho/FlippingNotch
I am in the same boat. Picked up coding swift as a hobby, now it is all I want to do.
I was building on an iPhone 8 
Hey! We overlapped then. I finished in May. 
Ooh. Just hypothetically, how would one apply?
Hypothetically you would go to Jane.com/careers
Thanks! 
Be able to read objective c, but I’d say learn swift. 
Not really. It builds on what was introduced in Swift 4.0. If you’ve been playing with Codable, then you’ll appreciate this addition 
From my experience, while it is possible to land a job knowing only Swift. It would more often be with younger startups or projects. Most companies that have mobile solutions in place, you will notice, have lots of content originally in ObjectiveC with very limited migration to a Swift mobile stack.
This is actually exactly what I needed, when does 4.1 drop?
I'd say learn Swift. I think in general its a more enjoyable language to learn and makes writing code a bit more enjoyable. 
woooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooow! brilliant! THANKS
Oh, I do. I'm just saying constraints, the very nature of them, are stupid. Both the web and android have better, easier, and faster UI paradigms that are a joy to use and easy to pick up.
i learned swift ended up doing objc to for job
Don't focus on learning a language. Focus on learn the platform instead. Just like how knowing Java doesn't automatically make you know Android developer, just knowing Swift won't help you with Cocoa Touch. Cocoa Touch is a beast (at least compared to Swift). Language nuances can be picked up and you can get used to in about a week where as learning and getting a deep understanding of the platform (Cocoa Touch) is a life-long thing. Having said that, I would recommend learning Cocoa Touch using plain simple Swift (Plain simple Swift is swift without the functional aspects like filter/map/reduce (aka higher order functions), protocols, generics and the like). These advanced Swift concepts can be overwhelming, even more so than Objective-C's infamous square bracket syntax. *Write* some Objective-C, but don't focus on being able to write. As u/UIvapor points out, you should know to "read" Objective-C and the only way to get that skill is to write some. You will need to read a lot of Objective-C to learn Cocoa-Touch Move up learn some Swifty stuff like Optionals, Enums and Collections (Note: You have collections provided by Cocoa Touch (NSArray, NSDictionary) and Swift has collections baked into the language. It's important to know the difference between them) Then learn some advanced Swift stuff like Initializers, Protocols, Generics, higher order functions. Only now, you will be able to appreciate why Swift is better than Objective-C. The Swift Programming Language book by Apple (https://itunes.apple.com/us/book/the-swift-programming-language-swift-4-0-3/id881256329?mt=11) is by far the best book I've come across. 
Command + Click the variable &gt; select “Rename”. Xcode will do the work for you
Holy crap. I wish I had this last week
Swift is amazing. Objective c is everywhere. 
Yes. My first job is swift only (new project + really good engr culture). My second job is objc but we’re investigating writing new code in swift now, so my swift experience will help. woohoo!
I just want my Xcode to swiftlint on save. They provide no way to do this. I have to type swiftlint autocorrect like a peasant 
I would imagine most are Unity.
This. Thanks.
Seems like mainly a clickbait article. It runs down the features of iOS 11, you probably know all of these details already, it doesn't actually help describe anything in more detail or link you to where you can actually learn how to use this stuff. I guess if you missed the announcement of iOS 11 and haven't looked at apples run down of the features then this may be useful, but it seems like filler content. Also it talks about unreleased features as if they are released (e.g. Airplay 2) so it is slightly misleading. TL; DR if you have seen any other announcements about iOS you know about everything this article mentions and the article doesn't actually help you as a developer it just describes features at a high level.
Hi seriousTrig! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/7vopsh/swiftifys_latest_release_of_the_objc_to_swift/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Personally, I learned Swift first. The first three months was just making apps and learning the ins and outs of Xcode and the language. When I transitioned to an official iOS developer 8 months later, I had to pick up Objective-C because of the older apps. Any new apps we made going forward were in Swift.
I did exactly this in one of the Practical iOS 11 projects – it used facial detection to highlight faces, then you could tap any you wanted to pixelate. That book isn’t free, though, but you can find a more basic project in Hacking with Swift: https://www.hackingwithswift.com/read/13/overview
And yet Codable still doesn't support updating models :(
No, AppCode sucks, I pretty much prefer Xcode.
IHaters and people that never really tried anything else...
not sure why this is downvoted, this is great content - thanks!
Where do you find your research on small companies ? i'm also too looking for mobile development work. As of rite now i just look on DICE and Indeed.com 
Yeah same here. It gets frustrating. I'm a recent college graduate and i been struggling for about 4 months now. Linkedin definitely was no help lol. How do you like the company so far ? What foundation are they teaching you and architecture patterns ? 
It looks like you wrote a lowercase I instead of an uppercase I. This has happened 5646 times on Reddit since the launch of this bot.
I don't know what the NSUnknownKeyException is trying to get me to fix. It is a runtime exception that happens when I try to open the TableView at the end of the lessons after changing the titles. My MealView swift file will work fine if I point the storyboard entry pointer to it but not the tableview. Thanks!
A really awesome book is [Core Image for Swift by Simon J Gladman](https://itunes.apple.com/gb/book/core-image-for-swift/id1073029980?mt=13) it gives a really thorough overview of CoreImage(Apple's framework for image processing) and all the filters and effects you can use. It used to be paid but he recently made it free for everyone. 
Did you correctly register the cell with an identifier? Are you dequeueing cells with that identifier?
Did you connect the cell to a TableViewCellcontroller? And did you give the cell an identifier? 
LinkedIn jobs wasn’t horrible but you have to refine the search down a lot to get back anything useful. I would start by going to as many meet ups and things like that as you can. Get to know people already working in the field. And keep working on your own stuff. I love the company I’m working for now. They are very employee centric. A lot of autonomy, a lot of chances to learn, but also a lot of patience for me being a beginner. Everything we do is a slight variation on the MVC architecture. Very similar to this: https://davedelong.com/blog/2017/11/06/a-better-mvc-part-1-the-problems/
Why do you need different LoginViewControllers for each target? What’s actually the difference between them?
Local vars will always be the fastest and easiest for the compiler to optimize. Nothing will be faster, but might be as fast if we’re lucky.
What code are you trying to share between projects? Perhaps you’d be better off creating a framework to reuse code. 
Love the book so far...and the fact that its free. Thanks! I skimmed through a bunch of the slides and it looks like it only talks about filtering entire images. Which I guess could work for my project, but I want to target a section of an image after identifying an object within it. Then I would like to apply the filter. I'll keep digging through it though, because it is very interesting
This, I just went through this to answer a question I had about table views and their cells. Double check to see if the cell has a identifier. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [SwiftyBeaver/AES256CBC/.../**README.md** (master → 0916f1a)](https://github.com/SwiftyBeaver/AES256CBC/blob/0916f1a3c0bb8837fb18584cd89b0a1c94b05018/README.md) ---- 
Apple has a habit of using the key-value list built into interface builder. Select the cell and in the inspector find the key-value list and remove the entries there. The bad thing about setting things here is if the key gets changed in a future update, you get runtime errors that are more cryptic than if this was set in code. Which would give a compile time error, and often even a recommended change for the deprecation without even compiling. Sorry I’m not near my computer so I can’t give detailed explanation on where it is in the inspector, but it’ll be a split list.
Well iOS in itself is a client (front end). You’ll definitely have to be comfortable interfacing with web services and have a basic understanding of them, but you’ll mainly be working on front end. A lot of places you won’t be strictly doing iOS development though and they will want you to be flexible and able to pick up other things as needed. Hopefully they’ll help train you for these things when the time comes. 
Have a firm grasp of basic OOP principles, and some experience with Swift. Make sure it's real experience, even if that's just putting together small projects. It's amazing how many people I interview who clearly read an iOS book, did the exercises, and didn't explore the basics outside that path. If you can talk about frameworks and core concepts, even better. 
You cannot find it because PKCS5 is not defined for AES, and is only used for DES. If you somehow ended up with a stream that’s PKCS5, it is equivalent to PKCS7 with a block size of 8. You also should not be using CryptoSwift. It’s implemented in software, which makes it slow (100x slower) compared to CommonCrypto.
As an iOS dev, you should be able to consume a REST api and display on screen using native components. Basically get comfortable with fetching Jason, parsing into models, displaying data to the user. Get especially comfortable with paging data such as you would see in a Reddit client.
New to iOS myself, do you have any suggested material (video tutorials, articles, repos) that could help with becoming comfortable with this? 
I don’t have any links available right now but there are plenty of tutorials for building some simple dynamic apps similar to the system apps on the device. Notes app would be a good one to search for.
Neither. Create a class which handles as much of the login as possible without access to the view controller. Something which has a method such as: func login(with username: String, password: String, completion: () -&gt; void) You can then call this from any controller passing the appropriate info and the important logic is abstracted from the controller. Controller would call something like Auth.login(with... when the user taps the button. 
Most call it "full stack" so a "standard" iOS dev is expected to write an app that runs on the device and does things. Some (most?) app get/set data from a backend so the quite a few devs are expected to understand how to get/set data from some backend like a weather API, news API, etc... Some go past that and made a custom backend server to serve their own app. This would be "full stack". IMO, over the years, the jobs are asking for more and more, but the needs for all apps are not the same. If you apply for a job doing a news feed reader or word games, you might not ever have a need to build a backend. If you're trying to break into the market, having more skills is a plus, but being too thin isn't. I've been doing this for years and was surprised at some of the things Git and Xcode can do when I took an advanced tutorial. IMO, digging deep into any tool proves that you can dig deep. The need for 'surface' programmers that don't know how to dig deep is pretty limited. It's the age old "know a little about a lot or a lot about a little". In this case, the deeper you know things, the better.
It’s here: https://www.hackingwithswift.com/store/practical-ios11 – if you scroll down you’ll see a screenshot from the Picture Protector project. 
Well, Obj-C will definitely still be relevant for a long while, but it seems that most parties are chosing Swift for new projects. Apple is the only reason Obj-C is still around, and they themselves are promoting Swift heavily.
You should post a link to the product that you are using, maybe someone here has used it. Did you get an API key? Did you replace the "YOUR_API_KEY" with the API key that you got? Did you create the bridging header to run ObjC in your Swift code? Is this what you're talking about? https://cocoapods.org/pods/HNKWordLookup Here's some info on bridging headers: https://developer.apple.com/library/content/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html http://www.ios-blog.co.uk/tutorials/objective-c/how-to-create-an-objective-c-bridging-header/ Just based on the limited info you've given, I'd guess the bridging header is the problem. Maybe do the tutorial and let us know.
Like KarlJay says, must be the bridging header. If you want to use Objective-C code in Swift, your project should have a bridging header file. In that file, you can add all import statements that you'd normally put straight in your Objective-C code. If the file is already present in your project, it's usually called "projectname-Bridging-Header.h". If it exists, add the following line to it. #import &lt;HNKLookup.h&gt; If it doesn't exist, create a new file, type Header file. Perhaps name it "Bridging-Header.h". It should contain the above line. It must now be included in the build process. Select your project on the left, then your target, then go to the Build Settings tab. Search for Bridging. Select the option Objective-C Bridging Header. Double-click it. Add the path and the name of the file, for example: SuperProject/Bridging-Header.h Your project should build. If it does, add the following line: HNKLookup.sharedInstance(withAPIKey: "blah") 
iOS is not a part of the "frontend/backend" nomenclature for the most part. iOS would be analogous to the "front end" but is entirely different than it. *Sometimes* an app can share a "backend" with a website...if the website is written using JSON API calls instead of things like pre-rendered front end pages. Being able to *also* write basic APIs yourself and help debug part of the backend is an *amazing* simplification though. It's a lot easier to work with yourself on a local server instance to resolve a small issue in the communication then having to involve 3 other people with a different specialty *every* time. 
thanks for the response but could you please elaborate on what specifically I should know in regards to frameworks and core concepts?
I went into my main.storyboard and selected the cells and looked for the key-value list but couldn't find anything resembling any code I had created. 
Making network requests, dealing with common ui components and their protocols, handling external data like json, knowing how to use things like auto layout. For a jr position I look for someone who doesn’t necessarily have a mastery of it, but who shows a desire to learn and get better, and build on those skills. Don’t bullshit your way through what you don’t know either. Ask questions, and be confident with what you do know
Post your MealTableViewCell.swift file. I bet you made a small typo in its implementation. Also, I think they have sample code available for each section. If you want you can download it and confirm it works, then work backwards from their code to find your mistake.
I've always told people just learning that the best way is to find something you use, whether it's a weather app or some simple messaging, and try to recreate it. It's not expected to be up to the level of the original, but you'll learn how to think outside the step by step projects in the how to books
Formatting was terrible on those examples. Makes them really hard to read. 
It's really hard for other people to debug your code without seeing the code. We're pretty much just guessing at what you're doing.
ah just saw that last line and it all clicked, I wasnt typing the command properly :/ I was typing &gt;HNKLookup sharedInstanceWithAPIKey:@"YOUR_API_KEY instead of &gt; HNKLookup.sharedInstance(withAPIKey:) thanks for your help 
u/mjgrazi, you've received `0.00097194 BCH ($1 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
This!! AppCode isn't perfect, but I'm about 30% faster and 300% happier working with it. Also, as someone who also does Android, using AppCode means I can have all the same shortcuts. Makes the context switching so much easier. 
Oooh, it's also synthesizing Equatable for us! About damn time!
I think a string is an array of characters 
At this point I’d just download their sample code and compare. We can’t also rule out Xcode just being Xcode. Restart Xcode, hold Option and click Product from menu bar, then Clean Build Folder. Also delete the app from the simulator. 
While we are at it, what is the difference between a nibble and a byte?
Hey guys! I recently launched Pulse on the App Store. It's basically a platform to share music with your friends (think **Instagram for Music**). If possible, I'd love to understand better how I can improve the product to better serve the community. Website: [pulsemusicapp.com](https://pulsemusicapp.com) App Store: [itunes.apple.com/us/app/pulse-music/id1318538015](https://itunes.apple.com/us/app/pulse-music/id1318538015) You're also more than welcome to ask me about the actual development of the product!
A nibble is half a byte. So, if a byte is 8 bits, then a nibble is 4 bits.
The reason a string is not an array of characters (as u/Nerdlinger rightly says) is that, in Swift, each character in a string can be of a different byte size (due to their Unicode representation), while Arrays hold items of the same length. In an Array, any member can be accessed in constant time, by just computing an offset. The same is not true with a String.
Congrats! It looks really great! Some comments: - the custom nav bar is really pretty - it would be cool if you could use a pan gesture to switch between the tabs shown in the nav bar because it’s hard to reach up there when using one hand - scrolling through the feed is still the tiniest bit jolty on my 6S. Maybe this could have something to do how the row heights are calculated?? - it would be cool if there was a choice between apple music and spotify integration - the skeleton views are amazing but it’s annoying the app refreshes every time that I switch back to it and they show up and block the old content for a second - have you tried seeing how the app would look if you rounded the corners of the feed cells? They look kinda sharp at the moment because almost everything else has rounded corners - the custom transitions when presenting and dismissing the song sharing view controller don’t match up to me. It’s presented from right to left and then dismissed from top to bottom, which is a little disorienting. - have you tried unifying the “listening to a preview” and “share” alert controllers that pop up when selecting a song or tapping the more button in the search results view controller? It feels awkward that I have to switch between the two because I have to end the song preview to share the song - presenting an alert controller to show a preview of a song in the feed is the only real problem I have with the app. It means that I can’t do other stuff while I listen. I think it would be better if the album art showed up in the tab bar like in the demo video instead - the option to delete a post is difficult to find. Maybe it would be better if it showed up in a cell rather than in the more info alert? - it would be cool if more of the UI than just the tab bar items bounced or responded to interaction. Hope this helps! Great job!
Congrats! It looks really great! Some comments: - the custom nav bar is really pretty - it would be cool if you could use a pan gesture to switch between the tabs shown in the nav bar because it’s hard to reach up there when using one hand - scrolling through the feed is still the tiniest bit jolty on my 6S. Maybe this could have something to do how the row heights are calculated?? - it would be cool if there was a choice between apple music and spotify integration the skeleton views are amazing but it’s annoying the app refreshes every time that I switch back to it and they show up and block the old content for a second - have you tried seeing how the app would look if you rounded the corners of the feed cells? They look kinda sharp at the moment because almost everything else has rounded corners - the custom transitions when presenting and dismissing the song sharing view controller don’t match up to me. It’s presented from right to left and then dismissed from top to bottom, which is a little disorienting. - have you tried unifying the “listening to a preview” and “share” alert controllers that pop up when selecting a song or tapping the more button in the search results view controller? It feels awkward that I have to switch between the two because I have to end the song preview to share the song - presenting an alert controller to show a preview of a song in the feed is the only real problem I have with the app. It means that I can’t do other stuff while I listen. I think it would be better if the album art showed up in the tab bar like in the demo video instead - the option to delete a post is difficult to find. Maybe it would be better if it showed up in a cell rather than in the more info alert? - it would be cool if more of the UI than just the tab bar items bounced or responded to interaction. Hope this helps! Great job!
This is easily found on google. It’s common of not swift but programming in general. You dissect (parse) a text file to break it into key value storage. 
I don’t think the concept “Unicode character” is well-defined. You’re right that’s it’s an extended grapheme cluster, though, which is well-defined. 
Its Element type is Character but *really* it’s an array of Unicode scalars that are converted to characters on the fly.
Do you understand what a json is? If not then read about it anywhere. It is a way to represent data, or let’s say an object in OOP (object oriented programming). It is very commonly used in modern programming. 
Sow, featureless, and just doesn’t have all the tools, like a decent debugger, etc.
I think this sub is about all things swift, if you are looking for more advanced material you can ask here and i think a lot of guys around here have a lot of knowledge to share. 
To add onto this, any resources in general for finding more advanced swift material?
There’s also r/iosprogramming it houses a lot of the same content but does vary. I subscribed to both. 
I just got a reminder from RemindMeBot :) The Vapor 3 release has been [announced](https://medium.com/@qutheory/vapor-3-release-schedule-1179bb080ca4) recently and is definitely ready for a lot of use cases. Whilst some really specific use cases aren't covered yet, I think it's unreasonable to say that Swift isn't ready for the web. Vapor 3 is performing at the level of Go frameworks and is extremely optimised for bigger use cases where multiple libraries are involved into producing a result. An example of this is rendering a table from the MySQL results. A lot of fundamentals are definitely supported, think sockets, filesystem APIs, crypto, (base64) encoding and TLS. We're completely async internally and have easy to use APIs for dependency inversion, JSON, JWT and other higher level libraries. We've also written 6 database drivers, of which 5 are complete and 4 are written in Swift exclusively. MongoDB, MySQL, PostgreSQL and Redis contain no code except Swift. Kafka is incomplete, and SQLite wraps the existing C library.
I have two nibbles, wanna byte them?
What’s the main difference between GIMP and photoshop? I never heard of gimp before
GIMP is free and photoshop is not. Also if you are worrying about functionality, don’t. GIMP is just as good, but has a learning curve. If you have PhotoShop, stick to it.
Okay cool thanks for the info! 
Sketch, it’s pretty much the UX gold standard.
Very good stuff friend. Well designed and the App Store meta data is good. Unfortunately I can't not download it because I'm still running iOS9 for personal reasons lol (I hate iOS10 &amp; 11). My only suggestion would be to beef up your App Store screenshots a little. They are great but it kind of makes me ask, "What more is there". However, from your video - I see that there is a lot a user can do and I feel that you can show that better!! I do have a question about development and in particular about how you are handling hashtags and @s.... Are you using Active Label? If so, I am too.... but would you mind explaining your logic behind how they function within your app? I'm developing with Firebase and I'm doing some pretty cool things with them.. But I've been trying to brainstorm how I'd go about doing things like alerting users to mentions, connecting the @ function to actual users in the database so that you'll be taken to their account, being able to click on a hashtag and pull up all posts under that tag, etc. Basically, if your use of hashtags and "mentions" work similar to Twitter, would you mind explaining some of the basic logic to help me think my development through? Thanks for any help, great stuff! This most definitely isn't a shit app, based on your execution this could gain some traction. The usability is definitely there. 
AppCode lacks Storyboards, which are arguably more trouble than they're worth. And Xcode has that really cool runtime view hierarchy explorer, but besides that, are we even talking about the same thing? AppCode is much faster than Xcode, has a vastly larger feature set + plugin support, has a more useful debugger, etc. 
I’ve found Chris Eidhof’s books to be pretty useful. Depending on what you want to do there’s quite a lot of things you could learn from, e.g. some FRP framework like RxSwift, the Swift source code itself, Swift-evolution, and the new forums. If you’re really hardcore, maybe even implement a basic spec of Swift in LLVM, that ought to teach you a lot. 
I would just have highestSpeed as maybe an instance variable and then whenever the speed changes check if the new speed is greater than the old speed and update that var to the new highest if it is. You won’t have any historic data that way, just the max, but it’s the simplest I think. 
I agree a lot of people have knowledge in this subreddit. I just think it should be on the mods to filter out some of the things I mentioned and keep this subreddit on things only about swift and limit the number of questions being asked.
Can you clarify, what you mean by a "custom image" ? My werkflow goes like this: Pencil &amp; Paper (alot) illustrator / photoshop / Sketch (depending on what I need) 
Well, nibble was actually a play on words. Byte comes from **b**inar**y** **te**rm. Why "byte" and not "bite", you should probably ask the French, and perhaps that's something you can nibble on.
Really bad intuition
No, it’s not faster than Xcode and it lacks the most important thing. Storyboards are trouble? Enjoy programming by hand menial views. No, it doesn’t have a larger feature set and the plugins are mostly useless, Xcode also has plugin support and actual features.
There are all sorts of ways to collect statistics on data streams without storing the stream. You will need some variables however.
Photoshop piped to my phone via Skala View, usually, but I do freehand work on Affinity Photo on the iPad Pro. I also occasionally design layout directly in Interface Builder but it has to be a new part of an existing, already designed app.
"Parsing" is basically reading and pulling out the information you want, and JSON is a commonly used, generic file format for encoding data. So, if you save the preferences for your app as a JSON file and launch it, the app will be parsing the JSON file to pull out the preferences for your app.
I gather you fixed it, but if not, just put it in func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&gt; Bool 
so you first draw it out on paper first, then use photoshop/illustrator for the graphics and Sketch for the iPhone layout? When I said custom images I mean like animated designs not using the ones from online but you make it yourself
Man these table view sources are always a source of dread of WTF content. Just use array here, much simpler.
Hey mate, could I make you ask this question in the post I did over at /r/iOSProgramming? I deleted this thread so that I could do a crosspost from the first one (not sure how it even popped up in your feed haha). Will happily answer the question! https://www.reddit.com/r/iOSProgramming/comments/7vz3a9/im_the_developer_of_pulse_for_ios_think_instagram/?st=JDE7LP23&amp;sh=4910457c
Nah, just download Xcode, create a new playground, and start playing with it. After that, I always feel that having a goal or a target helps, as it forces you to google things like "buttons in iOS", "changing labels", "how to make REST calls in swift", etc.
Sketch is probably best for designing UI/UX. For photo manipulation and other similar tasks I suggest Photoshop and if that’s out of your price range, go for Pixelmator. It’s really great! [Pixelmator](http://www.pixelmator.com/pro/) 
cs193p stanford videos Good luck
Suppose you have this data: {"animal": "cat", "breed": "Russian blue" } and you need to get the words "cat" and "Russian blue" out of that data. The process of getting the values you need out of the JSON data is called "parsing" it. 
Can you give an example?
Something like this: https://developer.apple.com/documentation/coredata/nsfetchedresultscontroller/1622303-sections You have array of section models, and each section contains title and array of row models. You can build this array on viewWillAppear, like this: https://gist.github.com/szotp/2ba3c8e2b61b3d13a34f71a024ab67ba
You’re going to get a better response if you describe the problem. Most people won’t want to download and run your project.
Hey thanks for the feedback, of course this is Kent to be a simple example to show the power. When you dig into creating the cells for the sections and each cell is a different class you can build the enum to return the cell instead of having A if else statement for the section/row. Would you also use an array to hold the cells created as well? Curious as to best practice for this since I am still learning. Thanks for any feedback
Unless it’s a static tableView, you probably don’t want to do that because you’ll lose the performance of dequeuing cells. Maybe return the cell type instead. 
So essentially I have a quiz app that i’m trying to implement multiple choice in. I have a class called QuestionBank that holds an array of Question’s that hold a question, an array of possible answers and the location of the correct answer. In my view controller I have code that checks to see if we’re under the amount of questions in QuestionBank and then sets each button variable that I outletted’s label to the corresponding possible answer of the current question. When I run the app each button displays the placeholder to start and when I click a button each button updates to the correct text except the button I pressed. This makes no sense to me according to the code written. Any insight would be great, thanks!
Why put it up on GitHub as a zip file? At least put up the project as text files so we can look at the source there.
No need to store any cells, if you have models. I updated my gist. You can use model type to determine which cell should be shown. That required some protocol magic though. 
This seems overly-complicated. You have section numbers which roughly correspond to section titles. You seem to want to replace "b" with "c" when `hasB` is false and replace "d" with nil when `hasD` is false. You could code it this way and it would be fairly clear and simple: enum SectionTitle: String { case a, b, c, d func translate(hasB: Bool = false, hasD: Bool = false) -&gt; SectionTitle? { guard !hasD else { return self } guard !hasB else { return self } return self == .d ? nil : .c } } Use it like this: let title = SectionTitle.b.translate()?.rawValue ?? "" // "c" 
This seems overly-complicated. - You have section titles "a" through "d". - When you have `hasD` false the only change is that "d" should be "" - When you have `hasB` false and `hasD` false then "b" should be "c". enum SectionTitle: String { case a, b, c, d func translate(hasB: Bool = false, hasD: Bool = false) -&gt; SectionTitle? { if !hasD { return self == .d ? nil : self} if !hasB { return self == .b ? .c : self } return self } } You can use it like: SectionTitle.a.translate()?.rawValue ?? "" // "a" SectionTitle.d.translate()?.rawValue ?? "" // "" SectionTitle.b.translate(hasD: true)?.rawValue ?? "" // "c" SectionTitle.d.translate(hasD: true)?.rawValue ?? "" // "d" 
If I were doing this, I would make the solid background color its own view, and have the image over top of it. As for acting upon it, [extract the pixels from the image](https://gist.github.com/jokester/948616a1b881451796d6), then calculate the average color however you like. Consider filtering out colors with low saturation as average colors without such filtering can be grayer than most people expect.
Upload the source code, not just the xcodeproj file.
I’ve signed up to test, but have yet to receive an email. Im also not totally clear what it is. A blog platform with file attachments?
You can use a CIFilter: https://stackoverflow.com/questions/26330924/get-average-color-of-uiimage-in-swift
Awesome thank you! 
This seems like a good solution, just to make sure I understand it correctly in my headerForSection would I just call the order(section) and get the string?
Can you only read and write posts through the app? Or is there a web client as well?
Oh, one thing I noticed. Your `tableView` method returns a `String?` but you never pass an `Optional` to it, it's always a `String`. Did you mean the return value to be `String` instead?
sounds to me like a problem with the storyboard actions/outlets Can you add your .storyboard file?
I'm pretty sure you have to use setTitle:forState and set the state to normal for this. `button1.setTitle("something", for: .normal)` and so on...
Doesn't Wordpress already allow you to do this? Also, as someone who used to blog. I'd hate to type the entire thing up on a tablet or phone. Good luck to you in either case... But I don't see the gap you're trying to fill. (Just being honest here). Also, try /r/TestFlight/
Chameleon has this as a feature: https://github.com/ViccAlexander/Chameleon
I've used at least 3 different 3rd party libraries for exactly this - but a lot of them give you questionable results. My favourite one currently is [UIImageColors](https://github.com/jathu/UIImageColors). It gives you the background, primary, secondary and detail colors. I use it via Cocoapods. The only negative about this particular one is that it isn't fast enough to execute immediately, so provides you the colors as part of a response handler rather than just a returned object. But the colors are spot on. You don't end up with muddy horrible colors like a lot of others. 
That was because if something weird happened it would return nil instead of a String, should be an edge case that never happens, but wanted to make sure if it did happen it didn't crash.
This is very awesome, thank you for the detailed response and example! I will let my friend that was helping me with it know and update my personal project.
&gt; static tableView For this project I am working with static cells (tableview to review order before completion) But I totally understand the logic behind your answer. Thank you 
Initial Feedback: Support cell in Settings doesn’t function. Can’t use front-facing camera when setting a profile picture. Profile in settings uses placeholder values.
Yes, the support cell isn’t enabled on purpose, because while beta testing users can send feedback through TestFlight, but I’ll create a email submission feedback form so it’s faster to users feedback. Thanks for testing it out :)
This is the correct answer. Don’t change the button’s titleLabel directly.
You can learn to code with the [Swift Playgrounds](https://itunes.apple.com/us/app/swift-playgrounds/id908519492?mt=8) Learn to Code interactive tutorials if you don't already have prior programming experience. But if you already know how to code, you might prefer to start with the [Stanford iOS course](https://itunes.apple.com/us/course/developing-ios-11-apps-with-swift/id1309275316) or the Big Nerd Ranch [Swift Programming book](https://www.bignerdranch.com/books/swift-programming/). All of these are great resources, so it's really a matter of looking and deciding which is best for you. And there are tons of other options -- [here's a roundup](http://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/) of the best ways to learn Swift and iOS, including these and a few other options like online courses and in-person workshops.
A string is how Unicode is stored. Character is what you build when you try to understand Unicode ;-)
That sounds awesome! Will definitely look into it. Thanks!
Here's my list of things you should know to be qualified: 1. Software craftsmanship. This includes general software development skills like object-oriented programming and how to test, debug, and organize code. 2. Source control. If you know how to use git, you have this one covered. 3. Swift. Unless, of course, you're interviewing for Objective-C jobs, but things are moving towards Swift so you should probably learn it. There are lots of ways to learn; [here are the best books, courses, and workshops](http://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/). 4. Learn iOS. Basically, you need to know how to build apps with Foundation and UIKit. 5. Build an app. Knowing iOS isn't enough; you should build your own app to prove to yourself and your employer that you know how to do it for real. 6. (Optional) Publish your app on the App Store. Part of the job is actually putting apps on the App Store -- bonus points in an interview if you've already done it. If you want to know more, check out [How to become a professional iOS developer](http://roadfiresoftware.com/2014/04/how-to-become-a-professional-ios-developer/). The article also includes links to resources you can use to get started and much more detail about each of these points. Good luck!
Here's an article on [how to parse JSON in Swift 4](http://roadfiresoftware.com/2018/02/how-to-parse-json-with-swift-4/), and the playground there includes the code to make a network request to a REST API. But if you're new, you might want to try choosing [one of these resources](http://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/) like the Stanford course or Swift Playgrounds to learn Swift and iOS before jumping into networking and parsing JSON.
If the Stanford course is too difficult right now, I'd suggest trying other books or resources like the Swift Playgrounds app or possibly the Big Nerd Ranch Swift Programming book. There are tons; [here's a list of the best ones](http://roadfiresoftware.com/2018/01/whats-the-best-way-to-learn-ios-development-with-swift/).
Thanks so much for writing and sharing this, Paul. This is a really nice feature to have.
I would still keep the `String?` return type since you are passing in `Int` and a `nil` is an appropriate response to an invalid value.
Congratulations on finishing the app and launching the beta test! Would you mind sharing more about the business model behind it? I imagine that, if it takes off and you get a lot of users, the hosting/traffic expense can get quite high.
I agree, this does look short and sweet. Thanks for the post!
I think I'll test this first. Hopefully its fast enough to be usable. Thank you!
This is what I was expecting to have to figure out. I think I'll try some of the libraries suggested here first. Thank you!
Chameleon seems really cool. It does a lot besides what I want though so I'm going to try one of the more lightweight libraries first. Thanks!
Have you considered catching the error and seeing what it is?
I think only if you enjoy boilerplate code. :)
Yeah same! I don't really have a reason to get PhotoShop, or anything expensive like that, when I have the same functionality with GIMP.
Superficial.
What is your UI problem?
If the JSON you’re trying to parse isn’t handled well or easily by Codable, since it really wasn’t designed as a general JSON parsing solution. Manually implementing Codable for poorly formed JSON is extremely painful, so other solutions may work better. 
What version of Xcode? 9.2 is latest non-beta release.
Try printing your file path. What does it look like?
The destination file path is correct. I can copy the file with no issues without changing extensions. When I change the extensions, it copies and appears that it changed the file type (.zip and ZIP in file info). I’m essentially just trying to write a function that renames like you would in the Get Info dialog.
It seems like maybe you could pass the first item of the array out into a function that is called when the button is pressed. could you provide more information on how often the loop contents before the button press need to be updated? I feel like you should separate out the different processes. Maybe the first item array is always waiting for the action to pass in, operate on it, and do the rest of the stuff. 
thx
Dictionaries, Codable cannot handle dictionaries with unknown keys. NSJSONSerialization is still quite useful, and is very simple to use.
Because you’re not actually created a zip archive, I’d say. Changing the extension doesn’t magically make it a zip file. You need to actually compress it.
I add outlets all the time, in a variety of projects I've never seen anything like you describe. I'd try doing a full clean, delete your derived data folder, and Xcode cache. If it still occurs try a new project, and try a new storyboard or Xib in your project. Narrow it down like any other debugging problem.
What about Gloss?
Really nice job on this. The clear documentation (the readme) is great - more open (and closed) source would benefit from this kind of effort. 
I'd love to hear how the community manage to work with jsonapi. I saw this repo (https://github.com/joshdholtz/jsonapi-ios) but in ObjC. Did you manage to find an answer ?
It is a zip archive. It just has a different extension, due to some other software coming into play. I can manually rename it and unzip with no issues
Learn Swift. If the time comes, where you have to help out on a Obj-C project, read up on it then. Swift is also a more accessible language than Obj-C for beginners.
it doesn't show any error. the system crashes before it gives any error
You're being downvoted because: 1. This is something that could be easily googled 2. This subreddit is mostly storyboard-oriented Other than that, I myself just dove in the deep end. Started writing views programmatically, as was customary at the startup I was working at at the time. Basically lots of googling "how to do x programmatically". I myself rather enjoy programmatic views, so I do recommend it, for several reasons: 1. Allows for much more modular and solid architecture 2. The storyboard is slow and clumsy, causes lots of merge conflicts etc. 3. The storyboard is mouse-oriented, while I feel much more comfortable for programmers who enjoy working with their keyboard. 4. You can load more logic to view (and subview) classes, keeping your controller cleaner, e.g. your controller needs to provide information to the view, but the view itself can device what color and layout changes need to occur based on said information
Page controller doesn’t actually know what all the pages are, just the one before and after. If you want to show both, you will probably have to call the code two times for the page view controller to animate. AFAIK, you might be able to hook into a delegate to see when the first page finishes. Otherwise you could do something like DispatchQueue.main.asyncAfter to handle the second one. 
Looks very similar to JSON parsing I am used to from JVM languages, which is nice for me anyway :)
The issue with this approach is that the page transition animation has an ease in/out property that makes the dual animation look jagged.
Side note Brian Voong is a great resource to keep. I personally love his videos. 
You can use `&lt;?` and `?&gt;` as partial operators for `&lt;` and `&gt;` as I've written here https://medium.com/@andre_videla/elegant-swift-ec702fc84f11
Guys, I fixed it, but the next time it happens, Im gonna use all your advice. My Xcode version is 9.2.
We made our own parser: https://github.com/infinum/Jade
Most iOS-learning resources teach layout using storyboards, so Brian is a bit unusual in that regard. Many industry developers use storyboards, but programmatic layout has the advantages described by Nikitah and others. Last year I made an open-source app using programmatic layout and spoke about programmatic layout at iOSDevUK. My talk was not recorded, but I’m planning to write a tutorial for programmatic layout. Feel free to message me if you are interested in that. In the interim, you can take a look at the repo for the app I made. https://github.com/vermont42/Conjugar
How is codable slower just curious because I’m a swift noobie? I thought it was created to make parsing faster/easier? 
One of my favourite libraries. Good write up 
happy that you liked the tutorial! 
And if you'd like to save yourself the tedium of writing the model classes and all the boilerplate, you should try out [quicktype.io](https://app.quicktype.io/#l=swift)! (I'm one of the authors) It infers types from JSON, but also accepts JSON Schema and even [GraphQL](http://blog.quicktype.io/graphql-with-quicktype/), and there's a [command line interface](http://blog.quicktype.io/quicktype-multiple-samples/). And it's [Open Source](https://github.com/quicktype/quicktype)!
This looks really nice. Thanks!
Also to answer you question on what webview to use: There are two choices for embedding a web view in an iOS app: - UIWebView, which has been there since the early days - WKWebView introduced in iOS8 The UIWebView is what for example Chrome and pretty much every other third-party app uses while WKWebView is what Safari (and newer third party apps) uses. The UIWebView is very minimal but it gets the job done. Basically you can ask it to load content, handle navigation and execute JavaScript when a page has loaded. But, no JIT. So about 3x slower than WKWebView. The WKWebView is new with iOS8 and exposes a much richer API. It has for example wonderful gesture support so you can swipe left just like in Mobile Safari. It also supports user scripts much better, which would allow us to introduce HTML5 APIs that WebKit does not know about. And it runs Nitro at full speed. Souce: https://mail.mozilla.org/pipermail/mobile-firefox-dev/2014-December/000993.html
Hey, just curious if you end up finding a solution?
Here's a few links. Link to the App Store: [itunes.apple.com/us/app/pulse-music/id1318538015](https://itunes.apple.com/us/app/pulse-music/id1318538015) Link to demo (without music, due to copyright): [vimeo.com/247330055](https://vimeo.com/247330055) Link to the app website: [pulsemusicapp.com](https://pulsemusicapp.com)
Typically I build a REST’ish web backend and use that for data storage. But that will require a fair amount of web infrastructure knowledge. And the machine will probably have to be externally accessible, or accessible via vpn. There are other solutions, but they involve other cloud providers like Microsoft Azure or Amazon AWS.
The API is hosted on a machine. Whether it is on the same network, or not, doesn’t really change how you connect to it (aside from VPN considerations). 
Oh great! Do you by chance know of any resources I could I could use that could kickstart my process? Honestly, I feel like I don’t even know what to google to get this done...
Google: create REST API I prefer Django REST Framework. Ruby on Rails, Flask, and Node.js are also options. Before you commit to this change, remember to evaluate whether it’s worth doing. You already have data in iCloud. What do you gain from replacing that with an API?
So basically here’s my case. A friend came to me asking if I could make them an app to store data for their small business so that they could move away from pen and paper stuff. Well one of the pieces of information they want to store is a collection of pictures so after about 3 months of usage they filled up the 5gb. This wouldn’t be too bad except for about 2 of those 3 months it was in light use while we worked some minor bugs out and introduced the app to the team. So basically in 1 month they used 5Gb of storage. This makes me guess that in about 6 months the 50gb plan wouldn’t be sufficient and in 2 years the 200gb plan would be full. Their main reason for contacting me is to avoid a subscription fee for handling their data and now we see the limitation but they still love using the app (they even bought 2 iPad Pro 12.9” to do it!) So my thought now would be to get the data off iCloud using CloudKit and store it on a local computer instead. From there I can strap a 1Tb drive to it and we should be good for a while. So that’s what I’m thinking, do you think I’d be able to throw something basic together without much background knowledge on backend development? 
Maybe you could do it. You should research prior art. Someone may have already done it for you. I’d also take a better look at the business case. Why did you not account for data usage? Do you actually need to store the images with full resolution?
So originally I wasn’t planning on doing any image storage but one day I opened my mouth and kinda just said oh that would be cool and they jumped on it. After that storage was a concern but leading into it, I hadn’t considered those. Right now, I’m compressing the photos to about 30% so full size images aren’t of much concern at the moment. If I had my own “server” I may consider upping it to a little less lossy compression. 
As long as your users don’t leave your shop area then you are fine. But really, if these are the questions you are asking you have a long road ahead of you. There are multiple technologies and expertise you will need. Doable, but hard.
thanks a lot i will take a look at it tomorrow when I get the chance!
u/tippr $1
u/GetSwiftyWithIt, you've received `0.00073902 BCH ($1 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
Could you please explain in the original 'Article.swift' file why NSObject is needed? I only included it because of a tutorial I followed
Thanks for the positive feedback. 
Watching Brain’s videos was where I first learned how to code without storyboards. His is an excellent resource. I also wrote an introductory post on how to layout views using SnapKit https://medium.com/@malcolmcollin/look-mom-no-storyboard-1e721101c29f?source=linkShare-a7e1b5ab13b5-1518240451
The universe is magical. I just finished this tutorial and was thinking about reaching out to you. I have some questions for you if your up for them. 
Hey, awesome app. Can I request something though? When I pull up the currently playing music it always shows the volume overlay over top of the currently playing controls. You could intercept that a la Instagram or av player possibly. But beautiful app. Love the drop shadow on the table/collectionview cells. +1 from me! 
This is a pet-peeve, but please stop using "Swift" and "iOS" interchangeably. Swift is a programming language. It's a general purpose programming language. The title of this post was very confusing to me. You're talking about programmatically building up the UI of an iOS application.
Thanks man! Glad to hear that you like it. The volume overlay is super annoying yeah, it actually only started showing in one of the recent iOS updates. Will try to fix it for v1.4. 
Does anyone consider Server Side Swift or is it still the "odd man out"?
2TB Of iCloud storage is only $9.99/mo and likely far more reliable then a cheap 1TB drive. 
Awesome app! But as an Apple Music user, I feel that having only Spotify support really isn't the best way to proceed.
Totally agree. Prioritised Spotify for V1, but it'll support Apple Music soon. I have few other things that I need to prioritise for the update next week, but hopefully I'm able to support Apple Music by the end of this month. 
There is no news in this. It’s just the thrill of reading someone’s texts. 