That is a good idea; does it work properly with automatically adjusting content insets though? For example, if the table view of the controller is not at the bottom, but 20px further to the top, does it automatically reduce the content inset by those 20px? I'd expect that it doesn't work, or only in specific circumstances.
Thanks bro!
AppCode is for app development and it always requires XCode to be installed; in fact it uses the XCode project layout and everything. CLion with the Swift plugin doesn't need XCode at all (as such it's also cross-platform) and it directly supports the Swift Package Manager, something that even XCode doesn't do currently.
Also, don't do this force unwrapping stuff. Rewrite to if let ctx = NSGraphicsContext.current?.cgContext { and remove all force unwrapping !'s inside the if.
Okay I think I'll try to code it this way
Add a numeric one for the iPad.
Here’s an example of how to access that table: public func score(reps: Int, age: Int) -&gt; Int? { guard 17...56 ~= age, let scores = maleStandards[reps] else { return nil } switch age { case ...21: return scores[0] case ...26: return scores[1] case ...31: return scores[2] case ...36: return scores[3] case ...41: return scores[4] case ...46: return scores[5] case ...51: return scores[6] case ...56: return scores[7] default. : return nil } }
Here are some more software deals
Hacking with MacOS is half price https://gumroad.com/l/hwmacos/blackfriday18
You’re welcome 
You have to use the libproc API which is defined in a C header that looks like this: https://opensource.apple.com/source/xnu/xnu-2422.1.72/libsyscall/wrappers/libproc/libproc.h.auto.html You have to get all the pids then get info for each pid. I recently wrote this code in Swift at my job but didn’t find any quick Swift examples. Let me know if you need further help and I can try to put together an example later.
Would you recommend that one?
Thanks! I'll look into it. 
thank's
Absolutely recommend being comfortable with the command line. You can often do things faster there than in the UI like dealing with multiple files, but also things like version control are more flexible in the command line than a UI.
As the other guy said it’s pretty important, but it’s one of those things you can learn just by using it over time. You’re following tutorials so most of them will tell you how to do stuff, and slowly you will start to remember how things are done.
Yes, great book
I am asked this question in interview. At that time I don't know about it. But I know about out parameter in SQL server. So I tried to give answer and now I checked it is same as I have given answer. 
Make sure to export you account profiles in Xcode as this will include the private keys from keychain -especially if you have your distribution certs installed. Makes it easier to set up once reinstalled. 
Also I want answer why apple set default value as 15. I am not sure but it may be due to design approch for nice display of table view.
GIF / video import and editing for Meme Deep Fryer. A long time coming but seeing results now! 
I rely on CLIs for git, obvious things like cocoa pods, and basic file and file system operations. As far as swift itself, relatively unimportant; projects and the ecosystem as a whole: major timesaver compared to all the UI-based alternatives that people use as crutches
[Code Review Stack Exchange](https://codereview.stackexchange.com) is good but public. You can solicit here or on other sites to exchange code reviews but you'll have to go through some legal hassle. NDAs and the such. If you're a business you should have a lawyer handle this for you. There are also paid services that will help you out for a fee. Again, have an NDA and contract prepared by an actual lawyer. Another approach is to create modular code with little coupling and business logic. Stuff that if you have it review publicly then it won't give away any major business secrets. Then put those components up for comment here or on other sites. Truthfully, there isn't much cutthroat competition in this kind of programming space so it's unlikely you'll suffer financial loss if someone uses your code. The money is usually in the data and contact with clients so be sure not to leak any of that.
No. It’s an open source language so you can use it for other things. That said the most typical use of swift is iOS and macOS apps. The other thing is that most of apple’s libraries are not available to the open source variant. So there is nothing out of the box for working with ui, metal, coredata and so on if you are not compiling for an Apple platform.
I just shut it down temporarily to make it compatible with Carthage and an example project. It will be back up soon!
Its back now
The command line is extremely useful, especially if you develop a lot of utilities and one offs to get a job done. I’ve written many Python CLU (command Line Utilities) over the years to get quick jobs done. So from that perspective the command line utility is perhaps the fastest way to processa chunk of data. By the way Swift is quickly becoming a language that could replace Python. Beyond that I really think it is a good idea to learn to develop an entire program using command line tools. This would help many better understand what is happening under the hood of an IDE. I’m not sure if I would call Swift ready for this. The ideal language here would be C++ mainly due to streams. It isn’t a question of going deep into the process but rather just build and link a simple C++ program that exposes the basic build process and handling file I/O. One or two such CLU under your belt and you should have a better understanding of what an IDE or make file are doing. So yeah understanding the CLI is very important to being a well rounded programmer. The third thing here is that there are a huge number of command line apps out there that can make anybodies life easier not just a programmers. Ive used such software to extract data from PDF files, download YouTube videos, and a host of other activities. In many cases, especially on Linux and Mac OS, the available CLU are often your best high quality choice. 
So is this to use a second display as another screen which view is controlled by a UIViewController?
Like everyone’s saying it’s absolutely a great idea to learn to CLI. In fact, Mac OS’s CLI (and Linux for that matter) is considered one of its selling points. However, for just starting to learn to program, especially for iOS/Mac OS, it’s not really that necessary. You could probably skip it to focus on Swift for now, but definitely go back. It’s not as intimidating as you think! There’s just a couple commands you’ll use regularly to move around like *ls, mv, and cd*, and then you’ll realize everything’s a program, and these programs can be chained together like commands in a programming language, making your OS incredibly powerful. 
Most independent/small projects aren’t code reviewed! 
Wear iz you're terminal punctuation four you're first sentence cuz if your going two be pedantic than dew it write 
I see this is pre-release and I know it’s a stretch but will it have Windows support? 
You may know what SSMP is. Not everyone else does. Please explain what it is when you submit your posts.
Can we talk about bike shedding much? 
I think I just got a seizure. 
"Get the bundle running applications" doesn't make any sense. What do you mean?
so **E X P R E S S I V E**
Which is a real shame. Code reviews help us by having multiple sets of eyes finding anti-patterns, bad assumptions, ways to optimize and improve the code. Getting your code reviewed is probably one of the best routes to becoming a better programmer. It's the independent projects that need this the most. Any time you have one person working on a project there is a major chance they will get caught on a bad path and not be able to see the forrest for the trees. Having someone step in and give a fresh perspective can save quite a bit of time and money later.
The "CLI" as you call it is a UNIX shell. The answer to your question is, "what do you need to use it for?" I use it every day and for many things. 
One of the worst things about Swift imo. There’s a bazillion ways to write the same exact thing.
It's exactly the same thing.
You dawg: names.sort() names.reverse() 
Some people think your code is good if it is compact. 
Aren’t they conceptually equivalent?
All programming languages can write “the same thing” in different ways. “1+x” and “x+1”, for a simple example. 
/r/titlegore Why are* singleton**s*** bad? Can you take the time to create an understandable sentence? &gt; The reason is design pattern. The reason**s*** are* design pattern**s*** &gt; Why its is bad design pattern? Why is* it* a* bad design pattern? Jesus, I can't read what you typed. It's just painful. 
Sorry for my bad english.. However, did you get the main part? If no, how can I improve my post?
That's pretty disingenuous of you. There's miles of difference between swapping the operands of the `+` operator, and having 12 different ways to call a function to get the same result. It's like the cancer that is Perl's TMTOWTDI, only not quite as bad.
This is exactly my challenge; especially since I'm new. I have a (very basic) working iOS app that I put together myself, but I'm not confident in how I structured the architecture. And, as I grow in the future, I imagine my projects will also grow in complexity and an audit/review would always be helpful during this learning phase.
Why you bother then? You suck. 
Thanks for the input. I have a generic NDA setup; however it's through an online resource and is fairly boilerplate. I'm hesitant to use it for more than people just demoing an app or giving feedback on the design. Are there any more specific resources for this type of scenario?
This is helpful; thanks! This encourages me to make my code more modular, which it should be anyways.
I guess you even didn't try run it. Basically it will show only "Applications" and not daemons, agents, other stuff just like the shell ps command.
I do most work independently. You get better at knowing what you need to finish, test and double check. Eventually someone else has to either look at the code or the end result. A coworker used to tell me never show a fool half a job. Meaning you as the developer have to do extra testing and polish or the fool you show it to will ignore the cool thing you did and focus on the minor omissions or lack of polish. 
Isn’t this meme supposed to go from most simple solution to unnecessarily complex solution? OP I think you did it backward or I don’t know my memes.
An example would be great. My version uses NSProcess and I run the `ps aux` outputting to a memory pipe string, so I will quickly loop to identify my needs. 
The lock on your front door will keep most people out, but if someone is determined enough they will break into your house. An NDA is about as good as it gets, and it’s about as much as you need. If someone is going to steal something, it will be your ideas, not your code. And your ideas become public the second it’s published. I wouldn’t worry about it too much.
This at least makes the loop from using a function to using a function (in the form of an operator)
I don’t see how this is a bad thing. This is one of the things that makes Swift so powerful. You see this a lot in the realm of functional programming and it’s incredibly useful
&gt;TMTOWTDI [https://en.wikipedia.org/wiki/There%27s\_more\_than\_one\_way\_to\_do\_it](https://en.wikipedia.org/wiki/There%27s_more_than_one_way_to_do_it) \- for anyone else you can't be arsed to Google some obscure acronym, just to understand what some idiot on the internet is trying to say, only realise you have wasted two minutes of your life on useless drivel. Go outside. Unless it's like 104º, then maybe don't.
 names.sort() .reverse()
You can't, sort() and reverse() are mutating functions that return void. names.sorted().reversed() Returns a copy of a copy of names that has been first sorted and then reversed, so to make it one statement: names = names.sorted().reversed() 
Thank you so much!
Holy shit you’re getting down-voted, lmao. Are people here that dense? This guy is completely correct and yet gets down-voted. And the guy who said “It iz like 1+x is same as x+1!!!1111” gets upvoted. Im pretty much convinced all of these programmer subs are mostly entry level programmers who know practically nothing.
&gt; You can't, sort() and reverse() are mutating functions that return void. Whoops! Yes, you’re correct. Additionally, both of these throw the extra O(n) reversal that aren’t present with the sorts in the original image. 
Singletons aren’t inherently bad, but they make it easy to force dependencies between components. If you call your singleton directly from your controller then you’ve forced a dependency in the controller. Say you wanted to write a test for your controller but didn’t want to actually make a network call because it talks to your production server. If the controller calls the singleton directly then you’d need to add some kind of testing logic to the network code itself. The way to correct this is to use dependency injection (DI). Instead of calling the singleton directly, you pass an instance to your controller as part of the init. In your app, you can still pass the singleton instance during initialization but the controller itself only cares about the instance that it was given and so the dependency is broken. In this scenario, if you wanted to test the controller, you could write a fake/mock/alternate network implementation and pass that during init. This concept has benefits beyond just testing. DI gives you flexibility as requirements change because your controllers and other components can be reused more easily with behavior changing based on what you’re passing at init. Lastly, there’s a related topic called protocol orientated programming that also ties in well with DI and testing, but that’s getting a bit too far away. 
Wow really great post! Yes I will go and apply DI. I do that in Android too. This means that my singleton(Actually it is shared class), which is created in a following manner: **class Repository{** **static let shared = Repository()** **}** Can still be used and I would conform to mvvm and overall CLEAN app architecture?
Yes
Yes. I'm not sure OP understands the meme.
It’s a well known problem among teams. A typical programmer spends much more time reading code than they do writing it, so programming languages that make choices to optimize write-ability (as swift is doing here) over readability, are making poor choices for the productivity of their teams. I know that it looks very cool, and it really feels good to take something that was multiple lines and condense it down into one, but you’re also putting a burden on anyone trying to figure out what you did (including future you!) The typical retort to this is, “just get developers that don’t suck!” But cognitive overhead is still just overhead, and we’re humans and we don’t have an infinite amount of it. Overhead is better removed and our languages are better if they’re aligned with how we work.
This sounds subjective to me. The last example in this post is much more readable to me than the first. Most readable version would probably be `names.sorted().reversed()` but it’s a very simple example so almost any version is pretty easy to read. Ultimately this just seems like an additional tool that developers need to know when it’s appropriate to use. I’d rather languages be more flexible than limiting.
&gt; A typical programmer spends much more time reading code than they do writing it The same is true of prose, and yet we find delight in the fact that there’s are myriad ways to express the same thoughts and get our points across.
Ok I’ll try to get to it this weekend.
So do you follow me to correct my spelling? This is the second post.
I just updated the README.md to be more simple and explanatory. Currently, this framework makes your device a trackpad and keyboard and the display becomes the main view like a desktop
[Comment](https://reddit.com/r/swift/comments/9z7yb3/_/ea73avv/?context=1)
shut the fuck up you pretentious moron. get off your high horse and out of your basement. 
Can we ban images?
Genuinely surprised by the last one, just started Swift recently but always good seeing little nuggets like the above (closure syntax in swift took me some time to get used to)
Yes. I think that would be fine. 👍
Yeah, you’re right. I messed it up. :(
Yeah, you’re right. I messed it up. :(
Have you **noticed*** that* the* tableviewcell separator has a leading* space. Why is* this*? : [
It's usually not wise to sign an NDA. I will walk away from an opportunity rather than sign, in most cases like this. The risk is they will disclose to you an idea that you were already thinking of working on. Now that idea is strictly speaking tainted, and effectively dead for you as a future opportunity because you have no way to prove you had it before. You might say "well then, protect yourself by writing down all your ideas" but this is literally impossible to do. Any conversation under NDA is a minefield of idea-killing that does not benefit you. 
https://stackoverflow.com/questions/38980887/protocol-extension-on-an-objc-protocol literally the first post on google when you search for your error.
I’ve only barely looked into this, but I think you want to look into OpenCL. Of course, then that bit of code will be C.
I thought of another one. ## Labelled Control Flow So `goto` isn't a keyword in Swift, but that doesn't mean the language doesn't have labelled control flow. In fact, labels will parse just fine before `while`, `repeat`, `for`, `do`, and `switch` statements. This feature exists not to allow arbitrary jumps, but rather to disambiguate nested control flow. The Swift book offers an illuminating, if twisty, example to justify this ``` let finalSquare = 25 var board = [Int](repeating: 0, count: finalSquare + 1) board[03] = +08; board[06] = +11; board[09] = +09; board[10] = +02 board[14] = -10; board[19] = -11; board[22] = -02; board[24] = -08 var square = 0 var diceRoll = 0” gameLoop: while square != finalSquare { diceRoll += 1 if diceRoll == 7 { diceRoll = 1 } switch square + diceRoll { case finalSquare: // diceRoll will move us to the final square, so the game is over break gameLoop case let newSquare where newSquare &gt; finalSquare: // diceRoll will move us beyond the final square, so roll again continue gameLoop default: // this is a valid move, so find out its effect square += diceRoll square += board[square] } } print("Game over!")” ``` Personally, if you're writing code that needs to disambiguate loops like this, you should probably consider refactoring it.
I was curious myself, so I put together some code: [https://gist.github.com/kainjow/0e7650cc797a52261e0f4ba851477c2f](https://gist.github.com/kainjow/0e7650cc797a52261e0f4ba851477c2f) If you haven't interacted with OS-APIs in C/C++ much then it may be hard to follow as it's basically C programming in Swift, doing manual memory management. The actual equivalent in C would be less code though, but it's nice to be able to do it all in Swift. To see how fragile it is, try duplicating one of the deallocate calls and see what happens.
func memeMaker(gif: Gif, video: Video) -&gt; Meme { }
First and last are great. `reverse` is code that speaks to you. I suddenly start wondering if `reverse` could be defined like an alias for `&gt;`
I used these techniques in a project recently and felt they worked pretty well. http://merowing.info/2016/01/improve-your-ios-architecture-with-flowcontrollers/ http://merowing.info/2017/04/using-protocol-compositon-for-dependency-injection/
Make a superclass for all you controllers and have base methods there, override them as necessary.
Superclass does not have to be abstract. Protocols are shiny new thing that they want to teach you to use. Does not mean they work everywhere. UIKit is Objectve-c and will stay there for the foreseeable future. Objective-c does not support Swift protocols/extensions natively. Basically, when using Objective-c, you'd sometimes have to stick with "old" ways - delegates, observers, dynamic types, and yes - subclassing. 
I personally avoid storyboards for reasons like the difficulty in injecting and controlling initialization. Those SO answers look like what I would expect to need to do to work with the storyboard lifecycle. &amp;#x200B;
You can only use a variable in the same **scope** (I.e. within the same set of curly brackets) in which it was created. You’ll need a variable to hold an array that’s not inside a function. Set the contents of that array to be the array you decoded from the JSON, and use that outer array in your table view data source and delegate methods.
/u/kirbyfan64sos I am hijacking this, as I couldn't find you elsewhere. I just tested your Swift flatpak and it is working well on ubuntu 18! It's really such a useful thing. The problem is that is still on 4.1, are you planning to update it at all?
When your device is connected to a display... what does "a display" mean? I have a macpro on my desktop that has a display and USB ports... So if I connect my iPhone to the USB port on my computer it would act as a desktop? Or is it for a smart TV where I also have a USB port?
You can use AirPlay or connect via a Lightning to HDMI adapter
So what kinds of TV does this work with and what does it do once it's connected to the TV?
It works with any TV/monitor with an HDMI port or an Apple TV with AirPlay. Basically, as long as there’s an adapter to connect your device into your TV/monitor’s input, then it would work. Once connected with the default settings, your device becomes a trackpad and keyboard and the display has the main view controller for your app. There’s a GIF on the README.md for what it looks like.
Apple &lt; Bird because when you compare strings, the comparison is character by character according to ascii value. “A” is 65 and “B” is 66 so Apple &lt; Bird. If you were to compare Beta &lt; Bird that would also be true as it moves to the next character. “e” &lt; “i” so Beta &lt; Bird.
Thank you...haven't coded since Basic/COBOL/Turtle were taught &amp; am just getting back into it.
This might be bad advice to give a beginner to Swift. If programming Swift across Linux and OS X than third party libraries like Pandas might be better since you cannot count of Apple Foundation being on both platforms. If just programming for Apple platforms then I think it’s always a bad idea for the beginner to use third party libraries / cocoapods until one understands what Apple’s given you. - It hinders the ability to see how the different APIs Apple built work together - it makes it harder to see which third party libraries are actually better and why I think this newbie should learn the Codable protocol and how to call Foundation’s JSON decoder first. And I don’t consider this example a proper use of the Codable protocol: URL tasks generally shouldn’t be used in a Codable type. - Codable should be used on “model” types. “What something is” - URL data tasks should be used on “controller” types. Use in a type that “performs actions”.
&gt; The typical retort to this is, “just get developers that don’t suck!” And that is a dumb retort. I've always said that you should write your code as if it will be maintained by a vicious psychopath who knows where you live. The thing is, in six months or so when you go back to that code, you'll be the vicious psychopath. Nobody can memorize everything about an entire code base, so even the person who wrote the original code will need to re-learn what it does. Make your code as clear as possible, and if you can't make super-ultra-awesomely clear, put a usable comment next to it.
vim got syntax highlighting, indenting, linting and error checking working with [keith/swift.vim](https://github.com/keith/swift.vim) after building [apple/sourcekit-lsp](https://github.com/apple/sourcekit-lsp) server and vim client [prabirshrestha/vim-lsp](https://github.com/prabirshrestha/vim-lsp) managed to get it working just by adding this into my .vimrc config. ` if executable('sourcekit-lsp') " HAD TO USE FULL PATH TO EXECUTABLE au! User lsp_setup call lsp#register_server({ \ 'name': 'sourcekit-lsp', \ 'cmd': {server_info-&gt;['sourcekit-lsp']}, " HAD TO USE FULL PATH TO EXECUTABLE \ 'whitelist': ['swift'], \ }) endif ` just note that you need to build the project in debug mode with `swift build` in order for the index database to be updated. For that I have mapped the Syntastic build command to F4 key with `noremap &lt;silent&gt; &lt;F4&gt; :SyntasticCheck&lt;CR&gt;` got some extra stuff like log console, debugger, tagBar, file manager and dev icons working although I haven't updated the repo yet with the latest stuff. you can check it out at [ha100/dotfiles](https://github.com/ha100/dotfiles) 
You need to deserialize the JSON data by using the Codable protocol. 
What's `#swift`? Some kind of new compilation directive like `#if`?
I’m not sure what subreddit this belongs in but pretty sure not this one.
It’s a nested array. You need to do (callResult[0] as! [Any])[0] Of course force unwrap is a bad idea, this is just a shortcut. 
It would need to be broken down by age. At ages 17-21 for 5 pushups they get 9 points for males. I'm completely new to this whole Swift/coding thing. It would be alot of code but could I do this? If the 18yr user did 5 push add 4 to get their score of 9 so on?
Right, if you look at my [example function](https://old.reddit.com/r/swift/comments/9zledy/question_on_table_data_best_course_of_action_new/eaav8au/) I convert the age to an index with the formula: (age - 17) / 5 I make sure to test that the result is a valid index with the pattern match operator `~=`. If it's not then the result is `nil`.
I mean, google "swift automator action" and this is the first result: [Swift Automator Action Xcode Template](https://macosxautomation.com/automator/xcode-swift-template/)
As CompC mentioned, it is a scoping issue, the `returnAData` declared inside the getJsonUrl() is invisible to the numberOfRows() function. You will need to declare another variable at the view controller level so both of the function can share the variable. eg: class ViewController : NSViewController { var users : [User] = [] func getJsonFromUrl() { struct User: Codable { } guard let URLReturnA = URL(string: "http://xxx.xxx.xxx.xxx/backend/returnA") else { return } URLSession.shared.dataTask(with: URLReturnA) { (data, response, error) in guard let data = data else { return } do { let decoder = JSONDecoder() // as the returnAData is declared inside the getJsonFromUrl function, // the table view cant access it let returnAData = try decoder.decode(Array&lt;User&gt;.self, from: data) // assign the returned data to the users array declared in view controller // then tableview can access the users array users = returnAData self.tableview.reloadData() print(returnAData) } catch let err { print("Err", err) } } .resume() } } extension ViewController: NSTableViewDataSource { func numberOfRows(in tableView: NSTableView) -&gt; Int { return users.count } 
Awesome! I wish I got to see this a few days ago...
I’m trying to create an app/tweak that allow me to get customized notifications and auto reply. How do I access when an imessage comes in, and see the content of the message and metadata? How do i have the app send a message?
Nope! Reversed is a lazy container that wraps a collection and just intercepts indexing and method calls to do the right index math. No actual reversing happens. O(1) time and space cost.
I think you've got it all wrong. So there are multiple syntactic sugars that can be applied, leading to many different ways to write the same code. This ***helps readability*** and ***hurts writability** (because you have think about which is most appropriate, there's no universally best answer). Have an operator that does exactly what you need? Great, use it directly. Don't clutter up the readability by wrapping it (which is already a closure) in another closure. Have multiple arguments, whose purpose isn't obvious (e.g. poorly designed APIs that use completion handlers of type `(result: Result?, error: Error?)`) ? Great, then toss in some meaningful names! (I. E. Not the args of `sort`, those are fine to be `$0` and `$1`,because it's expected knowledge to understand such common APIs) Have a context in which the return type isn't obvious? Great, annotate it in explicitly! Having multiple gradations of syntactic sugaring let's you pick the most appropriate level of verbosity to clearly communicate. It let's you use your best judgement to neither dwell on the small stuff, nor to over-simplify the complex stuff.
`array.sorted().reversed()`
It’s different, sure, but not miles. It really is a very general thing. Also, there isn’t 12 ways to call a function. This function gets another one passed in, so there is obviously infinite ways to write it, and this is case in all languages like that. 
&gt; “It iz like 1+x is same as x+1!!!1111” Notice how I didn’t actually say that? First, I wasn’t being childish and second it was a trivial example since I was on mobile. &gt; Im pretty much convinced all of these programmer subs are mostly entry level programmers who know practically nothing. While that happens a lot, in my case you are very wrong. 
&gt; Notice how I didn’t actually say that? First, I wasn’t being childish and second it was a trivial example since I was on mobile. The childish “it iz same” was just me being mean and making fun of you, and I’m sorry. &gt; “1+x” is the same as “1+x” for a simple example. He’s not wrong. You’re being disingenuous or have no clue, so pick one. If you’re being disingenuous it wouldn’t surprise me. People in this sub have tried to dox me for saying Swift compiles slower than Obj-C. He’s talking about the huge number of syntax patterns you can use in Swift to accomplish the same thing. That isn’t related to what you said in any way, shape, or form. The multiple ways you can write out a closure isn’t equivalent to how operator functions allow you to put their variables on either side. &gt; While that happens a lot, in my case you are very wrong. That’s very hard to believe given you don’t understand what the guy is saying. But whatever you say.
Ahh, yeah Reddit doesn’t use tags. They just look silly. 
Sure https://github.com/nemesit/RunSwiftScriptAction
So what you’re saying is we should write it in Objective-C for now?
UPDATE (same issue as before): I just downloaded that action Script. I had to change it over to my provisioning profile "team" to compile. I launched Automator from the command line. I added the action to Automator's library. When I drag the action into the workflow area, Automator GUI throws up that panel stating 'The action "Run Swift Script” could not be loaded because its executable is not loadable...' Twice over the Automator command line prints out `dyld: warning, LC_RPATH @executable_path/../Frameworks in /Users/joshua/Library/Automator/Run Swift Script.action/Contents/MacOS/Run Swift Script being ignored in restricted program because of @executable_path`. I'm at a loss as to how this was ever working. I'll poke around the build settings and stuff. This project was built for 10.12. Anyone running 10.12 that can give it a go?
UPDATE 2: There seems to be a workaround with command line tools. I'm not sure if this would make Gatekeeper happy upon distribution. Here's what's working so far: - Create a command line tool using Xcode Swift template. - Compile it. - Create an Automator Action of type Shell Script. - Copy command line tool into the root of the Automator action project in Xcode - Set the shell script to: cd "$(dirname $BASH_SOURCE)" open ./doStuffInSwift It works. I can add it as a workflow and run it. All it does it print Hello, World in a Terminal Window. I'll play with it and see what I can make happen.
&gt; Apple &lt; Bird The strings are "apple" and "bird", not "Apple" and "Bird". &gt; “A” is 65 and “B” is 66 so Apple &lt; Bird. "a" is U+0061 and "b" is U+0062. &gt; the comparison is character by character according to ascii value. Canonicalized Unicode value, not ASCII value.
You’d probably need to use ssh but there might be other ways 
Ah Ok, Thanks
What specifically do you want to control? Do you want to be authenticated? If you don't design this with the least-privilege concept in mind, it would leave either your phone or mac vulnerable. There are a number of ways to share files. You can use mounted network shares using things like NFS or samba. For executing a program...this is where it gets sketchy. Apple does far out of the way to control this. What would you be trying to execute and why?
Apple's really gone into the world of "do you have the permissions and certificates to be doing this?", for a long time. I'd look into a messaging system to message a central command router on a computer in the local network. Apple does have XPC, or cross process communication. In the olden days, I used Apple's iChat as as command router and logged in to all the machines I wanted to send messages to. Then a crAppleScript was set to parse the received messages and route commands to other apps. It's crappy for sure, but it served my purpose.
No, I was thinking something like Alfred Remote on iOS, 
Really?
ASCII and Latin-1 are subsets of Unicode though, so any strings that only contain characters from those sets will compare like ASCII and Latin-1.
Should be possible to get it to run on mojave with the current swift version, but waiting for abi stabillity would be better anyway
....what? I’m...looking for authority? What even...? I guess I’ll reply to your other comment.
&gt; So there are multiple syntactic sugars that can be applied, leading to many different ways to write the same code. This optimizes for readability and at the cost of writability (because you have think about which is most appropriate, there's no universally best answer). Social advice 101: Don’t start sentences with “so”. Makes you look like a jackass. Unless, you know, thats what you’re going for. But yes. There is no universally best answer. &gt; Having multiple gradations of syntactic sugaring let's you pick the most appropriate level of verbosity to clearly communicate. It let's you use your best judgement to neither dwell on the small stuff, nor to over-simplify the complex stuff. And it sacrifices conformity and puts more reliance on the developer to utilize the syntactic sugar appropriately leaving more room for error in creating unreadable code. There are pros and cons, and that’s actually where the debate lies: Do we conform and force people to write code clearly, even if turns out to be more verbose? Or do we give freedom to the devs to decide, providing slightly faster development time, but risking readability if the dev messes up? This is the debate, and one isn’t better for every situation. My response to the other guy was only pointing out that operator functions being able to have their variables on either side is not related to what he was talking about. And if you were actually serious: As for your post clarifying your position at a “big-four” and being an “authority” (lol), Ive seen clueless devs get into Google. Just because you studied how to pass a programming interview doesn’t mean you can actually program. So I’d be careful throwing that around like it means something.
Interviewing for my first iOS developer role. 
Idk if apple’s multipeer connectivity would work, bt maybe 
Why dont you just take one and ignore the others?
I would just create an optional property in your controller maybe called `var trackedPlaneAnchor: ARPlaneAnchor?` then in renderer(_:didAdd:for:)`, do something like: func renderer(_ renderer: SCNSceneRenderer, didAdd node: SCNNode, for anchor: ARAnchor) { switch anchor { case let planeAnchor as ARPlaneAnchor: // if added anchor is a plane anchor guard let trackedPlaneAnchor = self.trackedPlaneAnchor else { let planeNode = SCNNode() // obviously will need geometry if you want a "real" plane node.addChildNode(planeNode) self.trackedPlaneAnchor = trackedPlaneAnchor return } default: // if not a plane anchor // do something else } return } so if you ever want to reset your anchor you can just set `self.planeAnchor = nil`. Obviously if you're tracking other anchors besides just plane anchors you'd have to modify the above code since the code only allows for plane anchors. You can also use `renderer(_:didUpdate:for:)` to update the plane you already added. 
Ssh or mosh, I recommend blink shell on the App Store. It’s open source so you can compile it yourself and side load it on your device.
I just learned how to easily import a full dictionary into Swift as a .txt file, and found an algorithm to check for all instances of a string. So I can now put 9 random letters on the screen (maybe pseudo -random to add a few vowels) and find all the possible words. I am going to make a bunch of word games using this new found coding technique. 
I suspect Automator is going to be deprecated in the next OS X release. I read that Apple laid off the guy in charge of AppleScript and Automator. I think iOS “Shortcuts” is the new Automator and will come with Marzipan. This might also explain why there is no Swift Automator template in Xcode.
Ooh, that’s fine :)
Have you tried replacing `@executable_path` with `@loader_path`?
Automator or some alternative like shortcuts won’t go anywhere anytime soon. Too many people/companies including apple depend on it.
You have to set a notification not let the app run in the background
Would you be able to provide more detail about implementation?
In the AppDelegate there are specific functions which are called when the App is closed/resumed/restartet. In there u can save the current Timestamp (for example in NSUserDefaults) and reaccess it when opened
I think I found what you were referring to - [https://stackoverflow.com/questions/31862394/continue-countdown-timer-when-app-is-running-in-background-suspended](https://stackoverflow.com/questions/31862394/continue-countdown-timer-when-app-is-running-in-background-suspended) Take a look at the answer by Roland Keesom. I understand the basis for the answer. However, I am unsure which functions to use in the app delegate. I presume I would use applicationWillResignActive and applicationDidBecomeAtive... but are those two delegate functions correct? 
These people are right, but there are also apps like Alarmy that last I knew used a “sleep music” feature as an excuse for the audio background mode they request to keep the app alive longer. 
I haven't done this before, but isn't there calendar functions that would do this? I'm thinking you could calculate things and store the results in a Core Data table or anything and check each time the app is opened or restarted. You could store a start point and what they want, so say it's now + 5 hours. You store now, and every time the app opens, reopens or every period of time (10 min, 1 min, 1 hour whatever you want) then do all the calcs for all these events. If there's no alarm, you really shouldn't care about being asleep, background, foreground or whatever... You just check the events every time the app is started, re-started, or every time marker (whatever time resolution you want). Maybe I'm not understanding why sleep/background would be an issue, you only need to act when your app is actually being used, right?
To my knowledge, there's no way to do this. You should investigate CUDA, Nvidia's GPU programming platform. That said, be aware that doing math on the GPU doesn't necessary make it go faster. The clock speed of a single GPU core is usually slower than the CPU. A problem lends itself to the GPU when it's vectorizable, such as matrix math. In that case, it's deployed to the GPU's many cores in parallel.
Yes. More specifically: @loader_path is already on the list (it’s an array of paths). I’ve tried deleting the @executable_path so it would go on down the list. That doesn’t work because (and let me know if I’m mistaken, this is foreign to me) @loader_path means an OS X built-in or UNIX-layer folder that *is the same for everyone*. What it needs to load are the Swift dynamic libraries included in the action bundle. The action bundle path will be *different for every user* because it’s installed under the home folder (in ‘~/Library/Automator’/). Later the Swift ABI will stabilize and we can stop shipping bundles of binary code + Swift dynamic linked libraries. Then the @executable_path will not have anything to offer. The @loader_path in the array will load Swift libraries from some System or UNIX folder (I honestly don’t know where the OS X built-in dyld’s are).
In the post, there really are only two ways to write it that are fundamentally different: 2-5 are all closures with different optional parts of the closure left out. It allows for a few different ways to write the same thing, that's true, but it's not like those are different in some fundamental way. It's just some type information omitted, and an omitted return. 1 &amp; 6 are also very similar, in that an existing function is passed in. It might be surprising that an operator like `&gt;` is a function, but that's just the way it works. (It is possible to call an operator like a function, e.g. `let compared = (&gt;)(1,2)`). So I don't really think that this criticism is valid.
That's two operations unless it's optimized out to one call
Bad practice, I don‘t want apps on my phone which use „hacks“
Local or APNs? 
\&gt; Social advice 101: Don’t start sentences with “so”. Makes you look like a jackass. Unless, you know, thats what you’re going for. I had a hard time phrasing that sentence concisely. "So" worked well to introduce a subject about which I'm going to refer back to. It worked moderately well enough, but any amount of jackass-ed-ness you read into it is on you. Expressing tone on the internet is hard. You would have a more pleasant time if you assumed good intentions, rather than assuming that disagreeing people are assholes. \&gt; And it sacrifices conformity and puts more reliance on the developer to utilize the syntactic sugar appropriately &amp;#x200B; Great. I love being given the freedom to use my best judgement to produce the best variant in a given context. As a hard and fast rule, I don't follow any hard and fast rule. They restrict your ability to use context-specific information to use your best judgement to come up with nuanced and reasonable solutions. I'm not sure what you're advocating for here, but are you arguing here that there should be only one syntax? (Assuming yet) If there were to be one, there's only one option that wouldn't cripple your expressive power across the board, and that would be to only have the full form, with named args, annotated arg and return types, and explicit capture blocks. I do see the benefit the conformity would bring. It would slightly ease the learning of Swift, but I think it comes at a cost that's too high. You get code that loses readability from over-verbosity. At that point, you basically end up with Java. I love its great JVM/debugger/profiler eco system, but the code is just always so verbose it's like reading the dictionary. I've seen what it's like to work in a context where programmers are a commodity item, whose purpose is to just churn out thousands and thousands of lines of enterprise Java sludge. It's not fun, and it's really hard to maintain. \&gt; leaving more room for error in creating unreadable code. It gives you freedom to fuck up, sure, but even the worst case (mindless use of anonymous arguments, particularly when reducing dictionaries, you get stuff like \`reduce(\[:\]) { $0\[$1.0, default: \[\]\] += $1.1 }\`) isn't \*that\* sharp. It's not a super strong argument, but at least we're not introducing undefined behavior or run time bugs. If you want an example of a fun (/s) sharp edge, see "object slicing" in C++. &amp;#x200B; \&gt; And if you were actually serious: As for your post clarifying your position at a “big-four” and being an “authority” Of course I wasn't serious! Hence the "/s" in my comment. I pulled rank only because you tried dismissing people on rank. You insinuated that most people here are entry level programmers, probably in an attempt to discredit my statements. I merely cited myself as an example. I'm not an entry level programmer, so you're going to need to find a different way to dismiss me. &amp;#x200B;
I talk about this in other comment on this thread, but \`reversed\` is O(1) in both time and space. &gt; Nope! `reversed()` returns a lazy container that wraps a collection and just intercepts indexing and method calls to do the right index math. &gt; &gt; No actual reversing happens. `O(1)` time and space cost. &gt; &gt;I'm not sure if sort used an in-place algorithm or not, but it could be the case that `sorted` adds space complexity. Then again, if the buffer is uniquely referenced, it should probably mutate it in place.
Local. 
Just store it serverside. If you were making, say, a pay walled game with stamina, you'd be crazy to store it on the client. As a general rule of course thumb, there is no such thing as protected/tamper proof data on a client device. 
Swift playgrounds for the iPad and the apple wwdc session videos are all good places to start
Interesting stuff. There's some documentation around that?
you can use UIImageWriteToSavedPhotosAlbum() https://developer.apple.com/documentation/uikit/1619125-uiimagewritetosavedphotosalbum
Hello everyone. Is there some easy way in Swift to iterate over a table of values with multiple levels? I started learning programming with python, and pandas made this ridiculously easy. With Swift, I am afraid that I will have to manually enter the table values into confusing arrays within arrays. Thanks!
https://itunes.apple.com/ca/book/app-development-with-swift/id1219117996?mt=11
Lmao. Yes, of course
Oh, what I ended up doing is starting an automator action project using Xcode's template. That works when I import it into Automator. I think that I'm going to write all my business logic in Swift in another file but use this template as the starting point.
Working on my first app as kind of a social network.
This^
Hey! Did you end up figuring this out? Interested in the same question 
Yes, this is correct. You will save a variable into NSUserDefaults in your ApplicationWillResign and then restore that variable in ApplicationDidBecomeActive, take the current Date and compare it to your previously restored Date, then adjust accordingly. 
&gt;so that it stays there even for other projects? I'm afraid this isn't feasible. Generally speaking, you would add a library to each project individually. I don't know of any way to make a library globally available across all projects in your environment. Luckily, there are tools that can assist you here! The most well established dependency managers are [CocoaPods](https://cocoapods.org) and [Carthage](https://github.com/Carthage/Carthage). I don't remember the last time I came across an open-source library that didn't support both of these tools. (I use CocoaPods for all of my projects, mainly because that's what I'm more familiar with. If I had to start over, I think I would choose Carthage because it's less dependent on a central package repository.) If you don't want to install a dependency management tool, then you'll be doing it the hard way – either downloading a pre-compiled framework bundle and linking it to your project in Xcode, or cloning the library's source code into your project. Both of these approaches require a lot of work, and there's a lot of room for mistakes. Good luck!
If you just store a timestamp the moment the timer is started, you don't really need to worry about app lifecycle events at all. In fact, your app would become more resilient to crashes! (I'm pretty sure lifecycle events aren't called when your app crashes) // Formula for elapsed time, when counting up // startTime is written to disk when the timer is started elapsedTime = currentTime - startTime // In a count down scenario (like an egg timer), // the countDownDuration is also written to disk. targetTime = startTime + countDownDuration timeRemaining = targetTime - currentTime
Create Masks with a box shape, there are multiple Tutorials which recognize touches on SCNNodes. You don‘t have to searchfor ARKit specific tutorials, it works the same way Built an 3D-4inarow ARKit-App but it isn‘t on github yet
Or use collectionviews, they are made for such things
Hey there, thanks a lot for the tips! I'll try it out when I have some time over.
Thanks so much for your help, that makes a lot of sense! I'm making progress again thanks to your code. 
[DateFormatter](https://developer.apple.com/documentation/foundation/dateformatter) should do the trick. With some NSLocale Apologies if formatting is wrong, doing on mobile and a bit of memory let formatter = DateFormatter() formatter = Locale.current let formattedDateTime = formatter.string(from: Date()) Or you could use the Locale.autoUpdatingCurrent class var 
Hmm, i do not think it is random because it is always same constraint, maybe first/last in list of conflicting constraints? Good question.
Adding to this, higher priority means more preferred to not break. So two width constraints: width 250, priority 1000 width 100, priority 999 The view will break the constraint of width 100 since it has a lower priority than the first.
If we didn't allow IOS related questions here, the subreddit would be very inactive. The skill overlap between Swift programmers and IOS developers is rather large, so this post can find its answers here as well.
It’s a neat question but if you’re doing things right the answer won’t matter
My though also.
Good point! You're right. Always great to learn when you're trying to help someone else learn :)
Here is how I handled tap-recognition on SCNNodes in one of my apps: @objc func handleTap(_ tapGesture: UITapGestureRecognizer) { let location = tapGesture.location(in: sceneView) let hits = sceneView.hitTest(location, options: nil) // If we hit a node and the game isn't paused... if let hitObject = hits.first?.node { if GameManager.shared.inActiveGame { if let boat = hitObject.parent as? Boat{ ... } } }
Which one it decides to break is based on how the rest of autolayout works with the constraints in question. Think of autolayout as one long system of equations with only one solution. Autolayout breaks constraints so that it can solve this system of equations. Having said that, I figure it may be kinda hard to just know which exact constraint autolayout will break. You can probably find out, with ease, which direction (vertical or horizontal) it’ll break the constraints in but knowing which exact constraint, before it tells you, may be something else So to answer your question it probably breaks a random constraint in the direction it can’t satisfy autolayout. It takes that constraint out of the system of equations to then verify that the system is solvable and then it tells you which constraint/equation it had to break to solve the system. 
Nice! Thanks a lot for this!
I’m not sure if this is what you’re asking, but you can go to ‘schemes’ -&gt; ‘edit schemes’ then under Environment Variables click the plus icon and enter “OS_ACTIVITY_MODE” and in the value box enter “disabled”. This will clear the “console garbage” if that’s what you’re trying to get rid of.
I’m not sure if this is what you’re asking, but you can go to ‘schemes’ -&gt; ‘edit schemes’ then under Environment Variables click the plus icon and enter “OS_ACTIVITY_MODE” and in the value box enter “disabled”. This will clear the “console garbage” if that’s what you’re trying to get rid of.
Check that your outlet is actually connected to your button. Use the outlet inspector on the storyboard, or Ctrl-click the button and make sure you see the outlet listed. Or you can use the assistant editor and hover your mouse over the outlet and the button should highlight on the storyboard. 
You need to pass in youImageView.image parameter into UIImaheWriteToSavedPhotoAlbum(). Your code will look like this `UIImageWriteToSavedPhotosAlbum(yourImageView.image, self, nil, nil)`
Yes, it is practical to code a game fully in Swift. There are quite a few SpriteKit/SceneKit + GameplayKit games on the App Store. They are easy (as far as game engines go) to use for small to mid-sized games. However, most games use Unity or one of the other 3D engines. These are often free for small projects so you can try them out without paying. These engines offer more features out-of-the-box, scale to large games and are portable to other platforms (a SpriteKit game will only ever run on iOS). The biggest games are often written directly in C++. C++ isn't "better" but it is the most common cross-platform language for game developers so it is often the default choice for large engines. Custom C++ engines are portable but vastly more work than any of the previous options.
I'm definitely not saying we shouldn't have iOS related questions. I just think that iOS questions posted to /r/Swift should at least be partially about Swift. For example, a question about how to write Auto Layout constraints in Swift. But questions about how Auto Layout works don't really fit IMO. Auto Layout is a system that's probably built entirely in Objective-C anyway.
When I try that, Xcode gives an error saying: &amp;#x200B; Value of optional type 'UIImage?' must be unwrapped to a value of type 'UIImage'
You are probably doing something wrong. How did you get to needing to parse region and locale based date string?
yourImage.image! (Force unwrap it using “!”)
Don’t go into game dev with Swift. Unity is basically the go to engine for games. Even for very small games. Because you can use your experience and swift game dev is basically dead end. With unity you’ll be able to find work for yourself as well. 
Yep, very possible indeed. Well, my software will read a list from a file output and inside that theres a field I am parsing and this is like 27/11/2018 12:00:00. I can convert it to Date Time when I apply the correct mask, in this case, dd/MM/yyyy HH:mm:ss but if I run this computer with another locale, the date could return, ie., 2018-11-27 12:00:00 and the same conversion wont work because I am fixing a mask format as \` dd/MM/yyyy HH:mm:ss\`. So the solution is to understand (to get) the mask format and apply it in accordance with the user system locale.
Thanks! I will test it
**Solved!** I was able to get the format by following the example here: [https://developer.apple.com/documentation/foundation/dateformatter](https://developer.apple.com/documentation/foundation/dateformatter) Thanks to you all for the patience! :) &amp;#x200B;
I suggest making a Name class/struct and a Gender enum containing male/female and give those cases associated values. Then the class contains a String for the name and a Gender for the name. To get the pronounce extract the associated value of the gender. [Associated enums](https://appventure.me/2015/10/17/advanced-practical-enum-examples/#sec-1-5) When I get to work I can type up what I mean, as I’m currently on mobile. 
Something like that could work: struct Person { enum Gender { case male case female // add more as needed func pronoun() -&gt; String { switch self { case .female: return "she" case .male: return "he" } } // add more as needed } let name: String let gender: Gender } let gary = Person(name: "Gary", gender: .male) let mary = Person(name: "Mary", gender: .female) let ps = [gary, mary] // pick one randomly, don't mind my personal random algorithm here let random = ps[0] print("I like \(random.name). \(random.gender.pronoun().capitalized) is great!")``` 
 struct Noun { let name: String let gender: Gender } enum Gender { case male case female case inanimate var pronoun: String { switch self { case .male: return "he" case .female: return "she" case .inanimate: return "it" } } var pronounUppercase: String { return pronoun.uppercased() } } And so on... If you need to worry about internationalization then that will open a whole 'nother can of worms because nouns will have different genders depending on language.
I believe there's one change. Your 2nd line should be formatter.locale = Locale.current
Use [NSTask](https://developer.apple.com/documentation/foundation/nstask) 
That would be correct. Not sure how I missed typing that 😩
Yup. See NSTask or Swift 3 Process
Wow, I checked it out, thanks a lot!
\#thisisreddirsofuckoffwithyour#
Now that I finished other tasks I can return to this. I will try your code and try to understand it. Thank you.
this is more for crash reporting than analytics
Moar tags please!
You'll have to be more clear about what you're trying to do. You want to subclass it so that the subclass always returns a circle with a radius of 12? Of course it's not the same as `SKSpriteNode`, they both inherit from `SKNode` but they are separate classes.
If you compare them to Fragments, you will have a hell lot of overhead and over engineering. With Apple, the philosophy is simple: a screen should only do one thing (minus top, bottom and side bars). ChildVC usually allows a screen to do multiple things. Only use them if you really need to. For example doing a dashboard on iPad with multiple graphs/content. 
I typically do not use more than one ViewController even if there are clearly discernible tasks in one screen like a game that has a chat screen below it. The reason is that the ViewController is about lifecycle management and sometimes (for example in case of the NavigationController) managing the lifecycles of other ViewControllers. Nowadays I would split up the game/chat example in a GameViewModel and ChatViewModel since they have a very different purpose and update rate and only use one GameViewController because Game and Chat have the same View lifecycle (appear and disappear at the same moment etcetera). The ViewModels would be bound to a View not ViewController. So in this case the GameViewController would have a BaseGameView as its principal view, with a GameView and ChatView as children and those two Views would be bound in any way you like to to their respective ViewModels. Those Views should be slightly fat but not more than 200 lines usually.
Check out his Tutorial on prefetching: https://www.raywenderlich.com/5786-uitableview-infinite-scrolling-tutorial If you want to give it a go on your own, check out [UITableViewDataSourcePrefetching](https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching) from the Apple Docs.
I tried looking through that and couldn't quite figure it out. I'm still new to swift and this. I'll try again though.
&gt;I tried looking through that and couldn't quite figure it out. I'm still new to swift and this. I'll try again, thank you! &amp;#x200B;
Wicked idea. Good luck!
This is a good read: https://davedelong.com/blog/2017/11/06/a-better-mvc-part-1-the-problems/
Containers :) I use them extremely often. 
Tags really triggered to you. I think tags are indigestible in subreddit community, although it is not mentioned in rules, I can’t use tags. What’s wrong if I used tags. You need to understand rules before joining subreddit. Don’t use hateful language unnecessarily. Rise above hate.
+1
Are you my coworker? This is what we do at my company as well. 
I think the term you are looking for is embedded ViewController. ViewControllers are embedded in TabControllers, NavigationControllers, ContainerControllers, etc etc. Yes this is just semantics, but gear your search toward embedded ViewControllers instead of childViewControllers. The simple example would be to drag a TabViewController to the storyboard and it will spawn an additional 2 view controllers that are already attached.
What are you trying to do?
Ah ok thanks, i know this. I thought there was a class named Container i didnt know. 
My bad 🙈
No worries i just thought there was a whole other class i didnt know :)
Nice! Can you tell us more? I mean how does it work? What does it compiles to? Because I always wanted to do something like that but I think it’s not possible to compile code natively right?
I think I may have figured out something... not sure how accurate it is but I'll upload it eventually
They usually are nothing more than a cumbersome waste of time adding needless complexity and verbosity compared to just having UIView subclasses that handle some work. 
Good luck! Please do share when you're finished :)
What's the name of the page/puzzle you're solving?
Would have been Land of Bounty on the Learn Programming 1 module. Now I am stuck on nested loops.. Not sure I understand that concept.
Hmm, maybe I can try to address both questions in one. Here's a way you could solve the Land of Bounty page with a nested loop: let (f, l, r) = (moveForward, turnLeft, turnRight) r() let steps = [f, f, l, f, l, f, f, r, f, r] for i in 1...5 { for step in steps { step() if isOnGem { collectGem() } if isOnClosedSwitch { toggleSwitch() } } } The first line just makes shorter variables that refer to the basic movements (you can probably ignore this since Swift Playgrounds probably hasn't covered tuples yet...). The next one turns right once, because the starting orientation is not what I wanted. The line that declares `steps` creates a movement pattern that is like a tetris shape you can repeat to solve the level no matter how long it gets. (For levels without the autoexpanding length, I usually just hardcode the steps I want to take rather than using the `isBlocked` function.) There's an outer loop, the `1...5` one, which just runs the inner loop 5 times. (5 is totally arbitrary, I guessed that the board would never be super long.) The inner loop just repeats the steps of the tetris pattern I defined and tries to collect a gem and toggle a switch if there is one. --- The puzzles here are pretty open-ended in terms of how you can solve them. So I think it's good you're asking about ways to improve or simplify what you're doing. If you notice you have repeated code like: while !isBlocked { moveForward() if isOnGem{ collectGem() } else if isOnClosedSwitch { toggleSwitch() } } You can wrap it in a function: func mainTurns() { while !isBlocked { moveForward() if isOnGem{ collectGem() } else if isOnClosedSwitch { toggleSwitch() } } } Then your code becomes something like: mainTurns() if isBlocked { turnRight() moveForward() turnRight() } mainTurns() if isBlocked { turnLeft() moveForward() turnLeft() } mainTurns() 
Thats interesting. Could you give me an example? I mean could a game and a photosharing app, for example run under a same project?
Yes, but there's probably no good reason to do that, both probably have different data and stuff, simple enough to create 2 firebase projects and 2 apps (Android + iOS) for each project.
So for every new app, make a new project is what you're saying right? Under what circumstances would 2 or more app be shared under a single project?
A personal example for me would be: 1) Main app that only uses Push Notifications and 2) Side app that uses firebase funcs/firestore and notifications.
If you had a website and an iOS app for a single project then both of those are classed as 'apps' inside that same Firebase project, for example. &amp;#x200B; From the perspective of Firebase, an 'app' is anything that can interact with that particular project. So 'add app' just means 'get the configuration for this particular project'.
I trying to make a subclass of skshapenode. I need to make a circle. 
Thanks, that explains a lot.
Follow-up, where do the functions go for starters? In the delegate or viewController? &amp;#x200B;
You should decouple your timer from the view controller. In this case, a Singleton could match your requirements.
Let's say you've just had the idea to create Reddit. You would create a new Firebase project, then add an 'app' for the iOS app, an 'app' for the Android app, and an 'app' for the website. All it does is say what bits of tech can access the project. If you have a database, and both the website and the server need to access it, then they both need to be added as apps.
I just happened to made a circle too. With SKSpriteNode and a circle image. You can also add a rounded physics body to it.
Holy shit I took that cover image
There's so much stuff in a `UIViewController` that's absolute doing nothing at all when you use it as a child view controller and will only add to the confusion. And there's nothing to gain from it unless I'm really missing something. Adding subviews with their own `Controller` or `ViewModel` or `Presenter` implementation (just pick a hip name really) is enough to containerize different areas in your view. But those would be implementations of a `class` not a `UIViewController` so they will be much easier to test than full `ViewController`s
&gt; The most important thing in here is that having only one main queue. is that having only one main queue?? What does that mean?
Yes, you have one main queue in iOS and multiple background queues. UI operations have to run on main queue
You‘re welcome. As a complete amateur in both photography and swift (the reason why I even saw this post) it still blows me away when I see one of my images in the wild
I think it should be read, "The important thing is in here is that *we have* only one main queue"? By that, and the general usage, I think English is the author's second language.
It says launch path isn't found, can it be something related to sandboxing?
Thank you for the very thorough explanation! The only question I have as a follow-up; the last code you typed wouldn’t be a loop because it is not set to repeat, correct?
Hey, I've tried it, but it says that a launch path isn't found. Can it be because of sandboxing?
Why does that need a subclass? What's wrong with `SKShapeNode`'s `init(circleOfRadius radius: CGFloat)` initializer?
You can set a variable for keeping track of current page, since the API support paging like this : `https://rickandmortyapi.com/api/character/?page=19` . You can create another tableview cell which show a loading indicator, and put this cell at the last row (always on the last row). In the numberOfRowsInSection, return `characters.count + 1` , the +1 is for this loading cell. In cellForRowAt , put a `if indexPath.row == characters.count` (meaning the last cell, which is the loading cell), and call the API to retrieve next page. I have written a sample code on how to do this : https://fluffy.es/prefetching/#batch Hope this helps!
Nothing, that's the weird part. There's no function to start Process anymore. At least it says so in the docs.
Google gave me this as the first hit... https://stackoverflow.com/questions/47315066/nstask-process-deprecated-methods-and-properties
PS.: the ObjectBox team is really interested in getting feedback on the API design.
You can use ratios (percentages) with auto layout. e.g constrain your inner view width to your outer view width and set a multiplier of 20%.
Probably. Is your app sandboxed? If so, I don't think you'll be able to launch arbitrary command-line tools because that would be a security issue. 
&gt;constraintLayout which is similar to autoLayout(however it provides a lot more features) I'm not sure I would agree with that. AutoLayout is incredibly flexible and powerful, but it does have a learning curve and there are configurations that are difficult or impossible to achieve solely through the interface builder tools. But that's not a limitation of the AutoLayout engine itself. AutoLayout supports ratios by way of a [constraint's multiplier](https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526920-multiplier), which allows you to express, for example, that View A should 10% as tall as View B. But the multiplier has to be set in the constraint's initializer and can be hard to define in IB. &gt;is it a good practice to heavily utilize **percents and filling screen with them**? It's neither good or bad - it depends on the requirements of the design. Using a lot of relative constraints does make the constraint setup more complex, however. Your life will be easier if you avoid doing so. StackLayout is part of Xamarin, isn't it? Asking if you should use a cross-platform dev environment is a completely separate question than how to tackle UI layout.
&gt;I can share UI logic across platforms Don't do that. Different platforms have different paradigms and norms. Sharing UI logic across them is a recipe for pain and crappy apps. 
With child ViewControllers as opposed to just views, you get stuff like rotation handling for free. 
I like it. Pretty clean, keep going. Looking forward to seeing what comes next. 
No stacklayout is not part of Xamarin I meant UIStackView sorry my bad 
Yup!
Very much this. Write once, deploy everywhere sounds great, unless you like having nice apps.
You can use tags on Reddit. They just won’t do much and you won’t be taken seriously. Tags work on other platforms because they were built for them and that culture. They don’t do anything here but be annoying. 
I believe you override each function of the classes, including the initializer*. Then, within each function, call super to get the parent behavior and make your customized changes after that. *note: the initializer override should assign the policy type that is closest to what behavior you’d like the modify. 
Use this to zip : https://github.com/marmelroy/Zip Do you want to use symmetric or asymmetric crypto for the encryption?
cool, public key == asymmetric. Try this: https://github.com/TakeScoop/SwiftyRSA 
Instead of using childViewControllers you can use a Container to replicate Activity x Fragment style of architecture. 
Why won't Swift return the updated parameter? It just returns the initial value the parameter was entered at. &amp;#x200B; `func add(first: Int) -&gt; Int {` `first + 10` `return first` `}` `add(first: 10)` &amp;#x200B; I expected to get the value of 20, but it just gives me 10 again. Shouldn't swift know the value of first has updated?
Correct! That was just an adjustment to your initial solution to point out where you could reduce some duplication. 
I like the idea, main advantage i see is easier query/write code. I am a fan of the core data visual editor tho (i use the subclassing when applicable wich alows my subclasses extensions do to stuff and the uml view is something i like) but overall if you can make data migrations also easy it would be a must have in the future. Are you going to monetize?
Just encrypting the created .zip
CryptoSwift is easy to use and can encrypt any `Data`
class theTimer : Timer { static let onlyTimer = theTimer() } &amp;#x200B; is this the correct interpretation of a singleton? Also, where would I put this class? In the viewController, in the appDelegate?
It has a lot more "advanced" editor features than Xcode. Better refactoring and the like.
It may have better refactoring but it doesn’t do much else better. You still need Xcode for storyboards and the UI on Xcode isn’t atrocious. (Not to mention double click for opening files in app code is gross)
I use a lot of Jetbrains tools already (IntelliJ, Resharper, Android Studio, etc)...consistency of shortcuts and text editing is a big deal. Also, I don’t use storyboards for anything.
If I have buttons in a containerview, how do I sent the fact that a button was pressed back to the parent view? 
No, it only costs money to get a developer program from Apple 
Stop me if I've misunderstood your goal here. I'll summarize what I understand from your various threads: * You want to have a timer running in your application and be able to display the time again to the user when they open your app after doing other work. You can forget all the stuff about using notifications, that's too complex for what I think you're trying to do. So easy route, not using a timer() or CADisplayLink to update your user interface. https://imgur.com/a/S7em66t That help? Did I get what you were after? I'm happy to help more, my first app was a timer app that I've yet to publish due to feature creep. 
It's all good. \[Collections in Swift\]([https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html](https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html)) are just regular old arrays, sets, and dictionaries. 
I don't know what happens when you click but it should not be displaying actual adverts. I just tested my own app and I have the stands ins, as expected. So, don't click. Also, I expect you've done something wrong somewhere.
From my understanding there is difference between protocol and polymorphic behavior. And depends on the occassion where do you want to use, like polymorphic behaviour acheived by extending your class with base class, base class has already his implementation, you just extend you'r own class with base class and use all the implementation of your base class, but for protocol you just define methods and your class have to implement those protocols their own way.
Hey, shauketsheikh, just a quick heads-up: **occassion** is actually spelled **occasion**. You can remember it by **two cs, one s**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Hey CommonMisspellingBot, just a quick heads up: Your spelling hints are really shitty because they're all essentially "remember the fucking spelling of the fucking word". You're useless. Have a nice day! [^Save ^your ^breath, ^I'm ^a ^bot.](https://www.reddit.com/user/BooCMB/comments/9vnzpd/faq/)
Hey BooCMB, just a quick heads up: The spelling hints really aren't as shitty as you think, the 'one lot' actually helped me learn and remember as a non-native english speaker. They're not *completely* useless. Most of them are. Still, don't bully somebody for trying to help. Also, remember that these spambots will continue until yours stops. Do the right thing, for the community. Yes I'm holding Reddit for hostage here. Oh, and while i doo agree with you precious feedback loop -creating comment, andi do think some of the useless advide should be removed and should just show the correction, I still don't support flaming somebody over trying to help, shittily or not. Now we have a chain of at least 4 bots if you don't include AutoMod removing the last one in every sub! It continues! Also also also also also Have a nice day!
hEy, ShAuKeTsHeIkH, jUsT A QuIcK HeAdS-Up: **OcCaSsIoN** Is aCtUaLlY SpElLeD **OcCaSiOn**. YoU CaN ReMeMbEr iT By **tWo cS, oNe s**. HaVe a nIcE DaY! ^^^^ThE ^^^^PaReNt ^^^^cOmMeNtEr ^^^^cAn ^^^^rEpLy ^^^^wItH ^^^^'dElEtE' ^^^^tO ^^^^DeLeTe ^^^^tHiS ^^^^CoMmEnT.
What if you didn't? We live in an age of spellcheck, so there's realy no poin in correctong people. How bout you mind your own buisness? ^^bleep, ^^bloop. ^^I'm ^^a ^^bot.
&gt; Now I wanted to ask is it a good practice to heavily utilize **percents and filling screen with them**? Huh? I've got no idea what you're trying to say.
I'll probably have questions tomorrow, but I just wanted to say that you're a beautiful person.
So, there’s a few things going on here. Let’s lay them out one by one. &gt; Shouldn’t Swift know the value of `first` has updated? Has it updated? Let’s take a look at what you wrote: ``` expected + 10 return expected ``` Suppose we were to move to the REPL and try something like this: ``` var first = 10 first + 10 ``` Now, the REPL will print 20 on executing that last expression. But, try to print the value of `first` again. It’s still 10! Just adding two values together doesn’t automatically update either one. In order to mutate a variable, we need some kind of (re)assignment. One convenient way is to use `+=` instead of `+`, which *will* store the updated value back into the variable on the left. Now rerunning the previous example in the REPL does what you want: ``` var first = 0 first += 10 ``` Now if you print `first` it now has a value of 20. Alright, let’s apply that fix to your code: ``` func add(first: Int) -&gt; Int { first += 10 return first } ``` This doesn’t work either! Parameters to functions aren’t mutable, so we can’t use an operator like `+=` that would otherwise mutate the value. The compiler will warn us as much. So, what’s the *real* fix? There’s a few choices you could make, but we’ll just pick the simplest and add an extra variable: ``` func add(first: Int) -&gt; Int { var local = first local += 10 return local } ``` Now, `add(first: 10)` returns 20. Let me know if this was unclear in any way.
I've tried multiple times over the last 4 years to give it a go. For ObjC, AppCode is absolutely killer. But for Swift, there's only a handful of all the cool features they advertised that works for Swift and it's difficult where to find out what works for Swift or Objective C. For example, one feature I like was method renaming where you could change each individual function parameter name and type. You can't do that (only just the method name). It's got a long way to go to go back up to parity for Swift. 
It displays "Test Ad" in my XCode simulator, but not on the actual device. Do I have to do a separate hardware registration to run the test ads? 
What about them do you have trouble with?
&gt;Do I have to do a separate hardware registration to run the test ads? I believe you can either register your hardware or use the test ads - you don't need to do both. I only did the latter. Maybe you did the former at some point and that's why it's happy to show real ads? Just guessing.
Anyone interested in object DBs should check out Realm. It's a mature and modern system with native Swift support.
If you click on the settings icon in the list of files, there’s an option to autoscroll from/to source. One of those will make it open files with one click (I always forget which one)
It’s a good complement to Xcode, but both are mandatory to make apps. Most of my code is done using AppCode, and I use Xcode for GUI creation.
Data migrations will be automatic most of the time; just if you rename, you have to make tell this. That's where Swift lacks behind. ObjextBox (database) is free and will stay free. Services on top of like sync will be monetized.
Try to put your cursor on the parameter name and rename it. Also you can use change signature refactoring. Today, most features are available for both languages and swift is no longer behind.
Yeah it's possible to replicate Android's SingleActivity pattern, using a single ViewController, but you shouldn't. The reasons people use SingleActivity don't really apply to iOS, it actually makes a lot of sense to have one ViewController for each 'screen'.
You can edit the key shortcuts on Xcode, but I understand your point.
I like how this is downvoted straight away. :D Pro level of butthurtedness.
Yes, URLSession is thread-safe. I just wanted to show the handling thread in an obvious way in the code. Maybe I can write a comment in there and explain that they are not totally necessary.
Thanks for the advice! 
S other 
Why would you split your time between two IDEs when you can do it in one?
You know what I meant, why would you split between Xcode and appcode when you can do it all in Xcode? Makes no sense.
Some iOS interview questions and answers are : 1. Have you used iprinter or any way to print from your app? 2. What are different types trigger point of local notification? I.e location based 3. Why soap request? Why everyone use rest API? 4. Do you know SMTP? Is it soap type or rest type? 5. What is category in Objective-C? 6. What are blocks in Objective-C? 7. For API call, which you are working, normal, aftp or any third party library? 8. Difference between block and completion handler 9. What blocks basically do? Why we use blocks? 10. In navigation view controller, form is open from right to left. I want to open from bottom to top. How? What type of presentation is there for bottom to top? 11. How many ways we can present view controller? 12. After getting data from web response, how to store or parse data? 13. What is Object mapping that helping Jon parsing? 14. In iphone,I want label at top side and in iPad I want label in center, how will I manage this? 15. What kind of encryption you have managed in your application? 16. Have you used third party for encryption, internet reachability? 17. Is apple has reachability methods? 18. You have called webservice. Meanwhile how can you check for network availability? 19. How can you manage 2 storyboard navigation? 20. Why tableview cell separator leave some space before? 21. How to customize unbutton such as label comes under image? 22. How to make round button of square button using static property?
What do you mean "interview questions". Is this some sort of test before you get hired?
But some people are not strong in iOS. They can prepare for interview from most asked questions. Even interviewer are asking questions which are not used generally and even they not. Still they asked some questions. So this question may be for them who are hard in iOS interview.
Great that you made this plugin, but making comment for every function is antipattern for clean code. From your function, it should be clear what it does, what it takes, what it returns. 
Well, you're wrong. To most functions/methods there is much more than the identifier, arguments and return value can say. Documenting your code is essential when working on a serious project, cooperating with other developers or sharing you project with others online. API users do not want to read your code to understand it, they rather read one simple statement included in the docstring to be clear with what behaviour they should expect when calling it.
Thanks
But I know some how Swift syntax. But problem is I don't know about gps mapmyindia API, third party library with swift.
i'm not familiar with objective-c, so i can't speak about the transition from it to swift, but when i started learning swift, i went through apple's guide, [https://docs.swift.org/swift-book/] (https://docs.swift.org/swift-book/), which is really extensive and is geared towards swift newcomers. best way to get started when you're learning it imo.
Well there's a bit more to it, like bridging to Objective-C counterparts and stuff like array slices. Effectiveness of searches over different collections, how expensive is reverse, sorting etcetera.
So, start learning it.
There was some Apple documentation back in the Objective-C days that explained what counted as a collection. --- https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/FoundationTypesandCollections/FoundationTypesandCollections.html#//apple_ref/doc/uid/TP40011210-CH7-SW1 Most Collections Are Objects Although it’s possible to use a C array to hold a collection of scalar values, or even object pointers, most collections in Objective-C code are instances of one of the Cocoa and Cocoa Touch collection classes, like NSArray, NSSet and NSDictionary. These classes are used to manage groups of objects, which means any item you wish to add to a collection must be an instance of an Objective-C class. If you need to add a scalar value, you must first create a suitable NSNumber or NSValue instance to represent it. Rather than somehow maintaining a separate copy of each collected object, the collection classes use strong references to keep track of their contents. This means that any object that you add to a collection will be kept alive at least as long as the collection is kept alive, as described in Manage the Object Graph through Ownership and Responsibility. In addition to keeping track of their contents, each of the Cocoa and Cocoa Touch collection classes make it easy to perform certain tasks, such as enumeration, accessing specific items, or finding out whether a particular object is part of the collection. The basic NSArray, NSSet and NSDictionary classes are immutable, which means their contents are set at creation. Each also has a mutable subclass to allow you to add or remove objects at will. For more information on the different collection classes available in Cocoa and Cocoa Touch, see Collections Programming Topics. https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Collections/Collections.html#//apple_ref/doc/uid/10000034i #In Cocoa and Cocoa Touch, a collection is a Foundation framework class used for storing and managing groups of objects. Its primary role is to store objects in the form of either an array, a dictionary, or a set. --- Hope that helps.
I do't understand a single thing you said but well done! 
Well done sir.
Yup, so CryptoSwift won’t help much. Better to use iOS core to generate sym key and use an asymmetric lib. 
Nice article. Easy to understand and to the point. Thanks. 🙏
Read the swift book, start writing swift. Same as learning any other language. You're lucky all the APIs are the same, so it's just about the easiest language transition you could ever have. Just write exactly what you were going to write in obj-c with a new syntax and less \[\]s
You can also just write and read files from disk, which is often the best and easiest way to do things. But like user defaults, don't put something there unless you wouldn't mind the user tampering with it. 
This is a pretty bad substitute. UserDefaults has a lot of optimizations for reading and writing key value pairs. CoreData has a lot of optimizations for incremental fetching and sorting of results. There’s really no good reason to use a file-based solution.
It's not a substitute, it's a perfectly straightforward solution to many problems. There's absolutely nothing wrong with using files when the situation calls for them. Use the right tool for the job.
The optimizations are not just performance related. The APIs those frameworks expose will optimize your time as a developer.
I see. Could you give concrete examples or explain how? Certainly KeyChain does a lot of the work for you in terms of not having to implement something as crucial as security. But I'm not so sure about the other two. For example, what's so hard about me simply creating a dictionary that I write to file storage and then retrieving it from disk at startup? In terms of optimizing my time as a developer that costs nearly nothing. Especially if I just have it available as a singleton as most people use \`UserDefaults.default\` anyways.
Agreed. In the simple example I gave, I would use UserDefaults myself. I was simply making a point about performance optimization. Then you made a great point about developer optimization. Which I then showed an example where it's actually perhaps not that big of a optimization relative to rolling your own. (It seems you agreed with a reluctant, "..what's the point?") To answer the, "what's the point?" question though. Perhaps you might want to store something more complex than a key value pair, if you coupled yourself to UserDefaults then you're kind of stuck with that. Now you made a new and different point about correctness. Which is a good point. I'd say that's fair. But serialization likely won't go wrong anymore than it'd go wrong if you're storing the type of simple objects that goes into UserDefaults anyways. One argument for using UserDefaults that I think would be more compelling is perhaps the capabilities it gives you among sharing between different app targets. I believe you can share UserDefaults info between say your main app target and an app extension for example. Correct me if I'm wrong though i'm not 100% on that.
dji go alternative for iOS 
what is that?
It looks like you tried to include a markdown link, but your comment is showing the markdown instead of just a link. That's because recent reddit updates have made their "Fancy Pants Editor" the default, so any markup you type is displayed exactly as you type it, instead of interpreted as markup. You can go back to the markup editor by activating the option at the bottom left of the text editor. 
These questions not only suck and are grammatically horrid, they expose the author as being incompetent. 
Great article, thanks for sharing. It might be worth mentioning that you can also bypass CoreData and store your data directly into SQLite, but that’s rarely worth it.
If you don't like xcode and can be more productive in appcode, that's why. Even Xamarin, unity, Cordova, react devs need to use XCode to some degree. Switching between 2 IDEs isn't really that much of a problem, when compared with the benefit of using a more familiar IDE.
I guess counting isn't the problem. What you are looking for are unroll segues (if you use Storyboards) otherwise you will have to manage it yourself, which really sucks if you don't have a management object (e.g. coordinator)
If you are using a navigation controller you can call popToViewController
You quoted him using words he never said lol.
Using realm for the first time. Its not bad
It’s awesome. Very powerful 
if you have all the API and are using almofire then learning simple REST operation from their documentation wont take you more than few hours. Also I think you have been using cocoa pods for you previous project right?
Unless you have an Enterprise distribution certificate, you also need to have the device UDIDs baked into the provisioning profile, and off the top of my head it may expire on a regular basis.
Ah. For example, bobbyHD, the movie app. They do my example and it doesn’t ever ask for my UDID when installed but it does expire. I guess I might have to upload to store. From my understanding, apple is pretty consistent on not allowing apps that have login screens when you can’t sign up and it’s just a login page that’s for internal use. 
&gt; From my understanding, apple is pretty consistent on not allowing apps that have login screens when you can’t sign up and it’s just a login page that’s for internal use. Not true. They’re happy to approve apps where the general public cannot sign up, however I don’t think they approve apps for internal use only - that’s what the Enterprise program is for.
This is what Enterprise deployment is for. Get an Enterprise license.
Wow Swift May soon be available in Xcode? That’s exciting. Also, Swift is already available for Visual Studio. So I guess Microsoft beat Apple to the punch. Amazing. Go Redmond. Maybe Apple should get Microsoft back by releasing the next version of Windows before they do 
&gt; But responding to an article about UserDefaults, Keychain, and CoreData by saying "you should just use files instead, it's often best and easiest" is terrible advice. Read past the headline. The article is about local storage and it covers three ways of doing that. /u/BenevolentCheese was pointing out a fourth way. They weren't saying that it should be used *instead* of these three options, they were saying it's another option. And yes, it *is* often the best and easiest way to do things. You seem to be starting from the premise that these are the three ways of storing data locally that you should use, and advocating using local files is advocating a replacement for one of these ways. This isn't the case – there are many ways of storing data locally, and files are a big and important one. It's not a replacement for anything. &gt; it's madness to ignore all the (majority) situations where it makes much more sense to use these wonderful APIs. Nobody said that. 
Writing to files has APIs, too... And Core Data wonderful that's a new one lol 
Got you guys. Will look into that and just get that. Make my life easier. Haha. 
&gt; They’re happy to approve apps where the general public cannot sign up, however I don’t think they approve apps for internal use only That's not quite true. We've had a couple of rejections recently for social media apps that were for closed communities. They weren't for internal use only – they were for external users, but the general public couldn't sign up, only people who work (or used to work) in certain industries. You had to log in to use the app. We were rejected on this basis: &gt; Guideline 3.2.2 - Business - Other Business Model Issues - Unacceptable &gt; &gt; Your app arbitrarily restricts users that try to be granted access in the app, which is not appropriate for the App Store. &gt; &gt; Next Steps &gt; &gt; To resolve this issue, please revise your app to remove any functionality that limits who can use the app. 
So this seems exactly like something you’d use a collection view for. Could you give more detail why a collectionview won’t work for this?
https://forums.swift.org
You couldn’t just search for this? [https://en.wikipedia.org/wiki/Signal_(IPC)#SIGTRAP](SIGTRAP) &gt; The SIGTRAP signal is sent to a process when an exception (or trap) occurs: a condition that a debugger has requested to be informed of – for example, when a particular function is executed, or when a particular variable changes value. So somewhere in your code there’s a condition that gets trapped and throws an exception. It could be an unexpected `nil` or some other condition that causes an exception to be thrown. Run it in debug, get a stack trace, find the bad code. The usual debugging steps. This little bit of info here is nearly useless. 
I’m pretty sure I lost brain cells reading this. 
classic :) https://www.youtube.com/watch?v=hiRacdl02w4
Because they apply their rules inconsistently. The app that was rejected with the quoted message above had been approved earlier in the year, and this was a routine bug fix update submission. In the case of the society conference app you link to, I believe the difference is that anybody can sign up, even if the target audience is very narrow.
Hey, by far the best resource for collections for me was the book called Advanced Swift available on [objc.io](https://objc.io) . They from basic explaining to some hard core stuff how collections work, why you can't access an index of a string directly (like myString\[4\]), rather you have to stroll from start or end index. Very nice book. 
What did you code up until now ? We can help you from there.
Nice, keep up the great work
If only they'd support Windows properly with the compiler. Or more than just Ubuntu.
We have community-hosted CI on many Linux platforms, and you can install Swift 4.2 using dnf on Fedora. Or you can compile it yourself on your Linux distribution of choice. There’s currently a lot of effort from external contributors on native Windows support for Swift, too! https://github.com/apple/swift/blob/master/docs/WindowsBuild.md Plus, with LSP support, you’ll get a rich editing experience on Windows just like every other platform.
It's simple: there's a C++ core that is used in every ObjectBox language adaptation. So, while Swift is completely separate from Java (and Go), they use the same binary code beneath. So it's cross-platform and we really want to get the language specifics right.
Can someone explain `It’s open source, which could slow down how fast LSP is rolled out.`
What were you thinking? Are you thinking?
Agreed. It's a great resource for Swift programmers, covering a lot of topics with good examples and provided Playgrounds so you can play with some of the ideas and techniques they describe to help you learn the material even better.
I would provide images different size and that would cover all iphones
It's already out in beta for visual studio code and works ok as far as giving VSCode the same swift related coding functionality as xcode does. The thing is, SourceKit itself is absolute pure fucking unadulterated garbage. SourceKit is shamefully bad and has been in that state for years now... Don't get me wrong, the language is fucking great, but whoever is managing this shit at Apple is too fucking stupid to fucking put the focus on SourceKit which is by far the biggest pain point with Swift. Apple needs to get its shit together and fix this thing. Auto-completion barely fucking works for many things, most of the time you get fucking &lt;&lt;error&gt;&gt; for the type of things when pressing option for info on part of your code... Even color synthaxing fucks up very often... And don't even start with the fucking refactor feature which worked (barely) for a grand total of 1 week after they released xcode 9 only to then be broken almost irredeemably thereafter. I don't know what the people at apple are doing, who's managing these projects? Is it Tim Cook's fault? I don't know... but the lack of focus on this fucking crucial feature is so blatant and obvious. Like, hell, just put up a 500.000$ bounty at Apple for whoever fixes SourceKit to a even semi acceptable level, it's not like Apple lacks the fucking funds to do it, and things will get done. (Sorry if I sound angry, but SourceKit has been a daily source of frustration for me for years now, and most importantly it's stopping me from enjoying the otherwise fantastic Swift language properly so that makes it even worse...) 
&gt;I can't read what you typed. Then you need to work on your reading comprehension. And I can only imagine how difficult you are in a team setting when developing.
I’m not clear on what I’m actually supposed to do, though.
&gt; Plus, with LSP support, you’ll get a rich editing experience on Windows just like every other platform. That depends on the LSP implementation, for example Rust simply passes off your whole application to a build tool that uses the Rust compiler. That means if you can’t run the compiler on your machine you can’t use the LSP locally. The beauty of the LSP is that you could host the language server on a machine that is supported and get the benefits, it just complicates things. 
I think they are talking about the project direction rather than the code. There are many chefs driving the direction of an open-source project like LSP. They may choose to add something (or many things) that some compiler developers don't want to support. That could slow adoption of the LSP standard, or worse, fork adoption of different versions of the standard.
I used Buddybuild until Apple bought it and killed the free tier. I use Bitrise now, and it works fine, though they don’t allow enough minutes on their free tier for me to run my tests. I was laid-off a year ago, otherwise I’d be happy to pay for my CI, haha.
Fastlane
How big of a project? How long does it take to run tests? How many developers on the project? How many clients are you distributing to? My answer to these questions (generally) over the last few projects have been: average size and complexity, under 5 minutes, 1-4, more than 10 and less than 100. So my solution for the past few years has been Fastlane. I have a Fastlane script (and a series of lanes) that, doesn’t necessarily run all of these things in this order but runs tests, pushes to Hockey (or Test Flight), marks a build as pass/fail in github, updates podspecs, pushes to a pod repo. Etc. All with one command via the terminal, or as post scripting in a Xcode scheme. Typical CI workflow using above: github requires a passing build is toggled in the repo settings. Branch is pushed up and PR is created. In terminal I run the pull request lane. That builds the project, ensures there are no pending changes to push, runs tests (on multiple schemes if I were building an SDK), checks for failures and warning (strict no warning policy) and marks the build via a github API as pass/fail. After that the PR is ready for review or merge. Every developer runs this lane when doing a pull request. Merge cannot happen without a passing build. I prefer this approach because it’s local, easy to move from project to project, results are pretty quick and failures can be addressed before the developer switches context and it doesn’t need to rely on third party platforms that may not be transparent or cost money. 
Im interested 
[Bitrise](https://www.bitrise.io/) 
I'm interested thanks
Interested!
Might I suggest that if you are going to do a tutorial that you start by not assuming your audience knows what your acronyms mean.
And it’s running locally?
Bitrise. Has been working quite well for me. 
It’s a pretty ubiquitous acronym. “AI”, similarly
That'd be awesome, I've been looking for an excuse to mess around with it
Yes, or allocated in a Mac in Cloud. But It’s very flexible, and a can create a complete way beginning in tests and ending in a AppStore Deploy. It has a lots of features and good to be customized. Actually I’m trying Xcode Server too, but it needs to improve a lot. 
Bitrise running Fastlane, I love it. I used Circle CI before that, but found pricing based on build minutes per month was too restrictive and resulted in us having to reduce his many minutes we used. However, as a CI I absolutely love it as well.
If you've already decided you're doing it, why are you here asking us? For the record, I'd love it. But it might make more sense for you to post here when it's done.
I initially assumed they meant ML the programming language, rather than machine learning
interested
[https://forums.swift.org/t/introducing-sourcekit-lsp/17964](https://forums.swift.org/t/introducing-sourcekit-lsp/17964)
I am very interested.
The strange capitalization reinforces this. It uses sentence capitalization, except for the word "Simple". It looks like "Simple ML" is another dialect, like "Standard ML".
Open-source is both a license and a development model, but Apple tends to favor the license (and code dumps). I don't see Darwin being held back by committee meetings.
Do we need every single post about a new Swift development to have a "what about Windows" comment? We get it.
The LSP is about using Swift without Xcode, so properly outside of MacOS. I really don't think it's that unreasonable.
Let me know!
Why would \`**(1, 2) + (3, 4)** \` be \`**(4, 6)**\` and not \`**(1,2,3,4)**\` since tuples are a collection wouldn't they follow what Arrays do - which I am pretty sure is an append operation and not combination / addition. Just a thought!
I disagree - but also even if so is it worth the unexpected behavior by breaking expectations of what happens on other collections?
Tuples are not considered a collection type.
Fine use whatever you want -- "Data Structure" - the point still stands imo 
Where do I sign up?
You'd be doing a service to the community, but I'll have to agree with /u/brainotomy . IMO the best tutorials are the ones that don't rely on any special tooling, use code samples that have descriptively named variables, and explain all aspects of the ML used, eg. the math involved. Like, why is this function using this math? What does this math do? What's the reason this math was chosen for this purpose?
If it turns out to be popular might I suggest starting up a patreon?
Yes Please! Especially if you embrace swifts nest practices. I am so confused about ML &amp; NNs. 
Because tuples are not pre-defined types with pre-defined operations. If you want that then make an actual vector type with actual vector operations. Tuples really are just anonymous values.
Go for it. I don't view YouTube videos, though – more interested in reading articles.
One "trick" is to look at when it crashes and go back to your version control and see what changes were mad that would have an impact on that. So if this were when a browser loads data, you can go back to a known good version and see if that crashes the same way. I like to think of this as a "step by step" process of marking off known good code so that you can quickly go back to see what has changed. In addition to good source control, it also points out the need to full vet versions of code and archive them.
Sure. 
Don't assume. Define them once and then use the acronym after.
Thanks. I have tried them. 👍🏻
Yep cool
We need more info. When you click, does anything happen? If not, perhaps check the IBAction of your button. Add a print statement inside of there, does it print when you click? If not, then perhaps your IBAction is setup wrong. If it does print, then your button is functional and awaiting the proper code. Do you have a label for displaying the number? If not, you will need to add one and create a IBOutlet for it. Please share your ViewController code with us.
It's coming soon enough.
What if you have a tuple of non numeric types that don't define addition? You should construct or use a float2/vector2 type and use that to get the behaviour you want.
Turns out I didn’t have enough experience with collectionview to make it do what I wanted, you’re right, collectionview definitely works for this. It seems a little slow but I think I can work around that. Thanks.
Was just about to post the same. Please use the academic rule for acronyms - Full Words First (FWF), then you are free to use the acronym for FWF all you want.
Just disable new reddit, then you won't have this problem.
Would love that! I'm particularly interested in Image Classifiers myself :)
Tuples are not vectors. They're their own mathematical concept, and the arithmetic operations aren't defined on them that way. No other programming language (AFAIK) defines these operations this way, either. 
Same. Could have been "Mother Land" too. 🤷🏻‍♂️
I think it’s a good idea to try doing your own thing. I often struggle to take anything in if I just follow endless tutorials. As a beginner though, tutorials can be helpful. Try watching/reading one and then applying something you learnt to your own app. Learning to google well is an important skill too. You’ve pretty much broken down your task into easy parts here. Try googling “Swift iOS button click” or something similar. First, figure out how to link the button in your storyboard to some code in your view controller. Then figure out how to update your text showing the number of clicks. It can be a bit frustrating at the start but as you learn more useful terms, it gets easier to google stuff. 
What have you got working so far? Is that just a screenshot from Postman? The first step is to have your app use the api to fetch some data. Have you got this working already? The next step is to turn that json data into something useful - in this case an array of strings. For this, I’d recommend using [SwiftyJson](https://github.com/SwiftyJSON/SwiftyJSON) . Even if you don’t want to use it, the github page has a good explanation of how things would be done normally in Swift and how SwiftyJson simplifies things.
Thank you very much for the input, I am going to work on the problem some more tonight and tomorrow. If I am still stuck after that I will provide more details on the problem. Thank you guys again. 
Please do it. If possible, try to explain why that method is used in more detail.
You can parse a JSON array pretty easily. For the one you're showing: \`let strings = try JSONDecoder().decode(\[String\].self, from: data)\`. Now, integrating it with network responses may require you to nest the array inside a type as property, which would require a little bit of manual \`Decodable\` work.
You forgot to link to the well known [book](https://www.amazon.com.au/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612) by the gang of four.
Little confused by the question. You can certainly set up a Xcode playground and create UI elements with a few lines of required code, but I’m not sure if you mean on iOS or macOS specifically either.
I'd like either a Simple MetaLanguage Tutorial or a Simple Machine Learning tutorial as long as the acronym is expanded. 
I can't tell if you're using Xcode's playground feature or some other thing called playground. Are you currently using Xcode? If not, you'll need a computer to run Xcode - but it has a playground. Or just start a project in Xcode and you will be able to run it on a simulator in order to see how it's working. If none of that answers your question, feel free to ask again. If you happen to speak Spanish or Portuguese, you can ask me in one of those languages.
To be honest, I don't find the book all that helpful. There should be more practical books that focus on the patterns that are used a lot more in the UIKit world. Nevertheless I agree with you that the book should be linked to :)
Very interested. Would be good if you could make it a series of youtube videos.
Code Samples: https://github.com/ochococo/Design-Patterns-In-Swift
&gt; I installed swift 4.2 on ubuntu 18.10 using the Vapor APT . https://docs.vapor.codes/3.0/install/ubuntu/ Follow the instructions. Does it support 18.10? I will try this later, better tooling for swift in linux is sorely needed.
Yes I have Xcode but its playground does not tell how things work. I need the Swift Playground like story telling and gamification to learn about the things like Views, event listeners etc.
Thanks. Yes I have Xcode but I thought maybe there is a Swift Playground like teaching tool to learn all things about Xcode and iOS programming.
Don't hesitate to post a comment if you have any ideas ;)
is there any beginner book or course for design patterns?
There's [Cocoa Design Patterns](https://www.oreilly.com/library/view/cocoa-design-patterns/9780321591210/). It's showing its age a little bit but Apple's fundamental design patterns haven't really changed all that much, so it's still quite illuminating.
&gt;try JSONDecoder().decode(\\\[String\\\].self, from: data) Hey man, thanks for you help and the information about Swiftjson was very usefully. &amp;#x200B;
I got your suggestion and it worked, thanks ! 
I love how we are still referencing this book that came out in 1994
What a brilliant parody.
Hey all, a PHP dev here learning how to write Swift. I’ve been working in a Mac playground attempting to make Conways Game of Life using a custom NSView object. I’ve been able to get my square grid to display by overriding/implementing the draw() function and setting PlaygroundPage.current.liveView to an instance of my view object. But I can’t figure out how to get my view in the preview panel to redraw the content after it draws it once. I’ve attempted using setNeedsDisplay() and finding other solutions online, but most of the code I’m finding is for iOS playgrounds. What would be the correct way to get my view object to redisplay/draw its content? 
+
So, [MVVM](https://en.wikipedia.org/wiki/Model–view–viewmodel)? Not exactly a new architecture, it's been around for over a decade and is well-known and used extensively.
Hi! I don’t think you’d need to override `draw(_:)` for this use case. Are you doing custom drawing using CoreGraphics? Can you post some code? AppKit has a run loop that constantly redraws your view, using the built-in drawing behavior. You should focus on setting existing properties of your views, rather than manually drawing.
True MVVM :) 
Object.io has a architecture book that’s iOS specific.
Correlation does not mean causation. Just because the app was running on a iPad with iOS 12.1 on IPv6 doesn’t mean that one of these things caused the crash. Take a look at the rest for the message they sent, they usually include a crash log that should pinpoint the cause. 
Yes, it is no announced anywhere I could find, but the vapor community, god bless them, has a 4.2.0 apt Debian repo for ubuntu 18.10 
Trying to get my ([open-source](https://github.com/shirakaba/subscripto)) subscription app to stop failing during App Review despite having no information about the failure cause and it not reproducing at all on my device.
I've been held up in App Review for the last month for issues that I can't reproduce myself. Each review takes about four days, and I can only really respond to each review on each free weekend. I'm at my wits' end here. As detailed in the repository, there are two failure cases that the App Review team are encountering. It all works on my end, however, having based my code on the standard Ray Wenderlich resources. Has anyone experienced an empty array of products being passed into `productsRequestCompletionHandler?(products, nil)`, or payments that never complete (which the App Review team seem to be experiencing)? I'm very tempted to just keep submitting unchanged builds at this rate, as I really have no more inspiration on the errors. As the reviewers aren't providing console logs and don't answer my questions at all, I'm completely blocked here. Or is there some issue with local receipt validation that I need to cater for in Apple's testing environment? Interested to hear any issues anyone has had getting subscription apps through the App Review process.
[You can prevent playgrounds from automatically running ](https://stackoverflow.com/questions/34269297/how-do-you-prevent-xcode-7-playgrounds-from-automatically-running), but it’s an all or nothing thing. There isn’t an option that depends on your cursor, but manually running them yourself isn’t very difficult. 
Check out the Apple Localization guide: [https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/MaintaingYourOwnStringsFiles/MaintaingYourOwnStringsFiles.html](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/MaintaingYourOwnStringsFiles/MaintaingYourOwnStringsFiles.html)
The cause they pinpointed not happening in the ipad i am testing it on, not even in the simulator. I have implemented crashlytics and uploaded the dsym files to firebase after the app got rejected. The line causing the crash in their device is not causing the crash in my device
We just had a similar rejection from Apple which read exactly the same. I’m a bit annoyed that it is vaguely worded as if the internet connection is part of the cause. Ignore it! If they’re only reporting the issue as iPad, I’d double check things like Action Sheets and be sure you are setting the barButtonItem or sourceView and sourceRect on the presentationOverlayViewController of the Action Sheet. As this only crashes on iPad
But i ran the app on an actual ipad and it ran perfectly
You said you’ve got Crashlytics right? What does the stack trace say?
Said that there was a line of code that was causing crash in their ipad But running fine on mine
Ah I see you added Crashlytics after the rejection. I guess the only course of action would be to keep testing it or ask Apple for more info. 
Unfortunately, during installation, it pulls clang-7 making it impossible to proceed using clang-6.0. How did you do it?
In my experience, the study of design patterns gets people into way more trouble than it's worth. As humans, we're wired to spot patterns whether or not they exist. It's the basis of horoscopes. It's very easy to falsely recognize a problem as needing an obscure design pattern when a simpler solution is available. Second, as Peter Norvig said, "Design patterns are bug reports in your language." For example, the delegate pattern is solution to excessive subclassing, but it arrived in an era before Objective-C had blocks. When a better solution comes along, the old patterns outstay their welcome. I'm not saying you should ignore delegates, but that's about following conventions when working on common, trivial problems. When solving non-trivial problems, a solution found through critical thinking is usually better than trying to force a design pattern.
Bitrise.
It blew my mind at the time. We were using some of these patterns but until then I didn't have a name for them. 
I managed to circumvent the problem by linking clang-6.0 to clang, now the problem I am facing is building sourcekit-lsp, which errs with a problem in the libdispatch version present on ubuntu. Here is the error: ``` 'dispatch_queue_priority_t'; did you mean 'dispatch_queue_attr_t' ```
I linked clang-6 to clang and solved this issue, however now a problem with the libdispatch version from the repos emerges: ``` 'dispatch_queue_priority_t'; did you mean 'dispatch_queue_attr_t' ```
Here's the small bit I had written so far. If I manually set needsDisplay and call displayIfNeeded without the while-loop, the live view seems to update, but once I've added the loop I get no content displayed in the playground preview pane to the right of the editor. class World : NSView { var cellSize = 0 init(frame: NSRect, cellSize: Int) { super.init(frame: frame); self.cellSize = cellSize } required init?(coder decoder: NSCoder) { super.init(coder: decoder) } override func draw(_ dirtyRect: NSRect) { let backgroundColor = NSColor.white backgroundColor.set() NSBezierPath.fill(bounds) let black = NSColor.black black.setFill() for x in stride(from: 0, to: 300, by: 10) { for y in stride(from: 0, to: 300, by: 10) { let randomNum = Int.random(in: 0..&lt;2) if 1 == randomNum { NSBezierPath(rect: NSRect(x: x, y: y, width: cellSize, height: cellSize)).fill() } } } } } let width = 300 let height = 300 let frame = NSRect(x: 0, y: 0, width: width, height: height) let view = World(frame: frame, cellSize: 10 ) // Present the view in Playground PlaygroundPage.current.liveView = view while(true) { sleep(5) view.needsDisplay = true view.displayIfNeeded() }
You definitely don’t want to call sleep() while using the UI frameworks. They have a run loop that’s managed for you. IMO you should use an NSTimer and call view.needsDisplay = true/displayIfNeeded once every 5 seconds. That’s likely why you aren’t seeing anything, you’re interrupting the run loop.
Thanks for the advice, the view is updating in the preview pane now! Here's the Timer I ended up using: let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { timer in view.needsDisplay = true view.displayIfNeeded() } &amp;#x200B;
Disgusting!!! Failing you while they approved this shit: https://np.reddit.com/r/mildlyinfuriating/comments/a23r1c/an_app_that_tricks_you_into_paying_150_by_asking/?st=JP67F55J&amp;sh=53f7118d
This exact thought crossed my mind. How do all these scammers get into the store like it’s an open party when I’ve thrown away two months of my spare time (and counting) trying to do it all legitimately and to a high quality. Well, it can’t be helped...
They were once after me with truly idiotic rejections after they discovered the terms of use contains “Google Play”. I was a damn webview!
Oh yeah, they got me with that one, too. Thankfully they were reviewing about once every 24 hours at that time.
i would suggest writing in code your auto layout constraints and to use `UIStackView` which helps a lot with the layout.
Address what you can and resubmit. There are different reviewers each time.
It all comes down to personal preference. You can load all classes into a single massive file- but it’s going to be pretty hard to find things. When you work with other people, you need to use an organizational pattern that everyone understands and can adhere too.
I divide my files currently in this format: Main feature level say homepage, LogInPage, Common (shared controllers, views and models) etc Each feature has subfolders - controllers, views, models, services (if needed), helpers (if needed), Extensions(if needed, usually in the commons folder) A separate file for Resources which includes the assets, infoPlist, settings bundle, localized strings, mock JSON files. It is all up to your own preference. Whatever you do, make sure it is consistent.
I got the buttons connected to an action, when I click either button it can print a message out in the console. I got the counter to show any number i put in the code. I am now stuck on clicking the button and adding to the counter. Xcode screen shot and simulator screenshot posted. https://imgur.com/a/fjcSNgH
Cocoapods are pretty easy. After you have installed them just do an import at the top of your swift file and you can use it in that declaration file.
You the man, gunna try that real fast. 
You are probably better off using an actual swift pod instead of objective C. Check out https://cocoapods.org for searching for them Also try using https://github.com/SVProgressHUD/SVProgressHUD It's a really easy to use library so you can understand how it works. 
This depends partly upon personal preference and partly upon the architecture of your application. &gt; Some said I should structure “one folder per storyboard view”with all the models, view, storyboard and controller inside Firstly, "storyboard view" doesn't really make sense. A storyboard typically contains multiple view controllers. A view controller typically contains multiple views. I *think* from context, you just mean "storyboard" here, don't you? Are you referring to everything you see when you open a storyboard? People generally just refer to that as a storyboard. It doesn't really make sense to do things this way because often you will re-use models and views throughout your application. For instance, if you have an onboarding/login storyboard and a main application storyboard, generally speaking, they will both want to use a User model and views associated with a user profile. But if you organise according to storyboard or view controller, there's no place for these. &gt; another said I should create three folders (View, Models and Controllers) and have the storyboard in the root/main folder That's a fairly decent approach, although storyboards are part of the view layer so you can put them in there. I suggest you follow this to start off with. When you get a bit more experience, you'll be able to tell what works best for you and what doesn't. &gt; As of my understanding I should write my code in files in this order: 1. imports 2. structs 3. protocols 4. class 5. extensions The exact order doesn't matter so much as consistency. Generally speaking though, it's pretty common to see imports at the top, supporting types (if any) next, then the main type that the file is named after, then extensions (if any) at the bottom. &gt; But then I’ve seen code that use //:- MARK table views to basically group sections of the file instead of creating new files? When you use `// MARK: - Foo`, "Foo" appears as a heading in the quick jump bar at the top that acts as a table of contents for the file. Generally speaking, you should stick to one type per file, however it's normal to make exceptions when there is a main type and one or more supporting types that are specifically for dealing with the main type. For instance, if you have a view controller that is intended to let the user create some sort of object and return it to the presenting view controller, that's normally done by supplying a delegate that conforms to a protocol. In this case, it's normal to have a `CreateFooViewController.swift` that not only contains the `CreateFooViewController` class, but also the `CreateFooViewControllerDelegate` protocol. As a rule of thumb though, people get into more trouble lumping too many things together than they do splitting things apart. So if you're unsure whether to create a new file or not, prefer to create the new file. It's unlikely that you're going to pick a perfect way of organising your code and then stick to it forever. These things need time / experience / experimentation! So I wouldn't worry too much about getting things perfect – just have a goal in mind, try to stay consistent, and tweak your approach when you feel there's room for improvement. 
Yeah, might have to google and learn. He did not really explain how his works very well. Even after import, I still do not understand. lol
You’re talking about the Swift Playgrounds app for iPad. So, they have various “levels” that teach the basics. I have not seen any other apps that teach Swift that way. Try Mimo, it’s available on the App Store, it doesn’t offer the game aspect but it’s like a quick guide and it lets you interact. If you’re looking to build an app, and get into more complex content, there are really great classes on Lynda.com.
Hey, you could benefit from an unwind segue, like someone above mentioned. [here is a link that’ll teach you how to perform it.](https://medium.com/@mimicatcodes/create-unwind-segues-in-swift-3-8793f7d23c6f) 
Decided to just write my own lol
Had a similar rejection a while back. Apparently my app required camera usage but the tester had declined camera access which caused the crash. Make sure you’re handling permissions you need correctly.
If your system is 64bit, could you provide a link to your sourcekit-lsp binary? I cant build it locally, no matter what!
That's the plan. Though I do think I've received the same reviewer multiple times now, as they use the exact same incomprehensible text when responding.
It’s copy paste texts, it’s always cryptic. Maybe it their reviewing device. For example, they test all apps on iPads. 
yes. I will upload it somewhere.
Nah, they've provided screenshots on both iPad and iPhone for a few of my reviews. I'm betting/hoping it's just the IAP metadata (as discussed in the crosspost in r/iOSProgramming) at fault.
I see, yes, that's also been a thing where the view and controller often tends to be together. 
We use a very similar approach. The only thing which puzzles me a bit is why you decided to use an `AnalyticsEventMapper` instead of just adding the events‘ name to the `AnalyticsEvent` enum, like you did it with the parameter.
TravisCI running fastlane.
I've never heard of "release mode" or "debug mode". Are you talking about build configurations within Xcode?
perhaps [transfer.sh](https://transfer.sh/)? ``` curl --upload-file /usr/local/bin/sourcekit-lsp https://transfer.sh/sourcekit-lsp ```
Excellent! The parameters are mapped to an enum within AnalyticsEvent. All mapping to strings is done with mapper, firstly to split things up and have single responsibility. Secondly, so that if you have multiple analytics providers, e.g Firebase, logging and MixPanel, each one can map to different strings. This can be helpful as Firebase for example only allows certain characters in event names. The parameters are mapped to strings in the mapper as well. I think the article mentions, if you only want to support a single provider, or don't need to customise event names with mappers you can obviously return strings directly from the AnalyticsEvent as you suggest 😁.
Ah yeah that makes sense, thanks for clarification. We also support multiple providers, but use the same identifier everywhere. 😊
Nice, that's another option of course! 😊
Make sure things don't crash when the network fails, this is something that can cause rejections.
sourcekit-lsp =&gt; [https://transfer.sh/mrb4Q/sourcekit-lsp](https://transfer.sh/mrb4Q/sourcekit-lsp) [libSwiftPM.so](https://libSwiftPM.so) =&gt; [https://transfer.sh/TAOz7/libSwiftPM.so](https://transfer.sh/TAOz7/libSwiftPM.so) VSCode Vsix Extension Built =&gt; [https://transfer.sh/cGGIo/sourcekit-lsp-vscode-dev.vsix](https://transfer.sh/cGGIo/sourcekit-lsp-vscode-dev.vsix) &amp;#x200B; I think thats all you really need.
Great, thanks!
Was that mentioned in the crashlog?
Maybe you should stick to Android then 🤔 
I like IOS too, however publishing part is less documented and clear ... Or maybe I am missing something. Of you have some good references. Please share :)
I’m sorry, but I don’t remember. It was over two years ago on a project in which I don’t participate anymore. 
The X simulators are dogshit for me, the others are alright. I’ve just been using the iPhone 7 simulator for my app instead of the Xr
Yes, I noticed that too, idk why, checked out if Slow Mode is enabled - it is not. 
That’s interesting. I’d love to see how this benchmark changes due to the new implementation of String interpolation in Swift 5. Can you run this benchmark using a Swift Master Toolchain? Today’s release is at https://swift.org/builds/development/xcode/swift-DEVELOPMENT-SNAPSHOT-2018-12-01-a/swift-DEVELOPMENT-SNAPSHOT-2018-12-01-a-osx.pkg
step 1 learn swift https://docs.swift.org/swift-book/
It's called String interpolation.
Thx
I'm pretty sure it's because you're writing non-compatible data formats: the long/lat should be wrapped in an appropriate format: likely a dictionary with a key for each, and an `NSNumber` instead of the raw tuple. You can find more information [in the Firebase documentation](https://firebase.google.com/docs/database/ios/read-and-write). If that's not it, can you please share the stack trace of the crash? It should look something like the image from [number 5 of this article](https://www.apteligent.com/technical-resource/reading-an-ios-stack-trace/). 
Yeah I’ll try to get back to you tomorrow about it! 
\[Here\]([https://drive.google.com/drive/folders/1qT9SMMzNd\_XDFr2NU84vJXTx5m1CQlBq?usp=sharing](https://drive.google.com/drive/folders/1qT9SMMzNd_XDFr2NU84vJXTx5m1CQlBq?usp=sharing)) is what you're looking for. I have two questions: &amp;#x200B; 1. Could it be that I set up the wrong variables to take in in the database? 2. Does the post function make sense? Im trying to piece together from youtube tutorials. &amp;#x200B;
Take a look at pods that are similar to your framework. Then you can see folder structure and podspec settings there and change your framework accordingly. 
Create a separate serial queue and run all actions on it in sync mode 
I mean run that new queue in dispatch queue.main.async
Interesting. I always use escaping. This makes me think I should use concatenation.
For async code, I’d either have a look into Promises, or some kind of Callback
Change async to sync. 
What I do in my application is, I save all my cache data in a custom folder i have created in the documents directory in the application sandbox and provide a clear cache button in the application. Whenever a user taps on this button i just purge that folder by using FileManager.removeItem(atPath: pathOfYourFolder)
It depends what you're attempting to cache. You can use a NSCache yourself for storing images and any NSObject backed class, this retains through application uses and the system will purge it when necessary, alternatively you can purge it yourself.
Ah sweet! I already have the button with function. Awesome. 
Got it!
Have you tried using Multipart upload? I am also uploading upwards of 25 images in one single request and i use multipart upload. This does not put much strain on your server as well as application. Also it is fairly easy to implement.
You need a OperationQueue
You either send next image in completion callback of the previous, or you can use scheduler i.e. send an image once every 5 seconds for example.
Go to your iTunes U app on your iPhone or iPad. Search for "apps with swift" and take the newest course from Stanford, currently "Developing iOS 11 Apps with Swift". This will be the best free thing you can get if you want to watch and learn
[official mongo driver](https://github.com/mongodb/mongo-swift-driver/blob/master/README.md#ios-tvos-and-watchos) 
Start up a mongodb instance locally and dump the data into it. Then use a driver like this [one](https://github.com/mongodb/mongo-swift-driver) in your application to connect to the database. 
Just put the async around the loop, instead of inside it.
No, that's the opposite of what they said. A new queue, not the main one. And sync, not async.
I remember I once had a weird issue with payment after release to app store, it failed with some runtime error that I couldn’t reproduce. I wasted 2 days looking into it, until I said fuck it and submitted an update with zero changes, and it worked!!! I honestly have no idea how on earth something like that can happen
I recently refactored a project to use a pattern similar to what you describe: * I have an 'intermediate' struct with everything optional * I add computed properties to tell me if the state is valid or not (checking that everything required isn't \`nil\` and any other logic) * I have an initialiser in the editable version that i can pass a 'final' object into to populate the props * I'll add a fallible initialiser to the 'final' object that can take the editable variant Reason being is that I use the same ViewControllers for creating new items, or editing existing ones. When creating a new item, none of the values are set, so the state isn't valid. When editing an existing item, I still want the validity to toggle to \`false\` if a required field is set to empty. Having a single representation of the object in the editing simplified all the logic so my presentation layer behaves the same in both cases. I'd be interested to see if anyone else has an alternative approach.
You could follow the builder [pattern](https://medium.com/@johnsundell/using-the-builder-pattern-in-swift-6122b7884fca). Using a TagBuilder you could set the properties on that object and then use it to create your Tag model. I’ve seen a variation of this done before and it worked well. Otherwise generally if I need a property to be optional I make it so and deal with the fallout. 
[This](https://medium.com/@dmytro.anokhin/concurrency-in-swift-reader-writer-lock-4f255ae73422) is a good read on how to properly handle concurrency in iOS. 
I use a similar approach, but I prefer to nest the enums in domains, to avoid having a list of 20-30-40 completely unrelated events. enum EventDomain { enum NotificationsEvent { case didReceiveRemoteNotification case openStoryFromPushNotification(isLive: Bool) } enum UniversalLinksEvent { case openStory } enum OperationTimeoutEvent { case operationOnQueueNotDone(timeout: Int) case introVCStayedTooLong(seconds: Int, applicationIsActive: Bool) } enum MarketDataEvent { enum TapOnMDTickerLocation: String { case story = "Story" case feed = "Feed" } case tapOnMDTicker(location: TapOnMDTickerLocation) } enum UserInteractionEvent { case tapOnStoriesCarouselItem } case notifications(NotificationsEvent) case universalLinks(UniversalLinksEvent) case operationTimeouts(OperationTimeoutEvent) case marketData(MarketDataEvent) case userInteraction(UserInteractionEvent) } Which is then used like this: eventLogger.report(.marketData(.tapOnMDTicker(location: .story)))
The data dump is already done I believe this is the database file https://static.openfoodfacts.org/data/openfoodfacts-mongodbdump.tar.gz
you can use MongoKitten, which is recommended on Swift forums [https://github.com/OpenKitten/MongoKitten](https://github.com/OpenKitten/MongoKitten)
Hi, I'm currently trying to re-create the structure of Instagram but I'm having trouble with Segues. On Instagram, the flow would be Press "Profile" from Tab Bar &gt; Show Profile page of User &gt; Press Followers Button &gt; Show TableView of followers &gt;PP Press "Follower" on TableView &gt; Show Profile page of "Follower". I was wondering how would I go about this because it seems weird to have a VC as the source and destination?
Can you share the screenshot after the crash? It’ll highlight the line causing the issue.
Can you please also re-indent your code. It's quite hard to read in it's current state!
Found a sample project by RayW [Here](https://www.raywenderlich.com/2624-storyboards-tutorial-in-ios-7-part-1) that basically does what I need to do except I had a load screen with menus in front of it.
Nice! I will definitely use this when the number of events grows to a sufficient point to need this. Thanks for the idea.
I think it doesn't matter do you dispatch sync or async because it affects the calling thread only. The main point here is to just use a serial queue.
I have read it many others.. but no one tackles my simple problem
Briefly, Vision API is used for detecting objects in media such as pictures or videos. For instance, face detection(which you can make on your own - it’s not that hard at all. Link : https://youtu.be/d0U5j89M6aI ) 
thank you
what is the purpose of that array? does it affect the UI? if you want to achieve thread safe you already got it by creating a serial queue (not on the main queue). and if you need from this serial queue to touch the UI this is a separate problem you need to resolve. try to break your big problem to smaller ones.
Learn and practice Swift then code http://practpoint.com/swift/
I would use [Stack Overflow](www.stackoverflow.com) .
Thanks! :D
Definitely not necessary. Maybe even a hindrance. 
That database is more than a gigabyte. Not suitable to simply include as a static database. So I imagine you'll have to do some server-side scripting, and publish that as a REST API. The app can then query the database via your API.
Here is fine, just be clear with your question. Try to post code as text and not as images, show what you've tried so far, show complete examples that might run in a playground, and so on.
No I don't need to change UI.. I need just to check if all elements in array have susccess state in order to create a new request to API. That's all
Absolutely avoid `Any` if at all possible. It's a bad code smell in Swift since it's a strongly-typed language and `Any` represents weak typing. If you want to do this you should use a proper `struct` that adheres to the `Codable` protocol. struct Tag: Codable { let id: Int let name: String } Note that this follows the good practice of using `struct` instead of `class` for POD (Plain Old Data) types and also makes them immutable through `let` properties instead of `var`. This has a built-in JSON constructor used like this: import Foundation let json = """ { "id": 1, "name": "Foo" } """ if let data = json.data(using: .utf8), let result = try? JSONDecoder().decode(Tag.self, from: data) { print(result) } If you need to construct these entities piecemeal then you should have some sort of intermediate constructor type that gathers the properties and only allows creation if the properties are complete. This is the Builder Pattern that u/mattroo88 mentioned.
A flowchart is just one possible tool you can use to help document and communicate a process. When working in an organization, you often need to communicate and confirm what software should do. A flowchart is a way to do this with non-technical people. If you’re just working by yourself and you have a good understanding of the problem you’re solving, you probably don’t need one. If it helps you to clarify your thoughts, go ahead and use one though.
I'm just a hobbyist programmer (not a pro), but I often find it very useful to create a diagram depicting the main objects in my app, the properties they will contain, and with lines showing how they relate/communicate with each other. Seeing the big pictures helps me to make wiser high-level structural decisions and avoid time-wasting mistakes when I start actually coding.
How do I do that, thanks for the information any case 
From the page, you can code your iOS app so that it request data from `https://world.openfoodfacts.org/api/v0/product/[barcode].json` , replace the [barcode] with the barcode scanned. The next step I can suggest is to read up URLSession (so that your app can talk to the openfoodfacts server), and parsing JSON (so that your app can use the data retrieved). I have written tutorial on these previously : [https://fluffy.es/nsurlsession-urlsession-tutorial/](URLSession Tutorial) [https://fluffy.es/parse-json-using-decodable-protocol/](Parse JSON) Hope this helps!
Can you share me one of those drawings if you don’t mind. Haven’t seen anything like that before. Just want to know how it looks. 
Thanks you. I don’t have experience with creating app but have created workflows in shortcuts app. When I created that long workflow I found need for creating new features so I have to edit order variables and if statements to it. So I thought flow chart will be important. I think even an small handwritten scribbles with features will also be enough. 
Awesome thank you very much 
I'm afraid they've been on paper and I don't keep them once I have the coding skeleton in place. Still, the gist is to create on a piece of paper, whiteboard, diagramming software, or what have you, the architecture of your app. * Make a box/heading for each class. In that box, list the class properties (prefaced with a bullet) and then the functions (prefaced with a dash), especially those properties and functions that are public. * Top level objects, such as the app delegate and controller, should be at the top with lower-level classes toward the bottom. * If a property is an instance of another class, draw an arrow to that class box so you can see the relationship. * Draw a dashed line with arrow if an object is communicating to others via Notification pattern or showing a delegate relationship. * Consider making a separate diagram for UI flow, showing the sequence of views a user will navigate. Other people will use different (undoubtably better) approaches, but the key is to diagram at least the skeleton of your app so you can see the big picture and make high level decisions about patterns (MVC?), properties, and functions before you start. I'm a visual learner, so this works for me. Just try it, and you will develop a methodology that works for you. &amp;#x200B;
Is there a way to use SCNBillboardConstraint() to set a text node but leave it in place so a user can walk around it and see the back of it?
I still don’t understand some terms you said like class. But bookmarking this thread so I could come back when I understand this 
Oh, I see. Yes, you will need to get a handle on some basic programming terms and concepts first, then it will all become clearer.
I don’t think you can. When an app is suspended you can get some background execution time (usually up to three minutes) which is so your app can complete any tasks, save data, shutdown etc.. 
some really good news.. this morning buid.. works ton better on completion. Vapor now completes. [https://transfer.sh/Jl14Z/libSwiftPM.so](https://transfer.sh/Jl14Z/libSwiftPM.so) [https://transfer.sh/xM0vG/sourcekit-lsp-vscode-dev.vsix](https://transfer.sh/xM0vG/sourcekit-lsp-vscode-dev.vsix) [https://transfer.sh/9Wjq3/sourcekit-lsp](https://transfer.sh/9Wjq3/sourcekit-lsp) Screenshot =&gt; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; Sc &amp;#x200B; &amp;#x200B;
Is there any work around since this server acts as a peer-to-peer client
Do you want this app to be on the app store and pass app review? Then the answer is no.
usually when you don't know the quantity of iterations ahead of time. 
I wouldn't extend it, that will give all `UILabel` the functionality. You could subclass it if you need the functionality in multiple places. If your scores are definite values then use an `enum` for them: import UIKit enum Score: Int { case zero = 0, one, two, three, four, five } extension Score: CustomStringConvertible { var description: String { switch self { case .zero: return "Zero" case .one: return "One" case .two: return "Two" case .three: return "Three" case .four: return "Four" case .five: return "Five" } } } let label = UILabel() let score = Score.five label.text = score.description 
So does my constant disappear afterward? As in, deallocate from memory?
I’m sure there’s something on NumberFormatter for this :/
It behaves just like any other local variable: it's alive while it's in scope, and not after that.
oops. actually don't know what is going on in your example. if i'm reading that correctly, your let will never change therefore your loop will run forever. 
Thank you for an answer, could u please explain it detailed? 
The constant will change for each iteration: var bar = 0 var test = String(bar) while let foo = Int(test) { print(foo) bar += 1 if bar == 3 { test = "" } else { test = String(bar) } } Result: &gt; 0 &gt; 1 &gt; 2
I'm gonna say it's not mandatory, but if you don't have an idea of where you're going, it's pretty easy to get lost. 
Yep, you got me, he never literally said the exact words I quoted. Let me quote what he actually said: \&gt; You can also just write and read files from disk, which is often the best and easiest way to do things. Wow, that's really different than what I paraphrased. &amp;#x200B;
I wouldn't put them at all, it's not really a skill that you've learned unless you've worked on a few major and complex ones. I'd only put major projects, languages, courses, and technologies on your resume.
Sure, but the tone of the comment obviously implies that most of the time using any other than files is overkill, which I disagree with.
Yeah I kinda thought so.. just needed to confirm. Thank you! 
Thank you for posting this! I like this article because it demonstrates the value of the ViewModel pattern without dumping on MVC. I really appreciate the way it illustrates the value of a middle-man structure that is a direct representation of how your data is *presented*. This is the key to making your view controllers testable and reusable, and there's no rule that says you can't do this with traditional UIViewControllers. 
No problem, good luck. Oh, and if you're in college then bring your resume to your department and have them look it over. They're usually a great resource and can give you some excellent direct advice. In fact, many times they have contacts in industry and can even give you a referral that will help a ton.
A contrived example: ``` var str: String? = "Hello World!" while let x = str { print(x) str = nil } print(x) // Use of unresolved identifier 'x' ``` `x` is only in scope for the while loop. (Hence the compilation error on the last line.) `while let someConstant = someValue` only allows optional assignment too. Similar to the `if let`, it is useful for only executing code if an optional is not nil. Instead of the `let x = str`, you can imagine a function call like `let x = readLine()` which may return nil when it is done (or some other function which has side-effects so it doesn't always return the same value forever).
I have a navigation bar over a MKMapView. When I click on a button in the navigation bar (which is added as a navigation bar subview) it brings up a view which checks for some user default values (acts as an admin view) and if those values are not valid it brings up a login view. I have an exit button on the login view that i want to dismiss the login view in addition to the admin/first view if I tab it to return to the map view. i've used all of these solutions and none have helped: dismiss(animated: true, completion: nil) self.view.window?.rootViewController?.dismiss(animated: true, completion: nil) self.view.window!.rootViewController?.dismiss(animated: false, completion: nil) self.navigationController?.popToRootViewController(animated: true) guard let vc = self.presentingViewController else { return } while (vc.presentingViewController != nil) { vc.dismiss(animated: true, completion: nil) } if let appDelegate = UIApplication.shared.delegate as? AppDelegate { appDelegate.window?.rootViewController?.dismiss(animated: true, completion: nil) (appDelegate.window?.rootViewController as? UINavigationController)?.popToRootViewController(animated: true) } &amp;#x200B;
You can also go with r/iOSProgramming for iOS programming questions.
so you have all you need already. this is how you create a serial queue: let queue = DispatchQueue.init(label: "whateverNameHere") create if for your shared instance of your network manager and run array handling actions on it.
What specifically are you struggling with? I started out confused then slowly forced myself into it. Using anchors really cleared a lot up for me. [https://useyourloaf.com/blog/pain-free-constraints-with-layout-anchors/](https://useyourloaf.com/blog/pain-free-constraints-with-layout-anchors/)
I share the same frustration. This guy has some good content on his YouTube channel. give this video a look. [https://www.youtube.com/watch?v=ONnKPaI-t\_s](https://www.youtube.com/watch?v=ONnKPaI-t_s)
There are more constraints than just the things you add. There are size constraints generated by the content of UILabels or UIImageViews for example. UIStackViews are also just autogenerated constraints. Then there are the disconnected views, like UITableViewCells and UIScrollViews. They float in your screen and need more information about their size than you need to add to elements in your "main" view tree. It's quite complicated but all of it is logical at the same time.
There is no way to get around this without using private APIs. If you plan to distribute your app on the App Store, you need to use public APIs, which means there's no way to do what you're asking.
screenshot added
screenshot added
screenshot added
Wow, I loved this article, it just kept building and progressing naturally so that I understood every step (and want to scrap everything I'm working on and start over using this method). Frankly I'm just thrilled that I understood it too. Maybe it's the examples used and the way it was all presented, but previous articles on ViewModels have just kind of left me thinking "okay, neat". This really highlights the value and utility of it.
unwindforsegue?
&gt; Then the answer is no. He did.
My guess would be you are fetching the Bank that contains the balance entry, and instead of fetching and updating the balance entry object that already exists you are creating another one. The reason why it could be showing the proper one when you go back and forth between the views is that it fetches the last one you created. &amp;#x200B; &amp;#x200B;
MVVM sounds like a single pattern refinement of MVC, but in my experience MVC acts more as a fractal pattern in client-server architecture. This is never more apparent than in web applications where MVC at the server rendered template layer must interface with mini-MVC in javascript layer. Thus, MVVM strikes me as less of a pattern and just one of a number of fractal compositions of MVC in any given stack.
There are exceptions that you can schedule background time for.
Just remember that you must have X, Y starting points width and height. Explicit or implied. And nothing can be defined twice- explicit or implied. 
Without seeing any code, how could any of us give you an answer? It would just be shot in the dark guesses.
For the TVC you could try reloading the data using the built in method. As for printing, hard to say without the code
Yep!
Try stackoverflow.com and put in whatever code you think is relevant to your question. 
let a:Int? = Int(firstText.text)
You’ll have to unwrap that text with a !. Here’s the docs for that method https://developer.apple.com/documentation/swift/int/2927504-init
Edited a more complex version
Sorry, I meant that UITextField’s text property is an optional, but the Int initialiser takes a String so you’ll have to unwrap like: textField.text! to pass it to the initialiser
&gt;BUT! When I leave BankTVC and go back out to the main menu and then go back in to BankTVC, the value is updated both in the table view and in the console. The value on the console is from the table or from the Managed object ? And are you updating the values of the table by reloading the table by calling table.reloadData() at appropriate places ? 
Oh, thought the Int() var accepted an optional string
Who did what?
 if let i = textField.text.flatMap(Int.init) { // 
(because I use this since ever only for CGFloat, I didn't make it fully-number generic) It is a very simple helper class to help you scroll/rotate values (from initial value) between min-max. For example, I use it to generate many (thousands) random colors one after another. &amp;#x200B;
Is Voip background mode an option?
Added code snippets to the post.
Yeah I added some code. I do reload the data in the delegate method. I actually use that same delegate method from another table view (addBankTVC) and when I do that, the bank is added no issue. So I know the delegate method works.
Value in the console is from the managed object. See the code I added above.
That’s gonna crash if there’s nothing in the text field. You’ll want if let text = firstText.text, let a = Int(text) { } 
This would be much easier using SpriteKit, and be more responsive. For this type of application, I would not use an NSCollectionView, but would rather make it a 'game' using swift / SpriteKit.
Although technically you could put the code in a place where the textfield.text is never nil (I.e didChangeCharacter delegate method). This is the better answer since it won’t crash independent of where it’s called. The only thing I’d change is the naming of the variable a to number, but that’s just readability preference.
There's definitely different ways to accomplish this; the Holiday Calendar bit was entirely pulled from a 5 minute thought process to justify the demo. ;P
[Documentation for `drand48`](http://pubs.opengroup.org/onlinepubs/7908799/xsh/drand48.html): &gt; The srand48(), seed48() and lcong48() are initialisation entry points, one of which should be invoked before either drand48(), lrand48() or mrand48() is called. It's an interesting use of `drand48` but you should be sure to properly initialize your usage. 
Something else, do not force-unwrap it. That's a very bad habit.
Still unwrap it properly. Yes, you can be fairly sure it won't be nil but we're not talking code that is nanosecond-critical here. Be safe, unwrap it properly unless you absolutely need to save that simple test.
It does not: [init(_:)](https://developer.apple.com/documentation/swift/int/2927504-init)" convenience init?(_ description: String)
Check out this writeup on [impementing a dark mode](https://www.latenightswift.com/2018/04/26/implementing-night-mode/). It's pretty simple to do on your own, and there's a lot of good stuff in that tutorial.
I might create a ViewModel for this. Create two return functions that take in the score int and spit out the formatted text. class ScoreModel { func scoreLblA(_ score: Int) -&gt; String { var scoreString: String // code to format the score label text return scoreString } ... } Then in your ViewController method updating the labels: func updateScoreLabels(withScore score: Int { scoreLblA.text = ScoreModel.scoreLblA(score) scoreLblB.text = ScoreModel.scoreLblB(score) } &amp;#x200B;
Thanks for this. I am trying to make this work with Sublime Text.
So how do I pass the zip into ClearMessage, do I need to convert to Data or a String?
I'd use a base64 encoded string.
It‘s not, then the textfield.text property is just „“
There are a lot of use cases where force unwraping makes sense
Your images are interesting but the reason they "rotate" like that is they aren't using a random number generator. Instead they are using the same seed value for an algorithm: Xn+1 = (aXn + c) mod m, where n &gt;= 0 This is called a [linear congruential generator](https://en.wikipedia.org/wiki/Linear_congruential_generator). Thus you're generating a very-badly pseudorandom sequence, in this case with a width of 48 bits. In fact, rather than model this as a random generator I'd instead model it as a proper `Sequence`. It would make more sense, semantically, and you could have better control over the results.
Yes, it's in the language because it does have some uses. However, those are fairly rare and should be exceptions to the rule.
In initial testing, this seems to be working on sublime as well. Will further test.
Awesome stuff!
Are you trying to adopt Mojave's dark mode, or to skin your app and make it user selectable? If the latter, that's why you're seeing so many old theming libraries and projects. If you adopt Mojave's dark mode, though, then obviously dark mode will only work in Mojave, in dark mode. For the most part, it will be automatic, unless you count on a lot of third party controls that do their own drawing. 
Yup, which is why I said safely unwrapping is the better answer
I suggest reading the source code of this repo : https://github.com/rockbruno/swiftshield
Great work! Gotta try it out. 
Is the context where you write/update the same context you're reading from? I've fallen into the trap of having multiple contexts and/or parent-child contexts that aren't properly synced. If the contexts are different, it could be that the data where you're printing isn't pulling updated data
Good article. Just want to mention that there are some bugs that are out of your control when you make a screen saver in Swift, and for my screen saver project I've gotten issue reports that I have not been able to fix because they're tied to how macOS loads these plugins.
For future reference: never access an array without checking it’s size. This is a must at my job for pull requests. We will leave a comment and question whether access to an array is valid. 
Glad you enjoyed! I tried to highlight some of its issues in the intro but yeah as you said, while it can be built with Swift it’s not the recommended way if you want to avoid some headaches :D Let’s hope that Swift 5 solves all of them!
Yeah, you did a good job of pointing out that it's unsupported. What's interesting is that some issue reports I've had seem to be unrelated to ABI stability. That would come into play when there are multiple Swift plugins being loaded by System Preferences, but sometimes the screen saver won't load even when it's the only Swift plugin. It's an issue that's been reported for years, but the cause has not been determined.
Bad idea and makes you not a desirable developer if you’re planning on becoming an iOS developer later. You will add unnecessary size to the app and you’ll end up also having to manage UIKit objects like labels, etc. 
Bad idea and makes you not a desirable developer if you’re planning on becoming an iOS developer later. You will add unnecessary size to the app and you’ll end up also having to manage UIKit objects like labels, etc. 
The number one thing I like about AppCode is it doesn’t give me any indexing errors related to Xcode and by that I mean: Indexing taking forever. Autocomplete not working at all. Text coloring disappears. Rename not doing anything. It just sits there. I’ve experienced this too many times on Xcode. Deleting derived data, cleaning build folder, reinstalling, etc. have done nothing. These issues have been there since Xcode 9 and now I see them in Xcode 10. And it’s a small project I’m working on. Less than 600 lines of code. Xcode at my job 100% does not do autocomplete (project is enterprise). Xcode pisses me off. 
OP could be writing an iOS app, but hasn't specified yet.
This wasn’t OP’s question
&gt; Does anyone could gimme a point of start to achieve it? 
Would you mind posting how's your current storyboard looks like and what you want to achieve? We could try help. Auto Layout / Constraint can be daunting to a beginner as it requires thinking in dynamic form (to adapt for different screen size and orientation) instead of fixed size / position. I have written a series of blog post on resolving common Auto Layout constraint problem here : https://fluffy.es/making-sense-of-auto-layout/ , hope this helps!
Sorry, I should have specified an iOS app is what I am trying to theme.
Nope. Only have one context, the viewcontext. Didn’t create any other contexts anywhere. 
Never heard about the last ones. Most of the issues people had with "Brooklyn" were mainly due to multiple Swift plugins being loaded. "Brooklyn" isn't near as old as "Aerial" and doesn't have even 25% of its users so that might be the reason I've never heard about those. But yeah, in short, building it in Swift is cool and we hope that it gets better with Swift 5 but you never know :)
Worked like a charm, on to trying to figure out how to get an md5 of the encrypted file next! Can't thank you enough.
A pleasure. Don’t use MD5, why not SHA-256? It’s not got known collisions. CryptoSwift will do that easily for you! https://github.com/krzyzanowskim/CryptoSwift/blob/master/README.md
It's been a huge learning process, which has been great! Bound by the API again in this case. The instructions are: Base64 encoded string of the MD5 hash of uploaded file. Note that this should be MD5 hash of the encrypted zip file, NOT the unencrypted zip file, and NOT the individual files inside the zip. Also note that this is the MD5 of the WHOLE file, not a concatenation of blockwise MD5 hashes of file chunks. You can generate the contentMD5 in your unix command line using the command: `cat file
You can still use CryptoSwift! Supports MD5. Remember hash of raw zip will differ from hash of base64 string. 
What’s wrapping and unwrapping?
An Optional is "wrapped" when you don't know if it holds a value or not. It's "unwrapped" when you find out in some way. A force-unwrap is using `!` to unwrap it, if the `Optional` doesn't hold a value then it will crash. [Optional Binding](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html#ID333) uses assignment combined with a conditional statement in order to safely test and unwrap an optional: let bar: Int? = Int("1") if let foo = bar { // do something with foo } There are also several other ways to safely test and unwrap an `Optional`.
Has anyone tried Flutter? I love Swift but writing two apps sucks. Flutter seems like the best answer for two apps to me.
those aren’t programs. Are backends considered programs actually??
I recommend learning more about how nested arrays and dictionaries work. 
The question was what do swift used for other than Apple products
I thought OP meant writing programs besides just programs for Apple products. 
Eh. I don’t think so, but I could be wrong
I really learned a lot from this Swift By Sundell blog series: [https://www.swiftbysundell.com/posts/building-a-declarative-animation-framework-in-swift-part-1](https://www.swiftbysundell.com/posts/building-a-declarative-animation-framework-in-swift-part-1) &amp;#x200B; It breaks down how animations interact and doing animation chains that don't break.
I learned in a week using the Swift Documentation guide. Great way to learn acceptable syntax. 
where is the problem in my code
I deleted that project due to frustration, but I’ll definitely give a look on your blog post, thank you so much! 
You can convert your string to an array of bytes.
Use the Date class's initializer to get the current date. Set the new task's date of creation to the current date. `newTask.dateCreated = Date()` &amp;#x200B;
Happy Cake Day! Because your sorting the array in the loop your constantly messing your numberArray[index]. 0's will always find themselves close to the start of the array, cause you never generate 0, and every time you generate a new number, it will find it self at a new "random" place within your array. [0,0,0,0,0] Index = 0, Random = 5 [5,0,0,0,0] Sorted [0,0,0,0,5] Index =1, Random = 3 [0,3,0,0,5] Sorted [0,0,0,3,5]
It's pretty simple: `let numberArray = (0..&lt;999).map{ _ in Int.random(in: 1 ... 100) }`
I think you're looking for something like this: var numberArray = Array(repeating: 0, count: 1000) for (idx, _) in numberArray.enumerated() { numberArray[idx] = Int.random(in: 1..&lt;101) } print(numberArray)
In addition to what others are saying, the fact that you're sorting between replacements means your method will result in half random numbers (rounded up) and half zeroes (rounded down). The reason for this is that once you get to the halfway point, you wind up overwriting your random numbers.
What you can do, is used a compiled framework, then figure out where you can host it. In your pod spec you'd have something like: &amp;#x200B; `s.source = { :http =&gt; 'https://&lt;hostname_of_where_you_want_to_host_it&gt;/PodFramework.zip' }` `s.vendored_frameworks = 'PodFramework.framework'`
Awesome ! Always wanted to try to make one, I may finally give it a try
It’s a good idea. In this case I believe it should be a direct hard code implementation right? Maybe create an Xcode plugin to help with it could be a good idea? Does have anything similar to this?
You would need to add a `var` to the protocol for `dataSource` as well. That way you’re saying “every class that conforms to this protocol need a dataSource and this function, to work”. You would allow the function to have a default value but not the dataSource.
Use UIImage( Data ) when you have a jpeg or png, not with raw buffers. &amp;#x200B; There are at least two ways to do it. Here's the one we recently used for a 4 byte per pixel image (ARGB). Essentially you allocate and manipulate a Data object and then pass it to this routine. &amp;#x200B; extension UIImage { public static func from(data:Data, width: Int, height: Int) -&gt; UIImage? { assert(width &gt; 0) assert(height &gt; 0) let cfdata = NSData(data: data) as CFData if let provider = CGDataProvider(data: cfdata) { if let cgimage = CGImage( width: width, height: height, bitsPerComponent: 8, bitsPerPixel: 32, bytesPerRow: width * 4, space: CGColorSpaceCreateDeviceRGB(), bitmapInfo: CGBitmapInfo(rawValue: CGImageAlphaInfo.premultipliedFirst.rawValue), provider: provider, decode: nil, shouldInterpolate: true, intent: .defaultIntent ) { return UIImage(cgImage: cgimage) } } return nil } } and then we use this to allocate the memory, fill it, and create the image: let width = 300 let height = 300 let bufferSize = width * height * 4 let buffer = UnsafeMutablePointer&lt;UInt8&gt;.allocate(capacity:bufferSize) defer { buffer.deallocate() } var p = 0; for _ in 0..&lt;height { for _ in 0..&lt;width { buffer[p] = 127; // alpha buffer[p+1] = 0; // red buffer[p+2] = 0; // green buffer[p+3] = 255; // blue p += 4 } } let data = Data(bytes:buffer, count:bufferSize) let image = UIImage.from(data:data, width:width, height:height); &amp;#x200B;
I’m aware that Swift 3, http POST method with NSURLSession will help with pushing back data to database and AlamoFire with Swift 4 will help too but then again what if 2 users post data at the same time to same table. Then I’d have to make a new table everything data is pushed so stuff does not get mixed up. Seems more efficient to somehow export data to file in this situation. 
Look at the .shuffled method for Array 
Or `(0.&lt;999).map { _ in 5 }`. (I chose ‘5’ randomly).
How did you get 160k users?
Is there no way you can use UIView.animate or UIViewPropertyAnimator these both come with completion blocks.
It's basically a procedural dungeon generator that ensures all the rooms are connected.
Check out [Modern Auto Layout](https://useyourloaf.com/autolayout/) by Keith Harrison.
So basically if you want to add default values to a protocol, you can make an extension e.g. `protocol PreviewModuleViewDataSource {` `func previewModuleView(_ moduleView: PreviewModuleView, numberOfItemsInSection section: Int) -&gt; Int` `}` `extension PreviewModuleViewDataSource {` `func previewModuleView(_ moduleView: PreviewModuleView, numberOfItemsInSection section: Int) -&gt; Int { return 0 }` `}` &amp;#x200B;
I have been facing the same challenge in my company. After figuring out a solution, I decided to write an article to talk about my findings and the solutions I put in place. You might find something that can help you [here](https://medium.com/streamroot-developers-blog/delivering-proprietary-libraries-via-amazon-s3-5aea2b7ccac8).
the view in the container will be called with a segue. in storyboard you need to give that segue an identifier. you can use that to give a reference of the parent view to the embeded view controller. &amp;#x200B; In parent ViewController class: &amp;#x200B; `var containerButtonStatus: bool = false` &amp;#x200B; `override func prepare(for segue: UIStoryboardSegue, sender: Any?) {` `if segue.identifier == "mycontaineridentifier" {` `let view = segue.destination as? MyEmbeddedViewController` `view!.parent = self` `}` `}` &amp;#x200B; `func doSomething() {` `self.containerButtonStatus = true` `}` &amp;#x200B; Then when button is pressed you can do the following inside your container view: &amp;#x200B; `self.parent.containerButtonStatus = true` or call a method `self.parent.doSomething()` &amp;#x200B; code was not tested and may contain syntax errors, but I hope you get the idea.
Is it worth paying for a Swift course or sticking to the free stuff? 
There is a plugin called Alamofire that can handle REST API/http calls. &amp;#x200B; maybe you can look into that to get an idea how to work with REST APIs.
I think this will work: https://developer.apple.com/documentation/systemconfiguration/1517123-scdynamicstorecopyconsoleuser
I would like to build a MacOS application which stores a data in a local file (A library of information - list of objects that will be searchable). I would also like the file to be human readable (i.e. not binary). 1. Would storing the file as JSON be sufficient? 2. If no, what would be a good alternative? 3. Should it be a document based application? Thanks in advance
Read up on `CGBitmapContext` in Core Graphics.
(0..&lt;3).map { _ in 5 } gives [5, 5, 5]
Technically you could use objc_setAssociatedObject, objc_getAssociatedObject and objc_removeAssociatedObjects in a calculated property in the extension.
I guess it’s because hybrid development has been a bigger thing on pc’s and macs than is on mobile for a long time. The user share that uses a Mac is also a lot lower compared to iOS
For me it’s a few things. There are more jobs / money in iOS The iOS SDK is newer and nicer to work with (though macOS stuff is getting a lot better and borrowing from iOS recently) There are a lot more IOS users out there than macOS users (potential install base is way better for iOS) Native desktop apps seem to be generally on the decline in favor of web apps, with the exception of games / professional / performance software. I don’t really prefer web apps but that seems to be how things are going!
It does.
Paul Hudson also does a book on macOS ("Hacking with macOS", if I recall). Kinda frustrating if you prefer not to use Interface Builder for assembling UI, mind, as it's IB all the way in his books. I agree that Ray Wenderlich's resources are invaluable. Have no idea how people coped, let alone how they produced any high-quality applications, before that resource. Some of the time, you can read iOS guides and just replace UIKit with AppKit (mostly involving replacing "UI" with "NS" and praying that the features are supported on macOS).
Having recently gotten into macOS development for work, I feel your pain. If I had to guess, a lot of Mac development is just old enough that it may mostly exist as physical books, not online content. I’ve seen some over the years at Barnes &amp; Noble and they seem pretty useful, just a lot harder to digest if you’re looking for something specific. 
I am not sure about the lucrative part. Many people would argue the opposite. You can easily charge $50 for a macOS app, hardly possible on the iOS App Store. iOS is much more popular than macOS, hence the abundance of content. On a business level if you need to make a desktop app it is much cheaper to make a web app and use a native wrapper with a web view for each platform. Compared to hiring a developer per platform. I would recommend doing a few Ray W tutorials, get familiar with bindings (it doesn’t exist on iOS). If you have some iOS experience then you can jump into macOS. I would just recommend to be patient and if you encounter issues, search on GitHub and Google. 
I\`m with you, recently I was making a menu bar app, and a lot of normally used method, now are deprecated in the official documentation because they use Obj-C, but not Swift way was provided, so all the process was a mess.
I've been a Mac developer since 1984. There are many reasons why the Mac application market is small: 1. macOS has only a 10% marketshare. Apple sold 223 million iPhones last year compared to 20 million Macs. 2. Many applications have been replaced by web sites (Quicken -&gt; Mint, for example, or Eudora -&gt; GMail) 3. Apple distributes many apps for free, like Pages, Keynote, iMovie, etc. The iPhone dominates Apple's revenues so that's where they pay most of the attention. There are a few successful Mac apps - PCalc and BBEdit, for example, but the ecosystem just isn't large enough to sustain as many developers as iOS. &amp;#x200B;
Indeed, and with Marzipan coming, It’s not going to get better. All the forums dedicated to macOS closed down. I am surprised there isn’t a single one left? 
One of the big reasons for a lack of resources is the abundance of other languages you can use for Mac Development: C#, C++, Java, Python, etc, etc. The other languages only require small tweaks to work on other platforms, but with Obj C/Swift you are stuck with Apple eco system.
Thanks. I guess I'm really looking for how I can use the value of numberOfItemsInSection in the class?
Thanks. I return numberOfItemsInSection out of the protocol extension I make, but then how can I use the value of that returned count in the code? 
I found that using a Y=mX+b style constraint library for a while made the underlying concept much easier to see and understand. A constraint is a linear equation, and writing it in english really obscures that fact. AutoLayoutShorthand, Mortar, Stevia all have this style, thought the first may be out of date and the latter two offer other APIs too that are really nice for more concise code but perhaps not as helpful in grocking the underlying concept.
The interface builder is way more advanced under macOS. You can crest whole applications without touching code at all. If you don’t use the interface builder on macOS you are missing out. 
Going to duck the hate here, but learn electron. It’s easy and the apps work everywhere. 
Yeah. Totally agree. Let’s create a macOS development subreddit with active users. 
Why not just post and be active in r/macprogramming instead of creating a new subreddit?
I was just going to add this comment, so thank you for beating me to it. Also, I think it'd be cool for people to look at code examples like [Fox](https://developer.apple.com/library/archive/samplecode/Fox/Introduction/Intro.html), which is both iOS and MacOS. It includes great lines like these: #if os(iOS) || os(tvOS) typealias ViewController = UIViewController #elseif os(OSX) typealias ViewController = NSViewController #endif 
I've also programmed Macs since 1984, but just for fun, not for a living. Assuming most people on this thread are iOS programmers -- aren't you interested in creating macOS apps for your own use? Like small utility apps or drawing apps for use in iOS projects?
Agreed. I tried to make a menu bar app like a year and change ago but gave up due to lack of resources, particularly on the UI stuff.
I cant see any easy way to do this using Static (I havent used it before fyi). If you want a static tableview you can create a static one in the storyboard alone. For capturing text you would set the textfield delegate to your own class and either use a tag to map it back to the original properties, subclass Uitextfield and give it a new property, do a comparison to your iboutlets (you can use any field as an iboutlet in a static tableview or finally add arrange your textfield delegate class to handle the data binding.
Please don't do this, users like having free RAM and not thrashing their swap file. Especially if they're on a laptop. Electron level RAM use drains battery fast.
Former Apple engineer here. If you don't want to use the Interface Builder to develop Mac apps, you're on the wrong platform. 
Cross-platform tools are for fucking amateurs. Go native or go home.
For 1bpp you need to create a [CGImageMask.](https://developer.apple.com/documentation/coregraphics/cgimage/1455089-init) Just remember that when you draw it, it uses the current fill color, not black.
I recommend [Learn Swift on the Mac](https://www.apress.com/us/book/9781484203767) by Waqar Malik, who is a former Apple DTS engineer with more experience on Apple platforms than most people will ever get.
is there a create it programmatically?
Yep, all those amateurs at slack, facebook, discord, google... Amateurs!
For sure. It's an easy option though. Good for small tools.
Yes! I just found that and now it is working. And anyway thank you!! Also, this SCDynamicStoreCopyConsoleUse() function should be deprecated as some papers from Apple said, they ask to use a new called xtmp which I was unable to locate a single example.
They _run_ everywhere but work well nowhere.
They are just big enough to handle the consequences and the issues. Take a look at Uber, they moving out from React Native, don't they?
Not that im aware of but its not too difficult to structure your tableview class in a static way. I normally declare my static rows as indexpaths at the top of my class, and switch case in the cell for row delegate method. I could even suggest if you like the syntax of static you could create all the data associated with a row in tuples as constants and add a lots of boiler plate in the cellforrow.
Awesome! It worked. Thank you so much! &amp;#x200B; Now if you don't mind answering, I want to display the number of days that passed since the creation of the Item. I created a right detail text for each cell. How would you do this? I'm guessing this goes on the cellForRowAt method. &amp;#x200B; I was thinking of putting like: `cell.detailTextLabel?.text =` &amp;#x200B; but don't really know how to go on lol. What would you do? Thanks again!
Don't even get me started on what a half-assed job FB does on iOS apps. If they're not the worst resource hogs in the world, they're in the top two.
Ive not had a situation where I needed something which did not yet exist. I created a screensaver and a dirty gui to select images for some task I had to do but thats it
Ahh, okay thank you
I was using a more basic model of the same year for iOS dev. If you upgrade your ram to max, it should be fine for another year or 2. It isn't Mojove compatible. I think it is xCode 10 compatible though. You'll need to check. What's the asking price? I had to upgrade to a new model for my current dev environment (react native and lots of docker containers locally).
That makes sense… I was sort of close. Thanks for the help!
What to expect from a platform left adrift by Apple. macOS APIs are vintage, compared to iOS. To simply color a view you have to create a class. You have to create classes for everything that can be done in iOS by marking a checkbox or selecting an option. Apple don't give a fuck about macOS not to mention they hate developers. "Apple is not your friend" is an old saying among Apple developers and nothing can be more true than that. Apple should be writing good documentation, helping developers, selling equipment for lower prices for those who take development serious. Instead, they don't give a fuck. The result is this. Most of developers are using old equipment and developing apps that do not use top stuff that are only present on late equipment. macOS is vintage, in terms of development, unfortunately.
Wait until Marzipan matures a bit, and the macOS development market will look much different.
I took my first foray into Mac development a couple months ago with Paul Hudson’s “Hacking with MacOS”. It was a great and even fun introduction. Can highly recommend. It’s even better if you read it in a British accent. (He’s British.) https://www.hackingwithswift.com/store/hacking-with-macos
If the price is low low low, I'd go for it. However, since each successive version of Xcode is required to target newer apps, and each version of Xcode only runs on the current and current - 1 versions of macOS, OP might find it worthless for iOS dev within a year. It'll still be perfectly fine for macOS dev and other kinds of dev, though.
That looks really good. I'm a little confused by the website though, up top you can buy the book for $29.99, but in the table of contents it also lets you buy each chapter separately at the same price, what am I missing?
You are 100% good dude. You could program in Swift and build apps on a crappy black macbook (not even a pro) that are on ebay for like $200. It's not going to be like an old windows pc. Those you literally can't use. A crappy macbook will be usable. When I didn't want to spend a lot of $$$, I got an early 2011 - 2013 same specs, refurbished for about $500 on ebay. It worked flawlessly, I upgraded to a 2016/2017 with better specs down the line for other intensive software (so I could run whatever I wanted, like Maya.. or games in general). But yeah, based on what you said that system will rock it for swift development.
I have a bunch of Paul Hudson's books, they cover a lot and he does a good job at both explaining things as well as providing projects that cover some great examples in the process. Hacking with macOS has been good so far, though I'm largely writing command-line apps at the moment, so it doesn't quite apply unfortunately. It's still a great resource for future reference. 
This is exactly what I use, it is Xcode 10 compatible. Compile times are fine, occasionally it struggles with large storyboards. The graphics in the 2011 are underpowered compared to later years. Overall it’s fine and I’m in no hurry to upgrade.
I'm working on a late 2011 15" Macbook Pro right now (only 4GB, however), and I think you should get something newer. The lack of Mojave support should worry you--currently I can run the most recent version of Xcode, but I fully expect that to disappear with the next release. So the clock is already ticking on that. But the real problem is one that no one else has mentioned, probably because they aren't dealing with it every day like I am: the simulator has turned into absolute molasses with Xcode 10. There are some configurations I can't even simulate because it locks the machine up completely. This is a [common problem](https://forums.developer.apple.com/thread/108668) and there doesn't appear to be any resolution other than using a newer, faster machine.
Add an SSD and upgrade it to 16 GB RAM and you have a rocking Mac.
I also use the exact same model. It works much better to build directly to a device than in the simulator.
Honestly the only reason I bought a MacBook was for mobile development. They’re good machines, but most non-technical people probably don’t need one considering the price and it’s just being used to run a web browser.
I am working on an app that uses a navigation controller with 3 view controllers. I need to pass several variables from view2 to view1. The app will give the user the ability to set one of the variables in view2 through view3. Flow of app is View1 --&gt; View2. If Option in View2 selected, go to view 3. Once var set in view 3, back to View2. View2 back button saves variables. Back to view1, execute function. 
What’s the current (Dec 2018) state of Swift? I have an idea for an iOS app but I’ve only ever done Android development. Is it stable, is there a major version coming soon, etc?
I thought you couldn’t run Xcode 10 with out he Mojave update?
Swift is the recommended language for iOS and macOS development. The Swift 5 release will bring ABI stability, meaning future releases of Swift will be binary-compatible with older Swift releases. While we don’t have a release date, the final branch date for Swift 5 was November 16th. Until release, they’re only taking in critical fixes. For the most part, Swift is taking very few source-breaking changes between 4.2 and 5. I’d personally say now is a great time to start writing Swift.
Uber uses a lot of native features. It really depends on what you are trying to do. Uber also can pay multiple teams to make multiple products. I don’t OP can. 
I can't write all of this, but you can have a variable in each view controller and set it from the previous. Something like this: let controller = View2Controller() controller.someVariable = self.SomeLocalVariable self.navigationController?.pushViewController(controller, animated: true) Hope that gives you a start. 
Thank you! Exactly what I wanted to hear.
It does. I've been working off this...Not sure which option to focus on [Var pass tutorial](https://learnappmaking.com/pass-data-between-view-controllers-swift-how-to/) * Passing Data Between View Controllers With Properties (A → B) * Passing Data Between View Controllers using Segues (A → B) * Passing Data Back With Properties And Functions (A ← B) * Passing Data Back With Delegation * Passing Data Back With A Closure * Passing Data Between View Controllers With NotificationCenter
It’s also worth noting that a stable ABI is a stronger guarantee than even C++.
I just showed one method, there are clearly many ways to do it. I think it really depends on the data. If it's just a simple variable then option one, which I used, is fine. 
I'm using the same laptop, but with 16 gigs, and I've had no issues with performance. 
I’m passing a couple ints, a few Boolean values, and a couple doubles(doubles only coming from view 3). 
What you proposed for displaying the number of days looks OK to me. Look at the Calendar class to calculate the number of elapsed days.
You can upgrade to 16 GB of RAM in the 2011 pretty easily though. You should definitely do that and it will be much smoother. 
Sure... but that doesn't help me run Mojave, so it makes more sense to me to save the money and put it up for a newer model I can use for the long term when Xcode drops support for High Sierra. I guess it's all a question of money, but that just seems more efficient to me.
Since it seems all these views belong together, and the data is associated, you should create a view model that holds the state of this data. Then you don’t have to worry about passing back and forth or in between, when the data changes, just change it in your model. Setup some didSet observers, or use a mutating func, your choice, but then you can have delegate functions get called when the data changes and update other parts of your UI if need be. 
In my opinion, you need to create a struct including all the properties, then using delegate and segue to pass value between VC
I have a 17" 2010 alongside a 15" 2015. Both are fine. The 2010 is my main and I use it for both Android and iOS.
When you get this up and running let me know! I could really use it with my headphones.
The 2011s were notorious for having assembly issues that were only solved with a reflow, and only then temporarily. I loved that they were still upgradable in ram (16gb was a lot then!) and ssd, but I have been through 3 mainbords AFTER the AppleCare wore out. Performance wise you’re fine, but that year was a bit of a dice roll for longevity. (If you do decide to get it, I’ll give you a great deal on 16gb of ram)
&gt; There are a few successful Mac apps - PCalc and BBEdit, for example, but the ecosystem just isn't large enough to sustain as many developers as iOS. That's an understatement. What about all the Adobe apps, Sketch, Transmit, MAMP? Those are just the ones I use off the top of my head. Yes, the market is nowhere near Windows, but to say "There are a few successful Mac apps" is really underselling it.
Or you can use something like this to pass from child view to parten view [unwind segue ](https://stackoverflow.com/questions/35313747/passing-data-with-unwind-segue) 
Hacking with macOS is great, I highly recommend it. You can have a look at a sample chapter on the website. 
The problem is IB sucks. 
Why would this be true. Frankly I do not see a lot of overlap in what is desirable on iOS vs the Mac platform. By the way you reallycantjurgr the state of software for the Mac based upon the state of the Mac App Store. Many Mac apps are not sold there. 
100%. Ram upgrade to 16 will be 60-100 bucks I highly recommend it. It's a solid laptop to this day. &amp;#x200B; Keep it free from dust or pollen. The GPU will be fragile and the replacement program is over. 
For a beginner it will be fine if the SSD is large enough. 
Yeah I do have a lot of them as well. Totally agree with you. Now do you have an intro to command line apps tutorial? I might wanna look into it later. 
You need a way to get the text from the text fields, which you can do with UITextFieldDelegate. You also need to be able to identify each text field. If the table view only has a single section then you can set the tag of each one to be the row, but if there are more then you’d be better to subclass UITextField and add an indexPath property. Once you know these two things you can save them however you like. I would make a separate class that conformed to UITextFieldDelegate to handle this so that the table view controller didn’t get too big, and then assign it as the text field’s delegate and update the tag each time a cell is dequeued. 
Awesome. I think from there I was going to save the UITableView info as a CSV onto my server and then have a 2nd UITableView that scrolls each CSV file I’ve made so I can view saved changes cause once the info is saved prior, a new one can be done again and then saved as another file and so on. 
So does anything you haven't learned how to use.
You should consider saving it as JSON or a property list instead of CSV because they are supported out of the box with the Codable protocols. This means you probably wouldn’t have a write a single line of code yourself to handle the (de)serialisation of your models. 
Have a look at passing onto a new vc through the prepareforsegue methods. If you want to pass back then you can do on an unwind and trigger that method in the initial vc. Big mountain studio cover the most common ways of passing data back and forth and his tutorials are super simple. These may not be ideal though. If you’re simply doing minor view changes. Such as changing buttons and updating labels etc which is what it looks like. I’d seriously consider learning how to create these elements in code and then just run one vc updating the views with their own dedicated controllers. This is imo way easier to manage longer term 
Only 10.3 will drop support for high sierra 
Yes of course there is initial init: `let seed:Int = Int(arc4random_uniform(UInt32(Int32.max)))` `srand48(seed)` I use drand48() because I found out it is the fastest way to get random number between 0-1.
Emm I am not sure we understand each other? For each RGBA I have one **GenericCGFloatRotator** instance and each **GenericCGFloatRotator** is initialized with **random** sub-settings. On each .rotate() this happens: For **each** RGBA component "scroll" between initial **random** min-max values with **randomly** calculated factor. This way you get really **unpredictable** colors-combinations, which is exactly what I need it. &amp;#x200B;
I own it, actually.
You’d have to ask them. But probably the answer is that they don’t care, as there is nothing for them to gain with it.
Of course they care, they just have other priorities. Swift is available for Linux and has been since Swift was made open source. The Swift team is currently focused on ABI and module stability, the former of which is coming in Swift 5. These are precursors to further efforts, so they have top priority.
Swift *is* available for Linux and has been since the very first day that Swift was made open source. The official package on the website is for Ubuntu, but the source compiles on any Linux; Fedora now has an official Swift package. Apple likely hasn't focused on porting Swift to all available platforms because (A) the macOS version, where the bulk of development happens, is bridged with the Objective-C runtime which is unavailable on other platforms. (B) Other platforms therefore depend on the pure Swift version of Foundation which isn't finished yet. (C) Also, Swift doesn't have ABI or module stability yet, the achievement of which will allow for Swift to evolve without breaking existing software and mean that apps won't need to ship a Swift library; this is seen as something that holds back a lot of further efforts, including porting. Swift 5 is slated to bring ABI stability but not module stability, so there's still some work to go yet. &gt; would like to hear from someone from Apple The Swift project is a community effort. Of course, Apple does the most work, but they're not the only ones. If you really want to know what's happening with Swift, the Swift website, particularly the forums and its Github repo, has all the details you want. First place you'll want to look is swift-evolution: https://github.com/apple/swift-evolution
If your framework provides views the best you can do is set the preferred orientation on a view by view basis. 
Yes it does provide. Which method should I override? :) 
Here check this SO answer. Basically you want to override two methods. One is `shouldAutorotate` and the other is `supportedInterfaceOrientations` https://stackoverflow.com/a/28220616
I would also say that macOS APIs are really old for compared to iOS. iOS APIs seems to work in perfect harmony with swift where macOS APIs seems to get stuck with obj-c and you have to deal with pointee objects that makes it not coherent at all. This doesn’t encourage iOS developers to come to macOS. I love the idea of Marzipan. But the actual result is pretty bad like you’ve got a weird iOS UI in the macOS Home app.
If you think it's hard to find macOS app tutorials, it's twice as hard to find good command line ones, but for an intro, I got started [here](https://www.raywenderlich.com/511-command-line-programs-on-macos-tutorial) and then did some digging on GitHub as needed. I've been loving [this for command parsing](https://github.com/jatoben/CommandLine) and [this for formatting output](https://github.com/onevcat/Rainbow) but if you stumble over any other gems please pass them along 🙂 
Fair enough. 
Would it be possible to make a "speed"-slider to make it less flashy/distracting? Great work!
cross platform is better if you're learning tbh,you don't have an infinite amount of time
While it's not possible to make it slower (due to the video frames per second (fps), I'm slowly implementing (not having much time) a preferences menu where you can select which animation you want to see. They will all be perfect loops so it should look smoother.
That's exactly why I write macOS apps - to do things I need myself. I've never sold one nor put one on the app store. 
Hmm, I searched your project and somehow missed the use of `srand48`. That's good you're initializing it properly. `drand48` is a fast way to generate a pseudorandom number but it's not a very good one. That's why you're seeing patterns, because the method it uses doesn't mix up the bits very well and many times the pattern is very apparent.
The point is they aren't unpredictable at all. In fact, they are very easily predictable. That's why you get interesting patterns like you're getting, instead of being at all random or even decently pseudorandom they are following a very simple pattern. When you tile this pattern over a space you get the type of "rotation" you're talking about. If it was truly random you wouldn't get any patterns at all, just a melange of different colors. What you have here is a sequence generator, not a random generator.
Assuming you‘re using storyboards, doing MVC and transitioning between the controllers using segues, you could implement the prepareForSegue method to inject a model which holds all the values you need to be tranferred into the destination view controller. https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue?language=objc https://developer.apple.com/documentation/uikit/uistoryboardsegue?language=objc
You can use a monospaced font. You can also use 4 different text views and jump from one to the other after input. Then just add the line as a UIView underneath the text.
Windows and android are inferior
Why are you trying to obfuscate your strings and who are you trying to obfuscate them against? Generally speaking, the kind of people who are going to be dumping the strings from your program are also the kind of people willing and able to spend time deobfuscating them.
Yep, this is honestly the way to do these types of things. In fact I have to build something almost exactly like it today, and this is the approach I will take. 
I'm glad you're enjoying my books! :)
The two biggest Mac suites, Adobe Creative Cloud and Microsoft Office, are written mostly in C++, though, and are cross-platform. They’re Mac apps but they’re not *really* normal native Mac apps. The Mac game market is pretty small and many games are written in cross-platform Unity rather than using native APIs too. I’m curious if Apple has ever provided a breakdown of iOS vs Mac AppStore revenue. I realize that many popular Mac apps are available via outside channels, but it’d still be an interesting comparison. 
The variables from view2 and view3 will be used in a function in view1. Should my function for button 1 be stored in a different class separate from vCs? 
Wow good ;D 
Go download the app “Code Swift” and do the delegate section. It walks you through step by step of how delegates works and explains it very clearly. 
I loved Swift and I’d love to program for it in all platforms. I think it’s like C++ done right, but others might disagree.
LSP support is changing that I thought? &amp;#x200B; it is happening and your title is misleading people.
If it were me, I would choose delegation to pass data back to the parent view controller because I find that usually leads to cleaner code. 
I’m not worried in current moment about who will deobfuscate my code. Just looking for obfuscating methods cause want to deobfuscate the concepts behind the obfuscation and understand how it works, not only about strings, but in a general context. I found the site of “The international Obfuscated C Code Context” www.ioccc.org, and I think it’s a good reference, but is too much explorative over C techniques of obfuscation. My intent is to find something more swift applied.
Delegates are the “who is going to receive responses from something” then that something will notify things happening (by calling methods on the delegate), that’s why the class has to conform to the delegate (so it has the appropriate methods to call).
For sure! I've tried a lot of different tutorials and things, but your books are the ones that have stuck the most for me. Plus you sprinkle plenty of fun nerdy references throughout that always make me chuckle 😂 Keep up the great work!
Just make sure you handle the backspace key, and what happens if the user clicks on one of the middle numbers and starts typing or backspacing. Although the multiple-UIView approach can work well, I personally think it's easier, with fewer edge cases, to use a monospace font with the underlines in a background view.
Delegate is a way to pass data between two objects. An object can instruct its delegate (another object) to perform a certain function with parameters. Usually the delegate will conform to a certain a protocol (meaning it implements certain functions, so you can be confident that the function is implemented before calling it). I have written a post explaning what is Delegate using TableViewDelegate as example here : https://fluffy.es/eli-5-delegate/ , hope this helps! 
Delegates have nothing to do with Swift, it is Cocoa legacy (and aan OOP pattern).
Are you trolling or for real with the website?
Soooo meta, who is doing this rating? [Top men](https://www.youtube.com/watch?v=Fdjf4lMmiiI)? Yet another amazing bit of non-content from Medium.
Hey, a little late, but do you mind sharing a link to the free ones with exercises? I tend to learn better by trying out the syntax myself
I’m just eating tea then I’ll dig it out for you
Why would they want to? What does Swift being bigger on those platforms get them? Not much. iOS is still a big enough draw that people who want to make apps are still going to learn it regardless. 
Thank you!
[One.](https://itunes.apple.com/gb/book/intro-to-app-development-with-swift/id1118575552?mt=11) [Two.](https://itunes.apple.com/gb/book/app-development-with-swift/id1219117996?mt=11) 
Delegates are reference types. They basically define ensure a confirmation to a protocol. e.g. You define a protocol: protocol TableViewCellButtonTapDelegate { func tableViewCellButtonDidTouchUpInside(for indexPath: IndexPath) } Now any class which confirms to this delegate must define the function under the protocol. In Layman language: If I define a protocol Shinigami which has a property Zanpakuto. Then anyone who confirms to the Shinigami Protcol must delegate a Zanpakuto!
LSP doesn't address this at all. It merely allows for a standard protocol by which text editors can leverage the compiler's understanding of the source code in order to offer refactoring, auto completion, code highlighting, and other such features. The compiler still has to exist on that platform, which is not the case for Windows.
The easiest way I've found to think about them is to think about what it means to delegate in real life. Pretend that you're Batman and you say to Alfred "I want a hamburger". Alfred goes off and returns some time later with a hamburger. You just delegated the task of getting a hamburger to Alfred. You don't need to know how to make a hamburger, whether Alfred made the hamburger or went and bought it from McDonalds, or even what's in the hamburger. Then when your done eating it you can tell Alfred "I'm going out". This is delegating another task to Alfred but it's one where you don't care what he does, you're just letting him know in case he wants to do something. He may get the first aid kit ready for when you come back injured or put on some classical music and read a book. It works the same in UIKit. UITableView is usually the first place where people encounter it. The table view says to the delegate "I want a cell at this index", then your code (the delgate) goes off and returns a cell. The table doesn't need to know whether you created a new cell, dequeued an existing one, or even what is in the cell. Then later the tableview can say to the delegate "This cell was selected". The table doest care what you do, but it lets the delegate know incase it wants to do something about it. This allows the UITableView to not be strongly tied to data or cells it is displaying. You build the delegate to work however you want and as longs as you give the table what it needs, it works. You can swap out the delegate for a different one and it can change a lot of the behaviour without having to modify how UITableView works.
Bro, that’s literally best explanation I’ve ever heard
Swift uses ARC unless you're using unsafe pointers which leads to ugly code compared to other alternatives like C in Objective-C, D or Rust.
That’s why I said it’s C++ done right. Every reference to a class object is a shared_ptr by default. In C++ you have to wrap everything in smart pointers, or then do the memory handling automatically. And I guess Swift embraces the RAII concept too.
hey, i'm interested in code swift, but how do i find it? google search returns random swift related stuff but no app and it is not in the app store
No for certain application you need better performance than idiomatic Swift. It starts to look ugly if you go the unsafe route, but true, you can do it as opposed to languages like Java.
It’s only on iPhone atm I believe 
It’s only on iPhone atm I believe
Mmm, well, just typealiasing the two isn't actually the best way to go about it. I've shipped an app or two that uses 90% of the same code across platforms, and you end up having to kind of build your own stuff that handles the edge cases.
so you believe it's apples job to build a swift compiler for windows even the its an open source language? lol no. 
Do you call timer.fire() ? 
They've already started adding move semantics into the compiler, but I expect it won't be ready for use outside of the standard library until Swift 6 (or if we're lucky 5.1), which will greatly help with this.
Delegates get told about events. View about to show a new cell? Tell the delegate. Table row double-clicked? Tell the delegate. Window about to close? Tell the delegate. You usually use them when you need to tie all-specific logic into these behaviours. They are usually a lighter-weight and more composable alternative to subclassing. Most more modern APIs use closures to handle events instead of delegates. 
Oh, I know (one edge case being table views). In fact, the Fox example does show you some specialized code, just that typealiasing is also something they do.
Did I say any of that?
No, but where would you write that
How about this? extension Array { // This would be kind of nice to have in the standard lib, but whatever. public init(count: Int, generate: () throws -&gt; Element) rethrows { self = Array() reserveCapacity(count) for i in 0..&lt;count { self[i] = generate() } } } // This can generate elements with the value 101, you probably wanted // `Int.random(in: 1..&lt;100)` instead. var numberArray = Array(count: 1000) { Int.random(in: 1...101) } 
Ok got it. Do I have to make a separate function to calculate the number of elapsed days? Or can I just do it from addButtonPressed (creation of item function)?
oh. well that's convenient. i'll check it out later then. thanks.
Local notifications will always show up after the app was force closed. Apps are most of the time closed tbh cause of memory management
For this exercise, I think once the emoji has come up, you should fire the timer. 
Interesting. Seems like imma be doing some testing and failing before I get it perfect but will comment if I hit a huge wall. 
Currently, if I just exit out without fully closing it, the app state is preserved for when I open it again. However, if I force close it, then the current state is destroyed. My local notifications only make sense for when the app state is preserved so I was trying to find a way to cancel them if the app gets fully close. But, it's not looking like there is a way.
Yeah you gotta cancel all the notifications before your app terminates. Its in the app delegate
what other implication is there? OP is complaining that Apple isn't doing other companies work for them. &amp;#x200B; like I said, it's open source. BYOCompiler. that's how it goes. What OP is suggesting is for apple to spend resources bringing new functionality to Microsoft Visual Studio (and visual studio pro, and visual studio enterprise, visual studio getfucked Edition, visual studio ME, visual Studio Lite 2008 LS Surface, and on and on). &amp;#x200B; The question: Why doesn't Apple pursue making things for products it doesn't make or sell? &amp;#x200B; The Answer: Apple Inc. is not the consortium of Swift Priests who hand out access to the language. It's freeforall. OP fundamentally misunderstands what Swift is.
Using applicationWillTerminate? This is only getting called if I force close when the app is open. If I force close with the app in the background, nothing is getting called.
Yup! Figured, moreso commenting for anyone who finds themselves here via a Google search or something. The most annoying thing for me was actually anything with layer backing; views aren't layer backed by default on macOS, so layer is an optional property, unlike on iOS. You can work around it, but it's just annoying.
I see. I did some research and it seems like the app has not even time to call willTerminate before getting killed by memory management. It got a bit more challenging. I would send a silent push notification and then check whether its appropriate to show a notification or not (checking whether app was already open or it just woke up in the background) Otherwise you would have to do stuff like background mode which opens your app in the background every 15 to 30 min or so depending on batt
Bring Swift to windows doesn't implying doing anything with Visual Studio, at all. It's merely fixing the bugs/incompabilities in the (generally cross platform) code. They brought Swift to Ubuntu, which is an expression of some desire for Swift to not be a niche proprietary language for Apple's walled garden. Given that, it's natural to assume that theyll want to spread beyond Ubuntu *in any case*, LSP has absolutely 0 to do with whether or not Swift will be supported on other platforms, e.g. Windows
Set `startDate` to the item's `dateCreated` attribute. Using your code example, it would look something like the following: let startDate = itemArray[indexPath.row].dateCreated As to whether the rest of your code looks good, does the table display the number of days that passed since the creation date? If it does, the code is good. I do not a lot of work with iOS table views so I cannot give you more detailed advice.
It looks good but I get "Cannot convert value of type 'Date?' to expected argument type 'String'" on the line: `let formatedStartDate = dateFormatter.date(from: startDate)` I tried casting everything as String with no avail lol. Thank you so much for your help by the way, it's really helping me.
I was able to figure out how to pass from view1 to view3. It is lat long data. How can I get the lat long data from view 1 in real time on view 3
The date formatter's `date` method takes a string as an argument. The `startDate` variable is an optional `Date` value. You have to pass a string to `date`. Since you already have the date, look at the `DateFormatter` class's `string` method, which takes a date and returns a string.
You can always count on Batman!
What about for creating excel reports?
Complete newb here, learning by creating something I want to see. I have a use case for arrays that I can't seem to find much mention of on the web. Wondering what people's opinions are of the idea and what suggestions anyone can offer. I am creating a DMX controller app (lighting control protocol for the film industry...think Luminair but composable and user customizable) and I am considering using two identical arrays (one of 512 8 bit unsigned integers and the other containing only booleans). I figure I can use a boolean array to non-destructively select particular channels. I mean, instead of booleans, I could do all kinds of stuff but the simple concept of selection is the first aspect that I want to tackle before I get into groups/submasters of channels, etc. My question is, can someone point me to a good book to learn about the different design patterns/structures that are available for this kind of thing? Do I put both arrays into a struct, class, or protocol? I had been considering doing it using some kind of struct containing the selection array and the boolean one but it makes using the map function to change the array a little over my head at the moment. I should mention that I am a huge fan of Haskell and functional concepts in general, so the more FP in nature your suggestion, the better. Thanks!
You mean this? `let startDate2 = dateFormatter.string(from: startDate!)` Using that gives me the error "Cannot assign value of type 'DateComponents' to type 'String?'" in the line: `cell.detailTextLabel?.text = differenceOfDate`
A label's text is a string. You will have to convert `differenceOfDate` to a string to be able to show the number of elapsed days in the label. That is the tricky part of doing calculations and working with labels. You cannot do math calculations, like subtraction, on strings. But labels display strings. You have to perform the calculation and convert the result to a string to show it in a label.
Maybe it’s over kill but whenever image manipulation comes up I bring up GPUImage. Have you checked out that library? It uses the GPU to do the heavy lifting and has a ton of filters. 
Okay, got it working doing this lol `cell.detailTextLabel?.text = "\(differenceOfDate)"` But know when I create an Item, the app crashes and I'm seeing that startDate2 is a nil but startDate is a Date. Why is it being nil? Is `let startDate2 = dateFormatter.string(from: startDate!)` not good?
So, I’m coming at this from another angle. As much as I love FP, the reality is balancing parallel arrays and constructing intermediate storage for every transform can really kill your performance and can lead to code being more clever than it needs to be. `map` is a wonderful abstraction, and I love it dearly. That said, I oppose using map and other FP operations as my main state management mechanism. Mutation, in isolation, is your friend! As a result I’d probably model this more as each channel being a value type, and allowing your clients to control their mutability: public struct Channel { public var level: UInt8 = 0 public var isEnabled: Bool = false public init() {} } You could wrap this state in a reference type that contains the canonical set of channels: public final class LightController { var channels = [Channel](repeating: Channel(), count: 512) public func setLevel(_ level: UInt8, forChannel index: Int) { channels[index].level = level } public func enableChannel(_ index: UInt8) { channels[index].isEnabled = true } public func disableChannel(_ index: UInt8) { channels[index].isEnabled = false } } Hope this helps!
I want to get the value of the switch in my settings.swift class. The static table is embed via a container. Any advice? Tutorials?
If `startDate` is nil, the `let` statement for `startDate2` is going to cause a crash. You need to read up on Swift optionals and force unwrapping. You also would benefit from working on a simpler project. You seem like a beginner in iOS development. Core Data, dates, calendars, and date formatters are not beginner topics.
You need to create a property in your controller, mark it with @IBOutlet and then hook up the outlet to the switch in your storyboard or xib. It's hard to describe exactly what to do in text but hopefully that gets you going in the right direction. 
Ah yes, I was tripped up by that too. Not as annoying as the context leak I haven't yet figured out a workaround for, though (importing and cropping a ton of images).
I was able to figure out a way to make the switch work. Im not working on a segment control. I can make an ACTION connection...Cant figure out how to make an IBOutlet reference for the segment control to work. 
Thanks!
timer.fire() is for triggering the timer's action immediately. If in doubt, read the docs. Programming 101. How do you know the timer is not triggering? Are you sure oneGameRound() is being called somewhere? If so, are you sure the value of self.state == .playing at time the timer is triggered? You can verify this by setting a breakpoint inside the timer callback block. 
Hmm what’s the ultimate goal. Like, are you asking the user for gps info somewhere then rendering? If you share the story you’re trying to tell maybe I can help. I don’t know what you mean by ‘real time’, do you mean on view didappear?
Control drag from the element in your storyboard to the code. It'll give you the option of outlet and action 
Create a segmented control IBOutlet in the Table View Controller, Then in the Settings.swift (View Controller), you can access the embedded table view and its outlet like this : // .children is a list of container view controller of the parent view controller // since you only have one container view (the table view controller), // safe to grab the first one ([0]), and cast it to table VC class tableViewController = self.children[0] as? ProfileTableViewController let selectedIndex = tableViewController.segmentedControl.selectedSegmentIndex 
How is XCode 10.1 treating those who have upgraded? I am still on 9.4.1 as I am in the middle of a mission-critical app dev cycle - but am looking to upgrade soon.
Nobody gives a damn about Windows. And it's Microsoft's job to port Swift to their OS. They already port a lot of things, and now they are porting Chromium too.
This is perfect! 
Yes inside my projects I always `srand48` in AppDelegate :).
Ok ok I understand you now :). That's why it's called ColorRotator , not FullyRandomColors ;). What I meant about predictability was ---&gt; that each new ColorRotator colors-sequence are very different and very different patterns can emerge when drawing matrix-cells layout, and this is exactly what I need it.
I would prefer native library
I was also searching for this yesterday. [This SO post](https://stackoverflow.com/questions/35008731/send-local-notifications-while-app-is-running-in-the-background-swift-2-0) helped me. Also see [this post to deal with it in Swift 4](https://stackoverflow.com/questions/39742683/uiusernotificationsettings-deprecated-in-ios-10)
Someone wrote some decent information on integrating Python on macOS: https://github.com/ndevenish/Site-ndevenish/blob/master/_posts/2017-04-11-using-python-with-swift-3.markdown It all looks terribly fragile to me. How big is the framework? Is it worth it to port it to Swift?
To be honest, I think so. It's the PlexAPI (unofficial) and a swift port would likely be valuable to many other devs. I think I'll get on it
Just checked out the Python code. It's not crazy code but there's a *lot* of it. Porting will take quite some time. 
I am trying to build an app which let user to switch language on the app directly. I was looking for Localization which we need to change language in setting of the phone first. I have seen many app which let user to switch language through their app directly. How can i achieve something like this?
How big are both images? \~2,5s sounds waaay too much. It should be much much faster. &amp;#x200B;
No need to use GPUImage for this.
[Delegation is a design pattern used extensively in Cocoa and Cocoa Touch.](https://developer.apple.com/library/archive/documentation/General/Conceptual/CocoaEncyclopedia/DelegatesandDataSources/DelegatesandDataSources.html) The description I linked describes the pattern using Objective-C, but the concepts are the same if you're working in Swift.
Thanks, I’ll try
In Swift 4.2 you can call Python from Swift with a small interop file: [https://www.agnosticdev.com/blog-entry/swift-python/swift-and-python-interop-using-dynamic-member-lookup](https://www.agnosticdev.com/blog-entry/swift-python/swift-and-python-interop-using-dynamic-member-lookup) Never tried it myself but it's probably the way to go.
I used simulator to measure times. Images that I process are \~4000x3000px. I will check on the real device later.
If you want to see how to build macOS apps totally programmatically: my app Flowlist is still open source: [https://github.com/flowtoolz/Flowlist](https://github.com/flowtoolz/Flowlist) Btw this is its main.swift file: # let appController = FlowlistController() I use a lot of code from this: [https://github.com/flowtoolz/UIToolz/tree/master/Code/appkit](https://github.com/flowtoolz/UIToolz/tree/master/Code/appkit) Also this repo helped me a lot to learn: [https://github.com/eonil/CocoaProgrammaticHowtoCollection](https://github.com/eonil/CocoaProgrammaticHowtoCollection)
Aaa ok. * Speed should be better on a real device * Do you really need such huge images ?
Thank you for these resources! I'm familiar with `CocoaProgrammaticHowtoCollection`, having referred to it to make NSTableViews. Incidentally, I get a "This connection is not private" warning when visiting [https://www.flowtoolz.com/flowlist/](https://www.flowtoolz.com/flowlist/). Maybe your certificate has expired or something.
Hmm, are you comfortable with the concept of Auto Layout constraint / understand how they work currently?
Relying on Marzipan means cutting out a huge amount of the market, who will often be running one or more OS versions behind the latest.
Yes I am quite comfortable
Do you mind elaborate more on the “complex UI” part? Do you mean facing error like conflicting constraint (red lines) etc? Or no idea on how to start making the layout? I have written a series on how to use Autolayout using Storyboard here : https://fluffy.es/making-sense-of-auto-layout/ , hope this helps!
You can store colors in Assets nowadays. You can refer to them by using the `UIColor(name:)` constructor, or even better use the R.Swift Cocoapod to turn them into compiled resources.
You can use something swiftgen to turn the colours in your assets into an internal enum, but you can’t call these from inside interface builder.
I’m doing the Angela Yu course on Udemy and I got to the AR part
Exactly, that's because you're seeding it with `arc4random`. If you made everything into a `Sequence` which was initialized with a seed you could even save your patterns and recall them predictably. You could even modify how they were generated by changing the parameters `a`, `c`, and `m`.
Named colors work for interface builder too. But you can't change the name of the color or it gets lost
but if I build framework how can app override easily that color?
but if I build framework how can app override easily that color?
Really depends on what you are doing. I often use a "Core" framework that allows me to set a block of parameters in AppDelegate including colors, texts, images and all other stuff that might change because of the implementation. So to use the framework the user needs to provide these colors. The other thing you can do is pass in the bundle of the hosting app and just expect the colors to be there when the framework needs it, but that's very brittle. ``` struct Colors { let header: UIColor // etcetera } struct Configuration { let colors: Colors // etcetera } ```
Honestly, and I know this doesn't help, but most complex UI is done using programmatic layouts. From what I've seen, it seems like it's a trend to move away from storyboards and do it all in code. Checkout something like Snapkit to see what I mean. https://github.com/SnapKit/SnapKit
Also, this is a very general question. The only way you're going to be able to learn how to handle these scenarios, is to see help with each specific case. At the more complex levels, there's a lot of ways to solve the same problem, and no tutorials or materials exist to cover these scenarios. That's why it's better to ask a question specifically about the UI you're trying to build. 
yep, I use images from a device and don't want to decrease a quality
Typically you wouldn’t want to create storyboard files or view controllers at a framework level. If you want to create reusable views, look into subclassing the views and using IBDesignable: https://nshipster.com/ibinspectable-ibdesignable/
You can use extensions. Like extension UIColor { nonobjc var yourColor: { ... color initialization } } Sorry I have no idea how to use code formatting in Reddit app
That thing works only in iOS &gt;= 11 if I remember it right
And how can an app which installs my framework set it's custom colors?
You just create a swift file where you declare your variables using extensions. 
I need to...it is more like an sdk, similar to this: [https://github.com/onfido/onfido-ios-sdk](https://github.com/onfido/onfido-ios-sdk) but with more different features and better customization
and share that file together with an sdk if they need to override colors? Will that work? :) thanks for quick responses
I am not actually sure about those moments, especially overriding the colors extensions. Like, those are extensions, not sure if you can override them. I think it’s better to look at others answers in this case. Use something like a class where you declare your colors and someone inheritance from your class and override it, I think that’s a good approach. 
Ah. In that case, just make an initializer for your view controllers taking in the parameters you need. Similar to UIAlertViewController. Let the user pass in the data 
It's easy in Swift also. Are we talking about the color constants in `UIColor` such as `UIColor.black` or are we talking about custom ones?
/r/Woooosh 
Just remove the map ^^
For instance how should I override my colors in assets file if user provides particular colors?
custom ones :)
thanks, really clear solution :) One more question, how should I change colors of vector image for instance? I use it as **pdf template and I can only call setTintColor**, but that makes image single colored. How can I apply more than one color? :)
True. But &gt;90% of users run iOS 11 or newer
The tutorials are probably using an older version of Swift that didn’t have that requirement yet. 
Using #selector(myFunction) is an old calling convention from Objective-C that still lingers in many Swift functions. Prior to Swift 4, the compiler would just automatically add the @objc inference to each function definition which basically added extra code to map between Swift and Objective-C calling conventions. Adding this extra mapping code would increase the size of the binary and was wasteful if not all of your functions needed to be mapped to Objective-C calling conventions. Since Swift 4, the compiler no longer infers Objective-C compatibility and thus @objc needs to be explicitly added to any function that needs to interact with Objective-C function calls such as #selector(myFunction). So to answer your question, some of the tutorial videos may still be using Swift 3, which would not explicitly require adding @objc to functions. I hope that helps. 
A very generic answer can be found here: https://stackoverflow.com/questions/48566443/implementing-codable-for-uicolor Since `UIColor` conforms to `NSCoding` you can convert to and from a coded representation. You can read a file that contains those coded representations and get `UIColor` objects from it. However, those representations are likely to be a bit complex. If you just want to store the red, green, blue, and alpha channels of a color then create a wrapper struct and make it codable: import PlaygroundSupport import UIKit struct CodableColor: Codable { let red: CGFloat let green: CGFloat let blue: CGFloat let alpha: CGFloat } extension UIColor { convenience init(_ color: CodableColor) { self.init(red: color.red, green: color.green, blue: color.blue, alpha: color.alpha) } } let file = playgroundSharedDataDirectory.appendingPathComponent("test.json") if let contents = try? String(contentsOf: file), let data = contents.data(using: .utf8), let color = try? JSONDecoder().decode(CodableColor.self, from: data) { print(UIColor(color)) // "UIExtendedSRGBColorSpace 0.1 0.3 0.2 0.4" } My file had this JSON: { "red": 0.1, "blue": 0.2, "green": 0.3, "alpha": 0.4, }
Definitely helps, thanks for the explanation. I’m curious if it’s standard practice to always use #selector when adding a function as an action, or if there’s another way?
Ok yeah this is the most likely explanation. I think the tutorials I’ve been following are Swift 3/Xcode 8 or 9, and I’m using Swift 4 and Xcode 10
In class uploader Func recursive In block Images[counter].Upload {....} does not execute why this problem ?? 
Whats the alternative to #selector?
The other way would be to pass a `block` as a parameter when creating the action. Using `#selector` is still a major part of Cocoa, so I don't expect it will be going away completely any time soon, but newer APIs seem to prefer blocks.
thanks a lot!
If you’re using Apple’s frameworks that require a #selector then I believe there isn’t an alternative. However, building your own functions you could use completion handlers to call any methods. 
Why don't you save the context and rebuild the state when the notification is received Have a read of this document [https://developer.apple.com/documentation/uikit/view\_controllers/preserving\_your\_app\_s\_ui\_across\_launches/about\_the\_ui\_restoration\_process](https://developer.apple.com/documentation/uikit/view_controllers/preserving_your_app_s_ui_across_launches/about_the_ui_restoration_process)
I don't think you can unless you programmatically transform them. If you want multi-colored ones you will have to make a new one for every color scheme.
A delegate, a block, or heavens forbid, posting a Notification.
And when you connect a button action?
Nope, nothing you can do about those.
Oh sad :( 
SEO. Mostly Snapchat users who are advertising their accounts.
Thanks for the reminder, so much to do! :)
I tried to not use it for a tap gesture. But I did when I understood that it's from Objective-C.
&gt; tableViewController = self.children[0] as? ProfileTableViewController &gt; let selectedIndex = tableViewController.segmentedControl.selectedSegmentIndex My parent class for the tableviewcontroller is settingsSubclass.swift import UIKit class settingsSubclass: UITableViewController { @IBOutlet weak var segment1: UISegmentedControl! @IBAction func SegRating(_ sender: UISegmentedControl) { if(segment1.selectedSegmentIndex == 0) { print("1") } else if (segment1.selectedSegmentIndex == 1) { print("2") } else { print("3") } } override func viewDidLoad() { super.viewDidLoad() } Get two errors in settings.swift: Expected declaration and Instance member 'segment1' cannot be used on type 'settingsSubclass' 
What's the problem with posting notifications?
Take a look at the following APIs, I think they may help you out with coloring image assets programmatically. https://developer.apple.com/documentation/uikit/uiimageview/1621059-tintcolor https://developer.apple.com/documentation/uikit/uiimage/1624153-withrenderingmode https://developer.apple.com/documentation/uikit/uiimage/renderingmode - Specifically .alwaysTemplate
Hey man, we call them closures over here in Swift-land
Unless you need to draw shapes and text, you probably want to use CoreImage. UIGraphicsImageRenderer is based on CoreGraphics, which uses the CPU. CoreImage use the GPU.
So the set up is that I have a view controller called settings. Within that vc, I have a container. I then have a Table View Controller that segues into the container via an "embed segue". (This is set up as a static table). When I run the app, the settings view controller displays with the table set inside the container view. How can I use that segment control in the settings view controller (parent class for settings vc is settings.swift). The table view has the default UITableViewController as a parent class. 
Nah, reddit is fine for me.
I've seen many posts also requesting a Swift Discord server, but you make a valid point!
(children.first as? SettingsVC)?.segment Every controller has a children property which is an array of child view controllers Since there’s only one, you can access the first object and type cast as the class of that child controller and then access its members 
There’s another pattern which uses a technique called trampolining to handle Cocoa’s target/action pattern with closures. Mike Ash wrote about this topic here: https://www.mikeash.com/pyblog/friday-qa-2015-12-25-swifty-targetaction.html
It quickly gets disorganized unless you use the call that accepts a block. 
I don't need shapes and text, only image on image. I will look into CoreImage then.
This seems obvious given your example but just want to be certain: class MyVC is in the Pod’s target and not in your root project? I suspect the problem is that “.xcasset” is a directory and not a regular file, so that your pattern matching is not including anything and so copying nothing. You can check by looking at what if anything is listed in the left panel of the workspace after the `pod install` is done. For resource’d pods I always create a root directory like ./Resources and the pattern becomes something like ./Resources/**/* - requiring that absolutely nothing else goes in there. I don’t know if this was because the expansion/matching worked or because maybe having the paths intermingle with the regular pod paths was a problem... but that plan seems to work flawlessly.
Hey thnx, ya 'MyVC' is in pod, and also after pod install I can see this asset catalog file in Development pods section in mypod/Resources/Media.xcassets in my host app, could you share your pod project structure and where you put your assets?
We’ll see how it goes :)
 in:Bundle(myVC.self) Hard to judge, but is `myVc` located in your pod bundle or your app? Make sure the `Bundle(for:)` points to your pod's bundle and not to that of your app.
That actually seems pretty interesting not much podcast apps out there for mac.
The entire approach of having closures within a class instance of "Card" and have them executed is extremely dangerous. If the app receives the encoded JSON data from any source, any code could be executed this way. Additionally — and probably more importantly on the technical side — **closures are not codable**. If you want to keep your general direction with this example, I'd suggest using something like a provider or dictionary of closures, taking your "Conditions" as examples: typealias ConditionIdentifier = String typealias ConditionValidation = (_ deck: [Card]) -&gt; Bool let conditionClosures: [ConditionIdentifier: ConditionValidation] = [ "handIsEmpty": { (_ deck: [Card]) in // ... }, "healthIsFull": { (_ deck: [Card]) in // ... } ] This way, all your functionality to check "Conditions" is just part of the application logic somewhere and not put into an encoded block of JSON while you can easily reference it by having an entry like you wrote: { "cardName": "My Card", "conditions": ["handIsEmpty"], "effects": [] } You can then just read your "card.conditions" and match them against the dictionary of closures to get your function out, call with with its required parameters and get your result.
 enum Conditions: String, Codable { } &amp;#x200B;
 enum Conditions: String, Codable { case handEmpty case fullHealth } Haven't actually tried to compile that, but it should work You'll probably need a switch to call the functions
Thanks for the reply. I wasn't thinking about having the code inside the json, just an identifier for the code which would then be used to fill an array inside the card object. That way even if someone would manipulate the json files it wouldn't change anything since there would be no matching function inside the code. I didn't think about having rules like conditions and effects as a a dictionary that I could match against, this seems so much easier than what I was trying to do.
First of all, there's no need to have `conditions` as `Optional`. An empty `Array` is semantically the same. Second, try to follow Swift conventions. Case members are initial lower case. You also can't declare them as functions like `case HandEmpty()`, they have to be `case handEmpty`. If you declare your enum as `enum Conditions: String, Codable` then it will automatically gain both `Codable` and the ability to be represented as a `String`. No need to implement `Codable`, it will be automatically generated for you. Putting it all together: import Foundation func performHandEmpty() -&gt; Bool { return true } // stub method func performFullHealth() -&gt; Bool { return true } // stub method enum Conditions: String, Codable { case handEmpty, fullHealth func perform() -&gt; Bool { switch self { case .handEmpty : return performHandEmpty() case .fullHealth: return performFullHealth() } } } struct BasicCard: Codable { let name: String let conditions: Set&lt;Conditions&gt; } let card = BasicCard(name: "Foo", conditions: [.handEmpty, .fullHealth])
Nice, feel free to ask again once you've made some progress. I actually built a trading card game once as a web app, can surely dig up some insights if needed.
The free stuff was plenty for me to get a full time android/iOS mobile engineering position. I have a CS degree which definitely helped me to pick it up faster and was a requirement to getting this particular job. I did the full course from the new Boston on YouTube and then made a few very small projects of my own and was good to go. 
All professional apps use a navigation controller and instantiate the view controller through code and pop and push to the navigation controller. You can create the layout on the storyboard with the entry point of your app being the navigation controller and then give all your VC’s an ID to instantiate through code. Let me know if this isn’t clear but a quick google search of how to use navigation controllers should get you going. 
It will probably take 1-2 days to get everything working correctly in 10.1. For iOS 12+ dev you could just upload your app to test flight and test through there. There were some breaking changes for iOS 12 for my apps so if 1-2 days is acceptable and you can do a full QA test post upgrade then go for it. 
Sure. One thing I noticed, I could use more general condition arguments. For handIsEmpty I can easily check that by passing an array of cards (aka my hand or deck), but if I want to check for health (be it player or enemy) or for status or boons, I'd need to pass the player or enemy object to check that Since the game is going to be a singleplayer game I could probably just pass nil and check the player/enemy object directly, but that feels kinda dirty. Any thoughts on that problem?
The syntactical construct is a block. The runtime object that is created by it is a closure. The term "closure" refers to the function plus the environment in which it will execute (captured variables and so on). "Block" means the curly braces and what's inside them.
`@objc func setLoc(gestureRecognizer: UIGestureRecognizer) { if gestureRecognizer.state == UIGestureRecognizer.State.began { print("held") } else { print("release") } } // Gesture recognizer let uilong = UILongPressGestureRecognizer(target: self, action: #selector(setLoc(gestureRecognizer:))) uilong.minimumPressDuration = 2.0 mapView.addGestureRecognizer(uilong)` &amp;#x200B;
its not an objective-c class. 
It doesn't have to be. Look at this thread from yesterday, it explains why the @objc is required: https://www.reddit.com/r/swift/comments/a41snb/always_having_to_add_objc_to_use_selector/
Using Xcode 9.4. This is the error I get when I go to compile. @objc can only be used with members of classes, @objc protocols, and concrete extensions of classes