I'll give it a shot. Thanks.
sure. class Car { var color: string var weight: int var brand: string = "BMW" var seats: int init (incolor: string, inweight: int) { self.color = incolor self.weight = inweight self.seats = 4 } } let bluecar = Car(incolor: "blue", inweight: 1000) let redcar = Car(incolor: "red", inweight: 1500) print(bluecar.color) //blue print(bluecar.weight) //1000 print(bluecar.seats) //4 print(bluecar.brand) //BMW print(redcar.color) //red print(redcar.weight) //1500 print(redcar.seats) //4 print(redcar.brand) //BMW I used prefix "in" for parameter names, so you can see the difference. the names "color" and "weight" would work as method parameter, too. &amp;#x200B; an init method is used to create an object of a class. inside the init method you need to assign a value to every attribute of the class, that is not optional, because those attributes can not be left empty. in the above example our cars have 4 non-optional attributes. the attributes color, weight and seats are set by the init method. while the values for color and weight are given on method call and are variable the seats will always have the value 4 as long as this init method is used to create the objects. (note: you can make different init methods, so that you can have another value in seats when another method is used.) the attribute brand is set in the class definition and is given to every instance, it does not need to be set in the init method, but it could. it can be changed later on just like the other attributes by doing: bluecar.brand = "Ford" redcar.brand = "VW" &amp;#x200B;
I‚Äôm late to this but I‚Äôve mostly been working on an unannounced app that I am very excited to reveal soon, teaching kids at school how to develop apps in Swift using Xcode, and I accidentally made a cool little word game that I might release s a result of one of the challenges I set them. But as I‚Äôm sick in bed this week, I‚Äôm working on a Xcode Source Editor Extension that I call Magic üßΩ.
Yes, I do totally agree! Sorry about that ;) Of course you can run a backend in whatever language you prefer. I just think PHP is up an running very fast without ‚Äûany‚Äú knowledge because it‚Äòs delivered with most servers/webspaces you can rent.
Fire store out of beta!!! Yahooooo!
Got it. I didn't know the optional chain. Thanks!
Thanks,
You could make a protocol for calling services then on the extension of that protocol do something like this extension Myprotocol where Self: UIViewcontroller. What this will do is give you access to viewcontroller methods such as presenting an alert or navigation of you need it. 
Could you attact an example?
You should definitely let people know that this uses Firebase Database instead of Firestore, Firebase Database is still much better for real time chat than Firestore.
What are you doing with IBOutlets?
 var foo: NSArray = NSArray(arrayLiteral: 5, 6, 7) if let bar = foo as? [Int] { print(bar.reduce(0, +)) } if let bar2 = foo as? [String] { print(bar2) } // Will not print Hot damn that is some terrible code. There is absolutely no way you would ever fail to cast an object to Int when you've just retrieved it from an NSArray that you literally just filled with Ints. What exactly are you accomplishing by introducing more lines of code and more flow control paths when you can *mathematically prove* that the equivalent code that just used `as!` is correct?
The point was to have a self-contained code block that would illustrate the `as?` operator. More often than not, you would be receiving the NSArray from some other source; in those cases, the contents of the `NSArray` wouldn't be so clear. Sorry if that wasn't clear from the example.
I believe it requires a higher plan though.
Outlets are always force unwrapped because it‚Äôs assumed Uve connected them to something correct?
Exactly I just wanted to show that force unwrapping makes sense when you *know* there is something (like an IB-Object)
Man, I have mixed feelings about this. Apple now has an opportunity to use Swift versions as yet another mechanism for planned/early obselence of perfectly good hardware. Entice Devs to target newer Swift versions for the the associated new features, they release apps that aren't compatible with old OS versions, and now users can't use certain apps because their macs don't support the latest macOS version. I'm aware this was always the case with platform SDKs. But there's a difference between adding conditionally compiled code to support Handoff on new OSes, vs outright dropping old OSes. The particular irony is that Swift is a free and open source language that technically can run on any MacOS version with llvm. I really hope backward-compatibility is taken seriously. If a OrderedSet was added to the standard library, it would be a complete "f*** you" to be told "oh sorry, you don't have access to this Swift-only type because we decided not to bundle it as part of the app for platforms with an older stdlib". I hope that doesn't happen.
I agree with the author, although the example is a bit contrived and unfortunately opens the door to posts like /u/Ravek's that, I think, miss the point. I am not sure why the swift authors decided to add the force-unwrap syntax but it fundamentally undermines the purpose of optionals and can be dangerous to do. Unless you know for a fact that there must be a value there and you must crash if there is no value there because something has gone catastrophically wrong, forced-unwrapping is almost certainly the wrong thing to do. In the cases where you know there should be values there, you should probably not be using optionals to begin with because that makes the value not-optional. You have a lot of different paths you can take when handling optional values: `if let`/`guard let`, coalescing (`optional ?? default`), map (`optional.map { func($0) }`), switch (`switch optional { case .some(let val): func(val); default: () }`) There's a useful code snippet I came across a while back: // "ternary unwrapping operator" // https://dev.to/danielinoa_/ternary-unwrapping-in-swift-903 precedencegroup Group { associativity: right } infix operator &lt;??&gt;: Group func &lt;??&gt; &lt;I, O&gt;(_ input: I?, _ handler: (lhs: (I) -&gt; O, rhs: () -&gt; O)) -&gt; O { guard let input = input else { return handler.rhs() } return handler.lhs(input) } infix operator &lt;|&gt;: Group func &lt;|&gt; &lt;I, O&gt;(_ lhs: @escaping (I) -&gt; O, _ rhs: @autoclosure @escaping () -&gt; O) -&gt; ((I) -&gt; O, () -&gt; O) { return (lhs, rhs) } you can use it like this: let unwrapped = optional &lt;??&gt; { $0 } &lt;|&gt; "zesty"
Let's remove it from the language then! Or better yet, let's remove crashing! Let's make all bugs self cauterize; because that's what's really important. Sweep the dirt under the rug, throw the junk in the closet. As long as the program doesn't crash there's nothing to worry about!
Ya i get what the op is saying, and force unwrapping isnt necessarily ‚Äúswifty‚Äù but there is def a time and place for it
No, the way Firebase Firestore lets you structure your data makes it hard to structure the data for a real time chatting app. Firebase Database is still the better option for real time chat, also it's faster than Firestore. Though Firestore does support multiple queries, it lacks a few other features as well (subcollections query etc).
If I never programmed anything, can I learn swift? and what do you recommend, thanks in advance
Well the thing is, there's a *huge* difference between potentially crashing on invalid input to an API you're exposing and 'potentially' (in reality never) crashing on a failing invariant of locally available code.
From OP's reply to my comment, it seems like I *did* miss his point because of the poor example. However it actually matters a lot whether you're using force-unwraps and casts and `try` expressions in places where you could trivially assert the contrary to be false, or whether you're doing this in a place where the contrary *could* indeed be true and therefore your program would crash in a horrible way when it could have handled the problem appropriately.
The project is actually using Firestore, which supports subcollection queries (which I‚Äôm leveraging for the chat threads). Any chance you‚Äôre confusing the two?
Finally!
Not really, as there's no module stability. 
*if you wrap your whole Swift API in an ObjC layer
Which is no fun
import CoreLocation
I mean it can be used but I was confused by this line: &gt;*private let dbRef = Database.database().reference()* That is a reference to a Firebase Database table not Firestore. Also, didn't know Firestore added support for subcollection queries, or are you first getting the collections and then querying it?
Wow this is bad on many levels. It follows incorrect naming practices, it gives VM too many responsibilites, it models HTTP request in wrong way (VM exposes PublishSubject&lt;Error&gt; lol). 
 func createAndLoadInterstitial()-&gt;GADInterstitial { } I use that function not the one you are using?
Ironically, I just asked the same question without reading this post. I don't see anything wrong with say doing this: Label1.text! when you have already filled in the Label with a definite value.
I'm guessing this question is more focused on forced unwrapping, in which case it's generally not recommended to ever do so. There are a ton of threads on this, so I'd search for 'forced unwrapping'.
It‚Äôs okay for testing purposes. Very rarely acceptable in production. Best practice is to avoid this with if-lets and guards and throw errors. Or don‚Äôt use optionals when possible by making better constructors
 if clueEmojii[corrCount].contains(A1Label.text!) {correctAnswer.append("A1")} Is something like that bad? I cant see how that can cause any harm.
Only if you know for sure youre label will have a text value. This is better: if let text = A1Label.text { if clueEmojii[corrCount].contains(text) { correctAnswer.append("A1") } } else { // no text in label. Throw error or print. Or don‚Äôt } Also, it‚Äôs convention to follow camel case with Swift, so you should refactor your label name
&gt; CoreLocation It is already. My app already uses the location manager and it works. This line only will fail: self.locationManager.activityType = CLActivityTypeFitness CLActivityTypeFitness -&gt; Use of unresolved identifier 'CLActivityTypeFitness' 
Ah, newer swift versions started to move these ObjC enums (which are basically global integer variables starting with the same prefix) into swift enums, so it's CLActivityType.fitness in swift.
I have experience with mysql and PHP. I have a database set up for one of my hobbies. I wrote the backend in JAVA which has a MYSQL connection library. Was hoping something similar existed for SWIFT. But I guess I have to resort to the dirty PHP. 
I do not know if it's possible with some easy Swift code. You could try some library. There are some promising looking results on cocoapods e.g. E.g. this one looks pretty easy to implement: [https://cocoapods.org/pods/MySqlSwiftNative](https://cocoapods.org/pods/MySqlSwiftNative)
When it comes to keyboard handling, I either use the default implementation in UITableView or use https://github.com/michaeltyson/TPKeyboardAvoiding It observes the framechange notification instead of the show notification, so if the user switches between keyboards of different heights, it keeps working right.
Yes, worked!! Thank you!!! :)
I may be wrong but I thought with GameplayKit it could only look a certain number of moves ahead and plan the best move? But what I want is it to play the game millions of times and come up with its own strategies. If that makes sense.
I understand what you‚Äôre saying here but I think that the cases where the program should crash can be often caught by the type system. For example if you require an Int to be present or the program will crash, you should demand a non-optional Int. It will force the upstream programmer to think about what they are doing while they are writing the code. Yes they can thoughtlessly unwrap the thing safely and maybe put their program into a bad state, but that is hardly your fault. However if your api presents an optional that isnt really optional, its not exactly being honest...
You may be right, I've never used it. And the programming guide doesn't inspire much confidence.
If I try to call .requestLocation() from the didReceiveRemoteNotification delegate method and my app is in the background, didUpdateLocations never gets called. Is it impossible for .requestLocation() to update location in background? (This used to work in my app until recently)
&gt;I think that the cases where the program should crash can be often caught by the type system Well of course. The first choice should always be to make invalid states unrepresentable by the types you're using. But there's always API's you're using that make this choice for you, especially when interfacing with ObjC stuff that isn't as strongly typed as you'd like.
Did you set the textField's delegate to self? If you call `self.performSegue(withIdentifier: "yourSegue", sender: yourSender)` within textFieldShouldReturn it should work.
Yes, I was about to amend my comment. I did a bit more reading on the history of force-unwrap and it looks like it's pretty much meant for Objective-C interoperability. So that said, I still don't think the author is wrong, but I'd say ObjC interop should be the exception to the rule. Any new swift code should be written without forced unwraps.
I really dislike dogmatic thinking like that. If I have something like: let values = [Int](1...6) let shuffled = values.shuffled() let index = shuffled.firstIndex(where: { $0 % 2 == 0 })! Then what else should that code look like? There's nothing else that's as clean.
Noob here. My understanding is that an array contains an ordered list, so you can access each item by its index, starting at 0 for the first item. You can reorder, append items to the array, etc. A dictionary is a bunch of unordered key:value pairs. 
I disagree 100% with this. Using a `!` to unwrap, cast or try is completely acceptable if it's meant to catch programmer error. (i.e. The only possible way it would ever crash is when the programmer did something wrong.) Which means it would get caught in testing and fixed. Use the type system to your advantage so you can enforce this. With that said, I would avoid using an optional type AT ALL unless the value can truly be optional. In that case, catch it early and insert it into a value that is not optional or fail fast. e.g. Result&lt;&gt; handling the failure scenario.
&gt;real-time chat implementation in Swift Oh, I see - that's probably some leftovers from another project of mine, hence the confusion. The app is indeed using Firestore entirely. I'll clean up the leftovers, to avoid confusion. Thanks for taking a look! `private let db = Firestore.firestore())`
Oh, I see - that's probably some leftovers from another project of mine, hence the confusion. The app is indeed using Firestore entirely. I'll clean up the leftovers, to avoid confusion. Thanks for taking a look! `private let db = Firestore.firestore())`
What are you trying to accomplish? If you're trying to UI test an app that you built, then you're thinking of it the wrong way and you should look at [XCUITest](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/09-ui_testing.html). If, on the other hand, you're asking if you can simulate taps on the screen outside of an app that you built (on the system springboard, in other apps, etc), then the answer is no. That would be a significant security hole and there is no sanctioned way to do that.
What exactly are you trying to accomplish with this code? This isn't going to change my mind. Let's see some code that _isn't_ contrived and isn't dealing with objective-c and maybe I'll rethink my position. The answer you're looking for, as far as the intention I can see in this code is, `Int.random(in:1...3) * 2` 
Exactly this. Noob too, btw. :)
Okay thank you that was very helpful!
_How_ is force-unwrapping going to catch programmer error? I will go so far as to say that if you are using force-unwrapping of optionals to catch programmer error you have failed at writing a usable API.
This is it with one addition: the keys have to be [`Hashable`](https://developer.apple.com/documentation/swift/hashable) for a `Dictionary`. 
Funny enough this thread so far seems to be mostly anti-forced-unwrapping..meanwhile there's another thread going on at the same time where people are pro-forced-unwrapping: https://www.reddit.com/r/swift/comments/aq7104/force_unwrapping_is_not_just_not_swiftlike_its/
We will need module stability for that! 
A very obvious example is casting of TableView cells. let cell = tableView.dequeueReusableCell(withIdentifier: "identifier", for: indexPath) as! MyCell You don't want to have to check if it is actually of type "MyCell" because if it's not, you want your program to crash, not to return some akward default. Another obvious one: let array = [Int]() // hardcoded array print(array.last!) // Oops the programmer forgot to fill the array There are plenty of other examples, it's not that hard to think of a couple. 
That's a surprisingly elegant solution!
 guard let cell = tableView.dequeueReusableCell(withIdentifier: "identifier", for: indexPath) as? MyCell else { fatalError("Tableview Cells must be of type MyCell") } Provide useful feedback in your errors, even if they're crashes.
Not really because the default message says something almost exactly the same, so why write it again? It just obfuscates your code.
They're both collections - bags that hold Things. An array holds an ordered set of Things: * There's a definite first thing, followed by a second thing, etc. * you can insert new things in particular positions (assuming a `var` array) * You can sort an array (since there's an order) * Accessing a thing by index (give me the fifth thing) is very fast * Finding a specific thing (is your name George?), is slower - you have to examine potentially every thing in the array (if its unsorted). A dictionary holds an unordered set of Things * There is no definite ordering. You kind of throw things into a swimming pool and they bounce around. * Rather than accessing by index, you access by a key - like a string (a name) or a number * because there's no definite ordering, there's no concept of sorting. * Accessing a specific thing (by key) is very fast. Arrays are useful for "I have a bunch of things". Dictionaries are useful for "I have a bunch of things, and there's some kind of other-thing I can use to look them"
at all
It doesn't obfuscate the code at all, it does three things: 1. It states that any type other than MyCell is invalid 2. It indicates that such a state _can_ happen and that when it does it is fatal and is expected to be fatal 3. It doesn't abuse an unrelated language property in an ambiguous way. ("Is this my fault? Is this the original programmer's fault?") 
Maybe provide a gif of what is happening? It is hard to determine expected behavior currently without visual assist.
I actually made a library that helps make this much easier: https://github.com/BenLeggiero/macOS-Dark-Mode-Switcher
 1. The default already does this 2. The default already does this 3. Your verbose message doesn‚Äôt answer that question. I didn‚Äôt know force casting was abusing the language, good to know (/s) 4. The default already does this by writing ! Your solution is overly verbose and if the programmer can‚Äôt understand the default unwrap message he shouldn‚Äôt be writing an app in the first place. 
Oh, sorry then, just didn't want people to get confused by this.
It's not the most fortunate example, because IIRC, UILabel and UITextField text property will never be nil(so why is optional then? I guess it's due to Obj-c bridging)
Cannot convert value of type 'String?' to expected argument type 'Character' That the error message I get if I don't 'force' the unwrap. I stopped using objective C the literal minute Swift 1.x became available. 
It's not "wrong". It's not even "not Swift-like" -- it's part of the language. Quite often, crashing is the best thing you can do. That's no different than an assertion. In fact, that's exactly what it is. You're asserting that something is not nil. Rather than design and implement a bunch of functionality for a "can never occur" situation, you just abort. Do you also claim that calling `assert()` is always wrong? How do you even test a "can never occur" situation? Unless you've got a test framework that is artificially injecting nil into every Optional, at every entry point, I'm not sure what you hope to gain by this. You're adding a bunch of code paths which you'll never even be able to test. Are you hoping your UI will still make sense, when random internal parts are nil, for no reason? Suppose I went and replaced every single case of `!` in my application. What have I gained? My application is bigger and more complex and less well tested, in order to deal with a hypothetical problem which has never occurred once in my life, which I've never seen in any automatic crash report log, and which no user has ever reported to me. Gee, thanks. You don't even need external interfaces to run into this. It's trivial to run into 3-line cases where using `!` is the simplest solution, and obviously correct, but which the language doesn't give enough information. I make an empty array, append at least one item to it, and then want to peek at the first item. Personally, I'll just call `.first!` on it. Yeah, your language/compiler (which you claim is smarter than me) can't decide if "empty array + 1 or more items" means that "tell me the first item" will always succeed. Darn. Don't like that one? I've got 723 others. Yes, it's possible to write them in ways which make the type system happy, without using `!`, but why go to extra effort for the compiler's benefit? Programs must be written for people to read, as Abelson said. There's a million other ways your code can blow up which are (IME) *far* more common than optional unwrapping. Do you ever call `+` on two Ints, without first checking that the sum will fit into that data type? That's exactly as dangerous as force unwrapping an optional. Remember, in Swift, `+` means "try to add these numbers, and crash if it's too big". There's no bignums, and you only get overflow if you use the funny operators that nobody ever uses. Anyone who's anti-`!` better also be anti-`+` and anti-`*`, too. If you think that religiously sprinkling "guard let" over your Swift program is going to stop it from crashing, I've got a bridge I'd like to sell you, for the low low price of `Int.max`.
Because you're accessing single char in clueEmojii property via subscript. It's like comparing an object to an array of objects, it makes no sense. If A1Label only shows 1 character, you could do sth like this: if clueEmojii[corrCount].contains(Character(A1Label.text!))
My take on that: If you're beginner - it's bad, don't do it. If you're experienced - well, it depends. If you know when the property you're accessing will never be nil, it's fine. Sometimes you want to terminate the program when given property is nil, but it's better to fatalError this. Usecases for !: IBOutlets, injecting some property into ViewController right after didLoad when init is not available, some properties have ? but never be nil(UITextField text property).
No one in that thread is advocating just unwrapping like one is shooting from the hip. If a value can truly be optional, like a value from an API call, take proper measures to unwrap it. But there are instances where it‚Äôs totally fine to use ‚Äú!‚Äù and the app would never crash.
&gt; You can sort an array (since there's an order) You can only sort an array if its elements conform to the Comparable protocol or if you can supply a function that defines the ordering of any two elements int he array. E.g. You can't just do `let z = [true, false, true].sorted()`. &gt; Rather than accessing by index, you access by a key - like a string (a name) or a number Well, you can access by index, but hash table indices aren't as useful to a human as array indicies. &gt; because there's no definite ordering, there's no concept of sorting. Well, there is, but similar to the case of an array where the elements do not conform to Comparable, you need to supply the comparison function to the sort function. 
It is precisely the same as calling preconditionFailure() if you get a nil. You would use it in exactly the same way. I don't understand why there is any discussion about it in the first place. There are times when the app needs to crash, like an array subscript out of bounds. That's in the standard library. If you need to crash on nil, use it. If you need to do something besides crashing on nil, then don't use it. I think a lot of UI programmers are used to seeing ?, because there are a lot of optional behaviors in UI programming, and every object under the sun can serve at least six kinds of delegates. I think UI guys get used to seeing that, and then when they see ! too much, it looks to them like amateurish code. I've actually implemented a little function in my toolkit that does nothing but a force-unwrap. I use it rather than ! when I write code that I need to discuss with UI guys. It doesn't bother them as much. There are at least 42 different ways to make your app crash. ! is just the shortest way to do it. Peace and luck
This was an explanation for newbies. Of course this is great information, but I figured not overwhelm them with such detail when they're at the "uh, what's the difference?" stage :-)
The standard library will crash if you use an array subscript that's out of bounds. He's confused about the point he's trying to make. He's objecting to laziness, not forced unwrapping. Forced unwrapping is just another way to get-the-data-or-crash-trying, just like bad array subscripts.
Let's say a developer has an optional class variable: var x: Int? Later the developer is writing a method that makes use of x. The developer "knows" that when the method they are writing gets called x will have been set. There are two possible scenarios: 1: The developer is right and then there is zero issue with using x! in their method. 2: They are wrong. There is something about the program that they don't understand. And when a situation occurs that the developer hasn't anticipated it is very important / useful that a big red alarm with blaring horns goes off. A crash (usually accompanied with a big beautiful stack trace) is just such an alarm. And as such x! is exactly what they want. If a variable is nil when I think that it shouldn't be possible; I want to know that. I once inherited a project where it had been decided that the app "crashed too much". So, the CTO asked the developers to "fix the crashes". They went about blindly putting nil checks around every object before it got added to a dictionary, instead of asking "What possible reason could this object be nil?" The result being that while the app crashed less, major bugs were being snuffed and left to fester for years. Crashing is a feature, not a bug. Fix crashes; don't cauterize them.
&gt; They're both collections - bags that hold Things. Careful -- [bag](https://en.wikipedia.org/wiki/Set_\(abstract_data_type\)#Multiset) is a specific name for another data structure.
Did you read the article?
&gt; But here we can face another problem when the author of the library abandoned it or didn‚Äôt update for the next Swift version. In this case, we have to replace this library with another one or implement our solution. It can be tough to remove the library if you use it across the codebase. Why would you remove it? It's a working library, and you already decided it was good enough to use. It's got to be easier to update it to the latest version of the language, than to write your own from scratch. Plus, you have the potential assistance of everyone else in the world who might be using it. People have ported *Objective-C* code to Swift. Compared to that, updating Swift 4 to Swift 5 is a piece of cake -- possibly even a NOP.
I figured it out. It seems like I unintentionally assign the UNUserNotificationCenter.current().delegate = self in another class, which is why it not longer knows what to do. Silly me
depends on the case tho.
Happens!! 
Happens! 
I definitely just broke the ‚Äúemit-into optimization‚Äù while implementing [default arguments in enum cases](https://github.com/apple/swift/pull/21381). I suppose I oughta fix that...
It _is_ abusing a language feature because it doesn‚Äôt tell me if you intend it to crash (or indeed if you‚Äôve even thought about it) or if you‚Äôre just being lazy and don‚Äôt understand what optionals are for. Yes using guards is more verbose than forced unwrapping, but it clearly states what is supposed to happen and that you‚Äôve thought about it and that its not a bug.
I dunno, the way people want to use ! to force a crash suggests to me that they are probably using forced unwrap a little more often than they‚Äôre letting on. And I would be _very_ careful with assumptions that a thing will never be nil. 
! means you intend it to crash. The casting of that cell isn't "optional", it's required to be that type, so there's no need to be verbose about it. A good programmer thinks about these things. His job is not reading through and writing lines of code that will never, under normal circumstances, be executed in the first place. The less amount code you have to read through the better (while still being correct of course). If you want to be that verbose, you can always write a test for it.
Just released my new habit tracking and visualization app, Patterns: [https://itunes.apple.com/us/app/patterns-improve-yourself/id1450907972?mt=8](https://itunes.apple.com/us/app/patterns-improve-yourself/id1450907972?mt=8) Written 100% in Swift. Would love any feedback/reviews!
I'd recommend using the automatically generated model classes that Core Data creates for you and then adding functionality through the use of extensions on those classes.
Try asking over at /r/iOSProgramming.
Try framing this with the question, ‚Äòwhat does the app do if there is no internet connection?‚Äô Throw on Airplane mode and see how your app behaves. If you really do require a live connection, make sure you have a good alert to explain why that is the case. If your app provides a helpful explanation when there is no connection, you should be good.
thank you, &amp;#x200B; I think I will make the api call optional and display some image placeholder in case there is no download. then try reuploading the update again.
That seems reasonable to me. Keep the mindset of helping out the user when the necessary are not as required.
Basically I believe you are trying to deploy an app without any relevant content. I was caught in this issue once. In my case I was trying so deploy(do TestFlight) an example that implemented only a login screen without any internal content(just a white view controller) after user complete login with success
The primary problem I have with using `!` is it undermines the entire purpose of using `Optional&lt;&gt;`. _Can_ you know if a value will definitely not be nil? Yes, there are _some_ examples where you can but I do not believe that they warrant getting into the habit of force-unwrapping, instead it would be better to lean on the type system. If a thing is not optional, it should not be optional. As for arithmetic, Swift has `&amp;+`, `&amp;*` and `&amp;-` for cases when things can overflow (such as dealing with external data or accumulators), `init(truncatingIfNeeded:)` is there for casting integers, you can also extend arrays to have a safe subscript operator that returns an optional. Am I saying the program should absolutely never crash? Of course not, but crashes should be intentionally done and not because you're making assumptions about the state of the program. If you think a thing _can never_ be nil and you're doing any kind of concurrency that touches it that assumption may not be as accurate as you think it is. This is also why static code analysis, sanitizers, and unit testing exist. We make assumptions about things that are wrong all the time. I would rather see more verbose code that intentionally causes a crash via fatalError than a crash that is caused because someone assumed a value would never be nil (or that an Int would never overflow, etc).
no, I just used an http call to download updated images from an API that are used in the app. I didn't want to include the images in the assets as they are a lot and may change over time. The app itself has been in store like this for almost a year now and this was never a problem. It (the current update to the app) got rejected because there was a recent change to the mentioned guideline rule this year.
That would give a completely different probability distribution.
That imprecision is a fundamental property of floating point values. Floating point values are stored in binary, not decimal, and consist of an integer value and an exponent; things that are powers of 2 (like 1/4096, for example) can be stored precisely, but decimal values like 0.01 are approximated. The result is that, if you have eno decimal digits, you will see where the approximation diverges from an ideal decimal representation; i.e., a binary floating point representation of 0.01 will be 0.0100001 or 0.0099998. Adding more bits of precision only gives you more decimal digits before the divergence is visible. In most cases, this is good enough; computers use binary internally, and decimal representations are provided only for convenience. Though in some cases such as currencies, it is inadvisable to use floating point.
MacBook Pro 
Or the new mac mini with the i7
I think there are going to be a number of challenges. Firstly, unlike phones, most DSLRs don‚Äôt come with SDKs and their operating systems aren‚Äôt open source. If you are working with Canon, it may be worth looking at [Magic Lantern](https://magiclantern.fm/about.html). I‚Äôve never looked at it but there may be an interface you can work with there... Secondly, hardware needs to be licensed with Apple to work with iOS via the [MFI program](https://mfi.apple.com/MFiWeb/getFAQ.action#1-1). I don‚Äôt know if any of the camera manufacturers are part of this program. Even if they are, I don‚Äôt see a category in the program for video input. TLDR - I don‚Äôt think it‚Äôs possible due to closed camera software and Apple‚Äôs restrictive hardware licensing.
Here you go, buddy: [https://floating-point-gui.de/](https://floating-point-gui.de/)
It all depends in your budget and if you need mobility or not. I currently have iMac 21.5", late 2013 model, got it for around 500 euros used (without keyboard and mouse). I can't ask for anything more right now since it's running great for my need (I am also a beginner) but it's a question how many more MacOS updates it will support since it's an old machine. The newer machine you get, it will last longer.
Probably a second hand MacBook Pro. I have a late 2011 model 13‚Äù that I upgraded to 8GB RAM and put in a SSD. I wouldn‚Äôt recommend it as the best experience if you need to use the iOS simulator, but it is possible to wok with. My main dev machine is a 2015 base model MacBook Pro 13‚Äù and it‚Äôs more than adequate. I haven‚Äôt really seen the need to upgrade to a newer machine yet. The apps I write are generally UIKit based and compile times are short.
CGFloat uses Double on devices newer than iPhone 5 If you want rounding to X digits, use Decimal.
I figured if they're unclear on what an array and dictionary are, Bags (and sets) are farther in their future. Trying to make something approachable rather than language-lawyery. 
I have a Windows PC so I would say I don‚Äôt need a second display. I would use the macOS device only for coding and maybe web surfing. 500‚Ç¨ sounds good for. I will check the prices for older Mac Mini. Btw how do you learn swift? Did you ever code before? I started at 0 and after I finished playgrounds I‚Äôm thinking about the next step how to learn 
I have a iPad Pro and don‚Äôt know if a MacBook Pro is useful for my usage because I also own a Windows Pc
There are a near infinite number of resources for people who want to lean to code that use swift as the language. What kind of coding are you wanting to lean? What kind computer (or maybe an iPad) are you going to use?
That was mostly an answer to the post‚Äôs title that might make it look like Swift 5 alone enables the distribution of binary modules.
Devices I have at my disposal are two iMac‚Äôs 2017 Retina Editions. Bear in mind that I have absolutely zero understanding or experience in coding and will obviously need to start from scratch regarding any form of coding. Basically I want to be able to build whatever application I might need for myself or a friend could request etc. for the iOS &amp; MacOS platfroms.
I see no reason why you couldn't learn to code using Swift. One of the nice features of Swift is the Swift Playground that lets you write (relatively simple) code before you need to learn the more advanced features. I prefer the playground on Mac rather than the iPad as the Mac version gives better feedback. Lots of good tutorials. You should probably decide early if you want to program for iOS or macOS. There are way more tutorials for iOS and fundamentally the concepts transfer, so I would focus on iOS. 
It's still interesting to see that \`Double\` cannot accurately reflect the less precise \`Float\` value, that's not something a programmer would intuitively expect.
Would you be able to recommend any sources where I can start. &amp;#x200B; As I understand and as you said now, Swift is a fairly simple language to learn. I would follow your recommendations to start with iOS apps. Literally I want to start learning this as a hobby, not looking at doing it full time but would be amazing to learn another skill that I could use in this day and age. &amp;#x200B;
It is just an example ;)
https://www.hackingwithswift.com/ has a lot of good content The author is a nice guy who has an active Slack if that is your thing. He is currently doing a 100 Days of Swift thing which is cool. https://www.hackingwithswift.com/100 
I coded tiny bit when I was a kid but now I am almost 30. Started last year (but made some big breaks in between) with Swift, only knowledge I had was "if-let statements, I heard about that" and "you need to type in text to make a program". :) Is Playgrounds an iPad app? I heard about it but I don't have an iPad myself so haven't got to try it. I started with book "Intro to App Development With Swift" by Apple. It's aimed at younger audiences but it really helped me with understanding some basic concepts. Now I am studying with "App Development with Swift", also by Apple. It goes through same things in the beginning as the first book but in more details. In latter lessons it goes with new concepts (AR, web, table views, etc). Both books can be found in "Books" app on MacOS/iOS. After I finish it I plan on diving into making my own apps and just googling stuff and using documentation about things that I am not familiar with. I see everyone is recommending www.raywenderlich.com but as a beginner I still don't want to pay for tutorials (ok, it's more that I am living in Eastern Europe but that's another topic, haha).
Whatever you can afford tbh. Yes older machine will be a bit slower but it isn't going to be a huge issue for you. Trust me you will be the slowest link in the chain when it comes to programming :) I don't mean that as a dig at you it is just that the programmer always is these days. Even a 5 year old MacBook Air is powerful enough to code on. The *real* question is how much do you want to spend? 
I‚Äôm also almost 30. Yes Swift Playgrounds is an App for kids to learn programming with Swift. I thought it‚Äôs a good start to understand the whole process. I will look into the books you told me. My goal is to release one app this year in the App Store
There are lots of options. App Development with Swift by Apple https://itunes.apple.com/us/book/app-development-with-swift/id1219117996?mt=11 Hacking with Swift - Beginner courses free, additional paid https://www.hackingwithswift.com/read Developing iOS 10 Apps with Swift Video Course - Free https://itunes.apple.com/us/course/developing-ios-10-apps-with-swift/id1198467120 Ray Wenderlich - Beginner course paid, additional free/paid https://www.raywenderlich.com/category/ios The Swift Programming Language by Apple (language only, no iOS/macOS content) https://itunes.apple.com/ca/book/the-swift-programming-language-swift-3-1/id881256329?mt=11 
If money is the big issue then buy an old (not too old!) Mac mini as I did. An older Macbook Pro is also a possibility, I'm using an early-2015 without problems.
I want to spend 500-600‚Ç¨. 
I guess then the Playgrounds app should be similar to first book that I mentioned. Maybe you can go right away with the second book but it's the best to check it yourself. Same with me, I also want to release at least one app this year. Good luck to both of us!
Cool. If you have a monitor you can use than look at a Mac Mini. If not then look at an iMac in that price range. If you need portability look at a MacBook Pro in that price range. If you get a MacBook Pro then make sure you know the model you are buying to see if you can upgrade the RAM and SSD yourself as you can't on the newer models (2015 and later)
Get a swift courses in Udemy, pick the one With Angela
Thank you so much for the information. Been looking for free content has been a mission for me and you just made my day. &amp;#x200B;
Thank you, good luck :)
I have a monitor. I don‚Äôt know how many power I need for coding. Are 8GB Ram enough? Hard drive space shouldn‚Äôt be a problem I think
Kind of hard for me to recommend something for you as everyone learns a bit differently and I did not learn Swift as a programming beginner. I do like Ray Wenderlich's tutorials. https://www.raywenderlich.com/ They have a iOS and Swift for Beginners video course that looks good to me. They also have a tutorial called https://www.raywenderlich.com/6338-swift-tutorial-part-1-expressions-variables-and-constants if you prefer the read and type variety. This course uses playgrounds to start with. Of the two I think I would start with this tutorial. You might want to check in your area for makerspaces, libraries, schools and Universities offering beginner courses. Much more fun to learn with other people. My library here has access to online courses like Lynda.com and tons of downloadable content. Lots of online courses from places like Stanford. Careful with those as they sometimes downplay the per-requisites. Stanford's CS193p is a great course but you really need to know programming basics and object oriented programming before tackling that course or you will be totally lost. Don't let the initial learning curve deter you. Programming is fun and potentially very lucrative no matter what field you are going into. First step, download Xcode to you mac. Xcode is free from the App Store. It is a pretty big download.
8GB is the lowest I would go. If you can upgrade to 16GB I would do that. Not a problem on the iMac or Mac Mini. 
If you have zero knowledge a good place to start is a course on udemy or lynda or another one of those online learn at your own pace courses. I bought Angela Yu's udemy course for ~$15USD to brush up on my skills for the latest iOS release but it was way too rudimentary for me. As I was going through it (rushing tbh) I kept thinking that it would be a fantastic course to take for someone who has absolutely no background in development. If you don't want to fork out the $15 I think Lynda offers similar courses, and Lynda is free at some libraries, depending on where you live in the world. Once you're comfortable there the next step I'd recommend would be to take the Stanford iOS course taught by Paul Hagerty. It's available online for free, but it will be overwhelming without the proper knowledge base. 
I don\`t know if you have an iPad but for me was the App Swift Playgrounds a big help. It\`s for kids and you learn all the basic stuff. It\`s really good for understanding how programming is working
I highly recommend Rob Percival on Udemy, it was how I learned. Of course you can learn how to code in Swift, but you'll find soon after you've reached a point of comfort with the language that all other languages are easy to pickup because the concepts are the same/similar. For another language, possibly even a better starter than Swift, I recommend Python and JavaScript via Node.js.
Coding isn't hard, but understanding the full scope of what's happening when you code is actually a lot of information. Not hard, per se, but definitely concepts that require testing and reinforcement. Taking any intro to programming course at a college or university will give you the basic information you need to really thrive, but you can get most of that on your own if you work hard enough. In order of things most new devs struggle with before mastery: \- Variable assignment &amp; functions \- Variable scope \- Object-oriented \- Synchronous / Asynchronous processing
Something that I find very useful is Xcode's playgrounds. They're a little stand alone program that you can write code in and it'll execute it. These are called REPLs (read evaluate print loop) and there are some online too. They're very helpful for being easy to use for a beginner, so you can focus on programming concepts.
Man let me tell you. If you post something like this without even bothering to check reddit sidebars the the chances of you actually learning are about 1 percent. Just because that signals to me that you're either lazy and want everything spoon fed to you or you're just completely clueless about where to get information which is about 90 percent of what programming is actually about. Finding the correct information and being able to understand/apply it.
Coding itself is easy, understanding and grasping frameworks and how to use them is the hard part
Or requesting the best sources to start of with from experienced users might be a better idea than walking in circles. I did search around and most of the websites would require payment options. Also I‚Äôm so sorry I asked a question on a forum made to assist other users instead of lambasting them so thank you for the input on your side. Much obliged.
I can really recommend OP to check out Swift Playgrounds app on iPad. My wife has learned so much of the basic stuff thanks to that app. For example variables, functions, datatypes, for/while loops etc. Swift playground won‚Äôt make you a fully fledged app developer, but it‚Äôs a great start to learn the basics. Once you feel ready for the next step I can recommend the course CS193P given at Stanford University and available for free(!) on iTunes. Learning programming can feel a bit overwhelming at first, but stay strong OP. We‚Äôve all been there, just keep going! üí™
\+10 on knowing it will never be nil For example, declaring an uninitialized variable on a view controller. `var viewData: [String : String]!` Knowing that the view can never be presented without having first transferred the data to the view controller, this is fine. It basically says "yes, I know this data is not present, but it will 100% be present by the time I go to use it, 100% of the time". This is a common way I use it. beginners should rather use if-let or if-var `if var viewData != nil {` `// Code here` `}`
Start with apples ‚Äúapp development with swift‚Äù book, it‚Äôs free and goes over all the syntax and programming concepts then you go through app specific stuff. 
How do I make an object rotate to face another object in SpriteKit?
An example of what? A reason you'd want to do what's described in the post -- which you would never actually need to do?
 import Foundation func random(from: Float, to: Float) -&gt; Decimal { let value = Float.random(in: from..&lt;to) return Decimal(Int(value * 1000)) / 1000 }
Huh? A 64-bit value has 52 bits of significand, versus 32 for a single. Every single can be exactly represented by a double, simply by zero-extending it. 
You do know how [floating point arithmetic](https://en.wikipedia.org/wiki/Floating-point_arithmetic) works, right? Your computer is *bi*nary. It's not storing *deci*mals at all.
&gt; If you're beginner - it's bad, don't do it. The problem with easy rules like this is that beginners will write the most convoluted code you've ever seen, just to avoid ever typing "!", even in cases where it'd be perfectly correct. It's a good way to send them on a wild goose chase. This is a common source of x-y problems. I've seen beginners take simple rules like this and generate 5 or 10 pages of code, for something that should have taken a couple characters, because they were told to never type those characters. &gt; Sometimes you want to terminate the program when given property is nil, but it's better to fatalError this. Why? &gt; some properties have ? but never be nil(UITextField text property). "Some" is quite the understatement, to anyone who's ever touched AppKit!
I never expected that to be true, but indeed CGFloat is a 64 bit float on 64 bit processors. I always assumed that CGFloat was a typealias'd Float much like TimeInterval is just a typealias'd Double. That's not the case thought as CGFloat is its own struct. Under my nose the whole time. 
According to my tests, it's also faster to use Double (at least on iPhone 8) https://github.com/Cyberbeni/Float_vs_Double
aded movie
Interesting. 
Segue is a way to pass data from one view controller to another view controller that is linked in Storyboard. I have wrote a post explaining how this works : https://fluffy.es/3-ways-to-pass-data-between-view-controllers/ hope this helps!
I'm just referring to the fact that I understand why the OP was confused, but if you really think I'm a moron you can downvote at your heart's content.
Example of how to swap one implementation with another one. It can be simple class instead of library.
Is your `leftview` properly wired up? It seems to be `nil`.
Wym wired up? I‚Äôm new to all this so idk what ur asking
The line of code, ***leftview.load(urlRequest1),*** is returning a nil value - meaning no value is returned from the ***urlRequest*** constant. Trying using a guard statement or and if statement to declare what happens if it returns a nil value
Is the outlet connected to a valid view is what he means
URL is failing to construct and returning nil. I think it is because your url doesn't have a proper scheme, say http:// before the address.
That error is common when the outlet is not configured correctly. I‚Äôd recommend creating the web views programmatically as that gives you more control. Another thing you can try is removing the outlets and creating them again. 
I‚Äôll try that, thanks
If you comment out the line that crashes, does it also crash when it gets to rightView?
This isn't what's happening. Even if that method were to return `nil`, since the calling code is never accessing it, there would be no error.
What about the infinity of numbers between 0b00000000 and 0b00000001 ?
use if let url1 = URL(string: ...) { ... } (same for url2). My guess is swift does not like IP addresses as the URL string.
Thank you. I'm following your tutorial and getting it to work. I appreciate the help. A follow up question, that is definitely a little more advanced than what I think I'm capable of, if I say there will be 4 players, and then I send that information to the next VC, how do I implement 4 text fields for their name input? If they only select 2 players, then only 2 would pop up. 
What would I put in {}
this: if let urlRequest1: URLRequest = URLRequest(url: url1) { leftView.load(urlRequest) } [further reading](https://medium.com/@abhimuralidharan/if-let-if-var-guard-let-and-defer-statements-in-swift-4f87fe857eb6) 
this: if let urlRequest1: URLRequest = URLRequest(url: url1) { leftView.load(urlRequest) } [further reading](https://medium.com/@abhimuralidharan/if-let-if-var-guard-let-and-defer-statements-in-swift-4f87fe857eb6) 
Ty a million
Try CartoonSmart.com
Interesting point about front vs backend use. Mobile devs are working on long lived, user facing processes, so crashing is almost never the right thing to do. You should always disable the feature and/or show a meaningful error state. API devs are often working on very short lived processes where crashes are automatically turned into error codes, so it is often fine to just crash and let the mobile devs deal with the error handling. I avoid fore unwrap like the plague on iOS, but I can see it being totally OK if it just means return a 500 error.
Also if someone could tell me what it is called that would be great!
Never mind I am an idiot and they moved them to the top and they‚Äôre called objects. 
You would probably have to create the text fields and labels programmatically based on the number of players 
Hacking with Swift. I worked through the first 16 projects and then I felt ready to tackle my own. However: It‚Äôs a long and committed journey. Stick with it and take baby steps. If you want someone to bounce beginner questions off of, pm me. I know that teaching others is the best way to learn, so I can profit from that as well. 
Yeah, that's what I've been figuring. Well.. on to the next tutorials!
The most easy way I can think of is create 4 text fields (textField1, textField2, textField3 and textField4) in the storyboard, then hide all of them by setting textField.isHidden = true. Pass the number of player (assuming it is an Int variable) using segue, then show the textField according to the number, eg: if(numOfPlayer &gt;= 1) { textField1.isHidden = false } if(numOfPlayer &gt;= 2){ textField2.isHidden = false } if(numOfPlayer &gt;= 3) { textField3.isHidden = false } etc..
I know this is r/swift, but I recommend you learn how to code with Python. Check out r/pythonbeginners
Thank you I‚Äôll have a look at it
Thanks! I'll keep this in mind when I get to that step
Lets build that App with Brian Voong. Probably the best Tutorials one can do even with zero experience. He teaches good coding practices, programmatically creating UI, does modern examples of currently used frameworks and apps. You can also view some of his stuff on YouTube for free before you buy any of his courses. 
Swift Playgrounds on iOS!
Doing the same thing, get the Udemy course with Angela https://www.udemy.com/share/100oFEBUEdcVZRTH4=/
Deleted the second question, I figured it out.
Even if you learn the basics of Python and not become fluent, it's a great language to begin with to get an understanding of how code works. I started with Python and switched to Swift, most of it translates brilliant. Think of learning Python as learning to speak your native tongue, then a lot of other programming languages feel like learning a dialect of your own language. Some bits are different, but for the most part they work the same. The basics of Swift and Python are very easy to work out.
Smh there's this thing called a search function reddit has. If you used it you'd see a variation of your same question asked almost daily. I'm just being honest with you about your chances since none of this is very hard to learn rather people just don't have the follow through required to keep programming almost daily. If you know you're going to give up in a week or a month just don't even bother 
Don‚Äôt be so negative and don‚Äôt assume what I‚Äôm trying to do. I asked a question that you could have answered in a decent way like everyone else has. Either way thank you for your input.
You're lucky this is reddit and not stack overflow if you think I'm being negative. Go play around on reywenderlich.com and if you can't bring yourself to pay 15 bucks a month then you're not serious ab it and will give up just like I'm assuming you will 
Okay 
Photo of code? No, I can't help, sorry.
I don't know if this is the "best practice" way to do it, but I would do a bit of trig, and set your sprite's `zRotation`. If I remember my trig, you'll want something like: let ydiff = his.y - my.y let xdiff = his.x - my.x let theta = atan(ydiff / xdiff) my.zRotation = theta Something along those lines. you might have to adjust theta by pi / 4, or maybe pi / 2, or pi, or the negative of one of those, but the trig above will give you your starting angle. Peace and luck
Actually, that's not the "best practice" way. I just found [this](https://developer.apple.com/documentation/spritekit/skconstraint/creating_a_look-at_constraint), which is exactly what you're looking for, I think. Peace
I can‚Äôt think of a single way in which they‚Äôre similar. Just use optionals correctly.
Yeah, it's sorta similar. However, if I had to guess just from what I've seen, nils are sneakier (for lack of a better work) than zeros, and most code I've seen where the numbers are coming in a way that the programer can't control, people have learned to check for zeros before dividing. Someone in another thread compared it to integers overflowing, which I think is a better comparison than dividing by zero, though there I still think the nils are, if not sneakier, then more plentiful than numbers most people work with that would flirt with overflow.
This looks really nice, and could save a lot of work for certain projects.
This would get a -2 where I work. You might get it through, but you'd have to write a brief justification why you can't refactor to avoid the !. If you have the data, pass it into init and it won't be optional. If you don't have the data at init then it's optional and you deal with optionality. If get it right after init then try to refactor to move it to init so it's not optional and your dependencies are explicit. Granted that's not *always* possible if you're working with legacy obj-c interfaces where they like to init with nothing and set a bunch of properties later. However, for new swift code this looks like a good example of the sort of situation that a soft ban on ! is trying to address.
! Is a tool, tools are there to use. Doesn‚Äôt mean it‚Äôs always the right tool, but why ban a tool outright for preference alone? In the case I described, I know the variable will never be nil with 100% assuredness because the VC is only used in one way, and the VC is gets called from can‚Äôt even instantiate itself without the data. I don‚Äôt really care to justify it too much more but be careful about banning tools that make no sense being banned. 
&gt;0xTim it helped me too. thank u.
Another good example is for CLLocationManager. It‚Äôs pretty common to declare ‚Äòvar locationManager: CLLocationManager!‚Äô on the VC and just instantiate in viewDidLoad. 
Another good example is for CLLocationManager. It‚Äôs pretty common to declare `var locationManager: CLLocationManager!` on the VC and just instantiate in viewDidLoad `self.locationManager = CLLocationManager()` `self.locationManager.delegate = self` ... Same to be said about a lot of other manager/delegate types. There isn't anything wrong about this paradigm. 
A fault is basically data that hasn't been fetched from the store yet. That's done so you don't have to load the whole object graph into memory at once. As soon as you access the fault, it will be transparently realized for you. https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreData/FaultingandUniquing.html 
no it's not corrupted. fault means that the data will be retrieved when the app tries to access it.
Which features of TTTAttributedLabel made it worth porting to Swift?
If you purely want to write Swift and don‚Äôt actually want to write software for iOS, you can install Linux on your PC (Dual Boot). You can write and compile Swift on Linux. If you want to write iOS apps or Mac apps that are distributed via the App Store, you‚Äôll need a device running MacOS. The best bang for your buck is going to be a 2015 era MBP.
I really recommend this one, I'm taking it and it's updated to Swift 4.2 on iOS 12
Automatic link detection, link tap handling, truncation tokens for expanding text were the bigger ones. Since this all lives on UILabel not having to drop into UITextView for link specific things is very nice. &amp;#x200B; TTTAttributedLabel isn't being maintained anymore, so having a maintained swift version suits us well here as well.
Is it IBDesignable still?
Doesn't appear to be. Open a PR!
This is another decent example of how there are generally better ways than ! if you look for them. lazy var locationManager = { return CLLocationManager() }() and you've eliminated one tiny case of "It will work because I won't make a mistake". I say soft ban, because there are cases where it's OK, you just have to be prepared to explain why. And in many cases when you're thinking about that justification you either figure out a better way or someone suggests one. There's another comment here on servers side swift where it's apparently used a lot more, and I totally agree that there, where the crash just gets turned into an HTTP error, force unwraps are totally the right tool for the job. But on iOS we've found avoiding the bang, while initially annoying, generally produces code that's less error prone, more explicit, and easier to reason about.
THIS. this dude knows his sh*t (or stuff, to be wholesome)
I second this. He‚Äôs really good. Take note though, he‚Äôs does his UI programmatically.
Sean Allen knows how to communicate well with his audience. He includes ‚Äúreal life‚Äù examples of some of the complicated concepts. 
If you want some help adding it (you don't want to make a PR) feel free to open an issue!
highly recommend to learn c programming language first 
&gt; I've seen beginners take simple rules like this and generate 5 or 10 pages of code, for something that should have taken a couple characters, because they were told to never type those characters. Good point! It's a matter of a project, probably. I would rather be safe than sorry. Newbish and super verbose code would be easier for me than 'clever'. But it's just extreme example, hopefully you can achieve verbose, but not redundant code. &gt; Why? IMO it's easier to debug/find in crash logs - you can provide reasonable info, rather than 'implicitly unwrapped optional blah blah'. Additionally, it shows your intention that you are fully aware of this action, rather than 'ayy lmao hopefully won't crash' 
I‚Äôm making a tab bar, each tab was given the default square icon to be assigned to each tab, but I changed the images and then removed the image and there is now no image there at all, I need the default squares back. How could I do this? 
[There's also a sub](https://www.reddit.com/r/hackingwithswift/) though it is for all the books/courses, not just HwS.
What is the breakdown of the curriculum?
Typically it's iOS stuff. But hopefully Server Side Swift picks up after ABI Stability comes along
&gt;I can really recommend OP to check out Swift Playgrounds app on iPad. My wife has learned so much of the basic stuff thanks to that app. For example variables, functions, datatypes, for/while loops etc. I have an unsupported iPad :))))) &amp;#x200B;
Just read your job description. Could you give me an example of an iOS feature where the algorithm skills of the engineer that built a feature really made it possible at all?
Not totally sure yet, but I do know it's broken down into four segments and I asked the director about it and he said "you won't be an expert, but you'll be able to do some pretty advanced stuff."
Yea! No more "can't find label" crap (or something like that) when porting to Swift. 
Thanks! I‚Äôll try it. I‚Äôm a 100% noob so I will probably watch some videoes too
Sounds cool. I'll check it out. If I like it might make a pull request on your Readme to add gifs for people to be able to see it in action 
I would say, if you are writing production code and you do not guard against divide by zero, you are asking for trouble. You may be able to guarantee that it is not zero (because you know the range of the values) and thus you do not need an explicit check. The compiler probably can't help you, but a static analyzer might. Null/nil checking in C is about the same. Maybe you know where it came from and can guarantee it. If it is production code and you cannot guarantee it, then you better check. Again, there is probably very little support from the compiler to help you out here. The nice thing about swift, with Optional, is that the type system forces you to deal with it. If you are writing production code, you will deal with it properly. If you are writing code for yourself, go ahead and force unwrap. I think dealing with Optionals in swift is a \*lot\* easier than dealing with divide by zero because the type system helps you. &amp;#x200B; That said, one way to think about force unwrap is that it is like an assert. If you would be willing to ship code with an assert in it (ie it is active during Release builds), then a force unwrap is similar. A divide by zero is \*not\* quite the same. It might produce a SIGFPE, it might produce a NAN, it might produce an infinity -- the behavior is undefined. Good luck :-)
Thank you, that is great
Don't pass. Store it elsewhere and store an index to access it from any view controller.
Are you a Nantais ?
Just opened a PR to add some Storyboard and Nib functionality :)
This ... &gt; The problems with all this reactive stuff seems to be that it requires a knowledge base that other members just cannot get up to speed on immediately. I might have underestimated this one when i started setting up a new project from scratch at a firm where i started a year ago. I was aware of the added complexity of reactive programming, so in the beginning we had a discussion about it, but the people here were enthousiastic to go the RX way. &amp;#x200B; One year later, i really learned to love reactive programming myself (you learn alot by coaching) and i became quite fluent in it. But i keep wondering if it was a good idea: when people get added to the team, usually their head explodes when they first look at the code, and i keep wonder: is it -really- worth the complexity?
Get one with 16 GB of RAM and at least a 500 GB SSD. AHaving quad i7s also helps.
Replace the drive with an SSD and it will be amazingly faster.
Hacking with Swift is the way to go. 
Hi! I have a question regarding protocols + generics, imagine this protocol SelfAdjustingComponent { associatedtype Environment: UIView func adjust(inside environment: Environment) } i'd wish to implement it in a view for different kinds of environments (so in a language like scala this would be something like class Component extends UIView with SelfAdjustingComponent[ImageView] with SelfAdjustingComponent[CollectionViewCell]) The problem is that i can alias associatedtype only once :(, and in protocols I do not have access to &lt;&gt; notation for generics. The only ways I imagine it working is: * typechecks (i.e. if environment is CollectionViewCell { ... }) * Something like a typeclass perhaps? (having a "global object" that gives compliance to this protocol by adjusting the element itself) Does that make any sense? Or does a better alternative exist? Thanks!
Do you know if this is accessible for screen readers? One thing I liked about TTTAttributedLabel, vs pure Swift implementations like ActiveLabel, is that it was accessible out of the box for screen readers.
In your storyboard you have probably set your icon on the tab bar item Attributes Inspector. &amp;#x200B; You can choose your own icon in Bar Item -&gt; Image or you can set a default in Tab Bar Item -&gt; System Item (custom gives you the square)
I answered to your question in the sticky monthly post, but will do it here for visibility. &amp;#x200B; In storyboard check the Attributes Inspector of the tab bar item. &amp;#x200B; **Tab Bar Item -&gt; System Item -&gt; Custom** should display the squares if no other icon is selected in **Bar Item -&gt; Image** below
you could also make a table view with an add and remove function for your player list, where each table cell represents a player. this would be more scaleable. it would also be more in line with general iOS GUI design I think, because you can use predefined layouts and buttons. (+ symbol in upper right corner to add; left swipe to delete) &amp;#x200B; just an idea to show you some more possibilities.
True that, I forgot to mention it. I put an SSD from my previous machine into an external caddy, hooked it up via USB3 and installed the system on it. Comparing speeds of SATA vs USB3 online it seems like I am not losing much in speed. Only problems are slow booting up (takes up to a minute, minute and a half, it's not a biggie) and not having TRIM enabled. When I get right tools I will definitely open my iMac and place SSD inside.
Good?
I have bar item set to just image the default one and it shows nothing. Starting to think it‚Äôs just my computer or simulator
Yeah it should be accessible as is. There‚Äôs some work I want to do around actions and accessibility, but it still should be good enough right now. Feel free to open an issue or a pr if there‚Äôs anything you need it to do that it doesn‚Äôt. 
I‚Äôm not. The project got its name from this carrot https://harvesttotable.com/nantes_carrots/.
Great! I‚Äôll check it out today :)
Yeah it‚Äôs not really a huge requirement for our daily jobs as an iOS engineer, but it‚Äôs still important to be able to talk with colleagues about why something can run efficiently or not. I‚Äôve found it also helps when you‚Äôre working on a design for a certain project or feature. Being able to talk about different parts of how the backend is going to build and structure their data gives you a better appreciation of the problems they run into and the limitations of their systems. The hiring process at Instacart represents the kinds of things you‚Äôd be expected to be able to do as an iOS engineer. I know not every company does it the same way we do, but I feel our process is very fair. Some will probably disagree, but that‚Äôs how I feel. 
Good!
Good
Bueno
Thank you! I appreciate the info. I‚Äôm learning a little more every day and my app is already farther along than I thought it would be. 
Yes. Dividing without 0 checking *is* wrong. But I think there are 2 big reasons you don't see articles about it. First is that language level support for forcing/reminding you to zero check doesn't exist in swift. Second is that division by a variable is 30somthing times less frequent than accessing an optional value(judging by my work codebase and some rough math on the results of a few command-Fs). But yea language support for non-crashing division would be great and I'd argue that the division operator probably *should* return an optional. While we're at it, the array subscript operator should return an optional too.
 ËâØ„ÅÑ 
 I'm entirely lost trying to add/subtract with dates and nearly every example I can find starts from current date rather than a constant date or user input date. I get that I can add days to the current date like this: let calendar = Calendar.current let rightNow = Date() let tenDaysFromNow = calendar.date(byAdding: .day, value: 10, to: rightNow) How would I take something like myBirthday and use it in place of rightNow? let myBirthday = DateComponents(calendar: calendar, year: 1990, month: 1, day: 1) Not even sure I need DateComponents? Can I take string and convert to date? Lost on this one. I'm ultimately trying to return text such as: It's been 29 years 2 months and 10 days since your birthday! Any help would be greatly appreciated. Thanks!
you want the constraints to have 0 constant, just a target and a multiplier
Going to answer my own question. I think I got it: let calendar = Calendar.current let myBirthday = DateComponents(year: 1990, month: 1, day: 1) let end = calendar.dateComponents([.year, .month, .day], from: Date()) let duration: DateComponents = calendar.dateComponents([.calendar, .year, .month, .day], from: myBirthday, to: end) print("It's been \(String(describing: duration.year!)) years, \(String(describing: duration.month!)) months, and \(String(describing: duration.day!)) days since you were born!") I don't quite understand what I'm doing printing: \(String(describing: duration.year!)) vs. being able to use: \(duration.year) but...progress.
That doesn‚Äôt work, still doesn‚Äôt scale the distances from the image bottom or sides
You are not doing what I described then. Do you have the project in a public repo?
This is a tricky one for sure; And I'm sure there are many ways to do this. I would recommend making sure your image is Aspect Fit, with an Aspect Ratio constraint (on a container), with an image pinned inside. Then each player position can be constrained center X, center Y, then as @Cyberbeni was recommending, using the multiplier to adjust exactly where you need it. If you want me to show you what I'm talking about, I'd be happy to screenshare with you on Discord for a bit.
Thanks for the responses! When I get home ill do that. What I had was on the iPhone 8 screen its linked from the center of the button to the bottom of the image. Constant at 0 and multiplier at 1.4 and it looks in the normal position. Then on iPad it‚Äôs not on the spot (it‚Äôs kind of close but it‚Äôll still not there)
wait, the picture doesn't look "kind of close" then you just probably don't have your small label views inside your image view and your imageview's top left is not at 0,0 the 2 small views have the same constraints but one is the subview of the big view, the other is not: https://imgur.com/a/LChokJq
No i wasn‚Äôt previously using it, I started using the constraints and multiplier it and it got much closer. The picture in the original post was with no constraints. all of the buttons and the image are under the same View. I will check on the image‚Äôs position veing 0,0. 
No i wasn‚Äôt previously using it, I started using the constraints and multiplier it and it got much closer. The picture in the original post was with no constraints. all of the buttons and the image are under the same View. I will check on the image‚Äôs position veing 0,0. 
Swift is almost exclusively used for iOS app development. It might be a bit hard to get a job right out of college even with the certificate but once you break in it's a pretty great job (generally)
"All of this means that an applications compiled using the Swift 5 compiler will crash at runtime if an exclusive access violation is found" Archaic.
In never write code with `&amp;` or `inout` to begin with. What‚Äôs a practical implementation using these constructs?
Quite a few library functions require them, e.g.,: [NSColor's getHue method](https://developer.apple.com/documentation/appkit/nscolor) (and any other method with UnsafeMutablePointer). 
Not every exclusivity violation can be staticly identified at compile time. This is way better than silently continuing to execute with potentially garbage data.
It can be used to mutate data in-place. Like, instead of passing an array into a function, then returning a modified array, you can just modify the input directly. With large enough data, that could be a huge performance win. 
Maybe a stupid question but wouldn‚Äôt a mutating function be more appropriate here ?
I‚Äôm new to Swift, migrating from C++ and C, and I‚Äôm enjoying the language - good documentation without ridiculous feature bulk is a massive plus (and why I‚Äôve always been a fan of C over every other language). However, there is one thing which I am very unhappy with: the lack of declarations, especially as I come from a C background. My favourite thing about C++ is that the classes are so tidy in their header files without their definitions, and in C and C++ functions can be tucked nicely together in groups with relevant comments, which made looking for documentation on my own code really easy, but I can‚Äôt do that in Swift. What was the reason for removing header files? How can you prevent circular dependencies? And how does Swift interact with C, C++, and Obj-C files if they aren‚Äôt `#include`d?
Lots of legacy bullshit needs it, the newer stuff not so much. 
How much knowledge do you have on object orientated programming? As swift is object orientated language you should getting used to this design. But to tell how long it takes to get used to swift depends on each Individuum, check the documentation of swift and ray wanderlich out. Those are great ways to start with swift. As you have experience with js I think you may understand swift fast.
To be fair, thatvs just a poor API, which hasn't been ported away from it s C roots. getHue could just be implemented to return a tuple, instead.
A mutating function on a value (i.e. a struct or enum) is equivalent to a function that takes that value inout, yeah.
I just started a Ray Wanderlich course on Udemy. I have 0 experience with object orientated programming.
Going from dynamic to typed languages can be a learning curve, and vice versa. It will take at most half a year to really grasp the language (Depending on how frequently you practice it). Is Javascript the only language you know?
Agreed, in addition to this, much of the difficulty in learning iOS development (compared to learning a new server language or web framework) is in learning the ecosystem and tools used. Interface builder, auto layout, XCode... this is all stuff that is VERY different than how development is done in the - for example - React/JS-land, or backend software like Python's django. I'm learning iOS myself, coming from Python/Javascript, and Swift is pretty easy to read, I'm beginning to understand *how to do things* in iOS at a basic level, but I have no clue about best patterns/etc. and a lot of that stuff is less clear than it felt in other languages. While you can code views programmatically, I am intentionally learning interface builder and autolayout first, because that is what Apple advocates and a lot of teams do use those tools. It seemed necessary to at least know how to do something in Interface builder before jumping on the programmatic-views-only bandwagon. Last, coming from javascript, you might get annoyed by the constant build/run/wait cycle with iOS development. Fortunately, the static typing also means the IDE is able to detect errors while you are coding, and it can help with auto-complete/etc., but coming from Jetbrains IDE's, XCode feels like it's last-generation software. I'm keeping my hopes up, though. Mobile development might be really cool once I get the hang of it... if I still hate it, well, maybe I'll find a server programming job. &amp;#x200B; &amp;#x200B;
Great comments. To add more to this: Swift is a protocol oriented language by design. Sure they included other paradigms, but abstract classes don't exist, and promotes the protocol paradigm. Starting with UI in interface is good. However, I know some companies might avoid this if they can due to the expenses of using XML resources, bugs, and some things you can only do in code since it is not supported. 
Than focus on this topic as nearly every modern programming language is oop. Check also his website out. I also learned much stuff just from Youtubers. But you have just started, find your own way.
Question: at larger companies, are mobile developers divided into some who work on the more "business logic / under the covers" code and others who are like UI designers with some Interface builder skills? It just feels wild and super time consuming to build shit in IB. Or even NIBs. And most examples that you see on tutorials etc. are extremely elementary and look nothing like what you see in production, popular applications. I'm not sure if I'll ever be able to produce work with the polish of those big applications.
To be honest, I have never worked on a large mobile development team. It has varied from just me to 3 other developers. In my experience, you are expected to be able to implement every aspect of the applications, though teams could decide who gets what task among themselves. I company I talked with recently who does have a large development team have been using Anchorage for auto layout. It simplifies the coding of view anchors by using custom operators. I avoid IB as much as possible. For complex layouts, animations, or designs, I rely on libraries when possible. Hero is a cool one for animations. It took me years of practice to get everything down to a point of feeling comfortable. Of course, there is still much more to grow.
Thank you Steve üôè
super quick. what takes a while is understanding the frameworks
Learn to do what? Write apps? Be an expert? I‚Äôd say you can comfortably create basic apps (that use http, sqlite, mapkit, standard ui etc) after about 3 days of playing around.
Assuming you have the width, height constraint set for each button: For each button you want to set the centerX to the enclosing views rightAnchor, and the centerY to the enclosing views bottom anchor. They should all now be bunched in the bottom right corner Set the multiplier on each constraint to position it relative to the superview. (Multipliers should be a value between 0.0 and 1.0.)
Once you you figure out/ are taught how to lay out views programmatically, you‚Äôll realize that it‚Äôs so easy you wonder why you spent so much time in IB. 
True, but there's lots of "poor APIs" like that which haven't been updated in years. We might have to wait another 5 or 10 years until each one is finally updated or replaced. Exclusive memory access in the language fixes the immediate problem, today, for all of them.
Thanks for the response! Now, the buttons are much closer to the spot. However, their relative position still varies from the original. [https://imgur.com/a/FDJvKSP](https://imgur.com/a/FDJvKSP). My settings, iPhone 8 view, and iPad view are on the link. How can I keep this exact?
Here's what's going on: [https://imgur.com/a/FDJvKSP](https://imgur.com/a/FDJvKSP). The buttons are getting close but not exact! My settings, iPhone 8 view, and iPad view are on the link. How can I get them exactly proportional?
&gt; I can‚Äôt think of a single way in which they‚Äôre similar. Really? Not a one? - It's a single character built-in operator. - When used with its identity value, it fails. - Failure means it aborts the process. There's no recovery possible. - It's trivial to check, but common for people to forget to check it. &gt; Just use optionals correctly. Is your solution to arithmetic issues "Just use numbers correctly"? Or should we also make a Zeroable type to force everybody to be able to guarantee at compile-time that zero conditions are always correctly handled?
Swift is super easy, usually a couple days and you‚Äôll have it. Actually, most languages are super easy. I‚Äôm using JavaScript, C#, Kotlin, Java, and others daily. The hard part is learning the apis you need to get work done. 
I hear you, I really do, and I'm an old-school linux terminal / command-line server programmer type of guy, so I don't doubt that I will prefer doing things that way. But it seems important to know how to do things the new way too.
Indeed. I'm just preempting the inevitable comments about how those library function don't *need* them, they just need to be Swiftified. But yeah, I'm glad to see this feature.
While I don't mind using IB, I'm surprised to hear that constructing views programmatically is easier. Do you know of any specific resources to help with that approach?
I joined the TestFlight and I‚Äôll be giving some feedback once I experiment with it this weekend. Looks like a great concept 
you would have to pass it an instance of Session. 
SessionHelper (actually NotificationManager) consists of all notification-specific methods which have no business being in Session. I am in the process of extracting them from Session, and this one single property is keeping me stuck. Unfortunately timeElapsed cannot be extracted into this helper class, so it has to stay back.
If `SessionHelper` is defined in the same file as `Session`, will specifying the access control for `timeElapsed` as `fileprivate` give you what you need? Alternatively, if you‚Äôre building a module, you can mark it as `internal` if it‚Äôs something that more than just `SessionHelper.calc()` is intended to access. 
&gt; If SessionHelper is defined in the same file as Session, will specifying the access control for timeElapsed as fileprivate give you what you need? I am trying to reduce the size of the class Session. SessionHelper (actually NotificationManager) consists of all notification-specific methods which have no business being in Session. I am in the process of extracting them from Session. So keeping them in the same file won't serve the purpose. &gt; Alternatively, if you‚Äôre building a module, you can mark it as internal if it‚Äôs something that more than just SessionHelper.calc() is intended to access. No, this is code in the main app. So that's not relevant, I guess(?)
Check out Paul Hudson on YouTube and also his [Hacking with Swift](http://www.hackingwithswift.com) site. He has a bunch of free videos and resources for learning the basics of swift. 
If that's what you want then try out some encapsulation [Gist example](https://gist.github.com/Eyesofbanquo/536474ac8387961054326cc2bad200c6) Sorry if it's all over the place but i'm just thinking outloud with that gist on a windows machine so i can't really *check* anything. But basically, create a protocol that `Session` conforms to and that requires properties you want the helper to use. Then have methods on`SessionHelper` that will be able to act on the type `Timeable` (the name of the protocol I used in the gist). By doing that, `SessionHelper` won't care about the session object at all. All it'll care about is a type that has a `timeElapsed` property. If you go that route you could also even drop the name `SessionHelper` for something more generic that is tied more to the `Timeable` type than the `Session` type I will say this: If you have a `SessionHelper` with a static function that manipulates `Session` objects then that's the same exact thing as just having the function on `Session`. I mean logic aside, since `Session` is a reference type, and seemingly has state, it has all it needs to report, update and create state. Having another class do the same thing can be a bit rough, especially if that class can be instantiated, because then you're creating unnecessary side effects. Instead of monitoring just the one `Session` object you'll have to also monitor both the `Session` object and the `SessionHelper` object So to cut down on that potential headache... I'd do something like this: [Calculable gist](https://gist.github.com/Eyesofbanquo/057e6432eb2b4d8457e4843e9e574b70) So basically, all the functionality you were going to give for calculating in SessionHelper...I'd put that in another protocol and have Session conform to it. That way the ability to calculate something becomes an action that the Session can perform on itself. Later on you can use generics in functions to strip that function away if you wanted to handle Session objects without exposing the `calc()` function too.
It's an ongoing project by a friend of mine. He's taking the code of an old italian indie game of the '90s ([Tabboz Simulator](http://www.aabo.it/house/katzate/tabboz/tabboz.htm)), recently released as open source, and porting it step-by-step from Win32 C to Swift.
&gt; most languages are super easy I challenge you to learn C++, then.
&gt; Archaic. Inevitable.
I have used a black spacer view (with proportional width/height to the baseball diamond image, and align top/ leading to baseball diamond image), then set the vertical / horizontal distance of the button to the black spacer view. The result is like this, is this good enough? https://imgur.com/a/ueEv21W
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/btwdbVK.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20egle25a) 
'SessionHelper' is actually named 'NotificationManager', where I have extracted all the user notification code from 'Session'. It needs access to 'timeElapsed' (in 'Session') to calculate when the notifications should be set before actually scheduling them. So the instance of 'NotificationManager' is ties to the instance of 'Session' very closely, and there are no static properties/methods that make sense there. So far I have made a 'weak var session' property in 'NotificationManager' and am accessing 'timeElapsed' using 'session.timeElapsed'. I was looking for a solution that does not expose all of session's methods and properties to 'NotificationManager'.
Well then the answer is simple if that‚Äôs the case. Just use a protocol + encapsulation which goes back to the first gist I showed. Instead of storing a type Session, store the protocol type. Make the protocol conform to to AnyObject first so that you can keep the weak car The protocol would be best of both worlds since tying that manager directly to the session type won‚Äôt scale as well as a protocol type. 
That looks great. Will I need four views? Also, now how do I resize the button to match the size increase of the diamond? I'm going to try it out right now... :)
Yeah you will need four views (one for each buttons). You can set proportional height (button height is proportional to diamond size height) Hope this helps!
Check out Brian Voong‚Äôs Let‚Äôs Build That App series. He‚Äôs got some free videos, but I‚Äôve only gone his paid Instagram one. For some context, I built a fairly complex mileage tracker app using storyboards. I was subsequently hired 
What will the GUI be written in? It is a real shame there is no universal GUI and game library for swift. SpriteKit and UIKit would be nice cross-platform.
Check out Brian Voong‚Äôs Let‚Äôs Build That App series. His approach is what we use at work. He‚Äôs got a lot of free videos, but the only one I‚Äôve done is his paid Instagram tutorial. For some context, I built a fairly complex mileage tracker app using storyboards and the auto layout issues were nauseating at times. I was since hired as an iOS developer and had to learn to do everything programmatically; laying out views is much more straight forward once you get the hang of it. You have to write a bit more code, but at least you gain an understanding of what IB is doing for you. Plus you can get rid of all those IBOutlet/IBActions/segues and other storyboard sorcery.
I personally think it‚Äôs best to know both, but you can get pretty far with storyboards alone. Just know that they‚Äôll probably be a pain point (perhaps only minor) at some point; be it with merge conflicts or storyboard load time as the application grows. 
Thanks for the responses! It worked perfectly for third base, but now I make a new view for SS and every constraint I add (literally any one) says there‚Äôs ambiguous values or something and the constraint views are red. Even if I copy paste the working view from 3B it still says this error for SS when I try and add the constraints again. What am I missing here?? :)
No problem, happy to help. You're nearly there, but not quite. Try this: First Item: 1B.Center Y Relation: Equal Second Item: ~~Superview.Center.Y~~ **Superview.Bottom** (This makes our multiplier calculations more consistent.) Constant: ~~1~~ **0** (This just adds an extra 1pt, I don't think you want this.) Priority: 1000 Multiplier: ~~1.18~~ **0.59** (Set this to 0.0 and the view will be anchored to the top of the superview, set it to 1.0 -- the default -- and it will be positioned at the bottom. 0.59 puts it exactly 59% of the way down.) For the x-axis: First Item: 1B.Center X Relation: Equal Second Item: **Superview.Right** Constant: **0** Priority: 1000 Multiplier: **0.59** (Edit this to position exactly where you'd like.)
What did you call me?
That is why I said ‚Äúmost‚Äù. Along with Objective C. Welll, maybe ObjectiveC isn‚Äôt hard...just ugly.
Objective-C is the weird child from C and Smalltalk. At least it has better predictable behavior than C++.
I haven‚Äôt had predictability issues with C++, aside from templates. But I really didn‚Äôt use that much of the language. That said, I don‚Äôt use all of any language. You learn a working subset and get going.
I know some languages are simply going the route of statically constraining the freedom that exists in allowing every exclusivity violation. That's the forwarding approach, "null pointer exceptions solutions" are from the past century.
When I've read the article title, in fact I thought the matter was about technology like that, and was excited to hear Swift also was moving in that direction. Then when I've actually read it, and learned it was simply a kind of "null pointer exception" thing to deliver a fix to problematic language constructs, my excitement vanished.
Thank you :)
You can sort of mix qt with swift but it's a bit of work https://github.com/msorvig/qt-and-swift/blob/master/README.md
There are a couple GTK projects out there too.
Welcome! Would you mind posting the constraints you have set here? (screenshot is fine)
What kind of data do you need to exchange?
Simple text, as of now. Maybe later raw data
&gt; Now the above code is small and concise and doesn‚Äôt expose any scary operators to junior developers. No, it's not and junior developers won't find it simple nor easy and they will never understand what's going on under the hood. Swift is not a functional language and don't force it to look so, it won't perform as well as functional language anyway.
I also read the article and thought about posting it to ask a question. How can I create that wrapper ? I am only using swift for framework project. I don't what to change everything to objC . However I don't know how to create that wrapper. Maybe someone can guide ? Is it worth or difficult?
I also read the article and thought about posting it to ask a question. How can I create that wrapper ? I am only using swift for framework project. I don't what to change everything to objC . However I don't know how to create that wrapper. Maybe someone can guide ? Is it worth or difficult?
I am currently working on module stability for Swift, so I would say ‚Äúno‚Äù, it‚Äôs probably not worth it.
Oh... What did you did exactly? I can't find any information out there.. it is sad that swift 5 not provides module stability. :(
[https://imgur.com/a/uZzkXUu](https://imgur.com/a/uZzkXUu) In the image there is just a random constraint I've applied. As I said, it works perfectly for 3B. Outside of 3B, I literally can't place any constraint on ANY single object within the whole app. Even on the second scene (it's a two paged app), I can't place constraints on anything.
I got to thinking about your answer, and I'm not convinced it's a poor API. After all, images can be significant in size. As I understand things, if you pass it in, then there's two copies (the original plus the copied into the function call one), then the modified one in the return would be a third copy.
This should be very interesting, I hope It all goes well. 
User has to have a business account. Outside of that, not sure how the API works, but other apps do it. 
The get hue method takes 4 CGFloat pointers. They're the same size as the CGFloat values themselves. There are no images being copied anywhere...
I post on Instagram for my company using Hootsuite, but like someone else said, the Instagram account is set up as a business account. &amp;#x200B;
Thanks this is great. I don't get the hate for this in the other comments though. Functional programming makes things much easier to understand because you only need to learn what a semigroup/monoid/monad is once and then you can reuse that knowledge whenever they come up rather than having to learn whatever ad hoc rules a library writer decided to implement this time. 
Sorry, desperately in need of a nap and forgot that was the routine I gave the example for. You're right, that one would be easier than others. Mostly, the passing with an &amp; functions I've been working with are in NSBitmapImageRep. 
Thank you. I'm mostly going to be working with Cocoa on macOS but hoping that this can be just as useful there.
You can compile in Docker locally in an Ubuntu container, and copy the artifacts over to your VPS. Take a look at the [default Vapor Dockerfile](https://github.com/vapor/api-template/blob/master/web.Dockerfile) to see how to compile and what you need to take over
&gt; Swift is not a functional language And if that isn‚Äôt true: Java is the new COBOL in terms of job security!
Even still. NSBitmapImageRep doesn't store it's data inline. For one, that would mean that the size of each instance would vary depending on the image resolution, which isn't the case. The actual image data is stored in a malloced buffer on the heap.
Ahh, okay, so changing the function's parameters wouldn't make any difference memory-wise, it'd just be neater.
&gt; that listens calls from iOS app. listens **to** calls from an iOS app. How will your MacBook Pro know the IP address of the iOS device? You have push notifications that you can send to a specific app on a specific device. You have Apple's sketchy Multipeer communication. These are several options. 
I've finally got it working. Thanks for the reply! Now, the buttons are resized and repositioned perfectly but now the label on the button isn't scaled up. I tried adding the runtime attribute titleLabel.adjustsFontSizeToFitWidth but it didn't change anything. What can I do to get the font scale with the button? :) 
Which API are you thinking of, that takes a BitmapImageRep by reference? It would be better to just make methods on the class directly.
I meant the methods of that class that take references, not something outside the class that took a bitmap image ref as a reference.
If I understood your question correctly. You have a local server installed on the mac machine. iOS application wants to call a web service to exchange data. If your server and iOS device is in the same network then it should work seamlessly like a typical server-client application.
Example?
What you are doing should work but you still need swift installed on the remote server. Even though you are passing flag to statically link, if I remember correctly, this does not work for Linux. But I have done exactly what you are trying to do so is possible.
[Init, anything with BitmapDataPlanes as a param, etc.](https://developer.apple.com/documentation/appkit/nsbitmapimagerep)
No I do not have a server yet. Just wanted to provide as an option because it is available for other other programming languages
Can you let us know the real world use case you are trying to build? It will help us to think and answer.
Those aren't really well Swifitified, either. The data plane args (in the initializer, and a few of the methods) should really be ported to `Data`. Also, `getCompression(_:factor:)` could also be Swifitified, by making it return the tuple `(NSBitmapImageRep.TIFFCompression, Float)`
There are only a finite number of IEEE-754 (or any fixed-width binary) floating point numbers, in any range.
That deserves some sort of award for worst benchmark ever. Not only does it do a nonsensical operation on constant data and throw away the result after every iteration, it runs them in the same process in adjacently allocated variables. It's easy to swap the doubleArray/floatArray loops, and see that the second one always runs faster. You aren't showing that Double is faster. You're showing that your CPU's cache works. Comment out one or the other, and run only one in process at a time. If your system is anything like mine, you'll discover that Float32 is slightly faster than Float64.
For the distortion, try backing up and using a longer focal length lens. For the glare, a lens hood is a necessity. In a pinch, you can use any old piece of cloth.
The first language I learned that allowed one to return tuples was Ruby, and it sure simplified code (like these methods) that needed to return multiple items. Of course, there‚Äôs always the possibility of doing it badly, too. Given how much change there‚Äôs been in Swift over time, I‚Äôm sure these will be gotten to eventually.
The Instagram app makes itself available via the share action (you need to enable it) so you can use that to send a picture to it. They also have a [custom URL scheme](https://www.instagram.com/developer/mobile-sharing/iphone-hooks/) where you can send them a photo directly. (But again the user will jump over to the Instagram app. I guess you could schedule a local notification in your app to trigger all this but I doubt it could happen without the user being involved.
Check out the [MultipeerConnectivity](https://developer.apple.com/documentation/multipeerconnectivity) framework in Games. It lets you find nearby devices and send messages. It works between iOS, macOS and even tvOS. "In iOS, the framework uses infrastructure Wi-Fi networks, peer-to-peer Wi-Fi, and Bluetooth personal area networks for the underlying transport. In macOS and tvOS, it uses infrastructure Wi-Fi, peer-to-peer Wi-Fi, and Ethernet."
This is not what you do anymore, in my opinion. You change the titleLabel according to the settings of the device, as follows: button.setTitle("Some button title", for: .normal) button.titleLabel?.font = .preferredFont(forTextStyle: .subheadline) button.titleLabel?.adjustsFontForContentSizeCategory = true
Float and Double are different than CGFloat?
This looks awesome, but can someone let me know the advantage of using this when you get most of the functionality for free with UITextView?
If you have root privileges then you can add a swapfile and swap to disk when physical memory is exhausted instead of it erroring out. If the storage medium is SSD it shouldn‚Äôt be too slow.
The Style thing is interesting but looks more like syntax sugar for me. I think I've seen something like this in RxSwift - view controllers there build using . for concatenation. 
RTFM
For sure, I'm nowhere near a senior developer. But this sounds all kinds of wrong to me. You can employ functional principles and patterns in Swift (or any language) which then lend it the virtues of the functional approach. After learning a bit of Clojure I found myself applying (or trying to apply) functional disciplines in whichever language I used. If you've taught me anything, it's that I'm not such a junior developer, since I understood this article with a little bit of patience and will keep it in mind for my next project.
There's nothing wrong with having to mark functions as mutating.
No, but too much of those and I usually begin to think about making it a class.
UIActionSheet by default will be scrollable if all added action items takes up more than maximum screen height. You can try it by adding like 10 items or more and test it on iPhone Simulator with shorter screen height like iPhone 4s.
I think OP has swift installed, however his VPS is not powerfull enough to build the project, but it is powerful enough to run it üôÇ
Yeah... but how to shrink the height without shrinking all the text and stuff inside? &amp;#x200B;
Short answer: not (yet) with Swift. Longer answer: yes, with a hybrid framework like Ionic + Capacitor (I think Flutter now too). I‚Äôm pretty sure they allow for a shared codebase between your website and your mobile app, and the website code could be made into a desktop app through electron. This has nothing to do with Swift though and you‚Äôll probably get a better response in any of the subreddits for cross-platform (app)development.
Apple is working on such a system which will probably be released to developers at WWDC in June. If you can wait, I would see what Apple's official solution is.
You're probably doing something wrong if you're using the actionsheet for 15 items, see https://developer.apple.com/design/human-interface-guidelines/ios/views/action-sheets/
Oh ok, thanks!
UI code for the time being can not be reused between Mac and iOS. Marzipan is an upcoming technology that will bridge this gap. All other logic (network, data models, business logic) can be reused and you can have a single Xcode project with multiple targets to accomplish this. You would have separate iOS and Mac targets. The common code would apply to both targets and the UI specific code would be just to the respective target. If you look up protocol orientated programming talks from previous WWDCs, it can give you a good path towards this goal. Protocol orientated programming has many other benefits too so it‚Äôd be a good subject to learn. 
You could try something like Flutter. 
OP said that it could not find swift foundation library when he ports it to the server and tries to execute it. If it was compiled on one Linux machine and then ported to another Linux machine which has the same version of swift installed, should work. Based on OPs error, I think they do not have swift installed on their remote machine and are and building an executable which includes the standard libraries for Linux is not supported the last time I checked.
https://imgur.com/8KEiJxj Here you can see I've actually figured out the resizing based on width. Now however, it has reached the proper font size but is now offset on the top (the enclosing button is a square, 25 x 25). What should i do about this?
Flutter doesn't have a desktop component right now
Right. Use a segue to a simple UITableView(Controller) instead.
takes too much time? is your project using storyboards with dozens of view controllers in one storyboard file?
No, it isn't. It happens even if it's a brand new project. Also I tried reinstalling xcode and it's the same.
For each action sheet items UIActionSheet (or UIAlertController with .actionSheet type) will manage it sizing automatically. If you want to fully customize the behavior you might need to create it yourself or find some custom action sheet open source projects on GitHub.
First of all your concern is vary vague. Please define " it takes too much time" , what is too much time? 
"..takes too much to open a workspace..". What I meant by that, as I said, when you open a workspace (It doesn't matter if it's a new one you just created), xcode get freeze and then after long time, it opens the workspace.
Under options is a button to remove derived data. You might try to do that. No idea if it would help, but worth a shot. (That data is automatically rebuilt)
In Interface Builder, you should be able to add a scale for regular sized devices, and larger. This should fix the problem, and add an aspect of Auto Layout to the button elements you are resizing.
The buttons all have aspect ratio constraints. What do you mean adding a scale for devices? 
You can tweak your constraints: * First Item: 1B.Center Y * Relation: Equal * Second Item: Superview.Center.Y Superview.Bottom (This makes our multiplier calculations more consistent.) * Constant: 1 0 (This just adds an extra 1pt, I don't think you want this.) * Priority: 1000 * Multiplier: 1.18 0.59 (Set this to 0.0 and the view will be anchored to the top of the superview, set it to 1.0 -- the default -- and it will be positioned at the bottom. 0.59 puts it exactly 59% of the way down.) For the x-axis: * First Item: 1B.Center X * Relation: Equal * Second Item: Superview.Right (Edit this to position exactly where you'd like.) * Constant: 0 * Priority: 1000 * Multiplier: 0.59 (Edit this to position exactly where you'd like.)
Did it act this way from the start? Or has it gotten worse?
Hi Ben1182367! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because ‚Äì generally speaking ‚Äì compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/arp1ys/making_multiple_levels_with_a_new_viewcontroller/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Your computer is more than capable so that should not be an issue. However, I'm running the latest Xcode-beta2 currently without any issues. If your system is freezing then there is probably something else conflicting. Check what else is running at the same time and turn off to see if anything changes. I using a 2013 iMac with 16gb of ram, but I am using an 1 TB SSD and it's lightning fast! I will never go back to a traditional hard drive ever again! Before I switched it took forever to load and to do builds etc. 
Thank you for recommending my work!
Thank you for taking the time to make so many resources available for free. I‚Äôve got my eye on a couple of books come payday. 
But it really isn‚Äôt possible to do this statically, just as it‚Äôs not possible to statically type programs to guarantee correctness. That‚Äôs just a fact. Sure, you can take the conservative approach, but that doesn‚Äôt come without compromises.
I know. IMO, constrains, with some benefits and compromises, is the way forward.
One problem is that a non-controlled crash can sometimes be exploitable. You can see this as runtime safety, which there are other aspects of in other areas as well.
What we get here is the less worse after undefined behavior, is it better, yeah, better than nothing.
I think it‚Äôs a suitable compromise, but of course everyone‚Äôs MMV :)
If you change completion handler to: completion: @escaping (Post?, Error?) Then you can call completion with error, or result.
Then I've to do this in every API call in ViewController. Messy? ObjectService().getAllObjects { response, error in guard let objects = response else { MyError.showError(err: error) return } // handle the retrieved data } &amp;#x200B;
You didn‚Äôt say that in your subject line. Frankly brushing up on your communications skills would really benefit your programming career. 
Feel free to DM me if you‚Äôd like some help. Happy to chat some time about any questions you have.
Could you try adjusting the content inset of the button? Are you using auto layout ?
I‚Äôve figured it out, I made an equation that takes in the height of the screen and outputs the padding required which yes I put in the content inset.
That‚Äôs often the problem with Reddit communities - people are often too immature to answer queries, and all too often sit on their high horse instead of helping someone else - i would recommend going to conferences and irl functions if you really want help, as people there tend to be a lot more professional
As a noob, I agree. This forum can be pretty demoralizing. I don't understand the downvotes, it's like getting called out for using this sub for its intended purpose. There's no explanation, no comments - just a silent "fuck you" from some anonymous assholes. Try Stack Overflow. People on there aren't much friendlier but you're more likely to get the help you need, in my experience as long as you detail a specific issue you need help with that hasn't been covered already.
Hey, thanks, man. It's funny, I'd love to DM you, but I don't know how. Perhaps this is my whole problem? Did you learn how to DM by reading the reddit instructions? I'm poking around on the interface, and I don't see anything that looks like a direct message mechanism. I see a chat thing, so maybe you meant we could start a chat? I'm not an idiot, I promise. But where did you learn about DM? Does it really mean direct message, or does it mean a chat room? How much reading did you have to do to learn your way around reddit? Did you google "DM reddit" or something? I don't mean to sound like a lunatic, but it seems to me that I'm not in on the joke here.
Thanks man, I appreciate it. Yeah, SO is great, but my current set of questions aren't the kind you ask there. Questions like, I'm adding a logfile to my multithreaded app, and I want to sync access to it. I've been using semaphores to sync my threads so far, but I just saw a WWDC vid where the speaker said, don't do that. Instead, use the Dispatch mechanism itself. That's great, because I'm already using it for my multiple threads. So I'm reading the doc on how to sync my threads, and I discover this thing called DispatchIO, and I think, do I need this? I'm doing file I/O, so maybe I need this. And that's where I get into trouble. There's not a shred of useful documentation on DispatchIO. What's there uses terminology that it doesn't define, and there's no overview of when and why you'd use it. Not really a StackOverflow question. Plus, they have a specific rule against "asking for outside resources". They'd pummel me. Thanks for your sympathy. Peace and luck
Takes too much what? Memory? Clicks? Stress? Cycles?
Other &gt; Send message
I'm really confused as to what you're insinuating with the "Making __ Great Again" title. I can't think of any implication that isn't terrible.
I heard it said recently to grow in any skill do this: 1. Try to figure it out yourself, because there will be times there won‚Äôt be anyone around to help and you must build that part of problem solving and self-reliance. If needed... 2. Find a book, video, forum post, whatever (i.e. Google it) because someone else is likely to have already encountered the same problem or question. Still stumped? 3. Then ask for help. Why that order exactly? Because people LIKE to help people who have tried to help themself first. All the sincerity in the world will go to waste if you don‚Äôt try 1 and 2 first. It almost always comes across as lazy, even if it‚Äôs not. Redditors are a very, very helpful bunch. But usually not to ‚Äúdumb questions‚Äù (which are just the same question asked 100 times and easily found by searching). I hope that helps clear up this subs reputation (and others). That said, I also recommend any Udemy Swift course that has their own Discord/Slack channel. Real-time questions amongst people with similar skill sets are the norm, and you‚Äôll likely enjoy the community. Best of luck!
This place turned into r/iOSProgramming lite long ago. It's only incidentally about Swift these days. Try freenode. Those guys are nothing if not fanatical about staying on topic.
Don't feel like you have to use a feature or pattern because someone wrote that you should. Classes sound perfectly fine for your case. However, protocols and extensions are very cool and worth experimenting with. Maybe start learning them as part of another project and go with what you know on this one.
this looks really cool, i‚Äôve thought about something similar to this before. it would be really cool to make this work with n dimensional tensors, you could probably add it to the math library. i‚Äôve made a few tensor libraries in c++ for some of my math classes in the past, i could probably contribute if you‚Äôre interested in going this path.
And will your framework get approved for the App Store usage? Apple is very strict on private frameworks. 
What sorts of restrictions do they have?
I‚Äôd love contributions! In fact, it‚Äôs the math part I‚Äôm struggling on,
Basically private frameworks won‚Äôt get approved. Guilherme Rambo Animoji used a private Spotify framework and he wasnt able to push it to the App Store. 
Great! Thanks for the response.
you sound like you're confused about something most apps use external libraries ("private frameworks" isn't the right word for this). that's like the whole reason for the existence of things like cocoapods. there's no problem with using code you didn't write but have a license for in your app. most common use of "private frameworks" in apple development is system frameworks. apple only exposes so many of their system functions to the user publicly, you can still use the ones which aren't public in your code if you can find them (a lot of them are publicly documented by 3rd parties, or available for sale from 3rd parties). only problem is, if you get caught then they won't let it on the app store. a lot of services have "private" api functions which they don't want 3rd party developers using, i'm sure spotify is one of them. in your case, the developer might've not had the license for the spotify framework he used and apple caught it and denied the app. has nothing to do with using an open source gpl licensed library in your app. anyone can submit an app using this no problem.
if you have a discord and want to discuss, pm me. i'm pretty interested in this.
Thanks for the feedback. I will adjust accordingly
With the limited knowledge behind the implantation did these classes/protocol's it looks correct. I have to assume `TTObject` is assigned somewhere else, otherwise it'll crash on access. The `as TTSDKDelegate` is redundant though. 
Thank you! I will remove that *as TTSDKDelegate.*
He's probably working with illiterate backend developers, so using the prod server would result in constant failures.
I think I find the reason why nobody wants to help you; it's these damned walls of text that spend 200 words to ask what only need five: "how do I do that?"
Hey, like I said, I don't fit in here. But let's see if I can shorten it for you: where can I go where people don't act like assholes when my questions are too long for their attention span?
No, it doesn't help this sub's reputation at all. You're making way too many assumptions, just like the others who say that Swift is not for me. Why would you assume that I didn't try to figure it out myself? Why would you assume that I didn't even Google it? Nothing I said suggested anything like that. I'm not asking the same questions everyone else is asking. No, you haven't help the sub's reputation; you've simply illuminated a big part of the problem. Never mind, just tell me where I can go, like I said, where people don't make assumptions like yours.
Nowhere. You're a programmer. Nobody wants your life story, they want the details. You're asking for peoples' time with technical issues, so don't waste it with waffle. Be concise and precise.
&gt; Any advice appreciated. Downvotes and condescension too, why not.
You guys all assume the worst. Seriously? People ignore my questions because they're too long? Bullshit. How many questions of mine have you read? I'm guessing exactly one. Forget it. I don't get you guys, you're not like any other forum I've ever visited. I've never met people who are so ready to assume the worst.
Oh, and now you're upset about my self pity? Who are you, a life coach? Look, you've said your "helpful" piece, now just piss off, please.
Apple‚Äôs horrid Documentation with Swift? I used their documentation to learn Swift in a week. 
Wait. In one sentence, I said Apple's doc is bad. In the **SENTENCE JUST BEFORE THAT** I said I'm not having any trouble with Swift. I don't understand why you would even post that comment. Like I said, I don't fit in here. You people make no sense to me. Can't even be bothered to read what I said. And just a moment ago, another guy was complaining that I make my questions too long. You didn't even make it past the hundredth word.
No wonder people don‚Äôt help you. Look at the attitude you have. You could‚Äôve simply just said the first 2 sentences in your comment and that‚Äôs it and I would accepted the mistake I made. Instead you act like a dick and cry about it further as if you‚Äôre being oppressed. 
&gt; Any advice appreciated. Downvotes and condescension too, why not. I gave you advice. It came with a little bit of vinegar, but it was there. It's yours to take. You won't take it. Again, I see why nobody wants to help you.
Awesome ‚Äì thanks for your support!
Holy shit dude I‚Äôve never seen any beginner act like this. I see the problem. You don‚Äôt bother helping yourself and instead expect everyone around you to give you all the answers and then you bitch about it and act like we‚Äôre assholes. Instead of just saying, ‚Äúyou‚Äôre right. Let me figure out how to message you.‚Äù You act like a dick AGAIN.
Noobs also tend to ask shitty questions and half the time don‚Äôt even post their code. And this isn‚Äôt a subreddit for Swift support or iOS. The sidebar doesn‚Äôt even say it is. So why get mad someone doesn‚Äôt get the actual help they want from a subreddit not dedicated for it. 
&gt; Any advice appreciated. Downvotes and condescension too, why not. You say we have a problem and you‚Äôre the straight up liar.
Don‚Äôt worry man, I‚Äôm not angry. And yes, understood, however you should be able to query here (and other places) and get decent answers. Sometimes people can be stupid like that, but helping them is better than skiving them off as ‚Äúnoobs‚Äù. My response wasnt referring specifically to this sub as to other subs that are supposed to help.
Too many tendies
Hi, &amp;#x200B; I'm near to complete functionality of our cooking app (you can check it on TestFlight [https://testflight.apple.com/join/s80Sds3I](https://testflight.apple.com/join/s80Sds3I)) If you want to take a look on it open "Macaroni and Cheese" recipe (as is completed and give best look at app) Be warned about grammar errors :) We will find person from english speaking area to help us. Norwegian, Serbian, Croatian will also be supported. Few screenshots: [http://www.becook.com/uploads/misc/becook1.png](http://www.becook.com/uploads/misc/becook1.png) [http://www.becook.com/uploads/misc/becook2.png](http://www.becook.com/uploads/misc/becook2.png) &amp;#x200B; I have quite a few ideas and if you are cooking lover, I will like to hear suggestions. We will release app for free.
You're not creating a `TTLock` object in the code you show. You'd do that with `TTLock()`. The instruction also says that the `TTLock` object should conform to the `TTSDKDelegate` protocol - your code doesn't do that. (You have a ViewController class that conforms to `TTSDKDelegate`, but that doesn't mean that the `TTLock` object conforms to that protocol). To accomplish that, you'd either have to extend `TTLock` to conform to the protocol (`extension TTLock: TTSDKDelegate { /* your code */ }`), or create a subclass of `TTLock` that conforms to the protocol. I can't judge how much sense any of that makes though. PS. Look into how to format code on reddit, it makes it easier to help you for everyone.
"The current default Swift library for machine learning (CoreML) is not very intuitive and does not give the user much control over the actual training of the network." &amp;#x200B; CoreML does not have **any** functionality for training of models (not necessarily neural networks), by design.
&gt; Noobs also tend to ask shitty questions and half the time don‚Äôt even post their code Well, yeah. That‚Äôs part of being a noob. I have to say your attitude in this thread is a good example of why this sub is toxic to people starting out. 
One way to do this is with Core Graphics. 
I think the problem is that the questions you ask here have already been asked a thousand times. For example, half of your questions are about how to start learning to use LLDB with Swift and Xcode. Googling "lldb swift" gives me (on the first page) 3 WWDC videos about exactly this topic (and they're really good and you should watch them if you're still interested) plus a tonne of beginner-oriented articles, too. You have to remember the problem with being a beginner is that you can't actually add much to a programming forum, so people are much less willing to help you unless you can show that you can help yourself. It also doesn't help that your titles don't get right to the point (e.g. "No, really, where did you learn how to use LLDB?"). You should try to be more concise.
Yes! This is one of the issues I have with CoreML
Ok, so performSegue is a method of the UIViewController class. You can only use it in the context of a view controller. Your AppDelegate is not meant to perform API calls like what you're doing here. If you want to have a class that deals with these calls, you need to create, say a Manager class, send the data for the login and return the result to the view controller, so it can perform the action if it was a success login. 
Yes, I am using core graphics, but the draw method is not even getting called....
Don't do it from the AppDelegate, that's horrible, also your AppDelegate isn't a view controller, there's no way it can perform a segue because it's not connected to anything, the only possible way would be to summon the window of sorts and do a nasty transition. There's a func if im not mistaken that you can call from anywhere that goes along the lines of Google.isLoggedIn() or something like that, do that validation on the ViewController that corresponds.
by "draw method" do you mean drawrect? If so, you can trigger that with setNeedsDisplay
Just check the calendar to check if it's the last date of the month and fire your local notification.
&gt; This is not a Swift/iOS support subreddit you know. It's also not not a Swift support subreddit either. 
&gt; Noobs also tend to ask shitty questions and half the time don‚Äôt even post their code. Noobs don't know if their questions are shitty or not. And the subreddit mods don't have anything set up to encourage noobs to do things like post the code they have questions about. The only thing they offer is a popup asking people to check the FAQ before submitting, but the FAQ is essentially empty and worthless.
What courses have you taken and how do you like the Stanford CS 193P course?
Bullshit. You may have used their documentation to learn the surface of Swift in a week, you want fun? Try looking for documentation on using, say, CommonCrypto (this was even more fun back before they added it as a module in Swift 4.2. And if you want super fun, try looking for information on their implementation of RC2, which is not a full implementation and in fact behaves differently from the RFC's expected behavior, but you won't know that unless you actually dive into the damn source code. Shit, try finding a concise example of how to go from a Character to an ASCII value in Swift *in the Apple docs*. Or even better the ASCII value of the third character of "Hello world". It's easy once you know how, and Stack Overflow has a bunch of answers, but it's not clear from just looking at Apple's docs. And I get (mostly) why they don't put stuff like that in there, but to people new to Swift (especially new to Swift *and* to Unicode) that stuff is a damn mystery.
&gt;I don't mean to offend anyone. I just want to write some damned code. Any advice appreciated. Downvotes and condescension too, why not. Then go write it. For once I'd like to find a programming subreddit that isn't full of noobs asking for help with "hello world", and instead was dedicated to news/engaging content about the language. 
So do everything from the view controller
Yep, There's a GoogleSomethingDelegate your view controller can inherit from and get that logged in bool to do the proper segue.
You're right that Core ML is aimed at inference only today, but it's pretty clear they're going to enable training with the framework in the near future. There are already (undocumented) functions for computing loss and gradient steps. I believe these are being used in Create ML.
It's good that this exists. In itself it doesn't impact Swift, but it's clear what the "hot points" for the 5.1 release are that might have impact. Anything area that isn't listed with an exceptional merge schedule will likely be too risky to consider. Anything that doesn't impact Swift on an Apple platform will likely be unnecessarily restrictive or risky to be rushed into 5.1. Exceptions will need an exceptionally high value with low risk and, even then, will have a clear 28 day deadline.
The title of your question and the contents of the question contradict each other. You say you want help with Swift and Xcode. But you say you're not having any trouble with Swift. You also say you don't do UI and you're not writing iOS apps. But Xcode is used for doing UI and creating iOS and Mac apps. If you know Swift, don't do UI, and don't develop iOS apps, I don't see why you need a place for help with Swift and Xcode. If you hate Reddit, other places to ask questions about Swift and Xcode include the following: * [Stack Overflow](https://stackoverflow.com) * [Apple's developer forums](https://forums.developer.apple.com/welcome) * [MacRumors forums](https://forums.macrumors.com) &amp;#x200B;
&gt;https://itunes.apple.com/us/app/patterns-improve-yourself/id1450907972?mt=8 Looks pretty nice! You can mark off squares in the future though. That's weird.
An app called Flik Thru to help you quickly find good movies to watch: [https://itunes.apple.com/us/app/flik-thru/id1451357524?mt=8](https://itunes.apple.com/us/app/flik-thru/id1451357524?mt=8).
Yeah good point! I was thinking maybe future ones could give you notifications or something? I‚Äôll think about it
Very nice examples. You can find these abstractions in Bow, a library for functional programming in Swift that I have been developing. https://github.com/bow-swift/bow We are still working on docs, but it is quite close to Arrow for Kotlin, in case you have heard of it before.
I'm pretty sure StackOverflow is what you're looking for. As for the purpose of this sub, it's not to help other programmers with Swift it's for people who already know Swift to discuss the language and any news around it. I hope that clears up any confusion.
Frames are not set properly in viewDidLoad.
Impactor 
You can export an ipa using archive in xcode then sideload using impactor. Export IPA: https://stackoverflow.com/questions/25970741/how-to-create-ipa-in-xcode-6 Impactor: http://www.cydiaimpactor.com
Was anyone else not expecting module stability until Swift 6 at the earliest? Impressed by this timeline. We could have full binary stability in the first half of 2019. 
I‚Äôm taking the Udemy course by London Brew App. My goal is to make two apps: one for our local church and the other a productivity app I‚Äôve been wanting to make. So far, the course has been really good! It seems like problem solving is one of the top skills someone needs to be comfortable with in order to make it as a programmer lol
I mean literally the [https://developer.apple.com/documentation/appkit/nsview/1483686-draw](https://developer.apple.com/documentation/appkit/nsview/1483686-draw) which I think is renamed from \`drawRect\` in Obj-C [https://developer.apple.com/documentation/appkit/nsview/1483686-drawrect?language=objc](https://developer.apple.com/documentation/appkit/nsview/1483686-drawrect?language=objc) &amp;#x200B; I did try to call \`setNeedsDisplay\` &amp;#x200B; I'm starting to think the problem is the custom \`NSView\` I am adding is not a subview of the \`NSViewController\`. It seems to be from the hierarchy in the storyboard. But, maybe I am missing some step? Thanks for you suggestions. 
if i‚Äôm not wrong, CreateML is to be used for training models to be used with CoreML, and is available to use right now. 
&gt; protocol's protocols* You don't add an apostrophe to make a plural. 
hey there, first of all, we have r/spritekit :) For some reason Apple discourages us to subclass the nodes, so you could just declare a bezierPath then init a shapeNode with path: bezierParth.cgPath
In one of your answers you say you‚Äôre a C++ snob. Then you post 2 questions on how to use lldb and xcode. You use them like you do for C++. If you knew how to use gdb from the command line, or any visual debugger, it‚Äôs all the same. XCode has some quirks like linking and choosing the build type, but nothing out of the ordinary, and nothing that‚Äôs not a google search away! Also your questions are too broad. Ask how to do a specific thing and you‚Äôll likely get an answer. Write a broad question with a wall of text underneath and you‚Äôll likely be ignored. Users are more than happy to help if you post code, it‚Äôs easy to point where the problem is, not many will volunteer to write the code for you. 
When can I see async/await? Swift6?
Need help to model the below with Swift I would like to build an array of tuple, Array&lt;Tuple&gt;, which has three elements each a) first element is a String field b) second element is either an Array&lt;SomeElement&gt;, or AnyRealmCollection&lt;SomeObject&gt;, c) third element is a closure that acts upon SomeElement or SomeObject As an example, Array&lt;Tuple&gt; can capture: [("section1", AnyRealmCollection&lt;Car&gt;, {}), ("section2", Array&lt;Driver&gt;, {}, ("section3", AnyRealmCollection&lt;Passenger&gt;, {} ] Any advise?
ABI &amp; module stability are the two features the Swift team has been prioritizing, so theoretically we could see async/await any time after 5.1. But that‚Äôs a pretty big feature so yeah, probably Swift 6 at the earliest. 
Funny thing is that all those communities have a large intersection, and the guy won‚Äôt go far with that kind of attitude üòï
https://www.raywenderlich.com/385-sqlite-with-swift-tutorial-getting-started
Does this mean we can create a framework in Swift 5.1 and it will be compatible with all apps using older swift versions or ObjC? Or will the framework only be compatible with all swift versions which will come in the future after 5?
Might I suggest trying out a good book instead of a Udemy course? I found the *Big Nerd Ranch Swift Programming* book to be an absolute godsend. Before that, I watched Ray Wenderlich videos and took an introductory course by Udacity and watched other videos, none of which did much to help me attain a deeper understanding of Swift. But, this book explained so many things in such detail that I feel I would never have learned that from a thousand video tutorials. I have found that books teach you a lot more and a lot better than video courses ever would. With videos, because you're simply copying someone else's code and just being spoonfed throughout, the ability to write your own code and come up with your own unique solutions to different problems is severely affected. Apple's *Intro to App Development with Swift* is a terrific book, as well. I just recently finished it and learned so much from it. Next week, I'll be starting with *Big Nerd Ranch iOS Programming* book. 
I did about 50% of it and didn't like it that much. They rush through each subject and for someone unfamiliar with it that's just not a good way to learn.
Using ! is just stating an invariant, which says, that if this value is nil by that moment of execution, the programmer fucked up, by either making a wrong assumption or writing a program, which is in an incorrect state. There is nothing wrong about it. And hiding it in some unwrapping sugar will just cover problem, that needs to be solved, and that causes your invariant to be violated. I hate that kind of articles, because they reveal lack of in-depth understanding of tools you are given.
Can‚Äôt stand how he says button. Lol
Best way to learn is by doing. Just start building an app and learn along the way. 
You‚Äôre creating a path, but not applying it to the node. 
I can not strongly recommend enough Stanford‚Äôs free iOS development course. It‚Äôll get you a better foundation in Swift and fundamental concepts in iOS more than any udemy course will.
Well try putting the NSView as a subview of your ViewController and see if ti works. I have a macOS app in objective C that I was messing around with that works as described above.
Will this bypass the 7-day certificate expiration if I don‚Äôt have a developer account?
Only future versions. I don‚Äôt know how this will interact with Objective-C
Pretty sure you can find the same course on YouTube but if you can‚Äôt there are other YouTube courses that are free and just ad good
I did both of these and more over a year ago when Swift 4.0 came out. Ray W gives access to a bonus pack which is huge. So you get a LOT more than just the tutorial. The networking part was worth the price all by itself. Others might compare this to Stanford, but I've done a number of those and have never seen it go in depth into networking or nearly as many topics. Not to say it doesn't have value, but get much more depth with Ray W. I don't know how much overlap there is with Angela Yu, but just having the additional projects and different topics is worth it. Last I checked, these courses are about $10 each. Hard to argue with something's value when it's about what you'd spend on a cheeseburger and fries.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/androiddev] [Does anybody know a good video hosting\/streaming service for mobile apps?](https://www.reddit.com/r/androiddev/comments/asb5je/does_anybody_know_a_good_video_hostingstreaming/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Why not just purchase the ray wenderlich courses from [https://www.raywenderlich.com/](https://www.raywenderlich.com/) itself?
Agreed. Also you can try this our before hand: https://www.raywenderlich.com/385-sqlite-with-swift-tutorial-getting-started
If you want to learn ALL of AVFoundation...at some point you'll want to start reading Apple's documentation on how to use it. Ray Wenderlich and Angela Yu's courses are supposed to be guides so you can get comfortable with Swift and Xcode. It's not meant to teach you everything under the sun, especially since a new version of Swift and Xcode comes out every year. To be an iOS dev, you just have to start working on your own, using Stack Overflow, Google your errors and use other people's tutorials as guiding points to install something specific you want to use. &amp;#x200B; With all that being said, I think both courses are excellent. The tutorials don't overlap much but most importantly they both teach fundamentals, which is all you need to start your own app. RW has extra tutorials for specific things, like AR, animation, that AY doesn't cover.
No, that's enforced by apple no matter what. On a jailbroken device though you can use cydia extender.
How about this solution? [https://stackoverflow.com/questions/38936624/how-to-notify-a-notification-message-at-every-month-end-day](https://stackoverflow.com/questions/38936624/how-to-notify-a-notification-message-at-every-month-end-day)
Versioning is based on how big are the changes, not how long they take. So apparently module stability isn't that big of a change to deserve a major version bump.
Look at the json you are getting from the call. There is probably a top level object containing your array.
Great, thanks for that insight!
Because of the price? Udemy is like 12 euros for life and his site is 12 euros / month...
Yeah, I'm dabbling in that one, too. I found that actually paying for Yu's course (even though is was really cheap from Udemy, like 10$) made me far more willing to dedicate the time to it. But now that I'm more familiar, the Standford course is def something I'm going to follow.
This really doesn't *seem* to be what I'm looking for (though I might be mistaken). It seems to be about using sqlite inside of iOS and what I really want to a tutorial purely about using a separate, existing, populated sqlite db by somehow getting it added to the Xcode project as an asset I gusss and and then being able to access and query it. I mean, it's so damn easy (obviously) to add an image to a project and set the image to fill a UIImageView. I would be a dream for their to be a *UISqliteObject* and in the inspector I could jsut set it to use an sqlite db added as an asset. But, clearly it doesn't work this way. So - "how does that work?", is my holy grail
hehe. *noted*
Haven't done such a thing, but you can at least read up on the documentation provided by AWS for their VoD implementation: [https://aws.amazon.com/solutions/video-on-demand-on-aws/](https://aws.amazon.com/solutions/video-on-demand-on-aws/) to understand the scope of the task. Good luck.
&gt; I realise that the issue is that I'm trying to decode an array but my file is a dictionary and that in order to achieve that the suggested method was that I need the structure, keyDecodingStrategy and convertFromSnakeCase. No, that solves a different problem. If you look at your JSON, you'll see that the key names are things like `status_verbose` whereas the idiomatic Swift code would to use property names like `statusVerbose`. `convertFromSnakeCase` fixes that problem for you. The problem you have now is that you are trying to decode an array of products, but the JSON you are loading is not an array of products. It looks like you've got a single product. So your code is expecting a JSON array ‚Äì JSON beginning with `[` and ending with `]` (presumably containing multiple product objects), but you are giving it a single object ‚Äì JSON beginning with `{` and ending with `}`, which would have a series of string keys along with their values. So if you are intending to load an array of products, then you need to use the URL to a resource containing multiple products. Or if you are intending to load a single product, then you need to stop trying to decode an array of products: self.products = try decoder.decode(Product.self, from: json!) (Note the change from `[Product].self`, which is a type defining an array of products to `Product.self`, which is the type defining a single product.) You then have a further problem ‚Äì your struct doesn't seem to correspond to the product fields at all. The fields in your struct need to match the fields in the JSON. From what I can see, they don't. Perhaps the JSON that contains a list of products is different and this won't be a problem once you use the correct URL. 
Because they're a shady company that's known to lift tutorials from other websites.
Thanks for asking this. I had the same question and the sidebar links don‚Äôt really show when you‚Äôre browsing on mobile. Plus it‚Äôs nice to hear different people‚Äôs opinions on different resources - everyone learns differently. 
this looks promising! I am gonna try it out.
AFAIK this is not possible. Also, you should point out to the client that this is not the right way to go about this. There are many places where Apple have said that restricting orientation is not a best practice, and IMO this is especially heinous to do for an iPad app. &gt;[You know, we no longer want you to ever think about orientation. In fact, I am going to tell you if, when you are designing your app, you have the thought in your head that thinks about portrait or landscape or you have that conversation with your designer where the word "portrait" or "landscape" comes out, you are already thinking about it wrong.](https://developer.apple.com/videos/play/wwdc2015/231/) &amp;#x200B; &gt;[If possible, support both portrait and landscape orientations. People prefer to use apps in different orientations, so it‚Äôs best when you can fulfill that expectation.](https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/adaptivity-and-layout/) &amp;#x200B; &gt;[Starting in iOS 8, you should employ the UITraitCollection and UITraitEnvironment APIs, and size class properties as used in those APIs, instead of using UIInterfaceOrientation constants or otherwise writing your app in terms of interface orientation.](https://developer.apple.com/documentation/uikit/uiinterfaceorientationmask) &amp;#x200B;
You can convert your dates to Unix timestamps (which are just numbers) calculate average of them and the create new Date with this average as Unix timestamp. You can get Unix timestamp from `timeIntervalSince1970` property of Date
and the last time performance actually mattered to me was about 5 LOC over a decade ago on a 40MHz ARM chip. Nowadays I care about safe, readable, flexible and concise in roughly that order. This scores pretty well on those metrics.
All dates use EPOCH time ‚Äòunder the hood‚Äô. This being the TimeInterval value of the property ‚ÄòtimeIntervalSince1970‚Äô. This is how many seconds have passed since the beginning of 1970. If you use this value, average them how you wish, then just plug your result back into a Date object with the relevant init method Date(withTimeIntervalSince1970:). Voila, you have your average date.
Buckets. Take every time and round off to a value like every 5 minutes, every 10 minutes, etc. Keep an array of the whole time period, once for every "bucket" or division. When you come across a time that fits into a bucket then add one to the count of the bucket. The bucket with the highest number is the typical time.
"Typical" time in that sense would be mode, not mean. Or maybe median rather than mean. It'd be easier if you used buckets as /u/thisischemistry suggested.
Thank you! Did this and worked perfect. I appreciate it
The problem with this method (from my educated guess) is that I don't have that many events, say 20 in the last 30 days. In this sense I will not have a large number of events per bucket and thus will result in poor result. Just my take, maybe you could argue differently?
Thank you, used this method and worked great
Then mean is even more useless. Let's say you have ten events: [23:59, 8:42, 10:12, 15:47, 20:10, ‚Ä¶] Have buckets of three- or four-hour blocks. See which one is most common or in the middle bucket. Let's say you use eight buckets a day, and your times reduce to: [1, 1, 3, 5, 2, 4, 4, 3] (that's 23 numbers over 30 days). So the middle (11th element) is bucket 4, which would represent noon-3 pm.
I have been working on a Cocoapod to allow iOS Devs to easily create a parallax effect on a UICollectionViewCell. With the CocoaPods you will be able to set the speed of the parallaxOffset, constraints of the image to the cell and inherit the cell properties to create your own custom UICollectionvVewCell. &amp;#x200B; Once I am done with creating this CocoaPod, I will create a demo of how to use it and go through the functionality more in-depth. I also want to create a simple tutorial of creating a UICollectionView similar to the one found on the Soundcloud app. &amp;#x200B; Is there anything you guys would like to see in the CocoaPod? Thanks y'all!
Source? I've never heard this.
I can‚Äôt find a Ray Wenderlich iOS 12 course on Udemy. I have his iOS 11 course and if I click his name, only 1 course is listed.
Exactly my point, thanks for filling in some numbers!
UIImageView has a nice modern wrapper where as the sql stuff is older C stuff. You can fairly certain that that tutorial contains most of the info you are looking for. Just instead of creating a DB you would point to your pre-existsin one inside of your bundle. Queries will be the same as in the article. 
Noob here but I've been working on something similar. I'd look at serving JSON if possible and using URLSession for async. This code works for me: func retrieveJSON(with request: URLRequest, completionHandler: @escaping ([MyArray], Error?) -&gt; ()) { // set up the session let config = URLSessionConfiguration.default let session = URLSession(configuration: config) // make the request let task = session.dataTask(with: request as URLRequest) { // completion handler argument (data, response, error) in // completion handler guard let data = data else { print("Did not recieve data") completionHandler([], error) return } do { let decoder = JSONDecoder() let patients = try decoder.decode(Array&lt;MyArray&gt;.self, from: data) // print(Patient) completionHandler(patients, error) } catch let err { print("Err", err) completionHandler([], error) } } task.resume() }
Why would a JSON be necessary? I am a noob as well, how does the completion handler work?
Sorry for the late response, I‚Äôm in the middle of midterm season. I unfortunately don‚Äôt have time to write up much. The idea is essentially if you stored all colours and styles inside a Theme/Style structure, and set them inside the view controller, you at least remove all of the decision making code from the view controller A (roughly and quickly written and naive and incomplete) example of what I mean ``` class SettingsViewController { let titleLabel: UILabel let headerView: UIView let footerView: UIView let setting1ViewLabel: UILabel } struct SettingsViewControllerTheme { let titleLabelColour: UIColor let headerViewBackgroundColour: UIColor let footerViewBackgroundColour: UIColor let setting1ViewLabelColour: UIColor } extension SettingsViewController: Themable { func apply(theme: Theme) { self.titleLabel.textColour = titleLabelColour self.headerView.backgroundColour = headerViewBackgroundColour self.footerView.backgrounDColour = footerViewBackgroundColour self.setting1ViewLabel.textColour = setting1ViewLabelColour } } ``` With something of this sort, you're minimizing the required code in the ViewController
No problem, that‚Äôs actually a great optimization! I do currently do something close but having colpir√† named like that really helps with clarity üëç
What an awesome article. Super interesting read! Thanks!
Are you talking about UISearchController?
I'm not sure JSON is *necessary* but it seems to be pretty well supported as a method of transferring data and codable helps too. Maybe someone with more experience can chime in. Completion handlers are one way of notifying the app that something has happened asynchronously, notification center and property observers are also options. Again, noob here so maybe someone who knows the ropes can provide more info. [This is useful.](https://grokswift.com/completion-handler-faqs/)
I've just found my solution. I used a structure like yours but converted the returned data to a string and didn't use the JSON (just because I don't really understand them lol) &amp;#x200B; func loadNames(){ let url = URL(string: "http:/lthsanalytics.xyz/GetRoster.php") if let url = url { let session = URLSession(configuration: .default) let task = session.dataTask(with: url, completionHandler: { (data, response, error) in if (error == nil){ let text = String(data: data!, encoding: String.Encoding.utf8) as String? let lines = text?.components(separatedBy: "&lt;br&gt;") for line in lines! { print(line) } }else{ print(error.debugDescription) } }) task.resume() } } &amp;#x200B;
Nice! Here's my completion handler: var gotJSON: ([MyArray], Error?) -&gt; () = { (myData, error) in // print("data from gotJSON: \(myData)") } It's called like this: let url = URL(string: "http://xxx.xxx.xxx.xxx") let returnA = URLRequest(url: url!) retrieveJSON(with: returnA, completionHandler: gotJSON) You may also need to update your UI after you have the data back, e.g on a tableView use .reloadTableView as the UI has no idea that it now has data to display.
Great read! Wow, it's very rare to hear how a language was conceived and why. Thanks!
&gt; I couldn't find out if Paul's book covers deployment to any platform at all. It doesn't, not really. There is a project with complex deployment, but it's done on localhost.
aha
Hey, there's [pixel-picker](https://github.com/acheronfail/pixel-picker) on Github. It's open source and written in Swift. 
My guess is since Swift is so popular, people looking for framework specific (UIKit, etc.) obj-c examples are having to specify the language: - "UIButton corner radius" would return mostly Swift results - "UIButton objc corner radius" would be required to get recent obj-c posts about the topic 
&gt; I tried download a newest version but my software is unable it. Obviously you first need to it.
So did you try to run it on an iPhone/iPad (not simulator) and Float32 ran better? I would be surprised. The benchmark was supposed to be just an interesting fact, so that people can't say that using Float is 100% better if you don't need the precision and not something you should base your heavy calculation need project on. If you want to multiply a bunch of Float/Double, you should probably do it on the GPU which probably has more Float multipliers. (At least the desktop ones do)
Swift is such a beautiful language people don't need to search for stuff.
This is wonderful! It's exactly what I was looking for. Time to figure out how they did it!
Objective-C is dying out, creating a niche with relatively few jobs but even less offers, hence these jobs become well-paid. Exact same thing happened with C++ back in the day, people even had to relocate to other countries to find a C++ job but it was worth it, money-wise. Perhaps some of those without prior Objective-C experience are trying to get these niche jobs as well. Others just have to support some legacy code and have to search for Objective-C answers specifically.
Or may be there is a new generation of programmers who find strange code full of \] in their projects. And then they search: "What is Objective-C?".
Yes , cocoapod and good tutorial would be great
Lol. My software cannot load the correct version. 
I think I memorized a lot of the basic and even some advanced stuff about Swift so I'm not even looking up things anymore when I'm working with generics and protocols. Also I always find Swift examples when searching for common problems or classes in iOS so I often don't add "swift" to my searches anymore.
My guess is that your app hangs because String(contentsOf: url) runs on the main thread (by default if you didnt wrap it in other queue, it runs on main thread, hence preventing the UI to do anything). You can put this task in the background using Dispatch Queue: // Switch to background thread to perform heavy task. DispatchQueue.global(qos: .default).async { // Perform heavy task here. // Switch back to main thread to perform UI-related task. DispatchQueue.main.async { // Update UI. } } 
Screen recording has been built into iOS for a while now, so even if Apple allowed this app onto the App Store (IIRC they started banning flashlight apps shortly after adding a flashlight toggle to control centre), it would be inferior due to sandboxing restrictions. 
Rip firefly. You cant take the sky from me. 
I like the motivation of the language, and how motivated is him with the team to keep improving this amazing language.
First you have to define what you mean by "typical". If I have 2 events at 1:00 and 1:10, it's obvious that I want "1:05". If I have 24 events, at 1:00, 2:00, 3:00, 4:00, ..., then it's not at all obvious what sort of answer you're looking for.
It's really not. Language designers love to talk.
&gt; But the thing that I think a lot of people don‚Äôt understand is that Craig is just ridiculously smart. &gt; I have mixed feelings about the ‚ÄòObjective-C without the C‚Äô tagline, because that‚Äôs really not what it‚Äôs about. &gt; It was the right thing to say to the community at the time. What better way to start off a conversation about a technical topic than by lying to everybody right off the bat? :P
This is most likely a major factor here. Whenever i search something for iOS development I rarely ever need to put Swift in my search
I'm making an app for a school project where there is a login process. I'm using Xcode and I'm having troubles where I need the currentid which is generated from an sqlite database during login in to be sent to the other view controllers but can't find a way to do this successfully, how is this possible?
The dawn of poorly made cross-platform apps that suck both on iOS and macOS is soon upon us.
[Skafos.ai](https://Skafos.ai) has a framework to train and deploy CoreML models to iOS devices without having to resubmit to the app store. Seamless, intuitive, and powerful. Skafos provisions a bunch of infrastructure.. so for the dev, there's no need to spin up AWS resources (etc) to do the training. They also have 6-7 starter models based on Turi Create's examples and show how to swap out training data for your own. Give it a whirl
I wonder how frameworks like Flutter and React Native will handle this?
I wonder how they will handle the access to hardware for the mac. MacOS is a lot more open to devs (wifi manager for example).
Is there anything in the docs that are particularly unclear? &amp;#x200B; You can check out the quickstart guides on GitHub - [https://github.com/firebase/quickstart-ios/tree/master/authentication#getting-started](https://github.com/firebase/quickstart-ios/tree/master/authentication#getting-started) &amp;#x200B; Disclaimer: I work at Google on the Firebase iOS SDKs :)
&lt;p&gt;I thought they already did something like this years ago? What is Apple doing? &amp;#x200B; &lt;/p&gt;
Thanks for saying it. Finally I have confirmation of my gut feeling, that maybe Paul's book won't fit my use case.
nah if theres anyone to do it right its Apple.
Apple's blunder? As many people know, there's not many MacOS Devs out there. So why even bother to do something like this? Apple has lost their minds for God's sake. Let me take over as CEO and change Apple completely. Because Apple's brand is going under. I was a big fan when Steve Jobs was aboard; Steve will definitely be displeased if he was alive to see it all go to hell. Apple can't win back their fanboys because they're struggling to innovate. Why hasn't Apple try to make it a more secure platform from hackers using Impactor to sideload apps through Cydia and use Enterprise Ad Hoc Certificates to install third party apps? I hope Apple can come up with a way to remotely turn off or delete lost and stolen phone(s) in the future. Take down those people like Evasion, GreenRain, RedSnow, SnowBreeze, Pangu, and many others. Apple was designed to be closed source and secure as Steve Jobs envisioned it, so embrace it. Think Different. &amp;#x200B; Apple Fanboys out there, do you agree? 
Wow, so off topic. It literally says this could create more Mac OS Apps. If you only have to build it once with UIKit, and it works on a Mac, why wouldn't you release it? Theres only a few examples where it doesn't 100% make sense. Like apps that have bluetooth products. 
The same way they handle it on iOS - no access will be available.
What products do you have in mind? 
Is there a React Native/Flutter way to do WatchOS yet?
I agree, but apple has specifically not done hybrid solutions like this because they know it is a severe compromise.
No, I'm referring to the search results that appear above the keyboard when entering the "To" text field for a new message in the Messages app.
I‚Äôd rather have a real file system on iOS.
I‚Äôd rather have a real file system on iOS.
Agreed, it comes across really badly...
I love the mac but I'm not sure I think Apple has done anything right by it in half a decade.
*Microsoft PM's typing angrily on their UWP app...*
Looks great!! Nice job 
nope
There will still be separate MacOS versions/IAPs that are absurdly overpriced.
Do you happen to know why App Programming Guide series is seemingly discontinued by Apple? All of those guides are in Documentation Archives now (e.g. [Developing iOS Apps with Swift](https://developer.apple.com/library/archive/referencelibrary/GettingStarted/DevelopiOSAppsSwift/index.html#//apple_ref/doc/uid/TP40011343) of [App Programming Guide for watchOS](https://developer.apple.com/library/archive/documentation/General/Conceptual/WatchKitProgrammingGuide/index.html#//apple_ref/doc/uid/TP40014969-CH8-SW1) Their current Documentation web site is not well structured for beginners, unfortunately.
I will choose every time an UIKit iOS app on my MAC instead of battery eater electron app, I may even reinstall slack on my Mac 
Apple just stole it from Microsoft. I hate to say it.
I guess nobody cares about server side, even for Watch Os? The Watch Os is limited by all means. Every owner of Watch Os can all jog while listening to Greatest Hits from Yonnie and do Yoga. 
&gt; If you only have to build it once with UIKit, and it works on a Mac, why wouldn't you release it? Because keyboard and mouse input is fundamentally different from multitouch input. With a mouse, you can hover over a button to get a tooltip. You can right-click to perform separate actions on a single point in your UI. You can shift-click to select a range of items. You have menus chock full of keyboard commands. These are well-established staples of desktop computing. Of these features, iOS only has keyboard commands, for the uncommon case that someone attaches a keyboard to their iPad. And there are only a handful of apps that provide shortcuts above the system default shortcuts. Making a good Mac app is a lot harder than making a good iOS app, because there‚Äôs a lot you have to be thinking about.
Came here to say this.
What else did they screw up? They‚Äôve had iPad/iPhone crossover for a long time now. A lot of devs just go with two separate apps if it needs to be that much different. At least now there‚Äôs a chance I don‚Äôt *need* my phone to use a certain app I like. That being said, the apps they already pushed out feel a little phoney on the computer, but I think it will evolve into something better.
I know it‚Äôs not going to be 1-1. But it‚Äôll be a helluva lot better than two completely sep code bases. The news app, the stocks app, are great examples of this tech already that announced were 1 Code base. 
Will they just add more size classes?
if apps like slack make it to uikit this would be another concrete reason to pick mac over windows
&gt; it‚Äôll be a helluva lot better than two completely sep code bases. You don‚Äôt really need two wholly separate code bases. If you separate your business logic from your UI code, you can package your business code as a framework that‚Äôs reused between both clients. The mac UI code *should* be separate from the iOS UI code because the two platforms have completely different interaction models.
I will never understand why companies and people seem to fail to understand if the user wanted a web based experience, they would just use a browser rather than a native application. 
Are you sure slack is even uikit on iOS right now?
You do have a real file system on iOS... you just don't have access to it. üòõ
It is. You can check the bundle. No electron framework, all normal ones.
I'm having this too. Is yours by chance related to using UIImagePickerController?
Okay, cool. I didn‚Äôt bother to check but would not have been surprised if it was all in a webview. 
I wasn't aware they were. It might just be that the docs are out of date for that framework. The guide will usually still be relevant though as it's going to give you a good high level overview of the elements in the framework, what it's purpose is and how things should interact with each other. I do hope they don't stop writing them. They provide a lot of information on how to use the framework and how to fit all the moving parts together. &amp;#x200B;
Exactly
&gt; The news app, the stocks app, are great examples of this tech already that announced were 1 Code base. Disagree. The "preview" UIKit apps all scream loud and clear "I'm a tablet app. Your windows and tabs and keyboard/mouse oriented technology means nothing to us!" These are little better than electron apps which are written for another platform stuffed into a wrapper to give them the thin veneer of being native. At least the UIKit wrapper is resource hungry than the electron wrapper.
I was about to say the same thing. Quality control has gone to shit. There is no longer anything such thing as a smooth upgrade.
Because some manager ordered an app built with little budget.
You have a serious misconception about MVC. It has models and controllers and the controllers communicate with eachother. View is just a specific type of model.
This isn‚Äôt news. Some of the apps in macOS 10.14 are built this way and at last WWDC Apple said they‚Äôd be making the APIs public in the next release of macOS.
An enum is a good start. This approach is typically called a router and can be combined with a protocol that enables direct conversion into a `URLRequest` to enable some very powerful abstractions. However, I've found that enums don't scale well, whether towards many endpoints or calls with many parameters. What I do nowadays is combine a protocol that abstracts all of the request and even response requirements and implement concrete types that encapsulate the parameters of a call while perhaps using a router and other types to fill out the full requirements of a request.
I'm not entirely disagreeing, but the experience is really a combination of what is possible through the new framework and how the application vendor decides to implement it. Most people are likely reading this and thinking a single source, single application between the platforms which may or may not be the best way to use the framework depending on that application. From what I believe I know of Marzipan, that's definitely a possible implementation strategy but you could also use it to make supporting UX logic more common between platforms. Some views will lend themselves well to being shared between the platforms, with minor allowances for different event styles (ex. swipe, right-click, long press, etc). Secondary UX items such as data sources, delegates and what not will likely be able to be shared as well. In this model there would still be separate applications, but like business logic shared between platforms you would be able to share more UX logic directly and slim down the platform specific applications.
Your spamming this every few days now ...
I figured it out thanks though
I started off writing a few iOS apps and loved UIKit. A year or so ago I decided to try writing a MacOS app and HATED the experience. If this effort results in a friendlier SDK for MacOS apps then I‚Äôm all for it!
I wish they did. The iPad size class is shit for the new bigass iPads. 
amazing!!
It‚Äôs not that they don‚Äôt understand that, it‚Äôs that it‚Äôs cheaper to maintain a single app that works cross platform with little/no platform specific changes necessary. And electron does give you more features and capabilities than you can get in the *heavily* sandboxed web browser. It sucks that it‚Äôs so much slower, but companies do it to save money.
Lmao you‚Äôre right. 4 posts so far
What I'm looking forward to (and hoping we get) is having the older macOS Cocoa APIs come more in line with UIKit. They feel a little unloved and it'd make coding for both platforms easier IMO
Serious question, why? How is not having access to the file system impeding you? I develop an iOS app and have not run into a barrier in this regard.
Sentdex (Python ML developer) on YouTube made a great video on this: https://youtu.be/X7jf70dNrUo
I video interviews with people for a living. Sometimes these interviews are 90 minutes long, they are videoed via an iPhone or and iPad in 4K. Transferring files back and forth between computer and iOS device is time consuming. It would be so much easier if I could just plug in a hard drive or USB stick and drag them over. I also need to load my iPad with HD videos to show to the people I am interviewing, load these on to the iPad is also time consuming.
I learned html/css/js by making a website. Leaned swift by making a game. Best way to learn is hands on. You wont remember much from tutorials. 
I mean, UIKit is basically a modern reimplementation of AppKit. AppKit, which has been around since late 80s, has tons of old crap (NSCell anyone?) in it but they‚Äôre slowly cleaning it up. Otherwise iOS and Mac apps are basically the same nowadays.
If I remember correctly I didn‚Äôt have UIImagePickerController in my app.
If you‚Äôre starting from scratch the learn to code lessons on the iPad app are pretty good. 
Top 1 Blogspam!
Good, but it won‚Äôt be great. Need to take care of app size.
what have you been trying to accomplish that? &amp;#x200B; you can share values using the prepareForSegue methode or maybe use global variables.
This is such a cynical take! I‚Äôm an iOS developer and I‚Äôd love to make some smaller Mac utility apps, but AppKit is too big a barrier of entry. I don‚Äôt want to spend my time learning a framework that‚Äôs about to get replaced by UIKit anyway. The part we should be talking about (and excited about!) is a modern UI framework finally coming to the Mac. Apple won‚Äôt force people to make universal app bundles, and honestly I‚Äôd rather keep my projects separate ‚Äî and charge separately for them! Everyone is so laser focused on app bundles and ignoring the benefits of UIKit, and the potential for thousands of iOS developers to start building Mac apps. 
Did you check if the iPad air has rotation locked ? I believe orientationDidChange won't be called if so.
No, it does not has rotation locked, otherwise it would not rotate. It does rotates, but the problem I can't detect it.
Wow, that was a nightmare. No one should visit that site, and here‚Äôs the list to save you Vapor Perfect Kitura 
Are you sure that‚Äôs a good idea? It seems like terrible UX to force your user to rotate the device a particular way. Why not actually support different rotations?
It has to do something with legal agreements.. basically it involves taking pictures of documents. Other competitors do the same :(
Have you used News on Mojave?
But u can‚Äôt just go building a game with no experience lol how did u get the knowledge to build the game 
The books by Apple are the best I've seen for beginners. App Development with Swift and Intro to App Development with Swift.
The JSON is a single product but it has loads of field, I will need to read all that information at some point but just for now i'm just trying to get it working, so the structure should match the json, since theres like 50 plus fields in the json file is there to chose specific ones? 
It‚Äôs guaranteed to have a value in the same way a force unwrapped optional is
You an basically think of `unowned` like a force-unwrapped `weak` reference. It can be deallocated and if that happens earlier than you expected, you‚Äôll get a crash. I think `weak` is preferable in nearly every way. 
It‚Äôs not guaranteed to have a value. In the same way that you can force unwrap an optional or try to load an out of bounds array element, using unowned is saying: ‚Äúif this doesn‚Äôt have a value, then my application state is so bad I should just crash‚Äù
I agree ... it doesn't seem very safe to use ... idk what's the point or use case for it
read here: https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html basically you have to guarantee that the unowned object has the same or longer lifetime that the one you are, um, (not) referencing to it from.
why should I depend on it if I know that at some point during the application life time it could be deallocated?
How does making sure the app is rotated right, help you in taking pictures? Is it because you want to make sure the picture is taking in portrait rather than landscape? &amp;#x200B; \&gt; Other competitors do the same &amp;#x200B; That's a pretty bad reason. Maybe this is exactly where you can make your app better.
You use unowned when are sure it won‚Äôt be used after it gets deallocated but need to prevent a reference cycle. It‚Äôs not often that this is the case, weak is much more prevalent. 
Hello! I want to know if there's a way on Swift to create a program that displays the network speed. For example, if I'm uploading some files, I would like to know the speed at which it is being uploaded in KB/s and MB/s. To give you an idea, I would like to program something and the result I would like it to be just like iStatMenus does it. Posting a screenshot for reference only. &amp;#x200B; [IMAGE](https://imgur.com/a/wxwY9TT)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/Kwh21EC.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20egyfjdh) 
The point to use it is when it‚Äôs guaranteed that closure won‚Äôt outlive unowned captured variable. Used all the time in RxSwift in subscriptions capturing object while being kept in dispose bag of that object.
Likewise, I started on the Mac, and whenever I try UIKit, I hate it. It's almost like people like the thing they learned first, and have trouble with change.
That sounds like a data transfer issue, not anything related to the filesystem.
&gt; "The ratings are based on the number of skilled engineers world-wide, courses and third party vendors. Popular search engines such as Google, Bing, Yahoo!, Wikipedia, Amazon, YouTube and Baidu are used to calculate the ratings." It's such a beautiful language that ... YouTube videos were taken down, third party vendors closed up shop, and the number of skilled engineers dropped?
Good for you, but the Tiobe "rating" isn't the number of web searches, so I'm not sure how this jives with the link. Are you also finding that webpages have removed their "basic" Swift content, as developers have become more experienced?
Subscribed!
The Python webpage has tutorials and references, of course, but 5500 lines of code could be a year's work. Porting is often easier than writing, depending on what it is and how it was written, but that's still a pretty serious undertaking.
The Customer ‚ÜîÔ∏é CreditCard example from the docs is a good one. *Only* the Customer owns a CreditCard, so you know it‚Äôll be around for the entire life of the Customer. That way, the CreditCard can reference the Customer in an unowned fashion. Once a Customer disappears, so does the CreditCard. What does this save over weak? Basically a lot of gaurds and possible awkward this-will-never-happen return values. Crashing ain‚Äôt great, but it‚Äôs easier to find malformed state that way.
I found this article super helpful in sorting out weak vs strong vs unowned: https://krakendev.io/blog/weak-and-unowned-references-in-swift It has to do with retain cycles, basically.
Here is the [official guide for building Swift on Windows](https://github.com/apple/swift/blob/master/docs/WindowsBuild.md).
Yes, I'd just read it ... amazing really thanks
Thank you for the reply. I too have done video production and file sizes are a challenge. Supporting external drives is kind of a separate issue from accessing the file system, but I can see your point. Obviously you can take a laptop and record direct to disk, but it would certainly be easier to simply do it with an external drive
&gt; Intro to App Development with Swift. Is it worth reading both or if you read the longer one should you be all set?
There's definitely less beginners blog material being published. I'm pretty sure Tiobe doesn't rate stale sites.
There is more to it. It would be nice to have actual file names rather than the auto generated file names that Apple creates for files. I may make a sequence of graphics with different fonts, logos etc but it gets confusing dealing with them without actual names. It would also be nice to create folders and sub folders rather than having everything in a single folder. 
I split time between both. Appcode is both a life saver and also super frustrating. It's frustrating when autocomplete and syntax highlighting are super slow, or when it can't find the definition of something that Xcode has no problem with. On the other hand, it has a real tab system that blows Xcode out of the water. I have a retina iMac and I can't live without split screen. You can kinda trick Xcode into it, but as soon as you touch anything (or hit a breakpoint), the tabs go to shit. Also, AppCode does a much better job of find usages, which I use all the time. Biggest feature I miss from the old days of AppCode with Objective-c? Flagging of code that is no longer used.
I've found that Reactive Programming, without the Functional component, is really the sweet spot for me between power, readability, and maintainability. Most of the benefits of FRP, little of the overhead.
Glad this is official. I think it's also fair to add that if it's not known here, the Vapor community does have a Discord: [Vapor Discord](https://discord.gg/vapor)
Really it depends on where your skill level is at. Intro to App Development is more basic but it will get you started. App Development with Swift covers a lot more but Intro to App Development gives you a taste of what it's like. &amp;#x200B; At the end of App Development with Swift you will have the knowledge to build a wide range of apps, there is even a section on AR. Intro to App Development will get you going but you would probably still need to read App Development with Swift if you wanted to build something substantial. &amp;#x200B; App Development with Swift isn't all encompassing though. It doesn't cover CoreData, but it does cover how to pull data from a REST API over the web or parse JSON data locally. It is good enough to get you going and teaches quite a lot in a really great manner. &amp;#x200B; What I like the most is that it teachers language features when they are necessary and not any earlier, Each chapter covers language features then SDK features that use those language features. You then build an app with the knowledge that you have acquired so far. 
I'm assuming you are talking about Learn to Code 1 and 2. They are really great but don't cover App development. What I love the most about them is that it teaches you how to build a progressively more complex algorithm. At the end, you will know Swift and how to think like a programmer. If you are looking for app dev, you need to progress to Intro to App Development or App Development with Swift.
There are times when you are able to reason better than the compiler about your program. It may be that you know for a fact that the variable will live for long enough, but the language doesn‚Äôt let you prove it to the compiler. 
thanks you. you saved me a lot of time. 
This is the best analogy for strong vs weak IMO. I never really understood it as a beginner until I read this. https://stackoverflow.com/a/18344946
Thanks. Watched it. While I don't think Udemy actively lifts tutorials from other sites, they don't stop others from doing it and don't discourage it. You could say they actively make it hard to take down as well.
For the first time in many many years I started using `unowned` in ReactiveKjf blocks. Apart from that nearly always `weak` and in some cases (serially executed blocks) just strong.
It does indeed exist, and it is delightful!
Apps for what? If you really want to you can use aswift from the command line to create Windows or Linux apps. I fear that you are confused by thinking that Swift is an iOS development platform. It isn‚Äôt. Rather it is a programming language that runs anywhere just like C++, Java, Rust, Julia or whatever. That doesn‚Äôt mean that xCode, and the associated librariesfor iOS comes with it. (Swift does have a large standard library though). 
Rip
I commented them out, updated Swift syntax, uncommented the lines and it works now. I don't know why that worked but it did
Just so you know, in RxSwift unowned is not safe even in cases where the binding is in a dispose bag owned by the captured object.
It surely isn‚Äôt , if your particular case is multithreaded, or subscription is asynchronous and postpones closure execution until next main loop tick, but that‚Äôs not always the case. ‚ÄúAll the time‚Äù is merely an exaggeration here. The point is that all those memory models are just tools to be understood and used properly.
` func getRandomElements(number: Int, array: [String]) -&gt; [String] { var randomElements: [String] = [] while randomElements.count &lt; number { let randomElement = array.randomElement() if !randomElements.contains(where { randomElement.first == $0.first }) { randomElements.append(randomElement) } } return randomElements } `
If you don't include properties for some of the keys, they will be ignored. But at the moment your code isn't trying to decode a single product, it's trying to decode an array of products. So you'll need to fix that. Plus your struct's properties don't correspond to the JSON, so you'll need to fix that too. For instance, looking at your struct, you've got a `name` property. Now look at the JSON ‚Äì there's no `name` key there. So how is it meant to decode the name? You need to make your struct match the JSON. 
Okay thank you very much
My point is that there are a lot of caveats and gotchas which can cause leaks &amp;/ crashes to be weary of. I tend to go with weak references all the time as I know that minor changes by colleagues can cause issues very easily otherwise 
I find a general search is hindered by the rapid changes in Swift syntax. There's lots of obsolete results out there. I find it better to just search [https://www.raywenderlich.com](https://www.raywenderlich.com) [https://www.hackingwithswift.com/example-code](https://www.hackingwithswift.com/example-code) or [https://stackoverflow.com/questions/tagged/swift](https://stackoverflow.com/questions/tagged/swift) when I have a question to answer. &amp;#x200B;
I wouldn‚Äôt recommend this. If `array` contains fewer than `number` elements with distinct letters, then this will loop forever.
The most correct method would be to build a dictionary of type `[Character: [String]]` which maps the first letter to all strings starting with that letter. Then, you can get a random key, and append `dict[randomKey].randomElement()` to the array, then set `dict[randomKey] = nil`.
Google Search: stackoverflow swift 4 "insert problem" Or maybe describe your problem to us, and we can point you in the right direction until you get the hang of it. Xcode has Quick Help, autocomplete, snippets, Storyboard Objects to help get you started in the right direction.
Go for ios/swift then the problem in regular human words, just how you would describe it to a fellow human being. If that dont help then maybe after ios/swift write the name of the class you are having difficulties with. In most cases you will find an answer. There was always someone who wasnt familiar with swift who looked for it before :)
I'm not sure that it's guaranteed to crash. As I understand it: the main difference between unowned and weak is that 'weak' auto-zeroes when the pointed-to object dies. People always leave that part out of the name, but it's very important. An unowned reference is just a bog-standard pointer, and nothing special happens when the pointed-to object dies. Auto-zeroing incurs some overhead which you can avoid with unowned references.
As others have said, just use your words as it makes sense to you and you'll be surprised at what you find on stack overflow. Also skim through the headers/descriptions of the various projects at hackingwithswift.com. They have simple projects that explain how to do most basic swift/iOS tasks and may help guide you. If there is a simple concept you are trying to understand, odds are it's explained there in simple terms. 
You need to know a little bit to even identify what you don't know. Even experienced programmers encounter stuff they don't know all the time, but their experience helps them narrow and understand the problem. The best way to get a basic level of understanding is with a tutorial. Follow all the examples, even if they seem basic. Get a feel for writing the language, and experiment using those examples as a base. As it happens, Swift has lots of official resources written by technical authors at Apple. It's all available for free at [Swift.org](https://swift.org). You might want to check out the [language guide](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html).
Yep, you‚Äôre right. Use this only if you can actually be sure that the array will have at least number elements (eg. if you have the array hardcoded and you know for sure that such cases will be avoided). But I also suggest to go with Jumhyn‚Äôs approach, then you are 100% sure that it will work. 
Indeed. So, just to be clear for OP's sake: - You can compile Swift on Windows - No, you can't write macOS, iOS, tvOS, or watchOS apps on Windows - Yes, you can write command line apps - Yes, you can write Windows apps (using a supported library, such as wxSwift, a wrapper for wxWidgets)
Basically you're telling the compiler "I, the programmer, are smarter than you, and I promise you that this variable will never be deallocated." If you say that and you're not actually smart enough to follow through on your promise, you deserve the consequences.
Try attend a [Meetup](https://www.meetup.com/) in your neighborhood a few times. Perhaps an event for app developers or startups.
Thank you. 
If your unowned reference gets deallocated and you try to access it, you'll get a crash. Paste this in a playground: class A { unowned var b: B init(b: B) { self.b = b } } class B { var id: String init(id: String) { self.id = id } } let a = A(b: B(id: "hello")) print(a.b.id) 
&gt; I am hoping that Apple Sherlocks the scene. I can see this happening, but not before 2021. I 100% agree with this sentiment. I‚Äôm waiting for Apple to transition uikit to more reactive approach. Otherwise it feels to hacky for my taste. Trying to shoehorn in other pattern on top of apple‚Äôs mvc. 
unowned(unsafe) is what you're thinking of. Regular unowned does guarantee a crash (by keeping a separate refcount alongside the regular strong one).
Google the error. :)
Since nobody covered this point yet: &gt; I understand that strong will never be deallocated... That is incorrect. A strong reference will be deallocated when the last reference to it lets it go. A closure will let go of the reference when the closure itself is deallocated so "never" is much too strong a word. Of course if you have a reference cycle (the closure is being retained, directly or indirectly, by the object that it's retaining, *then* it will never be deallocated. I avoid using both weak *and* unowned as much as possible (which is a vast majority of the time.) For example where most people would write: myClosure = { [weak self] value in self?.label.text = value } (Where `self` is holding on to the closure as well as the label.) I will write: let label = self.label myClosure { value in label.text = value } No weak or unowned reference and both the closure and label will deinit when `self` deinits, but I don't have any of the threading problems mentioned in other posts when unowned is used. Another option I have used is to write something like: func setText(of label: UILabel) -&gt; (String) -&gt; Void { return { value in label.text = value } } which would be used like: myClosure = setText(of: label) Again, no weak or unowned references *and* no reference cycles.
that's actually interesting approach too ... thnx 
I'd argue to never use unowned unless you really need the performance (tight loops). We will block virtually all force unwrapping in our codebase in general. I feel the extra mental complexity is minor compared to the mental complexity of knowing the value can never be nil in any circumstance. It might seem fine at first but then the next guy comes along and can either break it without knowing just not trust you did. Anyways your comment makes sense but I just rather be safe than sorry. +1
&gt; And while the core team really doesn‚Äôt want to have a Result type because it‚Äôs kind of a failing of the language, and when we get concurrency it won‚Äôt be as necessary. Can someone explain why it's the case that Result type wouldn't be necessary with concurrency?
&gt;Otherwise it feels too hacky for my taste. Trying to shoehorn in another pattern on top of apple‚Äôs mvc. That's how I felt too, but I now see Reactive programming as orthogonal to MVC. MVC is purely about separation of concerns (actually, it doesn't guide us enough there). Rx/Promises/etc. are about managing state, composing values over time, and binding action and reaction. &amp;#x200B;
Are you being serious my friend? If so, this is basic elementary math: You can‚Äôt decide any number by 0. Even if you try to do it on the iPhone‚Äôs system calculator it literally displays the word ‚ÄúError‚Äù. What you‚Äôre going to want to do is program your app to say ‚ÄúError‚Äù or a message that says ‚ÄúIntegers and Rational numbers can not be divided by zero‚Äù or something like that. 
They're either paranoid or uninformed. Unless your phone is jailbroken as well, you're fairly sandboxed in to what you can do within an app. Outside of any bugs in the OS, you'll be hard pressed to find a way to damage your device with the public APIs you have access to.
Thanks for info. 
Apps for iOS. 
I must have not been very clear with my quick description but if you re read you will see it says I need to make it show an error message so yes I understand this math, I just need help coding that error message. Thanks
That makes sense, thank you! 
In 9 years I have never once damaged an iOS device. The only conceivable thing you could do is delete photos and contacts, but you'd have to first write damaging code and then give your application permission to those databases. And even then you can restore the phone from an iCloud or iTunes backup. The advisor is 100% wrong. 
The first example shouldn‚Äôt compile . The second example looks up a key in the dictionary passed to the method , info
good luck to you friend. when ever you can if possible get a used macbook not even a pro doesn't have to be new just something in the last 4-6 years range just make sure you can run macOS Sierra at minimum, yes you can run run Sierra in a 2009 macbook but I don't know how slow can be. I think you can get one on eBay for like $100 bucks if you're in the US. I been teaching myself for few months in an old 2009 iMac thats almost 10years old and runs smoothly, I paid for this $400 some 5 years ago and I upgrade the ram 2 years after. I know you're not asking but: try Udemy they have lots of free courses and check CodeWithChris. this guy is great at teaching and have a youtube channel. also check Jared Davidson and Mark Moeykens. they are also great at explaining in details. also you have an iPad check for Apple eBooks. good luck and happy coding. 
I successfully made hackintosh on my 10Yo laptop (i7 &amp; 6GB RAM) but in the last step I found that my GPU is failing. And since it‚Äôs first gen i7, it doesn‚Äôt has any on-board GPU so resolution is like 640x480 on 1080p display. Maybe I will use playgrounds for a while till I learn basics. I do t know even the beside but I know logical thinking though. Created this Expense Recorder Shortcuts all by myself. https://routinehub.co/shortcut/1690
For me, the major benefit specifically on iOS is that RxSwift and derived frameworks (which are plenty: RxGesture, RxOnDemadResources, RxCoreData, RxCloudKit, RxCoreLocation, RxARKit, and dozens more) take care of all the idiosyncrasies of KVO, GCD, op.queues, delegates, datasources etc. All becomes very similar in style.
Ask yourself ‚Äúwhat isEqual‚Äù - it looks like something is missing in that logic. The ImageView is the object, it contains a property called image - which is actually the image... Unless you set the image in the IB for those, then there is t an image associated with them. Are you trying to compare the name of the image contained in each imageView??? I would also highly recommend not starting your properties with numbers and to follow standard software development casing, etc. but that‚Äôs not the issue your having, just a suggestion.
sorry about you're laptop. I had the same problem with graphics card in the pass, what I did to fix it temporarily was to reflow the graphic chip or the whole logicboard for that matter. I don't recommend it but as a last option. it may fix it temporarily or it may completely break it. that looks like a really great app. you're pass the newbie stage.
What everyone said is absolutely right. Just keep in mind that if you keep a phone connected to the debugger constantly running an ARSession you will kill the battery of your device. My old 6S can only keep battery for 3 hours because of that. Other that that, the ocasional, use or even a couple of hours of debugging is absolutely fine. 
I would like to compare the image names. as for the number and names actually I made then up to post it here but the code its similar. the logic goes: compare 1ImageView and 2ImageView and the array to check for a triple match. the array is made of images in the assets but when I option click the name it tell me its an String I don't have any errors the app runs good in the simulator but it doesn't perform the if statements. 
Reflow ??
info is the name of the dictionary. if let pickedImage = **info**[UIImagePickerController.InfoKey.originalImage] as? UIImage you might be able to write it more concisely as: if let pickedImage = **info**[.originalImage] as? UIImage
yeap. the way I do it or how I used to do it is I disassemble the laptop unplug everything making sure there is nothing, no stickers no plastics things like those little foams, again nothing but the bare logicboard then I wrapped couple of times in tinfoil, I had to mark exactly where is the graphic chip is then i cut the tinfoil exactly there so i have the logicboard wrapped all around but with one hole to expose the chip then i use a heat-gun to apply heat to the chip something like 400‚Ñâ for 5 minutes other times just put it in the oven 7 or 8 minutes 375‚Ñâ pre-heated first for with the chip facing upwards and sitting in 4 blobs of tinfoil in the corners to use as legs . this is highly not recommended, i don't recommend it but thats what I did few times, last time actually when I put board in the oven some chis started pop just like popcorn. I watched a lot of videos on youtube on how to do it right and it worked but again its just temporarily fix the longest board probably lasted about than a year. it was worth it back then. I haven't do it in like 5 years 
Oh. I heard about it and did that in different way. I don‚Äôt have heat gun or oven. So I unplugged the cooling fan and ran my laptop till thermal shut down. It did fixed a little bit. Earlier can‚Äôt play video &amp; screen goes black after 10-15 then I have to restart. Now I can play videos and screen goes black only after few hours. I mean it‚Äôs less frequent. 
yeah the "science" behind that is to melt the solder joints just enough to make the contact between the chip and logicboard. but theres also lots of chips that can't be repaired because the real issue its inside the chip itself. but well those were my options back then.
Make your method throwable and throw exception like throw Error(‚Äúcan‚Äôt divide by 0‚Äù) then wherever you use this function use do/catch. https://docs.swift.org/swift-book/LanguageGuide/ErrorHandling.html
But you really need to rethink about the way your class is implemented and read up a bit more about models and view controllers. 
Hi! I‚Äôm struggling to understand how to use the MVC-structure properly. Basically, my app contains a model for the app itself, view controllers for the menu and the game, and a model for the game is created whenever a new game is started. The main model for the app is initialized in the first view controller, that is the menuVC. A game is started, and a new model, and a GameVC are created. When the game ends, the app should return to the menu. My problem is, whenever I segue into a menuVC, a new model for the whole app is also created. Should I instead be reusing the old menuVC, or pass in the old main model, or perhaps create a main model somewhere else instead of in the menuVC? If that‚Äôs the case, how do I do that? An initial view controller, that doesn‚Äôt actually show anything but segues to the menuVC, with the sole purpose of creating the main model sound weird to me. I‚Äôm feeling a little dumb for not being able to research this on my own. Any help is appreciated. 
XCUITest A significant portion of it is undocumented, which is rough as it supports String querying
In my opinion the standard library has the best APIs. They are newer (i.e. not ridden with legacy) and have evolved alongside the language to fit like hand in glove. My least favorite APIs are those of AVFoundation because I strongly dislike KVO. There's lots of old crap sprinkled in every major Apple framework too. C style macros and string matching is all over the place. Yuck!
how do i implement facebook login to my ios app using swift? I can't understand the code which facebook tries to make me copy into my app. Cant seem to find an up do date tutorial either and it seems like everyone does it in their own way.. Thanks in advance!
UIKit is ok, but strictly saying it is an Objective-C API. Worst... Does protocols with associated types counts as api? 
&gt; Therefore, one might be inclined to use the same structure for both. However, a better approach is two separate structures And the best one - to make them classes and to make a base class which will contain some basic fields. It will allow to have some generic routines to process tweets.
Dealing with enums is pretty fun. Writing a for loop with a custom increment is pretty annoying. On the other hand, I can say that I haven't needed it in production code.
Better say the protocols with Self requirement. It broke so many of my generics approaches.
&gt; func any() { // I tried using "Image Literal" and also the image name "image1.png".. &gt; if (1ImageView != nil) &amp;&amp; (2ImageView != nil) &amp;&amp; isEqual(image1.png) { &gt; print("match!") &gt; } else if ...// more if statements &gt; ‚Ä¶last if statement} else { &gt; print(‚Äúno match!‚Äù) &gt; } &gt; &gt; @IBAction func buttonPressed(_ sender: IUButton) { &gt; any() &gt; } This may get you on track - you can't really compare the names as they are objects... ``` @IBOutlet weak var imageView1: UIImageView! @IBOutlet weak var imageView2: UIImageView! let imageArray: [UIImage?] = [UIImage.init(named: "argentina"), UIImage.init(named: "bolivia"), UIImage.init(named: "brazil"), UIImage.init(named: "chile"), UIImage.init(named: "costa rica")] override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. imageView1.image = imageArray[0] imageView2.image = imageArray[1] } func any() { // I tried using "Image Literal" and also the image name "image1.png".. if (imageView1.image == imageView2.image) { print("match! with image in index \(imageArray.firstIndex(of: imageView1.image))") } else { print("no match!") } } @IBAction func buttonPressed(_ sender: UIButton) { any() } ```
This was a template we had to use that my professor made
Well, if you are interested in depth of `weak` vs `unowned` follow [this link](https://www.uraimo.com/2016/10/27/unowned-or-weak-lifetime-and-performance/).
Not only, any of them associated types acts in weird way. The only difference is we forced to use some default protocols like Equitable.
The first step is to post a general question on reddit. Don't know about the second step
CoreBluetooth is pure cancer.
Yes, you're right I was thinking of that one. Do you know any more about how that works? I mean, just working it out in my head - I suppose you can't rely on any information in the pointee to cause a crash, because it'll be deallocated at that point and the memory might be garbage. That means the pointer will have to reset itself to some guaranteed-to-crash value, which is basically what an auto-zeroing weak pointer does. So if that's true, what's the point of an unowned reference?
Objects in playgrounds have weird lifetimes, so you generally shouldn't use them to test allocation/deallocation issues. It'll work for some things but not other things. You're right, though - `unowned` is guaranteed to crash; I was thinking of `unowned(unsafe)`, which isn't.
Is your professor offering "development" iPhones for sale? Because that is ridiculous, and the only reason I can think he'd say that is to make a quick buck.
Your phone will be fine.
define run....
‚ÄúOnly Time‚Äù playing in the background 
I'm working with BTLE in Android + iOS right now so I think BT on iOS is the greatest API ever.
Do you dislike KVO for its swift interface or just in general? IMHO, KVO is fucking magical, but the swift implementation leaves a lot to be desired.
[Here](http://lmgtfy.com/?q=Swift+background+thread)
I appreciate that, but I‚Äôm aware of background threads‚ÄîI‚Äôm asking for more information to learn about such processes.
You asking for in depth guides on image decoding, text sizing/rendering, layout and 'expensive' UI operations ?
Yeah, I‚Äôd like to learn more about them 
Hi jasudev! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because ‚Äì generally speaking ‚Äì compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/atjoam/i_had_a_hard_time_by_adding_features_of_inapp/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
This is great! üòÇü§£
Without a doubt I dislike KVO in general. I don't like the concept of observing due to it being much more difficult to debug than a type-to-type invocation. I'm more into causation than spontaneous combustion. I also think it's a really shitty implementation. Namely not being able to check if X is observing Y and removing X *if it isn't* will cause a fatal crash. Even if I wanted to wrap AVPlayer safely I would also have to wrap KVO until I, using misremembered propositional calculus and a very large whiteboard, with false confidence could say that it won't crash due to adding or removing an observer one time too many. KVO? How 'bout no.
Other than text sizing, they are pretty broad subjects
My condolences 
Nah I think he‚Äôs just ignorant. 
That‚Äôs a shame because it‚Äôs extremely powerful and a key component of Foundation.
I guess, but I am looking for more detailed information how they work behind the screen. I will be doing more extensive research, thanks!
As a Swift developer, I don‚Äôt understand?
Were you updating from Swift 2? 
This meme doesn't make any sense.
Glad it‚Äôs not just me. 
Oh, ok... EXC\_BAD\_ACCESS; SIGABRT; Found a nil while force unwrapping... yeah it will run, but not for long.
Swift and all the iOS frameworks are very well documented by Apple and you can find everything [here](https://developer.apple.com/documentation/) For additional help for certain issues you can always search it up, watch or read tutorials or come back here for further help.
https://docs.swift.org/swift-book/
So I went with a different library that works really well [SwiftLinkPreview](https://github.com/LeonardoCardoso/SwiftLinkPreview) if anyone is interested. 
[The source code is all here](https://github.com/texturegroup/texture). Figure out exactly what it is you want to do, and look to see how they did it.
Unowned references do not increment the reference count
Does ARC not hold strong and unowned reference counts of objects though? If the strong reference count of an object reaches 0 and the unowned reference count of that object is &gt; 0 the object is de initialized, when the strong and unowned reference count reaches 0 then its de allocated. I read that in an article and said it in an interview today and I‚Äôm not sure it correct üôÅ
Web pages are not suitable for JSON without massaging into the format, so it's a time saver you didn't go down that path right now. If, however, you want to scrape the same page over time, JSON may be quite helpful. [Here's an example.](https://grokswift.com/json-swift-4/) [Here's some Apple commentary and code for using JSON with Swift.](https://developer.apple.com/swift/blog/?id=37) 
I thought there was only one count, but I can‚Äôt say I‚Äôm 100% sure anymore
There is only 1 count for Strong retains, and Arc will NEVER deallocate a reference as long as there is 1 strong retain. If you only have weak/unowned retains, then ARC will deallocate them when &gt;!ARC fucking feels like it!&lt;.
I‚Äôve recently done this for a tvOS app, and I don‚Äôt understand this meme
You have use library for networking like Alamofire or URLSession then try this 1) preform request 2) check response: if 404 - no resources by that url 
Just find some articles about: "Protocol Oriented Programming swift" "Class vs Struct swift" "Swift Extension" I hope, it will help you understand swift way programming better 
Don‚Äôt force unwrap, problem solved.
[https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD)
Swift maintains 3 different reference counts ‚Äì one each for for strong, weak, and unowned references. For reference, [here's the runtime method](https://github.com/apple/swift/blob/master/stdlib/public/runtime/HeapObject.cpp#L375) to get the unowned reference count of an object on the heap.
Makes sense and opened me up to some new methods. Thanks!!
there are a handful of swift interview topics you can find by searching the web. i would advise going through that list and making sure you are at least familiar with each item then pick one or two to five more research into
But then I would need to use all those ugly question marks `?` ,all over my code. `Guard let` is the way to go.
It's quite an odd implementation! It actually keeps the object allocation alive as long as there are unowned references, though it runs the deinit when the last strong ref disappears, so as to tear down any cycles.
This is exactly correct. It's obscure enough knowledge that I wouldn't be surprised if your interviewer didn't know it though; good luck.
Would be nice if there was a link, üòâ
Can confirm, iOS BT API is miles ahead of Android, I dont ever want to touch Android again if possible
Cocoapods does have some seriously rough edges, but it‚Äôs widely supported and mostly works. So, I‚Äôll keep using it for now. A lot of people like Carthage. It has fewer problems than Cocoapods, but I didn‚Äôt manage to figure out a good dev workflow where I could work on my app and one of my frameworks in the same project conveniently. I am hoping Swift Package Manager gets a bit more love. It seems to have a lot of potential, except that it does not support iOS projects well. As I‚Äôm working on iOS stuff these days, that‚Äôs a barrier I don‚Äôt want to deal with right now. 
It's a good start. I would recommend a Udemy Swift Bootcamp course by Angela. She has a lot of practical real world examples of using Swift 
Probably will get downvoted a lot, but. Get familiar with Parse methods. Seriously, to rewrite code, you have to understand what it does. Otherwise the question is a bit vague, a bit more detail would help.
I have some code to trigger an alert view. When I click ok, and then repeat the action that triggered the alert view, it duplicates the options fields. The first time the alert is triggered, it creates an alert dialog with 1 button that says "OK." If I repeat the action, it comes up with the message and then 2 buttons (side by side with message above the two). If I do it a third time it creates three horizontal bars which two are blank and one says ok. . let choiceError = UIAlertController(title: "Oops!", message: "", preferredStyle: UIAlertControllerStyle.alert) let okAction = UIAlertAction(title: "OK", style: UIAlertActionStyle.default) { (result : UIAlertAction) -&gt; Void in print("You pressed OK") Button click code choiceError.addAction(okAction) self.present(choiceError, animated: true, completion: choiceError.removeFromParentViewController)
Look at what your button does each time it is clicked............. Each time you add the ok action to the alert controller's actions and then present it again. Why? What are you trying to do?
thank you sir.
So, if a button is pressed and certain criteria is met, I want to present the alert. How can I remove the alert when the user presses "Ok" in the original alert? 
Thanks for the recommendation man :) I'll definitely bookmark her tutorials for when I'm done with HWS. 
If it‚Äôs an app, start at the AppDelegate and step through with the app launched: - What dependencies are loaded at launch? - What API calls are made during startup? - How are they made? - What‚Äôs the architecture of the network layer? - How is navigation handled? - Does it use storyboard? - Head through navigation to the first VC. - What‚Äôs the architecture? (You can find this by stepping through its setup, ending at ViewDidAppear). ... If it‚Äôs an SDK or Framework: - What‚Äôs the purpose of it? - Explore the folder structure. - If it‚Äôs something like Analytics and doesn‚Äôt produce any VCs then look for a main plug point. - Search for applicationDid... or applicationWill... entry points. - Read the docs, it should have docs. - Read the tests, they‚Äôre super valuable.
Sounds like arrays being structs is tripping you up? Instead of doing just `arrays[i].append(line)` you need to do something like var array = arrays[i] array.append(line) arrays[i] = array 
The best strategy is to find a good project. There are many awful ones on GitHub that even the most experienced programmers would struggle to understand, so you have to be very careful not to pick up any bad habits. You also have to be aware that some developers like to use 3rd party frameworks, such as RxSwift, Texture, that can dramatically change the way that you make an app, so avoid projects that use them if you don't plan on using these in your app. Also, be aware that the number of stars does not correlate or cause with quality. Some easy to spot red flags for projects IMO are: * the AppDelegate is longer \~150 lines * it has files that are longer than \~400 lines * it is not organised in any kind of logical way * there are a lot of 3rd party frameworks * there is injudicious use of force wrapping/force casting/implicitly unwrapped optionals/other unsafe things I would bet money that any project that breaks 2 or more of these has other, more serious problems and would not be a good for a beginner to learn from. I think an example of a good project on GitHub is [GitHawk](https://github.com/GitHawkApp/GitHawk), although note that it uses IGKitList instead of UITableView/CollectionView. &amp;#x200B; Once you have found a nice project, you should try to work out how it is structured, which you can do by seeing how each view controller is connected to the others. Look in the AppDelegate (or main storyboard file) to work out what the initial view controller is, and then how the user can navigate to the next one. Actually running the app and using [the view hierarchy debugger](https://developer.apple.com/library/archive/documentation/ToolsLanguages/Conceptual/Xcode_Overview/ExaminingtheViewHierarchy.html) helps a lot, too.
On the website of hacking with Swift there are some good preparation tips for interviews. Worth a read. Good luck! 
It‚Äôs all open source, so go for it! Start rewriting the Ruby in Swift - https://github.com/CocoaPods/CocoaPods
I see this in nearly every thread. Is this plain promoting by someone or is it really that good 
Ugh. Don‚Äôt bring me back to that nightmare. Swift 2.1 might as well be a different language judging how Xcode handled updating the syntax.
Thank you very much for confirming that for me!
I bought 5 or more Udemy courses before Angela‚Äôs. I gave up before getting that far in to any of them. Hers was the first I was able to stick with and I still refer back to it a lot when I get stuck. So yeah I would say it‚Äôs the best course on Udemy at least in my opinion. There is some good stuff to learn from the Ray Wenderlich site/course too but a couple of the teachers are anoying. Like the guy that teaches core data but mispronounces the word attribute. I literally couldn‚Äôt listen to the course it was so grating. 
Thanks for sharing!
You‚Äôre fine lol
Oh yea, this is the link to the project. https://github.com/joshtru/iOS-40-Projects/tree/master/Project%2003%20-%20ColorSlider
The current implementation of the Swift runtime may happen to do this, but it's not required by the Swift language. It's like saying Swift stores strings in UTF-16. There is a version of the runtime that does that, but it's not a public interface, and you shouldn't rely on it.
Not according to [Apple](https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html): &gt; with ARC, values are deallocated as soon as their last strong reference is removed 
Use SwiftyBeaver and log whenever a tableview related function gets invoked.
Is there a gist?
&gt;I believe cocoapods came first. But why did carthage come into play? Was there something lacking in cocoa Yes. In 2014, when apple announced Swift, it required to link dynamic frameworks. For quite a long time cocoapod did not support dynamic frameworks while carthage was the only option.
Make sure your data source doesn‚Äôt get disconnected somehow
Not according to [Apple's documentation](https://docs.swift.org/swift-book/LanguageGuide/AutomaticReferenceCounting.html). They make no distinction between "deinitialization" and "deallocation" phases, e.g., &gt; The Person class also has a deinitializer that prints a message when an instance of the class is deallocated. and &gt; Both of these classes also define a deinitializer, which prints the fact that an instance of that class is being deinitialized. This enables you to see whether instances of Person and Apartment are being deallocated as expected. They are quite clear: "A deinitializer is called immediately before a class instance is deallocated", without qualification. I can't find any mention in any documentation that objects aren't deallocated until "unowned reference count reaches 0". Empirically, with Instruments (part of Xcode 10.1), I can't reproduce the behavior you describe. When the strong refcount reaches 0, it is always immediately deinitialized *and* deallocated, even when there are unowned references to it. That's how unowned references work.
If the project is an application, run it. Then use the view debugger. It will indicate which view controllers and views are visible. From there, look at the code to see what it‚Äôs doing that you‚Äôre interested in. 
What are you calling, and what do you expect to happen? This is going to be tough to diagnose from just a vague description. Are you assuming that reloadData() is also responsible for noteNumberOfRowsChanged()?
There are a few things happening here: 1. Because the request runs asynchronously, you can't be sure each completion call is still referring to each i you defined in your for loop. 2. Also, when the dataTask's completion is called, you are on a different queue, and trying to modify an entity may produce unexpected results. Assuming you are calling getPlayOptions() from the main queue, you'll need to dispatch your completion code asynchronously on the main queue. But even if you did that, the value semantics of Arrays will still be a problem. Depending on what you are actually to accomplish, I suggest creating some model classes that can perform the networking tasks to fetch the data you need. I'd give you an example, but I'm on mobile right now. If I have time later on, I'll follow up with an example. 
Like Carthage? I hear lots of complaints about CocoaPods. I've used it, and it has some serious design issues. I don't know why it's as popular as it is.
Have you read Apple's book? That covers everything, and it's quite well written.
Yes I think this is a problem, as when I am printing my results I also print i and I get 3, 0, 0, 0, 1, 2.
The code provided didn't work, still for some reason the array in the array still isn't being altered. When I print arrays\[i\].count, it reflects that it has been successfully added. However, the actually array located at arrays\[i\] still hasn't been changed
If you‚Äôre using storyboards, make sure your table view is still connected to your class.
Both `guard let` and `?` safely unwrap the value. Force unwrapling - `!` - is unsafe. 
‚ÄúIt has lines more than 500‚Äù This for AppDelegate or for any file? 
How would it be a challenge with code provided?
Developed app in storyboard for iPhone X. I am having issues with my SKView across the smaller devices. When I run the app on smaller devices (Iphone 5s, 6, and 7), I get these black bars around the SKView. Is there anyway to change the color of the black bars? Or is there some parameter I need to have on for the constraints to work properly?
Individual style doesn‚Äôt trump good design practices 
I don‚Äôt think it‚Äôs doable in one week and, while the book is very well written and amazing, it isn‚Äôt suited to this type of question IMO.
I had the same issue, did you try the different resizing modes? I also set the scale of my scene to 1.5 I think, which resolved a resolution issue that came with the scaling mode that worked
I get it..but is having more than 500 lines bad? Why? 
Sorry I missed this comment. It‚Äôs unfortunate, yes, but it‚Äôs [the main focus of Swift 5.1](https://swift.org/blog/5-1-release-process/) We‚Äôre currently working to make a module cache for stable modules, so we can still get the speed benefit of the binary format while using the textual format as the canonical, stable format.
Check that the IBOutlet is still connected. Try removing it and creating it again and make sure it‚Äôs an outlet and not an action. 
Already did that, it's an outlet. Re-did just for peace of mind, still got no luck ._.
How is `hvc` being used or presented or connected? I've never seen a controller simply created as a global variable before.
What layout constraints do you have?
I declared hvc as a class variable only to have access to the the labels present in HomeViewController^
&gt; A developer-led suit would likely be successful, primarily because Apple‚Äôs restrictions appear to be a clear violation of the antitrust laws. By prohibiting iOS users from accessing software from anywhere other than its app store, Apple leaves developers with no alternative distribution channel to reach iOS users. Can I sue Toyota for not making it easy for users to install my custom ECU software, or GE for my microwave oven, or HP for my laser printer, or Sony for my TV? Everything has software in it these days. Not that I disagree with any of those, as a developer, but it would open a giant can of worms that I don't think the courts want to open. &gt; But most developers need access to iOS users to survive; approximately two-thirds of spending on apps in the United States is on iOS devices, leaving developers with little choice but to agree to Apple‚Äôs rules. That's not even correct to within an order of magnitude. Not all developers make "apps", not all developers earn a salary that comes from B2C software, most developers don't target iOS, and iOS doesn't hold a majority market share. Even if Apple decided to prohibit all third-party software outright (as the iPhone originally did), developers would still 'survive'. I know lots of very successful developers who have never even used iOS. 
If Apple's 30% cut is too much then what should it be? 25%? 10%? 1%?
You need to make the `urlTrack()` function have a closure such as `func urlTrack(closure: @escaping (String) -&gt; Void {}` and then call that function from your HomeViewController in the viewDidLoad or wherever you want. Then you would do: `urlTrack { (string) in { wordCountLabel.text = string }`. &amp;#x200B; You're just creating a new instance of HomeViewController in the functions.swift file, which won't instantiate any of your labels, which is why you're getting a unexpectedly found nil crash. Your label isn't created, and it's not even the same HomeViewController instance.
Make it 60% doesn‚Äôt matter. Point is, there is no reasonable way to distribute an app outside the App Store. Take a look at the Mac, you can go to a developers website like Sketch and buy their app. The developer takes the full cut. Why should iPhone be any different?
If developers don‚Äôt like Apple‚Äôs rules then let them go make Android apps. Apple created an extremely successful software marketplace and all people do is bitch and whine about it. 
Also note that countries like Russia and China have requested Apple to censor the App Store. Meaning Apple is now a party to state censorship. Not a good look.
why do you need a global mutable String variable? Don‚Äôt get offended but you need to remove all of the unnecessary comments. It makes it even more difficult to read your code. (eg: // &lt;something&gt; end)
are you using launch images or launch storyboard?
You should not use \`HKStatisticsQuery\` for heart rates since its a discrete type instead look at using \`HKAnchoredObjectQuery\` which can use your predicate. Hope this helps.
Break in your button action and check that the delegate and data sources of the table have the expected values. 
[Programming iOS 12](https://www.amazon.com/Programming-iOS-12-Controllers-Frameworks/dp/1492044636/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;psc=1&amp;refRID=SNBBEHM3EJCY7KZWWHVA) and [Advanced Swift 4](https://www.objc.io/books/advanced-swift/) are the two books that I would say take your iOS/Swift knowledge to "better than hirable."
just change class YourViewController: UIViewController { to class YourViewController: UIViewController, UITextFieldDelegate { 
omg thank you
your left and right constraints shouldn't be relative to margins remove them and uncheck the checkbox when you'll make new left and right constraints 
Integrate the multipeer framework with my rock paper scissors vision (using coreML and my model) app :3
i defined JSONStandard as typealias JSONStandard = \[String : AnyObject\] This code is from a tutorial for using spotify's web api
You're trying to access elements of items with an int index when it's actually a dictionary, so Swift isn't sure what your trying to do. Since you don't actually need the index, try enumerating with 'for item in items' instead of 'for i in...'
Also, you shouldn't reload the table inside the for loop :) good luck!
Why not use VC? Then your logic will be in new controller and reusable, you can send back results with a delegate.
You can‚Äôt reference elements of a dictionary by index. You can iterate through it through with ‚Äúfor (key, item) in items‚Äù instead of how you loop through.
Hmm do you mean `view.addSubview(dimView)` instead of `contentView.addSubview(dimView)`? When I tried that, it put the dimView in front of everything, including the qrView. I'll give it another shot right now and mess around with it.
I think it‚Äôs Ambiguous use of subscript
Per other comments, your types are incompatible. But, I think you‚Äôve stumbled upon an A-class example of when to use `map`. Try researching ‚ÄúSwift map‚Äù.
1,000 times this. Want to slow everything and crash all the things? Try adding and removing objects as fast as the processor will allow on the main thread.
If it‚Äôs overwhelming then it‚Äôs probably the developers‚Äô fault. **Code is for humans.** The system wants machine code and from its perspective fancy English-based languages are worthless. Software projects and code itself should be sane, readable, and well-organized for the anxious primates that have to use it. My rule of thumb is, ‚Äúdoes this make sense to drunk me 18 months from now?‚Äù
What if the dictionary were, for some reason, actually based on integer keys? I would imagine that a dictionary with a non-matching key type would give a non-matching type error. @OP did you fix the problem? What‚Äôs the implicit type of the items object?
Do you have a link to the tutorial?
You haven‚Äôt casted `tracks[‚Äúitems‚Äù]` as an array. The compiler thinks it‚Äôs still AnyObject
HR killing it with the debugging!
Hey, I think you might be better served in this case by using Codable. If you have a well defined result json, you make your object match it. https://www.raywenderlich.com/382-encoding-decoding-and-serialization-in-swift-4 
 * a top space to image view that is 85 above * bottom space to a button 12 below * leading space to superview * Align to image view (bullet 1) * and a bottom space that equals default to button (bullet 2)
I would use codeable protocol to serialize/deserialize the JSON
I learned swift without buying any courses. There are some YouTubers who have great content out there for free. One thing I wish I learned earlier than I did was how to not use storyboards and strictly use MVVM because it makes things 100x better when doing high level project down the road. As a CSE major, I thought using story boards would make my life easier when building apps, but it just made it harder and cluttered my projects. Since eliminating storyboards and strictly using code, my projects have become more streamlined and way more efficient. If you‚Äôre curious of the resources I used, feel free to DM me.
I thought it was funny. Completely unhelpful but hilarious!
Op this is the answer
thanks for that
Have you tried playing with the fill of the stack? Also maybe add constraints to that button itself to inset it from the stack it sits in - I‚Äôm assuming you want that button smaller, so just constrain it off it‚Äôs superview or the stack it sits in.
Commenting to check again. Lent me know if you get an answer..
This!
I‚Äôm not a Swift expert by any stretch, but my guess is that since an int can be coerced into a String, then it‚Äôs not sufficiently wrong to be classed as a ‚Äúnon-matching type‚Äù error. 
I think you could use Codable which is a better solution
Well i was thinking of presenting new view controller, and present it over current context so it will be transperent. That way all the logic can be in that view controller. 
Ah totally, that crossed my mind too. My issue was that I wanted the QR code to animate from the contentView, which can be scrolled (not static placement on the screen), and I‚Äôm not sure I would have had an easier time making that method work. I actually realized that the issue was I simply had to set the scrollView clipsToBounds to false, and I was actually getting the position right already ü§¶üèª‚Äç‚ôÇÔ∏è Many thanks though! Your comment put me in motion to ultimately find that out.
Glad i could help :) 
Apart from the issue itself, this piece of code is a tab hell and needs rewriting a little bit
Gather the indexes/objects to append, then outside the for loop , `performBatchUpdates` and insert the desired objects; a lesson I‚Äôve learnt for the wrong reasons in my early iOS dev days :):)
I currently have the fill set to fill equally as it was the only fill type that got remotely close to what I wanted. When setting the size constraint to the button, it shrinks all of the ‚Äúcells‚Äù in the stack view to the size constraint that i set for that one button. The weirdest thing is that after I change the size of the button. The safe are shrinks as well. I‚Äôll send a screenshot of the constraints and everything shortly when I get back to my laptop.
1,000 times this. Want to slow everything and crash all the things? Try adding and removing objects as fast as the processor will allow on the main thread.
Also replace for-loop with items.map { ... }.
It's not a Dictionary, it's an AnyObject, hence why the compiler says 'ambiguous.' The compiler can't infer the proper subscript method without knowing the type. 
here is my configuration: [https://imgur.com/a/F4p6mhy](https://imgur.com/a/F4p6mhy)
Swift open source project: https://forums.swift.org You can contribute to it and help evolve the language. Thats the only one I know, though
I am sure mant succeed, while many others don't make it
I think you‚Äôre misinterpreting what I said - set a height and width on the button and then set constraints on the sides of the button to the stackview (it‚Äôs super) to push the sides back out. You may have to play with it to get the effect you need for smaller devices such as 5s but you need to tell the stack not to hug the button is effectively what you are doing.
No, those two things have nothing to do with each other. Also, nothing to do with Swift.
It's 500 rather small pages. At two pages per minute (average reading speed, and easily done if you already have "basic proficiency"), you could read it in a week at about 30 minutes per night. How is that not doable? If you want to know "advanced Swift concepts", it's hard to imagine how random blogs and articles will do a better job than the language manual itself. You're going to have holes in your knowledge for any features which you didn't happen to run across an article about.
The length of the book should be counted in words, not pages. I agree that reading it fast is possible but can you assure me you will remember everything important when reading at that speed ? It's not a story, it's a technical manual, not exactly the same cup of tea. Using it as a reference it absolutely recommended though, and I think it should be read by everyone programming in Swift at one point or another.
What do you want it to do? You're asking it to take a view and have its 4 edges fit the 4 sides of the screen (basically, modulo safe areas), and it's a grid of evenly-sized objects where one cell is a specific size. It's going to have to break *some* constraint to meet all those requirements. 
The thing is, no one is that interested in some app that may or may not get released. It‚Äôs a largely top-heavy market (with install / usage counts being dominated by like 1% of apps that are hits). But, as mentioned before, it has nothing to do with Swift.
I know you're not asking for this but a few heads up. 1. Use guards to return early and reduce pyramid of doom. 2. I would do (Network/JSON loading) in a separate class (and thread) and then inject that class instead. 
Come and help out the opensource community. There are always challenging projects to be had. Challenging in any way you‚Äôre interested. Technical challenges, marketing, support and docs. Articles, videos or just review.
Do you set the viewcontroller.view = mapView somewhere? Because if its not used, it will not be created (hence its lazy). Set a break point inside your lazy closure and make sure its called somewhere, otherwise your delegate method would not be called. 
So I have it added as a subview here. Are you saying that within the lazy var I need to call that delegate method? I may be misunderstanding private func setupViews() { [radarMapLabel, mapView, progressBar].forEach(view.addSubview(_:)) } &amp;#x200B;
Basically I want an 2x8 Grid with all the buttons evenly placed and sized to fill the screen. Unfortunately one of the buttons is much larger than the others so it needs to be resized.
Do you have sources to backup your claims ?
Did you put a breakpoint to make sure the body of the lazy var is called?
Yes the body of the lazy var is definitely called. The map renders when it's supposed to, and renders with the dark theme I have configured in the lazy var. The instance method is never called by the delegate, however (I think that's how it works).
Wrong. You assume that iOS = iPhone, it isn't. Marzipan is designed to bring iOS games to macOS, and iPad apps to macOS and macOS apps to the iPad, and it will be fine. It won't be a one button solution, but it will help manage one codebase for both desktop and iPad, and the fact that it's all under the SAME XCODE PROJECT is worth a lot.
&gt; The adviser in charge of the team seems to think that application development testing through XCode could possibly break my personal iOS device. What a fucking idiot. How do they allow people like him even be near your institution?
In the line ‚Äúif let items ...‚Äù you‚Äôre not casting it as an array. You‚Äôre making the assumption it is an array. Which it doesn‚Äôt know.
It‚Äôs because they never cast items as an array. 
Should there be a mapView.delegate somewhere
Carthage has its own issues. @IBDesignables do not work with Carthage.
Wrong. ‚ÄúUnlike the arithmetic operators in C and Objective-C, the Swift arithmetic operators don‚Äôt allow values to overflow by default.‚Äù https://docs.swift.org/swift-book/LanguageGuide/AdvancedOperators.html#ID37
There was an old module (maybe the 4S) that a couple of my colleagues had and ended up having to take them to the App Store with a ‚Äúblue screen‚Äù issue. Factory reset didn‚Äôt seem to solve the problem and 2 out of 3 of us had our phones replaced under warranty. Had ABSOLUTELY nothing in the 4-5 years since though, so probably just a weird coincidence that we were both devs! Your senior is being paranoid.
No I am saying, if its not created (lazy) at all, you wont get the callback, because mapView.delegate = self wouldnt be set at all. There fore it wont know when the map is done loading. 
Dig into some ipa files, you can glean a pretty big amount of architectural information with what you find there. 
Paul, thank you so much for the content and challenge of #100DaysofCode. I feel really motivated to stay at coding and enjoy the process this time, instead of just the frustration of the results. 
This actually fixed it! Thank you! 
I think a for each loop would do the trick
Apple has been doing this with fat frameworks. They‚Äôre not going to unify platforms, they‚Äôre going to wrap or re-implement more pieces of core SDKs as portable frameworks.
[Here‚Äôs ](https://github.com/kgellci/Area51) a great open source project you could join. It‚Äôs aimed at new comers and developers trying to gain experience. 
Awesome thanks guys
According to the [source code](https://github.com/apple/swift/blob/c262440e70896299118a0a050c8a834e1270b606/stdlib/public/SwiftShims/RefCount.h) linked in [Mike Ashe's blog](https://www.mikeash.com/pyblog/friday-qa-2017-09-22-swift-4-weak-references.html). It deinit's when the strong refcount hits 0, but doesn't deallocate until the unowned refcount hits 0. Presumably for security reasons.
I think this might be useful because of shadowing not being always immediately obvious in non-IDE environments (such as github diffs)
I‚Äôm a fan of this, makes the code more easily readable. 
I recommend not requiring it. If leaving off `self` looks strange to you, or you imagine that it provides a benefit, it's only because you're so used to seeing it in Objective-C. Try stop prefixing everything with `self.` for two weeks and then look back at code that has `self.` and it'll seem redundant. Typing `self.` is a waste of time. 
Fwiw, I never used explicit self in swift until a work project required it. I initially hated it but grew to greatly prefer it.
Code is more often read than written. I would say that keeping a mental model of all object properties (especially in extensions where the declaration may be in the other module) is a cognitive load to be considered. Although I do like a terser form.
This was a battle I lost with my team and one that seems to generally not be a preferred position across the wider Swift community. The strongest argument I can make for it is that it makes context a lot more obvious in non-ide environments like github. Even in Xcode, I like it more because then you don‚Äôt have to rely on colors or indexing to have completed.
One argument I had not considered before was that it was easier for Swift noobs to learn when using self. 
&gt;Therefore it is more important to optimize for readability than writability. Indeed, so best leave off superfluous keywords. You can tell whether something is a property or a local variable by the colour of the identifier.
In the IDE yes. In the pull request diff ‚Äî no. That‚Äôs where most of the code reading time is spent when you work in a team.
I code review in my IDE but I guess that‚Äôs fair if you don‚Äôt.
Also, if you use `self` everywhere, you rob your team of the ability to easily distinguish between the superfluous use of it and when you are capturing `self` in a closure.
What do you mean by "user preferences" ?
I mean , user defaults , sorry 
What's your Main Interface ? [http://prntscr.com/mpkx5u](http://prntscr.com/mpkx5u)
It's my splash screen.
I find self to be a terrible way to write code and not to mention read such code. Especially code I have not written and are not familiar with. The use of self undermines the idea of idiomatic code.
I don't like explicit self because it takes away from when you are capturing self in an escaping function.
Can you please send the code where you're checking a token and making navigation according to it 
I managed to get it working by taking the stop and pause button out of the stack view. I had the bottom of the two buttons constrained to the bottom of the safe area, and their center constrained to the horizontal center of the bottom buttons in the stack view. It‚Äôs not perfect, but it‚Äôs better than one button being bigger than the others.
Personally I hate the idea of requiring explicit self &amp;#x200B; I wouldn't mind a lint rule the other direction though
&gt;Original Poster Anyway it should be something like this in our AppDelegate.swift file `func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -&gt; Bool {` &amp;#x200B; `let token = getToken()` `var startUpVC: UIViewController?` `if token =! nil {` `startUpVC = getHomeViewController()` `}else{` `startUpVC = getLoginViewController()` } &amp;#x200B; `let navVC = UINavigationController(rootViewController: startUpVC)` `let keyWindow = UIWindow()` `keyWindow.rootViewController = navVC` `window = keyWindow` `keyWindow.makeKeyAndVisible()` `return true` `}`
I‚Äôm not a noob, but I‚Äôm not super experienced with Swift either, but here‚Äôs a genuine question- is requiring self everywhere a Swift best practice? In my opinion, if your code is intended to be used as a source of learning for new Swift programmers, if it was me, I‚Äôd favour best practice/canonical Swift over anything else unless there was a very compelling reason to diverge. The last thing I‚Äôd want as a programmer is for my own code to be teaching learners the wrong way to do things. 
This is true, but this is a different issue which should be fixed by the compiler. IMO, you should not be able to call \`self.\` in a closure without explicitly passing it in.
People who vehemently oppose explicit self are afraid to admit they don‚Äôt understand scoping ü§∑‚Äç‚ôÇÔ∏è
It depends on who you ask but at the end of the day, it is not a bad practice. The core Swift team considered requiring explicit self and one of the reasons they gave for declining the proposal was &amp;#x200B; \&gt; Individuals or teams that feel that explicit ‚Äúself.‚Äù is beneficial for their own code bases can enforce such a coding convention via tooling with the status quo. If this proposal were accepted, those opposed to the proposal would effectively have no recourse because the language itself would be enforcing ‚Äúself.‚Äù. &amp;#x200B; So one of the main reasons it was not added was because there would not be a way to opt out. You can read the entire reason for the decline here: &amp;#x200B; [https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160104/005478.html](https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20160104/005478.html)
Interesting, thanks for the info. With a C++ and C# background, I‚Äôve traditionally used self as a means to reduce ambiguity and even then, mostly in derived classes. Where in C++ you might make a parameter called ‚Äúname‚Äù with a corresponding member variable called ‚Äú_name‚Äù to resolve ambiguity, with C#, and now Swift, I‚Äôm noticing a gradual shift towards keeping property and parameter names consistent and using self to resolve ambiguity, which on balance is probably the better way to handle it, especially given that _ has special meaning in Swift and is also a common prefix for private fields in C++
I prefer it and I prefer initializers explicitly returning self. Swift has veered into the land of ‚Äúyeah, you expect this but Swift assumes that you know this is happening instead‚Äù and it‚Äôs just strange and unpleasant. Having to do things like ‚Äúguard if let‚Äù are just ugly, clumsy and honestly, prior to Swift, I NEVER had one case of where ‚Äúguard if let‚Äù or optionally solved a problem I ever had in over 30 years of programming. Sure, not needing semicolons at the end of lines is GREAT since the precompiler should be able to figure that out, but too many features of Swift that are supposed to make the language better end up being an obscure pain in the ass because, oh yeah, Swift decided to want to I do it this way, then changed it. Like calling super after then before initializing instance properties as Swift evolved. Argh. It is a frustrating and clumsy language. 
Thanks to friendlyg3rman, I did. Played around constraints and set scene to different fill mode! 
Thanks. Your advice pointed me in the right direction!
On the other hand, it is nice to know if you are calling a safer property accessor rather than an internal private. Coming from Obj-C, this is often the result between an abort and running without errors. 
Instead of counting each time the abc shows - what about counting during prepareForSegue and so if the counter hits 5 in there you take a different action as part of the prepareForSegue
I use self where I think the extra clarity is useful.
Can you browse your BLE device using an BLE debugging app such as: [nRF Connect (iOS)](https://itunes.apple.com/us/app/nrf-connect/id1054362403?mt=8) , [BlueSee (macOS)](https://itunes.apple.com/us/app/bluesee-ble-debugger/id1336679524?mt=12)? &amp;#x200B; &amp;#x200B;
Ha, I didn‚Äôt even realize such an app existed. I just downloaded it and I can connect to the BLE device. I also know the BLE device works since there‚Äôs another app I have that does similar things to what I‚Äôm trying to do and it works fine. Using rNF Connect, I‚Äôm able to see two services: ‚ÄúDevice Information‚Äù and ‚ÄúUnknown Service‚Äù. Unknown Service has two Characteristics, FFE1 and FFEE. I‚Äôm starting to wonder if I have to send a command via BLE to initiate viewing/receiving of the data?
This is the same reason I don't like explicit use of self when not needed.
Do you have the source code for the BLE device itself? I have only toyed with the Arduino 101 board.
I don‚Äôt unfortunately, only the example source code provided by the vendor in the link in the original post. It doesn‚Äôt seem very helpful. I‚Äôm able to connect no issues, it‚Äôs just trying to figure out how stream all of the data on the CAN bus to my iOS device so I can log it. I thought it was going to be as simple as connecting and setting the notify flag to true, but that doesn‚Äôt appear to be the case.
Maybe practice first with a BLE device where you control its source code, such as Raspberry Pi or Arduino. &amp;#x200B; Then later when you have a good understanding of how BLE works, then experiment with the device again. Maybe it's not well-behaved.
I still don‚Äôt know what the issue was. I ended up starting a new project and copying all the files over. Now everything works. 
I posted this in the issue itself as well: I expect that everybody already knows this but I think it bears saying none-the-less. To require explicit self would be very much against all the most popular and established swift guidelines and most if not all of the ones in existence... Is that something you really want to do? https://github.com/raywenderlich/swift-style-guide#use-of-self &gt; For conciseness, avoid using self since Swift does not require it to access an object's properties or invoke its methods. &gt; &gt; Use self only when required by the compiler (in @escaping closures, or in initializers to disambiguate properties from arguments). In other words, if it compiles without self then omit it. https://github.com/linkedin/swift-style-guide &gt; 3.1.11 Prefer not writing self. unless it is required. https://github.com/github/swift-style-guide &gt; Only explicitly refer to self when required &gt; &gt; When accessing properties or methods on self, leave the reference to self implicit by default: https://www.appsfoundation.com/post/swift-code-convention-and-guidelines &gt; Self &gt; &gt; Avoid using the word self because it is not required in SWIFT for object properties or methods. https://engineering.vokal.io/iOS/CodingStandards/Swift.md.html#usage-of-self &gt; Usage of self &gt; &gt; Except where necessary, avoid using self.. If you have a local variable that conflicts with a property name or are in a context where self is captured, you may need to use self.. &gt; 
I remember in the '90s when the fad was to preface every member-variable with `its` or `m_` in order to make the scope explicit in C++. These sorts of hungarianizing (and yes, requiring explicit self is a form of Hungarian notion) fads come and go over the years...
I'm going to reword your requirement and you tell me how far off I am... Every fifth time the home screen is shown, I want to display an interstitial ad. If the above works for you, then I recommend you increment your count in the home screens `viewDidAppear()` and when it hits 5, present the add there. (Don't forget that when the add is exited the count will increment again so take that into account.)
The real answer here is to use UIControl's target-action system. No delegate necessary. class ViewController: UIViewController { var aTextField: UITextField! var bTextField: UITextField! var aValue = "" var bValue = "" override func viewDidLoad() { super.viewDidLoad() // do the below, or set it up in the storyboard/xib file aTextField.addTarget(self, action: #selector(textFieldChanged), for: .editingChanged) bTextField.addTarget(self, action: #selector(textFieldChanged), for: .editingChanged) // above you can use `.editingChanged` or `.editingDidEnd` depending on your needs } @IBAction func textFieldChanged() { // it doesn't matter which field caused the trigger. You can just make sure all the properties are up to date. aValue = aTextField.text ?? "" bValue = bTextField.text ?? "" } } 
Another comment that will likely get downvoted a lot. You should write your project in such a way that switching between parse and firebase requires simply swapping out a single file.
MacOS 9 and earlier didn't have protected memory. In those operating systems, you could over-write the kernel accidentally and bring the entire machine down. Even then, a restart was all that was necessary but tracking down those sorts of bugs was a huge PITA. That was a long time ago though...
Did you set the delegate?
What I'd try instead is having a view around the buttons, and then centering the buttons on both X and Y within the view. The stack should be set to 'fill equally'. Now, you may need some other constraints depending on what devices you support, but that should give you a solid start. 
Yes. That is my intention. I will give it a shot. Thanks. 
It really comes down to the flow of the app. Flow Main -&gt; Secondary view controller --&gt; back to main (present interstitial if 5th time). Feel like an interstitial between the main and secondary view controller would hurt the flow of the app. 
I believe so. I was just trying to closely follow [this Bluetooth LE tutorial](https://www.raywenderlich.com/231-core-bluetooth-tutorial-for-ios-heart-rate-monitor) but clearly I'm pretty lost. I thought everything was making sense until it wasn't, lol. 
Ahhh got it - how about didMoveToParentViewContriller on the secondary ... You could also use an I wind if you wanted to put a custom UIButron into the nav bar... https://stackoverflow.com/questions/25358482/unwind-segue-from-navigation-back-button-in-swift
Don‚Äôt require it, let the compiler figure it out for you. Most projects, and guidelines for them, don‚Äôt do it. $.02.
While this doesn‚Äôt directly answer your question, you could probably find the exact object that is leaking using XCode‚Äôs Allocation Instrument tool. Just do a Build for Profiling and choose the Allocations Instrument. As you use the app on the simulator the tool will keep track of every one of your objects. It will take some time digging into it, and you can use the filter search box to help, but eventually you should find an object that is not being released when that navigation you mentioned occurs. Once you find that object you‚Äôll have to trace through where you are using it and find where it has a strong reference that isn‚Äôt being deallocated. There‚Äôs a lot of reasons why a memory leak could occur, but these steps should help you investigate it a little more. Good luck!
Maybe have a look at uinavigationbardelegate: [https://developer.apple.com/documentation/uikit/uinavigationbardelegate](https://developer.apple.com/documentation/uikit/uinavigationbardelegate)
Actually we already tried this, http://basememara.com/memory-leaks-resource-management-swift-ios/ but it seems using rxswift inside the viewmodel cause memory leak, so we added disposeBag still didnt solve the issue, but yeah before i post this, we already tried some research and development. what bothers me is we dont know whats the common lifecycle/architecture of MVVM + RxSwift. Im not that good at Swift. ill try to add the viewmodel code. 
Your a poes
Your a poes
You're* you're = you are your = the next word or phrase belongs to you You can learn this! Yes, you can!
You're* you're = you are your = the next word or phrase belongs to you You can learn this! Yes, you can!
I prefer it. It‚Äôs easier to read and understand quickly what is a local reference or an instance reference. 