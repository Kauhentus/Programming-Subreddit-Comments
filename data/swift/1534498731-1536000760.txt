The other answers here don‚Äôt explicitly answer why this is happening. It‚Äôs because in cellForRowAtIndexPath you‚Äôre likely calling dequeueReusableCellWithIdentifier. When that‚Äôs done, cells that are scrolled out of view will be recycled and used for new cells coming into view. If you add a view to a cell and don‚Äôt remove it somewhere, it will exist every time that cell gets reused. 
Yes I think that the compiler focuses on the \`public ... : MyProtocol\` part and gets angry, rather than parsing it as \`public EXTENSION (while also declaring conformance)\`. It's quite stupid IMHO, we should add a Swift improvement proposal :D 
Thank you, would be interesting to try it out!
Well Vista never had the installed base of XP or 7 so there you go.
It's* over 2+ million it's = it is or it has
That's what I needed to hear. I guess I was just good at making sure that arguments weren't nil : ) 
Hi waterchiller! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because ‚Äì generally speaking ‚Äì compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/9821z4/unique_quiz_app/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Man you have enough time to think about that?
You can use it without having confirmation from Snapchat. The confirmation is required when uploading the app to the App Store, but for development purposes, The API is free game
Great post, thank you.
You have a comma in your parameter. It should be `(cardButtons.count + 1) / 2`. That said, this is a code smell, to me. What if cardButtons.count is 0 or cardButtons is nil? Maybe the Concentration class handles that, maybe not. In either case, I'd do a little more defensive programming and calculate the value ahead of time, doing any validation and passing that constant as a parameter, rather than a calculation. 
This is a great example for a good use of operator overloading :-) For some feedback, your terminology does not really align with standard "math" terminology. For example, why does a \`Term\` have \`Exponentiations\` and a \`coefficient\`? Something like "a+b" is a term. Your "term" struct is something else. The way you compose your expressions also doesn't really add up, but if your API works out as expected, I guess it doesn't matter that much. In your example, there are also some terminology issues... \`let equation = (3\*x + 5\*y - 17) \* (7\*x - 9\*y + 23)\`: That is not an equation, it's a term. An equation contains an equals sign. \`let equation = (x = 5 \* b)\` would be an example for that, but unfortunately, you can't override \`=\` like this in swift (and I don't think that you want to support that, anyway). In \`equation.solve() {\[ x &lt;- 4, y &lt;- 1 \]}\`, "solve" isn't the correct word either, I think "evaluate" would be better. I like the way you did the assignments though! As an example for what I'd expect \`solve\` to do: \`let equation = (a+b=0); let solved = equation.solve(for: a)\`. The result would be equation \`a = -b\` (or maybe just the term \`-b\`). In other words, I'd expect to solve an equation for a variable, and as a result, I do not necessarily expect a numeric value - a term that does not contain the variable I solved for is also ok. 
Stuff like that is generally handled with some sort of graph or tree structure. That way you can have locality of reference, any branch of the tree is likely to have a group of nearby objects. [Quadtrees](https://en.wikipedia.org/wiki/Quadtree), [binary space partitioning (BSP)](https://en.wikipedia.org/wiki/Binary_space_partitioning), and so on. Take a look at this for some ideas: [Spatial Partition](http://gameprogrammingpatterns.com/spatial-partition.html)
Great feedback thanks! Will write a longer answer soon.
True, it came on a laptop that I bought and so some had no choice what OS came on the system. As far as SmallTalk goes, the point is that others had systems good enough for them to stick with. If some language is late to the game and is better, it still means that all the investment in code base has to be tossed. Getting people to convert source code and to learn a different language like SmallTalk when they have a working system, just isn't going to happen. I bet the upgrade to Vista was pretty slow, IIRC, many just stuck with XP or something else.
I just spent a significant portion of the day trying different ways of implementing this using a UICollectionView and let the collection view recycle the views. Based on my observations I wouldn't recommend using a UICollectionView for such an implementation. My approach was to follow the answer of this question ([https://stackoverflow.com/questions/29302772/uicollectionview-scroll-horizontal-and-vertical](https://stackoverflow.com/questions/29302772/uicollectionview-scroll-horizontal-and-vertical)) to implement a custom UICollectionViewLayout and allow both vertical and horizontal scrolling. Next, was to return a larger numberOfSections as well as numberOfRows to have sufficient room for the user to scroll before hitting the edges. Unfortunately UICollectionView attempts to keep track of how many cells are in each section, to recompute various coordinates and generally use a ridiculously large amount of memory to do so. As an example, creating a 30,000 sections by 30,000 items grid (quite a far cry from the 10000000 "arbitraryOffset" from my tutorial) UICollectionView required 6.45GB of memory. I also opened this question on StackOverflow in case someone had an easy answer: [https://stackoverflow.com/questions/51900329/how-to-reduce-memory-usage-on-uicollectionview-with-large-quantity-of-items](https://stackoverflow.com/questions/51900329/how-to-reduce-memory-usage-on-uicollectionview-with-large-quantity-of-items) Now, there are several things we could have done, such as creating fewer cells and making them quite large, but that would defeat the purpose of having the UICollectionView manage allocation/deallocation of the individual grid tiles.
&gt; I would like to know if I should call beginUpdates() and endUpdates() everytime when I reload data in the UITableView? No. Let's say you want to animate inserting a row, so you call `insertRows(...)`. But let's say you want to insert a row AND delete a row AND move another row down 2 places. But if you call insertRow then deleteRow then moveRow, each will animate one by one. Instead, you want to animate them all together. That's when you call `beginUpdates()`. You call it, then you perform all the changes, then you call `endUpdates()` and the tableView animates all of your changes simultaneously. I think `performBatchUpdates()` is the more modern and preferred way to do this.
Right people tried to avoid it when possible, often converted installs back to XP. It was actually pretty good if your machine had decent drivers, Windows 7 was not much more than a paint job but by then everybody had drivers out.
Thanks, that‚Äôs what I thought!
Looks very nice. Would love to see it as a GitHub repo :) 
IMHO it‚Äôs Not the right way to address this. Better it would be to implement this via an custom transition using the UIViewControllerTransitioningDelegate. 
**YES** Python can be used as a programmatic interface within the lldb command interpreter, * To add custom commands * Performing complex operations * Automated debug sessions you can get more information here the [LLDB Python Reference](https://opensource.apple.com/source/lldb/lldb-159/www/python-reference.html)
Awesome üòé Thank you üòä 
Ok so this might not be the preferred option but it works for me. Instead of using self.addChild for all your nodes, make a parent SKSpriteNode for all other nodes, and then add this new ‚Äúglobal world‚Äù node as a child of the scene (self). In addition, when you are sizing things, dont do self.size.width/4 or something like that. Use globalWorld.size instead OR you can just use constants for everything which i will explain in a second. Since this is all part of one global node, you can resize this global node and everything will scale with it. So what i do is i develop everything based on and iphonr 6s screen (all the condtants n stuff) and then i scale the global node up to be as big as it can be, while maintaining its aspect ratio and centering it on the screen. Then i design my game to have some unnecessary space on the edges (a buffer zone) that can be clipped or added without a large change to the game. This is how a lot of tv shows are filmed ( i believe). If you need me to explain this part better let me know because its the core prt of this method This then allows you to pick a screen size to design the game on and guarantee that everything in the globalWorld will look exactly as you programmed it to look, with small automatic variation for any screen size. 
Interesting, I'll give it a try.
It depends what you want to achieve. Python is quite useful for small scripts or hacks. On the other hand, if you use fastlane, you already have Ruby as a scripting language in your projects. So why not learn that one. If you try to add some backend knowledge, it's the same again. Yeah Python can do the job, but there are other languages which might be better at the job (once again Ruby comes to mind, but also Go). In short, fanning out your languages can be useful, but check, wether you're not using other languages already and consider them, rather than a language which would add complexity to your projects.
&gt; Its kind of becoming It's* kind of becoming it's = it is its = the next word or phrase belongs to it : /
ML? There are too many things this can mean.
In the very same sentence he says: ‚Äú...because machine learning...‚Äù Any acronym can mean a lot of things. 
I am only talking about iOS and obj-j developers this is the best way to move .it not only give you knowledge of a new tech but also secure your future. because in IT getting knowledge of new technology is common if you not learn daily new then things then you will be the looser of future.üòâ
It shows many people the wrong way. It‚Äôs like a bad behavior you do on push ups. You can do it but it will hurt your body. You shouldn‚Äôt do it only when you can. I see this all the time in code that the bad behavior is just a short cut that will hurt you in the future. When you know about the right way, why do you want to teach the wrong way. 
SkScene.scaleMode does a similar thing with scaling everything inside the scene. There are different options depending on how you want to deal with scaling. The strategy carshalljd describes above, designing everything to fit inside an ‚Äòalways visible area‚Äô, is still relevant but the extra global node may not be needed
You just replace the syntax used in the deprecated form and usually Xcode will auto fix it if the name of the new form is similar to the old form. If its one of those functions that are completely gone and not remade in a different form, then you just find the new way to do it by looking at the new API. The deprecated code will still work if your project is designed for an iOS version that the deprecated code was valid for. They usually leave a grace period of one whole version for developers to make changes to accommodate any deprecations. Its sorta impossible to deal with deprecated code if you don't know how the original methods worked in the first place. That line of code just looks like its checking the metadata for a downloadURL value and converting it into a String so it can assign it to imageURL. You would go around that by first finding out what kind of values are in the metadata, then finding the new way to grab the "downloadURL" value, and then turning it into a String. Just do something like "print(metadata)" and see if you can see any values in it in the console log. If its like a mess of data, then you can figure out that "downloadURL()" calls a function on the metadata and the return value of downloadURL contains what you want, and the absoluteString probably just converts it to a string type. So if any one of those are broken from deprecation, you just look up the API docs, and find which functions will give you the result that the deprecated feature used to give you.
I'd suggest working through cs193p. It's a Stanford lecture about iOS development for free and quite up to date (well.. fall lecture). But this way you would learn Swift basics and it would enable you to understand the changes needed to fix your code.
I use Python frequently when developing for iOS. Any time I want to automate something that would be more than a couple lines of shell script, I use Python. It‚Äôs an easy language to pick up, especially if you already know some other languages.
Probable typo dude. He used ‚Äò elsewhere properly. It‚Äôs just a comment mang.
Python is nice for API‚Äôs or webviews. I used it with Django mainly, Flask is nice too. Nice language, good tooling, lots of good resources to learn because it‚Äôs big, more academic and used by more grown-up developers compared to JavaScript. Elixir/Phoenix is a super nice stack as well. A bit niche though.
can't get youüßê
this person is just nitpicking. clearly someone with a lot of time on their hands.
Learn typescript instead.
Dealing with asynchronous (non UI locking) longer running background processes like network requests or something like heavy photo filters (that would be cool if you know or easily understand the algorithms already) is a critical piece of knowledge. So access the API of your favorite site (like Reddit) and do something cool with it.
Check out a library called hero. This could be done in a few lines of code
Unless you wanna do backend stuff for your app, it improve your experience of iOS dev little to none. If you need a backend, maybe firebase already a good fit for you.
I would say it‚Äôs absolutely worth learning Python as an iOS developer. I‚Äôve used it extensively for Lamba functions, building backends, and web scraping. Python has an amazing community which has also built many amazing libraries that are a pleasure to use. If I‚Äôm working on anything outside the context of an iOS app, Python is always the first language I reach for. 
Haha yes it was a typo but rip that guy -25 upvotes is dirty
So? Take the time to get it right. We can edit our posts for a reason. Fix the mistakes. It's not that hard.
Adding arguments makes your standpoint much stronger. 
Make a list of 5 things that ML means.
Learn to read documentation and source over looking for examples. You'll always be behind the curve if you're not doing this. Second, write abstractions over pure API calls and then call those abstractions in the main pieces of your code. This will make dealing with changes quite a bit easier. 
How I imagine u/aazav: http://imgur.com/SCJGJuV
&gt; Second, write abstractions over pure API calls and then call those abstractions in the main pieces of your code. This will make dealing with changes quite a bit easier. This. 
I suppose there‚Äôs not much difference between `let _ += f()` and `f()`. However, one use could be where you want to execute an anonymous block without assigning it to anything: ``` let _ = { var a = 0 let inc = { a += 1 print(a) } inc() }() ```
I assume you mean that `f()` returns `Void`, actually `Void` is not really the same as "nothing". You can for example put 2, 3, X `Void` in an array. `let voidArray = [(), (), ()]` and sometimes later do something like `voidArray.forEach { _ in doSomething() } // will be done 3 times`. Of course that is a bit strange code. But there are other scenarios where `Void` is important, e.g. in reactive programming RxSwift we need [`tap: ControlEvent&lt;Void&gt;`](https://github.com/ReactiveX/RxSwift/blob/master/RxCocoa/iOS/UIButton%2BRx.swift#L14-L20) to keep of track of the event that a button has been tapped. Which other type should we send than `Void`? `Void` makes perfect sense here. But it is not the same as "nothing". Also the syntax `_ = f()` does not really express anything. In Swift we use either `let` to express a variable being a constant (immutable if `struct`). Or `var` for non constant. What should the compiler parse `_ = f()` as? 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ReactiveX/RxSwift/.../**UIButton%2BRx.swift#L14-L20** (master ‚Üí e27cded)](https://github.com/ReactiveX/RxSwift/blob/e27cded029c8c0df61d4f4778705921015f5741b/RxCocoa/iOS/UIButton%2BRx.swift#L14-L20) ---- 
Have you set the class for the VC in your nib file?
If you are doing anything with Modulus do note that Python mod does not follow ANSI C (which Swift follows) standard. In Python Modulus never returns negative numbers. This was an important learning for me developing my [Elliptic Curve Library](https://github.com/Sajjon/SwiftCrypto).
Void is an empty tuple. Contrary to C-based language, you can instantiate it (but it has a single possible value, so it‚Äôs not terribly useful). 
Although in that case you could just write that as: do { let _ = { var a = 0 let inc = { a += 1 print(a) } inc() } 
`_ = arbitraryExpression` throws the value of the expression away. It's perfectly normal syntax. The answer to OPs question is, as you said, that `Void` isn't nothing. It's the unit type, i.e. a type with only one value. In this case, the empty tuple `()`. All functions in Swift return a value (although `Void` returns are optimized away). That's the reason you can discard the value of a `Void` function, it's merely explicitly writing out what the compiler already does with `Void` returns.
Its not the biggest problem in the worlds man!
bug 1: override func viewDidLoad() { super().viewDidLoad() callgetMyProfile() } Did you set a breakpoint on MyAccountViewController's viewDidLoad? On ``let Obj = MyAccountViewController(nibName: "MyAccountViewController", bundle: nil)`` ? Are these breakpoints hit? You write: &gt; when i select the tableview row the app crashes with the error Exactly what error is it?
Aha nice, I did not know. Not so useful though.
I certainly could see the compiler discouraging this, but it‚Äôs something that could better be handled by a linter. Regarding the ‚Äòlet _‚Äô vs just ‚Äò_‚Äô, there are cases where you would need the former, if you were destruction a tuple: ‚Äòlet _, foo = bar()‚Äô. But in most cases the shorter form is more convenient. Some developers might prefer to just use a single syntax for all situations though.
\&gt;Second, write abstractions over pure API calls and then call those abstractions in the main pieces of your code. This will make dealing with changes quite a bit easier. I don't understand what that means...
Setting myScene.scaleMode = .aspectFill or myScene.scaleMode = .aspectFit will keep the aspect ratio the same. Part of the scene may be chopped off as you described above. .resizeFill and .fill will change the aspect ratio but everything will be shown. I'm sure they all have their use cases but I'd usually go with aspectFit or aspectFill.
Your format string is incorrect, it should be: "MMM dd, yyyy hh:mm aa"
[https://medium.com/xcblog/a-history-of-ruby-inside-ios-development-427b5a09f91e](https://medium.com/xcblog/a-history-of-ruby-inside-ios-development-427b5a09f91e) I think Ruby also worth learning for iOS Development.
I have added `super.viewDidLoad()` the problem still persists. i added the breakpoint at `let Obj = MyAccountViewController(nibName: "MyAccountViewController", bundle: nil)` when the 'indexpath.row==2' loop ends it takes me to another window where the line `0x107c4e839 &lt;+1810&gt;: movq %rbx, %rdi` is highlighted as green and when i set breakpoint at callgetMyProfile() in viewDidLoad after the func completes it takes me to a window where the line `0x110ae246c &lt;+1235&gt;: movl (%r14), %eax` is highlighted as green
The screenshot really helps. To debug this, it helps to know a little Objective-C. So: it created a MyAccountViewController, and connected it as the dataSource to a UITableView, but the MyAccountViewController doesn't correctly implement the UITableViewDataSource protocol. the UITableView tried to call the MyAccountViewController's @objc func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int { } and didn't find it and crashed. (I'm typing this on an old Mac, so my Swift might be slightly ancient.) 
I always consult nsdateformatter.com when it comes to finding correct formats. You can input the current format you‚Äôre using and hopefully confirm if you‚Äôre correct or slightly off. 
That's what the problem was. Thank you 
how to solve it then?
You should have.
Good work on giving it a go though! I recently did something like this and used CAShapeLayers for the drawing. Sort of implemented my own cell reuse to limit the drawing and the performance on that was pretty good
raywenderlich.com Udemy.com medium.com . . . 
Try building a weather app. You will learn how to get GPS data from the iPhone, using an api to retrieve weather data and serve it to the user. I think its a good beginner app because: 1. It reinforces UI building skills in the story board 2. Teaches something new such as working with APIs 3. Also teaches you how to use a resource on your iPhone. 4. Pushes you to read apple docs, stack overflow. Honestly building this app probably will push you to be more of an independent developer. Remember to be a good developer. Do a lot of planning and research. \~ Don't forget to have fun 
Site is down, is this project still active? 
I will definitely look into this, it sounds fun and not so harf for someone like me thank you!
I will definitely take a look 
It sounds complicated, where would I start from any tips?
Ugh, looks like I ran into [this issue](https://github.com/rtfd/readthedocs.org/issues/4395)... I tried the fixes they mentioned, but it's not working. üòû I'm working on a proper Swift from-source Flatpak anyway, so I guess this is perfect timing. ¬Ø\\\_(„ÉÑ)\_/¬Ø
It's because you're incrementing points, not score. This: if difference == 0 { title = "Perfect!" points += 100 } Should be this: if difference == 0 { title = "Perfect!" score += 100 }
score += points is used only once... 
Thanks! got it fixed. 
Thank you so much! :D
no problem. I liked it so I thought why not share
Also, considering you are comparing the same value over and over you should use a `switch` statement.
I may go back and do that however being new to this I haven‚Äôt learned switch statements yet
Hmm, I haven't worked on Amai for a few months (again, trying to set up a much better Swift Flatpak, and also waiting to see if GTK+ 4 would be a better target)... What exactly isn't working? FWIW you need GTK+ 3 in order to use it. (BTW I saw that you sent a message on Keybase, but I'm actually locked out of my keybase account...)
depending on your skill level and if you ever become interested in machine learning and making your own models. Having knowledge in python would give you an edge in machine learning for iOS. Good luck 
Interestingly enough, the site didn't find any difference between using `yyyy` and `YYYY` - although when I ran it in a playground they did show a difference.
Hey! 'Coordinate arrays' freaked me out the first time I saw the pre-written code in some of the challenges. But, like you said, you gotta persevere through it. And it does get a lot easier. Now, I'm comfortably able to create my own little projects in the last 'World Creation' challenge all by myself. (I've built a pyramid, a tower &amp; other stuff with coordinate arrays so far.. Sounds super silly but it feels great to be able to say that, being totally new to the world of programming.) The key is to keep coming back at it from different angles and practice what you've learned. As for now, I have finished Learn to Code 3 and am now attempting some of the other additional challenges within Playgrounds &amp; also brushing up on what I've learned so far (by revisiting &amp; redoing some of the challenges from Learn to Code 1, 2 &amp; 3). Next stop on my Swift journey would be Apple's 'Intro to App Development With Swift'. It's a short iBooks guide for beginners, like you and I, where you apparently learn how to create an app in XCode by following the instructions therein.. I should god-willing be getting started with that in about a week. But before I do that, as I said, I feel I should be brushing up on some essential concepts. So I am going to do that for another week. You are not very far behind yourself, it seems. Keep me posted on your progress. 
If you want a book on Swift, Apple provide a free one online, https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html. If you want tutorials, this is really good, https://www.raywenderlich.com/ios. 
Try to cast the first character as an Int?
Right now, you need to set a tag for the release otherwise SPM won't work: Updating https://github.com/kirbyfan64/Amai error: dependency graph is unresolvable; found these conflicting requirements: Dependencies: https://github.com/kirbyfan64/Amai @ 1.0.0..&lt;2.0.0 'Teste' /tmp: error: package has unsupported layout; found loose source files: /tmp/teste.swift 
check out this stack over flow [answer](https://stackoverflow.com/questions/38159397/how-to-check-if-a-string-is-an-int-in-swift). looks like they attempt to cast it to an Int and see if it fails. It could be said that if it does, then it‚Äôs a letter. However there are edge cases to consider with symbols.
`CharacterSet` has some static vars that might be interesting to you. `CharacterSet.letters` can be used to check if the first character is a letter. 
 import Foundation let text = "1yes" if let first = text.unicodeScalars.first, CharacterSet.decimalDigits.contains(first) { print(first) } 
https://thatthinginswift.com/
I am pointing that you can go to the repo and can get knowledge of UBER like company code and what approaches they use for what kind of stuff. it is very good to compare someones idea with ours..................... I hope you get the point or want something more
you can go to the repo and can get knowledge of UBER like company code and what approaches they use for what kind of stuff. it is very good to compare someones idea with ours.....................
Now explain how Swift is elegant and intuitive :) 
[https://github.com/uber/ios-snapshot-test-case](https://github.com/uber/ios-snapshot-test-case) can also get obj-c code of snapshot testing in uber app how they do. if you know that what it is.
idea about writing code and how the think and implement there ideas on their app such as \-&gt;what design pattern they use . \-&gt;testing technique \-&gt;efficetn code etc.
If you're looking to learn iOS development with Swift, I just recently started watching the Stanford tutorial series on YouTube. I think it's very educative (I watch it on 1.5x speed though) but sometimes when the tutor tries to sell how great swift is (it is), he says outdated things about other languages(just something to look out for) but I really enjoy the lectures (so far at least I've been enjoying them) 
It might be the old Perl hacker in me, but I reach for regular expressions to answer questions like this. It's pretty much what they were built for. let testStr = "1yes" let regex = try! NSRegularExpression(pattern: "[a-z]", options: [NSRegularExpressionCaseInsensitive]) NSRange rangeOfFirstMatch = [regex rangeOfFirstMatchInString:testStr options:0 range:NSMakeRange(0, [string length])]; if (NSEqualRanges(rangeOfFirstMatch, NSMakeRange(NSNotFound, 0))) { print("Begins with alpha") } else { print("Begins with non-alpha") }
It might be the old Perl hacker in me, but I reach for regular expressions to answer questions like this. It's pretty much what they were built for. let testStr = "1yes" let regex = try! NSRegularExpression(pattern: "[a-z]", options: [NSRegularExpressionCaseInsensitive]) NSRange rangeOfFirstMatch = [regex rangeOfFirstMatchInString:testStr options:0 range:NSMakeRange(0, [string length])]; if (NSEqualRanges(rangeOfFirstMatch, NSMakeRange(NSNotFound, 0))) { print("Begins with alpha") } else { print("Begins with non-alpha") }
Consider that it may be more convenient to encode your string as Data. String handling in Swift is heavy to support Unicode, but from your use case it sounds like your string might be closer to a sequence of bytes that need processing than from a piece of data that must support the wealth of human languages. 
And my point is that it's a pretty low-content post when it's just a link. Why not add some value to the link and start a discussion in your post?
Oh yeah, I haven't tagged a release yet since I'm still working on it. Normally, you would use \`.branch("master")\` when working with Swift PM directly. Marathon doesn't seem to have a way, though? (FWIW Amai directly accesses the GTK+ C APIs and don't use any Swift wrappers.)
I used to really praise Swift for being (I thought) super advanced and forward-thinking compared to Objective-C. The more I work with Swift the more I find things it just shamelessly stole from older languages (which makes it a stronger language, no doubt). I feel like my excitement for Swift has turned lately into "Wow it's amazing how many things we couldn't do in Obj-C, while everyone else was doing them for the past 10 years"
the real LPT is always in the comments
While there is no official Swift or Objective-C wrapper, you can use the C interface library for MySQL if you need a bigger database.
Exactly. I've learned that being biased to one language can be very damaging 
You'll need to post some sample code of what you're doing. Are you using Storyboards?
Core Data
This is the most likely thing. You likely have you seque set to push or some other type that automatically performs it. And then you are calling it again in code. 
Do you have code signing enabled in your project &gt; General settings?
Make a cool little method that tries to convert to an Int and throws if it can't
I just had this happen. Ended up having to go to the Keychain and changing the Trust to System Defaults on my developer cert 
po won't work properly if your targets are compiled for optimization
Okay.. Thank you.. I will check this..
Autocorrect.. üôÑüôÑüôÑüòêüòê
[removed]
If your timeline isn‚Äôt super serious, Apple is introducing the new network.framework in Mac OS Mojave/iOS 12 that will handle all of this for you. 
I'm glad you got the math fixed. I'm going to critique you on other stuff... You are doing all this math in a function called `showAlert()`. What you should be doing in this function is showing an alert, not math. You should have a different function for calculating the score, maybe called `score(forPoints: Int) -&gt; Int`. This function is also determining what the title should be, that should be done in yet another function, maybe something like `title(forScore: Int) -&gt; String`... In general, you want to separate your logic from your effects. The logic that determines the score and title needs to be separated from the effect of displaying the alert. This will make your code easier to understand, test, and explain to others.
Is it an uppercase number or a lowercase number?
The top voted answer works pretty good, but just a question: why is your first instinct to compare to 26 (or even 52 characters) instead of comparing to 10 digits? That is obviously a faster way.
curious what you are trying to do with this function?
I personally think their app is pretty shitty... but that‚Äôs just my opinion!
yes I know Uber Is good but is not open source.
I found the problem. My long press action was triggering multiple times. I'm still not sure why this was happening but I got it solved anyway. 
Only a few application categories can run in background, but if you're not using the app store you're not bothered by review and can do it anyway https://www.raywenderlich.com/890-background-modes-tutorial-getting-started
Yes I do, I have a dev account as well
How do I change it to System Defaults?
If I'm not mistaken not. If user kills an app it can't work in background and perform background updates until user launches it again or restarts their device. To work in background you don't need user's permissions. You just need to fall into one of app categories, allowed to run in background. 
There are ways of doing this. Ideal way: silent push notification. This should wake your app up briefly, which should be long enough to run your process. Less ideal way: since you will be an enterprise app you can enable audio in the background and play a silent audio file. Least ideal way: this technique comes at a massive battery drainage price. You can toggle gps tracking off and back on. You will need a second process like the accelerometer that will fire a block with every movement of the phone. In this block you can watch the applications background time remaining and toggle gps when the number gets lower that infinity. 
it is perfect
I may be mistaken, but .branch("master") is not supported in Swift 4.2. But I have to check.
AFAIK you can only run Swift applications on Ubuntu Linux. See swift.org
Thank you for the feedback. I will use that going forward. I was literally just copying what was shown in the tutorial on Ray Wenderlich and this is the way he had it laid out. It was the introduction course so I assume in later videos he will correct the way he lays out coding to be more in line with best practices. 
Swift is a way better language than ObjC. You should use Swift. It's still got plenty of warts. It has to interop with ObjC, so you often see ObjC crud leaking in and making Swift worse than it should be. Generics in particular. However, Xcode sucks. I **still** can't rename a symbol in Xcode more than half the time.
Long presses trigger multiple times. You‚Äôll usually want to have a check like `gr.state == .began`. 
OpenVZ or KVM VPS? If KVM, then consider running them in Docker containers using https://hub.docker.com/_/swift/
That‚Äôs the only place supported maybe, but that just means it‚Äôs harder on other distro‚Äôs, not impossible. (No prebuilt packages, so compile from source)
Let's hope so. In the mean time, keep in mind that once you get the code working that's your *first draft*. You aren't done until you have run the code through an editing cycle to produce your final draft and there could be multiple drafts between first and final. The buzzword is "refactoring" but it really isn't any different than what you would do with a book report or newspaper article. Rework the code to make it clear and concise. 
The change from Swift 1 to 2 was painful, but from 2 to 3 and 3 to 4 weren‚Äôt really all that bad, and the tool to help migrate the code worked OK. I started writing Swift back in V1, and at that time examples and community were quite limited. I find these days that I‚Äôm pretty happy with the level of community and resources. I‚Äôd say that if you were starting a fresh project today and didn‚Äôt have the Objective C background, Swift would be the logical choice.
&gt; Seems pretty elegant and intuitive for me! Well‚Ä¶ until you get to the part about CharacterSet not actually working with Characters. 
I don't really think you can, at least not easily. Linux binaries aren't particularly portable; you'd need to compile everything on an old system (so glibc will be happy), as well as include any dependencies (because shared library names differ). If the source system uses symbol versioning, that's a whole next set of problems. **TL;DR:** Don't do it. If you must, try using ldd on the binary and ldd on all its dependencies, and then it *might* work. Might. 
I am very sorry, I actually know little about programming! I am a full Linux user as well, so I wouldn't be helpful on macOS development.
A lot of big companies use Swift exclusively for their flagship product. There's no inherent reason not to use it. Some of the early adopters like Google still use ObjC because they can't justify rewriting their existing apps. That's likely true for a lot of places, but it's no knock against Swift.
&gt;full Linux user as well Ah, ok! I saw the screenshot and assumed that you frequented both platforms (which was a stupid assumption to make considering these are comments on the Swift for Linux post... ü§¶‚Äç‚ôÇÔ∏è). As a side note, if you find Amai's widget rendering interesting, you might like Flutter. 
Find your certificate in the keychain. Double click it. Open 'Trust' and go from there. If you don't know any of this ....its probably not the problem. If it isn't, test out your setup by building an shell app with only a label or something on it and try to deploy it to you phone. Do you have any artwork in this app you are trying to deploy? JPG...PNG...? Something like this could happen if XCode doesn't like the attributes of the artwork you are using. if that is the case those attributes would have to be stripped out. Read the error message carefully
&gt; until you get to the part about CharacterSet not actually working with Characters. Which is part of how Unicode makes everything messy. `CharacterSet` maps to [Unicode character properties](https://en.wikipedia.org/wiki/Unicode_character_property) which are sets of code points (`Unicode.Scalar` in Foundation). [`Character`](https://developer.apple.com/documentation/swift/character) represents a Unicode glyph, composed of one or more code points. This means that a `Character`, a single unit of `String` can have multiple `Unicode.Scalar` values. In order to test a full `Character` in a string you need to break it into each of its `Unicode.Scalar` components and test each of them. Like this: import Foundation let text = "1yes" func isFirstAnInt(string: String) -&gt; Bool { guard let first = string.first else { return false } for scalar in first.unicodeScalars { if CharacterSet.decimalDigits.contains(scalar) { return true } } return false } print(isFirstAnInt(string: text)) // true 
Plenty of tools to see what shared libraries you need. But, for your main question, it's reasonable to compile once, and distribute it, but do it on identical systems (at least the same version of the distribution). Then, you can keep track of all the packages you needed. And, then, create the swift installation that you built as an arch linux package so you have all your dependencies.
No language or platform is perfect. I also kinda disagree about there being "no point of return," cause theres always time to switch things up down the line :D. IMO, dont dwell on picking the RIGHT platform, cause there is no right platform. Things you learn in one will still benefit you in another. The key is just getting started and sticking with one platform for awhile.
Will check that out. Lemme ask you what do you use for completion and linting, while coding w/ swift? 
&gt;Lemme ask you what do you use for completion and linting, while coding w/ swift? Uhh...nothing? I usually don't use IDEs anyway, and I don't think the state of Swift tooling on Linux is really, well, existent yet. &gt;you mean this one: https://github.com/flutter/flutter ? Yup! Main page is: https://flutter.io/
The iOS APIs are all the same and have been around for a decade, and that's the problem. Swift container types like String, Array, and Dictionary are value types with copy-on-write, but all of the iOS APIs are expecting Objective-C container types like NSString, NSArray, and NSDictionary. This can be OK, since none of those types are mutable. But if you are making changes in a for loop, then passing the result to an iOS API you have to worry about multiple conversions each time through the loop. This warning comes from Apple in [Using Containers Effectively](https://developer.apple.com/videos/play/wwdc2018/229/) . I leave as an exercise for you rewriting in functional programming style their example of coloring all occurrences of 'brown' brown in a book represented as a String. As recently as this weekend I [helped](https://www.reddit.com/r/swift/comments/98ekto/error_unrecognized_selector_sent_to_instance/) an unfortunate Swift programmer who was bitten at the boundary between Swift and iOS APIs in Objective-C. The contents of a string are different between Objective-C and Swift: a string of 3 characters in one language may have a different number of characters in the other since one uses UTF-16 characters and the other uses graphemes. Addition and multiplication of integers are different between Objective-C and Swift, but since Swift must provide compatibility bridging, you can use Swift's &amp;+ and &amp;\* to get the Objective-C addition and multiplication. I'll save compatibility with C++ - easy in Objective-C, difficult in Swift for another time. Also concurrency, and ABI issues will wait. In short, to be effective in iOS, you must know Objective-C. If your program is in Objective-C you can stop reading and start coding. If you are programming Swift, then you must also know the must larger Swift languages, and the rough edges at the interfaces. And in answer to the Swift partisans, if you don't know Obj-C, then you are dealing with "unknown unknowns' - you may not be aware that you are missing something. 
Swift is a nice language and pretty well solidified. The problem is you are interfacing with tons of obcj and that‚Äôs where the friction lies . Personally, I never understood why they couldn‚Äôt just keep improving objC.
Just what we need, a Medium article about other Medium articles. As if they weren't low enough in content already, surely aggregating all the low-content will help! Just as an example, here's the pattern the top article advocates: https://matteomanferdini.com/wp-content/uploads/2018/07/the-full-Lotus-MVC-design-pattern-diagram.png Are you kidding me? This isn't a pattern, this is a mess. Talk about a needlessly-convoluted architecture? Whatever happened to the [KISS principle](https://en.wikipedia.org/wiki/KISS_principle)? Don't over-architect your designs, start with a simple pattern like MVC or MVVM and then elaborate on that when you need more. Please stop linking to Medium. Sure, there's the occasional decent post but overall the place is a cesspool of self-publishing. I see so many bad ideas get trotted out here that link back to Medium posts.
KISS is an acronym for "Keep it simple, stupid" as a design principle noted by the U.S. Navy in 1960. The KISS principle states that most systems work best if they are kept simple rather than made complicated; therefore simplicity should be a key goal in design, and that unnecessary complexity should be avoided. The phrase has been associated with aircraft engineer Kelly Johnson. The term "KISS principle" was in popular use by 1970. Variations on the phrase include: "Keep it simple, silly", "keep it short and simple", "keep it simple and straightforward", "keep it small and simple" and "keep it stupid simple".
Yeah, I guess they should have named it `UnicodeScalarSet` or `CharacterPropertiesSet` or something similar. Of course, it stems from `NSCharacterSet` which has been around for years so the current `CharacterSet` makes sense from that perspective. Perhaps a suggestion should be made on the Swift forums that they change the name.
Um, yeah. Your point? That's why I linked the definition.
Where is the audio file coming from? What format is it in? Any code written so far?
its an mp3 file and its located in Bundle.main, regarding code I have a lot of it but the part where im saving the track name is as follows func get_song_names() { /*Where the music is located, Scrap_music_app.app*/ let folderURL = URL(fileURLWithPath: Bundle.main.resourcePath!) /*Loop through all songs*/ do { /*Get all files from 'folderURL', songPath is an ARRAY of all URLs*/ let songPath = try FileManager.default.contentsOfDirectory(at: folderURL, includingPropertiesForKeys: nil, options: .skipsHiddenFiles) /*Loop through all files stored in 'songPath')*/ for song in songPath { var currentSong = song.absoluteString /*Convert songPath URL to a string to work with it*/ /*Make sure it's a song, then extract song name*/ if currentSong.contains(".mp3") { let findString = currentSong.components(separatedBy: "/") /*Seperate the parts of the file path*/ currentSong = (findString[findString.count-1]) /*Get last element in array, name of the song*/ currentSong = currentSong.replacingOccurrences(of: "%20", with: " ") currentSong = currentSong.replacingOccurrences(of: ".mp3", with: "") /*Prevents song from being added multiple times*/ if !songs.contains(currentSong) { songs.append(currentSong) } else{} } } songs.sort()/*Put songs in alphabetical order*/ myTableView.reloadData() } catch { print("FileManager Error: ", error) } } Hope this helps
Hey, Spartenbob117, just a quick heads-up: **seperate** is actually spelled **separate**. You can remember it by **-par- in the middle**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Yes it's possible using region monitoring. Check this for details https://developer.apple.com/documentation/corelocation/monitoring_the_user_s_proximity_to_geographic_regions. Also there is Significant-Change Location Service. It might be helpful for you https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/LocationAwarenessPG/CoreLocation/CoreLocation.html
Do we know why they deprecated it this fast by the way ? They implemented it not that long ago if I recall correctly. 
Ohh thanks a lot I didn't know that. What if I hand an audio file somewhere at a random URL and wanted to save it to the Bundle or some other directory, how would I do that then?
hey /u/flo850, thanks for the feedback. My goal is to use geo fencing technology to automatically log a cell phone upon entering and exiting the designated perimeter. It sounds like we can implement GPS updating to know when a device enters or exits a geo fence. Thanks for linking the article, great read! My only question is: *In reference to full time GPS updating, can the device auto update location even when app hasn't been initialized all that day? Basically, is there a difference between background and app closed, in reference to all time GPS updating?* Thank you for the feedback. Thank you for the feedback.
It's too in-depth to go into here, I suggest you read articles like this one: [iOS file management with FileManager in protocol-oriented Swift 4](http://iosbrain.com/blog/2018/04/22/ios-file-management-with-filemanager-in-protocol-oriented-swift-4/)
Great thanks a lot
He just copy pasted the first paragraph found on the KISS link you just commented... why I have no idea at all, but that is what has happened. 
Thanks for the feedback u/London_Atlas. My goal is to use geo fencing technology to automatically log a cell phone upon entering and exiting the designated perimeter. I don't want to be so intrusive that we're tracking and logging a device's every move, I only wish to record two events: device entering a specific geo fence perimeter, and a device exiting that same geo fence perimeter. Of course, I don't want to drain people's phone batteries, so I find the silent push notification notion interesting. In my mind, Im thinking as the device updates it's GPS location, and it's getting closer and closer to the geo fence, GPS updates will occur more frequently to ensure an accurate record of arrival to geo fence. When the device leaves the perimeter, and it's logged, then that's it, no more location updates needed. This is proving to require some creative engineering to not be so intrusive to the device and it's battery life, yet still record arrival and departure from a perimeter. Thank you for the feedback.
They're not officially deprecated. They were removed from autocomplete because they were showing up in every completion list and were extremely annoying. They're also dangerous to use, as they break things like `@IBDesignable`, and they can cause runtime crashes by referencing images from other bundles and not telling you about it.
Thank you, so there‚Äôs still a way to use them in Xcode 10 even though they don‚Äôt appear in autocomplete anymore ?
These are great articles, thank you for linking them. Diving right in. 
I haven't tried, but I heard they start autocompleting if you type `imageLiteral`.
I‚Äôll give it a try, thank you :)
I‚Äôm really glad you said this. I‚Äôm fairly new to swift and am trying to learn. I have been reading a lot of medium articles without considering the source. Thanks for opening my eyes üëçüèΩ
Don‚Äôt get me wrong, there are good ones. But they‚Äôre rare in a sea of really bad ones. Stick with truly professional sites. 
Yet another nothing Medium article. Can we list the entire domain as spam yet?
I never heard of it, but I would rather recommend the iOS 12 swift course on udemy. People I know and I included have used this udemy course instead, and I have seen a YouTuber who also has done the udemy course. It should be the iOS 12 swift 4 course by Angela YU, or something of that sort
Have you tried looking in your local libraries? Even if they don't have it, you might be able to get it through an interlibrary loan. I don't know that book specifically, so I cannot vouch for its efficacy, but if you're just learning almost any book on the market can get you started.
Can you give a few examples of some better ones? New to swift also and looking for good resources. Thank you!
I certainly think so, although to be fair I did write it and am therefore completely biased. As cost is the issue, you have two options that will help. First, if you download my free Natural Swift video (https://gumroad.com/l/natural-swift), you‚Äôll get regular book discounts sent to you by email. The discounts aren‚Äôt huge - only $5 - but every little helps. Second, I sometimes run larger sales (half price), so if you don‚Äôt mind waiting a few months then do so. 
I use StackOverflow a lot for information. Apple‚Äôs own documentation is great too. But I‚Äôm at a pretty advanced level of knowledge since I‚Äôve been a professional programmer for many years. I‚Äôd ask around to see what‚Äôs good out there for someone at a swift beginner level, I‚Äôm not too familiar with it. 
First I highly recommend this [book](https://store.raywenderlich.com/products/swift-apprentice) : Secondly for one of the best blogs (and podcasts!) John Sundell has some [great content](https://www.swiftbysundell.com) I hope this help! 
I live these kind of posts. It is super useful. 
Not in the scope of a type declaration.
Swift is lenient with some useless constructs, e.g. a public member of a private type. It makes it easier to temporarily make something private that you might want to make public some time in the future, without needing to edit every modifier within the type. Similarly, 'let _ = foo' let's you temporarily silence an unused identifier warning, without needing to remove the "let", which you might want to use again shortly thereafter.
Oh, in that case you should use the geofencing api in the CoreLocation framework. You can set up to monitor regions in the background.
Can you be a bit more clear about what you want to do and what you actually tried?
In the new version of Swift, due with the new release of iOS, you can just do... Int.random(1...10) ... or even... Float.random(0.5...3.8) But that's only if you can hold off a month or have downloaded the betas.
Having years of experience in swift, what reddit app do you prefer and why? Just curious. 
As someone that just started writing apple apps in xcode/swift I loved reading through this! Thanks for sharing
I did have some trouble with attachments. No matter how much I pre rendered, drew myself, decreased the size, etc it never performed well under heavy stress in a textview. I think memory (nsas refused to reuse images for some reason and made a copy every time) and scrolling were most affected. Your best bet is to try to make a 1000 character string with your custom worst case scenario, then put it in a table view repeatedly to see if it handles 60 fps. Of course if you don‚Äôt have any extreme cases (usually from user input) then you should be fine. I only had issues bc we were pushing the limits with custom attachment images. It was super fast otherwise. 
There surely are performance implications to using NSAS, but the question is will you notice them at the scale your app needs. The only way to know is to test. 
Yeah I feel that pain. In another part of the app I am converting an html string into a text view ü§¢
Time to bust out the profiler haha 
Thank you for your kind words. I‚Äôm going to continue writing these posts, so follow me [ on medium](https://medium.com/@gabriel_lewis?source=linkShare-e472a437d34f-1534827838) for more. Let me know if you want anything specific, or if I can help you navigate Xcode. 
`man arc4random` works on macOS. It includes info for `arc4random_uniform()`
When you say background, do you also mean while the app is closed?
Man, okay. A few months wait it is. For me at least :(
I just love solving problems, got it to work nicely and wrote another tutorial on it: [https://medium.com/@davepoirier/infinite-grid-using-uicollectionview-155801e4f7f4](https://medium.com/@davepoirier/infinite-grid-using-uicollectionview-155801e4f7f4)
The value of any book or tutorial is really based on what you would get from it. What you find over time is a lot of overlap. I bought a bunch of tutorials last year as I went from Swift 2 to Swift 4. I found a lot of overlap, but they also covered some other things and projects that I learned from. I would look at the TOC (Table Of Contents) and see what you already know and what's new to you. Another thing I look at is how up to date a book is. There's no shortage of programming books, so looking at the TOC really helps determine if it'll have any value to you.
The idea of debugging an xcode project without breakpoints is horrifying
Hey, great work! 
This is a follow up for the following post: https://www.reddit.com/r/swift/comments/97iknn/creating_an_infinite_grid_on_ios/
This is a bit hyperbole if you ask me. We see a lot of great articles on Medium every week, but like every other website there will be spam. You're on reddit, and spam does get posted here. The only thing we can do about it is downvoting articles we deem unfit for the subreddit (I agree this one definitely does not deserve to rise to the frontpage).
only the weak use breakpoints :D
You should look into a tool called chisel, it‚Äôs created by Facebook and offers loads of useful lldb commands! Saved me countless hours of debugging 
Checked everything, still doesn't run. Empty apps work (the shell app with just a label) and they all deploy to my phone, only this new one with cocoapods doesn't work
Damn dude! LOL you are savage xD
lmao! Right on the money brother!
Ah, sorry. Yeah, didn't have the appropriate WWDC session handy.
üëçüèª
In one word: job security. ^((Okay that was two words. But in German, it'd probably be one very long word.))
If you enable location updates in the background and your user allows ‚Äúalways‚Äù allow location updates then you will get updates while the app is closed. If the user doesn‚Äôt grant you always access you are SOL unless you do one of the hacky tricks mentioned above
You should have a read of Apple's [FairPlay HLS](https://developer.apple.com/streaming/fps/) specifications. 
Use AutoLayout constraints
Examples in Java, but explains the concepts in a way that I could understand. Here, have an upvote.
Of course, I was looking for an internet link to the docs. 
I‚Äôll look into that. 
Got a copy of the error?
They are not available for SKScenes.
Awesome! I still have your advanced iOS book to work through so hopefully there will be some sales by the time I‚Äôm done with that. Btw..THANK YOU!! I can‚Äôt begin to tell you how great the hacking with swift book was. Out of all the resources I‚Äôve found, that book was the one that got me where I wanted to be. 
So what ended up happening?
ok I am checking it out
Understood. Thank you
oops
`SKScene` has an underlying `SKView` which inherits from `UIView`. In the past, I've added my constraints by overriding the `override func didMove(to view: SKView) {` method of `SKScene`. 
This toggles the value (true/false) of \`checkInDatePicker.isHidden\`
 var isCheckInDatePickerShown:Bool = false { didSet { checkInDatePicker.isHidden = !isCheckInDatePickerShown } } Right, when the property `isCheckInDatePickerShown` is set it also sets `checkInDatePicker.isHidden` to the opposite boolean value.
I tried sizing up the view of the scenes methods that way, it did not work. Maybe I did incorrectly. You got a tiny example?
Hello! I think almost every MacBook Pro with Retina or last Unibody Models will be ok for Swift Development, especially for beginner. But I‚Äôd not go below 8GB Ram option. Keep in mind that Unibody MacBooks can be upgraded up to 16GB RAM (depends on model) and SSD/HDD of Your choice. The Retina MacBook Pros have RAM and SSD soldered. MacBook Air with 8GB RAM and the i5 processor will be enough for starters. Just beware of plain 12‚Äù MacBook, it is totally unusable for development. If you have some precise model in mind, feel free to ping me, I will try to help.
false is the default value for isCheckInDatePickerShown. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/swiftonlinux] [SwiftEngine Open-Source Just released - Completely Autonoumous, Highly Scalable, and Downtime Resilient Serverside-Swift Platform for Production Grade App Development ‚Ä¢ r\/swift](https://www.reddit.com/r/SwiftOnLinux/comments/995ib5/swiftengine_opensource_just_released_completely/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
thank you; please feel free to contact us if you have any questions. 
The point of FRP (ReactiveX) is to make our code declarative. To code becomes a definition of a set of invariants that must hold true instead of just steps in a process. Think of each Observable in your code as if it was a cell in a spreadsheet. When other cells (Observables) change, it applies its formula (algorithm) to determine it's own value which may make other cells (Observables) change. The entire app becomes a cascade of changing data with fixed semantics and guarantees. With imperative code, when you say `a = b + c` you're just describing a step in a process. When you do the same in Rx `a = Observable.combineLatest(b, c, resultSelector: +)` you are defining an invariant relationship between the three variables that will always hold true. Lastly, Rx isn't easy, but once you grok it you will find that it's simple. All the various ways you currently handle callbacks (NotificationCenter, closures, IBActions, delegates, and KVO) get rolled up into a single system. 
That‚Äôs true! So I‚Äôm all for waiting for the great content while downvoting the spam :)
If you're a solo developer is it still worth looking into? Or do the benefits not justify the time to learn?
At the end the day I think it just another way to architect apps Whether something is a pro versus a con comes down to personal preference. I like MVC because its concepts are simple, and before anyone says massive view controller, there are definitely ways to mitigate that. I highly recommend that book I listed though, as it lays out the main differences and you can decide for yourself. &gt; ‚ÄúMVC has the advantage that it is the architectural pattern for iOS development with the lowest friction. Every class in Cocoa is tested under MVC conditions. Features like storyboards, which rely on heavy integration between the frameworks and your classes, are more likely to work smoothly with your program when you use MVC. When looking on the internet, you‚Äôll find examples that follow an MVC pattern more than any other architecture. MVC often has the least code and the least design overhead of all patterns.‚Äù Excerpt From: Chris Eidhof. ‚ÄúApp Architecture.‚Äù iBooks. "
yup, that's it. :-) 
Though to be fair my post is seen as rubbish by this sub reddit while sound 40,000 found it useful and read it. Like we also have to understand we as a aub reddit are programmers who also have it as a hobby which most people don‚Äôt 
`self.identifier` refers to the instance variable `identifier` in the Card struct being initialized. `identifier` refers to the argument to `init(identifier:Int)`. Is that what you are asking?
In Dutch as well: werkzekerheid
The article makes the common mistake of thinking that Rx is Functional Reactive Programming. It‚Äôs not, it‚Äôs merely Reactive Programming. Yes, there are many functional programming ideas in Rx but that doesn‚Äôt make it FRP. FRP requires behaviors (continuous functions) and usually includes linear intercepts and denotative syntax. Instead, Rx uses Subjects and closure capture and offers only events (not behaviors and no, BehaviorSubject is not really a behavior in the FRP sense). See Conal Elliot‚Äôs statement on the matter, here: https://stackoverflow.com/questions/5875929/specification-for-a-functional-reactive-programming-language And note that Rx never calls itself FRP, merely reactive, with some functions aspects.
My question is more tied to calling the struct later.... if you create an object of type card and it asks Card ( isFaceUp: IsMatched: Identifier: Identifier&lt;‚Äî- what can I store in Identifier? Doesn‚Äôt it have to be an integer? 
Essentially, you have initialized the struct without actually giving it a value, you are just nesting an integer? 
I don't know what you mean by "nesting an integer". When you assign values to `Integer` vars they are copied.
what "asks" `Card`? Sorry, I don't understand... You are going to do something like var card = Card( identifier: 100 ) 
so if var identifier = identifier: Int... DOES : INT get translated to the argument when called? Card ( Identifier: WHAT CAN BE STORED IN HERE? IS IT ONLY INTEGERS?)
Thanks. Yeah the first part of the post makes some good points but I've seen what happens when people use `#function` like that, it can be very ugly.
Totally. As I wrote in the amendment to the post, I added the example during the final draft / editing, which was a silly thing to do. Lesson learned.
Yes, there can be good Medium articles. My main contention is there is no vetting of the articles, no editors, no review process. It's a grab-bag of authors and people often read the article and accept it because the site places a veneer of respectability on every article since they are formatted decently by default. Unless you have a savvy reader it's easy to assume that the content on Medium is professional content and promotes good practices. In actuality a large amount of the articles are pure trash, puff pieces that people put up out of vanity. Many are not professionals, many have not participated in formal field of study or spent years working on their craft. You do have some good authors there but most good authors run their own training websites or are part of a larger organization - a school, a professional organization, or a formal publication. Thus I beat the drum of warning people about self-publishing sites like Medium. I've seen many people implement ideas published there and it ends up contributing to the abundance of bad programming practices and bugs out in the wild. I've also promoted the occasional good article I've seen there, given an author props for putting out good practices and information. Hopefully those authors will become more successful and crowd out the inexperienced ones.
Not exactly sure what you want to do but long time ago I also wanted to accomplish running code during the animation, meaning, during each frame. But couldn't find a solution. I think you can't accomplish that using high level animation APIs such as UIView.animate. You need to use CADisplayLink and create an animation from scratch, using this timer that allows you run code each refresh of the screen (frame).
[From the swift docs](https://docs.swift.org/swift-book/LanguageGuide/Initialization.html): &gt; You implement this initialization process by defining initializers, which are like special methods that can be called to create a new instance of a particular type. Unlike Objective-C initializers, Swift initializers do not return a value. Their primary role is to ensure that new instances of a type are correctly initialized before they are used for the first time. Not every property of a type must have a value when declared, but every property (that isn't optional) must have a value **after initialization**. That is the entire point of initialization. There are some properties that you don't want to have default values. With your example, try creating an instance of Card. let foo = Card() What happens? You get a compiler error. The compiler will not allow you to make a Card without calling the designated initializer. But this works: let foo = Card(identifier: 100) The point of the parameter is that the calling code is required to provide the identifier to the Card before it can be created. As /u/nielsbot explained, the init method accepts a parameter named "identifier" and assigns it to the property that is also named "identifier". If the name collision is confusing, you could also write the init method like this: init(newIdentifier: Int) { identifier = newIdentifier } It accomplishes the same thing. It's pretty common, however, to have parameters with the same names as properties which is why you need the "self" prefix to make it clear which one you're talking about.
In order to avoid making the same mistake again I‚Äôve added an arrested development esque rule called NO TOUCHING.
What I want to do is basically get the view's center point/position for each frame as it animates across/around the screen. I will look into CADisplayLink, thanks for the tip!
Absolutely, there's a learning curve where everything doesn't seem to make much sense, but once you get comfy with Rx and just start chaining operators, .map's and use traits, it's a bit enlightening. Can't imagine doing MVC again now, its feels like duct taping apps. MVVM makes it amazing to just tie your model to the UI, and you are always sure every code path is handled, errors get propagated very easy to where they need to be, and you barley have any state in your UI. If you're solo anyway, and don't have to worry about other people not understanding your code, you should definitely try it!
For that, keep in mind that you need to access the presentation layer. As the values of the layer don't update until the animation is finished. And to respond to changes maybe using KVO. I think looking up info about CADisplayLink, presentation layer and kvo you can accomplish it.
Pretty sure I've built it on 1804 before without problems. Just follow the directions at `www.github.com/apple/swift`.
This is very helpful, thank you!
Use .Fit for the scene
use the name of the struct to access it's static variables case .freestyle: SwimmingWorkout. freestyleWorkouts.append(self)
I wouldn‚Äôt advise this, but layer.presentationLayer gets you the exact position. But that‚Äôs getting messy... Depending how much content, you could magnify all of the content in advance and animate an inverted mask over it.
Thank you very much for your viewpoint, I'll give it a go for sure. Hope I love it as much as you do.
I'll keep that in mind. Idk I feel like one of those developers that always has this curiosity bug when something new comes out and want to try it.
Functional programming is great, and should be encouraged where it makes sense. It can reduce errors and increase code abstraction. Functional programming can be done in Swift using only `Foundation`. Reactive architecture is a decision that can work for some, but is a large commitment. Reactive architecture tends to have a ton of dependencies in Swift.
Lol now this is creative, I love it. Will definitely keep this in mind, thanks a ton.
Run it in a block or using Grand Central Dispatch. All animation needs to run on the main thread.
Its not a lot to go on... Probably not the podfile(s) since it builds but it wouldn't hurt to update them Do you have the paid developer's certificates? If not delete all the old apps from the simulator. This has got to be a certificate issue...maybe something that got changed in the pfile. I am not going to tell you to delete all the certificates and get new ones because you seem new to this and the process would be daunting... Since you have been able to build and deploy other test apps you shouldn't have to mess with the certificates anyway. It looks like a tutorial. Start a new one. Add the podfiles then drag all the other stuff over and see what you get. 
It‚Äôs a fascinating problem. I try to stick to the high level APIs at all costs, due to experience with legacy CG/CA code. It‚Äôs just so satisfying to accomplish things in fewer lines of code, if you just rotate the puzzle a little bit...
&gt; to access it's static variables It is static variables? its* static variables it's = it is or it has its = the next word or phrase belongs to it. : / 
Couldn‚Äôt you animate the image at the same time you animate the view? Since you know the start and end position of the view and the images position is based on the view, animating both should work. 
i don't know what you are talking about
Thanks! I figured out my solution. I was a bit confused about why the initializer needed a variable to run... but I guess it is just a rule for them. Thank You &amp;#x200B;
The [trunk and 4.2 convergence snapshots](https://swift.org/download/#snapshots) both include Ubuntu 18.04 builds. 
I had to do that for a client too. We got some impressive performance gains, but I assume they were coming from untangleling the giant reactive mess (some stuff would get triggered a bunch of times for no reasons etc)
I fully agree with everything you state here.
Some initializers don't take arguments (what you called a variable). So do. Depends on the type of thing being initialized.
The animation is executed by a daemon in the operating system. Redrawing a layer inside an animation is not something that can be done smoothly at 60 FPS or 120 FPS (iPad Pro)
That happens when you observe everything. Maybe I don‚Äôt fully understand it but it‚Äôs never made sense to go this route. 
I think it's working correctly, but your instrumentation is in the wrong place. If you change it to the following it works perfectly: import Foundation class myOperation1 : Operation { override func main() { print("op1 working....") sleep(1) print("op1 finished") } } class myOperation2 : Operation { override func main() { print("op2 working....") sleep(1) print("op2 finished") } } class myOperation3 : Operation { override func main() { print("op3 working....") sleep(1) print("op3 finished") } } class myOperation4 : Operation { override func main() { print("op4 working....") sleep(1) print("op4 finished") } } class myOperation5 : Operation { override func main() { print("op5 working....") sleep(1) print("op5 finished") } } let op1 = myOperation1() let op2 = myOperation2() let op3 = myOperation3() let op4 = myOperation4() let op5 = myOperation5() op2.addDependency(op1) op3.addDependency(op2) op4.addDependency(op3) op5.addDependency(op4) let opsQue = OperationQueue() opsQue.maxConcurrentOperationCount = 4 opsQue.addOperation(op1) opsQue.addOperation(op2) opsQue.addOperation(op3) opsQue.addOperation(op4) opsQue.addOperation(op5) 
IIRC the 16.10 downloads should still work (I had tried on 17.10 I think). 
On archlinux, as of today, it isn't compiling anymore via aur. The starte of Linux support is really lacking. 
Yeah, it does have to be an integer. That`s what the `:Int` part of `identifier: Int` means.
Are the images you‚Äôre having a problem with in the PNG image format? PNG images apparently don‚Äôt store an image orientation flag like JPG images do. [See here](https://stackoverflow.com/a/10850379/234609) for more info and a [Swift extension](https://stackoverflow.com/a/43180358/234609) that might help.
Use a result type. Basically, an enum with two states, success and error. Use an associated value to represent your data in the result state and an error in your error state. https://www.swiftbysundell.com/posts/the-power-of-result-types-in-swift
Hey, we all need that pesky flatpak. As of yesterday, swift stopped compiling in Archlinux :(
Thank you for the response. The images are jpegs. Although I downloaded them from my OneDrive cloud storage, so I don‚Äôt know if Microsoft does anything to them. The images that are being displayed correctly are also jpgs downloaded from OneDrive, though.
&gt;class myOperation1 : Operation { override func main() { print("op1 working....") sleep(1) print("op1 finished") } } class myOperation2 : Operation { override func main() { print("op2 working....") sleep(1) print("op2 finished") } } class myOperation3 : Operation { override func main() { print("op3 working....") sleep(1) print("op3 finished") } } class myOperation4 : Operation { override func main() { print("op4 working....") sleep(1) print("op4 finished") } } class myOperation5 : Operation { override func main() { print("op5 working....") sleep(1) print("op5 finished") } } let op1 = myOperation1() let op2 = myOperation2() let op3 = myOperation3() let op4 = myOperation4() let op5 = myOperation5() op2.addDependency(op1) op3.addDependency(op2) op4.addDependency(op3) op5.addDependency(op4) let opsQue = OperationQueue() opsQue.maxConcurrentOperationCount = 4 opsQue.addOperation(op1) opsQue.addOperation(op2) opsQue.addOperation(op3) opsQue.addOperation(op4) opsQue.addOperation(op5) Definitely appreciate you looking at this and the response. Maybe I'm missing something but it looks like both sets of this code end up hanging. See the images below &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
If done properly I'm sure it can be fine. But my best guess is that the person used his work project as a learning experience for reactive coding..... and most likely lost his job in the process. 
MVC if done properly is just as well. So not sure why learning something that is overly complicated and not easy to understand with added implicit functionality is better than an explicit MVC model. 
It‚Äôs very clean and pretty easy to pick up. A lot of fun as well. Not sure how it compares with PHP. Intro to App Development with Swift and App Development are free downloads in iBooks. Udemy boot camp by Angela Yu is good as well. 
A ‚ÄúPost Install‚Äù script that modifies the Pod targets before they are saved to disk (and integrated into the Xcode Workspace.) will manually disable Code Signing via the appropriate Build Settings for each of the Pod dependencies. Add this to the bottom of your Podfile post_install do |installer| installer.pods_project.targets.each do |target| target.build_configurations.each do |config| config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = "" config.build_settings['CODE_SIGNING_REQUIRED'] = "NO" config.build_settings['CODE_SIGNING_ALLOWED'] = "NO" end end end If you have to do this to get it to work there are deeper issues at work with the way your platform is setup.
Does it require a lot of math ?
Yeah, as mentioned before, use Result type.
No, just the logic. 
Why not just make an array of numbers.
Thanks, what about 2d games? 
There are some similarities to the PHP learning experience (not the language). It's been a while since I learned PHP, but I recall the language itself to be pretty easy. The tricks were in all the subtle information that was in the libraries (not PHP itself). I can recall reading on the internet for how to spot and stop PHP security problems and I remember that as a newbie, I felt there were problems *everywhere*. The Swift language is pretty simple, and, other than a few sharp edges like *optionals*, can be learned a little bit at a time. The part that made me *feel* like I was always a beginner was the huge number of Apple libraries and the feeling that things had so much going on that I didn't understand them. But it's certainly learnable. Apple's documentation is pretty good, but the issue is that it seems like you feel like a beginner for so long. And then one day when you've programmed your 30th *toy* app you realize, "Hey, this isn't so hard" Udemy is having a sale on some of their courses this week for $10 each. Of those, I like the [Rob Percival](https://www.udemy.com/ios-12-developer-course/ ) course, and the [Angela You](https://www.udemy.com/ios-12-app-development-bootcamp/ ) course. I got earlier versions of those when I bought bundles sold elsewhere. I'd say the $10 price tag is fine, but when they go back up I'd be more skeptical. Angela's course seems definitely aimed at those with a designer's bent. If you're more of the web front-end and back-end guy, you may get more out of Rob Percival's. They are both simple, but do WORK through them all the way. The [Hacking with Swift](https://www.hackingwithswift.com ) course by Paul Hudson is also very good. I definitely like this. I very much think it is worth the money. I used to frequently recommend the *Big Nerd Ranch* books (Swift 2nd Edition, and iOS Programming 6th edition). I started looking back over those yesterday, and I think they desperately need updates. I've heard rumors that they're looking to update these books (and I'd definitely have some feedback for them), but right now they just aren't worth the $40+ for each of them.
Would like to build iOS apps
I think swift is the future
What is a programming language that you feel *does* require a lot of math? The language itself doesn't seem to have a need for a lot of math, but if you are doing something like Machine Learning, you will need a lot. Putting together apps, I find I use my calculator more in Interface Builder than in the Swift code itself. Math helps. Knowing the order of operations helps (Parens, Multiplication &amp; Division, Add &amp; Subtract). Not confusing assignment ( single-equals sign) with comparison (double-equals sign). Oh, and the modulus operator operates a little differently compared to other languages like C or Python. But overall, if you got through 5th grade math class, I think you're fine for the language itself.
No. SpriteKit is pretty high level and has collisions and physics already. 
So you are saying all I need is basics and only if I do AI i need advanced math normally and math based apps
Depends on what are you trying to achieve. If you plan to have really complex UI and frame drop is not acceptable then yes. Probably not in all other cases (unless you want to learn it and add to your skillset).
No, I'd say it depends on the libraries your pull in to help you with the work. For basic apps, the regular UIKit will handle many basic things like moving items around, transitioning from one scene to another, scrolling and so on. It sounds like you want to do a 2d game so if you want to do something like Flappy Bird, you'd be better off getting another library to handle things. I haven't done any 2d games myself, but I suspect SpriteKit would be the one you'd want to work with. When I looked over the documentation, it does have more math and physics terms in the documentation. Do you have to use them? Get someone who has used that library to tell you, or watch the Apple WWDC videos on SpriteKit and see if they are understandable.
Why not parse into the first double and sort on that? And there‚Äôs no need to map first; you can apply the map directly in the sort function
You could just use a serial DispatchQueue if you want to execute one block at a time in the order you put them in.
So yes, that would guarantee they would finish in the correct order but then I'd lose the power of concurrency. &amp;#x200B; My use case for why I want to do this is I want to be able to load images one by one in a linear fashion. Image 2 should not load before Image 1. But I don't want to delay fetching Image 2 just because Image 1 is taking a while. &amp;#x200B; Let me know if the use case is not clear. 
&gt; You shouldn't use UserDefaults just by itself Can you explain why, please? &gt; Or only write when application will resign active but that means you can lose changes if a crash happens Unless the crash occurs when UserDefaults is writing to disk, this is not true, and hasn't been for sometime. See Apple's documentation on the [UserDefaults synchronize] function (https://developer.apple.com/documentation/foundation/userdefaults/1414005-synchronize) which states: &gt; this method is unnecessary and shouldn't be used.
Because some of the UserDefaults getters provide a default value instead of returning nil when you haven't set anything for that key, so if you want to ensure that your default value gets returned, you need to use objectForKey and then typecast it and nil check it. So having that couple lines of code and type casting in one separated place makes it way less likely that this code gets copied when you/your colleague needs to use it in more than one place and then later changed in one spot but not the other. Creating such wrapper also ensures that changing the way you store the data will only require changes in the wrapper but not the classes that use it. (This is probably the most important.) By losing changes I meant storing that value in memory and subscribing to the app will resign active notification and only writing that value to UserDefaults when that notification triggers because it doesn't happen when a crash occurs. If you are using something like [this](https://github.com/Nirma/Default) to cache bigger objects (but not big enough to warrant immediate effort for adding CoreData/Realm), you don't necessarily want to also write to disk every time the user makes some changes.
There is a proposal to add a Result&lt;T&gt; type to the Standart Library. https://github.com/jshier/swift-evolution/blob/ac8e292af8d39dcdff861d89868d19287e4b9df5/proposals/0195-add-result-to-the-standard-library.md
That‚Äôs annoying it‚Äôs such an easy thing to do yourself. Sometimes you want a result with more states...
I think it is good practice to parse data before operating on it.
Do you have Xcode 10 beta?
Indeed. Almost as bad as Promises.
that's awesome, were you able to know how to build the app solely from taking the course or did you use any other resources/tools?
I updated my answer. I changed it to use a created queue, not the main queue.
I‚Äôm curious, are there any monthly costs that go with having the server/database? I‚Äôm looking to do something similar but most options have a monthly fee tagged along with it.
Congrats on your first app!
Noob here as well what do you use google cloud platform for in ios development? Also where does docker come in user in this situation of writing and deploying ios app?
I love Firebase! That‚Äôs actually what I‚Äôm using right now üòÇ. I was just wondering if OP found some other alternative that‚Äôs cheaper.
I tried it and even though it's clearly good for getting a smooth UI, it's not worth using in your whole app. The UI declaration is really cumbersome and the framework is lacking in very common and simple features. 
thanks for the in depth reply. i've been thinking of creating an app that is basically an alarm clock as practice and i now understand the importance of reading the documentation rather than trying to copy paste code of similar apps. last question: you said in 10 months you learned all of this but how much time would you say you dedicated per week to get yourself to that point?
Thanks so much. There are def some costs associated with running the server. I ended up deploying my own server with Swift using a custom runtime on Google‚Äôs App Engine Flex environment. I built it this way because I wanted to learn how to deploy a custom server using Swift and build my own database using SQLite. However, it‚Äôs probably not the best approach since all I‚Äôm doing is simply updating and querying a database, which can probably be handled more cheaply and efficiently using Firebase. I initially wanted to use Swift exclusively, which is why I went with this approach. I will probably be migrating the backend to Firebase at some point. 
Wow man! Thats really freaking impressive though! I bet you learned a lot from doing it like that. Ya I figured there would have to have been some kind of cost involved with maintaining a server, but one can dream right ü§ó? Firebase's Firestore is really a great option, I haven't used it with Swift yet but I'm using it with my Angular app and its pretty nice.
Good question. I spent several hours a day, almost everyday, on this. I also have a full-time job (not programming) so there were lots of sleepless nights trying to overcome certain bugs, challenges, etc. Was basically a hermit crab for the last 10 months :)
Thanks :)
Awesome feedback. This is really helpful. Will get this into my next update. Thanks. 
Yeah, a version of that proposal has been around for some time. I can't find reference to it now, but I think the rationale was that the result type makes sense for how we handle asynchronous programming now, i.e. with Grand Central Dispatch, but if an alternative model is used, e.g. actors or futures/promises, then the result type won't make sense.
Thanks. Really appreciate the love. Def learned a lot. 
&gt; Because some of the UserDefaults getters provide a default value instead of returning nil when you haven't set anything for that key, so if you want to ensure that your default value gets returned, you need to use objectForKey and then typecast it and nil check it. So having that couple lines of code and type casting in one separated place makes it way less likely that this code gets copied when you/your colleague needs to use it in more than one place and then later changed in one spot but not the other. Your assertion that a wrapper needs to be used to achieve that functionality is not true. In fact, I provided an example in the article that is remarkably close to what you're talking about. I've included it here and amended it to only use `object(forKey:)` per your desire. extension UserDefaults { var enableSecretFeatures: Bool { get { return (self.object(forKey: "enableSecretFeatures") as? Bool) ?? false } set { self.set(newValue, forKey: "enableSecretFeatures") } } } You could (should?), of course, define the keys as constants. I didn't here for the sake of brevity. &gt; By losing changes I meant storing that value in memory and subscribing to the app will resign active notification and only writing that value to UserDefaults when that notification triggers because it doesn't happen when a crash occurs. Which wouldn't happen if you used UserDefaults directly. &gt; If you are using something like this to cache bigger objects (but not big enough to warrant immediate effort for adding CoreData/Realm), you don't necessarily want to also write to disk every time the user makes some changes. You could also argue that you don't want to keep large objects in memory. In any case, UserDefaults shouldn't be used for large objects or object graphs. So that is really outside of the scope of this example. Additionally, all of this discussion is out of the scope of the article. To focus in on the UserDefaults example is to miss the point of the article in the first place.
Also setting up a website on Squarespace was a fun learning experience üòâ
Make games in any language/platform is difficult. But Swift and Spritekit are very nice, and sure you feel comfortable with time and practice. There are some cheap and good courses in Udemy if you are interested ;)
Its only available on the US store. I can't download it here in Canada.
Awesome appreciate the response!
Congratulations ! But I cant download your app from the French App Store either ! :/
Hi Zerrule. Yes at this point it is only available in the US unfortunately since the shelters and rescue groups in my database are located in the US. I would be more than happy to expand to Canada if I can gain access to some database of animal shelters/rescue groups in Canada. Please let me know if you know of any organizations/databases I can use to support pet adoption in Canada. Thanks for the feedback. 
You‚Äôre welcome. I‚Äôm super happy to help. And thanks for the support ‚ò∫Ô∏è
Congrats man. I‚Äôm writing my companies first app and my first iOS app. Loving swift so far. I have a background in programming (.NET). 
Hi Adtrevor, sorry, at the moment the database I‚Äôm using only supports US based animal shelters/rescue groups. I would love to eventually expand internationally as I see a huge need to support animal adoptions across the globe. If you know of any open source resources/databases I can use in France, please let me know and I can work on adding support in a future update. Thanks for your feedback. 
Cool! I took Stanford CS course and learned a ton and I took a python course last year too. I felt like the stanfornios course was quite challenging but maybe I'll have another go at it. Thanks for your reply!
I too started with objective C on my own a couple years ago when I first started tinkering. Didn‚Äôt like it at all. When swift came out i tried a few tutorials and loved the language. Fast forward a couple years I got a job as a programmer and learned .NET which carries over to swift very well. The app I‚Äôm working on for my company will require a sign in, so you won‚Äôt be able to dabble with it too much, but I could share screen shots or gifs of the functionality if anyone is interested. This app will be pretty heavy into API‚Äôs that interact with a SQL database. Pretty much every ViewController is populated with data from API. 
It made it into apples utility framework https://www.hackingwithswift.com/articles/44/apple-s-new-utility-library-will-power-up-command-line-apps
Very cool. Keep us updated on your progress. Best of luck. 
What was your general starting point or process when you knew what features you wanted to incorporate? 
Definitely was challenging. I actually started with the iOS 10 course a year earlier but didn‚Äôt complete it to the end. I ended up coming back to it with iOS 11 and went all the way through. Was very much worth the effort. 
Thanks!
So I really wanted a similar look and feel to the Instagram app, with the scrolling card view. I initially started with a UITableViewController but couldn‚Äôt get the 3D card effect look that I wanted. So I ended up recoding everything with a UICollectionViewController, which is much more flexible in terms of layout. Then I wanted a card pop animation similar to what you see in the App Store, and that probably took the longest to get the animation transitions working correctly. From there, I just kept a list of features in the Notes app that I wanted to implement and just kept checking them off the list. Some were quick and easy, others took days to get right. Otherwise, was just chipping away little by little until it began to look like something that was useable. 
Definitely was challenging. I actually started with the iOS 10 course a year earlier but didn‚Äôt complete it to the end. I ended up coming back to it with iOS 11 and went all the way through. Was very much worth the effort. 
Congrats mate! Have you used any kind of mockup utility to draft the UI?
Ahh very inspired to look at that again
Hi why use SQLite and not coredata or firebase 
Also do you use storyboards or everything is in code? 
right, the point is the text is silly
Sweet. Thanks! It‚Äôs a great project , just downloaded. I would love to pick your brain in the future , as I progress ,if that‚Äôs cool with you. Do you have a LinkedIn or a good place youre comfortable connecting?
Oh no :( Alright I'll give that a go, so do I add that to the podfile and just pod install again? Will it let me pod install even though it's already installed? Or pod update? 
Oh coolZ. Last thing; did you use storyboards or all code? And MVC?
Thanks for the support. Would be more than happy to help out in any way that I can. I‚Äôm not much of a social media guy, but am always available on Reddit. Feel free to shoot me a message anytime ‚ò∫Ô∏è
Kinda a mix of both. Storyboards mostly, but had to write a lot of the card pop and dismiss animations in code due to dynamic sizes. 
Sounds good!üëåüèª 
I solved the issue, I think. The EXIF data on the image was not set properly. I opened the file in Gimp and reexported it and the EXIF data was corrected. The new image then was oriented correctly when incorporated into the application.
You‚Äôve been hit by‚Äî You‚Äôve been struck by‚Äî A smooth Responder Chain. [https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html](https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html)
Thanks for the support. I think what really kept me going was choosing to build something that I was really passionate about. In my case, I‚Äôm super passionate about supporting sheltered animals and trying to find them happy homes. I‚Äôve had pets all my life and volunteered at animals shelters, so I found that this would be the perfect project for me to learn some programming and contribute to a worthy cause. 
I'll give that another go once I get home, thanks for your help so far!! 
 let test = ["0.125-0.25", "1-2", "50-100", "100-200"] let foo = test.sorted { (lhs, rhs) -&gt; Bool in guard let left = Double(lhs.prefix { $0 != Character("-") }), let right = Double(rhs.prefix { $0 != Character("-") }) else { return true } return left &lt; right } print(foo) // ["0.125-0.25", "1-2", "50-100", "100-200"]
Thank you.. Really appreciate it.
Might be off topic in terms of iOS but how did you build the website? 
Thanks for the support. None in programming. Picked up coding in 2014 starting with C and just been doing it on and off since. Made some small command line utilities like calculating leap year, a parser for simple math functions, reading text from CSV files, and just little stuff like that. This app was my first real project actually building something this complete. 
If you are talking performance, then for sure you want to parse data before sorting, otherwise you would parsing the same element multiple times (depending on used sorting alghoritm). It's good to convert into Range because it can be later used for other stuff. I assume that OP needed range semantics but maybe was not aware of Range.
I wouldn‚Äôt invest in firebase, IMO future belongs to HTTP 2.0. Have a look at gRPC. Essentially, moving away from an always on system to an event driven system seems prudent. There is also SwiftGRPC and NIO being worked on. On a second note, paul hegerty is boss, its my number one thing to recommend when people ask me ‚Äúhow do i learn iPhone development ‚Äú
Congratulations on making your first app! If I were honest I‚Äôd say the design could be improved. I have a friend who is learning design that would be happy to help you. You can send him a to /u/jottumpie. 
If you want to use lazy then should use it before map, not after :D. But I'm not sure if it's useful if everything will be evaluated later. Technicaly you may consider space efficiency, but array of ranges (I guess 8 bytes per item) of considerable size would have to be so huge to matter that sorting it would take ages.
&gt; If you want to use lazy then should use it before map, not after Yeah, I had it swapped around by mistake and then corrected my post just after I submitted it when I saw it was flipped around. Thanks.
This is awesome. Thanks for the heads up. Will def check it out. And yeah Paul Hegarty is super legit. Would have been awesome to take his class in person. I bet it would‚Äôve been an incredible experience. 
That would be awesome. Would love to hear some feedback on improving the design. Thanks for the connect. 
Thanks for spamming.
Hi, it's fantastic to hear that you've published your first app after learning for only 10 months - congratulations! I'm in the U.K so I can't download it, but the website looks great! I am on a similar journey, but I only started learning Swift about 4-6 weeks ago now and am also attempting to learn while working full time, and spending time with my 2 year old son, so like you - many sleepless nights! My question is; at the start, what did you do when things just weren't always sinking in? One thing I've found with learning a language, is that one day I will feel really optimistic, as I start to understand some of the concept and ways of working to write code, then the next day I can feel very disheartened when something just doesn't work in my head! I am making sure I keep hard at it, but any tips on what you did when certain things just didn't sink in? Thanks! 
Great to hear that you are also pursuing a similar journey. I can only imagine how difficult it is to not only work full time but also spend time raising a little one while learning such a technical craft. Tip of the hat to you for your efforts. As for overcoming the challenges of not understanding something, sometimes it helps to just take a break from the task at hand. I‚Äôve found it helpful to just walk away and refresh my mind for a bit. Maybe go out for a walk, go exercise, or take a shower (I do some of my best thinking in the shower btw). I feel like after long periods of intense focus I can get really burnt out and my cognition begins to decline. This is especially prominent during those late nights in the wee hours of the morning. So taking breaks and sometimes even revisiting the concept the next day really helps. Just don‚Äôt feel discouraged or beat yourself up over not understanding some complex programming concepts the first time around. This is a very technical field and I‚Äôve heard even so called experts are occasionally stumped when tackling some abstract problems and concepts. I think they call it ‚Äúimposter syndrome‚Äù when a person constantly experiences doubt in their abilities and accomplishments, regardless of how much they actually know. So keep at it and stay focused on your goal. Best of luck on your journey. Would love to hear about your progress. 
I haven't read the article (yet), but I agree 100%! Every Swift project I do uses [Result](https://github.com/antitypical/Result) and [BrightFutures](https://github.com/Thomvis/BrightFutures).
https://github.com/raywenderlich/swift-algorithm-club You might also want to check the book they made upon these resources https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift
ok I have read your apple link and got that for this we need certification that coast very high and process is very tricky .
Quoting another developer: computed properties are assumed to be pure and run in constant time I think otherwise you want to use a function.
Although I cannot provide any reference, I have heard that the time complexity of a computed property ought to be O(1), i.e. constant time. So if you need to iterate through a theoretically long sequence (array, dictionary etc) i.e. linear time complexity - O(n) - you ought to make it a function. I think that makes sense. Also, if you need to make use of generics you MUST use a function.
Completely agree. The docs are poor
I‚Äôve never heard of the time complexity perspective, but I could get behind it. I‚Äôve always thought it a matter of style and preferred computed properties when possible since they read a little nicer IMO. 
I like the complexity answers, but there are cases I can think of where I disagree with that. Ex: if you‚Äôre converting a type to another type and they contain collections. IMO, the way to determine this is the usage. If the public API of the type remains constant, but the implementation changes, could the implementation *ever* have that member as a stored value? If so, it‚Äôs a property and not a function. Look at URL- it has absoluteString as a property. It *could* be stored, it could be computed (I suspect it is), as a user of the API it makes no difference because it is something intrinsically tied to the instance‚Äôs value. I think a harder question in Swift is ‚Äúwhen do you use a converting init ( B.init(A) ) vs a converting property or func (A.asB)?‚Äù That seems like more of a stylistic call.
The rule of thumb I follow: Basically, I assume I don't need to use computed properties at all and I use only functions. This rule, however, has one exception. Whenever I want to add function which starts with `get...` and it has no parameters, I use computed properties instead. For example, let's say I need to implement some custom `LinkedList` collection and I want to be able to check its size. So instead of adding `getSize()` method, I will add `size` property. Following this rule seems to be pretty easy, but unfortunately it doesn't. The hard part is to understand, when I should write `get...` function. For example, let's say I have some collection of Users and I want to compute average age of the user. I can add function `getAverageAge`, but such function is not about "getting" its value from somewhere, it's about "computing" it. So it should be named `computeAverageAge`. Actually, I would extract it to separate class, because computing some statistics is not a responsibility of collection. So it's all about following SRP (and other SOLID) principles, good naming etc. If you do this, you will be able to use that rule.
Udacity has a free course on DS&amp;A with Swift. I‚Äôm currently going through it and it‚Äôs been helpful. 
I like to use functions when it is more of an ‚Äúaction‚Äù that the object is taking (e.g. draw, move, play, etc), and use computed properties when it‚Äôs more of a ‚Äúproperty‚Äù of, or item/value related to, the object (ex: description, average, fullName, etc). I‚Äôm sure there are gray areas to this. I like what others said about time complexity. 
Not just constant time, but a short amount of time as well. A single synchronous web request runs in constant time, but you don‚Äôt want to make the result of a web request a computed property (and you should never make a synchronous web request anyway)... contrived example but it gets the point across.
I fully agree to this. Functions have side effects while properties reflect a state of the object. Calling a computed property should never ever change a state in the system/application while function are actions. 
Computed properties are methods behind the scenes, so technically you could use methods for everything. The main difference between them is not so much technical as semantic. Pick the one that best represents the meaning of what it is you are doing. - Is it a noun? Then use a computed property. - Is it a verb? Then use a method. So you would pick `Profile.friends` over `Profile.getFriends()` but you wouldn't pick `Profile.block` over `Profile.block()` because that's an action that you are performing, not a thing you are accessing. 
Very cool idea! Downloaded the app and it's quite clean. I've been poking around at the idea of having a pet again, so this is very useful to me. However, so far my only gripe with the app is when I pull the dock out, and I tap outside of the dock, it doesn't hide it. Intentional? I feel like naturally in iOS (and Android for that matter), this would hide the dock if tapped outside of it. Besides that, I really like the look of it. I'm not a fan of hamburger menu/docks at all but in this case it's not too bad. 
I'm glad you liked it :)
very nice!! Congratulations!! 
Thanks.
This is basically what I had envisioned. 
Yeah, the input has to be a string because of the format, but i could make an array of numbers, sort that, then map.
I've been writing solutions to various DS&amp;A problems in Swift on my [website](https://mohit.athwani.net) 
I needed this a few month back xD but always helpful, don‚Äôt stop the tutorials;)
Not exclusive to Swift but an excellent book on algorithms is "Introduction to Algorithms" by CLRS (Cormen, Leiserson, Rivest, &amp; Stein). Highly recommend it. 
I like this, I imagine having a computed property for say `right` and `bottom` of a Bounds object, it would just return `x+w` but would provide a similar looking interface for the `x,y,w &amp; h` properties respectively. Having a `contents` property that went to the internet to download something on the other hand feels wrong. I can't explain the intuition beyond, a computed property should likely be derived from no external dependencies from the object and likely should be idempotent.
üëç
Hey, thanks for writing this up. As someone who's contributed to open source projects, finding the right entry point can be really tough. Good job.
Sounds like you basically want an FTP server that is accessible from a companion iOS app. I think that's what I would basically do. There'd be really three components: * an intermediary service, that receives requests from the iOS app, and passes them to the appropriate macOS app * a macOS app that runs an FTP-like service in the background, receives requests from the intermediary service and answers them * a companion app that contacts the intermediary service, fires off requests and displays the results All in all, it sounds like the TeamViewer "File Transfer" bit.
More towards a bittorrent sync or a dropbox but I store stuff on my own hard drive so its a 'personal cloud' for 'free' if that makes any sense at all
Hey, thanks for you appreciation :) 
Generally agree, but it really has to do with how discoverable and tied (1 to 1) the types are to each other. Going back to my previous example, String.init(URL) makes a lot less sense than url. absoluteString.
Is a get request not pure?
no. the network could fail, the server could fail, the file on the other end could get replaced. there is absolutely nothing pure about it. not to mention that web requests are not constant time. they're *highly* variable.
`UIColor.cgColor` is one example.
Here are the guidelines that Kotlin uses. I think they are good: Functions vs Properties In some cases functions with no arguments might be interchangeable with read-only properties. Although the semantics are similar, there are some stylistic conventions on when to prefer one to another. Prefer a property over a function when the underlying algorithm: * does not throw * has a O(1) complexity * is cheap to calculate (or ca—Åhed on the first run) * returns the same result over invocations
True, but strictly speaking, thats not the standard library, but UIKit and a bridged version of an old ObjC/C Api. I‚Äòd call it legacy.
The error is telling you that you are trying to call an Instance Property instead of a method, you should use **present()** not **presentedViewController** see Code below:- @objc func handleLogout() { let loginController = LoginController() present(loginController, animated: true, completion: nil) }
The beauty of MVC is that it's the simplest separation of concern you can do to a product that incorporates logic and a GUI. If it doesn't do enough for your code base you can always add any multitude of patterns to it. When someone new joins your team they will att least feel somewhat at home if you at least remotely conform to the common practices.
What you're asking to do, securely, is quite tricky. There are several commercial options around but none are cheap. Your requirement to both stream securely and also allow saving the encrypted file for later playback conflict with each other. I'm sorry I can't help you more.
Pets thank you!
it's ok thanks for your time but for all these work I am using [https://www.vdocipher.com](https://www.vdocipher.com) but they does't provide any sdk for iOS . it can only support DRM for android platform . 
Ah, ok, no there's no SDK as the standard video player has it built in. HLS with encryption is Apple's standard. (This won't give you the ability to save to file though). https://developer.apple.com/streaming/
1.have you ever work on this kind of project . should I go through [vdocipher.com](https://vdocipher.com) or you have something else for it that provide DRM support on iOS SDK. 2. is it possible to make our own DRM for iOS using some coding technique or other stuff. &amp;#x200B; &amp;#x200B; I have check out all the apple documentation and I found that it is very to typical to make our own DRM system because it need system coding(very low level) that not possible. &amp;#x200B; 3. I think there is no control on app after I kill it . that is the reason that I can't do anything . &amp;#x200B; Measure factors : I want a app that work like amazon prime ,Netflix that securely put my data in local storage that no-one can access the content ,share it and upload it for free (only paid people can watch). for this I don't want FairPlay because of certificate kind of thing . I want to Make my own DRM system that satisfy my these conditions (not all such restriction screen capturing). &amp;#x200B; what I need : 1. a parameter that identify uniquely our iPhone similar to Mac address and udid (alternatives) 2. description and encryption of video at media level without cellular data connection. 3. the course expires after 15 days. 4. if user change the date manually than we catch it (after app kill , without network) 5. how do I make licence for all these &amp;#x200B; &amp;#x200B;
You didn't mention the word "sync" anywhere in the OP. That's kinda important. In that case, I'd start there because that's really the core part. Select a file sync algorithm from the avaliable ones that are open source. Check out Unison, rsync and stuff like that. Port it to Swift to get the hang of it. That would be my first step. 
I have worked with DRM protected video. We used Akamai. Sure you could write your own DRM but in my experience the video license holders want to be confident that it is secure so it makes sense to take a commercial solution that they can trust and you don't have to take the responsibility. Saving encrypted video, that can be played securely and expires after a date is going to be an interesting challenge for you. Yes the user might not be on the network or might change their clock. There are many things to consider. Good luck my friend!
The convention is to use converting inits, but that always disappointed me. If you had to make multiple conversions, the initializers calls have to nest, like C(B(a)), which is nasty for 2 reasons: 1. The order of the types is inverted 2. you get a bit of a (((lisp))) situation unfolding. Whereas chaining work naturally and elegantly: `a.toB.toC` I think the ideal solution to this is to make some sort of generalized syntax to express nesting as chaining. For example, Elixir uses a pipe operator, `|&gt;`, which takes the preceding statement, and applies it as the first argument to the follow function call. E.g. `C(B(a, foo), bar)`, you could write `a |&gt; B(foo) |&gt; C(bar)`
I like to know the advantage of using this over ObjectMapper. Any idea?
This is what I do. Actions are methods and nouns are computed props. When they need to have arguments, methods obvs. It makes so much sense. And it‚Äôs two less () you have to write. 
Do you know [GitHub.io](https://GitHub.io)? Maybe you can use that to post your tutorials on. (I'm not trying to be a jerk)
I do. The way I‚Äôm doing it now allows me to create a markdown document, and get syntax highlighting for free, as well as html generation. If I use github.io then I would have to use code snippets and some kind of static site generator. It‚Äôs not about being lazy. Well, not entirely. I don‚Äôt have much time everyday after client work and tutoring. So I‚Äôd rather spend that time writing than doing more development.
Is Pythonista what you want? I know almost nothing about python so forgive me if I‚Äôm answering silly answers lol.
What does pythonista do? Im trying to get it so that a user in my app presses a button and python script is run And any sort of help/ input is greatly appreciated 
Unfortunately, theres no (proper) currying in Swift... but you could use the pipe operator with converting inits that don't use an additional parameter. `a |&gt; B.init |&gt; C.init`
It‚Äôs an iOS app that can run python scripts . So I think it may be helpful.
ok thanks , can you tell me what parameters a license file contain.
Ill check it out thanks!
Even tho the code cool and all that's some hard obscure code just to hide some callbacks. Also, I don't think that's what currying means. From wikipedia: &gt; ...currying is the technique of translating the evaluation of a function that takes multiple arguments into evaluating a sequence of functions, each with a single argument... What op is doing is just hiding the shared function call inside another anonymous function.
I suppose its worth a shot, the only issue that may arise is the fact that I am using a library in python, to sum it up quickly the python script takes a url and converts its contents to an audio file, what i was was planning to do was create the audio file and then save it (once I figure that out) [sorry for the lengthy comment]
‚ÄúThis takes three lines of code, which, for what it does, is two too many.‚Äù I don‚Äôt really agree with this and I feel like changing this goes against Apple‚Äôs clarity before brevity style which I personally completely agree with.
This is a great generic solution that I was solving with a less generic alternative. I would have something like this: func updateText(in label: UILabel) -&gt; (String) -&gt; Void { return { text in label.text = text } } So in my VC I would be able to: model.calorieValueChanged = updateText(in: calorieLabel) But the method shown by the article is much cooler.
It is currying, it's just hard to tell because it's wrapped in an extension. If you make it a global function, it's more obvious. protocol Bindable: class {} func weak&lt;Function, Args&gt;(_ this: Function, _ method: @escaping ((Function) -&gt; ((Args) -&gt; Void))) -&gt; ((Args) -&gt; Void) where Function: Bindable { return { [weak this] args in guard let t = this else { return } method(t)(args) } } The function takes an argument and a function that needs two arguments and returns a function with the first argument bound so it only needs one argument.
I think the app might get rejected for remote code execution.
You can do that all in swift far easier than trying to hack in python. Some quick googling for Save file from URL should get you started.
Im not intending to distribute it on the app store, I figured I would just use it personally, and because I though it sounded like something cool to try out
If you give an advanced class Swift and none of the questions send you to Google. It's pretty humbling teaching other people. No I'm not that good at all.
I figured out how to save images, but saving audio files is something that I have had no success with so far, what im having trouble with is understanding what data type I should use. For the image I did as follows: &lt;snip&gt; func saveImageFromInternet() { /*get the URL and download its contents*/ let internetUrl = URL(string: "https://www.sciencealert.com/images/articles/processed/7-reasons-look-to-space-2018_1024.jpg") let task = URLSession.shared.dataTask(with: internetUrl!) { (data, response, error) in if (error != nil) { print("URLSession DataTask Error") } else { var documentsDirectory:String? var paths = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true) if paths.count &gt; 0 { /*Directory where image will be saved*/ documentsDirectory = paths[0] print("DocDir: ", documentsDirectory!) let savePath = documentsDirectory! + "/internetImage.jpg" print("SavePath: ", savePath) /*Creates a file*/ FileManager.default.createFile(atPath: savePath, contents: data, attributes: nil) DispatchQueue.main.async { self.internetImage.image = UIImage(named: savePath) self.saveLocalImage(imageName: savePath, imageKey: "newKey") } } } } task.resume() } /*gets data from URL*/ func getDataFromUrlurl(url: URL, completion: @escaping (Data?, URLResponse?, Error?) -&gt; ()) { URLSession.shared.dataTask(with: url) { data, response, error in completion(data, response, error) }.resume() } /*Downloads the image to device*/ func downloadImage(url:URL) { getDataFromUrlurl(url: url){ data, response, error in guard let data = data, error == nil else {return} DispatchQueue.main.async { self.internetImage.image = UIImage(data: data) } } } &lt;/snip&gt; but im having trouble applying the concept to audio files
To add a mirror statement to yours: &amp;#x200B; A class/struct method should either be impure, or run in non-constant time.
&gt;Not just constant time, but a short amount of time as well. &amp;#x200B; If it is pure, but takes a large amount of time, one could/should memoize/cache it as well. Maybe even compute it in the initializer.
As a programmer you have to face the fact: you're never good at any of it. You'll always be learning, always have some new idea or thought, always build new tools and patterns, always have to adopt a new language or API. It never ends, you'll never be good enough. You can get decently competent at certain things such as implementing a structure or design pattern without a reference. Using a language without needing to ask another person about basic concepts. Being able to juggle complex concepts without a diagram. So no, there isn't any "actually good" in Swift or any language. There's just the increasing ease of programming in it as you gain experience.
Yeah, what you did here is a smart/naive implementation of the[ Optional Chaining \(or Elvis as I prefer to call\) operator](https://docs.swift.org/swift-book/LanguageGuide/OptionalChaining.html). Now my 2 cents on this is that hiding weak references here is not a good idea as it can obscure errors and sacrifice code clarity for brevity.
This might be the most humbling response in this post. 
And it shouldn't be viewed as a downer. This hobby and line of work is exciting because there's always something to learn, something new to invent. I love being able to find some feature that I overlooked or for someone to show me a new trick, it keeps the work fresh and interesting. Less of a job and more of an adventure. That's a huge reason why I do it in the first place!
Oh absolutely! I don't think your comment was a downer at all. Sometimes it's good to have that reminder that we are all walking down this path together. 
Not precisely in Swift but any language and it‚Äôs when you are able to explain the concepts in a ver simple way, also, when you develop a habit of study and feel comfortable in interviews and understand the articles without any problem.
I think that ‚Äúactually good‚Äù isn‚Äôt really the right thing to ask. It‚Äôs more like, can you use the language without it feeling like a constant battle? If so, then you‚Äôre probably doing a decent job.
there is this - https://swiftlatino.com &amp;nbsp; can't really vouch for it, tho it seems to cover all parts of swift programming pretty well with tutorials. the issue will be finding framework documentation in spanish. i wonder if i can take it on as project. 
This is a classic symptom of [imposter syndrome](https://en.m.wikipedia.org/wiki/Impostor_syndrome). You will find that Imposter Syndrome is very common in the software development industry. The truth is: you‚Äôre good at Swift if you can use it to solve a problem that you have. How do you know if you‚Äôre good at using a screwdriver? Well, can you use it to drive a screw? If so, you‚Äôre at a perfectly acceptable level of competence in using a screwdriver. Somebody else may be able to drive a screw faster or in a tougher material than you, but that doesn‚Äôt change that fact that you know how to use a screwdriver. You can get better at using a screwdriver by watching those other people or maybe getting stronger. Swift is a tool. It‚Äôs nothing more. If you can use the tool to solve your problem (writing an app in this case), you‚Äôre doing just fine. Maybe you don‚Äôt have the cleanest or most efficient code, but that doesn‚Äôt change the fact that you‚Äôve used the tool effectively for its purpose. The best way to improve is just to keep using the tool. Maybe look at some projects on GitHub and read some articles on Medium for some insights, ideas, tips, and tricks. You can read Apple‚Äôs Documentation and watch WWDC videos to learn from their code samples. I‚Äôll also let you in on a little secret as a professional software developer. It‚Äôs easy to think that big-name companies have beautiful code based that follow all the strict standards, are well maintained and tested, and are bug free. I‚Äôm here to tell you that‚Äôs laughable false. Almost every big codebase is a jumbled mess and it‚Äôs kind of a miracle that software even exists. 
Be Chris Lattner? But in all honesty the other commenters have said it, you will still probably be googling things that seem simple but you haven‚Äôt used in a long time and Swift is evolving at quite a rapid pace. A year or so ago JSON parsing was something you would need to implement yourself (or use something like swiftyJSON) now the language has support for a mechanism to parse many formats with JSON support built in. Until the language is old and rarely used and doesn‚Äôt have a community pushing it and improving it you never really be truly good at it
When you program something relatively complex and then look at the Foundation code for something similar and you have very similar types and patterns. When you aren‚Äôt stuck on a project for weeks trying to figure out how to get your generic protocols working the way you want, but you used to be stuck on this all the time because you realize the potential of generic protocols. When you have almost no branching logic and your functions are mostly 1 line except for a few guards; all of your code is assign/return statements and protocol/extension utilization. When fewer than 10% of your type declarations are ‚Äúclass‚Äù types. When you write generic protocols with static methods instead of other constructs. When exclamation marks make you cringe, and you feel guilty even typing ! into Xcode for a quick hack; when you can explain confidently a particular usage of forced unwrapping. When you‚Äôve written a struct wrapper around a Foundation Objective-C class that hasn‚Äôt been bridged yet, and you feel pretty confident it could be accepted into the standard library if you cared. When you‚Äôre annoyed that they deprecated ExpressibleByStringInterpolation without giving a replacement. When you wish Selector had generic parameters.
AFAIK, the only way Apple allows apps in the app store that can execute outside code are apps meant to teach programming. Technically you can create an app and embed the python interpreter, but Apple wouldn't let you put it on the app store unless it was an educational programming app.
First step: admit you are suffering from the Imposter Syndrome. :)
No I'm pretty sure I'm good at it. That sounds super arrogant, but I'm getting toward 10 years experience programming, and I can pretty much sit down and achieve the goals I set out to without a whole lot of effort. I've worked with a lot of programmers who are good at what they do. I don't agree that everyone is just muddling through, and if you feel like you are not good at what you do for your career after a few years at most, maybe you should be doing something else.
Oh, I have much more than 10 years experience and I realize I'll always have more to learn. Everyone is not "just muddling through". There's lot of competent professionals out there that do good work. However, anyone who thinks they're good enough is deceiving themselves. If you're not constantly improving, learning, changing with the times then you're getting left behind. Technology is a moving, complex target. There's always new areas to learn and experience. So what does being "actually good" mean? Are you "actually good" when you can write an app and put it in a store? Are you "actually good" when you write server-side code for many concurrent users? Are you "actually good" when you have your own company and manage hundreds of other programmers? At what point do people cross the line from an "ok programmer" to an "actually good" one?
Exactly. You don't need to judge yourself as a programmer. Keep on working on learning, set out to question your practices and improve them, be on that constant path of self-improvement. Don't worry about your current level because there's nearly always a new level to achieve. Solve problems as you can today, tomorrow you'll be able to solve more if you work at it.
Only big thing that is missing is a subquery example :D
Oh I totally agree that there's always something to learn. I always have a hobby project or two going for just that reason. But I would hope people would be driven to explore the deep topic of programming because they're interested in it, not because of some sense of inadequacy; that they're not "good enough". I can't give you a precise definition for where the line is between ok and good. What's the precise definition of a good carpenter, or a good architect? I think most people know when they're good at something, or when they're working with a professional who is good at what they do. You don't have to reach the theoretical maximum to be good at your craft.
Yes, it is new to me. So less views in the hierarchy. Cool. 
So after reading your other comments to your thread you should be working with NSData. It seems like your intention is to download an audio file and be able to play it back to the user? First convert the URLString into a URL let url = NSURL(string: URLString) Then if you want to save it to a file path let libraryPath = NSSearchPathForDirectoriesInDomains(.libraryDirectory, .userDomainMask, true)[0] let soundsPath = libraryPath + "/Sounds/" let fullAudioDirectory = soundsPath + (audioName as String) let audioDataToSave: Data = try! Data(contentsOf: url) try! audioDataToSave.write(to: URL(fileURLWithPath: fullAudioDirectory), options: [.atomic]) If you would like to instead store the data in core data or SQLite I can help with that as well. You should be wrapping the try statements in a try catch. I just threw this together.
Worked through the 3-part Medium article in the Xcode beta (Version 10.0 beta 5 (10L221o)). Conway's Game of Life worked fine so I ordered the book from Amazon.
You can ship features mostly on time and your code only causes a slight tinge of nausea in your coworkers. Signed a senior engineer
I do not totally agree. Screwing a good screw might mean for the screw to last long or the ability of others to remove it.
I'm not sure what you mean. The crypto key file? It's just a blob of data.
Lol yes O(n^2) at least!
I like [codewars.com](https://codewars.com) it both gives me confidence and humbles me in one fell swoop.
You're never good at any language. - Every Programmer
Thank you
The key phrase, though, is *might.* Might implies that those two requirements are specific to the problem at hand. It‚Äôs not a baseline requirement to be considered good at using a screwdriver. To bring it back to programming, writing DRY, SOLID code is beneficial and should definitely be a goal for developers. However, I would never say that someone isn‚Äôt good at Swift if they‚Äôve written an entire, functional app but copied and pasted a function in every class instead of abstracting that (breaks DRY principle). I would say there‚Äôs a learning opportunity. I believe that anybody who can write a functional app that solves a problem in Swift is at a minimum good at Swift. 
You have a totally valid opinion. You and I just have different thoughts about the subjective *good.* To clarify a little bit, I think there‚Äôs a difference between being good at Swift and being a good Software Engineer. To me, Being good at Swift means you can use it to solve problems. Being a good Software Engineer means you follow principles like DRY, SOLID, write good docs, write tests, etc.
[Current Time Swift](https://stackoverflow.com/questions/24070450/how-to-get-the-current-time-as-datetime) 
IMO, for the second one, the compiler will generate you a initializer with all properties for free \`init(quantity: Int, description: String. title: Double)\` while the first one would just give you a \`init()\`. 
Cool, just discovered that. Like I said it seems like the later is better, so I'll probably force myself to use that moving forward.
both versions will create initializers for var.
I tried to mail from Gmail using Google's API and a tutorial, but it didn't work and I never got any support on any forum and nothing from Google. &amp;#x200B; I assume that google has a setup something like MS Office/calendar/outlook/etc... Kind of an "all in one" package API thing. &amp;#x200B; I'd start looking at their tutorials and see if any of them work.
These structs aren't actually equivalent even though they may look like they are (and can possibly be used to look like they are). Struct1 is being defined such that an instance of it has default values (if none are specified when initialising a new instance) for quantity, description and title. let struct1 = Struct1() struct1.quantity // 0 struct1.description // "" struct1.title // 0 Struct2 is being defined such that every instance has to be given initial values and has none be default. let struct2 = Struct2() // error: missing argument for parameter 'quantity' in call 
Remember, Socrates once said, ‚ÄúI know that I know nothing‚Äù
That‚Äôs brilliant. Thank you so much! And thanks for taking the time to let me know :) Really means a lot!
This is a really good birthday gift coming from my favorite language.
You can use WkWebView to show web content in your app. This is just a way to show the actual website like in a browser. If you want to log in so you can fetch user data and use it in your app, you should find out if the website has a Rest API available.
Just down voted myself, I was checking the value in correctly.
You'll get opinions about this that are all over the map. I see people look at some of the most esoteric parts of Swift and say "you're not good unless you know &lt;&lt; insert some esoteric part of Swift here &gt;&gt;". &amp;#x200B; You ask someone that has run a software company and they say "it's when you write code that is robust, easy to understand and can be read by others with standard training." &amp;#x200B; Coming from a person that has run a software company for years, I see ANY language as a tool that makes a product that the customer uses. Swift is one part of a set of tools an I'm actually concerned about how different Swift can look. &amp;#x200B; Imagine a company having a product written in Swift where they've extended and overwritten and 3rd partied the code such that it really doesn't look like basic Swift. Then the programmers leave and the company is trying to find some new programmers that want to learn the code base and they need them to become productive quickly. &amp;#x200B; There's a balance, complex code vs code that an average programmer can read and understand quickly. Some same the complex code make it easier to modify, other say it makes it harder to understand and simple code is better. &amp;#x200B; Example: look at Swift 1 vs Swift 2 vs 3 and 4... Look at the handling of strings, for next loops, ++/-- and all the other changes. Imagine having a bunch of production code all over the place and having to pay people to come in and bring everything up to some standard. &amp;#x200B; You'll hear all kinds of opinions, but in the end, it's all about making products that people want to buy/use. It's not about showing off how "cool" your code can look, it's about making something that doesn't crash, gets the job done and can be read by others.
Hm, might have found it! https://developer.apple.com/documentation/uikit/uipickerview func reloadAllComponents() 
I think my problem is where / how to call that function. I have an outlet to the pickerView in a collectionViewCell. But from what I can tell, UICollectionView does not have a member cell. In prepare for segue, I would like to just do: VC_1.collectionView.cell.reloadAllComponents()
In the first method those variables have been assigned to be objects. In the second method, those variables waiting to be assigned into something. 
Not sure it would work but you could try printing a couple \b ( backspaces ) after each number print
Thank you, in actual fact I would like to review each result for a couple of seconds before replacing... I'm sure what i am seeking is incredibly basic but i have failed to find the answer after hours of searching. Someone said use /r at the end of the line but i think this is from an earlier edition of Swift.
Nice post. We recently launched a rebuild of our app that we TTD the whole way through. If you really want to see the benefits, it‚Äôs not the day the test were written but 6 mos to a year later when to you have to change it or repurpose it. When those red flags show up it‚Äôs such great feeling, you know exactly what your new code has broken. On our team we consider tests documentation of functionality. But also, contracts between you and a future engineer that this code will always work or let you know. I can‚Äôt overstate how much time we save.
Why not call it in viewWillAppear(animated:) in VC_1 ? Although I‚Äôd probably go with NotificationCenter to solve this kind of problem. 
I'm just starting to get in to app development, and so far, I haven't looked in to TDD. My tests have so far been "does it compile". My colleague is getting in to TDD, and after seeing this post, I'm really understanding why. Time to learn TDD in parallel with app development!
Have you tried using CoreData to store things instead of UserDefaults? It‚Äôs more versatile and recommended when storing data in your app. (Glad you figured it out tho)
Out of curiosity how were you checking for the value? 
This paradigm is troublesome with legacy code on big projects. Specially if the project, from the beginning didn‚Äôt implement it. The article is great and explains what TDD is about. Kudos for that!
TDD is a nice idealist way to code, but not productive once your project gets large enough that the compile times are in the minutes versus the seconds. In your blog post you would have had to compile the app 20-30 times. which on a larger project would take hours of just waiting. We use unit tests, currently have 40% test coverage on a legacy code base, it takes 10-15 minutes to compile and run all the tests from clean build (no exaggeration). TDD is much more usable when you can get instant feedback, swift compiler is not built for it
Why does this article have UItests masked as unit tests? Am I missing something? Also they code the next piece before writing the next test, isn‚Äôt the principle of tdd to write test before writing any line of code?
Lol who downvoted you? Either way it sounds like OP needs current time, at current time update schedule so when current time == a time, I don‚Äôt know how to update in background though as I am kinda a noob
If you can guarantee that your app will be running, then you'd get the date, use the Gregorian calendar to break it down into year, month, day, hours, minutes, seconds, nanoseconds, and use that to figure out how long to wait, using a non-repeating timer, which, when it fires does something, and sets up the next timer. (if it should wake up every hour, then you could simply start a repeating timer at that point) If you can't guarantee that your app will always be running, then you'd treat becomeActive events like the above. If you can't guarantee that your app will be running when the important update occurs, than you can use Apple's [EventKit](https://developer.apple.com/documentation/eventkit) to schedule events on the Calendar app, or you can use [UNNotifications](https://developer.apple.com/documentation/usernotifications/unnotificationrequest) to show a notification on the lock screen or in other apps.
Lol, I've literally said this a couple of dozen times on this forum.
Here try this link https://m.youtube.com/watch?v=uKQjJb-KSwU
Sorry I didn't notice it previously ^^; , I noticed a lot of beginner complained about this issue in this sub hence I wrote this article üòÖ.
Thanks, this seems like it might work. I‚Äôll figure out how to get it to work with a segmented control. 
I‚Äôm not good enough. 
Yeah, it's a big issue. The autorun causes all sorts of problems if you edit the playground while it's trying to run. It'd be nice to have a post stickied about it.
Yeah, the auto run sometimes make the CPU usage goes up the roof too, Apple should disable the auto run by default, I get that instant result looks nice on demo but it sucks when you are trying to code something.
I don't think autorun is a bad thing but I do think that it needs to be a bit more intelligent as to when to run and it shouldn't be a zealous about trying to run. Right now it seems to try to compile and run with nearly every keystroke, often getting it into a bad state that just spins and runs out of control.
my guess is you need another variable &amp;#x200B; var a = 0 for i in 0...9 { a = i } print(a) &amp;#x200B;
I am going to use CoreData for most of what needs to persist. But what I am storing in UserDefaults actually seems like what it is intended for. The users are basically just populating their own pickerViews. But I am having trouble updating the pickerView right after the user edits its data source (from a show segue to a tableView).
Yeah good idea, I am going to try this. Previously the pickerView was in a collection view and I was having trouble accessing it. I more or less redid VC_1 and should be able to do this now. Thanks!
Initially I was doing == nil but somewhere I switched to: UserDefaults.standard.bool(forKey: "String") when it wasn't a boolean object, so I was always getting false...
Money man, thank you so much. I think I would have forgotten about this without your post because (or so I thought) I was going to have to loop over all the CollectionViewCells to access the pickerView. I am glad that I redid the UI.
This will be really convenient for developers who want to quickly take Swift for a spin. Docker has a ton of other uses of course, but my favourite is trying out new languages and frameworks without installing a mess of dependencies. I‚Äôm happy to see that an official image is in the cards.
OP didn't ask about programming. They asked about programming *in Swift*. One might ask how to know if they're any good at Spanish. You could respond that learning to communicate never ends, blah blah blah... Sure, but that wasn't the question. It's not too hard to come up with some simple metrics to test if someone is good *at Spanish*. I'm not trying to figure out if they're the next Borges. I want to know if they can order tapas, and maybe *read* Borges. A framework where nobody is ever any good at any of it is not a useful framework. You're just being contrarian.
How is this a a matter of "opinion"? It takes 10 seconds to try it. This is just wrong.
Bleh, why do people make these sites that you have to sign up in order to play around with the tests. A simple link to your current level would be great. I feel that a lot of times it's just a grab for your info so they can sell you stuff or pass your info on to other linked businesses. It's too bad because I'd participate in them a lot more if I didn't have to sign up to do it. 
It‚Äôs only been a month of me developing apps, and I don‚Äôt know what that meant
Okay, so what you‚Äôre going to want to do is check out Hacking With Swift. It‚Äôs a great website with lots of tutorials. It‚Äôs run by a guy named Paul Hudson. He also writes and sells books at the site. I‚Äôve read a few of his books and think that they‚Äôre great. Here‚Äôs an explanation of UserDefaults: https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults Please note, I am in no way affiliated with Hacking With Swift. I just think that it‚Äôs a great resource. 
Cool, thanks.
You should almost never be doing full rebuilds, so compile time really isn‚Äôt a very big problem for TDD compared to non TDD. Our app also takes 10 minutes for a clean build (that‚Äôs not even that long) but incremental rebuilds take more like 20-30 seconds.
It would if you printed the state rather than it‚Äôs `rawValue`. The completed state has `rawValue` of 3 (as the State enum is an int). Also, the reason why you‚Äôre getting a completed state before and after trying to cancel is because the task has already completed before you try to cancel it. You should check if the task is running or not before trying to cancel it.
Hmm, that seems like State might be defined as `@objc enum State` rather than a Swift enum. Objective-C enums omit metadata (i.e the cases doesn't exist, just the raw values).
How would I do that?
I am referring to the area of an Xcode playground where results can be printed using the print statement. I did check the terminology before posting to ensure it did not refer to the area which shows the contents of variables etc, however I can see from this and another answer that it was still ambiguous.
Agree with other. UserDefaults is the best practice for this use case. When launch the app for the first time: UserDefaults.standard.set(1500, forKey: ‚Äúspeed‚Äù) UserDefaults.standard.synchronize() Retrieve and update: var speed = UserDefaults.standard.value(forKey: ‚Äúspeed‚Äù) as! Int speed = 2000 UserDefaults.standard.set(speed, forKey: ‚Äúspeed‚Äù) UserDefaults.standard.synchronize()
I enjoyed reading this. Thanks!
This isn't really a swift specific question, so you could ask it anywhere. Anyway.. I think a class could be fine with title, desc, id, and *conditions[], *reqs[] conditions[] = variable names as a string, reqs[] = number required to meet the condition. so, to create a new acheivement for example: let acheivement1 = Acheivement("Killer","You killed 10 enemies",12345,trackedStats,numericalReq) feeding it arrays would let you have multiple conditions for 1 acheivement - and you can just fetch trackedStats as an array from whatever you have tracking relevant stats. Id then make an AcheivementTracker class to store and track those - and just check it periodically. Since it will store the achievements, you really just need to get it to return any recently unlocked achievements as an Achievement type class - you can then plug in the returned title and description into your ui popup and unlock the relevant data. Personally, I'd make the content unlocker a seperate class too. You can pass it any recent achievements and have it put them in a que to handle displaying them correctly (ie: if 2 achievements occur at once, you need to either show 1 at a time, or have a system for showing them at once). It can also handle unlocking content. ps: id also use a different word than 'achievement' because its prone to misspelling :-p
If I understand you correctly, you want to execute python code from native swift, rather than a user defined script at run-time? If so, I think this might help https://github.com/ndevenish/Site-ndevenish/blob/master/_posts/2017-04-11-using-python-with-swift-3.markdown though it's not exactly the easiest thing to do if you're just starting out. Soon, swift interop with Python (and other languages) will be much nicer thanks to Chris Lattner / Tensorflow. Check this out: https://github.com/tensorflow/swift/blob/master/docs/PythonInteroperability.md 
You probably won't be able to change the appearance of Xcode's console area. Rather, you could code your own window which you have control over placement of the output and send your output there.
There are quite a lot of frameworks you can find on github (search cocoapods, they will link correspondingly). Though I have to say, currently the best framework development practice is not using Swift. As long as you want to provide it to other users, and Swift is not ABI stable, use Obj-C and provide swiftified API's. Might suck, that you can't use the new language, but as a developer using your framework I'd be a lot happier.
Sounds good - I have pretty much decided to just try and do it on a view controller for an iPh8+... bit of a challenge but I followed along on a video course and got things working for a simple app so should be possible.
&gt;ABI stable Why does this matter?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift/.../**ABIStabilityManifesto.md** (master ‚Üí 2e92a5a)](https://github.com/apple/swift/blob/2e92a5a456b34ee7922adb9316677bbc93666eb2/docs/ABIStabilityManifesto.md) ---- 
In short: if you create a framework without ABI stability you can't provide binaries or you'll have to provide one for every swift version out there. Furthermore developers are bound to the Swift version your framework uses resulting in either the developers not being able to upgrade the Swift version of their app, or having to upgrade to use the new features you will add to your framework.
If it's just an experiment it doesn't really matter. :) But if you plan to either commercialize it or expect a lot of other developers to use it, reconsider. For me it would be a no go, being bound to a specific Swift version due to a framework.
Thanks! I guess I was wonder if there was a way to pass a function into a class or if that was something I could do with a struct. Passing in the result instead and the threshold instead of the function to evaluate later is a good idea. Cheers.
Thx found it :) 
Any luck with this? I'm facing the same problem
Currying isn't required for such a syntax. It would just need special treatment from the compiler.
What part would go inside the cases in the switch for the segmented control?
You parameter needs to be the constant that you created
So it can display on lower resolution devices? I don't know. But those thin and ultra light font styles need to die in a fire. They are a nightmare for readability.
A good framework: * Is maintained * Has a API that is a leak-free abstraction of what happens inside * Has a consistent API * Has descriptive names for functions, classes and other data * Has good examples in the README that should get you started for both basic and advanced usages * Is written in Objective-C * But has a wrapper that makes it Swift-y to use (if needed) * Works both in Carthage and Cocoapods. *(Personally I don't understand Carthage people but their life is already hard enough without readily available frameworks)* * Does not drag in a ton of dependencies. Like Alamofire where you could use native API's * Behaves well in unexpected situations. Don't expect x always having value y or z never being nil as people break your stuff in unexpected ways. * The law of three. A framework is only battle-tested when you have three projects using it. Do not 1.0 it before your third project shipped. 
That won't make a difference... it just gives a warning to UIImage(cgImage: filteredImage!) as saying Result of 'UIImage' initializer is unused and an error to blurOverlay.image = filteredImage saying Cannot assign value of type 'CGImage?' to type 'UIImage?'
Can you please expand on that? did get you
Also, +1 to \_use a different word than 'achievement' because its prone to misspelling\_. I misspelt it so many times in my original message. 
You need to assign this newly created UIImage to some variable. Currently your UIImage goes into thin air and you‚Äôre trying to put filteredImage which is CGImage to property which expects UIImage
In other words: protocol Delegate { func methodA() func methodB(value: Int) } class Context1 { weak var delegate: Delegate? init(delegate: Delegate) { self.delegate = delegate } func foo() { delegate?.methodA() delegate?.methodB(value: 5) } } Is equivalent to: enum DelegateEnum { case methodA case methodB(value: Int) } class Context2 { var callback: (DelegateEnum) -&gt; Void init(callback: @escaping (DelegateEnum) -&gt; Void) { self.callback = callback } func foo() { callback?(.methodA) callback?(.methodB(value: 5)) } } Either way, the compiler will let you know if you missed a Delegate function or enum case. In the latter case, you can ignore some cases if you want (with a default: break) while in the former case, you have to implement every delegate function (unless you bring in the Obj-C runtime and mark some optional.)
Of course you can have methods in structs. Example: struct Foo { let title:String let condition: (Int) -&gt; Bool } let foo = Foo(title:"Hello", condition: {(alpha : Int) -&gt; Bool in return alpha &gt; 3} ) } 
I think Sean Allen is doing a three part series on MapKit. You can find his content on YouTube can see if that helps. 
Another question. Do you know if that whole submission site for the projects are still working? How does it work, does it get reviewed from a real teacher at stanford, or is it just a bot that runs some tests? 
If `B`s signature is `func B(_ a: A, _ b: B)`, and you want `B(a)` to mean `{ a in B(a, $0) }`, you're asking for currying though. At least, that's what you need if you don't want `|&gt;` to have special compiler support, too. (It would also be very weird if the currying-like syntax were only allowed in combination with `|&gt;`).
That's pretty much what scene kit is. You can make the rendering component on any graphics API. Many commercial engines target multiple backends like directx, metal , OpenGL and Vulkan .
You‚Äôre looking for something called a Sticky Header (I think). Sticky headers function the way you wish to achieve, I‚Äôm just not sure how it would would work with tabs. I do a lot of smoke and mirror stuff and I‚Äôm pretty sure I could figure it out and you could too - so this is a start, follow the rabbit hole my friend. Good luck. https://m.youtube.com/watch?v=ePCliV2CsuU
Woah. This is exactly it. bahaha thanks buddy.
i ran into last week. and there was a blog with free tutorials on doing a game engine in metal from scratch but i can't find it
I recently evaluated a few HTML-backed rich text editing options for a project and ended up implementing [Aztec](https://github.com/wordpress-mobile/AztecEditor-iOS) by Wordpress. It‚Äôs a little green and lacks a couple of features right now (colored text for example) but is being actively worked on and the quality is high. 
What you're trying to do is to parse a markup language into visual graphics. That, my friend, is what a WebView does best and it's literally WYSIWYG.
Very good point. If I have a bunch of cells in a table view made from WKWebViews won‚Äôt that be a performance issue though? How will I determine their size too...? Thanks for the reply btw :)
Oh cool, I‚Äôll check it out. Thanks!
Also, Unity and Unreal both run on Metal now I believe... In any case, the answer is definitely yes.
"to have special compiler support" It's much simpler to implement that way. It could be a single de-sugaring pass to replace every `a |&gt; f(b)` into `f(a, b)` Implementing generalized currying has its own set of draw backs. For one, it makes compiler messages very confusing to most people, in the case where they accidentally omit an arg. Is that a missing arg error, or a type mismatch error (e.g. trying to assign `(Foo) -&gt; String` where `String` is expected)?
First advice I'll give you, look at other opensource projects that you aspire to be. Not necessarily the same type of project (HTTP client, GUI framework, ...) but the way they're handling one or more aspects. If you're asking the technical side of things, just start. I built my frameworks and libraries by working on them whilst working on the projects that use them. So I'd build a project similar to a blog and I'd implement all CRUD functionality for MongoKitten at the moment I needed them. And went on from there. Build something you'd love to use yourself, and go for it. Get yourself worked up and excited and make the best damn thing you can imagine. But don't think some was built in a day. Be persistent and put in the hours regularly. Don't make it a one-week effort. Always remember that your 1.0 tag isn't \_really\_ 1.0. Many projects never seem to release a 1.0, seeing it as a point where everything is perfect. This is not how it needs to be. Other projects release a new major version every other minute. I prefer releasing a major version when I think the codebase needs to be (largely) rewritten. Don't shy away from rewriting code. It's rarely ever perfect the first try. Learn by browsing other codebase and find goodies you could be using in your next version. Write the language you prefer and get excited about. If that's ObjC, go for it. If it's Swift, which I think makes sense in this subreddit, go swift! Don't drag unnecessary dependencies, but don't get stuck by the lack of them either. You can have 200 dependencies at the start, but once you have some good progress, see if you \_really\_ need all of them and how (easily) you can do without them. Do you use all of the project? Or only a small piece of it? Can you reproduce this piece yourself and learning from it in the process? Performance can go suck it at the start, as I said, nothing's perfect. And caring about performance is something you'll need to learn over time. Doing performance right is quite tough and it's a process you'll find yourself in at some point. But not necessarily now.
"Is written in Objective C"???! Haha what? Why? 
That might be a problem. I was thinking you only needed once at a time. You could try it, but don‚Äôt load the editor if you don‚Äôt need it. You can just show the formatted text in a kind of a view-mode and it might load fast enough, although I can‚Äôt guarantee it will work smooth enough. The size you can calculate it by calling a JavaScript function inside the WebView.
Playground files are "bundles", which are actually just UNIX folders with special properties. Apps are similar. `.app` files are similar. They're not files at all. The Swift file you see via the Xcode editor is not everything inside the `.playground` file.
Makes sense thanks
Within that same `if let` you can chain the optional Double values you get from casting the text: `let billValue = Double(userSetBill), let tipValue = Double(userSetTip), let partyValue = Double(userSetParty)`. Then your function can be called like so: `calculateMath(billValue: billValue, tipValue: tipValue, partyValue: partyValue)`. The crashes should be gone.
I will try it, does that mean it will just not do anything if one of the fields are empty? 
It should just print what you have in your `else` block.
Cool! One last question, how do I get the numeric keyboard to show up in the simulator? If I'm not mistaken I just click the text field in the storyboard and select numeric keypad right? How do I display that in the simulator? 
When I tried doing the solution in the if let chain and changing them to if let userSetBill = Double (billTextField.text) It comes up with error Cannot invoke initializer for type double with an argument list of type String 
 If it helps here's my full code so far https://imgur.com/a/lBpr5TW
Because people that consume it might still use Objective-C and Swift up til now needs to ship with the Swift runtime. So your two class 5kB framework becomes a 2-10MB weight to your app if you do it in Swift.
Yeah, continue from here. After let userSetPary = partySize.text, add `let billValue = Double(userSetBill), let tipValue = Double(userSetTip), let partyValue = Double(userSetParty)`, then replace the calculate function call within the if block with `calculateMath(billValue: billValue, tipValue: tipValue, partyValue: partyValue)`. Also it's preferable you paste your code here so I can copy it.
Sorry about that! import UIKit class ViewController: UIViewController { var gTotal : Double? var fieldsCompleted : Bool = false var bill : Double = 0 var tip : Double = 0 var party : Double = 0 @IBOutlet weak var grandTotal: UILabel! @IBOutlet weak var billTextField: UITextField! @IBOutlet weak var tipTextField: UITextField! @IBOutlet weak var partySize: UITextField! @IBOutlet weak var calculateButton: UIButton! override func viewDidLoad() { super.viewDidLoad() } @IBAction func calculatePressed(_ sender: Any) { // print (checkField()) if let userSetBill = billTextField.text, let userSetTip = tipTextField.text, let userSetParty = partySize.text { calculateMath(billValue: Double(userSetBill)!, tipValue: Double(userSetTip)!, partyValue: Double(userSetParty)!) } else { print ("fields incomplete") } } //VALUABLE CODE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx func calculateMath(billValue : Double, tipValue : Double, partyValue : Double) { tip = (tipValue / 100) * billValue bill = billValue + tip party = bill / partyValue updateUI(total: bill, split: party) } // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // func checkField() -&gt; Bool { // // if let _ = billTextField.text, let _ = tipTextField.text, let _ = partySize.text { // // return true // } else { // return false // } // } //VALUABLE CODE xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx func updateUI(total : Double, split : Double) { //grandTotal.text = "$ \(total), split : \(split)" grandTotal.text = String(format: "%.2f", total) } // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx } 
DUDE YOU ARE AMAZING IT WORKED!! THANK YOU SO MUCH!! I learned a lot as well!! Thank you so much for your time mate I really appreciate it!!
No problem
Swift 5 introduces ABI stability so it wont be a problem any more :)
Try this: var aerodromes: [String: locus] = ["Douglas": locus(x: 10, y: 28), "Belfast": locus(x: 50, y: 106)]
Playground files are folders...
1. was given by cheapshot company 2. portability
No special properties at all. They are just regular folders with a specific structure and named with a certain extension.
If you post code as an image then you make it much harder for people to help you out.
I already had a desktop with multiple monitors and needed to add a Mac for iOS dev work. The Mac Mini was an inexpensive choice for getting up and running, as it would never leave my desk, and I already had monitors / mouse / keyboard.
Udemy has his coarse for 9.99 right now. It‚Äôs pretty good too.
The books by Raymond Wenderlich are great
The i9 will certainly outperform the i7 and it's probably worth the price if you need the performance. However, even the i7 is overkill for most home programming needs.
&gt; var aerodromes: [String: (Int, Int)] = ["Douglas":(10, 28), "Belfast":(50, 106)] Thanks for reply. I have copied in your top line of script and it is accepted without error - that's great - but two things: a) Is it not possible for the integer pair to have been set up as a struct? - because I have to keep using these ordered pairs throughout the procedure. b) When I alt-click '[String: (Int, Int)]' it says 'struct Int : FixedWidthInteger, SignedInteger' - so doesn't that then mean it is a struct. Confused newb
- needed something that wouldn‚Äôt break the bank. I bought one of the earlier models so I could upgrade the ram and swap the hard drive for an SSD. - It does fine for me since I‚Äôm more of a beginner and my applications are not very intensive. I would recommend to test your apps on a device and not use the simulator because it can get pretty slow even after the upgrades.
Unfortunately videos are generally unreliable for me, hence why I've been focusing on text based material. I'm Deaf and I can't afford to pay for videos of which I'm unsure of the captioning's quality and accuracy. If someone could check the captioning during a technical part of the video and get back to me, that would at least let me consider these videos.
Checking it out, thanks
Maybe print your own copy of App development with Swift, the one made by Apple. It has been really useful and the content is very well explained. 
Hey, I‚Äôm sure you can find most of Udemy courses for free on piracy websites. I‚Äôve downloaded the one from Angela Wu and it has subtitles for each video. 
Here's the 3 things I've found most useful. Not all can be had in physical form. None of them are bound in a way that makes it easy to use them next to a computer, anyway. * The Big Nerd Ranch books. Both the one about the Swift language and the one about iOS programming. Note: new editions are apparently being worked on, so maybe wait a little bit. * Ray Wenderlich's site. * hackingwithswift.com My problem with learning Swift so far has been there are two large topics and everyone treats them as two books. One is "learning Swift", which means picking up a lot of language idioms to help you understand how to deal with complexity. The other is "learning iOS/MacOS development", which means becoming familiar with XCode, Interface Builder, and a handful of APIs and idioms you'll use for designing apps. So you end up with a conundrum. Swift language oriented books tend to be more dry and boring. They try not to focus on many APIs, which means you can't do anything really fun. But app development oriented books can leave you hanging at the end: they always lack a final chapter where you are taught how to use the language to manage a fairly complex application. You'll find them saying, "Don't mind this syntax, I'll explain it later if at all", because they're trying to teach you some API rather than some language concept. It's a mess. So that's how I feel the BNR books split: you need both, it's most ideal to read Swift then iOS, but the Swift one is a tougher read. I haven't subscribed to Ray Wenderlich yet, but what I can see of his free content is the closest to the ideal I've found. Articles like [this one](https://www.raywenderlich.com/5542-enum-driven-tableview-development) show how to use the Enum features in Swift to simplify state management in a TableView-driven application. Most books I've read don't take you this deep: they teach you about the features of TableView but *not* how a competent developer deals with their complexity. I'm really interested in subscribing to this. But I spent my quarter's budget on hackingwithswift.com. The e-Books I got are competent and fine, and I like that they're updated as iOS updates. But you really only get the "iOS" flavor of books out of it as far as I can tell. But maybe take my words with a grain of salt. I hacked at iOS for a couple of weeks then got sucked into writing HTML/JS projects instead.
Thanks! I was considering that too, since it's how collision bitmask is implemented. Thanks for the example - super helpful. 
Using an Int, are you limited to 32 (or 64 for newer phones) options in the \`OptionSet\`?
Keep your face to the sunshine and you cannot see a shadow. - Helen Keller
It will be limited to the size of the type, yes. 
There are only two focal lengths, both of which will appear in the camera view. Don‚Äòt know what you mean with automatically?
https://developer.apple.com/documentation/avfoundation/avcapturedevice/1624617-setfocusmodelockedwithlenspositi
Second what others have said thus far... Max the RAM, largest hard drive you can afford, get a reasonable processor (i7). I assume this means the 15-inch model? Congrats.
Or you can pay like $9.99 for it on Udemy and support her work 
Excellent timing, I was just struggling with this! I can't get my XPC service to work (process doesn't start, completion handler on XPC method call not executed) from the context of a `qlgenerator` (quicklook plugin). I know in principle it should be possible, because I see that there's an iMessage related `qlgenerator` in `/System/Library/Quicklook` written by apple, which has an xps service embedded with it. Unlike adding a new XPC target to a cocoa app, adding one to a quicklook plugin doesn't offer to embed it, so I had to recreate that process manually, by copying the build XPC service into `MyQLPlugin.qlgenerator/Contents/XPCServices`. I suspect there are more steps to it than just that, which is causing my silent failure. Any ideas how I can troubleshoot this?
Does making apps and code takes a lot of storage? 
Thanks for the feedback! Will post actual code next time! 
Great thanks - I am now using a struct with three rather than two parameters.
It depends a lot on what you do. Do you plan to do personal projects and write apps that don't need a lot of assets? 20GB should be enough. Do you plan to work at a company that has larger apps with more data, and maybe you even need to work in other IDEs or develop for other platforms from time to time? You're gonna fill up 512GB quickly.
I am aiming for the same configuration. Not saying the i9 is useless but the biggest performance problems I have are things like Safari going to 200% CPU, you can't fix that with a better CPU.
No. The only thing that really adds up are all the simulators you're installing all of the time. It accumulates.
The Focus of the camera is what I am concerned with. SOmetimes it focuses up close other times far away. Are you saying there are only two options? 
I don't have any experience with this but you might want to look into "Background Modes" and "Background Fetching". https://www.raywenderlich.com/890-background-modes-tutorial-getting-started
`departure.keys.first!` would be one way, but are you sure you don‚Äôt want a custom type or this scenario?
No, but if this machine is going to last you many years of downloads, betas, photos, and whatever else you might throw at it, you are going to want a larger hard drive than the bottom tier model.
Your options are * AVCaptureAutoFocusRangeRestrictionNone * AVCaptureAutoFocusRangeRestrictionNear * AVCaptureAutoFocusRangeRestrictionFar https://developer.apple.com/documentation/avfoundation/avcaptureautofocusrangerestriction?language=objc
found some indian dude on youtube whos channel is called Swift Tutorials. Was pretty helpful. I have most of it figured out, but I'll check Sean Allen for the remaining pieces. Thanks!
Hello! Depending on the app you don‚Äôt need either. Both Firebase and Vapor are tools used to create backends for you app. Firebase is a suite of backend developer tools that are available to use such as: authentication, storing information in a database, or recording user analytics. Vapor is a web frame work that you can use to build your own backend. Other similar frameworks like Rails (Ruby) or Flask (Python) allow you build more customizable application logic. Firebase is ready to use *out of the box*, but isn‚Äôt as customizable. Vapor is a blank canvas for you to build whatever you‚Äôd like, but you have to do it all yourself. I hope that helps!
Thank you that helps a lot!
I wanted both a development environment and a home server in a small package. It runs my Plex Media center along with other applications. I didn't need the portability since work gives me a Laptop. I maxed the ram and attached network storage for the big stuff. &amp;#x200B; It's been a workhorse for me for the last 5 years, and I wouldn't hesitate to get a new one. The only drawback I've seen in owning one is gaming (I know gaming on a Mac is verboten but I didn't want a second machine). The graphics are horrible, but if the new one will be eGPU ready that might solve that problem.
You‚Äôre welcome, glad to help! üëç
I think the real question is what you are trying to do. The other reply on here about prefetching background mode is right but may not always be called. An alternative option would be using a silent push notification to have the app do some work. 
Good configuration. I disagree on the i9 being useless though.
Great tips and recap from WWDC this year. 
how would I compare the object to the view? Because using a binary operator like == wouldn't work would it?
Actually, a different way to do this would be with the following: let observer1 = view1.observe(\.url, options: [.new]) { (child, change) in } // same for observer2
Sorry I think im a bit confused. What I tried was as follows: override func observeValue(forKeyPath keyPath: String?, of object: Any?, change: [NSKeyValueChangeKey : Any]?, context: UnsafeMutableRawPointer?) { if(object == view1) {print("view1 called")} } but Xcode keeps telling me "Binary operator '==' cannot be applied to operands of type 'Any?' and 'WKWebView!'" Maybe I misunderstood what you were trying to say
Use === to compare object identity. It works with all reference types. 
I tried doing that but it still tells me "Binary operator '===' cannot be applied to operands of type 'Any?' and 'WKWebView!'"
You need to cast object to a WKWebView. Alternatively, do https://www.reddit.com/r/swift/comments/9ay8ga/is_there_a_way_of_having_two_wkwebview_observers/e4z0gu8/?st=jldqxj9z&amp;sh=13681e58
Yeah that solved it, it was because I wasn't casting it as WKWebView (don't because for some reason I though swift would go "oh yeah I know what type this Any? object is", which it obviously doesn't) Thanks :)
You could also use `first(where:)` https://developer.apple.com/documentation/swift/array/1848165-first
`Any` can wrap either a reference type or a value type, so the compiler can't make any assumption about it. `===` requires both operands to be reference types. It would have worked with `AnyObject`.
My guess is apps that are implementing iOS components like UIKit(IE marzipan) that they are written in Swift, apps like Stocks and News. That being said, I don‚Äôt think they will be available at Mojave launch. 
And, after skimming again, I notice that the Protocol version is not how I'd do it. In fact, I'd do the protocol option the same way he does the struct option. Instead of making a struct, I would just do: protocol PreviewViewDataSource { var attributedText: NSAttributedString? { get } var image: UIImage? { get } } &amp;#x200B;
I remember there was a guy who was keeping a list of the bundled apps that were in Swift but I can't find it right now
Ah true. Why did I forget about that?
Kinda skipped the deprecation of OpenGL/CL.
It's primarily about the array not being empty. if let first = array.first { // } is a more concise way of writing: if array.count &gt;= 1 { let first = array[0] // } 
Developers already shouldn't be using those anymore. but this article seemed to miss a lot more than those. the writing didn't seem terribly developers focused anyway. 
you can continue to use OpenGL/CL in mojave and probably in the following version too. 
Because for direct subscript access it‚Äôs your responsibility to ensure the value is in-bound. Array.first returns the first item of the array (as a convenience, similar to .last) which may not exist (the case where the array is empty). This is not an error or exception state. For subscript access (which always returns the value at a given index and cannot return nil - sans the case where you‚Äôre storing optionals but in that case you are returning value at that index) you‚Äôve attempted to access an index that is out of bounds and that is an exceptional condition.
I'd say pick out a [Swift tutorial](https://reactdom.com/swift) and finish it top to bottom.
I found this blog post: [https://blog.timac.org/2017/1115-state-of-swift-ios11-1-macos10-13/](https://blog.timac.org/2017/1115-state-of-swift-ios11-1-macos10-13/)
Silent push notifications are also not guaranteed to be delivered. Much like in background fetch iOS determines which apps are worth of getting some background time. Long story short there is no way to run your app in a cron mode on iOS. Your best guess would be to trigger background downloads whenever your app is active.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [iOS Dev w\/Swift App, looking to port to Android: Does anyone here have experience with React vs Native Android?](https://www.reddit.com/r/iOSProgramming/comments/9b37ff/ios_dev_wswift_app_looking_to_port_to_android/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
That‚Äôs for the reply dude, but I‚Äôm well down the road now. 
People can help you much easier if you post text instead of images.
That‚Äôs the one! Thanks for the link, I‚Äôll keep an eye out to see if he updates it
React native not React. Native Android is java or kotlin. Try learning kotlin it is very similar.
Kotlin is crazy similar to Swift.
There is this [existing discord](https://discord.gg/wwDurvN)
You‚Äôve got to give a lot more context here for us to help. 
Show the code! And please no images of code. Text is much easier to work with. 
updated.
Good question. I don't have experience with QuickLook plugins, so I can't say if this will work, but try adding the XPC service target to the *Target Dependencies* build phase. Next create a new *Copy Files* build phase, add the XPC service target, and set the *Destination* dropdown to "XPC Services". At the very least this includes the built XPC target in the *Contents/XPCServices* directory of the QuickLook package so that you don't have to add it manually.
Why are you using NSViewController? you should be using UIVewController in swift for one. 
search present viewController swift in google. I'm not trying to be a dick but it's the first answer in stack overflow when you search it in google. If you want to be a developer you have to be able to do a basic google search.
macos brah
And that's where similarities end. I would say language is like 10% of knowledge needed for developing apps.
Native is the way to go if you want quality and the best user experience, when you start to evolve your app and will need serious debug to hunt for that pesky but giving you 1 star rating you will need to learn kotlin or swift anyway
So you already know how to build native apps for iOS. Now you have to learn new platform: react native or Android. So any choice you make, you have to learn new platform. As you said, react would give you ability to share code, but it's not one to one. I think it's the only advantage of react. Android is easier to work with, you don't have to spend time on configuring npm modules, Typescript, looking for basic plugins like navigation and so on. It's also easier and more straightforward to just build and run your app. You are not dependant on react devs, to support new os features and fixing bugs. Although you could write native Android code and bridge it to react, but you have to learn third platform. Performance is slightly better, app size is smaller, debugging is easier, community is bigger and you have more control of your app. So if code sharing is very important to you and you are willing to rewrite your iOS app, maybe it's a good choice to go with react, but I would still consider native Android.
https://www.reddit.com/r/swift/wiki/index
You don‚Äôt necessarily need a Mac. You could install MacOS on your PC (hackintosh). Or run it in a virtual machine. Further information on hackintosh: tonymacx86
Pick up a 2011 or newer MacBook Pro at a pawn shop, ebay, craigslist for $250-400 and itll run High Sierra (but not the unreleased Mojave) + Xcode just fine. Good luck, welcome and I hooe you do great work.
... supported models simply must be able to run the latest version of macOS. 
Check out Mac in a Cloud ( [https://portal.macincloud.com/select/#/plans](https://portal.macincloud.com/select/#/plans) ) for an alternative VPS that you can just remote into using any existing computer you have already. &amp;#x200B;
Yeah, I‚Äôd rather not. I‚Äôve built a few in my day but would prefer just purchasing even bottom of the barrel system that will allow a version of Xcode and Swift for iOS 11/12 development and if I‚Äôm lucky it‚Äôll get me a newer system itself.
It looks like macOS Mojave has a minimum of mid-2012 across the board. So that‚Äôs where I‚Äôll start. Thank you!
I had a mid-2012 MBP maxed at 16Gb RAM and a 500Gb SSD but sold it as I had a (what I thought to be) a secure Federal IT position. Now I‚Äôm in the unemployment line, job market is scarce in this area so figured I‚Äôd go back into learning Swift in the meantime and continue to push forward in it so even if I gain employment in the near future I have something I can have as a secondary (who knows, maybe even primary) source of income so the family doesn‚Äôt get stuck in the position they are now with a loss of income but more so importantly health insurance.
How do I access the current index? Also, the sender to UISegmentefControl?
Yes. The sender is the segmented control. Check out [this](https://developer.apple.com/documentation/uikit/uisegmentedcontrol/1618575-selectedsegmentindex) property in the docs. Apple docs are your best friend. You should look things up there before going to reddit. 
I have experience doing both for a financial client and this guy has hit the nail on the head. Hybrid is ok for quick to market but comes with a massive list of dependencies that may slow you down further on. For me it is a matter of taste and app complexity. If you have a huge amount of native features I‚Äôm your app I would just use native as you would have to write / find plugins anyway. There is a lot of support out there for both approaches now so it is up to you. Personally I would never touch hybrid again but that was because we used an awful enterprise JavaScript framework and had to do lots of accessibility support. Maybe try a small app in both and see how it feels
Found via the wiki. Requirements for Tools Swift 4.0 macOS 10.12.4 Xcode 9.0 beta or later Swift 3.1 macOS 10.11.5 Xcode 8.3 - 8.3.3 Swift 3.0 macOS 10.11.5 Xcode 8.0 - 8.2 Swift 2.2.x macOS 10.11 Xcode 7.2 - 7.3 Then google compatible models for that OS. 
If you are a solo dev, and plan to maintain this app on two separate platforms, I would really give RN a shot. I used to do native Android before switching to RN in all of my projects. The biggest differences (for me) are state management and development time. If you're into functional programming, state management is a dream in React Native (Redux), whereas I always found the Android OOP approach very counter-intuitive and bug-prone for mobile apps at least. Development time: there are some things that are incredibly easy to setup in RN, some of which I spent weeks on thinking about while doing them on native Android. Networking, image caching, passing information to components, web sockets, reusable components, local databases for offline-first design, and many more.
Useless for iOS developing
Just because their using Swift doesn‚Äôt mean they‚Äôre rewritten. I bet the Dock was not rewritten. That‚Äôs a lot of code from the original Mac OS X version. Probably just writing new code in Swift. But I could be wrong!
The company i am working for shipped one react native app. On iOS the app is working okish but on Android there are (or were) some serious problems. I can‚Äôt name them exactly, but as far as i remember it was due to the audio player. This was like a year ago. I don‚Äôt know if they are fixed now. If I were you, i would stick to native android development. But that‚Äôs only my experience. Maybe it‚Äôs gotten better now üôÉ
Also default section in your switch statement is unnecessary, because your game difficulty enum has finite number of options.
`first` is a general Collection (or Sequence) method, so they should at least behave the same. 
Writing the same functionality in different language is not rewriting it? Of course they are taking advantage of Swift features which are not available in obj-c but I think you can say it's rewriting of the code.
I agree, but it‚Äôs one less hurdle.
MVVM came before React AFAIK :/ Usually you would have a generic "dataUpdated" callback (closure or delegation) and this would reconfigure the view with the updated data.
If array[0] was exactly the same as `array.first` then `array.first` would be redundant.
I suggest developing a small sample program which demonstrates the problem you are having and making it available via GitHub.
How do you know it‚Äôs the same functionality? Most likely it‚Äôs new code. Companies don‚Äôt rewrite existing working code just because. That‚Äôs not a good use of developer time!
Both ING and Mercedes Benz are using Kitura in production.
1. Got a new job where they were already using Swift 2. Learned Swift so I could be productive on the new job and not be useless.
I dont know why you would buy a Mac if u can emulate the software with VMWare. You only need a good processor. Good luck mate
Well how did you learn Swift? Mentoring and training at work? Self study at home after work?
Reference? :) thx!!
Yeah, I‚Äôm fine with it too. Just get insecure reading blog posts because people always go something like ‚Äúnow for model changes we could use simple callbacks but that‚Äôs shit and you shouldn‚Äôt do it so we introduce this crazy reactive framework for it‚Äù. Makes me Thing I‚Äôm doing something wrong. 
Looks nice. You would have to switch over the key paths on the receiver‚Äôs side if you observe multiple properties right?
So you would update the entire view on any change? Would make things a lot simpler code-wise. Currently I update things individually, e.g. a string changed and I would only update the corresponding label via a specific update handler just for that string. 
Just start writing your apps in swift even if you don‚Äôt know a bit. Start googling and complete the project u learn it fast. Reading docs is hard.
I‚Äôve been doing Objective-C for 12 years professionally so it didn‚Äôt take much to learn Swift. Just learned as I went. I also had done a little with it in personal projects before but not on the scale of what I am now.
I jumped directly to swift in my job and learned it automatically
Not necessarily, with some protocol magic you could implement some kind of a binding if you want. But ofc switch is most straightforward.
See [https://www.youtube.com/watch?v=zJUMr0OkX2M](https://www.youtube.com/watch?v=zJUMr0OkX2M) for Kitura at ING.
Unless its some intensive computational stuff, I dont see any real negative to just reconfiguring the view.
Here's an early video by Pim Stolk at ING: [https://www.youtube.com/watch?v=zJUMr0OkX2M](https://www.youtube.com/watch?v=zJUMr0OkX2M) He's also presenting on it at both FrenchKit and Server-Side Swift Conf. It's being used for their "Banking of Things" initiative. Mercedes Benz presented on their use of Kitura as the backend for their "Ask Mercedes" app at AltConf. I don't think the video's been released yet though.
I don't mean to pester but TouchUpInside doesn't appear to exist in the version of swift that i am using and I cannot figure out a workaround. Do you know the updated version of this? button.addTarget(self(), action: #selector(), for: TouchUpInside) &amp;#x200B; This is the code that is outdated. Any help is appreciated
&gt; With C-like languages, all variables and constants were declared at the very top, before any functions. Years ago this was true. In modern C and variants you can declare variables anywhere in a scope: [Variable declaration placement in C ](https://stackoverflow.com/questions/288441/variable-declaration-placement-in-c)
Get the book Cracking the Coding interviewer. A lot of big companies care more about data structure and algorithm knowledge then they do experience. The book also has a section with tips on how to get hired and talks about the interview process in depth. 
&gt; Types that stuff too much in their initial definitions. Except when you have to, like a generic type which also implements `NSTableViewDataSource`, etc.
Hi AmazingTommy! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because ‚Äì generally speaking ‚Äì compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/9bacx7/try_my_app_out_please_give_feedback/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
What about RAM also? Being that the GuestOS needs to have resources allocated, essentially purchasing the parts or a system just to run VMWare (allocating half the resources just to do so comfortably also) would cost me the same if not more than buying a old used Mac.
There's always KVO. It's feature poor and has some annoying limitations and gotchas but it's good enough if you don't want to pull in a 3rd party binding library.
I joined a company over 2 years ago that was making a renewed push into mobile. Existing apps were Objective-C. New apps would be forward thinking and use Swift. I hadn‚Äôt really learned Swift yet but picked it up quickly on site. 
Good stuff. I'd also add in trying to inappropriately extend existing APIs to support very specific behavior for a very specific view or screen, especially trying to make a private/internal member of a type public. Sometimes it's better to take a step back and try to rethink approaches before trying to modify an important API willy-nilly.
Chill bruh you can burn everyone or just thank someone for taking the time to help you with your shitty pc. Nobody knows the spacs because you didn‚Äôt even post them. So quit acting dense and go fuck yourself pleb
Sorry to hear your pc is so bad
I am a company, albeit a very small one, and using Perfect in production ‚ò∫Ô∏è www.petview360.com It‚Äôs serving up the entire back-end of my iOS app deployed to a custom runtime on Google‚Äôs App Engine Flex environment. 
I‚Äôve seen and helped a lot of companies with server side swift!
Looks like you removed your ‚Äúwhy burn people and try thanking them‚Äù ... ‚Äúf**k off pleb‚Äù comment. I‚Äôve been thanking people, I applied common sense response to your comment. It‚Äôs nothing about a ‚ÄúPC is so bad‚Äù or ‚Äúshitty PC‚Äù (as you stated in your original comment).. the reason the spec‚Äôs aren‚Äôt posted is because one doesn‚Äôt exist. Hence why I‚Äôm purchasing a Mac. Getting advice on compatibility. In the end, it‚Äôs not my fault that you made a call assuming I had a PC with a strong multi-core CPU, didn‚Äôt take RAM as a factor (which plays a HUGE role in virtualization) before making your comment. We all know what happens when you assume... Thank you!
You say you've created apps but how much formal training do you have? Any degrees? Any courses taken at a university or other accredited institution?
Bachelors in computer science , masters in information systems , courses in java, c++ , I have a background in Object oriented program from college ...good enough??
I'd say you should start applying with all of that experience. You absolutely have far more experience then most entry-level applicants. What you need to get hired is a solid resume, some example code, and apply at a bunch of companies. Hit the job boards and fill out those applications. If you're not getting any bites then take a good, hard look at your resume. It should be one page at most and well-organized. Can you go back to your school and see if they have anyone in your department that can give you advice/some leads?
Ah, I missed adding it to the `Target Dependencies` build phase, but I had the copy step already in. What does the `Target Dependencies` list actually do? Does it just build the dependencies when the main target is built?
P.s. All OSX machines can run Xcode. I would advise you a MacBook air. But you Will have a hard time finding a good machine for under $600
I'd look into a different method of keeping track of the preferences. 1000 arrays too many for this purpose. Have you considered using a struct or class to store your preferences? This will make things far simpler, both reading and writing the settings Secondary to that, why is there that many settings for the user to handle? Ive seen some heavy duty, complex systems that don't have that many. I cannot image a user would take the time to set 1000+ different preferences. Can you give an idea of what these preferences are for? There might be a way to drastically scale down the scope of what you're attempting to accomplish. 
I totally agree!
Did you get help from the senior devs?
I made a in-house iOS app that needed to communicate with different backend systems. These backends doe provided mobile optimised JSON data. In order to simplify the data received by the iOS app, I created an Vapor Server Side App run on a Ubuntu server. This app fetches the data from the different servers, optimises the data and returns the requested data to the iOS app. Next I'm creating a macOS app that uses the same middleware server App. 
 let base = 3 let power = 10 var answer = 1 // count from 1 up to and including power // every time it counts do everything in the {} for _ in 1...power { // every time this is called multiply //answer * base and save it in answer answer *= base } print("\(base) to the power of \(power) is \(answer)") // Prints "3 to the power of 10 is 59049" So it loops a number of times equal to `power`, which is 10. Every time it multiplies by 3 and saves it in `answer`. At the end it prints out all the variables. The result is 3^10.
I agree with this. There's a lot of aspects of development that RN makes a breeze out of - UI modularity, intuitive state management, and close coupling of actions to UI elements are my faves so far. &amp;#x200B; On of my biggest pain points with RN, however, is replicating very specific features that depend heavily on the less-popular native libraries. &amp;#x200B; If you can be flexible with your UI/implementation and your project isn't too big, I'd give RN a shot.
Usually you would use UserDefaults to store user preferences but 1000 arrays is too much data in my opinion to use UserDefaults. 
If you only need your app to detect being outdoors while it's open and running, this is a great solution. 
Keep it simple and start with some YouTube videos that are highly upvoted. Just about every major feature you could imagine to implement (Buttons, Network Requests, TableViews, Camera, Location Services) have a well-made video to accompany it somewhere online. Don't try to do it perfectly the first time. Just get some stuff on the screen. Good luck!
The best place to start is probably not here as any answer is just going to lead to more questions. I'd start with Apple's official documentation. You're going to need to understand how to search for answers, so treat Google as your best ally. I'll get you started - browse through Apple's official documentation and tutorials for beginners.
I too was overwhelmed a few months ago, the best way I found to learn Xcode is to build apps. Learning through repetition is the strategy I would recommend The more apps you build, the more you will improve your Xcode and swift skill's You can start with these free book from apple &amp; the free 39 projects from hackingwithswift * [Intro to App Development with Swift](https://itunes.apple.com/ug/book/intro-to-app-development-with-swift/id1118575552?mt=11) * [App Development with Swift](https://itunes.apple.com/ug/book/app-development-with-swift/id1219117996?mt=11) * [Hacking with swift](https://www.hackingwithswift.com/read) if your more of visual learn you can check out these cources * [Programming for Non-Programmers: iOS 11 and Swift](https://www.lynda.com/iOS-tutorials/Programming-Non-Programmers-iOS-11-Swift/642473-2.html) From **Lynda** * [Your First iOS App](https://www.raywenderlich.com/5993-your-first-ios-app) From **raywenderlich** &amp;#x200B;
There is a free Stanford class for iOS development which should be good start :) 
Update is live. I fixed the press gesture firing during scrolling, added a bit more padding to the text, and made some other minor UI improvements. I decided to keep the corners non-rounded for now because I kind of like the Polaroid photo look of the pet cards ‚ò∫Ô∏è. Maybe I‚Äôll round them a bit in the future. Thanks again for the feedback and really appreciate your suggestions. I hope you enjoy the app. 
Update is live. Now you can tap outside of the dock in the menu to hide it ‚ò∫Ô∏è. Thanks for the suggestion. The beloved hamburger menu is still there however, but I will consider removing it when I expand the features and possibly replace the menu with a tabbed dock at the bottom of the screen. Thanks again for your feedback. I hope you enjoy the app. 
Nope.
Innovative
ghosted
Good explanation. Thanks :)
Certainly makes more sense now. Thanks :)
unfortunately not, i have to do at least this many so looking for the best method, i'm thinking an external database and the app just sends a message to edit it might be the way? 
Huh? Isn‚Äôt that UITableViewDataSource?
sorry i didnt see you were replying to yourself! thank you
just start building your app and look up specific tasks you need to accomplish with your app. 
I read another one of your replies. Can you clarify? Do you have 1000 arrays or one array with 1000 elements?
You have 16,000 integers as preferences?? That's an insane amount of options. Can you be more specific as to what your app does? This really smacks of something vastly over-engineered, perhaps there's a more simple solution.
its a word app that suggests words after you select one, each word needs its familiar set of following words - im not sure theres a way around each set is unique to that word
`x *= n` is equivilent to `x = x * n`
So run me through this. You give a person a set of words, they select one. Then you give them another word based on that selection, and so on? Then you want to save that path of words that got them to this point? Or am I missing something? How do you select the words? Why use a full `Int` for each selection, are there that many words in a set?
pretty much, i want to change to order so whatever you selected is now at the front of the array and then save that data so next time it is remembered
Cool Idea! Sign me up 
Are the sizes of the word sets the same every time, or at least smaller than a certain size? What's the largest set of words you would reasonably use? Do you pick the sets on-the-fly or are they pre-generated? Is there an algorithm to select the next set from a larger one?
Have you check out NativeScript? IMO is a better platform with better support. Or Xamarin. 
Ok so each set is a fixed size with 16 options. So you need at most 4 bits to store each choice. And how many times will a user select a word? Surely not 1,000 different times?
no but it needs that many options, and users might need to add their own too so it needs to be expandable 
thank you for your time btw! 
thanks for the snarky replies. This is why I was correct: &amp;#x200B; [https://hk.saowen.com/a/3abdabbb6d1f83e949c8807649c2268f3eea1211f8ce925c8ad23aba53dc96ce](https://hk.saowen.com/a/3abdabbb6d1f83e949c8807649c2268f3eea1211f8ce925c8ad23aba53dc96ce) &amp;#x200B; lmao, reddit is shit show these days am i right?
I think the thing in the for loop that you're confused about is the "\_"? If so, that's just the Swift way of saying "I don't care about the value of the thing here so I don't even need to give it a name." The line could as easily be written as "for i in 1...power" and the program would have the same output, but you'd get a compiler warning about the variable "i" being unused.
Is the delegate actually set?
I don‚Äôt think it was a performance consideration. Rather optional subscripts are less useful. It‚Äôs not any more safe than trapping on overflow; in both cases the behavior is fully defined, and if your subscript returns an optional you still have to handle the nil case.
ok, thanks again
That‚Äôs not quite true, ‚Äòfirst‚Äô works on any collection, not just those where the index type is Int and the startIndex is 0. For example, if you slice an array, then ‚Äòfirst‚Äô on the slice returns the first element whereas subscripting 0 will trap.
Because your print statement is outside the loop, so is only executed once after the loop has run ten times. Move the print statement inside the {} and you‚Äôll see.
You can post a thread there and ask.
[No, it *is* a performance consideration.](https://github.com/apple/swift-evolution/blob/master/commonly_proposed.md#strings-characters-and-collection-types) Returning an optional *is* more useful. If you want to trap on invalid index, you can do that with a force unwrap, just like with the current system. But if you don't, you would not have more options. `Optional.map`, conditional binding, nil coalescence, etc.
"it needs to be approved by a moderator", so we'll wait and see.
I think so, I'm following a book and I did what it told me to but it doesn't work for some reason
Can you put a breakpoint there, just before it's called and see if it is nil or defined. You can hit me up on discord if you need more help. Retzel#7634
This a very clearly a naive approach and will have a lot of performance issues at scale. I wish I could point you at a specific data science methodology to help you out but it‚Äôs not entirely clear what exactly you‚Äôre doing. By the way, asking for the answer to a question when you‚Äôre a beginner can be really tricky, due to something called the X Y problem. Essentially you‚Äôre asking ‚Äúhow do I implement the solution I think will work‚Äù instead of ‚Äúwhat would be the best solution to [the underlying problem of remembering words]‚Äù
That's exactly right ‚Äî a target in *Target Dependencies* indicates that it needs to be built first before your main app.
Pleasantly surprised to see my project up there :) https://iosexample.com/easily-play-combinations-of-sound-effects-and-taptic-engine-vibrations-on-ios/
I worked at a small dev shop that used it. Can‚Äôt name names of course but it does exist out in the world.
yes im asking how i can make a quantum computer for generating the perfect set of words everytime... you plum 
You can use NotificationCenter as changed callback. This is NotificationCenter wrapper class. ```swift final class Variable&lt;T&gt; { private let name = Notification.Name("variable-value-changed") private let center = NotificationCenter() var value: T { didSet { center.post(name: name, object: nil) } } init(_ value: T) { self.value = value } func observe(queue: OperationQueue? = nil, immediately: Bool = true, changed: @escaping (T) -&gt; ()) -&gt; NSObjectProtocol { if immediately { changed(value) } return center.addObserver(forName: name, object: nil, queue: queue) { [name, weak self] notification in guard notification.name == name, let me = self else { return } changed(me.value) } } func remove(observer: NSObjectProtocol) { center.removeObserver(observer) } } ``` This is usage. ```swift print("Print:") let a = Variable&lt;Int&gt;(0) let observer = a.observe(changed: { value in print(value) }) a.value += 1 a.value += 10 a.remove(observer: observer) a.value += 100 // Print: // 0 // 1 // 10 ```
cool.
This seems like a rather broad and unspecific question. Generally, the easiest way to create a button (which is covered in most starter tutorials, just not game tutorials) would be to just select one from the sidebar in your .storyboard-file and move it to your window. You can then connect this button to your ViewController as an Outlet (which is just a reference to that Button), or an Action (which will create a function in your ViewController that will be executed when the button is pressed or otherwise interacted with). A quick Google search brings up \[this\]([https://codewithchris.com/xcode-tutorial-user-interaction/](https://codewithchris.com/xcode-tutorial-user-interaction/)), for example. Another way would be to "define" an area (a rectangle, for instance) as a button, and handle touches/clicks (you didn't specify the platform you're working on) within this area accordingly by overriding your ViewController's touchesBegan()- and touchesEnded()-functions. 
If your view is supposed to scale vertically according to the content that it holds, either: 1. It shouldn‚Äôt have a height constraint, and its subviews‚Äô heights can be derived from the constraints you placed. 2. You give the view a placeholder height constraint (do check Google on how to do this).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift/.../**Modules.rst** (master ‚Üí 4e388de)](https://github.com/apple/swift/blob/4e388de61950b911bc8b628ba7a9f4e95e1d4f9b/docs/Modules.rst) ---- 
Not easy to do.
&gt; Swift has namespacing and packaging, it's called modules: I just looked up the current documentation and it's exactly what I said: a module is a Framework or an app. &gt;Swift‚Äôs access control model is based on the concept of modules and source files. &gt; &gt;A module is a single unit of code distribution‚Äîa framework or application that is built and shipped as a single unit and that can be imported by another module with Swift‚Äôs import keyword. &gt; &gt;Each build target (such as an app bundle or framework) in Xcode is treated as a separate module in Swift. If you group together aspects of your app‚Äôs code as a stand-alone framework‚Äîperhaps to encapsulate and reuse that code across multiple applications‚Äîthen everything you define within that framework will be part of a separate module when it‚Äôs imported and used within an app, or when it‚Äôs used within another framework. &gt;Not really that difficult when you see how to do it. What were the hoops you were referring to? There are 8 steps in that guide. In Java, you literally just type `package foo;` at the top of a file to make it part of a package.
Follow codevil‚Äôs advice here, but answer your question: For interface builder and constraints to work, everything has to have a height and width constant. Rather it‚Äôs as large as the canvas, or as small as the home indicator. In a nib, this is defined as the height and width of your view at the time of initialization, which is usually acquired from what you give it in code to according to where the nib will go. In addition to this, because this is where it sounds like you are actually having problems, constrains are the absolute part of this. Your nib doesn‚Äôt actually have a set height and width. When setting objects on a nib with constraints, you need to make sure 3 things: 1) If you are using static context that will never change, that the place you put your nib is EXACTLY the size of your nib to avoid breakage (e.g. if your nib is 375 x150, you better make sure every place you put it is too) 2) When doing constrains on non-controller based nibs, try to base everything off center and not the edges. Avoid connecting to edges Incase of sizing errors, as this will prevent constraint breakage as well. 3) It‚Äôs interface builder. EVERYONE messes up. I‚Äôve been using it for 8 years. I STILL do it. Anyone who says they don‚Äôt is lying. Triple check your constrains with what is in the logs. And good luck on your project :)
Sorry, harder to proof read on mobile for me. Fixing!
Mixing UI with "business" logic. This is a big one. &amp;#x200B; No testing beyond the code automatically generated by the Xcode template. I'm guessing this is because of #1. It's pretty hard to test business logic when it's stuck inside view controllers. &amp;#x200B;
"Just use this easy and totally groovy reactive framework!! It will up your hipper-than-thou cred too." &amp;#x200B; My aversion to this is known in the Java world as "Don't make me eat the elephant" which referred to EJB, then J2EE as a whole (which imho, has lost to Spring). You want to eat a handful of peanuts, but you're forced to eat the whole elephant. &amp;#x200B; Good luck with debugging if\^H\^Hwhen something goes awry with that framework. &amp;#x200B; Delegates/closures ftw. &amp;#x200B; &amp;#x200B;
So the app is basically a video player and for it to update the new videos, an admin user needs to verify with a password. I want to eliminate that process and update in a scheduled time when no one is watching the videos. &amp;#x200B;
tysm
Sanity checks are good. If let and the like are good sanity checks. Sanity checks that crash the app are bad. Force anything is almost always bad in production code. When you have 100 people at a company building a complex system that spans millions of mobile devices and hundreds of servers(not to mention the 100 people no longer at the company who built half the existing code), you will **never** achieve 100% sanity. Therefore you should always program defensively and try to minimize the damage of the insanity. Crashing the app is rarely the safest, least impactful answer to insanity. Generally you can just disable the feature with a generic error and let the user keep using the bulk of the app.
I‚Äôd love to know that as well üëç
Got your PM. &gt; A location based notification system. This, as worded here, isn't unreasonable, but it depends on what notifications you're sending and why. The App Store guidelines rule out advertising through push notifications, so that probably isn't a good idea. Something like package delivery notifications would presumably be OK. Regardless, for push notifications, the user will have to accept that "allow push notifications" dialog. As far as "location based," apps can request location access while the app is open OR even when it's not open, and the user will have to approve the dialog asking (you've probably seen it before as an iOS user). Working within that limitation, you'll be able to have the user's location for targeting those notifications. I don't think you're likely to get a lot of users allowing access when the app is not open, but you may be able to target to their ZIP code if they've had you ship them something before. &gt; Payment integration with Visa and master cards. Nothing too tricky here. If you're building this for an online shopping website, they probably already have a way of storing credit card information on behalf of users, so that'll be your easiest bet. Ideally you want your code (and thus your responsibility for securing it) to be handling it as little as possible, so if they'll give you an API for storing it and then referencing it by a UUID or last 4 digits, that'd be the best. If you must store it on the device, you'd want to store it in the keychain, but this would inherently mean users of the online shopping site would have to re-enter it if ordering from their browser or something. I'd push for details if you're expected to keep credit card details any longer than is necessary to get them stored on their servers where you're no longer responsible for them. If you're looking to impress, you could push to integrate Apple Pay. One of the key benefits is that you don't need to require users to create an account before purchasing, which is a huge reduction of friction in the purchasing process. You can literally have a user open your app for the first time, hit a purchase button, see the Apple Pay dialog (which includes their shipping address), approve it, and it's done. Metrics show that essentially any hurdle between the user and the purchase decision results in lower sales, and Apple Pay is unique in the way it lets you have users buy things without manually typing in addresses and credit card numbers (or having previously done so). Stripe has an Apple Pay demo (usable from Safari) [here](https://stripe.com/apple-pay). &gt; Is there any course or book or any sample projects I should get my hands on before starting the project? Unfortunately I have nothing for you here. I love the book I learned from, but it's from back when iOS was called "iPhone OS" and is focused on Objective-C and memory management. Of all the work for the project, probably 98% will be in the UI and talking back and forth with the main site's API. That describes most every app, so your use case should fit well with whatever book / guide you find for building a modern Swift-based iOS app. Once you're good with the basics, using the location API and push notification APIs are not much more difficult. &gt; Any recommendation for app architecture, like MVP or MVVM? I am only starting with swift so haven't experienced much with RxSwfit and other architectures except MVC setup. I haven't personally used any but MVC. I did do an app recently that was for both Mac and iOS, and I found that simply keeping the parts of the app that are not related to UI separate from the ones that are worked great for preventing "massive view controller." But I don't have experience with MVP or MVVM. &gt; And should I add firebase related tools to my skill set? This is just assuming but I would like to prepare some learning in advance to job. I haven't used Firebase either, sorry. I've been a lot more focused on AWS, so I'd lean that direction for any significant server-side functionality. You can look toward CloudKit for your use cases that could be supported by its features (it is free, after all) but I'd probably only use it if you can get it to do all that you need. Otherwise you'd be maintaining two back end systems for one app. Regardless, any one you choose will be good to add to your skillset. AWS is probably the most valuable, but likely also includes the greatest time investment on your part.
&gt; I just looked up the current documentation and it's exactly what I said: a module is a Framework or an app. It may say that there but actually a module can also be a library, all you need is a module map alongside the header file. Here's an example of a way to create a module without a framework or app: [Swift 4 Module Template](https://github.com/fulldecent/swift4-module-template)
Your help is appreciated! :)
My guess is that one of the constraints in the console is an `NSAutoresizingMaskLayoutConstraint`, which means that when you loaded your nib, ios automatically created constraints that set its width and height. To opt out of this behaviour, set `translatesAutoresizingMaskIntoConstraints` of your view you made from your nib to `false`, after you create it and before you add it to a view. You can google what this does if you want, I‚Äôm on mobile and can‚Äôt really search for a good reference.
Thanks a lot. I tried to phrase the question as best as I could.
Many years of ObjC experience, so it was just a matter of learning the Swift syntax. Skimmed the Apple Swift documentation site, then just started coding. After a week or two of googling "how do you &lt;objc command&gt; in Swift" you get more comfortable. Granted a lot of mistakes and "wow, you can do that?" in the first few months, but the more you write the better you get. Nothing eases the transition effort. The sooner you start, the sooner it's behind you.
If the hostView contains no prior subviews, you are right. But there is no stipulation preventing that. Furthermore, hostView may self-manage subviews (much like the classes I previously listed), in which case, not only might the ordering be unreliable, but the subview itself might not even exist in that array at all (if it's, eg, re-nested into one of the existing subviews).
It‚Äôs one of the mysteries of life.
Answer i guess: try making the constraints and set the size of image to the size of the button. Auto layouts and stuff.
If you constrain a UIImageView on top of the button, and then set its ratio to remain the same, then the image will scale but won't stretch out. Just make sure that user interaction is disabled for the image so the button is clickable. 
Thanks alot for your answers! This really give me an outline of what I should focus on "learn and test" phase. And again, really thank you for sharing your time with me. :) 
Hey, srona22, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I think there are going to be a few senior iOS devs who will get caught out by this dramatic change. I worked in a place last year and the lead iOS dev didn't have any plans to move to Swift because he "didn't like it". He was an excellent Objective-C developer but eventually he will need to migrate (even if it's just to get a new job) and he'll be far behind the curve.
Anyone that's really good at ObjC shouldn't have a problem learning Swift. The programming language is not all of what iOS dev is all about. Quite a few apps are just a bunch of API calls and the language just controls those calls. &amp;#x200B; Also, those rankings really don't tell the whole story about how popular a language is. If you lookup how they actually rank them, and how popular they actually are, you'd see it's pretty misleading. The fall off rate is unreal, going from #3 to #5 is a HUGE drop off. They also rank things based on questions asked on SO. Any new language or language that's changed a lot is going to have more questions... ObjC hasn't changed much in a while, so not much of a need to ask questions about what's new if there's nothing new.
I've been through the process of migrating from ObjC to Swift and I don't think it's as straight-forward as you're suggesting. Yes the Apple APIs are basically the same but the language structure and concepts are very different, especially as people are finding new and interesting ways to do things all the time. Even if I'm wrong about the migration difficulty, my point was more about getting caught out. I migrated because I was given a project which was written in Swift, the company knew this and gave me a lot of flexibility and were forgiving. If my old colleague started looking for a job now, he might struggle a little because he knows zero Swift, however there will still be a lot of projects out there using ObjC so he would be okay. In a few years time that is potentially going to change a lot and he might get caught out.
There's quite the difference in writing Objective-C in Swift and writing Swifty Swift. There's tons of stuff you can do with pattern matching, enums, generics, special types of loops and types in general that just don't exist in Objective-C.
True, this is a whole new discussion. I worked for a company back in the DotCom era that had some of the largest tech companies as their clients. They ended up going out of business. One of the biggest problems was over engineered code. The stack used wasn't very popular at the time and anyone coming in as an mid level programmer would be fully lost in the code. &amp;#x200B; Swift has added a LOT of stuff to "make it easier" to program, but what it has really done is make Swift much more complex. &amp;#x200B; I just ran into the problem of replacing the -- (decrement) that is no longer allowed. In order to get the same effect, I needed several lines of code, including the defer. &amp;#x200B; The company in question had a great product idea that was bought by many famous companies... they went out of business because they got wrapped up in the language and forgot about the business of providing customers with a software product. &amp;#x200B; How many customers stop and ask "did you use defer or enums?" They don't give a damn, ObjC or Swift or VB or C#, they just want to throw birds at pigs or find the hidden words...
This is the main reason that I jumped all in with Swift. I started with Swift 1 and skipped 3, came back in at Swift 4 because it should have settled down at that point. It was changing so much, I decided to wait until it settled down. &amp;#x200B; It really didn't take long to learn enough Swift to be functional. Learning a programming language after you've learned a few, isn't very hard. It's just syntax, verbs, and other features. &amp;#x200B; Getting a job isn't so much about memorizing syntax, the editor does that for you. If you don't know something about Swift in someone's code, you can look it up in seconds. Do this for a few weeks and you're right there with the rest of them. &amp;#x200B; More and more, APIs are the key. More so with iOS. Look at how much power you get without ANY 3rd party tools. &amp;#x200B; If you just install the basic Apple product (Xcode, IDE, IB, etc..) you can do some very, very powerful things... Add in some key 3rd party stuff and you can make most any app out there (not all but quite a few). All that with just making API calls.
I didn't downvote. I rarely even vote anymore on Reddit, it's too much group thought for me :D &amp;#x200B; I'm open for discussion and don't just downvote. &amp;#x200B; Back to the discussion, how can you not have a few weeks to learn a language? Anyone that's really good with ObjC and iOS can be employable in Swift in short order. A few weeks is nothing when you're talking about a career, it's nothing when talking about getting a job. &amp;#x200B; IDK why someone's downvoting, I get tired of that crap myself, but that's the nature of Reddit, it's pretty childish at times.
I don't really understand why the concept of being caught out is so difficult for you to get.
My best guess is you don‚Äôt need anything after the period ‚Äú.‚Äù Since it will not be used. If you need more of a technical explanation.. someone else can chime in? What name do you have it labeled as in assets?
Is that addBirthdayViewController actually telling its delegate to do stuff, ie is it calling methods specified in your delegate protocol? This is a blind guess since there is not much code provided.
I know it's all about flexibility when you're building a library for other devs....but swiping up/down with the dots looks so odd LOL
I obviously don't know [all of these](https://en.wikipedia.org/wiki/List_of_C-family_programming_languages) but the only "C-like language" I know which requires that are old versions of C itself.
I agree with ObjC no changing and therefore not a whole lot of new questions in SO. but also, i've seen some migration away from OS to live chat groups and in person meetups. I myself avoid SO
What makes you think I don't understand the concept? ***Understanding what you're saying and agreeing with what you're saying are NOT the same thing.*** I can't see a few weeks as being "caught out". Being left behind in a tech means your STACK is gone or at least most of it. &amp;#x200B; Anyone that has years of iOS dev in ObjC is NOT going to be "caught out" because a job wants Swift and they take a few weeks to get a handle on Swift. &amp;#x200B; I've been programming since before the DotCom era, at the start of DotCom, my entire stack was about as dead as dead gets. &amp;#x200B; Before that, I needed to change languages on the same platform and it took a few weeks. &amp;#x200B; \&gt; I don't really understand why the concept of being caught out is so difficult for you to get. &amp;#x200B; **I really don't understand why this concept is so difficult for you to get.** &amp;#x200B; Maybe open the mind a bit and try to understand that anyone "caught out" under those conditions would be really, really SLOW at learning. Anyone that's done a few programming languages for about 5 years or so and isn't a really, really slow learner, can get Swift in **NO TIME.**
Actually now Swift is pretty good. Xcode isn't crashing. Its quick. Much better than objective C. I don't think anyone makes a new app in Objective C. It is all legacy code. And if you remove any Admob related code (which still has Objective C libraries) my guess is Swift overtakes Objective C completely.
The chances of it being a bug are so remote.... It is almost ALWAYS user error. However, I can't see how this cant be a bug? Interesting. Thanks for the response. &amp;#x200B;
I updated my comment. It's certainly not great default behavior without some sort of documentation. At worst it's a bug, at best it's a undocumented feature.
Digging even deeper we find this in [`UIImage.init(named:)`](https://developer.apple.com/documentation/uikit/uiimage/1624146-init)" &gt; The name of the file. If this is the first time the image is being loaded, the method looks for an image with the specified name in the application‚Äôs main bundle. For PNG images, you may omit the filename extension. For all other file formats, always include the filename extension. So at least it's spelled-out here. I wonder if it leans on this functionality and they just didn't carry over the documentation.
Thanks for the update. Wow that is strange... That is horrible behavior. I wonder what happens if it .jpg.png? I guess I could test it. But yes that is odd. There must be a logical reason why SpriteKit does this. 
&gt; I just ran into the problem of replacing the -- (decrement) that is no longer allowed. In order to get the same effect, I needed several lines of code, including the defer. Honestly, I completely agree with their removal of the decrement operators. They encourage convoluted code and are a sign that the statement probably needed to be thought-out better in the first place. I'm guilty of using the tertiary operator `?:` but lately I've been reconsidering its use too. To save a couple of lines of code you introduce a construct which can be difficult to read when skimming over the code.
If you open your project folder in Finder, select that file and press Cmd+I do you see the duplicated extension? macOS does hide extensions so I've had situations when I accidentally introduced a second one
That article was about how to write Unit tests, which should not have any external dependencies. If the server violated it's contract, the problem is with their code, not the function you were testing. Seperating concerns this way helps isolating failures. You're correct there are networking events that would be good to know about, those are typically captured in integration tests. Again, its helpful to separate these from unit tests for the above reasons, but also to allow you to have a release even if a particular dependency is having issues. TDD typically uses both unit and integration tests. 
The problem is that there is a huge investment in computer code and knowledge. There's all kinds of languages that are the "fix all" languages, but the reality is that this is an answer to a question that shouldn't have been asked. It's overthinking things. myVar++ is clear, so is --myOtherVar, I've never had a problem with it. For(i=0;... is clear. The concern is that they are citing things like "it's not C" as a reason. Consider the costs vs the benefits. Look at all the loops: while, repeat until, perform, for,... why not make a loop a loop. The fact that Java, ObjC, C, C++, and many others use something is a reason to keep it a standard. Now, every multi-lingual programmer (which is probably ALL the mid level ones) will forever have to remember... "Oh, this is Swift 4, so we can't use ++". When someone needs a routine from Java to Swift, that's just one more step to take, one more thing to remember. All for the gain that so many people were confused about what myVar++ did? Were there really THAT many people that had a problem with ++ that it had to be removed from the language? Languages are an investment just like code, a company can get code locked and it can cause a LOT of problems. We used to have to wait a long time before we'd upgrade to a new version of something because of the investment. Some companies just don't upgrade on mission-critical stuff or even regular projects because it just isn't worth the time. Imagine that you have 20 projects and they all used ++ all over the place... now you do an upgrade so you have to go back and change every one of those. What exactly is the gain in doing that? Now imagine that you have 100 project and 20 are in Swift and 10 of those are in Swift 2. That's just more stuff you have to remember. All this for the gain of removing the horror that myVar++ causes programmers. 
Let‚Äôs say an ObjC dev who has done zero Swift loses their job or for some other reason needs to get a new job at short notice. They may not realise (not every one of the millions of devs out there pays attention to the job market) that they will need to be proficient in Swift by that time (I‚Äôm talking about in the future here). So they go looking for a job and the majority of employers are asking for Swift. Well their chances of getting a job now are significantly reduced. That‚Äôs it, that‚Äôs the only point I was making. - Yes Swift is not a hard language to learn, especially for an ObjC dev. - Yes most of the hard work in developing for iOS is learning CocoaTouch and the rest of the APIs, which an ObjC dev wouldn‚Äôt have trouble with. - I believe they might be caught out simply because they might not have realised that Swift adoption has accelerated. - I literally stated ‚Äúa few‚Äù.
&gt; The fact that Java, ObjC, C, C++, and many others use something is a reason to keep it a standard. First of all, if every language did everything exactly the same then why would we have separate languages? Each language does things differently because they are addressing problems differently. With Swift it's been a conscious choice to eliminate common sources of errors by changing things everyone else does. In the case of the postfix operators `--` and `++` they can be downright evil to use. First of all, many implementations of the postfix operators are slower than the prefix operators. A postfix operator generally first copies the variable, passes the copy on to the next step, and then mutates the original variable. In some cases the compiler can rewrite the code to make it into a prefix operator but not in every case. Secondly, both the prefix and postfix operators can cause bugs. The order of operations can be very murky when they are applied. See here for an example: [Why are these constructs (using ++) undefined behavior in C? ](https://stackoverflow.com/questions/949433/why-are-these-constructs-using-undefined-behavior-in-c) Even when the behavior is well-defined the very nature of the operators can cause programmers to make mistakes. See: [What does an expression involving multiple post/pre decrement/increment operators evaluate to in C and C++?](https://www.quora.com/What-does-an-expression-involving-multiple-post-pre-decrement-increment-operators-evaluate-to-in-C-and-C++) It's long been a bad code smell to use the postfix operators in many languages due to these issues. I've participated in many code reviews and seen many reviewers send back code because it included the postfix operators. The use of them should be avoided, even if it means you need to use a bit more code. Because of this the Swift community and language developers decided to do away with the feature entirely. Every use of these operators could be done in a more clear and well-defined fashion with other code. The decision was made to err on the side of safety. This goes for many of the differences between Swift and other C-like languages.
&gt; I just ran into the problem of replacing the -- (decrement) that is no longer allowed. In order to get the same effect, I needed several lines of code, including the defer. By the way, your [code](https://old.reddit.com/r/swift/comments/97252y/proper_way_to_upgrade_if_mynumber_10_using/e44y3av/): if allowedErrors-- &lt;= 0 { Just needed one line to be added: allowedErrors -= 1 if allowedErrors &lt;= -1 { This is because, mathematically, these statements are equivalent: allowedErrors &lt;= 0 allowedErrors - 1 &lt;= -1 It's really not much of a change.
A logical implication operator sounds neat, but what's the reasoning behind prohibiting it outside a precondition?
Some people may find it confusing in other contexts.
There was one more line because of where the function exited, but yes if you don't have the exit where it was, it would have been one more line, but the point is what was gained? In the example of someone that uses 4 different languages and supports 100 apps, they now have to remember one more thing. All for what? was myVar++ such a crime that we just couldn't let it go? Complaining about ++ is really splitting hairs. Saying it's two different things, increment and assign, we knew that when ++ was invented. It was known and working and I never heard anyone complain about it, but now, Swift is different and any code being used from the decades of code out there, has to be changed because increment and assign in one operation is such a crime.
I guess thats true. But come one look at how easy manipulating strings is, shuffling arrays, and of course SpriteKit as opposed to using Cocos2d. For me, (a minor game producer) Objective C was noticeably worse because I had to add Cocos2d to get all the special effects that now come bundled in with SpriteKit. Of course SpriteKit just ripped off Cocos2d. I don't know how they got away with it. But that is another discussion. But I assume you don't make games with physics engines. Because there was a very, very, very time consuming step which Objective C added. You had to learn how to use Cocos2d, unless you felt like calculating all the physics by hand. Now it is all bundled as one.
A crime? Decades? Going a bit overboard there, aren‚Äôt we? Most software engineers I‚Äôve interacted with know about the issues with the postfix operators and either accept the risks or avoid using them. Pretty much anyone who has formal training or works with a large organization should know about it. It‚Äôs not a crime, just a tool. Like all good tools they can be dangerous if used without caution. Swift is designed to round off the sharp corners a bit so they removed those operators. That‚Äôs been the focus of much of the development of the language, it‚Äôs similar to why they avoid using bare pointers. Of course Swift hasn‚Äôt been around for decades but I assume you‚Äôre talking about languages like C++. Thats comparing apples and oranges, different languages have different ways of doing things. 
The decades is about the tons of code already done in ... Java, C, C++, ObjC, ... that do special things that can be translated over to Swift OR a company that has a working system in ObjC and now has to go in and change this one thing because Swift no longer allows it. &amp;#x200B; I've never had a problem with ++, but I usually just use it for simple things. &amp;#x200B; I could have said the same things about the For() loop being removed from Swift. I'm sure there's other examples, but here's the deal... I see this from a business standpoint. It's about having employees learn things that are different for no real reason. &amp;#x200B; Imagine driving your car thru 5 cities and each one had it's own set of rules. From where to park, which side of the road to drive on, or how a turn can be made. &amp;#x200B; How many programmers know more than one language? Most everyone I've ever known. So if they all use ++ or for next, that's just one less thing to worry about. &amp;#x200B; Standardization has HUGE benefits. &amp;#x200B; These issues of undefined behavior or whatever other problems can be solved.
Replace your `?` with an `_` (underscore) if you don‚Äôt need the value.
Now I get &amp;#x200B; &amp;#x200B; Cannot convert value of type '(\_, \_, \_) -&gt; ()' to expected argument type 'FIRAuthResultCallback?' (aka 'Optional&lt;(Optional&lt;FIRUser&gt;, Optional&lt;Error&gt;) -&gt; ()&gt;') &amp;#x200B; &amp;#x200B;
&gt; Objective-C in Swift Aka "everything is optional"
It seems to only return two objects from the callback and not 3. I‚Äôm currently off my Mac, but try something like `(user:FirUser?, err:Error?)`
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/WfBbBA8.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
It sounds interesting, it could be a real time saver. We'd need a lot more that just a website to determine if it's any good. &amp;#x200B; We'd have to compare against what's already out there. Personally, I like to use these kinds of things as a way to learn new things. &amp;#x200B; I'd like to see how it's coded.
Why does your webpage come up as not secure?
You can very easily implement this yourself.
You could do something like this: struct Precondition { var boolValue: Bool } infix operator =&gt; func =&gt;(lhs: Bool, rhs: Bool) -&gt; Precondition { return Precondition(boolValue: !lhs || rhs) } func precondition(_ value: Precondition) { precondition(value.boolValue) } func test(_ a: Bool, _ b: Bool) { precondition(a =&gt; b) print(‚Äúhi‚Äù) } test(true, true) 
Replace Error by err.
Just replace FIRUser?, with user.
SpriteKit is usuable with Objective-C and development of both is totally unrelated. It's not even written in swift, they just happen to be released on the same year. Apple didn't "get away" ripping off cocos2s-x: it happens to be licensed under MIT, which allows Apple to do exactly what they did.
But how would you handle something like precondition( a || (b=&gt;c) )?
Hi! You are new to Swift, or just need some sleep! It appears your getting confused between type name and variable names. In the parameters for your closure (user:FirUser?, err:Error?), left side (err) is the name, right side (Error) is the type. 
1. Your + button should have a tag value so you can check if sender.tag == to that buttons tag and then you can manipulate the UI
Hahahaha
I am both new to Swift and I needed some sleep, deadly combo
Apologies, and happy cake day
I am following [this](https://youtu.be/guFW9aj4EHM?t=16m33s) tutorial which is in an older version of swift, I come across obstacles such as this one due to changes in syntax etc which have been easy enough to workaround but this one is a bit different and I can't figure out how to get around it.
You‚Äôre doing `if Error != nil` but you should be doing `if err != nil` do the check on the variable not on the class type. 
On mobile but I would look up something along the lines of ‚Äúprogrammatically adding textfield to uiview‚Äù You‚Äôll have to set the textfields frame manually. Do note though, you‚Äôre not adding it to the storyboard. It will be a runtime addition to your app and you won‚Äôt see it in the storyboard. 
Before you ever use a Singleton, write some tests first taking a look at the effect of dependency injection vs Singletons are on writing tests.
Have you tried using a tableView? Instead of adding new labels and stuff directly to the view, you could add or remove a cell with all the fields and items you need. 
Doesn‚Äôt swift do intelligent copying? IE if everything is constant then it doesn‚Äôt copy. 
You would need to overload `||`: func ||(lhs: Bool, rhs: Precondition) -&gt; Precondition { return Precondition(boolValue: lhs || rhs.boolValue) } You would probably also want to similarly define `func ||(lhs: Precondition, rhs: Bool)` and then repeat the process for any other operators like `&amp;&amp;`.
python and javascript are object oriented languages, although if you aren't building anything particularly complex, you may not get much experience with oop fundamentals and practices. oop generally refers to the practice of encapsulation, separation, and hierarchy of code in order to maintain portability (ability to swap code between projects), and maintainability (ease of debugging/cleaning/modification). So, as such, there aren't a lot of places to learn oop as a standalone skill. It's more like a architecture-governing programming philosophy. However, you can read about the ideas behind it, the goals, and standard practices - then use that gained awareness to see how other's code follows it.
You can check lets build that app channel on youtube for free courses or check his website for paid course. For beginner he has a course where he builds Kindle app clone which is 20$. Highly recommended if you‚Äôre a beginner
Read the documentation?
If the type is implemented to do this then yes. Your custom structs don't do this by default. Internally, types like `Array` do copy-on-write by storing a property as a reference and only copying it when its mutated. [Does swift copy on write for all structs? ](https://stackoverflow.com/questions/43486408/does-swift-copy-on-write-for-all-structs)
Docs haha ü§£ 
I learned F# years ago. Swift feels like a kid of F#, Obj-c, and uncle C#. I fact you can even use pipe operator.
Youtube channels: Swift Guy Jared Davidson Sean Allen Kilo loco Lets build that app 
&gt; If you want to learn how to make games, you need SpriteKit too. &gt;And Swift with Spritekit is a little different that just swift... You have a Gameviewcontroller and Gameview which adds a little complexity to setting up things like admob ads and IAPs. &gt;If your goal is to make games, I would learn both of these at the same time. OP said nothing about making games bro
iOS standard library is enormous and you don‚Äôt need to know it all. There are some musts - like view controllers, views, table views, collection views which are essential for building apps and every iOS should know them. Rest is still important but used only in specific problems, e.g. when you want to access user‚Äôs calendar, show them a video, play sounds and so on. Google, tutorials and documentation are your friends :) Right now it will be hard to even come up with right question to ask Google, but after some time you‚Äôll know what you don‚Äôt know and it‚Äôll be easy to look for that knowledge.
Don't worry. Autocomplete will help a lot. In the end you only remember the first view words and Xcode will complete the rest. 
He may be interested in it. This isn't exactly off topic, and he may not know about Spritekit. And rather than school learning, applied knowledge is much more useful. There are so many little things, like how to add a original font. The info.list to create your own springboard name, the Apple specific rules on creating splash screens and icons and all the different mandatory sizes. How to correctly add Admob intersitial ads and how to set up a new account. There are hundreds of things that are not going to be taught that are very important, and you wont learn in school. So he may not be interested in making games, but I am pretty sure he is interested in uploading an app to the store! And that is really not going to be taught anywhere but through self-learning. Applied knowledge and experience almost always trumps school learning, and the best advice is to just do it and try to get anything on the store successfully. &amp;#x200B;
&gt; He may be interested in it. &gt;This isn‚Äôt exactly off topic, and he may not know about Spritekit. It is off topic. He may not know about MapKit, or CoreData either, but you decided to jump to SpriteKit for no reason &gt; And rather than school learning, applied knowledge is much more useful. I agree but am unsure why you‚Äôre bringing that up &gt; There are so many little things, like how to add a original font. The info.list to create your own springboard name, the Apple specific rules on creating splash screens and icons and all the different mandatory sizes. Dude why are you talking about this? ‚ÄúHow do you make the NavigationController have an icon instead of text?‚Äù ‚ÄúHow do you make a custom transition using a TransitioningDelegate?‚Äù See how arbitrary that is for me to ask right now? &gt; How to correctly add Admob intersitial ads and how to set up a new account. OP never said they were wanting to learn swift to make money &gt; There are hundreds of things that are not going to be taught that are very important, and you wont learn in school. Unrelated to OP‚Äôs post, but I don‚Äôt disagree. Just unsure why you‚Äôre bringing it up because Op didn‚Äôt say they were gonna go to school for iOS. &gt; So he may not be interested in making games, but I am pretty sure he is interested in uploading an app to the store! And that is really not going to be taught anywhere but through self-learning. You‚Äôre assuming again. You can learn without making games, amigo. I‚Äôve never once made a game with iOS and I‚Äôm a Sr Dev. &gt; Applied knowledge and experience almost always trumps school learning, and the best advice is to just do it and try to get anything on the store successfully. The best advice for OP is to try it without your appended comments about Spritekit. 
Thanks. Could the same be applied to other programming languages?
Hold on. There is a difference. I have no idea if the OP wants to make games, but if he does, he needs to learn SpriteKit with Swift Because if he just learns swift, then he will have to relearn a lot of stuff using the gameView controller. MapKit and CoreData are going to be used differently in Swift and Swift with SpriteKit (the gameScene) so there IS a difference. So if he is going to school for iOS, he/she should be aware that he will be unable to apply his knowledge when making games. Come on why so technical? You are a senior dev, I have published over 500 crappy apps and resold them LOL. But YES you can absolutely learn Swift without SpriteKit. 
You're mixing up Object-Oriented-Language with Object-Oriented Programming and Design. A language just needs objects to be object oriented. oop/ood refers to the usage of those objects. https://en.wikipedia.org/wiki/SOLID This is a good place to start for beginners.
**SOLID** In object-oriented computer programming, the term SOLID is a mnemonic acronym for five design principles intended to make software designs more understandable, flexible and maintainable. The principles are a subset of many principles promoted by Robert C. Martin. Though they apply to any object-oriented design, the SOLID principles can also form a core philosophy for methodologies such as agile development or adaptive software development. The theory of SOLID principles was introduced by Martin in his 2000 paper Design Principles and Design Patterns, although the SOLID acronym itself was introduced later by Michael Feathers. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
plus if you have the help panel open on the right, it will display the documentation for the current method you are in
You can also use the book ¬´ App Development with Swift ¬ª free on the iBooks Store. It‚Äôs a quick introduction to the language, and it quickly gets you building your first apps. For your final project on edx, you don‚Äôt have to come up with the new Reddit after all üòú 
&gt; Because if he just learns swift, then he will have to relearn a lot of stuff using the gameView controller. Your arguments are nonsensical. If they want to make a Reddit client then they will have to learn collectionViews... but that‚Äôs just life. &gt; MapKit and CoreData are going to be used differently in Swift and Swift with SpriteKit (the gameScene) so there IS a difference. ... no ... No there‚Äôs really not. How is CoreData different in a GameViewController than any other class? Same applies for MapView. It‚Äôs not different. Its just not. &gt; So if he is going to school for iOS, he/she should be aware that he will be unable to apply some of his knowledge when making games. THEY DIDNT SAY THAT THEY WERE GOING TO SCHOOL OR THAT THEY WANTED TO MAKE GAMES &gt; Come on why so technical? What are you responding to? Use quotes. &gt; You are a senior dev, I have published over 500 crappy apps and resold them LOL. this isnt a pissing contest. If it were, you would have just lost with that line &gt;500 Somehow I doubt it was 500 unless you were just reskinning something. Also, I‚Äôm not trying to be mean, but if you‚Äôre making statements like ‚ÄúMapKit is different in SomeClass‚Äú then you probably have a lot to learn and should focus your talents on developing something other than a ‚Äúcrappy app‚Äù. Have you ever thought about getting a job as a full time developer? As you said, the best way to learn is through practice. Making ‚Äúcrappy apps‚Äù by yourself can only get you so far in your programming career
I haven't looked into the screenshot functionality but is there a collection in the photos library for screenshots? If so maybe look for screenshots in there? I know there is one for iOS but haven't seen one in macOS. Else the file watcher one might be the best option.
Its not 500. I don't know how many it is actually, but more than 200. It is no amazing accomplishment. However, it is applied knowledge. I made the money myself They aren't all crappy. I shouldn't have insulted myself. You can always learn more. And the class isn't different. I know that. I just meant anything from UIKit takes extra steps to implement in SpriteKit. You cant use the 'normal' tutorials to say implement Admob or MapKit you need to add an extra step. So you have to understand. And I havent reskinned anything... other than my own apps. I have worked as programmer at a few places. I am sorry I said 'crappy apps' now. I usually make quick apps with minimal effort and maximum money, because spending too much time on a single app is a losing proposition especially now in this environment. If you are really curious, I also have some knowledge here. You can see the chess app link above. And I don't want a programming career other than for myself. I am officially done working for anyone. I have had quite a few high-paying jobs. But to me that doesn't mean anything. I would rather make less money and stay in my house and do what I want. I am THROUGH working for anyone else ever. 
There‚Äôs also the Intro to App Development with Swift book, and the Swift playgrounds app. Also, Udacity courses on Swift are free, just work around the nanodegree packages they sell. That said, I found Angela Yu‚Äôs app course on Udemy more useful, but it is paid.
Oh yes 'lets build that app' looks like an awesome source, thanks!
Does this help? [https://stackoverflow.com/questions/4516852/detect-when-a-user-takes-a-screenshot](https://stackoverflow.com/questions/4516852/detect-when-a-user-takes-a-screenshot)
Thanks for the simple, real-life explanation. I get why this is so important now, but I have to practice to use it for myself of course :) I hope I'm gonna get it along the way.
I live in far away, 5pm pacific time is 3am here.. this isn't live only right? I signed up anyways, waiting for the first lesson's notification, thanks!
&gt; Jared Davidson Thanks, subscribed to all of them. I don't know any swift right now but when I start to understand a little bit, it seems like these channels are gonna be really helpful.
Oh thanks guys if I get stuck or something (which will happen, happened a lot in CS50) it's good to know there is someone to help!
Know that he favors using programmatic layouts vs interface builder. It‚Äôs good to know both but interface builder is easier to pick up when first learning. 
I found this library and got it to work, so I'll do it with the file system watcher first, the only gotcha that cost me some time was that I had to disable sandboxing for now. [https://github.com/njdehoog/Witness](https://github.com/njdehoog/Witness)
Read HackingWith swift which is free and more hands on.
Such a good resource but it does have more advanced CS and math concepts. Even if you don‚Äôt understand it all it‚Äôs worth being exposed to it. You‚Äôll eventually get. 
I second this. Writing the projects and having each step explained (sometimes more than once) has been incredibly helpful for me. OP, you can't go wrong with this one.
Yes please :)
You can add CodeWithChris
Is that what I would need, tableView? I'll look into that :) Thank you! 
Right, that makes sense. I'll look into that, thanks!
Do it the lazy way a just send cmd+shift +3
Use a UITableView for this. It is more efficient and far easier to manage when you have a UITableView with UITextFields in the cells than a stack view. You‚Äôll need to subclass UITableViewCell and add your cell UI in that subclass. There are tons of tutorials on this. Look up UITableView custom cells.
I think that would work for what you need, instead of thinking how you could add elements to the view, you can have one (or more) cells with the elements you need for each case. The process is generally this: Input Data -&gt; Array of data -&gt; TableView -&gt; Cells Input data can be ‚Äúorganized‚Äù into a simple model/object you create, then you can append or remove objects into one big array, that array feed the tableView and then the tableView may pass the data to each cell. 
I would recommend starting with Swift Guy (lots of practical lessons, he has a hello world tutorial that will dive you directly into swift) and Sean Allen (concepts)... then moving forward to Jared Davidson, then Kilo loco and finally with Lets build that app* *There are (generally speaking) 2 ways of doing an app in xCode: 1. Storyboards + code 2. Only code. Storyboards will let you design visually the UI, while the code-only approach is similar to writting html and rendering directly to the browser. If you want to learn a code-only approach is better to move as fast as possible to Lets build that app channel since he build everything with code. Swift guy and Jared Davidson use storyboards for UI. There is not a unique answer or better way to do things here. I‚Äôm kind of a newbie in swift too (been coding for 5 months), so I‚Äôm not an expert voice. If you don‚Äôt understand something, feel free to ask me, I‚Äôll try to help you with the basic stuff I know so far. And finally, if you want to understand OOP, think of it as a bakery that is full with dessert molds (classes), if you want to eat an specific dessert, you will have to create it (instantiation). You can have more than 1 instance for each dessert and modify each in its properties (or variables) and make use of its methods (functions) 
I've taken the previous version of the Stanford class and he didn't go into inheritance or polymorphism. He didn't even use a class but rather a struct. It is nothing to worry about. You can go ahead and take the Stanford class on iTunes
Shameless plug for myself. üòÉ You're welcome to check out my YouTube channel too: YouTube.com/markmoeykens
You not giving much to go off of. Did you add constraints to it to lock it in position?
Bar button items are intended to be placed in toolbars or navigation bars. I don‚Äôt see either of them in your screenshot. If you‚Äôre stuck, a screenshot of your storyboard would help.
I‚Äôm not seeing a navigation bar. Is this in a navigation controller? 
Yes and no. I'm sure there are crappy courses on Udemy as there are crappy courses anywhere. One thing Angela teaches that I *do* like: she shows you common mistakes and what the compiler/log messages will be, so that when you hit that later, you'll know what to do. I got Angela's course for $9.99. It's currently $10.99 and it's 52 *hours* of lectures, plus you build quite a few apps during the course. [Linky link.](https://www.udemy.com/ios-12-app-development-bootcamp/)
There‚Äôs a lot of free stuff nowadays. Back when I started , I remember subscribing to lynda.com and watch and rewatch Simon Allardice‚Äôs courses, which even today are amazing (now on Pluralsight.com)
I like to use structs with static members for most things I used to use singletons for.
One of the best things to do at the start of learning any platform is to do a bunch of tutorials. BNR (Big Nerd Ranch) has been doing ToDo app tutorials since the start of iOS. Udemy has some Swift 4 tutorials (I think the Angela Yu one) that do shared ToDo app tutorials. &amp;#x200B; Ray W has a clone of that color coded one that pretty cool. &amp;#x200B; One tutorial had where you could put drawings inside of your ToDo list. &amp;#x200B; Point: I'd spend some time going thru these tutorials, you'll learn all kinds of things.
What you are trying to do does not sound very safe/legal from end-user point of view. Who would want to have an app that captures all your screenshots and sends them off somewhere? I'm pretty sure that's the exact reason why macOS/iOS do no allow you to do this easily. No way this would be possible in sandboxed iOS, but judging from the links above you can tinker with file system notifications on macOS to get what you want. The question you should ask yourself - why should you? If this app is for your personal use - why not use services that already to that (e.g. Dropbox automatically puts your screenshots in its folder and they get synced as such. After that you implement Dropbox interface on your backend to be able to retrieve them). &amp;#x200B; (That does make me wonder how Dropbox that that. Looks like the app can change system's default screenshot location - your could search for solution in that direction) &amp;#x200B; If this app is supposed to be used by someone else, think of security issues your end-users are opening themselves to.
It's overwhelming at first, but once you start figuring it out, it all makes perfect sense (eventually lol) &amp;#x200B; First thing you need to understand is the concept of delegates/data sources (read up on that). Sounds like you never worked with UI, which is why things are so confusing for you. &amp;#x200B; Every UI element on the screen needs information in your code to know what it's supposed to do. When you add UICollection to your controller, it will need to know: 1. How many sections to display (datasource) 2. How many items to display in each section (datasource) 3. What every single cell is supposed to display (datasource) 4. What happens when user taps on the cell (delegate) 5. etc etc etc Your view controller needs to be able to provide all of that information to the view. You announce to your UI that the particular controller can do that by adding protocols to it's definition. &amp;#x200B; Once you add `:UICollectionViewDelegate, UICollectionViewDataSource` to your controller, compiler will prompt you to add required methods - things your CollectionView can't render itself without. Just follow the prompts. &amp;#x200B; After that, once you feel you need some more rendering information/feedback from your UI element, you Google it :) I feel that reading Apple documentation can be enlightening , but also overwhelming to new users. Their examples will have lots of things you don't care about, but they will confuse you even more. &amp;#x200B; I recommend starting with bare minimum UI, then build it step by step based you what you actually need, not what's in someone else's tutorials.
Please don‚Äôt try to imply anything here. There are a lot of high profile apps doing exactly that because users want that feature. There‚Äôs cloudapp, Dropbox used to do it, Skitch etc. I just want to build CloudApp for my own usage / server.
That is dependent on who is implementing the protocol. Since you are saying object I assume your self is a class. The assignment will not create a new object but rather just pass a reference to the original object. If self was a struct then it would instead pass a copy in the assignment.
No - classes are passed and stored by reference. Structs and enums are passed by value, so a new instance, which is a copy of the old one, would be created if it was an enum or struct.
Going to have to show some code here, what object are you setting the property on? Generally, if `self` is a class you'll get a reference. If it's anything else you'll get a copy.
Delegation is a way to have another class manage responses from something that conforms to a specific protocol. Presumably you‚Äôre looking at an example similar to the `UITableViewDelegate` protocol. A class can declare that they confirm to that protocol. This means that they have to implement the details of that protocol. In this case, it says that this class can act as a table view‚Äôs delegate. Now, your table view is looking for something that can act as that delegate. The table view will call this delegate for certain things, such as when a user taps on a row. The delegate is expected to conform to a certain protocol, hereby defining the actions that delegate needs to support. So when you set `.delegate = self`, you are saying that self (the current class) conforms to the protocol and can perform the required functionality that delegate is expecting. In the above example, you‚Äôd be saying that your class can act as a table view delegate and respond to certain actions accordingly. It references the existing class, not creating a new one. That said, if you had a different class that conformed to that protocol, such as `SampleDelegateClass`, you could set a new instance of it as the delegate. `.delegate = SampleDelegateClass()` 
You are asking questions about a tiny library on stack overflow and reddit? You should be creating a github issue for help on that library. Only people who work on or regularly use that library will know how to answer your question. 
There are other objects besides `class` - both `struct` and `enum` might be considered an "object".
Never heard of it but I'll install it and check it out, thank you! It looks like it may be made for writing Rich Text, but maybe I can use it for view-only with an HTML string. Thanks again!
Enum is a value type though 
Enums in swift are treated as value types not objects 
Stucts are also value types and they are objects.
Value types and objects are two completely different topics. [Object (computer science)](https://en.wikipedia.org/wiki/Object_(computer_science\)) &gt; In computer science, an object can be a variable, a data structure, a function, or a method, and as such, is a value in memory referenced by an identifier. &gt; &gt; In the class-based object-oriented programming paradigm, object refers to a particular instance of a class, where the object can be a combination of variables, functions, and data structures. Now the Swift book specifies only structures and classes as being objects but since an enumeration can have associated data, methods, and such I believe it also qualifies. The Swift Programming Language: [Structures and Classes](https://docs.swift.org/swift-book/LanguageGuide/ClassesAndStructures.html) &gt; An instance of a class is traditionally known as an object. However, Swift structures and classes are much closer in functionality than in other languages, and much of this chapter describes functionality that applies to instances of either a class or a structure type. Because of this, the more general term instance is used. 
You can display HTML content in a UITextView natively. Just create an attributed string with the HTML document type. Not sure how well it will work with the Wordpress content, but it‚Äôs worth a try. https://stackoverflow.com/questions/47922200/displaying-html-content-in-uitextview
I already did but not getting an answer so I thought maybe someone has faced some similar issue. Its basically not bcz of library but a shell script but I am new to Swift, only started learning 15 days ago so don't know much about it. That's why I decided to ask if I find some answer. Also, there's only one person working on it who has 1000+ libraries so its difficult for him as he might be getting 1000 notifications per day.
Search Google for: "Command /bin/sh emitted errors but did not return a nonzero exit code to indicate failure"
No. It makes a copy of the reference to the object and does not add it to the reference count (nor will it subtract when it gets released). The reference is a number that points to a particular position in memory where the object resides. So that number will be copied. Also, if you change the original reference to a different object with a different position in memory the weak copy will keep pointing to the previous object.
Isn't that capability macOs only ?
OBJ C 4 Ever!!!!!!! ü§°
If it's a class it won't be copied. `self` is a pointer to an instance of the class it's written in. If it's a struct, you'll get a copy. If your delegate's protocol conforms to `NSObjectProtocol`, you can't use it in a struct because that is a class. And when writing protocols, it's always a good idea to conform your protocols to this because it gives you the ability to have weak references to them, preventing a retain cycle.
Ah thanks dear people :)) &lt;3
/r/madlads
What makes the api accessible only through those technologies?
Well I've never worked with API and they're API documentation only shows how to access it through those languages, they have pre-built files that make some essential calls. Their documentation also doesn't show how to make HTTPS request
&gt;Well I've never worked with API and they're API documentation only shows how to access it through those languages, they have pre-built files that make some essential calls. Their documentation also doesn't show how to make HTTPS request &amp;#x200B;
Thx for info
I think it would be more helpful to give an in-depth review. This gives me no trust. Especially if people are just recommending the same course.
Check out alamofire's documentation. It'll cover how to make your requests. An API is really just a protocol for a frontend/client to communicate with the backend/server. If you look at the code provided in the other languages you should see 3 main things. They a verbs, routes, and parameters. GET/PUT/POST/DELETE are your verbs things like "/api/user/{id}" are the routes and things like "first_name", "last_name" are parameters. You should be able to reference the prebuilt files to figure out what goes into a specific request then you can look at Alamofire to translate that from the example file into swift code
The majority of your posting history is recommendations of various programming courses ü§îü§îü§îü§îü§îü§îü§îü§îü§î. Please don‚Äôt shill on this subreddit.
Something that _might_ be worth the effort depending on the code base is adding a unit type (there is one in Foundation now I think, but this could easily be added in Swift), e.g. struct Unit&lt;U&gt;: Comparable, ExpressibleByFloatLiteral { typealias FloatLiteralType = Float var value: Float init(floatLiteral value: Float) { self.value = value } static func &lt;(lhs: Unit&lt;U&gt;, rhs: Unit&lt;U&gt;) -&gt; Bool { return lhs.value &lt; rhs.value } static func ==(lhs: Unit&lt;U&gt;, rhs: Unit&lt;U&gt;) -&gt; Bool { return lhs.value == rhs.value } } The main benefit of this being that if you create a `kCal` and `Gram` unit value you can't accidentally compare them, or use them in the wrong place in the calculation, e.g. let weight: Unit&lt;Gram&gt; = 1.0 let energy: Unit&lt;kCal&gt; = 1.0 print(weight == energy) //compiler error thanks to the phantom type where this would compile fine but could lead to bugs typealias GramAlias = Float typealias kCalAlias = Float let otherWeight: GramAlias = 1.0 let otherEnergy: kCalAlias = 1.0 print(otherWeight == otherEnergy)
Thank you so much! The detail and everything are gonna help me get started 
Look at their documentation for curl. That‚Äôll be easiest to translate into Swift since it‚Äôs closest to ‚Äúraw‚Äù
This is more Udemy spam, /u/lyinsteve.
Thanks!
Given the API part has been mentioned a few times now, I‚Äôll take a stab at the other part of the question. RubyMotion is an alternative to Swift and Objective-C, i.e. not something that you would use in/with Swift. I would recommend you figure out how to call the API from Swift and stick to that.
You say API but say nothing about it. Is it a web API? A binary API? Something else? Show some code?
self promotion, or spam
classic self promotion, spam
Here's documentation on [AVAudioSession](https://developer.apple.com/documentation/avfoundation/avaudiosession). It should have what you're looking for.
Thanks but doesn't help. I know what the error is &amp; the file that is missing but don't know how the inner workings of Pod or that library so I've gotta learn that now as I don't think I'll get any answers or I will try installing with Carthage
This is a subject I‚Äôm interested in as well. 
Long ago, the app store became a race to the bottom. It became a casino with app dumping, cloning, etc... &amp;#x200B; Part of the problem is that people have become used to apps being free. There's no correlation between price and quality. If you have a quality app and charge $1.99 then someone else with a knock off app can charge the same thing. &amp;#x200B; There's only a few that have the name that justifies pricing for quality. &amp;#x200B; The other problem is that people play games with prices. They'll shift the price around trying to get those "free app" apps to notice them for more attention. &amp;#x200B; Look at some of the apps asking for any amount of money. Some of them are really nothing. They're like a common tutorial they think people are going to pay for.
i'm writing my first app, and i'm thinking of releasing free with ads, and with a ~$1.50 IAP to disable ads. Anyone got any input to this strategy?
My cynical view on things... If you are twitter-famous, blog-famous or podcast-famous, or know someone who is, you can charge for the app. 
Kinda surprised to see Carthage use at such a low percentage. I prefer it over Cocoapods for pure swift projects.
*Their documentation, btw. Unless they are documentation.
Hey! I‚Äôve tried doing a bit more research, but I can‚Äôt exactly find the delegate method you mentioned. I looked at WordPress‚Äôs site &amp; the GitHub documentation, but both were pretty basic. Could you please point me towards that? Thanks! 
Good luck trying to get anyone to pay even .99 for you app. The best strategy for almost any indie developer is to offer the app for free with full page interstitial ads. No one is going to pay anything. Everyone expects it to be free. It is not a race to the bottom anymore. It is bottom. Personally, I wouldn't spend more than 1 week making an original app. And then I 'reskin' it a few times to get maximum value. And then I sell the app code. The strategy has worked. But each year you make less and less money. So its not really a decision anymore. Unless you are a large company -- or have an absolutely amazing app (which is doubtful) and a huge budget to market it -- the only CHOICE is to give it away fro free and try to make some ad revenue on it.
I've been on and off coding this tool for a while now; it's not perfect, but I think it's smart enough to finally share it with anyone that wants to give it a try!
your switching on the sentence... you need to switch on the character.
Your Switch statement is using sentence - should that not be character?
What does that say about the iOS ecosystem in general? As a beginner, is it even still worth entering or am I best spending my time and learning efforts elsewhere? My goals is not to be an indie dev but to join a team eventually. 
 `sentence.forEach { switch $0 { //handle your cases here } }` Switch the character not the whole sentence :))
I think its about ‚ÄûI can get infinite amount of free apps‚Äú but ‚Äûonly a limited amount of low-cost apps‚Äú. The one has a limit where the other doesn‚Äòt. With one you don‚Äòt have to make a decision and with the other you have to, however small it may be.
They are both package managers but cocoapods seems like the defacto standard.
One kind of sucks and the other really sucks.
I believe cocoapods came first. But why did carthage come into play? Was there something lacking in cocoapods?
Having the same question 
Cocoapods is only available on mac. Carthage is cross-platform.
That's how I feel about them too. I really wish there was a better option
One option could be conan. Though you will have to write your own build script
Both are packet managers. The difference between them is while CocoaPods modifies your project file and creates a workspace to include the entire code, Carthage will only create the frameworks and you will have to include them yourself. &amp;#x200B; Both of them have their advantages. With CocoaPods you can add custom Build Steps, or other configurations into your project. On the other hand Carthage gives you the power to control, how they are included. &amp;#x200B; I loved CocoaPods and didn't get why people were using Carthage. This was until I had to include libs into a project which was more than customized. It was a nightmare getting CocoaPods to work. Carthage on the other hand, I just had to include the frameworks and it worked (don't forget about the copy step). &amp;#x200B;
The problem is that there is no standard for free vs paid. If you go to a store and see two of the same things for $1 and $10, you expect the $10 version to be better. But you don't have this standard with apps. The price being higher doesn't mean anything. &amp;#x200B; I've seen discussions about apps where they ask "is it worth downloading?". They're asking if something is worth FREE! &amp;#x200B; And they have a point. &amp;#x200B; Years ago I downloaded two apps to see what video editors could do. One was requiring location services to collect data about you and they other did nothing until you paid $19.99. You couldn't add music, you couldn't paste different sections, nothing. I deleted both of them. &amp;#x200B; This is what the app store has become, it's a bunch of spam. Even apps that should be seen as OK or "not bad for a start" are viewed as spam.
I've had some frameworks work on cocoapods and not on Carthage, which is a bummer, Carthage makes everything much cleaner and faster
I‚Äôve considered switching a few times, but I think I‚Äôll wait to switch stuff until the inevitable integration of the Swift package manager into Xcode. Wouldn‚Äôt be surprised if others are thinking similarly. 
I'm kind of on board with Carthage for the reasons you mentioned, except I skip Carthage altogether. If I build the Framework in Xcode and include it into my project, I'm doing pretty much what Carthage is doing. I suppose it could get complicated if the Cocoa world turns out like the Ruby world where everything depends on everything else, but for the most part, frameworks are self-contained. 
I think Carthage sucks, you cant use it for IB elements in interface
Carthage can handle binary dependencies, where I believe Cocoapods can only do open source dependencies.
Currently following the "Intro to App Development with Swift" it looks much simpler and shorter than the other book. After I finish this I'm planning to advance to the other book. I really like it! &amp;#x200B; With 3 days of experince I can say thay Xcode sucks, it crashed a lot on me..
Interesting, thank you for your insights! I‚Äôve thought about going indie but it‚Äôs a scary outlook you‚Äôre painting. You‚Äôd have to find a special niche to make a living and I‚Äôm not sure I could position myself in there. What types of apps do you develop that are free for you to make and you can reskin?
Your code doesn't compile. First of all no instance is created here: instanceOfClassB = B You need: instanceOfClassB = B() Secondly, `B` has no method `delegate` even though `A` does. I suggest you put your code into a fresh playground or project and make sure it compiles then post the working code.
If this is the default: --omit-objc-compatibility Then why does your example convert to: @objc class MyClass: NSObject { @objc var name: String @objc var surname: String @objc func printMyName() { NSLog("%@ %@", self.name, self.surname) } } Shouldn't it be: class MyClass { var name: String var surname: String func printMyName() { NSLog("%@ %@", self.name, self.surname) } } 
Hey, yeah their documentation is pretty weak. Using their `Aztec.TextView` you have to use the delegate `aztecTextView.textAttachmentDelegate`. Then the delegate method that you need to be paying attention to is `extension TextView: TextViewAttachmentDelegate {` `func textView(_ textView: Aztec.TextView, attachment: NSTextAttachment, imageAt url: URL, onSuccess success: @escaping (UIImage) -&gt; Void, onFailure failure: @escaping () -&gt; Void) { }` `}` Cheers!
As someone coming from kotlin, I feel the same way. Gradle is so fucking good whereas cocopods feels like shit.
You used to not be able to use @IBDesignable for frameworks pulled in via Carthage. Not sure if it's still true - I've mostly moved away from using Storyboards and do everything new in code.
 https://itunes.apple.com/us/app/chess-puzzles-mate-in-one/id1368582302?mt=8 I am actually 'rebuilding' my account after a long pause. There are 4 apps right now. I have a chess app -- mate in one. (I will 'reskin' with mate in two and mate in three) I have a ken ken - mathdoku app (3 X 3 grid size) I will reskin with 4 x 4 5 x 5 6 x 6) I have a simple little quiz game (dog breeds, cat breeds, and I have all the flag and birds coming out next) Next I am going to display a map of the united states and you have to identify all the states. (And I will have europe and africa etc next) So I plan on building about maybe 60 apps by Xmas. They are quick to make and they are COMPLETED and on the store. I am not talking about what I am going to do, or my 'dream app'. They are 100% finished. And completing something 100% is tricky no matter what it is. But look this is a way to make maybe $50 - $100 a day. And you can work from home, and live life as you choose. They are all written in Swift 4.2x the newest language. And have Admob Intersitital pop ups for revenue. (I may add an IAP to the chess. Only because the chess puzzles sometimes actually sell) OK best of luck.
Awesome! Thank you so much for all of your help! This is looking more &amp; more like the right solution (&amp; saving lots of headaches! haha) Is there a method for retrieving the image? Wondering if I can cache the image in the method you mentioned &amp; then ideally look to see if it‚Äôs cached next time I load the image. Also wondering if I could specify the image frame in that method too. Thanks again for all of your help! 
Of course, just paying forward :). Yeah I'm using AlamofireImage for image retrieval and caching. &gt;func textView(\_ textView: Aztec.TextView, attachment: NSTextAttachment, imageAt url: URL, onSuccess success: @escaping (UIImage) -&gt; Void, onFailure failure: @escaping () -&gt; Void) { That is the method that retrieves the image. I'm using AlamofireImage for image retrieval and caching. All you have to do is take the `imageAt url` and use it to get an image from whatever you are using to get images. Then in your completion block call `success(retrievedImage)` or `failure()` if it errors out. &amp;#x200B; As far as size goes I am setting the size of the UIImage itself, I'm not sure how else you would do it.
CocoaPods and Carthage are polar opposites in how they choose to deal with the XCode project which prevents any ideal solution. CocoaPods basically takes over your project and in return it does everything for you which makes it easy as long as you stay within its model. Carthage takes the opposite approach where it doesnt do any project configuration, letting/making you do it yourself. It makes sense that Carthage would come about given the restrictive and heavy handed nature of CocoaPods.
The "by default" in the flag's reference refers to the default behavior of subclassing NSObject (and adding all @objc and other stuff), which this flag turns off. I'll clarify the CLI arguments in the documentation, some of them may be a bit old!
Cocoapods handles binary dependencies just fine. Google distributes almost all of their iOS stuff via CP as binary libraries.
I REALLY don't like `typealias`es who do nothing other than rename something like `Double` to `Gram`. There's literally nothing gained from that layer of indirection. At the BARE MINIMUM you should make a `struct Gram` that conforms to `ExpressibleBy{Integer,Float}Literal` and add necessary utility methods to it. If you can't think of a method that would ease in the usage of `Gram` then it should just be a `Double`. 
I stand corrected....
You're drastically underestimating the difficulty of the job that they do if you think either of them suck. Carthage and Cocoapods are magical for shielding iOS developer from ever having to do toolchain engineer work. Source: am a toolchain engineer.
I'd definitely reverse that, the best default is often the simplest option which is to leave off all of the Objective-C stuff.