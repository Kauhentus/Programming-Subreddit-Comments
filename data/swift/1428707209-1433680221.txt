Wow this is awesome, thanks.
Right but how do you limit it to one row
You should try to put your initialization code in loadView(). Don't forget to call super.loadView(). override func loadView() { super.loadView() self.title = "hi" self.navigationItem.title = "hi" self.navigationController?.navigationItem.title = "hi" self.navigationItem.leftBarButtonItem = leftButton self.navigationItem.rightBarButtonItem = rightButton } 
I had ios 8.2 on my iphone and it was working perfectly and when I update the phone to ios 8.3 it started to freeze every time I exited the app and returned to it. Can you give me a donload link to it? Thanks!
Try changing the extended edges property. In the storyboard, this is in the view controller's attribute inspector. Uncheck "under top bars" Or in code, before pushing the custom view controller you would do: customViewController.edgesForExtendedLayout = .None pushViewController(customViewController, animated: true) Or in the custom viewcontroller class, you can set the property in viewDidLoad class CustomViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() edgesForExtendedLayout = .None } } 
You can't call a method like this for the initial value of a property. You'll need to move arr.count into a method or create a getter for the property. arc4random does not take any arguments so passing it a number or a string will not work. You want to use arc4random_uniform(cardsLeft)
Design is always the hard part. You might start with a UITableViewController that opens up a specific view controller for each type of media selected. 
number of rows = 1; number of sections = datasource.count;
The game looks good, but controls are hard to learn. I believe that its dangerous to rollout the game now, as it could happen that people don't get how to play and will delete it :( - Add a high price to it until you fix it, try to create some learning steps and make the difficulty increase gradually. 
What I try to do is create an app like "barstool sports". I do not have code snippet yet because I want find out what approach should I use. What would you suggest ? 
That's only within compiled frameworks though right? So for instance, if you pulled in the source of a library from github without compiling it into a separate library, then you could get conflicts? 
If you drag the files into your project in the file navigator, xcode will add them to be compiled. Or you can choose the project in file navigator, choose your target, go to "build phases", and individually add the files to "compile sources"
Right, so if they're compiled as part of my project ( just the source files added ), then they go under the project namespace. If I add a framework or an external project, then it counts as separately compiled and thus gets it's own namespace. That was my understanding and the target of my previous question - is that correct? 
Yes, if you use source directly and not frameworks, then you can get namespace conflicts.
Hi, I was going to have classes declare their own enumeration with the enum name of 'cardType'. I just wanted to whatever class that uses the protocol have the same enumeration name. For example: class Test: Card { enum cardType { case A case B } } class Test2: Card { enum cardType { case Z case Y } }
How does this "App of the Month" work? 
Ah - awesome! I've just started learning swift (couple of weeks in).
Ah I see. I think the best you'll be able to do is an associated type; I don't think there's a way to specifically restrict it to being an enum. I think that should be fine though.
Just program it to print the formatted data to the console at first with println(). After that you can easily add copy/paste support (assuming that's possible).
Awesome thanks man! Could you explain the code more? I'm learning swift and I think I'm getting the hang of the core concepts of the language like variables, and loops and stuff. though making something like this I wouldn't know where to start...
On mobile, but commenting to save for later. Very excited for this!
I think that's right, I had a suspicion it had to do with the image (because that's the only force unwrapped nil) but I didn't catch the capital Png (and wasn't aware that the sim was case-insensitive, good to know!). In my experience I always look for a "found nil while unwrapping" when I get a crash like that but the fact that it was working in simulator had my flummoxed. This is why I always come back and read to see if someone smarter than me solved the problem!
This fixed my problem: https://groups.google.com/forum/#!topic/parse-developers/3xoDlLC7dxM
My swift linter actually crashes like every 10 minutes. If anyone knows a fix I'd love to hear it too. 
I've also had problems following their documentation regarding Facebook implementation. It could be outdated so we might just have to wait until they update it
Deleting derived data -&gt; ModuleCache, AppFolder helps ? 
jesus H christ. you have no idea how much this makes me rage. I feel better that its not just me, i was about to toss my mac out the door and get a new one.
On a side note, is there any way to enable autocompletion of Swift enums? For example, if the argument of a method is UITableViewCellStyle I could just type . and have it show me the list of options?
Hi everyone, I'm the author of this app. In this repo you'll find the source code of Gulps, a simple app to track the daily water consumption, currently available in the AppStore here: https://itunes.apple.com/us/app/gulps/id979057304?ls=1&amp;mt=8 The source might be helpful to everyone that wants to build a WatchKit app (and a today extension) and share some data with the main app. 
Are you asking for help regarding the formatting portion or the copying to pasteboard portion?
What's the context here? What behavior do you want? Just saying "it works" or "it doesn't work" doesn't give me a sense of what you're trying to do, which makes it hard to help out.
Is it strange that Java isn't there?
The icon looks like both-sided Mj√∂lnir (Thor's hammer)
`UIApplication` has a property called `idleTimerDisabled` you can use for this.
Greatly appreciated mate!
I was running it under 'import MediaPlayer' and everything else worked. I imported AVFoundation and the error went away until I tried to test it then it popped up again
thank you so much! It all makes sense now
1) Better would be in a ViewController class of its own, and have that object owned by the TableViewController class. It's doing controlish and datasource-ish things, so it deserves to be its own class. 2) **parsing the Json data** Consider not parsing the JSON data more than NSJSONSerialization already does for you. You already get back nested dictionaries and arrays. Why copy the data again? **create a subclass of the UICollectionview** data access is a **model** activity. It's not a view's job (funny, you don't look viewish) so you can write a model class that owns the parsed JSON structures and provides a convenient API, an instance of which is owned by the ViewController that owns the UICollectionview I'm assuming that your tableView scrolls vertically, and your collectionView scrolls horizontally, otherwise, how's the system expected to know what to do when the user pans with their finger?
It's fairly new, but it's made to work exactly like the Android version -- so you might be able to follow a tutorial for MPAndroidChart!
Just so you know exactly what's failing, try doing it with avoiding the implicit unwrapping: if let urlString = self.urlPhoto { if let url = NSURL(string: urlString) { let data = NSData(contentsOfURL: url) if let data = data { if let image = UIImage(data: data) { mainImage.image = image } else { println("Something went wrong coverting NSData --&gt; UIImage") } } else { println("Something went wrong loading the data") } } else { println("Something went wrong converting String --&gt; NSURL") } } else { println("Something went wrong getting the URL string") } That shouldn't cause an exception, and should tell you exactly what's unexpectedly `nil`. (By the way, I wouldn't generally recommend you have large nested error checking like in the above, but it helps for debugging!)
So I implemented that into my code and it said "Something went wrong getting the URL string". I don't understand though whats going on because I assign it a value above. I appreciate the help but maybe you could look at my whole code? import UIKit class viewEventPage: UIViewController { @IBOutlet weak var mainImage: UIImageView! var currentEventVar : String? // Assigned a value in prepareForSegue() in different swift file var currentEventId : Int? // Assigned a value in prepareForSegue() in different swift file // Will be assigned value in accessDatabase function var urlPhoto : String? var id_ : Int? func accessDatabase (var firstName : String) { let myUrl = NSURL(string: "http://localhost:8888/NatalieLaddPhotoApp/eventsPhotosJson.php"); let request = NSMutableURLRequest(URL:myUrl!); request.HTTPMethod = "POST"; let postString = "id=\(self.currentEventId!)"; request.HTTPBody = postString.dataUsingEncoding(NSUTF8StringEncoding); let task = NSURLSession.sharedSession().dataTaskWithRequest(request) { data, response, error in if error != nil { println("error=\(error)") return } var err: NSError? var myJSON = NSJSONSerialization.JSONObjectWithData(data, options: .MutableLeaves, error:&amp;err) as? NSArray if let parseJSON = myJSON { var eventName = parseJSON[0] as? String self.urlPhoto = eventName! println(self.urlPhoto) } } task.resume() } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view. self.title = currentEventVar! accessDatabase ("Jermel") if let urlString = self.urlPhoto { if let url = NSURL(string: urlString) { let data = NSData(contentsOfURL: url) if let data = data { if let image = UIImage(data: data) { mainImage.image = image } else { println("Something went wrong coverting NSData --&gt; UIImage") } } else { println("Something went wrong loading the data") } } else { println("Something went wrong converting String --&gt; NSURL") } } else { println("Something went wrong getting the URL string") } } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } /* // MARK: - Navigation // In a storyboard-based application, you will often want to do a little preparation before navigation override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { // Get the new view controller using segue.destinationViewController. // Pass the selected object to the new view controller. } */ } 
what about adding a label programatically into a tableview cell's view? 
[Apple's documentation](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html) will tell you everything you need to use Obj-C in Swift.
You'd certainly be able to learn a lot (the labs are far more valuable than the sessions generally; you can see the sessions online, but nothing replaces getting to actually ask the Swift and Cocoa team engineers questions directly). Whether it's worth it‚Ä¶ that mostly depends on what your budget is like. I don't think anyone can make that call for you.
In your `accessDatabase` function, the `dataTaskWithRequest` is asynchronous meaning that the code inside the body doesn't run right away, and it'll only run when the request is finished. Since the `dataTaskWithRequest` takes a short amount of time to finish, by the time your code hits the `if let urlString = self.urlPhoto {...` part, the request still isn't done so there still isn't any value in `self.urlPhoto`. To get it to work properly, you can move that whole block inside `dataTaskWithRequest`, right under where you have `println(self.urlPhoto)` If you look at your debug statements, you'll see that "Something went wrong getting the URL string" appears *BEFORE* the photo url, which shows you the order of execution in your code. 
Thanks for the reply. My company is paying for the trip but I wanted to make sure I walk away with something before I blow all my Professional Development money for the year.
The argument list has probably changed. Try re-typing and see what auto-complete has to say.
I've personally never seen a scrolling background implemented this way, I've always used two identical background sprites. Some Swift/pseudo code to demonstrate: func moveBackground() { background1.position = CGPoint(background1.position.x, background1.position.y-5) // moves background downward by 5 pixels background2.position = CGPoint(background2.position.x, background2.position.y-5) if (background1 falls below/above the screen) { //move background1 directly above background2 (if scrolling downward) } //same 'if' statement for background2 } This can obviously be done via SKActions, like you're attempting, with the same logic. Good luck
I'm not familiar with this code, do you think you could just explain what each line is doing. Right now it is working to set the array, but nothing is being saved (ie I quit the app the array is not saved)
This Hacking With Swift project takes your through programmatic constraints. http://www.hackingwithswift.com/read/6/overview The one immediately afterwards takes you through JSON, basically using the JSON data to plug in the data for table cells. Maybe combining these two will get what you need?
If you have the budget I would say its definitely worthwhile. I've been to a few other iOS dev conferences (in the UK) and found them to not have much useful content, but WWDC is pretty much non stop useful And leaving out the ability to talk to apple engineers, its a week of learning new stuff and going over best practices, in my experience that just doesn't happen in a full time dev job unless you get away from the office 
Now that's giving me the error "NSArray is not a subtype of NSMutableArray" maybe I should explain what I'm doing. I have a method that will add a lot of words to an array. Throughout the app the array deletes words from this big array, and I need the app the save this and remember which words are still in the array. What I initially did was this if(NSUserDefaults.standardUserDefaults().objectForKey("WORDS") != nil) { words = ((NSUserDefaults.standardUserDefaults().objectForKey("WORDS"))) as NSMutableArray if(words.count == 0) { reset() } } else { reset() } and in the function that is called at the end of the game NSUserDefaults.standardUserDefaults().setValue(words, forKey: "WORDS") NSUserDefaults.standardUserDefaults().synchronize() This seemed to work, but when I try to call the array back from NSUserDefaults it isn't mutable so I removing objects from it crashes the app.
you can't get mutable objects out of user defaults, when you passing in an NSMutable* class you will get back its immutable equivalent (I think user defaults copies the object which returns an immutable version) Create a mutable copy after retrieving the object 
 func loadData() { var viewsDictionary: NSMutableDictionary = [:] let count: Int? = flavors!["tags"].array?.count if let ct = count { for index in 0...ct-1 { if let fTag = self.flavors!["tags"][index]["name"].string { println(fTag) var label = UILabel() label.text = fTag label.setTranslatesAutoresizingMaskIntoConstraints(false) label.frame = CGRectMake(50, 50, 0, 0) label.sizeToFit() var x = "label" var y = String(index) var labelName = x + y viewsDictionary.setValue(label, forKey: labelName) self.contentView.addSubview(label) } } } for label in viewsDictionary { contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("H:|[\(label)]|", options: .allZeros, metrics: nil, views: viewsDictionary)) } } this code gives me a sigbrt NSException
SIGABRT should come with a (marginally useful) set of error messages in the console window. At the very least it tells you SOMETHING, even if it's arcane and hard to decipher. While I'm no expert in Swift I'm something of an amateur in Swift's error messages because of how many I've seen, if you want to paste it.
It's because the keys in your dictionary have a type of `String` and not `NSNumber`. You can either compare the label using string comparison directly, `if label == "0" {` or you can get an `Int` value from `String` and check the number instead `if label.toInt() == 0 {`.
Ouch, and I assume that println statement above it is printing out the label? I'll have to chew on this a bit sorry, is the code up on github that I could run myself? I'm just surprised you don't have an error code, since I thought SIGABRT always spit out a descriptive error.
my new issue is why does it say NSDictionary does not have a member named keys? also, i got it to work with this code for (labelKey, label) in viewsDictionary { println(label) var spacing = 20 var labelSize = label.width var currentLabelNumber = 0 var nextLabelNumber = 1 var currentLabel: AnyObject? = viewsDictionary[currentLabelNumber] var nextLabel: AnyObject? = viewsDictionary[nextLabelNumber] if labelKey as String == "0" { contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("H:|-\(spacing)-[\(label)]", options: .allZeros, metrics: nil, views: viewsDictionary)) } else { contentView.addConstraints(NSLayoutConstraint.constraintsWithVisualFormat("H:[\(currentLabel)]-\(spacing)-[\(nextLabel)]", options: .allZeros, metrics: nil, views: viewsDictionary)) currentLabelNumber++ nextLabelNumber++ } } but the formatting contraints are now the problem. Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Unable to parse constraint format: Expected a view. View names must start with a letter or an underscore, then contain letters, numbers, and underscores. H:|-20-[&lt;UILabel: 0x7fe7ab4f6b20; frame = (50 50; 23.5 20.5); text = 'est'; userInteractionEnabled = NO; layer = &lt;_UILabelLayer: 0x7fe7adc0d3e0&gt;&gt;] 
If you're dealing with images loaded from the web, you really should check out SDWebImage. It's incredible, highly tested, used by companies like Facebook, and super easy to use. You should install using [CocoaPods](https://cocoapods.org/), if you're not familiar with them yet I highly recommend you learn :)
To use .toInt(), you'd need to cast the pf object as a string first. You could also directly cast the pf object to a number.
doubtful knowing how apple works with these things... however the OS upgrade is free, is there a reason you can't upgrade? Some software that doesn't work with yosemite?
Highly unlikely that official support will come back. After all, presumably, the announcement of 10.11 is less than 2 months away. That said, check out XcodePostFacto: https://github.com/landonf/XcodePostFacto
I think I added a "!" at the end of objects to unwrap it. Try that. 
from the screenshots, only the font looks a bit strange. but if Apple already approved your app, it means they didn't see anything that bad with your design
OT: In Swift 1.2 you can avoid pyramid doom ;) if let urlString = self.urlPhoto, let url = NSURL(string: urlString), let data = NSData(contentsOfURL: url) { // Etc.. } 
Don't forget to call synchronize() on NSUserDefaults
Stupid me just now realized that Parses objectId field is a string and I didn't need to convert it. I will keep that in mind for future issues that i'm sure I will run into.
great to see it working and THello to you too, Sir!
thank you too!
thank you so much for responding, I wanted to implement this library, but did not have the time to. I'm going to try to do it later tonight / tomorrow. would you stilll be able to help me go through the process? :D
Nice
So assuming that you want to share that `txt` file so that you can read it by plugging the device to your computer and reading it with iTunes... this is what yo uneed to do: 1. enable iTunes sharing in your app 2. write your text file to your app's Documents folder (this is __very__ important) 3. plug device to iTunes and read the txt file from iTunes You cannot share your app's info.plist in iTunes. That is stored in the `Library` folder of your app if I remember correctly. You need to write the `txt` file to the Documents folder.
Yep, it's frustratingly slow for me as well. I wonder if it's got anything to do with hardware? I'm running a 2013 MBP Retina i7 with 8GB RAM. You'd think it'd be enough, but who knows? On the plus side I'm finally learning iOS function signatures off by heart. It definitely is quicker to type them out than to wait for autocomplete. 
Hey, not OP but it sounds like you are just starting out programming. I would suggest starting with a language to grasp the concepts. Python would be a great starting point. I feel the learning curve into MVC and app development would be pretty tough without prior programming experience. Cheers!
Sorry again if this isn't the right place or the right questions, but I'd really appreciate some help. I started by trying to implement login with facebook, but facebook docs only seem to show to do that with objective c, and not swift. I found a couple of tutorials online and they are all a little different, and I'm not clear on what the differences are and why it matters. Plus the latest facebook has known issues, so I'm not sure if the current work arounds are a log term solution. I kept getting errors and couldn't even get past the first step, so I'm feeling very disillusioned right now. :(
Hey! thanks for the suggestion. The reason I started swift is that it has Xcode and a UI editor. Also Swift seems to have pretty simple in terms of syntax. I think with every language there is the core part with variables and loops. And I want to step into something slightly more complex. Should I look into doing tutorials for specific things I want to make (stopwatch, notes app, animation, ect.) or should I learn more concepts? My programming experience is mostly html, css, jquery and thus recently a bunch of swift tutorials
Well that fixed my low-FPS problem. But the board still updates incorrectly
Here is what I wrote to demonstrate how easy it is: let yourString = "String contents go here" let f = NSFileManager() if let u = f.URLForDirectory(.DocumentDirectory, inDomain: .UserDomainMask, appropriateForURL: nil, create: true, error: nil){ let fileUrl = u.URLByAppendingPathComponent("FileName.txt") if yourString.writeToURL(fileUrl, atomically: true, encoding: NSUTF8StringEncoding, error: nil){ println("Successfully wrote the file to \(fileUrl)") } else { println("Failed") } } 
Agree it feels retarded slow now. At least subsequent compilations are faster now... Give and take? Bah. 
 I did manage to do the bridging but I still need a couple other objective-c API's, so cocoapods sounds interesting. Does it work with all type of projects (I'm making a single view application) or only with cocoa applications? 
Good to know it's not my computer. It's super slow for me, sometimes getting hangs on startup too.
I'm the author; if you guys have any feedback I'd love to hear it.
Yup, it's horribly slow for me as well. Objective-C code completion is fine.
With cocoapods, as of 0.36.x, you don't need bridging if you have use_frameworks!, which I highly recommend. You just install the pod(s) you want, let's say AFNetworking, then wherever you want to use it, just put "import AFNetworking" with your other imports (no quotes). You don't need a header file. Sometimes it'll say "no framework AFNetworking" until you compile it the first time, but then it's fine. 
it is probably best to create a function out of that and pass a few basic parameters such as the selected button "A", "B", "C", "D" as a parameter to the function and perhaps the index of the question so your output file will look like this: 1A 2B 3D 4A or even better A B D A to indicate question 1 got A, question 2 got B, 3 got D and 4 got A and so on...
What errors do you get?
1. Array is possible and probably good for a proof of concept. CoreData will hurt your brain if you try to jump into it immediately without really getting a handle on the language and SDK first. You can always change to CoreData later if you want to. Or Realm. Or something else that has better syntax. 2. I haven't used Paper so I'm not sure about this one. 3. I don't know why you'd need Parse. 4. I'm biased towards native development. However, if you just took the iOS 8 and Swift courses why wouldn't you try this native? You're best off just jumping in and trying things out. You can always change things later once you become more experienced.
good job. i need to get my act together and get back on the tutorials. 
Make sure your parse frameworks are up to date and then type it out again. I suspect that it may return an optional now (user: PFUser?, error: NSError?) for safety 
Yeah, it's terrible...
With your endorsement I have ordered the Swift in 24 hours book off of Amazon. 
How was the submission process? I'm closing in on my first release and I'm starting to get anxious about it.
I've reached 322! Here's a brief rundown of items to explore: - Screen goes dim after approx. 3 minutes (requires touch to regain screen activity) - iPhone 6: Ad bar blocks initial placement of mouse (not as bad on iPhone 4~/5~) - iPhone 6: Background texture (grass) and banner/header texture do not expand to full width of screen real estate - Ad Removal: Purchase workflow initiates iTunes (store) and App Store Suggestions: - Telegraph speed of elephants by appearance (i.e. red eyes = fast, sleep eyes = slow) - Clarify scoring mechanism (each cheese = how many points? Each mouse in flood, post-cheese = how many points? if any) - Brief tutorial on movement (could be achieved by placing mouse and cheese on playing field, no elephants, and showing a "tilt" icon somewhere on the screen. Once cheese is obtained, first elephant wave starts) - Microtransaction for revival (to retain score, effectively) - maybe cute it up by having a spotlight shine down on the flattened mouse with an angelic "ahhh!" upon the player electing to use a purchased/earned revive. - Scare mechanic: tagging an elephant from behind with mouse causes a scare (which moves all elephants away (radius) from mouse (perhaps scoring mechanic here too?) - iPhone controller support for iPad + iPhone combination (when iPad version comes out, if ever) 
Very cool. I participated in a review of that book posted on here, /r/swift. It helped me with some of the foundation of the Swift language without all the Cocoa stuff. Keep learning.
I am using iAds since I am still new to this field. I saw your post on the Parachute Mike, but have yet to try it. I'll do it soon.
Don't feel like an idiot. You're actually an awesome person! :)
This was my first time going through the submission process. There were a lot of stuffs to upload and fill out. iTunesConnect does a pretty good job of showing you the requirements. The approval process took 7 days of waiting, 4 hours of review, and 1 hour to get it on the App Store. It's okay to be anxious, but do it anyways. :)
Excellent advice man. I knew the iPhone 6 was going to have some problems. The Xcode simulator would always use the 2x texture... I need to get myself an iPhone 6. Could you please expand on the Ad Removel item? I thought I had it set up with using alerts to conduct the purchase. A lot of great suggestions man! I was aiming this game for young children so I kept the game mechanics very basic. Great ideas though! I'll see if I can get the iPad version out soon. Thanks for the great review! I really appreciate it. 
Do you have a bridging header? That's really messed me up when I started a few months ago. You have to import the frameworks in an Objective C bridging header then it will be available in your project with no imports needed in swift. 
I've been using several courses on Udemy as well. Percival's highest rated course has helped me learn to design an app, but I think I need a bit more of a learning regime outside that. Some things still confuse me a little bit, but I grasp the basic concepts of things...I think. Anyway it arrives on the 24th, so hopefully the same day as my Apple Watch. Do you have any words of wisdom that I could benefit from?
Alright, neat. Well done. Hope you are happy with it :-)
Thanks, I'll give it a read, thank you!
Read the docs on NSData, NSArchiver and NSUnarchiver. 
Well, I still can't import Skeets into my projects. :/
Thanks for your response. Why so you say array is only good for proof of concept? what value does coredata bring (apart from persistence, which i don't want)? 
m.xkcd.com for future reference. Lets you see alt text.
iOS Safari can see the alt text if you tap and hold a he image. 
Haha so true, thats me. should be in /r/programminghumour though
Not saying it's only good for a proof of concept. I was saying it's easy to implement for a proof of concept. Once you get more comfortable coding you can change it to something that may fit your needs better.
Wait... you can use emojis as variable names in Swift?!
Whoa!
https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html There are instructions for using a bridging header here. You have to make the header file, import the library you want to include as a regular obj c import, and then setup a few build things to tell Xcode to use that file as a bridging header. Xcode may help you more now by auto filling that stuff, not sure, but that link should show you how. 
I need to send this to my boss.
On UITextField there is var clearsOnBeginEditing: Bool set this and every time a user begins editing the field it will clear
Once your isFollowing variable is set to true, it will never be set to false. Your sharing the reference too widely. It should be declared (or at least reset, but I would recommend declared) in your inner-most block. (Basically, this variable tracks whether anyone is following the original queried user, not whether one of the other users is following them).
I assume you have an instance of LevelTwo in the other class? class LevelTwo: SKScene, SKPhysicsContactDelegate { let gameScene = GameScene() } class OtherClass { let level = LevelTwo() override func didMoveToView(view: SKView) { level.gameScene.addHelpMenu() } } Of course don't do this. You should have accessors (getter) for gameScene or have other functions to call into LevelTwo for information hiding purposes.
Im trying to call a function from my GameScene to my LevelTwo. That didn't work for me. 
If your scene is changing when you change the zPosition, it means you're drawing multiple sprites on top of each other. The zPosition is how "far away" the sprite is, so a higher zPosition sprite will be drawn on top of a lower zPosition sprite. If you have debug information turned on in your scene, you can see how many nodes are on your scene. If you keep seeing the number go up when you're not adding anything to the scene, it means you might be adding more sprites underneath the ones already on screen. 
Mind that this won't update the methods that changed, nor the new data structures in swift 1.2 (Set for example instead of NSSet in touchesBeganWithOptions ) so you'll have to do it manually but it's a nice start 
I might consider objective-c Pm me your Gtalk or Skype :)
I think one of the main reasons is that Swift is still evolving. It's already a large task to update Swift for all of their examples, etc, so they might just be waiting for Swift to be a bit more stable Additionally, the documentation team is always working to push out the latest documents and reference guides for the newer frameworks. It's probably a higher priority to push out a new reference guide than it is to update the (perfectly good) examples of the old ones.
Hey, I love this idea. I want to learn Swift. Starting slowly -- about 1 chapter into Meng To's Design+Code. Let's talk.
Yea I've only been programming for a few months and swift is my first language. I'm surprised at how hard it is to find any online solutions to problems I am having in swift.
Yes and also google searches. There are a lot of examples but it is occasionally very difficult.
Funny, as someone who has been programming for 25 years, I'm absolutely amazed by how huge the body of available examples, tutorials, in-depth explanations, and everything else you could possibly wish for exists for a language that is literally less than one year old to the public. And not only is it less than one year old, it has already evolved dramatically in some ways in that 10 months time. So to me, it's amazing you can find anything at all. You should feel lucky that your somewhat poorly thought out decision to learn to program with a brand, spankin' new language has as much support behind it as it does honestly.
The exception message says that `ViewController` doesn't implement `-tableVIew:numberOfRowsInSection:`. Adopting [`&lt;UITableViewDataSource&gt;`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDataSource_Protocol/) (which was done in the storyboard) is a promise to implement its required methods, which include `-tableVIew:numberOfRowsInSection:` and `-tableView:cellForRowAtIndexPath:`. The template won't have stub implementations for these methods because you selected the single view application template. Also, don't forget about [`&lt;UITableViewDelegate&gt;`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDelegate_Protocol/index.html#//apple_ref/occ/intf/UITableViewDelegate).
What makes you think this is a Swift bug? I haven't looked at the project itself, and I haven't ever used SpriteKit, but from your description this sounds like a difference in SpriteKit behavior between iOS 7 and iOS 8 and is not related to Swift.
Thank you so much! I didn't realise I am doing this mistake :)
Got in touch with OP last night. I think a weekly hangout session is the way to go. Perhaps we can organize a learning swift roadmap (Trello board?) and hold each other accountable somehow. I think we're all using different resources at the moment as I see @kinngh is learning through Udemy. I'm going to PM you both.
Nanodegree?
Thanks for the reply. Nothing happens when I try to drag it there either. It will allow me to create a new block of code by dragging into ViewController.swift, but connecting to an existing block of code seems to not work.
Try dragging from the bubble beside the code onto the view. You should be able to select touch down from there.
Have you built any other iOS apps before? As first projects go I think that sounds like a pretty good one. I mean it's not dead simple but you should be able to figure it out. I'd suggest using a slider view for scrubbing through the video file, similar to in the Camera app lets you scrub through frames of a rapid-fire capture by swiping the bottom. I think the best way to do this would be to add a UICollectionView to your UI, with each cell being a frame, and then when the user swipes the collection view, overview scrollViewDidScroll delegate method and in there you would update the currently-visible frame image.
I think you are looking to make it *atomic*. Atomicity is the computer science description for a data structure that is thread safe. http://en.wikipedia.org/wiki/Linearizability
You could use synchronized or an nslock. Actually googling for synchronized in swift and it looks like you may have to use a Grand Central Dispatch method instead: http://stackoverflow.com/questions/24045895/what-is-the-swift-equivalent-to-objective-cs-synchronized
I actually have a tic tac toe app that I wrote‚Ä¶ but unfortunately it's a very poor example to work from because it's intentionally demonstrating a bizarre way to write programs. Sorry!
This is honestly a great idea and I hope a lot of people find it. Great job!
&gt; objc_sync_enter(self) &gt; &gt; . &gt; . &gt; . &gt; objc_sync_exit(self) &gt; 
OT, for iOS: [Sprite Kit Tutorial for Beginners](https://www.google.si/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0CB8QFjAA&amp;url=http%3A%2F%2Fwww.raywenderlich.com%2F42699%2Fspritekit-tutorial-for-beginners&amp;ei=nZ40Vci4D4mesAHm_4CwAQ&amp;usg=AFQjCNEfsQezImuSM0g20C19IYl7E8lIQQ&amp;sig2=Hx2ZCL34NMVVUcI0x33Yhw&amp;bvm=bv.91071109,d.bGQ) SpriteKit is amazing. Finally you have all the necessary native building-blocks to create a game.
Lol same here, same here...
Can I get involved? Working through the Ray Wenderlich iOS apprenticeship series
&gt; when I self reference in my collection, it doesn't allow me or says UI Button doesn't have a setTitle parameter which makes no sense to me let myButton = button as UIButton Generally whenever you encounter "AnyObject" in code you need to cast it to another type in order to be able to use it. In this instance I think you're using the "sender" parameter of an object which **by default** is AnyObject. You either have to type cast or change this AnyObject to be the type UIButton.
Maybe have a look around on the app store and see if you can find something you think you could do better?
I love it. Simple and effective.
You can use the Sprite Kit and the Scene Kit on OS X just like you can on iOS.
Thanks guys. I guess reddit's not so bad. I figured it would be kinda like 4chan.
Yep
I'm confused on how to use this. What would be the "synchronized" code? Do I use this lock every time I enqueue or dequeue into my data structure? Or do I do it on the definition of the object like in Java?
Yes, because it's not set during initialization.
Hi there, I'm into my first month of learning Swift. How long has it taken to really get to grips with how to use it? I'm working my way through a book that teaches Swift to beginners, and i've had no experience in Objective-C or any other languages for that matter. Reason I'm curious, is i'm starting to get to grips with individual aspects, but just putting it all together and applying it is still proving difficult to get my head around. Is this something that you struggled with at all to begin with? At what point did it begin to start making sense? Thank you! :) 
Yeah, it appears the 6.2 update broke the docs. If you roll back to 6.1 they're there. Update, they disappear. Sucks.
https://gist.github.com/danielgomezrico/9023178c26bf4a7df546 There's the script if you want to use it. I run it with a keyboard shortcut using http://www.bettertouchtool.net/, so I just have to hit the keyboard every time it happens and wala!
OP, the link is down
This is hilarious. The toy I had growing up was a toy that was yellow with white "buttons" on it. Each button had a number times a number on it, and when you pressed the button down you would reveal the total (i.e. a label written on the plastic below it). This app is basically identical to that toy!! Other than that this looks awesome!
Hmm it is working for me now. 
Ive **read** through that and it doesnt make sense to me. Can you please provide an actual example... I am really stuck on some swift code right now and I could really use an example
You should really download [The Swift Programming Language](https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11) iBook where it goes over all of this. It's a free book from Apple that goes over all the core principals of the language with examples.
Okay cool now we are getting somewhere! I am importing data from a database and its putting the data into an NSArray. I am having trouble passing the data to my next viewcontroller. But I am still stuck... 
Slick. What do you do when you have custom class initializers? 
If you need to pass it away as it came in, you just do that. Swift arrays and NSArrays are automatically bridged. If you need to modify the data, you create a new array with var (or an instance of NSMutableArray), fill it with data however you need and pass it on to your other view controller.
There's a companion book to the one about Swift language, Using Swift with Cocoa and Objective-C. It's in the iBook Store, on the same shelf.
Nice :) thanks
Best way to learn programming is to actually program. You should always be involved in creating something. Have you tried looking up interesting GitHub projects and studying the code? Find out how the implement certain features, and try to incorporate it into your own code. There's no point where you say I'm good enough, if you're completely honest with yourself. But you'll be able to see progress by realizing what you can now do. 
I believe the code you supplied is only going to show a list of people I follow correct? I could be reading it wrong though. The original task was to show everyone in the database and conditionally show a checkmark to the right of their name if I follow them.
I would love to join this google hangouts group if possible! I have no programming experience whatsoever but I am looking to start learning swift and the basics of programming.
`floor()` if you want a `Float` or `Double` still, `Int()` if you want an `Int`
Maybe i'm still confused, but, isn't that going to run into the same issue I have now with it doing an async call inside an async call?
I think you're looking for the AVAssetReader class. How you'd do it: - create an AVAsset from your video - init an AVAssetReader with your asset - Create an AVAssetReaderVideoCompositionOutput - Add the video output to your asset reader - Call the startReading method on your AVAssetReader - repeatedly call copyNextSampleBuffer on your asset reader output (as many times as the amount of frames you'd like to copy) - convert the sample buffer of class CMSampleBuffer to a UIImage and put it in your Array
It's using the same array in both calls, so it shouldn't.
Awesome, thanks
This doesn't really get you anything that NSRecursiveLock doesn't get you without calling into coincidentally-swift-compatible objc runtime entry points. I guess it saves a single line of code declaring the lock; doesn't seem worth it.
&gt; Swift arrays and NSArrays are automatically bridged. Not in 1.2 In Swift 1.2, Objective-C classes that have native Swift equivalents (NSString, NSArray, NSDictionary etc.) are no longer automatically bridged. That means passing an NSArray to a function that expects a Array will now fail. You have to cast (as Array) 
CocoaPods is dead simple, but for scalability, it looks like Carthage much better. But, given the kinds of questions on this sub, Carthage is probably beyond the capabilities of a large portion of the audience.
As well as touchesCancelled - both from the subclass or while using button events. In general, if you are listening for touchesEnded, you want logic in touches cancelled also.
On this line: users.append(userToAdd) Its saying Missing argument for parameter 'userid' in call. The variable userToAdd has everything, but for some reason passing it in like that doesn't seem to work. 
I second this, __but__, I don't think dealing with touch end methods is the best way. In my opinion, it is much better to attach a gesture recognizer to the button in that case because you can skip subclassing UIButton.
Autocomplete is little bit faster in the new 6.3.1 update. Though still not fast enough.
A bit more, love this topic! Download Xcode to start. There are a zillion great tutorials online. Programming in any language is not hard, just have to enjoy what you are doing, you will have to love it because you can EASILY do an 80 hour week, and at the end have NOTHING to show for it. That's how it goes. On the other hand, what the heck, you are working with electrons and the speed of light, which is pretty awesome. Source: +35 years coding. Which can usually mean I know nothing! LOL. Everyday learn something new. Every single day.
YOUTUBE YOUTUBE YOUTUBE Then check out the Stanford classes: http://9to5mac.com/2015/01/26/stanford-swift-programming-course-available-on-itunes-u/ And Lynda.com is GREAT. Really have some awesome classes there. I'm blown away how good they are sometimes. NOTHING should stop you from coding, anyone can do it. Just have to want to do it. It can be super fun too. PS, was thinking of going to Morocco for a spell, if know anyone that wants to put up an Xcoder for a month, can teach away. Just hit me up on twitter. @ejpusa :-)
I use Fontawesome
Thanks for the reply. Name and day are parameters. Of type string. That's why it says string after each one. But why does it say string AGAIN after the arrow? haven't we already determined that name and day are strings? 
The thing after the arrow is the type of the *function*, what type it returns. Because it could do anything with those variables.
When you call greet(), you get back the string that was created. This is called the return value. The return value is type string. I like to the of the arrow as pointing to what the function makes. It's takes two strings and makes ( -&gt; ) one string. Edit: you can store the string that is returned in a new var, like so: var greeting = greet("Bob", "Tuesday") println(greeting) // print out the new greeting we created 
After modifying it a little, I was able to get some errors to go away except for the user.isFollowing = true inside the loop. It's saying " Cannot assign to 'isFollowing' in 'user'". Sorry to keep bugging but i cannot figure this out. https://dpaste.de/W3dy Thanks! 
I'm sure you can start with Swift as your first language, but in general I don't recommend it to people. Swift was my second language (after Python, a great place to start ‚Äî though Ruby is more useful and probably equally easy) and while following tutorials I was regularly grateful for my previous experience. The problem, right now, is there are tons of tutorials for Swift already ‚Äî and the majority of them are out-of-date. The language changed a ton over the course of last summer, in small but code-breaking ways, and then it changed again with the release of 1.2. What sucks about that is you'll find a tutorial you like ‚Äî one written clearly, with great illustrations ‚Äî and halfway through you'll start hitting errors that the tutorial doesn't cover. You aren't necessarily doing anything wrong, but the tutorial is just out of date. It's frustrating. And it's during those times I was most thankful for at least a smudge of programming background. That said, if you're willing to scrounge around on Stack Overflow, sift through forums, and basically brute-force your way through all the little problems in tutorials right now, you can definitely start with Swift. (A bit of advice: optionals won't make sense to you at first, and likely not for a long time. Try to just be OK with that, it'll click eventually.)
I'm hugely biased, but you might like my Swift tutorials: [Hacking with Swift](http://www.hackingwithswift.com). It's all project based (i.e., you make stuff as you go, not just theory!), it's aimed at beginners, and it has a smooth, incremental learning curve. Also, did I mention that the entire thing is free? :)
I already have XCode installed. 
You raise a very good point not mentioned by others here. A lot of the tutorials out there are already out of date and for a newbie trying to work their way through them that can be excruciatingly painful. I would highly recommend [AppCoda's books and tutorials though](http://www.appcoda.com/swift/) as the guys over there have been extremely diligent about keeping their tutorials and books up to date with all of the changes to Swift. Believe me, it will save you a lot of headache - Good luck!
Thank you so much for the tips. I was looking into the web for tutorials, and many of them recommend the path you described. I think I'll hit it with Ruby and go from there. 
To modify the user in the loop: https://dpaste.de/Lp2X Most of the time I just find it easier to use a custom class: https://dpaste.de/61D0
Might check under phone settings&gt;developer. I've never done anything with iAd though. http://imgur.com/ZkCxavq
This worked perfectly. Thank you very much!
thanks. that looks good.
If you don't have a developer account Apple's not going to send you ads from their server. The simulator does some fun stuff but on a device it's a bit different, that's probably why you're seeing them there and not on the device. Side note: how did you expect to get paid for those ads?
Then write the api in a language you know. Use push notifications to sync conversations. Not much else involved. Front end swift won't change very much.
Last time I did this I used AdWhirl and was able to setup iAd and AdMob together and sort them how I liked. I'm not sure if AdWhirl is still around though.
Use the tutorials that use parse. Instead of calling a parse api, write that api yourself. So front end will stay the same. There are lots of tutorials on writing the back end for this kind of app (depending on the language you want to use). You should have Linux experience, db experience, sys admin experience, and of course know a back end language. Otherwise you cannot complete this task and should just use parse.
You don't need background in programming to learn any programming. If you did, no one would be able to learn any programming. To answer your question specifically, no you do not. You will just need to be persistent, very persistent. Other folks on this thread have mentioned some very nice resources, use them.
Well I will be launching it in the App Store I just figured I don't need to pay for a developer account until I'm ready to launch 
Most likely they are doing a complete rewrite due to the significant changes in 1.2. However Dash finds docs for Swift 1.2. There is a reference to; github.com/SwiftDocOrg which is the first I've heard of them. Maybe this is a sign of a long term desire on Apples part to open up Swift?
I believe Parse will only charge you if you start getting a ton of traffic (more than 30 requests a second.) Parse is absolutely viable if you are only just starting to build an app. If your app really takes off, and I think you'd know when that would be, then at that point you could probably build your own backend and replace Parse at that point. 
Just having a quick look, I noticed that your circle and triangle are being set to x: CGRectGetMidX(self.frame) y: CGRectGetMidX(self.frame) Should it be "y: CGRectGetMidY(self.frame)"?
Fuck, I'm high. Thanks for catching that for me. I should probably sleep instead of trying to learn this right now lol.
Right. Red Bull and Five Hour Engery it is. I can do this.
I'm learning with no background experience and I'm getting along pretty well. This course has really helped me a lot: https://www.udemy.com/complete-ios-developer-course
It is a thing. Auto layout can do what you want. Check this short intro: https://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOS/FirstTutorial.html#//apple_ref/doc/uid/TP40011343-CH3-SW11 Oops, missed the last sentence. I don't know if percentage based margins are possible, but I don't think it's something you should do. By choosing proper pixel based margins, you app will probably look good on any iDevice. 
Percentages are possible. The Stanford course on iOS and Swift has a decent basic intro to autolayout, that will get you going. I subscribed to Ray Wenderlich video tutorials mainly for their AutoLayout tutorials, but were very unimpressed by them. The free text tutorial (http://www.raywenderlich.com/83129/beginning-auto-layout-tutorial-swift-part-1) is much better... Onto your question - constraints have a multiplier, so you may constrain something to be 0.5 the width of something else (for example the root view) or it's centre X is 0.9 of something else. 
Are you going to have a million plus users on launch? Then you aren't paying or built your app to be extremely inefficient in the way makes calls, as you get up to 30 req/second free. If you have media files store those with s3 or azure but other then that parse will be able to handle around a million users before you have to pay. 
&gt;Ruby is a terrible place to put people wanting to learn to program. Why? &gt;Interesting here is that Swift could easily replace both of those languages if it was a bit farther along in the development and stabilization cycle. And if it wasn't exclusively available on OSX...
Check this out on [Stack Overflow](http://stackoverflow.com/questions/10077155/how-to-add-done-button-to-the-keyboard). It should get you where you need to be.
How do you do that? Create a view and place it ontop of the keyboard? How do you place it so it fits flush on top of the keyboard?
They both have similar delegate calls. Just [check the docs](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextViewDelegate_Protocol/index.html) for the delegate calls you need to implement. 
Thanks for the confirmation. 
I haven't implemented that one, but I have written a sigcap from scratch before, so I think the answer is the same. From their doc, all you're really doing is setting a UIView to be an instance of YPDrawSignatureView. They're not marked as IBOutlets, but I'd imagine you'd just throw some UIButtons on there and set them to those two methods. Or you could a gesture recognizer - double tap to finish, triple to clear. Lots of options. 
I've been developing in C# for ages and have become spoiled to Visual Studio. When I started getting into iOS development, I was stunned at how archaic Xcode felt. I found using it maddening and then I found app code. Swift support is still a work in progress but the overall tool is light years ahead of Xcode in terms of being a top tier IDE. Xcode is a good ide if you've never used an ide before or don't have a pattern to how you write software. Xcode takes a "you don't need customizations, you just need to learn Xcode" approach where as app code is tremendously configurable and a great tool for devs with habits (good or bad).
All good, dude. We were all new once. You've got a couple of options depending on how you design your UI. I'm going to assume you're not doing it programmatically since you're new to this, and instead using Interface Builder. In your View Controller, declare two IBAction methods that will call the view's relevant methods. Essentially, you're writing wrapper methods so you don't have to muck with the library code. Abstraction is your friend anyway. @IBAction func doneButtonPressed(sender: UIButton) { let capturedSignature = signatureView.getSignature } } You'll do one for reset/clear as well. Then control-click the button and drag to your view controller, and those two methods should show up for you. To be honest, I haven't made the jump to Swift completely from ObjC yet. Personally I'd like to give Swift some time to stabilize a little more before I dive in to it more deeply, and I'm still comfortable enough with ObjC that I can knock some code out quickly with it. Good luck. 
I think I did what you said, but it doesn't seem to work. @IBAction func doneButtonPressed(sender: UIButton) { let capturedSignature = YPDrawSignatureView.getSignature } So I put that in my view controller class. Control clicked and dragged the into onto this IBAction. When I build and press the button, nothing happens. When I throw in a simple println() to the above, it prints to the console, but doesn't print when I put the println() in the method. It's just not calling the method for some reason. 
I've never seen that popup "Failed to automatically update constraints". Have you tried to delete (inside DerivedData/..) ModuleCahe &amp; YourApplication folder ? Or Product -&gt; Clean ?
1) You can detect missile-wall start-contact with didBeginContact 2) And you can detect missile-wall end-contact with **didEndContact**
Thank you! I really like the functional bits in Swift, and I feel like I appreciate them more with the support of the procedural backing of the language. My experience with functional programming is only in ML, which I enjoyed less than Swift. I'm planning to try Haskell at some point, although I suspect it will be more of an academic exercise as opposed to something very practical :)
Haskell is definitely more on the mathematical side of computing, at least from a structure perspective. But Haskell allows you to do some very cool, very practical things like [parsing text incredibly simply using parser combinators](https://hackage.haskell.org/package/parsec) or defining [structured RESTful APIs with little more than a few type declarations.](https://haskell-servant.github.io/) I'm a fan so far!
https://github.com/icons8/flat-color-icons
Sounds fun, I'll check it out :)
Good points. As I said, my Swift isn't as good as my ObjC is yet, and I wrote that code block with pseudocode from memory. Thanks for adding. 
As someone who doesn't know any programming, i got fairly quickly confused in the second video where he went really fast on the coding and didn't really explain the logic of the code that he was writing. 
Thanks guys, I made an edit on the original post on how I got things to work!
This gives a number lower than 1 because you are dividing a number by the most it could possibly be as a 32 bit number. This would be like dividing 78 cents by $1.00. You can never get above $1 so your result will always be lower than 1 78/100 = .78 99/100 = .99 You get the picture 
Are you trying to add your logo to the navigation bar? You can add a UIImage to the NavigationItem's titleView to accomplish that. (Docs here)[https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationItem_Class/index.html#//apple_ref/occ/instp/UINavigationItem/titleView]
The iTunesU Stanford course with Paul Hegarty is excellent. 
I use technologies sparingly. I'd start swift, make a library of stateless functions (not classes) for the back end, test them, a library for persistence, test it, UIs, possibly using reactive cocoa, then I'd start working! If I had to make any objective c calls to the swift functions, I'd make a forwarding class in swift that could do it I'd probably use segment.com for analytics forwarding, and crittercism or fabric for crashes
Easiest way would be to put all the data in a JSON string then parse it into an array of dictionaries. Some of its elements would then contain arrays of more dictionaries. For example: [ { "title": "Book title", "chapters" : [ "title" : "Chapter 1", "pages": [ "number": "A-1", .... ], ... ], ... }, { "title": "Second book", ... }, .... ] (I'm on an iPad. Formatting is likely to be screwed up but you get the idea). Now in your class define three integer properties: currentbookindex, currentchapterindex, and currentpageindex. Preset them with 0, 0, and 0 so the control starts with values from first title, first chapter of that book, and the first page of that chapter. In the pickerview delegate method you return 3 components. In the callback that asks for the number of items you index into your json structure and look up the count of objects at each level. For component 0 it would be the top level of the json array. Then you select the currentbookindex, the value is a dictionary. You extract the 'title' value and return it for the label and the count of chapters array for number of components for wheel 1 (second wheel). If it's the second component (chapters) you get the Nth element of the top array, return how many "chapters" elements it has and for each one return the value of the "title" key. For the third one you take index and get the currently selected chapter, then the count of pages array elements and for each one return the value of the page name (or number). The trick is to not hardcode the returned values in the delegate method but to always go off the currentselected property for that component. That way when the user selects a different value, all you have to do is register the currentselection for that wheel and do a refresh Protip: if currentbookindex changes, force currentchapterindex and currentpageindex to 0. And if currentchapterindex changes force currentpageindex to 0. This way if user picks a different book, the chapter and page always snap back to the top. If the only change the chapter the book stays the same but the page snaps to the top. And if they pick a different page it all stays as it should. The only thing remaining is in the didSelect handler if you get component 0 you store it in the selectedbookindex (and 0 out the chapter and page index), if it's 1 save the index as currentchapterindex (and 0 out the currentpageindex), and if 2 save it as the currentpageindex. Then force a reload and the delegate callbacks will automatically refresh the wheels for you. If you can't put the data in a JSON, you will have to manually construct this sort of nested arrays and key-values. That data structure is key to making efficient multi-level pickers. This will also work with images in the picker. Just return a UIImageview instead of a text label. Your JSON can have the name of an image file in your bundle and you just have to load it up and stuff it into an imageview's image before returning it. Suggest you cache the imageviews and images for better performance. Best of luck,
Unless you are doing low level network diagnostics or hacking, you should use Bonjour instead of brute forcing and spamming the network. Bonjour was designed to discover advertised services available on your network. But Bonjour (correctly) wants you to think as services and not IP addresses because IP addresses can change at any moment and a computer hosting a service can have multiple IP addresses which obfuscates things. Look at the NSNetService family of APIs. Otherwise, if you are doing low level hacking things, then you aren't going to find a solution that is reliable and easy. And you'll probably want to combine multiple techniques including arp and maybe even Bonjour (look for all advertised services and resolve their IP addresses...look up the utility Bonjour Browser). 
What resources did you use to learn from? I'm still learning and I'd like to learn how to build games even if it's not my primary goal, just so I can have a more complete understanding. Any advice on where to learn and where to get started?
I just googled stuff like "swift tutorial", "how to make game in swift". And after I've got used to basics I just annoyed people on stackoverflow :)
Thanks thats great, i'll download your game and rate it once I get somewhere with decent wifi !
One of the best sites that I can recommend to anyone would be Ray Wenderlich's website. Most of the written tutorials are free and very useful. And Ray and the team really know their stuff. Go check it out and see if you like it.
You could convert the strings to lowercase before evaluating it. userResponse = "HeLLo" userResponse = userResponse.lowercaseString // userResponse is now "hello" if userResponse == "hello" || userResponse = "sup" // would evaluate to true Would something like this be applicable?
Wow, thank you for such an awesome answer. I'll give it a shot!
Thank you very much! That should give me some head start 
This is absolutely correct. Not only have I shipped an app in Swift as well, but the company I'm interning at this summer is starting all new projects in Swift. Several large companies have also started using Swift in production (Square, Airbnb, etc.)
I work for a startup called [Bryx](https://bryx911.com). We've been shipping Swift since Xcode 6 was released out of beta. It's definitely production-ready, and I would highly recommend it over Objective-C.
 &gt;Are the HTTP GET/POST methods same as its in php. Yep. &gt;The methodology can be applied to iOS which is used in PHP ? Yep.
Start using Swift NOW! Swift is a very powerful language and once you take the taps off of it you will have a more modern language with which to work with. 
My background is ActionScript and front end stuff (JS, html5, CSS, jquery, and all the basics) and never worked on a "software" so to speak, until I picked up Swift! I didn't touch iOS development because of Obj-C. I don't doubt it's a very mature and capable language, but it wasn't for me. I tried to learn it several times, and I always ended up being rather discouraged by not really getting it. I already built an app in swift though, I will be submitting it to AppStore once my developer's account is ready. I had to send a tax form to apple and am waiting to be approved at the moment. Anyhow, I recommend using Swift NOW. 
A lot of people find Swift easier to transition to because it has a 'modern' syntax and shares a lot of features with other popular languages. As others have said, you could start right now in Swift and be fine, but there are still a few disadvantages I can think of. - Stability. Fortunately Swift is past the point of crashing Xcode every time you make a typo, but there are still plenty of bugs. If you're doing pretty standard stuff it's not likely you'll run into them. - The tools were built for Objective-C. Debugging, refactoring and autocompletion work better with Obj-C. - I don't know when Swift will stop making breaking changes. - You're going to have to have to know Objective-C to really know Swift. Swift may not carry the "baggage of C" like Objective-C, instead it carries the baggage of Objective-C. There are all sorts of quirks in the language to make it compatitble with the objc runtime. Not to mention all of Apple's and many third party frameworks you'll use are written in Objective-C. All of those will improve over time and there are some disadvantages to Objective-C too. It depends what you want out of Swift. If you want to make a few apps as a hobby, then just pick your favorite. If you're looking for a OSX/iOS developing career, you should probably become familiar with both. Even if Apple plans to deprecate Objective-C, it will probably take a decade before it is really uncommon. Also, do you have any other programing experience or was Objective-C your first attempt? If not, I'd recommend learning basic programming first (try Java), then jumping in to iOS development.
Create a new swift project, add an Obj-C class to it. Then go into project settings and copy the bridging header path into your old project's setting. The path should be the relative one -- like $(PROJECTSRC)/... instead of the absolute one.
Do you use source control?
Ok, thanks I will try that. I still need to figure out a way to restrict emails to only on provider. Edit. I still don't know how to check the state of the email verification field. you can't just do PFUser.currentUser().emailVerified.
One thing - I'd say your "total_times_borrowing" field shouldn't be stored in core data. It should be easily calculated. - In fact, every relationship will have a "count" property extracted for you personInstance.requests.count
I would love to see them open source it. I just don't think it will happen but I'm keeping my fingers crossed.
Thank you! I did not know that existed. I've tried going through a few Core Data tutorials, but haven't found a great one yet. They're either too in-depth, or too simplistic.
Thanks! Here is the "object graph" (I think): http://tinypic.com/r/5b2u8/8 And once I understand Core Data better, I will be re-writing it with everything I learn, so I will use a better naming scheme next time.
As much as I hate Microsoft and love Apple... They HAVE to do this to keep up. MS has been making some big changes lately for the first time in many many years. 
I think I will literally cry if that happens. I love this language!
Yea I agree, but i don't seem them open saucing it.
[According to Chris Lattner](http://lists.cs.uiuc.edu/pipermail/llvmdev/2014-June/073698.html), the Swift developers would love to open source it, but they simply haven't had time to talk about it yet. That post was almost a year ago ‚Äì now that Swift 1.2 has been released, things may have settled down enough for them to be able to discuss open sourcing.
This is a good question i'd like to see an answer to this as well. My guess is that the implementation of generics in swift is more along the lines of how Java generics work other then C++ templates. 
hmmm maybe, but discussing open saucing it doesn't mean they will. Man that would be awesome. I hope they don't do what ms is doing and just open sauce one small aspect of one small part with a very ambitious licensing deal. I would really love to start writing more code in Swift
Sometimes. https://developer.apple.com/swift/blog/?id=27
Can someone explain what exactly the difference would be if Swift was open sourced?
I had a similar problem the other day. After much trial and error found that I've added a new folder to the project with "Add as reference" instead of "add as a group". That folder was showing as blue color. Did you add a new file with reference? If so, remove it and add it again and make sure "add as a reference" is unchecked. 
Third parties would be able to modify the compiler to run on different platforms, which would allow Swift to be used as a general purpose language instead of being restricted to Apple products.
"cell" is an optional here. You need to familiar yourself with the pattern: if let cell = tableView...{ ... return cell } return nil 
I'm gonna be one of those guys who copypastes their own [comment](http://www.reddit.com/r/swift/comments/31sbhp/swift_voted_stack_overflows_most_loved/cq5ymox?context=3), I'm too busy to write it all again haha sorry.. &gt; Apple knows devs loves Swift and want to write it everywhere. Even the first line of the book says it's designed to be able to write operating systems. The more I think about it, the more I'm willing to bet on it eventually being open sourced. &gt; Picture this. Federeghi on stage talking about how the initial release went down, how popular Swift is, he'll source this article saying it's the most loved programming language. Then he'll say how they've got a lot of feedback from devs wishing they could write everything in Swift! Then announce that it's open source today. Crowd goes nuts, Twitter goes nuts, hacker news goes nuts, even /r/programming's consensus is that they hate Apple but "have to commend them for doing this". &gt; Still unrealistic?
But it would require a set of people to champion a cause for something people don't really need. Its not like other languages are truly horrible or do their jobs poorly, its just Swift is such an improvement over ObjC(sorry if ur an ObjC Fanboy) which is why its soooooooooooo great.
Good stuff, just the kind of arcane wizardly knowledge I was looking for to help me start figuring this out. I suspect you're in the ballpark with this since it doesn't work every time, but I can pretty reliably make it work if I poke around a bit with Instruments. Thank you!
I love Go's standard library and it's been great for my small projects -- especially for web stuff. I think it's unlikely though that the Go authors decide to adopt swift-like features any time soon (mainly given their thoughts on generics).
Is it a specific label in the cell view or the cell itself? Do you want it when the view first touches or after it is completely obscured? This is a quick thought. May be better ways. Implement the scroll view delegate scroll view did scroll. On each message, You can get the visible cells. The first visible cell is the cell touching the top. Get the label within it If you want it to change only when it is fully obscured, then get the index of the top cell and get the cell before it, if there is one. This is not a swift question. 
Have a reference to the label. In scrollViewDidScroll, check the y position of the label to see if it's below the navigation bar.
There is definitely precedent for apple open-sourcing things. The osx kernel is open source (although they probably bad to do this since the two kernels it's derived form are both open source). GCD is also open, and Linux and windows ports exist. LLVM and clang are, iirc, mostly open source because their creator wouldn't agree to work for apple otherwise. Their creator is Chris Lattner who is also the guy who came up with Swift.V
Microsoft has been making some very bold and smart moves lately with open sourcing (and cross platforming) things. I really feel Apple needs to step up their game and do the same with Swift. Its 2015 and this is the future. 
Nope. In your particular case, you would do something like the following: if userResponse.compare("hello", options: .CaseInsensitiveSearch, range: nil, locale: nil) == NSComparisonResult.OrderedSame { &lt;your code here&gt; } This matches userResponse to "hello", "hEllo", "hELLO", "HELLo"... etc etc. The CaseInsensitiveSearch option basically specifies that you want to compare the userResponse variable to "hello" and ignore upper/lower case. You can perform an OR operation in the options field to include other things like ignoring diacritic marks or using regex matching.
Oh god, that would be beautiful.
&gt; Its not like Java ... [is a] truly bad language... Yes, it is. Well, not the language necessarily, but the JVM *is* truly bad. (Edit just fixed formatting)
Why does it matter if the development language is open-source and cross-platform or not?
I wasn't aware of that. I don't how I feel about open-sourcing it either, but I agree that knowing Apple I don't see it happening. 
Thanks, I'll check that out as well. Haven't looked at the code yet since posting this question (stuck at my "real job"), but I'll add this suggestion to the list.
Swift being open sourced won't change what can run on the iPhone. Unless the device is jailbroken, every byte of code that runs on iOS has to be signed by Apple. 
&gt; Correct me if I'm wrong, but I believe that Steve Jobs didn't want "outsiders" creating applications for the iPhone because he thought that it could "mess it up" by infecting it with viruses, or pollute its integrity. This makes no sense. That's got nothing to do with being open-source. &gt; The only reason Objective-C went that route was because Phil Schiller was pressing Jobs to change his mind. Objective-C dates back to the early 80s. The open-source implementation Apple started out with was open-sourced at NeXT before Apple bought them and before Phil Schiller had anything to do with it. &gt; I think Swift is a breath of fresh air and is a step away from the sullied open sourced Objective-C language. Apple had the choice to work on Objective-C in a closed-source manner and they deliberately continued to work on it in the open. It wasn't "sullied", it was deliberately managed this way by Apple.
To start off with, the Swift toolchain is very buggy and incomplete at the moment. Right now, Apple are the only ones who can fix that, and they aren't going very quickly. The more people who can work on it, the better it is for us. Aside from that, one of the first things that is likely to happen is that it will be ported to other platforms. This would mean a much larger developer community full of people writing software in Swift. That, in turn, means more useful Swift libraries that iOS/OS X developers can use.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Software architecture**](https://en.wikipedia.org/wiki/Software%20architecture): [](#sfw) --- &gt; &gt;__Software architecture__ is the high level structure of a [software system](https://en.wikipedia.org/wiki/Software_system), the discipline of creating such structures, and the documentation of these structures. It is the set of structures needed to reason about the software system, and comprises the software elements, the relations between them, and the properties of both elements and relations. The *architecture* of a software system is a metaphor, analogous to the [architecture](https://en.wikipedia.org/wiki/Architecture) of a building. &gt;Software architecture choices include specific structural options from possibilities in the design of software. For example, the systems that controlled the space shuttle launch vehicle have the requirement of being very fast, and very reliable, in principle. Therefore an appropriate [real-time computing](https://en.wikipedia.org/wiki/Real-time_computing) language would be chosen. Similarly, multiple redundant independently produced copies of a program running on independent hardware and cross-checking results would be a software system architecture choice to satisfy the need for reliability. Software architecture is about making fundamental structural choices which are costly to change once implemented, i.e., which are used to 'house' the more changeable elements of the program, e.g., an operating system. &gt;Documenting software architecture facilitates communication between [stakeholders](https://en.wikipedia.org/wiki/Stakeholder_(corporate\)), captures early decisions about the high-level design, and allows reuse of design components between projects. &gt; --- ^Interesting: [^Architectural ^pattern](https://en.wikipedia.org/wiki/Architectural_pattern) ^| [^Apache ^Gora](https://en.wikipedia.org/wiki/Apache_Gora) ^| [^Software ^architecture ^analysis ^method](https://en.wikipedia.org/wiki/Software_architecture_analysis_method) ^| [^UIMA](https://en.wikipedia.org/wiki/UIMA) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cqqr10k) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cqqr10k)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
&gt; To start off with, the Swift toolchain is very buggy and incomplete at the moment. Right now, Apple are the only ones who can fix that, and they aren't going very quickly. The more people who can work on it, the better it is for us. I thought Apple was doing an excellent job of pushing Swift forward relatively quickly while remaining firmly attached to their original goals. Apple may already plan to open source once it is relatively stable and they can be more confident that no sweeping changes will need to be made. Aside from that, I totally agree. Swift is only barely a defensible choice for Cocoa &amp; CocoaTouch projects - everything else should be written in a portable language.
It's generally accepted that you should not store "crucial" information in the user defaults as it can be altered by the user. You may want to consider using the keychain.
Rofl jvm is one amazing piece of technology, what are you even talking about?
&gt; I hope they don't do what ms is doing and just open sauce one small aspect of one small part with a very ambitious licensing deal They open sourced the C# &amp; VB compiler platform, the runtime, their building engine, and a subset of the standard library, all under MIT licenses, with promises to not sue for patent infringement for the covered code. I'd say this is pretty significant, dude.
If the language is cross-platform you can unify one code base for multiple devices, that reduces the amount of work to accomplish things like mobile &amp; desktop apps by a lot. That's not accounting for the fact that you'd probably need to deal with a library for each platform, though. Making it open source helps maturing it because multiple programmers working on different stuff can contribute to improve certain use cases that they face, and more devs means more surface area to cover (also more noise, though), plus, if the company that owns the tech decides to give up on it at least the community can continue applying patches to fix bugs and stuff.
This typically occurs if you have a variable that is an optional and its coming in nil. You cannot compare a variable to nil as a BOOL by checking is Object == (value_that_is_nil) unless you do it directly, albeit I remember in Swift Beta that was not possible. This is really as much help as I could give you from what you have posted. 
Is there anyone's information I could give you? 
Post your code on Gist or stackoverflow showing how those objects are declared, and instantiated. 
"Cannot invoke getBoolean with argument type (string)" I don't think getBoolean is a function in swift. This is really strange, once you type "currentUser()" then hit the dot, i can access every attribute of the user table (The object ID, their username, password, email address, date they created the account etc), but not the emailVerified field.
This becomes an incredibly hairy situation. After you use a model, the next time you load entities with that model, if it's different it throws an exception. Are you wanting to manipulate model structure once? What's your migration strategy between models, if you are wanting to manipulate the model more than the first time the app is opened? You could always just use a form of string storage (read and write JSON to a string attribute). This would allow the contents to be dynamic, it would just require you writing get/set accessors. What's your use case for dynamic models? EDIT: The store coordinator doesn't care if you are manipulating existing entities or adding new ones. If the momd file version doesn't match what the existing entities were created with, it throws an exception.
You should build your own app. Have a persistent problem or something you deal with that an app could solve? You finished a (what I'm sure was a great) full course on iOS. You could do another course but chances are they'll cover a lot of stuff you already know. It's time to build your own projects and learn a ton from the specific problems you encounter. 
What does it say in your debug console? It may say something like "Fatal: encountered nil while unwrapping an optional"
I'm hugely biased, but my own free Swift training course is worth trying: [Hacking with Swift](http://www.hackingwithswift.com). It's project-based, meaning that you build 20 iOS apps and games as you follow along, and it's got a smooth learning curve so that you're always learning something new.
At the risk of sounding like a (massively biased!) broken record, you could try my own Swift tutorials: [Hacking with Swift](http://www.hackingwithswift.com). They are free, but more importantly they are project-based so you learn all about Cocoa Touch and Swift while you're making real apps.
Here you are! https://www.udemy.com/ios-8-and-swift-how-to-make-a-freaking-iphone-app/?couponCode=reddit3
The universal answer for all these "what now?" questions is: Build an app and put it into the store. You will only learn the basics by following tutorials, courses and books. These things usually stop just before the real world problems start. But once you have the basics you are capable of learning on the go. Find a problem that relates to yourself and create an app for it. It doesn't have to be unique (more unique than a fart app though), it doesn't have to be complicated. Just find something real that you put out into the world. 
I am doing this exact thing quite literally as we speak. The only thing that changes when you go live in the App Store is that Parse will use your production APNS certificate instead of the development sandbox one. As long as those are both uploaded in Parse, everything should be fine.
I'm far from a designer but here's some feedback which I hope will be helpful: 1. The arrows pointing down made sense seeing as you start from the top of the tableview and scroll down. The arrows pointing up on the other hand was somewhat confusing. For example: say you're starting at the Wheatley Church stop and heading to the Brookes University B5 stop. In this case, the arrows are pointing down (because it's in the direction of Wheatley Campus -&gt; Harcourt Hill Campus). You find the Wheatley Church stop somewhere at the top of the tableview and scroll down to find the Brookes University B5 stop, your final destination. Now say your going in the opposite direction (Harcourt Hill Campus -&gt; Wheatley Campus) from the Brookes University B5 stop to the Wheatley Church stop. Since you're just switching the direction of the arrows (from down to up) instead of the stops, the user has to scroll down to the Brookes University B5 stop and then scroll up to the Wheatley Church stop. One solution to this problem is to always keep the arrows pointing down. When the user is going in the direction of Wheatley Campus -&gt; Harcourt Hill Campus, show Wheatley Campus as the first cell all the way down to Harcourt Hill Campus as the last. When going the opposite direction, just switch the order with Harcourt Hill Campus as the first cell. This direction switching stuff kinda leads into my second point. 2. The page indicators at the bottom do not give enough context. I didn't know the next page contained the opposite directions until you swiped over and explained what was happening. This is important information but it feels like it's hidden. Something you might want to consider is taking the [Apple/Google Maps approach.](http://i.imgur.com/iJkhfYE.png) You can switch directions (Wheatley Campus -&gt; Harcourt Hill Campus or Harcourt Hill Campus -&gt; Wheatley Campus) pretty easily with the tap of the button. When you switch directions, just reload the tableview and display the stops as mentioned in the first point. 3. The U1/U1X thing: it seems like the X version of the U1 bus doesn't have any unique stops when compared to the regular version (the stops are always between Wheatley Campus &lt;-&gt; Harcourt Hill Campus). What you can do here is, on your bus stop cell, show both the U1/U1X times if applicable. Example: take the Headington Shops stop at 0705. Both U1 and U1X stop here so you can display the three most relevant times for each (U1 is 0705,0725,0747 and U1X is 0712,0812,0912 which kinda sucks but they are the closest). Another example: the Oxford, Speedwell Street S1 stop. Only the U1 stops there while the U1X skips it so only the U1 times are applicable here. 4. If there are other "bus flows" (besides Wheatley Campus &lt;-&gt; Harcourt Hill Campus), you can have a tableview menu where you select your bus flow and pushes on all of the info from above. 5. The Weekdays/Saturday/Sunday thing: that's also something you might want to explicitly state somewhere on the bus stops view so that the user knows they are viewing weekday times and not weekend times.
My guess? Swift will stay closed source. And Apple will complement CloudKit with the ability to run code on their server. 
This looks like another goldmine, can't believe thses are free. Will go through a few soon, thanks
Thanks for all the great replies. I agree the next step is to start building an app of my own. It gets me excited and terrified, but I will try and see how it goes! haha
I've got one game on the store and another currently awaiting review for its 1.0 release and I'm STILL going through Hacking With Swift because it's a great way to stay sharp. That, and since my games are SpriteKit based, I haven't done a whole lot with UIKit in a while. This stuff is golden.
Doesn't have to be - http://elementscompiler.com/elements/silver/ - "With Silver, you can use Swift to write code directly against the .NET, Java, Android and Cocoa APIs. And you can also share a lot of non-UI code between platforms." I grant you though, it would have been nicer if it initially wasn't OSX exclusive. 
Usually this happens because you used an implicitly unwrapped optional (variable like Int!, String!, etc) which was nil. Implicitly unwrapped optionals need to be non-nil whenever you use them. One of the two views on that line is nil. If you update to the latest Xcode this issue may just go away ‚Äî newer Swifts are smarter about not unwrapping when you use ==.
I'm writing a framework with with persistent storage similar to Parse's (i.e. you give it an object represented as a dictionary, specifically JSON in my case). I went with CoreData because there is potentially a significant amount of data and I want the ability to query all of it. There are no relationships between the objects, so I thought it wouldn't be too bad. And actually, I got it to work. I copy the NSManagedObjectModel, add the new entity, and then migrate. Since I'm simply adding a new entity, I can use a lightweight migration, and it basically did everything for me in ~10 lines. Then I recreate the NSManagedObjectContext and NSPersistentStoreCoordinator with the new NSManagedObject model.
Never mind... found it. https://www.udacity.com/course/intro-to-ios-app-development-with-swift--ud585
I've been doing Swift since late December. I own and read all of Ray Wenderlich's Swift books, and it took me 3 months to digest it all at 8-10 hours a day with a 2yr university comp science background. I recommend you looking at those if you ever need study materials. They cover a very broad scope of techniques that will really help you understand all the mainstream frameworks. After reading (and understanding) all their books, I have been exploring frameworks on my own (such as health kit) with relatively little problems. 
&gt; You're going to have to have to know Objective-C to really know Swift. Swift may not carry the "baggage of C" like Objective-C, instead it carries the baggage of Objective-C. There are all sorts of quirks in the language to make it compatitble with the objc runtime. I'm not aware of any "quirks" of the language that were introduced just to make it compatible with Objective-C. Will you point one out for me?
It crashes every time I click on Storyboard. I'm downloading the new beta version to see if it'll help.
Are you by any chance overwriting your original socket variable with the new instance? After the second connection is established, can you check that a reference still exists to the first? This is a bit of a shot in the dark, I've never used this particular framework.
How do you know that the old socket is still connected? I agree with /u/Stephen110, kinda looks like you're overwriting the old socket. I don't see any issue with dispatch_get_main_queue.
to /u/jasamer and /u/Stephen110 i don't think i am over writing it, i have it stored in var Liststucture = [serverlist]() which is a structure with basically the server ip and a socket, it looks like this struct serverlist { var Serveraddress = String(); var socket = GCDAsyncSocket?(); } and when i run println(Liststucture[x].socket?.isDisconnected) println(Liststucture[x].socket?.connectedHost) with x = 0 and x = 1 it shows both as isdisconnected = false and connectedHost with two different ip's 
I understand that by initializing an object and assigning a value to one of its properties doesn't actually change the original objects property/variable; what I'm having trouble with is this part: &gt; That code didn‚Äôt change Rover‚Äôs name; it changed which dog was inside the dog2 shoe‚Äê box, replacing Rover with Fido I don't understand what he means by that. If he made dog2 = dog1 and now dog2.name is Fido, did he not change the name property of dog2 to equal "Fido"? What does he mean by "That code didn't change Rover's name"? Yes it did, if you type in println(dog2.name) it changes from Rover to Fido... 
There are still 2 instances of Dog in the system. One has the name Fido and the other has the name Rover. It just so happens that the dog1 reference and the dog2 reference are both now pointing at the instance we originally referred to as dog1 which has the name Fido. So nothing about the Rover instance ever changed. We just don't have any references to it any more. If you change dog1.name or dog2.name you will be replacing Fido with whatever you assign.
That's almost right. Except dog1 points to a Dog, and dog2 points to a Dog, and you happened to point them at the same Dog. _Not_ dog2 points to dog1, which then points to some specific Dog. When you do `dog2 = dog1` dog2 is now set to whichever Dog dog1 was pointing at. If I were to now point dog1 to a totally brand new Dog, with `dog1 = Dog()` and let's name that brand new dog: `dog1.name = "Spike"` then dog2.name is still going to be "Fido." edit: I like the name Pluto too much.
Let's not bring Pluto into this. 
Got it, thanks so much for the help guys! 
Once you make dog2 = dog1, is there a way to find "dog2" again? Because you lost reference to it, so you couldn't ever free it from memory right?
That's an optional on the array, rather than the type of array. It means the view may or may not actually contain subviews. If it does, you get an array of views, if not it returns nil. EDIT: I interpreted your ? as asking why an optional was returned. 
This is a really basic aspect of writing code for iOS, and likely an entire app in itself. You should read up on [UITableViewController](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITableViewController_Class/index.html), the [delegate](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITableViewDelegate_Protocol/index.html#//apple_ref/occ/intf/UITableViewDelegate) and [data source](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITableViewDataSource_Protocol/index.html#//apple_ref/occ/intf/UITableViewDataSource) and come back with more specific questions after you've tried a few things.
How would it work if you would subclass UIView to MyUIView and add that as a subview?
There are many great JSON libraries out there for swift right now. I assume what you're pasting is your output from the xcode console. You need a way to save these parameters, and only then can you focus on moving around data to tableviews and cells. I've had a good time using SwiftHTTP for http requests and JSONJoy-Swift for responses. 
oh absolutely, its a life saver. Just wish that Apple would put as much love into the dev UX in XCode as they do towards the iOS UX.
&gt; let firstAndLastNamePredicate = NSCompoundPredicate(type: NSCompoundPredicateType.OrPredicateType, subpredicates: [firstNamePredicate, lastNamePredicate]) &gt; Thanks for replying, tried your suggestion, but still no results. Also tried just one predicate for first and last name, still no luck. 
LOL there is SO much of it - at times I kind of wish for proper namespaces again, even those can have their own set of headaches. I remember when .NET first came out and they had the worst package structure ever - everything was buried what felt like 10 levels deep with illogical grouping. 
As a .NET developer who is learning Swift, the hours of effort and monetary investment that MS put into Visual Studio becomes more and more apparent with each day I have to use Xcode. I feel bad at work pushing to get AppCode licenses because all of the native iOS guys think I'm a moron for not being able to "get Xcode". Hey man, just because you married the girl with the lazy eye and herpes doesn't mean we all have to suffer!
Use NSJSONSerialization on the data. Turns it into a dictionary that you can access based on the keys. Extremely straightforward.
Canada's not real
You're only filling the first %@. If you want to use the searchbar text for both params, repeat it in your arguments.
Even with the answer it took me a few minutes, but I got it working. Thank you again!
Java is a hack nuff said. 
now the crashes are more updated...
updating worked! &lt;3 Thx, is the update new, as in today? I reinstalled a couple of times yesterday and it didn't help me
About a week, actually! I was getting desperate towards to the end as well before 6.3.1 came out; half of my projects required about ten launches before I could open them and some refused to open at all without crashing. But all seems good now!
So you can't really do what you want. Instead of returning your confirmation and then performing some action, you need to simply perform that action in the UIAlertAction instances you create. In other words, whatever action you were going to take based on the "confirmation" value you return, just do that where ~~your~~ you're currently setting confirmation to true or false. UIAlertController is an asynchronous workflow. You present it, and then the UIAlertActions take care of the response it captures. I understand this differs from some of the APIs on OS X though, in case that's where you're coming from. 
How would storyboard work though?
Probably the easiest way: [NSUserDefaults](http://www.codingexplorer.com/nsuserdefaults-a-swift-introduction/)
Xcode UI has the smaller cognitive load, that's why people love it so much. Same as the iPhone, same as every other Apple tool, for example, compare Keynote vs Powerpoint. Xcode refactoring is awful and may leave your project in an unusable state, the IDE has crashes and weird bugs on every release. But I only use AppCode to do refactoring and code inspection. Xcode has a low memory footprint in comparison, which is the same reason why refactoring takes so long.
so true idd :D
You can also use [Locksmith](https://github.com/matthewpalmer/Locksmith). With it you can save and load data to/from the iOS keychain. This is probably the best option if you dont want the user to be able to change the stored data. 
A small cognitive load may be a benefit for simple single purpose apps like Keynote. But IDE's are a different beast altogether that have to cover a lot of ground and provide wide swaths of feature functionality. Over and above that point I don't think that XCode has a small cognitive load at all. It's a pretty feature packed IDE. To be blunt it's just not well designed. Those who prefer it do so only because they've invested enough years in it and have learned to accommodate its poor design and have developed change blindness towards that poor design.
I can't believe that you'd made all of that free. I just started learning Swift-- I'm a total beginner-- and this is like coming across a goldmine. Thank you!
I'm glad you like it, and I hope it proves useful to you! Please do pass on the word to others ‚Äì I'm good at coding and good (I hope!) at writing tutorials, but I'm *terrible* at marketing what I've done :)
You should check out the [UIResponder touchesBegan:](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIResponder_Class/index.html#//apple_ref/occ/instm/UIResponder/touchesBegan:withEvent:) method. Basically, you implement this method in your UIViewController class and will be called automatically everytime the user presses down on that ViewController. EDIT: there are also the touchesMoved and touchesEnded methods
I agree with you. I used Locksmith in my app and find it to be the better option compared to NSUserDefaults and Core Data in terms of features and complexity. 
You can either set a different method to be called for each addTarget or set a tag on the button which just takes an Int value: var button = UIButton() button.tag = 101 Then in the action switch over the Tag value to find the correct functionality to be called: switch(sender.tag){ case 101 : println("Hello1") default : println("Hello2") }
Your question isn't very clear, so my only advice is to read "The Swift Programming Language".
Are you using a custom split view, or apples UISplitViewController? If it's a custom split view, then you can set a width constraint on a view from the Storyboard/XIB editor.
I see your point but I think this boils down to user preference. As you said people create attachments to their iPhones due to the UX - but that statement is also true for Android users. Many see all the things that you would label as distractions as value added features for them in their UX - again user preference. I think its fair to say that no IDE will do the "real work" for you that occurs in your head. But I enjoy IDE's that put the best thought and design into the ancillary parts of the work flow and allow that "real work" thought process to flow more freely and uninhibited. For instance, let's look at how errors are handled. In XCode, when you get an error while coding you have to: 1- grab the mouse 2 - position the cursor carefully over the squiggly line 3 - read the message 4 - reposition the cursor in the code editor OR 1- grab the mouse 2 - position the cursor carefully over the red stop sign error icon 3 - read the message 4 - reposition the cursor in the code editor OR 1- type cmd 4 to bring the issues navigator into focus 2- read the message 3 - type cmd 1 to go back to the project navigator view 4 - grab the mouse 5 - reposition the cursor in the code editor 5a - repeat steps to review the message again (if needed) In VS if I get an error while coding I have to: 1 - glance down to the bottom of the screen and simply read the message in the error panel that VS allowed me to pin there when I customized my layout (as we all know XC allows very little layout customization). Which would you say carries a heavier cognitive load - XC or VS? Which flow takes me out of the "real work" zone and disrupts my thought process more? And that example is just one of many. Maybe going thru those flows is no big deal for you - but it is for me. In the end, we all work differently and place different values on certain features and I appreciate tools that accommodates those variances amongst developers and doesn't force the dev to work in, what may be for them, an inefficient manner.
You could have a variable that is incremented each time the button is clicked. You can do this in the function the button is connected to, typically through interface builder specified by @IBAction. It's not really a large amount of data. It takes up as much memory space as an Integer, or more depending on how many variables you want to use.
Looks like you want to familiarize yourself with some of the cocoa/UIKit libraries. First thing to ask yourself is what exactly you are looking to achieve. Eg you want a navigation bar that lets your navigate back and forth through different views, so then you can look up 'navigation' in the Xcode documentation (shift + command + 0) which should bring up something like UINavigationController. In there is listed different method calls you can use and a description of what they do. Another more holistic way is to simply browse through various apple programming guides. They are actually quite good.
I'll make a project for you in swift, shouldn't take more than 5mins
I appreciate it!
Here, the new project with the dates listed [project button masher now with dates!](http://s000.tinyupload.com/index.php?file_id=26090594346947663308)
I belive you can only write certain fields to that metadata dictionary, not just any arbitrary key/value pair you want. Check out the ImageIO framework. It has constant strings for all of the subdictionaries (Exif for example is kCGImagePropertyExifDictionary in Obj-C) and each key within the dictionaries (kCGImagePropertyExifISOSpeedRatings for example). You might need to stuff your personal data into something like Exif.kCGImagePropertyExifMakerNote or Exif.kCGImagePropertyExifUserComment. Hope this helps 
Wow impressed you came up with this so fast haha this is neat! I'm going to study how you did this and see if I can implement it in mine!
Thanks! I will probably have some more questions so thanks for offering to help!
Not sure if this is what you want, but I did this override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { if segue.identifier == "PopularDetails" { let detailsViewController = segue.destinationViewController as! DetailsViewController let selectedIndexPath = popularTableView.indexPathForSelectedRow() let shot = shots[selectedIndexPath!.row] detailsViewController.shot = shot } } then in DetailsViewController i added a variable var shot: DribbbleData! and right after viewDidLoad() i put let url = NSURL(string: shot.thumb) let data = NSData(contentsOfURL: url!) let image = UIImage(data: data!) self.detailsImage.image = image It loads a different image depending on which was selected. Just be caseful you have to actually select a row before clikcing "View More' otherwise the indexpath will be nil when and your shots[indexpath.row] will throw a crash 
Yup, this was the fix. Thanks a lot guys!
The easiest way of fixing this would be embedding your container view controller in a navigation controller context. That way, there is automatically a navigation bar added, and automaticallyAdjustsScrollViewInsets = true starts working its magic. On top of that, it would probably be easiest to just go ahead and use a full-fledge UITableViewController, still embedded in a UINavigationController context. Generally, automaticallyAdjustsScrollViewInsets works for any sort of UIScrollView, therefore for UITableViews, too, because they subclass UIScrollView. The only prerequisite for that is that your view controller's main view be said scrollview. As to views that are not scrollviews, but simply views, I'm afraid there is no general go-to-fix, except maybe embedding them as subviews of UIScrollViews.
The view is not being set to the minimum width value because the initial width is defined as a larger ratio of the app window width. Adjusting the left custom view width property to equal to 100 causes the view to initially appear at a width of 100; as long as the actual window is of the same size as the view inside the storyboard. 
Every time I click on Storyboard it crashes. Does anyone else have this problem? I'm using a MacBook.
Congrats on releasing your first product!
hey thanks so much man :) 
thanks! 
Swift was my first language, besides a little bit of C# at a school game development program (which is unfortunately very basic). I found it super easy to learn (as far as programming goes) just using free resources such as raywenderlich.
How many hours a day/week did you spend learning for 9 months?
It was on and off really.. sometimes i would spend all day programming and some days i didn't have time at all
It might be best to handle the user input in one handler. I used alert.style to differentiate between the cancel and default here func createAlert() { var alert = UIAlertController(title: "Proceed", message: "Do you want to proceed?", preferredStyle: .Alert) alert.addAction(UIAlertAction(title: "Cancel", style: UIAlertActionStyle.Cancel, handler: {(alert: UIAlertAction!) in handleButton})) alert.addAction(UIAlertAction(title: "Confirm", style: UIAlertActionStyle.Default, handler: {(alert: UIAlertAction!) in handleButton})) //present AlertViewController here } func handleButton(alert:UIAlertAction) { switch(alert.style) { case .Cancel: println("Cancel") //Cancel stuff here case .Default: println("Default") //Default stuff here default: println("Error") //Should never get here //print error } }
I've got an alarm clock app out on the App Store. What in particular are you needing help with?
No, navigation controller (from the object library). I have fiddled with all the opaque/translucent nav bar settings too. This is a really frustrating error and I wish apple would correct it (if it is indeed an error).
I personally would track this in a sqlite database, so with indexes etc.it will be nice and fast for your reports. You could also do coredata wich amounts to a similar thing, but I prefer using sqlite directly.
Thanks! I saw your app too on this subreddit, It's pretty sweet!
Lol sounds like you were pregnant with swift. Downloading... It's pretty cool!
Thank you for this hint. I'll try it that way ;-)
No , I've got some experience with php an jquery.
Depending on how you coded your model data. If you have a separate file handling all the data, using a shared instance/ singleton would be useful. Else, I think you might need share a bit on how you're going back to the original view controller. Are you dismissing the second view controller when it is done with what it is supposed to do? Or did you segue back to the original view controller.
If you segue back to the original view controller you'll be initialising another instance of that viewcontroller in your 'stack' of viewcontrollers, that might be causing an issue. Generally what I understand (I'm just a college undergrad, so I only have some experience! &gt;.&lt;) is that you would want to dismiss the viewcontroller instead, else you might have memory issues/leaks later on. With regards to your problem, you can try passing the parent (original) view controller to the second one, by doing something like var svc = segue.destinationViewController as! SubmissionViewController svc.positions = items svc.parentViewController = self Update the parent view controller data inside your submission view controller, and dismiss it when it's done. 
I appreciate this so much. Ive been having issues with that for a while. Its working beautifully now. :)
Have you tried using an unwind segue to go back to the view controller that presented the child?
That's sounds like a way better way of doing it. I'll definitely try that out. 
As well as the already-mentioned Pixelmator, there's Sketch by Bohemian Coding which is more focused on UI design (creating buttons/UI graphics, not good for editing images), but is more expensive than Pixelmator, though significantly cheaper than Photoshop. Gotta add, Sketch is vector-based and can auto-export @2x and @3x (or any scale) assets for you.
Came here to say this. Unwind segues were made for this.
To learn the basics, search for any tutorials on youtube/web, I used: http://www.raywenderlich.com/swift-language-tutorials https://www.youtube.com/user/SkipCasts?spfreload=10 After about 2 months I had about 20 folders full of tutorials projects, and i recommend you do the same to learn the basics. After that, start building small games and work your way up! I highly recommend searching for problems at StackOverflow as that was super useful, but I honestly don't recommend asking questions unless you ABSOLUTELY have to. There were a few times where I either wanted to just give up or just ask people but if you stick it out you can usually find your answer eventually. That is, if you're not building some kind of MMORPG :p Good luck!
Yes so many times I really wanted to just NOT implement a feature but I would just browse the web all day looking for people who have had similar problems. Usually though, they would be in Objective-C so i would have to kinda 'translate' it into Swift. A few times I thought about asking a question on StackOverflow but honestly I don't think people should do it unless they're super desperate.
I just feel like you should really try figure it out on your own before trying to just ask people. I guess there's nothing wrong with just asking, but I guess part of the challenge is figuring it out for yourself, and that's where I learnt the most.. 
In ObjC, I'd use a delegate. Depending on the data you're sending back to the previous VC, you can set up a delegate protocol, and set it as a (weak) property on the 2nd VC. And set up your method signature on the first VC to accept the data you'll need. Call the delegate method right before you dismiss (or in the unwind segue method). And bam! You got some dataz. Edit: You can also look into an MVVM design pattern. Which will seperate the data (view model) from the view itself. 
That is the same thing as saying you have no programming experience at all. I'd take the suggestion seriously related to reading the Swift Manual. Maybe also download the Free online course from Stanford on iTunes. The problem as I see it, is that you need to refine your knowledge about programming in general. 
Well, when they call something an official release and not a beta, better quality is expected... Now that I fixed my compile errors XCode just freezes completely when I start a build. So i have no idea what is wrong. I think steve jobs died and all of their quality control did with him as well.. :(
Have you tried deleting the derived data ?
Have you considered Dependency Injection?
Just to be clear, unwind segues (with the exit icon in the storyboard scene) do NOT push another view controller onto the stack when going back to the parent vc, right? I‚Äôm working on an app and it all uses a storyboard, so I‚Äôm wondering if I should be concerned.
Grow the fuck up already
Always delete your derived data between Swift releases. 
Yes, unwinding does not push a new view controller! It literally *unwinds* to a preloaded viewcontroller previously
I would recommend using a delegate protocol instead of a direct strong reference to the parent view controller. 
I am thinking about it for future games.. for my first game I thought SpriteKit was probably the best to use as it was built into Xcode. Have you had experience using it? I've checked the website and it looks like some games that I play have been made with it! 
GIMP is a decent free way to learn how graphics software works and is very powerful if you know what you're doing. It's not Mac native or user friendly though, so be prepared for frustration.
AffinityDesigner and Pixelmator
Be warned, Apple's multipeer connectivity framework is *super* buggy and frustrating to work with. There are plenty of blog posts that talk about all of it's shortcomings and unexpected behavior. Are you sending that string both directions, or only from one device to another? Airdrop works much better than the P2P framework, but it only works one way. All of that said, here's the basic flow (assuming you aren't building a game that can provide a UI for creating a new session vs joining an existing one). I don't remember all of the method names off the top of my head, but this is the idea: To connect two devices, one needs to be the host (advertiser), the other joins its session (browser). There is no way of knowing if there is a host nearby without being a browser, so each phone will need to have a browser AND advertiser running. Once one of them finds the other, they have to decide which will be the host and which will be the peer, the easiest way to do this is compare device names and whoever comes alphabetically first is the host (yes, this is actually what we have to do). Once that is sorted out, have the Advertiser invite the other phone, which will await it's invitation. Once it receives an invitation, have the peer connect to the phone it received the invitation from. Then, you pray that everything worked, and that the connection will actually happen (spoilers, it might not). Once connected, you can send messages back and forth with whatever data you want, provided they stay connected. If there is anything specific you're stuck on, I can help with more detail, but without knowing the details that's the basic overview.
Github
Hey Thanks for the reply, I know Github has it all but I am looking for a specific suggestion coming from a fellow developer. 
Parse has posted source code for their example apps, try them.
I'm on mobile so can't look at the source code. A few ideas though: If the specified segue identifier is not being found in `-prepareForSegue:`, make sure that you have the correct identifier assigned to the segue in the Storyboard. If the segue occurs and the data appears to be passed but doesn't appear on destination screen, use a property observer ( i.e. `didSet { ... }` ) for shots in the destination view controller to ensure a view refresh occurs after the property is set with the passed data. If you respond with more info, I can probably help narrow it down. 
I would use Swift native arrays until you actually need NSArray. For example: var pets = [String]() // Create empty array of strings // Do array stuff such as... pets.append("Fido") pets.append("Puto") pets.append("Tom") pets.append ("Jerry") // etc. // Cast it to NSArray when you really need it let nsPets = pets as NSArray For the most part, Swift arrays can be used in place of NSArrays. The only reason I use NSArrays anymore are when they have some method/property I need. Edit: To answer your question though: var someArray: NSArray ... someArray = NSArray(array: [1, 2, 3, 4, 5, 6]) // or whatever array elements. You can see the full list of possible initializers in the [NSArray Class Reference](https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Classes/NSArray_Class/index.html#//apple_ref/occ/instm/NSArray/) (filter by Swift at the top)
My [Hacking with Swift](http://www.hackingwithswift.com) tutorial series contains ten full game projects, of which seven are made using SpriteKit. It's also free and updated for Swift 1.2, so there's no reason not to give it a try! NB: the series is written as 30 projects in total, alternating between an app project, a game project and a technique project. You can skip through only the SpriteKit projects if you want, but because the series teaches concepts incrementally it's possible you may miss out on some knowledge. For example, the last game project remakes a classic DOS game called "Gorillas", but it pulls in some Core Graphics techniques to do drawing ‚Äì if you're not familiar with Core Graphics and you skipped project 27, you might struggle!
You've asked an extremely broad question. So, if you want a specific suggestion, you need to ask a specific question.
Here's an open source Hacker News client: https://github.com/NikantVohra/HackerNewsClient-iOS The author posted a thread on Hacker News asking for some reviews of his code: https://news.ycombinator.com/item?id=9479657
Thanks :) I will be adding Canada! I used free resources on the internet. Start by reading Apple's Swift Documentation, then move onto tutorials on the web and youtube. After this, start making your own games!
:)
ah sorry. to be honest it kind of sucks because swift is so new.. I haven't found any really good courses so far..
Yeah I saw that. Is it a book on how to use the language, or how to make apps? 
Yep, dive in. The worst that will happen is you slog through it slowly, which is inevitable. But that's how you learn!
Still working on it, it's kind of a large project. Management software for private practice. Server/client stuff with sockets, some encryption, core data etc. The language isn't the hard part actually, the difficult part is learning the Cocoa or UIKit api's and knowing what tools are available to use.
Seems complicated. Good Luck!
On how to use the language. You still make apps using the same Cocoa APIs that people use with Objective-C and there's a staggering amount of information out there on how to do that.
yeah I agree. hopefully there will be more tutorials and such on the web in the future. 
I think you may have the wrong constraints ? why would it look wrong and what constraints are you using ?
The Swift book from Apple, together with raywenderlich.com helped me a lot. The fact that I had a project with a deadline also helped me a lot, I really had to get stuff done instead of floating around in the learning space all the time.
Rob Percival's Complete iOS Swift Course. Gives you a great introduction to the usage of the language and also some real world apps you can code while you watch his videos.
It was a graduation project where you could configure an iPhone remotely to take pictures on a certain interval. A user would basically go to a webpage and set up the iPhone to take a picture every X minutes/kilometers for the next Y minutes/kilometers. So for example you could go on a road trip and make the camera take a picture for every kilometer you'd drive for the next hour. The pictures were then uploaded to a webserver. You could also use the web interface to view the latest photo and to take a photo "now". It was a pretty cool project to work on :) 
You can definitely use a dictionary to store the values but I'd suggest going down the route of creating a class just for readability. The you can just call the sort() method on the array of the elements of they type of your custom class based on the parameter supplied. http://stackoverflow.com/questions/24130026/swift-how-to-sort-array-of-custom-objects-by-property-value
+1 for SwiftyJSON. It works and was easy for this Swift/Cocoa newbie to use.
For those having the same problem: http://stackoverflow.com/questions/13075415/evenly-space-multiple-views-within-a-container-view
It was a spacing issue.. This solution worked for me: http://stackoverflow.com/questions/13075415/evenly-space-multiple-views-within-a-container-view
&gt; Your code is really Swifty Yeah cause [underscore in variable name](https://github.com/sonsongithub/reddift/blob/master/reddift/Model/Account.swift) is very "Swifty": public var has_mail = false 
Oh...., I have just generated the codes from JSON. Later, I fix it.
Awesome! I am looking forward to the next part! Please keep this up.
They have a free trial for a week I think - this was what I used to learn initial iOS stuff, then just started building. 
This is awesome! Thank you~~~~
Thanks very much for you response! Your answer to #2 makes perfect sense. As for #1, I've been printing out the url that gets passed in and it's looked fine, but I'll add in your methods to validate it. Thanks again.
It's not free, but I've always loved the Lynda.com tutorials. There happens to be a [very good set of Swift tutorials created by Simon Allerdice](http://www.lynda.com/Swift-tutorials/Swift-Essential-Training/180105-2.html) that you might get some value out of. 
These are great!! Currently learning swift and Xcode through Lynda myself. For 25$ a month I can't complain!
Thanks guys! there are a bunch of other tutorials on the page as well . If you are interested in exploring take a look at them here http://shrikar.com/how-to-make-an-app/
This is one of those things that I absolutely love about swift - being able to use the same method name for different parameter types, and having the compiler be smart enough to figure it out based on context. It makes code so much simpler to read.
A bit of an outside chance, but it's *possible* [this tweet](https://twitter.com/andy_matuschak/status/576165108973355008) might help you.
[**@andy_matuschak**](https://twitter.com/andy_matuschak/) &gt; [2015-03-12 23:37 UTC](https://twitter.com/andy_matuschak/status/576165108973355008) &gt; Swift 1.2 compilation not so incremental for you? Overloaded free functions are all dirtied when one's file is modified. Chief culprit: ==. ---- ^This ^message ^was ^created ^by ^a ^bot [^[Contact ^creator]](http://www.np.reddit.com/message/compose/?to=jasie3k&amp;amp;subject=TweetsInCommentsBot)[^[Source ^code]](https://github.com/janpetryk/reddit-bot) 
thx man. It works now!
I stumpled upon the same error while doing this course. You can't override methods in ObjC (you can in Swift but not when you inherit from ObjC class). The Stanford course was made when older version of Swift and Xcode was present and Xcode didn't react on this mistake. It was a bug in XCode that it allowed to override this method. You just should write method with different name to achieve what you want.
Is profileCell a class, or is that a variable? You might be meaning to check cell == profileCell.
Either way is correct. I like to use CocoaPods because that's how I get most of my other libraries/frameworks. It makes it easier to keep track of and remove. 
Is profileCell spelled correctly? Since you try to cast cell to a class (profileCell) I would expect it to be ProfileCell because class names are supposed to start with an uppercase letter.
http://imgur.com/HYa4J5q
I've used the heck out of Swift Pocket Reference and iOS 8 Swift Programming Cookbook.
Google Books is great for getting a good look at most of the book: [iOS 8 Swift Programming Cookbook: Solutions &amp; Examples for iOS Apps](https://books.google.com/books?id=mpU8BQAAQBAJ&amp;lpg=PP1&amp;pg=PP1#v=onepage&amp;q&amp;f=false)
My main goal is to test when a view hits another view or when a views position hits a certain point, to execute a function. Anyone got any ideas? 
Are you seeing the leak when profiling on the simulator or on the device? Sometimes profiling on the simulator can have false positives and otherwise strange results.
Did you... try googling? [parse html in swift](https://www.google.co.nz/search?q=parse+html+in+swift&amp;oq=parse+html+in+swift) returns a lot of results, including libraries, SO questions and tutorials. 
I've found with some of my apps i've made with iAds that even the release version gets a bit laggy if the iAds are present. From what i've found, it happens to all apps no matter if they are made with XCode, Adobe Air or others... The issue seems to lay in iAds giving top priority over all other code in the app. Some people have noticed if they use Wifi instead of a mobile network that their apps stop being so laggy. I noticed this is my latest app that runs perfect without iAds, but runs like a dog if iAds is loaded. Most people find their apps go from about 59 frames per second without iAds to 35 frames per second with iAds. Supposedly there is a fix for people who use XCode by implementing the iAd logic in your UINavigationController subclass that was set in the appDelegate. No idea how to fix it when using other programming languages.
You are correct. Beta review is submitted under the prerelease section in iTunes Connect. 'Submit for review', under the app title is for review to be release to the App Store. 
Programming is a means to an end, a way to solve problems. If you don't have a problem to solve, you'll get demotivated quickly. Find the end: decide to make something cool and learn to program on the way. The problems you'll find making that cool thing aren't anything that haven't been solved before, so you'll be motivated by doing the cool thing and you'll learn how to solve the problems on the way.
Hi! I started to code last September. The way I started was to go on to CodeCademy and start off with some HTML and CSS, both valuable if you later want to create promotional websites for your apps. After that I took the full web developer course by Rob Percival on Udemy. Rob's a very good teacher and coding along while he explains the basic concepts gives you a great first insight. I then went on to another course by Rob, although I am currently not completely through with it. The complete iOS and Swift developer course. As of now I am coding my first app in Swift. So I would recommend that you start of with Web Development on CodeCademy and then go on to add other skills. And the most important part is to practice. Think of an/a app/website that solves a problem you or one of your friends currently has. Or try to recreate your favorite apps or websites. 
I learned the basics through the Complete iOS 7 Development Course on Udemy. It's all videos. The best resource I've come across.
me too. The $200 per month (even if its a couple of months) sounds a bit expensive. It's unclear why the nanodegree is better than other courses online.
You did not include your code in this post.
One of the most baffling traits of the human brain (and I absolutely include myself in this!) is our belief that expensive things must be better. I'm not saying it's always wrong ‚Äì you might find that paying for courses is a great way for you to learn ‚Äì but at the same time, there are lots of free courses out there that you can try first, and only pay if you find the free courses disappointing. My own free course is [Hacking with Swift](http://www.hackingwithswift.com). I did do some videos originally, but with the Swift 1.2 update breaking a lot of things (and Swift &gt; 1.2 perhaps announced in June?) they proved too difficult to maintain. But all 30 projects are there to read as text, updated for Swift 1.2, for no cost. Give it a try, and if you hate it (and others) then by all means pay.
I'll just say that I've been going through your courses and they're extremely helpful. No cruft, just straight to the point, and each project illustrates a very specific set of tools in a clear, easy to understand way. Your best choice was to not include too much in each project, you kept them simple and concise. I would only add that maybe you should suggest titling the projects with something descriptive rather than just by number, because then at the end the user would have a huge set of templates to refer back to. Maybe also take another swing through the projects and correct for spelling and grammar. ;-)
There are algorithms for this, namely [hqx](https://en.m.wikipedia.org/wiki/Hqx), I couldn't find any swift implementations though. Maybe you can find objective-c or c implementations and bridge them. You could even try to implement it yourself. Another option is to generate bigger images using photoshop or something similar, no idea if it would solve your problem though.
Non-mobile: [hqx](https://en.wikipedia.org/wiki/Hqx) ^That's ^why ^I'm ^here, ^I ^don't ^judge ^you. ^PM ^/u/xl0 ^if ^I'm ^causing ^any ^trouble. [^WUT?](https://github.com/xl0/LittleHelperRobot/wiki/What's-this-all-about%3F)
His calculator demo app just about fried my brain. In both how the calculator functioned, and how he coded it. I feel stupid when i re-watch that series.
+1 for Rob Percival's course. It's *excellent*. You won't understand exactly *why* some things are the way they are, but you'll at least know how to build stuff and learn your way around. Follow this up with Stanford's course and anybody should be cooking with gas at that point.
Ok when I get to my laptop I will post my code, thank you! 
I was hoping to find a method without manual scaling in an image editor because I have two dozen images that are all half the size I want them to be
Maybe [this](http://stackoverflow.com/questions/3900474/how-to-scale-up-an-uiimage-without-smoothening-anything) could help you out depending on what exactly you're trying to do
The "let =" pattern is nice because you don't need to unwrap the optional within the if statement. I find it quite readable as well. It's not necessary though, just a convenience pattern. 
I'm not talking about Rob Percival's iOS course. [I'm talking about this one.](https://www.udemy.com/the-complete-ios-7-course-learn-by-building-14-apps/) Rob is great, but he doesn't explain how or why concepts work. The one I'm talking about is much superior. EDIT: I realize this is an Objective-C course. Thought I was in plain /r/iOSProgramming.
Hi. I was signed up to the course for a couple of months. I signed up because I have enjoyed other MOOCs I have done but I find I hard to keep making the time for them around work commitments etc. I wanted to see if shelling out a couple of hundred $ a month would make a difference to my commitment (it did) and because I thought I might enjoy iOS development (I didn't). The course is listed as intermediate but the two sections I covered seemed pretty basic to me, mind you I've been coding since 1984 so... There is a lot of handholding and I think it really is aimed at beginner programmers without the confidence to just pick up a book or find some tutorials and go from there.
Just FYI, they have their own website now. http://bitfountain.io
This is how I got started programming. I built lots of small tools to fill specific needs at my previous job. Having a vision/goal to work towards helps immensely.
I think the if let pattern is nicer because then you can use the variable without force-unwrapping it. In addition, you can use a shadow variable so you don't change naming ( IE: if let foo = foo { } ). The only downside of if let ( IMO ) is that it encourages code nesting for positive outcomes, which I despise. I much prefer to always get my error conditions out of the way as quickly as possible, then continue on with the real meat of the function not having to be needlessly indented. if foo == nil { return; } // now we can focus on the body without indenting 
I'm not an expert with SpriteKit and have only used SKActions intermittently, but from what I can tell when you are setting city.speed = 0 This is only setting your original city object/node's speed to 0, instead of all the city objects that have been instantiated into your scene. A solution instead might be to iterate through your scene's children and if their class matches your city class, then set that child's speed (which should be a city object) to 0. Pseudocode: for childNode in self.children { if childNode.class = city.class { childNode.speed = 0 } } Again, I may be completely wrong in this or there may be a more efficient way of doing this, but it seems right now you are just not setting all the created cities speeds to 0. Anyone please feel free to correct me or add to this. But I hope this helps! Edit: It may help to subclass your city into an actual City object with its superclass being SKSpriteNode. That way when checking your scene's children (like I mentioned in the above for-loop) it will be easy to determine what objects need their speeds set to 0. Edit 2: You may also want to add to the action to make sure to remove the city from your scene when it has reached a certain point. Even though they are off-screen they are still contained within the scene and over time it could dramatically affect performance. I think there's a pretty simple way to do this but you'd have to look in the SKAction documentation.
If you don't need to use `foo` once you know it exists, then use `if foo != nil`. Otherwise, use `if let bar = foo`.
EDIT: Disregard all this part as its valid! { You have curly brackets here: case "x": performOperation1 { $0 * $1 } case "‚ö°Ô∏é": performOperation1 { $1 / $0 } case "+": performOperation1 { $0 + $1 } case "-": performOperation1 { $1 - $0 } case "‚å•": performOperation2 { sqrt($0) } performOperation1 and performOperation2 are functions, you should write them as performOperation(**arguments here**) etc, so: case "+": performOperation1($0 + $1) At least, that's the glaring issue I'm seeing. TBH, I'm not extremely familiar using tuples and $ syntax, but I assume if that's what was used in the tutorial it's fine. } Edit: Also you should change func performOperation1(operation: (Double, Double) -&gt; Double) { to func performOperation1(operation: (Double, Double)) -&gt; Double { as that is the proper syntax for a function that has a return value. Hope this helps!
I put the addChild(city) in the didMoveToView and when I put speed = 0 in the collision function it pauses the background, but before the collision the background is going really fast. 
Read all the top posts about MPC on Stackoverflow. For all but the most simple use cases, it requires a lot of code to work around the bugs. We're pretty close to dumping MPC and implementing our own solution in CoreBluetooth.
You do delete your derived data when you upgrade or it starts acting weird? 
The fact that this is necessary at all seems kind of telling, at least to me. Xcode has come a long way in the last few years, but it's still got some pretty serious issues.
It's not the best IDE, but it's far from the worst. 
Sorry for the downvote train, but as an experienced developer who has actually used other IDE's, I'm fully aware that you're correct.
what I wouldn't give for them to release sane command line tools so that I could just create my own project and build infrastructure, xcodebuild is a monolith from hell, and gyp is a bandaid on a wound too big to cover :(
This post is about the complier, not Xcode (even though they *are* annoying tied together). Please whine about the IDE elsewhere.
Stop whining. 
And you stop being an asshole. Having a legit concern over things that should be patched asap does not constitute whining. 
I was surprised I couldn't find something like this - it seems like it would be common, and swift has already got similar dot syntax pattern matching in switch statements. The only way I could think of to clean that kind of a thing up was to use tuple: (a, b) = (1, 2) (Abcd.text, Abcd.backgroundColor, Abcd.enabled) = ("This cool label", UIColor.blueColor(), true) But you're still writing the name of the object every time. To avoid that, you could use a closure: _ = { (inout obj: YourType) in (obj.text, obj.backgroundColor, obj.enabled) = ("This cool label", UIColor.blueColor(), true) } (&amp;Abcd) And to cut down on that line length: _ = { (inout obj: YourType) in ( obj.text, obj.backgroundColor, obj.enable ) = ( "This cool label", UIColor.blueColor(), true ) } (&amp;Abcd) But something tells me that ugly, unreadable horribleness wasn't exactly what you were looking for. I dunno. Maybe it makes sense if you're editing 8-9 properties at once or something. Sorry I couldn't really help!
90% of Xcode issues are user caused sry to break it too you
I started my career in web development and transitioned to iOS development. Now I've been doing pretty much exclusively native iOS work (and some server-side/API stuff) for a few years, and I don't ever want to go back to web work. I grew to really hate dealing with browser compatibility and web server issues. For me, the iOS platform is a dream. 
Just a fan boy that is blind and accepts everything Apple does without questioning would down vote me. I love Apple in many senses but I have a critical vision and I am not blind to the fact that their developer tools are shit. Apple deals with developers with disdain. Just see the difference in treatment they give to book authors (hardware discounts, same day answer to questions, etc). Note: this is not jealousy because I am also a book author on iBooks and have this privilege, but shocks me the privilege given to one side and not the other. If you have enough years of development, including other platforms, you see how bad Xcode is, how crappy their documentation is, and how awful iTunesConnect is. If you are a newbie with one app on the app store and have not used their tools enough, you may think they are ok. But if you have developed complex applications and have several years of experience with cutting edge applications, where you push Xcode to the edge, you see Xcode tearing apart, failing constantly. I have several heavy load apps, some with 20K lines of code and have launched almost 100 apps since 2008, for iOS and OSX. This makes me see a bigger picture.
I've had a look, and it does seem absolutely great for automating deployment. the step that really grinds my gears at the moment is the actual building of projects though. all I want for christmas is the ability to modify the info.plist at build time to change stuff like the bundle ID and Facebook app ID based on the current branch. it used to work in 2013, which together with the non-crappy Testflight made it wonderfully simple to handle installing parallell feature branches on your own and testers' devices. non-crap asset handling would also be nice, say generating them from PSDs. doing it in Grunt och Gulp is trivial, but in Xcode it requires either doing it manually outside of the standard build, or using weird scrip build phases with either manual input file handling or full rebuilds every time. 
You could also do it like this. Define a function like so: func modify&lt;T&gt;(obj: T, closure: (T) -&gt; ()) { closure(obj) } Then you can call: modify(myObject) { $0.color = NSColor.blackColor() $0.text = "Hello" $0.enabled = true }
No, I meant all book authors have privileges that developers don't. When you login on iTunesConnect using your book publishing account, you see a slightly different iTunesConnect. One of the things you see is phone support, that is something that just now is offered to developers. You also see this link that you can click and buy hardware with discount, up to 2 computers + 2 other things per year. Not to mention same day answers and resolution of problems. Very short review times (from 1 to 3 days top). Regarding to books, my experience as a book author is bigger outside the digital domain. I have 15 books published in Europe, all in paper, cause my publisher hates digital stuff, because it is easy to pirate, as they say. For that reason, I am on both sides. I have a book account and a developer account at Apple but the tendency to favor one side over the other makes me sad, cause developers probably give Apple a lot more money and they are basically the reason why people buy Apple hardware. Even so, developers are completely ignored by Apple.
Nice to hear! I don't have quite as much experience in web dev as you, but I'm just starting to make the same transition. Still nervous about making a big change, but haven't found anything frustrating yet, and sounds like people really like swift.
I don't disagree at all with this. I am just saying you can't become a 'master' at a language by doing a few projects. There are always ways to do things that don't flex all the parts of a language. EDIT: I should have said a 'Specific Portion of a language'
- Your name is Chris Lattner
That's very nice, actually. You need to stick in a few inouts to make it work, though. func modify&lt;T&gt;(inout obj: T, closure: (inout T) -&gt; ()) { closure(&amp;obj) } modify(&amp;myObject) { $0.color = NSColor.blackColor() $0.text = "Hello" $0.enabled = true }
Core Data would absolutely be the way to go, if the data has to persist between sessions. Here is a good tutorial to get you started: http://www.raywenderlich.com/85578/first-core-data-app-using-swift
I had never heard of Realm, that looks pretty sweet. I would stray away from NSUserDefaults for this; although there's not an explicit limit on entries, it could grow out of control and would be a mess to query against ( i.e. get all the locations a user was at yesterday, ordered by time).
Do this. 1. Buy and read all of RayWenderlich's books. Mastering those books will give you a solid foundation to explore on your own. 2. Use iTunes U and study Paul Hegarty's swift course. It'll fill in the holes that RayWenderlich doesn't cover. 3. Develop a habit to read Apple's documentation whenever you aren't sure of something. If you're new to cocoa and swift, it'll be confusing and verbose. But through repetition you'll start to get used to it and it'll become extremely helpful. 4. Explore other resources. For instance, I chose to study HealthKit because I had an app idea. The idea eventually flopped after 3 weeks of research, but through studying HealthKit, I gained extensive knowledge of `NSPredicate` and the ideas of concurrency using the GCD because you need them to make things work. That in turn made understanding other code a lot easier, because predicates and concepts of GCD are used commonly in many applications. This list is by no means makes you a master. But it worked for me to give me a solid foundation that has given me confidence to call myself "experienced". I'm 2 months past this stage, and I'm currently re-reading one of RayWenderlich's books, learning a lot more compared to the first read through. 
Yes, I agree. NSUserDefaults is the least appropriate option but I guess it doesn't hurt for OP to know that it exists.
Can't you save the location object as a whole? That would include the time when it was determined, in addition to the lat and long, which makes NSUserDefaults a little more usable. 
You could write a custom protocol that conforms to equatable. [Relevent NSHipster article](http://nshipster.com/swift-default-protocol-implementations/) From the article: protocol Equatable { func ==(lhs: Self, rhs: Self) -&gt; Bool } struct Article { let title: String let body: String } extension Article: Equatable {} func ==(lhs: Article, rhs: Article) -&gt; Bool { return lhs.title == rhs.title &amp;&amp; lhs.body == rhs.body }
How do you imagine it would do that? Check all the values of the input? That could take a really long time, even for bounded values. Consider if it started checking: 0 + 0 == 0 - 0 =&gt; True 1 + 0 == 1 - 0 =&gt; True 2 + 0 == 2 - 0 =&gt; True ... If you just want to check whether two functions or closure are references to the same thing, then that [seems impossible in Swift too](https://stackoverflow.com/questions/24111984/how-do-you-test-functions-and-closures-for-equality). Why do you want to do this?
I ended up doing pretty much exactly that, matching on what the functions returned. Thanks!
Glad to be of help üòÉ
Do you need to persist these images to the device? If the answer is no, you don't need parse. 
Another vote for Realm, it's amazing compared to everything else I've seen. https://realm.io/docs/swift/0.92.1/ Here's a quick and dirty view as to what it might look like: class Location: Object { dynamic var lat = 0.0 dynamic var lon = 0.0 dynamic var alt = 0.0 } class LocationSaver { let realm = Realm() func saveLatestLocation(lat:Double, lon:Double, alt:Double) { var location = Location() location.lat = lat location.lon = lon location.alt = alt realm.write { realm.add(location) } } 
You may want to try out my new library, it has a lot of examples (everything is written in Swift, currently 1.2) and even a Hello World for you to play with. Very easy to use and highly customizable! Check it out: https://github.com/i-schuetz/SwiftCharts Here is also a video with the current examples: https://www.youtube.com/watch?v=cyAlKil3Pyk
It sounds more like you're looking to use a grouped table view style, rather than plain? A grouped table view has a grey background and extra margins like in your screenshot, whereas a plain table view is completely white and draws borders for "remainder cells" like you describe.
I haven't really read up on core data. what is it that dishes out so much pain? 
when i draw a segue from a tableview cell to another view controller and try clicking it in the simulator it crashes the app and gives me this error *** Terminating app due to uncaught exception 'NSRangeException', reason: '*** -[__NSArrayI objectAtIndex:]: index 5 beyond bounds [0 .. 4]' *** First throw call stack: All im doing is trying to present a view controller modally after tapping a cell in the grouped tableview. 
It's complicated.
[Edit for premature posting. Dammit Alien Blue!] CoreData is handy when you have a bunch of inter-related objects and don't want to mess with all the book-keeping and relationship management. The other place it comes handy is how it's deeply linked into collections and tableviews. But to get it up and running is not for the faint-of-heart. And you have to be careful with multiple threads and blocks. Unless you're using this as an excuse to learn more about CoreData, suggest you consider alternatives. Your model looks pretty simple. Might want to take a look at https://realm.io or one of those libraries that wraps SQLite inside an object-relation mapper.
It seems that your real problem is not with Core Data but with modelling your problem domain. Here are a few pointers re. what you came up with: 1. The name of an entity should not be plural. You have a relationship on "Player", called "People", which is fair. *A player may know many people*. But *people* is composed of *many persons*, which means the entity on the other side of the relationship should not be called "People". Each instance of that entity represents a single "Person". The same applies to "Items" and "EquippedItems". 2. Think about these two terms: "Items", "Equipped Items". Do those two things sound like they're fundamentally different from each other? Not really. An Item is an Item. A single Item doesn't care if the player has been equipped with it or not. Only the player cares about that. So to model your problem in a way that won't make you want to jump off a high rise later, you want to have a single entity called "Item" (singular), with an optional to-many relationship with "Player". What does that mean? It means that you can have a large number of items. Zero or more players may be equipped with that item. From the player's perspective, it has only a single relationship (to-many) called "equippedItems". Keeping in mind that I may have not fully understood your problem domain from the description above, [this would be my alternative design](http://imgur.com/2pkeqoA). Edit: Notice that on the "Item" entity, I have 3 to-many relationships back to Player. That is not necessary, but in my experience, it's always better to have an inverse relationship anyway. It keeps your model more flexible for any future changes.
Thanks, I will fiddle with your suggestion on equipped items. Didn't think of that!
Thanks for the feedback. I'm glad you posted. Will take note.
Pardon my ignorance, but my goal right now is do everything without third party API's. Thanks for the suggestion though.
In my design, there is only 1 player. And that is the user of the app. What I feel uncomfortable with is that there can be multiple Entities, while I'm trying to model the Player as a singleton, because there can only ever be one player (the owner of the device that's playing my app). I don't suppose there's any way to enforce singletons in the Core data model, is there? Anyway, thanks for your design idea. I am taking notes and it makes far more sense than my current model. 
I would model as follows: Entities: - party (either players or store) - attribute: wallet (contains coins), experience pts, etc. - bag (belongs to party) - item (belongs to bag) - type: weapon, gem, etc. - attribute: price, etc. Use relationships/collections to determine ownership: - (party,bag) - (bag, item) just my 2 cents...btw, nothing to do with core data, just modeling...
I believe that doing it the "vanilla" way first does several things, not the least of which is learning to use the frameworks the way they were intended to be used. Also, if a 3rd party framework comes along, I will understand how it works and appreciate any benefits it may have. **Most importantly, I'll know if I even need it at all!** Anecdotal story: I inherited a project once that used a handful of 3rd party libraries to render like 4 view controllers of JSON data and save some basic preferences. Literally thousands of lines. I rewrote it from scratch in around 50 lines. Anybody could have done it. But the dev before me used some common 3rd party libraries because he was told that's what he should do. So he followed blindly. 
I think this one is also worth a look: https://www.bignerdranch.com/we-write/cocoa-programming/. You can get a sample from the iBook store to see if it fits for your needs/level. 
I see. The issue is I am trying to accumulate a dictionary through reflection and then serialize it using NSJSONSerialization. I was using NSDictionary (which only accepts AnyObject), I tried switching to use Dictionary&lt;String, Any&gt; after reading this and that works better for the accumulation, but I need to convert it to an NSDictionary somehow when I call the NSJSONSerialization API. It seems like at some point I need to make my Anys into AnyObjects if I want to use that API, and if that is the case I'll have to convert Int64 into NSNumber explicitly. Is that correct?
Excellent, thank you.
Would be interested in helping. Lead interaction designer and iOS dev at Creativedash. I do a fair amount of UI/UX work as well.
This is exactly the sort of thing I am looking for. I'm fairly new to iOS development so I'm still getting a handle on things, your article is by far one of the cleanest and best I've read so far! Thanks!
It is still horribly slow. My project takes about 7 minutes with about 300 files.
Also horribly slow. At about 22000 lines of code in 100 files, anywhere from 6 to 50 seconds.
That sounds right to me
He's got a really good setup for being able create unit tests for your core data entires. I just ran into this problem right before this was posted so I'm very happy for a nice solution!
Uau, nice.
Looks great how it is integrated within the actual project itself. It would be great if they can roll this out at WWDC! But may just be wishful thinking. Important to note that this is being charged for and is made by an independent company. Apple is working on all of Xcode, which is free.
You can deselect `use subreddit style` on the right. I do this for a lot of subs actually.
This seems like the job of [NSRegularExpression](https://developer.apple.com/library/mac/documentation/Foundation/Reference/NSRegularExpression_Class/index.html) This will accomplish what you're looking for. func removeSpacesAfterPunctuation(string: String) -&gt; String { var copy = string.mutableCopy() as! NSMutableString // Create a regular expression that matches puctuation followed by any number of spaces // and stores the punctuation in a capture group. let regexString = "([.,?!])\\s+" if let regex = NSRegularExpression(pattern: regexString, options: NSRegularExpressionOptions.allZeros, error: nil) { // Replace all of the matches with only the matched punctuation, // disregarding the spaces. regex.replaceMatchesInString(copy, options: NSMatchingOptions.allZeros, range: NSRange(location: 0, length: copy.length), withTemplate: "$1" ) } return String(copy) } let removed = removeSpacesAfterPunctuation("Hello. I am lyinsteve. Test? I hope this works, maybe.") // "Hello.I am lyinsteve.Test?I hope this works,maybe." 
 import UIKit var str = "hello, how are you doing? I am okay. Thanks." let punctuation = NSCharacterSet(charactersInString: "?.,") var tokens = str.componentsSeparatedByCharactersInSet(punctuation) println("".join(tokens)) // "hello how are you doing I am okay Thanks" Also, `NSCharacterSet.punctuationCharacterSet()` exists.
I think the Swift way without further complications would be: let punctuation = Set(".,!?") let space = Character(" ") func removeSpacesAfterPunctuation(var string : String) -&gt; String { var wasPunctuation = false var needsReplacement = false var index = string.startIndex while index &lt; string.endIndex { needsReplacement = wasPunctuation &amp;&amp; string[index] == space wasPunctuation = punctuation.contains(string[index]) if needsReplacement { string.removeAtIndex(index) } else { index++ } } return string } removeSpacesAfterPunctuation("hello, how are you doing!? I am okay. Thanks.") This way is moderately fast, safe, works with Emojis, and not unnecessary complicated.
No worries. Still useful stuff 
Which part of the guide is giving you problems?
This I want to convert this to swift. - (void)viewDidLoad { [super viewDidLoad]; FBAdView *adView = [[FBAdView alloc] initWithPlacementID:PLACEMENT_ID adSize:kFBAdSizeHeight50Banner rootViewController:self]; [adView loadAd]; [self.view addSubview:adView]; } 
You can do it with filter(): func delPunctSpace(var str: String, puncts: String) -&gt; String { for index in filter(reverse(str.startIndex..&lt;str.endIndex), { str[$0] == " " &amp;&amp; contains(puncts, str[$0.predecessor()]) }) { str.removeAtIndex(index) } return str } That function takes two arguments: "str", the string you want to replace the punctuation in; and "puncts", the punctuation characters. Here's an example: let str = "swift. swift swift? Swift swift." let puncts = ".,?" delPunctSpace(str, puncts) //"swift.swift swift?Swift swift."
Here is a whole site dedicated to it : http://metalbyexample.com
The code works but when I run the simulator the ads don't show up. I followed all the steps but the ads are showing up for some reason. 
You have code somewhere that is causing a deadlock on the main thread. If you can reproduce it in debug mode, try pausing execution to figure out what is blocking.
I think I'll reserve judgement until I see how much it slows things down. The FAQs say it won't, but VS is already a massive drain on the system, so it's already slow enough. Having said that, it looks like it's more of a unit test system than an actual run code on the fly system.
http://www.h4labs.com/dev/ios/swift.html?q=metal 
You may have data you're inadvertently relying on that already exists on you dev machine that doesn't exist on the test machine. Try completely resetting the application. I'm not exactly sure how to do this in OS X but for iOS you can reset the simulator. You'll basically want to delete the app and any other files related to it that might have been installed. 
Have a look at the [UIAlertController](https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UIAlertController_class/index.html#//apple_ref/occ/cl/UIAlertController) with the ActionSheet style, should do exactly what you're looking for.
ok, I put in code to signal how far it gets before the freeze, and it's not getting called. The very first line in viewDidLoad after super.viewDidLoad is to change a label value, and that's not happening. So the things I mentioned above aren't even being called.
let numbers = [1,2,3] let exists = contains(numbers, [2,3]) 
I get an error saying "Cannot find an overload for contains that accepts an argument list of type '([(Int)], [Int])'
Read up on asynchronous image loading and caching - it should be done anytime you are working with images from a network - not just with cloud kit.
There's not too much you can do unless you're sure about where the latency is. CloudKit is already entirely asynchronous, so we can move on from that. Make sure that you update UI only from the main thread. Modifying UI from a background thread can lead to weird behaviour and latency. Check the size of what you're downloading from CloudKit. Try downloading just text and see if that's as fast as you'd expect. The sandbox environment is likely slower than production. I can attest to pretty poor sandbox performance for assets I'm trying to download. Changes to your CloudKit data design night yield improvements. Read up on Apple's tips in the CloudKit documentation. 
from the command line, run `mkdir -p ~/Library/Developer/Xcode/UserData/FontAndColorThemes`
Sounds like a job for Sets: let haystack = [1, 2, 3] let needles = [2, 3] let areAllPresent = Set(haystack).isSupersetOf(needles) let missingNeedles = Set(needles).subtract(haystack)
sets make a lot of sense if you're checking for inclusion of element _a lot_, but if you just want to check for one element, or you need other characteristics of an array, it's probably best to just use `contains`.
"Unable to simultaneously satisfy constraints." You have too many constraints. Have a minimum required constraints. And another thing. iOS7 has issues with aspect-ratio constraints. 
Haha yes, some of those comments are from me :-). In the end I had to remove almost all aspect-ratio constraints for the app to run properly on iOS7. 
Try amrc. Way better UI and comments load much faster 
&gt; Have a minimum required constraints. This is really really critical. You have to learn how to specify all the things that need specifying, *and no more*.
Yes indeed. &amp; autolayout learning curve is steep :). 
But worth climbing, IMO.
override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell { if self.resultSearchController.active == true { let cell = tableView.dequeueReusableCellWithIdentifier("CellTwo", forIndexPath: indexPath) as! VenueSearchTableViewCell cell.textLabel?.text = filteredTableData[indexPath.row].name if let rating = filteredTableData[indexPath.row].rating { cell.ratingLabel?.text = String(stringInterpolationSegment: rating) } if let items = filteredTableData[indexPath.row].items { var itemString = items[0] for (var i = 1; i &lt; items.count; ++i) { itemString += ", \(items[i])" } cell.optionsLabel?.text = itemString } return cell } else { let cell = tableView.dequeueReusableCellWithIdentifier("Cell", forIndexPath: indexPath) as! VenueTableViewCell cell.titleLabel?.text = tableData[indexPath.row].name if let rating = tableData[indexPath.row].rating { cell.ratingLabel?.text = String(stringInterpolationSegment: rating) } if let items = tableData[indexPath.row].items { var itemString = items[0] for (var i = 1; i &lt; items.count; ++i) { itemString += ", \(items[i])" } cell.optionsLabel?.text = itemString } return cell } }
Wow, after two hours of checking different things, I finally realized that I used "textLabel" instead of my custom "titleLabel" which was causing the problem -_-
That's true, haven't heard back from my 'bug report' about euro signs not being displayed correctly. If only there was a way to reach the developer easily, but nope.
shit man... I have a Lynda subscription as part of my school tuition but I always thought it was just graphics, never browsed around outside of my degree (fine arts). thank you!
To reduce the barrier of entry to iOS development and lock more people into native iOS only development.
Pretty much! Exactly what Swift playgrounds do, but much less limited, working in the entire project scope as opposed to being confined to a separate environment. Essentially it means you know what's going to happen before you run anything. Much less guesswork, and less cognitive overhead.
I think the other posts are better but if you want a different perspective for loop to create a random number within the range and append that to an array Use a sorting algorithm Set label text as content of array I know it's not exactly thorough but if I posted code then that would defy the point. Nothing crazy complex, anyone should be able to read it and interpret it. Hopefully it helps :)
This usually always happens if my app can't find an audio file or video file, however if your app contains none of these then ignore this comment ^^
Reduce the number of bugs (especially crashes and security issues due to non-memory-safe code).
World Domination!
I hope they pull a Microsoft and release their tooling for other platforms, though that isn't likely. Also, it's crazy that Microsoft is now a very cross-platform company. 
I'm not sure the barrier is lowered all that much. Swift does fix a lot of issues with bugs and un secure code but it also implements a bunch of modern programming concepts many of which can hardly be called entry level. In the end it offers up a good compromise. As to lock in, I really don't think that is the languages intent. It is no more of a lock in than Objective C and like Objective C it is a new kid on the block consolidating a bunch of recent developments. Also like Objective C, Swift is one of a number of new languages that are in play at the same time. 
Swift *is* easier to understand, if you've already worked with Objective-C or other OOP languages. But people who say that it's somehow easier for complete newbies to pick up? I think that's totally wrong. First off, it's a much larger language than Objective-C in terms of built-in features. Objective-C is very spartan and light-weight. And secondly, a number of those extra features of Swift are not exactly super-intuitive to understand, such as optionals, computed properties, and so on. The syntax is far clearer because the language is not bogged down by having to be C-compliant, but that's really the only way in which it's "easier" than Objective-C.
Microsoft is just realizing that they have to be cross-platform to stay relevant; they've had such a horrible time with everything since Windows XP. Vista was a bust, 7 only wowed the gamers, 8 disappointed everyone... Also, Windows Phone has less people using it than Blackberrys and flip phones. Windows 10 is their best hope. The only bad thing about that is that there are no apps on the Windows store worth having and there are so many apps/games on there that infringe upon rules that should exist if they don't already. Also, Candy Crush Saga is going to be installed by default. :P
Over 10 years ago they published NT for other cpus. Same with NeXT. VS Code is just an Editor not really Visual Studio.
in the function you create a variable "var musicPlayer: MPMusicPlayerController = MPMusicPlayerController()" then you can use that instance of MPMusicPlayerController and change some of its properties. in the end you simply return the variable, like this "return musicPlayer"
Most likely you would need your own server with it's own internal clock. External time will be subject to security issues and a host of other problems.
I think they will modernize their frameworks, but it could take a few years. Right now, Swift is just a year after release and I would expect major changes to occur. I don't think Apple will invest a ton of effort into Swift-only frameworks until the language matures and stabilizes a little.
&gt; ssing to detect hey man thanks for that reference... I've just subscribed to their RSS feed. I'll go through the text and come back to you with a few more questions in case needed if you don't mind?
&gt; I'm not sure the barrier is lowered all that much Agreed. Swift is not a small language. It has a lot of rules and it doesn't do anything to simplify Objective-C's most difficult aspect: memory management. I personally think that Objective-C is more accessible because it is focused on a single core concept: message passing. Whereas Swift is a mix of object-oriented &amp; functional paradigms. Plus I like Objective-C's syntax. []4evar!
Do you have access to the GPS? http://gpsinformation.net/main/gpstime.htm But down to the ms, you can just use ntp - http://www.pool.ntp.org/en/ 
Yes, with 15% market share world domination is so close. 
Yeah, I don't mind
I just started learning swift too so don't take my advice too seriously. I think you need to create a Rocket class and in it you can add the fire to the rocket. Make sure your fire.position is relative to the rocket and fire.zPosition is -1.0. Then in your GameScene.swift you can add the rocket and the fire should follow the rocket wherever. 
Isn't there a easier way? 
Cool, deal...thank you! Is there any merit to Odemy course as well or no?
Your groupAction occurs for eternity, thus the sequence never goes past the eternally recurring groupAction. (Hint: look at your wiggle function) (also, you don't need to mark the function as internal because all swift functions are internal by default) :)
I'm building a Mac resource fork viewer in Swift. It originally was ObjC but has been ported to Swift. If you're not familiar, resource forks are parts of a file that were used to hold resources for classic Mac OS apps. The project can play uncompressed sounds via CoreAudio, show PICT images via XPC, show icons, and display a few other types of data. You can download old applications on [macintoshgarden.org](http://macintoshgarden.org) and use this app to view their resources. Still much to do, but it's the only truly modern way to view some of these decade old files! http://github.com/kainjow/ForkView
My ipad app is open source [video](https://www.youtube.com/watch?v=AOcOQOcjiOU) [source code](https://github.com/neoneye/GraphToy/blob/master/client_ios/Helium/App/AppDelegate.swift)
 &gt;Any suggestions for a decent starting point? Ones looking at a course on Udemy. Simply because it's a lower cost entry to get idea of what I'm dealing with. Mind you, I've never done any coding so I'm a complete beginner in the field. Any suggestions are appreciated. The best suggestion I can make, if you are a complete beginner, is to find a viable computer science program to enroll in. That is if there is such a thing online at a reasonable cost. The reason I say this is that a well done computer science program ought to give you more insight into the technology of computer science versus a language specific programming class. Now understand this, this doesn't mean you avoid a Swift specific class! The point is most of the Swift specific class gloss over detail assuming you have some programming and computer science background. As mentioned the iTunes Stanford class is well regarded and free. There are practical considerations too, if you go the full computer science degree route you will open doors for you that aren't likely to open without a full degree. Of course what your goals are here are unknown as is your current educational background. I just think there are real advantageous for almost anyone interested in programming to go the computer science route as opposed to language specific course work. 
Thanks, I have seen this, but I couldn't find any screenshots or sample videos to see what it looked like. Also hadn't noticed there was a swift version under all of the OBC files in the table of contents. I'll check it out.
Awesome, thanks for the link! Does this app use a proprietary API to read the data? I'm really interested in learning more about working with JSON APIs with Swift apps.
Hey, I found some open source apps here http://tutorios.com/posts/LFv2WJBjTqsgERmJ4
I second this. I'm starting with Swift so I have nothing to show for myself, but it will be nice to see what other people are building and feel inspired &gt; motivated and finally jealous because I didn't think of the idea first ;) 
Ryan Poolos reviews user apps every month at Ray's site: http://www.raywenderlich.com/u/RyanMan
I think this is a great idea. 
Could you go a little more in depth on that? Sorry just don't fully understand what you mean
If you set a breakpoint in the code for All Exceptions in the debug view in the left pane, bottom left plus sign, Add Exception Breakpoint, checking All Exceptions, you can get it to break on the bad line number.
OH that! I am now! Let me run it and see if that fixed it
It fixed that problem and replaced it with a breakpoint 5.1
So where I have return cell! ?
You should check if cell is properly allocated. Where are you allocating cell?
Run down line by line what you were doing and I'll see where you went wrong.
I think you need to set the CellIdentifier in the Storyboard.
Can you just reset the data source when your data changes?
Don't start an action within the `update` method, because every time it is called, it cancels the old action with the same key and restarts it from the beginning. Credit: http://stackoverflow.com/questions/21696835/runaction-withkey-not-working-in-sprite-kit (Google first before asking a question ;))
I don't see where the user object gets set in the `LoginViewController`. The `SignUpViewController` has to pass the user object over to the `LoginViewController` somehow. And also to check at start if there is already a user existent you'll have to fetch the data from the store with an `NSFetchRequest`. From your example it's logical that it isn't working.
Built-in animations in iOS (the ones that you can do with UIView.animate...) don't redraw for every frame of the animation. These animations do things that can be done by the GPU; that makes high frame rates possible. DrawRect, however, is run by the CPU, it's not a great idea to run that 60 times a second. If you really need to, you could do it manually - look into CADisplayLink, to redraw your view at a given frame rate. But that's quite CPU intensive. However, depending on what you're drawing, you may be able to get away with built-in animations. If your drawing code draws mostly lines, arcs, etc, one class that could be very interesting to you is CAShapeLayer - it can draw and animate UIBezierPaths. It's possible to do quite sophisticated animations of shapes with that. If you tell me a little bit more about what kind of animation you're trying to achieve, I might have some more tips for you - but it's kind of likely that you can't use your Paintcode code directly. 
&gt; cell?.textLabel!.text = tableData[indexPath.row] I'd bet this is whats throwing the exception - unless you registered a nib with the reuse identifier "Cell" somewhere else in your code that you didn't post, cell is going to be nil. &gt; UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: "Cell" ) This isn't doing anything, you are initializing a table view cell, and not assigning it or doing anything with it Try this... func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -&gt; UITableViewCell { // Use something more descriptive for your cell identifiers var cell = tableView.dequeueReusableCellWithIdentifier("DefaultTableViewCell") as? UITableViewCell if cell == nil { cell = UITableViewCell(style: .Default, reuseIdentifier: "DefaultTableViewCell") } // Configure cell - we can use cell! because we used a UITableViewCell initializer above if the cell was nil cell!.backgroundColor = UIColor.clearColor() cell!.textLabel?.textColor = UIColor.darkTextColor() cell!.textLabel?.text = tableData[indexPath.row] let selectedView = UIView(frame: cell!.bounds) selectedView.backgroundColor = UIColor(white: 0.0, alpha: 0.3) cell!.selectedBackgroundView = selectedView return cell! } 
No, CLLocation doesn't conform to the NSCoding protocol, you would have to store your lat and long separately and recreate the CLLocation at runtime. Even if you could, storing the location in a single structure doesn't make it any easier to query against, just makes it easier to store and fetch.
Take a look at this: http://www.objc.io/issue-12/animating-custom-layer-properties.html
Depends on how you feel about neophyte swift programmers. I'd be interested so long as someone would be okay with working with my limited skill sets.
I think this would be sweet, but I don't know how much traffic the subreddit would generate (thinking of how little goes on at the swift jobs subreddit)
SwiftProjects sounds good. SwiftTeamItUp? TeamItUpSwift? SwiftTogether? IMHO, iOS doesn't make a great abbreviation to use in subreddit names because of the odd capitalization. But I certainly *would* leave it open to programmers in the Apple ecosystem. Did you learn iOS with Objective-C but are only now getting your sea-legs with Swift? Maybe you learned Swift with an idea of programming for the Mac, but now want to know the iOS ecosystem. Both should be welcome, but if you know neither the language, nor the frameworks, you wouldn't really have a common lingua franca to be talking with. Still, it's probably just simpler to say Swift rather than try to encompass all of that in one term.
I recommend following the Parse quickstart guide &amp; using the newest version of the sdk. Remember to also add the Parse frameworks manually, otherwise you will get a MACH-O linker error.
Xcode recognizes `/// MARK: &lt;comment&gt;` as a pragma mark and creates a divider and entry for it in the navigation bar up above the editor.
OK, thanks! I will try it via the Obj-C Bridge. I find some implementation without Bridge, and it works. It's magic. :) But for me, I will try the way with bridge. :)
Thanks, unfortunately it doesn't appear to change color. If anyone knows of a way to do that, I would appreciate it. As a side note, I am sure this will be changed in the future as swift evolves.
You could use extensions and MARK. Extensions for grouping functionalities and MARK for easy navigation in Xcode.
Please post the name of the sub if you create it. I would be interested to see how it develops and maybe collaborate on some projects.
Sounds like a good idea. I am currently working on a simple app and I noticed that I could create the app much faster if I had someone to team up with. It is also more fun and creative to work with other people as you have someone to bounce ideas off. I think this would work best for building simple apps for experience, that you could publish on the appstore for free.
I'd also recommend using extensions; just put the code into a separate file - no reason to put separate functionality into the same file, right? Then you also don't really need MARKs.
I am new to programming too. I tried bitfountain, Lynda, Udamy, Stanford swift course and of course official apple swift iBook. A good starting point would be threehouse swift and Objective C courses. These courses will walk you through all the basics of programming and later on you will build 4 different apps from scratch on swift. Courses are super easy to follow and implement and you will have access to QA and forum which is filled with all sorts of questions from previous student and you can find answers to most of your questions in there. They also offer free trial so you can take a look at the courses at no charge. Good luck and Happy coding 
YOU ARE A FUCKING LIFESAVER THANK YOU SO FUCKING MUCH :KLFASDFJ:LKSHRG:LKSDFJHGL:KDFHSD:LKFHJ:ALKEdgHAEHKL:DGEFJKS
In your opinion one question? 1. Do you think it might be possible for iOS through Swift, pick up distorted guitar signals accurately? Or at the moment its only suitable for clean signals? 
I did all of that, I followed instructions but it wont work :/
I have some college under my belt; core classes mostly. I did the four year 2 year degree at the local community college...I was working two jobs and going to class full time so it took way longer than it should. I'd love to take some in classroom courses but my work schedule wouldn't support that particular venture. I grabbed some of the classes off Udemy (they were $10 a pop) and I'm looking at a few others to get started. I'd like to make apps; mind you I feel most of the promoted stuff is fluff and media related. I'm not expecting to make the latest and greatest and I'm not *much* in it for the money, but I'd like to make a few full featured apps along the lines of what I'd use. I think it's an easy way to learn and start. 
I'll have to check this out as well!
Thanks for the Answer! Where do you get information such as what part is run on GPU or CPU? very interesting and good to know ... I will definitely look into CAShapeLayer. But I just got an idea of a workaround, but my implementation of it does not work. Basically, I noticed that when hooking up the rotation value of my vector-image to a UISliders valueChanged event, I can mimic a smooth animation (just by sliding from left to right). So I thought maybe I can animate the UISliders value and let it change the rotation of the vector-image. Problem is that the animation of UISlider does not trigger the valueChanged event Any thoughts on that? 
/r/programmingbuddies
I dont understand why you would make it swift exclusive as you would be essentially increasing your subreddit community but over double (guessing) by including obj-c ?
I'm interested! I'd love to get more experience working on a team and learning and growing along the way.
I would totally be interested, if anyone would be willing to make any use of a novice swift programmer. 
Took a quick look at it, yes this is what I wanted üòÉ
Setting the value of any control in code does not trigger change events. This is mostly because that would cause infinite loops very frequently: you could have code that changes the value of a control in the code called by the control's event. Aside of that, your solution is a very round-about way of doing this - even if it did work, I'd recommend against it. Just use a CADisplayLink, and redraw your view whenever it fires.
What apps? how about something like http://exercism.io/ for swift
Try Udacity.com
I'd be interested if it was with someone in the chicagoland area. Not interested in remote development unless i was convinced otherwise haha. Anyone in Chicago? 
You can have one button function like this: @IBAction func buttonAction(sender:UIButton!) { //var message gets the title of the button pressed var message = sender.currentTitle! println(message) }
I think a direct comparison of the button of question is more important, using tags, you have to make sure that no two tags conflict with each other, otherwise you'll run into problems (fine if you're the only developer, not so good when checking code into a revision system). 
This is great! Thanks for sharing.
Awesome, thanks for posting!
You're trying too hard to sell us a course.
I've never developed in an OOP language before, and I found Swift far, far easier to pick up than Obj-C. I gave both a try, and Obj-C's syntax is just so unclear to me, whereas Swift's is incredibly readable. Also, the larger number of language features in Swift doesn't make it more difficult to pick up. It might mean it's harder to master, but then some of the newer features might be easier to use than older ways of doing things. But this, of course, is just my opinion.
I don't have time right now, but in a few hours, I'll build a small app that lets you see the frequencies of audio ;)
You don't need a custom UIView subclass. You can use any of the UIViewAnimationTransition enums. You can also do something completely custom using the UIView animateWithDuration: methods, for example you can add a subview to a parent view with alpha set to 0, animate it going to 1, then in the completion, remove the old view that is now completely hidden.
Be proud: if you are going to add new behavior, design your own, more appropriate, API for it. Don't try to shoehorn new behavior into Apple's classes.
I was trying yesterday and was having the same issue. I've connected them multiple times in the past too.
Sounds awesome
Shameless plug...
[This] (https://www.youtube.com/watch?v=Q6kTw_cK3zY) is Exactly what you are looking for. Edit: if you look in the description he has a link to the finished code. 
If you finish it let us know how it goes yea?
Of course! But most likely, I will get 10% of the way done, realize how much work it is, slowly lose interest, find a new project to work on, and eventually format my computer when the next OSX comes out -- completely wiping any memories of this project. Fingers crossed, thanks again!
I'd like to insert a very small web server in an iOS app.
I‚Äôve completed a good few of them including Swift Essential Training, an iOS course for Swift, and Code Clinic for Swift. They are all excellent in my opinion. I‚Äôd go as far as to say Simon Allardice is the best Computer Science teacher I‚Äôve ever encountered. He really thinks about the best way to present this kind of information. In general the service is hassle free.
If you're looking to avoid duplicates, and keep it the same length, the best option is a set: var rands = Set&lt;UInt32&gt;() while rands.count &lt; 5 { rands.insert(arc4random_uniform(59) + 1) } " ".join(map(rands) {"\($0)"}) // "17 29 21 11 31"
Click the button "Download zip" on the bottom right then unzip it (mac does it automatically for you), there you'll find the whole project, just open the .xcodeproj file.
TL; DR
Uh? Translation 
See This, http://grokswift.com/rest-tableview-in-swift/ A way to populate tableview with paginated JSON API
Too Long; Didn't Read Try to post shorter code samples, this way people will actually read them and maybe try to solve your problem.
I use to be one of the people who would stick to old methods and do things programmatically or at most using find because of the feeling of having more control. However, I've given storyboards a fair shake and they actually come with a lot of great functionality that simplifies and allows you to have a better grasp of the flow of the program. They've really made great strides in making it useful. Take a look at some of the WWDC videos. Also the auto layout features you can implement in IB saves a lot of verbose unnecessary code in your files.
I tried adding this after the while statement to sort the array, but it seems it cant sort an array of strings. How can I easily convert it to an array of ints so they can be sorted let sortedNumbers = numbers.sorted(&lt;) let text = " ".join(sortedNumbers) I tried just changing String to Int in the array declaration but the == operator doesnt like it. 
Yup, this should work
[this is a start](http://www.reddit.com/r/swift/wiki/index)
This question gets asked a lot here. Probably a good start would be to read the sidebar. Also, mandatory link to Stanford course: https://itunes.apple.com/pl/course/developing-ios-8-apps-swift/id961180099?l=pl
I've been doing iOS development full time for 7 years Lots of people use storyboards. Some older apps do not (as they started with NIBs) Storyboards are pretty good at a few things, quite bad at a few other things. Doesn't mean they shouldn't be used. If you choose to avoid them, that's totally an option for you, but if you want a job doing iOS work, eventually, you will probably need to come to terms with IB. That said, the people who use them most successfully do not do *absolutely everything* in the storyboard, they definitely mix some code in there to make it all go easily. If a storyboard way to do something isn't working, whip out the code and programmatically make that feature. If you need to globally reconfigure something, consider procedurally generating part or all of that part of the UI. And for your own sake, use *SEVERAL* storyboards for the different parts of the app, Not one jumbo board with 100 view controllers specced out in it.
Do you reallly want remote notifications? Because if you don't it's as simple as UIApplication.sharedApplication().registerUserNotificationSettings(UIUserNotificationSettings(forTypes: .Alert | .Sound, categories: nil))
I start creating everything programmatically back then in 2008, when I started creating apps for iOS. Interface Builder was a total piece of crap back then. Time passed and was becoming very hard to create apps for all screen formats, orientations, etc. I decided to give Interface Builder a shot. iOS 5 came with storyboards. After some reluctance, due to my bad experience with Interface Builder, I decided to give it a chance. For my surprise, I was amazed on how crappy Interface Builder still was after all those years. The same piece of shit as before, like Xcode itself. But storyboards turned things easy in some sense, even with the crappy designed Auto Layout and constraints. The real problem came when I decided to use storyboards on OSX apps. **If you are reading this, don't fucking do that!!!**. Storyboards will break your app on OSX. Even created for Yosemite, apps with storyboard that start with splitViewControllers or tabViewControllers will not work and will require a lot of hacking to work. Also, your application will not be able to load or save files using the open/save panel. How Apple approves something like that, is a mystery. Today, I sill use storyboards for iOS but not for OSX and will never use, until 10.10 fades away in relevance. Again to those who did not read my lips: storyboard apps crash when you try to open/save files using the panel on 10.10.0, 10.10.1 and 10.10.2. Apple's official answer to my technical incident was: "use Xibs", which is a fantastic answer.
it wasn't on my end, we figured out it was the server, thanks tho!
Former Apple engineer here.. At Apple, we used nibs, xibs, and storyboards whenever possible to cut down on the amount of code we had to maintain. Since the time of the Apple/NeXT merger, we had an endless stream of newbs asking "how do I do this without using IB?", and my reply was always along the lines of "why would you want to?" The tools are there for a reason. Use them.
I'm actually using multiple storyboards in my current OS X application with no problem. It even has a splitview. I do however agree with the splitviewcontroller thing, it was a pain to implement; however, if you are planning to use auto layout I would recommend using an actual splitview rather than a splitviewcontroller in interface builder. It's actually quite simple to implement with constraints/holding priorities to do what you want it to do. I'm surprised there's so much negative experiences associated with IB in contrast to my own. I wonder what the devs at Apple use IB themselves or whether they prefer xibs?
I'm not sure how I'm working harder, or how IB could make it better - but I'm definitely open to try and learn more about them. Sadly, I have yet to see any cases where IB/AL is more efficient from a standpoint of development, maintenance, extensibility, cross-project-portability, customization and team-environment than the approach I described above. I would love to see an execution of the level that is typically described when people talk about the visual tools. The thing is, most of my interface code can be done with a couple of lines of auto-completed code per control, meaning I type very little. The same is true for my layout code, and in both instances there is transparency and cohesion inside the view file. The layout of IB is pretty inefficiently designed IMO, and thus wastes effort. Typically, each control requires hitting both the identity and attributes tabs at minimum just to set the properties - then also the connections tab to hook it up to code. Now add to this that we frequently want many properties defined via code in maintainable apps and a typical app in that fashion already has as much code in the view than I do with appropriate helpers, except spread across multiple places. I fully admit that I tend to "think" better in code, but I know that I didn't have these same issues when using Visual Studio for visual layout - in fact I *preferred* using that to layout interfaces. The same just simply is not true for me with the current state of the IB/AL toolset. 
I use the story board, but I have found auto layout to be pretty bad in most cases. So I use the story board to generally lay out/setup the screen and then programmatically fix it depending on the device. It's a great tool. This is an unpopular opinion&gt; It's very easy to use but it's no where near the layout mechanism android has. Sure the ios one is quicker to grasp, but android ib handles different screens sizes much much better and is much more modular and useful once you learn it's subtlies. 
Im a really beginner in swift dev and to me putting the view outside of the code by using storyboards is really misleading. and dont get me started on drag and dropping UI element into the code, wtf -_-
Oh okay, did you read the [documentation](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Introduction.html#//apple_ref/doc/uid/TP40008194-CH1-SW1)?
You should be able to just call the `stop()` method. Have a look [here](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPlayback_protocol/index.html#//apple_ref/occ/intf/MPMediaPlayback)
like it was the bible.
"Masonry is being deprecated into a bugfix only state as more developers will be moving to Swift. Going forward we recommend using SnapKit as it supports Swift and provides better type safety with a simpler API."
I was in ProApps, and I worked closely with the Dev Tools team. Our UI was about as elaborate as anything ever gets on the Mac.
I can definitely see the advantages in that situation. I feel like it takes a lot more code to customize AppKit than to do the equivalent in UIKit. Also the interfaces are certainly a lot simpler on iOS as well. 
I couldn't agree more. IB is a mess, especially for editing auto-layout stuff. say I want to change a general 5pt margin to a 6pt margin: In IB, I have to edit every constraint manually, and hope that I get them all correctly. Before committing, checking the diff might give me a hint of what I've actually done, but since the XML is barely humanly readable I cannot be sure. In code, I can just use a variable or constant whose value I change, and the diff will be as readable as any other code I write (so naturally YMMV). And don't even get me started on the pain IB causes when you need to refactor your view hierarchies. Say bye bye to your existing constraints, 'coz they will be gone as soon as you move your views around.
Don't put all the screens in one storyboard. Break it up into logical sub-components. Like I have a storyboard for login which is reused by other storyboards if and when they are required. I have a storyboard for the registration process, etc. This will help with version control. Don't pass values in Segues. Use dependency Injection. If you have the same UI component, you might want to break it out into a xib file. Also try Masonry or some other layout library, the amount of code you type is reduced.
I wonder if the devs at Apple use Xcode at all! They certainly have other kinds of tools. Nobody creates beautifully and complex apps like Pages, with thousands of subtle animations, fades, etc., using Xcode. Cannot be done by an human being. Regarding OSX storyboard apps: try to use savepanel/openpanel on your storyboard app. Have some popcorn and enjoy your app crashing or not working at all on OSX &lt; 10.10.3. What company approves an OSX version with storyboards for the first time, where devs cannot create apps that open/save files and then tell devs to use XIBs because their implementation of storyboard is shit? Splitviewcontrollers and tabViewControllers don't work as initial view controllers on storyboard apps (OSX) without a lot of hacking to wire things properly. It is all broken.
Check out http://tutorios.com, it aggregates all swift tutorials, libraries and news.
wtf?
Completely - I just wish the tools were a bit more developed and polished. The other thing that shocks me is how many teams I've seen that are completely OK with needing to have a single person maintain the main storyboards because of fragility and inability to play well with source-control. I've seen many places where they have developers working on a new portion create the new interface in a nib/xib, and then a "gatekeeper" person has to go through and integrate that into the storyboards. Yet they praise how much time storyboards save them. I will always go for clarity and transparency first and foremost, because at the end of the day I ( and the team ) have to be the ones to deal with the fallout if they aren't. The bulk of a good project lifecycle is in maintenance, upgrades, and fixes. Saving myself a little time during initial development at the cost of long-term transparency for updates is never the pragmatic choice to me. 
&gt; does the program I'm trying to create already exist? iTunes? Edit: Unless you just mean a light weight program just for album art.. but in case you weren't aware iTunes does have this feature (currently at work but in Windows iTunes it's under File &gt; Library &gt; Get Album Artwork)
Second option. Shoot. I was afraid it was only black/white. Thank you. 
I use this open source parser https://github.com/tadija/AEXML it was used in my app and it works flawlessly, also very well documented. 
The System Status bar is transparent. So, like /u/justinsharkey said your only options are changing the content style to either light or dark. Check out this [page](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/Bars.html) for the Apple Interface guidelines pertaining to the System Status Bar.
Yep, you'll need a device to test beacons
what are the advantages of turning the json into objects? like a custom object like in that grokswift example someone else posted?
I use iTunes a lot, that's why Album Arts are so important to me, unfortunately the built-in feature does not seem to "integrate" album arts to the mp3 files. Until now I used Tag from the Mac App Store to do this, but it does not search album arts automatically. 
Thanks, I will look into it for m4a tagging. Any suggestion for other audio file formats?
well you wont be appending any JSON data as you paginate, you will be making cells from objects rather than keys from JSON, its much tidier, you can abstract the parsing allowing multiple classes to easily utilise your objects with copy pasting parsing code.
Did a quick search and it looks like you can't do this in the simulator because there's no Calendar app. It looks like EventKit does is through calendar events or reminders.
I'm not sure of what you are asking for. Some kind of network connection? Almost too any ways to mention. Cloudkit, sockets, http, etc. Perhaps you could try to describe in further detail what you are trying to accomplish.
How do I do that? 
For playing a video you might be able to use scrollViewDidScroll and loop over [tableView visibleCells] and check the frame of each visible cell to see if any are fully visible or whatever your criteria is for beginning playback. You could stop the playing video in didEndDisplayingCell. If you want to enforce only a single playing video, then maybe you want to keep a reference to that video player in the controller. Whenever you start a new video you stop the old one first (regardless of on screen or off), then assign the pointer to the new video player. But I'm just answering the how, not the why. You might want to listen to /u/mistermagicman...
Al the data should be in the table view'a data source so I suppose you could pull the data from there. If you have a reference to a cell you can get the cells index path (tableview.indexPathForCell(cell)) to determine where in the data source you should look.
Are you getting error messages?
Thank you!!!
There are two native ways of handling XML files: - Event-driven: Use NSXMLParser to go through the document and get updates on every element/attribute/etc. [Guide](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/XMLParsing/XMLParsing.html#//apple_ref/doc/uid/10000186i) - Tree-based: Initialize NSXMLDocument with a file, from there you can access all the nodes. [Guide](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/NSXML_Concepts/NSXML.html#//apple_ref/doc/uid/TP40001269) In your case where the file isn't very big it's much easier to use the tree-based method, like this you'd also automatically have the needed parent-child structure
Yeah that is my problem, thanks anyway though
`if numPoints.value == 5` You've got two errors there: First, you should use `==` to compare, because a single equals sign means assignment. Second, don't put the 5 in quotes, otherwise it's treated as a string instead of an integer.
That should be a "==", not a "=". "=" is the assignment operator: You take whatever's on the right, and you assign it to whatever is on the left. So x = 5 Makes x equal to five. But if you want to *check* if x is equal to five, you need ==. This'll give you back true or false, based on whether or not the left is equal to the right. Then, you need to change your "5" to 5. "5" is a string - the character 5. But you're interested in the number 5, which is, in this case, an Int. Based on that, the snippet above should be: if numPoints.value == 5 { SKColor.whiteColor() } Then, the SKColor.whiteColor() function just returns the colour white - but to use it, you have to assign it to something, like this: if numPoints.value == 5 { myScene.background.color = SKColor.whiteColor() }
&gt; . Nobody creates beautifully and complex apps like Pages, with thousands of subtle animations, fades, etc., using Xcode. Yes, they do. I know this first-hand. 
It still doesn't work: My Code now looks like this: if numPoints.value == 5 { SKColor.whiteColor() } And i get the Error: Binary operator '==' cannot be applied to operands of type 'Int64' and 'Int' 
Ooh I should have spotted that in your post. I'm not sure why you've got Int64s, but this should work: if numPoints.value == Int64(5) { myScene.background.color = SKColor.whiteColor() }
Thanks, but now i get this Error: Binary operator '==' cannot be applied to two Int64 operands 
Try instead if Int(numPoints.value) == 5 { myScene.background.color = SKColor.whiteColor() } Some of these errors that you are experiencing are easily solved with Google. Try "Swift" + "The error you are experiencing" and such like that. Usually you'll find people who have had the same issue on Stack Overflow or other related sites.
Then what does your cellForRowAtIndex look like? 
Ah ok, thank you!
While you can't create variables directly, what you can do it create a dictionary and use the string as a key to store your values. var dict = [String: Int]() dict["x0"] = array1[0] // ... and so on 
That's bizarre. [Int64](http://swiftdoc.org/type/Int64/) implements [Equatable](http://swiftdoc.org/protocol/Equatable/). When I run this in a Playground: let x = Int64(1234) let y = Int64(1234) println("\(x) (\(x.dynamicType)) == \(y) (\(y.dynamicType)) is \(x == y)") It prints "1234 (Swift.Int64) == 1234 (Swift.Int64) is true". If it doesn't do the same for you, perhaps you should reinstall Xcode.
There are far more cocoapods, and it works exceedingly well. Honestly there's no reason not to use both though. Look at the frameworks and see what they support. If you need to use both, go for it. 
yes of course, when the app is finished i want to release it and im going to pay the person who helped me :)
Stanford courses assume you have a great deal of computer science knowledge so that makes sense. Try a udemy course.
Well that explains a lot i've been recommend that course multiple times on forums they all said it was very good for noobs. I guess not thank you :)
I feel so stupid now.. I wasted so much time just watching those videos.
It's good for swift noobs, not for programming noobs unfortunately. 
Are Python &amp; Swift somewhat the same or are they completely different? Sorry if this is a stupid question :o 
What are your feelings about centralisation? There's a very helpful talk by the main author of Carthage, explaining his philosophy, and how it works: http://realm.io/news/swift-dependency-management-with-carthage/
Python and Swift are completely different but Python is a really good language to learn for someone new to programming. The syntax won't be the same but the method of thinking through and solving problems will work for any programming language.
For a complete beginner looking to learn swift &amp; Xcode, this is probably the best resource out there for the price: https://www.udemy.com/complete-ios-developer-course/?ccManual=&amp;dtcode=MYuTo7L2Y6TW&amp;couponCode=INSPIRE1010#/ Normally ¬£160, but discounted to ¬£8 with code INSPIRE1010
I've heard about that course.. Probably going to buy it tonight! Thanks :) 
You can build your own hierarchy in Core Data just like you would with your object model. So, if you were going to have an exercise base class, with strength and cardio subclasses, and classes under that, that works just fine in Core Data. However, changing your model after you already have data saved can get tricky, so I wouldn't get too specific, and use data to determine specific exercises.
Awesome thank you
your function doesn't have a return type so it assumes that it is void if you want this to work do @IBAction func playMusic(sender: AnyObject) -&gt; MPMusicPlayerController { return MPMusicPlayerController(); }
Title says it all. I wanted to recreate the onboarding experience found in the [Disney Tomorrowland app](https://itunes.apple.com/app/id684585068) released recently. Please let me know if you have any questions or ways I could improve this fun little demo. Thank you!
I'll look into it! Thank you!
Now I have an error saying that all IBActions must return the type of void, 
Okay thanks dude i will definitely let you know if i get stuck :) 
Sorry for bugging you ;P Do you think i should get https://www.udemy.com/ios-8-and-swift-how-to-make-a-freaking-iphone-app/?dtcode=fw6LcsE2Y8SL or https://www.udemy.com/complete-ios-developer-course/?ccManual=&amp;dtcode=ejkm9QS2Y8R5&amp;couponCode=INSPIRE1010 since the code works on both or should i buy both of them since there cheap ass hell?
Yup, luckily he was active and made way for the programming language (not being a programmer himself). And is an active moderator for the community.
What happens when you update the App? To all that data? Recommend CloudKit. Just works great. Core Data can be the backup, but to get out the door quick, CK is it. So simple to setup too. (IMHO). 
A plist may still be slow for this, as they slow down quite a bit after a certain size. You could use NSCoding protocols to serialize the array to an NSData object and write it to a text file though! I do love me some core data, when it isn't trying to kill me, but NSCoding may be far simpler for you.
I'm on the same boat as you man. I'm trying to learn Swift but the issue is I come from a strong Java background and even though logically all the language makes sense, so much of the style is foreign to me. I'm thinking the best way to learn the language is to just watch novice tutorials on youtube to get a sense of all the different basics of the language with classes, protocols, and just make basic text adventure video games! (I'm serious) to make complex code and then work with some networking before working on major iPhone projects during the summer. 
[Image](http://imgs.xkcd.com/comics/wisdom_of_the_ancients.png) **Title:** Wisdom of the Ancients **Title-text:** All long help threads should have a sticky globally-editable post at the top saying 'DEAR PEOPLE FROM THE FUTURE: Here's what we've figured out so far ...' [Comic Explanation](http://www.explainxkcd.com/wiki/index.php/979#Explanation) **Stats:** This comic has been referenced 668 times, representing 1.0330% of referenced xkcds. --- ^[xkcd.com](http://www.xkcd.com) ^| ^[xkcd sub](http://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](http://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](http://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_crj1966)
Since you have a single array, using NSKeyedArchiver/NSKeyedUnarchiver should be the simplest fastest way to go. The following test works in a Playground in Xcode Version 6.3.2 (6D2105): let documentsUrl = NSFileManager.defaultManager().URLsForDirectory( .DocumentDirectory, inDomains: .UserDomainMask )[ 0 ] as! NSURL let fileUrl = documentsUrl.URLByAppendingPathComponent( "strings.data" ) var strings = Array&lt;String&gt;( count:120000, repeatedValue:"lorem ipsum blah blah blah" ) NSKeyedArchiver.archiveRootObject( strings, toFile:fileUrl.path! ) strings.removeAll( keepCapacity:true ) strings = NSKeyedUnarchiver.unarchiveObjectWithFile( fileUrl.path! ) as! [ String ] 
You connect them in code. So in the IBAction for the handler for say a button push or a tableview did select row at index path call (sorry formatting, on my phone), you instantiate the storyboard and present it or push it onto the navigation controller as appropriate Login is a clearly separate storyboard for almost all apps, especially if you have onboarding, sometimes it's two if you have fancy on boarding and a lot of things like password resets and stuff 
Google "adaptive layout" and universal storyboard. The comment above about using size classes is referencing Apple's approach to an expanded variety of screen sizes. Basically you'll start your Xcode project with the "universal" option, and build one layout. You'll use auto layout constraints to arrange views in relation to each other , rather than on fixed x y coordinates. You can preview how each screen size looks in Xcode without running the simulator too. Auto layout can be frustrating at first , but it truly does make things easier in the long run. Learning it as it's implemented in ios8 is doing yourself a huge favor. 
I bought the one you recommend so far its good thank you gonna re watch a lot of them tho so i can understand it better :)
Yeah, just remember it takes a lot of mental strength to keep learning Swift (or any language) because when things go wrong you need to just keep level-headed and keep learning. 
Agreed. I first thought it wasn't good and now I regret I didn't watch it earlier. 
I'm a big fan of http://hackingwithswift.com too. Haven't watched the Stanford class yet though.
I wrote a free 30-part Swift tutorial that focuses on building projects. It teaches Swift at the same time as teaching UIKit and SpriteKit, and if you follow all 30 projects you'll end up with 20 finished projects that you can customise and improve. Projects 11, 14, 17, 20, 23, 26 and 29 all teach SpriteKit, but I would strongly recommend against skipping ahead unless you're already familiar with Swift. Seriously, if you're new please start at project 1 and work your way forwards. If you'd like to try it, it's [Hacking with Swift](http://www.hackingwithswift.com). You can also find the source code [on GitHub](https://github.com/twostraws/HackingWithSwift). Have fun!
Nice, no idea why I never thought it was even possible. Guess I'll split some giant storyboard tomorrow morning ;) Thanks.
http://stackoverflow.com/questions/24003191/pick-a-random-element-from-an-array
I tried that and it just prints all elements of the array.
The stackoverflow answer seems legit. There is probably something wrong with your code. Could you paste the whole thing?
http://www.reddit.com/r/swift/comments/373ovs/what_is_the_best_way_to_learn_swift_if_i_know/
Here. Please check this out. http://pastie.org/private/6dmbaacq2rglvh2sbjrsg
Apple's developer documentation resources are pretty good. [Here is a simple sprite kit tutorial](https://developer.apple.com/library/ios/documentation/GraphicsAnimation/Conceptual/SpriteKit_PG/GettingStarted/GettingStarted.html) [Here's a full adventure game tutorial](https://developer.apple.com/library/ios/documentation/GraphicsAnimation/Conceptual/CodeExplainedAdventure/AdventureArchitecture/AdventureArchitecture.html) /u/twostraws ...bookmarked and thanks. Your tutorial is the next thing on my reading list now. 
Ok so right now I have this, is this all that I need, I am trying to make it so that a Media Picker Viewcontroller shows up when I click a button @IBAction func pickSong(sender: AnyObject) { var Music.MPMediaType var myMediaPickController = MPMediaPickerController(mediaTypes: Music) }
You're not using the code in the stack overflow link.
Use an NSSet instead of an NSArray if you don't want order.
If you know that it has been asked hundreds of times, don't ask it again and search. We're not serving you Google results on a cold plate. Sorry to be rude, but these posts are just tiresome. 
thanks your the best!, also do you know of any way to navigate to another screen after this view controller disappears?
&gt; MPMediaPickerController The `MPMediaPickerControllerDelegate` (notice the setting of `mediaPicker.delegate = self`) will have methods you can implement. One of them is called when you've picked the media items. They're called [delegate methods](https://developer.apple.com/library/ios/documentation/MediaPlayer/Reference/MPMediaPickerControllerDelegate_ProtocolReference/index.html#//apple_ref/occ/intfm/MPMediaPickerControllerDelegate/mediaPicker:didPickMediaItems:). EDIT: Hint: `func mediaPicker(_ mediaPicker: MPMediaPickerController!, didPickMediaItems mediaItemCollection: MPMediaItemCollection!)` is the method you're after, which is called when you select the item.
Can you send me your code project? I need to connect PFFacebookUtils, and only way is to do it through brigde header (if i remeber correctly)
You don't happen to study at NTNU? :) As the others I would recommend to watch the Stanford course, and also read the official Swift guide and just start to develop apps. I started learning Swift a month or so ago, and have already made a couple of working apps.
I have been struggling with auto layout/size classes for some time now, and it finally clicked today. You have to learn it, and should probably check out the Stanford course, which goes into it.
Hey, I am using http://tutorios.com 
Unfortunately I cannot send you the project, however this is the guide I followed to be specific: https://parse.com/apps/quickstart#parse_data/mobile/ios/swift/existing No where does it state you need a bridging header, which makes me think that you followed an outdated guide.
Paid full version (2.99 pr 3.99 seems the sweet spot to make the most money from general utility apps) and a free version with iAds and IAP to remove ads and unlock the features from the full version. Only about 3% of users buy the IAP though. Unfortunately I don't think there is a huge market for paid apps any more. You would need a real smash hit app to make a decent amount of money. Not saying you can,t, it's just very hard‚Ä¶ Edit: Some more thoughts on the app market for indy devs: I personally wouldn't bother with creating an app just for the app's sake anymore. When I think about new apps I think of them as a way to sell people a service or to build a brand. Just an example: I wouldn't build an outdoor navigation app and try selling it, but rather build a free app and try building a huge user base or upsell the users with additional services. Basically the Runtastic/Strave business model‚Ä¶
They're not paying you for your work, they're paying for the product, so whether you put one hour or one year is irrelevant to the customer.
Don't - a lot of the time poured into learning programming is a lot of effort, but don't think of it as time wasted.. that's a defeatist attitude.. it's time invested learning what not to do lol ;) It's a game of persistence.. keep on learning dude!
This does not answer my question. How do you rate the product then? Do you compare it to other similar apps in the segment and price it accordingly?
I mostly code in java for my job so I watched a bunch of tutorials from http://teamtreehouse.com/ at 1.5x the speed. Skip the basics and the most helpful tutorial was the actual building of a simple app because xcode is another learning process. Good luck!
It depends - on a fresh code base I'd start with Swift BUT swift is changing all the time so you may need to refactor as the language is updated. That being said, it's much cleaner and modern and doesn't bring the baggage from C.
Uh, this isn't really a programming question so much as a math question. Strictly speaking, a formula as unbounded as the one you provided has infinite solutions. More to the point, all the answers you provided *are* valid solutions to the equality. Either you're going to need to provide more information on your algorithm, or you're going to need to provide far more information on what constraints you're trying to solve for in order for anyone to be able to help you.
thanks so much, I'll give you gold one day when I'm not poor haha, would you mind explaining some of this to me as I'm quite new to swift
That makes sense. So in terms of revenue it is probably better to build free apps for the app store and then use them as a portfolio to get a high paying job at one of the big companies. Sucks, but one can still make own apps as a hobby.
var creates a new variable that can be modified later on (if you don't want to modify it later on, then use let) The : specifies the type of variable The space between the class and function in objective c, is replaced by a dot Fuctions are called with brackets. The input parameters for a function go into these brackets. 
Swift! Mainly because I've never like Objective C at all. Combined with the syntax heavy Next Step I've always found Objective C to be tedious. 
There are undoubtedly more sophisticated ways of writing solvers, but a straightforward binary search will do the job. Rewrite equation as 50x + 40y + 10z - 80 = 0 Randomly pick sets of x,y,z satisfying the core criteria until you have one set that evaluates &gt; 0 and one set that evaluates &lt; 0. Then you loop, creating a new (x,y,z) that is between the two outliers, replacing either the &gt; 0 or &lt; 0 endpoints depending on what it evaluates to. Otherwise the only thing you need to watch out for is where the midpoint is further away from 0, which means it's not continuous at that point so you go back to the start and pick another pair of points. Otherwise you keep iterating to the level of desired precision. But as has already been pointed out, there are also an infinite number of solutions to the particular equation you posted. e.g. x = y = z = 0.8 is a trivial solution 
You can change your price anytime. Just know that you need to setup the financial stuff in iTunes connect if you go paid. You can ignore that if you only have free apps. 
This might work for you, http://www.codeproject.com/Articles/675908/Linear-Equation-Solver-in-Cplusplus
Wow, cool! Thanks for sharing k337. What are some of those "nice things" in Obj-C but not in Swift? Do you mind sharing?
Yup
I really wish my biggest problem was my employment with google
Very nice idea, although it would probably drive me insane as I usually take 3 naps before i wake up. But if I will ever want to fight my laziness I might give it a shot. Good luck with your product!
Is there also a easier way to do these with CGPoint or CGFloat? 
Okay lets start all over again. I just want to create a object, that goes from the right side to the left side of the screen. I want that these object spawns above my player. Thats it actually... I tried this and it still doesn't work:: func addMonster() { let monster = SKSpriteNode(imageNamed: "monster") let actualY = random(min:5, max:10) monster.position = CGPoint(x: size.width * 1.5 , y: player.size.height * 4.5) addChild(monster) let actualDuration = random(min: CGFloat(2.0), max: CGFloat(4.0)) let actionMove = SKAction.moveTo(CGPoint(x: -monster.size.width/2, y: actualY), duration: NSTimeInterval(actualDuration)) let actionMoveDone = SKAction.removeFromParent() monster.runAction(SKAction.sequence([actionMove, actionMoveDone])) } 
I think I may have misunderstood your question. :-( Sometimes under can mean being layered underneath. If you want them above, just make sure that the Y axis is a higher value than the player. These two lines.. let actualY = random(min:5, max:10) monster.position = CGPoint(x: size.width + monster.size.width/2, y: actualY) seem to give your monster a Y position of between 5 &amp; 10, which is not very high. Good luck! 
hi. i'd like to give my few cents. I'm also pretty new to iOS development and I'm sure you guys would know a ton more than I do. But I'd like to help out with the business aspect of the app. I apologize in advance if I come across as being too critical. Personally I find the idea to be extremely niche (almost gimmicky) because I am still quite unclear of who the target market is. Clearly it would not be the people that already wakes up to their alarms. Also the lazy people that tends to snooze their alarms would eventually delete the app if it starts to become a nuisance. I maybe wrong but currently I can only see a very niche market of people who wants to break their lazy habits and are willing to pay $2 to do so. In terms of competition, there are apps that currently exist that are similar to yours. (http://www.brit.co/walk-to-wake/). So make sure you differentiate yourselves from what they do because I feel like it is not too difficult for well-versed iOS coders to create an alarm clock with a a pedometer/accelerometer attached to it (I maybe completely wrong about this). Now to marketing. First thing I saw when I clicked on your link was "Walk Me Alarm Clock - Super app that gets you out of bed on time and walks you up with a smart steps counter" This in itself turned me off because your title should be slick and to the point. It shouldn't be a sentence that explains what it does. "Walk Me- never snooze yourself into trouble" (came up with that on the spot so it probably sucks) Also as a paying customer, that 50% discount eats aways your revenue and does not provide an incentive for me to download your app. Your app costs $1.99. That discount would save me $0.99. This will neither entice me to get your app because it's $0.99 cheaper while it eats up half of your potential revenue. I'm unsure of what your revenue model is but if it is purely from the app downloads, this is a bad idea because you will be losing too much in revenue without gaining much user base. Sorry for the long post. Hopefully it helps. 
Fun fact, if you don't have `NSLocationAlwaysUsageDescription` or `NSLocationWhenInUseUsageDescription` in your `Info.plist` file then the messages will never show (and won't give a warning).
True true!
Ah, forgot to mention the constraint they all need to be integers
[This](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ProvisioningDevelopment.html#//apple_ref/doc/uid/TP40008194-CH104-SW1) is Apple's doc on the environments. It touches on entitlements as well, but that's managed mostly for you automatically. From there, just keep in mind that the tokens you collect don't go between environments, so you'll need to push to the correct token through the correct endpoint with the correct SSL certificate. It just feels complex because there's a lot of moving parts, but it's easier the more you do it. 
Doesn't sound any worse than reading a textbook cover to cover. You should probably go back to chapters and concepts you missed so there aren't large gaps in your knowledge, but that's basically what I do with every skill I learn. Google and experiment to get something working and move onto the next part. That said, with Python for example, I found the more I strayed from the path the more difficult googling and using stack overflow didn't help me. I was missing key logic and programming ideas and thus the solution to my problems looked like a foreign language. For example, I wanted to return a result without breaking a loop, and "yield" looked so useful. But I had no idea how the *fuck* to use it because the concept of generators was waaaay over my head. And I monkeyed code together that could have been a lot cleaner if I had gotten to the bitwise chapters. Adding a new bit of code would break the whole thing and I didn't have the knowledge to figure out why until I stumbled across some new related knowledge by coincidence. I'd say if you can piece together what you need, it's a really engaging and practical way to learn. But take the time to fill gaps you don't *think* you need, because you will later and you might not even know it.
There was a beta program that did just that when swift first came out. I think I found it: http://www.developer-tech.com/news/2015/feb/10/silver-lets-you-compile-swift-android-and-windows/
I followed that guide, and that works great. Now I need to implement Facebook Login with Parse, and this is where I stuck.
Glad you got it working! Just an FYI if you change things in the plist, I believe you have to reinstall the app.
That will only work for the most generic of Swift Apps. The issue when going between platforms isn't really the language, it's the APIs. Silver does nothing to bring CocoaTouch to Android. This would just allow OP to access Android's APIs from swift. He'd still have to modify/rewrite tons of code to actually make use of them.
Yes, it does not really work though. view two is a table view controller and instead it just pulls up a black screen. The viewDidLoad runs but the tableview does not show
You should be able to create a [`UITextFieldDelegate`](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITextFieldDelegate_Protocol/index.html#//apple_ref/occ/intf/UITextFieldDelegate) class that implements `optional func textFieldDidEndEditing(_ textField: UITextField)`.
Here's a fiddle for swift: http://swiftstub.com
I'm a college student, I'm broke and I just don't like Macs.
/r/cocoa
In another comment you mention you're a college student. Surely your college has a computer lab that has a Mac. I would check out the Computer Science or Graphic Design buildings. Talk to whoever "takes care" of the lab and see if you can get XCode+DevTools installed. I'm sure they would be happy to help you.
Can I suggest my own, free Swift tutorial series? It has you produce actual projects, so you're building real things while you learn Swift, UIKit and SpriteKit. It's here: [Hacking with Swift](http://www.hackingwithswift.com).
Are we talking about the language or the frameworks? If we're talking about the language I would recommend to at least skim over each chapter in Apples book. Otherwise you might reinvent concepts that already exist in the language. Or you end up doing things in a way that could be easier done in a different way. If you don't know what Generics are or don't know that they exist you will probably don't need them. But if you don't know them you might solve problems the extra hard way. In case of the frameworks you should absolutely have an overview about all the technologies the platform has to offer. But you don't have to learn each of these technologies. If you don't use them there is no point in learning them. The platform moves so fast that all your knowledge will be outdated within a year or two anyway. I am working as iOS developer since 2009. Yet my knowledge about game technology like GameKit, SpriteKit or OpenGL is basically zero. I don't know anything about AVFoundation, OpenAL, CoreAudio and CoreVideo either. I know that these things exist, that's enough for me. If I need to use them I can learn the basics within a couple of hours. That's enough to get me started. I have a lot of experience outside these frameworks so I'm confident that I can reach a level that allows me to do my job within a few days. 
I think you're better off learning other languages honestly. But if your aversion is to the hardware, not OS X, then explore a Hackintosh. 
Thanks for the feedback. We highly appreciate it. We are working on the user interface and after your feedback we are looking into it deeply. Also, thanks for sharing the links. They are helpful and we are scolding ourselves as why did not we think about Pttrns earlier. Once again, thanks for the sincere advice.
I've catalogued lots of articles. http://www.h4labs.com/dev/ios/swift.html?q=Sprite 
what do your controllers do? show a snippet
This is just a test app I've made for the music controls so this is the entire code: import UIKit import MediaPlayer class ViewController: UIViewController { @IBOutlet weak var labelTitle: UILabel! //Create a variable to control MPMusicPlayerController, the internal "ipod" library let mp = MPMusicPlayerController.applicationMusicPlayer() // Add a notification observer for MPMusicPlayerControllerNowPlayingItemDidChangeNotification that fires a method when the track changes (to update track info label) override func viewWillAppear(animated: Bool) { super.viewWillAppear(true) mp.beginGeneratingPlaybackNotifications() NSNotificationCenter.defaultCenter().addObserver(self, selector:"updateNowPlayingInfo", name: MPMusicPlayerControllerNowPlayingItemDidChangeNotification, object: nil) } // Function to change labelTitle.text to current track info based on previous notification observer func updateNowPlayingInfo(){ var currentTrack = MPMusicPlayerController.systemMusicPlayer().nowPlayingItem var trackName = currentTrack.valueForProperty(MPMediaItemPropertyTitle) as! String var trackArtist = currentTrack.valueForProperty(MPMediaItemPropertyArtist) as! String labelTitle.text = "\(trackArtist) - \(trackName)" println("\(trackArtist) - \(trackName)") } @IBAction func buttonPrevious(sender: AnyObject) { mp.skipToPreviousItem() println("Previous") } @IBAction func buttonBeginning(sender: AnyObject) { mp.skipToBeginning() println("Beginning") } @IBAction func buttonPlay(sender: AnyObject) { mp.play() println("Play") } @IBAction func buttonPause(sender: AnyObject) { mp.pause() println("Pause") } @IBAction func buttonNext(sender: AnyObject) { mp.skipToNextItem() println("Next") } override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. } override func didReceiveMemoryWarning() { super.didReceiveMemoryWarning() // Dispose of any resources that can be recreated. } }
You will need to learn how to make Android apps. Nothing is going to port the app for you. Sorry.
Correct, editActionsForRowAtIndexPath is the right method. This super-basic tutorial helped me to get actions going on the table rows in my app. http://www.ioscreator.com/tutorials/swipe-table-view-cell-custom-actions-tutorial-ios8-swift
If you don't want to use delegation you can also use target action textField.addTarget(self, action: "textFieldEditingChanged:", forControlEvents: .EditingChanged) Or just hook it up in Interface Builder.
As a C guy who learnt some objective C and will have to learn SWIFT later probably, that was very interesting thanks.
In the case of a variable declaration, '!' is used to signify an [Implicitly Unwrapped Optional](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html#//apple_ref/doc/uid/TP40014097-CH5-ID334). So technically it is an optional, but can be used as if it were a nonoptional. So in the case of something like an IBOutlet var, it seems appropriate
Neat app! Couple things I would enhance if you wanted to improve it: * Currently on some devices (I tried iPhone 6 8.1 simulator) the keyboard will cover the text input area, as well as the next question button. If using the simulator, make sure the software keyboard is visible to see this effect. See [this StackOverflow question](http://stackoverflow.com/questions/1126726/how-to-make-a-uitextfield-move-up-when-keyboard-is-present) for suggestions. * For an additional challenge, I would suggest trying to put your questions/answers/etc into a separate resource file (either JSON or plist). Typically in an app configurable data like that is not embedded directly into the source code. Reading data from the JSON or plist would require using NSArrays/NSStrings in addition to Swift Array and String times, which is a fairly common challenge in Swift programming. Happy coding!
You should be using ? to indicate it's optional. If this doesn't throw an error setting an implicitly unwrapped variable to nil, it's still misleading and shouldn't be used in the way that it is. Directly from your linked article: Sometimes it is clear from a program‚Äôs structure that an optional will always have a value, after that value is first set. In these cases, it is useful to remove the need to check and unwrap the optional‚Äôs value every time it is accessed, because it can be safely assumed to have a value all of the time.
*indicates that it was an optional that should never be set to nil again. I'll agree with you that it's unnecessarily being set to nil since just declaring creates a nil reference. Again, misleading and unnecessary. If the original intent was that the variable may be set to nil again at some point, it should use ?.
Are you using any plugins that would make the autocompletion slower? (Alcatraz with the fuzzy autocomplete?)
No, nothing. I used to have it a while ago, at the time when the auto completion was fast but SourceKit would crash all the time.
For context my 2012 Macbook Air was perfectly fast with regards to auto completion for Swift.
Most likely you're something in your code makes the type checker take exponential time. Upgrading your hardware might compensate a little, but the real solution is for the Swift compiler to stop being exponential. Short-term you can probably work around it by adding explicit type annotations to expressions that it has problems on‚Ä¶ but identifying which those are after the fact can be tricky.
My only concern with this implicit behavior is ‚Äî what if that changes in a future Swift update? Declaring things explicitly as what you want them to be ensures consistent behavior down the road. 
Well if you know what is in a table why not look at the collection view documentation? https://developer.apple.com/library/ios/documentation/UIKit/Reference/UICollectionView_class/
This is a language guarantee, not an implementation detail. It's as safe to rely on not changing as anything else in Swift (which may not be all that safe, but it's not unusually unsafe at least).
Oh no, the + and - isn't Swift! It's Objective-C! You can use any function of Obj-C within Swift which I had shown there. In Swift a class looks like this: class Test { class func doSomething() { // bla bla bla } func doSomethingElse() { // bla bla bla } } where the `doSomething` function is a class function (static) and the `doSomethingElse` a normal one (non-static) If you want to learn Swift, I recommend the free [iBook](https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11) from Apple, which convers the whole language 
Yes. To clarify /u/Kametrixom's terminology, `+` is for class _methods_ (not functions), methods that are called on classes themselves, not on instances, and `-` is for instance methods, methods which are called on instances of certain classes. Objective-C's class methods are exactly equal to Java's static methods, and Objective-C's instance methods are exactly equal to Java's instance methods. In old Objective-C (1.0 and before), you could exclude a `-` or a `+`, and it would default to creating an instance method (you could also exclude a return type and it would default to `id`, much like C used to/kinda still does default to `int`) (iirc), but in modern Objective-C, you must always specify the method type and the return type. My insistence on calling methods methods instead of functions is not _just_ because I'm a pedant but also because functions also exist in Objective-C by way of C. It is perfectly valid Objective-C, for instance, to write the following @interface Foo : NSObject -(NSString*)instMeth; @end @implementation Foo char* regularFunction(void) { return "foobar"; } -(NSString*)instMeth { return [NSString stringWithUTF8String:regularFunction()]; } @end The Objective-C class has no "ownership" of the function `regularFunction`, nor does any namespacing take place (Objective-C has no namespacing, though Swift does). The function is considered part of the compilation unit (file) that it's written in whether it's inside or outside the class definition. The only way that writing it inside the class definition is different to writing it outside (that I can think of) is that you can use/reference/invoke the C function before you define it if it's inside. I realize that that's way more than you asked, but there you go:P
I'm pretty sure that's not possible, as the documentation states: &gt; "Your app must be the ‚ÄúNow Playing‚Äù app. An app does not receive remote control events until it begins playing audio." This function is apparently only available for audio playing apps, of course you could play some fake audio and it would work, but the music from another app would stop for sure
The Swift compiler imports Objective-C types, and marks them as such, so it knows to generate ObjC method calls instead of Swift ones. Swift doesn't get compiled to ObjC, it's just that the compiler knows how to generate ObjC compatible calls when it needs to. For the reverse case (making Swift things possible to pass to ObjC methods/call from ObjC code), you can mark things in your Swift code with the @objc attribute. Note that that can have a performance cost.
Ah okay. So I added the segue and connected it. So I have a tableView in my main storyboard for the settings page and made 4 different sections each with 3 cells showing different information Now the thing is, it won't let me add buttons on those tableView cells. Am I doing something wrong?
Plus denotes class methods and minus denotes instance method. As an example, +alloc is a class method as you send alloc message in this way [NSArray alloc] and -init is an instance method as you send init method on an instance. It's good to notice that Class is an abstraction that has a description about object/instance of a class. 
I started with a lecture on [udemy](https://www.udemy.com/swift-and-sprite-kit-basics-for-game-developers) It's free and seemed to be a decent start on sprite kit and swift. 
Why not just auto-generate it, in that case - whilst deciding what to do in the cases where the username has already been taken?
If this is what user should enter, I mean a username with _, you should do the following /* imagine this is what user typed; if it's iOS app you get it from UITextField and if it's OS X app you get it from NSTextField*/ let username = "donald_jon" let results = split(username, { "_" == $0 }) // results: [String] = 2 values { // [0] = "donald" // [1] = "jon" // } Now you can compare 
Put a breakpoint on your init-with-coder. If that's being called rather than the init-frame, then your initialization of point1 / point2 isn't happening, so they'll have the default 0,0 values.
Sit down and think about how much YOU would pay for this app. Think outside the box and the answer should be fairly simple because I'm sure you are educated on how pricing in the App Store works if you are coding. I've worked publishing apps for companies and myself. If you want feedback, I wouldn't mind chatting a bit more with you about your app and I can give my feedback and opinion. Feel free to pm. Good luck mate! 
Nope, the lowest spec 2012 13" in fact. I was certainly expecting it not to be a stellar machine in terms of performance (it was very much intended to be my second machine) but I was very surprised at how fast it was. I was even doing some moderately heavy music production on it with no problems.
Well, its a function which takes an UITableView and an Integer and returns an UITableViewCell. You can do this with Closures in Swift.
Also, for reference to help you understand what this is used for, look at the tableView:cellForRowAtIndexPath documentation. https://developer.apple.com/library/ios/documentation/UIKit/Reference/UITableViewDataSource_Protocol/#//apple_ref/occ/intfm/UITableViewDataSource/tableView:cellForRowAtIndexPath:
no. sorry
ask the google about AVAudioPlayer
This is on point. Thank you so much! 
Thank you for the lead. I'm reviewing more about closures now
A quick search came up with this: https://github.com/tid-kijyun/Swift-HTML-Parser/blob/master/README.md
Are you initializing any variables with particularly long strings or many array entries?
You can actually check the code for the directory it saves it to. It's usually in the users application support directory.
Depends on the app. Without knowing anything about it, you have two options. Start the app as free and in the description mention that it's free for a limited time. This way you can see feedback and fix what needs to be fixed. Then you can add a price later. The second option which depends on the type of app is to have the app free but lock certain features to IAP. This allows you to get a lot of users to make your app more popular. If your app is designed to play nice with ads then just keep it free with ads. But this depends on the type of app that you make. If it's something that users will be doing limited interaction with (an app that's mostly running in the background) then this may not be a great option. Games are great for ads (think flappy bird). I haven't released any app so don't take this post as a word of God lol. Just my thoughts.
Thanks for the feedback. I think I will go down the IAP route. I don't have a strong online presence or a marketing budget so it will be hard to sell a paid app up front. With IAP, I am hoping that more users will download and gradually they will pay for new features with time as I will be constantly upgrading the app if I get enough users.
As mentioned you can use the Swift HTML Parser - https://github.com/tid-kijyun/Swift-HTML-Parser I did a scraper for a website a few weeks ago with it. It's fairly easy to use, the short example at the github page should get you going. You can get the HTML of the website NSURLSession data task and in the completion handler you get a string from the data and pass it to the HTMLParser let session = NSURLSession.sharedSession() let loadDataTask = session.dataTaskWithURL(url) { (data: NSData!, response: NSURLResponse!, error: NSError!) in //check for error in response first var err : NSError? let htmlString = NSString(data: data, encoding: NSUTF8StringEncoding)! var parser = HTMLParser(html: htmlString, error: &amp;err) }
On the front page of this sub right now, which may interest you: https://www.reddit.com/r/swift/comments/37sbyk/scrape_a_website_with_swift/
My late 2011 mbp has no issues with autocomplete as well 
Sorry, I forgot to mention, and omitted to add to the initial post. If I set it with self.delegate = self, then animationTransition will respond and didSelect will not. Without self.delegate animation will not trigger. I have updated the post.
the issue was in a part of code I didn't include. in the function that has the video player stop, for some really dumb reason, I put the view dismissal task AFTER the task to restart the video. problem fixed. thanks for the help
Swift is getting swifter swiftly!
Yes ok, but is it swifter than Obj-C?
Read the attached article at the threads head. For the most part Swift is already faster than Objective C ( not something hard to do). In many cases Swift is nearly as fast as C. All in all impressive results for a brand new language. 
I'm a bit lost here, where can I see all the icons available in those fonts?
Although I've used array to sort dictionary items, this could help: http://blog.adambardon.com/tableview-with-many-sections-and-items-from-array/
At the project sites of the individual fonts [Font Awesome](http://fortawesome.github.io/Font-Awesome/), [Open Iconic](https://useiconic.com/open), [Ionicon](http://ionicons.com), [Octicon](https://octicons.github.com)
this was perfect! Thank you! 
Skimmed over it as I'm on mobile. Activity Tracing is great especially if you've got xpc services running but from what I understand it's not currently not accessible through swift without some kind of wrapper code and string enums (can't pass string arguments). Wish they make it swift accessible in the near future.
Your approach would work. It's probably the simplest option to actually implement. There are plenty of python server options out there and generating HTTP requests from swift is not at all difficult. Another option is to embed python directly into the app. The main python implementation is written in C and isn't very large. Swift can talk to C code, so with proper bindings you could run both languages in a single app. This could get pretty complicated with all your dependencies (some of which may not be pure Python) so I wouldn't recommend it unless you have time to burn to figure it out.
Update above!
This is the very definition of MVC. Your MySimulation object is the model, the NSView is the View, and an NSViewController could be used as the Contoller. This way, the simulation can be divorced from all responsibility of displaying the data, and the view doesn't have any specific knowledge about the data or where it came from. 
I use Interface Builder, I guess. What is this whole delegate thingy? I read about it couple times, but didn't quite get it. Could you ELI5, please?
It's because you haven't set a limit on what `destX` and `destY` can be so the ball eventually gets positioned on the other side of the line. An easy way for you to solve this would be to adjust the position to be at the limit if it goes below or over a certain value: // after setting self.destX if (self.destX &lt; 0) { self.destX = 0 } else if (self.destX &gt; maxXPosition) { self.destX = maxXPosition } This is only for the X axis but hopefully you can figure out how to do the same with the Y axis. You'll have to calculate maxXPosition and set it to a value that you want to keep the ball below.
Happy Birthday.
&gt; GameScene().levelTwoButton.hidden = false Here, you are creating a *new* GameScene and setting the levelTwoButton of that new scene to be not hidden. Try just doing: levelTwoButton.hidden = false
I get an error saying use of unresolved identifier. The levelTwoButton is declared in my GameScene so theres no way I could call it without referencing my GameScene. Right?
This is good advice, though its possible that the server does not support this type of authentication mechanism. If they need to store the raw password due to this, doing so in the keychain is possibly the best they can do.
For small bits of data like user credentials, using the keychain as you're doing is great. /u/kingarthur's suggestion of using a revocable login token is great advice though, which you should follow if you're able. For larger sets of data that are too large to fit in the keychain and need to live on the filesystem, make sure that you're using data protection. You can turn on data protection in your app target's capabilities section, which (if i'm not mistaken) makes all file access in your app go through apples device encryption services by default, without you needing to worry about it on a per-file basis. That (and the keychain) will make sure your users' data is encrypted when the device is locked. Another thing you should do if you're able is to use SSL/TLS pinning. In some cases an attacker can spoof an https cert, or install a new custom CA on a device making all certs signed by their custom CA trusted by the device, which means they can still read the traffic to your servers from the compromised device and iOS won't complain one bit. If you pin to the exact certificate you will be using, attackers won't be able to intercept that https traffic that way. AFNetworking and AlamoFire support pinning, if you're using one of those libraries. The only downside to that is that you need to push an app update out when your cert is about to expire or if you want to change it on the server for any other reason.
Are there any video tutorials demonstrating this online?
Thank you for advice with enums. About draw part, I cannot imagine how can it be implemented, all the drawing is done in drawRect, so every draw function shall call it?
The `for..in` loop would presumably be inside the `drawRect:` method, so you're looping over all your drawables and then calling the correct CG APIs to draw your shapes based on whether you're handling a dot or a curve.
Oh, so this object that has .draw creates NSBezierCurve and fills/strokes it itself?
If you added a `draw` function to the structs, or implemented it using the alternate method I mentioned, you could do it like that, and that may be the best way in many cases. Otherwise, you could just replace the `// Draw dot` and `// Draw curve` parts with actual drawing code.
Makes sense. Will do it, when solve my NSViewController troubles.
Well I would start by learning [how to Swift](https://itunes.apple.com/us/book/swift-programming-language/id881256329?mt=11).
You an either learn swift and Xcode like normal people or you could be like me and just take a nose dive off a 100 ft building and just google stuff as you go along making your app and hope for the best (aka trial and error) (I'm not normal and I learn from practical uses. I really don't find the structured class room type deal appealing)
What's stops me from using it is the subpar UI designer. I know the current solution is to do the UI in Xcode but if I have to open Xcode then I might as well use it for the code too
It depends on the fact if AppCode can suggest you some unique coding features you'd like to come back for, like for example refactorings (Rename is there for Swift now) or smart completion or some other intelligent feature.
Honestly it's not like Xcode is THAT bad. I don't feel like running 2 full IDEs just for my iOS development (I also usually have Android Studio running and many other apps)
I spend far more time writing code than using the UI designer. Whenever I find myself writing more than a few lines of code, or needing to so any sort of analysis, I switch to AppCode. For me, Xcode is for project and resource management, AppCode is for code work.
It sounds like you need to be able to read and parse the file piecemeal. To do that you probably need to dip down to the C APIs.
Wow the change to the UI designer is huge. I love that they're focusing on their strengths right now the faster Swift gets to the level of support of Resharper/Intellij the better.
Hi, You could store it in core data and have another method to verify if the information of the products changed every time the app is launch, if it changed you download everything again, if not you just use the core data information. This a better solution if you are not certain if the user have internet connection all the time
Thanks!
The class Series has an attribute called finished import Foundation import CoreData class Series: NSManagedObject { @NSManaged var episode: NSNumber @NSManaged var note: String @NSManaged var season: NSNumber @NSManaged var title: String @NSManaged var nextEpisode: NSDate @NSManaged var remindMe: Bool @NSManaged var finished: Bool } Well I had return menuitems.items[section].count in my code, but it doesnt work so I commented it out. The app still doesnt load now, but I have to sleep now. I'll try to fix it in a few hours. I'll reply here. Thanks for your help, I appreciate it. 
Hi I don't actually use Core Data, I use persistence data since I just want to save a Dictionary. If you want to save your data in persistance memory, once you get your json result you should do something like this: For example my dictionary is something like "ID" : "1", "ProjectID" : "1", where the first element is the key and the second is what I want. First declare an array like this: var userProjects:[[String:String]] = [[String:String]]() the create a method that returns a dictionary [[String:String]] like this: func getUserProjects(idUser: String) -&gt; [[String:String]] { let urlString = "Webservice URL" var EntryID:Int = 0 var ProjectID:Int = 0 var TaskDescriptionID:Int = 0 var TaskTimeHour:Int = 0 var TaskTimeMinutes:Int = 0 var items = [[String:String]()] if let Data = NSData(contentsOfURL: NSURL(string: urlString)!) { let jsonResult = NSJSONSerialization.JSONObjectWithData(Data, options: NSJSONReadingOptions.MutableContainers, error: nil) as! NSDictionary var item:AnyObject var authorDictionary:AnyObject for var i = 0; i &lt; jsonResult["Projects"]!.count; i++ { items.append([String:String]()) item = jsonResult["Projects"]![i] as! NSDictionary ProjectID = item["ID"] as! Int items[i]["ID"] = String(ProjectID) items[i]["ProjectDescription"] = item["ProjectDescription"] as! NSString as String items[i]["ProjectCode"] = item["ProjectCode"] as! NSString as String } return items } return items } Then you call the function: userProjects = handler.getUserProjects(idUser) after that you have your dictionary in userProjects then save it to persistence data: NSUserDefaults.standardUserDefaults().setObject(userProjects, forKey: "UserProjects") NSUserDefaults.standardUserDefaults().synchronize() After that the dictionary will be stored in the device until the application is desintalled. To access the Dictionary you use: userProjects = NSUserDefaults.standardUserDefaults().objectForKey("UserProjects")! as! [[String:String]] To iterate through the dictionary you just do the same as the jason result. I hope this helps, This may not be the best solution but is the one I managed. 
I would recommend against CoreData unless you have a specific business need for all of it's features. For object persistence, check out http://Realm.io 
Why not store it as json?
That would be one possible solution but I want to incorporate a contact class it's own variables, using the JSON only as a input data source. I think this which would be more scalable if the app was ever expanded? 
Thanks for the tip!
Looks like it's a [libc function](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man3/pause.3.html)
You might look into Realm.io if you want an object persistence db, I've been using it and it's awesome. But my other thought was that you would write a constructor for your class that takes a json object and builds itself. You can also have a method that spits out a json string, or json compat dict representation of the class to serialize using NSData/NSJsonSerialization, et al 
Yeah I am implementing an init method for Contact to take a dictionary (from the array of dictionaries) and use that data to initialise its properties. I was just wondering if there was a more simple way to store all the values rather than looping through the dictionary values and setting each property individually. There is a nested dictionary in another nested dictionary and my loops are becoming messy! I didn't want object persistence but rather just retrieve the data on startup and store it in the local temporary data model for displaying.
It would appear that [NSXMLParser is a SAX Parser](http://stackoverflow.com/questions/5316577/what-kind-of-parser-is-nsxmlparser).
I've been looking into Realm, it seems great, but how would I use Realm on a server so that I can update app data globally?
I've used such libraries before in Objective-C projects, I'm currently looking more to see if it's also possible with Swift before I start falling back on such libraries (it's the memory efficiency which is causing trouble) The NSXMLParser from Apple is also an SAX parser but still generates a ton of RAM which is what I want to avoid.
Share the details/example with us here: https://youtrack.jetbrains.com/issues/OC. We'll investigate the issue.
Create a user or contact class and pass in the dictionary into a custom init method. Parse the Json in the init method and then store the contacts either as an array to be passed around or in core data for perpetual storage. 
I have never seen such an awesome survey design, just brilliant
Maybe UISegmentedControl will work for you.
ahh I see! They probably pimped the look of the segmented control 
To achieve that same look you're going to have to create a custom control. See cocoacontrols.com for some source code on other custom controls and then try making your own! ;)
I just built something like this- Make three buttons that are styled to your liking. If you want to animate the highlight bar, you can make that a separate UIView on top of the buttons that slides into place on the button when pressed. In order to get the tab content to update, you can make 3 separate views that contain the contents of each tab. When a tab button is pressed, simply set the view containing the tab you want to show hidden = false, and for the other tabs container views set hidden = true. I personally wouldn't try to cram that all into one view controller. You certainly could, if you'd prefer. But I would make 4 view controllers- one for this page you want, and then 1 for each tab contents. Then I would add them as childViewControllers. There are 3 steps you should follow when adding a child view controller. This is a good example of that process (example not in swift, but the same process applies): https://www.safaribooksonline.com/library/view/the-core-ios/9780133510119/ch07lev2sec18.html Once the childViewControllers are added, you would still just set hidden = true/false on the views (or the view that you added the childViewController's view as a subview) when the tab content switches. Hope that helps. If you have more specific questions, fire away and I can try to help. 
You mentioned serialization, so I had assumed it was for persistence. For nested objects of unknown depth, you'll need to recurse through and use the data to try and initialize objects.
Took a too big screenshot, check the left side with the CPU and RAM stats, the input file was 300Mb
It depends on what the `bodies` property of your `MyGravitySimulation` class is declared as, var or let, because on every assignment of a struct, a copy is made and it is therefore dependent on your new declaration of let or var whether it is possible to mutate the values (Because you can always just make a copy and change that, but you cannot change the original values). Just change your `var bodies : [Body]` in your MyGravitySimulation to a `let`
Apparently, when I tried making changes to one, it did not make a copy, but rather still pointed there.
Maybe this tutorial will help you out: http://www.appcoda.com/in-app-purchase-tutorial/
It's hard for me to help you with that, here is the definition of minimal Example: http://en.m.wikipedia.org/wiki/Minimal_Working_Example .
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Minimal Working Example**](https://en.wikipedia.org/wiki/Minimal%20Working%20Example): [](#sfw) --- &gt; &gt;In [computing](https://en.wikipedia.org/wiki/Computing), a __minimal working example__ (abbreviated __MWE__) is a collection of [source code](https://en.wikipedia.org/wiki/Source_code) and other data files which allow a [bug](https://en.wikipedia.org/wiki/Software_bug) or problem to be demonstrated and reproduced. The important feature of a minimal working example is that it is as small and as simple as possible, such that it is just sufficient to demonstrate the problem, but without any additional complexity or dependencies which will make resolution harder. &gt;A minimal working example may also be referred to as __minimal reproducible example__ or __short self-contained correct example__. &gt; --- ^Interesting: [^Minimal ^music](https://en.wikipedia.org/wiki/Minimal_music) ^| [^Borel ^subgroup](https://en.wikipedia.org/wiki/Borel_subgroup) ^| [^Minimal ^counterexample](https://en.wikipedia.org/wiki/Minimal_counterexample) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+crvxfhd) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+crvxfhd)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
That's cool, didn't know this existed (autowikibot)
Sorry I am new to serialisation so I don't think I fully understand it yet. Thanks for your help though, I used SwiftyJSON to handle the NSJSONSerialisation and the tedious optional management.
Hey, no, this really has nothing to do with Parse. Parse is the name of a backend service where you can store your users and data. It sounds like you want to "parse" a webpage, but that has nothing to do with the Parse service. You can do it all in Swift, you don't need to learn a new language. Here's a few resources, I hope this gets you on the right track: * http://stackoverflow.com/questions/24016142/how-to-make-an-http-request-in-swift * http://www.raywenderlich.com/14172/how-to-parse-html-on-ios Also you really should check out this thread if you haven't already: https://www.reddit.com/r/swift/comments/37sbyk/scrape_a_website_with_swift/ 
An array is a struct so it is always passed by value. This could have to do with the fact that Player is a class and is added to the array by reference. So the array is appended properly but the player objects continue to be modified. I would need to see more of your code to be sure.. Also, can you make Player into a struct? 
You can do this on parse using their cloud code feature. You would need to write some JavaScript though.
Have you tried deleting the app and reinstalling it
sure, but the problem still exists.
That statement doesn't make sense sorry 
I'm pretty new at this but i thought we would only need a bridging header if we were to use the parse SDK designed for objective-C? Parse recently dispatched an SDK specifically for swift and it doesn't need a header file. 
Great! I used typeform.com - wonderful interface.
doesn't work as well :(
Yeah, it's awesome this is the second study I've done using their interface. Always easier to get responses when people enjoy the interface :) Totally agree. There are many many upsides to being a career programmer. It's just important to see and discuss the impacts. 
Every other sub works, right?
If you used presentViewController, you could trigger that from anywhere in the app very easily, while preserving location. For example, if you were to deep link to your app from a website, or if you wanted to provide a tour of your app prior to sign up. You could really do all that with your current setup, but process wise, wouldn't it make more sense to always present your main view, and present a login view if needed? Also, if a users session expired, and they bring the app back up, would they be happy with being brought all the way back to the login screen just to login again? It's really an opinion, but I prefer to isolate my user/session management into a view controller that can be presented whenever, and from wherever I want (while using delegate methods to handle success/failure).
Realm is for object persistence.
I love idea of style guides because it enforce consistency which has its own added benefits which I won't go into. A few things that I disagreed about the style guide though: 1) **Implicit Types** Types should be inferred, don‚Äôt duplicate type identifier if it can be resolved in compile time I tend to specify type explicitly because from what I gather, it may help sourcekit parse things faster and cuts down on compile time because it doesn't have to infer. I can't provide metrics on time saved but for me these things can be quite slow so every little bit helps 2) **Self** Refer to self only when it‚Äôs required and necessary I am interested in the reason behind this? I often use self to denote that i'm assigning a value to something, makes it easier to find parts of the projects where a property value is being modified just by scanning through it 3) **Forced Optionals** Force-unwrapping should be avoid, because it leads to less safer code and can cause unwanted crashes. The use of optionals is to force you to think about whether a value is present or not at a certain part of your code. If a value should definitely have been initialised at a certain point, then I think you should go ahead and use !. By using ?, you may unnecessarily propagate an error and make it harder to debug later on. Using ! may lead to unwanted crashes, but then again if the value should have been present then and there then is it really an unwanted crash? I think you should only use ? is a value can truly be both nil or something valid and ! when the value can not be nil. For instance, in initialising a storyboard, you can do it either way below: NSStoryboard(named: "Foo", bundle: nil)?.instantiateInitialController NSStoryboard(named: "Foo", bundle: nil)!.instantiateInitialController The first way is the way suggested in the style guide; however, it does nothing to address the error that the file Foo.storyboard should have been in your bundle. Sure it doesn't crash but now you've only delegated your error to something down the line. As for the rest of the style guide, seems pretty good, no complaints :)
Because you are unlocking both in the paymentQueue method every time the transaction state is "Purchased". You should be switching on the product ID within the Purchased case, then calling your 'unlock' methods based on which IAP is being purchased Your setup is a little odd too (typically you check for canMakePayments once, etc) Check out [this implementation](http://r2gios.bplaced.net/ios-8-swift-app-purchase/) to get a feel for a basic setup. 
Do you have any idea how to synchronize text with video using AVPlayer
I'd just try removing the sub from the list, add it again and make sure there's no trailing space after "swift". Not sure if the trailing space issue is actually a bug though. Just something I think it might have an issue with. 
Does changing the ? to ! work? var targetText = self.subviews.first as! UILabel
Edit: This crashes the program. Terminated due to signal 9
Try an 'if let' statement: if let targetText = self.subviews.first.text as? UILabel { // this code block only executes if the optional can be unwrapped - just remember targetText is only available in this block println(targetText) }
&gt; let TheCurrentScore = name["score"] as Int &gt; name.setValue(TheCurrentScore + 1, forKey: "score") you should be able to replace both of those with that line.
Do you have import Parse at the top of your file?
There is a website you could use, actually located on this subreddit however I have the link right [here](http://swiftstub.com). It uses less power because it's web based, which will keep the delay to a minimum. 
the way to unwrap on option is by using if let varNameToUse = optional . Remember that Swift is a functional programming language so if your having a lot of if let's, have a function compute a several variables for you instead. 
www.cocoacontrols.com will have something really similar. It'll make your life much easier
It seems that you are stopping the animation for the activity indicator right after resuming the data task, therefore hiding the indicator. You should stop the animation in the completion block for the data task instead and that should do it. 
You should put **actInd.stopAnimating()** after **self.tableView.reloadData()** in your completionHandler. Your current codes hides UIActivityIndicatorView right after it's shown. I can also suggest using [SwiftOverlays](https://github.com/peterprokop/SwiftOverlays) and [Alamofire](https://github.com/Alamofire/Alamofire)
You should try cleaning your computer, I recommend using [Onyx](http://www.titanium.free.fr/onyx.html) for that. I hope it will help you.
1) Class names should be capitalized, it should be obvious from class name that it's UIViewController descendant - like **SettingsViewController**, **StoreViewController** or **SettingsVC** 2) You really need to push 2 view controllers with animation in a row? 3) I may suggest using storyboards and **.perfromSegueWithIdentifier** method 4) Use [autolayout](https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Introduction/Introduction.html) to avoid messing UI on different screen sizes. 
&gt; I don't know if there is usually a small delay in the Playground Depends on what you're doing. Swift code executing in a playground will often cause quite a lot of memory allocation to store value histories.
At my old workplace Manager meant it's a singleton. Had no issues there either :)
My goal was to have a non-storyboard related custom sidebar, so how would I go about fixing what I currently have?
I have the same problem. It seems that we just have to wait that Apple fixes their IDE...
Wouldn't you just watch the currentTime property and do what you need to based on that?
I believe you need to do a specific type of query for users specifically. I'll send you some code that I have when I get home, but it's slightly different because it searches for username in another linked class. EDIT: Here's a query I've done to find a user in a different class, used to delete the other object from the current user's database. OBJECTS are the specific object and can be changed for whatever you have. var query = PFQuery(className:"DIFFERENT CLASS") var userID = PFUser.currentUser() query.whereKey("username", equalTo:userID!) query.whereKey("OBJECT", equalTo:self.OBJECT!.title) query.findObjectsInBackgroundWithBlock { (objects: [AnyObject]?, error: NSError?) -&gt; Void in if error == nil { if let objects = objects as? [PFObject] { for object in objects { object.deleteInBackground() } println("Successfully deleted \(objects.count) OBJECTS.") } }
Ah okay, cheers.
Because the compiler doesn't know that `interestingNumbers` contains something for sure, so it thinks that it's possible to never execute the for loop and therefore `largestKind` would never have a value. To fix it, intitialize `largestkind` to something like an empty string, or make it an implicitly unwrapped optional by adding an exclamation mark after the `String` in the declaration
thanks! i might use this one https://www.cocoacontrols.com/controls/slidemenucontrollerswift if i can remove the right side menu
You can check to see if an array is empty with `myArray.isEmpty` or `myArray.count == 0 ` so even then there's not much use for an immutable empty array
So the hamburger is how you switch news sources? Sounds like you should make a main screen with the news sources listed and then push the selection on top, like how the Mail app handles mailboxes.
That makes me slightly more optimistic. Years ago I attended some Eiffel lectures, and while I can't use it for my current ideas, I loved its structure, it seemed awfully well thought out and intuitive.
You can do inline code like `this` by surrounding your word(s) by two \` (and not ')
The reason `var largestkind: String` doesn't initialise the variable is that it wouldn't make sense for it to. Imagine if I had the code: var largestkind: String println(largestkind) What would it print? There's no string there - you've not given it any value.
To be honest, I think now my issue with this design also has to do with this pretty abstract example code and the guide asking me to introduce the variable like that. It might not come up in practically designed code. I understand the case of the `!`forced unwrap, but I don't know where I would introduce a `?`, remembering the guide it's for speculative type assignment like `var somevar: String?` that could later receive eg. an Integer value. I apologize if I'm wrong, I'm really only 24 hours into Swift coding, and after years of writing nothing at all. With immutable languages, I was about to guess that value changes might be performed through functions, and your argument makes sense that this becomes increasingly complicated with larger data collections. If you don't mind, I'd also like to talk briefly about my planned application design. I want to parse and process raw audio data, and a format that's unfortunately not supported within the OS X audio APIs, or by the Mac audio playback hardware. Looking at tutorials the subject of opening raw file data, and file data with a application-foreign structure is never really discussed. Examples always supply the required data right within the code. In my case I found a whitepaper with the format specifications, but I don't know how to load the data into my app. Can you give me an example for doing that? As a first step I'd like to print out a graph of the audio stream, later I need to process it with a low pass filter which seems to add another big mathematical bag of hurt. I really want to get on top of this, because existing software doesn't begin to offer what I want to do, but it's incredibly taunting.
This would be a pretty big step for Apple if they did this. Guess we will have to wait till Monday to find out.
Microsoft is doing it with .Net, they probably figure to do the same.
When you are designing an API, you may decide it's convenient in a certain method for a parameter to be NONNULLABLE. If it's guaranteed to be non-null, then you don't need to test for that. A user of your API may need to pass am empty array or an empty dict to use your method.
I‚Äôm optimistic it will be open sourced long term, but I‚Äôd be very surprised if they open-source it this early on. Then again, I was surprised at Swift period last year, so who knows.
Okay I got that using let notification: NSNotification because otherwise it'd say Use of unresolved identifier 'notification' Is this correct?
It'd be pretty awesome, but given their history of openness with Objective-C (clang + runtime), I wouldn't exactly call it a big step.
Making the language open source would be something normal for Apple to do - Objective-C's runtime has been open source for well over a decade and clang, the compiler front end to LLVM has been under a permissive license for its entire existence.
I'd love for it to be open sourced. I want to build some intensive programs, but apple doesn't offer server level os support. If I knew I could scale it to high end servers running Linux I'd use swift. 
Yes, it's a Swift file. Somebody suggested using let userInfo = notification.userInfo but I'm not sure how to get the keyboard's height off that.
 userInfo[UIKeyboardFrameBeginUserInfoKey]
Good on you for putting it out there. I wasn't aware of NSUndoManager, so even if I don't use the library, thank you for bringing that to my attention. I recently hacked together my own implementation of an undo system. I'll have to poke around with this to see if it would be more reliable.
I see thanks. I didn't anticipate Swift to be limited like that. Is it sensible to combine Swift and C parts within an app, is it possible? I intent my code to be as modern, future prove and light as possible. 
Yeah, Swift actually works pretty well with C. Unfortunately, if you want to do anything low-level in iOS or on a mac, a lot of the time it'll have to be in C, so it's a pretty common thing for apps to do. C is about as lightweight as it gets - also there's the benefit that it pretty much runs everywhere. The only thing is it's a little unpleasant to do large amounts of code in it.
I see. And in a typical mixed app in XCode, do I place C files right along Swift files in the same app repository, and then call C functions within in the Swift code? This is blowing my mind a bit.
No, that's not the case. [From the horse's mouth](http://lists.cs.uiuc.edu/pipermail/llvmdev/2014-June/073698.html): &gt; Guys, feel free to make up your own dragons if you want, but your speculation is just that: speculation. We literally have not even discussed this yet, because we have a ton of work to do to respond to the huge volume of feedback we're getting, and have to get a huge number of things (e.g. access control!) done before the 1.0 release this fall. You can imagine that many of us want it to be open source and part of llvm, but the discussion hasn't happened yet, and won't for some time. &gt; Sorry to leave you all hanging, but there is just far too much to deal with right now. 
Open source isn't good enough, If Apple seriously wants to see wide adoption they need to consider submitting the language to an international standards body. In the end a well written standard give potential users assurances about the language and its future. Without the drag of a standard Apple would be free to change the language often. 
I guess I'm going to show my age here. Mainly Pascal -- from Turbo Pascal to Delphi, and then Lazarus when I retired with a Mac. Did quite a bit with C and C++, but, being a lazy type (pun intended), I stuck to creating symmetrical arrays and accessing them using subscripts. Things like `(count: 3, repeatValue: [Int](count:2, repeatValue:5))` and `board.append([Int](count:3, repeatedValue:10))` are foreign to me, and required a deeper understanding of how arrays work.
Ah I see, thanks for the tip. I got it working!