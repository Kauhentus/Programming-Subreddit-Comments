Very reasonable, noted that.
Caveat: I haven't yet made a game, but here are some metrics I've made use of in pricing my own work to utilitarian audiences. * A Consumption Version -- The app can consume data, but beyond selection, local saving, and sharing with friends, its job is not to create. It uses standard, on-device sharing features and storage methods. * A Creation Version -- This might be a separate app or the same Consumer app, but with something to unlock. It's supported by small one-time fee or interstitial ads (with an In-app purchase to turn off the ads). The higher my flat fee the more competitors will see a market to copy, and the more price-sensitive my own users will become. * Cloud / Network features -- Am I running a server somewhere to support this? Is there data synchronization among devices? How about cross-platform or web-access? These are real expenses today, and promises of forward compatibility tomorrow (you don't know what devices will come out in the future). It might even be a legal matter if there is a security flaw that exposes end-user data. The only realistic way I see to handle these things is an on-going subscription fee. Example of an app I am speculatively working on today (in my spare time; not for a particular client): It has a very specific target audience that is limited to a total user base of about 700,000 Creators (if *everyone*, who could possibly use it, did). Today, these folks must use their own methods (even pencil and paper, sometimes) to manage these tasks that are regulated and enforced (but not supported) by bigger entities. The pricing I'm thinking of is free for Consumption (there will be bosses who will want to see the results *created* but never want to *create* them for themselves). These Consumers are not in the potential 700K Creator count. For Creation features, I'm about to decide on a flat $3 one-time purchase and no interstitial ads ever. Ads will be thought of suspiciously among this market. If I've underestimated the market, I may have to raise that price it's fair with no competitors on the horizon. On the first release, there will not be any need for network-able features (beyond the standard Activity share sheets), but depending on the adoption, there are some luxury feature I could add with a $1 subscription to support my backend costs. On the downside, my Creation audience has a small audience with bounded potential growth. On the positive side, I know how to market to this audience, and others are less likely to want to rip-off my app *because* of these built-in size limits. I also have to consider that I could be Sherlock-ed any time if the big organizations ever got off their backsides to make this type of app themselves. But the lazy organizations also might want to license my code or buy me out rather than develop their own tools. My potential for profit is effectively $2.09 per one-time purchase (after Apple's cut). If I get a tenth of the potential Creator audience, that's about 70K Creator purchases, and optimistically about $146K earned. That won't be immediate and it will have marketing costs at first (in my time and money). I'll adjust things after launch, but my first moment of truth will be after 6 months. How many purchases do I have, and how quickly is that slope of purchases rising. If my results are under the 3% mark (21K users / $42K), what went wrong? If the slope of purchases still increasing steadily, then my marketing choices were slow to catch on. If the slope is small or flat, the app itself probably isn't solving the right problem. Will I want to continue? That's one-time purchases though. I can release a Version 2, for another one-time purchase but that has it's own trade-offs. User feature requests will probably come in on day one. Is the potential only in another one-time purchase? Or could a number of these features be packaged as a one-time, in-app purchase? Between the 5% and 10% of potential users (35K to 70K users), adopting the subscription features is a grey-area. After 10% though, it could be a reliable income source (since the majority of adopters will be current users, but even that might be small). It's risky, but I still see potential in the app and market, without giving it away or being a big target for knock-offs.
Other people have already provided workable solutions, but I wanted to suggest something a little different. Put a breakpoint on the line number with: switch sentence then run your program. If you don't know how to do this already, google "setting a breakpoint in Xcode". When you hit the breakpoint, execution will pause, and you have a few options for trying to figure out what is going on here. You can open the variables inspector in the left pane of the debugger on the bottom of your screen and look for the *sentence* variable, or you can type: po sentence in the debugger. Take a look at what the value of *sentence* is. If this is not something you've done before, it's definitely worth going through the motions here. If you intend to pursue a career in development, the ability to trace down bugs can be at least as valuable as writing good code. I encourage you to give it a try!
Carthage vs. Cocoapods really comes down to Configuration vs. Convention.
Both are dependency manager**s***
You can do `apt-get install swift` if you set up the Vapor APT repository on Linux
I'm on RHEL / CentOS
Since no one has given a serious answer: Cocoapods builds the dependencies when you build your project. Including cocoapods means you have to use a workspace with all of your dependencies added as separate projects in the workspace, and anytime you make a clean build (or archive) you have to rebuild them all. Carthage checks out the source code and builds the frameworks independently of any project. You then add them to your project and include a script to copy them in properly. It's a much more desynchronized process. Cocoapods is more widely supported and used, and is much simpler to use in most cases. Supporting a cocoapods framework is a bit of a pain in the ass, and including it in your project kind of mutilates your project structure with the workspace and build phases. Carthage is a one-and-done process, where once youve built the dependencies you're good until you need to update one. The downside being it takes forever to build them all the first time and there's a bunch of manual set up you have to include. 
They are still confusing and unreliable while promising one-click solutions. I'd rather go the ./configure ; make ; make install route.
Are you using `UIWebView` or `WKWebView` ? The latter will cache any content.
`./configure &amp;&amp; make` is the user experience. You would not get that as an alternative to using cocoapods/carthage. You’d be the one writing the autoconf/automake files. That’s a thousand times worse than writing a `Podfile`.
Nop, you can’t implement this behavior using concrete protocols. You could declare associated type inside your protocol and restrict it to A subclass, but you can’t use it as autonomous type
It’s not too difficult to do the same thing Carthage does with a Makefile.
You might consider using JSON for your data file instead of .txt and regexps. You'll find many examples on the google for grokking JSON with Swift.
I see what you're saying but I don't see what that has to be invalid. If you cast Child to Childable, then everything will work. The `parent` still adopts protocol A even if it also adopts protocol B. Like, this is fine: protocol A {} protocol B: A {} class C: B {} let obj1: A = C() let obj2: B = C() let obj3: C = C() I guess I'm not understanding protocol inheritance. The above is fine but if it's a property, now it fails: protocol A {} protocol B: A {} protocol Childable { var a: A { get } } struct Child: Childable { var a: B } How does `var a: B` not fulfill the requirement that `var a` adopts `A`? It does. 
&gt; I see what you're saying but I don't see what that has to be invalid. If you cast Child to Childable, then everything could work. No it wouldn't work. An `A` object won't work with a Child. Yes, your first bit is fine but is nothing like the second bit. It would be more like trying to do: let obj: C = A() Which will necessarily fail. In order for a Child to conform to the Childable protocol, it must be able to accept *any* object that conforms to A. So for example I should be allowed to do this: class W: A { } func foo(childable: Childable, w: W) { childable.a = w } The above should be fine for any `Childable`, but your `Child` class can't handle it because it can only work with `B` objects.
Yeah, JSON format is ideal. Is there any tool that helps me put all my data into JSON format, or do I have to do that manually?
Thanks. I think I'm understanding it now. So when you adopt a protocol, you can't use more restrictive types (or subclasses), you have to use the exact type specified in the protocol you're adopting. Otherwise, you wouldn't be able to cast to the protocol type because your concrete type will be more restrictive. I just tried it with subclasses and got the same error class C1 {} class C2: C1 {} protocol A { var c: C1? { get } } class D: A { var c: C2? } I guess that makes sense. Because how could it handle, let casted = D() as A casted.c = C1() Thanks for the help.
I'd skip the JSON, it's not great for a database-type format. Better would be SQLite or similar. Then you could easily read the file in parts. With JSON you really need to read the entire file at once in order to parse it.
Does it work if you archive the application? Running the binary from the debug folder isn't the recommended way of exporting your application.
I'm very new to swift and not sure what I'm supposed to do or how to do it properly. Could you point me to the proper way I should be doing this? 
Sure, if you click `Product &gt; Archive` then Xcode will build a "Release" which is what is used to bundle all you need into an app that can run outside of Xcode. Once you run the build it will open up the Organizer window and on the right there is an "Export" button you can use to... well export :)
Thank you so much for your help so far, but it still just keeps bouncing and doesn't open up. Is there any way to debug that? I'm pretty lost and it's very hard to google this haha.
I enjoy these ecosystem surveys as a way to discover which frameworks and tools other developers use. Getting the lay of the land when jumping into a new language can be daunting. This one doesn't seem especially exhaustive, but even so both Nimble and YapDatabase are new to me; bookmarked for future projects.
I think I figured it out. It seems to be versioned by the git tag of the project. It's weird that I couldn't find any mention of this in the documentation on swift.org...
I agree :D, I didn't notice that at all in the excitement. As for the framework, the page control can be hidden using an api call. 
Sure. ` class ParentA { } class ParentB: ParentA { } class ParentC: ParentA { } class ParentD: ParentC { } protocol Traverseable { func traverseHierarchy() } protocol Childable: Traverseable { associatedtype ParentType: ParentA var parent: ParentType? { get set } } class A: Childable { weak var parent: ParentA? } class B: Childable { weak var parent: ParentB? } class C: Childable { weak var parent: ParentC? } class D: Childable { weak var parent: ParentD? } /* Childable can't be used like that though, because it's a generic constraint protocol now func foo() -&gt; Childable { return A() }*/ //the point of such protocols is that you you can add some cool things like that extension Childable { func traverseHierarchy() { debugPrint(parent) (parent as? Traverseable)?.traverseHierarchy() } } ` &amp;#x200B;
It’s returning a `Bool?` so the `false` is a default value if it’s `nil`. Also, it might be returning other types. That’s just an example. 
Yep, `??` is the nil coalescing operator.
One pattern I've recently seen that's rather hacky, but that I still kind of like and does effectively solve the problem: ``` import Foundation public struct DrinkStyleData { let fermented : Bool let distilled : Bool let displayable: Bool } public enum DrinkStyle: String { case beer case wine case vodka static var data: [DrinkStyle: DrinkStyleData] = { var outData: [DrinkStyle: DrinkStyleData] = [:] switch .beer { case beer: outData[.beer] = DrinkStyleData(fermented: true , distilled: false, displayable: true); fallthrough; case wine: outData[. wine] = DrinkStyleData(fermented: true , distilled: false, displayable: true); fallthrough; case vodka: outData[.vodka] = DrinkStyleData(fermented: false, distilled: true , displayable: true); fallthrough; } return outData } public var fermented : Bool { return DrinkStyle.data[self]?.fermented ?? false } public var distilled : Bool { return DrinkStyle.data[self]?.distilled ?? false } public var displayable: Bool { return DrinkStyle.data[self]?.displayable ?? false } } ``` With that said, recreating a three-bool struct every time is a victimless crime. I imagine it compiles down to less size than even a regular int.
One pattern I've recently seen that's rather hacky, but that I still kind of like and does effectively solve the problem: import Foundation public struct DrinkStyleData { let fermented : Bool let distilled : Bool let displayable: Bool } public enum DrinkStyle: String { case beer case wine case vodka static var data: [DrinkStyle: DrinkStyleData] = { var outData: [DrinkStyle: DrinkStyleData] = [:] switch .beer { case beer: outData[.beer] = DrinkStyleData(fermented: true , distilled: false, displayable: true); fallthrough; case wine: outData[. wine] = DrinkStyleData(fermented: true , distilled: false, displayable: true); fallthrough; case vodka: outData[.vodka] = DrinkStyleData(fermented: false, distilled: true , displayable: true); fallthrough; } return outData } public var fermented : Bool { return DrinkStyle.data[self]?.fermented ?? false } public var distilled : Bool { return DrinkStyle.data[self]?.distilled ?? false } public var displayable: Bool { return DrinkStyle.data[self]?.displayable ?? false } } With that said, recreating a three-bool struct every time is a victimless crime. I imagine it compiles down to less size than even a regular int.
So I solved this with Carthage. Another guy cloned my project &amp; it works fine on his machine. Not sure what the problem is with my machine or CocoaPods. I'll post answer on StackOverflow shortly. Now the most painful thing to do is to revert back from CocoaPods to Carthage. Idk how to do that 😂 Anyways thank you :)
Solved this with Carthage. Thank you for your help though :)
New file for every class is the easiest way to organize. 
A bit surprised that CoreData is so strong, I would have guessed more Firebase and Realm.
As of now, I have noticed there are limitations on supported country list in both visa and mastercard checkout. I don't get specifications from my supervisor for now, but this can be following 2 scenarios. 1. I can pass details like card information and items in cart to API and the backend server will take care of things. 2. I will handle the transaction in iOS app, and send information to API for use as history of purchases. For second scenario, may I know the correct procedure for implementing features like visa checkout or mastercard checkout in Myanmar, which is not included in supported country list.
In almost all cases it makes sense to have a separate swift file for each class. This makes your project structure a lot easier to understand for yourself and others. Your navigation through the project will also be faster (switch files instead of switching files AND finding the correct parts). I can only think of very few cases in which I would put multiple classes into one file. 
I get "403 Forbidden" for your pictures.
is it fixed now? &amp;#x200B;
I'm not sure that will help me for my specific issue actually but you've certainly showed me I have plenty of learning to do! Thanks for taking the time to show me that.
I haven't implemented Visa Checkout or Mastercard Checkout before, so I don't know the procedure. Sorry.
Even if you fix what u/twostraws said, that method is not exposed outside of the declaring scope. Methods and properties have ‘internal’ access control by default which means that the method you are calling is inaccessible ouside the TreehousePulley struct. https://docs.swift.org/swift-book/LanguageGuide/AccessControl.html
My advice is that you could take a review to the SOLID design principles. Just in order to give you an insight of how can you achieve a well organized and maintained code. Then you can research a bit about design patterns.
Honest question: why downvote this? 
That makes sense. Most of the tutorial projects I've been following do not do this though. Maybe it's because they're small projects and so everything can be contained within the ViewController.swift file?
Yeah, if you are just getting into programming, regardless of the language, this is a very important thing that can save you a lot of trouble when writing some code. If you ask me, this is as important as knowing data structures or control flow statements.
Def not running a server with such magnitude of connections. Thank you. Relieved a lot of stress I had. 
Because OCD is not a really nice term to describe what any iOS developer worth it's salt does.
The heat issues were pretty much due to a misconfiguration and they were fixed through an update shortly after everyone made a big fuss over the issue. The i9 MacBook Pro is a perfectly reasonable option and is certainly faster than the i7 version. However, both of them are great computers and will handle most computing tasks you throw at them, including your tasks outlined here. Yes, the i9 is likely to be faster but the i7 should work just fine for you.
internal means it's tied to the framework, not class. There is no class private in swift, just scope private and file private.
 var defaultData: Model.Drink? = nil { didSet { setupText() } } public var type: Style = .normal { didSet { setupText() } } public var checkInDate: Date? { didSet { setupText() } } public var name: String? { didSet { setupText() } } public var abv: Double? { didSet { setupText() } } public var volume: Measurement&lt;UnitVolume&gt;? { didSet { setupText() } } public var style: DrinkStyle? { didSet { setupText() } } public var cost: Double? { didSet { setupText() } } A ViewModel with RxSwift would do wonders for this redundancy 
I have optimized this code for maintainability and developer friendliness. No sync issues, performance loss is negligible.
\&gt; I have optimized this code for maintainability and developer friendliness. No sync issues, performance loss is negligible. &amp;#x200B; Wow, okay, so... some thoughts: * Isn't the point of showing the source code so that the world can tell you what's wrong with it and help you improve it? Not only have you acknowledged that you are performing non-optimally but that you are also saying it doesn't matter? * If you're ever at a point where you say things such as "performance loss is negligible" then you might as well pack up your shit and go home. You can always find a job where apathy and negligence is acceptable. Good developers want to learn and improve. * If you research MVVM or RX then you'd know that all of this could be super clean and developer friendly. VERY LITTLE of the current logic in your CheckinViewController should be in the view controller. You could very easily abstract out your logic into a viewModel and have the data drive the individual views rather than redoing EVERY view with EVERY data change. How is this not developer friendly? viewModel.confirmButtonTitle.drive(confirmButton.rx.title(for: .normal)) .disposed(by: disposeBag)
 if indexPath.row == 0 { cell.inputLabel?.tag = 1 cell.inputLabel?.clearButtonMode = .never cell.textLabel?.text = "Alcohol (g) in Standard Drink" cell.inputLabel?.text = fmt(Defaults.standardDrinkSize) cell.inputLabel?.keyboardType = .numbersAndPunctuation } else if indexPath.row == 1 { cell.inputLabel?.tag = 2 cell.inputLabel?.clearButtonMode = .whileEditing cell.textLabel?.text = "Max Drinks per Week" cell.inputLabel?.text = Defaults.weeklyLimit != nil ? fmt(Defaults.weeklyLimit! / Defaults.standardDrinkSize) : nil cell.inputLabel?.placeholder = "0.0" cell.inputLabel?.keyboardType = .numbersAndPunctuation } You shouldn't be hard coding any of this. &amp;#x200B; You could easily make an enum enum someAlcoholEnum: Int { case something case somethingElse var textLabelText: String { switch self { case .something: return "Alcohol per drink" case .somethingElse: return "Max drinks per week" } } } You're also force unwrapping cells bro. 
 Defaults.healthKitBaseline = data.1 } } } } } } } } At no self-respecting company would this pyramid of doom be acceptable 
 UIColor.init What's wrong with UIColor(...
 deinit { } Don't keep code you're not using
Why GPL?
You are right. That’s my bad!
You might want to consider an eGPU if you are powering two 4k monitors and you have tasks that could take advantage of the extra power. Otherwise you have a nice setup! &amp;#x200B;
\`FirstViewController\` is a bad name for a ViewController. You should name it to be specific to the logic the ViewController handles. What if a potential UX expert said you should redo the orders of the views? 
But he's not needing a database with queries etc. What he has right now is a static config file which just presents the questions. cf. overengineering. 
GPL only makes sense because OP doesn't want to ever resubmit this project, it seems. 
As others have said here, your machine sounds pretty good. It's hard to say in your specific case, but the i7 is a solid CPU. While the i9 is an improvement, I doubt it would be critical. With potentially multiple copies of large databases, and code projects on your machine, you likely find the 512GB drive space is your limiting factor before the CPU would be an issue. 
Why is the existing one not what you need? is it because it could result in a negative number?
Create a persistent property.
How's this? ``` import Foundation func euclideanDivide(dividend: Double, divisor: Double) -&gt; (quotient: Double, remainder: Double) { let quotient = floor(dividend / divisor) let remainder = dividend.truncatingRemainder(dividingBy: divisor) return (quotient, remainder) } euclideanDivide(dividend: 11, divisor: 2) // returns (5, 1) ```
Embedded classes too?
well, since you would be declaring them inside another class that would be impossible. 
Buddy, if you need real power in Xcode – assemble your own Hackintosh. It will cheaper and faster. Welcome to the r/Hackintosh
Hi Daft_Func! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/9d1733/need_your_opinions_about_my_app/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
Here's reviews of a few [Swift tutorials](https://reactdom.com/swift). maybe one of them might be a good fit for you.
Using 3 backticks doesn't work on Reddit, you have to preface each line with 4 spaces instead.
I figured it out and it was the operator is a moron error. I had some dumb code thing but I was _sure_ it was my configuration so I didn't even pay attention. Thanks for your help! 
Huh, weird. It's working for me on the website and in the official mobile app on iOS, but not in Apollo on iOS. What platform are you on?
&gt; Isn't the point of showing the source code so that the world can tell you what's wrong with it and help you improve it? To some degree, sure. But also: to share my findings with other people; offer working examples of, e.g., Untappd, HealthKit, and CRDT-like structures in production; provide a guarantee that my app will be usable even if I take it off the App Store; and give something back to the community. Plus, I enjoy discussing my design decisions for the sake of conversation. &gt; Not only have you acknowledged that you are performing non-optimally but that you are also saying it doesn't matter? The more I program, the more I realize just how vital it is to build code that's dead simple to maintain, rearrange, extend, and manipulate—especially when you're on an extremely tight schedule and your requirements are constantly changing out from under you. In other words, it's often worth optimizing for development ease above everything else. If this means a slight (and I do mean *slight*) performance hit, then it's 100% worth it. Do it the lazy way first, then profile extensively and work on your chokepoints. I like the `setupText()` pattern because it's idempotent, reasonably efficient, and keeps all the UI code in just a single spot, isolated from the model. If I decide to totally rethink my check-in UI, I know exactly where to find that code. I may also rest assured that the code will keep working even if I add new properties, set the same property multiple times, add new interactions, or happen to call `setupText()` multiple times in a row. There's no error state to get into: everything converges automatically and moves in lockstep. &gt; If you're ever at a point where you say things such as "performance loss is negligible" then you might as well pack up your shit and go home. You can always find a job where apathy and negligence is acceptable. Good developers want to learn and improve. If you make your code more convoluted and prone to breakage just to shave off 1ms, you're acting irresponsibly. Jonathan Blow [once shared an anecdote](https://gamedev.stackexchange.com/questions/15816/why-arent-linked-lists-more-common-data-structures-for-enemies) to this effect. When he was younger and digging through the source code for Doom, he got mad when he discovered that Carmack was using a linear search instead of a far more efficient binary search when dealing with WADs. Eventually, he gained the wisdom to see that optimizing for developer productivity was far more important than being 100% efficient everywhere. (In fact, game developers have been espousing this viewpoint for years.) Good developers learn and grow, but they also *ship*. &gt; If you research MVVM or RX then you'd know that all of this could be super clean and developer friendly. VERY LITTLE of the current logic in your CheckinViewController should be in the view controller. You could very easily abstract out your logic into a viewModel and have the data drive the individual views rather than redoing EVERY view with EVERY data change. How is this not developer friendly? Yes, this is a pattern I've been intrigued by for quite some time. The challenge with this project is that I literally had 3-4 weeks to build everything up from scratch and then release it in a finished state. It was a sprint, not a marathon. Everything that I wished I could learn, but didn't really know yet, had to be punted. But actually, two arguments against RX. First, having tinkered with similar patterns in the past, I'm not sure how pliable they would be with respect to custom animations, view controller transitions, and other bits of bespoke interactivity—especially when transitioning between different values, or when prototyping demands that this stuff change at a moment's notice. (For example, with my current setup, implementing pretty animations when changing values in the check-in VC would be very simple.) Second, my experience with production-grade app development *strongly* favors pipeline-based solutions, where related actions (such as updates to all the labels in a model-backed view) happen predictably, all at the same time. "Magic" leads to bugs. Good code is easily segmentable. &gt; also, `text` is a shitty name for a textView Yes. See: "had no time".
I agree, but I didn't have time to find alternate patterns. What's the best practice for chaining callbacks in Swift?
Good call.
I would always name them based on the content rather than any attributes you give them, as you may want to change these for different size classes, or if your design changes. So something like “playerCardStackView” and “playerMetaStackView, however if you split things out into their own views you can make the names even more concise, for example if you create a PlayerView to hold all these stack views, you could name the stack views “pictureStackView” or “metaStackView” as they are in the context of a PlayerView Hope this helps 
This is, admittedly, a selfish reason, but it keeps the code open source and free while preventing people from releasing straight-up clones in the App Store. I would prefer my release to be the definitive version.
I did a demo for someone on reddit some time ago and posted a link, here it is: 
Thanks mate. I'll take a look at it
Got a few errors when loading this: Enum element 'beer' cannot be referenced as an instance member Attribute 'public' can only be used in a non-local scope **QuickCheck.playground:29:1: note: to match this opening '{'** **{** &amp;#x200B; Seems the comma wasn't needed at the end of the return and the '\]' doesn't have a match and missing a "}" &amp;#x200B; I was reading the code trying to get a handle on it. &amp;#x200B;
Do you have any positions for iOS interns? Preferably a summer internship. Thanks :)
in your case you would make the minimum size the size of the sticky bar, and make the autolayout of the sticky bar left, bottom, right to superview and height of the minimum height. and the autlayout of the image, left, top, right, height, tat way itll replicate the exact video.
Actuality you could put an embedded class in an extension and have a separate file for it. 
If you have any internship in France it would be nice !
Same way I handle mine. Though if a stack view is the root of all views I just go with `stackView` 😅
To anyone in the future, solved it. Got it working with both Carthage &amp; CocoaPods. Check out the solution on [StackOverflow answer](https://stackoverflow.com/a/52159872/6141587) or [Github issue](https://github.com/sindresorhus/LaunchAtLogin/issues/13#issuecomment-418700592).
What is even the question? The formular you posted is not ambiguous at all.
If ((lat1-lat2)/2) = x the formula posted is sin x \^ 2 which could mean (sin x)\^2 or sin (x\^2). It could even mean sin(sin x)\^2 etc. I am rusty on the conventions for these things.
My response was to upvote the answers given, I would be happy to thank the posters but do I thank all of them or what? More conventions I am ignorant of.
&gt;((lat1-lat2)/2) = x why would the parenthesis on the outside belong to x. obviously x=(lat1-lat2)/2. this leaves sin(x)^2. there is literally 0 ambiguity.
Upvotes could be from anyone. I'd say the best thing to do would be to give some feedback, if the solution worked, if there were further questions. That sort of thing. Otherwise someone would never know if the original poster saw the answer and if it worked out.
No, you can not just pull the power inside and apply it to the argument. sin(x)^2 is the same as (sin(x))^2.
Ok willdo thanks
It could not. This is the form f(x), which is a function and all one part. You can not separate out the parameters of the function and the function itself so: sin(x)^2 can not be interpreted as sin(x^2)
Ok thanks
Thank you 
Glad to help!
By the way, the Swift code would be: import Darwin let lat1: Float = 60 let lat2: Float = 20 let result = pow(sin((lat1 - lat2) / 2), 2) 
Thank you, that's a nice piece of code which I will keep if I may. It works for decimals but not for negatives in the way I require which is detailed below. If you have an easy solution pls share if not I will see what I can do. FROM THE AVIATION FORMULARY BY ED WILLIAMS http://www.edwilliams.org/avform.htm#Math Note on the mod function. This appears to be implemented differently in different languages, with differing conventions on whether the sign of the result follows the sign of the divisor or the dividend. (We want the sign to follow the divisor or be Euclidean. C's fmod and Java's % do not work.) In this document, Mod(y,x) is the remainder on dividing y by x and always lies in the range 0 &lt;=mod &lt;x. For instance: mod(2.3,2.)=0.3 and mod(-2.3,2.)=1.7 If you have a floor function (int in Excel), that returns floor(x)= "largest integer less than or equal to x" e.g. floor(-2.3)=-3 and floor(2.3) =2 mod(y,x) = y - x*floor(y/x) The following should work in the absence of a floor function- regardless of whether "int" truncates or rounds downward: mod=y - x * int(y/x) if ( mod &lt; 0) mod = mod + x 
Great thank you - if it's not too off topic why use Float rather than Double?
I would only use Double if that kind of precision is necessary, otherwise it could be overkill. It's a tradeoff between precision and size/speed, many times you don't need that kind of precision for a one-time calculation.
Lovely concise code thanks
This helps! I just wasn’t sure how much detail to provide in the name but I think what you’re saying makes sense here. Thanks!
I'll be on the lookout for this. Thanks for the feedback!
I'll be on the lookout for this. Thanks for the feedback!
Why aren't you using delegation?
Delegate the TableView data to the Detail View? I may not be asking the right question to your question. 
https://medium.com/ios-os-x-development/pass-data-with-delegation-in-swift-86f6bc5d0894
Even though these positions are remote, Rightpoint requires you to have work permit in US, MartianCraft requires travel to Houston quarterly. Didn't check others. Would it be possible to tag such listings with location requirements? Thank you for your efforts though :)
There’s 1,000 better tutorials on delegation. That includes Apple’s own Master Detail View template! But it’s fairly painless. Define a protocol for DetailView protocol DetailViewDelegate { func handle(detail: Any) } Make the Table be able to handle Detail delegation extension TableView: DetailViewDelegate { func handle(detail: object) { save(object) } } Wire it up in the DetailView class DetailView { let delegate: DetailViewDelegate func handle(object) { delegate.handle(detail: object) } } 
Thanks for the feedback I'll try and do that 
Great, thank you both. &amp;#x200B; /u/best-commenter, what is `object` in reference to? 
I am unqualified to comment but thank you for pointing this out - I will go into it.
true that
That's a [generic](https://docs.swift.org/swift-book/LanguageGuide/Generics.html) function. It takes a parameter that can be any type and it can be constrained to certain types. Here my generic type is `T` and I'm constraining it to any type that conforms to the `FloatingPoint` protocol. I do that to ensure it can have the necessary operations performed on it - subtraction, multiplication, division, and rounding. func modFloor&lt;T: FloatingPoint&gt;(_ lhs: T, _ rhs: T) -&gt; T { return lhs - rhs * (lhs / rhs).rounded(.down) } If I didn't constrain it then it would look like this: func foo&lt;SomeType&gt;(bar: SomeType){ /* do something */ }
Hmm, that's interesting. I didn't see any mention of this being added to the new look. Not that it matters, really, so many people prefer the old look and use that exclusively. It's silly for them to put it on one and not the other.
You're more than welcome to keep and use it. Looks like you've got a lot of good answers from other commenters (particularly the generic functions), but here's an updated version of my solution with the Euclidean mod: func euclideanMod(dividend: Double, divisor: Double) -&gt; Double { return dividend - divisor * floor(dividend / divisor) } euclideanMod(dividend: 2.3, divisor: 2) // 0.3 euclideanMod(dividend: -2.3, divisor: 2) // 1.7 func euclideanDivide(dividend: Double, divisor: Double) -&gt; (quotient: Double, remainder: Double) { let quotient = floor(dividend / divisor) let remainder = euclideanMod(dividend: dividend, divisor: divisor) return (quotient, remainder) } euclideanDivide(dividend: 11, divisor: 2) // (quotient: 5, remainder: 1) euclideanDivide(dividend: -11, divisor: 2) // (quotient: -6, remainder: 1) 
Would really appreciate this as well :)
I can't believe it doesn't mention the absolutely awful tooling. I am just appalled at how shitty the refactoring and other tooling is in IDEs. There is absolutely no excuse for this, either, given Apple's resources. 
&gt; MartinCraft Typo, should be MartianCraft
I explored something like this, this might be of some use to someone https://github.com/adamnemecek/phantomlike 
The didSelectRowAt method does not transition to view controller. You are only creating the view controller, but not presenting it. How does it present the detail view controller? Are you using storyboard with segue to detail view controller? If so, there's your problem. You'll need to setup the view controller in prepare for segue method. &amp;#x200B;
That seems like not the right approach to a data problem. Use a database. 
I wouldn't use either of those. Parsing that much data in a text plist or JSON format will also be slow. A binary plist might be ok but really you should be using a database of some kind or at least loading them lazily in some way. What is the use case? Surely you're not using all 8,000 strings at once? What approximate size are the strings?
No more than 9 at a time. Strings are on average 8 characters. 
agreed with thisischemistry. use a database, no need to read 8000 strings to pul a few, plus every time all strings will be loaded onto memory.
Understood, thanks 
Probably to avoid dependency circles.
There is no garbage collector
If you enjoy swift dev then what's stopping you? Apple is worth $1 Trillion...do you believe in the Apple ecosystem? That's the question. 
If you’ve defined your array as a literal in source file, the slowness is probably the type system trying to evaluate the expression. Maybe just explicitly annotating the declaration will improve build time Like so `let strings: [String] = [ // ... contents here ]` However, there should be no runtime performance penalty to speak of. 8000 elements isn’t a very large array, and defining it this way means you don’t even have to parse a file at runtime. 
Thanks. I've corrected it!
The “above formula” is not well-formed. It has two left parentheses and three right parentheses.
Absolutely, I've done development on a 2010 MacBook Pro and it was decent for most stuff. A 2012 will be a little slow for some tasks but it should work ok. If you get an SSD it will help quite a bit too. Either [external](https://www.macworld.com/article/2907125/use-an-external-ssd-to-make-an-old-mac-feel-new-without-cracking-it-open.html) or [internal](https://guides.crucial.com/Guide/Mac+Mini+Late+2012+SSD+Installation/637). You can even replace the old HD too and do a [dual SSD](https://guides.crucial.com/Guide/Mac+Mini+Late+2012+SSD+Dual+Drive+Installation/636) if you like.
I updated my pseudocode to be a bit more clear.
It's more than enough, but it's better if you have SSD :D
It may be just enough. Check the requirements for Mojave and the new Xcode. The system is certainly powerful enough, if that is what you are asking, but it might not be 'new' enough to run the updated software. I have a mid-2011 iMac with 16GB of Ram and it is fine, more than than fine to be honest. But I am going to have problems with Xcode10 and Mojave, because Apple is going to force me to upgrade very soon if I want to continue to upload apps.
I depends upon what type a person you are. I would have extreme patients problem on that platform. RAM isn't everything when it comes to development these days. &amp;#x200B; As others have suggested check with Apple latest XCode requirements. Some specification may be suggestions others absolute requirements. &amp;#x200B; No beyond Apple saying no way that platform will get you started. Perosnally I like a far more responsive system for development.
https://swift.org/blog/iuo/
It's not supposed to be a forced downcast, rather a forced unwrap (or *coercion* as some documentation puts it. The original type is `Date?`. Downcasting with `as!` gives the warning `Forced cast from 'Date?' to 'Date' only unwraps optionals; did you mean to use '!'?` Thanks for the input!
All you need know is in "The Swift Programming Language" --- Automatic Reference Counting. It's not too much, read it carefully. And you will get a lot.
It's perfect. Put in an SSD and it's just fine.
Oh, if your type is already Date? Then why not drop the as and just put dateAdded! 
Very interesting. I haven't seen an article that so nicely explains why you'd want something different from the usual UINavigationController or UITabBarController. 
Wonderful, thank you! I'll test this out and let you know if it works. 
The first question would be to ask yourself what purpose the app would have. Sure you could probably make a native iOS app that accomplishes a lot of what your schools website does, but it would be a lot of work. It might instead be easier to make the current website more responsive, and display/work better on mobile. That being said going the mobile app route depends on what platform you want your app to run on. If you want to make a native iOS app, (i.e. it only runs on iPhones), then you could use Objective-C or Swift. I would suggest using Swift since you don’t have previous programming experience, and it is much easier to write. Also, it’s the new language for iOS development, and has a really bright future!
I imagine a comprehensive answer here would be quite overwhelming for a beginner as there's quite a lot to consider and a lot of options to choose from. To start with, I'd suggest thinking about the platforms you'll want to support. Only iOS or only Android, I'd say choose their native tools and languages. If you want to support both Android and iOS (I'd guess most parents will have one or the other), it could make things easier to choose a cross-platform framework. There are a lot of these to choose from (React Native, Qt/v-play, dart/flutter, ionic, etc). Choosing which of these will work for you depends a lot on the features you'll need. You will also need to consider how the website is built. If you want to use the same data, you'll need to know about the current back end. Is there a rest API you can use, for example. Try to plan out what you need and then start asking more specific questions about each of those things.
Oh lord how things have changed. The "traditional" way of coding was to put asserts everywhere to make sure the bugs were worked out during testing. The disagreement was whether these assertions should be turned off during compilation or left in. 
? Your algorithms should be designed to work and they should know how big an array is. I can't conceive of a situation where your way makes any sense at all. In general an index should be a known number, the program should know whether it's in the array. Usually you can avoid indexes altogether using foreach or filters which are better anyway.
There are definitely cases when you end up doing a range check and then doing a subscript operation. A safe subscript operator can roll those two operations into one.
You just need to access the selected index property of the segmented control and switch on it: @IBAction func chooseOnePlayerDifficulty(_ segmentedControl: UISegmentedControl) { let selectedIndex = segmentedControl.selectedSegmentIndex guard selectedIndex != segmentedControl.noSegment else { return } switch selectedIndex { case .sluggish: onePlayerGameType = typeOfGame.sluggish case .average: onePlayerGameType = typeOfGame.average case .ninja: onePlayerGameType = typeOfGame.ninja } } And fetch the selected game type: @IBAction func handleStart(_ sender: Any) { fetch(gameType: onPlayerGameType) } &amp;#x200B;
This is the second part of the previous post: https://www.reddit.com/r/swift/comments/9db5ji/composition_of_uiviewcontrollers_and_navigation/
How are swift compile times?
I guess I just don't understand on a fundamental level the interplay between Objective-C and Swift. Why can't those protocols be "bridged" to allow Swift classes?
They are only "translated" to Swift. The core is still in Objective C and will be for a long time.
What if I want Android users to be able to access the app?
Yes. But you still need to get the row number or dog fvia didselect row method. Use a class var, I would name it selectedDog. Set selectedDog in didselect method. In prepareforsegue method you need to cast the presentedViewController into a ShowDetailView and set the dog to selectedDog. FYI: A better name for ShowDetailView would be DetailViewController or DogViewController. 
&gt; I realized that my build times drastically slowed once that swift file with the array was added to the program. I assume that when this program runs on the iphone, it will also load slowly. No. Your *build* times increased, but your *run* times didn't.
The history behind it is that Objective-C was originally just a pre-processor and small runtime added on to the C language. Basic things like standard memory management for objects was added to NSObject instead of the Objective-C language. In Swift, all the low-level stuff NSObject would have provided classes is given by the language itself. In Swift code, your classes get the free runtime stuff Swift provides but the Objective-C frameworks don’t know how to talk to the Swift runtime. For example, they can’t get information on how much memory your custom class instances need without sending messages (calling functions) declared in NSObject. Thus, making classes inherit from NSObject when needed *is the bridge* to allow Swift classes.
Very interesting. Thank you!
That has been the best thing I have tried. Thanks!
So decleared vars which won’t be used will stay forever? How to delete an object e.g a n UIimage? Is there a base delete function which is herited to all objects? :)
It’s completely different then, you would need to write it in Java… There are some cross platform alternatives, but I think making the website more responsive would be definitely easier than develop an android and ios app
They go away when there are the reference count reaches zero. The compiler automatically keeps track of the reference count, thus ARC. In the olden days, 2010 you had to do it manually. You can’t force the release, but if you want to execute something when the object is released, you use deinit in swift and dealloc in ObjC.
Do you have a code example? I understand you're learning, but this question doesn't make a lot of sense. Maybe with an example we'd be able to help you out!
Your question is difficult to understand. Can you give an actual example of the construct that you are complaining about? Do you mean: for item in array { if let part = item.part { // part is well defined here. see [1] } } // you want to use part here [1] if so, then make the code that follows the loop a method or function, and call it inside the inner if statement, where the [1] is.
Easiest way is with a UITableView in a UINavigationController that has an [Edit] button on the top right. Use the Edit button to toggle on UITableView 's edit mode that turns on the delete indicators, and you also get swipe-to-delete. That's half the job. You can also use UITableView's drag-to-rearrange support when in edit mode. Now for the '+' button. You *could* put a '+' button on the left of the Navigation Bar, but that's old fashioned. Best to leave that spot for the UINavigationController's standard back button, even if you aren't using it in this viewController. Look at what Apple's Reminders app does: There's a special UITableViewCell subclass that just holds a '+' and is always the last item. Tapping it brings up U.I. to create a new item.
It's a bit of a morass but.... //airbases is a dictionary of aerodromes //eg var airbases:\[String:locus\] = \["EGAA":locus(alpha:"Belfast", x: 6.25, y: 54.6618) ... \] func distance(from here:String, to there:String)-&gt;(Double, Double){ print("from \\(airbases\[here\]!.alpha) long \\(airbases\[here\]!.x) lat \\(airbases\[here\]!.y) to \\(airbases\[there\]!.alpha) long \\(airbases\[there\]!.x) lat \\(airbases\[there\]!.y)") //dra is degrees to radians lon1 = dra(airbases\[here\]!.x); lat1 = dra(airbases\[here\]!.y); lon2 = dra(airbases\[there\]!.x); lat2 = dra(airbases\[there\]!.y) dist = 2\*asin(sqrt(pow(sin((lat1-lat2)/2), 2)+cos(lat1)\*cos(lat2)\*pow(sin((lon1-lon2)/2),2))) \* 3440 //dist works fine //lon1 = 2.0664 if sin(lon2-lon1)&lt;0 { //lon1 = 2.0664 //Calculating heading in func distance for convenience - maybe a mistake trueCourse = acos((sin(lat2)-sin(lat1)\*cos(dist))/(sin(dist)\*cos(lat1))) // **I just get nan which is really what i want to solve** }else{ trueCourse = 2\*Double.pi-acos((sin(lat2)-sin(lat1)\*cos(dist))/(sin(dist)\*cos(lat1))) //**nan here too when flows here** } vector = (dist, trueCourse) return vector //2145, nan } //**lon1 = 0, why?** &amp;#x200B;
Thanks yes that is where I am getting to now... just found out you can label them which is good too. Would be good to know once and for all how it works with if and when data is allowed out of loops - is using return the only way?
Hey thanks for the answer but I'm looking for Cocoa solution :)
I don't find the examples all that convincing. I just did a grep, and in the past three years of Swift, I haven't used it once... Anyone comment? O\_o
Mostly for binary comparability if I had to guess. Objc protocols can have optional methods, which can be checked for using `respondsToSelector:`. I think `SwiftObject` implements this method under the hood, but it's probably not guaranteed to in the future.
&gt; Its usage can be hard to understand [No, it's not](https://docs.swift.org/swift-book/ReferenceManual/Statements.html#ID532). The statement in the curly braces will be executed when the scope exits . That's it, simple and done. func foo() { // scope starts defer { print("test") } } // scope exits, defer executes foo() // prints "test"
I'm not really going to spend the time going through this, but I suspect either you're dividing by 0 ((sin(dist)*cos(lat1) is 0) or the value you're trying acos isn't between -1 and 1. You have to do some logging!
If you preface each line with 4 spaces then it will format it as code.
`defer`’s main advantage is to keep the nesting depth of your code as low as possible. It’s pretty rare to find something you can’t do in another way (actually can’t think of anything) but it might lead to safer code: override func layoutSubviews() { defer { super.layoutSubviews() } guard something else { return } /* do stuff */ }
I'd also add its useful for DispatchGroup as well. You can group.enter() then defer the group.leave() call
I did but I think was confounded by the wrapped lines...
It was distance measured in radians that screwed me. Beyond that I was having trouble with loops and variables - can't say I have mastered it but have learnt a lot. This forum really helps.
 //airbases is a dictionary of aerodromes //eg var airbases:[String:locus] = ["EGAA":locus(alpha:"Belfast", x: 6.25, y: 54.6618) ... ] func distance(from here:String, to there:String)-&gt;(Double, Double){ print("from \(airbases[here]!.alpha) long \(airbases[here]!.x) lat \(airbases[here]!.y) to \(airbases[there]!.alpha) long \(airbases[there]!.x) lat \(airbases[there]!.y)") //dra is degrees to radians lon1 = dra(airbases[here]!.x); lat1 = dra(airbases[here]!.y); lon2 = dra(airbases[there]!.x); lat2 = dra(airbases[there]!.y) dist = 2*asin(sqrt(pow(sin((lat1-lat2)/2), 2)+cos(lat1)*cos(lat2)*pow(sin((lon1-lon2)/2),2))) * 3440 //dist works fine //lon1 = 2.0664 if sin(lon2-lon1)&lt;0 { //lon1 = 2.0664 //Calculating heading in func distance for convenience - maybe a mistake trueCourse = acos((sin(lat2)-sin(lat1)*cos(dist))/(sin(dist)*cos(lat1))) // I just get nan which is really what i want to solve }else{ trueCourse = 2*Double.pi-acos((sin(lat2)-sin(lat1)*cos(dist))/(sin(dist)*cos(lat1))) //nan here too when flows here } vector = (dist, trueCourse) return vector //2145, nan } //lon1 = 0, why? 
It's probably a custom FUSE driver they wrote, that exposes their storage API as a filesystem.
Thanks -I suppose I need to indent more heavily on the long lines.
Is there more code you could post? Currently not seeing where you assign the `naturalLanguageQuery` value.
Will they fall out of scope or out of memory once you have a shortage of memory? &amp;#x200B; My first suggestion would be to see if this is being handled automatically by they runtime. You should be able to check this with some memory restriction and/or a very, very large number of images. &amp;#x200B; One thing you can do is a simple test, take the images and keep adding them over and over again until you get a memory problem, then see what it does. &amp;#x200B; Another test would be to load a bunch of things into memory and then run the program.
I’m not in front of my machine to check, but is comparing against .None a thing in Swift enums? I don’t think it is. Anyway you just need to check for nil. The rawValue initialiser is failable. If your passed String doesn’t match any of your cases it will return nil.
Try wrapping memory allocation-heavy paths with `autoreleasepool` to make sure autoreleasing objects can be deallocated after they are no longer needed.
It does have autoreleasepool around it one method up where the deallocate and deinitialize statements are. When the movie writing completes, all the memory is freed up immediately.
This person’s on it, folks. Nothing to see, here. 
I started a thread about -- not being allowed anymore. The example was something like this: &amp;#x200B; if myVar-- &lt;= 0{ return }else { ... &amp;#x200B; The new code was: myVar -= 1 if myVar &lt;= 0 { return &amp;#x200B; &amp;#x200B; The problem is that you have two exit points and any pre-exit work anyone adds, they'll have to add in TWO places &amp;#x200B; The solution was to use the defer &amp;#x200B; Point: with the use several exit points, using defer to hold some cleanup or pre-exit code is a viable solution. &amp;#x200B; I remember being taught, long ago, about one point of entrance and one point of exit for a function, but now we have guard and other things, so it's clearly changed. Having a pre-exit modifier can be a real problem solver. &amp;#x200B; Example: have some code run so that it exits from the function right then and there... now add some cleanup code at the end of the function before it exits... Now you have a problem if the function exits early. &amp;#x200B; &amp;#x200B; Function myExample doSomeSetupWork if testSomeVar { return() } else { doMoreWork } &amp;#x200B; cleanupTheSetupWork return() &amp;#x200B; The problem with the above code is that if someone goes in and adds the doSomeSetupWork and cleanupTheSetupWork... it'll work just fine, unless testSomeVar is TRUE... &amp;#x200B; Putting the cleanupTheSetupWork into a defer should solve the several exit point problem.
Are you testing on the actual device or on your computer with the Sim? I think the Sim will allow you to cut down the amount of memory it gives to the device.
Basically the same, but use an NSTableView. and just wire up the + and - NSButtons to insert at the last selected (or end if nothing selected) and delete the selection.
"Cocoa Programming for Mac OS X" I believe walks through this in detail. See also [https://www.raywenderlich.com/830-macos-nstableview-tutorial](https://www.raywenderlich.com/830-macos-nstableview-tutorial)
Thank you :) I will try your suggested solution &amp; see if it works
?*
For iOS? MacOS? Multiplayer? Single? Lots more info needed
iOS. Single player.
First of all, this sub isn’t going to write you a game lol But if you want to learn I would be breaking it down into smaller tasks, googling and finding out how to complete these tasks. As a kick start maybe keep the Pokémon’s data as a json file.
I’ve no intention of getting anyone to write a game for me. If internet searching didn’t consistently return Pokémon Go results I would have stuck with google. I have no interest in recreating Pokémon Go. I chose this subreddit to ask persons with more knowledge than me to share their knowledge. Suggest resources. Provide guidance. Offer direction.
They use built-in cells in this tutorial. See: "You need to replace the cell view in the first column with a new cell type that contains an image and a text field. You’re in luck because Interface Builder has this type of cell built in." I'm looking to create a custom cell view class to display more data than the built-in Image &amp; Text Table Cell View.
Can you tell us what the rules of the game are for single player? Sorry, I've never played Pokemon
&gt; Suggest resources. Provide guidance. Offer direction. I think it's possible you're significantly underestimating how much help you're asking for. You don't need help building _Pokemon in Swift_ specifically, you need help learning enough about programming in general to take on a project this size and complexity as a solo develop. Start by looking for resources for making other, smaller games in Swift. Start thinking about the different parts that make up Pokemon (character movement across a map, random encounters, how the battles work, stats on different pokemon and how they contribute to damage etc.) and work out how to build those. Also, realise that it's unlikely you'll find ready-made tutorials for a project this size.
You might as well ask "How to build a car". There's no shortcuts here - your query is too big. Start small. Choose a tiny project with a small scope and build it. Get more ambitious, slowly. By the time you have the skills to build what you want, you won't need to ask the question, you'll just go out and do it :-)
Swift 3 made some major changes to the syntax, but it's been mostly stable since. That being said, it looks like this exercise might have been designed for Swift 2, considering the casing for the enum. Here's what I would do: enum FamilyPet: String { case cat case dog case ferret } // And we can get their raw value as well: print(FamilyPet.ferret.rawValue) // We can also generate the enumeration value from the raw value. Note that this is an optional // because not all raw values will have a matching enumeration: var pet = FamilyPet(rawValue: "ferret") // Option 1: a switch statement switch pet { case let pet?: print("We have a pet \(pet.rawValue)!") case nil: print("No pet :(") } // Option 2: if let if let pet = pet { print("We have a pet \(pet.rawValue)!") } else { print("No pet :(") } // Option 3: guard (must be done inside a function) guard let pet = pet else { print("No pet :(") return } print("We have a pet \(pet.rawValue)!") The additional benefit of these solutions is that all of them safely unwrap the optional, allowing you to interact with the variable as a non-optional.
Not to mention it is unlikely someone will have a tutorial on how to write a Pokemon game for you. You might want to start finding out how to write Games in iOS in general. What you‘re asking is essentially „how do I build a house?“ when you (presumably) don’t know how to use the tools needed to build it, nor how to build the individual parts. Learn to use the tools (xcode, swift, metal), start on small things like creating and rendering 3D assets, moving those, add controls to move, world... and eventually you‘ll know by yourself how to produce a pokemon-like game.
Definitely do googling surrounding making 2D rpg games for iOS, much more broad but it'll likely get you closer to general concepts that you can put a Pokemon style spin on. Most of the hard work (other than artwork and concept stuff) is going to be similar for any 2D RPG, things like data storage, level design, animations, interactions, storyboarding, etc. Good luck!
You could try this, which removes the need to force unwrap your optional: ```swift private func allGrades() -&gt; [Grade] { return (oldGrades + newGrades).sorted { guard let a = $0.dateAdded, let b = $1.dateAdded else { return false } return a &gt;= b } } ``` Also, you could try a computed variable: ```swift private var allGrades: [Grade] { return (oldGrades + newGrades).sorted { guard let a = $0.dateAdded, let b = $1.dateAdded else { return false } return a &gt;= b } } ```
So you could create your own view, and assign that to the cell view? &amp;#x200B; In the "extension ViewController: NSTableViewDelegate" code part, they create a custom view to be returned by the "func tableView(\_ tableView: NSTableView, viewFor tableColumn: NSTableColumn?, row: Int) -&gt; NSView?" function. Have you tried returning your own custom view?
Whose work?
How to use Instruments to profile allocations &amp; leaks. If you know what you're doing in Instruments, you can take the leakiest app in the world and identify every issue really quickly.
It’s sort of like finally in exception handling code, but I find it awkward. I think I would prefer: `do { ... } finally { /* deferred code */ }` Because the ordering follows the block scope.
Okay, maybe I’m getting the semantics wrong. Would you recommend keeping the model (`List`) the same, but wrap the `items` property in an observable? This could be done in the ViewModel if using MVVM. I am trying to step away from delegate methods to inform of updates to `items`. 
I don't do macOS development, but I do know it's styled with a lowercase m, i.e. macOS, not MacOS. It's easy to remember, because iOS also starts lowercase. ^(And yeah, I'm the guy that used to correct people to say) *^(either)* ^(X) *^(or)* ^(X Window System, back when people would say "X Windows" when referring to the Linux desktop.)
What I usually do is something like this: ```swift /// Actual item array, when it changes it will post an onNext event to the emitter private var items = [Item]() { didSet { itemsEmitter.onNext(self.items) } } /// Emitter, it will relay the posted items to the Observable. I make it lazy so we can actually set the value o 'items' as the initial one /// It's also private because external objects shouldn't have access to it private lazy var itemsEmitter: BehaviorSubject&lt;[Item]&gt; { return BehaviorSubject(value: self.items) }() /// This is just a read-only access for the 'itemsEmitter' so other objects may safely subscribe var itemsObservable: Observable&lt;[Item]&gt; { return itemsEmitter } ``` You could encapsulate all this into your List class.
Cool
Dapps?
Decentralised applications: [https://www.coindesk.com/information/what-is-a-decentralized-application-dapp/](https://www.coindesk.com/information/what-is-a-decentralized-application-dapp/)
 DispatchQueue.global().async { // some code } That statement queues up the closure { // some code } and returns immediately. But that closure is on a queue somewhere and if it has a reference to `self
I take it you never do early returns either? The defer construct is for when you have multiple exits from a function and must ensure some code is called no matter which exit is used.
I don't see anything in your code where you are using a delegate method. Show us the class that uses the delegate method and then we can suggest ways to replace it with Rx code. 
Your first step would be to make your upsert non-mutating so it can be used in an Observable `map`. I would also do away with the List class and instead make the function an extension on Array. That way, you can integrate it into an Observable chain easier. (Observable chains don't like mutating methods much. The simplest refactoring would look something like: extension Array where Element == Item { func upsert(_ pending: [Item]) -&gt; [Item] { var result = self for item in pending { if let index = index(where: {$0.id == item.id}) { guard item.updatedAt &gt;= self[index].updatedAt else { continue // Ensure new item is newer } result[index] = item // Update item in list } else { result.append(item) // Add item to list } } return result } } 
It really depends on what you want out of it. You should think of it like “do I want this to always happen (strong) or only while the object is still alive (weak)?” Let’s say your block retains a view controller. Your GCD requests executes at T+5. The user leaves the view at T+1. Do you care if something happens to view controller after it’s off screen? Do you want to keep track of that edge case? While it’s difficult to make a simple rule, heuristic might be: is this a write operation or a read operation? Read operations are often irrelevant once associated objects are deallocated, but write operations tend to need follow-ups. Eg: you may want to alert a user or update a local cache when a write ends, but the status of a read becomes irrelevant once out of context.
For something like that, I would expect more like: class List { let items: Observable&lt;[Item]&gt; init(pending: Observable&lt;[Item]&gt;) { items = pending.scan([], accumulator: { (items, pending) -&gt; [Item] in var result = items for item in pending { if let index = items.index(where: {$0.id == item.id}) { guard item.updatedAt &gt;= items[index].updatedAt else { continue // Ensure new item is newer } result[index] = item // Update item in list } else { result.append(item) // Add item to list } } return result }) } } 
For some reason I'm not using Codable in my projects yet. I have a fine set of simple to use that can decode / encode everything I want including groups of data (x and y to CGPoint and vice versa). The thing that Codable does well is mapping names to variables, but that only saves writing code if somebody\_didnt\_underscore or did other stuff that doesn't work with Swift naming. Also you might still get the "free" constructor for your structs that would disappear if you would define your own constructor.
Using *Codable* is really for consideration right now. It's really convenient, fast and clean solution (and native, which is usually good in long-term iOS development), but its limitations are big and once you will hit them, it's a lot of work to reimplement :) &amp;#x200B; Also, **happy cakeday**!
yup, it's a thin layer of sugar on top of oldschool C asserts at the top of the method. I like debug only asserts for recoverable but broken cases, and fatal error for the really rare, truely non-recoverable errors. Not that I actually use this assertSome thing all that often in practice, but it's occasionally useful to flag non-fatal issues closer to their point of failure/misconfiguration. 
Hey, b\_t\_s, just a quick heads-up: **truely** is actually spelled **truly**. You can remember it by **no e**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Now it’s time to build an app on your own. Think of a project something you can do. Finish it and be proud of it. The thing is you are never done there are other stuff to discover on the iOS platform. For your first app I may recommend something ease. Don’t try to build something so massive like a social network you will just get discouraged from moving forward. You are done being an learner programmer. Now you are a novice build something that you are interested in. Good luck
Hey congratulations! That's an accomplishment on it's own, because most people struggle to find the time or commitment to get to the end. My recommendation would be to get in as many demos and app tutorials as you can. At this point, you probably have an understanding of how things are put together but you also need to expose yourself to more "experiences". By getting more hands on practice, you'll expose yourself to a variety of app architectures, navigation techniques, design patterns, data and networking techniques etc, all of which will build up a pool of skills/techniques for you to rely on. After building up this pool of experience, you'll be more confident and have a better idea of how to go about building your dream app. (If you feel like you know enough to build your dream app right now, then by all means, do it!!). I find that having that pool of experience makes it very easy to look at something and say, "Hey i've done something similar before, i can just adapt it to build this new thing" Just my 2 cents!
It seems complicated due to nature of storyboard and segues. However it's a common pattern with storyboards and segues. However you don't have to use segues (or even storyboards). Instead you can just manually present the detail view controller inside didSelectRowAt method. Just be sure to delete the segue inside the storyboard. /// Segue approach: /// Be sure to delete didSelectRow method /// Be sure to set the segue id inside storyboard to match hardcoded "showDog" /// This assumes your tableView var is named "tableView" /// Uses indexPathForSelectedRow to grab selected row /// (there's a few other ways to get selected row) override func prepare(for segue: UIStoryboardSegue, sender: Any?) { if segue.identifier == "showDog" { if let indexPath = tableView.indexPathForSelectedRow { let selectedDog = dog[indexPath.row] if let destination = segue.destination as? DogViewController { destination.selectedItem = selectedDog } } } } &gt;So when I call \` func prepare(for segue: UIStoryboardSegue, sender: DogDetailViewController) { }\` I don't have to override it any more but even the hard coded values(I don't want that obviously) won't pass through. I feel like this should be a lot more simple than it should be. &amp;#x200B; I'm not sure what you mean.. You don't call prepare method yourself in your own code. It's automatically called when a segue is triggered. The prepare function provides a customization hook for you to do some work between the user clicking the row and the storyboard presenting the next destination. You must override prepare for segue in order to prepare the destination before it actually makes the transition to the destination (detail view controller). Here's the flow: 1. User clicks row 2. Storyboard instantiates a Detail View Controller (automatically, you don't code this) 3. Storyboard calls prepare for segue method (automatically, you don't code this) 4. Storyboard presents the Detail View Controller (automatically, you don't code this) Note: if you do not override prepare method step number 3 essentially does nothing. Instead it calls an empty method and the selectedItem is never set. All segues from the view controller call this same prepare method, so if you have multiple segue's then you need switch or if/elses inside your overridden prepare method in order to prepare for the correct segue. In other words, it's a single function for all the segues out of a view controller. That can be seen as a bad thing or good thing. The most painful aspect of storyboards and segues are the hard coded string identifiers. &amp;#x200B; If you don't use segues and you must code up manually: 1. instantiate of detail view controller (you did this in your did select method) 2. setting the selected item (you did this in your did select method) 3. presenting the view controller (you neglected to do this in your did select method) &amp;#x200B; &amp;#x200B; &amp;#x200B;
It’s a great overview and starter for people with varying experience programming. I’d recommend starting with that and then moving to RayWenderlich.com to improve and focus on more detailed skills.
https://bugs.swift.org/plugins/servlet/mobile#issue/SR-7054
Before you start reading, this is an extreme beginner's guide. There's no "deep dive" or anything, it's just an explanation of what a function is, what parameters are, etc.
Wow how disappointing 
Thank you for being the first into the breach so I and others won’t have to suffer through another shitty “deep dive” clickbait article. I’m sorry that I only have one upvote to give and no gold. 
Yea, thanks. I was thinking it would be an article about higher-order functions. I've been using them a lot lately.
Good. Now go build a project on your own. &amp;#x200B; No guidance from tutorials though. Just build something small and Stackoverflow your questions.
Next: var vs let
Class and why you should use it
Hmm, I'm not exactly sure. This sounds like something associated with the Apple API. You might try stack overflow or r/iOSProgramming
I’m with that guy! ☝️ Experience is key, just build things!
This is wonderful! Thank you so much for all the detail in this and I'm excited to look more into tonight. Again, thank you for taking the time out of your day to help me through this. :) 
Hey, I am self-taught iOS and have had a dev job for a couple years now. I really liked Harvard's [CS50 Course](https://courses.edx.org/courses/course-v1:HarvardX+CS50+X/courseware/bdc606f10e7347f6a61a341c4544bbf7/71a3739357a54a0e81348468341214b3/3?activate_block_id=block-v1%3AHarvardX%2BCS50%2BX%2Btype%40vertical%2Bblock%407cdc3be276f74d70b0fefeb15dafa0d8) (free). Not Swift, but good intro to some basic CS stuff. Also found *The Swift Programming Language* super helpful (also free, on iBooks). There are a bunch of other resources I can refer you to if you're interested in more
I believe the next step is “...” followed by, “profit”
&gt; In the end, you can solve this issue with 3 approaches. &gt; &gt; 1. Rounding 😡 &gt; 1. Own Deserialization ☹️ &gt; 1. Use String 😌 Or, even better, use integers to represent exponent and significand. Then there's no confusion and conversion is pretty automatic with the proper application of `Codable`: import Foundation struct Money: Codable { let amount: Decimal let currency: String enum CodingKeys: String, CodingKey { case currency case exponent case significand } init(amount: Decimal, currency: String) { self.amount = amount self.currency = currency } init(from decoder: Decoder) throws { let values = try decoder.container(keyedBy: CodingKeys.self) self.currency = try values.decode(String.self, forKey: .currency ) let exponent = try values.decode( Int.self, forKey: .exponent ) let significand = try values.decode( Int.self, forKey: .significand) self.amount = Decimal(sign: significand &gt;= 0 ? .plus : .minus, exponent: exponent, significand: Decimal(significand)) } func encode(to encoder: Encoder) throws { var container = encoder.container(keyedBy: CodingKeys.self) try container.encode(self.currency, forKey: .currency) try container.encode(self.amount.exponent, forKey: .exponent) try container.encode((self.amount.significand as NSDecimalNumber).intValue, forKey: .significand) } } let money = Money(amount: -1.05, currency: "EUR") if let encoded = try? JSONEncoder().encode(money), let jsonString = String(data: encoded, encoding: .utf8) { print(jsonString) // {"currency":"EUR","exponent":-2,"significand":-105} if let bar = try? JSONDecoder().decode(Money.self, from: encoded) { print(bar) // Money(amount: -1.05, currency: "EUR") } } 
Surely it could be done though?
Anything is possible in software development, it’s just that different projects in different languages take different amounts of effort. Swift is an amazing language I’m still getting into myself but I’m sure ya possible somehow. Maybe you’ll need to look into using swift for native mouse movement, and some way to hook into/send input to safari. Another way to go about it is try to find some sort of api
Hmm, very interesting thank you for your help!
So you mean something like a web driver? Selenium and python is what I would say is best for this but what would you suggest
So you mean something like a web driver? Selenium and python is what I would say is best for this but what would you suggest
This kind of project is incredibly difficult. So many websites these days are a morass of DOM, iframes, scripts, dynamically-loaded content, and so on. They purposefully make changes in order to thwart any kind of scraping and automation of their site. In fact, many times they will change the site between loads so it's less predictable. It's not impossible but it's very very difficult.
No idea what a web driver is, I've never heard of it.
So how do you recommend to make the app load website and act on it directly? Would you use swift? What frameworks?
Look into appium. What you can do is automate it all. First hope that whatever app you are using has accessibility turned on because then you can utilize them for your tests other wise you have to use UIelements. It is very simple to code it with JavaScript. You just have to be make sure to wait for the elements to show up before trying to click on it. There are other ways you can do this if you want to use Mac desktop you could write scripts, you can even write scripts using swift but I would advise you to use any other mature scripting language. Gluck
That is the safest solution, but in this instance I feel safe using the force unwrapped. The `Grade` is a managed object that is assigned a date added when it is ready to be added to the store, so I no it will never be nil, but it is required by the implantation of `NSManagedObject`. Would you say it's better to be safe?
&gt; that let's you learn swift that lets* you learn Swift let's = let us lets = allows 
That comes down more to personal preference, but I always err on the side of safe unwrapping, as it tends to be highly future proof. For example, one project I worked on, we were using Core Data but later changed to using Realm. If the code has \`Grade.dateAdded\` as an optional, I believe it should always be treated this way. Considering how long the review process can be with Apple, I think odd behavior is preferable to an app crash. Additionally, you can get around this using Protocols, if you like. this also makes your code much more abstract and dynamic, while being type safe: ```swift // Create a protocol that can be interacted with throughout your code // regardless of storage system (Core Data, Realm, cloud storage, etc.) protocol Grade { // choose a different variable name if you can't change your Core // Data model var dateAdded: Date { get } } // Change name for Core Data managed object internal class CDGrade: NSManagedObject, Grade { @NSManaged var addedAt: Date? var dateAdded: Date { return addedAt ?? Date() } } ```
Easiest is a pre-existing simple database like SQLite. You could also roll your own solution with some sort of indexed file. Store an index to where the strings are in the file, read in the index to lookup the location of each string, seek to that point in the file and read in the string. If your strings have a natural maximum you could also pad them and then read in fixed lengths. Then you wouldn't need an index, just calculate padded length * record number and seek to that point, read characters equal to the padded length, remove padding. This is by far the lowest-tech solution and is both fast and flexible.
So a follow up: before I got around to turning my array into a database, I put the app onto my phone via Xcode. As some mentioned, the build time was not indicative of the app load time. It loads and runs as fast as anything. Take that for whatever it’s worth. Thanks all. 
Well, true. That's why I said that many do it, certainly not all. You have to decide on a case-by-case basis and even then you're taking the risk that once you've put a ton of effort into automating that single website they don't change it tomorrow. Web automation is big business – huge payrolls, huge risks, huge payoffs if you get lucky.
There's truth there but there's also not. You need to allow yourself to build and program but you need to have the mindset of a constant learner. The time for obsessive absorption might be over because you may learn more from applied working now - however, you will definitely need to learn more and just need to balance between furthering your education with sources like StackOverflow on a real project and maybe a course here or there.
Have you tried using Youtube transcripts? Not a perfect solution but might be useful in some ways.
JSON stands for JavaScript Object Notation. JavaScript only has one number type, namely double. Thus, don’t even serialize money or decimal amounts as doubles in JSON to begin with. Use string, period. Then parse it with a custom deserializer in Swift.
Exactly right
It has the same access control rules that classes do. Said another way, they can be declared before, after, in a new file, within the class (becomes namespaced), within another module (if public or open), etc. Structs are value types, classes are reference types, but how they can be defined are the same. 
Structs are outside classes when they are 2 different logical entities. The fact that your class uses the structs type is just a side effect. So a class might be class Car { } And a struct might be struct Tire { } The 2 are related but not necessarily dependent. On the other hand when they are dependent you’d make the struct a subtype class Car { struct TrimLevelOptions { } } Not the best example but that’s what you get while I’m just sitting on the toilet :) You can declare the struct inside the class, then the struct becomes a sub type of the class MyClass.MyStructType You can declare the struct and class in the same file, but assuming it’s not a subtype, I personally tend to put each new Type, whether class or struct or self contained enum in their own files for organization sake. 
Given my level of understanding this question is rather hypothetical but can a class reside inside a struct?
I doubt it. Not because Facebook, but because a Facebook account would likely be needed to view the document (not everyone has or wants a Facebook account). This limits access, and the privacy policy is required to be accessible by all users of your app. Zooming out a little - why would you want to put your privacy policy in Facebook? There are many public options for doing the same.
Type erasure comes to mind: https://medium.com/swiftworld/swift-world-type-erasure-5b720bc0318a
Very valid, thank you
You can make the post public so no account is needed to view it. I already have a page for the app on facebook so it would be simplest to put the privacy policy there. 
The scrolling on that site is really bad. Perhaps find another place to host articles.
Yes! One should start off with `let` and then use `var` if it needs to be mutated.
Why wound't you just call `super.layoutSubviews()` right away, why defer it?
Thanks! I finally got around to trying the use of this delegate but am still having issues :/ The two issues are: 1. It's printing an error that's happening when the HTML is parsed. Right now, I have a bunch of html tags, but they are not wrapped in an HTML or Body tag - do I need to add one/both? 2. It keeps taking me to a spot in the code with the error of : fatalError("This class requires at least one AttachmentImageProvider to be set.") . How do I get this AttachmentImageProvider set? I am really eager to use this as I think it is the best solution, I'm just struggling to get this setup. Thanks again for all of your help!
Read CSV file into an array on app startup. Less than 10k elements should be just fine performance wise (just don't do it on the main thread).
just put it on github pages
All copy on write types are reference-inside-value, so Array, Dictionary, String, etc...
Ok so a few good examples slipped my mind on a Saturday morning :) 
&gt; If the compiler wants you to use self for a property inside a closure, consider capturing self as either weak or unowned Only if it will lead to a circular dependency
Write something and learn the hard way how things work. You can read a thousand books and still not know how to program. Your brain learns the best when you make a certain mistake and then figure out how to fix it. 
Hey there. What is it printing? I don't think you need to add any wrapping tags. Did you set the textAttachmentDelegate and implement all the methods in it? You might have to see where that provider gets set and why you don't have it. Maybe your delegate is being deallocated? They recently released their 1.0 version which is the version I'm using, in case the helps.
yeah it's hard to find a good online swift compiler apparently. I always just move the code into an empty project and toy with it. But the entry tests are there to keep it serious, focused, efficient so I understand it. I doubt theyre any worse than linkedin or monster or anything like that in terms of data collection. One thing I have seen is companies that give you in-browser swift tests as part of the interview process. I don't agree with this, because of the issues we can clearly see with swift 3.0 repl (which I believe is the same code that codewars uses). Having some experience in a not-so-great compiler you have to work around a bit can be eye opening and useful for those kinds of situations. Like I imagine a triplebyte interview being something akin to an in-browser swift 3.0 repl test where you can't even import Foundation lol. 
What are the advantages of doing this? Aren't you supposed to pay if you use GitHub for commercial purposes?
That probably never worked, unless there has always been a "desination" typo in the signature. If this is a "new error", you probably need to use [this](https://developer.apple.com/documentation/appkit/nsstoryboardsegue/1409572-init) signature now: override init(identifier: NSStoryboardSegue.Identifier, source sourceController: Any, destination destinationController: Any) Overriding inits only matters if you pass class objects around to instantiate them indirectly.
Thanks! I edited the typo. It didn't have any effect on the error message.
Just the typo, or did you also start using the new signature?
Nice!
This is why I come to Reddit.
I thought it was that you pay for GitHub if it's private. I don't think GitHub cares who accesses your files.
everything on github is free until you need private repos. even custom domains and https are free and [officially supported](https://blog.github.com/2018-05-01-github-pages-custom-domains-https/). you get ez fast hosting for html/css/js -- all you need to display contentent outside the app.
Do you need to fill out an Apple encryption use form if you use https for the privacy policy web page?
One thing you should do is to make the apps from scratch without looking at any of the tutorials. &amp;#x200B; IIRC, Angela does some chat or group todo list app. See if you can make that from scratch without looking at any other code or any lookups on Google. &amp;#x200B; I'll give you a small example: Sean Allen does these short videos [https://www.youtube.com/watch?v=DBWu6TnhLeY&amp;index=9&amp;t=0s&amp;list=PL8seg1JPkqgF5wazzCKSq3EEfqt3t8mvA](https://www.youtube.com/watch?v=DBWu6TnhLeY&amp;index=9&amp;t=0s&amp;list=PL8seg1JPkqgF5wazzCKSq3EEfqt3t8mvA) &amp;#x200B; What you can do is break this down to a step by step of exactly what to do. As if you were explaining it to someone that never programmed before... &amp;#x200B; I like to make notes where I have the topic, a quick summary and a step by step of everything needed so that you really can't screw things up. &amp;#x200B; You do this with all the sub parts of a project, like the protocol stuff linked above, then you have say 10 parts with 1\~5 steps in each sub part. &amp;#x200B; Point: it's one thing to say "I've completed the course..." it's another thing to say that you can complete the project without any help from anything other than some notes you've made. &amp;#x200B; It's pretty easy to get caught up in just reading code that is ready made, however, in the real world it's not always like that. &amp;#x200B; It's true that in the real world, you can grab code from GitHub, put it into your project and never look at the actual code or how it does what it does. Just as much as you can trust that Apple's ARKit does what it's supposed to do without you ever seeing under the hood, you can do the same with all the 3rd party stuff out there... However, if you want to get a job in the industry or ever do a large complex project, you really need to be able to fix code and write things from scratch. &amp;#x200B; Doing some of Angela's projects from ground zero, forces you to remember all the little details. Making your own cheat sheet helps to remember these details.
I like how he gets straight to the point instead of the "watch me type and type what I type..." &amp;#x200B; The last thing I need to do is watch other people type. &amp;#x200B; Pretending that you'll be teaching others what you're learning is a great way to force you to get to the step by step.
Any company that gives you a test like that is not one you want to work for. Run and don't look back.
The function signature has changed since the code was written. Delete the function header and start retyping it, then let autocomplete do its thang. Paste the old logic in and you should be golden.
The difference between a struct and a class is that a struct is copy by value and class is copy by reference. Strict a are faster but more ephemeral. I tend to use structs for data and objects for logic and longer living objects. You wouldn’t want to make a copy in a different place of the memory just to update one value of a ViewController. Also pointers toward the Viewcontroller would be dead after the copy.
Thanks
Thanks
I don’t hear the word “structure” in the Swift context. I do hear “data structure”, which could be a class, struct, or (less often) enum. 
Thanks!
It’s always worth checking the documentation and comparing. When I check the expected signature and what you posted I saw the issue. :)
I'm having to do that with the whole project, I'm just not advanced enough to know if the new versions are like for like replacements or not. Between older code not working and the vast majority of tutorials being aimed at iOS, Swift is harder than I thought it would be.
+1
Understood, thanks!
They usually are basically the same. Typically the only differences will be renaming the "name" of the parameter and minor stuff like changing optionals (?) to "explicit" (!) or vice versa, or changing "Any" to "AnyObject" I typically just start with the procedure I wrote earlier then just fix any minor compiler issues that pop up
Yeah, I remember those days. Stick with it and keep asking questions and you'll get it :)
Thanks! I appreciate it.
It won’t stop your code from compiling, but will never return a nil value, so you’ll need another way of determining if it exists, as your ‘if’ condition will always return true. I don’t know enough about the storyboard identifier, but it would be worth reading the Apple Docs to see if it has its own method/value to determine this for you. That, or use a guard/if let statement. 
got it thanks
A few things: Define your timer better: timer = Timer.scheduledTimer(timeInterval: 1.0, target: self, selector: #selector(self. UpdateTime), userInfo: nil, repeats: true) Also watch your naming convention for variables (know when to use caps). 
If you’re reading Swift documentation from Apple, “structure” refers to structures declared with the “struct” keyword unless context demands otherwise. The umbrella terms used to generically refer to classes, structures, and enumerations are “instance” and “type”. 
Care to explain how you put it together?
&gt; "Your browser will promt" prompt* Please run spell check on your text.
Looks like you never set `isRunning` to `true`, so your Timer is never being created or fired. That should fix your problem. Here's some updates I would make to your syntax: ```swift // MARK: - class ViewController: UIViewController { // MARK: Variables // These should be camelCase var levelOneScore = 50 var time = 30 var counter = 30 var timer = Timer() var isRunning = false // MARK: IBOutlets // These should be camelCase as well // Also, made them optionals for better type safety @IBOutlet weak var levelOneComplete: UIImageView? @IBOutlet weak var score: UILabel? @IBOutlet weak var scoreDeductTap: UIButton? @IBOutlet weak var nextLevel: UILabel? @IBOutlet weak var titleLabel: UILabel? // MARK: - Load Functions override func viewDidLoad() { // Don't create variables of other variables // Access the variables directly levelOneComplete?.isHidden = true nextLevel?.isHidden = true titleLabel?.isHidden = true } // Put a space between the `()` at the open brace `{` @objc func updateTime() { counter -= 1 titleLabel?.text = String(format: "%1f", counter) } @IBAction func deductScore(_ sender: UIButton) { titleLabel?.isHidden = false // Make sure to set `isRunning` to `true` somewhere before you his this if isRunning { // Direct init call is shorter than the class function // and accomplishes the same thing timer = Timer(timeInterval: 1, target: self, selector: #selector(updateTime), userInfo: nil, repeats: true) } levelOneScore -= 1 score?.text = "\(levelOneScore)" // Guard statement allows you to gate the statements below // without increasing scope level guard levelOneScore == 0 else { return } score?.isHidden = true levelOneComplete?.isHidden = false nextLevel?.isHidden = false timer.invalidate() } } ```
 Just a tip. Maybe someone else could weigh in? I am pretty sure Xcode use to warn explicitly about signatures that had changed and providde a fix-it button inline? If the code is from 2015, maybe Xcode from 2016 will provide this? After that hen do the the same with the following version of Xcode and so on? Perhaps you need to Start from the original project from before it was opened and saved with a newer Xcode. Older Xcode versions can be downloaded from Apple.
Definitely not.
Good job helping with some conventions. Don’t really agree with the optional outlets though. I’d mark them implicitly unwrapped because if they’re not set something has gone wrong and id rather be offensive and crash on that. It also creates more cluttered code with guards. Also missing a call to super.viewDidLoad()
Mfw my own post doesn’t make it to the feed I built. 
I'm pretty sure that you can just remove this check. The init method changed from accepting `nil` to not accepting `nil`. Chances are that this older version of the method was a direct and unrefined translation of the Objective-C version of `NSStoryboardSegue`.
Guards don’t always create cluttered code. They can be very useful for returning early and reducing the amount of scope indents you’re dealing with. Good catch for `super.viewDidLoad()` and agree to disagree about implicitly unwrapped. ;)
You should link the tutorial and you should link some code if you can. There's always a chance that someone else has done that tutorial and might know of an error in it.
everything looks alright, but is ```ref : DatabaseReference!``` initialized? ```friendDir![0]``` looks alright and i did what you did in my project and i got it to print out the email address without the ".com". so is your ```self.ref``` part nil? cause from my knowledge, you need to assign something to ```ref```. like ```ref = Database.database().reference()```
Yeah, you learn about the usefulness of optionals a lot faster when working with asynchronous operations.
It's printing out "Message: Tag aztec.htmltag.rootnode invalid" and "Message: htmlParseEntityRef: expecting ';' "
So after setting isRunning = true I hit the tap button and it goes from 30 to 0.000000 and if I keep tapping it will say nan. 
so i just copied your code straight over, and unless i am m doing something stupid , i will load the app onto my phone and when i click play she crashes. 
Yeah, whenever you rename IBOutlets or IBActions, you have to reconnect from your story board. Also, don’t forget to set your isRunning variable to true somewhere.
Yeah, whenever you rename IBOutlets or IBActions, you have to reconnect from your story board. Also, don’t forget to set your isRunning variable to true somewhere.
Does that directory exist? If not then something has gone wrong when you’ve installed AdMob. Did you install it with Cocoapods?
Hmm. Are you sure your html is valid?
I believe so. I’m able to pass it into a web view &amp; it loads just fine. I do know it’s basically the body content, so no html/body tags, so maybe that is the issue? Though I’ve tried adding 1/both tags &amp; it didn’t work either
Ok two things to debug. What method are you using to set the html and what is a print out of the html you are setting. 
It’s not instantly apparent to me from this code. Can you post the code from your first VC? Or better, upload a zip of example code so I can repro the issue?
Show us the line of code this error points to.`Unexpectedly found nil` means that you are using the `!` operator somewhere to unwrap a value but the value is nil. The debugger will point to the exact line that is causing the problem and you just need to make sure either (1) the value isn't nil or (2) you use the `if let...` syntax to unwrap it.
Thanks, I could but is there another way to go about it? There is a lot in this project and I'd rather not just put the whole thing out there.
It prints to an if let line, specifically this one: if let flowLayout = collectionView.collectionViewLayout as? UICollectionViewFlowLayout { flowLayout.scrollDirection = .horizontal }
[https://chariotsolutions.com/blog/post/uitableview-swipe-actions-in-ios-11/](https://chariotsolutions.com/blog/post/uitableview-swipe-actions-in-ios-11/)
Chances are `collectionView` is an implicitly unwrapped optional, yes? If so, then that is your most likely suspect. I assume that the collectionView is assigned a value with the view controller loads. So why is this code getting called on an unloaded view controller? If `collectionView` is nil when the app crashes (you can tell by looking in the debugger) then find out why.
Nice! Cute little trick to save some code. I like it. 
Damn. textView = create{ $0.attributedText = attributedString } textView = UITextView(frame: view.frame) view.add(childView: textView, position: .around, margins: true) textView.attributedText = attributedString becomes textView = create(position: .around, margins: true){ $0.attributedText = attributedString } in the simplest case.
Love it! 
So i fixed all the errors and i ran her, and the same thing is happening as before, points go down but the clock stays the same. Where you able to get it to run?
I wasn’t able to repro, since I don’t have access to your storyboard file. Is your code somewhere public (on GitHub or something) where I could view?
Can you at least post relevant code from your first VC? I understand not wanting to upload everything, but it’s hard to go just off the code you have up currently.
i can upload it for you, give me a minute !
sent to your inbox
Got it working on my end. Updated the code above with the proper working code. P.S. Sorry I steered you the wrong way with the `Timer.init`. Forgot that the init doesn't schedule it, while the class function does.
Also, worth noting, your storyboard has some broken constraints. Make sure you take care of that. In the meantime, try out [SnapKit on GitHub](https://github.com/SnapKit/SnapKit). I switched to completely programmatic UI and it made a world of difference.
I'll echo that. With implicitly unwrapped optionals (e.g. `var collectionView: UICollectionView!`) you can access them without the `?` syntax. Try: ```swift if let flowLayout = collectionView?.collectionViewLayout as? UICollectionViewFlowLayout { flowLayout.scrollDirection = .horizontal } ```
yeah i am god awful working with constraints i try to add some and my buttons or labels just end up being all over the place, and i will check it out for sure hopefully it will help me out!
I got it! Wow I feel stupid - I assumed setting delegate to self would take care of everything, but I also had to call .textAttachmentDelegate. After that, it finally loaded. Thanks for all of your help &amp; sorry for my error on not thinking to implement that! haha
This is a specialized version of a more general function: `with` The general version of `with` is: public func with&lt;T&gt;(_ initial T, update: (inout T) throws -&gt; Void) rethrows -&gt; T { var copy = initial try update(&amp;copy) return copy } But it does make sense to specialize it for classes. The class version would be: public func with&lt;T: AnyObject&gt;(_ object: T, update: (T) throws -&gt; Void) rethrows -&gt; T { try update(object) return object }
Awesome! Glad it works :). Best of luck with your project
Yeah, what you need to do is: ```swift var isRunning = false // later if !isRunning { // start timer isRunning = true } ```
I use a similar pattern with `lazy var` where it’s also added to the subview for even less boiler plate: lazy var bla = UIView().added(to: view) { /* more stuff */ }
https://imgur.com/YYPyD28 Is this what you meant or am i not even close
I find `with` to be very clean and neat. A little while ago I worked on a With implementation that worked with structs, keypaths, and supported defining Configurations that could be statically created and applied later on individual instances: https://gist.github.com/LuizZak/a5266b78cd3664baf1946354ccd367af I find this pattern pretty cool, especially to get rid of lazy inits, which have a pretty awkward syntax that you have to remember and teach newcomers, as well.
HEY BUDDY!! Thanks so much! It fixed it, and I get why...kind of. But what I don't understand is why the code was running at all... Shouldn't that only be called when the user segues to screen2? All VC aren't loaded when the app launches right?
I use this too and I think it's a lot better than the version that requires `init()` because it can be useful for so many other things! I rarely ever use `var` anymore because most of those can be rewritten using `with`.
So after looking it over, i believe my problem is that the counter is -= 1 every time the button is pressed. And since i want the timer to start when the button is pressed it does activate but it deducts 1 every tap or am i not thinking it through. Because if i tap it once the -= turns into -=2 and so on for every button tap. so would i just make a new function for the timer outside the button press, and if i do how would i still be able to activate the time on the button press without increasing the counter .
 let label = UILabel() .with(\.text, setTo: "Hello!") .with(\.textColor, setTo: UIColor.darkGray) This is definitely interesting, but it's not as flexible as `with` since it only works for setting properties as opposed to being able to call any method on it. An example that comes to mind is `button.setTitle("title", for: .normal)`.
Yes it is an unfortunate shortcoming, but for that I added a `with(closure:)` which opens up a free closure to edit the value with whatever means you need.
Nothing is "wrong", its just another, creative way to utilize the features of Swift to do a repetitive task with less lines.
&gt; I rarely ever use var anymore because most of those can be rewritten using with. Could you explain what you mean by that?
It's not fewer lines though let a = UIView() a.x = 1 a.y = 2 let a:UIView = create { $0.x = 1 $0.y = 2 } Pointless. 
It's possible to write this as instance method, to have something like this: let stackView = UIStackView().with { $0.axis = .vertical $0.distribution = .fillEqually $0.alignment = .center $0.spacing = 8 }
Maybe NASA API or Unsplash might have a category on it as well :)
`import Glibc` &amp;#x200B; Every library you want to call has to have a module map listing the headers you want to import. [This](https://github.com/Longhanks/gtk-modulemap-linux) is a repository that shows off how to do this using the Swift Package Manager for GTK. Note that Swift comes with a module map for a lot of the common libc, libm, and other headers. Just put `import Glibc` near the beginning of a Swift file (Note: if you change to an Apple OS, you would change to `import Darwin`) and you should be good to go. Note that you can instead use a bridging header that could include additional headers.
Thank you. :)
depends on the features you want to use or the ios version you want to target. for xcode 9 (the latest release) you need a mac that can run high sierra and depending on the model it can be as old as from 2009. coding is not a cpu intensive task, but compiling might take long. also running ios emulation might not be great, but you can test on a real device instead these are the requirements for high sierra https://support.apple.com/kb/SP765?locale=en_US mojave is gonna drop support for some of those macs. if you get something that can run mojave, you should be good for a few more years. 
Mbp 2010 i7 2.66 4gb hdd - not "the best" experience: sometimes thinking, not always checks/shows errors in code, everything should be closed except xcode, so 8 gb of memory needed at least as an ssd, - now 16gb looks like minimum for future proofing (3-5 years). Here is user's xcode benchmarks for build time https://github.com/ashfurrow/xcode-hardware-performance/blob/master/Readme.md Also xcode 10 should be the last xcode version on high sierra, future ones (11+ since 2019/20) will require Mojave, and it requires macs from 2012/13 (better check os requirements)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ashfurrow/xcode-hardware-performance/.../**Readme.md** (master → 585deca)](https://github.com/ashfurrow/xcode-hardware-performance/blob/585decaae5ec1e20fdc10ac70254a1e920327009/Readme.md) ---- 
Surely you must be trolling, because someone cannot be this stupid. let contentView: UIView = { let v = UIView() v.backgroundColor = .green return v }() let contentView: UIView = create { $0.backgroundColor = .green } 
I think they primarily mean they use `let` instead of `var` so they can have immutable in their methods using the `with` generic
Nope, rows configuration functions are declared in delegate (https://developer.apple.com/documentation/uikit/uitableviewdelegate)
oh, my bad, sorry
Am I missing something here? The closure is entirely unnecessary. Lines 1 and 5 can simply be deleted. 
Why do you program apple software on a linux?
Understand where the project is currently at with regards to maintainability, best practices, performance, testability, etc. Understand what you want the codebase to look like. Determine the risks involved and try to mitigate them through unit tests and/or UI tests. You should probably always be making the code as testable as possible. Start out small. For example, I worked on a project that suffered from several issues, one of them being massive ViewControllers. We approached that problem one view controller at a time. We started by breaking down the logic in the ViewControllers into simple, small methods. We then created helper classes for each ViewController and moved much of the business logic that had been written in the ViewControllers into these helper classes. This made the logic easier to test, reuse, and understand. We already had UI tests in place so we could feel confident in the changes we were making and were able to expand and improve our unit tests as we progressed. 
How are you creating your trained models? If you’re using a ML framework like TensorFlow or Caffe, you can create arbitrarily sized networks with any number of inputs &amp; outputs. If you’re using Create ML, you’re gonna be more limited to whatever Apple supports. 
I have 16GB RAM, I wouldn't want to go lower.
I think you are. It’s not primarily for inline definitions but for instance variables instead. Before Swift you’d generally declare the instance variable, then somewhere else setup the variables properties. This is jus cleaning up the setup of an instance variable to make it a little nicer to read. 
Got the answer on StackOverflow
I don't know if it's just me but the site doesn't even load. Tried Safari desktop, Safari mobile, and Chrome, no go.
Yeah, just noticed. I will delete this post and will post the same content again. I don't know what's wrong with this.
It's just Swift, not SWIFT. : / Also, they are iPhones and iPads.
It was missing the "www"? Glad you got it working.
These problems are so easy! &gt; Find the intersection of two sorted arrays. Done! let a = [1,2,3,3,4,5,6] let b = [3,3,5] let c = Set(a).intersection(Set(b)) 
Meh, agreed. The only upside of this or the `with` function mentioned here is that it reads a little cleaner. I can imagine that the indentation allows you to scan code faster because you can 'ignore' all the setup. I would be hesitant to use such a function though, because suddenly all your setup code everywhere is dependent on the existence of this function.
8gb is preferable, because it still runs on my MacBook Air from 2011 with 4gb. 
Yeah. It seems.
coz swift has better syntax than c/c++? and not as low level as rust or go, yet almost as fast.
Wow, I've been programming for a long, long time and have never ever had any professional use for any of these kinds of questions. &amp;#x200B; It's kinda fun to do these, I guess it's good to see if someone can see the answers to these brain teasers. &amp;#x200B; I really wonder how good these are and filtering people out.
I'm wondering why this didn't have any code in it. Was it just because I picked a few puzzles or is this a bunch of non-code problems? &amp;#x200B; I've seen the ones that actually run the code there and tell you if the code is right or wrong. &amp;#x200B; The reason I ask is that the title suggest Swift specific programming problems. I got a guess the age logic and the remove the black/white socks one. &amp;#x200B; Does it get into Swift coding problems or problems that are expected to be solved with Swift code, or just logic puzzles?
If we keep doing things this way, Swift will be just as horrible to work with as any ugly programming language that came before it. You get onboarded to a large codebase that you inherited and you just want to get the job done so you can leave the office on time to pursue the things truly worth living for, but now you have to study some other conceited programmer’s code that sacrifices predictability for Swifty funky sexy unorthodox Silicon Valley way of doing things.
Hi! I’m taking CS50 now and am on the final project. Decided to make an app using Swift so I started learning that before finishing CS50. I agree CS50 was an amazing course. It’s was tough, but felt like I learned a lot. Did you end up completing the final project? If so, what did you do? 
Any code after return will not be run. Remove this line and it will run return 140.0
print("I call bullshit!")
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-package-manager/.../**Usage.md#c-language-targets** (master → 4362e00)](https://github.com/apple/swift-package-manager/blob/4362e0080d56a6f56e34c76d9eac135373f7c5d6/Documentation/Usage.md#c-language-targets) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e5q0mge.)
It's all bullshit, that's why. Give me a single iOS dev, that needed to solve any of these problems in any their apps. Ridiculous, if you're required to handle these in an iOS dev pos, turn around and leave, don't feel bad about even the time you wasted on them.
I asked that guy on YouTube that's from Google and is in charge of the iOS YouTube app... He said that yes they use these and yes they don't directly apply to the real world, but they do help to filter people out... He said that is someone can get thru a few of these, they should be able to understand an complex API or debug some complex code. They could just ask them to debug some complex code.
But it's not nicer to read. It's more lines and syntactic complexity for no benefit. 
Outside of including its definition, how is it more lines? It’s two lines less. To be clear, this is a setup pattern, not inline in a function. 
Hi chopinrocks! Unfortunately, the link to the App Store you submitted has been automatically removed from /r/Swift. This is because – generally speaking – compiled products are not relevant to /r/Swift (even if the app was originally written in Swift). If this is an app you have written, congrats on your acceptance to the App Store! A great way to promote it would be [Reddit advertising](https://www.reddit.com/advertising). If you would like to release its Swift source code, we would gladly accept a link to that. If the content you were submitting *was* in fact related to the subject of Swift programming, please [message the moderation team](https://www.reddit.com/message/compose?to=%2Fr%2Fswift&amp;subject=Please%20review%20my%20removed%20App%20Store%20submission&amp;message=https://www.reddit.com/r/swift/comments/9enm0v/has_anyone_ever_made_an_app_with_a_blank_screen/) to have it reviewed. Regards, The /r/Swift Moderation Team *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/swift) if you have any questions or concerns.*
You don't have to name the variable. I do programmatic UI, and when I create say a textField, I'll often copy the variable definition and change things around to be a button. With the closure method, I would only need to delete the textfield specific properties, I can leave `$0.translatesAutoresizingMaskIntoConstraints = false`, etc.
Put the Google Folder directly in your app. You need to physically have the Google Admob Folder in the app folder. Then when you add the framework you click other, and add the Admob framework that is INSIDE your app. There is nothing wrong with the tutorial, you just need to have the folder in the right spot. &amp;#x200B;
Try looking at open source iOS apps on Github for inspiration. Example: [https://github.com/GitHawkApp/GitHawk](https://github.com/GitHawkApp/GitHawk)
Sure, this is a common approach. While storyboards and xibs are useful, they don't fit every situation. Building your UI programmatically is a perfectly valid alternative in some situations. Know the tools in your toolbox and use the appropriate tool for the job.
lol, indian companies have interviewers that draw from these question banks and interviewees that study these study banks. really pathetic if you think about it. then again if you actually knew what you were doing you wouldn't be applying to a company that asks questions like these i guess
Yes, plenty of people do it. Games do it a lot, too. I despise this, because I believe it makes adapting to other size screens particularly difficult, and because I despise having to run the app, look at the screen, compare it with the design, then go back, edit the code for the layout, repeat. 
No. Don't do this. Just get a normal website like everyone else. It's not hard. 
Well that is the bad part of it. The initial design. I wrote some pretty good 'universal' code but I still have to manually check the iPad for two sizes and the iPhone for three and then tweak it. And if a unique sized device comes out (which doesn't happen that often, most new devices are still compatible with previous sizes) then I will have to add it. But yeah that is the big drawback. But the positive is the simplicity of compiling, code checking, and huge reduction in bugs, and it runs quicker.
Thank you!
SnapKit is a great tool for programmatic UI engaging with auto constraints.
Are you allowed to use resources? Or am I supposed to know all the functions to call by heart? I can answer them all with words, This is what needs to be done.... I just need to look up the actual function names and specifics.
Doing interview in my current company for half of the year. We used to drop code challenge based on REAL component from our application. You would be surprised, but 99% of people are completely lost and couldn't solve it properly during interview, even if you don't care about syntax. So, we had to replace it with something similar from post (even simpler). And still, majority of candidates (even they are Leads and Seniors on current position) are failing to produce solution within reasonable amount of time.
Not one Apple question?
but it's sexy tho
Well, you gotta up your game then, until they throw up just seeing the challenge. :) If 99% of people can't figure out some stuff in your code then that might be telling more about your codebase than the candidates. Also, you want people to perform under a stressed situation like an interview? That should translate to that you are looking for people who can handle shitty project management. You can acquire a job hopper who can fake it till you find out they left....
So the issue you're hitting here is that `req.decode(T)` returns `Future&lt;T&gt;` because it could be a streaming request. If you are certain it's not a streaming body (99% of POST requests) you can use `syncDecode` which will return a non-future: ``` let data = req.content.syncDecode(AmtrakData.self) ``` Alternatively you can use the request handler sugar to do it for you when you register the route ```swift router.post(AmtrakData.self, at: "someRoute", use: check) ``` This passes in the decoded data as a second parameter to the route handler: ```swift func check(\_ req: Request, data: AmtrakData) -&gt; String { print([data.email](https://data.email)) print(data.password) return "Returning a String" } ``` Hope that helps!
Takes 2 mins to understand champ. This is what software development is all about. Too hard? Go be a janitor.
it was Monsanto lol...
Oh sod off, this is rewriting what already exists for no added benefit besides syntactic sugar. This is NOT what software development is about. Go get some industry experience to make you deserving of that arrogance.
This is NOT what software development is about. This is reinventing the wheel for no added benefit besides syntactic sugar. Get some experience, kid.
Legend! I thought I had but made a similar mistake to NSBoss and only added the dataSource. Thanks so much!
Hahaha popularity is hardly an indicator of benefit. That’s just bad science. People buy into all sorts of things because of marketing and the placebo effect. I dare you to express in concrete terms the time savings and performance benefit this code offers. Also, janitors are hardworking people and are hardly a symbol of laziness, you classist ignorant.
Panties bunched much? Dude, you're wrong. Get over it. This is a neat little way to save a couple lines when building views programmatically. And no, it's not "bad science". People here clearly think it's a good idea. I use something very similar in my own apps. Don't like it? Fine, shut up and stop acting like a 5 year old.
"learning" in this case involved about 3 seconds. lol blocked kid.
Still evading the real question of where the gain is. Why are trolls in this subreddit?
You need to how to download Json from internet and if you are using swift 4 you should know about “codable” protocol UrlSession for networking Or if you want to use library use “AlamoFire”
Sorry, but in your effort of being typical redditor you've missed my point. Punch line is that such code challenges and questions appeared in interviews because questions with real code are much more challenging to ask and very time consuming (e.g. full hour comparable to 20-30 minutes). Code challenge is one of several activities during interview and not always a deal breaker. As you mentioned, it's much more important to see how person handles some pressure and becoming an asshole within 10-15 minutes. And besides that, every interview is burned cash/employee time.
Pretty condescending you got there, good luck with your ventures.
**Github Link:** https://github.com/eonfluxor/delay **Docs:** http://eonfluxor.github.io/kron **Cocoapod:** https://cocoapods.org/pods/delayed **Some examples:** Idle Timeout Kron.idle( 1.0 , key:"updateUI"){ (key,ctx) in } Debounce let context = 'userTap' Kron.debounce( 1.0 , key:"updateUI", ctx: context){ (key,ctx) in print(ctx as! String) // userTap } Watchdog and Cancel //self.currentModel should be an AnyObject instance Kron.watchdog( 10.0 , key:self.currentModel){ (key,ctx) in } //somewhere else Kron.watchdogCancel(key:self.currentModel)
Can you clarify what you mean, eg are you working on the server component for your app, which is written in Swift? Or is the server component written in another language? Or are you working on the "backend" of the app, ie not doing any frontend UI work for it? 
I agree about the key path thing being too clever, but something like let label = with(UILabel()) { $0.text = "Hello!" $0.textColor = .darkGray } is pretty innocent. The added complexity of such a `with` function is super low because its parameter is unconstrained. &gt;This is not as easy to read as the idiomatic Swift: &gt; &gt;`let label = UILabel()` &gt; &gt;`label.text = "Hello!"` &gt; &gt;`label.textColor = .darkGray` In most situations I would agree with you, but this doesn't work if `label` is e.g. an instance variable, since you can't run arbitrary code there. The alternative is let label = { let label = UILabel() label.text = "Hello!" label.textColor = .darkGray return label }() which is awful. And in the case of value semantics and mutation, the `with` function also has the clear benefit that you don't need to make your variable mutable.
What I often see in other people's code: lazy var label: UILabel = { let label = UILabel() label.text = "Hello!" label.textColor = .darkGray return label }() What I would write instead: lazy var label = with(UILabel()) { $0.text = "Hello!" $0.textColor = .darkGray } Wouldn't you agree that (once you know about `with`) the second one is a lot more readable, since there's less boilerplate to look past? Sure, people will need to learn about `with`, but it's not very complicated. People often add way crazier functions to their codebases that newcomers will need to learn about.
You probably have to set rawValue: "ViewController" as id in the Storyboard .. Open the Storyboard, select the viewcontroller and open the Identity Inspector..
You could try using popover Alerts. 
Can you put gesture recognizer over the collection view and do touchesbegan touchesended? Dou you need did select item at indexpath from collectionview ?
Yeah I need the did select item, I also want to keep the scrolling ability through the collection view
I think generally they mean middleware for any “backend” of a native client, like Android or iOS. Working on the API, the networking layer, any developer toolsets, as opposed to UI.
Thank you all, I have just received a cheap price from a mate, can it be used. MacBook Pro (13 ", primo 2011) Processor 2.3 GHz Intel Core I5 Memory 4Gb 1333 MHz DDR3 Grafik Intel HD Graphics 3000 384 MB Serienummer C02G6RV2DRJ7 60 GB Solid state SATA-disc
To flip your problem around, what you're missing is this implementation: extension String { init(_ num: Numeric) { // ?? } } Or, any extension on Numeric that String.init() can work with, like: extension Numeric: LossLessStringConvertible { public init?(_ description: String) { // ?? } } Or maybe, all you really want is? extension Array where Element: LosslessStringConvertible { func stringRepresentation(joinedBy: String) -&gt; String { return self.map{ String($0) }.joined(separator: ",") } }
Perhaps easier to just cheat and use &amp;#x200B; map { "\\($0)" } &amp;#x200B; instead
It's hard to say why that was called without taking a look at your storyboard. In my opinion storyboards can cause more harm than good in many circumstances.
When you touch the cell, does it just stop the movement or it opens some kind of detail view ? If it just stops the collectionview you can put gesture recognizer over the cell and do the touchesbegan touches ended.
Unfortunately it has to open a detail view. So I don´t think I can block the collection view with a gesture recognizer
\`UICollectionViewDelegate\` conforms to \`UIScrollViewDelegate\`. That means you can implement \`scrollViewWillBeginDragging\` and \`scrollViewWillEndDragging\` in you collection view delegate to start and stop your scrolling animation. 
I feel like every time I see somebody give an example of this pattern with instance properties, it's something where the alternatives are better anyway, e.g.: - Appearance proxies - Storyboards - Nibs - `configureX()` methods - Dependency injection - Factory methods - Subclasses Are there really a substantial number of cases where complex setup at the point of declaration is the right choice? 
This is really helpful thank you! 
Thank you this is the solution. I could swear I was looking into this direction but couldn´t find anything. But anyway it works now.
I think it would be better to use `CustomStringConvertible` since you're not necessarily looking to convert the value back and `CustomStringConvertible` is the more general-use protocol.
What are you using as IDE? Would like to do a little Swift development on my Ubuntu machine as well. Been looking into using Visual Studio Code, but all the Swift extensions seems abandoned:/
Damn you sound genuinely concerned for the level of obscurity of other codebases.
It's not going to support Mojave if I'm not mistaken. Also pretty low specs even for the time, you would need to upgrade it quite a bit in terms of RAM and SSD capacity. I would pass on it unless it would be like US$100 and you don't mind to tinker a bit with Dosdude's installers.
Have in mind it is only for Swift, I am happy with my Windows pc, and if it change, se have a new situation
I'm using a text editor and the swiftc command.
And with Xcode alone filling 13 gigs (plus 3 gigs for iOS support files, and a few gigs of thrash), your 60 GB SSD, will quickly become too small...
from my experience of giving interviews, no you don't need to know the precise function. Heck your code doesn't even need to compile, as its usually done on a whiteboard, however your logic and complexity analysis need to be spot on.
Hey Thanks for your feedback! The key can be either a Sring or AnyObject. If you pass an object, a key is inferred from the instance pointer. If you pass an object it is wrapped internally with a weak ref. All the docs are here: https://github.com/eonfluxor/kron I found myself adding and removing the label for the `timeOut` . I assumed that given the object is a Timer manager maybe it was ok removing it? Would be nice to hear a bit more feedback on this. It will be great if you can install the pod and provide more feedback. ``` pod "Delayed","&gt;2" ``` Thanks 
Wrappers can be useful, if the developer is experienced and knows the pitfalls around what they're wrapping. I applaud your desire to write code and put things out there; it looks like you are quite new to Swift. In your "Why Kron" documentation, you don't actually say why someone should use Kron over Timer. What are the specific pain points you're trying to solve, and how does Kron solve those? To me this seems like an awkward and unnecessary wrapper around Timer, but perhaps you're solving an issue I'm not familiar with. Digging into your code, familiarize yourself with Optionals, unwrapping, and Swift standards. The [Swift Language Guide](https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html) is a great place to start.
Interesting, I thought it was obvious that doing timers in one line was better than the traditional way that requires a @objc #selector and also invalidating etc. The code uses Optional, Wrappers, and other advanced concepts. Would you kindly point the pitfalls you noticed? Just as an example the key can be either a String or AnyObject, if an object is passed then it is wrapped with a weak reference to prevent retain cycles. The wrapper is interesting as it can wrap both a struct or a weak class pointer. I've used this pattern many production apps (originally written in obj-c) and once you get used to it it becomes really powerful... But yeah! I may need to add more examples .
Swift uses Xcode, Xcode only runs on one version below (this is why you can run Xcode 10 on High Sierra). So you have basically one year. The specs are low but doable if you don't run anything else on the machine.
I used a 2011 for years, but it has the older Bluetooth hardware so I eventually had to trade it in for a 2017 version. I have zero regrets about that (except for the clacky keyboard). 
I really wanted a paper version of the Swift Language Guide, so I made this up. Hope others find it useful, pull requests welcome.
A timer can be a one-liner in Swift, and doesn't require a selector. let myTimer = Timer.scheduledTimer(withTimeInterval: 0.5, repeats: false, block: {timer in print("hello from the timer") }) That's why saying what problems Kron solves would be so useful in your documentation. If your class is better than Apple's default implementation, you need to give users a strong reason to use it. Show the pitfalls of Apple's implementation, and how your class resolves them. As far as your Swift experience goes, it's clear you're new to Swift. Just one example: if ((key as? String) != nil) { return key as! String } 
Thanks for all your feedback. I have already integrated your recommendations and released an update v0.2.11. I really appreciate your help. As the concerns are similar I'll reply here: * About Utility There is no way to create a debounce, idle or watchTimer with Apple Class. You need to more boilerplate just to restart the timer in its basic form. * API Feedback Also just updated the labels based on your feedback `timeOut: key: context` and submitted a new cocoapod available now. * About Sample Code: The code samples are bad. I wrote them on the markdown editor and without doing all the optional unwrapping. I am already advanced with swift digging around generics (and also have a strong engineering background coming from C and obj-C) but this is my first public Pod so yeah, I need to learn to write proper examples etc. I appreciate your observations. *New Documentation I added some practical explanations on the docs: ### Why Kron? Creating a Timer requires a setup similar to this: ```swift class SomeClass{ var timer:Timer? /// create timer func createTimer(){ assert( timer == nil, "Please call cancelTimer first" ) timer = Timer(timeInterval: TimeInterval(1.0), target: self, selector: #selector(timerTick), userInfo: nil, repeats: false) RunLoop.main.add(timer!, forMode: .commonModes) } // cancel timer func cancelTimer(){ if let aTimer = timer { aTimer.invalidate() } timer = nil } // restart timer func restartTimer(){ cancelTimer() createTimer() } /// handle callback @objc func timerTick(_ timer:Timer){ timer.invalidate() //Do something } } ``` ### What about doing this in one line? Kron takes care of all this setup by internally managing a map of Timers that can be accesed through a key. Calling again with the same key would cause the timer to be reset. ```swift Kron.idle(timeOut:1.0, key:"updateUI"){ (key,context) in } ``` So the main difference are * Instead of returning a `Timer` instance, **Kron** manages the Timers internally through a [`KronKey` : `Timer`] dictionary. This makes easy to call **Kron** from distant components or threads accesing the timers by their key value and in a single line. * The `KronKey` can be etiher a `String` struct or `AnyObject` instance. If an object is passed the key is inferred from the object's pointer. Calling the methods with the same key causes all timer modes to be reset. * An optional `context` of `Any?` type can be provided and it's internally ***wrapped with a weak reference*** to prevent retain cycles. The context is then optionally passed to the `timeOut` closure. ## Practical Applications ### Debounce Scroll This example will ensure to update the UI only every second during user scroll. Additionally using `debounceLast` will ensure to apply the last call on timeOut. This will guarante the last event will be performed. (You cn alsu use `debounce` for traditional debouncing. ```swift func didScroll(){ Kron.debounceLast(timeOut: 1, key: "scroll") { (keu, context) in //updateUI } } ``` ### Ensure Context This example will save a document only if the user hasn't typed in 5 seconds. In the timeOut closure we check that the `KronKey` is equal to the currentDocumet otherwise we abort the save action. ```swift var currentDocument:NSObject; func textViewDidChange(){ autoSave() } func autoSave(){ Kron.idle(timeOut:10.0, key:self.currentDocument){ [weak self] (key,context) in let aDocument = key as? NSObject guard aDocument == self?.currentDocument else{ return } self?.saveNow() } } func saveNow(){ //save only if current document is still active } ``` ### Watchdog The following example shows how to add a watchdog for different Api Requests. ```swift func startApiRequest(_ endPointURL:String){ let watchdogkey = "ApiRequest\(endPointURL)" Kron.watchDog(timeOut:10.0, key:watchdogkey){ (key,context) in // retry or something else? assert(false, "print api is not responding!") } SomeClass.loadApi(endPointURL){ Kron.watchDogCancel(watchdogkey) } } ``` ## Documentation View the full version here: [Documentation](https://eonfluxor.github.io/kron/) 
This is very nice. Thank you. It would be great to also have a cover and page numbers too.
I think I love you 
If you read [the Error Handling chapter](https://docs.swift.org/swift-book/LanguageGuide/ErrorHandling.html) of the Swift Programming Guide, you'll see that a bare `catch` gets provided an `error` variable containing the error that was thrown. So change this line: print("error.") …to this: print(error) …and it should give you more information on what's going wrong.
(To reply to somebody on Reddit, click the *reply* button underneath their comment.) JSONDecoder().decode([Instruction].self, from: data!) Here, you're telling it that you're expecting an array of `Instruction` objects. It's saying that it's found a dictionary instead. So you are saying your JSON looks something like: [ { [some object contents here] }, { [some object contents here] } ] …but actually you have JSON that looks something like this: { [some object contents here] } 
So what can I do to fix that?
Well if `Instruction` is an object, and `[Instruction]` is an array of objects, and it's throwing an error because you're trying to decode an array when you've got an object, then try decoding just an `Instruction` object instead of decoding an array of them.
&gt;recommend Very helpful reply, thanks! That covers my need more generically. +1 for stepping through the inheritance/conformance structure &amp;#x200B; &amp;#x200B;
32GB, wouldn‘t want to go lower either.
Any thoughts? 
The ?: is a "[ternary operator](https://en.wikipedia.org/wiki/Ternary_operation)" -- it's basically an if/then shortcut. If "selectedTabViewItemIndex == 0" evaluates to true, the first value is chosen (and selectedTabViewItemIndex will be assigned the value of "1"; if it's false, it will be assigned "0".
It's a ternary operator. It reads: if selectedTabViewItemIndex == 0 { selectedTabViewItemIndex = 1 } else { selectedTabViewItemIndex = 0 }
Can you post the JSON you're trying to parse?
Your type `Instruction` is a `struct` but you're treating it as a variable. var check = try JSONDecoder().decode(Instruction.self, from: data!) for Instruction in check { print(Instruction.status) } This makes no sense. First of all, `check` is not a `Sequence` and therefore you can't iterate through it. Secondly, you're trying to set the type `Instruction` to each item in that `Sequence`. Did you perhaps mean: var check = try JSONDecoder().decode(Instruction.self, from: data!) for status in check.statuses { print(status.status) } 
Thanks for the replies, I appreciate it. So it looks like this method won't work if I add a third or a fourth tab. More homework!
You can opt for either one, but if you implicitly unwrap your IBOutlets, make sure your test your code by running your app and navigating to this screen. Otherwise, you could have something broken and you'll ship code that will crash to your end user. IMHO, I think that implicitly unwrapped optionals should almost always be avoided.
Thank you 100 times over!!!!! By the way, it makes life far easier for users if the paper size is put at the end of the base filename. 
I've seen my share of obscure "utility" functions and types and of course I agree that they often do more harm than good, but that doesn't mean that none of them are worth having. I introduced a lightweight promise library into a company project recently, and although it took a bit for my coworkers to get used to it, they all agreed after a while that it made our asynchronous code a lot better. As long as you stay sensible about what makes it into your codebase and what doesn't, I don't think you need to fear that people joining the project will have a hard time getting used to the code. &gt;Didn’t you just spend in communication the time savings that your keystrokes supposedly afforded you? I'll just assume you weren't trying to be patronizing here. I really couldn't care less about the number of keystrokes this saves me, I just want my code to be readable without a ton of repeated code.
You might want to call out somewhere that this is the 4.2 *beta* edition.
I never said that none of those utility functions are worth having, though. Have as many as you please, in fact, for as long as the placement, naming, and signature is intuitive. What I’m really getting at is that iOS/Mac developers, for the love of Swift, confuse personal code style with a “pattern” that supposedly solves an architectural problem but is actually just an imposition of a non-standard, unnecessary personal preference. There are probably better examples than this post, of course, such as the entire RxSwift library for example.
# Dependency Inversion Dependency Inversion (aka Dependency Injection) is sometimes summed up in what's known as the Hollywood Principle: &gt; Don't call us. We'll call you. I think the reason that this doesn't quite make sense is that the article wasn't as clear as it could have been. Here's some further, clearer examples &amp; implementations of this principle. **Protocol** Swift is a Protocol Oriented Programming language, so first, we create a protocol: ```swift protocol DatabaseService { func getUsers()-&gt; [User] } ``` **Implementation** This can be conformed to by any implementation. We'll use Core Data first: ```swift class CoreDataService: DatabaseService { func getUsers() -&gt; [User] { // fetch users from core data and return } } ``` And Realm second: ```swift class RealmService: DatabaseService { func getUsers() -&gt; [User] { // fetch users from core data and return } } ``` **View Controller** This is where my example differs and implements a better example of dependency inversion. Basically, our View Controller "depends" on having an instance of a `DatabaseService` so that it can get Users. So, here's how we would implement this: ```swift class ViewController: UIViewController { let databaseService: DatabaseService // ... init(databaseService: DatabaseService) { self.databaseService = databaseService super.init(nibName: nil, bundle: nil) } // ... func showMyUsers() { let users = databaseService.getUsers() // do something with the users } } ``` This way, your ViewController has no idea about implementation, and it doesn't need to. Your view doesn't care if it's Core Data or Realm or a cloud data cache... it merely cares about the ability to "get users". **Inverting the Dependency** Finally, you create your View Controller: ```swift func someFunc() { let databaseService = CoreDataService() let controller = ViewController(databaseService: databaseService) // present your view controller } ``` Ever wanna change implementations? Change 1 line of code: ```swift func someFunc() { let databaseService = RealmService() let controller = ViewController(databaseService: databaseService) // present your view controller } ``` Now, you have true dependency inversion. Your View Controller never determines the implementation of its dependency. **Conclusion** So, your view controller depends on having an instance of a `DatabaseService`, which is implemented by either your `CoreDataService` or `RealmService`. It's more of a linear abstraction, rather than circular: ``` UIViewController -&gt; DatabaseService -&gt; CoreDataService or RealmService ```
A lot of it comes down to personal preference, especially whether you use interface builder or not. If you're doing code-based UI then you could configure the UI components somewhere else, but I don't see why that would be better.
Primarily, it comes from the requirements for initializing an object in Swift, which adds complications when working with certain elements of UIKit (which is based on Objective-C.) The local properties, which reference objects in the XIB, can not be standard variables or constants (i.e., defined by just var or let) because they would have to be referenced during the initialization of the object, which is not possible because of the way UIKit works at runtime. That leaves optional and implicitly unwrapped optional references. Of those, the IUO is simply easier because you don’t have to reference it *as* an optional in the rest of your code. There is, of course, the risk of a runtime failure, but so long as UIKit correctly ties your reference to the object in the XIB, you’re good to go. This may chance at some point in the future, but for now, this is a compromise that allows you to write Swift code for an Objective-C framework. 
Dude, you’re great! Thank you so much!
If you just want to cycle then index = (index + 1) % itemCount should do it
Also calling `String(describing: $0)` works even if the type doesn't conform to `CustomStringConvertible`.
Load an empty html document `&lt;html&gt;&lt;/html&gt;`.
Didn’t know you could load HTML into it, that’s cool. However, it still seems to show the original page. I have viewWillAppear set to run a function that loads the blank HTML then the correct page but the last viewed page is still shown 
It's because UIKit was designed before Swift / optionals and it doesn't really mesh 100% with them. You can think of view controllers and views as having two separate setup stages. First, the object is initialised, then all the outlets are hooked up. Once all that is done, `viewDidLoad()` is called and you know your view controller / view is set up completely. Swift doesn't work this way. Non-optional properties need to have a value assigned to them by the time the object has finished being initialised, by definition. There's no *"hang on a minute while I deserialise the storyboard/nib"*, you *need* all the values assigned before then. Because of this, outlets *have* to be optional, because they start out as `nil`. But that doesn't really fit with how outlets are usually used, where there's the assumption that there will always be a value (because you're expecting it to come from the storyboard / nib). So the usual solution is to use implicitly unwrapped optionals to continue that assumption without having to deal with the possibility of `nil` everywhere you access an outlet. It's certainly not ideal, but it's probably the least bad approach to take with outlets. If you want to, you can use normal optionals and handle the `nil` case everywhere, or you could assert that all of your implicitly unwrapped optionals have values in `viewDidLoad()` and write a SwiftLint plugin to ensure you don't miss any. I suspect that further down the line, whatever replaces UIKit will be more Swift-friendly and will act more like `Codable` where you can deserialise without everything being optional.
If you don’t know it, you’ll do better to just say “I forgot the function name, but I can get it sorted by a variable and then...” than to worry about the function name. In an interview, show that you know what you’re talking about, and don’t distract from that. Assume they know you know what documentation is.* *And for fuck’s sake, know what documentation is. 
I'll hijack the thread and ask if by chance anyone knows how to print in WKWebView. As of today there seems to be no API for it and I'm forced to use the old (deprecated) WebView instead.
A few approaches are to store a private array of tab indices to labels for example, or to use enums, and or to go full out and use bindings on an array/object controller if your data is structured as such.
You can use a \`UITextField\` and set its \`inputView\` to be the picker view.
Without seeing your code, I couldn’t properly tell you what’s up. But, you could hide the web view until the navigation delegate tells you the page is loaded.
Thank you! The booklet version does have page numbers. I'd love them on the others, but alas, it seems like page number printing isn't a thing browsers do very well. On safari and firefox, you can print headers and footers, which puts the page number and but also the page title, url, and date and time. It looked distracting to me, but that's an option (ie. just open WholeBook.html in safari/firefox and print from there). Happy to add those PDFs to the project if you want to send a pull request too. It feels like I'm missing something obvious, maybe someone knows an easy way to add page numbers? 
Well, yeah. That's why the `extension` says `Element: Numeric` instead of `Element: CustomStringConvertible`.
Will try this when I can, thanks 
I’ve never bookmarked a post so fast, much appreciated 
Honestly, I read that article and it is confusing as all hell. There is definitely better resources out there that I will link at the bottom of this post. The idea of Dependency Inversion is to rely on abstractions not concrete classes. For example say you have a class that's only responsibility is to fetch users from a database. For the sake of this example we will use the ActiveRecord design pattern. class DatabaseFetcher { let coreDatabase: CoreDatabase init(coreDatabase: CoreDatabase) { self.coreDatabase = coreDatabase } func fetchUsers() -&gt; [Users] { // do stuff with the coreDatabase object } } in your VC you call it as such let coreDatabase = CoreDatabase() let databaseFetcher = DatabaseFetcher(coreDatabase: coreDatabase) let users = databaseFetcher.fetchUsers() Your boss called, he want's to switch to Realm! WOHOO, but that means you have to go back and refactor your code to use Realm instead of Core Data. This is a tedious and also what if he wants to switch back to Core data at some point? So how to we accomplish making a reusable class that can accept different types of databases? Protocol Oriented Programming What do we want our databases to have? We want them to have a fetchUsers function. So we create the protocol protocol Fetchable { func execute() -&gt; [Users] } class CoreDatabase: Fetchable { func execute() -&gt; [Users]{ // implement the functionality here } } class RealmDatabase: Fetchable { func execute() -&gt; [Users]{ // implement the functionality here } } Then we create the DatabaseFetcher class class DatabaseFetcher { let database: Fetchable init(database: Fetchable ) { self.database = database } func fetchUsers() -&gt; [Users] { // We know that the database confirms to the protocol Fetchable which has the function execute() return database.execute() } } in our VC we call let realmDatabase = RealmDatabase() let databaseFetcher = DatabaseFetcher(database: realmDatabase) let users = databaseFetcher.fetchUsers() What if we had core database instead? let coreDatabase = CoreDatabase() let databaseFetcher = DatabaseFetcher(database: coreDatabase ) let users = databaseFetcher.fetchUsers() The database fetcher class accepts objects that have implemented the Fetchable protocol. As long as the class conforms to that protocol it can fetchUsers. In doing this you decouple the classes, you are not relying on concrete classes and functions. You can use the open/closed principle as well. Here are some good links to some resources about the SOLID Principles https://github.com/ochococo/OOD-Principles-In-Swift https://www.youtube.com/watch?v=gkxmeWvGEpU 
You need to save the device token locally after every time you successfully register it with your server. Userdefaults is fine. Then on every launch you need to get the device token and compare it with the saved one. 1. If it’s the same you don’t need to do anything. 2. If saved token is nil (this the case where user disallowed the permission first time and later allowed it from the settings), you can register the current one in your server. 3. If it is different from the saved one (happens in some cases like if the device is restored from a backup), you need to unregister the old one and register the new updated token. 
Yep this all makes perfect sense and is what Apple tells you to do, but it doesn't answer my question. &amp;#x200B; What if someone says NO to the initial ask but then later decides they DO want to receive push notifications? How do you generate a device token in that instance without having the user completely uninstall and re-install the app? 
Ok yes, I am trying that. I have my ViewController adopting the `UNUserNotificationCenterDelegate` delegate, and I've got a button pressed set to run this function: func reRegisterForPushNotifications() { UNUserNotificationCenter.current().delegate = self UNUserNotificationCenter.current().requestAuthorization(options: [.alert, .sound, .badge]) { (granted, error) in print("Permission granted: \(granted)") DispatchQueue.main.async { UIApplication.shared.registerForRemoteNotifications() } } } But the dialog is never popped up after the first time. What am I doing wrong, or is it even possible to have the dialog box pop up again?
The dialog will be shown only the first time. If the user wants to change the decision later, he/she needs to go to the settings and do it there. User don't have to uninstall/reinstall the app.
Do this on every app launch. call UIApplication's registerForRemoteNotifications method. And if the user has enabled permissions for you app at the time you call this method, you'll get a device token.
 struct Foo { let first: String let second: Int } let bar = [Foo(first: "test1", second: 1), Foo(first: "test2", second: 2), Foo(first: "test3", second: 3)] print(bar.contains { $0.first == "test2" }) // "true"
Conform to the equatable protocol. I think you need swift 4.2 to automatically synthesize it if all variables are equatable otherwise you have to write it by hand.
It's part of Swift 4.1. struct Foo: Equatable { // synthesized conformance let first: String let second: Int } 
Thank you!!
Thank you very much. I am very noob with Swift and every help will be very useful. My struct is codable, so I such would work? I could test it before asking but I am out of the Mac computer now struct Foo: Equatable, Codable { // synthesized conformance let first: String let second: Int } 
Yes, both can be automatically synthesized if all the properties inside the `struct` also conform to the protocols. 
Url is broken -&gt; [here’s one that works](https://github.com/wfltaylor/EasyThemer)
Aw heck lol thanks for the fix! Why didn’t mine work though?
hi! I'm one of the developers of MongoSwift. I'm guessing you are targeting iOS? please see this [GitHub issue](https://github.com/mongodb/mongo-swift-driver/issues/52) and [JIRA ticket](https://jira.mongodb.org/browse/SWIFT-205) for more info on iOS usage and feel free to open issues/tickets on GitHub or JIRA in the future, we'll probably see them sooner than post :)
Live stream link?
Not of much value without some details, when, where, etc...
It’s not being live streamed unfortunately but is being recorded and will be on Yourube
In that case, we'll have to wait for it to be streamed or on YouTube. Kinda wondering why it would be in Berlin and not here in Silicon Valley. I wonder if Berlin is an iOS hot spot.
Europe has more server-side Swift in production and has a slightly bigger community that we’ve seen. We are looking at a US edition though!
I was surprised how big of a deal server side Swift was at try!Swift. Great to see this!
Super excited to watch! 
site isn't working
What error are you getting? It works on my machine(TM)
Vapor has a bigger community following, Kitura has a bigger enterprise following
Is Vapor the most widely used in Europe?
Debugging is a skill and you need to train it. So here is a great talk about ios debugging from person hacking on VLC for iOS
I've always been interested in Server side swift. Is SSS viable in creating platforms similar to other program languages? I guess I'm a little lost with the possibilities. I tried researching it but found nothing. (currently learning swift)
Tbh it was announced a very long time ago. I noticed while using Vapor that this popped up quite a bit. One of those if you research it, this was bound to pop up somewhere kind of things.
Wow. Thank you so much for sharing this information. I too have been looking for someone who actually took the course. I have so many questions.. Please bear with me, my friend. What was your experience like? Did you have a background in programming going into the course or were you a newbie? What did the course focus on particularly? iOS app development? Server side Swift? More? Did you see a substantial enough improvement in your knowledge by the end of the course or not really? Can someone who's already good at coding benefit from the Standard course or just newcomers? Eagerly awaiting your response. 
Where's it falling from that you have to catch it?
Why ask this on a Swift sub? JSON and financial data are pretty general topics, ask a sub where they would know things like this. Once you know the site/JSON then a Swift sub can help you access that data in your app.
Good point, thanks for notifying me! 
Actually, people don't stay on old versions of Xcode very long. You'll need to be on [Xcode 10 by March](https://developer.apple.com/news/?id=09122018c) to submit to the store. Usually developers only need to support one release or so back for a limited time because of critical code changes or dependancies that are not ready to migrate. When I have that happen, I install the new version of Xcode on my machine, then copy the simulator files to the older version of Xcode. Since you can't install the new version you're a bit stuck. Perhaps you can hit up a co-worker or friend that can get you the simulator files for the time being, but upgrade soon.....
Yes, you are correct. So, we need to send the device token each time the app launches? I didn’t want to send the token if it’s the same as the one already registered. That’s why I stored the token to compare. 
SDK for what? There are some projects already underway especially for web related tasks.
Haha, it's always nice to see other people finding your writing interesting!! 😆 FWIW I really want to make a *proper* Swift Flatpak SDK, building from source that way it'd work be accepted into Flathub. 
I discovered that the Swift [GitHub](https://github.com/apple/swift) page has instructions on building Swift via Ninja. If you're unable to do it then I could try it, but not in the near future sadly. :(
TingPing has a non-working Swift Flatpak SDK that follows this. That's the easy part. Hard part is that the built Clang completely fails at finding any header files or libraries... 
Oh, bummer. D:
Yep there’s nothing stopping you from building the same service, app, backend that you can build in other languages
Difficult to tell to be honest, as a lot of apps are internal and not public
It's hard to say but it wouldn't surprise me. Vapor has a fair bit of visibility at Swift/iOS conferences in Europe because the main company that's sponsoring the development and contributing office space, Nodes, is European based with most of the development happening on the continent &amp;#x200B; The guys in Prague are particularly cool
Not sure if you are aware, but there is already a project called [flask](http://flask.pocoo.org/) which is a python web microframework which is quite well established. Might want to consider a different name to avoid confusion (and help with SEO)?
I ran into an issue with this at work, as we use web views for some parts of the user experience. WKWebView will not work in the background and, if it isn’t in an active view hierarchy, it will be throttled and in a background state. What constitutes an active view hierarchy? Anything visible on screen. Through testing, I was able to see that this can include a 5x5 size webview at 10% opacity. But you can’t have it load in the background, unattached to a view. In your case, if they are all connected to your tab bar, it *may* work. But I would recommend thorough testing to confirm. 
don't work in Russia lol
If I did something similar once, I preloaded pages by initing it’s viewcontroller and the force viewdidload
It can't truly be in the background, but it doesn't have to be visible. You can create your WKWebView out of the visible frame with a negative origin, or constraint, then when the page has loaded, animate it into view. One thing to keep in mind, while the web view won't be visible to the user, it still needs to be on the main thread. So a heavy-loading web page may cause other elements in your app to be sluggish.
Hey, any chance you could link/PM me the resources? Ideally not on the iTunes U app as I only have an iPhone SE which doesn't lend itself to studying from.
Thanks, just going to have a "loading" screen to load the pages so it would not affect any part of the app
Will try, thanks
Will give it a go on Monday, thanks
You can force viewDidLoad like this: _ = vc.view // vc is your ViewController instance
Try the IEX api: https://iextrading.com/developer/docs/
Aren’t you not supposed to care about screen size? The only thing that’s supposed to matter is regular or compact
A quick google I was able to find a quiz API that you can hook into. https://opentdb.com/api_config.php
One week? Ask for an extension. As an experienced Swift programmer I could probably do it in this time if I had the free time but someone "who only knows the pure basics of swift and html" is not going to be able to do it in that time. 
Its not for a school project.
Definitely agree that you don’t have enough time. I’ll say convert your numbers into a JSON format and then do some JSON parsing in your app. I think a good Long term option would be something like storing your numbers spreadsheet in Google sheets and using the Google drive api to load from the cloud.
Then what's the deadline about?
Or just leave it as CSV…
So this is false? &gt; I have to code this Quiz App for a school project of mine 
You're going to have to clarify exactly what you mean, maybe show some code, what you're tried, and so on. This question is pretty vague.
Just a word to the wise.. My guess is a third world contracting gig. The student part is for sympathy and free code. Read the post again, it doesn’t make sense. You seem genuine I just don’t want you to get scammed out of spec work.
Lol there's no way I'm doing anyone's work for them. A bit of advice here and there, sure, but I have plenty of work on my own!
Indeed.. look at OPs profile/posts + the whole post is just strange.
Take some programming courses 
Seems like a kid to me, not some sort of contractor. I could be wrong, of course, but either way I don't do other people's work for them!
Web sockets? 
Sounds like you need an api. 
Maybe means “Landscape mode”?
So you waited until you have " only less than a week left " ?? The best answer here is for you to retake the class next semester and not wait until " only less than a week left " to figure out how to do a quiz app. While waiting to retake the class, watch a few tutorials. What school is this? I'm concerned about a school that would give you this work and not have you prepped to do the work. Did you ask the teacher for help?
On the AppleTV??
I'm stuck cuz I'm using a hackintosh laptop as well. Even though I think I can upgrade to High Sierra or even Mojave (Core i5 3rd Gen, 12 gigs Ram) but I remember last year when I tried to install high Sierra the installation didn't start because of the new file system that Apple introduced. Hence I went with Sierra instead. At this point I do think moving to a MacBook would be a better choice and I'm waiting for Apple to renew their non touch bar models and hopefully I'll upgrade in Spring but in the mean time I was thinking of upgrading to high Sierra. I saw a thread on tonymac for upgrading directly from Sierra to high Sierra but that was for desktops, do you think that would work?
If the new file system screwed things up, could getting a new HD/SSD solve that problem? I was under the impression that the laptop upgrades would work, but you'd have issues with things like sound and various controllers. That's the things that screw up for me. Did you find your laptop listed on Tonymac? There's a reddit sub too: https://www.reddit.com/r/hackintosh/ What I do is a full backup and install in a new SSD. That way I can just go back to my old system if it fails. Do you have a link for the Tonymac direct upgrade? My guess is that if you find what part deals with the file system, you should be able to make the rest of the stuff work. Generally the process is the same as what you did last time. You make the USB boot drive, add the files you need, then boot from the USB and install on the SSD? Where did your process fail? I'm a bit rusty, it's been about a year since I dealt with it last.
It really is for a school project. It's my fault that I never found the motivation to finally start on working with the database part (I could have started 9 months earlier...). The basic structure/layout of the app is already done (as basic as those YouTube Quiz App tutorials haha). I'm just seeking advice on how to implement the 200 questions the most efficient way. &amp;#x200B; I really do know that I don't have much time left, yet I'm trying to make the best out of this situation. Perhaps I shouldn't have mentioned the one week thing...
I don't expect anyone to do my work for me... And no this is not a third world contracting gig hahah. Yes I'm a kid in 12th grade in a german school who was hoping to get pointed in the right direction.
Yes it's all my fault. Retaking the class isn't an option for me... In Germany there's this thing called "Scientifical Seminar" in which you have to work out a scientifically paper. In my case I have to see if students using digital learning "material" (in this case a Quiz App) perform better than students who use regular paper&amp;books. &amp;#x200B; No I didn't ask the teacher for help as he can only help me with the scientifical part but not with the coding part... &amp;#x200B; Thanks for your answer!
Whatsapp groups are very limited and not meant for that kind of thing, better to use discord for that, I think there's already some
Your best bet is to just buy a framework or do a tutorial that you find online. Just a quick search. If you don't have to understand the code, you can just download and run it. https://www.youtube.com/watch?v=pXbG9RS3C5A If that's not what you want to do here's a listing of places to buy apps. I'd guess $99 would get you a working quiz app with source: https://www.digifloor.com/top-9-mobile-apps-marketplace-buy-sell-source-code-21
Interesting sales approach in not having a ready way to sign up.
Hey, here's the guide for the direct update https://www.tonymacx86.com/threads/update-directly-to-macos-high-sierra.232707/ It's been more than 6 months since I tried this so I am bit rusty as well haha. I guess I can give it a go and if I can boot past the installer, that should be good. I found a few people who listed my laptop as a success for high sierra (Asus S46cb) but there weren't any specific guides for it. I don't remember exactly but I couldn't boot into the installer, it used to crash near the middle of the progress when the apple logo appears for the first time.
Do you perhaps know of some Discord groups?
I don't join those, but I saw an old post about this same thing mentioning all alternatives, sorry I can't be of more help
Check out the DateFormatter class https://developer.apple.com/documentation/foundation/dateformatter
let date = "2016-04-14T10:44:00+0000" let dateFormatter = NSDateFormatter() dateFormatter.dateFormat = "yyyy-MM-dd'T'HH:mm:ssZ" let date = dateFormatter.dateFromString(date)! I used something like this but in swift 3, i can't get in more details because im not home i am writing from my phone. Trye it and if you cant figure out just reply me again
thanks actually in my case the date format will be `yyyy-MM-dd HH:mm:ssZZZZZ` just removed the `'T'`
Why would you implement your own questions when there is a database full of them? 
I have no idea about nv_disable, but I would look at some more examples. I did a step by step and got thru it. I have to agree that those tutorials really aren't for the masses, they assume you know a number of things from the start. Even getting simple questions answered was a pain. I'm surprised there isn't more of a service to set this up. Example: Once you get it setup, you can put it all onto a USB drive and sell the drive configured to a specific system. So someone could order a USB with all their system specs and get a ready to load, pre configured hackintosh system.
I'm not sure it's still completely relevant, but here is the first of 4 great little tutorials on the topic in Swift 3. http://www.globalnerdy.com/2016/08/18/how-to-work-with-dates-and-times-in-swift-3-part-1-dates-calendars-and-datecomponents/
1) Create a google sheet or excel spreadsheet and list out all the questions and answers, keep the answers to 4 answers for multiple choice 2) Download created spreadsheet into CSV 3) Convert CSV into JSON \*optional 4) Your iOS app needs to read in the CSV or JSON (assumed you've used JSON). 5) If its not going to be published you could load all the questions into an array (Don't do this, its overkill) or into a database 6) Create a ViewController which is used to display the: (a) Question text label (b) All the answers in buttons (c) Timer with progress view 7) Code will be needed to reduce the timer, display the correct question and answers 8) Some kind of handler to move from question to question will be needed. 9) You should only need 1 view controller, but you might need multiple views for other elements &amp;#x200B; Given your timeframe, and experience, I think a week might be too short.
do you use some kind of constant to handle different screen sizes? And if so, how does it work?
OK, since you have 3 weeks to do both Android and iOS versions and you admit to being a Swift beginner I'd just learn a framework that can produce both versions from the same code and spend your time working on that. It will give you the full time to work on the full program rather than learning two wildly different languages, frameworks, etc. I've heard good things about [Xamarin](https://visualstudio.microsoft.com/xamarin/), although I have no personal experience using it.
if what's important is the quiz itself, why not try an online quiz website like this one? https://www.surveymonkey.com/mp/quiz/ I've never used them but they say they have statistics and such. Even if it costs $30 for one month it might be a lot easier than creating an app.
To put any concerns about testing to rest, I'm not planning on submitting this to the App Store at all, nor am I putting it into use without testing on a physical device. Once I have a working prototype, I'll start testing on physical devices, which I'll have to do with my friends' help. I just don't want to waste their time testing when I know it has a critical flaw. Once I'm satisfied with that, I'll be using it with a small team.
I don't think anyone's worried about what you're doing with the app. You don't get penalized or anything for submitting apps and getting rejections, and even approved apps can have beginner-level code. As long as it follows basic usability guidelines and all the components are visible and usable, you should be fine. By the way, your description was excellent and went above-and-beyond for effort. I'm terms of the problem you're seeing, it's not simulator or hardware related. I'm on a mobile device now and can't actually run the code, but the issue is your animation code. Also possibly the reused table cells not having their properties reset. I spent the last 2 weeks redoing and adding new animations to my team's app. It was inspired by a conference workshop that deep-dove into the CoreAnimation framework, which you're using. And coming from someone with years of iOS experience and decades of professional front-end experience, this shit is HARD. Things can get super complicated really fast, the libraries behave in unexpected ways, Apple uses a lot of tricky defaults and overwrites things under certain conditions seemingly for fun. The documentation out there rough and often outdated. So I can only imagine the frustration you're having trying to troubleshoot this on top of not being familiar with the rest of the platform. Good news: looks like what you're trying to do is pretty simple. Bad news: you're going to have to toss most of the code in your tableviewcell and redo it. Good news: the code will be much smaller and make more sense. Better news: I can help you do it when I get to a machine. Would you prefer a Pull Request on github or an excavation in the comments?
&gt;Would you prefer a Pull Request on github or an excavation in the comments? Thank you so, so much! And whatever's easiest for you is best! If it's truly the same either way, though, I suppose I prefer comments.
Hey, no problem! You now have a Pull Request that fixes the issue. It changes the least amount of things possible so that you can see where the bug was. Surprisingly, the animation code was perfectly functional. It was a cell issue. When you call reloadTable() it removes every cell. The dequeueforreuse call you're making to recreate them is actually just picking from the old set at random, meaning the cell that used to be at position 6 suddenly can jump to position 10. And the data inside those cells (like their background color or the variable wasDone) are wrong. The fix is to keep track of this data (wasDone) outside of the cell and then pass it in when resetting the cell. You also need to reset the background color before animating because, since the cells are moving around, there's no predicting what value it will start at. There are a lot of other suggestions I'd make, but since they're not what you're asking for right now, I'll leave them out. The other thread where they told you to do unrelated stuff for no reason kind of bothered me.
Yes! Yes, it's this! Thank you so, so, so much for going so far above and beyond! I'm not sure how major or minor this is to you, but it truly means the world to me to finally have this in a working state.
Happy to help! Especially after seeing how much effort you put in. And thank you for the gold!
I either use google to cruise the large amount of free-licence assets out there, pay for assets from a designer, or whip out my old versions of photoshop and illustrator and just have at it. 
Why is your headline in all caps 
I don't know, bru
Safe areas in storyboards are backwards compatible with iOS 10. 
Thanks. I am doing them programmatically -- updated my question! 
Your method seems perfectly reasonable. 
I do this let frame = view.frame if #available(iOS 11.0, *) { frame = UIEdgeInsetsMake(frame, safeArea) } view.frame = frame
This is the worst thing you can do, I hate when I find a code that goes in the lines of `let height = isIPhoneX ? 12 : 10` &amp;#x200B; This means you're at best at junior level programming.
You’re still setting your frames manually?!
Wow, I wonder how he handles different screen sizes.
This approach will give you all the anchors: \`\`\` extension UIView { var safeAreaLayoutGuideBC : UILayoutGuide { if #available(iOS 11.0, \*){ return self.safeAreaLayoutGuide; } else { let kSafeAreaLayoutGuide = "kSafeAreaLayoutGuide" let guides = layoutGuides.filter { $0.identifier == kSafeAreaLayoutGuide } guard let guide = guides.first else { let safeAreaLayout = UILayoutGuide() safeAreaLayout.identifier = kSafeAreaLayoutGuide addLayoutGuide(safeAreaLayout) NSLayoutConstraint.activate(\[ safeAreaLayout.leadingAnchor.constraint(equalTo: leadingAnchor), safeAreaLayout.trailingAnchor.constraint(equalTo: trailingAnchor), safeAreaLayout.topAnchor.constraint(equalTo: topAnchor), safeAreaLayout.bottomAnchor.constraint(equalTo: bottomAnchor), \]) return safeAreaLayout; } return guide } } } \`\`\`
You set the frames in viewWillLayoutSubviews of a VC or layoutSubview in a view
You set the frames in viewWillLayoutSubviews of a VC or layoutSubview in a view
Yeah
What do you do if the frame changes? 
Just use a image picker (UIImagePicker) and the delegate. Get the full resolution image through info[UIImagePickerControllerOriginalImage] and store it somewhere like Documents Folder with FileManager
You need to use the image(at:) function passing in a CGSize which will return an optional UIImage
&gt;I like how you do it much more -- I changed my code. Thanks! 
Thanks. I wasn't sure if I was missing something but good to know that this was an okay approach. 
Not sure if you saw this post already, it may be old, but i thought id post it just in case. https://stackoverflow.com/questions/39408097/attach-custom-thumbnail-for-a-video-not-extract-ios-avfoundation
Looks like this is what I needed. Thanks!
Glad I could help :)
All your calculations are in viewWillLayoutSubviews so everything is done in there. When the view changes all your calculations will change as well.
Also if you don’t care about the order of the Collectiin, you can use a Set type: ‘mySet: Set&lt;Foo&gt; = []’
I was one of the commenters who recommended he use a collectionView. When the question was first presented, we assumed this wasn't a simple iOS framework usage problem. 
I have found https://blog.encoredevlabs.com/feature/swift/http-server/2018/04/08/simple-swift-server.html, but it doesn't mention anything about working with `launchctl`.
Hacking With Swift has a book for Vapor, server side swift. Ray Wenderlich just came out with a book covering the same. 
Does it actually need to be custom? The recording and limiting video length are trivial with UIImagePickerController. You’ll get a reference to the file, after which you might use with AVAssetReader to process the frames in a buffer to add your watermark. Otherwise, AVCaptureSession is the way to go.
Use Vapor or Kitura https://developer.ibm.com/swift/
I would go with Vapor for a server project that runs on both MacOS and Linux. If you want to use an Xcode Mac template instead, you definitely want a command-line tool. Essentially you put code in main() to check the command-line parameters and start the server, typically opening sockets or database connections, and then go into an infinite runloop using something like \`NSRunloop.currentRunLoop.run()\`.
Very cool! Thanks for sharing.
Dis you try Subler? 
I used vapor for a small, personal project and really liked it. Be warned though, Vapor doesn't have an official fluent provider for MongoDB. I'm not completely up to date and I think they do intend to support MongoDB at some point. There are third party packages that you can use but I'd suggest getting some up to date info before you make any decisions. I've never used Perfect but that is another option and I believe can use MongoDB out of the box. 
Hi /r/swift 👋 I am the maker of Away From Keyboard (AFK). Away From Keyboard is an app that reduces eye strain with reminders to take a break. AFK tracks movements on the mouse &amp; keystrokes on the keyboard. After a certain interval, it notifies you to take a break &amp; tells you to do some other activity to reduce eye strain. It takes care of your eyes for you without getting in the way. I was inspired by Aware but I needed more features which is why I built Away From Keyboard (AFK). Also it was a great way to learn some Swift. This app has helped me immensely &amp; my eyes &amp; head are more relaxed now thanks to AFK. Happy to answer any questions you have :)
Keep up the good work and good luck.
Thank you so much 🙌
Appreciate it 😃
Nice one 👍
This is awesome, I thought about creating something like this :D Sadly I can't support you, because 5$ is way too expensive for this app, 1$-2$ is more appropriate :) 
When you Store the image as data with FileManager, you have to give the file a name. 
Thank you 🙌
No worries :) I think its $5 pay what you want because I wanted to make it as cheap as possible for people to buy the app because trust me if you work continuously for longer than 2 hours your eyes &amp; head will hurt. And this app will run all the time you use your Mac. This app will remind you. It will literally annoy you with notification so that in the longer term your eyes are still good. Personally I think its a steal for $5. But I'm biased since I'm the maker of the app 😂
Congratulations! However, other than the fact that a lot of apps are written in Swift, what's the connection to Swift programming? Are you providing the source code to everyone or something?
It's eye strain, not eye strains. 
Oops my mistake. Can't edit the post title now :)
Nope. I have seen some apps submitted here before so submitted mine too :)
Although people have done that it tends to add noise that fights what this sub is about, Swift programming. I'm not a mod of this sub or anything but I do try to help people in it and advertising apps here tends to make that more difficult. Hopefully you can find places on Reddit to advertise your app and get it the attention it deserves.
What has become of this subreddit ? Bunch of non-sense questions...
Skype wants to warm you to not add that to your app! Hahah kidding aside it’s pretty neat 
Yeah thanks didn't knew. Its the first impression because a lot of people are active here. Sorry about that. I'm new to /r/swift &amp; also Swift. I just started learning it 15 or so days ago so don't know a lot. Anyways appreciate your opinion &amp; sorry for spam :)
No problem, that's why I try to not take an adversarial tone about it. Hopefully we all want Swift programmers to be successful and their apps used so I'd rather talk about it in a helpful way rather than a confrontational way. Great work on putting out something so soon in your learning process and good luck on your next app.
I recommend putting a little more effort into making this and googling it before asking on here. One strategy you can use is make it bit by bit. Can you make a view that displays video from the camera? That’s something that is well documented. Can you add a watermark to a video? If you googled adding watermark to iOS video code you probably would have bumped into the GPUImage library. If the problem is that you are not so familiar with developing on iOS and you feel like you can piece it all together then you probably need to start with a simpler project. Be resourceful and resilient, I have no doubt you can do it if you try :)
Thank you :) Appreciate it There are a lot of people like you who have helped that made my learning process easier &amp; answered a lot of questions 🙌
Isn't that what downvoting is for?
Did you install High Sierra on a laptop or a desktop?
so basically stackoverflow?
Server side swift and the apple event just happened = massive influx of noobs who got second or first hand apple products. it's just part of life as a programming for a popular thing subreddit. react native gets hit hard whenever a new mainstream samsung/google phone gets announced by people who look at the platform and go "that's a lot of money and i could do with some money" mod team could definitely stand to expand a little + add strictly enforced tags for "question" so people can filter that content out
lol I was trying to use Giphy capture for the first time :P 
yup rust is more like your second language you learn coz someone mentioned it as the future on the part of the internet you frequent 
Yeah that makes sense. I always enjoy the discussions on the stuff that would be flagged on stack overflow as off-topic/non-constructive. It'd be nice to push new people to stack overflow for most stuff, they likely get faster/better/more thorough answers anyway. I'd like to see this place full of blog posts, project releases/updates, and those longer form discussions/debates (storyboards vs programmatic UI, etc).
 import Foundation import PlaygroundSupport PlaygroundPage.current.needsIndefiniteExecution = true let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) {_ in print("hi") } 
er... how do you stop it after a given time?
Glad to help. Of course, [read the reference](https://developer.apple.com/documentation/foundation/timer) to see other uses. The key in a playground is the `PlaygroundSupport` and `needsIndefiniteExecution` to keep the playground running or it will exit immediately.
You can call `PlaygroundPage.current.finishExecution()` to stop the execution of playground 
 import Foundation import PlaygroundSupport PlaygroundPage.current.needsIndefiniteExecution = true let stopTime = Date().addingTimeInterval(4) print("Repeat until:", stopTime) let timer = Timer.scheduledTimer(withTimeInterval: 1, repeats: true) { thisTimer in let now = Date() guard now &lt;= stopTime else { print("Stopped at:", now) thisTimer.invalidate() return } print("Now:", now) } 
Thanks, it is dawning on me that you can have a timer running and just call on it as and when you need it - rather like glancing at a clock - from any part of your code... as opposed to being some kind of loop? 
I updated my post with Stack Overflow link. Which include the protocols and enums about the property.
I can not see the update even tho I'm on the Xcode 9.4.1 on my Mac
I'm seeing it in the App Store, downloading it now.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Anyone know a solution to this? I added a stack overflow link.](https://www.reddit.com/r/iOSProgramming/comments/9gn2gl/anyone_know_a_solution_to_this_i_added_a_stack/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Over-scroll ... finally. I have asked Apple for this, not just on Xcode but on text edit and pages for years. Is it that hard to position the last lines in the middle of screen, vertically? That is the ABC of a decent text editing, in my view.
What about the suggestion I saw on here a while back to create a new subreddit e.g. swiftuniversity where beginners can ask their questions and keep the main swift subreddit dedicated to sharing useful content, tips and tricks among more advanced swift developers?
I didn't understand this. What does it mean?
There is a `!` in front of the `json.statuses.contains(false)` which negates the statement to 'does not contain (false)`
[Here's an example](https://www.sublimetext.com)
My main concern with that approach is unintentionally creating a dead subreddit full of questions with nobody there to answer them. I don’t know how best to ensure it’s stocked with people willing to answer questions
Basically it lets you scroll past the end of your file so the last line won't be stuck to the very bottom of your screen.
But isn't this extremely simple? Go to /Applications, rename the existing Xcode.app to something like Xcode-9.4.1.app and download a new Xcode. 
Is Dark Mode only in Mojave? I'm still running High Sierra and I cannot find where to turn on Dark Mode. 
I think they said the 24th?
Yes
What's the difference between this and CMD+CTRL+E?
No it isn't. Renaming it gives all kinds of paths headache. The way to do it is to give all Xcode version you install side by side their own folder in Applications and never rename or move them. The only Xcode that lives in the root of Applications is the one updated by the App Store
Build numbers: * Xcode 10.0 GM Seed: 10A254a * Xcode 10.0 Release: 10A255 If you plan on submitting software to the App Store you'll want to upgrade to the release build of Xcode even if you have the GM seed installed. The App Store has been known to reject binaries from out-of-date GM builds of Xcode, and that can lead to a bit of frustration since there's no way to tell whether you're using the GM seed or not.
I have Sierra on a desktop. I won't even try an upgrade until I have a full backup system and I've used up every drive I have for my last upgrade. It's really a pain to do these upgrades, that's what I REALLY HATE about Apple. They force you to do these upgrades and there's no reason they can't make an Xcode that would work with Sierra. I really only use the OS to get me to Xcode. Maybe if they had an open source IDE that would replace Xcode :D
great, can't wait to be on xcode 11 beta forever
Thanks! 
its giving me an error: invalid number of rows in section 0
Thank you.
Are you on MacOS 10.13.6? I don’t know if it’ll show you the update in the App Store if you’re not. I do know it won’t let you install it if you’re not. I had to update my MacOS this morning.
That's the same as command control e, as mentioned by /u/lucasvandongen.
Shooting from the hip but, maybe we should look at creating a sub for advanced Swift. This may cause a similar problem to the idea of a beginner Swift sub stated earlier. 
Occasionally if you switch Xcode versions by manually installing, you may need to run: ` xcode-select --switch /Applications/Xcode.app/Contents/Developer` to get all of the build tools to work. Aside from that, I've not had any issues with it. (Of course, like you said, App Store only updates apps installed with App Store, but that should be a given)
It is simple but it was the first time Ive done it and messed it up 🤷‍♂️ 
Thanks for the lesson, but I know and could care less about upsetting your grammar sensitivity 🤷‍♂️ I’ll give you this, at least you’re error codes are easier to read than Xcode.
Nothing was cited for my denied enrolment, it’s just that when I sign in and try to enroll it says “Sorry, you can’t enroll at this time”. I get redirected to enroll/error. I need the full dev account before I can submit my app. I’ve used my work Apple ID before at my last job to join the company dev account so I know my age can’t be the issue.
The constraints warnings are informing you about ambiguous layout constraints most likely. These control how views are resized and positioned. When there’s a problem the internal constraints engine has to make a guess and break the “tie” and approximate what you were going for. It’s important to address these for supporting various screen sizes/configurations and localization. While it works for now there’s a whole category of bugs lurking on the horizon potentially.
Really, Apple!? This is the red-line for you? You're seriously not going to call it Xcode X? C'mon!, in for a penny, in for a pound. If you're gonna embrace roman numerals, then embrace them, dammit! &amp;#x200B;
It would be great to have a mid or advanced Swift, but one problem is watching too many subs. Some subs die off because of lack of traffic. You want people there, but you want it to be meaningful.
Daamm. I didn’t know Xcode had that. Thanks for pointing that out
That's a pretty reasonable concern. IMO, subreddits have never been as good at programming Q&amp;A as concepts that are more dated today, like web forums or IRC. 
&gt; Code folding ribbon can now hide any code block surrounded by braces. thank you based apple dev tools team
Hi, I commented: https://www.reddit.com/r/swift/comments/9gkpk7/comment/e64znee?st=JM7656AD&amp;sh=5e2667de
&gt; I’ll give you this, at least you’re error codes are easier to read than Xcode. I can’t tell if intentional or not... 
Have they added the option to take out the animation while code folding / collapsing yet? I collapse all my methods to quickly read just the method names, but I hate how it animates and that each line highlights whenever I hover over it.
You can also do this in Xcode-&gt;Preferences-&gt;Locations. 
I haven't had problems so far, but I did forgot to mention that I don't use the App Store version.
It does redirect to app store where it still showed up like it's installled. I did reinstall it for solve the situation
Yeah, I always thought ⌘⌃E was superior anyway because it paid attention to scope, whereas most editors multiple cursor feature simply does a find-next on the file
No, this is on you. You have to pull the users data and export it for them.
Hold on, there are a few red flags here. **Where is your age 99/98 at?** **This is a** ***paid*** **account, right?** **You are having problems submitting the app for approval, or to AppleConnect? (big difference)** **Apple denied you** ***where*****?** &amp;#x200B; If this isn't for a grade, I wouldn't stress because you have time. If it is for a grade, then I would talk to whoever is your school's Apple representative is, because they are the one who facilitated the account for you.
this had been issue for me for last year - always had to delete Xcode and redownload new one...
😉
So the deadline is about getting a job or applying for a job? &gt; a lot of employers have specified that it's preferred if you've actually deployed an app rather than just making them for "fun" If the number of days is so short that you have to have it on the store now, just have someone else submit it for you. It's a co-op app, so just have anyone with an account in your group submit the app. I'd get it cleared up directly thru Apple. You said: &gt; 11 days ago I have contacted apple support about this and they've failed to help, I was told that they've escalated this with their team. I have yet to hear back anything even after sending a check up email. How deep are you in the job process, have they made an actual offer, have you done the onsite interview? If you already have the offer, then I wouldn't worry about it. If you're in the interview process, but they haven't made an off yet, I'd just submit the app under someone else's account. It sounds like you're grabbing at straws, guessing what the problem is, you have three choices 1. get an answer from Apple 2. open a new account 3. use someone else's account If this is a simple "show and tell" app, then it really doesn't matter, it's just a way to prove that you can get past Apple screening.
Try replacing `self.messageTableView.relaodData()` with and move `getMessages()` to `viewWillAppear(_ animated: Bool)` so it loads sooner. It's possible you are not giving it enough time to load. DispatchQueue.main.async { self.tableview.reloadData() } And for personal preference, I recommend switching to Cloud FireStore instead of Realtime Database, it works the same way but has a better API and is a bit smoother in my opinion.
thank you &amp;#x200B;
It's the same as ignoring compiler warnings. When a real problem develops, you're going to be shovelling that shit before you get to the root of the problem. &amp;#x200B;
Yeah I know, but 1$ pay what you want would be more suitable, . Think of apps which cost &gt;5$, they are much more capable than yours.
Have they added the new build number for submitting to AppStore Connect? Only reason I ask is that previously it used to take a couple days for iTunesConnect to get the new build number for submissions.
1. Swift apprentice 2. Hacking with Swift 3. Brian Voong tutorials 4. Google + stackoverflow 5. Ask questions here
Check multiple screen resolutions- there’s probably at least one that’s messed up
Xcode 9 has code folding, just not the ribbon.
I’m not sure, but I think they don’t support image literals anymore.
My favorite minor feature: Over-scroll makes it easy to center the last lines of code in the middle of your screen. Can't even think of the number of empty lines I will be able to remove from each file now.
I meant 1998 instead of 1999. I don’t know what you mean by paid account, I can’t even enroll with my Apple ID. Like I said previously I’m having problems enrolling in the developer program. There’s a plethora of posts in the Apple dev forums and all of them end with OP turning out to be under 18. 
Bro you need to seriously chill with the negativity! Just downvote if you don't like something but don't be a condescending jerk every time you see a post you don't like.
I don't think you figured that one out without StackOverflowing the problem yourself the first time, so I'm pretty sure it doesn't count as an "extremely simple" procedure anymore. Never renaming or moving Xcode and keep them all in a separate folder makes life so much simpler.
Then maybe another sub e.g., swiftlanguage where you go for actual language discussion, and not discussion on iOS Frameworks and third party SDKs.
Beyond the terrible posts, even the "good" posts I consider to be off topic. They're usually beginner iOS questions, or about some specific third party framework. Rarely do I see some post that is actually on Swift as a language.
Yep, that's already a post: [Xcode 10 and Swift 4.2](https://reddit.com/r/swift/comments/9gms4b/xcode_100_is_out/)
It sound like what JetBrains IDEs do.
Changes to arbitrary positions that do not enclose a full identifier, plus each cursor can copy text separately. Handy to make those pesky initializers for structs with many fields, for example.
GM is released to testers BEFORE the OS is sent to the general public. I would say we can expect it today, but this week for suer
I never said that it was an “extremely simple” procedure. But you’re right, I did most likely have to Google it. If you’re a developer who doesn’t know how to Google however, you’re going to run into far worse problems than Xcode. 
I know. 
To be honest, initializing could be a little less verbose at times. If I make a struct public the automatically generated one doesn't work anymore. WTF Apple.
&gt; Swift 4.2 is source compatible with Swift 4, Swift 4.1 and Swift 3. Swift 4.2 will be the last release to provide source compatibility with Swift 3. My reading of this is that a Swift 3 program is a valid Swift 4.2 program. But then what it means to end compatibility with Swift 3 source? Wouldn't that end compatibility with some Swift 4.2 programs as well?
Yeah it wasn't really a rant directed at you personally. But /u/europeanwizard claimed it was extremely simple while it's definitely easier to just use separate folders. &gt; If you’re a developer who doesn’t know how to Google however, you’re going to run into far worse problems than Xcode. I would totally know how to hack it with the rich documentation at http://developer.apple.com, what are you talking about? &lt;/sarcasm&gt;
If you're looking at iOS, this is not possible. The operating system won't let you access any information about other apps running on the system. If you're looking at macOS, you may have to use old, infrequently-used APIs to get that information from the operating system, unless you prefer to parse the textual output of the `ps` command at a regular interval.
No, the Swift compiler has a compatibility mode for Swift 3, much like you can set Clang or GCC to compile C89. This will be removed in the next compiler, leaving only Swift 5 and a compatibility mode for Swift 4.
Huh? I was saying you can install the GM now, and submit your apps to the App Store without fear of rejection because its not public yet. That's my whole point.
Apple has already abandoned roman numerals. It's called "macOS" now, not "OS X". I refuse to use the stupid lowercase 'm' though.
Fixing it from the Xcode preferences pane really is "extremely simple" though.
I haven't done it in a while but knowing where and what to fix probably still isn't obvious, adjusting a setting is just a bit less arcane
It seems to me that this is not how the Swift team has used "source compatibility" before, but it makes more sense than the alternative.
Honestly that’s a terrible idea for a second app. On iOS process information is very limited and the APIs are not commonly used, so helpful information is difficult to find. For a second app you’re much better off exploring UI elements, state storage, or local notifications. Perhaps a shopping list app, or a timer app. Yes, those are common, but that’s because they are great for beginners learning.
It's listed as a beta, but its a GM. `18A389` Is the version number and since it doesn't have a letter at the end it is a GM.
Is is just my and my project or someone else has this issue with constantly loosing the syntax highlighting? 
I wish I did the separate folder first. I first dragged version 10 on top of 9 in the app folder, then deleted them both, then downloaded 9 from the App Store, and renamed 10... I haven’t run into more issues yet, but I think I might have to delete them both and start again if I do, I don’t want to run terminal commands just to switch 🤦‍♂️ As if trying to learn programming iOS apps off of outdated internet tutorials wasn’t hard enough 😂
What I meant to say is that I can’t enroll in the paid account. This is what I’m waiting on. It says “sorry you can’t enroll at this time” and that’s everything. That’s why this case has been escalated in the support system.
Hehe. 4.20. Not gonna lie tho update is pretty cool
Do you have 2FA active on your account? Did you use a credit card in your name (you cannot use someone else’s)? Did you use the AppleID you used for your free account (you must have a free account that you upgrade to a paid account)? Is your account verified and have a backup account connected (use the AppleID website above to check)? Did you try to upgrade the day of the Apple Event (recommendation is not to do it the day before or after the event or the day of a software release due to expected server outages/pressure)? All of these are required before you can upgrade, and/ or will give you this error.
are you sure?
Libraries broken!
HAHA I changed my birthday to make me 19 turning 20 instead of 18 turning 19 and it worked instantly. I’m shocked that this is a bug.
Positive.
Didn’t multiple people tell you to do this hours ago?
4.20 blaze it 💯👌
There's zero discussion of 4.2 there :( Anyway, 4.2 has some neat stuff, like dynamic member lookup, a new random API (so, so much better than arc4random_uniform), and more.
You're right that Interface Builder would give you maximum power and flexibility. As a 15-year veteran of IB, I'm not certain everybody will find it dead easy to start if they haven't used it already. OP, I haven't used Platypus for several years, but it's been a really useful project, and should minimize the code you have to write. Have you looked into either the Web View ([https://sveinbjorn.org/files/manpages/PlatypusDocumentation.html#234](https://sveinbjorn.org/files/manpages/PlatypusDocumentation.html#234)) or CocoaDialog ([https://sveinbjorn.org/files/manpages/PlatypusDocumentation.html#10-6](https://sveinbjorn.org/files/manpages/PlatypusDocumentation.html#10-6)) options there?
&gt; A Swift 3 program is a valid Swift 4.2 program This is not how “source compatibility” is traditionally defined, but it is one way to look at things. The reality of the implementation is that Swift 3 is a compatibility *mode* of the compiler. That means the 4.2 compiler has digouts and conditions that allow Swift 3 code to compile. This matches your understanding of a sort of subset relation, but I would say “all swift 3 programs will build as swift 4.2 programs with additional support for legacy behavior”. &gt; But then what does it mean to end compatibility with Swift 3 source? Practically, this means two things 1) Any legacy constructs still around in the standard library that are deprecated in Swift 3 will be hard errors or straight-up removed§ in the next release. 2) Any legacy syntax that is deprecated in Swift 3 will be hard errors or removed§. 3) Any legacy behaviors that are deprecated in Swift 3 will be hard errors or removed§. §Any behaviors from before Swift 3 (and that are hard errors today) are better candidates for removal then current Swift 3 behaviors. This pulls the rug out from under the “subset relation” from before. Under a source-incompatible compiler, there are Swift 3 programs that will require modifications to build as Swift 5 programs. &gt; Wouldn't that end compatibility with some Swift 4.2 programs as well? One would presume a compatibility mode for 4.x will be a feature of the next compiler. It’s necessary to have at least one major version’s worth of leeway to enable things like the Swift migrator to work, which do rely on compiling in legacy Swift modes to migrate.
Hi there! I implemented both Algorithm W and Algorithm M and a constraint generator in a playground a while back. You may need to tweak things to get them to compile and run under Xcode 10. https://gist.github.com/CodaFi/ca35a0c22fbd96eca505b5df45f2509e Please ping me here or privately if you have any questions about the theory of types or type inference. It’s my favorite subject!
Use this with crtl + l for some magic 
This should be pretty simple in Swift if you just want a basic UI with a few buttons to run command. &amp;#x200B; Like other said, use Interface Builder to build the UI. Sometimes it feel really easy, other times you would rather rip your hair out. Once you get the UI setup connect each button to your ViewController.swift file(you can have better architecture if you want, this just gets you up and running). As for firing off the commands use something like the `Process()` Swift class. We have a super basic Mac app that fires off simple commands using the `Process()` class. 
Source code? After all this is a programming sub.
Downloading now, will dig into it tomorrow. Could definitely use an app like this!
Lol. Its not about capableness, its about usefulness. My app helps you relax your eyes &amp; head. Unnecessarily I can add 100 more features but it doesn't make it more useful. Its okay if you can't afford it. You are not my customer. And bdw FYI someone paid $10 for it too.
Second. 
For a sub that’s about a language it’s hilariously sad how there is literally zero discussion when a new version of the language comes out. 
Third.
why do you expect someone to give away their hard work for free?
because otherwise this is seen as 100% self-advertisment, which is probably is in this case
people post their apps on this sub a lot without giving out code. I just wonder why people singled this guy out. if anyone should support developers, it’s other developers. 
Holy shit, thanks. Been keeping an eye on devslope courses, never wanted to cough up the 200$ though.
I think you'll find I've commented similarly before. This is not singling anyone out. r/swift is a programming sub, not an app advertising sub. Every app is done by developers, by your logic every developer should advertise their app here. If that happened then we'd lose our focus on programming and become yet another spam sub.
The difference: - `try` catches the error and lets you handle by type of error - `try?` turns the error into an `Optional`, you lose the type of error but know there was one - `try!` ignores the error completely Done!
Important note for ‘try!’ is that it then crashes your program
Yep, I had added that just after posting because I realized I forgot to put it in there. Thanks!
I love this, thanks! I may start using it at work to manage my boss-assigned projects vs my self-assigned enhancements.
Nice summary!
for fuck sake, thanks. Now I can go fucking back to where the cursor is. Is there any way to mark a point in code. Scroll to another one, type something there or copy and go back to the first marked part? thanks 
Just grabbed a bunch of other free courses on that site.
Probably a good idea to use an actual time tracking app for this, like Hours or Toggl. I think the premise of this app is to spend less time doing stuff.
I understand that, but I'd disagree that the goal is to spend less time on the specified activities. If I'd like to segment my day to dedicate time to both, having assigned time limits and alarms would be helpful. I am authorized to spend time on my own enhancements to our systems, but not at the expense of assigned projects. So if I can dedicate a specified amount of time to my side projects, I can ensure that assigned projects are not impacted.
That does indeed sound like a perfect use case for this app! 
`try?` turns the _result_ into an `Optional` and discards the error.
Optional&lt;Void&gt;
That's what I would expect.
Thank you, this solved.
On mobile, so just by sight.. I would start by refactoring tableView cellForRow call. The only thing you want to do in that func is lookup exactly which cell needs to be displayed. Nothing else should be done, don’t hide views, don’t reload data, don’t do anything more then the bare minimum to lookup, access, and return the appropriate cell. Do not change any state when that method is called, which may be called often, so it also needs to be fast.
so, the cause is too much functionality at the same time. Thanks for telling me. i actually put all the array data in one cell label and its working fine. But this is a chat app and the users and senders messages must be on different sides of the table view cell. should i create two separate xib then ?
Your custom cell is not disappearing, I am assuming you are using auto resizing cells. Here is whats happening: 1. Large cell loaded into your tableview with a bunch of smaller ones 2. Large cell gets reused with much less text. 3. Table now shows cell as a large cell instead of the properly sized cell, since well thats how constraints work. This should be an easy fix. In your \`cellForRowAt\`, make sure to set \`cell.msgLbl.text\` and \`cell.senderMsgLbl.text\` equal to nil each time the cell is reused. Your not resetting the sender text label which is why the cells become massive (Auto Sizing). 
is there a method for that cause if i set it to nil then it will return nil and functions after 'return' do not run
All you need to do is add \`\`\` cell.msgLbl.text = nil cell.senderMsgLbl.text = nil \`\`\` One line Above: \`\`\` if messages\[indexPath.row\].sender == email! { \`\`\` With the assumption autoresizing is done properly. This will fix your bug. 
It is getting worse as people are now spamming their apps in the subreddit as well. 
It would be better to use a "left cell" and a "right cell" instead of hiding the unneeded content and load the cell accordingly to your needs. You can either define the cells directly in your TableView in the Storyboard if you use them or use xibs or even do everything programmatically. That's up to you but the code for `tableView cellForRowAt` could look something like this. ``` if messages[indexPath.row].sender == email { let cell = tableView.dequeueReusableCell(withIdentifier: "rightChatsIdentifier", for: indexPath) as! RightChatsTableViewCell cell.messageLabel.text = messages[indexPath.row].message return cell } else { let cell = tableView.dequeueReusableCell(withIdentifier: "leftChatsIdentifier", for: indexPath) as! LeftChatsTableViewCell cell.messageLabel.text = messages[indexPath.row].message return cell } ```
Ah, I see. I tried what you suggested and it's working. Thanks! So I guess it's a bug in Xcode 10..
Hasn’t the way swift deals with optional changed in 4.2/Xcode 10?
Not a bug, just a design change from Swift 3 that wasn't fully implemented until just now.
Try not! Do, or do not. There is no try. 
I've never had trouble with storing data to user defaults, so I can't comment on that, but one interesting tidbit is that, as of iOS 12, synchronize is no longer necessary: https://developer.apple.com/documentation/ios_release_notes/ios_12_release_notes/foundation_release_notes
Anecdotally, the reason has to do with the volume of data being saved to defaults. I’ve never had it fail for small bits (settings, favorites, recent views, etc) but after a certain amount it starts getting shaky. For instance, I wouldn’t use UserDefaults for playlists in a music player because those could potentially be quite long. If the amount of data you’re needing to persist is substantial at all, I’d recommend looking at other options — NSCoding/Codable for serializing to dusk are great for for small to moderate amounts of data and for huge volumes you may want to consider Core Data, SQLite + wrapper (YapDatabase, FMDB, etc), Realm, or one of the other many database solutions.
At first I got excited because I was thinking iOS 12, then I get to the store and realize I already bought this course on udemy earlier this year. Still a good deal for those that don't have it though. It's a really good course with some practical examples.
Answered on Stack Overflow
The ImplicitlyUnwrappedOptional type has been removed in Swift 4.2 ([see reasons](https://github.com/apple/swift-evolution/blob/master/proposals/0054-abolish-iuo.md#motivation)). With the new behaviour, IUO prefers to be treated as an Optional if the expression type-checks on the surface, but will fall back to implicit unwrapping otherwise. In your case, you get an error because optionals have a map method. It’s “by design”; the new behaviour is not expected to change. 
I also ran into problems with TTTAttributedLabel which may be related. 
Just a note that this has actually not been necessary for a few OS versions now. If you were to ever use the Core Foundation defaults instead of NSUserDeaults you still had to synchronize. Looks like this is changing to match is NS counterpart.
It can be time consuming for sure, but you’ll be learning more about required constraints and soon making them with little to no errors will be pretty natural 
Same here, but I don't remember if I bought it or if it was free. I did notice a number of them looked the same as the Udemy courses. I also noticed some of the content being on YouTube after I bought it. Once they get old, they do these promos.
It's really hard to know if the $200 is worth it or not. There's just so much out there. Ray W gives TONS in their bonus if you buy their Udemy course. I haven't even dug into it yet. There's a LOT of overlap, what I found is that what they teach is a lot of the same, but different projects.
I don’t know if it’s gotten any better but I had the old Swift 2 (I think) version of his course and it was terrible as far as teaching you professional development skills. He did a really bad job at explaining *why* he was doing things, so you end up copy/pasting. And I say this as a current iOS developer at a large (Fortune 500) company.
I’ve never once had a reliability problem with it on iOS, but IIRC it’s possible that the data isn’t being saved on the simulator if you kill the app via Xcode before the save finishes.
Don’t use init() on your view controllers. Use init(nibName: bundle:) and pass nil for both arguments.
Just in case this may be the issue, don't use UserDefaults to store anything except small preferences. - Do not use it to store lists of stuff. - Do not use it to store (NS)Data or images. - Do not use it to store any kind of model object. - You get the picture.
There are no more IUOs. There's only optional or non-optional. Declaring a variable as `var x: Type!` just tells the compiler that if it can't find a property or method on the `Optional` itself, then it should assume it's not nil and look for that property or method on the type inside the `Optional`. The important thing here is that it always looks in `Optional` first. 
Probably the simplest approach is something like theArray.filter { word in word == "hi" }.count You could also make that more efficient by doing .lazy.filter instead of just .filter
let stringArray = \["hi", "hello", "yo", "hi"\] let numberOfHis = stringArray.filter { $0 == "hi" }.count
There are IUOs, as the proposal states, but it’s attribute, not a separate type
Most likely your UI will start to behave unpredictably.
`let count = array.count { $0 == “word” }`
So you're saying they broke the way `IBOutlets` work as in Apple's demo material and the way the default IBOutlets are added when you CMD-drag them? I always preferred to use the optional `IBOutlets`. The forced unwrapping always annoyed me. Good to see it go.
Do you have a link to documentation on this method? I don't see a `count(where:)` anywhere in the current Swift 4.2.
When you use .isHidden = true in any cell at indexPath.row, make sure you put it back to false for next cells, othervise it keeps the state hidden for all other instantiated cells with that identifier.
I think auto complete is not case sentitive...
Method signatures are case sensitive.
Exactly. 
While using lazy sequences indeed sometimes are more efficient than their eager counterparts, that’s not the case here. The reason lazy is (sometimes) better, is that it defers execution until later, possibly minimizing the number of times some piece of code has to be evaluated. If you e.g wanted to get the first n elements meeting some criteria, doing collection.lazy.filter(predicate).prefix(n) is better than the non-lazy equivalent, because you don’t have to first find *every* element matching the criteria, only to drop most of them right away. However, when terminating the code sequence with .count, you’re effectively walking the entire collection anyway, testing each element. And there is no discernible difference by first removing each non-matching element, and then counting them, compared to counting as you go. You still have to do the same number of operation. 
LOUD NOISES!
I'd say, iterate stuff :)
40hrs background?? force quit it!
The goal of using lazy in this case was not to avoid work for tail elements, it was to avoid the malloc+free of the temporary array for results.
Swift physics might be a good place to start looking into :) 
Yes
yea i had to. it was also hogging my bluetooth headset. was using my phone but pressing play on my headset caused playgrounds to come through.
this actually is normal?
But instead you end up storing the escaping closure on the heap and also having to walk the sequence twice. No reason to prematurely optimizing this. And if you want to avoid the extra allocation, walking the sequence twice, and the heap, you can roll your own count(where:) using reduce. 
Where did you download this?
what? playgrounds? the appstore? where else?
I haven't used it recently so I'm not sure. I very rarely kill apps but if something is running in background and taking that much power it seems like it's got a run away process or something and I'd kill it.
could be, maybe i should make an official report, let them fix the bugs 
How is it verifying the flow if it’s just recording user activity? What does this offer me that can’t already be done in XCTest? Can it cross check the UI against the back-end? Can flows easily be modified?
Thanks a lot :)
The other child comment mentioned you're "the guy" for UserDefaults at Apple and I just had to make an account to reach out. Our app uses significant location changes to wake up from suspended in the background about 4-5 million times/day across our user base. We've found persisting our auth tokens to be a giant nightmare, as lots of stuff just doesn't "work" as you'd expect when in this state. Unfortunately nil is identical to error/unavailable... so we've ended up with a cascading system like such (simplified): if let hasKeychain = LoadFromKeychain() { return hasKeychain } else if let hasCache = LoadFromCache() { return hasCache } else if let hasUserDef = LoadFromUserDef() { return hasUserDef } else { return nil // Unable to recover token } And even with all that we can only load the token from a verified user ~70% of the time. This is on a keychain object that has been setup to to "alwaysAvailable" and the Cache system is basically a disk-based json loader stored in documents (application support has been tried as well) w/file prefs set to no encryption... but we still can't hit 100%. Do you have any thoughts about a better way to store a string and be accessible when launching from suspended no matter the phone's state? Appreciate any insight you might have! 
It basically immediately evaluates whatever is there. It's expecting something to evaluate so it's always listening. 
Yeah man. Tell us a bit about it.
Huh, curious. Definitely check if things have improved in iOS 12, but that's a nebulous enough one that it's hard to say more without a sysdiagnose from a repro. My vague recollection was that significant location changes weren't supposed to fire before first unlock, but I haven't checked on that in a while, and it's possible it changed/I misremembered.
Will do! Hats off by the way, best iOS release ever! It's hardly been out at all and 18.4% of our users are already on it. 
WHY ARE WE YELLING?
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/iosprogramming] [Error when setting a button's image](https://www.reddit.com/r/iOSProgramming/comments/9hj0l0/error_when_setting_a_buttons_image/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Try making the rep as another entity and apply a one-to-many relationship from workout to rep
Set the type to [transformable](https://gregheo.com/blog/core-data-transformable/). 
It looks like it's simply caching the UI element label when recording as opposed to relying on accessibility identifiers. If this is the case, it's an immediate no-go since tests cannot be used across localizations. What about non-deterministic suites? Simulator parallelization? Dynamic user flows? How is this any different than just pressing record within an XCTestCase?
allright, i think that counts as a bug, going to report it.
Depending on how many you want and what you want to do with it, it could be as simple as making a pipe-delimited string and putting it into a string property.
Hi! I bought Flawless App for iPhone design comparisons a while back, but haven’t been able to use it due to the inability to pixel nudge the overlap offset. That’s also been a dealbreaker for other iOS dev friends I’ve recommended it to. Any timeline on when overlap pixel nudging will be possible? Thanks! 
😂😂 I can’t find it.
Only on iPads. 
No wonder. Yes I’m on IPhone.
Well with the Xs MAX being pretty much an iPad nano, lets hope they will port it to iPhones soon. I seem to spend more time on my phone after upgrading to plus size. 
I don’t have any problem with installing 4.2 on my Ubuntu 18.04
This works for me. Thanks!
clang-4.2?
Swift 4.2
Hello! Thank you so much for the feedback on Flawless App. Definitely nudging and something people requested a lot. We have this issue in the pipeline. What we're currently working on are: - Overlaying design on top of Simulator without rebooting it (so your Debug session won't disappear) - Improving UX and UI of the app to showcase that's it's possible to select multiple design files, Sketch file, Zeplin designs and other cool features we have but not everyone knows about them. (these things will be in next update) We have nudging feature in the pipeline. We still need to figure out the best possible implementation of this feature. But we'll get there for sure :) 
Fixed. Thanks)
Thank you for the feedback! So the main objective for us was to simplify a creation and maintenance of the UI tests. Even though it might seem pretty straightforward for someone with iOS development experience to write XCUI tests, it's not as straightforward for manual QA person without any prior knowledge in development. We're focusing on those two issues basically: - creation of UI tests - maintaining UI tests we're wrapping it in as simple and automatic interface as possible to enable people without development experience do this kind of automation. So developers can focus more on actual development. What do you think about such differentiation? Also, how would you advise to communicate this message on the landing? Would really love to hear your opinion on this.
The nudging is a dealbreaker for me. Without that I can't use the app at all. So while the other features sound nice, they're not of use to me at this stage 😉
So basically the core objective for us is to enable even people without development experience create and maintain UI tests. So using our solution you don't even have to touch the code in order to create UI test. We'll be analyzing not than just associability identifiers, but the context where interactive UI component presented (without hard linking to name of the elements so it will be working with multiple languages). This will allow to make tha eleent identification process more convinient for the user. Over time we'll be adding the backend chacks and other "tools" that will simplify the process, but we decided to tart with this core idea and move forward from than. What do you think?
Got it. That's fair enough. Would you like me to notify you personally (via this thread on Reddit, for example) when the nudging feature will be implemented in Flawless App?
Do* Swift Playgrounds Does a* Swift Pleyground 
So technically we won't be linked tightly to accessibility identifiers as you still need to apply additional work to make everything work. Instead, we'll analyse the much broader context of the UI element (including the name of the element, accessibility identifier, view hierarchy and many other properties) to make elements identification process as precise as possible without you having to do additional work to create and maintain these tests. What do you think about such an approach? So as I mentioned early, the core objective for us is to build an experience as simple and automated as possible to enable even people without development expertise to create and maintain UI tests. XCUI tests seem to be a great solution but it required some context to create them and working with them. It required at least to understand the context of associability identifiers for UI elements. 
I think I'm already on your mailing list. So as long as some notification goes out about the update, I'll hear about it and jump on it. Cheers 😄
oh))) so much stuff we need to improve! thanks a lot for your feedback)))
lmao correcting someone’s grammar and simultaneously misspelling “playgrounds”
I've built something similar but a but more expanded as a CocoaPod: https://github.com/LucasVanDongen/Constraint/ You'll get something like this: view .attach(left: 12.orLess.defaultLowPriority) .center(axis: .x, adjusted: 10, priority: .defaultLow)
Snapkit or die!
You can do a lot of this without the tool. Advanced debugging by apple shows how to change view contraints and frames in real time. The rest can be done with scripts if needed but nothing too exciting imo. Unless I am missing something.
Nothing to do with swift at all?
You're right, there are other ways to achieve some of Sherlock's features, and Apple's advanced debugging talk shows these off brilliantly, but Sherlock is focussed on saving you time and making it as easy as possible to debug issues quickly right from the Simulator, without having to pause your app or switch back and forth between applications. From our experience it offers a much simpler and more pleasant way to get to grips with your app.
[TinyConstraints](https://github.com/roberthein/TinyConstraints) is the only AutoLayout abstraction you should ever need
I tried it this but I wasn’t able to iterate through the “set” entities.
If I could, I feel that this would probably be the best option though.
Will I be able to iterate through them? I don’t need to query
Other than the fact that 99% of professional Swift programmers have to interact with the iOS Simulator on a daily basis, you're right, it has nothing at all to do with it.
Uhh, I’m the 1% ! 🤓
&gt; So developers can focus more on actual development. This is such a strange thing to hear. Is writing tests (i.e., verifying one's own work) no longer part of "actual development"? You should also make a system that lets non-programmers correct syntax errors in my source code. That way I don't have to spend time worrying about running the compiler, and can focus on actual development!
Server side Swift? 
Cool, but I hate the scroll hijacking going on on this website.
Have you tried any sort of download manager that will allow a resume? If you're downloading it via the App Store, try download it here instead [https://developer.apple.com/download/more/](https://developer.apple.com/download/more/), that may work with a download manager so you can pause and resume the download.
I gotcha. I don't know why that wasn't my first assumption, lol. 
Hey Oisann, I hate scroll hijacking as much as the next person! It shouldn't have it, what browser are you using?
If you go to Apple's [Download section](https://developer.apple.com/download/more/), you can download the .xip file. While this won't help with the unreliable connection issue, I've found it's much faster than trying to install from the App Store. 
It's the same for this sort of Foundation stuff.
I've struggled with this, and the most reliable way is as follows. Rent a VPS with a desktop, be it Linux or Windows. It doesn't matter. DigitalOcean is great but any of the lowest specced VPS is fine. Via remote desktop or VNC, use the browser and download Xcode from the download page (not the App Store version). https://developer.apple.com/download/more/ Now it's on the remote machine. Then via rsync, copy it over to your Mac. The great thing about rsync is, you can restart it a thousand times but still you'll be able to get it. 
Seriously run down to the local library! This is the most reliable way for me to download large files. This assumes that the local library exists and has a commercial grade data connection but many do. Another thing that has worked locally form me is the local Wegmans which for whatever reason has one of the fastest WiFi hots spots I've used. With a good connection you might get your download in half an hour instead of days. Also, again a local thing, but the places with the fastest Wifi seem have the most reliable connections.
I want it. When can I download?
Hey, glad you like it! We’re looking to launch in the next month or two and we’re planning to get beta builds out to testers in the coming weeks. We’ve not finalised pricing yet, we’ll let you know a little closer to release.
Glad you like it! We’re looking to launch in the next month or two and we’re planning to get beta builds out to testers in the coming weeks.
Don't fall for the trap of downloading someone's mirror of xcode. This happened in China with [xCodeGhost](https://en.wikipedia.org/wiki/XcodeGhost) that injected malware into built software. Get it from Apple. Safari can resume transfers.
**XcodeGhost** XcodeGhost (and variant XcodeGhost S) are modified versions of Apple's Xcode development environment that are considered malware. The software first gained widespread attention in September 2015, when a number of apps originating from China harbored the malicious code. It was thought to be the "first large-scale attack on Apple's App Store", according to the BBC. The problems were first identified by researchers at Alibaba, a leading e-commerce firm in China. Over 4000 apps are infected, according to FireEye, far more than the 25 initially acknowledged by Apple, including apps from authors outside China. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/swift/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Mail app would be a UISplitViewController. More info: https://developer.apple.com/documentation/uikit/uisplitviewcontroller
That’s iOS, not macOS.
10.0 is the most recent released version of Xcode. I would wait. There are a few issues I ran into that cost significant amounts of my time.
Pretty sure Apple tends to avoid creating UI programmatically and uses IB whenever possible. You can always look inside an app package and open their nibs.
I bet that’s what they did with the back button. It’s much larger than it looks
Not in the US right now
Right click on the app and choose “Show package contents”. Then you can dig through the Resources folder of the app to find the nibs you’re looking for. I think double clicking a nib should open it in Xcode but it’s been a while since I tried and I’m on my phone at the moment. Pinging u/GrehgyHills so they see the answer too. 
If you start a project with an iOS “Master Detail Controller” template you’re about 50% done making the Mail UI.
&gt; Anyone uploading it to a torrent or other upload site is taking a huge risk. i'm just using it to learn swift and develop apps. if i ever need to deploy i'll make sure to get a clean build. right now the risk is non existent
looking for a workable solution, if i could do that i would
 learning how to work around those issues is part of learning the language imo
That's very courageous of you. In that case I'd look for Xcode on a bit torrent site. Good luck!
Get the Scaleway Starter voor just 2 euro, if you know your way around Linux. You'll have to install VNC and stuff manually: https://www.scaleway.com/ Some VPSes come with a graphical console, for example Linode. Register there, and create the smallest VPS. Then, go to Linode Manager, click the Dashboard link for the new Linode. Deploy an image there, for example Ubuntu 18. You'll have to select a root password too. When it's deployed, boot it. Click on the Remote Access tab, and at the bottom, there's a link called "glish: Launch Graphical Web Console". Now you'll have a 1024x768 resolution console. It's text first, but if you install a desktop with "sudo apt-get install ubuntu-desktop", then it should show up there. Vultr has the same feature, but at a slightly higher resolution, 1280x1024.
Just a clarification that this is for macOS.
I already did,nothing that isn't an obvious virus. That's why I came to Reddit
Couldn't find any for 10 that didn't immediately set up warning flags for me (reduced file sizes, uploaded by someone 2 months ago) so I came to Reddit
Thank you for this! I can’t believe I haven’t found this solution or figured it out myself earlier. Now I’m ashamed of all weird workarounds I’ve done in the past 😖
Hey John, we have seen Reveal and its great! The aim of Sherlock is not to replace the need for the visual debugger or Reveal. Sherlock is focussed on saving you time and making it as easy as possible to debug issues quickly right from the Simulator, without having to pause your app or switch back and forth between applications. From our experience it offers a much simpler and more pleasant way to get to grips with your app.
I didn't read thru all the code, but if you have an external data store, why can't you just access the data directly from that whenever and wherever you need it? I haven't worked with Firestore but I assume it's an external data store. Otherwise if it's an issue where one process updates the data and doesn't update the storage of the data and another process needs the updated but not stored data as a parameter, you can just pass from one VC to another. Passing iVar around from one VC to another is pretty straightforward and a number to great tutorials are out there. You would just add one more to that same loop or chain. Is there some reason you can't just grab the data straight from the external storage whenever you want?
Appreciate the explanation. Definitely interested in learning more, always looking to improve my workflow. I know people who love FLEX and basically use that to design their apps, but I'm more in the design ahead of time crowd that uses Sketch. Looking forward to learning more about Sherlock.
What about creating a block in the VecertaAnnotation that updates it, and pass that to the class that retrieves info from the Google API?
Chrome 69 on Windows 10
It can expand below other items. You would have to play with negative insets
thanks so much! you truly are a wizard
FYI Hydration is a formal CS concept used more often in backend development when dehydrating a model to transmit trough a bus as "seed data". The term is used in a correct way here as you don't know the full context of the application and there's nothing wrong with it. To dehydrate you need to serialize or encode. You can learn more here: https://www.google.com/search?client=safari&amp;hl=en-us&amp;ei=c1emW4_gLM3YtAW6pbKwDQ&amp;ins=false&amp;q=what+is+hydration+in+programming https://www.snaplogic.com/glossary/data-hydration The question is interesting and would be nice to see some expert opinions here. 
Some example animations: [http://michaelteeuw.nl/post/107807243027/enlarge-your-hit-area](http://michaelteeuw.nl/post/107807243027/enlarge-your-hit-area) 
That is a Key for a dictionary: ``` MPNowPlayingInfoCenter.defaultCenter().nowPlayingInfo![MPNowPlayingInfoPropertyElapsedPlaybackTime] = CMTimeGetSeconds(player.currentTime()) ```
If you have access to Foundation, [`NSKeyedArchiver`](https://developer.apple.com/documentation/foundation/nskeyedarchiver) and [`NSKeyedUnarchiver`](https://developer.apple.com/documentation/foundation/nskeyedunarchiver) do this. They encode/decode the type information and then reconstruct the types on unarchiving. If you're on Linux, I don't think that's an option.
Hey, this is a good tip! Are you sure the NSKeyedAtchiver will work with swift structs? I'll give it a shot this afternoon and report back! Anyway, if someone has a pure swift solution would be great to discuss it. Thanks!
Update: It seems like we still need to make the Swift struct to comply with the NSCoding protocol in order to use NSKeyedArchiver. As the latest "Codable" implementaiton in swift 4 doesn't requires to define the coding mechanisms as long as all data is Codable itself I am looking for a solution that won't require the developer to define the coding strategy... 
Thanks, that helps but I'm still confused as top how to read the elapsed time. Im doing this let nPIC: MPNowPlayingInfoCenter = MPNowPlayingInfoCenter.default() let progress = nPIC.nowPlayingInfo?\[MPNowPlayingInfoPropertyElapsedPlaybackTime\] yet all I am getting back is nil.
There's about 10 different "effects" going on here. Which one? Or do you want someone to build the whole thing for you?
You're trying to get internet help to do a 9-month project in a week? Uh, good luck with that. Hey everybody, I need to give birth next week, and I'm not pregnant yet ... please help?
Yes, sorry to have omitted that. The full code is actually quite long, with closures nested within other closeres (I'm not 100% if thats the correct way to do it but it has worked until now). All the closures are in viewDidLoad() and the objc target function is at the base of the class, outside viewDidLoad(). Thanks for your response.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [apple/swift-corelibs-foundation/.../**Foundation** (master → 59df77d)](https://github.com/apple/swift-corelibs-foundation/tree/59df77d7b3414ba1589365ad6cf8a8ee7585c455/Foundation) ---- 
I think you need to maintain a reference to the programmatically created views. Try adding a property to your view controller and assigning the switch to that property.
Honestly, I have a MS in CS and have been programming 30+ years. I've never heard those terms used before, although I was obviously able to hazard a guess as to the type of action that was occurring. Judging from your links and my own searches it seems like these terms are not widely used and mainly come from several libraries that use the term internally. The terms "dehydrate" and "rehydrate" are not ones that are in general use in the field of computer science, instead we would use serialize and deserialize to describe those actions. As far as the pattern being used here I can't quite see why the last line isn't working as expected. I looked at it earlier but have been pretty busy since then. I'll take another look and try to puzzle it out. It's likely to be related to compile-time vs run-time typing issues.
You’re the one that needs to set that variable so the system know the elapsed time.
If you can see it but it won't respond to touches the problem is very likely bad Autolayout constraints. Give it and its superview a background color to see whats happening. Probably need to bottom-pin your views.
I never add the touchUp in the lazy block but always outside of it. Don’t know why that doesn’t work but try to move it outside of the block.
Actually I've been hammering away at this problem all day and I think you're right. I put a switch in the outermost closure and worked my way up to the inner one where it should be and I've found the view in which it stops working, that led me to the same conclusion. Thanks for your response.
I’m on mobile so I don’t want to look it up, but there was a WWDC video in 2016-2017 where they actually looked at the mail app and explained all the views. The session is something like “choosing the right container view” if I remember correctly. Anyway I think it was a NSTableView
I'd recommend using Swift Soup! It actually makes it easy to extract information!
[`XMLParser`](https://developer.apple.com/documentation/foundation/xmlparser), straight out of Foundation.
&gt; old angry birds game. I never thought of it like that, thanks. 
Wow it looks like I've being doing it the wrong way... I've been creating NodeJS back ends using Puppeteer to fetch information then delivering the info to my app using an API I've made... 
No that's the correct way of doing it. If you put the scraping logic in the iPhone client and your scraping breaks you need to push a fix ASAP because all is broken. Whereas if you put the scraping logic in a backend API somewhere to act as a proxy between your iPhone app and the site you are scraping, you can just update the backend API without changes to the payload you deliver to the app and all is still good in the world. This way you don't need to update the iPhone app nor wait for Apples approval. Of course this is all contextual and if the site you are scraping isn't a big feature of your app it might not be as important if that `UIViewController` is broken.
I’ve only used `XMLParser` for simpler tasks so I can’t comment on its usefulness for more complex ones. I’m surprised it would have difficulty with them but libxml2 is probably a viable alternative. It shouldn’t be too difficult to use, especially with a wrapper around it. 
As the fellow said. Also think about how big the project can be. In that, check some architecute aproach such Bussines Model- Domain-Application, will solve you the matain both targets problems while you scale up.
My recommendation is to put everything in one project and share as much code as possible. You can create multiple targets (one for macOS and one for iOS), and then you can choose which files should be in which target. (in the file inspector in the right sidebar there are checkboxes for each target) Shared code goes into both targets, UI code and xibs/storyboards belong to one target. Some people recommend to factor shared code into a framework, but in my opinion that just makes it harder to maintain for little gain.
Most likely, I'll be using DDD with BDD for testing. &amp;#x200B; Just a side question: does you mean I can share the codebase for UIKit/AppKit?
Thanks for the reply! &amp;#x200B; While saying about sharing code, did you mean sharing business logic, right?
 let name = "Test Name" let count = 42 let myStruct = CodableStruct(count: count, name: name) let archiver = NSKeyedArchiver(requiringSecureCoding: false) try! archiver.encodeEncodable(myStruct, forKey: NSKeyedArchiveRootObjectKey) archiver.finishEncoding() let unarchiver = NSKeyedUnarchiver(forReadingWith: archiver.encodedData) let decoded = unarchiver.decodeDecodable(CodableStruct.self, forKey: NSKeyedArchiveRootObjectKey)! XCTAssertEqual(decoded.name, name) XCTAssertEqual(decoded.count, count)
By sharing code he means reusing functions between Mac and iOS. UI code isn’t likely going to be very shareable between Mac and iOS as they are separate SDKs, but for example, let’s say you are performing a call to an API to get weather conditions, you can easily reuse that.
Set the inner View Controller to be the same height as Scroll View and drop the priority to 750. 
What does dropping priority do? I saw some comment telling to drop it to 250 but it didn't do anything for me. And to clarify, you're saying to modify the height of the inner view to equal the scroll view, and not the other way around correct?
If have vertical constraints^ within the View Controller that beyond the size of the viewport, by setting your Scroll View equal height priority to &lt;1000, you are accommodating the above mentioned constraints^ to be respected as-is. And to your second question, either way is the same so long the ratio is 1:1. 
I don't know about the one project for both platforms, but you can do a framework that can save a lot of hassle. Basically you have a set of universal code that works on both platforms and all the projects use that code. There's a tutorial on Udemy that teaches this IIRC. I think it was Angela Yu, but if you just look up iOS frameworks. Here's a free one from Ray W. https://www.raywenderlich.com/5109-creating-a-framework-for-ios Note: even if you do one project with different targets, you can still do your own framework. You might find you like programming and do a lot more projects in the future and this can make that so much easier.
I think this is a bad way and somewhat dangerous way of doing things. Say you coded this and left the team. Now a new member comes along and adds a new feature which requires a button next to the button where you had the hit size increased. It will take sometime for the new dev to learn of the changes that you had made. I think using content insets or image insets is the correct way of doing things whether it be in code or through UI because you can clearly see the coders intentions. 
You can do an adhoc build after you archive but you will need to have their devices registered as part of your distribution cert. TestFlight or Crashlytics are easier. 
You’ll need to upload your app to iTunes Connect using XCode then using Apples Developer Portal distribute through test flight as a beta. These two links should help you. [Link 1](https://stackoverflow.com/questions/30495679/how-do-i-upload-a-build-to-itunes-connect-for-testflight) [Link 2](https://medium.com/@dmathewwws/steps-to-put-your-app-on-testflight-and-then-the-ios-app-store-10a7996411b1) 
Or, if you are very rich, you can get an eterprise account. The apps deployed with an enetrprise account can be downloaded and installed by anyone, but they have to allow the certificate in the settings app first
I recommend BuddyBuild. It handles the code signing and adding devices to your account part of the flow. You’ll need to put your code online for it but github has free student accounts (if you don’t want the code public). 
Update your Xcode to 9.4
This much easier to do in Objective-C than it is in Swift. For example: https://github.com/gerrior/litclock is a small app with an Xcode project with 4 targets: macOS, macScreensaver, iOS, and TV OS, with almost all the code common to all four targets. 
Thanks for the link! Definitely need to master Xcode as I', not able to rename my initially created target for some reason.
Definitely worth sharing. I already know that macOS and iOS use different SDKs. Thanks for suggestions!
Thanks for the suggestions and for the link! I'm going to definitely give it a try.
You can also run into this issue where the simulator window is actually truncated itself without you realising it, so also try resizing that just to make sure you are actually seeing the whole screen. Simple but easy thing to miss. 
Enterprise enrolments are meant not testing, also you need to provide proof that you are a company (not an individual) and explain why you need it. TestFlight or ad-hoc is way easier and faster than an Enterprise enrolment.
This first article is amazingly short when you realize that the bullet points are repeated word for word, in the same order. It's really not even worth a separate post. Of course there's a part 2 but that gets even more concerning: // ApplicationRouter is a singleton, because it makes it easier to be accessed from anywhere to access its functions/services // ApplicationServices is a singleton, because it makes it easier to be accessed from anywhere to access its functions/services That's already two too many singletons. Yes, they can be useful but why do we need them? Singletons can also be dangerous – difficult to debug and tricky to maintain. Are we keeping state around? I mean, the only state I see in `ApplicationServices` is: let appRouter = ApplicationRouter() Which is already a singleton, right? So why are we instantiating it if it's already easily available? Similarly, in `ApplicationRouter`: var instantiatedModules: [ModuleType] = [PaymentModule(), LoginModule()] When you dig down further you can see that a lot of these modules are implemented with callbacks, which is a great way of avoiding state. In fact, it could all probably be architected in a way that avoids singletons altogether. That would be a much better architecture than what's laid out here.
You should take a look a the visual view tree debugger. You’ll figure out soon enough which UIView doesn’t get the size you expect it to have.
Also, does this even work? let configuration = URLSessionConfiguration.`default` configuration.protocolClasses?.append(URLRouter.self) First of all, I believe the call is actually `URLSessionConfiguration.default`. At least, that's what comes up in my autocomplete. Yes, the documentation says `\`default\`` but that looks like a typo to me. Secondly, this is typically a bad pattern. What if `configuration.protocolClasses` returns `nil`? Now your custom router doesn't get registered at all. Since `default` returns a clean instance of `URLSessionConfiguration` you should do this instead: let configuration = URLSessionConfiguration.default configuration.protocolClasses = [URLRouter.self] That way you're assured that it's non-`nil` and your custom router is registered properly. (As seen [here](https://stackoverflow.com/questions/28705534/is-there-a-way-to-use-nsurlprotocol-in-a-nsurlsession-with-custom-config) when I searched to verify the pattern.) There are a lot of places in your code that could use a good review. Take this for instance: session.dataTask(with: urlRequest) { (data, urlResponse, error) in var responseBody: [String: Any]? = nil if let data = data { do { responseBody = try JSONSerialization.jsonObject(with: data) as? [String: Any] } catch { responseBody = nil } } completion(responseBody, urlResponse as? HTTPURLResponse, error) }.resume() Since you're just discarding the thrown error why not make it simpler and more explicit? session.dataTask(with: urlRequest) { (data, urlResponse, error) in guard let data = data else { completion(nil, urlResponse as? HTTPURLResponse, error) return } let responseBody = try! JSONSerialization.jsonObject(with: data) as? [String: Any] completion(responseBody, urlResponse as? HTTPURLResponse, error) }.resume() I dislike using `try!` because it doesn't handle the thrown error at all, but you're already doing that and this signals your intent better. Not only that but it will be much easier to search through your code later and replace every `try!` with proper error handling. The use of `guard` instead of `if` also better signals your intent, in addition to cutting down your nesting levels. I also removed the mutable variable and made it immutable, a good thing to do if you can.
I set the size to be the same size as the physical device so I don’t think this is the issue. Definitely crossed my mind though 
This is actually really cool! Thank you for sharing!
If for some reason you don’t want to update, you can manually download the device support files. https://github.com/filsv/iPhoneOSDeviceSupport
No but I need to... I have a [cocoapod project](https://github.com/brightdigit/swiftver) on GitHub which supports all OSes. It may give you some ideas. I do have [an article on developing for macOS for iOS developers](https://brightdigit.com/blog/2018/02/16/macos-development-ios-developers/) which sort of touches on it but it's not really the focus.
SwiftVer looks very nice, thanks for sharing. I faced some issues with Xcode that prevented my from changing my default target name. After creating new project, I was able to do so. Also, thanks for the article links, nice reading. &amp;#x200B; I also need to get used to Xcode groups as this is quite new approach for me. I wasn't aware that groups are named after targets so it caused some confusion at my end.
Seems to be a pretty clear tutorial. Straightforward, good practices, formatted nicely. Thanks! I'll have to take a deeper look at your product and see if it's anything I'd integrate into a program in the future.
Like everyone else I hate Storyboards/Xibs/Nibs etc. But I also want the code I give to my client to be easily updated in the future (that can often mean the code not being looked at or opened for years). Sticking to the Apple format usually will ensure that when the project is opened next time most of the outdated stuff is automatically updated. The code posted is a mess, 3 simple views and we already have a massive wall of text: override func viewDidLoad() { super.viewDidLoad() // Do any additional setup after loading the view, typically from a nib. // Create the UILabel object with frame let label = UILabel() label.frame = CGRect(x: 50, y: 50, width: 100, height: 30) label.text = "Test Label" // Create the UIImageView object with frame let imageview = UIImageView() imageView.frame = CGRect(x: 50, y: 100, width: 100, height: 100) imageview.image = UIImage(named: "asriel") imageview.contentMode = .scaleAspectFit // Create the UIButton with frame let button = UIButton() button.frame = CGRect(x: 50, y: 220, width: 170, height: 30) button.titleLabel?.font = UIFont.boldSystemFont(ofSize: 18.0) button.setTitle("Tap Me", for: .normal) button.setTitle("I am being tapped", for: .highlighted) button.setTitleColor(UIColor.blue, for: .normal) button.setTitleColor(UIColor.black, for: .highlighted) button.addTarget(self, action: #selector(buttonTapped(_:)), for: .touchUpInside) // Add the UIelements to the view controller's root view self.view.addSubview(label) self.view.addSubview(imageview) self.view.addSubview(button) } I know there are some great 3rd party libraries to simplify all this and make using Autolayout in code really easy/clean. But what are the odds they'll still be around in 4 years and updated to run on the latest Swift etc? I've often included some libraries that either don't get updated or have to be replaced for compatibility issues. It's fine for my own projects but on a project I'm working on for a client, unless they agree to it first there's no way I'll use them. 
Do people ever create tutorials like this without using an API they created or to promote their API?
The problem is, end tags can be omitted in *valid* HTML, e.g. &lt;p&gt;paragraph 1 &lt;p&gt;paragraph 2 IIRC, XMLParser fails in this case.
Sure, to promote their book!
Without knowing for sure what `dateTimeComponents` is, my guess would be that it’s a DateComponent instance that you created from a moment of time before entering the for-loop. If you captured/constructed it within the loop it would likely change
What's so confusing about Timer?
Doesn't it send multiple renew requests if you send multiple requests that all get 401? It's better to also check for expiry even before sending the request.
I would do that slightly differently. My ViewController would do all the handling for outlets such as buttons, text fields etc. I would create a second controller and call it either modelController (similar to what MVVM's ViewModel is) and have my logic that interacts with the model in here. The ViewController would talk to the model controller for any business logic. If I'm doing something strictly view related such as a custom view, custom button or any custom control, that would be a subclass of the control that I'm customizing. 
This is an extremely vague question. Perhaps setting a `needs{Update,Layout,...}` flag on the view, depending on exactly what kind of view it is and how it interprets your data. Maybe if you posted more than 0 lines of code, we'd have something more to go on.
The Wikipedia page lists 10 meanings, none of which have anything to do with computer science. I also see a dead PHP link, and that "snaplogic.com" blog which has an overly-broad definition that I've never heard before. Can you point me to a computer science book or paper that uses the word "hydrate"?
WOW this is great, let me try it. Certainly not what I was originally expecting but this is awesome (the fact that it complies with Codable and not NSCoding is really interesting). Thanks a lot!
Foundation includes HTML Tidy, so you can always just run your HTML through that before feeding it to XMLParser (or use XMLDocument directly). You lose streaming, but it's simple to implement and works fine on any crappy HTML.
From my personal experience, It's a commonly used term. If you are here to be negative about new terms coming up I believe it's widely off-topic. The semantics are intuitive and even if you've never used the term before it's easy to infer the meaning. Anyway just as an example, here another mention in the somewhat new "electrode" framework: https://docs.electrode.io/guides/general/server-side-data-hydration Take it easy, and thanks for your time. Cheers! 