I think 'far superior' is stretching it. There's a host of .NET tools available on non Windows platforms these days.
Micro-services! I actually saw a demo project by Microsoft where each controller was divided into a frontend service and a separate backed service that called the database. The client wanted to copy it.
&gt; People have been fear mongering/hype blasting this for a few years. I'm unconvinced that Node will push out anything permanently. Java was the death of C++, wait there's PHP, hold the phone there's Ruby, Node is gonna eat everyone's lunch, now Go and Rust are the latest darlings (though they're at the level of Node right before it took off). Next it'll be Crystal, or Nim, or Agreed. &gt; something weird like OCaml. This is where I draw the line. There's nothing weird about OCaml. 
WASM
ahh that makes sense thanks cheerio :) 
&gt; It's a good language No generics. 
That doesn't really make me go wow, nor is it really an innovation. Going to byte code is a thing many languages do. I throw this into the "finally" category.
No generics yet.
There's nothing weird about OCaml, but it'd be weird for it to be the next big thing. 
My employer has slowly been moving to .NET Core. Essentially, first step was moving to a service-oriented architecture, so that the MVC websites have no actual business logic. Backend consisted of the "right" amount of services (microservices generally). First iteration was all still on .NET Framework -- we then migrated them in order of complexity to .NET Core (some still are on .NET Framework) This was with a relatively small team about the size of yours. Generally, websites are easy to migrate once you move the business logic OUT of the website.
Regarding #3, I think that depends how you're running. For example, if you have a Lambda written in Node, you don't have to worry about how your CPUs are being used, and you get significantly better cold-start times than in C#. 
[removed]
&gt; 1) Do you believe that .Net Core is the future compared to .Net framework ? or it's still about equal in term of usage/popularity ? No. AFAIK, .NET Core has far fewer users than the .NET Framework, at least in industry. Without WPF, .NET Core has seriously limited applications from my perspective. &gt; 2) What is the real place or purpose of C# today ? ( micro-services ? cloud programs ? desktop ? webdev ? database ? ) All of the above although I personally use F# instead of C#. &gt; 3) Are you afraid of JS, with the rise of Javascript in the backend and all the innovations in the open source stack, like React, Es6+, Async, Node, Vscode... Do you think that C# will still be a viable alternative to do Web development? Javascript and its entire ecosystem is an absolute disaster compared to .NET. They're 20 years behind the times. &gt; 4) Is it possible today, to do the exact same website in .Net with all the latest features/functionality/speed than in JS with the latest frameworks, latest tech etc? Web development is crippled by the extremely poor foundation of the entire web stack, starting with HTML, CSS and Javascript. Everything piled on top is just a big ball of mud. The only redeeming thing I've seen recently is WASM but that is taking forever and it has design flaws (e.g. no TCO and they're talking about baking in support for a 1990s-style GC). 
Well, I suppose it's good for performance, but I really think it's a bit of a hack on the already less than great string support in .NET :/.
Yeah, they've stated multiple times that they're waiting on improvements from the Mono team.
Anyone who claimed Java would replace C++ did not understand the differences between the two.
Isn't UWP set up to succeed WPF, much in the way that WPF has succeeded Forms?
.NET Core 3.0.
No, because many other people will still depend on it. VB6 is still supported today, I think .Net Framework will be in a similar situation in the future.
I hope they get that number down, but you'd be surprised. Look at how much you download when you open reddit's front page in a browser. It's bad.
&gt; Now they have studies they rely on that tells them how to keep talent in house. It is pretty simple really. To quote Henry Hill: 'Fuck you; pay me.'
&gt; You can't have an ~8MB download any time someone visits your site. Bruh, have you seen the Reddit Redesign?
How does one acquire this dark theme? I can't seem to find it anywhere? I only have 'default' and 'high contrast' for my UI theme selections.
Some devs claim "work environment" and "work life balance" is the most important. I contend those things only matter after you have a fair pay.
&gt; Also, I can never fathom why node on the server ever took off At the time, JS developers were cheaper than back-end coders. Couple any business looking to save a buck with any JS developer looking to do more with their skill set without learning a new language and you get Node.
No. UWP is for Microsoft phones which have no market share. UWP doesn't even support F#. 
I don't see anything immediately obvious based on what you've posted. Is your dapper call async? You're saying if you were to write something to the console just before you assign p.Id, it would show data. And right after p.Id is assigned, it would be null? 
&gt; Really? Wow, I see what you mean. That is bizarre. 
Where?
[https://dotnetfoundation.org/Projects](https://dotnetfoundation.org/Projects)
&gt; high performance [C# on .NET Core is beaten by Rust, Java, Kotlin, Go, C, Perl, Clojure, PHP and C++](https://www.techempower.com/benchmarks/#section=data-r17&amp;hw=ph&amp;test=query). 
I was making that same kind of assumption but when I look at the actual classes I just don't see how Dapper would know to make that inference. 
&gt; There's already at least one fast, straight to and from UTF8 bytes JSON parser for .Net: https://github.com/neuecc/Utf8Json UTF8Json is several times slower than RapidJSON.
&gt; async/await were pioneered first in C# OCaml had async before .NET was invented and I seriously doubt it was the first. 
[removed]
Well, I know Entity Framework does it by name (if you aren't using data annotations or setup the relationship manually). For example if your parent class is Author, and your child class is Book: if you create a virtual collection of Book in your Author class, EF will attempt to create a relationship by looking for a property called AuthorId in the Book class. &amp;#x200B; My guess would be Dapper does something similar. You could test that hypothesis by changing the name of your parent id to something unintuitive (e.g. instead of AuthorId, call it TheGuyWhoWroteIt) and see if it breaks.
This has been my experience as well. We've even had to jump through hoops to be allowed to use Linux servers and only when there was no other option. All their existing infrastructure was Windows and so their people were Windows admins. The cost of a few extra Windows servers was always less than the cost of hiring to support Linux. And I'm talking about businesses with many 1000s of physical servers on premises with 10000s of Windows VMs. Running on Linux was never even considered as an option.
I'll move my first project once the component vendors bite the bullet and announce support for Core 3.0 :)
It was in a dev blog on Microsoft's site. Perhaps someone has it on their finger tips. If not I'll try to find and link it by the end of the day.
That size of an infrastructure? I guarantee you it was considered as an option, at least to be quickly dismissed for application layer. &amp;#x200B; Any system that size would have required an investigation into the platform and a linux is most definitely one of the bigger candidates. Not considering linux as an option would have been a major miss, and gives infrastructure vendors (Microsoft, Oracle, IBM etc) a huge leg up on negotiation leverage against the CIO/CTO with unresearched arguments, not to mention reputation on being too narrow-minded and easily stepped over to the CEO armed with disregarded millions in savings left on the table. &amp;#x200B; Platform vendors are sharks, and will use every tool they have to get the sale, including going up the chain to the top with claims of incompetence when you're dealing with million-dollar deals.
[removed]
I would google asp.net integrate with google authenticator. My guess is you'll have to get some sort of dev account with google, then you'll just be calling apis to do the authentication. The fact that this is web forms or vb should be moot. 
&gt; OCaml had async before .NET was even invented and I seriously doubt it was the first. Yes, and F# had `Async` workflow before C# too, but we don't see massive OCaml and F# code bases in the typical enterprise software space, do we? I assumed, given the context, unnecessary to explicitly say: &gt; async/await were pioneered first in C#, when considering widely-used, industrial languages. &gt; 8MB download offering 100x worse performance? Blazor is still in heavy development. Are you saying that when it releases will keep having that performance problems?
&gt; But most examples use MVC/C#/.NET Core, was just hoping I could find some examples that would be a little easier to translate to my, somewhat unique, environment. I'm not sure how the integration works, but if it's in mvc or core, it really shouldn't matter. You'll be handling this with code behind, so the syntax will be the same, regardless of what .net framework you're using. That is unless you're running on some super old version of .net or something. I've done tons of integrations with 3rd party apis in a web forms site, and that code can literally be copy and pasted just fine to .net core and mvc projects
So, in the backend, the children are related to the parent by its ID. In your loop, you would need get the child items to a new list, set the new parent id, then update the parent ID on each child record. When you update the parent's id, that value is in now in the cache. When you ask for the children later, the database is called using this new id to find the children. Since the children never were updated, no results are returned. When working with entities, never forget they are just basic relationships in tables. Updating the ID of a parent value is a really bad practice in general.
This seems pretty straight forward. https://stackoverflow.com/questions/23308701/two-factor-authentication-using-google-authenticator-in-own-asp-net-project 
I'm honestly surprised. I thought 2.0 would be the last time they'd pretend to keep .Net Framework up to date with the latest features.
&gt;I'm honestly surprised. I thought 2.0 would be the last time they'd pretend to keep .Net Framework up to date with the latest features. You may not be wrong there... from the article: &gt; Given many of the API additions in .NET Standard 2.1 require runtime changes in order to be meaningful, .NET Framework 4.8 will remain on .NET Standard 2.0 rather than implement .NET Standard 2.1.
&gt; Yes, and F# had Async workflow before C# too, but we don't see massive OCaml and F# code bases in the typical enterprise software space, do we? I assumed, given the context, unnecessary to explicitly say: "async/await were pioneered first in C#, when considering widely-used, industrial languages." So not "pioneering" at all then. &gt; Blazor is still in heavy development. Are you saying that when it releases will keep having that performance problems? *If* that happens the download size seems inevitable because .NET is too heavyweight for that kind of client-side web. That's a big problem in modern computing and is driving the adoption of leaner languages like Go and Rust. 
4) if you are talking about Backend stuff then I would say yes. However when you start to look at the front end it gets harder for C# to compete. C# does have Razer which helps, but I don't think you would be able to not use JS and still have a web app that is as appealing from a user perspective. 
I want to migrate the WPF example Family.Show to net core. I have a soft spot for it since it was my first learning sample. Just need to figure out how to move the shared library to core or just copy it whole into the main. 
Haven't tried it for desktop yet 
yes
 &lt;TargetFrameworks&gt;netstandard2.0;netstandard2.1&lt;/TargetFrameworks&gt; #if NETSTANDARD2_1 // use span #endif ```
Right, my fault. I forgot that the point of having a standard is to write two completely separate implementations for different targets.
They support Net Core 2.1 already??
Native is also front end.
This [RapidJSON](http://rapidjson.org/)? Any links to benchmarks? I'm not finding anything. The API is also lower level than most .Net JSON parsers so an equivalent comparison would have to round trip to objects.
So who's going to actually read this article and follow the steps, and who's going to just `dotnet new wpf` and copy your classes over and see what shakes out?
I can confirm 3, I have worked with Node, webpage JS, and C#. C# is by far the best to work with. I type stuff in JS and get pissed when it doesn't autocomplete, and then I have to muck around in Chrome console to figure it out.
It really depends on what you're trying to do. If you need two-factor auth for your own sign in system, Google Authentication simply implements the standard, so all you need to do is find a library that also implements that standard, and you should be able to have a system that users can use with Google Authenticator or Authy or whatever 2FA client they want that also follows the standard. If you just need a login system and want to make it secure, you should be sure you've looked at alternatives such as using "Sign in with Google" (or another service) in order to move the responsibility of login over to an existing, proven service. The downside is while Google users CAN have 2FA they don't need to so with such a system you might not be able to enforce that if you wanted to.
The first part is exactly what I'm working on. We have a username/password login system setup, this will eventually check the users IP address and if they are logging in using a specific set of IP addresses it will require them to use 2fa. 
[removed]
Well as I said I know Google Authenticator adheres to a 2FA standard so there's a good chance there's a library out there that already does what you need. I have not worked with 2FA in my code before but that is where I would start looking for a solution.
This is part of a method that is used to duplicate the object. We are using Dapper and not EF. The repository actually calls a stored procedure that returns the ParentItems and then adds the childrenItems to them. The collection is then passed to this method where the Id's are then set to new Id's and the copy is now inserted into the database as a duplicate with new Id's. 
We are not actually changing the Id's. The hope was to create duplicates. It was realized this wasn't the best way to do a duplicate record so we went a different route and it works I was just confused as to why my apparent simple classes were losing their children by changing the Id's. &amp;#x200B;
I never really trust those anyway. It's like doing an upgrade install of Windows.
I've got 100k+ lines of WinForm code in a decade old codebase. The only way I'm considering .Net Core is if there's a conversion path.
It's in the post. The old CLR won't be updated (it wasn't since .NET 4.0). Span gives huge benefits in fundamental use cases. If it won't be in the standard, it's moot. And the only thing standing in its way is the old framework. Don't forget there are more .NET implementations out there. 
They're never going to write a tool that converts your actual code, it would convert your project files and such.
Because .NET Framework 4.8 will be the last .NET Framework.
That's the speculation. But the official position from MSFT is still that .Net Framework isn't going anywhere and will simply be on a slower release cycle than .Net Core: "If you have existing .NET Framework applications, you should not feel pressured to move to .NET Core. Both .NET Framework and .NET Core will move forward, and both will be fully supported, .NET Framework will always be a part of Windows. But moving forward they will contain somewhat different features. Even inside of Microsoft we have many large product lines that are based on .NET Framework and will remain on .NET Framework." https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/
Doesn't [https://www.nuget.org/packages/System.Memory/](https://www.nuget.org/packages/System.Memory/) work on .NET standard 2.0?
There's a possibility you've been hit by the LINQ deferred execution 'feature'. Assuming this is the case, the Children collection being 'reset' is probably because an earlier part of the deferred execution is affecting a later one. Consider calling .ToList or .ToArray on the collection at the earliest part of the code in order to properly 'persist' the objects.
Ah, thank you for clarifying 
[removed]
Our initial service layer was WCF -- that's still up, though we consider it legacy. We use gRPC for new services (since its cross-platform and provides a lot of the same benefits). The service host for some apps are still .NET Framework 4.6.1 (bleh!). We've mostly finished migrating the MVC layers to .NET Core (there's a few stragglers, though by the end of November that should be done). We were already on MVC, not Web Forms, so that made that migration easier (mostly just a matter of copy and paste and fix compile errors) Most of the service host migration will be once .NET Core 3.0 comes out since we still heavily rely on EF6 and porting to EF Core looks like its going to be a nightmare. 
You think I can get by with just the MacBook Air 2018?
I have the New Navigation active, but when I click my avatar, I don't have any "theme" option in the drop down menu. I have "My Profile", "Security", "Usage", "Notification Settings", "Preview Features", and "Help".
Huh, ok I have 'Theme' between 'Preview Features' &amp; 'Help'. I haven't found any part of VSO that doesn't support the theme yet. Maybe its just not rolled out to your location yet? What preview features do you have enabled? I have: New builds hub, New Navigation, New PAT Experience, New release progress views, New Rich Text Editor. I do not have Experimental Themes turned on - perhaps that'll do something for you?
I dont have an Experimental Themes option in the preview features page 😐 I have no idea why I dont have the option. I wonder if my company has the ability to suppress newer updates to Azure DevOps? I'm not sure, but thanks for trying to help!
I am not too familiar with Razor but in the client side of things all POSTs have to be done from either JS, or from a web form (which will unload the current frame in favor of whatever the POST returns). Many frameworks (including Razor I assume) will abstract away a lot of this but in the end your page is going to have to use one of those methods to get a POST to you.
[removed]
Wait. Since when is there a .NET Core 3.0?
[removed]
[removed]
Right. It will still receive security updates and bug fixes, but there will never be a 4.9.
That is explicitly not what the statement linked above says.
Q1 2019
You couldn't be more wrong. "Universal Windows Platform" is for the windows store, and windows in general.
[removed]
[removed]
I think what you want to do is integration tests. I wrote some utilities based on Entity Framework core that allow you to drop/recreate your database and run tests against a known data set. Suggest you download [AdaptiveClient](https://github.com/leaderanalytics/AdaptiveClient) and the [Zamagon Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) 
ahh that explains it (: I like xamarin on the b it of mobile experimenting I've done, desktop though... yuck
AWS Lambda, or you could create an account and run an EC2 (virtual machine) instance for a year for free.
You should use Azure, there is free tiers
Azure isn’t overkill, there are plenty of simple offerings. They have a shared tier that’s ~$9.99. Its affordable and reliable hosting. 
Preview end of this year; will support desktop applications on Windows (WinForms, WPF, UWP, COM, EF6 Full) https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/
I see that you said you use Automapper to map from repo DTOs to domain models? If this is the case then this also might be your problem if you don’t have children mappings defined in automapper profile mappings.
You have lots of options. Azure has a [free tier](https://azure.microsoft.com/free/) for 12 months, but is a bit pricey after that. It's the best option in terms of ease of use, though. You can host it on a small [DigitalOcean VM](https://www.digitalocean.com/). Use [Dokku](https://github.com/dokku/dokku) to get your own mini-Heroku PaaS, or manage the VM yourself ([following Microsoft's documentation](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-2.1)). You can get anywhere from $10 to $100 in credit from a referral link (either ask around on r/referralcodes, or [use my $100 referral](https://m.do.co/c/aac4e1b54a04)) - this will last you a year and a half with a small VM. You can also use [Now](https://zeit.co/now) to host your app. There are a few blogs to get you started: [here](https://mking.net/blog/hosting-and-deploying-aspnet-core-apps-with-zeit-now), [here](https://www.hanselman.com/blog/ZEITNowDeploymentsOfOpenSourceASPNETCoreWebAppsWithDocker.aspx), and [here](https://www.hanselman.com/blog/ImprovementsOnASPNETCoreDeploymentsOnZeitsNowshAndMakingSmallContainerImages.aspx).
I'm currently paying for a VPS server that serves an API to a small userbase of less than 1000 users. I get a request from each user about once every 5 minutes. Is Azure right for me? 
You could prolly use a shared Azure App Service plan (cost about $9 a month). If your app ever gets higher demand you can easily scale to support it (obviously have to pay more if that happens though). I think Azure is the absolute best you can use for dev ops when dealing with .NET / .NET Core. 
Then why even have a "standard"?
Windone. *** ^(Bleep-bloop, I'm a bot. This )^[portmanteau](https://en.wikipedia.org/wiki/Portmanteau) ^( was created from the phrase 'Windows Phone?'. To learn more about me, check out this )^[FAQ](https://www.reddit.com/78ilq0).
1) it's the future for a category of applications. For other applications, like desktop apps for windows, I doubt it will be a future. 2) It's a language that's strongly tied to .net to solve a variety of business problems with. Like a lot of other languages out there. Tbh, I don't see real unique USPs for C# over other languages. (I use C# since 2002 full time) 3) Rise of JS: it'll pass and will be replaced with something that compiles a better group of languages to something that browsers can run. JS' ecosystem will kill it eventually. 4) Sure why not? You can create the exact same website in Cobol if you want, as what the browser runs is client-side JS, HTML and CSS. Anything that can generate those at runtime (and that's what asp.net does) is OK. One more easier to use than the other of course. 
Most time is spent in the database part, not in json serialization. I asked Sebastian Ros about this the other day as I was wondering why they didn't use jsonwriter for json serialization (or even stringwriter and hardcode the json), it didn't have much/if any effect. So I doubt it will have any effect on the benchmarks.
[removed]
Encryption within a managed language presumably has timing issues (which may lead to potential attacks) due to the GC/Runtime? I wouldn't use this in production, but still interesting to have a look at! Thanks.
Right. Which nobody uses except on mobile devices and nobody uses Microsoft's mobile devices. 
"Free" more like. I've been caught out by their "free" tiers before. A single ASP.NET site that had single number visitors still cost about £30 once. I have since decided to mostly focus on their Azure Functions and other consumption cost model offerings, and host actual sites on a VM on DigitalOcean.
Not all web apps use a database. Many query json serialized docs from redis or memcached, and I/O costs are much lower in these apps.
Sure, I was just talking about the techempower benchmarks as that's what you were talking about too :) In the context of the techempower benchmarks, it doesn't really matter that much. Which surprised me a bit tbh.
You can still use Heroku if you look into the (still beta, technically, I think) heroku.yml build manifest format and Docker builds. I don’t think you can set it up via the web ui yet, but if if you create one via the cli, you can then go to the web ui and switch it to a GitHub deploy, if you prefer that workflow. That’s what I do.
The [Techempower JSON serialization performance test](https://www.techempower.com/benchmarks/#section=data-r17&amp;hw=ph&amp;test=json) doesn't use a database. This is what I hope to see a big gain on.
Ever since I have known about Azure they have had a free app service tier, with no surprise costs. Even the paid services have very clear pricing and they even include a robust pricing calculator so you can plan your costs. From my understanding of Azure offerings there is absolutely zero reason you should have paid 30 pounds to host a single, low trafficked site. The shared hosting is around $9 USD a month. I imagine European pricing and policies could differ, but I just can’t imagine they ditch their free and shared tiers by crossing the ocean. I do love Azure functions too. 
I messed around with Heroku and .NET Core, can confirm that it works once you write your own dockerfile IIRC.
Hetzner.de - super reliable and super cheap for what you get. 
[removed]
.NET is evolving rapidly. Great news. Though .Net Framework is being phased out, but that's natural. They'll keep supporting it, but the focus now is .NET Core. Not a problem for me, I only use .NET Core , but I'd be worried if I was stuck in .NET Framework.
Timing issues in the encryption code? This project appears to use span and operates on passed in buffers. If it hits the claimed "8 Gbps/core" then its probably non allocating, meaning it wouldn't likely cause any timing issues due to the GC.
I agree, I think when MS implements hell in the cell in Core 4.2.0 we'll be in good shape
This had me rushing for the popcorn
Piling on that statement from the other direction.... Outside of small apps, if you've never had to support a medium or large application in production with a small team and used Azure App Services, you wouldn't believe how much support it provides. Here are the things we found useful on my team: * Being able to restart applications or check active configurations without having to connect to VPN and RDP to a server * Being able to spin up a new environment slot with a couple clicks * Being able to setup a git based CI/CD pipeline for .NET web apps in just a clicks (including warmed up staging to production swapping behind a load balancer) * Application Insights (doesn't necessarily require Azure Hosting either.) This thing is a beast, try it out. It's the kind of monitoring and telemetry you'd have to pay top dollar to Solar Winds to get, and it's pretty cheap in comparison (you mostly pay for bandwidth and storage at normal-ish Azure rates). * Being able to live stream log files * Being able to group web application resources in resource groups (more useful than it sounds, but not an everyday need) I wouldn't say that those features outright justify the cost for smaller applications (its almost twice the cost of raw VMs), but if a significant portion of your business depends on a web application, then it's probably justified. 
This is exactly the kind of content I come to this sub for. 
I followed a guide, don’t remember where. I literally looked for “.NET Core on Heroku”, so it shouldn’t be hard to find. The dockerfile was around 10-20 lines, so pretty easy. The only weird part was getting Heroku-cli to work, because I was fixated on doing it in WSL. Also you need docker installed, that’s not a big deal but might slightly hurt performance as it forces Windows to run over a hypervisor (at least how Windows 10 did the setup for me)
Ok. The CLI shouldn't really be a problem, that's how I have used heroku in the past. Thanks.
Look, you clearly don't work with the tech. WPF still uses Direct X 9. The OS is on version 12! Not to mention long standing *serious* bugs that aren't fixed (like needed to disable touch/stylus events to ensure your application doesn't freeze - hope you like having to manually handle multitouch!). On the .Net framework side: incomplete implementation of crypto that doesn't include CNG's most recent additions. A *complete* lack of Bluetooth support even with a dongle (you need the Windows SDK for that) unless you want to write your own drivers. No, you need Windows 10 SDK for that. How do you include into your project? By linking against some kludgy *manual* location in the OS... Yeah this is a clear workaround. They don't want you using .NET Framework, all the signs are there. They want you using .NET Core. Oh but guess what doesn't work with a .NET Core project? Fucking WPF. I dunno man. If you expect the stack of 8 years ago to still be supported 8 years from now then I have a hoarde of windows forms devs you should get in contact with. You are in for a rude awakening. Eventually, MS will drop support and that will be that, we'll all just have to suck it up. It's where the wind is blowing.
1. Yes. I'm not sure how soon that transition will happen, but where possible favor .NET Core for new development. 2. Everything. I've been on successful projects for every item in that list. 3. Yes, because it sucks. Clients will ask for it, and we have to either suck it up or convince them to save a boat load of money by using C#/.NET. 
Most confusing explanation of a language feature I’ve read in a while.
My experience of the years is to let Microsoft describe it their way, then go to Stack Overflow and ask for a translation.
I must guild myself!!! &amp;#x200B; Turns out that the PostAsync won't handle this request. I have to bundle the whole shebang into the request. so instead of HttpResponseMessage result = await postClient.PostAsync(new Uri(fullRequest), request.Content); I need to cram it all into the request object. request.Content = new StringContent(caseJSON, Encoding.UTF8, "application/json"); HttpClient postClient = new HttpClient(); HttpResponseMessage result = await postClient.SendAsync(request); &amp;#x200B;
Ok, tho all other tests do and ALSO use json serialization to report back their results. But indeed they might gain in this particular test, however don't get your hopes up, as that resultset shows span json serialization being slower than utf8 mw json (on aspnetcore both) :)
The usage example calls .Fill(key) twice and and apparently leaves nonce uninstantiated FYI. I'm assuming that is not correct.
Which bits? Seems like a very thorough explanation
In the Usage example, // Create a 32-byte key. var key = new byte[32]; RandomNumberGenerator.Fill(key); // Create a 12-byte nonce. var nonce = new byte[12]; RandomNumberGenerator.Fill(key); Is the second call to Fill meant for nonce instead of key?
Yep, good catch! It's fixed now, thanks.
Sometimes, most of the time, a thorough explanation of something is highly confusing to someone who is completely unfamiliar with a concept. 
Yes, the Dell XPS 13 has been the best development laptop for the past 2-3 years.
Mostly not understanding what you sometimes say, even thoroughly. 
&gt; Stay away from anything that is not .NET Core based unless you got a very specific reason not to. It is the future compared to the classic .NET framework. Thanks, that's the kind of really specific advise I'm after. (Microsoft doesn't make it really clear why I'd use one or another, other than being FOSS) In terms of things like Blazar, I guess that's more what I'm interested in. If I dive into C# for a project, I'd be releasing in probably 6 months or maybe a year, so cutting-edge would probably be best. I'm also curious more about what's possible than what's commonly done. For example, I find Linq really appealing (as someone who uses SQLAlchemy), but in general MVC isn't that interesting to me; Django, Flask, and other tech stacks do that well also. I'm much more interested in what'll really impress me, what I've been missing out on. Anyway, thanks for the thoughts and response on web+mobile+desktop. Definitely helpful, even if you don't consider yourself an expert. ;)
I've made it this long without it, I'm not sure why this seems to be a big deal. What am I missing?
[removed]
It is really only valuable if you're trying to write extremely efficient code that deals directly with large blocks of data. Text parsing and cryptography are two areas that greatly benefit as one can remove nearly all unsafe code that used to require pointer casting for performance reasons.
ok, nuking unsafe code would be good, but rarely my usecase.
Maybe not something one would use every day but nuking unsafe code is hardly the only use case. Here is a function that uses Span + Vector in order to gain performance benefits on processors that support SIMD: ``` public static void Xor(ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination) { var xLength = destination.Length; var yLength = source.Length; var count = (xLength &lt; yLength ? xLength : yLength); var offset = 0; var size = Vector&lt;byte&gt;.Count; if (Vector.IsHardwareAccelerated) { var vx = MemoryMarshal.Cast&lt;byte, Vector&lt;byte&gt;&gt;(destination); var vy = MemoryMarshal.Cast&lt;byte, Vector&lt;byte&gt;&gt;(source); for (var i = offset; (i &lt; vx.Length); i++) { vx[i] ^= vy[i]; } offset = (count - ((size - 1) &amp; count)); } if (0 &lt; offset) { for (var i = offset; (i &lt; count); i++) { destination[i] ^= source[i]; } } } ```
It means I can't make a swap chain if I need to do anything more complicated. Which I do. I'm over you, arguing with you is more trouble than it's worth. You clearly lack domain knowledge to be discounting out of hand very real issues I currently deal with.
&gt; vectorized version performs 10x faster nice
Clarification: you can of course deploy to Heroku with a pre-built Docker image. But what I meant is you can also have Heroku *build* a Docker image from a Dockerfile in the repo if you use the Heroku.yml build manifest, no image repository or image pushing necessary.
MS advices against using Blazor in production, calling it experimental. Afaik apart from being in a generally early state the download size of the Wasm client library is too big. What is called server side Blazor will be the first mode to be fully released (in upcoming .net core 3.0), with most logic running on the server communicating with the client over SignalR (web sockets). Switching over to full client side when it matures is said to be as easy as changing a few lines of code. So if you are OK with the library leaving beta around the time of your release server side Blazor is an option. Blazor is certainly the most unique .net tech right now, while being "obvious" enough that other actors will do similar stuff in the future. MS is just early. It is worth noting that today's Microsoft has a very different software philosophy than a decade ago. They fully embrace open source and cross platform, and with their history in mind has been more or less forced to do it by the books to be trusted.
[removed]
Did you end up going anywhere with this or find any research on it? In a similar way, I'm currently fighting with my DBAs who want the developers to pass in JSON objects to stored procedures as a parameter that the stored procedure would parse and handle inserts/updates. Not only that, but they want to implement a bloody abstract database and provide a set of views that we could use for queries!!! I'm trying desperately to find some research on why both of these ideas are bad.
No, there will be most likely 5.0 bit it's dead for (Web) development and has no (longterm) future. MS will just need years to get it out of there own Products. &amp;#x200B;
Thanks 
Which host are you using? I'm using azure app service but it's free because I get free azure credits at my job but if I leave or get fired I'll need a new cheap option. I need sql server as well
&gt; It means I can't make a swap chain if I need to do anything more complicated. Which I do. Using WPF? WPF is great for the basic stuff but for anything more sophisticated it always fails, IME. 
You could batch page views and persist them in one go to avoid a lot of mutations. Just keep them in memory and update at a set amount. Is it really important that page views are always consistent?
I'm in a similar situation and would love to hear someone else's opinion as well. Your instinct of doing an increment to the database for the page was the first thing that came to my mind as well. I am doing this actually for an old classic asp website now and it's working fine (didn't notice any performance hits after adding it but I'm not measuring those types of statistics super well to be honest). I
I don't see that anywhere on the announcement. 
I would recommend using SQL and seeing how well it works. SQL is not slow unless you make it slow. You should be able to increment the counter with a single query. Make a query that starts a transaction, gets the value, increments it, puts it back, and commits the transaction. Minimizing the queries to one per page request is the best optimization there. And a transaction is needed so the value can't change from under you while you are incrementing, so the value will remain accurate. If you're really concerned, you can store the counter in memory, loading it from the database on startup, and only commit it back to the database after some interval. Of course then you have to deal with multithreading locks, timers, and optimizing so the timer only runs if there's actually a change that needs to be made... then all this has to be done for every page... Not too tricky but it's probably easier to just read/write directly to the DB.
I feel like I am stuck in a loop on azure lol. I log in, try to create a web app resource, tells me to sign up for free . Click the link and it says I am already a subscriber and it's only free for new users. How can I create resources under the free tier? 
What would make it better?
&gt;I've made it this long without it, I'm not sure why this seems to be a big deal. &gt; &gt;What am I missing? If the managed part of your app isn't throughput-sensitive (e.g., if the CPU is spending most of its time waiting for I/O), then you're not wrong. .NET owes a lot of its success to applications like this. The folks who are interested in this are those who write code that needs to run as quickly as possible (and those who depend on that code). If you have a contiguous sequence of bytes that you know contains a UTF-8 encoded string of digits that you want the numeric value of, then it just seems silly to have the CPU slog through allocating a `string` instance (which may trigger a GC collection) and decoding that entire section of the array to UTF-16, for the sole purpose of being able to use the system's `string` parsing routines. This may sound kinda silly since computers are really fast and this should be on the order of a few hundred nanoseconds of waste (guessing), but when you throw a ton of instances of the same application on the same box, doing a zillion of these in parallel, all thrashing the heck out of your CPU cache, it adds up. `Span&lt;T&gt;`, along with the related API support in the framework types, lets us skip all that ceremony by working directly with the data that we have. TL;DR: if you're writing libraries or applications that only need to be **fast enough**, then you probably don't care. If you're writing libraries or applications that need to be **fast**, then this can be a big deal, depending on where your bottlenecks are.
An example (from my very basic understanding) where it might be used is in a csv parser for example. The old way - you load the file into a string, and then you split the lines into individual strings and then the lines into fields which are further strings. Each of those initialises new string objects and takes memory/cpu. The new way - you load the csv into a Span&lt;T&gt;. You then split/segment that Span into multiple slices without allocating any new strings or memory. You are simply moving pointers around. Both ways do the same thing, however one way is more performant (if that's needed).
Alternative to SQL is to enable IIS request logs and parse the files after they are generated. Also incrementing a counter per page doesn't really have useful information, surely you want to know when a page was viewed so you might as well write to a database (PKValue, url, timeRequested, up, user agent) then count the number of rows per url. This way there is no contention over a single row per page.
I haven't used webforms in years but I really don't think there's any issue with using a service or a static utility class for shared methods. Extract whatever info you need from the request, process it outside your code behind and send the output back to the user in the response. 
I'd wonder how much more speed you'd get that way. Let us know if you get to benchmark it.
I'd done more than a reasonable amount of plinq and dataflow and situations where worrying about cache lines is important and had really good luck with the existing scheduler keeping 24 (or something like that) across 2 xeons busy. Vectorization seems like a clear win. BUT otoh, reasons like this get me off into cuda, etc.
So I created a pay as you go subscription to be able to create services then when I go to deploy in visual studio I created a new service plan and selected free. not sure if this is the correct way but it worked :p
Have a post view table with post ID and click date. Every page load, insert a single record in that table with the post ID that was clicked and the current date. Then you can write a view to encapsulate the trending logic based on date / count of views.
It's actually quite nice to work with. It supports DataLoader to batch queries together and Relay cursor pagination, which is quite nice. When I first implemented those solutions, documentation wasn't great. I think it's improved a bit since then. Are there any other pieces of functionality that I should look into?
Actually from a quick web search - someone has already had this idea: https://github.com/dfederm/DelimiterSeparatedTextParser https://dfederm.com/learn-span-by-implementing-a-high-performance-csv-parser/ From a 2 second look at their benchmarks it's 2-10 times faster than a lot of public libraries and uses far less memory (as you'd expect). From the looks of it, it's not fully featured - simply a proof of concept.
This is the easiest approach with the least overhead, but you have to be ok with occasionally losing stats when your app restarts and it doesnt work as well with multiple servers unless you are ok with adding up aggregations to use the results.
You always run the risk that any in-flight pageviews won't be counted if the app is restarted while it's preparing the DB request, so that doesn't really change. Additionally, if you're concerned about app restarts losing in-flight operations, then you need to implement draining. An individual instance in the cluster stops taking new requests, then waits for in-flight requests to finish, and only then restarts. I would do it with two Int64 counters, `NumPageViews` and `PreviousReportedPageViews` and a timer. Use `Interlocked.Increment(ref NumPageViews)` to increment the number of page views. When the timer fires, compare PreviousReportedPageViews to NumPageViews and issue the DB request, then update PreviousReportedPageViews. Why track previous? So it still works between app restarts. You can't trust that if NumPageViews &gt; previously reported at DB level page views that the app has *not* restarted.
[removed]
If they're separate calls, you may try setting up a transaction ID that you can reference in the second call that is stored with the results of the first call.
Thanks for ur reply, Pls tell me which is better approach from following 1. Using complex object from Angular including data related to both POSTs and use single POST to handle the request 2. Use two POST requests with transaction id(as you suggested)
[removed]
You apparently asked the *right* question. 
Good to know. I am a backup developer for an app that parses 2gb XML files every hour. There's occasionally a time it doesn't finish before the next call which causes a failed update and delays processing by an hour. If I can improve performance sufficiently by implementing Span, perhaps this issue can disappear for my team. 
[removed]
ASP.NET Core supports shutting down graciously. If you host on IIS, put an app_offline.htm in the root folder. If not, hook onto an event whenever you want to shut down and call it on the WebHost instance. 
Personally I'd handle it with #1; wrap both entity updates in a transaction and Bob's your uncle. It's the simpler approach anyway.
[removed]
[removed]
&gt; Given many of the API additions in .NET Standard 2.1 require runtime changes in order to be meaningful, .NET Framework 4.8 will remain on .NET Standard 2.0 rather than implement .NET Standard 2.1. .NET Core 3.0 as well as upcoming versions of Xamarin, Mono, and Unity will be updated to implement .NET Standard 2.1. Library authors who need to support .NET Framework customers should stay on .NET Standard 2.0. In fact, most libraries should be able to stay on .NET Standard 2.0, as the API additions are largely for advanced scenarios. However, this doesn’t mean that library authors cannot take advantage of these APIs even if they have to support .NET Framework. In those cases they can use multi-targeting to compile for both .NET Standard 2.0 as well as .NET Standard 2.1. This allows writing code that can expose more features or provide a more efficient implementation on runtimes that support .NET Standard 2.1 while not giving up on the bigger reach that .NET Standard 2.0 offers. With .NET Standard 2.1 dropping support for .NET Framework it is pretty clear what its future is going to be. And if you still have any doubts, you can read the comments section as well, specially the answers given by Immo Landwerth from Microsoft.
[removed]
[removed]
[removed]
Redis is a great fit for this. &amp;#x200B; You can use the INCR command to increment page views ([https://redis.io/commands/incr](https://redis.io/commands/incr)) and ZINCRBY ([https://redis.io/commands/zincrby](https://redis.io/commands/zincrby)) to maintain a "Top posts" leaderboard automatically. &amp;#x200B; You will want to later flush/persist this data to SQL (more persistent storage) as Redis is an in-memory database. &amp;#x200B; You can turn on Redis replication to another node and data persistence, its very reliable, but there's always the chance of data loss.
&gt; Read the docs for multitargeting - this will help greatly. Do you mind sharing a bit more about your strategy to migrate to core? Ideally its done as an incremental task on our side (not via some big update/refactor branch etc), and having an option to build the .NET Core version at the same time (even if it fails to begin with?) would be helpful. &amp;#x200B; Where I'm worried is traditional MVC has views in a certain folder but .NET Core moves them somewhere else, so either I need to copy views around to support both setups at the same time or somehow make .NET Core read views from a different folder etc. &amp;#x200B; Anyone have any strategy for this for large projects? Thanks!
Span would help but one has bigger issues if parsing a single 2GB file can take over an hour. For reference, I can parse, index, hash, and encrypt a 6GB csv file in under 5 minutes. If your project is open source then I'd be more than willing to contribute.
The fact that it doesn't handle quoted values gives it quite the performance edge; processing such values is easily the most expensive part of the algorithm. 
Redis can persist to disk too.
I doubt parsing in the traditional sense is the only thing happening for the task to take so long.
I'd suggest taking any famous app and trying to recreate it's db layer. E.g. twitter: users, posts, friend lists etc Pick a database and stick to it. Sql Server Express and PostgreSql are both fine. Then the data layer in your app. Try dapper and entity framework core. Dapper is more low-level, you have to write all sql code manually. In EF Core you can use code-first approach: you define c# classes, and the framework does all the heavy lifting of translating it into sql. Both approaches have pros and cons.
What is your specific question? Do you want an answer which explains what One-To-One, One-To-Many etc. mean? Or do you want one which explains the functionality of ORM frameworks? Because those are two separate topics.
Or you can scaffold the code from your schema in EF core as well. You don’t have to do code first. 
Your front end shouldn’t need to know that the data is stored in two different tables, makes it easier to maintain. Your backend should handle any atomic transactions. You can use any number of ORMs to maintain the ACIDity of them.
Id like to know how i would create relational schemas on a paper effectively to later use that to program the backend in .net core
Sure, but I was trying (and failed) to illustrate that it doesn't really matter what you do with 2GB of data; more than an hour is excessive and one should ruthlessly hunt down the bottlenecks. I'm willing to bet that it is just one or two dumb mistakes that any of us would make.
[removed]
You're right. A whole bunch of stuff takes place (table stuffing, calculations, reconciling another couple dbs). I haven't spent any time looking at it and it's not open source, but I figure there are improvements that can be made. 
[removed]
Sounds like learning about [data modelling and ERM diagramming](https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model) and [database normalization](https://en.wikipedia.org/wiki/Database_normalization) will be of use to you with that, then. Good on you for writing it down on paper before hacking your way through, get it right early.
**Entity–relationship model** An entity–relationship model (ER model for short) describes interrelated things of interest in a specific domain of knowledge. A basic ER model is composed of entity types (which classify the things of interest) and specifies relationships that can exist between instances of those entity types. In software engineering, an ER model is commonly formed to represent things that a business needs to remember in order to perform business processes. Consequently, the ER model becomes an abstract data model, that defines a data or information structure which can be implemented in a database, typically a relational database. *** **Database normalization** Database normalization is the process of restructuring a relational database in accordance with a series of so-called normal forms in order to reduce data redundancy and improve data integrity. It was first proposed by Edgar F. Codd as an integral part of his relational model. Normalization entails organizing the columns (attributes) and tables (relations) of a database to ensure that their dependencies are properly enforced by database integrity constraints. It is accomplished by applying some formal rules either by a process of synthesis (creating a new database design) or decomposition (improving an existing database design). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/dotnet/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Neil used the code first approach in the course and its kinda convenient. I saw he used conventions for one to many and migrations i guess for many to many relationships. Id like to know how i define the rels. before i code so i have a good meaningful db structure. Could you give me an example of each relation in a real world case? Lets say you have an event model. Include other models that have these rels. relative to it.
Yea that would be it. Ill dig into that stuff over again as i knew the theory before but i never got to apply it on a backend service like now.
I would not use an ORM for communicating with the database. You can really mess things up and have terrible performance issues if you don’t know what your doing. ADO.NET adds a lot of effort but you can make your database calls lightning fast. Look into Table Value parameters and making multiple calls at once. If you have to make multiple calls look into asynchronous programming to try and increase performance. Remember every call to the database is equivalent to getting on a plane from DC to China and back. You want to limit database calls as much as possible. I say this all the time on this subreddit but focus on readability over performance. Use know design patterns and if you still have performance issues you can easily adjust your code if your architecture is sound. Programmers who focus on performance only are usually bad programmers. 
+1 for me it's a lot less hassle and if u need to share the schema u can just create a schema backup and share that. No funky Suprised that way 
sgfdgsdfg dafsf asdf
ValueTask has been around for awhile now. What I'm waiting to hear is a plan for actually implementing it in places we need it such as DataReader.
[removed]
I think you'll want a 3rd party lib esp if going for cross platform.
https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/working-with-certificates
I think you're looking for a debounce to avoid hammering your API/DB. https://levelup.gitconnected.com/debounce-in-javascript-improve-your-applications-performance-5b01855e086 https://www.learnrxjs.io/operators/filtering/debounce.html https://weblog.west-wind.com/posts/2017/Jul/02/Debouncing-and-Throttling-Dispatcher-Events You can actually do this on both the browser and your web API depending on what load you are expecting. The webapi may need a singleton so different threads don't contend on write, and if you are horizontally scaled you'd then need to lock the file/record when you actually go to write to disk/SQL since you need to read, add the additional count to the existing value, then write and commit. Your web API could return HTTP 429 and the browser JS could just continue to increment and wait to try again later, though you'd probably want some sort of backoff/retry on the api to self adjust instead. This is sort of a light version of event aggregation. You may only do +1, but if traffic is heavy it could be +10 or +50 or whatever. 
Specifically for DbDataReader, it seems it's planned, though maybe not for .Net Core 3.0? See [this issue](https://github.com/dotnet/corefx/issues/27682), and [this issue for alternative allocation-free API](https://github.com/dotnet/corefx/issues/27684).
&gt;you can store the counter in memory You mean storing data in *static* variables in Startup.cs or are there any better options?
Well, a static variable anywhere, yeah. It will persist until the process ends (which is why you will want to load it from the DB on startup and periodically save it back). Not sure what you mean by "better". Holding the value in memory is the fastest access you're going to get, the problem of course is like I said it disappears once the process exits.
Check this out you may find something here: https://github.com/thangchung/awesome-dotnet-core/blob/master/README.md Also personally i find pre built admin a lot more difficult to tame than have custom built consoles
No, sorry, I've never worked with medium trust. Best you can do is create a local environment you can run the process in, which should allow you to attach a profiler.
The only thing there you mentioned that carries verifiable identity is the jwt token. Use that to determine who is calling, and base your access control on what that identity should be able to edit.
These are basically advanced constructs that will mostly be used as performance tuning devices by folks working on core libraries and other highly critical sections of code. That isn't to say there aren't real world use cases, but unless you are at the point where you are concerned that memory allocations are your application bottleneck I wouldn't worry about them overmuch.
I'll certainly have policy based authorization in place but wanted to verify the best method for not letting users edit posts. I'll use the method of storing userid in the JWT and access it from there. What is the best method for storing session specific data?I don't want this data to be available to the user. Is redis cache pretty much the way to go or is there a better option?
https://m.youtube.com/watch?v=anwy2MPT5RE
The best method for not letting someone edit something they shouldn't is a proper authorization scheme, and associating data with users / roles / claims, etc. for access control. I'm assuming you are authoring your own JWT tokens from the app itself, i.e., no REAL OAuth servers involved? If so you need to make sure you are properly signing these tokens to prevent clients from changing them. Do NOT put stuff in the token unencrypted if you are not signing the token. Even with encryption, without proper signing you open yourself to client modification of the token. Also, if you are authoring the token yourself, I PROBABLY wouldn't put anything in it. I would look up the user identity associated with the token on each call... but that make change if I had to call other APIs and pass along the token in a real OAuth scheme for performance reasons. For a single app though, I'd probably just look up the user identity information in the JWT verification for the call and populate that into the call context as well. Then you just check this identity against whatever authorization scheme you use for the resource, i.e., that the user id equals the owner id for the resource, or that the user identity has a role that has edit access, etc. For session stuff, if you are looking for server side session management and are doing JWT / stateless web api you are probably trying to apply the wrong solution to your problem. You COULD use actual server side cookie based sessions with a web api, but it kind of goes against common practice, and when you do this hybrid approach, you'd probably skip the JWT altogether in favor of authorizing the SESSION and using the session cookie as the token (in essence, they ARE tokens). With a stateless API you have two choices for the data: either pass it in, or look it up. So the question is really, what is the state you think you need to keep between calls? Because you'd probably either want to manage that state client side until you're ready to save a complete record (SPA kind of approach), or if its just supporting data you need to complete stuff you just look it up from your data store on each call as needed. If you're trying to save something in stages or something, usually you'd have to build that all behind the scenes though where you'd write incomplete records, and have a flag for "record complete / validated" or something that you fire off on the last steps to validate and mark the record for actual use, etc. Several options here, but if you're doing an API and reaching for session, there's a good chance your approach might need tweaking.
[removed]
Why is this downvoted? I second on the architecture part. For avoiding round trips to database, you can use in-memory caching on the web server nodes. If you have a large number of nodes (or containers/pods if you're going docker-Kubernetes way) then I'd recommend distributed cache store like Redis to cache the fetched database data. 
What version are you on? I'm on 15.8.7 and just diffed a file a few minutes ago and everything was fine.
15.8.9
OK, I updated, still not a problem. Are you clicking from the "Changes" tab in the Team Explorer?
Yes, that's how I'm launching the diff. Do you happen to know if there is a way to export a list of plugins? If I could compare what you and I are running, that would narrow down the field.
[removed]
[removed]
My intention is to make a blog post for every change in Chain 2.x. I'll share some of the highlights hear, but you'll have to subscribe to my blog for the whole story.
Probably the performance part. I think performance is a huge consideration but I would rather have a maintainable codebase over an ancient Egyptian hieroglyphics.. I would also bet that a maintainable system is more secure and has better performance than one set out from the beginning to have high performance.
[removed]
.NET what?
&gt;Ideally I want a key/value pair of key=Patient value =23 […] That would be represented as `/Observation?Patient=23`. Query parameters have two parts, key and value. It seems as though you want to represent three parts. If that's truly necessary, better to parse it out of the value than the key, I think. What is the "subject" part representing or gaining you, here? 
This is done in the Control Panel, under Turn on/off Windows Features. Here’s a link for more information: https://docs.microsoft.com/en-us/dotnet/framework/install/dotnet-35-windows-10
[removed]
Looks nice. Not really too different from EF Framework. 
[removed]
The main purpose is to reduce memory allocations, the biggest gains will be if you do heavy processing over a lot of items. So if you are splitting up strings, for example from user input, Span can help minimize allocations. That is a fairly common scenario. Also when reading and writing binary data on disk you may use byte[]. Now you can use Span&lt;byte&gt; which again may help you avoid allocations depending on what you are doing with that data.
[removed]
Thank you. I am using Auth0 for authorization / authentication. I settled on storing the userid from the sub claim and storing that in my User entity. I'll remove userid from my outer facing model and rely on the JWT userid and the data fetched from the DB to verify if the user calling the API owns the event or not. This seems to be the consensus from the research I did yesterday. As for sessions, I won't be using anything for API but will be storing some session data (user search history etc) in the web app that I will be creating. I might end up trying to use redis cache for storing that user search history information.
[removed]
If it doesn't need to persist between sessions, keep that all client side. Local storage can even be good here if you don't need it to follow a USER between browsers. If it does, then you need to write it to the API and let the API persist it, and then either make a call every time you need it, or bootstrap your client with it at the beginning and come up with a scheme where you sync the client side cache with your persisted server side model. Haven't really said much about your client, but I'm assuming its some sort of SPA given the rest of your comments here. I.e., you should be looking for SPA solutions to these problems, which is going to involve a lot of managing most everything non-security sensitive in the client, and calling the API for persistence.
I attempted to use this as a basis for codegen, but Roslyn is too hard compared to Visual Studio CodeDOM.
Thanks for the article! I really appreciate this type of investigations. 
[removed]
Expand the left menu panel, there's an entry there that says Dashboards. When you click on it, you should see any dashboards you configured. Alternatively, you can turn the new menu off by clicking on your persona in the top right corner, the one with your picture/initials. Choose "Preview Features" and turn off the "New Navigation" toggle.
Overview -&gt; Dashboards... I think
Are you validating your expiration claim in any way? What if it's invalid (i.e., someone adjusted their claim to increase their expiration) Wouldn't it be better to store your "Expiration" value server side, in the db, and retrieve the value server-side, based on a claim? It seems suspect to me to be determining such a business crucial variable from a claim that is returned from the client side. What if someone were to get an authorized token from your API, adjust their claims client-side to increase their expiration, and then hit your API? I think you're api would think they haven't expired and continue letting them use your services. Aside from that, the approach you took in the Policy to redirect looks alright to me. One alternative would be to do this check in a Middleware, but I think it's better that it belongs in a Policy imo. 
Update Panel... are you using WebForms? Just wondering.
No. It's only designed for small single user apps.
Still waiting on cross platform gui development with c# :(
Hey, sounds like you thought of it analytically and weighed all the good/bad well. I commend you for that! Knowing your stance better now I think I would be ok with you not validating your claims, you have good enough reasons not to spend effort on that. So aside from all that, I'd just like to validate that your approach in your policy is correct to me and I give it the thumbs up! :+1:
I see, but it is hidden in another two steps.
I'm will most likely be a SPA. I have not decided on what should be stored between sessions. Depending on how my idea around the web app changes, I might end up storing everything client side as none of it will be sensitive information. The cache was more for learning purposes and I might implement it and remove it if I feel that its not serving any purpose. I'll go down the route of persisting as much as possible in the API and get the data as needed on the app.
Awesome, thank you! Also, from your initial comment: &gt;One alternative would be to do this check in a Middleware, but I think it's better that it belongs in a Policy imo. Absolutely agree with you here, and this is why I wanted to find/create the solution above. It's kind of weird that MS doesn't even touch on a custom redirect solution for Policy failures, but that's why I wanted to share here. Thanks!
Yea, that is a little weird. I started thinking about that objectively, this is what I came up with: - When using OpenId providers (such as IdentityServer) the redirect URL for Authorized Access is typically set up in the OpenId config and is handled automatically by OpenId protocols - When not using OpenId or rolling your own Auth, it's typical to have Authorization Policies simply return 401 on failures, and the client is responsible for catching the 401 and redirecting client-side Your situation is probably a little different - it sounds like you might have two redirect urls... 1 for when a user is unauthorized and requires login - and another for when the user is logged in but their service has expired. In that case, the Client wouldn't know which redirect url to use if it catches a 401; so for the use-case you have here, I think the policy handling the redirect is right proper. However, I just had a thought: Your policy doesn't fail the requirement, it succeeds it, after setting the redirect on the response. I'm thinking it would be better to fail the requirement so that no further processing happens. You may want to debug this scenario to be sure: If a user's expiration claim has expired, but the policy succeeds the requirement after setting the redirect url... I have a feeling it will still flow through to your API Controller and hit whatever method they are calling, before eventually returning the response with your Redirect. If true, you'll want to fail the requirement when expiration is expired instead of succeed it, that way all processing halts immediately and the response with the redirect is returned immediately before any further processing is wasted on the request. (and depending on what endpoint they are calling, that processing could have unintended consequences if it isn't prevented) 
Also, just had one more thought when reviewing this. It's more of a style tip, not important. public class ActiveUserRequirement : IAuthorizationRequirement { public DateTime TodayUTC { get; set; } public ActiveUserRequirement() { TodayUTC = DateTime.UtcNow; } } The above could be simplified a bit with some of the newer C# syntax, if simplicity and prettiness is important to you: public class ActiveUserRequirement : IAuthorizationRequirement { public DateTime TodayUTC { get; set; } = DateTime.UtcNow; // automatically sets a default value } And then you don't need a ctor :) 
Yup, old project that's Web Forms. I don't get to do this daily anymore.
So for my case, I'm using the standard Identity solution that is shipped with .net core and I'm also using cookie auth with mvc (however, my razor pages have mini VueJs apps dropped in if necessary). &gt;Your situation is probably a little different - it sounds like you might have two redirect urls. Yes, absolutely. I have 1 redirect (Access Denied) for users that are logged in and just should not access that part of my app (I have tiered subscription types: "pro, super-pro, etc"). And the other redirect is for what I posted above. I still want users to be able to log in, but I want them to instead of going to their dashboard (or wherever), I want them to redirect to a page (that only authorized users can access) that says "Hey, it looks like your free-trial/subscription is over, give me money to continue". &gt;**However, I just had a concerning thought:** Your policy doesn't fail the requirement, it succeeds it, after setting the redirect on the response... So this is where things get weird, and probably why there's not a lot of info on this... If you do not succeed the context, whether you leave it blank and let the Task to complete, or implement context.fail(), it redirects to the Access Denied screen (even though I have redirected in the line prior). So I came to the conclusion that if you fail a context, the flow likely redirects twice. 1) to my intended redirect and then 2), to the access denied screen. However, with the succeeded context, after my initial tests, with my solution above, the flow never hits the intended controller action if their expiration date has passed and the user is successfully redirected. :)
Awesome! Sounds like you have a great handle on things. If anything, I hope this conversation helped validate your approach! 
Thanks! It absolutely did validate it. I came in thinking that this policy redirect solution might be too much of a "hack" and that I should just create a custom authorization attribute, but I really wanted to avoid that because I have other Claim Policies and wanted to stay consistent.
This is one of those moments when I realize I'm old school... lol. Thanks again dude. You're a great help!
Hey, us vets are probably all a little old school in some ways. I'm 10 years in myself! Have you tried using Resharper? I got my company to buy me and a few others a license. As new c# features come out, Resharper will highlight things like this and let you know with `alt+enter` that you can simplify syntax. It's super non-invasive and a great way to learn the new syntax as it is released, as you work! Also, happy to help! 
Yes, consistency is important! I definitely agree this should live as a Auth Policy. My only complaint about the .netCore web api approach to these policies is that for simple policies, creating a handler and a requirement seems overkill - especially because simple policy requirements end up being empty classes a lot of the time. The docs show that approach first so it's more widely used, but there is an alternative approach too where you can just define policies with a lamdba in startup, and you don't require the extra requirement/handler classes: services.AddAuthorization(options =&gt; { options.AddPolicy("BadgeEntry", policy =&gt; policy.RequireAssertion(context =&gt; context.User.HasClaim(c =&gt; (c.Type == ClaimTypes.BadgeId || c.Type == ClaimTypes.TemporaryBadgeId) &amp;&amp; c.Issuer == "https://microsoftsecurity"))); }); I love this approach for simple policies because it keeps my api's from filling up with a bunch of marker requirements and handlers. https://docs.microsoft.com/en-us/aspnet/core/security/authorization/policies?view=aspnetcore-2.1#using-a-func-to-fulfill-a-policy I do still use the first approach for more complex policies, of course. 
Yea, definitely. I use lambda policies for my tiered subscription policies like the following: options.AddPolicy("EmployeeOnly", policy =&gt; policy.RequireClaim("EmployeeNumber")); I looked into using the lambda func for my problem above, but there just wasn't any way to redirect to a custom page (only to the Access Denied page).
Maybe - I have to add a db to a single user desktop app.
In my experience, always toggle all the "Preview Features" on, unless they have bugs. The features will become permanent and the "old" behavior will be removed from the product anyway (and usually fast). Now, having said that, the new navigation introduces an additional/annoying step for me. This makes navigating cumbersome instead of easier... It should just select the last dashboard/sprint that I've used, which is for me the correct one in 99% of the cases. They should let computers remember stuff, they're good at that!
Not that I know of. The non defaults I have are Resharper and Xaml styler.
That will be awesome.
So much empty space, barely any text, have to mouse over stuff to even get icons, then mouse over the icons to find out what they are. We have one client's stuff in it, only using git and a couple CI builds for staging. As someone who has been pretty much MS-only for just short of 20 years, it surprises me to say the following: I will recommend that we move the client's stuff into the bitbucket we use for most clients. Its probably less effort to move stuff off Azure DevOps than it is to get used to the new UI. 
Thinking in REST you probably should use the default conventions for the general web: /api/observations/23: ``` [Route("api/observations")] class ObservationsController : ApiController { [HttpGet("{patientId}")] void Get(int patientId) {} } ``` Or /api/observations?patientId=23: /api/observations/23: ``` [Route("api/observations")] class ObservationsController : ApiController { [HttpGet] void Get(int patientId) {} } ``` The noun _subject_ holds no value to either the producer, nor the consumer.
YES, it sometimes even crashes when updating nuggets as it times out when trying to update files. If you move or delete a folder which had quite a lot of items which were added to SC you can go make a coffee while it processes.
&gt; Now, having said that, the new navigation introduces an additional/annoying step for me. Fortunately updated browser bookmark resolved it for me, just couldn't find it first time.
The performance stats seem misleading - those are specifically for [ASP.NET](https://ASP.NET) Core, no? Web frameworks aren't exactly the whole story when it comes to runtime performance. &amp;#x200B; The Benchmarks Game has C# on .NET Core consistently beating/tying with Java: [https://benchmarksgame-team.pages.debian.net/benchmarksgame/faster/csharp.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/faster/csharp.html) C# does about as well as Go with the n-body problem (which is a particularly unfriendly problem for managed code): [https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/nbody.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/nbody.html) It also does very well with k-nucleotide: [https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/knucleotide.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/knucleotide.html) &amp;#x200B; GRANTED: these are all implementation-specific. The C# eigenvalue benchmark doesn't use the System.Numerics SIMD support, for instance. But these are much better benchmarks than a web framework-specific benchmark. Using that one benchmark, comprehensive as it is, is still cherry-picking.
I don't know how ASP does it but when deaing with raw HTML/JS I think you can add event handlers to window.onblur (user switched tabs/windows) and window.onfocus (user came back to tab/window). Or maybe it was those events on document or document.body (I forget which). If I were you I'd set up some simple functions to double check when they trigger (and see if they work in all browsers). document.hasFocus() could be useful as well.
Time to make a test page and see what happens! Great ideas, thank you.
The whole idea is very stack-focused. It's highly efficient but until now when you passed structs to functions they'd would get copied. Span uses the new readonly ref concept which makes the struct being passed as a reference to the function, in other words no stack copy. You can now write very efficient code, almost as if you were dealing with pointers, but in a safe, managed environment.
How does this perform compared to python?
I believe this is correct: "\[base\]/api/Observation?Patient=23" Here is some code to convert your directionary for your url, just replace \[base\] with your base. This code will work for a subjectDictionary of longer length, so if you the following key value pairs: Patient 23 Customer 24 OP 25 then your query strng would look like: "\[base\]/api/Observation?Patient=23&amp;Customer=24&amp;OP=25" Dictionary&lt;string, int&gt; subjectDictionary = GetSubjects(); string url = "[base]/Observation?"; url += Server.UrlEncode(String.Join("&amp;", subjectDictionary.Select(i =&gt; $"{i.Key}={i.Value}"))); &amp;#x200B;
Yes, vb.net is still active. Vb6 barely supported as it was sunsetted years ago. Vb.net and c# are super similar. May as well review the syntax.
VB6 isstill alive and kicking...think COBOL. Many companies still have large amounts of VB6 still running platform integrations, ETLs, etc. Many small companies run applications that are written in VB6. I have been making good money migrate VB6 code to .NET/C#. As already stated, it was EOLed in 2008.
[VB.NET](https://VB.NET) might be current but it's treated a bit like a red headed step child these days. Most new tools and features tend to land in C# first. 
I wouldn’t spend time learning it. I had to use it once at work for an old web application and just looked at the existing code to write more code or googled what was needed by searching for things like “for each loop in VB” It was really easy to find the VB version of something I knew how to do in C#
Not great. R is better.
[removed]
No real "solution", but I did disable every plugin except the ones I was actually using on a regular basis. 
Don't these things cost different amounts of money to host? Probably a better question for the client about how much they want to spend hosting the thing, no?
Shhh... Here have some kool-aid.
[removed]
 $ find -name '*.xaml' | xargs wc -l 963 ./MetroDark.MSControls.Core.Implicit.xaml 933 ./MetroDark.MSControls.Toolkit.Implicit.xaml 768 ./Styles.Shared.xaml 826 ./Styles.WPF.xaml 103 ./Theme.Colors.xaml 3593 total So basically they are doing the same thing, except I'm just being a lot more granular in dividing the files. Thanks!
[removed]
Perhaps I should start from the beginning. I need to build the [MIMWAL](https://github.com/Microsoft/MIMWAL/wiki/build-and-deployment)library. VS 2017 is not compatible according to their build guide. I have confirmed VS 2015 does give me the options to build various project types that target .NET 3.5. However, the required project type; Activity Workflow is missing. The project is available in .NET 4 and newer however, but not in 3.5. Apparently this is why my build fails because it attempts to use .NET 4 instead of 3.5 when building the solution. 1&gt;------ Rebuild All started: Project: WorkflowActivityLibrary, Configuration: Release Any CPU ------ 1&gt;C:\WINDOWS\Microsoft.NET\Framework\v4.0.30319\Workflow.targets(121,5): error : Compilation failed. Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information. 2&gt;------ Rebuild All started: Project: WorkflowActivityLibrary.UI, Configuration: Release Any CPU ------ 2&gt;CSC : error CS0006: Metadata file 'C:\MIMWAL-2.18.0318.0\src\WorkflowActivityLibrary\bin\Release\MicrosoftServices.IdentityManagement.WorkflowActivityLibrary.dll' could not be found ========== Rebuild All: 0 succeeded, 2 failed, 0 skipped ==========
From when Java was dominant anyway? Java was always the slow dogshit that .NET surpassed long time ago. The comparison is not between .NET and Java, it's about .NET and other lower-level languages.
I could Google, and I probably will Google later when I forget all about this post, but what is Bridge.Net and what is it used for? 
I’m interested in Bridge.NET but I need it to be available on Core before I’ll do anything with it.
Transpiles C# to Javascript.
Www.lmgtfy.com?q=bridge.net
Could you click it for me please
That kind of error detail is fairly normal. It's original path is embedded into the debug data, don't t worry about it, just fix the error. 
Why not use blazor? 
My workplace has quite a bit of VB6 programs running as well. COM interop and versioning is the only tricky thing in that space.
I've created a completely [new topic](https://www.reddit.com/r/dotnet/comments/9vkh4g/net_35_activity_library_project_type_missing/) regarding my problem, since this is most likely ignored by people due to my stupidity.
[removed]
[removed]
[removed]
[removed]
[Blazor is an unsupported experimental web framework that shouldn't be used for production workloads at this time.](https://blazor.net/docs/index.html)
The WebAPI version can be ran and tested on your machine. It seems a lot simpler to me which is better. Serverless has it's place for sure but I don't think I'd build a crud app on it. Now a function that sends an SMS or email or something like that? Makes a lot of sense for those kind of things. 
Either ping them here or send them a mod mail to ask what's up.
I think EOL for VB6 is in 2025, so it's still alive and kicking.
I could made a video recording of the results?
I don't know how to proceed since it works on my local machine and azure. How do I figure out what's wrong here? Can I get a more detailed error message somehow?
look at you with your good points. I didnt realize it was still in deep preview.
On line 17 you're trying to access or set a property of an object that doesn't yet exist. Eg, Var My Object = null; MyObject.Name ="Bob" ; You can't set the name property, because MyObject doesn't exist yet. 
No
ty
Serverless and Cosmos sounds cooler, but would probably be a disaster. Handling Auth in serverless functions - awful. Having to spin up an instance of a function per call - awful. Managing what is probably very relational data in a cosmos DB - awful. By using serverless you're adding variability to costs (although they may be lower) and intrinsic lag to nearly every interaction with the app. I've been playing around with "Cool tech being used inappropriately" for a couple weeks now and if I found the person who made this they'd get a bloody nose. Use the web funcs for some of the adhoc processing or transformation work you'd have to do or to interact with another API, not for a CRUD setup.
As stated before, no. However, you may be interested in the new Blazor framework. It’s still experimental, but it may be worth keeping tabs on. https://blazor.net/
Ya sure let me use [ML.NET](https://ML.NET) that gives that edge against my competitor. Its like how people are ok with cold starts of EF on AWS Lambdas.
Amazing how the bots submitting this article can get it so wrong. Mods, where the fuck are you?
Thanks. I didn't figure, but I'm still somewhat new to [ASP.NET](https://ASP.NET) MVC so wasn't sure if it could be done with @functions, or any other MVC component on the client side, taking any ideas people may have.
Time for some more/new mods?
True that. It's been constantly sneered at since C# became a thing. Oh well.. It's about the same syntax because of .NET.. may as well spend an hour and be familiar. https://www.codeproject.com/Articles/9978/Complete-Comparison-for-VB-NET-and-C
We host regular rest apis on App Services and then make functions for stuff like sending notifications, reading system events, updating stuff that can be done async, sending emails, generating PDFs. Azure Functions have still a long way to go mainly due to lack of middleware and proper DI. I'd use AF for internal stuff and regular Core rest for everything that client can access.
Nah I'll live, enjoy your weekend mate.
The libraries are the same but there are some notable differences in the language itself. Especially things like logical operators. If you take a look at the documentation I’m sure you’ll get it. It isn’t hard. 
Seen this. Doesn't help. It can't find the db.
Exactly my point! :^:
In your screenshot it says you’re using the Microsoft driver. Step 1 of the linked page is: &gt; Add a new data source using the 'SQL Server (jTds)' driver (not the 'SQL Server (Microsoft)' driver)
Vb6 support was just extended for another 5 years. The curse of the enterprise. There are a lot of twenty year old applications out there. I think the role for windows 8.1 is 2023, so windows 10 will probably still support into the 2030s. https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-basic-6/visual-basic-6-support-policy Running the IDE on a modern system is a huge chore, but possible, and if you have any third party controls, exponentially more so. However, Donovan Brown’s showed a pipeline of vb6 apps being compiled on azure devOps via a windows server 2008r2 image. In terms of carving a niche you’ll probably be able to in vb6, but it would be hell risky. Learning to port from vb6 to .net is very useful skill to have in your cv if you’re gonna be an enterprise dev. As is running .net COM in vb6 apps, for those partial migrations. 
How much do time/effort do you want to invest in this installer? You could use Windows Installer XML (WiX) to [create an installation bundle](http://wixtoolset.org/documentation/manual/v3/bundle/). We used it for bundling together a third party msi with our application, and for the most part it just works. There is a bit of learning curve though, I guess like anything. &amp;#x200B; &amp;#x200B;
I would love to apply to be a mod of this community.
have no experience in modding but i have a passion for dotnet. But with this thread we can get things moving ?
I hope so. I'll send a message to the mods and hope they'll notice
Smackdown 1000 was like three weeks ago
&gt; There is a bit of learning curve though That an understatement. WiX and Windows Installer in general is a nightmare. Hence why things like Squirrel Installer exist.
If you want to have a single installer, you have two options: Use WiX as someone else mentioned. Package the 3rd party MSI into a new MSI along with your custom DLLs. It sucks, it's a pain to manage and learn, deal with uninstall, patches, upgrades, versioning, blah blah blah. It is a huge pain. Or, you can write a console application and add the 3rd party MSI and your DLLs as embedded resources. When the console app runs, you read the resource stream for the MSI, write it to a temp location and call Process.Start(...) to run the installer. After that, do the same thing for your DLL, but copy it to the install directory. If the user can customize the install directory *and* the 3rd party installer is an MSI, then you can find the install directory path in the registry. Another alternative is to distribute the MSI and your custom DLL installer side by side, and run each individually.
I tried to submit a request for this sub but an admin was active less than a year ago.
I’d rather poke my eyes out with a hot stick than have to write another .msi installer.
[removed]
You know that using brain dumps is forbidden, right? The MCP exams are used to measure practical knowledge obtained by field experience, not lexical knowledge. This is the reason the questions are not made public and the answers are best guesses at best on these sites. Just a heads up. 
[removed]
AFAIK Blazor server side is part of asp.net core 3 and will be supported. 
I have currently been sent to an external client to do some VB.NET but I have always used C#. I can tell you that C# is far more matured. That doesn't mean VB.NET is bad, but if you want to stay ahead of the curve, C# is the way to go. A little tip, use code converters to convert C# to VB.NET and then have a look at it. It's far more efficient in teaching you VB.NET syntax, at least it was for me.
&gt; Buildalyzer lets you run MSBuild from your own code and returns information about the project. By default, it runs a [design-time build](https://daveaglick.com/posts/running-a-design-time-build-with-msbuild-apis) which is higher performance than a normal build because it doesn't actually try to compile the project. &gt; &gt;You can use it to perform analysis of MSBuild projects, get project properties, or create a Roslyn Workspace using [Buildalyzer.Workspaces](https://www.nuget.org/packages/Buildalyzer.Workspaces/). It runs MSBuild out-of-process and therefore should work anywhere, anytime, and on any platform you can build the project yourself manually on the command line. TLDR: In order for MSBuild to work with SDK-style projects, MSBuild needs SDK targets and metadata like the resolved source files, references, and project properties. Normaly you would need the compiler for that, but with this project you don't.
It’s still real to me, dammit. 
If you manage to get a favourable response I would love to help out too. Plenty of experience over in r/factorio.
I think Blazor has a better chance at a bright future than Bridge.NET, though.
Just my .02, but VB6 is still going to be around for several more years. And, like other have said, there's a lot of VB6 code still out there. I wouldn't specialize in it, but knowing how to get around in the code will help you.
As the host, type (localdb)\mssqllocaldb With a single \\ I made the mistake once, I wasn't able to connect because I copied it from my config, which has two \\\\
What type of collection is ParentItems? If it is IEnumerable&lt;T&gt;, then your foreach will have unpredictable results since you're not supposed to modify an IEnumerable via foreach (or at all, really). It should work if it is List&lt;ParentItems&gt;() though.
How did you contact them? They usually respond in a few hours.
[removed]
go to "Turn Windows features on or off" and enable .NET Framework 3.5
Just in mobile at the moment so will look into it further when I'm back on my PC. I keep on top of automod reports almost every day, but if it's removing things too much I'll look at dialing it back. 
Thanks for bringing this up - I had a look into it, and yeah, automod was being a bit heavy handed. There's a rule that removes posts from users with low karma that was added not long ago to deal to a bunch of spam that was occuring on the sub. I've dropped the min karma to just be positive at this point which should stop this issue occuring. If you see an increase in spam posts coming through let me know (report them) and we may need to reassess the rule (or add some ML, AI or some other acronym) 
Could you look into what happened to me? 
But hasLink.com is my favorite website.
Most C# code is easily converted to [VB.NET](https://VB.NET) by replacing all ";" with "", "//" with "'", and "var " with "dim " :)
I love the concept of serverless but it seems the performance cost of spinning up your function on a paid per use consumption plan might affect your choice of serverless or “always on” WebApi 
Mine was read an XML file describing shapes and then write the shape descriptions to the console. The test wanted the factory pattern implemented and the test had some subtle traps that seemed designed to trip someone up when they are already under pressure and nerves from the interview.
A lot of interviews ask you to do a kata these days.. check out e.g. www.codewars.com and you can practice them there.
Mine wasnt entirely focussed on .Net, but the code I wrote during an interview recently had to be unit tested. I wrote a class library for a few challenges they gave me, and demonstrated it working using unit tests.
Most of the time it has been verbal only and abstract like, "what are some of the security concerns you'd address if you were to write an auth system from scratch" but I've been asked to implement a queue with a couple quirks (prevents easily copying from the web) or asked to write what amounted to simple arithmetic to fulfill the premade unit tests. My favorite interview was with my current employer. I was asked to implement a feature in thier actual product. They had set the VM to a state before the feature existed, and we pair coded for a few hours with the employee writing unit tests for me to fulfill and telling me where to go to get variuos functionality. It was very low pressure, realistic to the workload, and no gotchas while still showing them I could write code. You might come across hard challenges full of tricks, but I believe those are a waste of time. I'd probably still accept a job if offered one, but they shouldn't artificially eliminate people who can't solve problems that aren't important to the company.
I once had to write a web scraper. They were surprised when I was done 20 minutes later.
Might want to look into an implementation using websockets?
I have previously written off Machine Learning as either useful for teaching computers how to play Mario, some new buzzword, or just too complex for me to implement to do anything useful. so never really got into it and.. Holy crap. Just had a hoon on the flower petals example and the amount of data entry this could save at work is crazy.
Just wondering is this a question about interview questions or an online cert? Im preparing for my own job interview atm
I think many people get a skewed impression of the real world out there when they read subs like this. Outside of consulting shops that sell programming, the vast majority of us are working at least partially on solutions that are a decade old.
Well the feature already existed. It's not like the interviewee was implementing something that was useful to the company. In my opinion that scenario is how interviews should be done 
Unfortunately it is difficult to handle it. That is why I posted the question. WCF itself was not enough.
I'm using [SimpleSOAPClient](https://github.com/gravity00/SimpleSOAPClient) to interact with a SOAP api. Not sure if it supports NONCE, but it might be worth a look. 
That's a shame! I'm unable to help then. If you want you could post an update when you got it to work; I'd be interested! Good luck! 
I plan to take an existing soap communication library from GitHub (found 2 decent ones), extend it and then create a pull request. It may be helpful in case somebody else will stumble upon the problem and I forget to update this post :)
I want to extend it. Currently it doesn't support it.
So which ones did you find :)?
I had an issue like this within netcore. I ended up writing my own IEndpointBehavior which contained an IClientMessageInspector to intercept and modify the messages coming in and out that were causing issues.
Follow Up: We are looking at K2 on premises and Umbraco Forms.
Any place to read up about it? I found https://github.com/dotnet/csharplang/issues/909 so far
I got fed up of the various offerings and solutions on the market, never mind the huge costs. Added an FTP server and created my own console app which reads a CSV file and passes the info into our system using a web service. Extremely easy to maintain and can customize everything to my exact needs, costs are next to nothing.
I just don't understand all the hype with Machine Learning. And I'm not talking only about C#, I'm talking about ML generally. It just seems like a new "cool" buzzword that is used over and over but still there is no really a huge focus on it. That being said, I don't know much about Machine Learning so I can't speak technically so all what I will do is just asking you, out of all websites you browse daily(except Google) which ones do really use Machine Learning as an important or even as a minor thing in their websites? It sure seems so fun to build an AI that learns from things around but I don't think it's worthy, I mean if I read right, it seems that it heavily depends on model trainings you do so the model can screw it up and will not be able to "learn" anything at all. It really seems so pointlessy hyped. It seems like one-shot thing more than how people hype it.
EDI needs to die...
I had to integrate with some old web service using ws-security some months ago.at this moment I have no access to the code, please send me a reminder on Monday and I will be happy to share my code with you
Working for free is the best way to judge whether you can actually do the work. And if you are worried that the company could constantly do this to get free labor, it would obviously take much more effort to do this than just have one of their existing employees do it. OP even mentioned there was another employee there with him while he did it. On top of that there would be the effort that HR and a manager put into getting the interview set up. 
We ended using a 3rd party company to handle all our EDI interactions This was mainly because there were so many different formats coming in They’d then drop that in a common format for us to consume Not ideal if you don’t want another cog to go wrong but I found their services very resilient 
&gt; EDI needs to die... I agree, but their are so many orgs that won't budge on moving from EDI to APIs, i.e. FedEx.
I want to do something similar to your idea with a SFTP server and a .NET console app. I just did not want to introduce another thing if there was already a solution out their. We intake 810s, 850s, etc. in X12 spec, with minor alterations based on the outside vendor.
&gt; We ended using a 3rd party company to handle all our EDI interactions Can you post who the 3rd part is or PM me their name? I've looked at Remedi in the past.
I've worked with BizTalk and wouldn't recommend it - Drag and drop programming blows, the schema editor was terrible, the deployment was a nightmare. If I have to work with integrations again, I'd rather write my own solution. Seriously.
We are a UK based company so not sure if it’s relevant but they were a great company to work with none the less. I haven’t had dealings with them for about 6 years now because our client ended up being merged into a larger entity and they dropped their library customers (who used EDI) The company is http://www.advancefirst.com
I've been writing software for an EDI service company for the last 6 months. You don't want to implement X12 or other invoicing standards yourself. There is a lot of logic around tracking messages, alerting and security. I've been looking into Azure Logic Apps lately that seems perfect for EDI stuff. You can install on-prem data gateway and hook triggers into filesystem or any database. There are a lot of steps available to process your message but if you'd like, you can write Azure Functions as steps. The cost is around 300$/month for most stuff but if you need heavy enterprise integrations like AS2 or SAP then you get it for 1000$/month. Also, if your company has office 365 then there is an office app called "Flow" thats the same thing minus Azure Functions but you can use HTTP step that can call an Azure Function. I recommend at least looking into it. It has really nice UI and you can actually see what's going on. My client, EDI company, usually gets a project to periodically move invoices from an on-prem system to some general invoicing web service. They do provide a GUI to build steps together but almost always they are requested to build the whole pipeline themselves. If you can provide a good access point and specs to an EDI partner, they can build better pipeline than you, with attention to details you might forget like common error handling.
I was gonna say BizTalk is built for this sort of thing, but it is horrible to work with. As the company I work for is quite far behind, we haven’t done much with Azure Logic Apps, which a lot of our BizTalk use probably fits. But there is an article about EDI Azure Logic Apps https://docs.microsoft.com/en-us/azure/logic-apps/logic-apps-scenario-edi-send-batch-messages
I ended up writing my own translator. It wasn’t as bad as I thought once I had the industries X12 standards. Mine just converts the x12 to CSV then imports in to our own database. Luckily our EDI is only one way as we just need it to read pricing catalogs, 
Yeah, it really is just... a dumpster fire. Half the time when our documents failed parsing, finding out why was so much more difficult than it should be because of shitty error messages. I wrote a better proof-of-concept in just a few hours, then used that to develop a parser/mapper for a couple random formats in a *tiny* fraction of the time it took to develop in BizTalk. It's ridiculous.
Very broad question. Which areas do you know (like backend, web front-end or mobile)? What are your interests outside of programming?
Only someone who doesn't understand it would say that. You probably have only had experience with shit services.
Thanks for the feedback everyone. Personally, I am not as active on Reddit as I used to be before, so I only check the sub every few days. But I will try to be more involved going forward. Also a few of you mentioned interest in being mods. I am open to that as well. I pinged the other mods about it, so hopefully we can get that going. If there are other suggestions, please feel free to speak up. 
Make a console app that prints "Hello, World!"
E.g., not i.e. I.e. is an abbreviation of latin _is est_ - which means _that is_. It is used when there is one, logical, substitution. Example usage: _It was the colour of a clear summer's day sky - i.e. blue._ E.g. is an abbreviation of Latin _exempli gratia_ - which means _for example._ It is used when they are many possible substitutions or examples. Examples usage: _Parenthood invokes many emotions, e.g. joy._
Don't feel bad, i know about even master's people who applied for programmer position without any clue about position and experience. So even if the interview looks like joke for you, it can easily filter that kind of people.
I've been using EDI for 20 years. It needs to die.
Using multiple threads... and by generating random letters then deciding if this one is what we're looking for... and fucking flames n stuff 
Thank you, I actually realized it wasn't too difficult to set up and got it working this week. I appreciate the info but yea that is exactly what I did. 
So I use async/await a fair bit but am not completely sure on the mechanics. &amp;#x200B; I asked a while back and was told categorically and repeatedly, that awaiting a method does \*not\* fire up a new thread. No background threads. &amp;#x200B; I'm only 4 minutes into this video and the first thing he is saying is, new thread spawns and does work, then returns to the main thread. &amp;#x200B; So what's the deal? &amp;#x200B; I was under the impression for something like a web service or database call, that the remote server is actually doing the work, so technically it could be called a new thread since it the work is being done on a completely different machine (probably). So my code can happily wait, then will carry on executing in a callback once the call completes. &amp;#x200B; But then how would it work for a long-running CPU heavy method in the same code base? (I'm also assuming a thread can only do 1 thing at once, so if it doesn't 'fire up a new thread' does awaiting it accomplish anything?) &amp;#x200B; &amp;#x200B;
I mean this was bad data. But yeah a small change in formats can take more time then people think, when it shouldn’t 
SimpleSOAPClient is nice for example ;)
Oops p8iuu
You are right. Web calls and database ops are callbacks usually, depends on how they are programmed (poor implementations use threads). CPU loads usually create a task (which in turn use a thread). They could not, but then they would run synchronously. 
&gt;So what's the deal? Tasks may or may not spin up a thread depending on various conditions and the nature of the code being run. &gt;I was under the impression for something like a web service or database call, that the remote server is actually doing the work, so technically it could be called a new thread since it the work is being done on a completely different machine (probably). So my code can happily wait, then will carry on executing in a callback once the call completes. That's not wrong, but the thing is that once you've got allocated a thread, it doesn't matter if it's doing work or just waiting, that thread is in use and eventually you'll run out of them. Tasks essentially allow the state of the code to be "snapshotted" and put into memory while it's waiting, so it's not blocking a thread just sitting there. Once data is returned, the execution state is restored, your code keeps running, then passes the result back to whatever called it. &gt;But then how would it work for a long-running CPU heavy method in the same code base? (I'm also assuming a thread can only do 1 thing at once, so if it doesn't 'fire up a new thread' does awaiting it accomplish anything?) This is a case where the execution would likely be moved to another thread, the calculations would be done, then the data passed back to the main thread.
I know more of the back end and my hobbies outside of programming usually consist of playing video games (ie: CSGO, Minecraft, stuff like that).
I'll certainly give this a look over. I find it kind of difficult finding code on GitHub that's related to something I want to learn, any tips in that regard? 
I thought Nancy was discontinued. :/
&gt; Additionally positional text fields are just... Crap. As someone who works with ACH files as well, I agree with this statement.
16:16 As he mentioned earlier, you shouldn't have async voids, which is what he's doing when he's awaitng the Action in his ICommand. Don't do this. Follow [Stephen Cleary's advice instead](https://msdn.microsoft.com/en-us/magazine/dn630647.aspx?f=255&amp;MSPPError=-2147217396) 
I definitely agree and trust me, seeing the horrible implementations of EDI drive me up the wall. But there just is not a solid replacement for what it provides. There are gonna be a lot of very intelligent people in this thread that think it's crap and that they know better. But the fact of the matter is that you only experience your own business and it may not be right for you, or your paying the wrong companies. Working in the industry and seeing the wide range of applications of EDI, I truly don't see a proper alternative. When I got my job I used to think the same thing, what is this company even doing? Why do we need this crap? But now I spend most of my time fixing hacked up jobs that people have put together for their company, not realising what's involved. Anyway I'm rambling now.
Agreed. But when you're looking at code coverage results and thinking "why isn't this method covered", it's because your design isn't conducive to covering that method via testing the functionality. Which begs the question, "why do I have this method".
If you can get away with that solution, then you didn't really need EDI in the first place.
A more accurate general statement about async/await is that it's not synonymous with multithreading/parallelism, that putting `async` on a method does not mean "run this on another thread", and that a logical async operation doesn't necessarily map to a specific, continuous parallel thread. Through a long game of telephone (and commonly by reading the title but not understanding the contents of Stephen Cleary's often shared ["There is no thread"](https://blog.stephencleary.com/2013/11/there-is-no-thread.html)) this has sometimes turned into more extreme statements like "async/await doesn't involve multithreading", which is false. I haven't watched all of it, but this specific presentation seems rather poor and uses incorrect or at least too simplified terminology. In the first example, speaking of "Thread 1" and "Thread 2" is just plain wrong. An async method like `WebClient.DownloadDataTaskAsync` is necessarily going to involve other threads. The important difference to synchronous code is that it doesn't involve one single "Thread 2" that is blocked the entire time until the operation to complete. Rather, the OS is going to send a signal to a waiting background thread whenever a connect/write/read operation is complete, a random thread from the thread pool is going to be woken up to run a section of the `WebClient`'s code which then processes the result of the operation (copy the partial response data to a larger buffer or whatever), the next async operation is set up (e.g. wait for the next part of the response), and the thread goes back to the pool to be reused by something else. Rinse, repeat until the entire download is complete. Downloading the full data from the URL might involve dozens of random threads, but each only for a short amount of time, inbetween longer periods where the threads can be used for other purposes while waiting for the network. After the entire `DownloadDataTaskAsync` is complete, the rest of the async method will be scheduled to be executed. If this code is part of e.g. a Windows Forms application, this may happen back on the original "Thread 1", but in other cases (e.g. ASP.NET Core) it may again borrow a random thread pool thread.
In a c# project you can use nuget package manager, which is similar to NPM, to install a package which provides support for json api. I've only seen a demo of it at work, so I don't know the name of the package, you'd have to Google for it, but the time to get up and running seemed to be 15 minutes to a couple hours, depending on your familiarity.
commit failures always present themselves in the form of an exception, there's no other method used. There is a situation where the DB transaction part is dead (e.g. through an exception/error) and the .NET side of the transaction is still alive. Internally in the DbTransaction code this means the .NET part of the transaction is a 'zombie' (it really calls itself so). It will throw if it detects itself in that state.
Use a 3rd party service, [BSWA](https://www.bswa.net). 
We use SPS
Not as far as I know? Admittedly I’ve not used it recently but it’s still very lightweight/elegant if that’s all that’s needed. My point was more to highlight that there are alternatives to the main frameworks that MS are pimping 
Bad bot
I meant xUnit
Ah thanks 
Try finding something regarding those games that needs to be made, something that you would use yourself. Or maybe take a look at Unity and make a game. It uses C# for scripting.
There ia not a magento substitute but take a look at Umbraco or aspnet zero. I work at a hoating company and i see a lot of people using them. Hope this helps. 
I've solved exactly the same problem and that's the post I used to do it, though I had to do significantly more than that to get it working. Wish I could give you better news, but you're on the right track. 
WCF has good support for SOAP itself the extension standards are an incompatible mess of pain and torment. This is true in every language though. 
What do you mean by "ensemble"? Could you share your code? Or idea what else did you do?
I have never seen more confusion, both among average developers and “experts” surrounding a subject than with “best practices” for .Net async/await. I don’t know how many different articles I’ve read on the topic, all with different opinions on even the simplest points. Also, I’m not an expert, but it’s my understanding that .ConfigureAwait(false) serves no function anymore if you’re using .Net Core, which seemed like an interesting bit of information to omit in a modern conference where .Net Core usage is on the rise.
Bruh it wasn’t a douche question, so it doesn’t require a douche response
Intersystems Ensemble, it's an enterprise integration suite that a bunch of companies used to SOA everything when that was the thing to do. It's SOAP implementation is, shall we say, interesting. My particular problem had to deal with WS-A as well so it was even more fun. In the end what I ended up having to do is get a working SOAP UI project from the entity hosting the service and just fiddle with the raw writes until the matched. The code in your link is the right path though. 
Thanks for that. I just finally read it. The old app stays... New sites can be built in.net core.
That's a little too broad. It's true that **ASP.NET Core** has no `SynchroniationContext` anymore and thus `ConfigureAwait(false)` generally has no effect in that environment, but any .NET Core library which may be used in other environments including WinForms/WPF/UWP (via .NET Core 3 "desktop packs"), third-party frameworks such as Avalonia, and of course anything targeting .NET Standard should still use `ConfigureAwait(false)` where appropriate.
Oh god COM. So happy i'm done with that
For real. The mass confusion is palpable. Also, to be pedantic, I **think** what you said about ConfigureAwait only applies to Asp.Net. UWP would still have a synchronization context. But don't take my word for it.
Assuming your needs are relative simple, you can take a look at something like [SimplCommerce](https://github.com/simplcommerce/SimplCommerce). 
That a Microsoft employee can turn up at a mainstream conference and provide misleading/incomplete/incorrect information and really bad advice is disappointing to say the least. Especially about a subject that is often misunderstood anyway. As others have said, anyone wanting to understand async/await should look up Stephen Cleary. He is pretty much the definitive source for all things async/await.
Interesting. Did you build it from scratch or use a pre-made template? I read the press release for PWA studio but couldn't find any real documentation about it.
I've used umbraco before but the ecommerce platform is fairly new and made by a single dev and the stability of umbraco is not great, there is agency that tried to recruit me once for a job specifically fixing clients upgrade issues. I don't think it's a viable alternative for Magento.
Have you worked with cXML or OCI? If so, how do those compare to EDI?
Wish I could explain this to our fortune 100 customer who demands EDI
I completely agree with you. I have been doing edi for a similar amount of time and while there have been awesome trading partners doing everything right there have been just as many that simply refuse to follow the rules. I get an email from a customer about 3 times a week because their document was rejected by my system. The trading partner is sending x12 data with unicode characters. The reading partners response is "deal with it". Not exactly the right response.
Maybe reach out to head hunting and placement firms. Perhaps they can shop your resume around and help you find something.
Where are your finding the jobs that you apply to
Tell me about, or they've added some new piece of data without telling anyone about in advance.
Maybe try not avoiding web development. Some experience of any kind is better than no experience. 
Mostly on LinkedIn.
Any experience is good experience. I would like to second this 100%. Get your foot in the door and prove yourself doing something, anything, and hopefully you’ll be able to find a path to something you enjoy, either with your current employer or another one.
Surely that would take months just to become competent at ASP.NET and have projects to prove it? Even then, my projects won't be very good because I'm just not a good front-end designer. I'd be willing to take an internship doing anything software development related, but spending months to prepare for potentially getting a ASP.NET internship just doesn't seem like an effective use of my time. It seems to me like my other skills should be more than enough for many of the .NET internships I apply for. Since I'm applying all around the country, I don't really have a shortage of internships to apply for. 
Might be, but none of the links actually work or have the SDK. Anyway, the SDK is not the problem anymore. [Missing project type is.](https://www.reddit.com/r/dotnet/comments/9vkh4g/net_35_activity_library_project_type_missing/) 
AFAIK that is the runtime, not SDK. But in any case, the SDK is not the problem anymore. [Missing project type is.](https://www.reddit.com/r/dotnet/comments/9vkh4g/net_35_activity_library_project_type_missing/)
AFAIK that is the runtime, not SDK. But in any case, the SDK is not the problem anymore. [Missing project type is.](https://www.reddit.com/r/dotnet/comments/9vkh4g/net_35_activity_library_project_type_missing/)
The 2 most prominent examples for me are NopCommerce (used in one project) and Umbraco with a choice of several commerce plugins. 
Try to use ODP.NET on .NET Core, just as a basic example. Not the Managed ODP.Net released this year, one year later, which only provides a subset of the driver features, the actual ODP.NET that targets .NET Framework and has 1:1 feature parity with their JDBC driver. There are plenty of other vendors doing the same thing currently.
+1 for this, I tried an implementation in Merchello but ended up dropping it in favour of just implementing a shopify store. I think Merchello showed promise but it would have involved a bit more effort than I realised for a small side project. There are alternatives for umbraco like ucommerce and teacommerce. I don’t have any experience of these and iirc they both have a fee associated with them.
Ok. Could be that both your problems are a result of not installing the following module in Visual Studio: 1. During installation, go to the "Individual Components" tab. 2. Under the ".NET" section choose ".NET Framework 3.5 Developer Tools".
I'm in the same boat but have gone with Magento. It's simply way better than anything .NET has to offer. Similar with WordPress as a CMS. I prefer to code in C# but not choosing the best framework for the job because I prefer another language seems the wrong technical decision to me. I just asked myself this question: six months down the line and I get asked for a modification which is it going to be easier to do - a framework with a rich eco system that likely has a plugin for the job I can use out the box or one where I'll likely to have to write everything myself?
I think if you have large amount of categories and products, you will notice the performance issue. This is mostly because of cache I think (not sure), when one product/category updates, the whole catalog is being refreshed. 
Such a thing can definitely work. Going all the way back to the turn of the century, I was doing something like this with XSL/XSLT. MSXML supported extension functions, which could be written in JavaScript and invoked from the client-supplied XSLT. And the built-in `document()` function could be used to retrieve additional XML data from an HTTP endpoint or server-located file during processing. Once all the pieces were in place, I could build most business logic into an XSLT that was passed to the server along with an XML input document, and it could do any action and return anything you liked. Replace the XML with JSON, the XSLT with Lizzie, and MSXML with your C# execution engine, and you're talking about essentially the same thing.
I agree - I was probably just assuming System.Linq was already there, but it wasn't.
Oh gah yes. I have this one trading partner who is constantly changing there mapping. The best part is they dont inform anyone. They just send my customer chargebacks and the customer has to inquire as to why. 
I guess none.
A simple http API replaces EDI. You haven't seen a sufficient replacement because EDI is EDI for EDI's sake. I support everything that EDI covers _without_ EDI and life is a lot simpler. You accuse me of only experiencing "my own business" without a second thought that it is you that is the one only thinking of their own little niche that is EDI. I'm sorry, but that is the textbook verbage of a dinosaur.
Good point. I also need this to speed up coding new features that affect all layers. 
When you have 20 projects waiting for you to complete, you need every trick you can to deliver on time. Instead of creating 20 NuGet projects and unit testing everything, you can instead code everything with project references up front. Once the dust begins to settle, you can then convert to NuGet. The large solution can break up at that point.
Without a second thought lmao. I think about it EVERYDAY. I work for an EDI solution provider, trust me when I say I'm 100% confident you don't know what you're talking about. An API lmao, you've barely scratched the surface mate.
It's not the flagship GUI product. So it might as well be.
Did you try the obvious/naïve solution of just `Add`ing all of them and letting it figure out all this stuff for itself? I didn't think it started instantiating any dependencies until they were needed.
What exactly is the problem with registering ClassC as a dependency? I can register is just fine: `interface IClassA { }` `class ClassA : IClassA { }` `interface IClassB { }` `class ClassB : IClassB { }` `class ClassC` `{` `public ClassC(IClassA a, IClassB b)` `{` `}` `}` `var provider = new ServiceCollection()` `.AddSingleton&lt;IClassA, ClassA&gt;()` `.AddSingleton&lt;IClassB, ClassB&gt;()` `.AddSingleton&lt;ClassC&gt;()` `.BuildServiceProvider();` `var c = provider.GetRequiredService&lt;ClassC&gt;();`
Thanks for your input. I'm intending to get college credit for this intenship. My major itself had 4-5 classes that focused a lot on programming. My computer science minor included anther 3-4. The internships I'm pursuing aren't radically different from what I learned in school. There shouldn't really be any issue with this, right? I'm taking advice from [The Complete Software Developer's Career Guide](https://www.amazon.com/Complete-Software-Developers-Career-Guide-ebook/dp/B073X6GNJ1), where he says to specialize in something. I've tried sending in lots of resumes as more of a "jack of all trades", but that didn't seem to be effective either. I changed up my strategy 2 months ago by focusing on .NET and widening my search to all around the country rather than just the state. I still have a few other languages and frameworks on my resume, such as Ruby, C++, JavaScript, jQuery, and SQL. I just haven't gone deep enough into the different frameworks for Ruby, C++, and JavaScript to really focus on them, like I have for .NET. 
And what would you do if \`ClassC\` had some constructor arguments that were not services? &amp;#x200B; So \`\`\`cs Class C { public ClassC(IClassA a, IClassB b, int someConfiguration) { } } \`\`\` The approach I see online is to do \`\`\`cs provider.AddTransient&lt;IClassC&gt;(x =&gt; { return new ClassC( new ClassA(), new ClassB(), 100 ); }); \`\`\` But now with \`ClassA\` and \`ClassB\`, I am not using my service provider and I cannot as I have still not built my service provider. For this simple example I might be able to just create them inline like above but it gets messy for complicated examples (say ClassA and Class B also took some additional ctor parameters). &amp;#x200B; &amp;#x200B; &amp;#x200B;
You would create a factory around the service that needs both service dependencies and parametric arguments. The factory then has a constructor with the services as arguments and methods that take the non-service arguments to produce the final service resolution.
There should be overloads of `AddXxxxx` that accept a lambda argument that receives the final service provider as an argument. Then in the lambda you have access to your services to do what you need to no.
Configuration handling is a separate issue. You can use `Microsoft.Extensions.Options.ConfigurationExtensions` package and wrap your options in `IOptions`, that's how Microsoft advises to use configuration https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/options?view=aspnetcore-2.1. Or without that, register your options wrapper class in `ServiceCollection` and inject the same way
You're right, thse turn into *unit* tests. Some argue DB *unit* tests aren't as valuable as integration tests. Also if you're doing more than you should in a unit of work that includes complex logic and integration points, you're likely breaking SOLID somewhere, and "mocking" the integrations masks a fact that you're not decomposed enough. So at what point does DB *unit* tests yield value? I've often avoided testing ORM layers and mock a DAL to prove given a stable DB return with expected inputs yields expected results, without needing an actual DB to execute the test.
&gt; I work for an EDI solution provider Perfectly demonstrating why you can't see the woods for the trees.
This is valuable information thanks! You said what I needed to say at a previous job, but did not have the way to explain it.
I'm searching for internship placement firms right now. All I'm finding is unprofessional-looking firms, firms that focus on abroad internships, firms based in other countries, or firms that focus on internships for things other than software development. I don't understand why it's so hard for me to find one. Can you point me in the right direction? I think this is worth a shot. Or should I just use a regular placement firm that works with software developers? Do most of them also help with internships? Thanks in advance.
I’ve never heard of an internship placement firm. And frankly my company doesn’t look for interns. If your schedule permits, I’d suggest just looking for a junior or entry lever developer position. 
Of course... if only ever calling that constructor with 100 is his thing then that would suffice. But s/he expressed the need for more complex scenarios. Which isn't covered unless you want to name and list all possible scenarios.
I would have gone for a web project using Web API 2.0 for the web services and then using HTML5 and JS for the presentation layer, but this is interesting too.
Not much, but I look into WiX. Thanks
I like the console application approach. The idea is just to install everything in an easy way for all our technically challenge employees. :)
Will look into! Thanks!
1. What is your target system? UWP is pretty \*specific\*. You may also consider using old WinForms or WPF. But how do you want to design the interface between the gui and the console app? 2. With a web gui over a normal browser, you have various options. A [simple web server](http://nancyfx.org/) or for bigger projects [ASP.NET](https://docs.microsoft.com/en-us/aspnet/core/index?view=aspnetcore-2.1) be an option. Or you use electron as a front-end app, which communicates with your console app through whatever you want. So: is a browser sufficient or should your app be accessible through a standalone app? 3. Performance wise is Web Tech in every configuration always worse than a native gui (relatively spoken). But the actual experienced performance depends on the implementation. (e.g. electron is quite ressource heavy and needs some time to load, but is often sufficient enough)
When you get dozens of services injecting each one into the other becomes unmanageable. I use a service manifest class and inject that: public class ServiceManifest : IServiceManifest { public IServiceA ServiceA {get;set;} public IServiceB ServiceB {get;set;} public IServiceC ServiceC {get;set;} } public class ServiceA : IServiceA { public ServiceA(IServiceManifest serviceManifest) { } public void UseServiceB() { var x = serviceManifest.ServiceB.DoSomething(); } public void UseServiceC() { var x = serviceManifest.ServiceC.DoSomething(); } } 
Wanna PM me your resume?
Console rpg. It's always a console rpg! Great for teaching oo principles and the main language features.
When it's a console app you can use Owin to create a web server listening on a port. Really straight forward to do and something I've seen done in a project I inherited. You debug it as a console app, but it can also be installed (and is intended in production to be) as a windows service.
You're a fucking idiot.
yes, NACHA should rot next to EDI; whomever was the original sales rep for EDI to Fortune 2000, and more, companies should be commended.... along with the rep that sells CVS their receipt paper....
Superb discussion. Good luck staying relevant.
I can't really fathom how you think you would know more about a subject than someone who works in the industry. I work with intelligent IT staff all day that know much more about dot net and system admin than me, but trust me, every single one of them eventually thanks me profusely for actually explaining what EDI is for. I know you don't get it, because there is no "it's irrelevant, outdated" to a conversation. You are just flat out wrong. Sorry tour feelings are hurt and you got ripped off by a shit company, should have shopped around and done your research.
winforms
Off the top of my head the only way would be to manually retrieve the rectangle object of all these panels every "tick" and manually collision test them all. You have to do 2^n computations every tick though.
Your post is confusing...
In .NET Core they abandoned the Web Api/MVC segregation, so the MVC controllers are used regardless of whether they return rendered HTML or just HTTP status codes+JSON-data. A full MVC application will return server-side rendered razor views, indicated by ```return View()``` in the controller action, whereas an API-only MVC application will only return the appropriate HTTP response code, and if relevant JSON-serialized response objects. If you want to opt out of the view/razor dependencies and middleware of MVC, you can use ```services.AddMvcCore()``` instead of ```services.AddMvc()``` in ```Startup.ConfigureServices(...)``` 
Yep I think that's the only way. You'd probably need to create rectangles for each panel and use the IntersectsWith to detect the collision. https://docs.microsoft.com/en-us/dotnet/api/system.drawing.rectangle.intersectswith?redirectedfrom=MSDN&amp;view=netframework-4.7.2\#System\_Drawing\_Rectangle\_IntersectsWith\_System\_Drawing\_Rectangle\_ 
&gt; When you get dozens of services injecting each one into the other becomes unmanageable. I use a service manifest class and inject that: From my understanding all your doing there is dealing with constructor over injection by creating a service locator, bonus points if this container is injected via a DI container.
Hey, was reading through your code and I couldn't understand something: Why did you need to use the assembly info to read the .txt file when loading the boards?
You specifically mention HTML and JavaScript and there have been some others who mention frameworks around that. I will throw out a couple of other 'universal' .net UI frameworks. First is Xamarin forms, if you are thinking uwp. I would at least take a look at building a Xamarin forms app. It at least has the possibility of making your .net code cross platform (currently has ios, Android,uwp, tizen, some wpf). It can also be run in a browser using Frank Kruger's ooui) Second kind of tangential, but have you looked at web assembly and blazor? They might make bringing your .net code into a browser easier. Not sure it this is a business or personal app? Lots of factors go into choosing what technologies are stable and applicable.
Not in this case. Everyone gets the same feature. It's a feature that exists in the end product, but it's used because it's well understood and also realistic to let you know whether you'll like working on the project. Also, it's the last interview, so it isn't a waste of time unless you bomb it. I dislike missing work for an interview, but I had been laid off when I interviewed, so it didn't bother me at that time.
That's an interesting approach, haven't used owin ever.
There's /r/blazor.
The size of the company sending you the EDI might mean you have no choice...
Yup, I second this... The EDI team was larger than the entire web team. 😐
Whats the angular code you are calling the API with? What is your method on the controller? '&lt;' being sent over sounds like the api endpoint is receiving some sort of HTML response instead of JSON
Try https://github.com/VahidN/GitHubFolderDownloader
All boards are fixed amd because you don't hardcode data I put everthing in a txt file + it's embedded to prevent accidential change. The txt file is basically this image in textform: https://gamefaqs.gamespot.com/wii/960544-new-super-mario-bros-wii/faqs/58356?raw=1
Thank you! I know my question wasnt clear but I was hoping to get this answer. Im very new to asp.net and web apps in general. 
We recently ported a bunch of internal common libraries to .NET Core. It's been pretty easy and smooth, except some crypto utilities are missing from the API. But I do understand the reasons for removing them. All in all, a pretty good experience
&gt; We recently ported a bunch of internal common libraries to .NET Core. For libraries you should generally prefer .NET Standard. Otherwise you won't be able to use them from your existing .NET projects anymore.
which would only work if the styles are deployed with the application. That might not be the brightest idea
I think that what Brandon is saying, is that if you have to make a synchronous call, then use GetAwaiter() instead of .Wait() or .Result(). If you can call asynchronously, then of course go ahead with await. I think both Brandon and Stephen tell us the same thing here.
oh yeah, because you copied from a string which needed to escape the backslash but really the string only has one slash in it and the text box you're typing into probably handles that for you. I'd try this tip here.
Might be able to run faster giving that ; \`\`\` panel1.IntersectWith(parnel2) == panel2.IntersectWith(panel1) \`\`\`
It does. I'm just bad at remembering combinational formulas after a certain time of day.
 Do you know what service locator is? What part of the code above fits the pattern? Please copy/paste into your reply, thx. 
&gt;I would like to know, how many of you fellow .NET developers actually use full SPA applications and is something like this useful? Not too often tbh, and frankly I'm kinda holding out and waiting to see what happens with blazor before I break down and throw my full support behind react/vue/angular/flavor of the month.
I think HTML/CSS is definitely a good approach to a "universal" UI because most platforms already support it. Node.JS and Electron are the popular choices for the desktop when writing an HTML/CSS UI. Node.JS has web server addons (I use Express.JS) which allow you to access the UI with a web browser like a normal website, locally or remotely if you want, while Electron focuses on providing something more like a normal desktop experience, just coded in HTML/CSS. Electron is used in a bunch of applications like Discord. Electron is based on Node.JS. Both have a JavaScript-based backend (which you will need to use since the frontend has normal web browser restrictions placed on the JS code). Of course this is /r/dotnet and so it might be interesting to explore a .NET based client rather than JS. After all having web browser restrictions is no fun as it means you'll be marshalling back and forth between the HTML frontend, the Node.JS backend, AND your code application backend. There are a few .NET based plugins for embedding a web browser into your application. I believe MS is going to bring some new winform and WPF controls to .NET in the near future which I believe includes the ability to embed Edge (IIRC) but right now you have the outdated IE plugin built in. But there are third-party plugins for Firefox and Chrome at varying levels of abandonment and/or support. My current favorite is CefSharp, which allows you to embed a Chrome browser in your app. You can use it to embed your UI and the JS code can talk to your .NET application. You might be interested in how I am planning to use it. My workplace creates Unity projects (not games) and we embed a lot of text in them. Our writers have wanted lots of text formatting options but Unity's default support is very sparse. TextMesh Pro is a plugin which provides lots of text formatting but it is missing a lot of basic ones like bullet points. So I thought, well HTML/CSS has all the formatting we'd ever need... so I got a CEF plugin for Unity. We have a .NET app we give the writers for their data entry so I got CefSharp for .NET. So in theory they can get a perfect preview of their text as they write it. And in fact you can put Chrome into an "edit" mode which allows direct text entry and formatting commands. So you have a WYSIWYG editor with a little work. Anyway, either of those options are restricted in platform to Windows/Mac/Linux. If you want to go further you'd probably just want to put up a website and allow remote access from mobile etc (I think, for some apps at least, this is the best use case for mobile anyway, though you could embed a WebView into an Android app and reuse HTML/CSS/JS content as well in a similar manner I suppose).
First off let me say Winforms isn't really meant to do what it sounds like you're doing. I would suggest looking into Unity. It's a game engine with a .NET backend so you already have a jump start on learning how to code in it. It has built in collision logic already and a lot more things you'll probably need. With that out of the way, you can check the .Bounds property of a Control. It's a Rectangle defining the bounds relative to sibling controls. Rectangle has an .Intersect method which allows you to determine if two rectangles are intersecting and where (you'll get an empty rectangle if they aren't).
This is useful for me right now because I'm creating a similar app, only with a few changes in the stack. I'll be sure to look at this for inspo.
So I do something similar. I just drop in the Vue cdn and build mini spa's in my razor pages. And if you write your javascript the old school way, this works perfectly in IE11.
I had a similar problem. I didn't realize there even was a way to pass parameters into the constructor, so I figured out a different way: services.AddSingleton&lt;MyClass&gt;(); services.Configure&lt;MyOptions&gt;(options =&gt; { options.someConfiguration = 10; }); /* ... */ public class MyOptions { public int someConfiguration { get; set; } } public class MyClass : IHostedService { public MyClass(IOptions&lt;MyOptions&gt; options) { int someConfiguration = options.someConfiguration; /* Do whatever you were doing before. */ } }
This is great. There are hardly any examples of multi-page applications with Webpack and a front-end framework. This is useful for me right now because I'm creating a similar app, only with a few changes in the stack. I'll look at this for inspo.
Generally you should be thinking the other way around... you usually want to find some need for some program and then code it, rather than searching for something to code. One thing you can do is ask yourself if there's something you do often on your PC you could automate. I myself made a screenshot tool sort of like the snipping tool back in the XP days before MS made theirs. Mine automatically uploaded screenshots via SFTP and put the HTTP URL on the clipboard for me to paste. Other apps I've made with this guideline are a game/mod launcher for the Dark Forces/Jedi Knight games and a portable taskbar/start menu replacement you can install on a thumb drive to give you easy access to any other apps you have on there.
This is pretty much the sort of apps that pop up on r/programmerhumor
A batch script can be your installer if you want. Copying files around is pretty easy to do once you know how.
I think we are missing some info here. Can you clarify? 1. Do you already have an existing installer which does not include these DLLs? 2. If so, do you have the source for the installer? Can you modify it to include the DLLs? If you do NOT have an installer, you can just make one and include the DLLs. This is trivial to do with NSIS, you can bundle whatever you want (up to 2gb I think). If you have an installer and can't modify it, you can write an NSIS installer which wraps the existing installer and silently installs it, and copies the DLLs afterwards. The tricky part is figuring out the best way to interface with the other installer from NSIS (if possible you don't want to have the user put in the same install path twice, might as well have NSIS give it to the other installer directly). tl;dr you shouldn't need to make a batch file AND an installer, making one or the other should be sufficient on its own.
It is still supported for now but who knows if this will last. Personally I feel there are language constructs (such as not having OPTION STRICT/EXPLICIT on by default) which encourage sloppy/poor code. I have a coworker who codes in VB.NET. He does not use either of those options and does things like. Control.Tag.someproperty.someproperty.someproperty. There is no compiler time checking on those things which turns them into runtime errors. C# is more strict and will stop you from writing code like that, forcing to to cast the object on .Tag (.Tag returns an object after all) to a more precise type so it can tell if .someproperty actually exists.
Ok, gr8! I am glad this can help you. I intend to further improve this solution as this is the initial version but I was lacking the feedback if something like this is even useful to someone.
It works in IE11, you are welcome to try it! I am using babel-loader for this. Of course, I agree with you that you can. What I meant to say is that I love .vue files and that + typescript is something I would be missing with this. But if it works for you, then great!
I'm not sure what to tell you : https://msdn.microsoft.com/en-us/library/hh944521(v=vs.118).aspx
I built something like that, however I mostly use it with ChakraCore and Vue SSR.
"Flavor of the month" is maybe a little exaggerated. React was released in 2013, vue 2013 as well and angular in 2010.
Sounds like you are still using WebForms (aspx) pages. A more modern stack would be creating a RESTful web service using ASP.NET Core and using a JavaScript front end implemented in something like Angular or Vue.
I would say MVC .net core with razor or some other server side html generator is the modern way of doing it. You already see this with the MEAN stack and the comparable thing in the .net world would be mvc and razor.
MS is pushing [ASP.NET](https://ASP.NET) Core with Razor Pages. MVC is an option, instead of Razor Pages, but Razor Pages is the default.
Seems like you've had a lot of options thrown at you. It depends on the application but there is only 1 right way to do this if you want to use html/js. That is using a web api. Its really simple to convert a console app to a web api. Your console app gets replaced with a web process. Your javascript triggers your api endpoints which executes the code your console app used too.
So many overly-complicated suggestions. Just use javascript.
The problem isn't opening PDFs, it's displaying the PDF files inside my program. What I'm looking for is some way to open the PDF and display it as a XAML element. Thank you for your suggestion, though.
I work for a global technology company that specializes in integration and has been doing EDI integration for more than 40 years. Very familiar with Sterling, BizTalk and other market players. Happy to have a conversation if you'd like. Take a look at formal reviews on a site like [G2Crowd.com](https://G2Crowd.com) PM me if interested further. 
WebView worked good for me years ago. Now I‘m using DevExpressWPF, but it‘s not free.
will be best to use sort of a library. There are free and paid ones. You can write your own too :) From paid I recommend Aspose, free will be ITextSharp
I am pretty sure DataGrid works exactly likes recyclerview
So, I'm gonna be "that guy" and ask: why do you want to do this, as opposed to just letting the OS/user pick the appropriate app? That's by far the most common way and also arguably better.
Core 2.1 and Razor.
Tbh that's not funniest program to make. It sounds stupid but you rly need to learn to synchro those threads :P
Look around you. As Bigweld said, "see a need fill a need".
I cannot remember the details, but you may have to enable it with some properties and you certainly must make sure the DataGrid is item scrolling and not pixel scrolling (yet another property to set).
&gt;“More than half of you use the blue theme,” so screw you, we’re changing it. When will Microsoft learn that their arrogance is what gets it into trouble? Remember when some idiot though colorless icons and ALL CAPS were awesome? History is repeating itself. Isn't that when they removed the blue and shipped with a shitty light theme. I remember using an icon patcher and them to get the blue theme back and have icons. Seriously, they could just add the mauve theme and leave Blue alone.
Based on the prompt, I need the ability to gather data about the user's activity inside the PDF, such as time spent and pages read. While I'm sure there may be workarounds to get this data from Adobe Reader, it would be much easier to be able to do it all from within WPF via timers and gathering data about how far in the PDF the user has scrolled. It also is highly desirable for the user experience to allow the user to pick up where they left off when closing and reopening the program, which I imagine would be fairly easy to implement in WPF.
Virtualization is enabled by default - from docs
The blue theme is atrocious. I don’t want to stare at a purple screen all day... Why not just add it as an option and not jack with the blue we all obviously prefer. 
Smart of Microsoft to invest in another icon redesign. Truly revolutionary. 
that was waaaay to much time talking about the vs icon. holy cow, it looks a *little* different! millions of devs across the world rejoice. i appreciate collapsing the file menu into window border though. i prefer no toolbars or anything to help maximize screen real estate, and every little bit helps when you're mobile on a 13 inch screen. 
what problems do you have? i find visual studio's search to be really good.
Looks good! Looking forward to see what else is new!
Let's hope it has some fixes for the Error List issues...
I’ve switched to VS Code and will never look back.
As long as it isn't built on node I'm good. JavaScript is a cancer masquerading as a panacea.
You just know they spend hundreds of hours designing logos, discussing alternatives, having a focus group pick which they prefer.
iTextSharp is for programmatically manipulating PDFs; it is a port of a Java library so I doubt it includes any functionality like that. However it does seem to fully cover the PDF format. In theory you could make a PDF viewer on top of it. That is probably way outside the scope of what OP wants to do though.
Unless there is an existing library that does exactly what you need, you might want to look into trying to convert the PDFs to an open format which will be easier to embed and collect metrics on. PDF suffers from vendor lock-in so you will find coding applications to utilize PDFs will be difficult and/or expensive.
This is literally the top post of the sub currently.
I'm using MigraDoc to create and show PDFs in WPF
The DevExpress web designer work very good, pu should try it. 
&gt; &gt; with a crapty light theme. &gt; &gt; first of all how dar e you Your comment is now pure.
To clarify, I mean the "find in files" for visual studio. Visual Studio: https://i.imgur.com/F6miAI0.png Rider: https://i.imgur.com/2fII1Sh.png
To clarify, I mean the "find in files" for visual studio. See for yourself! Visual Studio: https://i.imgur.com/2desH5E.png Rider: https://i.imgur.com/2fII1Sh.png
TBF, its a pretty good icon.
Thanks
What?
I said, "NO MENTION OF A SUPPORTED DARK THEME..."
Visual Studio has had a supported dark theme for ages. SMSS on the other hand...
Yes I think so. You should be able to run the msi installer "silently" and pass in a path ($INSTDIR in NSIS will contain the path the user enters for install) using switches to msiexec.exe (the program which handles all MSI files). You can run msiexec /? from a run dialog to see how to use msiexec to do things like install MSIs silently.
Thanks. Will check tomorrow
lol. I thought his thanks was passive aggressive. But that makes more sense.
I agree, we needed 7 paragraphs to fully understand the significance of this revolutionary redesign that required them to make a new release of visual studio.
I am sure there are plenty of code samples for calling an MSI installer as well so you should definitely search around. You can probably find an existing script to work off of.
There's a couple problems you've got to solve with EDI. **Data transport** Regardless of what's in your documents, you need a way to send and receive documents with other EDI users. There's a few common approaches. - EDI [VAN](https://www.edibasics.com/types-of-edi/edi-via-van/)s are pretty common with smaller shops because they might not have the necessary IT staff to administer and secure their own servers. Easier entry, but spendier and occasionally obtuse. - Vendor-specific solutions - Big vendors like Walmart and Amazon may dictate how you exchange documents with them. They won't care if you don't like it. - Self-managed servers - Run your own SFTP server. Maybe make an API and some webhooks for it if you're feeling adventurous. Don't forget to plan strategies for downtime, maintenance, etc. **Document parsing and building** Parsing the various different grammars (and versions of grammars) is your next step. Big vendors will mandate formats and versions, as well as other specifics. These may conflict. And the more options you handle, the bigger your testing matrix. And some vendors/customers might not have much control over their output format. It depends on what they're using. VANs can handle this for you, but it might be more fragile than seems sensible. Some have intermediate formats that you can use. **Data mapping** Once you've got your EDI document parsed, you need to map it to whatever data store you've got. This could be a big ERP system, or you might have something smaller. Some solutions have existing ERP mapping software. This might work for you, or you might have to replace it depending on your workflow and requirements. Keep in mind that you might have to make several mappings and pipelines depending on who you exchange documents with. EDI provides lots of options, but that also means that there's multiple ways to send the same data. And some vendors or customers may use fields that others don't. Different industries will vary, too. VANs might be able to make adjustments for data mapping, but be careful to avoid maintaining mapping tables unless they've got a good solution for automated updating. It's usually easier to map when you're on the server that gets the output. My condolences if you're using Quickbooks with its sloppy data. It amazes me how the UI is so intuitive to so many people with such terrible implementation choices.
I'm hoping the collapsed menu bar is an option. I often have multiple visual studies open, with different projects, and I like being able to look up at the top to double check that I have the correct one active easily.
I'm assuming you mean SSMS, and they have also had a dark theme from every version after 2012 (and 2012 has a rough one, but you have to force it in through a config change and have the UI is still white lol)
I don't get all the complaining. People understand that a product team is more than just a couple of neckbeard devs writing code right? There are designers and artists and UX people and studies done on these things. All of this makes it way to program managers who make calls based on this data. Those requirements are then developed. It's not like the entire dev team focused on purely an icon change. It's like when everyone complains about cosmetics in games that get added when there are stability issues to the game it self. It's not like the artists are going to be the ones fixing the issues but they still need a job to do and have a reason to do it. 
I agree, don't know why they don't finish it and why it doesn't match the rest of their dark themes (blood red for text literals is an interesting choice...) But hey it's something :P
Thanks I hate it
It is not a service locator in any form or fashion. Not almost. &gt; all you've done is apply deodorant to a code smell What code smell would that be? &gt; arguably made things worse Arguably? I don't see your argument anywhere. What things? And how have I made them worse? &gt; as you've added extra complexity A class with dumb properties? Boggles the mind? &gt; for little to no architectural gain. How can you possibly know this to be true? Please give yourself some credibility and post something that accomplishes the same objective and demonstrates "architectural gain". &gt; there's no guarantee that a services exists at runtime either as it's entirely possible for it to be null. You are grasping. You can do better. There is no guarantee that the world is not going to explode in the next ten seconds. Having said that my DI container has not failed me yet. &gt; i hope those setters in the manifest are a result of you just being on auto pilot. Good point. They are the result of me posting psudocode. &gt; The container should be immutable. What container would that be? It's a class. If there is anything I'm guilty of it is a violation of [the law of Demeter](https://en.wikipedia.org/wiki/Law_of_Demeter) but I'll gladly take a beating for that since this pattern has proven useful beyond my greatest expectations. 
Blazors server side rendering model was announced to be launched with core 3.0 as razor components during dotnet conf a few months back. I still think what you have here is useful in the interim, but my money is on blazor long term.
&gt; This means that the types required to use these features won’t be available when you target C# 8.0 to .NET Framework 4.8. So .net framework is officially dead. 
The UX/UI team responsible for the VS icon are creating a solution in search of a problem; whereas moar neckbeards could fix actual problems in the product that need solutions. If I was staffing the project, I'd prioritize a team of developers to fix bugs over a team of artists to redesign the product icon (again). If they're spending this much time on a blog post dedicated to icon design, just imagine how much time they're spending on it internally.
I don't see an issue why Async Streams and Indexes can't be added as compatibility nuget package (like System.ValueTuple) for non-netstandard2.1 runtimes. 
They probably could but MS is putting framework on the path to legacy
People aren't criticizing the changes, they're criticizing what the Visual Studio team thought were the most important things to talk about in this initial announcement. I cannot speak for others but for me responsiveness, and micro-freezes are top of my list by a country mile and have remained top of the list for at least the last two major releases with no major improvements in sight. These days I'm genuinely watching VS Code closely to see if I can switch. I just need native .Net Core support (inc. full csproj/sln support), Codelens, and a handful of other niceties. For modern web development using MVC, Visual Studio is pretty bloated. Nobody is dragging/dropping, using a modeler, or the integrated server explorer anymore. It is ten tons of tool for a one pound job. A lot of JS is already done in VS Code and a npm toolchain. 
They are going to assign an entire department to it next time, and write a book about it. The whole process will be documented on github, along with the current icon. People will finally be able to solve the real problems they face before starting the application. The countless hours you spent staring at that icon, having it fail to inspire you to be productive, and get started will finally be at an end. 
Yeah we wouldn't want Visual Studio to start being laggy and to consume an excessive amount of resources... Oh... 
I wish they'd open-source the icon on github so the community can contribute.
I understand your points. The problem is that in real world projects of this scale the decisions made already have this documentation done to defend a decision or move it along.none of these decisions are made lightly. You would be amazed the user studies that happen in simple icon changes or simple experience changes that are then experimented with on small groups and larger groups and progressively rolled out to full retail populations. The differences can be scored all over with successfulness metrics for areas that don't even have to do with the product which is being changed. For example, any small experiment done on a Microsoft App for Windows will probably also get judged on how Windows usage overall was impacted from such a small change. In that case you are talking hundreds of millions of devices. As far as the problem statement goes. I worked on a team where at one point our data telemetry scripting language would only work in VS 2013 while our visualization system would only work in 2015. This was not a bug with VS but rather that two different teams wrote two different extensions without working together. There are still many things like this unfortunately. Source: I am a developer at a large software company that is currently working on running experiments for a major product. 
It depends how low your standards are. The results are essentially raw console output, there's no results integration with Solution Explorer at all, no results history, searching in just one file type is obnoxious, it keeps randomly switching context (e.g. you selected a single word? I've now switched your search context to From Selection instead of From Document or From Project), it supports only one dialect of RegX, nothing akin to Notepad++'s "Extended" (\\r\\n\\t, etc), etc. 
I see you’re a man of taste.
You forgot multiplatfom support... The only reason we use windows in our devs envs is vs2017
Whens the last time you tried vscode? Im using it on ubuntu to do Core 2.1 and it works a treat.
.... i already miss click vsc enough as is 😔!! 
Why the fuck were you downvoted
Are you hand editing csproj/sln files or is there an extension that offers near native support? 
True, but at least now they've actually said it. (Or at least come as close to actually saying it as they can. Still waiting for the official notice that Silverlight isn't dead.)
Me: let's hope they are working on improving Git support Microsoft: We hear you, devs. We have worked to death to give you a new VS icon. 
As a colorblind, this is so annoying. 
Get the full overview of how to implement health checks with ASP.NET Core 2.2. Health checks can help you monitor your websites and their dependencies. 
There are several open source wrappers around pdfium, I've written my own (very simple) viewer using one of those recently. Downsite is that a page has to be rendered as a single bitmap. If you don't need to zoom in very close that shouldn't be a show stopper though. 
If you are building a website, consider static file generator.
Thanks again for putting it out. Appreciate your awesomeness
Event better, they continue to work on "records" (https://github.com/dotnet/csharplang/blob/master/meetings/2018/LDM-2018-10-22.md) 
I'm with the people in the comments hoping that getting rid of title bar will be optional. Or only hide it if there is only one instance
I dont know what you mean by "near native support"? I just do "dotnet add new \[mvc/razor\]" to scaffold out a new project or if im adding a package to existing project then its "dotnet add package Microsoft.AspNetCore" or whatever the verbatim package name is. That adds the reference to my .proj
&gt; "near native support"? vscode has no native support for sln/csproj, which makes working on legacy systems a pain in the ass 
I've been using their dark theme for years... 
Hey, i'm using this plugin to solve that. [link](https://marketplace.visualstudio.com/items?itemName=ShemeerNS.FilePathOnFooter) It displays the path at the footer. 
Your post has been removed. Self promotion posts are not allowed.
Well, yeah. I love me some F#, but have to use C# for work. 
Yep it’s not like they choose either one or the other. They improve every aspect.
I still use MVC, wan't to move to Core but is entity framework support stable? Call me crazy but Razor pages look like old aspx webpages, am i missing something? someone please point me to the right direction
I have my doubts about the "indefinitely" part.
A single page Web app wouldn't be done in dot net, but instead using javascript and something like react. Dot net is a serverside technology (excluding blazor which isn't production ready so I'm excluding it). 
Have you ever had multiple versions of VS installed? It is important to change the icon with every major release. A simple color change would be more than enough though.
That's zero based from both ends.
Solution ought to be done in C# though. 
Indeed, should be taken as "until further notice."
That's what I get for commenting on mobile! Yep, dark mode is fine. I was thinking I had installed a custom theme for it. SSMS has a partial dark theme you can "unlock" in registry, but it's only half-baked.
I haven't seen any way of reporting warnings. You can override the output from health checks, though. I'm thinking about adding a section about that to the post or maybe write a new post. There are a couple of specs that would make sense, like https://tools.ietf.org/html/draft-inadarei-api-health-check-02 and https://tools.ietf.org/html/rfc7807.
Because Reddit
Is this for a school project? Just curious why it has to be done in C#? jackle is correct, there's no need to use .Net at all.. 
If you're doing it in c#, it isn't a single page app. It might be a Web application with just one page, but a Single Page Application is a specific way of creating Web apps, and would not involve dot net at all for the front end. Im guessing this is a project for school as you 'ought' to do it in c#? If so, then you need to ask your teacher what technology to use as dot net for front end doesn't exist (again, ignoring blazor). Once you know what technology you are using, feel free to ask for help with specific questions! What we won't do is tell you what architecture to use... I will ask you one question. What's the difference between storing data in a DB and accessing it via c#, and accessing the data in a Web service? They're the same concern, data, so you should treat them as such :) 
It's a trial project of sorts. The way you say, I realize that as well, but it has to be C#.
I guess. It's likely that I misunderstood Single Page Application. I'll try doing an MVC app using cache to store the local data, calling API in controller.
"..for better, for worse, for richer, for poorer, in sickness and in health, until death do us part..."
Thanks, is there any documentation around what PublicApiAnalyzer does.
&gt; Have you ever had multiple versions of VS installed? Not sure if serious or... but yes I always have one, sometimes two previous versions of VS installed. They are called "Visual Studio 2013", "Visual Studio 2015" and "Visual Studio 2017" in the start menu. I don't even know what their icons look like because they are.. useless.
They even stated in the post that the compiler will happily use any type that satisfied the contract, but didn’t say anything about a compatibility package. So this seems like an intentional omission. Basically saying “you’re free to implement it, but we won’t.”
For new development, it’s dead. Let’s not beat around the bush like some did with Silverlight. 
Thanks. I know about that, it's just that until now everything I did was fairly cookie-cutter and didn't need separation of concerns really (mainly small projects so I could get by). Now I see there is lots to learn getting into more professional projects.
Exactly. The people who do the icons and themes are not the same people who work on stability.
That's where you use Rider. 
Someone should set up a Kickstarter.
Because this comment is completely idiotic, because it is implying that VSCode is an alternative to VS. The vast majority of what is in VS isn't in VSCode, they aren't competing products.
I think the idea is that 0=-0, so -1 is the first index to wrap back around.
That's just cloning git repo. I am talking about native support for git stash, merge, squash, local rebase and other features
It is not idiotic. Ive switched over myself except for cases where i have to open legacy stuff. All my new dev is in vscode. It is lightweight, flexible and fast. Maybe im missing the plot? Could you give an example or two of the "vast majority" youre referring to?
Then it's weird he uses the caret operator to indicate the index starts at the back. Why not use negative indices? 
I believe it starts at "one past the end". Which is why `arr[a1..a2]` would return `{3, 4, 5}`.
I have helped client implement Informatica B2B for EDI data processing with external partners. It is robust solution, vendor provides pre-built off the shelf data mappings for rapid developments (without that it will take alot of time) and Managed File Transfer (Part of B2B solution) for external communication with the partners. MFT (managed file transfer) has alot features to data encryption/automation.
Nice article! (: Though I think it's missing a couple of bits of information I was looking for: What are the responses from the server if a request is made to the endpoint provided to `.UseHealthChecks`. Also, how does adding additional service checks impact the response? If I've added 3 service checks, and two fail, will I be notified both have failed on the response content from the healthcheck, or is it just a generic 503? Will I then need to go and do my own investigation into the various services to figure out which one(s) are responsible for the failing check(s)?
Wow. That is awesome feedback. Totally see what you mean. Look forward to version 2 👍
You can checkout Aspose. They have reimplemented the docx format, enabling converting docx to pdf without having office installed. 
I doubt a blog post about UI changes is the right place to talk about those.
Last time this came up I learned that you can [create arrays with negative indexes](https://docs.microsoft.com/en-us/dotnet/api/system.array.createinstance?view=netframework-4.7.2#System_Array_CreateInstance_System_Type_System_Int32___System_Int32___). There's probably also an argument that you're changing the behavior of (admittedly broken) code in a way that's not backwards compatible - code that would once crash on negative indexes now behaves without issue.
Last time this came up I learned that you can [create arrays with negative indexes](https://docs.microsoft.com/en-us/dotnet/api/system.array.createinstance?view=netframework-4.7.2#System_Array_CreateInstance_System_Type_System_Int32___System_Int32___). There's probably also an argument that you're changing the behavior of (admittedly broken) code in a way that's not backwards compatible - code that would once crash on negative indexes now behaves without issue.
You can do many things with the OpenXML SDK : https://docs.microsoft.com/en-us/office/open-xml/open-xml-sdk Office is not required, but it's rather low level API. 
I do this. Very low level indeed but it works.
Agreed. Rider does so many things better than VS. This is a prime example, it's instant and with the added context way more useful. 
I just wish they allowed the theming of VS to be like VS Code where you can just about theme everything. VS Code looks sooooooooo much nicer.
It's not just language features, It won't implement the new .Net Standard either which means the ecosystem will over time enter into a stasis mode as fewer and fewer libraries are made for both the up to date Standard and the legacy Framework.
The point of using office is that the users could edit the templates themselves. Apart from that, I too would like to keep Office at a respectable distance. 
I still remember sitting in a hotel room at a conference writing about Silverlight and how the Internet Explorer team announced its death. 
yeah the editable helps. Generally when you get into proprietary stuff you end up losing the ability to use open source stuff and get dinged with a licensing fee of some sort. I've been trapped in the eco systems of paid products that at the time it looked great but then over time just wasn't. Depending on the licensing fee it can suck to justify buying a different license AND redoing sections of code.
I've used the API for some pretty fiddly Excel file integration. &amp;#x200B; As /u/samonzeweb says, it works but it's pretty low level. You will likely find yourself building some basic scaffolding for the common stuff you want to do.
Luxury. Try Xamarin. 
I've experience using it in a saas and a gov project, does the job Decently .... however if your doing word merges using templates sometimes its hard to get an error to propagate as to what the error was(black box).. having said that those errors are 99% template formatting.
I've used this in the past - it wraps OpenXML to make some common stuff a bit more friendly: [https://www.nuget.org/packages/ClosedXML/](https://www.nuget.org/packages/ClosedXML/)
Why not ask the person who provided the specs for what they were expecting? I'd probably go with something small and permanent like LocalDB.
Are the docs good?
That was about the time I stopped being active in the MS development community. Prior to that, I was always enthusiastic about MS platforms and helping in newsgroups and StackOverflow. Was a MVP for a few years. But I felt pretty duped after having swallowed the Silverlight pill and invested a lot into developing for it. The “It’s not dead! It’s stable!” BS was a little insulting. 
I love closedxml, so much easier to do simple things like set col width 
What about SyncFusion? https://www.syncfusion.com/sales/offers/fileformats They gave a community license - https://www.syncfusion.com/products/communitylicense I’ve used it in the past and it works fairly well.
+1. I have used this to create Word and Excel documents and it's very easy once you grasp how Office documents are structured (which isn't that hard either). You can always use third party wrapper frameworks if you already know the basics. ;)
Link to that core project?
You can use a custom http error, 20x. We use that in our systems and it works great
https://github.com/Jetro223/DocXNETCore
But returning errors as 20x would indicate to the requesting client that everything is working, right? I guess you would need at least an 4xx and preferable a 5xx to make uptime monitors fail.
For a business app with lots of data and data entry pages would you say Angular 6 + Typescript is preferred over Razor pages? Or the other way around? 
EF Core is extremely fast compared to the old EF. I have heard that there are some missing features, but I don't personally know anyone that has run across them in the companies where I have friends that have all gone to Core. I am not using EF Core at the moment, but I have on a personal project, and I liked it.
A warning is a grey area, it is working but... There are some potential problems. You could use the im a teacup rfc code to avoid proxies blocking your status code.
They should stop dragging their feet and just start calling it Legacy .NET 4.8
&gt; .NET runtime and the threadpool is already very fast and will dynamically resize. Continue using Task.Run() until you actually have performance problems with latency, and then implement these changes. Thank you, this has helped ease my mind a little bit. This stuff is hard enough. You should write this sort of stuff up somewhere! It's good.
Somewhat related - For displaying time on the front end in asp.net core, I keep everything in UTC on the backend and convert it on the front end using moment.js.
For Excel I'd rather use EPPlus.
Never use SyncFusion. They sue the hell out of you a few years later, retroactively changing the terms of the earlier bought license. 
It's my goto learning project. Simple at first and teaches so many concepts. But it's so expandable as well. Have fun :)
Visual Basic is good for working out which jobs not to apply for. ;)
I'd suggest you GemBox (https://www.gemboxsoftware.com). It's extremely powerful and performs well.
[removed]
I wonder if you can `yield return` a `ValueTask&lt;T&gt;` from an `IAsyncEnumerable&lt;T&gt;`. Like if you're querying something a page at a time but you just want to enumerate it as if it's a list. It looks like you just return a `T`, I just wonder what it's doing behind the scenes.
&gt; I have no issue working on an existing well written/maintained VB.Net codebase. Your a funny guy, I like you.
I’ve used this for some stuff. If your use case fits with what it does it’s very good, and very easy to implement. The thing is we have had some random, intermittent issues with deployments to Azure and some issues with fonts. Their support is pretty bad unless you spring for the maintenance. I would get the trial version and see if you can get your solution working before you buy it. 
Fairly decent, with example projects
Uh, yeah. Not that VB.NET codebases are all bad, but I haven't come across one I've liked. It's because all the VB.NET devs I've known came from VB6, where writing well maintained code either wasn't possible, or no one cared enough. Seeing GOTO and ON ERROR RESUME NEXT in VB.NET wants to make me puke.
I love VB and will never understand the hate it garners from C# evangelists. C# is good, too, but preferring C# doesn't justify demonizing VB. Regardless, I'm happy they're actually treating it as a "first class citizen" as they wrote.
They exist...honest...
Its not the language, it is the vb net community. Vb 5.0 and 6.0 devs migrated to vbnet and brought their bad practices with then. Most vbnet projects i have seen since 2004 are garbage
&gt;Visual Basic 16.1 and 16.2 will improve C# interop Can someone please explain to me what this means. Why interop with C# when you can just write in C# in the first place. Want to write C#? Just create a C# class library and reference from the VB.NET project, right?
I read about a company a while back which made a point of writing their backend in VB.Net, and writing it well, to weed out programmers who put too much stock in a particular programming language that they would turn down a job. I'll try and find the link.
You might have old working code in VB.Net, and want to add new code in C#? Why rewrite the old stuff if it works?
It's as simple as this: if you're a talented developer who is learning .net, even coming from VB5, why bother learning VB.Net? I mean... it's roughly comparable in terms of language, but with a larger market share, more similarities to Java, more examples, and a larger community (IIRC), on the C# side. There's simply no reason, outside of familiarity, to invest your time and energy there. Especially given how readily VB.Net libraries can be consumed by C# libraries, there just isn't a lot of motivation to stay on it over time if you or your team are on top of your game.
I hated VB long before I ever even looked at C# just based on seeing ancient code at my first real job. Subjective of course, but it's full of weird shit like the `Dim` keyword, and it has awful syntax. I also tend to despise any language that uses words to wrap scopes instead of curly brackets. If you're not going to use brackets then just go full Python and use nothing, but enforce whitespace in the syntax. There's plenty of other things people don't like about the language itself but VB has a reputation of being a language non-programmers learned out of necessity rather than a desire to actually be a competent programmer, so shitty legacy code bases have become a meme for VB.
Higher salary doesn't mean the job is better. In IT they tend to pay more for work nobody wants to do.
I guess it depends what better means to you. Making a bunch of money probably doesn't sound bad to some.
I'd rather work on VB than java.
its in the .net framework and both are capable of doing the same things. They should have used Python though. It is clearly the fastest and best at everything.
you're a funny guy!
!RemindMe 1 day
I will be messaging you on [**2018-11-14 22:18:21 UTC**](http://www.wolframalpha.com/input/?i=2018-11-14 22:18:21 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/dotnet/comments/9ws596/visual_basic_in_net_core_30/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/dotnet/comments/9ws596/visual_basic_in_net_core_30/]%0A%0ARemindMe! 1 day) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
VB is treated as PHP in the .NET world. 
No idea if using an spa or what but I don’t get why u just don’t redirect / reroute in that error function 
I'm surprised noone has said anything complain ing about VBA in stuff like Word... (it's like VB but just as bad)
In your error handler function you can set the location to redirect to another page: `window.location = "/Error/MyCustomErrorPage"` However, this really isn't a good practice in terms of user experience.
I don't think it is necessary to expose any inner workings of your data structure in the inteface (although it could be useful). Does IDictionary&lt;&gt; expose hash collision lists? I am pretty sure it doesn't ... 
Because it made the transition easier. Vb60 had no concept of objects ffs
But if you need to convert to local time on the server side - for an API response, for example - then datetime offset is your friend 
VB.NET (2005) was the first programming language I learned, so it has somewhat of a special place in my heart. But I definitely never want to go back to using it full time. It’s just so esoteric feeling and verbose compared to C#. Unfortunately, I still occasionally deal with VB6 legacy garbage to this day...why anyone would prefer any VB flavour to C# is puzzling to me, but to each his own
OK so when a client is loading a page and an error occurs, ASP.NET can just return an error page, since the browser was already expecting a page anyway. But with AJAX, the client is expecting raw data, NOT a page. So you HAVE to return raw data for the client to digest, which can be error information if there was a problem. You would then have to manually redirect to a new error page or destroy the current page and build an error page in its place with JavaScript. Redirecting is not a good idea because then you are sending the user to a page ONLY used to display an error. The user will probably try to refresh, but the page can't do anything but display errors! So, bad user experience. The alternative is to display the error in the current page. Now if you're still thinking "I want an error page" you could (as I suggested) destroy the current page and replace it with an error message. As the other guy said this is a bad user experience. How would you feel if you were reading an e-mail and all of a sudden it disappeared and was replaced by a big error message, with no way to get your e-mail back (until you figure out you can refresh the page)? Not fun. It makes more sense to keep the existing page but display the error in a way that allows the user to try and recover and continue what they are doing. An alert is stupidly easy to do and allows this, though it is not the best user experience as it interrupts the user and must be interacted with to return to the page. Google's Material Design Lite JavaScript library has a "snackbar" element that pops onto the bottom of the page which I find useful for displaying errors. Then my app will attempt to recover and hide the snackbar if it can do so.
[And on the other hand..](https://i.imgur.com/7W6g4lO.png) lol
No why? This is a perfect opportunity to kill support and EOL the language
You can't store dates in the future in UTC. When (not if) governments decide to mess with the time zone, your dates will be randomly shifted off by an hour (ask me how I know). The only way to store a date and maintain a consistent end-user representation is to store the date, time, UTC offset, and time zone. With those four bits of information, you can properly adjust/recalculate no matter if the DST period changes or the offsets change. Now, that's overkill for a lot of scenarios, and UTC will do just fine for dates in the past (since the conversion to any time zone is well-defined). Anything that involves scheduling, however, really needs to take all of this into account.
You could do all of this, or you could use [NodaTime](https://nodatime.org/) and keep your sanity while working with dates/times. The more I program, and the more I work with other developers in other languages, I find that APIs that prevent you from making stupid mistakes aren't just nice to have, they are imperative. The fact that `DateTime` can represent either UTC or a specific time zone, where that time zone is either "whatever I am currently in" or "unknown", and that they all work together seamlessly, has lead to a slew of mistakes that have affected our code base. For as pervasive as time is in our world, it's incredibly hard to reason about. Our tools should help us, not blindly allow us to shoot ourselves in the foot.
&gt; You can't store dates in the future in UTC. Can you elaborate on this? I store a user (future) expiration date in UTC and it seems to work okay? Or are you talking about inputting a specific future date and mapping it to UTC? Because, what I do is just UTC.Now.AddMonth(1).
That's the insidious thing... it usually does. Even in your case, if it didn't, it probably wouldn't matter... the expiration would just come an hour early or late, and no one would likely care. Here's an example: imagine that in New York, which is normally UTC-5, Daylight Saving Time begins on April 1 every year, and the clocks move to UTC-4. A user to your clinic scheduling site makes a doctor's appointment for April 2, 2019 at 3pm next year. When the new Congress enters January 1, 2019, they decide to move the start of DST back a month to May 1. Your system, after the latest tzdata update, now believes that appointment is at 2pm. When your patient arrives, he's an hour late because of a bug in your scheduling software. The idea that a time zone change occurs seems implausible and rare, but countries have done it with just a few days' notice before. Sometimes they cancel DST, or move the dates, or change the offsets. Sometimes it is temporary, other times permanent. There's really no rhyme or reason to it, which is why you have to know all the bits to keep track of what they dates you have mean (and meant at the time of their input).
No way
doesn't always start it up properly either.
The Excel team did an AMA the other day, and I seem to recall a few complaints. :-) *(Mostly people wanting to see Python support)*. Given how widely used VBA is, it baffles me that the VBA editor in Excel hasn't had any changes in over 20 years other than the addition of long data types.
I use this for spreadsheet generation all the time. Easy to use and doesn’t require Office installed.
Carefulllllll .NET is excellent for large websites, but small websites can't justify the performance detriment of the CLR. The same goes for Java.
You can write add-ons in JavaScript for Excel these days, interestingly.
Unfortunately, the JavaScript Office object model is still pretty limited, though.
What platforms are you planning on targeting? For example, mobile apps? Connectors into enterprise software? Desktop Software? If only the browser, I'd likely lean towards Razor or Razor Pages being slightly preferred because of the productivity gains. Plus you can always try out Web API within MVC, and get a feel for it. If you discover that you prefer that way of development more you can switch. 
InMemory will cause you more headaches than SQLite and the switch to SQLite is not that hard. It's cool that they added it, however they even advise against it for certain operations.
I’ve worked on a high-throughout service layer that was all VB.net, like over a million calls a day with an SLA of .6 seconds. It was beautiful, efficient code. 
When applying for my current job I had the understanding that it was a C# shop, which it was. On my final interview they kind of clued me in on the fact that I would be supporting a lot of very old VB/VB.NET apps but would have some C# development. I figured, what the heck and took the job. 2.5 years later I had gone from programmer analyst to senior programmer analyst. I've learned to love [VB.NET](https://VB.NET) and hate \*some\* VB developers. Today I do a mix of C# and [VB.NET](https://VB.NET). Most of the legacy apps that I support, I support because nobody else wants to. It's given me the opportunity to move up the latter much faster than if I had been working on our C# new development. Because the largest part of our business uses the legacy apps I've had the opportunity to end up pretty important on our team. When I started, my largest Basic programming experience was in AppleSoft Basic in the 90's and after that I learned C++ and C# and vowed to never touch Basic again. I guess you can't predict everything. I have a healthy respect for [VB.NET](https://VB.NET) and Option Strict/Option Explicit now. My point is, I wouldn't write off any job just because of [VB.NET](https://VB.NET). There's a lot of good and bad code out there that needs upgraded and a lot of the old VB6 programmers gave up because [VB.NET](https://VB.NET) was too much of a change. So, it's an opportunity not a curse. 
You are the one who said you wanted a different page nobody suggested it to you out of nowhere. You are all over the place in your question. What you have now described is attempting to parse out the error information from the html response and using any alternate alert / toast type library to display it. The real question is why is your api throwing exceptions to an exception to your user instead of gracefully catching them and returning easy to parse standardized error 
NetCore is really fast.
OP states two times in his post he wants to show his "custom error page".
&gt; Now you can add new members to existing public interfaces as long as you provide a default implementation for existing implementors to use. So... C# now effectively supports real multiple inheritance?! Hell yeah!
I dunno why for some reason I thought OP wrote your comment. I had just rolled out of bed. 
Well, one API I've written provides both; so that the consumers can choose whatever's easier for them.. convenience thing really, if I was consuming an API having either available is handy..
Yea, that makes sense. Man, I hate DST.
[removed]
Not only that, internally it launches the Internet Explorer web host to execute the javascript. It is really super limited.
What the heck dude? What you said just doesn't make any sense, I have no idea from where you got that information.
VB...is still alive in 2018? What the heck, Microsoft? Take the chance to kill it already, I have no idea why someone would choose something like VB than C# in every way possible. 
Microsoft has the openxml sdk. It's pretty awful to work with, but you can, and I have, populated word templates with it, and it's free. If you want something that doesn't want to make your want to claw your eyes out, you're going to have to pay for it, but honestly, constructing word documents is pretty awful in all tooling. 
.NET ecosystem is really not that great with out of the box solution/projects such as CMS, Wiki, ecommerce, etc.
I don't have experience with SPA. I am used to having a server-side app serving the resulting HTML/Javascript and subsequently having the client-side pulling additional data via an API. How do you serve SPA application to the client?
How complicated are your templates? For simple templates you don't need anything more than a zip library. In my app we just have docx templates with tokens surrounded by square brackets. *Dear [FirstName], ...* All we do is extract the xml from the docx zip and use regular expressions to replace the tokens with our data. Then zip it back up again. To convert to pdf, we use Aspose.
I still got a VB course in my first year of my bachelors in 2012.
I've been doing backend for too long:) Thanks, guy.
Haha no worries. 
Your proposals have been worked into the post. I've also written a new section about custom status codes and currently writing something about custom response too. Thanks again!
Check out Templater &lt;http://templater.info&gt;... There is online demo at http://templater.info/demo And a lots of examples available at: https://github.com/ngs-doo/TemplaterExamples
&gt; but if you know C# you basically already know VB.Net. Yeah, sure, once I had to make slight changes, had to google what null is in VB.NET, what's the difference between And and AndAlso and some other random shit.
That's exactly what I was hoping for, thanks for updating with it in, and letting me know! 👍
Agree with everything you've said here. Jon Skeet has a blog post describes in detail why NodaTime exists and why using the built-in API is not the best idea. https://blog.nodatime.org/2011/08/what-wrong-with-datetime-anyway.html
It's basically just about the compiler. Visual Basic .NET is compiled to the same CIL as C#. It doesn't really matter for the runtime what kind of language you used to write your program. You can run PHP and tons of other languages on .NET runtime if you have compiler for them.
&gt; APIs can't always succeed. When they fail, they can't return the requested information. This is what I was getting at. If the API fails, break the application. It's being logged where the failure occurs, and then bubbling all the way up. My issue here was that the ajax call was not throwing the error, just eating it, so our users see nothing happening. API should always work, if it doesn't, break (this also is not my decision, but it is the desired effect). Thank you for your description u/The_MAZZTer
There is even a PR so that DNT (DotNetTools) support legacy projects: https://github.com/RSuter/DNT/pull/15
If you have access to SSIS, you would be much better off than using MS BizTalk for handling EDI (both in terms of easy deployment and also in the speed of parsing or generating the files). &amp;#x200B; The company I work for is providing custom SSIS components and we just released a major upgrade that supports also generating EDI files (see [https://www.cozyroc.com/ssis/edi](https://www.cozyroc.com/ssis/edi) ). Once you have configured the desired EDI format in a special XML file, you can easily parse and generate EDI files.
I just deployed my first ASP.NET Core 2.1 app, and I ran into a number of small issues like this. The Microsoft docs don't make it clear where the SQLite database file should be. In my case, I had the db file in the project's root directory (i.e., where Program.cs and Startup.cs are). After a test deployment, I realized it was re-creating an empty db file from scratch. So I moved the db file to wwwroot, and changed the initialization in ConfigureServices() to the following: var dbPath = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "MYDATABASE.db"); services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseSqlite($"Data Source={dbPath}")); Oh, and I found out the hard way (or should I say, 502 Bad Gateway), that when you publish an update, restart nginix, not the kestrel service directly. 
+1 We did extensive performance and feature testing on this against Apsose and could find no justification to spend the ungodly amount Aspose was asking for since Gembox did everything WE needed for like pennies on the dollar compared to Aspose.
&gt;Microsoft has the openxml Ya, don't even bother. 
\^ no need to answer! Session is carried over and just replacing with Error.Html appends that to the over link and works as expected. Thank you all who answered!
I personally owned a Windows shared hosting server catering to ASP.NET on the .NET Framework 3.5. It was extremely slow. I then transferred to a Linux hosted server catering to your traditional LAMP setup and gained a massive performance enhancement, especially after I rewrote my back-end in PHP. Like I said, .NET and Java are great for large websites that need the ability to scale, but their overhead is woefully large on small websites like mine that a server-side scripting language would be much more efficient for (assuming you aren't writing a game, or something).
Still what you said don't make any sense like at all. There's no difference between using a language for small websites or big websites. You probably just used it wrong or have done something wrong for sure, what you said just can't be described in a programming sense.
Different languages have different runtimes. These different runtimes contribute to the over all performance of the language by ways of their garbage collector routines, dynamic code management, stack tracing, and debugging tools. These tools are always present when programs are executing on that runtime. Without the runtime, the code doesn't run (in the case of JavaScript, Java, .NET). This is why you don't see C# or Java used for embedded as much as C++ or C. The virtual machine (read: emulated computer) they run on, the CLR and JVM, respectively, are quite heavy. C++ and C require minimal runtime assistance because they run natively on the machine. Now in the case of PHP vs. C#, PHP is an interpreted language which is handled by its own runtime. The key difference here is that simple language = simple runtime. You end up with a situation where for small deployments, PHP actually outperforms C# by not bogging down the host machine with its runtime. However, as deployments get larger, the overhead of the CLR becomes less important, and the speed of C# over PHP begins to shine. This is computer science in a nutshell. The science of trade-offs. All tools and languages have their place.
API should not be returning yellow screens of death html. You catch the error and return a simple json object with the issue. Many people end up with response wrappers that handle all scenarios of response. Success, failure and error. Something like { Success : true, Result: { } } { Success: false, Result: { Message: ‘some error message’ } } These normally get unwrapped before the api result is passed forward to the intended callback for your api 
Every time you modify the model while not attributing the properties as [NotMapped], you need to run migrations both in your dev and prod environments. When you do it on the dev environment, you input a bunch of stuff into a console. This should produce a bunch of SQL files, which you need to execute against the production database. [Generating scripts with EF Core](https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/#generate-sql-scripts)
`Index` and `Range` we can't really provide on NuGet because you generally want `string` and arrays to have indexers accepting them. And for arrays these require runtime changes too.
I was a customer back then and I share your perception. For .NET Framework we try to be as transparent and honest as we can without scaring people away. Saying "it's dead" would imply that we're no longer fixing bugs or doing any feature work. Which isn't true here: .NET Framework is supported and will be for a long time as ships with Windows. However, we're telling people that they should expect most features to be .NET Core only. Hence, we're recommended people starting new projects on .NET Core and consider apps that are still evolved to be ported to .NET Core. That's very different from the Silverlight messaging back then, IMHO.
At the end of the day it is msil that runs, it is not that vbnet is a bad language it is that the community is terrible
I know they exist, but the last time I was on a VB.Net project, they had decided that "one file per namespace" was a good idea and could quite grasp why they had so many merge issues. 
This is a pretty strong statement about sun-setting the full framework.
This will make it easy for someone to download your entire database. Even if you have things set up to prevent that at the moment, a change in the future might accidentally expose it to be downloaded. Maybe make the database in `Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData)` which is your Program Data Folder. You'll want to make a folder in there for your application and give the process running the we app (either the app pool user group or specific service account running the app pool) the permission to read and write to that folder. There are other places you can place it too, but the wwwroot is guaranteed to be public.
If you are using EFCore, it sounds like you have a test database but have not tried to run your app without it. Try to do so and you will probably get the same error. You should call the DbContext.Migrate function before using the database so the schema can be created or updated as needed. Typically you can do this in the DbContext's constructor. As the other guy said whenever you make changes to the schemas as far as the classes go you need to run add-migration in the package manager console. This will generate the classes needed by .Migrate to generate the database tables.
&gt;Default implementations of interface members This looks useful to do stuff like Traits/Mixins.
After doing frontend for a few years, I am happy to be in a backend-exclusive role tbh.
It is something new to be sure. It's 2/3rds of real inheritance: the method signatures and implementations. It's just missing state.
Very nice article, thank you!
To build on what /u/oldsnaker said, you can use a data attribute to pass data values to your JavaScript and check them using the jQuery data API. To actually execute JavaScript when the page loads, you are looking for the jQuery constructor that takes a callback: `$(function() { // do something on load });` Or the multitude of other ways to attach to the document load event.
It works fine, the API is horrifically low level, but it does work, I've done what he's trying to do. 
Where's the link?
[Here you go.](https://www.youtube.com/watch?v=dQw4w9WgXcQ)
Bad bot
You'll have to use a TempData object if you're redirecting, so create one after a successful then redirect. Slap that TempData object into a hidden element in your view and on document.ready see if the div is not empty before firing off your toast. I do this for error toasts and put the message I want to display in TempData so that I can append it into the alert for more of a dynamic feel. 
Why?
Someone tell me this is a joke. Right? No seriously it's a joke right?
Um, what does this have to do with .net?
Well I guess it does not since it’s not a .net issue but you will face it if you ever write authentication of your own .net or otherwise.
Except, unfortunately, default implementations are not exposed via instances of class types that implement the target interface by default (i.e. `myInterface.SomeDefaultMethod()` will work fine but `myClass.SomeDefaultMethod()` will fail to compile). Essentially, default methods are explicitly implemented on classes unless classes manually redeclare the method. Which makes sense from the perspective of what this feature is trying to achieve (allowing interface flexibility for already-published APIs), but as a traits impl it's lousy.
Unfortunately not ( https://www.reddit.com/r/dotnet/comments/9wjxzu/building_c_80/e9q1ojm/ ).
There aren't any good third party libraries for deep manipulation of word documents, because that's just really, really hard. Excel, yes, but the sdk isn't actually bad for excel either. 
I don't know about the traits comment, but the limitation you point out makes perfect sense to me and I really don't see it as a real limitation. 
I would say that programming a simple CLI application that is very light on I/O and UI (no networking databases etcetera) should be good starting point to learn TDD. Define all the rules and edge cases of the problem you are solving first as FAILING tests and then "make them all green". That's TDD. Perhaps you'll see that the code you are writing on a daily basis might be much more entangled because you might be shoveling data in and out of a database in and out of an UI. There are certain architectural approaches that can help you separate the real logic of your application from the UI and DB layer. Try to code the next problem you're solving at work in a TDD fashion, so write all rules and edge cases first. Make that work without UI and I/O. When that works at the rest.
Mmmh, sorry, I might have slightly got some wires crossed and replied to your comment with an answer meant for someone else's a bit. But yes, it makes sense from the POV of backwards-compat stuff etc., I agree. All I was saying was that I just don't think it adds much from a program-structural-design (e.g. inheritance/composition trees, polymorphism, etc.).
I really liked Programming with Mosh's [Unit Testing for C# Developers](https://codewithmosh.com/p/unit-testing-for-csharp-developers/?product_id=662720&amp;coupon_code=LUCKY1&amp;preview=logged_out) course. The full course costs a little bit of money, but he put a [45 minute preview](https://www.youtube.com/watch?v=HYrXogLj7vg&amp;t=7s) on YouTube.
Run update-database in the project that contains the identity DbContext.
&gt;There aren't any good third party libraries for deep manipulation of word documents, because that's just really, really hard. &gt; Not true at all. Aspose. Gembox. And a few others. Where'd you get that conclusion from? 
 ASP.NET on the .NET Framework 3.5 is not [ASP.NET](https://ASP.NET) Core on .NET Core. From actual usage as well as benchmarks, dotnet core is faster than PHP for pretty much everything.
Um... Just no! &amp;#x200B; You try to sound like you know what you are talking about but what you are saying seems to be coming from gut feelings instead of actual experience and knowledge. &gt; Now in the case of PHP vs. C#, PHP is an interpreted language which is handled by its own runtime. The key difference here is that simple language = simple runtime. You end up with a situation where for small deployments, PHP actually outperforms C# by not bogging down the host machine with its runtime. False. The complexity of a runtime does not directly relate to its performance. Have a look here: [https://www.peachpie.io](https://www.peachpie.io) PHP on .NET runs faster than your standard PHP implementation. &amp;#x200B; I actually migrated a Symfony to .NET Core 1.0 a while ago. We did lots of bench marks before even attempting it. .NET Core at the time already outperformed PHP. It has gotten a lot better since then. Said application is currently running on the latest [ASP.NET](https://ASP.NET) Core with zero performance issues.
Thank you very much for the kind words. Background jobs have always been a pain with only sort-of-ok solutions - until now. They're doing remarkable work on Core. 
[removed]
[removed]
In some simple cases it might be enough to use HTML editor (WYSIWYG) where users can use special replacement 'tokens' (or maybe even more complicated template-engine instructions to iterate rows etc - say, mustache#), and then just render these templates to final HTML, and then convert this HTML to PDF with tools like wkhtmltopdf or phantomjs (you can use existing C# wrappers to do that with 1 line of code). If you need more complicated data in your reports - say, pivot tables - you can use 3rd party libs that can calculate pivot table data and render it to HTML &lt;table&gt;, which can be placed in appropriate place with placeholder.
[removed]
Recommend iDiTect.PDF library, you can use this tool to generate a PDF with table and chart in c# .NET [https://www.iditect.com/tutorial/pdf-document/](https://www.iditect.com/tutorial/pdf-document/)
We need stuff like Dear [FirstName] but also stuff like Position | Amount | Total --------|------|----- {pos.Text} | {pos.Amount} | {pos.Pricetotal} becomes Position | Amount | Price --------|------|----- Stellar Accmulator 2000 | 1 | $ 2'000.00 SOL to AlphaC Adapter | 1 | $ 500.00 Installation Fee | 2 | $ 400.00 and if possible {if condition}Text{else}Other Text{/if} and stuff like this. Basically razor for word ;)
Basically every UX tips &amp; tricks, patterns etc from Web-development also applies to WPF ... Just look for Single-page applications or Web-apps there are tons of resources on that subject. 
I've always liked WPF but I've never seen anything that really showcases it well. I remember when Blend was first released and there were "trailers" for it showing some truly amazing UI examples but I never saw anything of this quality come out of the pipeline at the other end - maybe because Blend is so difficult to use without some serious investment of time and the educational materials for it are few and far between. WPF is still around though and so is Blend - I sometimes think of dusting it off and building something myself to see what it's really capable of so I'd be interested in seeing if anyone comes up with anything to showcase it.
Been down this road and finally started having it make sense a couple of months ago. Try as i did to be better at testing it always felt like a hassle until i shifted my focus to writing testable code. With that in mind, aside from covering basics of writing tests: * SOLID principles, hopefully you know these already(or of them) but if not, read into them. I found i had to start thinking about them while programming for the ideas to click. * Inversion of control and DI, I highly recommend [Dependency injection in .Net core](https://www.manning.com/books/dependency-injection-second-edition-principles-practices-patterns). **Properly** following these ideals makes your code so much easier to test. * You don't need to learn all there is about functional programming immediately but at least understand functional purity, pure functions are fairly painless to test. Injecting an interface that does nothing but provide DateTime.Now seemed absurd and overly complex when i fearst read about it but once all those pieces came together everything finally clicked and i no longer hesitated on writing tests as they were no longer difficult to write. I've been meaning to read through [Working Effectively with legacy code](https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052) but from what i have read so far it seems to have a huge focus on making old code testable, perhaps an option if your looking at improving your code base in your current job.
We have to render data that sounds very similar to yours and were using a DataGrid, but the performance was appalling. We've recently refactored to use a Grid-based solution, which is faster, but our preferred solution is to move to a canvas and do everything ourselves. I would suggest you spend your time refactoring the current solution for maintainability/extensibility, rather than reimplementing using Grid, StackPanel, or whatever. (You might also consider trying to discover why it was written as it was. Perhaps standard elements were already tried and proved unacceptable for some reason.) 
Best looking open source WPF app I've seen so far: https://github.com/bbougot/Popcorn
Thanks for the suggestion: Can it do something like this? I couldn't find anything in the docs. The point is that like this, customers can edit the templates themselves. https://docxtemplater.com/demo/#loop-table https://docxtemplater.com/demo/#loops
Thanks for the suggestion: Can it do something like this? I couldn't find anything in the docs. The point is that like this, customers can edit the templates themselves. https://docxtemplater.com/demo/#loop-table https://docxtemplater.com/demo/#loops
Visual studio 2017 is made in WPF
[removed]
&gt; a good open source WPF application
Why not?
I'm JUST now getting back to you because I JUST now actually got to work on this. Turns out that I just used jquery to access the JSON. I didn't even need to use ASP. I don't know what was going through my head, but that was such an easy solution. :)
Less so with the third party libraries since they put their own higher level abstraction over it. I know what I'm talking about. I use these extensively in my job. Hands down WAY easier to do stuff with Gembox vs the lower level Microsoft stuff.
Majority of wpf apps never are never seen by the public as they are mainly internal Line of Business apps
Well this was well timed. I am currently looking into different solutions for client - server request solutions with reports as the end result. I've been glancing at WCF but everyone who's ever used it hates it, so I'm looking for alternatives before the study begins.
Thanks, now I have to explain why I’m laughing to my coworkers. Have an upvote. 
If the library supports what you want, but they all suck because the underlying format is stupidly complicated. 
That's definitely true but I'm also curious how many internal apps really get a lot of focus on polish or wow-factor. I'm sure there are apps out there but even large internal apps I've worked on haven't really had much of a budget or interest for "make it look pretty". Hell, basic animations (beyond whatever you get for free/cheap from Telerik/Infragistics/&lt;insert kitchen sink 3rd party control library here&gt;) are normally out-of-scope for most of them.
Used ConfuserEx too. Several times watched some bugs. But it still works well for me. Also liked ArmDot. But it is commercial.
Seen a few with polish, generally when outside company trying to sell LOB app to other business but nothing amazing as not really needed for a buisness app
Shit me that is good looking
I'm sure the other options would work as well, but this was easy and worked perfectly. Thanks!
PS There are videos too: [https://www.youtube.com/watch?v=uJeUodTRCEs](https://www.youtube.com/watch?v=uJeUodTRCEs) If anyone has feedback about how we could make it easier to learn how to use Security Headers, please let us know. Thank you.
I'll add that there actually are many well-known apps built with WPF (probably any medium-effort desktop GUI from Windows 7 era), but they're almost all going to be closed-source products, and long deprecated by now.
Your post has been removed. Self promotion posts are not allowed.
XAML gets so sloppy so quick
Yeah tell me about it. I know about these code bases because it's invariably been technical debt I've inherited :-)
How much is azure/month with 1 net core webapi serving compiled static vuejs app and 1 sql database?? 
It depends on what you buy. [Check out the full pricing calculator here](https://azure.microsoft.com/en-us/pricing/calculator/) But the cheapest option is an "F1" App Service instance (free) and a "B" SQL Database ($4.90/mo) for a grand total of... $4.90 a month. If you wanted custom domains, your next option is a "D1" App Service instance, which is $9.52 a month, so your total would be $14.41. And obviously you can just scale up from there, depending on the resources required.
I can't find the B SQL Database you mention. What is the name of the product?
Your links aren't working for me but from the naming yes you can loop and generate tables and.. generate new docs from templates docs.. we allowed our users to upload templates with merge fields and our system would render that out... For example custom dtos that had t&amp;c of a contract could be embedded with a single merge field.. etc.
Ok, are you sure the links aren't working? Just tried them, it worked. Good to know though that this scenario works. Thank you!
Am I the only one that the word Blazor reminds of the Globo Gym Purple Cobras team members? Blade, Laser, and Blazer? 
Thanks! I will take a look at this later.
You are not alone!
Do you know what "indefinitely" means?
It's razor in the browser... Where did the L come from?
It does not mean "forever", though the term often leads to that. So, you're saying you doubt it, which means you believe they _have_ chosen a date to stop supporting it and simply don't want to tell us.
It may not mean "forever" in this context, but it can mean "forever".
I'm sure it's ringing someone's bell.
You can check out asphostportal for .net hosting. They fully support .net hosting on their hosting environment. I know that Azure is very costly if you use SQL database. That's why I don't use their services too.
I'm surprised to see Blazor continuing. I haven't gotten the sense that there's much interest in it. Personally, I feel like it's reinventing the wheel. We finally got TypeScript to get s good dev experience and we have transpilers so we don't need to worry about creating code that will work in every browser.
typescript is still a band aid
Your post has been removed. Self promotion posts are not allowed.
Thanks for telling us that you don't have any interest in Blazor and that your highly sensitive senses told you there is not much interest for it. Where did your senses get that information? If we go by github stars then https://github.com/aspnet/Blazor has 7100, https://github.com/aspnet/AspNetCore has 7720 and https://github.com/dotnet/coreclr has 10501. Microsoft also seems to think there is interest, because it's releasing server side Blazor in ASP.NET Core 3.0 as Razor Components. Server and client side Blazor share most of the code. There are also multiple SPA frameworks made with JavaScript/TypeScript. Maybe they should have just stopped after they created the first one? Because that's reinventing the wheel. 
Nice example aslo to see the project structure and MVVM stuff
Nice!
Yep
You need a native implementation to run on WASM. C# doesn't output native yet, but they are working on it with the [corert](https://github.com/dotnet/corert) project. I believe Blazor is based on DotNetAnywhere, but I'm not really sure. Ah nevermind, I see it's based on Mono. So you should be able to use the mono compiler to output wasm. 
Yep
Yep
Yep
Yep
Thanks for the information!
Yep
Clickbait fail.
Yep
I've long been a fan of "feature slices" for organizing my web APIs, which seems roughly equivalent to Django's apps. You can find a bit of a primer article [here](https://msdn.microsoft.com/en-us/magazine/mt763233.aspx?f=255&amp;MSPPError=-2147217396), but it really comes together when you add in a mediator pattern. One of my favourite "go to" reference projects for a while has been Jimmy Bogard's [Contoso Unviersity Core](https://github.com/jbogard/ContosoUniversityCore). Note that these are resources for MVC projects, but they're easily adapted for WebAPIs. One more extremely helpful resource is [Thinkster's RealWorld example app](https://github.com/gothinkster/aspnetcore-realworld-example-app) which was patterned off of Jimmy's work above.
Like the OP as a full stack [asp.net](https://asp.net) mvc developer, I like/prefer razor view engine. I do need to use javascript quite a bit too, however, I don't want my javascript framework/library to take over defining my html views as I am very happy with razor so far. Also I want server generated views due to SEO requirements. So in my search this came up. [https://stimulusjs.org](https://stimulusjs.org/handbook/managing-state) This seems to fulfil my primary requirement.
Typescript is meh and never a solution.
Also could have some issues ~googling~ binging that...
Isn't it AssemBLy rAZOR? I mean, it's an implementation under the WebAssembly standard, right?
&gt;I haven't gotten the sense that there's much interest in it. I take it you don't hang around here much?
Experience almost always trumps only a degree. Breaking into the industry without one isn't super easy though. But once you're in, you're in.
Nah, Typescript is awesome. But C# is awesome, too, and having a choice is better than not having one.
C# and Razor everywhere = dream world
Glad you found it useful. :) 
Thanks, this is what I needed. I will go over all of these. The RealWorld example looks especially promising too!
Well, it's uses an implementation on Mono in the Browser. They didn't do any of the Web Assembly bits.
Running C# in the browser is something people have wanted for a decade. TypeScript is a polished turd.
Yep
I can see people sitting around a conference table. Shirley, the marketing person, says, "We'll call it Brazer." One of the devs chuckles and says, "Heh, Brazzers." Shirley, "That sounds better! We'll call it that!" Everyone else laughs. Shirley, "What did I say?"
Try to keep your Web Api project small. Use it for controllers and middleware. Move out data access, validation, and business into decoupled, testable, and small libraries. The golden rule of Web Api is dependency inversion by dependency injection. Don't fight the pattern.
I think (and I may be wrong) that `app.UseBlazor` is just telling the server how to route requests for your DLLs and content files. It doesn't have anything to do with how your client application consumes your web APIs. IOW, yes, you can consume any old web API from Blazor (even ones that aren't running on your server!). The nice thing about running the same language and runtime on the client and server, though, is being able to use that shared library. You can define your DTOs there, and re-use the same validation code, just for two quick examples. So when your API changes, you have fewer changes to make to the client.
I was just starting to build a hotkey shortcut app in node. I will check it out. 
That's awesome. I guess what I was most concerned about was the dependency on coupling them together. Which doesn't seem to be an issue. I already structure my projects similar to this (I use shared libraries in my web api project ) and it sounds like all I need to do is create a client blazor app to take advantage of blazor. I'll give it a shot. Seems like a really cool way for me to start working on front ends without needing to expand my knowledge of JavaScript.
Are you talking about [this Northwind Traders?](https://github.com/JasonGT/NorthwindTraders) That project uses an exception filter defined [here.](https://github.com/JasonGT/NorthwindTraders/blob/master/Northwind.WebUI/Filters/CustomExceptionFilter.cs) You can set the JSON response for failed validations inside that first if statement.
This is how I do it. https://github.com/codenesium/samples/blob/master/ESPIOT/ESPIOT.Api.Services/Lib/Includes.cs
Elementary OS isn't "built around" it. Yes, most of their tools are written using it, but the underlying tech is GTK and Gnome. I've written some Vala, and it's okay, but it's only syntatically *similar* to C#. It's built on top of the GLib object system, compiles directly to native executables, and (at the time I used it, at least) doesn't support things like automatic boxing and unboxing.
Dude, I have so needed this and planned on making it myself but I've been procrastinating for months. I appreciate this so much!
Just a tip, the \[ \] brackets denote an array of objects, so it looks like you want it to be: { success: false, errors: [ { name: 'Must be greater than 5 characters.' } ] }
Personally I've created a wrapped response handler that builds out my API response that implements the delegating handler. In there I check for any errors and write them out that way.
All your links from the same domain. 
Ducards is generally pretty bad quality. I'd discourage people using that site.
Sorry I was formatting on my phone. 
ty :) 
[removed]
And why's that sir smart?
I'm not 100% sure what you're asking, because it doesn't seem to make sense, but I'm going to go out on a limb here and guess what you *mean* is: &gt; I'm curious if the Client Application could access a Web API project (existing) the same way that it accesses the **Shared** Project. ^ Since, it doesn't access the server project. If I understand correctly, what you're basically asking is, can my `Client` application, make direct calls to the `Server` application? ie. Can I pull the logic out of `SampleDataController` into `DataService` and just call that from the client directly? You might be asking a different question, in which case I apologize for this rant, but if that is what you're asking... Yes you can, but only if you're using server side blazor, which that project template *happens to be using*, so *please don't*. This is like, the **Number 1 'Reasons Not to Use Blazor'** Let's just pause to think about exactly what you're asking for a second: - Given you have a service, say, `DataService` - ...and that `DataService` accesses a database, which is full of private data. - You want to give the client application on the web browser *direct access* to that database. That is a bad thing to do. Don't do it. You'll see in the example, that the client template does this: &gt; forecasts = await Http.GetJsonAsync&lt;WeatherForecast[]&gt;("api/SampleData/WeatherForecasts"); This is the *correct* way of accessing a protected API that provides data to the service: - It can be protected using standard authentication methods. - It is agnostic to the backend (eg. you can use a azure function, not a local service with the same frontend). - It is agnostic to the *runtime*, which means you can run it as client side blazor. There's a whole lot of lack of understanding around what server side blazor *technically allows* you to do, vs what it is *intended* to be used for. The key thing to remember about blazor is that it is intended to run entirely in the browser, as a replacement for javascript, independent of the server side technology. The 'razor components' (ie. server side blazor) is a temporary stop-gap measure, because the fully featured blazor isn't ready yet. However, the intention is, and this has been very clearly pointed out by the developers many times, is that your components should work on either clientside-only or serverside blazor transparently. That means... you should not do *any* actions in your components that you can't do from the web browser normally; read files, access the database, check the CPU... anything you do in that space, makes your component non portable, and violates the fundamental proposition of blazor. Just don't do it.
It is very tied with GLib, you can't really use it without GLib. So it mostly a Linux Gnome thing. The language seems good though. Bare in mind that it is not garbage collected, it is reference counted.
Many thank!!! Can't wait to explore it. 
Who cares? what matter is the content! Omg Nobody encourages you, I'll delete the website.
It’s a collection of links of different authors. Browsing through some of them, I don’t see any reason saying it’s _pretty bad_. 
This one is nice: https://github.com/BornToBeRoot/NETworkManager
Please note that it is not really ready to be used in the real world yet. It’s awesome, but still experimental and not a good choice for any kind of production work. JS is still king for client side, but hopefully in the coming year this becomes a supported product that’s ready for use.
Thanks. I'm currently making a database app for my school project using winforms and sql. Should I use tasks to boost the app performance or it depends?
It's like sending a friend to get you a soda. You don't have to stop what you're doing, and at some point they'll come back with soda (or an exception, but usually soda). You will have to stop what you're doing to drink the soda, but that's ok :)
Yea I hope so. Or at least getting some news on whether or not it will be a supported product. I'd be using it for prototyping - I just don't have enough time to invest in learning JS (and all the different modules/frameworks). Already knowing C# would make prototyping easier for me.
Offtopic: was disappointed. I expected a minicube to be a raspberry-pi like device as a small cube with all the connections at the sides.
If any operation takes more than 300ms it will stop your UI from becoming unresponsive
Got any good article about blazor? So, right now there’s 3 kind if blazor types, client-side, hosted or server-side, which one should one aim for?
thats ome thing thats never going to happen lol an absurd amount of devs use windows just for vs2017
So what? Everyone can write articles on medium.com ...
SQL Express or Developer are fine choices and work very well with .net. SQLite is for single user applications (i.e. it is not a server) and has some friction points with entity framework schema migration code. SQL Compact... meh. The tooling for "real" SQL is just so much better. And if you're thinking that someday you'll deploy to azure then "real" SQL makes way way more sense.
I would say SQLite. It works surprisingly well for a mostly read, multiuser DB. Such as a small website.
Hard to say without knowing what you’re doing, could be fine just dumping json or the like to a file. Also, Postgres sidesteps a lot of licensing and platform issues, is offered in azure and from a quick glance looks cheaper.
Why do one thing at a time when you can do many things at the same time? Well, how do you do it? Normally this takes a lot of effort with thread management. But now you can just wrap it in a task and write the code as you normally would.
VS 2017 is actually quite snappy compared to earlier versions, I'm really happy with it :)
Can you tell your hardware, please? Maybe the problem is with the OS(since I didn't do a fresh install for it since 2016)
4 GB of RAM might be too little.
Try Jetbrains Rider. It's snappier and comes with resharper.
Second on Rider... It is a breath of fresh air after VS just getting slower and slower every version
Viscose has intellisense, you just need to install relevant plugins like omnisharp. Vs2017 is quite alright on my 4th Gen Intel laptop. Key things are - careful with plugins, disable git integration, do basic perf tuning. Most of the time it's some nasty extension, disable all of them and slowly turn them back on. And SSD, if your PC doesn't have ssd still - nothing will help you. Alternatively for small apps/snippets testing) I'm using linqpad (I wish VS would be so fast) Also Jetbrain's Rider is quite solid, as I heard.
I used to have an Intel 2500K and 8GB RAM (Windows 10) which was fine Now with my new system I didn't notice much difference, but I still do with VS 2013/2015 at work
I installed C# extension as whole(and it installed Omnisharp by itself) but still intellisense doesn't work at all. For plugins, I never have plugins actually nor thought of installing any, I disabled git integration already, and I applied performance tips I found in Microsoft's website/Stackoverflow and it worked noticably for some days then it came back to being a slow dog. I don't have SSD, only HDD. Is it true through? I mean I don't see a big problem with SSD or HDD. I'm going to try Jetbrain's Rider and see how it will turn out. I tried before IDEA(for Java) and I liked it so I hope it will turn out the same.
About £100 a year.
It is. I have 500GB HDD in hard disk. And I5 Intel CPU. 
If that is the only downside for a faster and quicker IDE with almost same features, then no problem at all. Besides, it seems there are License Servers to get it for free.
Nope. 2017. And I don't use Resharper.
It's based on java. Based on my daily professional experience, Jetbrains stuff is slow as hell compared to vs17. (16gb, 512ssd, w10pro). Indexing aline kills it for a while and startup is just dead slow. 
What’s the solution you’re working on like? I find that certain coding practices can murder VS performance but in general in 17 with no plugins it’s great.
I 2nd that. Anything prior to 2017 was slow. 2017 seems SUPER snappy to me.
No no, I meant that if you think 2017 is slow then you should have seen how slow 2015 was :) 
Notepad++ with CS plugin is pretty awesome. And has intellisense as well. I tend to use it more than linqpad, which is also pretty awesome tool... 
no
SSD is a single performance improvement that you're really need here. Any chance you can get one and install windows+vs on it?
Not soon at all. SSD in our country is just so expensive compared to HDD so money will be a problem and if I would do that then I would be much better selling out this computer and getting a better one.
Are you running ReSharper? Do you have Solution-Wide Analysis turned on? Do you have any other plugins that do that sort of thing?
They improved the speed of VS greatly with 2018. But at the end of the day, 4 GB of RAM is way too low.
I'd say that in winforms the most common use for tasks is to keep the UI responsive while you're doing some time-consuming task in the background (like fetching a lot of data from a SQL server). Tasks (and actions) make life easier when you want the UI to remain responsive and you don't have to worry about managing the thread pool as has already been mentioned. In winforms you can keep the UI responsive in mostly two ways(those are just the main ones I can think of right now): 1. Show a spinner/progress dialog with an animation while your Task is running (easy) 2. Dynamically update your UI while your Task completes your background task, while still allowing your user to interact with your main form (hard) Since it's a school project you might want to just use method 1 and go with a dialog that shows while your application crunches the Task. It's fairly simple and you can create a generic dialog that accepts an Action delegate that you then await with a Task. Once the task is complete you just close the dialog. &amp;#x200B;
I don't understand why I'm being downvoted. 
Not really. Ssds are the single strongest make-an-old-rig-perform-10x there is. A 70€ 128gb SSD is the best investment there is.
Have you even used Rider? Based on my daily professional experience, Rider is snappier and fits my needs more than bloated Visual Studio.
It is not old to be fair. I got it in 2016. It's just that I believe it didn't get designed for these softwares. 
Using async methods to access data is a good habit in general. 
Yeah, even if the machine you bought is new-ish, it's clear that it was made for light internet browsing and office work in mind. Not really something you would want to run *any* IDE on. A system that has at least 8GB RAM and an SSD are basically expected in 2018 by anyone that does serious work on a PC.
I have. I used it from early beta days when it came out, oh those days wiht all the debugger issues ;) . Also all the other tooling that Jetbrains delivers, and almost daily for last 5 years. Wouldn't say that I am very impressed with it. Unfortunately Java has no real alternatives, as that is my primary tooling, I'm very well aware of all the limits on both OS X and Windows.
I have. I used it from early beta days when it came out, oh those days wiht all the debugger issues ;) . Also all the other tooling that Jetbrains delivers, and almost daily for last 5 years. Wouldn't say that I am very impressed with it. Unfortunately Java has no real alternatives, as that is my primary tooling, I'm very well aware of all the limits on both OS X and Windows.
It doesn't help that the main open source UI skins aren't styled for business apps. I'd absolutely love to use a [MahApps.Business](https://MahApps.Business), would save me from needing to mess around with lots of control templates myself
Im surprised no one has mentioned using BackgroundWorker in Winforms. It provides a simple abstraction for multi threading and is easy to implement and the results and handle errors etc... Worth having a look at.
I have a colleague that *everytime* forgets if it's `ArgumentNullException` or `NullReferenceException` he's supposed to throw. The number of times we end up with a NRE in the logs and cannot figure out where in the hell the null could be coming from...
Lol, this is why I don't have friends :p
Uh, you're kind of making it seem like 1GB RAM computer. Sure it's not very good but a huge mistake to call it "for light internet browsing and office work in mind" 4GB is not just for light browsing and office, I installed on it a lot of IDEs(IDEA, Visual Studio Code and some more and now installed Jetbrains Rider and it works great for now) and they all worked well, except for Visual Studio. But yeah, maybe you're right, after all, softwares need more RAM these days.
Power consumption. Boot time. Size 
VS17 doesn't even sound comparable to Rider. I installed it minutes ago and it works very well, if it stays like this then I'm gonna say goodbye to VS17 until they optimize it in VS19 if they did(I have seen a lot of people complaining about performance besides me) Until then, Rider seems almost perfect and much superior to VS when it comes to performance which is funny since Jetbrains stuff work on Java.
No SSD... damn that's going to slow you down. If you really have 500GB HDD that's 3,5" (desktop computer size), because it's that small only 500GB it must be old and really slow. Could you just buy small SSD and use that for your system drive (C:)? Also remember to keep your C# project in that SSD. If you need extra space for other files like your pictures, videos etc. put those into HDD. Even if you get something small as 64GB SSD it might have just enough space for Windows 10 and your coding needs.
If you have the money for Rider, you may want to try upgrading your RAM to at least 8 GB first. I've run VS 2017 on a system similar to yours before, and upgrading the RAM made a huge difference. The other speedup that made a big difference was adding the /repos folder to the Windows Defender exclusions list (i.e., not monitored).
Uninstall resharper. Turn off antivirus (use another computer or vim fir pwn) instal a SSD
I'm up to 24 gigs of ram in the work laptop now since I tend to work with 4+ solutions open simultaneously. VS can be fairly memory hungry if you don't close files inside solutions. 4 gigs is way too low. If you're a single task at a time dev then maybe you could get away with 8 but I'd think 16 is basically the minimum to not feel lag when the compiler is running. 
I kinda agree its overhyped rn but it has some pretty good applications
It's not .net
Localdb + SQL management studio or SQL operations manager. For local development you don't need to install full a sql instance.
interestingly java does not make this distinction, it's just a nullpointerexception for both. 
Geez. Is it really that difficult? The names.... the answer is in the names....
xunit is the most popular framework and is preferred by microsoft. We use Nsubstitute over Moq, i personally try not to mock during unit testing.
SSD and an extra 4GB will almost certainly solve your problems. Also are you using any VS extensions (Resharper in particular is a common extension with large performance impacts)?
Because every comment shows that you'r talking about things you don't even know ... Im fine with helping beginners, but not the one that thinks they know everything and says that paying 100$ for resharper is a good solution for their crappy computer ... sorry man, don't want to be rude
4GB nowadays is light browsing and office work. Like NekuSoul said, 8GB and an SSD is a minimum for anyone doing serious development work. Visual Studio runs very well on my desktop. I am running 16GB of RAM, an Intel i5 4670 @ 3.4GHz and I have VS installed on an SSD. I have never had any complaints. Keep in mind that VS is not just a code editor, it is a fully fledged IDE with a lot of very important and very useful features. 
Progress bars that don't lock up the UI thread.
It could be worse. You could have colleagues that return null instead of throwing `ArgumentNullException`s.
second this just use postgres unless you have a strong reason to use sql server. the ef provider (npgsql) is very good. 
SSD really helps
Yep
I like using docker for development, and then you can just configure whatever db in services. More or less no install or configuring. Postgres is a personal fav
Yup, I second this 
You can use tasks to implement a progress meter in winforms. I just did this recently and had no clue how to do it until I started googling. 
&gt; winforms is not conducive to this kind of programming as it was designed back when CPUs had one core Not true at all, you can create asynchronous methods really easy.
Since .net framework 4.5 you don't need a bgw. The recommended way is using async methods.
A [RSSBandit](https://github.com/RssBandit/RssBandit) is a System.Windows.Forms app (now) running on .NET Core 3.0 and packaged for the Windows 10 store
Got any code snips? I have had trouble with TPL and STA threading before.
Yep
How do you define "experienced programmers"? How am I any worse than the computer science students that are applying for these same internships? I don't accept the assumption that I'm a worse software developer than the average computer science student. As far as I know, computer science students aren't taught many software engineering concepts. I've looked at the curriculums for computer science degrees before. My experience easily compares to computer science degrees. My degree (which included 4 classes involving programming), a computer science minor (another 4-5 classes involving programming), 7 software engineering related books I read on my own, several online courses, several respectable projects including a profitable ($20k) one I started in 2013, 6 years of experience programming on my own, etc. Anyway, I've been having more luck in the past week. I have some promising opportunities now. So no, I completely reject what you wrote. 
`SQL CE` is discontinued project. MS suggests using the `SQLite` instead.
Where did I say that recent Computer Science grads were any better off?
4GB just isn't great for VS. I had a laptop I nursed along far past it's prime since I only used it while traveling. It was capped at 4GB. VS2013 was the last version that ran well on it (I do also use ReSharper, though which adds a solid hit to performance). VS2015 was ok, and VS2017 was laggy but usable, not terrible. If you had an SSD drive and 8GB of RAM it should run much better.
Have a look at SharpDevelop IDE. It's just like visual studio but with small size! 
I miss those Windows ME/XP chevrons :)
I'm sure you wouldn't tell the average computer science graduate "chances are slim to none you'll find an internship for a programming job". I'm repeatedly hearing that software developers are in high demand as well. Someone will the talent and putting in enough effort to improve their skills shouldn't have much of an issue. I put myself into that category. What kind of "experience" would you say is necessary to get one of these internships then? 
Since when I said that I know everything? You seem like a troll to be fair.
Good for you then. I've used both Rider and Visual Studio and Rider has always been quite a lot slower than Visual Studio. So your problem must lie with your computer's software or hardware. It could be couple of things. Your graphics card drivers might have problems. You could try to disabling hardware accelation in Visual Studio 2017, maybe Rider doesn't use hardware acceleration and that's why it works faster. In Visual Studio setting uncheck "Environment/General/Use Hardware graphics acceleration if available" and restart Visual Studio. Second is that Rider's harddrive access patterns work better with HDD. Even it's faster you should still buy SDD to use as your system drive, because it's your computers biggest bottleneck. Then up memory to 8GB at least. 
Where do you see these chevrons ?