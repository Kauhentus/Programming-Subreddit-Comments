I use Roslynator as a replacement for R#'s static analysis &amp; refactoring.
Did you manage to make a time machine out of it then?
I haven't tried PuppeteerSharp but does it work with Razor View in the same way. Using JSReport we can use middleware and return the output as PDF?
I don't install years, they just happen! ;) But on a more serious note, I'm probably going to hold off for a bit. I jumped on the bandwagon for VS2017 too quickly and recall having issues because of it, although I can't remember what those issues were now.
/r/blazor has some blog posts and videos, there's not a lot out there since it's still changing and hasn't had an official release. 
I installed the Intellicode extension to partially fulfill the intellisense differences from R#. It's not the same, but bridges the gap a little. https://visualstudio.microsoft.com/services/intellicode/
I've worked from home 10 of the last 12 years doing .net development. You just have to find the right job 
FWIW, Roslynator and Roslynator Refactorings gets you most of the functionality people use Resharper for.
Being remote you'd need a LOT of experience IMHO. I've been remote for the past 10 years but I also have an unusual amount of experience in .NET. Unfortunately 2 years probably wouldn't cut it...I've hired for startups in the past and I'd usually look for at least 4 for a 'start as remote' type. Not to say they don't exist but they're comparatively super rare for limited experience. It's \*easier\* in JavaScript (Node) as the companies using it tend to be newer (so startups, small agile agencies etc)... however you'd still need decent experience (and likely a portfolio in GitHub) to even start looking at those. Sorry if I sound down on the idea and good luck with your search!
I installed 2019 in my Windows VM. Haven't used it yet, though, but I need to keep 2017 since we support 15063 right now. I yearn for the day we upgrade our shared library to .NET Standard 2.0 :)
Or switch to code first. After the initial scaffolding make the changes to your models and use migrations to update the database. I'm not saying it's "the right way", just throwing out another option. Code first is my preferred way. 
Hahahahaha thanks. That should say “last week”. I am not a morning person.
Same - I have 2015 Pro / 2017 Pro / 2019 Pro Preview / 2019 Pro all installed right now. They have \*seriously\* improved in the installation department.
Follow [https://edcharbeneau.com/](https://edcharbeneau.com/) he does some nice Blazor videos. 
I installed it, only thing not working yet is the red squiglies in the solution explorer that resharper gave me in 2017
Crazy they haven't fixed it yet. Maybe they think most people don't use NuGet feeds that way or something? I dunno. At least give us the option to disable caching or something until they can implement a proper fix.
Oh my goodness! I never saw that column! I have now rearranged the columns to have the Kind column just before the Code column.
Oh my goodness! I never saw that column! I have now rearranged the columns to have the Kind column just before the Code column.
Thanks. I think you have me pointed in the right direction. So a 'session variable' can be declared and then used by each individual 'browser' as long as they have the site open. I get that but could you take me one step further. I did set a session variable in my asp file and then was able to display it on my webform. However - when I went to 'use' it, pass it into another variable, I get the following message : *Session state can only be used when enableSessionState is set to true, either in a configuration file or in the Page directive. Please also make sure that System.Web.SessionStateModule or a custom session state module is included in the* &lt;configuration&gt;\&lt;system.web&gt;\&lt;httpModules&gt; *section in the application configuration.* Do you know of any example as to how to set this up? I get the concept but don't know what to add to my web.config, aspx or aspx.vb files. Thanks if you can still help. &amp;#x200B; &amp;#x200B;
This might help. &amp;#x200B; [enableSessionState](https://stackoverflow.com/questions/14334147/session-state-can-only-be-used-when-enablesessionstate-is-set-to-true-either-in)
Be aware, Blazor isn't released. So any courses/books would either be a waste or may not be relevant for long enough to be worth it. So if it costs you any money, absolutely hold off unless you don't care about it.
I don't have the HD space
Ah neat, will definitely check out. Thanks!
DevExpress just postes a free training course: [https://www.devexpress.com/support/training/blazor/](https://www.devexpress.com/support/training/blazor/) 
Why wait? It runs side by side with any other Visual Studio version.
If you're unsure, just migrate the DB again to delete the old one and have a new one (this is necessary anyway if you've made changes to any objects that get stored in a table. &amp;#x200B; More reading here: [https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/new-field?view=aspnetcore-2.2&amp;tabs=visual-studio-code](https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/new-field?view=aspnetcore-2.2&amp;tabs=visual-studio-code)
This translation is absolutely awful. I can barely make sense of it. 
Use the advanced search on Dice - tick “work from home” check box.
I like that you haven't edited it.
I tend to, yes. No real harm in it and if I open an older project, I prefer to use the version of VS it was developed with.
Maybe nothing, but the editor features are next to none in productivity. I can't code without it.
And they deprecate synchronous packages, so as the extensions get up to speed on phasing out these apis it will only get better (and in the mean time they get a mark of shame).
On that topic if anyone knows an extension that can rearrange my class members...
It tells a story
Thanks, I'll check it out.
Not sure about middleware, I just set the page content to a string, called the PDF method then returned the byte array as a filerresult.
Check out google.com
I could probably fix some of this with display scaling (currently at 150%) but that doesn't mean this is not an issue.
&gt; Also, it came with a new error, along with the banner at the top saying, "Visual Studio stopped responding for 12 years. Disabling the extension JetBrains ReSharper might help." *checks calendar* Is it 2031 already?? Wow. Where are my flying cars and hoverboards?
There’s usually a bunch on Indeed just add remote to your search. 
I know not everyone is the biggest fan of recruiters, but some of the bigger names out there can help you find something. I might call the local Robert Half office and see what they can help you with. I will warn you now, they tend to be non-technical people and have a bad habit of trying to fit square pegs in round holes. So do your research into what ever roles they find for you to make sure you are actually a good fit. However, I think recruiters can be a good tool if you find the right one.
It sounds good. I think you believe the problem is around the fact that the customer is passed around? That isn't abnormal as your cross domains, which MVVM is 3 layers, so it being used in 3 spots isn't crazy, even more so if this is your main data object. The base classes sound good, even more so if they share functionality. Each layer is doing something with the data as that layer needs to. The first one getting the data, the other one setting into a controller, and the other one to display the data of it. Is there something I'm missing, what strikes you as wrong? The only difference I sometimes see is the data object is often put into an "observable" or some "displayable" object wrapper and that might be passed around instead, this would decouple the other layers from knowing the dataobject and breaking that dependency, but that is more of a dependency problem. 
When you say service, do you mean web API? This sounds fine to me. I would keep both in the same solution to make sharing the libraries easier.
perhaps a script as your diff tool? Determine whats running by looking at running processes and run the desired tool. Its a bit messy but I am not sure there is anything in-built.
Thanks for the suggestions everyone, I shall experiment 
This should help you. Let me know if you need help after that. It provides an example in the link https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-2.2#environment-variables-configuration-provider
i would guess that you never do anything with the values? put a select with print on the end
They have all of the benchmarks source code [on GitHub](https://github.com/TechEmpower/FrameworkBenchmarks/tree/master/frameworks/CSharp). It would take a little digging into the folders but I'm sure you'll find it. 
Guys I found the recruiter scum, get the pitchforks.
So from looking at the relevant dockerfile, it appears that you are correct in your assumption that it's basically asp.net core responding in "plaintext": https://github.com/TechEmpower/FrameworkBenchmarks/blob/master/frameworks/CSharp/aspnetcore/aspcore-mw.dockerfile It essentially uses this code for the middleware (instead of MVC): https://github.com/TechEmpower/FrameworkBenchmarks/blob/master/frameworks/CSharp/aspnetcore/Benchmarks/Middleware/PlaintextMiddleware.cs Would you use this in production? Maybe. I can't think of many reasons why you'd want to use it other than sheer performance and it would certainly be easier to just serve up a static file instead in most cases. However, it does show the overhead of the MVC routing.
Its implementing the functionality directly in middleware rather than using mvc and routing. &gt; Are they referring to an app without the MVC middleware in the pipeline? MVC middleware can still be in the pipeline; its just not used for these paths &gt; Does anyone use that kinda pattern in production? Its how MVC middleware itself is written; auth; proxy, and most other middlewares are the same. Dropping MVC entirely on the other-hand means you loose all the flexibilty it gives you; including apis with content negotiation, and razor views/pages. However you may do this for a single purpose server; e.g. if you were only doing SignalR, websockets, proxying etc... But yes it does happen :)
I've used [Flexjobs.com](https://Flexjobs.com) (as a hirer) 
Lol I tend to agree they can be the absolute worse. However, personally I don't think they are worth completely ruling out. I've used different firms in the past and had some luck. Now that being said I've also had firms put me up for a ".Net Web Developer" position. Only to get to the interview and find out it is a SQL DBA job. So definitely make sure you're working with the right recruiter. 
It's still very experimental, I wouldn't jump on the bandwagon just yet
More like a hype train.
Personally, I turn off the git integration in visual studio and use the command line (via power shell). This helps me a lot when I switch environments, as I don't only develop in Visual Studio...or on Windows.
op here: I have been working on this series for some time. It was a really deep dive into Internals of .NET. Still, a couple of posts left but decided that it might be worth sharing as there are four posts at the moment.
yep
I've had recruiters do terrible resume pattern matching, eg "oh I see you have Microsoft silverlight experience, this company is a Microsoft silver partner, so that's a great fit!" I've also had recruiters basically lie to both myself and the company to get a deal signed. I've been told "yeah the president and vice president want to meet you" and shown up to the meeting where they were literally signing papers to be acquired. I've had recruiters dodge communications from me after I signed papers to the point that there was confusion about my start date. I've had recruiters leave their company, and contact me again from their new company like I was the goddamn Glengarry leads.
I'll get back to you when I get into work. I run winmerge command line and visual studio diff otherwise. 
Wouldn't throttle be the first method in the chain. 
Don't expose entities to your api 🙁 That's what dtos are for. 
I use Rider, has resharper built in and runs on my Mac and Linux desktop.
[SkipTheDrive](https://www.skipthedrive.com)
I don't think it solves your exact problem, but I created a vs plugin called [vsgitdiff](https://marketplace.visualstudio.com/items?itemName=JonathanGalentine.VSGitDiff)to show inline diffs in vs. 
&gt; I'm curious and amused on why devs have this affinity and I would like to read some of your similar cases and opinions. *DAE hate other people's code? amirite? guys?* Your post reads poorly. Are you looking for good counter arguments or a circle-jerk? The wording of your post implies the latter. "Barley". Lol.
Thank you for commenting! I tried the solution in the link but it didn't work then either. The issue was actually the command I was using to run the docker container. Essentially, the order matters when specifying flags in the docker run command. So the argument of "myapi" should come after all flags. I added the sample command I used that ended up working and some extra details in the original post if you're curious. &amp;#x200B; Thank you again!
Project Barley. It's a brew extension...
I'm really interested in Blazor, but I'm worried about Web Assembly browser support which would mean JS frameworks support greater browser support; any thoughts on this?
Oh that's right I didn't think of that bit where MVC can still be in the pipeline but not be used.
Just over two weeks ago, a construction crew of about 10 guys showed up at this empty lot right in front of my neighborhood and started digging a hole. They've been there every day since (except the Sundays). They've dug a whole, put up boards, gravel, plastic wrappers, rebar, and God only knows what else. Finally, they filled the hole back in with concrete. After 2 weeks, they're just about back where they started. I'm curious and amused on why they did all this. What was the point? All jokes aside, this is the foundation of the application, the base upon which all else rests. Have you ever tried to consolidate logging midway through a project? It can be **very** frustrating. 
[diff] tool = vsdiffmerge guitool = winmerge [difftool "winmerge"] path = \"C:/Program Files (x86)/WinMerge/winmergeu.exe\" cmd = \"C:/Program Files (x86)/WinMerge/winmergeu.exe\" -e -u \"$LOCAL\" \"$REMOTE\" [difftool "vsdiffmerge"] cmd = \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\vsDiffMerge.exe\" \"$LOCAL\" \"$REMOTE\" //t keepbackup = false trustexistcode = true [merge] tool = vsdiffmerge [mergetool] prompt = true keepBackup = false keepTemporaries = false [mergetool "winmerge"] trustExitCode = true path = \"C:/Program Files (x86)/WinMerge/winmergeu.exe\" cmd = \"C:/Program Files (x86)/WinMerge/winmergeu.exe\" -u -e -dl \"Source\" -dr \"Target\" $LOCAL $REMOTE $MERGED [mergetool "vsdiffmerge"] cmd = \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer/vsDiffMerge.exe\" \"$REMOTE\" \"$LOCAL\" \"$BASE\" \"$MERGED\" //m keepbackup = false trustexistcode = true path = \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer/vsDiffMerge.exe\"
i guess i should really just --tool use https://git-scm.com/docs/git-difftool#Documentation/git-difftool.txt---toollttoolgt
Why did you link to a fork of the repo? Also, what does this do differently than Identity Server or something similar?
Overlapping references are not legal in any runtime except Mono btw
Quasarke is my company I am wdunn001. There wasn't a lot fully working examples of Identity Server and .Net Core and certainly not with ADFS integration this is identity server packaged to be easily deployable.
IMO I dont think the View should have a reference to the customer object, but I could be wrong as I'm not super experienced. The way I've done it is to have the sub-view datacontext bound to instances of the viewmodels on the main viewmodel. I wonder how this all works with a DI framework? That is, all the pivot items and their associated sub-view have different customer objects. &amp;#x200B;
And the reason you can't just download and try it is?
If I knew the command to I would love to. I know how to make a new .NET Core application from command line with dotnet new and run it with dotnet run but I don't know how to do that with an ASP net application or if you can? I didn't even realize they were different until a couple weeks ago.
There is the .NET Framework, its Windows only and its been around for a long time. ASP.NET has always run on the .NET Framework. Mono came out and was an alternate implementation of the .NET Framework that ran on various Linux distros. .NET Framework versions go from .NET 1.0 to 4.8. I don't remember how ASP.NET versioning works. Microsoft decided they needed something that was more cloud friendly and that they were tired of losing asshole of the year award to Oracle. They re-envisioned their platform offerings and open sourced them in a transition that started a handful of years ago. Part of the output of that was re-imagining the .NET Framework as an open source cross platform runtime with better performance. The name for that is '.NET Core' and its versions go from 1.0 to 3.0 While envisioning the new runtime, they also redid many of the libraries typically used in web development. They made ASP.NET Core as a lineal successor to ASP.NET. **Here is the confusing bit**: ASP.NET Core could run on either .NET Framework or .NET Core, but with version 3.0 of ASP.NET Core, it will only run on .NET Core and not .NET Framework. Typically ASP.NET Core is released at the same time as releases of .NET Core. The versions run from 1.0 to 3.0. Getting back to your question...VSCode works great for editing and debugging ASP.NET Core web applications...it **doesn't** work well for **ASP.NET** web applications. I would recommend installing .NET Core 2.2 SDK and waiting until .NET Core 3.0 is released before using it in VSCode (VSCode doesn't work as well with previews, unless you muck about with your Omnisharp version in the config).
I checked your benchmark code and it has a major issue with the List Postive Random Set test. You are using Insert rather than the List indexer for every item you set. That is not equivalent to your test for LinkedArray Positive Random Set. Insert will force the List to shift every item above the index up one or create a new internal array and copy every item to the new. Therefore, at the end of the test, the number of elements in the List will be the original size + the number of iteration you ran, while your LinkedArray will keep its original size. That's why your results are so lopsided. 
Thank you. Will fix and run again.
While your in there 😁, I think you should compare it against a Dictionary and SortedDictionary where the key is a int. I expect your results will be more positive against those especially SortedDictionary because the builtin implementation is built to be more memory efficient but slower than it could be. 
Well, the customer object is specific to everything per tab so it’s really the only big dependency we have. I don’t see any need to obfuscate it, but if you have any more insight on it, I’m all ears. :) 
Try careers at stackoverflow.com - I believe you can file by remote - that is where I landed my current position
dotnet new web The full list is here: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new?tabs=netcore21
For real. I wonder how many opportunities are missed because the recruiter doesn’t know how to properly qualify candidates. People’s livelihood and well being falls on a recruiter that run technologies together. “How many years of c# sql web api do you have?” 
CodeMaid
Django and Node.js are backends, Angular is a frontend framework. [Asp.net](https://Asp.net) is a backend too and can be used with angular if you wanted. 
Xenko: [https://github.com/xenko3d/xenko](https://github.com/xenko3d/xenko)
Is it throwing a null pointer exception with Standards\[index\].ID or .Etching? If yes, then my guess is that the value of index is -1 meaning it wasn't found, and then your array of Standards will not have a valid -1 position item.
Moved to it day one, rest of staff to follow. We usually skip one version, so we were on 2015 and now move to 2019...
You can tell it to build for .Net core. I got it working once but it caused a later upgrade to fail, so, it's still a bit experimental
You’d probably get more responses if you actually said what the project is. Expecting everyone to click through and read isn’t going to work too well.
There is always a balance to be struck applying any practice (principle is such a loaded words that trips a lot of new devs up). SRP needs to be balanced against over abstracting, which will make things harder to follow and keep as a conceptual model in your head at once (i.e., when trying to figure out how something works, and you have to follow a call through 15 classes and calls because someone over applied SRP, etc., you tend to forget where you started by the time you get to the end of the call). That said, three classes wouldn't be out of place here. At the least, having an "API Client" class that makes the call, and a "Repository" or "DAL" class that handles saving things to the DB is pretty common: managing talking to an external system through a single interface class, and then gluing them together with whatever is running the timer. Something like "MyApiClient", "MyThingRepository", and a "MyTimedJob" class that uses both of those to wrap up the work, which is called by some scheduler in your app, or since we're in a .NET subreddit here, a BackgroundWorker, IHostedService, Quartz / HandFire handler, etc.
Its not a games engine, but Veldrid https://github.com/mellinoe/veldrid is a portable gfx library that can run on .NET Core (.NET Standard 2.0) and supports Direct3D 11, Vulkan, Metal, OpenGL 3 and OpenGL ES 3
Maybe a dotNET-based automatic beer tap? 
&gt; How many years of c# sql web api do you have? About 10 blockchain’s worth sounds about right.
Absolutely sounds normal to me. Typically I’ll have a handful setting up Serilog, even more setting up Swagger stuff, hooking up an auth provider, registering other stuff I might need like MediatR pipelines or FluentValidation, creating standard error middleware, etc. If you are at a large company, a lot of this should be generated by a CLI or forked from a ‘standard’ template that is sitting somewhere.
Do a lot of web scraping HttpWebRequest performance when debugging in 2019 seems 90%+ degraded versus 2017. Doesn’t happen when running a 2019 compiled binary without debug or in debug in 2017. Tested on multiple machines. Waiting due to this.
He's likely talking about all the "XerProjects".
Yes web API!
Unity uses .NET Core on Hololens, and I won't be surprised if they switch over to .NET Core for Windows/Mac/Linux in the future (right now they use Mono).
I'm kind of curious about something. Does switching over to .net core on windows/mac/Linux mean switching to .net core on the development platforms, or the target/deployment platforms?
Right now Unity Editor runs on Mono and it builds Windows/Mac/Linux builds to run on Mono. By switch over I mean they replace the Mono runtime with .NET Core . Right now if you have source code for a .NET Framework project you can try to build it in .NET Core and 99% of it will just work. Same idea here. Of course .NET Core has some different APIs so some adjustments will be needed in the Unity source, the same as when you migrate a project from .NET Framework to .NET Core. And building a Unity project with .NET Core will probably need an opt-in as Unity projects source code would need similar changes (they did a similar opt-in when adding support for .NET 4.x compatible Mono as opposed ot .NET 3.5 compatible Mono).
Thank you for the very thorough and well thought out explanation!
"enter click handler here". Well no, you dont add the handler there. Could you please add more code? &amp;#x200B; `Observable.FromEventPattern&lt;EventArgs&gt;(` `h =&gt; obj.Event += h,` `h =&gt; obj.Event += h)` `.Throttle(TimeSpan.FromMilliseconds(300))` `.Subscribe(a =&gt;` `{` `/*event handling here*/` `});`
&gt;filerresult can you please share an example for github repo link? there isn't much on the documentation side for PuppeteerSharp
Everybody who jumps on it now will only build something trivial thereby reinforcing their beliefs without actually proving anything about how viable Blazor is for a serious project. That's how new and hyped technology always pans out. I'm gonna wait a year or two for people to use it in production and see what they think, not hobby devs.
Good point I was also wondering why the title states that it compares net with angular when they are completely different thinks 
Thanks!
Maybe what they meant to say regarding the "lack of framework" is that your logic is not separated into tiers/de-coupled etc? I haven't seen your project but I imagine that it might be just aspx.cs files with all the logic in there. is that true? in that case you might want to look into separating your front-end/business/ and data access logic or look into mvc. it is true that that kind of organization accelerates the development of any software/app. Many big sites are still using asp.net . In my opinion there is no reason why you need to migrate to another set of technologies, that time might be better used into cleaning up what you have.
I don't believe the application needs to obfuscate the object, but could you further explain your sub-view data context? Either way the main objective is to pass the customer object to each view model that depends on it, which is about all of them.
There's a Monogame fork that works with .NET Core. If you're into roguelikes, BearLibTerminal works great in core.
Scalability and maintainability: Jet engines vs. deep friers, race cars and tennis shoes
https://docs.microsoft.com/en-us/visualstudio/test/isolating-code-under-test-with-microsoft-fakes?view=vs-2019
Good points raised here mainly: having your employer trust that you will work and communicate properly. You need to show your employer you are doing shit without them checking up on you. So work in their office for a bit. Document everything you do and provide links to it in code. Every check in give decent comments so other Devs know what is going on. If the Devs that have been there forever are comfortable with you, then your boss should be. It is likely your boss will ask the other Devs anyway if they are even keen on keeping you if you remote.
[https://learn-blazor.com/architecture/interop/](https://learn-blazor.com/architecture/interop/)
Your value does not contain a string that represents a number. What's the actual content of `hdnTransitionFacility.Value`?
It's an ID, for example - 300003002. I was thinking this as well, but I checked the DB for any of these id's that might have a weird character in them or something that was not a number, but they are all numbers. 
I was asking about actual content, the exact content. Because that is your issue: The content can't be parsed to an int.
Yes, 300003002 is an example of the exact content that is being passed. There is a large list of facilities, user selects one, it's ID ( example: 300003002 ) is stored in hidden value. These ID's only can only come from one table, so I search the ID's in that one table and they are all integers. Would it fail if there was trailing whitespace? Do I need trim the value before it's passed? Would 'null' throw this type of exception or would it throw null reference exception?
[ActiveX](https://en.wikipedia.org/wiki/ActiveX) Lives!
&gt; Yes, 300003002 is an example of the exact content that is being passed Differently said: What's the exact value that causes the error? You can configure Visual Studio to break on exceptions. &gt; Would it fail if there was trailing whitespace? Do I need trim the value before it's passed? Would 'null' throw this type of exception or would it throw null reference exception? Trivial to test. Trailing or leading whitespace does not cause an error. `null` results `0`. But an empty string results in an exception.
The unfortunate part about debugging this issue is there is over +10,000 plus records to find the one, or ones that break and throw the exception.
Read again what I wrote before. Configure visual studio to break on the first exception. Then just look at the value.
Are you working without a debugger? You could use int.TryParse and print the value &amp; rowId on failure.
Here is a link without the partner referral: [https://www.humblebundle.com/books/microsoft-and-dot-net-books](https://www.humblebundle.com/books/microsoft-and-dot-net-books) 
Need a CRM at my place, hold my beer, gonna deploy this example. &amp;#x200B; Joking aside I will check this out. 
What an amazing deal. I'm currently reading Pro C# 7 With .NET and .NET Core and it's been a great asset to my development career. I'm purchasing this bundle. Thanks!
Thanks for your reply but that appears to only work with VS Enterprise and doesn't work for static methods. 
I haven't done it, but you should be able to target standard21 with msbuild directly
Yeah I was just quoting them without thinking about it, but you're right.
JustMock can mock static objects . Is not free, but is payable for a single developer. JustMock is a great isolation framework, you can fake practically everything. The only issue is DotCover/JustMock integration problems, newer versions can break it.
I dont't know such library. I guess you will need create your own interfaces and classes like DateTimeService : IDateTimeService, which you mock and will return for example mocked: \_dateTimeSerive.NewGuid()
Yes and no. When I started it was just a bunch of aspx.cs files as you described, but I've been organizing things into classes, creating repositories, etc. as I realized that I was repeating code which made it hard to handle when one thing needed to be changed but was spread across multiple files. Plus, made it easier to access methods/data from other parts of the application without much work.
I don’t get the reference with an IE only control? A better external reference to compare it to would be using a dotnet tool to “electronify” your .NET Core App.
There is an example of what you're trying to do in this project. https://github.com/codenesium/samples/tree/master/PetStore Basically you want to use Identity and bearer tokens to authenticate. If you have more specific questions I can try to answer them. Auth is a bitch in my experience. Especially with an SPA. 
That's what I'm doing currently. If there's not a library out there I guess I'll keep doing this.
Install the free ‘visual studio build tools’ for 2017.
You can try GDS Google Map which can be downloaded from https://www.gdsgooglemap.com/. That control supports Google Map and Open Street Map. 
Take a look at IdentityServer, it's probably what you're after. Otherwise some API gateways can handle issuance and validation of tokens, but this may add unwanted complexity. 
In one app I had a main view containing a tab control, and associated view model. Each tab content was another view (the sub views). Main view model created the instances of the various objects and sub View models, which had their dependencies injected via constructor. The sub view data context was bound to the corresponding sub view model in the main view xaml. (I call the view part of another view a sub view I dunno if this is the correct terminology 😅) In windows template studio for UWP with MVVM-light they have a viewmodellocator class. In the constructor of each view, the viewmodellocator is retrieved via static reference from which an instance of the view model is obtained and assigned to the data context. But I guess that is all for a kind of static structure. I don’t know how it would work if you have say multiple sets of views, each the same except for the customer object. 
I wrote a library a few years ago that will extract proxy classes and interfaces for static classes in a given namespace. I need to go dig it up and publish it. Used it on a vendor API that was rife with static calls.
A product called Typemock does this. Its not free. It is also incredibly slow! We used to use this at my work and now we have a huge job of rewriting everything to not use it as unit tests take 25 minutes to run using that framework. It also promotes poor coding practices IMO. As another person said create interfaces to expose these functionalities and create default implementations that just wrap the static calls and then you can easily mock them for tests. If you need to control it for a test then extract the interface that would be my mantra 
That would be super cool and really what I'm looking for. Publish that sucker. I'm sure other people would use it. 
Lemmie dig it up and I'll get you back.
Thanks for sharing! Great write up. I've wondered how it all works together, this seems like a great resource to try it out myself.
If you don't have dependency injection going, this can be a pain in the butt. however this is a good way to do it nonetheless. you'll have an easier time having an IDateTimeProvider than trying to mock statics. 
+1 for identity server
can you try it without the canned acl? have you enabled public access on the bucket? 
i am sure vs itself can do sxs, but the other components on the system are either there or not (think all the msi it installs). if you have an "off the beaten path" scenario, waiting is probably wise. 
it looks like dictionary wins on every benchmark. what does linkedarray do better? 
I’ll try it without the canned acl. I though the purpose of the IAM user is to give the application access without the S3 being public 
You should be able to edit the csproj, alter the &lt;targetframework&gt; and use the latest build tools to do it.
You can't target it from VS 2013. The dotnet core SDK comes with a command line tool that allows you to code in VS 2013 and then build from the console. In your project directory, run dotnet build --framework netcoreapp2.2 List of frameworks: https://docs.microsoft.com/en-us/dotnet/standard/frameworks
It’s more like the inverse of an ActiveX control, instead of embedding a Desktop control in a browser it embeds a Browser in a Desktop App.
yes that's the idea, but that precanned policy says the whole internet can access that file, which i suspect is not what you want. your iam and s3 policies look fine (i think, it's been a little while). if this is supposed to be internal, get rid of that public read precanned policy. if it is supposed to be public read, you have to mark your bucket as such. 
I'd recommend not splitting it up. Make it work in one service then make the decision to make another service. I understand the learning aspect of having multiple containers running. You can make the piece that serves the app separate from the API container 
Nice writeup. Slightly OT - What are people using to tie in payments (stripe/paypal) with user accounts?
The reason I was using insert is because the List&lt;T&gt; doesn't support arbitrary inserts using the indexer outside the established highest index of the List&lt;T&gt;. I've run the tests again with Dictionary and SortedDictionary. As you expected, SortedDictionary performed poorly. The link to the benchmarks has the updated spreadsheet, but here's a synopsis: | | Loading | Positive Random | Open Ended Random | Find Last | Enumerate | Sum | Memory | |-|---------|-----------------|-------------------|-----------|-----------|-----|--------| | LindedArray | 62 | 373 | 329 | 32 | 763 | 1559 | 1628693 | | Dictionary | 38 | 22 | 30 | 4 | 8 | 102 | 668789 | | SortedDictionary | 435 | 780 | 462 | 18 | 42 | 1737 | 670201 | GitHub is all up-to-date as well.
[HTML Applications](https://en.wikipedia.org/wiki/HTML_Application) live!
https://www.reddit.com/r/monogame/comments/8xugo5/dotnet_core_monogame/ You can get the monogame template by following that link. 
I’ve been staring at ASP.NET Core Identity and IdentityServer4 on and off for weeks, and this summarized and confirmed my findings nicely. The one question that I have outstanding, however, is... Is it possible or a wise decision to completely move the login form out of the Auth Server and into the Angular SPA, thereby keeping the Auth Server strictly as a Web API? Many examples, including this one, use the login form out-of-the-box. Besides convenience, is there a design decision behind this vs creating a separate Angular Login form and calling the /login endpoint?
Thanks for the post very nice to read this post keep on posting .
Outside of the fact that you will need the OIDC middleware active to create the bearer tokens/cookies for the various clients, so strictly keep it as a WebAPI project isnt even an option, IS4 is, by its nature, an SSO platform in a box, in case you haven't given that any thought. So from an architectural standpoint the STS/Auth application should expose its own UI for any auth client, not just your SPA. We have MVC5 clients, Angular clients, a webforms client, and several API resources that authenticate via IS4. It would be really poorly implemented if each of those had to initiate the login workflow via any 1 of those applications, with all the crazy CORS considerations. If you're using IS4 as a single client logon solution, you probably should have just used OWIN.
Nice :) Do you want to do a PKCE one next? With React? :) 
If you voice your concerns then maybe someone can comment on them, now it’s quite impossible
Ask the architect to provide a functional example of what they are selling. [u/tulipoika](https://www.reddit.com/user/tulipoika/) is correct that you haven't provided enough information to assess the technical approach, but there are three types of architect and I'm guessing he's (is it a he?) your team architect or senior developer who does architecture. Calling him the head architect means I could be wrong, so any clarification would help :) tl;dr A project based technical architect should be able to back up their choices with a simple prototype. 
1. We'll be relying on a framework to generate our views for us. Which is alot less code to write but there surely will be limitations when some form of a custom design or validation is required 2. Our structured models will fall away. We'll only have a list of input values to works with. Which in turn means that a list of identifiers will have to be maintained on the back-end. 3. Complexity of the solution vs. getting a mvp 
He's the team architect and his company specialises in js frameworks. We the developers are from two different contracting companies working together on a project for the client. 
Ok, perfect, then he needs to be able to express his concept in a concrete code example. I can't stress this enough. If he can't do this or have someone in his company do this, you are going to be wasting your time establishing whether his concept is BS. I'm kind of lucky in that I'm an asshole and would smack the stupid sod down, but you should approach it more gently. Ask for clarification, ask if there's a code example, ask for some metrics about its scalability (or ask how scalable it's been in the past (basically we're asking if it's performant)), ask how many clients they've used this approach for. If this is &gt;0, use this as leverage to ask for more detail including all the above. &amp;#x200B; If you're not technical team lead, you need to escalate this to them with all the concerns above and find out their thoughts. If you are, or it's a floating team with no obvious head, you can do it. &amp;#x200B; So this is all people stuff. Again, there's not enough information to assess the viability of the tech directly, it might be a perfect solution, but asking for clarification should be encouraged, not discouraged. 
&gt; The reason I was using insert is because the List&lt;T&gt; doesn't support arbitrary inserts using the indexer outside the established highest index of the List&lt;T&gt;. That's true, but List&lt;T&gt;'s Insert method doesn't support that either. For example, List&lt;int&gt; arr = new List&lt;int&gt;(); arr.Insert(45, 10); will fail. Looks like there was a bug in the previous benchmark that made it always set at index 0. &gt; As you expected, SortedDictionary performed poorly. The link to the benchmarks has the updated spreadsheet Yea, I think SortedDIctionary is the fairest one to compare against because it is ordered by key (like LinkedArray is on index) and offers arbitrary set indexing. LinkedArray is definitely a worthy alternative to use over that. 
You can but then it's a Windows Docker container (will only run on a Windows host).
That would be more than sufficient. :) Thanks for your answer.
Yesnoish. You can use [Mono](https://www.mono-project.com/) instead of .NET Framework, then you can use Docker just as you know it. Mono is largely compatible with .NET 4.6.1, so this might be a viable option for you. Mono works fine, only issues I had were with server-side WCF (I could not get it working) or some very specific use cases (async `TransactionScope` was not supported last time I looked). Alternatively you can use [Docker Windows Containers](https://www.docker.com/products/windows-containers) instead of the regular Linux containers. I have not used them myself, and I don't know of anyone who used it. You have to be aware that you won't be able to run those containers on most platforms that support Docker because you will need a Windows host, and most providers are Linux based. I would suggest to investigate the Mono option and steer away from Docker Windows Containers.
For file system access, check system.io.abstractions at GitHub.
Static Files, MVC, SignalR, Throttling, authorization, authentication.
&gt;Is it possible or a wise decision to completely move the login form out of the Auth Server and into the Angular SPA, thereby keeping the Auth Server strictly as a Web API? I'm afraid I do not see the reasoning for this. I have limited experience with IS4, however the entire point is to have a single authentication server which can have multiple API (resource) servers attached to it, with limited scope options. You are free to use the IS4's pipeline and create your own login form within Angular and just call your API endpoint, e.g. `/account/mycustomloginendpoint`, where then you can issue a token and do whatever
Thanks for posting; this is something I really needed to read for a project I'm on right now!
Yup thats what i am doing but it doesn’t seem to work unless i follow it up with a select and propagate the args to the subscribe.
As some others answered before, you can, with windows containers. However, those containers tend to be big. And that technology is not as stable as Linux containers. Bottom line: yes, you can
Thanks for your detailed answer! My project depends on a DLL that I use to communicate with an external USB hardware. As I am concerned that would lock me out using any Linux based environments.
Does docker allow hardware passthrough?
Good question. I only know that on Linux that's definitely possible (at least in privileged mode). Seems that I still have some research to do.
It's not uncommon for first party applications to host their own login form and use resource owner password flow
Stay sorted.
Are you in the business of generating dynamic forms? Meaning, is one of the key features of your product the ability for users to create forms on the fly? If so then this is a sound and necessary approach. If not and you're just trying to save the effort of rolling forms by hand, I hope for your sake that you're not responsible for maintaining this application.
I'll say what you're not saying; this is the sort of idea that someone new to an Architect role would conceive. We've all had the idea in the past and some of us have actually done it and then deeply regretted it later. No offense to anyone that is doing it and that doesn't want to stick their head in the oven. The few times I've run across it and done it the edge cases have been endless and at the end of the day we would have been better off copy/pasting forms and changing them slightly.
Yep, it' idiots who suggest idiotic architectural nonsense never e them. Again, I'm an asshole, so will go full rhino on them if necessary, but a delicate approach will work well. If they can't answer the question, offer to help, try and establish a plan with who ever is project managing the thing to prototype some stuff to smooth the process later. &amp;#x200B; It sounds like you have a consensus in the team, so you need to coagulate that (bloody references) into a proposition. **Fun fact** idiots who suggest idiotic architectural nonsense never look at the code, so do what the hell you want for a cycle and then have the argument. If you need more ammunition, ask how the new architecture will affect velocity. If they say "gud", then ask how velocity is measured and what the current velocity is. There are a butt load of ways to deal with idiots, but don't screw yourself out of a job trying to manage them. "How will this change the current project's delivery date?" is a fun one. &amp;#x200B; I'm in a similar situation to the TA, but he's handling it badly.I respect the input of people like you greatly. I literally can't do this without a bucket of smart people around me. &amp;#x200B; I have three responses to most architectural and technical questions: &amp;#x200B; 1) I don't know. I will investigate and come back to you (or "lets have a play and figure it out") 2) Here's a working solution, I will happily answer questions about how we integrate it , what system metrics will change and any other business related to this. 3) I think this is a good idea, but I'm not entirely sure how it will affect our system. Would one of you like to help flesh it out? &amp;#x200B; I also have "sod off" and "It will work, but let's just wing it and hope for the best" ;) &amp;#x200B; Seriously, don't be me, but do find a way to break them down and build them up again properly. That or cheat. &amp;#x200B;
The resource owner password flow is built in and exactly what OP was asking about. It’s not recommended to be used in most cases, but is convenient sometimes , especially in legacy systems. I’ve used it in a situation where depending on the customer, I have to hit a different already in use authentication system. One I have control over, one I do not, so I did a resource owner password flow that injects the appropriate password validation service so that both systems and the associated resources could start using OAuth where it wasn’t used previously. Is it the most secure? No, but it helped improve things and get on the path of potentially getting to OIDC or FIDO instead of the previous standard of we built our own thing to no standards.
&gt; Fun fact idiots who suggest idiotic architectural nonsense never look at the code, so do what the hell you want for a cycle and then have the argument. This is the best approach, as long as you're senior enough to be able to get away with it. You can argue until you're blue in the face, lose, and then get forced into building software that will make you wish you were dead, or you can just smile and nod, build it however you want, then take the shit for it when the "architect" finds out. As long as you can weather that storm the total amount of personal discomfort will be much, much less.
Lol, exactly. "This doesn't follow the abstract white paper I published in 2014". "Yeah, but it works and the business are delighted." "..."
Yes. There are different auth grant types. Implicit will allow you to own the login form and send the username and password to the IS4 server. We are doing that on one project. A more secure approach is to redirect to the IS4 app using a hybrid auth grant type. Then you will be redirected back to your SPA with the token as a result alongside some other Oath2 things. 
pretty much this. I had a project that used ng formly and it was a massive pain to work with and integrate into the system; then there was finding a solution architecture that can encompass all possible use cases. Most forms ended up having to use bespoke controls that never really got shared across other pages and most forms just overrid default behaviors whenever they felt like it. 
Hm , as far as I remember that is not implicit flow. Imlicit flow also should redirect the user to the auth server and redirect back when the process is finished.
You may be right. I did this a while ago. But this is how one of our apps works. The other redirects. I’ll leave it to OP to figure out which is which 
Would anyone mind compiling these into a list with short descriptions of what they do and if we need them or not?
Check out Elton Stoneman https://youtu.be/QP2RcV-vW00
Is your USB hardware by any chance a licensing dongle? Gemalto?
Installed. So far so good
I have fought way too often with Razor to ever dare dealing with it again. It works well if you do everything just as Microsoft wants you do, but if you ever deviate a bit you will run into issues on every corner and the tooling starts to fall apart.
Blazor != Razor
Blazor is Full-stack web development with C# and WebAssembly &amp;#x200B; See blazor.net
I'm aware. But I thought they're building it upon the Razor stack, or at least the Razor team is involved. That information might be wrong.
If you really want to see in detail the middleware you have running and the order in which they execute, I recommend taking a look at this article on middleware diagnostics. https://andrewlock.net/understanding-your-middleware-pipeline-with-the-middleware-analysis-package/
Thank you for that. But I am not looking for running ones. I developed coupel of APIs for enterprises and have worked with almost all dotnet core built in middlewares. Anyhow, I dont remember one than I just use it without customizing. So I kindly ask people to say what you use or need. I’m planning to create an opersource middleware pool with fluent pattern to cover most of the things that business app needs. If you want to contribute, more than welcomed.
Interesting. As someone new to C#, what kind of issues have you run into with Razor?
We did this, for a music school admin system, where the admins could decide how and what information they wanted. Was quite easy to do and easy to manage. Validation was so quite easy, each form field has a type, so applying validation was always quite straight forward. I designed and created this in an angular 1.x. I don't see any issues with what you architect is suggesting. Either way you are getting a Framework to render your with whether it is Razor or angular. Pure MVC and Razor has a lot of drawbacks.
The next version of my company's UI will be written in Blazor. Full stack C#, baby!
No :) 
Like most things, it depends on what you are trying to build. 
It seems _extremely_ premature to make that call with what we've seen to date.
i think we see the date at the next build conference
No idea what you are talking about... Angular is literally designed with dynamic forms in mind so that you aren't copy and pasting a bunch of code between simple CRUD forms. Generating forms is a no-brainer if your app has a lot of them. Those edge cases can (and often should) fall back to a static form on the client. At least for MVP. Then you can iterate on the implementation to handle increasing complex uses like sending back validation details. 
Hrm? I don't mean a release date. I mean basically _everything_ about Blazor is experimental right now. Blazor still has a lot of hurdles to overcome to make it ready for prime time, and I wouldn't bet my business (or man hours) on it at this point. It's release in Core 3 will probably make it fun for personal side projects, but I sure wouldn't introduce it to my business stack at this point.
It does work for static methods. You need to use the shim. TypeMock used to be something that could do it, not sure if it still exists though.
Just checking. Some of these dongle work by installing drivers which expose local webservers, which could be helpful in your venture.
I think Blazor is a bad gimmick. You download several MB to load the mono runtime and significant parts of the BCL in order to run an application that will mostly combines strings together a thousand times slower than the same application in JS and html. That said I think something like Unity's Burst compiler would be very useful for generating actually interoperable WASM libraries.
Any chance to eliminate javascript. Nuget .NET packages directoy in the client? Yes please. "Mature" apps will stick to Angular/Vue etc. and that's fine, but we're not fans of Javascript, to say the least. Newer apps get to benefit from Webassembly.
Some businesses play fast and loose. Some businesses like things that work.
1. No need to rely on a framework. Just use Angular Dynamic Forms. This is exactly what it was designed for. 2. Don't let this happen. Have a versioned API with specific contracts. You break the contracts, you version the API. That API can return metadata about the form. See the example at the end of my comment. 3. This all depends on how many forms you have. If you have over 25 forms, I don't think one will be significantly quicker than the other. There might be a slight learning curve for dynamic forms but that's a useful tool to learn regardless. API return example: { "formId": 1, "saveButtonText": "Save", "questions" : [ { "type": "name" "value": null, "label": "What should we call you?" "validators": [ { "type": "required", "value": null }, { "type": "minLength", "value": 3 } ] }, ... ] } Building a dynamic form component to handle this kind of metadata is relatively trivial. As your product matures, you can start adding cross field validation, input masks, rules for hiding/showing fields, etc. For MVP, I might not even support client side validation since you have to re-run that validation on the server anyway.
Did you change anything in your models? 
Actually ASP.NET Core 3.0 won't ship with Blazor. It ships with Razor Component which is the same as Blazor but everything runs on server and client communicates with SignalR. Blazor will come on later releases. My thoughts on Blazor: On the demo videos I've seen that Blazor can also be ported to electron witch means cross-platform desktop apps with HTML and CSS GUI all in C#! Great for those who don't work with XAML (like me). My thoughts on .NET Core 3.0: The feature that I love is GPIO library. Up until now for C# developers who wanted to try IoT, Windows 10 IoT and UWP was the main tool which is available only on a few boards. But with .NET Core 3 every board that support Linux (which means all of them) can be uses and it doesn't require UWP and XAML skills.
Blazor is not more performant or an extension of features that can be achieved by other SPA techs like Angular. That does not mean it doesnt have a use. I see it particularly useful for teams that don't already have a frontend team and have existing ASP.net Forms and MVC apps currently in production. Converting these legacy applications is made far easier using Blazor. Thats the only situation where I would recommend this technology.
They renamed Razor Components back to Server Side Blazor.
https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
&gt;will mostly combines strings together a thousand times slower than the same application in JS and html. Seems like a massive over exaggeration. You have numbers on that? I know the download is now huge but blazor itself is still experimental. razor components however need no such download to my understanding.
(backend person with barely enough front end knowledge to qualify as full stack dev) I like the razor components (server side blazor) for internal tools and I'm very conflicted about client side blazor: The idea to write only .net through the whole stack really appeals me, but.. for the most part, you are still writing js as global variables and then writing additional .net code to trigger that JS code, which imo is not ideal and if you end up writing js anyways, why not just stick with it for front end? And anyways blazor (wasm one) is still very experimental and shouldn't come near production code imo.
Didn't touch XAML before, what's wrong with it?
Yes actually I added these fields: &amp;#x200B; public bool Enabled { get; set; } = true; public bool Confirmed { get; set; } = false; public string ConfirmationCode { get; set; } public DateTime ConfirmedOn { get; set; }
&gt;I mean basically &gt; &gt;everything &gt; &gt; about Blazor is experimental right now. IN the JS world people commit to brand new frameworks every month.
I would be surprised if that was the reason. What about the db context? The Users property should be an IQueriable&lt;T&gt; or a derivative of it. Can you check the performance the old code again? Just to verify that the blame is actually placed the correct place. 
There is a _huge_ difference between "new" and "experimental'. Even still, developers get strapped with years of technical debt all the time because the jumped on the wrong ship too early.
Sorry for slow reply. Thank you I appreciate your wisdom. Currently I do have as you suggest. A repositoryClass, A MyAPIClientClass, A SchedulerClass (this ties it all together). I now realise I was wondering if I should have 4 by spliting the SchedulerClass into two. A TimerClass and A manager class. Im still not sure which way I will go, but I guess as I work through it will work out in the wash. I could foresee unit testing would be better with 4 classes. I suppose balance only is learned from experience.... Thank you
\&gt; There is a *huge* difference between "new" and "experimental'. 
I think it comes down to how you are defining the forms; I wouldn't be concerned about pulling it off in Angular or really any other front end framework, the implication is that you're going to try to infer a form definition from a domain oriented schema and that's where I've experienced a lot of pain. If you set out to build an actual form definition schema that you're going to pass to the front end, or just straight up define forms in simplified markup (or json) then yeah you can and should be using that to dynamically build forms instead of manually trotting out html.
&gt; now it runs a query and a join for every row in the Users table The code you posted literally means "query every row in users table joined with jobs, profile, and roles", so unless you changed something in the method you posted, it's always been doing that part. Things I would look into or think about: * Are you sure the problem is here (as in, the actual execution of the SQL query) and not in some downstream processing of the list of users? * Do you have multiple enumeration of the IEnumerable causing the query to execute multiple times? * Does the problem appear everywhere that you've made these changes or do the performance issues only appear in some subset of your environments? * If you're sure the problem is with the query, does executing the same raw SQL display similar performance issues? * Are all of the tables involved (including any bridge tables) probably set up with primary keys and clustered indexes?
Depends on how you're using the results of the query. If you want the entire collection, try explicitly calling .ToList() to run a single set-based select before iterating over the results.
Thank you. I’m working through the page you sent right now. Do you think I need to create models like it says? The database is hardcoded in SQL
Blazor has a long way to come, but I think the potential is there. They need to put more resources into full AOT compilation to webasm (rather than CLR), which I think is one of the goals along with tree-shaking to reduce the download size significantly. How feasible that is, I don't know, but I did see C#/mono run natively on a micro-controller the other day, so who knows. Smarter people than I are working on this. I'm cautiously optimistic.
Yes. The models define the data that you return and accept. They will automatically be serialised and deserialised to and from json
My only experience with models is with .NET Core in class. I used the models to create migrations to make the actually tables in the database. I’m guessing I won’t be using any migrations in this case?
I didn't meant that XAML is bad. It's just that when I (and I thinks many others) learn and get comfortable with something which takes years, I resist to learn again for other aspects of programming and want to reuse my skills as much as possible. As a web programmer the best I can do is to keep up with web technologies. Although I like other areas of programming like desktop, gaming, IoT but there isn't enough time to master all of them. I meant being able to enter new areas with the same skills is good.
The data I want to return is already in SQL stored procedures. I have C# data tables in the class library that are populated by the stored procedures. Would I not directly access those instead? Sorry if these are dumb questions. I’m in my final semester of college, and I haven’t been doing this for long. 
What I meant by runs a query and a join for every row in the table, is it runs a single query for every row. So if I have 40 rows, it's running 40 individual queries. 
\&gt; You download several MB to load the mono runtime and significant parts of the BCL One time, from a CDN, and then cached. If Blazor became popular this would be a non-issue.
Really depends on what is running the job. For instance, if this were just an IHostedService background service running in a .NET Core web app, then I'd probably do the following: 1. A IHostedService that handles Start and Stop actions. 2. A separate class to manage the actual running task, basically a Task.Factory.StartNew() that runs a continuous while loop with good error handling and a CancellationToken. 3. A Task.Delay in that loop. 4. The aforementioned Repository and ApiClient classes that are run within that while loop. Something like this: 1. The IHostedService implementation - https://github.com/i8beef/HomeAutio.Mqtt.GoogleHome/blob/master/src/HomeAutio.Mqtt.GoogleHome/TokenCleanupService.cs 2. The class doing the actual job - https://github.com/i8beef/HomeAutio.Mqtt.GoogleHome/blob/master/src/HomeAutio.Mqtt.GoogleHome/Identity/TokenCleanup.cs
Some great libraries here. I know a few of them already but there's a couple I didn't, thanks for posting!
I am conflicted about this - watched all the videos about this, re-created most of the demo programs over this past weekend and was impressed by it - but something about it just doesn't smell right - MS has a history of trying to change the evolving standards to suit their own agenda, and by open sourcing a lot of things over the last few years it \*seemed\* to me anyway that they were getting on board with the rest of the industry/standards by not trying to make everything Microsoft-centric. &amp;#x200B; Blazor, in both its varieties, echo's back a bit to silverlight a bit to me, i.e. lets get developers to write some code that will lock them into doing things the Microsoft way. &amp;#x200B; I am so used to lightweight html/js on the front-end, combined with a language agnostic back-end that talks to me in with JSON responses, that Blazor seems like it's trying to rope dev's in once again to a proprietary framework, sot my guard is up. &amp;#x200B; On the other-hand, as a c# developer (primarily), I am impressed with what they have done so far. &amp;#x200B; I guess we will have to wait and see on this one. &amp;#x200B; &amp;#x200B;
As a full stack developer with 30 years of experience, having seen many technology stacks come and go, I believe Blazor represents a great leap forward in web development. I know Blazor has a way to go before it's production ready, but it's not that far away. Maybe a year, two at most. Ten years from now, new developers will look back on current JavaScript frameworks and shake their heads in amazement. I think Blazor and other WASM based frameworks are the future of client-server web and desktop development. I could be wrong, but only time will tell.
Your returning an IEnumerable instead of a IQueryable. This means due to the type conversion it always gets all the users and all the eager loaded relationships you defined every time that method is called. Depending on the number of users and/or relationships defined, this can be a huge volume of data pulled back every method call. Also, the entities are tracked. So depending on how long the datacontext remains alive. This could have a negative impact on determining updates whenever .Save() is called. 
This is a horrible argument to make.
I believe it has to do with the related entities. I just ran a test with this: public IEnumerable&lt;User&gt; Test() { return _context.Users.ToList(); } And it returned in 900 ms instead of 28s. Both related entities are collections, one has a nested collection.
I replied to someone below also, but I believe it has something to do with the related entities I'm including. They are both collections, and one has a collection inside of it. public IEnumerable&lt;User&gt; Test() { return _context.Users.ToList(); } And it returned in 900 ms instead of 28s. Both related entities are collections, one has a nested collection.
&gt; I mean basically everything about Blazor is experimental right now. This is not true. Running Blazor with web assembly is new ground. But you can also run Blazor with .NET Core, either locally in an electron app, or on a server with the browser updating SignalR.
What is the exact SQL being executed each time? Is it the same query repeated? If so, that sounds like a multiple enumeration problem. What does the code that consumes the GetAll method look like?
I'm an idiot, thank you. I just looked over the code that consumes GetAll and it was indeed a multiple enumeration problem. You just brought my query from 24 seconds to 6 second. Thanks.
Interesting, /u/merad pointed out something I was overlooking that fixed the query repetition problem, but I'll try adjusting this also to see if I can tune it further.
That absolutely would be painful. The way to go is to put an API in between that handles that. That way you can change the domain and front end independently and manage any mismatch by mapping in that API. Essentially just part of the backend for front end pattern.
It's pretty promising, but I think mobile performance (page load/startup time, power consumption, etc.) will make or break it.
No. Nothing was ever *renamed*. Blazor started as a client-side technology - as it matured the development model was *named* Razor Components. Razor Components will not be unique to the "Blazor" project types as we think of them, they will also be usable from MVC and Razor Pages. Blazor and Razor Components have always been different things.
Also with razor components couldn't you write all .Net core cross platform GUI apps with electron(I know, I know). That would basically eliminate the latency issue with the server side rendering. 
Guarantee people said similar things about coldfusion. Then again, I'm sure people said similar things about Django or MVC. We'll see I guess. 
I always just deploy in docker, because I am lazy. 
If they share the same secret the tokens will be valid on both. 
Is anyone still using OData &amp; Why ? Or Why not GraphQL?
Its not an argument its a statement of reality. If I were to make an argument it would be that server side blazor is not experimental so the observations is not valid across the board.
&gt; you are still writing js as global variables and then writing additional .net code to trigger that JS code, which imo is not ideal Uhhh, thats not accurate in any way. Are you sure you're talking about the same technology?
I'm using it to convert a legacy product to a modern stack. It works well enough, but I underestimated how janky razor feels after doing react for a couple of years. It has components, but it they aren't functional. You feel like you have the full power of javascript with react, and I don't feel like I have the full power of C#....or rather, only the clunky OO parts.
Here's why you should use OData over GraphQL: [https://www.progress.com/blogs/rest-api-industry-debate-odata-vs-graphql-vs-ords](https://www.progress.com/blogs/rest-api-industry-debate-odata-vs-graphql-vs-ords) Also, yes almost most of Microsoft products including but not limited to Outlook, LinkedIn, XBOX or Office are heavily consumers of OData.
He does not have these numbers because this guy is talking out his ass 100%. Not one point he made is even remotely accurate.
The difference with web assembly (Blazors tooling or otherwise) that sets it apart is that its a standard already built into every major browser with Microsoft, Mozilla, Apple, and Google all on board with ensuring its success. Its not going anywhere, and its not one companies pet project. 
Ah, I thought you made that statement in support of going to Blazor, not against. You're right though, pointing out how many people fall into the trap of chasing new exciting frameworks is very applicable to this.
Where are you getting this information from? Web assembly is significantly faster than javascript in every scenario. I didn't know people were even questioning that anymore. https://medium.com/@torch2424/webassembly-is-fast-a-real-world-benchmark-of-webassembly-vs-es6-d85a23f8e193 
\&gt; Blazor, in both its varieties, echo's back a bit to silverlight a bit to me, i.e. lets get developers to write some code that will lock them into doing things the Microsoft way. understand the paranoia due to silverlight but multiple languages will be using webassembly so theres no evil intent here. We all knew one of the key things webassembly would usher in is multiple language frontend development. silverlight was a plugin - web assembly is browser standard. 
Razor Components was renamed to Server Side Blazor a few days ago. You can look it up at ASP.NET Core Github.
right, im a docker noob. the place i work at we are planning on running .net core on centos vms. so i presume docker is not applicable here? or is it? when you said you just deploy to docker, i figured u were saying you deploy to docker on aws / azure. or am i wrong on this? my questions probably sound dumb. Can you give me the run down on how docker works with linux? or are they exclusive? im running centos in virtual box from my win 10 host machine if thats useful. thanks for the help
How are you conflating webassembly with silverlight? You do realize that this is not Microsoft inventing a browser language, yes? Whether Microsoft has success with Blazor or not, it wont change the fact that the industry is moving toward WASM regardless, so you might as well just get on the bus.
Razor components are Webforms reborn. They're going to have all the old problems plus all the new problems that websockets bring. Load balancing will be a nightmare because every component has its own session state, we'll be back in life cycle hell on the server side, and it'll scale like crap because all the work is on the server side. Forget any kind of functionality if your network connection drops too. Part of what made front end frameworks take off is that they're client server. As for Blazor, experimental or not it's not going to get much smaller. You're going to need a runtime and it's going to have to download the code as well. Mono's webasm runtime is impressive, but it's still an order of magnitude bigger than most JS apps are on its own. In terms of speed, right now webasm has no way to manipulate the DOM, so you've got JS interop, which will always be slower than native JS. This *may* change in the future, but the webasm group **isn't** aiming to replace JS on the front end so it may noh happen any time soon. 
Actually I am in support of going to Blazor just not for the reasons you thought. Server side is NOT experimental so I see no reason not to move in that direction. Writing on the back end is no big difference writing on the front so theres no waste in going in. Client side still has a way to go but there are several applications that can do fine with razor components.
Not if you want any kind of tree shaking to reduce the download size or optimisations to improve startup speed. CDNs only work if everyone's version is identical. 
Experimental in Microsoft terms means that they haven't actually committed to supporting it long term. They can drop and have dropped support for experimental libraries at any time. So it's **not** backed by a big company.
Amen. Ignore the doubters, the window of early adoption for webassembly has passed, basically all we were waiting on was someone, anyone to write the tooling. Well, someone is doing that, and we're going to immediately adopt it once they stop making breaking changes every 10 minutes.
Blazor isn't in Core 3, Razor components are. 
I don't share your pessimism but of course client side will still be needed. On on the other hand many web apps have no functionality offline. My uber app doesn't do spit offline (nor should it). I guess the issue I have is people saying don't use stay away it will hurt your business as if they have a clue about all business applications out there. That's not enlightened universal advice. Thats just arrogance.
Why GraphQL?
Razor components is not experimental and its pretty much like its been called - Blazor on the server. That IS backed by a big company.
Yes, fully agree about web assembly. I was mainly talking about Blazors implementation.
Blazor is just tooling, the browsers implement webassmbly, and all of the major browsers have mature implementation.
https://github.com/aspnet/AspNetCore/issues/8931
&gt; public IEnumerable&lt;User&gt; GetAll() This is always wrong. The function should either return a List or an IQueryable. Either explicitly closed or explicitly open. Marking it as IEnumerable does not tell the client how the function is meant to be used. And even if they guess right, their guess can be invalidated by a future change without altering the signature. 
It might be called blazor on the server, but that's very much **not** what it is. 
https://github.com/aspnet/AspNetCore/issues/8931#issuecomment-478151056 &gt; We will still refer to the component model as Razor components (i.e. a .razor file will still be a Razor component), but when talking about the application model we are finding it very cumbersome to have different names - Daniel Roth
I mean kind of, just like any programming language(or corresponding compiler) that compiles to x86 ASM is just tooling. Depending on the tooling you can compile directly to wasm, or run on an implementation of a VM in wasm. I haven't done the research but I'm going to guess that blazor will be the latter.
OK, I'll read about that. Thanks for the advice.
Your Uber app doesn't run without network activity, but it **does** scale to millions of concurrent connections with eye watering uptime. You can't write that with server side razor components. And again, no one is saying that razor components are going to hurt your business, I'm saying razor components are a crappy design, but that's not the same thing. Razor components **are not** Blazor though. 
https://github.com/aspnet/AspNetCore/issues/8931#issuecomment-478151056 &gt; We will still refer to the component model as Razor components (i.e. a .razor file will still be a Razor component), but when talking about the application model we are finding it very cumbersome to have different names - Daniel Roth From Dan's OP in that thread: &gt; To address this confusion we are going to switch back to referring to the application model as **Blazor with different hosting models.** From my OP: Razor Components will not be unique to **the "Blazor" project types as we think of them (edit: as in, client vs server)** So, they're clarifying the naming as it relates to, well... Blazor. But Razor Components has always been Razor Components. 
For Core 3? Probably. For Blazor? Fuck no. 
Sure if you want to run compiled games in an emulator online then wasm is the way to fucking go. However, if your trying to make a website the benefits are insignificant. I believe for online games ya WASM is great but it's not great for the web page itself or business applications. I'm not saying it won't eventually get there by the way just not in the next couple of years. If you want a real realistic benchmark, make an actual Blazor application and then make the same Application in Angular and then compared the difference. 
Your guess is incorrect 
You should read more. 
Should've done more research, thought I had read somewhere that it was going to run on a Mono WASM VM.
&gt;Your Uber app doesn't run without network activity, but it does scale to millions of concurrent connections with eye watering uptime. You can't write that with server side razor components. Congrats you just eliminated .0000124% of apps. &gt;I'm saying razor components are a crappy design and no one ever said that of Javacript I guess. &gt;Razor components are not Blazor though. on a writing code level they are not much different 
Yeah, it runs on the [Mono VM](https://github.com/aspnet/Blazor/tree/master/src)
Pretty much is
no. not at the moment. it's not a wise decision to use experimental technologies for production. technologies like angular, react are far more matured, there are a ton of helps, tutorials, documentations, developers, guides. I am sure blazor will be successful, but it will take like at least over 5 years, for instance Angular was released somewhere in 2010, react in 2013, and they are still not popular. Small developers use PHP. enterprises use Java+ spring, or .NET. Nowadays the trend is NodeJs, but it was released back in 2009. So I would say it take nearly a decade for a technology to be much useful, and widespread. so It's safe to say it's not a wise move to learn Blazor now, but like after 5 years later, then around 2028 to 2030 you will have a lot of opportunities with blazor, Javascript will probably slowly get less popular along with their frameworks, until then learn something matured like Angular. I think MEAN stack is best. 
Except it isn't client side, isn't webasm, doesn't run on Mono, doesn't use the same architecture, libraries or code. I mean other than that. 
You used Uber as an example, I referenced your example. And I've made specific criticisms of razor components, which you haven't responded to. The old "JS is shit amirite?" response is tired, and dated. JS hasn't been shit in years, and I didn't write much code in it when it was. And who the fuck cares if the coding style of Razor components and Blazor are similar. We're talking about the actual framework, which is not at all ready for prime time. 
You need to pass an empty viewmodel to the view, use the form to fill the viewmodel (the fields of the form must match the variables in the viewmodel), then use the controller to catch the viewmodel and process the results. I have never heard of passing in multiple variables in a POST (which catches a form submission); you want to be catching a viewmodel submission there. I may post code later, on mobile here.
Does GraphQL have includes yet?
Thank you very much for your reply. I saw an entry in the documentation regarding view model and thought it was the most relevant. I experimented a bit but did not get it working. Knowing that I may have been on the right path is very helpful, I am sure I can leverage the documentation to get it working now that I know where to look.
It'd take a while to explain all the benefits, but I agree, given the chance to set this up from scratch, it's exactly where I'd go to if I knew my apps are going to always be pure .net core apps. I'd run each of my apps in it's own container and run a separate nginx container proxying everything on the server. I'd still use vms for my ops team to stand up new docker hosts for me in 15 minutes with an image clone, but I'd run docker on each to host everything, and I'd automate by deployments. If I was going to have enough nodes that it became hard to manage servers individually instead of in configured clusters, I'd move to kubernettes on the vms nodes or a cloud host. But that's sort of the progression. I'd definitely go right to docker as a starting point.
people saying its experimental , but the js code they wrote is just as unstable hahaha. i am very excited about blazor and i will be using it whenever i can and contributing open source libraries here is a sample prototype project ive made with blazor https://cmx.qord.app/login. although i didnt make it responsive so use desktop. i dont think you will really notice anything experimental. you will just think its just a normal web app. the only difference is the code behind is in beatiful C# and not ugly js 
C# tutorials while making games in [YouTube Channel](https://www.youtube.com/c/dilmervalecillos) 
Looks like that was the kicker. Took off the precanned policy and it worked perfectly for the first time ever lol. Thanks for the heads up. 
Why would you care if you already had it all in your cache?
\&gt; You used Uber as an example, I referenced your example. I referenced an app not working offline. You switched to its usership to save your point. Apples and oranges. &gt; And I've made specific criticisms of razor components, which you haven't responded to. and why should I? Its just like reviewing a beta. pointless. I'd have to see the benchmarks on the finished client side to know whether the performance even matters much to an end user &gt; The old "JS is shit amirite?" response is tired, and dated. JS hasn't been shit in years, and I didn't write much code in it when it was. Before making silly assumptions ask. You would have found out I am also node js developer and work on the front end with React (and angular) so I don't need any instructions from you about what its like now. Its come a long way. Still lots of people still rail on it for what it used to be just as you are railing on what Blazor is in basically beta mode. Still I have yet to find one good C# developer who also writes JS claim that JS is even now a better language. &gt; And who the fuck cares if the coding style of Razor components and Blazor are similar. Everyone who is presently learning and writing razor components who now knows their time invested in earning Blazor won't be a waste of time even if the client never comes out of experimental status. The thing is though - not one of them cares what the F you think. Go figure. 
I've taken some advice from u/Wixred and created a new collection called `MatrixArray&lt;T&gt;` that uses an array instead of a linked list to hold the arrays holding the data. Using this method I was able to slash the benchmarks compared to `LinkedArray&lt;T&gt;`. | | Loading | Positive Random | Open-Ended Random | Find Last | Enumerate | Sum | Memory | |-|---------|-----------------|-------------------|-----------|-----------|-----|--------| | MatrixArray | 49 | 67 | 61 | _39_ | 24 | 240 | _1494190_ | | Dictionary | __38__ | __28__ | __28__ | __0__ | __7__ | __101__ | __668789__ | | SortedDictionary | _409_ | _421_ | _464_ | 25 | _28_ | _1347_ | 670201 | Compared to `SortedDictionary&lt;int, T&gt;`, `MatrixArray&lt;T&gt;` is faster in every measurement except for Find Last, which is the penalty for enumerating a data structure with a lot of empty cells. The performance of `MatrixArray&lt;T&gt;` is now much more in line with that of `Dictionary&lt;int, T&gt;` while retaining its always-sorted nature. The only downside is memory usage, but even that is lower than with the `LinkedArray&lt;T&gt;`. This has been a ton of fun. Maybe someone finds this useful some day and remembers about it.
Not sure if you’ve used graphql before but it may be worth a look in this situation 
Try to use .AsNoTracking() if you aren't going to update the context.
The argument is that using Blazor in production right now is fucking stupid. You're argument is that using "serverside blazor" is OK so using Blazor is OK. It's not OK, Blazor is not even close to ready for prime time. Regardless of whether the syntax is similar.
hah you lost me there a bit. I've never had exposure to docker but reading about it, its basically an alternative to VMs, like what im doing now running centos in a VM which requires me setting everything up. Correct me if im wrong, but it would have just been easier for me to setup docker on my windows machine, deploy the app there. and thats all there is too it. However, when it comes to production, i would still need to run this on centos. So is docker still applicable here? Or is it mainly just for dev, test, uat environments to spin them up quickly with not having to bother with configuration? You mentioned you run docker within VMs, is that because the VM is from a provider say AWS / AZURE? If so, why not just use docker containers provided from those services? These are likely dumb quesitons, so i appreciate your feedback. I'm just not exactly sure how VMs and docker fit together in your explanation. it seems like you use docker or a vm (correct me if im wrong). 
&gt;The argument is that using Blazor in production right now is fucking stupid.You're argument is that using "serverside blazor" is OK so using Blazor is OK. Read the OP genius &gt;in the upcoming version of asp.net core 3 is blazor included what are your thoughts on blazor? Its quite obvious he is referring to the whole tech as relates to whats already included on the server side. Thats what he's heard about as coming out. &gt;Edit: And the problems with server side state are well known, we've seen them before, we don't need the framework to come out of preview to understand them. The model is poor. Spoken like a naive developer. No major technology out there today is without its benefits or it wouldn't be out there. Your dig at websockets was the same. they have case usage. Get over your delusions of grandeur that you are the architect judge and jury for software developers Its silly and shows you have too much time on your hands.
Blazor isn't included in dotnet core 3, so that's a mistake by OP, my mistake was getting confused as to which of your rants I was responding to. Again, Blazor **IS NOT IN CORE 3**. Server side session state causes problems, it's part of why one of the **only** Microsoft technologies **not** getting ported to core is winforms. I didn't dig at websockets, I said they add problems, which they do. They're a great solution for certain problem sets, but they add a lot of complexity. That's why Microsoft has rewritten their library about four times. And again, I didn't say you shouldn't use Razor Components, I personally think it's a mistake, but that's my opinion and if it fits your use case, then fine. Using Blazor in production right now though, and again Razor components **ARE NOT BLAZOR**, is wildly irresponsible and stupid. 
&gt; basically an alternative to VMs Sort of, but more light weight. Where a VM is an "image" of an entire machine from OS up, Docker is an "image" basically like if you took a fresh, minimal OS install, and then "layered" your app and everything you'd have to do to provision that server to run it on top. Things like "install .NET, install node.js, install these dependent libraries I need globally, install SQL server on it", etc. In theory you end up with a "container" that can 
&gt; Again, Blazor **IS NOT IN CORE 3**. Most of us already knew that so your bolding was useless but it speaks to what the OP had in mind. At best he was not dividing them because he didn't know the difference. So the blazor HE was referring to DOES include razor components. &gt; Server side session state causes problems, it's part of why one of the **only** Microsoft technologies **not** getting ported to core is winforms. You seriously need to get over winforms. That was already way on its way out. &gt; And if you sell your clients experimental libraries which are specifically not meant for production you'll be laughing all the way to unemployment. That goes to show what I said. You have little idea of all the business models out there. If I can gt an MVP out in a week my client can get interest in investment and I can worry about scaling 2nd version. Thats what we get paid to do. As DHH so right fully said &gt; Programmers worrying about whether their architecture will Web Scale is like buying a lottery coupon and fretting about which yacht to buy. 
Gah, stupid brain, not winforms Webforms. And again, if you write razor components, fine I guess, it'll have scaling problems **waaaay** before we scale, but whatever. If you sell **Blazor** right now you're a criminal. 
&gt;If you sell Blazor right now you're a criminal. No one sells blazor. They write apps. If you don't and think people sell front end frameworks for a living you are an idiot even worse than confusing winforms with webforms.
I didn't confuse Webforms and winforms I had a brain fart and typed the wrong one. You confused razor and Blazor so we're about even. And you sell product, binary or source and including every library and framework you use. If you sell product containing Blazor you're selling that customer Blazor and **IT'S NOT PRODUCTION READY**. Aside from trying to argue that Razor components are Blazor, you've yet to address how this isn't so. Honestly I'm done. Go write shitty unmaintainable code, use experimental frameworks, and screw over your clients. I just don't care anymore.
He didn't say WASM wasn't significantly faster than JS. He said Blazor is not as fast as other SPA techs. Blazor is in the browser either as: 1. .net IL running in the Mono runtime which is itself compiled to WASM 2. some JS running in the browser operating over a web socket to send events back to a server, getting an update back and refreshing a view The latter has significant overhead vs a pure client side solution (but is somewhat comparing apples to oranges as you can do more like offload large calculations to a shared pool or query a database). If you are comparing something that could run completely in javascript vs a mandatory network round trip, you are looking at thousands of times slower. The former has a small amount of overhead (over machine code) comparable to the same amount that JS itself has because both are jitting code for execution (for the mono runtime vs for the browser's js runtime). It is certainly possible that mono is a better runtime than say v8, but for the average call, you are going to invoke into .net code which is going to call back out to js a bunch of times leaving you to pay for both some code running in mono on WASM and some code running in v8. As of right now this is the only somewhat relevant benchmark data I've found: https://github.com/stefan-schweiger/bakkBenchmark and it is probably a few months out of date (though reviewing the code it looks like it should run fine on a more recent sdk, so the results just need to be updated). For a CRUD app, it probably doesn't much matter because the perf of JS vs Blazor is meaningless compared to the overhead of network requests for data. But if you're doing something that takes more than a few milliseconds of cpu time, the difference between a C# implementation and a JS (or something else compiled to WASM directly and called from JS) implementation appears to be notable.
&gt;Edit: Also, DHH is not the be all and end all and that tech debt approach has sunk a lot start-ups. Rewriting your app from scratch is really hard when you're trying to finally become profitable. NO one said DHH was an end all and be all but he is 100% right on the topic. it has sunk no company with any sense. rewriting your app for any customer facing app IS A NECESSARY REQUIREMENT no matter what tech you use. A) The idea of a no rewrite startup is nearly MYTHICAL in from scratch startups. You should always be surveying your customers and responding accordingly with new features and rewrites that change to those surveys and suggestions. B) your infrastructure pre investment will always be different post investment not only in regard to tech but to human resources access to administrative features. C) MVPs that work need have no customers to fail before. They secure investment so the app can be built the way it should be to scale. this i one of the reasons [Asp.net](https://Asp.net) has had so few startups using it. The mindset of a from the dirt startup is entirely different that Ms enterprise clientele. &amp;#x200B;
&gt; I didn't confuse Webforms and winforms I had a brain fart and typed the wrong one. You confused razor and Blazor so we're about even. Now you are just lying to save face. I have always talked about server side with no confusion but actually read the OP unlike you and knew the OP was NOT differentiating. and winforms and webforms is no typo. They both exist and you confused them. &gt;And you sell product, binary or source and including every library and framework you use. Nope we sell a service of getting our customers ideas out the door and ready for them to attract investment small or large. you obviously don't know what we do so your claims can be dismissed as utterly bogus. &gt;If you sell product containing Blazor you're selling that customer Blazor and IT'S NOT PRODUCTION READY. and our customer looking to pitch an investor cares only that it works and he gets the investment that will allow his app to take off. He does not give a rip about an attached name - production ready. Do you even know what an MVP is? &gt;Aside from trying to argue that Razor components are Blazor, you've yet to address how this isn't so. I've ben arguing as is evident from the Op that the the OP means all of what we call blazor on the server and blazor on the cleint. You can lie some more if you wish. It seems to be the reddit way. &gt;Honestly I'm done. Go write shitty unmaintainable code, use experimental frameworks, and screw over your clients. My clients are more likely to be the next uber than yours will. You don't understand startups. You'll be be crafting the perfect scalable to one million users app for the next 6 months and the client will lose market opportunity. Stick to working for established big businesses where you have cash right away and hostage internal users you kno will be yours for five years out. You don't have the expertise in my market.
&gt;people saying its experimental , but the js code they wrote is just as unstable hahaha. or even more likely not even the code thy write but that its based on some dependency they don't even realize how shoddy the code is. 
See your video on YouTube randomly today. Great demo and it seems really useful. Thanks for making it!
Bullshit you sell a service, you sell the product of that service. No one pays for "developers" they pay for the output of those developers. And an MVP is a minimum **viable** product. Blazor is not viable yet. And no, it's not evident that we're talking about Blazor on the server because Blazor on the server doesn't fucking exist. If OP thinks that you should correct them, not continue this bullshit. Blazor is **nothing like** razor components. And razor components will have scaling problems at a few hundred or at most a few thousand users, not a million. You don't need to be web scale to have scaling problems. 
Something else will overtake it. Something without a runtime. Most likely something built with Rust.
Not to favor one or another, but mentioned article seems heavily biased towards OData. I'm pretty sure there's equally many other articles favoring GraphQL over any others.
I think so, unless something changed from 0.7.0 . To access anything browser specific ( e.g. local storage ) you'd end up writing bunch of js for that and then invoke it using `JSRuntime.Current.InvomeAsync&lt;T&gt;`
Oh, well maybe you’re trying to do things I am unfamiliar with. Fair enough
&gt;Bullshit you sell a service, you sell the product of that service. No one pays for "developers" they pay for the output of those developers. They pay us for a service. The only BS is you telling me what our business is when you don't know squat including who we are. &gt;And an MVP is a minimum viable product. Blazor is not viable yet. Yep and if you could read a lick the link given you would see what viable is in relationship to- customer interest not performance or code. How dumb do you have to be to have an entire wikipedia entry tell you what viable is in reference to and still not get it? &gt;And no, it's not evident that we're talking about Blazor on the serve Yes it was but we now know about you inability to read with even minmal comprehension. . the very first post of mine you responded to states &gt; the tech on the server side is not experimental and its backed by a huge company and yet even with that CLEAR indication you were still so foolish as to deny it was and is MS backed. &gt;And razor components will have scaling problems at a few hundred or at most a few thousand users, not a million. And that is fine for a MVP. You are utterly clueless to thinka MVP reqires handling a million customers. Every post you put up now just shows youahve no sense in this area at all. Run along like you said you would and let adults that know something discuss issues 
define includes?
&gt;Why GraphQL? [https://scotch.io/tutorials/graphql-the-good-and-the-bad](https://scotch.io/tutorials/graphql-the-good-and-the-bad) 
Thanks a lot Hassan for your replay. I would like to know your opinion on this post. [GraphQL is not OData by Jeff Handley](https://jeffhandley.com/2018-09-13/graphql-is-not-odata). Specially the “Flaws in OData” Part.
I am using odata heavily in several products for the querying part only (for the mutating part I use webapi and the mediatr library) . If you are using SQL and very often need pagination, filtering/search, orderby and some simple joins I would recommend odata. Im currently investigating GraphQL (without hurry, as odata solves most of my problems). GraphQL is not a direct competitor, albeit big overlapping of course. GraphQL provides a domain specific language to model your api. You want filtering, ordering, search etc? you need to explicitly define parameters and specify how they are used (odata on the other hand bakes some standard operations in and also provides the logic to operate on IQueryables/Entity Framework). GraphQL has more attention in the webcommunity (though recent odata for asp net core release also makes it stay somewhat modern) and there is more tooling around. GraphQL provides a schema so that clients can be statically validated (odata also publishes a schema/self description, but the ecosystem doesnt provide good solutions for javascript clients imho). 
 I am developing ASP Core API + Angular solution on Windows 10 PC but want to deploy it on Linux. So do I still create Docker Linux image on my Windows 10, right? But then how to deploy it on Linux? I am not a Linux guy at all :( Any step by step tutorial? Thanks!!!
No, they pay you for an outcome. No one cares about your service, they care about your outcome. I never said that an MVP needs a million customers, I said that your example still didn't work. And no it's not fine with horizontal scaling because session state doesn't scale well horizontally because you can't move between machines. My first post said using razor components was fine, not my choice, but fine. Blazor is not fine. You're the one who keeps talking about Blazor on the server, which doesn't exist. Razor components do not work in remotely the same way, even if they have similar syntax. Calling them the same thing is just ignorant. And winforms is getting ported, I wrote the wrong name, I've admitted that. Webforms is not and Webforms is the one with all the server side state. I wrote the wrong word I'm stupid. Doesn't invalidate my points. 
There are no dumb questions. It's dumb not to ask as many as you need. Its bad to depend on DataTable. If you pass it around to other methods you improve the likelihood that someone will request a column that does not exist and cause an exception. You might be thinking "but I know which ones I can it has" or "it's easy to look in the db to get it right". That does not matter, it can still happen. You should instead create one or more classes to represent the rows you get back, and then create a list of those. I an other benefit of using models to represent your data is that you can use validation attributes on the properties, so you don't have to manually validate your input, but will be able to call "Model.IsValid()" which is a property your controller have just for that purpose. If you are VERY pressed for time you could try to return the DataTable. Ive never tried to serialise one, so I don't know what the result will look like. But just make sure that you get to go back and improve the code right after the deadline. If you know you won't, then do not compromise on quality. https://youtu.be/BSaAMQVq01E
You can try the solution with supervisord and nginx, like in this guide https://www.vultr.com/docs/how-to-deploy-a-net-core-web-application-on-centos-7
It's not so much the web assembly, I realize that is a standard (and it isn't and apples-to-apples comparison), its the encouragement to write things 'the Microsoft way'. They used to be notorious bad in this way, and they have gotten so much better over the last few years with all the positive changes at the company - just makes think that perhaps this is a small step back from the path they were on. &amp;#x200B; And there is a decent chance I will get on this particular bus anyway - just hope it's going the right way for me. &amp;#x200B;
exactly haha
razor is way better than react, tell me how you do conditional rendering in react (ifTrue &amp;&amp; (&lt;Component /&gt;) ugly as fuck lmfao
what do you mean standard? HTML , JS and CSS is Standard yes &amp;#x200B; but so is WebAssembly and .NET Frameowork is a standard (.NET Standard) React, Angular, Vue is not standard they are frameworks Blazor is a framework on top of .NET/Web Assembly choose your poison :) for me I'm going with a sweeter language &lt;3
I'm bored
I'm not sure I understand. You can do conditional rendering with the above shorthand javascript idiom with react. Or you can use a regular if statement, switch statement, or a ternary.
Then go away, wouldn't want to keep you from your wild life of writing crap. 
Fortunately you seem to have that job market covered
I gave my opinion on razor components, which is what this post is about. I said I don't like them and I said why. You failed to respond. I said that using Blazor at this point in production is criminal. You went on and on about how you were going to use it in an MVP, which isn't actually production, but it's still a bad idea because it's wildly unstable. You argued that you don't need millions of connections for an MVP. I agreed, but pointed out razor components will stop scaling way before millions. You think you provide a service, but you don't, you provide a product. A product that eventually has to be delivered, even if you cut corners. You've read nothing I've actually said, except my brain fart, responded to nothing I said and have insisted on calling razor components Blazor, despite claiming you know the difference (you don't). You've argued that no one thinks JS is better than C# while claiming to be a node developer. If you're a node developer you **already** use JS in a place where you could use C#, and you must have a reason for that. Unless by node, you actually mean you run NPM. You've talked a lot of shit, but you've backed up none of it. You're empty man, and eventually people will notice. Eventually you'll deliver an MVP you can't convert, or a product you can't scale to even semi reasonable degrees. You don't get it, and someday that's going to cost you. We're done, enjoy your short career. 
I also came across this article and would like to know why OData with that much of capability has remained so silent. 
look here and tell.me if this is not ugly https://reactjs.org/docs/conditional-rendering.html
You can use community edition professionally, if your team is max 5 people. They said so in the VS2019 launch event. So why not just update? 
Yawn.....All points covered and debunked before which is why you are boring me. You have shown nothing but cluelessness - on what the OP was referencing, what an MVP is about, various ways to scale, on the difference between a service and a product and much more. Almost every post of yours is a gaffe machine then you even added this gibberish &gt;You've argued that no one thinks JS is better than C# while claiming to be a node developer. If you're a node developer you already use JS in a place where you could use C#, and you must have a reason for that. Yep I know no one that considers JS a better language than c# which anyone with half a brain in programming knows does not mean there are not times when you use a language and its ecosystem that may not be the best language overall but well suited to a particular circumstance. I mean how many times can you demonstrate you are dull? It just goes on and on beyond confusing winforms withe webforms more than once (which seems to irk you no end to remind you off and you constantly try to spin out of to no avail) and umm yes being stupid usually does have an impact on ones points. &gt;have insisted on calling razor components Blazor, despite claiming you know the difference (you don't). Lie some more. I've insisted on taking into account the OP's understanding to address the question he posed. Lying is all you got. Plus when you can change a line or two and convert server to client the are very much similar. You are clueless But thats nothing new. You are one of these programmers that bitch about superior sense of architecture and love to run around telling every one else what is best practices regardless of business scenarios which you demonstrate you are utterly incompetent to speak to - because you don't have an original though in your head for an app. Take your paycheck because you'll never have a percentage of any new start up because you can't even play in my world. Your inability to undestand market realities already cost you - you are just too obtuse to even know it.
It is literally javascript. You can render a component conditionally via any method that can return any other value like string, array, number or object. There isn't any special syntax involved. You do the exact same thing in razor. And razor likes to break when you don't balance open/close tags conditionally or use ternarys or whenever it feels like really. So I can't say I've had a great experience with razor compared to jsx.
There's no such thing as the best language overall. It doesn't exist. Languages are better in certain spaces. That's it. The OP is either confused or wrong, either way, you correct them, which is what I did you moron. And start up money? Don't make me fucking laugh. The days of being bought out without a business model are gone, and if your software is cobbled together shit you don't have one.
Interesting, I read about it and seems like a great way to lower memory consumption in some cases but do you know if [this](https://stackoverflow.com/questions/9259480/entity-framework-mergeoption-notracking-bad-performance) is still a problem? 
I love XAML it's just that it's too verbose on some areas due to it's XML nature. As for Razor in general it's pretty clean for a templating language. Plus points since it uses normal C# syntax for everything instead of attribute and mustache hell on JS frameworks, with the advent WASM hopefully we'll get a XAML implementation as well to make both sides happy. As for me I'm definitely fine with both as long as I get to use C# then I'll be a happy dev.
Well, the problem seems to be the configuration syntax is for apache 2.4.10 or higher, and you're using 2.4.6. (According to this GH issue: [https://github.com/aspnet/AspNetCore.Docs/issues/9853](https://github.com/aspnet/AspNetCore.Docs/issues/9853) ) &amp;#x200B; Frankly, I do all my reverse proxying with nginx, so I'm not sure. But try removing the first three lines of the configuration file. The only thing they do is set the X-Forwarded-Proto header with the actual protocol of the request. &amp;#x200B; Everything should still work fine, excpect that in the .net core application you'll see the protocol as http, even if the client is connection with https. &amp;#x200B; Or, you know, just upgrade Apache - if it's an option.
What do you find ugly with this code? What do you prefer with razor?
I agree the concept of writing applications in C# and executing them in a browser via WASM has some potential. What has been done with Blazor is impressive, but it still seems like a toy and I don't see the release of Core 3 changing that. I think the models and architecture used by Blazor are premature and right now it has the problem of being a leaky abstraction. It would be helped by AOT but you will still need some runtime components to manage the shadow stack (necessary to track object lifetimes), handle GC (necessary for the .net object model), run some sort of scheduling algorithm (prevent long running tasks from stalling the browser UI), and marshal objects back and forth to the DOM. WASM itself is still a little green for me to consider going completely in to. I would at least like to see * threads * a function pointer type * a string type * an object handle type The first is necessary because right now every wasm instance runs on the UI thread which means programs need to implement their own scheduler to ensure they don't monopolize the thread. The others are needed to make it so wasm libraries can call each other without dropping out to javascript and accepting that overhead in order to call a different wasm instance (on the brightside Firefox has improved the cost of doing this by a factor of about 15 in the last 6 months; compare https://bnjbvr.github.io/perf-wasm-calls/ in Chrome vs Firefox). Fortunately C++ style pThreads appear to be coming (as soon as they can work out a security model I suppose that protects against speculation attacks?) and I'm excited about https://github.com/WebAssembly/webidl-bindings/blob/master/proposals/webidl-bindings/Explainer.md and https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md and https://github.com/WebAssembly/design/blob/master/DynamicLinking.md
Thank you, I've implemented IdentityServer successfully and it's great!
What's wrong with the documentation? It's fairly good.
Not much has changed. Instead of an HttpModule or HttpHandler you'll now write a middleware component. Configuring startup is a bit different, but the defaults will get you most of the way there, if not all the way. The rest is barely different enough to mention. If you've used like MVC5 WebApi it's really not. Just start a new ASP.Net Core application and go to town. Google the little bits you run into and don't know.
It's not as scary as you might think. I think in a lot of ways it's easier to work with than .net framework because of how they do night now and how it all runs on docker. 
This is an interesting article, but I don’t really see myself using these tips in practice. The write up on how switch gets compiled was useful though.
Thanks for the comments I guess I’ll keep piecing it together. I remember learning MVC and it’s little details in a great book once. I figured that there might be some best practices related to that framework but it doesn’t sound like it. I have built some applications already I just feel “slow” sometimes because I’m used to other things for so many years. For example, there’s no web.config little things like that. 
 Good work guys! Any plans on the release of the XAML compiler? 
&gt; There's no such thing as the best language overall. It doesn't exist. &gt; Languages are better in certain spaces. That's it. ROFL...So not only don't you know programming languages you don't understand english language. talk about moron. HAHAHA. Overall means taking all things into account - that means regardless of niche or "certain places" usage. It SPCIFICALLY does nto meqn -at everything but ahem OVER ALL. go to shool...lololol. &gt;And start up money? Don't make me fucking laugh. The days of being bought out without a business model are gone, HAHAHAHAH oh my sides are hurting me. he actually think startup money means being bought out. AS IF THATS THE ONLY WAY YOU CAN MAKE MONEY OFF A START UP. you just cant make up that level of stupidness. 'I've obviously been talking to a ten year old.
Docker is all the rave, but isn't necessary to run a dotnet core app on Linux or Windows. 
I’m only an early adopter, but im sure someone in the official gitter chat will answer your question.
Did you enable the Apache2 mod_headers module? On Debian just execute a2enmod headers. I haven't deployed asp.net core on Centos.
As some one who works with it since asp net next, apart from the startup/ pipelines there aren’t really big differences in the regular use cases... though still couldn’t find a decent pdf generator a proper image resizer :)
If your experienced with .NET Framework then reading Microsoft Docs would probably be enough. Anyway These books are great: .NET Core In Action ASP.NET Core In Action Entity Framework Core In Action Pro ASP.NET Core MVC
Linq is not fluent?
[removed]
nice so this acts as a cross platform alternative to WPF? if so, what pros / cons does it have over WPF, ignoring the fact WPF is not cross platform. 
RIP OP
I think it seems a bit heavy but very clean.
You'll probably have to do some work to track the browser instance so you don't leak or create unnecessary Chrome processes, but this is a short snippet that would get you running: public async Task&lt;byte[]&gt; PDFContent(string url) { var revision = await new BrowserFetcher(new BrowserFetcherOptions() { Path = chromePath }).DownloadAsync(BrowserFetcher.DefaultRevision); using (var browser = await Puppeteer.LaunchAsync(new LaunchOptions() { ExecutablePath = revision.ExecutablePath, Headless = true })) { using (var page = await browser.NewPageAsync()) { await page.GoToAsync(url, new NavigationOptions() { WaitUntil = new[] { WaitUntilNavigation.Networkidle0 } }); return await page.PdfDataAsync(); } } }
The Pro ASP.NET series of book continues to be a great resource, but Core is releasing new versions so fast they are a little less helpful. 
Are you a troll or a moron? All languages have things they're good at, and things they're not. There's no perfect language. There are a few terrible ones, but JS hasn't been one for years. And for startup money, there are two ways to make money. 1) Fake it till you get bought out. 2) Actually produce a successful product. 3) Leech off people too stupid to hire their own devs during startup. Only number two is successful, and it requires caring enough about the decisions you make not to burn down, because number two **isn't** startup money, it's successful company money. Showing a smoke and mirrors demo is not the way to make a successful company unless software isn't a key part of your business. If your customers are that kind of company then you're just a wage slave line everyone else. 
Exactly this, looks like over-specialized linq methods?
&gt;Are you a troll or a moron? I am not you so neither &gt;All languages have things they're good at, and things they're not. There's no perfect language Thats why no one said perfect nitwit. Go get the dictionary I told you before you needed. Overall != perfect. &gt;And for startup money, there are two ways to make money. &gt;1) Fake it till you get bought out. &gt;2) Actually produce a successful product. Derrrrr thats why you do the MVP and why you were ignorant to not read the link provided to you. Viable in MVP is not viable in code prformance you real moron. its viable on the market. Light.....bulb....finall......came ....on....for ....you...yet? or still running on 30 watts? &gt;Only number two is successful, wrong nit. You left out investment where you are not bought out which allows you to build out the actual product SO the real moron is YOU because you STILL con't get what a MVP is. Go call your kid sister in the next room and let me explain it to here and show would have got it by now &gt;Showing a smoke and mirrors demo Its not a smoke and mirror demo you twit. It a minimal viable product that works even if it doesn't scale to a million users like your bogus knowledge of startup software dictates. &gt;If your customers are that kind of company then you're just a wage slave line everyone else. That would be you because its quite obvious you have some corner desk job ( if ya are even out of school yet which seems more likely from your lack of intellect.) where people tell you what to do not doing any work on any real startup.
sure you use some of the same code. You should try researching more often. For practice cause you are awful at it,
I did some playing around with the depth of the matrix and got some interesting results: 1. Memory usage is inversely proportional to the depth of the matrix. 1. Enumeration times are inversely proportional to the depth of the matrix. The `MatrixArray` is always 32768 cells wide in each of the positive and negative ranges. This means the max depth of the MatrixArray is 32768 cells, which gives the full range from Int32.MinValue to Int32.MaxValue of data (and requires 16GB of memory just for the pointers to whatever is stored in the arrays. The default is 1024 cells which has a maximum memory footprint around 48MB of ram for a fully populated set of references. If you want fast enumeration, use smaller arrays. If you want less memory usage, use more depth. 
I don't understand the appeal of fluent I think of code as expression trees and so fluent apis are just weird left biased constructions, designed to avoid a couple characters? I've never been able wrap my mind around what the win is? 
This just seems like LINQ with extra steps.
Im honestly not sure. I assume you mean like "run docker build Dockerfile on Windows to get a docker image file, copy it to Linux box, and docker run it". I don't THINK you can do that... but there might be some workflow for it where you install Docker for Windows in Linux container mode, and then build the container in the VM host that installs... but I haven't ever done it. Normally, I'd use a build server with agents for each architecture I want to support that would build each of the images on their native architecture, and then deploy said images to its target servers, or to Dockerhub or a similar internal docker repository, from which your servers would pull for upgrades, etc. My personal stuff, for instance, all builds on Dockerhub itself, which provides a build server that monitors my Github repos, and triggers new image builds / deploys on check-in. 
&gt; ignoring the fact WPF is not cross platform Tough crowd :P At the moment its goal is just to be a cross-platform, .NET Core "native" alternative to WPF. I believe it makes a few syntax changes to what one might be used to in WPF as well, but I wouldn't be able to tell you if it makes Avalonia "better" than WPF or not.
I use Fluent syntax differently than Query syntax. When I'm writing LINQ that I think is important and that any other programmer in my team (or perhaps future me) should pay attention to, I write out the LINQ in Query syntax: var q = from e in entries where e.Approved select e.Title It's blocked out and jumps off the page. Clearly it's important. But if it's largely unimportant and just a data transformation or a thing that needs to be "massaged" slightly, but is largely unimportant, I use the Fluent syntax taking up a single line: var q = entries.Where(e =&gt; e.Approved).Select(e =&gt; e.Title); *shrugs*
OWIN + middleware was a good improvement over the page lifecycle stuff for sure... unfortunately sometimes I feel like they traded the opaqueness of the old System.Web model for the opaqueness of a bunch of extension methods / startup classes. [For instance](https://www.strathweb.com/2017/06/resolving-asp-net-core-startup-class-from-the-di-container/), the Startup class should have always been build off IStartup instead of the "convention based" thing that wires a class that MIGHT implement a similar interface by building fake delegates. It would have been much easier to know what Startup was actually responsible for then. The sudden explosion of IServiceCollection and IApplicationBuilder extension methods also hides a little more than I'd like... I'm not saying its a bad thing, but it definitely throws a wrench when looking at examples for things and you have things implementing their own extensive fluent interface extensions on top of those bases, because it obscures what is core framework and what is stuff provided by IdentityServer, Ninject, Microsoft.Extensions.Hosting, etc., when you might just be trying to figure out how to set up a basic MVC site. Again, not an issue that its happened this way, but that it seems there's a lack of discoverability here without digging all the time. Trying to track "what middlewares are active right now" is another one that I'm not sure if there's goo visibility into.
Try aspose
I kind of like seeing ConfigureAwait(false) explicitly in the model layers myself
im actually waiting for good old win forms to be avaialble on linux. .net core 3 is coming soon
😁 ^(P.S. in case this isn't a joke... win forms isn't coming to Linux in core 3)
I do largely agree with that. Startup code is not as clear as I'd like when it comes to what you can do or should do or what dependency is doing what or responsible for what extensions.
Winforms and wpf Will be available in. Net core 3 sure... But only for Windows! 
Simply put, no. If you are using lambda syntax, definitely not. If you are using query syntax, it's closer, but has some flaws that make it harder to understand.
Yes, I meant exactly that: develop app and create Docker image on Windows, than deploy this image on Linux. So operation system for creating Docker image must be the same as destination operation system where I deploy? Hm, this doesn't not help much for cross platform development...
Just think it's worth saying that I know fluent APIs are not for everyone. Feel free to not use it 😉. I'm not looking for validation on the idea. But if you prefer the fluent API syntax, please feel free to suggest improvements etc.
You use the same syntax, but again, who cares. The performance characteristics are different, the different development and debugging experience is different, the issues you'll have are different, and the design you should use for your system is different. The fact that MS is covering this with the phrase "designed with the appropriate abstractions" doesn't make it not so. Moreover, people talking about Blazor are talking about replacing JS with C# as a client side framework, which this absolutely does not do. I've been **crystal** clear about what I mean when I'm talking about Blazor, I've been **crystal** clear about my concerns with both technologies, and which one I think you shouldn't use. If you've got the reading comprehension of a gnat, that's not my fault. 
Some of those are covered by the Microsoft.CodeAnalysis.FxCopAnalyzers meta-package. https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers 
Fluent syntaxes are meant to be closer to a natural language, therefore easier to read. It's just a different coding style. It's easy not to like them because they can fall into the traps that natural languages have, e.g. writing styles. You may like (or not) a particular literary author because of their writing style; fluent APIs are the same. From my experience however, they're great for DSLs.
If you're interviewing for a junior role and you've made it past the HR screening (was the online test technical?) then your skills are probably near what they want (or close to). Next question then would be cultural fit, and whether you can figure things out that you don't have a clue about. When I'm interviewing I like when junior guys can admit they don't know the answer - trying to bullshit your way through an answer you last saw three years ago in a textbook won't pass the smell test. As a junior dev it's also important that you know what your limitations are, and whether you're able to push back. PM asks you to push a change to production that you know is not ready - what do you do? Stuff like that. A sales lead asks you to bounce a demo server but you don't know the process - what do you do? Stuff like that. Also keep in mind you're interviewing them too. There's always a "Do you have any questions for us?" part, so come with a few good ones prepared (research the company website). Anyway, good luck. Getting past the HR department is in many ways the hardest part, so in a sense the worst is behind you already. 
Hi, just want to say thanks for the advice -- I will take note of all of that. Yeah the online test was a technical one, I'm mainly nervous about the in-person technical portion because I am not particularly strong with algorithms and data structures. I do have a few decent sized .Net projects on my resume so I'm hopeful that will make up for it if I bomb the technical portion.
Go through the micro samples here and you will pick things up easily https://github.com/dodyg/practical-aspnetcore
Install it first day, but like the last version when auto formatting a view sometimes odd behavior can occur. Sometimes a chunk of lines is duplicated or removed, random comments have been inserted into views but the syntax is off and appears in the view. Codelense data doesn't update quickly and becomes stale and so using that frequently causes issues when working through references. Pleased with it's performance but you gotta review your code before check-ins.
I notice That it downloads 11 Mo over 42 requests. Jira is known to be very heavy and is "only" 4.5 Mo. Reloading the page only downloads 1.5 Ko but still takes 2.5 seconds for some reasons. I tried to have a look to the loading profile but a lot of things are displayed as wasm-function\[&lt;whatever&gt;\]. Overall this is not really impressive for only a login form. &amp;#x200B;
Go through most cheesy questions about C#/.NET you can find, reference/value types, Dependency Injection(at least basic principle), SOLID, interfaces, generics, abstracts, some patterns(Repository f.e.) stuff like that. People tend to ask these just to rule out people with no knowledge at all and it's just stuff you should know either way. Even if you don't remember every little thing you should be able to talk around it.
Looks like an cool library :) One question: How would I use this with something for Entity Framework? I can see this being really useful in creating a CQRS-based system, but there doesn't appear to be any `IQueryable&lt;T&gt;` extensions.
Same. OP’s solution adds a lot of unnecessary overhead. 
You can just call `AsExpression()` to convert to an expression, or look at my other set of nuget packages for DDDToolkit. You can see how I work with entity Framework core on my other GitHub repository: https://github.com/codepb/DDDToolkit.
You can't turn a Func to an expression using something like `AsExpreession`. At that point the necessary information is already lost.
Fluent APIs are usually used to create code that can be read "like a sentence". That point is invalidated by having methods like `Containing` or `False`.
technically you could probably use mono to run the netcore 3 app 
Just out of curiosity, why do you want to move away from Resharper?
This is a junior position. I wouldn’t expect a junior to know SOLID, generics or typical common architecture patterns. I’d be interested in testing basic logic. I’d want them to talk about things they have worked on and I will ask probing questions to see how low level they may have gone and to see how well they retained the knowledge and lastly, how they communicate a technical solution. If someone asks you a question you clearly don’t know the answer to, say you don’t know. If you vaguely understand the concept, say you don’t know but think it’s bla bla bla. Not knowing something is completely okay, you’ll be in that situation a lot in your career. The key thing is how you can research and find a solution for the problem or unknown skill. Good luck. 
https://github.com/JosefPihrt/Roslynator Roslynator has some great refactoring methods and doesn’t hurt performance unlike Resharper
But you can turn this library's Query object into an Expression. Which, I believe, is what he meant
And I would actually expect junior to know stuff like interfaces or generics. These are basics of the language you're gonna work with, it's not rocket science. Sure, most people don't remember SOLID, hell, you don't need to, but just knowing what it is about is enough. Learning this stuff takes an hour of going through some random sample .NET interview questions. I wouldn't expect him to know the secrets of EF. I agree about saying "I don't know" when you actually don't, maybe I worded that sentence in a wrong way.
Castle caches the generated proxies, so it's a one time hit up front.
I'm pretty sure its the same reason why every Resharper user is always looking for a replacement: Resharper is really slow. I'm using Resharper since 1.0 and its infuriating how unbelievable slow it became over the years. The only reason i'm still using it is that i am so used to the keyboard shortcuts und refactoring options. It feels like stockholm syndrome nowadays.
And that would be pointless, because it can't be translated at all by Entity Framework.
Any suggestions what you would call them?
No idea. Naming is hard. Probably either `Query&lt;Book&gt;.Has(b =&gt; b.Available).BeingFalse()` or `Query&lt;Book&gt;.Its(b =&gt; b.Available).IsFalse()`. 
AsExpression returns an `Expression&lt;Func&lt;TEntity, bool&gt;&gt;` which can be passed to context.Set.Where. It is tested in production applications. There may well be some issues, but it does work with Entity Framework.
this is an entire app ,you can try to signup and not meant for production there can be alot done in terms of strippong out the download size which is not the point of this demo
Ah, I totally understand. I’ve been using Rider for .NET Core stuff and I have found it’s pretty quick. 
+1 for roslynator, i've never used resharper so i dunno how well it compares but i thought it was great
I agree with your assessment. I think the idea Dan wanted to share was that Razor components is independent of Blazor as a framework, which uses Razor components for it's UI. It was one of the main reason they stuck with the `.razor` extension despite renaming server side back to Blazor. This is like how `.jsx` is the UI component builder while the UI framework is React. But is possible for future frameworks to adopt (e.g. Vue and a number of libraries supports `.jsx`but isn't tied to react). So in theory it's possible for Razor components to be used somewhere else or maybe by another framework than Blazor in the future.
[`Queryable.Where`](https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.where?view=netcore-2.2#System_Linq_Enumerable_Where__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__) takes an `Expression&lt;Func&lt;T, bool&gt;&gt;`, and `DbSet&lt;T&gt;` implements `IQueryable&lt;T&gt;`. So you could do something like var query = new Query&lt;Item&gt;(); // init from some input var expression = query.AsExpression(); var items = dbContext.Items.Where(expresson); It would be nice if this library could do something like var query = new Query&lt;Item&gt;(); var items = dbContext.Items.SatisfiedBy(query); 
I hate that all my async code (none of which is in UI) has to have ConfigureAwait(false) appended IN CASE anyone ever uses it in UI. It's a horrible language "feature" (er... bug) that this is required.
Agreed. It's just noise, and error prone considering you could forget. That's why I opted for this solution. For the guarantees and terseness.
It’s much quicker, as it’s not a bandaid on Visual Studio. JetBrains’ stuff is fucking great, especially when you’re doing full stack work. 
Resharper is an awesome tool - but it is a dog and I often considering ditching it for just this reason. So far I have not installed it on VS2019, even though I pay for a license...see how long I can hold out.
The issue I had was `Query&lt;bool&gt;.Is.False()` is another valid use of this method and that does read naturally. I feel the Has method may be the think that makes this a bit jarring but couldn't think of a better way.
Maybe it is a demo, but you are using it to show off and mock other people. This is a todo listing app, and it is already bloated. A bit of humility would help presenting blazor in a better light. This kind of ticket is also not reassuring: [https://github.com/aspnet/Blazor/issues/767](https://github.com/aspnet/Blazor/issues/767) Having new options is always nice but at the moment blazor feels like a heavier angular : a fat abstraction layer over components. Serverside blazor is closer to webforms powered by websocket and will be the first official blazor technology. I hope than the blazor team will be able to demonstrate the potential of their project but for the moment I will stick to react/typescript/webpack because people have been using those to ship complex webapps with good performances for a few years now, and blazor has everything to prove.
The Microsoft Exam 70-486 covers .NET core as it relates to ASP.NET MVC/WebApi https://www.microsoft.com/en-us/learning/exam-70-486.aspx The books I would suggest to pass that are: ASP.NET Core Application Development: Building an application in four sprints (Developer Reference) 1st Edition by James Chambers (Author), David Paquette (Author), Simon Timms (Author) https://www.amazon.com/ASP-NET-Core-Application-Development-application/dp/1509304061/ This goes over the differences in .NET core related to the middleware, the config changes etc. very well. The outdated exam ref book is: Exam Ref 70-486 Developing ASP.NET MVC Web Applications (2nd Edition) Paperback by Simon Timms,David Paquette James Chambers (Author) https://www.amazon.com/Exam-70-486-Developing-ASP-NET-Applications/dp/1509300929 This book is out of print but you can get it in the Apple Book store. If you intend to take the test I would definitely read it. Just keep in mind that it is outdated. *** Review the changes to the Exam objectives provided by Microsoft. *** 
Rider itself is fine. The problem is the Resharper extension when combined with Visual Studio. IIRC, Resharper runs its own analysis and build in a separate process on top of Visual Studio's.
Be confident but not arrogant. Sometimes we get an application for junior devs who have put every technology under the sun on their resume so only tell them what you really know. Be confident to have an opinion based on your experience but be willing to accept that you are still learning. When I interviewed junior devs, I would ask them question to which their is no clear answer just to see how confident they are
`Its`, not `It`.
I had some custom expression logic that I wanted to generate on the fly - a key word SQL search across configurable columns in this case. As far as I'm aware you can't invoke expressions using query syntax, but you can pass expressions in the Fluent approach. 
&gt; The performance characteristics are different, the different development and debugging experience is different, the issues you'll have are different, and the design you should use for your system is different. Thats just a long way of saying front end is different from server side which everyone knows already. Saying the code is different was just a goof on your part. &gt; The fact that MS is covering this with the phrase "designed with the appropriate abstractions" doesn't make it not so. Then go and argue with MS because they DO and have called it server side BLAZOR which is an admission the tech is similar &gt; I've been **crystal** clear about what I mean when I'm talking about Blazor and everyone else has been crystal clear what they mean. Maybe its YOU that has the reading comprehension of a dead gnat.
you seem pretty butthurt about it for some reason and invested alot of typing haha. you stick with your javacript bro, if it makes you sleep at night
&gt; retty sure its the same reason why every Resharper user is always looking for a replacement: Resharper is really slow. &gt; &gt; I'm using Resharper since 1.0 and its infuriating ho I was hooked on Resharper too, but my last gig had centrally managed VM with identical images for dev work and the powers that be didn't allow me to install Resharper even though I had my own license. I got over it and I've been clean for about 3 years now. Going cold turkey works sometimes :)
Mono does not support WPF.
So swap a default of true for a default of false and where does that get you? In server environments true or false is not going to destroy your service, it might just adjust its performance. In client applications it would utterly destroy them.
There will be lots of advice about technical questions, but you should also be prepared with examples of how you have dealt with issues in the past. "Tell me about a time where you had to overcome a problem that you didn't know how to deal with." "Tell me about a time where you disagreed with somebody about how to solve a problem, and how you resolved that difference." Those sort of questions are common and a good interviewer will focus on previous examples, rather than "what WOULD you do" future hypotheticals. Though, if you can't think of previous examples, falling back on the hypothetical is your next option.
Perhaps you've tried too hard to rename 'Where' to 'Has' to avoid clashing with LINQ? Consider: Query&lt;Book&gt;.Where(b =&gt; b.Available).IsFalse() Query&lt;Book&gt;.Where(b =&gt; b.UnitsSold).IsLessThan(500); That feels more readable to me, but it's likely confusing. You might get away with: Query&lt;Book&gt;.When(b =&gt; b.Available).IsFalse() Query&lt;Book&gt;.When(b =&gt; b.UnitsSold).IsLessThan(500);
Yeah there was no open source compiler to hook into for ReSharper when they made it, so it does its own separate analysis of the code. Specifically the solution wide analysis really hurts performance. Since Microsoft released Roslyn, it's a lot faster to hook into that, so if they eventually do that, I'd maybe consider ReSharper, but I've been getting by just fine either without it or with just Roslynator.
We'd still need to do the same thing, I'm just looking for some syntactic sugar, e.g.: threadwait \_context.Users.FindAsync(id); instead of: await \_context.Users.FindAsync(id).ConfigureAwait(false);
ASP.NET core in action is a great book. &amp;#x200B; I worked on MVC 5 for two years before now moving to core. Some of the things that annoyed me in MVC 5 are improved in core. The biggest problem I had was with the newest one was the Identity stuff. Most books I looked at were using previous version of identity and with Core 2.1 they changed it to use the razor views. This meant that a new project with individual accounts did not have Account controller as it was all abstracted and you need to scaffold it to see it. &amp;#x200B; However, overall I like core better. Still need to learn docker and try deploying to linux server.
It depends. &amp;#x200B; 2 years ago when I interviewed for few junior positions, the questions were quite easy. However, I was targeting non-tech and not start up companies. &amp;#x200B; I failed a simple SQL query because I didn't practice before. I just told them I mostly utilize linq/EF for data access. I received an offer. Another place asked me about palindromes. To be honest, I don't recall doing anything more advanced than programming 101. Although, I guy I went to school with interviewed at a small tech company for a junior position and they were asking difficult algorithm questions I would not be able to solve without google. &amp;#x200B; Therefore, your mileage will vary. If you fail miserably I would not worry but if you are targeting top salary/popular companies you will have to grind.
Not if you are manually building packages, no. But I'd expect any place nowadays to have a mature CI pipeline in place if they have those issues, which it WOULD help with. Like I said, there might be some trickery you can do with VMs (Docker for Windows running Linux containers will setup a Linux VM that hosts all the docker images: you could probably do something where you build your containers in there, but really, I'd definitely do this with configured CI pipeline).
It wouldn't be hard to add an extension method to do that. I will look into it.
Recently, I built a console application w/ Topshelf functionality. I use Log4Net a good bit as well and the integration was slick. Nice. Small. Concise. Easy to install and debug.
&gt; So far I have not installed it on VS2019, even though I pay for a license...see how long I can hold out. This is me too. I don't know that I'm going to last very long. Too many, "where'd this command go.. must've been ReSharper". Just the lackluster CamelHumps sub-word navigation extensions out there almost broke me alone, and it hasn't been a full week yet. ReSharper doesn't hurt my performance too bad initially.. but randomly after some number of hours usually something gets borked and then VS will very often pause for many seconds waiting to complete an editor action until I restart VS. It gets pretty frustrating, but still I think less frustrating than not having ReSharper, or trying to fill the gaps with other extensions.
I've been getting this in vs 2019 with the latest intellicode. Might be too much for my older work machine (i5-3470).
Does it run in the background without user interaction as a system process? That was my main idea
Well, you would pass one object into a pivot, that contains multiple sets of views with the customer object passed through to each of them. So it's more so by pivot.
https://github.com/Topshelf/Topshelf Yes, that is the point. Topshelf just hides some of the nuanced complexity and makes the project more developer friendly.
Honestly I can't answer this. I like the explicit declaration version, it's a percent of a percent of a percent of my code base, so I'm sort of ok with it, but I totally understand the search for SETI :))
Security in ASP.NET Core is a gray area. Identity has a deep configuration and there isn't a complete tutorial for it (at least I didn't found). I learned a lot from different sources each mentioning something that others do not. Manning books, Apress books, Pluralsight courses, etc. And things get worse when you enter the Token-Based authentication world. Not only there isn't a complete tutorial for it, developers don't agree on the same concept. Some say store the token in cookie, some say store in local storage, some say it's stateless and server shouldn't store anything, some say server needs to store the token, some say this flow, some say that flow! Again, I learned a lot about OAuth, JWT, IdentityServer4 and other things from different sources.
Just an anecdote, but I lead dev on a high traffic, high performance web service written in .Net. The main service is MVC5, so it has a synchronization context and presumably would benefit from ConfigureAwait where resuming on the context isn't needed. We had never bothered, but one time I thought I'd give it try. Should be an easy win, on paper. I went through and added it to a bunch of our hot path code. It didn't make a whit of difference. I wasn't sure how to construct a realistic benchmark with narrower scope, but in a real system where we can definitively see a 5% improvement, we couldn't see any hint of an improvement from adding a lot of ConfigureAwait(false)'s in the code where it should've mattered.
ASP.NET Core can run your app as a Windows Service. It's a bit heavyweight if you have no need for ASP.NET Core in your actual service, but in my case I wanted to use interprocess communication with another ASP.NET Core process so it made sense. I used websockets and implemented a REST API over HTTP. The basic change is to use .RunService() instead of .Run() in your main, IIRC.
I'm afraid this is over engineering. This accomplishes the same thing but requires none of your API and is in fact easier to read: book == otherBook; book.Author != "Oscar Wilde" book.Title.Contains("The") !book.Available // or bool.Available == false book.Pages &gt; 1000 As others have said for collections we already have LINQ: books.Contains(book) books.Any(b =&gt; b.Author != "Oscar Wilde") books.Any(b =&gt; b.Title.Contains("The")) books.Any(b =&gt; !b.Available) books.Any(b =&gt; b.Pages &gt; 1000)
Not sure how Framework does it, but in Core everything is a middleware. This includes static file handling and routing. So you can control where on the middleware stack those are handled.
I recently created an asp.net core console app that didn't need UI (yet) and it runs great as a service or as console for easy debugging. [I followed the MSDN example here](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/windows-service?view=aspnetcore-2.2). Imo asp.net core is light weight. I considered Topshelf, but ended up not going that route. My thought was if I ever needed a UI down the road, it'd be easy to add one with HTML.
Check out this post, I think it covers what you need (and is just a few days old) [.NET Core Workers as Windows Services](https://devblogs.microsoft.com/aspnet/net-core-workers-as-windows-services/) " In .NET Core 3.0 we are introducing a new type of application template called Worker Service. This template is intended to give you a starting point for writing long running services in .NET Core. In this walkthrough we will create a worker and run it as a Windows Service. ..."
[removed]
You probably didn't see a difference because the ```AspNetSynchronizationContext``` uses a thread pool just as if you weren't using any ```SynchronizationContext```. The only thing it does (I believe) is to make sure that ```HttpContext.Current``` is the same instance across continuations. So, not much performance gain. This is a different story though if your ```SynchronizationContext``` runs on a single thread (like GUIs). I'd expect you'd see a much bigger perf improvement in a WPF app.
[removed]
I've left Vs completely and haven't looked back. VS with resharper was slow but Rider is super fast with the same feature set. I guess there are limits to the VS plugin system.
Each to their own. Feel free to continue using LINQ 😉.
I’ll make the full switch once WPF is good with it
I've always been a big JetBrains fan; I've been a loyal customer since the early days of ReSharper, and I've used their IDEA-based IDEs quite a bit. But lately, ReSharper has gotten intolerably slow and buggy. I often need to work with tech when it's in the prelease stage--at the moment, that means preparing for C# 8.0 and .NET Core 3.0. It simply can't handle those technologies. It crashes, marks random things as syntax errors (even when no C# 8.0 language features are present in a file), gives up on syntax highlighting... the list goes on and on. They just can't keep up anymore. I filed a bug report, and it took months to receive a response. I gave Rider a try, but it supports a small subset of what Visual Studio offers. ReSharper is due for a rewrite, and I just don't see that happening anytime soon.
Does it work well enough that you dont miss a "real" PC? If only Windows Hello had been supported...
With how fast C# is changing, they really messed up by not backing Roslyn. I know it hurt CodeRush to make the jump, but now CR can continue moving forward while R# is stuck playing catch up with MS.
Isn't there an option you have to enable to allow targeting of preview builds? Did you enable that? (perhaps I'm wrong, can't check atm)
I’ve always assumed they just don’t want to support Roslyn. They have their own indexing and analysis engine that the seem to use across all their IDEs. Why would they want to support a Roslyn-based system for one product? They might be looking at things like roslynator and thinking it’s a losing battle in the long run to compete with open source extensions and MS adding more features to every version of VS.
Yes, in the options dialog, .NET Core section
Is there an option to pass the Razor View path instead of the URL?
You're right, that was it. I don't remember having done this for the preview version of VS 2019, thank you!
You didnt have to do this when VS2019 was in Preview, because both it and .NET Core were "preview" at the same time. When 2019 went RC, this was enabled.
For NuGet package signing I'd recommend looking at these resources: * [https://github.com/onovotny/NuGetKeyVaultSignTool](https://github.com/onovotny/NuGetKeyVaultSignTool) * [http://timheuer.com/blog/archive/2019/04/04/signing-nuget-package-using-azure-devops-pipelines.aspx](http://timheuer.com/blog/archive/2019/04/04/signing-nuget-package-using-azure-devops-pipelines.aspx) &amp;#x200B; \&gt; creating a package is so easy, why should creating a signed packe so complicated? .NET Core was missing APIs to support NuGet package signing. These were added recently to .NET Core, so now the NuGet team is working on cross-platform package signing. Do you really need to sign your NuGet packages though? All packages hosted on [nuget.org](https://nuget.org) are automatically repository signed. &amp;#x200B; \&gt; Let say I have libA and libB should I create two completely different repositories or could I create one repo with two different subprojects? It really depends on your preferences. Do whatever works best for you!
No, but there is a method to set the page content from a string. You may need to do some messing around to get other page resources to load though.
👍 np. iam is great and works how you expect... except for dealing with s3. no idea what amazon was thinking there.
Did you target non-tech because the interview processes are generally easier?
Yeah I figured that was it, thank you!
Freelancer.com might be a good option. As some general advise, it sounds like you might not be going down the best learning path here. What's your approach? What materials are you using?
Given it's overwhelming popularity, I'd imagine you're not the only one
do you think you are the only one?
That was a sarcastic comment I made in the original post ;)
No you're not. Now tell us about your youtube channel.
Why you already told us ;)
Kind of shitty that everyone is messing with you. Yes, you're the only one.
Is ok thanks normally is people behind a computer who don’t have nothing better to say that something negative...
What makes you think, you are they only one?
They were always going to be competing against open source Roslyn plugins. The only question is whether they are better off rewriting everything to fit into Roslyn or duplicating everything Roslyn does. Code Rush chose rewrite and they still haven't caught up to the preRoslyn version of their product.
Nhibernate cookbook was good, not sure if it's been updated recently though.
What's your first main tool?
Visual Studio for C# and cshtml. VSCode for Js, JSX, css, and SCSS, Notepad++ for random files and notes, XCode for iOS, Android Studio for Kotlin. I am the master of none.
What he is trying to say is, learn C# not VB :)
Yes, forget VB. And session variables. And image maps.
Whenever you ask a question starting with "Am I the only one", the answer is always: No. Grow up, you're not a special snowflake.
I am and I refuse to believe otherwise.
Im still using visual studio for any real development, because I only found it good for js development. And I still use sublime, because for opening any kind of files for fast edit without destroying my workspaces in vscode
Like, its obvious that you are not the only one given the popularity of vscode... and he kinda made a "joke"
Liiiiiike a *double negative*? :)
 Accepting payments through Stripe using ASP.NET Core is a perfect choice. Read through this post to get started fast and to learn about the pitfalls.
TopShelf doesn't support Core yet does it?
I don't miss the shitty dell and HP hardware. A macbook is the best windows machine I ever had :-) The only difference is the keyboard &amp; some missing (or alternate keys): * command button instead of windows button * function + up/down instead of page up/down * function + left/right instead of home/end * function + delete instead of backspace &amp;#x200B; Else all good
I wish i can go full vscode with C# / .NET I really dont care about UI management for dependecies. I am very comfortable with dotnet core command line because I hav background in nodejs/php tools and linux. composer , npm I just wish C# support , projects and stuff were on-par with visual studio. But I think thave to make C# support shity to sell visual studio licenses haha
Visual Studio IDE
[removed]
Code helper killed my mbp. So nope...
It’s replaced Notepad++ for me. Sad to say. I loved Notepad ++ , but VSCode is just better.
I would recommend you to check [asphostportal.com](https://asphostportal.com) hosting plan. They support .net core 2.2 and also SQL database. If you face 500 error with your previous provider, maybe you need to contact their support team first. As I know, A2 support .net core. If they are unalbe to fix your issue, then you can move to other services. One that I recommend is asphostportal.
[removed]
Added this in to version 1.4. Should be live on Nuget shortly. I called it `WhereSatisfies(query)` to indicate that it filters the collection. Should be able to use this on any IQueryable (which dbset implements, so will be fine)
[removed]
So the unsafeness here comes from creating a union-like type of non-blittable types (i.e. reference types), then accessing the non-current member. Yuck.
Amazing work mate!!
I was actually using a MBP for Windows for several years until Apple got crazy and removed function keys and ports and decided to jack up the prices. But I have yet to find a PC laptop that has the same build quality etc...
I use Notepad for everything. Simple, easy to use, very stable and already preinstalled.
I just use it as a powerfull notepad, I code with visual studio.
VSCode + PlatformIO for Arduino and other electronics development boards. So good.
VSCode is great and it has overtaken Notepad++ for me. As regards frontend development VSCode is awesome all round. Still though, you can't beat VS2017/VS2019 for the development work. It's a beast!
Sure you are! Master of adaptability!!
The short answer is yes, as VSCode primarily interacts with languages using the command line tools. Try running dotnet new (like `dotnet new mvc` or `dotnet new webapp`) and then dotnet run to see if you can use .net core 3.0 on your computer (make sure you're using latest .net core SDK by running `dotnet --version`. Then Open With VS Code and you should be prompted to install some C# tools if you don't already have them. This will give you access to options to run or release your code. P.S. OrchardCore is setup to run and launch using VS Code. See here: [https://github.com/OrchardCMS/OrchardCore/tree/dev/.vscode](https://github.com/OrchardCMS/OrchardCore/tree/dev/.vscode)
I switched to WordPad. Notepad's formatting is HORRIBLE. Like no bold? Wtf. What if I want to make you notice a certain command!! (Well, I found a place where you can make it bold, but it changes it for the whole file ... LOL...Yeah, I want to bold all 10,000 lines of Form1.cs, EINSTEIN. Gate$ is a pos!!
Back in my day we used vi. In the snow. Walking uphill . Both ways.
i even use it to edit files in unix, cant stand nano, vm
Gnome Bixes with Windows 10 vm for Visual studio / windows programs. VS Code for python/html/js/css/dotnet core etc. I user gnome text editor for quick changes.
Totally agree on VS2017/2019. Also tried replacing Notepad++ with VSCode but no success. It was missing column selects, encoding conversion, whitechar display/search&amp;replace etc. I believe if someone is doing js,PHP,node and used to use cmd plus simple text editor, VSCode is a step forward. But not for C#,.net and mssql. The same for SQL data studio. Can't beat SSMS.
What????? Other people use the most popular IDE that’s rife with extensions built by the most popular and influential developers???
Totally agree. Tried Azure Data Studio (VSCode's SQL counterpart) and again or just lacked those extra bells and whistles a professional developer needs. Notepad++'s Find&amp;Replace features are far from beautiful but are functional, consistent and reliable. VSCode's extension management is far better than Notepad++'s though and it's theme's are nicer.
/r/wholesome 😍
Aren't you a special snowflake.
I use it basically for viewing json/xml files. If a free product was needed sure - it would kinda fill my JS/Typescript/Angular needs, however currently I'm using Rider for mixed .NET/Angular projects (which is basically Webstorm for the front-end stuff) which is more advanced in pretty much every way and VS Code would be a downgrade.
When you write a .NET Core 2.2 application, then you need the .NET Core 2.2 runtime.
Runtime miss match. The app should be ran with core 2.2. Blending together is gonna lead to a bad time.
I was pointing out that he could run his app on netcore 3, where his app would be /u/Neophyte*-*'s app
s/Notepad++/Sublime Text/
Yeah, I did reach out to their support. Apparently, they installed the 2.2 core framework, but not the hosting bundle, which is required for IIS servers. When I asked to get it it installed, they said they would have to add it to a future update schedule but couldn't say when.
As others mentioned, it's a run-time mismatch. ASP.NET Core 2.1 was the last release to support the full .NET Framework. That's one of the reasons v2.1 is the current LTS release and will be supported for quite a while.
FYI VS Code now supports code completion for Razor/cshtml files.
I use VSCode for dealing with XML, text and log files and Visual Studio for C# projects.
Wait what?!?
.AsNoTracking() if you are only reading data
Atom for frontend developer. Visual Studio for C#
Has anyone used stripe before/ has any opinions on the product?
Yes. It is downright one of the best things to have happened on the modern internet. It’s easy, great support, and makes it so that literally anyone can get started taking payments, regardless of company sizes. Really enables smaller business to start up
It is tested against Framework 3.5SP1 and 4.
Thanks!
Is it U.S. only?
I believe country doesn’t matter but could be wrong
I agree with u/xueye. I used to used Pensopay a couple of years ago, which was a nightmare beacuse you had to do hashing and encryption yourself.
You have to have an account in one of their supported countries.. Though after that you can accept payments world wide.
I've read that in some cases that is a great idea, but with related entities it can cause problems like [this](https://stackoverflow.com/questions/9259480/entity-framework-mergeoption-notracking-bad-performance).
I just recently started working with cloud (Azure), I'm scared that I'll have to pay monthly for a MsSQL + Redis Cache (maybe) while starting with a AppService in the free tier. Reading your comment made me realize how expensive it can get. You must pay like 10 thousand dollars for all that, right?
I used Crystal Reports in thick-apps back in the mid 90s. Once I got into web I (happily) never touched the stuff as I was able to just output HTML and Excel for my report needs. Fast forward to my current gig and they're using Crystal Mess in some thick app they still use. Fortunately we've migrated what we can to SSRS.
True story: An insurance company I worked at lost $20k because a Crystal text box cut numbers off from the left side and no one, dev or qa, caught it. Fair warning
Poke around in your .csproj, that's where you take tell it what to copy and to target(this is a very basic explanation of build processes and options and not at all complete).
I really wish notepad had decent line wrap. That’s all I could really ask.
You are not the only one, for sure. To me, it happens exactly the same with Emacs.
I don't know if this is true anymore, but apparently Crystal allows for very exact placement of elements that SSRS does not (or did not). Our reporting specialist here tells me that you could have a Crystal Report target a specific printer. We've migrated many reports to SSRS, but some things that get mailed, where something has to show through an envelope window, have had to stay in Crystal
"Damn straight!" \[ESC]:wq[ENTER]
What’s wrong with nano? Vi/vim can be quite rough, but nano I’ve found to be fine.
"Damn straight!" \[ESC]:wq[ENTER]
dotnet publish allows you to specify options for it on the command line which influence the output. VS publish has a GUI for you to configure these settings. So for example I can set up VS to publish self-contained, but dotnet publish won't do that unless I use the -r flag and specify the target platform.
No. I targeted non-tech because of laid back environment. Also, I don't want to work for a start-up that will expect me to spend time with coworkers outside of work. I did interview at fortune 1k company that is pretty much tech and got an offer.
In addition to what the other comments are saying: If it is self hosted you could also build it as a self-contained application(I don't think you can do that if you run it in IIS). As a self-contained application it will contain the whole runtime so you don't need the specific runtime installed on the server.
I love Stripe. However, I'll be objective here and give you some points to be aware of: 1. By default, charges are captured right away. This means when you make a refund, you eat the 2.9% transaction fee. You have to implement a job yourself to to capture the charge within 7 days. 2. The amount of declines from the banks (aka 'do_not_honor' error codes). This is not a Stripe issue, this is because banks decline charges for unknown reasons. This isn't a problem with PayPal when customers store money in a digital wallet and are paying with PayPal funds. So when you use Stripe, you need to tell your user to contact their bank when this happens. 3. When you have problems with your web hooks, it could take a couple days before they send you an email notification. Pretty frustrating as I want to know right away.
Thanks to you all for your responses. If you don't mind let me express my goals first and I'll take any advice you may have. I'm an OLD guy who came up writing spaghetti code in Cobal and Fortrtan and various versions of Basic. Toward the end I was able to write some code using Visual Basic but I really don't know much about OOB, containers, classes and such. The reason I turned to Visual Studio was that I really want to be capable of building interactive web pages. I want to be able to have the user click on objects such as buttons to make things happen such as url navigation, hiding or revealing other objects on the page.etc.. I also have projects in mind where some sort of Image Map is needed. I don't think I'l have any problems learning something like Wordpress for static, pretty looking pages but for the interactive stuff I need to do some learning. So. Given that background I will gladly take any advice on appropriate tools or learning resources. MUCH thanks.
People seem to like Stripe around here. I tried Braintree and their support is also fantastic. Anyone tried both?
I'm aware they're both configurable in different ways - I guess a more succinct question is this: How do I configure VS to publish in a way that duplicates the behavior of `dotnet publish` used without additional flags?
Not quite sure how you're encountering this automatic build. I always manually build. in 2017 docker-ized core projects also. I've had issues with the selected "launch" configuration. Where I'll have a "Docker" launch setting that I don't want to use during a local dev session, and will need to select like IIS Express or something else than the Docker launch setting in the menu bar.
The container is only used to build a windows distribution and to deploy the app as Amazon AWS Lambda. The application never runs within the container.
VS for C# and web, VSCode for Python here. I like it though part of me thinks PyCharm may be better for Python.
VSCode is great. I use it at work where I can. But on my personal projects I use a really underpowered laptop and it’s too slow. So I use sublime there. TBH the older I get the less I want IDE like features. I just want a fast text editor with syntax highlighting and good search and replace. For everything else I’m on the command line.
Could try the full file path e.g. filePath = @"C:\Files\log.txt" next I'd output it to the screen to make sure textString has value or just make sure you can write hello world to log.txt first. Maybe try write all text. Maybe a permissions issue from IIS user trying to write there. May need to add write permission for the app pool user.
Deffo UK and most of EU as well
Why don't you want to install Visual Studio?
VS Code, JetBrains Rider and Sublime Text immediately spring to mind. If you're really adventurous there's Vim and Emacs. Notepad++ also works.
Last time I installed it it was huge and installed tons of different things, cluttering up my uninstall application dialog area... I don't have to work on actual programs, just some scripting so I don't need all that VS has to offer.
which of these have a forms editor?
None of them, if that's a showstopper then you'll probably need Visual Studio though JetBrains Rider might have a plugin.
FWIW, they made an effort to provide a reduced system drive footprint option in one of their recent releases: https://docs.microsoft.com/en-us/visualstudio/install/change-installation-locations?view=vs-2019
SharpDevelop was pretty good a few years back
There are plenty of online resources for learning, both free and paid. For C#, try [here](https://docs.microsoft.com/en-us/dotnet/csharp/getting-started/) For ASP.Net, start [here](https://dotnet.microsoft.com/apps/aspnet) If you want paid training, try something like [Pluralsight](https://app.pluralsight.com/library/) I'd recommend C# /[ASP.NET Core](https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.2). .NET Core is the latest version of the framework.
It definitely replaced emacs as my primary development tool on Linux. I only use emacs for the occasional lisp hacking.
I've tried many experiments in data-dictionary-defined forms/lists. It's essentially a table(s) that describe the columns and fields with enough details to dynamically render and process them. But, one encounters a lot of pitfalls. Different contexts will often need different variations, such as showing less fields, showing dummy fields, and/or showing them in a different order. Sometimes you don't want a one-to-one correspondence with a database column because you need to "fudge" it to get a more domain-friendly UI for the item or entity. You have to switch different things on and off for different spots and have an easy way to customize field order to screen or usage point. How to "locally fudge" the field info to get what you need for a given spot has proven really tricky with data-dictionaries. You want to automate the typical stuff, but **need a way to override and/or fudge for deviations** from typical flow without having to throw out the entire data-dictionary-based results to get it. Mass generate-and-rework via MVC views (scaffolding) or similar has proven easier than managing deviations from a theme (data dictionary). I haven't given up on the idea and will continue experimenting. But our frameworks and tools are not yet powerful enough to manage field variations-on-a-theme well. MVC scaffolding is an ugly DRY violation (repetition of info), but the known alternatives are worse so far. It's a ripe area for R&amp;D.
You list BlockingCollection at the top, but don't do a demo of it :) It's one of the more useful ones I'd say. I'd probably add something about enumeration too. if you have a type that needs to be enumerated you're immediately back to locking on all access, so might as well go back to the vanilla types. Dictionaries get enumerated quite frequently for example.
Rider is great, been using it at home for the last year (work is VS) and it's great!
Visual Studio is the default go to development environment, particularly for legacy coding like winforms or webforms. Bite the bullet, repartition your drive, or add space. With all the other paths you are likely to encounter issues or bugs that are going to be hard for a non-expert (that you self profess to be) to diagnose, debug, and fix.
&gt; You must pay like 10 thousand dollars for all that, right? $15k, plus or minus a few.
pity - I came across that Sharpdevelop site years ago (but forgot the name until someone posted it here) so I was thinking there were a few options. I guess for what I need I could just install it on my old laptop, since that isn't being used right now and has plenty of space. Didn't think of that.. so the free edition of VS will do what I need to do? I mean winforms. Strange that winforms is considered legacy coding, what is replacing it? or do you just mean because it is not fashionable to create things that don't run on the server anymore?
This "article" offers nothing over the documentation it links at the bottom.
Winforms has a host of issues. Deployments are a pain. Managing different versions is a pain. Upgrade paths for a number of users beyond like 5 is a pain. Web stacks avoid all of this. If you seriously advocated for winforms in any serious dev shop, you'll be laughed out of the room. Most of the use cases for having a desktop application - CAD software for instance - are better served by languages other than C# in my opinion.
Could be in a different path than what you think - windows services do that. I'd say set the current directory to the location of the entry assembly.
WPF is what I would go with as it's what Microsoft created to replace winforms and IMO is far better even for simple projects.
Could you please elaborate on point number one for one that is not very used to how money juggling works? :)
I went down a similar path. VB4&gt;VB5&gt;VB6 to [VB.NET](https://VB.NET). I remember dying trying to learn object oriented principles and how they applied to winforms. Loading a new form was so easy in VB6 I thought, why is this so hard. I agonized, searched the wrong things, read the wrong stuff, wrote even crappier code because I don't know what I was meant to be researching. &amp;#x200B; Since then I've transitioned to C#, build a bunch of web applications using MVC and consider myself to be a pretty advanced coder. I'm still dirty in spots and go back to my original ways of cutting corners occasionally, but I'm smart enough now to know the cost and downside. If I had my time again, I would have stepped back between VB6 and .NET, picked up C# from the get-go and done some proper study on object oriented programming. Thus, my recommendation for you is to take one giant step back and start leaning from scratch using C#, starting with introduction to programming for dotnetcore. Either pickup a course on a site like udemy or run through a book from start to finish. It's a big time commitment, but it will payoff. The idea you bring some experience and therefore expect to be dangerous quickly will cost you more time than it's worth. I've got a guy I tutored for a while who was in a similar boat - dangerous in webforms, could do some javascript. He'd get his thing doing 70% of the work, but I couldn't help him with the final 30% because the first 70% wasn't a quality basis for me to build off of - not taking the moral high ground just literally "wtf, how do I even continue this?". If it's not a time commitment you're willing to invest in, go a different route and take a look at something which lets you build a UI and add some code etc. You can do some really cool stuff with products like Airtable or Bubble.
But better than a mater of one.
Wordpad, no I don't mean notepad.
So at the moment there are two primary answers. WPF and Universal Windows Platform (or something like that). UWP *only* works with Windows 10 while WPF works with 7+. WPF and UWP are *way* faster, UI wise, than WinForms however it is a new paradigm to get used to. The free version of Visual Studio will do nearly everything you need unless you're writing something enterprise level (and if you were you'd have your team scoping this out and not you). I do all my coding on the free edition and have done a considerable amount of work professionally with the free edition (more like 99%). So unless you need something to work for XP, which is out-dated now, then WPF or UWP is your answer. You can also re-partition your drive / re-size them. There are plenty of free tools to handle that. As things stand now -- Visual Studio is the best IDE out there. &gt; or do you just mean because it is not fashionable to create things that don't run on the server anymore? Also this. Depending on your need -- you may save yourself a lot of grief if you can write a web based version, if you plan on making a mobile version. If, however, you don't plan on a mobile version then WPF/UWP are your answers. Winforms isn't the evil thing it's protrayed to be. Anyone who laughs at someone for using it is a tool and a fool. If it's what you know and what you need to do isn't complex then it's the best tool, for you, to accomplish your goal. If you can write an OS in C# then you can write pretty much anything. Don't let the others nay-say you. Me, personally, I tend to think of the end-goal, find the best tool for that goal, learn it, go for it. I don't know your full goal so I can't recommend anything specifically.
Smells like spam. Oh it's definitely spam!
I'm not clicking through that clusterfuck of spamming shite. I'm guessing it's [This offer on HumbleBundles](https://www.humblebundle.com/books/microsoft-and-dot-net-books?partner=game143) Checked history. Spam shite. Do look at the humble bundle site, don't click on the shite site.
Yeah, it's just a link to the humble bundle. Here's a link without a partner query paramter: [https://www.humblebundle.com/books/microsoft-and-dot-net-books](https://www.humblebundle.com/books/microsoft-and-dot-net-books)
Yep. It pisses me off for two reasons. One, it's shite, and two, I'm so highly attuned to this shite that I'm starting to doubt my false positives are false.
It's my third main tool. VS is my primary tool with dbforge on the second place. I always use vscode for frontend stuff and I use it as default viewer when I have to check separate file, not the whole solution, or when I have to edit things like comments, simple scripts or something that does not require you to dive into
Other languages wish they had an ide like visual studio...suck it up buttercup and install the best.
It is recommended to not hardcode your path and to use Path.DirectorySeparatorChar instead of slashes. We had backslash hardcoded in our product and this was a mess after migration to linux
I have written an app that uses Shibboleth as a front end. The variables will be added to the request headers. So you'll find the username there as well as any other variables you defined.
Picked this up from humblebundle directly. It's a decent bundle... a bit dated. but, then again, our tech stack is too.
Still stuck in vi. How do I escape?
Not every country in EU but most of them :) I think Poland is in beta right now
Why do you guys assume he has the choice of choosing technology stack? Maybe his internship or job requires some legacy application written in winforms to be edited. Sometimes this sub reminds me of stackoverflow.
Why is he getting downvoted for asking the question?
Don't do it! Don't do what I've done. I've made a huge mistake. Fly, fool! I know I sound silly, but I'm serious. Even for a tiny app I would strongly recommend using WPF/UWP and following some sort of MVVM pattern. Thomas Claudius Huber's guide to enterprise MVVM on pluralsight was a game changer for me. I have *extensive* experience developing WinForms apps with DevExpress controls (which are pretty awesome) and have recently switched to WPF for all new development. I'm using ElementHost to present my WPF views because my main project is huge and I cannot just refactor the whole thing today. It's a hassle, but it's so much better than working with WinForms that it's worth it.
Thanks for the reply and the edit. I had looked into this but as you noted, they are not populated. You bring up a good point about this being a limitation of what server variables are and how cross platform they are. As an exercise, I replaced the core net app with a simple aspx file that loops through "server variables" and I am able to find shibboleth specific variables such as shib-handler, shib-application-id, etc including the custom attributes returned from the idp. I might need to scrap net core and build the application on regular dot net instead. Thanks again
Check out sharpdevelop
I love me some Dataflow. It makes things so much easier.
JetBrains Rider has it in the latest 2019.1 EAP builds, you may want to wait a few weeks for an RTM though. https://youtrack.jetbrains.com/issue/RIDER-1034
Linqpad
Check for exceptions. Any number of things could cause this including: 1. Folder does not exist (File operations can't create folders). 2. User does not have permission to write to folder (the user in IIS is the apppool, by default "IIS Users\\DefaultAppPool" or something. They will likely not have permission to write files by default. I frequently experience this problem when setting up new sites because I forget. 3. Code is not being reached (try remote debugging and setting breakpoints, etc).
I tend to prefer Path.Combine which will insert the appropriate directory separators for you. Path.Combine("a", "b", "c');
Hey I'm, Kristoffer, the writer of the article. I think what he talks about is the capture field in the creation of a `Charge` as described [here](https://stripe.com/docs/api/charges/create) in the Docs. We did not touch on this field in the article since it is set to `true` by default. This means that the Stripe receives your payment information when creating the `Charge`, then reserves the money for withdrawal on the account, and at last actually transfer the money. If you disable capture by setting it to `false` in the creation of a `Charge` you will only do the reservation and will then have to to the capture yourself within a timespan of 7 days, which can be done with the `.Capture()` method on the `ChargeService` instance. This can be especially useful if you have a longer checkout process, where you want to keep the money reserved, but might change the amount throughout the process. For simple one-step payments having it at true should be fine.
Visual Studio installation is really configurable nowadays and the size has dropped significantly and you can pick what exactly you want to install
AFAIK Microsoft discourages the user of a "current" directory as that is a legacy thing for MS-DOS and old Windows apps, other than using it as a starting point for user input (for example if run from a command prompt with a relative path passed in). Current directory is chosen by whatever process launches your program so you can never be sure what it will be. It can even be a drive that no longer exists. Recommended practice is to use specific folders. For example get your executable path if you want files in that folder. Get the AppData path from known folders to store user data. Etc.
It's kind of implied it's his own thing in a form or another. Why would a company tell an intern here's your stack but choose your tools? That'd be silly. They'd give him an environment. They wouldn't throw him to Reddit's r/dotnet to figure it out. That'd just be silly. So we're making assumptions that are quite reasonable. Further, I explained why one would use Winforms (if you needed to support XP). There's no *reasonable* company that would have you support a legacy system and throw you under the buss for finding tools to make it happen. If there is, they aren't worth your time and are just wanting free work. Further, their legacy system would already have the code and such and the poster could infer quite a lot from it and would have spoken up about it.
Your post has been removed. Self promotion posts are not allowed.
Recent versions of VS are much better about letting you install only what you need.
You've probably figured this out yourself by now, but I guess the point of using Stripe Elements is the great amount of customization. So simple add the field yourself and grab and parse it on your backend. I guess they don't have any more field option than the ones described in the Docs. I also got to make an article about Stripe in general and some choices that has to be made when starting with Stripe if you would give it a read. [Accepting payments with Stripe and ASP.NET Core](https://blog.elmah.io/accepting-payments-with-stripe-and-aspnet-core/)
Thanks for a very quick and informational answer, I think I understand most aspects of it know. However, I feel a bit curious about what kind of checkout process would require such a process you describe (long). Although being an avid online-shopper I cannot remember any other type of checkout than a simple one-step. Could you come up with an example which describe the need for such a process, or anyone else for that matter?
Mono Develop.
Well, Strategy and abstract factory based solutions works well only if general logic is the same for all particular cases. If some clients may have custom paths not compatible with general logic then solution B may be the correct. If your systems work on a microservice enviroment, then you may use an "strategy pattern based on microservices" Using Wcf contracts you can use a general logic (ServiceContract interfaces) in your business rules, and left single client implementations separated logically and phisically(Each client will have his custom webservice).
switch to [Micro](https://micro-editor.github.io/) :P
Are you certain they are not in the request headers somewhere (maybe hidden away/oddly named)? I thought ServerVariables was just an abstraction on HTTP headers/environment variables? https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525396(v=vs.90)
What I want to hear is more than built in middlewares on .Net. Not mvc, auth, static files etc. Something that can be extended and can be used for most of the business logic. Let’s take IP Filter as an example. Think a IP Filter middleware that can take ip list as an argument, json, or a file from a remote server(s3 etc). Think about config, what if the server is behind the load balancer? It will override the client IP and put the original client IP to X-Forwarded-For-** header or sth like that. The goal is to cover all possible scenarious that can be handled by middleware to seperate business logic and business rules. Sample Logic =&gt; I want to watch a porn Sample Rule =&gt; Users who want to watch a porn should be in USA. All logic should start after request comes to the controller layer. The rules should pass/ignore requests on middleware layer.
EAPs are free to use though, so could be worth trying it before needing a licence.
None. If you don't need VS you probably don't want to buy rider. you only can go with editor + compiler combo
When you create a charge in Stripe, you have a flag called 'capture', it's on by default. If you pass false, the amount will be reserved on the customers credit card for you (Stripe will not take their cut yet). You then have to make a separate call to capture it within 7 days (that's the max amount of time the money can be reserved for you). In the meantime, if the customer changes their mind, you aren't going to eat Stripes 2.9% fee.
JetBrains offers revision code solutions. [https://www.jetbrains.com/upsource/?fromMenu](https://www.jetbrains.com/upsource/?fromMenu) .
https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers Set the rules that are important to your organization to "Error". Then you don't have to worry about manually checking for violations every time someone commits a feature.
&gt; cluttering up my uninstall application dialog area That's a really stupid reason. If it means that much for you, use notepad and csc.exe. VS is just a glorified text editor at the end of the day.
That's a sign of an experienced dev in my opinion - ability to use Dataflow for orchestration and appreciate them :)
The examples I've read are payments for services where you pay upfront, but get a day or so to cancel your payment if you were not satisfied, which would normally imply a cost on the service holders site, if the payment had already been captured. Other examples could be time limited gambling or other concept ideas.
Thanks, I've got a better understanding of this now.
If I run a test page running on dot net 4.X.X, I can call ServerVariables and am able to see the variables I am looking for. The problem is the app I'm working on is written in dot net core 2.2 and the functionality of ServerVariables is nowhere to be seen. From the other user who commented, I'm coming to the conclusion that I'll need to scrap using dot net core and write the app on regular dot net just to be able to query these variables.
&gt; I suspect Dataflow is going to be slower than the other solutions. That would surprise me. Dataflow was designed for high performance scenarios with tight integration into the TPL libraries we use for thread management.
Yea... if you are creating your own... * CLR Implementation * Programming language * AOP framework * Runtime code generator (pre-Roslyn)
Programs, no... but there are things that can be expressed in IL that can't be in C# or VB. For an example, see the `System.Runtime.CompilerServices.Unsafe` class implementation here: [https://github.com/dotnet/corefx/blob/64c6d9fe5409be14bdc3609d73ffb3fea1f35797/src/System.Runtime.CompilerServices.Unsafe/src/System.Runtime.CompilerServices.Unsafe.il](https://github.com/dotnet/corefx/blob/64c6d9fe5409be14bdc3609d73ffb3fea1f35797/src/System.Runtime.CompilerServices.Unsafe/src/System.Runtime.CompilerServices.Unsafe.il)
What are you main motivations for a 3.0? Why would you recommend Flurl over something like [RestEase](https://github.com/canton7/RestEase) or [RestSharp](http://restsharp.org/)?
Linqpad ... Your welcome
Use a real logging service like NLog combined with Papertrail. Papertrail lets you view your log in real time as it gets appended to on a website. Handy stuff.
Basically because he's convinced the VS is bloated and overly large due to a previous VS experience. Except that it's not. In fact, it's highly configurable now and is really the Go-To answer if you want to build C# WinForms apps. It's really silly to even try to use anything else.
My recommendation would be to get a cloud VM in AWS or Azure, and install Visual Studio there. Do whatever you need to do, then just delete that sucker. Your machine will remain virtually unchanged.
He is asking a specific question about a file not getting written. Are you suggesting he use logging so he can get more information about the issue?
Interesting - would you have a link with microsoft's guideline?
Was there no Exception thrown? As others have said, I would do something like filePath = Path.Combine(Directory.GetCurrentDirectory(), "files", "log.txt");
Whilst this is not the answer you are looking for, I have a project in my solution that runs the dotnet commands instead (as well as creating version numbers, copy to deployment locations etc). So when I want to package the application I just run that program from VS.
I have a couple things I've used raw IL for. DSLs, and compiling custom code for implementations ala regexps. But not much.
I've found the opposite: I miss VSCode's multicursor implementation in Notepad++, although I still use Notepad++ for quick editing on my work machine because VSCode is slow to launch there. What do you use column select for?
Mainly for CSVs to convert between locales, separators, text qualifiers, date format change or to make them SQL or C# data seed code. Sometimes value modification or decimal place reduction. It's often faster than building regexp for search&amp;replace. VS2019 also has the multi cursor edit Ctrl+Alt+. which is great for variable/type rename. Notepad++ is very fast when opening large files. Builtin converters for base64 code/decode. Some time ago I also used a plugin to edit remote files over SFTP, but since we built CI/CD based on Azure DevOps/Pipelines there is no need for that feature anymore.
Given that his output file is called log.txt and he seems to be writing to a log, I thought suggesting a better alternative might be in order.
Yeah, I don’t think a good logging tool is what he needs.
You're totally right. Appending to a text file in the same directory is totally a best practice for logging. Never mind me.
He is trying to find out why a .csv file was not written. Suggesting another tool doesn’t help solve the specific problem. You could ask the OP if he needs help with logging if you want.
I patched Httpcontext.Current using IL. https://solidsoft.works/2018/12/17/patching-httpcontext-current-the-nuclear-option/ ...and yeah, I know, the css sucks on mobile. I need to fix it.
I made my suggestion already. OP can parse my recommendation and decide if they want to pursue it in less time than it took for you to reply to this.
I'd rather write an entire project in IL than deal with CSS
It's something I read somewhere a while ago. I am fairly sure it was Microsoft but I suppose it could have been third-party advise as well. I Googled for a bit but can't seem to find anything like I recall. I still personally consider it a good practice though since you can't control the initial current directory. I use it for user input that might be relative to the current directory (usually just command line arguments) and nothing else. Though I guess there's no harm in SETTING it to a specific directory and then using relative paths knowing what you set it to.
Thanks - that may be what I end up doing.
 &gt;Mainly for CSVs to convert between locales, separators, text qualifiers, date format change or to make them SQL or C# data seed code. Isn't that the same as VSCode's Shift+Alt+Click? IIRC, VSCode won't select the column if it's beyond the line length and Notepad++ will, but does that matter for CSV data? Or are you talking about *logical* CSV columns?
I've used IL for dynamic code generation. There's also some instructions, like `cpblk`, that are not exposed through .Net languages - only IL.
"It's not too bad" \**Scrolls down a bit*\* "Holy sh*t, these snippets are huge!"
I agree it's not necessary but I'm not sure why you wouldn't want to use it. Makes everything a lot easier.
the 2019 stack overflow developer survey lists vscode as the most popular IDE overall.
Environment.getvariable
Sometimes to get performance optimizations that you couldn't get otherwise. Some librairies to avoid the cost of reflection. An example is [Jil](https://github.com/kevin-montrose/Jil), a Json librairy.
I find it annoying, at least it was the last time I saw it. I literally need to make one dialog. I'm thinking now maybe I can just create it programmatically instead of designing it
Yeah, maybe I should update it
Why are you all saying 70-483 is not an option? I took it on the 13th of march, and I still see that it's offered?
For simple projects there is no reason not to use WinForms if thats what you are familiar with. And the learning curve on WinForms is far far lower than WPF. Neither are going anywhere any time soon.
[`https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.cryptostream.flush?view=netframework-4.7.2`](https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.cryptostream.flush?view=netframework-4.7.2)
Thanks for that, I tried that without any luck. It does seem like a good place to be looking. I tried flushing before and after the write but again same result. I'll keep fighting! Thanks again for your comment.
Dammit I edited from most of Eu to just EU as well :(
Just to confirm: `simpleAES.Encrypt` and `byte[] Encrypt(byte[] buffer)` are the same method? Also, to be clear, you can successfully write non-0 byte files from encrypted strings? ie something like `File.WriteAllBytes(destination, Convert.FromBase64String({ther result of your string Encrypt method}));`
Yikes. You should not use Microsoft.Tpl.Dataflow as recommended in the article. The package is 5 years old and out of date. Dataflow got upgraded. You want to use System.Threading.Tasks.Dataflow.
Most streams, including `CryptoStream`, automatically flush when being disposed.
Thanks for the correction, I updated the article
Sorry, I misread the docs.... it's `FlushFinalBlock()` that does the final write, not `Flush()`, and it's called for you by `Dispose()`. You may have an issue with the underlying `MemoryStream` being in the wrong state, however. See the comment [here](https://referencesource.microsoft.com/#mscorlib/system/security/cryptography/cryptostream.cs,106) for an example of the correct order. It appears `MemoryStream` was updated after that to make `ToArray()` continue to work after the `MemoryStream` is closed, but it might be worth verifying that's the case by stepping through your code in a debugger.
I can see it as not recommended for console applications, but I don't feel itchy setting it in Windows services... I suppose you don't remember the reasoning?
Thanks for your input, maybe log.txt was a bad choice of filename since it's not a "log". I fixed it with the full path suggested earlier here.
Full file path seems to have fixed it... Thanks! :)
Right off the top of your head? Damn! Question about CLR Implementation. You would certainly parse IL, but why write it directly? Actually same question for compiler and programming language.
Tests. C# can't generate all of the IL that exists in the spec. That's actually a problem now with C# 8. It wants to use IL that exists according to the spec, but has never been properly tested.
As for compilers, it's easier to output IL and call ilasm.exe than to directly output binaries. Skipping the plain text IL only makes sense if you care more about performance than debugability.
Important!! &amp;#x200B; Almost anytime you use IL, there is an alternative - namely \`System.Runtime.CompilerServices.Unsafe\` - which provides access to a lot of stuff, such as \`sizeof\` on managed types, \`cpblk\`, \`unaligned.\` prefix, and a bunch of ways of manipulating managed pointers. However, I still use IL for writing certain stuff that might be possible in C# but generates ugly code, and for working with function pointers, as the current hacks around delegates are ugly as hell. Thankfully, with C# 8 it is almost certain we are getting true function pointers, which will prevent the need for me writing them. Then, with a combination of C# and the \`Unsafe\` package, there will be 3 opcodes we do not have access to (\`ckfinite\`, which is useless, \`ldvirtfn\`, which has uses and may come later, and \`ldtoken\`, which looks like it might also be exposed in C#8
&gt; but why write it directly? If you're e.g. implementing an IoC container or mocking framework you will end up doing that for performance.
Don't store the count as a string. Store it as a number and use the INCR operation to atomically increment the key by one. The code you have there is subject to race conditions, as two simultaneous calls could both increment and save the same number on top of each other. Also, I'm guessing you don't really want to store the view count for only 30 minutes - don't add an expiration time if that's not what you want.
&gt;redis doesn't really allow yo thank you, i will try that.
Object browser
If you're still curious, If you want to find out where it was going add a line to your log or file with Directory.GetCurrentDirrctory(); Your subfolder should exist within there.
I've been trying to wrap my head around identity, and your project helped me a lot. Can you recomment me some resources that you used to get to know Identity, yourself?
Why not just use LINQ ToDictionary: &amp;#x200B; `Dictionary&lt;Guid, Person&gt; dic = people.ToDictionary&lt;Person, Guid&gt;(x =&gt;` [`x.Id`](https://x.Id)`);`
After getting your MCSA:Web, it used to be an option to complete your MCSD. Now, it can only be used for the UWP MCSA.
Flurl 2.x feels "done" to me. Most open issues in the backlog are biggish features, some of which have breaking implications, so I feel like the next major push should be toward a 3.0. As for why I'd recommend Flurl, I'm a little biased since I wrote it, but it mostly comes down to style preference. With most other libraries you typically start by creating and configuring some sort of "client" object, then "execute" an HTTP request off of that. You can certainly follow that pattern with Flurl (`FlurlClient` follows this paradigm), but a more typical paradigm that's unique to Flurl is to build a URL and "call" it, in a single fluent chain, without giving much thought to a "client". I used **RestSharp** for years and have no major complaints. I switched to HttpClient mainly for its async/await support, which RestSharp didn't have at the time. Compared to Flurl I'd say it's a bit more verbose, and I've never been a big fan of methods like `AddParameter`, where the library decides whether that piece of data should go on the query string or in the body. (The developer knows, so why not be explicit about it?) Very minor points though; overall RestSharp is an excellent and mature library. I've never used **RestEase**, but it appears to be similar to Refit in that you define an interface representing the service you're calling, and much of the HTTP details (path, verb, headers) live in attributes that decorate that interface's methods. In Flurl those details tend to be part of the call itself and are therefore a little less "hidden". That's neither a good thing nor a bad thing per se; It's actually a very clever abstraction for building "prescriptive" service wrappers, but it might make Flurl a slightly better building block for designing your own abstractions to represent services. Again, it comes down to style preference, but if one were to compare these libraries on the basis of making an HTTP call with as little code as possible while still being highly readable, I think Flurl would fair quite well.
 Sure but that would only cover creating new dictionaries, how would you cover adding/updating to and from an existing dictionary or looking-up/getting a value by its key without having to specify the key again?
There is a specific reasoning for loading DLLs. In legacy Windows, Windows would first find a requested DLL by checking the application's directory, and then the current directory. All applications use system DLLs (the third location checked) so the current directory would end up getting checked a lot. If a malicious person wants to trick you into running their code on your PC, they might try to trick you into running an EXE they made, but this will be suspicious to many people (I would hope). However with DLLs loading from the current directory, all they have to do is somehow get a DLL file with the same name as a system DLL used by, say, Microsoft Word, in the same folder as a legitimate Microsoft Word Document, and trick you into opening the document. That folder can be, for example, your Downloads folder by tricking you into downloading a DLL to drop there (I know Chrome will detect this and block it), or a network share the attacker can control the contents of. That DLL loading order is only used for applications that expect it now. The modern way does not check the current directory for DLLs at all. Details here: [https://docs.microsoft.com/en-us/windows/desktop/dlls/dynamic-link-library-search-order](https://docs.microsoft.com/en-us/windows/desktop/dlls/dynamic-link-library-search-order)
Thanks a lot for taking the time to answer. This is detailed and makes a lot of sense.
Ooh, I'll certainly be watching this. I love me some Python, but there's times I just wanna work in my boy, C#. Once I get some hardware of my own that can do this kinda stuff in less than a bleein' month, I'll definitely be giving this a proper spin 'round the track.
Thanks for the suggestion, but that just returns the server's environment variables. The information returned by the idp is not stored in environment variables.
Oh get it. I use this to retrieve pcf variables and works, thought it should work for you as well, sad it didn’t.
This sort of breaks assumptions. If you take 2 Person objects with the same Id but different values for name and such fields, then do a Contains check, you’ll say true. But I would assume contains also means equals in that case.
That's not correct. \`Contains\` method of \`EasyDictionary\` actually compares the value.
On mobile so didn’t read the full code. So I stand corrected.
i learn everything from here: [https://www.youtube.com/watch?v=WQywatfis6s&amp;list=PLrW43fNmjaQUBZv0OiliNY4fStb4Vj1u4&amp;index=5&amp;t=0s](https://www.youtube.com/watch?v=WQywatfis6s&amp;list=PLrW43fNmjaQUBZv0OiliNY4fStb4Vj1u4&amp;index=5&amp;t=0s)
This is exception is being thrown because the user is clicking into the dropdown, making a valid selection, THEN clicking back into the drop down and selecting the blank or '-select one-' option which then sets the value to and empty string throwing the exception. The part that was weird from my perspective is this exception is thrown on the selected change of the drop down, but there is validation to check IsNullOrWhiteSpace() when the form is SAVED, not when the index is changes.
the default asp.net core mvc template in visual studio should be enough. Also, the msdn documentation/tutorials are good starting points to learn about those
Does VS Code support intellisense autocomplete when dot/space/parenthesis is entered? This works on VS and I'm really accustomed with that behavior. So, pressing tab on VS Code to autocomplete seems forced to me. I always end up writing the whole thing instead of using autocomplete with tab. Any way to replicate VS behavior in VS Code?
Short version, is to use this tutorial as the start. [https://docs.hangfire.io/en/latest/background-processing/tracking-progress.html](https://docs.hangfire.io/en/latest/background-processing/tracking-progress.html) You can create the job, use hangfire, use AWS SQS, use RabbitMQ to send it out of the web server process to start the job. Then store the job status in your database. Have the browser set to poll every second if the job is complete, if it is, download it (you may want to prompt the user as browsers do not like unprompted downloads). If it is not done, poll again in a second. SignalR would do that work for you if you set it up.
tbubeau - Thanks so much for your thoughtful reply. We did follow the same path but I'm hoping to have to follow you through such a tangled jungle. Call me lazy but at my age I' m more interested in results then core learning experiences. I'm so tempted to just learn these few skills in VS, build some static pages rather than start learning C+ now. We'll see. You mentioned Airtable but that looks like a way to make app tools rather then web pages right? Anyway thing I'm just going to plug away and give Wordpress a try for my basic needs and see how far I get with that. Thanks again.
Would you be able to explain more about what you mean per user? Is it that the document should only be available to the user who requests it? If it is the above, this is how I've handled it. Hangfire/Azure Webjobs SDK are great to handle this. For each request a job id is created that you share back to the User for them to check status on the document creation. In your database, you'll store a job id --&gt; user id to ensure the user requesting it is the correct user. Once it's complete and the user is one requesting it, return the file.
If you have Visual Studio, and setup an Entity Framework Context, you can auto-generate some basic CRUD MVC controllers to give you an idea about the pattern. Fast depends on you, so use Primary Keys in the database, indexes when appropriate for searching, and you should be fine. If you start doing 20+ database queries on the page, that is when anything starts to get slower.
A bit more quote for more context for anybody who doesn’t make it to the end of the article: &gt; I suspect Dataflow is going to be slower than the other solutions. But, suspicion only goes so far. I plan on writing one more special part to this series where I’ll benchmark all the Job Queue implementations and we will see the real performance results I look forward to the last part!
Interesting, thanks!
That will be interesting.
A sadly common mistake. They are trying to figure out a way to 'deprecate' the old package without breaking it for people who open a legacy application.
&gt; Call me lazy but at my age I' m more interested in results I assumed as much, that's why I warned against this path. Based on my experience you will get the results you want quicker by stepping back and investing some time building a foundation. &gt; I'm so tempted to just learn these few skills in VS The problem is, it's never "a few skills". For example, you mention session variables. You might get a solution in place where it seems to work and you've "solved" that problem. But you've created yourself another problem by coding something that relies on session variables and you don't understand well enough when and why to use session variables, what the alternatives are and what the downsides are. My idea on Airtable was more to consider alternatives for data input / manipulation which don't require you to build a webpage. Just trying to seed some creative thought around what you think you might need versus what you actually need. Wordpress or the many available options for "webapps without coding" might be your best bet
Hey there! You'll want to use "[10.0.2.2](https://10.0.2.2)" in your Android application, this address routes to your computer's localhost. Also, IIS Express does not allow external connections by default, which is fine with the emulator, but if you decide you want to test on a physical device you will need something like [iisexpress-proxy](https://github.com/icflorescu/iisexpress-proxy) to route your connections to the localhost.
You don't really need special hardware. Many samples would perfectly work on ordinary CPUs.
Winforms is fine but WPF really is no harder unless you want to use it's more advanced features. With WPF you can build a app just like in winforms using the designer and without writing a single line of xaml. But you get a much nicer modern looking and feeling app with hardware acceleration , it's a no brainer in my opinion.
&gt;Is it that the document should only be available to the user who requests it? Yes, exactly, thanks for the reply, really helped. &amp;#x200B; I was thinking about store in the db before and them creating a service which the client can retrieve a list of its processes and download the result or cancel the request. Just didn't know if it was the rigth way of doing this, I thougth that'd exist a library or something.
Yes, the key here I guess is "store the job in your database", like I answerd in the reply of u/Pejo37 I just didn't know if it was the rigth thing to do, or I would be over-engineering. I checked this exatly tutorial and really liked SignalR, seens realy easy to use. I also got [this article](https://code-maze.com/netcore-signalr-angular/) to help me, that fit like a glove.
How fun. I've thought about implementing basically this so many times, because the number of times I've wanted to key on something that each object holds is far higher than I ever thought it'd be! A fun optional feature you might want to add: An interface that objects can implement to automatically provide their own key selector. Would allow you to infer the predicate at object creation, leaving you only one place to update it (in the object itself!) should you need to change your key strategy!
Hi, You can use ngrok. It exposes you localhost api to the outside world. You can use it with Android emulator. Works pretty well
Microsoft is in it to make money. Take them with a grain of salt, and get a second opinion from somebody not in MS's pocket.
It does not. Everything you reference is deployed.
Two weeks late... sure it is. They want companies to use their ecosystem. Their documentation is some of the best in the business. They gain nothing from not helping the developer.
True, it just speeds things along.
Yes use ngrok its very good
This is only a problem for self-contained application. If your application is framework-dependent, then all the packages will already be there on the system. &amp;#x200B; You can try [https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md](https://github.com/dotnet/standard/blob/release/2.0.0/Microsoft.Packaging.Tools.Trimming/docs/trimming.md), never tried it myself though.
Just wanted to say thanks for creating this library. It's the best HTTP client library I've encountered so far.
&gt; ng for the exam with pluralsight for the basic asp.net framework functionality and implemented it in test projects. I did this full-time for like a month. Hey, I have read that they have updated questions and all those brain dumps are outdated, so exam is very hard right now. Maybe do you know something about that, maybe that's just some fake info?
The laziest fastest way I could think of would be to just dump a Telerik RadGrid on a page and set the data source. Of course that's not free and locks you into their stuff, but it is "quick" to set up...
How did u prepare for 486? Any exact material that you could share? I have read exam ref book, but seems like it is outdated since Core is around...
&gt;They gain nothing from not helping the developer. Their "opinion" is still tilted toward their own monetary goals. For example, a couple of years ago they were hyping the heck out of microservices. Our gullible architect fell for it and made a friggen mess. We don't need microservices and would need a major org structure change to start needing them (Conway's Law). Why did MS do that? Because they are trying to sell subscriptions to various services. If an org is designed around microservices, they can more easily tap into MS's subscription-based services. MS's hype was most likely driven by their subscription goal, NOT what's best for a typical org.
From the [documentation](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/metapackage?view=aspnetcore-2.2): Applications that use the `Microsoft.AspNetCore.All` metapackage automatically take advantage of the [.NET Core Runtime Store](https://docs.microsoft.com/en-us/dotnet/core/deploying/runtime-store). The Runtime Store contains all the runtime assets needed to run ASP.NET Core 2.x applications. When you use the `Microsoft.AspNetCore.All` metapackage, **no** assets from the referenced ASP.NET Core NuGet packages are deployed with the application — the .NET Core Runtime Store contains these assets. The assets in the Runtime Store are precompiled to improve application startup time.
Use `context.Database.BeginTransaction()` instead of `TransactionScope`.
On top of what /u/AngularBeginner said about starting DB transactions properly, there is also a built in extension for adding your DbContext to the DI with something like services.AddDbContext(). You don’t need a factory. I forget if that is the exact extension but it is in all the documentation/tutorials.
I mostly use rider lately, at least since I discovered the scratchpad :)
I don't use DI for DbContexts. I just create/dispose of them as needed in order to better control database connections. Eg: &amp;#x200B; using (var x = new MyDatabase()) { // the class controls its own connection string internally x.Widgets.Add(new Widget()); x.SaveChanges(); } // Disposed here
That violates the Dependency Inversion principle and unnecessarily tightly-couples your service with your database. It will make your service impossible to unit test. At minimum you'll have to perform an actual integration test against an actual database instance.
That wasn’t MS in particular hyping micro-services, that was the industry as a whole. It’s still your own job to decide what fits and what doesn’t, don’t blame MS for supporting an honestly great tech that is super useful. They don’t gain anything by promoting MVC over Razor pages. They own both techs and both are completely free. One however is scalable and follows industry standards, and one models the legacy webforms. They put it in just as a legacy bridge. They realistically don’t want you using it because it alone will likely be phased out at some point.
&gt;That wasn’t MS in particular hyping micro-services, that was the industry as a whole. Yes, largely driven by big companies trying to trick people into subscriptions. MS was one of multiple hype pushers. &gt; It’s still your own job to decide what fits and what doesn’t, don’t blame MS for MS did hype it. And, I cannot control stupid managers; I'm not King nor CEO. Either way, it's good to take MS's advice with a grain a salt even if one cannot immediately identify a likely motivation for spin.
Highly recommend this solution.
Learn something new every day.
I use a variation on this idea: https://mehdi.me/ambient-dbcontext-in-ef6/ There is a context scope factory registered as a singleton. That is injected. Behind the scope factory is an ambient context manager that handles nesting and joining existing context and flowing correctly through async contexts.
You're not wrong but documentation for EF historically has said to new up contexts for each call to the database.
Thank you for your comments! I've ben trying to make this work with extreme frustration. I just can't for the life of me get it to work or understand why... I've gone to the extreme with the method protected byte[] Transform(byte[] buffer, ICryptoTransform transform) { lock (thisLock_transformer) { MemoryStream stream = new MemoryStream(); using (CryptoStream cs = new CryptoStream(stream, transform, CryptoStreamMode.Write)) { cs.Write(buffer, 0, buffer.Length); cs.Flush(); } stream.Dispose(); stream.Flush(); return stream.ToArray(); } }
Sorry for the slow response. Yup, simpleAES.Encrypt = byte[] Encrypt(byte[] buffer) When I use a string I do it like so; public string Encrypt(string unencrypted) { if (encrypt_mode == "true") { return Convert.ToBase64String(Encrypt(encoder.GetBytes(unencrypted))); } else { return unencrypted; } } string encrypted = Encrypt("encrypted boogers"); File.WriteAllText(Input_Destination, encrypted);
&gt; If that's the case, is Microsoft providing sufficient features to move away from Bootstrap What does this have to do with Microsoft? Bootstrap isn't from MS, JQuery isn't from MS, and none of the other UI libraries or frameworks that might replace it are either.
Thanks for the kind words!
According to the source comment I linked, proper usage would be: ``` using (MemoryStream stream = new MemoryStream()) using (CryptoStream cs = new CryptoStream(stream, transform, CryptoStreamMode.Write)) { cs.Write(buffer, 0, buffer.Length); cs.FlushFinalBlock(); return stream.ToArray(); } ```
FYI. The biggest change in .Net over the last 10 years is options. There are so many options. [ado.net](https://social.technet.microsoft.coma/wiki/contents/articles/51324.asp-net-core-2-0-crud-operation-with-ado-net.aspx) might be the easiest way for you to access data if you don't want to learn an ORM. [Razor pages in .net core](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/razor-pages-start?view=aspnetcore-2.2&amp;tabs=visual-studio) is what I would use because it is like MVC only much easier. No routing and no controllers. All this being said, if you still remember how to do webforms and want to use webforms, you still can still make a new web Forms app with .net framework 4.7.2 if you want. Good luck.
Sadly this is probably true. In terms of making grids, it was actually easier 10 years ago than it is now.
Bootstrap does a ton of stuff, layout is a small part of it.
Alrighty, just had to be sure (lest we miss some obvious mistake or permission error that can't be diagnosed easily from snippets). Your Transform and encrypt methods are working for me using a simple `AesManaged` as the `ICryptoTransform`. `File.WriteAllBytes({destination}, simpleAES.Encrypt({a byte array})` is writing a file with non-zero size, and inspecting it reveals it does have data written, and it is recoverable with `Decrypt()` `File.WriteAllBytes(Input_Destination, enc.Encrypt(File.ReadAllBytes(Input_Source)));` appears to be writing without issue for me. Next question (just to eliminate another assumption): when you say 0 bytes, do you mean size: 0 bytes, or size on disk: 0 bytes?
Well supported by *current* browsers, perhaps. Many of the JavaScript library-related problems I've encountered happen *down the road* when a new browser version or brand comes along. For example, when Chrome first came on the popular scene, many JavaScript libraries didn't work right or didn't work the same under Chrome. Most tested their libraries and apps under EI, Safari, and Firefox. Eventually Chrome improved its implementation (or matched the bugs/oddities of other browsers in order to provide consistency), and the library vendors also tested and tuned better for Chrome. But it took a while for both of these entities to adjust. The server-centric parts of web apps have stood up better over time in comparison, in my experience. Server-centric approaches are often not as esthetic, but require less longer-term babysitting.
MS's web-oriented frameworks generally rely on Bootstrap for their *default* "responsive" ability.
Isn't this a moot point? If a new browser comes out that breaks on most websites, it will either 1) be fixed 2) not be used
&gt;https://twitter.com/scottgu/status/1113715562272546816 aggregate DTO from multiple microservices. any patterns around that?
Been using Flurl for quite a while now in both at work and personal projects, it's quite a pleasant HTTP library to work with. I honestly love the simplicity of it as well as consuming REST APIs easier. Finished the survey, will be checking out what's new for 3.0 in future projects.
Ha. So true.
Modals, navigation, drop downs, carousel, alerts, glyphs, buttons, and forms. It basically provides a custom themed everything that looks the same across browsers.
I see. so you can't do the html one, the C# one to get MCSA, then use the mvc web dev one to get MCSD?
*YOOOOOOOOOO!!!!* It's your **4th Cakeday** Siggi_pop! ^(hug)
That's correct. To run .net core 2.2, they must install hosting bundle too. If they install it, your .net core should be working.
Just use DI but make it transient to ensure a new context each request
I'm familiar with webforms, webapi, mvc, and mvc core. None of them rely on bootstrap. I don't think the new razorpages does either.
Bootstrap 5 will not have any JQuery dependencies. How do I know? https://sdtimes.com/webdev/bootstrap-5-expected-to-completely-replace-jquery/
&gt; how can i save them to database just before their expiration dates? Just put them in a database to begin with. Why are you introducing all this complication and data consistency &amp; reliability issues when you have no need?
Why not local iis + attach debugger ?
Any ideas why I get this exception : Javax.Net.Ssl.SSLHandshakeException: Handshake failed while using IP 10.0.2.2?Thanks
any ideas why I get this exception: Javax.Net.Ssl.SSLHandshakeException: Handshake failed while using to IP [10.0.2.2](https://10.0.2.2)? Thanks.
It will still rely on JavaScript for much of what it does.
Just copy and paste, common messages contracts packages are not the best idea - tight coupling between different services (single repo to which each team now has to push messages code), possible issues with versioning and so on. Just use Swagger and generators :).
JavaScript or its effects is usually what breaks in new releases in my experience, not plane-jane HTML. Plus, if you let the server do most of the computations instead of JavaScript, then you'll have less client problems. True, bugs happen on new server compiler/interpreters, but usually it's caught earlier because it's "broken" across the board regardless of browser. Plus, there may be roughly 5 to 20 new browser version releases for every one server language release, because you are dealing with 5 to 20 client browser brands instead of 1 server brand (depending on target audience). I'd rather test upgrades once every two years than once every 2 months. The math favors server-side.
If you want to have "responsiveness" (device format adjustments), I believe you **do**. If you don't use Bootstrap, you'll have to hand code a lot of the class tags or rework a lot of scaffolding and templates to get responsiveness.
Only read the TL;DR but: 1. Official Microsoft API documentation and Stack Overflow. Mostly the latter to start out with, then the former once you have a general idea of how to go about solving your problem. 2. You're probably talking about VB.NET, not Visual Basic. You can use the .NET framework in VB.NET, PowerShell, C#, and F#, and a number of other languages too. The .NET framework contains all the classes and functionality you need to do most things, VB.NET, PowerShell, etc. are just different languages. It's kind of like asking for a sandwich, you can ask someone to make you a sandwich in any language, it's just how you ask it that differs but the end result is largely the same. 3. A DLL is just the output of a compiled program that can be referenced in other programs. If you create a project of the type "class library" in Visual Studio and create some classes in VB.NET or C#, then compile (build) the project, the output is a DLL. You can then reference that DLL in other .NET projects and use the classes you created in the project that you turned into that DLL, in your other projects that reference the DLL. It's just a package of stuff that you can reuse in other programs, basically. I'm not familiar with Python but from a brief Google search, it seems like ctypes refer to C or C++ types, and so .NET types may not work nicely when you use them as ctypes in Python. Also as for why you couldn't find the Microsoft.Office.Tools.Excel Namespace docs directly from the site, in the .NET API browser you linked, click .NET Framework 4.7.2, then at the top, above the search box, click .NET Framework 4.7.2 again and click Visual Studio Tools for Office 2017. I found that because on the Microsoft.Office.Tools.Excel Namespace docs page, the same "Visual Studio Tools for Office 2017" is written above the search box there on the top left. I'll admit it's difficult to find.
Navigation and forms? Please elaborate. (Personally, I find that the esthetics of default Bootstrap suck, but that's another matter.)
No. EF says to keep the db context short lived. A new context for each call is just silly and wasteful. In a web scenario it's common and good practice to have one context for the duration of the request.
There's a sample here https://github.com/dodyg/practical-aspnetcore/tree/master/projects/hello-world-startup-all-package-trimming
i hold view counts in my sql server but when a page gets visited i have to get the view count then increment it and send back to database so i thought thats a bad idea
[Heck yeah!](https://i.kym-cdn.com/entries/icons/facebook/000/014/033/knowing.jpg)
I don’t know why there’s any need to get all role ids, do intersections etc when the intersection of user’s roles with all roles is just user’s roles. So all you should need to do is select roles that the user has. Difficult to say how to do this when there’s no information of the objects and properties.
User has roleId UserRoles table has userid and roleid Role has roleid and the its name. These are the default aspnet user/roles tables that are generated if you choose to create authentication automatically. But the IdentityRoles seem to have some kind of protection that don't allow me to use them for display directly for some reason. I shall update the thread with this information
Personally I wouldn’t touch MySQL. MariaDB is a bit different, but still. PostgreSQL is a great choice on the other hand. It is very strict about what you do and you won’t run into trouble later on with your code. It complains about every single thing you do wrong instead of letting you do things and silently doing whatever it wants in the background. Sure, MySQL/MariaDB is popular, but that doesn’t mean much. If you want a stable database that’s developed with the idea of making the best, most stable, and standards compliant system there’s no choice other than PostgreSQL. The most common example: do you want the database to say “yep, ‘123ajfnr’ is equal to number 123” or “I can’t compare a string to a number, you need to do an explicit cast”? I always want the latter, but many don’t seem to care. Not to mention “oh I’ll return a random value for this field since you didn’t put it in a group statement or aggregate” vs “you must either group by it or use an aggregate.” (Yes the latest versions finally by default stop that, but only the latest) You can run .NET Core and PostgreSQL on Windows or Linux, so the OS choice is more about what else you need and how much you want to pay. I haven’t used SQL Server on Linux so can’t say how well it runs there, or how much resources it requires.
I like Digital Ocean, their pricing is quite good. AWS and Azure both have reasonable options as well. My go-to is .NET Core + PostgreSQL running in Docker (potentially orchestrated by Kubernetes) on a Linux host. Until recently I would run it on a self-managed Amazon AWS EC2 instance (Ubuntu), but more recently I've started using Digital Ocean, especially since they launched managed PostgreSQL databases and Kubernetes clusters.
Thank you, ive heard lots of good things about PostgreSQL. I will give it some good consideration
Bootstrap's inclusion of JS components will forever mean that there needs to be binding libraries to each JS lib like react/ng/vue etc. These days there are other, slimmer css frameworks that don't include that junk and are thus much easier to use without those binding libs, which means fewer bugs, less code etc. Bulma is one such lib. Though, as you say, CSS Grid will make these things further unnecessary. Start without one next time you start a project, and see how far you get.
I found this article very informative. I had been using a Unit Of Work design pattern but his solution of supporting a sync contexts is very cool. Thank you for sharing.
Strict mode handles most, if not all of your concerns for mysql, and has been available for 10+ years. It just wasn't enabled by default until 5.7.
Actually, no. Last time I checked even the latest version allows comparisons between datatypes. Tested it right now and it still allows it. And there’s a lot more issues with it than the two I mentioned like everyone knows (or should know, if they’re using it). When there’s an option of using a mature, well-behaved and standards-first database it should be the first choice in my eyes. But everyone can make their own choices. I always advocate the one that gives clear errors when being used wrong compared to the one that has the history of just ignoring problems due to focus on speed over stability.
Is this Entity Framework? How is the `Roles` property on the user not the collection of roles that the user has? (Also, no matter what other great, accurate, and helpful advice you get from this Reddit thread… Please stop calling `ToList` at every opportunity. Having an `IEnumerable&lt;T&gt;` or an `IQueryable&lt;T&gt;` is enough to do all the things you want to do for this problem. Forcing a list every time is a performance killer – you’ll drag in an entire table, then do filtering on the client side.)
Solved thanks to you :\] Thank you!.
You're right, it does still allow comparisons in strict mode, but I've been using MySQL for \~12 years now and never once ran into an issue with that. Especially when using an ORM, there's no logical reason you'd be comparing an integer type to a string type. I've heard good things about Postgres, but I can honestly say, I've been using strict mode since I started developing with MySQL and have never run into any of your problems, but if you want to avoid MySQL because of it, that's up to you.
 Using MySQL with EF core on Linux for a production site and it’s working fine. If you’re in the amazon stack RDS is nice for MySQL scaling. MySQL can be a bit more picky than MSSQL about case-sensitivity in table or column names, depending on the install configuration, so I would use the [Table(“tablename”)] attributes in your EF model classes, but otherwise it’s fine. The MySQL .net providers have vastly improved in the past year.
What is sqlTokensetData
1. Does str have a value ? have you debugged that ? 2. You don't need to or want to insert a number into ID when the table has identity on that column.
Solved it! thank you! I'm sorry, it's my first time using Entity Framework.
&gt; In a web scenario it's common and good practice It may be common but I wouldn't say it's good practice. It's easy and it works as long as you stay within simple constraints. Use your code outside of a web app, compose logic, or require multiple contexts within a logical operation and it's a foot gun waiting to take off your toes.
Use a stored procedure so you don't have to round-trip to value to your app. Batch new view counts for a minute in your app before updating the db. I mean, how many views are you even getting?
https://getbootstrap.com/docs/4.0/components/navbar/ https://getbootstrap.com/docs/4.0/components/forms/
It is EF, indeed. And yes, the Roles property on the user is the collection of roles he has. But I cannot access directly to their names. I still have to do the linking with the table that has them. I tried using the first 3 approachs from the answer of this [post](https://stackoverflow.com/questions/30867806/how-can-i-display-the-role-name-for-a-user-in-asp-net) but I couldn;t make it work. If you know a better approach to attain it, please let me know if you can. I do feel that this is far from the optimal way to achieve my goal. &amp;#x200B; Regarding the second paragraph, didn't know it could kill performance that badly. Noted, and thanks!
Oh, through the links you provided I could also find that the documentation also recommends the following: &gt; You can use the package trimming process to remove packages that you don't use. Trimmed packages are excluded in published application output. And this is what u/kevinbqc said on his comment. About RuntimeStore I didn't know as well, I'm going to do some tests to see if there is some gain on the precompiled assets. Thank you!
Hey, go you, you rock!
The "forms" examples appear to be mostly format-related, which I had asked to be excluded. The navigation feature does implement a menu dropdown, which I suppose is arguably beyond formatting, so I'll give you that one. (Why the HTML standard lacks common GUI idioms like drop-down menus, combo-boxes, m/d/y-ordered date pickers, multi-select that doesn't require Ctrl key, tabbed panels, etc. is a crying shame. Fire somebody.)
Thank you for your helpful reply. I realized later (thanks to a reply in r/PowerShell as well) that I wasn't thinking of PowerShell as a language, for some reason I was just fascinated at how snippets I was finding looked so similar, but slightly different. For some reason I hadn't made the connection that they look similar because that's the whole point of .NET and the slight differences just boiled down to language syntax. Thank you for help with the API browser navigation as well, that sure helps. I will admit I'm now confused at what exactly is meant by "Visual Studio Tools for Office API", to me that sounds like it only applies to Visual Studio, but obviously this isn't the case. Is this something you can help explain? Thanks again for your reply.
If you set up foreign keys correctly, you should be able to basically do something like userObject.Roles.ToList() and it will get the Role objects for that user.
Looks like SaveChanges is failing, and attempting to display an error page is also failure.
You were probably getting a duplicate id error that failed to display.
You don't have to hand code anything. You could use [Skeleton](http://getskeleton.com/) or literally dozens of other such frameworks or libraries.
Yes, but that's not "automatically" part of Microsoft's Dot-Net kit. There's not a template or style option to automatically put Skeleton's class attributes in the HTML. There are frameworks that don't need HTML class attributes, but they are usually too *blunt* an instrument, being that sometimes one doesn't want a given transformation applied to a given element. A way is need to describe which HTML elements are "processed" by a given framework and which are not. For example, suppose if you activate Skeleton, it does something to all LI tags. That's fine if you are happy to have the same thing done to all LI tags, but what if you want to exclude some from the default transformation? You'd have hand code the HTML elements to ignore such using a "skip-skeleton" class or marking regions of HTML with some kind of "skip" markers. It's still hand-diddling the HTML.
I didn't realize there was any built-in integration with bootstrap. How can I get an `&lt;input&gt;` with all the bootstrap classes on it other than by "hand-coding" it? That's what I've always done.
The default MVC5 scaffolding all has Bootstrap tags and conventions in the version I use. (I don't like some of the defaults, but they are there.)
I know the some of the new project templates use bootstrap, but it's maybe 100 lines of boilerplate hello-world layout. I assumed most people throw it away and start over on serious production projects. To the extent that there's a bootstrap dependency, it could be totally solved by a new project template using some other thing, although personally I don't use any template UI for anything but learning or throwaway projects.
any idea when core 3.0 will be a stable release ?
The docs don't make it explicit, but I assume the purpose of that part of the example code is simply to demonstrate what happens if you remove the lock. There is no point in having a check like that in code that uses `Random` correctly, in fact it would be incorrect since `0.0` **is** a valid return value for `Random.NextDouble()` and a thread seeing two zeroes in a row is perhaps very unlikely but still possible.
It's fine to use DI for it on a controller since it only has a lifetime for the request.
Hey guys, I am interested to learn the backend of web development particularly in .net environment using c# language. Is there anyway you could point me to where I should start and what software/tools I should be installing in my system? I have researched a few and found out that visual studio and sql server have cost but are there free version which I can use which will not put me in trouble(licensing issues etc.)? If you could give a link it will be very helpful. Thanks in advance!
&gt; in fact it would be incorrect since `0.0` is a valid return value for `Random.NextDouble()` &gt; it obviously *should* be possible in a good RNG &gt; but the comment "We should never get the same random number twice" in the `ThreadStaticAttribute` docs is definitely wrong both in theory and in practice Just wanted to highlight all three of these points, which are all spot on and ones I had not thought of initially. So there are even more problems with this documentation and *potentially* even the implementation itself, as tweq sagely points out here. Thank you tweq!
Just because there is a lock around something does not mean it is thread safe. To know that it is thread safe you have to know that all accesses to the Random are in locks, and that those locks are all locking on the same object.
You're [kind of late](https://old.reddit.com/r/programming/comments/bb83gd/stackoverflow_developer_survey_results_2019/) with your post on r/programming
Fair point, but as I noted in my post, the example code in question has no other uses of the Random instance in question either inside or outside of locked sections.
Right, VS + R# for back-end for me, VSCode for front-end (TS/CSHTML/SASS).
I believe RDL files are for remote reports and are not fully compatible when the ReportViewer is set to generate reports locally. RDLC files are for reports generated locally. If you try recreating the report as RDLC file, does it work?
ML.NET is a new fast-follower of the established C and Python libraries. It has similar features but works natively with .NET. I would prefer it of you care about type safety and ease of interop with existing .NET code.
gotreportviewer.com says that it should work, and it actually does. I'm just not sure what that set of properties is not being pulled in. Everything else works fine/is parsed correctly.
PowerShell uses its own syntax. Think of it as its own programming language. You cannot use Visual Basic code directly. You would need to rewrite it in PowerShell syntax. You can pull in the COM libraries for Office into a .NET Framework project. It's a huge pain though since intellisense doesn't work right for them and they work by automating the Office UI in the background which is slow. But the work the s0ame way as in your code snippet. Someone has already written a wrapper which should be easier to use but I've never tried it and I forget the name. If your data is tabular you can pull it into Access, since access can import Excel files directly, then you can connect to Access via .NET using a database library (I use ODBC with Microsoft's Access Database Engine). This approach does not require Office installed on the server running he code, just the Database Engine. Contrary to what StackOverflow will tell you this even works with .NET Core. I have not tried this with Excel data though, just Access. \*.???x files from Office (eg not the 2003 format, newer ones) are renamed ZIP files containing XML documents and other data files needed to make up the document. So you can use ZipFolder to extract one to a temporary location and XmlDocument to read/write them. No need for Office installed here. I think I did this at one point but I can't recall for what. PowerShell has full access to the .NET Framework so anything you can do in VB.NET or C#.NET you can do in PowerShell. It's just a matter of figuring out the syntax, which is different. I am not sure about using COM though. At the very least you could write a wrapper in C#/VB.NET and use it from PowerShell that way. The [Microsoft.Office.Tools.Excel Namespace](https://docs.microsoft.com/en-us/dotnet/api/microsoft.office.tools.excel?view=vsto-2017) and related namespaces are part of the toolkit to make add-ons for Office that run inside of the Office applications, as far as I know. I don't think they are what you're looking for, which is to write an external app that uses office documents. However it's certainly a valid way to work with office documents by running in an office add-on. it depends what you're doing. Not sure what you're talking about with DLL files, but as stated Office interop/automation uses COM so simple function calls into DLLs are out; the interface is more complex. Though there is probably a COM library for python for all I know (I don't use python) that would help you if you really want to go that route. C#/CB.NET tries to handle DLL files for you, specifically you add "References" to your project which are basically references to DLLs, and the compiler figures it all out for you. PowerShell would require you to provide a reference to a .NET DLL to load in to run code from it. I forget the syntax for that.
I am not too familiar with Bootstrap but I was asked to debug a site that used it. Basically the column layout is just a subset of flexbox anyway. So you might as well just use the full flexbox which supports things like sizing items to their natural size which Bootstrap did not seem to support (to be fair the guy who made the site was using it wrong and should not have used Bootstrap where he did).
Pytorch
He was already doing that as \`stream.ToArray()\` was outside the using block.
You can't use an object after .Dispose()ing it. Plus he was talking about the cs object not the stream. But cs is already being disposed since it is in a using block. So that's fine. (You should also put stream in a using block as it is disposable.)
Best thing to do is hook up the debugger, step through the code, and see where the variable values stop making sense. Then you have most likely zeroed in on the line of code that is causing the problem.
Is ML.NET even comparable with TensorFlow? It seems more like scikit-learn - a collection of "classic" machine learning algorithms (like logistic regression, tree based algorithms,...). It doesn't even support the training of (deep) neural networks, only the execution of pre-trained models. And there's no GPU support... while TensorFlow is a deep learning framework with GPU support. Anyway, I'd just pick PyTorch.
Putting \`ToArray()\` outside the \`using\` block means the \`CryptoStream\` is closed, which closes the \`MemoryStream\`. \`MemoryStream\` was modified to allow \`ToArray()\` to work after the stream is closed, but it's not really proper usage. Not that \`ToArray()\` is the best way to go about getting the bytes either, but the sample I posted is the most correct way to do it with \`ToArray()\`
Oh, CryptoStream disposes the underlying Stream? I hate that behavior. So confusing.
I saw just earlier today that ML.NET supports tensor flow models. That component is still in preview when it goes 1.0. [Reference ](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0-rc-machine-learning-for-net/)
 RemindMe! 12 hour
I will be messaging you on [**2019-04-12 16:43:36 UTC**](http://www.wolframalpha.com/input/?i=2019-04-12 16:43:36 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/dotnet/comments/bbzff3/building_microservices_on_net_core_part_5_marten/ekou5yk/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/dotnet/comments/bbzff3/building_microservices_on_net_core_part_5_marten/ekou5yk/]%0A%0ARemindMe! 12 hour) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
RemindMe! 12 hour
Well you could just use their [API](https://developer.mailchimp.com/documentation/mailchimp/reference/overview/) and send an http request
I built a MailChimp helper class that interacts with their API using HTTP requests for the company I work at. Its a really simple API to use, would definitely look into that.
Entity Framework is not Entity Framework Core. EF Core was a complete rewrite and behaves very differently in many key ways, performance being one of them.
Sure EF Core is rewritting and very good optimized, but I am handling those articles the hidden problems (not coming from EF/EF core) for example if you have defined a property string and the real value of this property is double and then you are search for this a query e.g ("1.5" &gt; InputParameter.ToString()). Everything will work fine, but the implicit conversion is very expensive. the artcile about Parameter sniffing.
You can also check [The Morning Brew](http://blog.cwa.me.uk/)
If you create a GitHub repository for your code it would be easier for people to help you as they could commit their changes. Plus you'll also learn about GitHub (if you don't use it already). Also, you could set a trigger from something like a free Azure web site that would auto deploy when you updated your code. Happy to help, but I don't fancy downloading the files separately.
Classic ASP is not .NET.
should be " Getting started " instead of " Getting stsrted "
You probably need to switch to a webpack dev middleware: https://github.com/frankwallis/WebpackAspnetMiddleware Alternatively, you might try to figure out how react-scripts signals a successful startup and give your scripts the same behavior.
No
TL;DR: It always does the tree shaking, doesn't matter if you are using trimming or not. This trimming tool is recommended by the old [AspNetCore.All documentation](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/metapackage?view=aspnetcore-2.2) (now is the .App) and I realized that this Trimming tool is on preview yet. But even with that, I tested. I created a standard mvc application using `dotnet new mvc -n deployment-tests` and installed `Microsoft.Packaging.Tools.Trimming`. Even with or without this Nuget package the packages folder on development builds have **287** folders, that means ALL net core libraries. After installing this library, I added to my .csproj this element `&lt;TrimUnusedDependencies&gt;true&lt;/TrimUnusedDependencies&gt;` and I published the application. On the packages folder inside the published folder, I could see that there were only the used packages. 8 folders, 224KB size on disk. Also, on the console was printed the following information: ```bash 1&gt;------ Build started: Project: deployment-tests, Configuration: Release Any CPU ------ 1&gt;Trimmed 69 out of 168 files for a saving of 8.87 MB 1&gt;Final app size is 13.15 MB 1&gt;deployment-tests -&gt; C:\_DEV\tests\deployment-tests\bin\Release\netcoreapp2.1\deployment-tests.dll 1&gt;deployment-tests -&gt; C:\_DEV\tests\deployment-tests\bin\Release\netcoreapp2.1\deployment-tests.Views.dll 2&gt;------ Publish started: Project: deployment-tests, Configuration: Release Any CPU ------ Connecting to C:\_DEV\tests\deployment-tests\bin\Release\netcoreapp2.1\publish\... Trimmed 69 out of 168 files for a saving of 8.87 MB Final app size is 13.15 MB deployment-tests -&gt; C:\_DEV\tests\deployment-tests\bin\Release\netcoreapp2.1\deployment-tests.dll deployment-tests -&gt; C:\_DEV\tests\deployment-tests\bin\Release\netcoreapp2.1\deployment-tests.Views.dll Trimmed 0 out of 1 files for a saving of 0 MB Final app size is 0.01 MB deployment-tests -&gt; C:\_DEV\tests\deployment-tests\obj\Release\netcoreapp2.1\PubTmp\Out\ Web App was published successfully file:///C:/_DEV/tests/deployment-tests/bin/Release/netcoreapp2.1/publish/ ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ========== ========== Publish: 1 succeeded, 0 failed, 0 skipped ========== ``` Note that trimmed library prints some things about the saved space. Ok, then I removed the Trimmed library and also the element on csproj, and did the same. The result? 8 folders, 224KB size on disk. The same thing but without those prints on console. So my conclusion is that Microsoft didn't launch the trimming tool because is already a built-in feature of AspNetCore publish pipeline. I just didn't find the documentation for that yet. Thank you all that helped on this investigation, it was fun :)
It's still fucking trash
Didn't have much luck with that. I couldn't get past the error: \`\`\` One or more errors occurred. (Webpack dev middleware failed because of an error while loading 'aspnet-webpack'. Error was: Error: Cannot find module 'aspnet-webpack' \`\`\` Even though I installed aspnet-webpack... guess it's back to trying to find reading material on how to setup React with ASP.Net. No clue why this is so difficult to do.
Are you sure you are using a self-contained app? ie using `&lt;RuntimeIdentifiers&gt;win10-x64&lt;/RuntimeIdentifiers&gt;` in your csproj and building using `dotnet publish -c release -r win10-x64`? &amp;#x200B; In my publish folders, without Trimming, for a blank API projects I get DLLs such as SignalR which is not used. Total, there were 388 dlls, my publish folder is 96.3MB. &amp;#x200B; With Trimming enabled, the SignalR DLLs are gone, and I end up with 203 DLLs in my publish folder, my publish folder is 66MB.
MS should feel pretty proud of VS2019.
Did you try removing *only* the line with `UseReactDevelopmentServer`? The "UseSpa" only adds some high level shortcuts to integrate Asp.Net Core with a React app and make it convenient during development. Personally I think it's too brittle so I don't use it. I prefer to run webpack and NPM commands in a separate window anyway. This has been the story with all sorts of integrations between .NET/VS ever since they started to make Nuget packages of Javascript libraries. It's optional but simply having and advertising the functionality makes people think it's required and soon they have created some kind of Frankenstein project where the frontend is completely tied to Visual Studio and the .NET code. My advice is to skip all that and just keep the frontend and backend isolated.
&gt;executing a statement "select \* from registered where username = @username" Your parameter name on the select statement in your pastebin code doesn't match what you posted here. scmdselect.Parameters.Add("@Username", SqlDbType.VarChar, 50).Value = Username; scmd.CommandText = "SELECT * FROM registered where username = @a"; Your parameter name "@Username" does not match the parameter placeholder "@a" in your command text.
Awesome .. I love the clean startup and code cleanup, installed but haven't tried intellicode yet but have seen alot about it since the launch.
Yeah I did and a bunch of other things but didn't get too far. I switched to using the standard create-react-app with vscode and kept ASP.Net Core as a standalone project (might add it back later once react has been built). I heard that the only real downside (according to out dated docs) is that you miss out on server-side rendering but isn't react-snapshot essentially the same thing? I can't tell the different between that and SSR: react-snapshot: "A zero-configuration pre-renderer for React apps." https://facebook.github.io/create-react-app/docs/pre-rendering-into-static-html-files
These are all fine, obvious features. They need to focus on performance of the GUI imho - its a little better than 2017 but still frequently hangs, right clicks inexplicably take 10 seconds to register sometimes and it’s still possible to get ahead of the code editor by typing too fast.
Something like `SELECT 1 as tmp` would most likely work widely
Yeah, actually everyone liked code generation for WSDL service ;)
I don't think that works on Oracle.
You don't have to if you are comfortable with HttpClient usage.
NSwag is a code generation tool for API service compatible with Swagger (nowadays it's called OpenAPI) specification. Is that what you are asking about?
True. It doesn't have.
Good luck finding a database that completely follows the ANSI standard. Your best bet is to isolate the calls to your database away from your business logic so that if you do need to rewrite a few queries, you can do it in only one place without modifying the rest of your code. Your business logic should only communicate with your database layer through data structures and objects, you should not leak out any implementation details of the data access layer to your business logic. Aside from that, with Entity Framework Core, I have been able to easily switch from SQLite, MySQL, and MsSQL but just changing my connection string and re-adding my migrations.
It's `run-p` that's the issue - you need a space. Go to the command line and try to run it without running your backend - npm itself is producing the issue.
Reflection isn't really IL, but yeah that is kind of a neat trick. We have used this in production for 6+ years now: https://stackoverflow.com/questions/12700196/is-there-a-better-way-to-cause-form-submit-when-dopostback-is-called
Out of curiosity, does master exist in all implementations? Could you do something like SELECT TOP 1 FROM master.sys.databases on all of the SQL databases?
"Reflection isn't really IL" Yeah, I know. Did you actually read the post and do you know what the Harmony library does?
This is a common approach to microservices and considered best practice. Multiple applications should not access the same database, you should abstract the access into an API and always call through that. Now that's a perfect world and following the pattern to a T. I don't even take that approach all of the time, when dealing with legacy systems is usually the issue and I make an anti corruption layer API Which keeps new development following best practices. Been down the road of sharing the entities, context, and repo between apps and I will say never again. Use code first migrations? You always have to deploy both applications when there is a migration and I don't want that headache. Sure I could interface my context and have 1 app control the migrations but I'm really adding unnecessary complexity at this point. the industry has a best practice and if I want others to easily be able to understand it I will follow that unless there is a valid reason not to. Sharing too many projects like that with dependencies becomes messy, if someone updates a dependency in 1 layer then all projects may require it. Other microservices may not even require all properties of an object so carrying around useless properties just to save writing a class that's specific to the task is not a good long term plan in my experience If business domain logic exists in the correct layer you most likely won't have that validation in your repo since it would exist higher in the stack where your business logic exists. Which means you could create a data issue by sharing projects with only database level validation. If someone didn't make the schema match the business logic you could end up in trouble or of a field had to nullable only to receive a value and require it later then that validation wouldn't really be there. You should research on the benefits of microservices and using an aggregate root if you want to peruse microservices. If you don't do this you will still be able to break things up code wise but will have headaches managing data and devops down the road. I feel like the microservices patterns needs more info on breaking the data up, it's not really using philosophies that deal with modern technology for data duplication to address application resilience.
Yes and yes and I think it is a neat trick.
You have a virus on your computer. This is not normal.
I would think most APIs would use a user that doesn't have permission to the master database but I'm no expert on this which why I asked the question.
Still don't have a Linux version. Sad...
VS is _heavily_ tied to the Windows system. I don't think we'll see a native-to-Linux VS proper in _many_ years, if ever.
Does your machine have a "Next generation endpoint protection, antivirus"? Like cylance, carbon black, crowd strike? If so there might be some exclusions that need to be added. It can make VS come to a crawl.
I know that. VS Code is a very good tool but lacks the power of a IDE.
Remindme 20hours
In addition to all of the other comments - and sorry I’m late to the party - but you’re joining in 3 other tables and returning all of the data from them on each query via the include. Projections and additional queries could be helpful if you don’t need all that data - but you could be transferring way more records than you expect. Trace/profile the sql to find out what is exactly being generated and go from there but I’d expect that you have an unexpectedly large multiplicity on one of your includes or an incredibly wide table that is being included that is causing a ton more rows to be returned - even if it is hanging off of one user. getall is going to be a bad pattern anyway - it should have some constraint on it be it paging or filtering...
We can dream, can't we?
Oh come on, show some real numbers. People need to know how much of a trainwerk ImmutableList is under normal circumstances.
But... Normal? I do not know what is normal for you nor you do now what is normal for me.
If you have access to a single database on the database server in question you should have, at the very least, read access to Master as that is where the definitions for all other databases live... I think...
Hmm. I thought List was just a wrapper for an array that will automatically handle resizing for you. LinkedList is supposed to be the data structure that "each element has link to next one and last one has this link equal to Null"
Goddamn all these new features but still no way to fetch new remote branches or get ff commits without the command line? Come on!!
&gt; I thought List was just a wrapper for an array that will automatically handle resizing for you. Correct. But ImmutableList is a completely different beast.
They may just have a slow processor or some heavy background tasks... Random mentions of prformance impacts are not always the result of a virus.
The important thing to remember is that immutable collections are *not* read-only collections. They can be "modified" and the internal structure makes those modifications time efficient while still maintaining immutability where needed. I wish the standard documentation was a lot clearer about what the immutable collections do because they are extremely useful but also extremely unintuitive. That said, this article is a fantastic deep-dive on what the Immutable collections are and how they are different from the standard mutable collections and the read only collections. https://msdn.microsoft.com/en-us/magazine/mt795189.aspx
Related comparison between **ImmutableArray&lt;T&gt;** and **ImmutableList&lt;T&gt;** [https://devblogs.microsoft.com/dotnet/please-welcome-immutablearrayt/](https://devblogs.microsoft.com/dotnet/please-welcome-immutablearrayt/)
Meaning the most common use cases of a list so iteration, appending stuff and removing stuff. Anyways any number is interesting as long as the scenario is clear.
Never knew this - thanks!
Ugh, at least let me run it in Wine. Glorious day when that happens ..
The best you have is VSCode.
Rider ide better
Another upvote for Rider. It's smash VS2019 almost at every level.
Uninstall Resharper. VS2017 is lightning fast when clean.
Why is it a tree?
They are properly named. The instance you get will never be modified from the outside point of view. When you modified it, you actually get a new object. So any other class that referenced the previous "version" will still see it as unchanged. In that aspect it is immutable. The fact that data is shared between instances is an implementation details to improve performance (prevent doing unnecessary copies).
Will take a look at these, though I don’t think that’s the issue.
I think in our case the issue is probably too large a solution + the Specflow extension.
...apart from multi-monitor support and lack of migration path from VS/R#. It's almost as if JetBrains don't want to entice pro devs away from Microsoft.
&gt; I wish the standard documentation was a lot clearer about what the immutable collections do because they are extremely useful but also extremely unintuitive. Have you submitted feedback saying that?
So the whole article is about saying that using a different data structure can significantly affect performance, while at the same time saying the following? &gt; Iterating performance [of a linked list] should be comparable with iterating over an array. Well, try replacing `vector&lt;T&gt;` with `list&lt;T&gt;` (or `List&lt;T&gt;` with `LinkedList&lt;T&gt;`) and see if the performance is actually comparable.
If you're doing this as a private person or small company (&lt;5 devs and 1M yearly income - you need to check the exact numbers) you can use VS Community (also commercially). SQL Express has no limitations except technical. You can also use the full SQL Server developer edition for free, but not in production.
I was half-joking, of course, but regular ten-second freezes?
Exactly my thought. Regardless of the thoughts on the ImmutableList, the author describes the List implementation incorrectly.
Thank you for this very helpful. \&gt; SQL Express has no limitations except technical. I dont quite understand this. Do you have anymore info?
It has severe technical limitations like max RAM, DB size, used cores etc. But inside those limits you are free to use it as you with, including commercially. For a lot of line of business applications it's more than enough.
Now I understand. However, would the user be notified if ever he is to go over those limitations?
They said sometimes, not regularly.
Only if you aren't considering cache locality. An array will have its elements in a contiguous block of memory (and so should be in the processor cache); a linked list's nodes could be scattered all over the heap, leading to cache misses.
Also, if you want to develop for other Microsoft products like SharePoint or BizTalk Server, you will need the Developer Edition of SQL Server, or better. SharePoint and BizTalk Server install/use scheduled jobs to perform maintenance tasks. Scheduled jobs in SQL Server require the SQL Server Agent service which is not included in Express.
I mean the only hard one is the DB size. The rest will just cause sub optimal performance. Honestly I don't know what happens. You can test it out. Create a DB an fill it with like 100MB blobs in a loop. I would expect it to just start throwing errors. Again in a typical LOB application - if you just store data (no uploaded files etc.) - 10GB is more than enough. If your business needs more - it's only fair to pay for the full product.
nice
&gt; You can test it out. Honestly, I am actually scared to do that because I dont know what will happen. I have no plans of using those software for business for now. I only plan to use it to learn .net environment. Thank you for your help.
You are right, my understanding of the List was incorrect. Appreciate your comment.
What does it mean by "non-production environment"? That is the only limitation of Developer Edition of SQL Server correct?
What exactly are you scared of? Licensing trouble? It's not a booby trap from MS. It will just fail. 2. No one really cares what you do at your home (even if it was not according to license).
It means anything but a live production environment. Basically, that's the only limitation. Developer Edition is functionally equivalent to the Datacenter Edition (or whatever Microsoft calls it these days).
&gt; nice I wouldn't say so. Usually when async method implementation expects to be cancelled, it should provide an overload with cancellation timeout or token. There is no such thing as universally applicable async Task cancelation. Internal implementation needs to be able to safely abort its work. External cancelation is asking yourself for trouble.
You don't have to test them out in production either. Stand up a database in a test or an internal environment and fill it up with dummy data and see what happens.
I'm scared that If i get over those limits, I might get into trouble like microsoft might charge me some cost.
Did you just comment 'nice' on your own submission? Of your own article? Did someone forget to change accounts?
I can confirm that SQL Express does throw an error when hitting DB size limit; from what I remember the error gives the impression the disk is full
It appears as though this code "cancels" the task in that it returns execution to the caller but the actual task is still waiting. The correct way to do this, as you suggested, is to pass a `CancellationToken` all the way down to the code doing the work and monitor it for cancellation.
That is nice to know. Atleast users are limited and no way of getting over their specified limitations. Thanks you for this.
You can use .net core on linux (for dev and production) with vs code, postgresql as your database and it won't cost you a dime !
&gt; no way to fetch new remote branches You can do this in vs2019. Also in vs2017. Also in vs2015. ..?
I've been adding paging and filtering to all of my services this week. Thanks for the reply!
TOP doesn't work on MySQL and Oracle.
Please tell me, I figured I'm missing something. Hitting refresh in the branch view has never pulled down new ones.
Yep, he is creating a new task that will wait x milliseconds then return. He is then waiting on the first task to complete of the original and the time and if the timer completes first, throw a exception. The original task will keep happily on running. It's not the right way to handle task cancelation at all.
What is it supposed to cost at normal almost always discounted price?
For immutable list he talks about updating elements and that is better when you have to update elements. I'm confused. Am I not understanding what immutable means?
Its named poorly
I've priced it $20, but Udemy is usually selling it about $10.
He does it on all his submissions apparently.
Thanks man! Appreciate you kindness! 😊
Right click your local branch and select fetch/pull. It should update all your remotes
I'm on it. Thank you.
You don't need to be afraid, you simply cannot exceed this limitations. They're taken care of by the SQL server itself.
Thank you! Look forward to your feedback.
/u/MiserableScheme you should follow the above comment if you are afraid you won't be able to keep track of the license terms.
I agree.
This has never worked for me ... I'll test tonight and see.
When you "update" you actually get a new tree that may happen to reuse parts of the original tree. When you "update" an immutable array you make a completely new copy every time.
&gt; If you need to update the data, use ImmutableList&lt;T&gt;. I disagree. The high cost of that structure usually makes it cheaper to use an immutable array despite the full copies it makes.
Thank you!
I wonder if I’m alone on this - I don’t like buying books about technology that is still actively evolving. The next release of the framework could make the book a paper weight. I’d rather just learn from the documentation and trial and error.
Thanks, do you want a review on Udemy or through reddit
I will put it on the next on my list. Maybe in 2-3 days i answer this comment again 😁 thanks again bro!
If you are happy with the course, I would really appreciate if you rate it or leave a comment on Udemy. If you think it requires improvement, I would be happy to hear - please send me a direct message or post here. Thank you!
&gt; Iterating performance [of a linked list] should be comparable with iterating over an array. I mean, it's like CS 101 that this is likely not the case in any specific situation and certainly isn't the general case. About the only way you beat iterating over an array is unrolling the loop, unless your language/framework adds enough cruft in front of iterating an array so that it's no longer distinguishable from iterating any other O(n) collection.
Yeah but I feel the concepts these books can teach is worth the $15. Plus they support charity so I’m always down for that.
Thank you guys for the suggestion. But unfortunately, I am not familiar with linux so I guess I have to stick with windows for the time being.
One thing I did in old AspNet WebApi was define a type for the pagination parameters and add it as a parameter to the methods in question. Then if you need to add the FromQuery or From body or whatever model binding annotations you need. That just helps ensure that the parameter names all stay consistent.
Hmmm... to be honest I don’t know, what do you mean by self contained application? That’s interesting.
There are two ways you can publish your .NET App. You can 1. Publish a framework-dependent application. With this, the app expects a .NET Framework installed locally on the machine. That means someone has to install the .NET Core runtime on the machine, and usually a specific version (ie: you need .NET Core 2.2 to use 2.2 features). The app has a smaller footprint because you only need to publish your application code and not things like System.String, System.Collections.Generic.List, etc. It can also run on any platform as the .NET Core runtime you install is for your specific platform. 2. Publish a self-contained application. With this, you include the .NET Framework as part of your app. You don't need to manually install the .NET Core runtime locally as it's included with your app (which is gonna have a larger footprint). The app needs to include platform-specific code to be runnable since no .NET Core runtime is present, so the published app is specific to one platform (but you can publish for more than one platforms, but each published app will only run on that platform it was built for). You can read up on it here: [https://www.hanselman.com/blog/SelfcontainedNETCoreApplications.aspx](https://www.hanselman.com/blog/SelfcontainedNETCoreApplications.aspx)
Why not try to improve an existing library that you use? You'll get the same practice, with the benefit of access to the expertise/experience of other contributors. &amp;#x200B; If you do start your own library, it should be something you're personally passionate about, not someone else's idea. And it should be something for which there is a clear need/gap. Anything that doesn't meet those two criteria is doomed to fail.
You could have a look here for some thing: [https://up-for-grabs.net/#/](https://up-for-grabs.net/#/)
(composition is usually the answer when inheritance looks like it doesn't quite work)
Actually part of PDFSharp is netcore compatible [https://github.com/empira/PDFsharp/issues/6#issuecomment-452905992](https://github.com/empira/PDFsharp/issues/6#issuecomment-452905992)
This is affiliate spam. Here's a clean link: https://www.humblebundle.com/books/microsoft-and-dot-net-books
The post was downvoted by a person. If downvoted, can there be a comment on why?
Thanks
If your plan is to use the keys in the client, you can’t secure them. Many of the Azure APIs allow tokens (with quite a bit of authorization control). Your API can generate tokens and distribute to clients to offer some degree of security, but even then, tokens could be misused by bad actors.
You should look a PKCE flow for native apps.
https://github.com/Recognos/Metrics.NET I think they are looking for help.
You can put your pagination/options class as its own parameter on the route. The caller does not need to dereference the class or parameter name in the actual query string, but collisions are an issue.
I agree, it makes it easier to read. I want to see in the controller on the route method that offer paging.
Sometimes, a problem can be simplified if you make it bigger. What are your other interests besides programming? For example, if you enjoy astronomy, why not write a class library for orbital mechanics, make that the NuGet project, and write a reference implementation that tracks satellites? The sky's the limit!
[https://www.nuget.org/packages/iTextSharp.LGPLv2.Core](https://www.nuget.org/packages/iTextSharp.LGPLv2.Core) \+ [https://github.com/topics/wkhtmltopdf?l=c%23](https://github.com/topics/wkhtmltopdf?l=c%23)
&gt;Roslynator Windows 10 has clipboard history using Win+V [https://www.howtogeek.com/351978/using-windows-10s-new-clipboard-history-and-cloud-sync/](https://www.howtogeek.com/351978/using-windows-10s-new-clipboard-history-and-cloud-sync/) You can also sync it across devices if you really want that.
Thanks, I accruals found iText7 which is supposed to be the dotnet core version of iTextSharp and I’m trying to work with that rn.